[{"original_method":"public long getCount() {\n        return count;\n    }","id":48000,"modified_method":"/**\n     * @return The total number of queries that have matched with the document being percolated.\n     */\n    public long getCount() {\n        return count;\n    }","commit_id":"f38296da61ed21544ad45609c52d950adf913dca","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public Match[] getMatches() {\n        return this.matches;\n    }","id":48001,"modified_method":"/**\n     * @return The queries that match with the document being percolated. This can return <code>null<\/code> if th.\n     */\n    public Match[] getMatches() {\n        return this.matches;\n    }","commit_id":"f38296da61ed21544ad45609c52d950adf913dca","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public InternalAggregations getAggregations() {\n        return aggregations;\n    }","id":48002,"modified_method":"/**\n     * @return Any aggregations that has been executed on the query metadata. This can return <code>null<\/code>.\n     */\n    public InternalAggregations getAggregations() {\n        return aggregations;\n    }","commit_id":"f38296da61ed21544ad45609c52d950adf913dca","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public PercolateResponse(int totalShards, int successfulShards, int failedShards, List<ShardOperationFailedException> shardFailures, long tookInMillis) {\n        super(totalShards, successfulShards, failedShards, shardFailures);\n        this.tookInMillis = tookInMillis;\n        this.matches = EMPTY;\n    }","id":48003,"modified_method":"public PercolateResponse(int totalShards, int successfulShards, int failedShards, List<ShardOperationFailedException> shardFailures, long tookInMillis, Match[] matches) {\n        super(totalShards, successfulShards, failedShards, shardFailures);\n        this.tookInMillis = tookInMillis;\n        this.matches = matches;\n    }","commit_id":"f38296da61ed21544ad45609c52d950adf913dca","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject();\n\n        builder.field(Fields.TOOK, tookInMillis);\n        RestActions.buildBroadcastShardsHeader(builder, this);\n\n        builder.field(Fields.TOTAL, count);\n        if (matches.length != 0) {\n            builder.startArray(Fields.MATCHES);\n            boolean justIds = \"ids\".equals(params.param(\"percolate_format\"));\n            if (justIds) {\n                for (PercolateResponse.Match match : matches) {\n                    builder.value(match.getId());\n                }\n            } else {\n                for (PercolateResponse.Match match : matches) {\n                    builder.startObject();\n                    builder.field(Fields._INDEX, match.getIndex());\n                    builder.field(Fields._ID, match.getId());\n                    float score = match.getScore();\n                    if (score != PercolatorService.NO_SCORE) {\n                        builder.field(Fields._SCORE, match.getScore());\n                    }\n                    if (match.getHighlightFields() != null) {\n                        builder.startObject(Fields.HIGHLIGHT);\n                        for (HighlightField field : match.getHighlightFields().values()) {\n                            builder.field(field.name());\n                            if (field.fragments() == null) {\n                                builder.nullValue();\n                            } else {\n                                builder.startArray();\n                                for (Text fragment : field.fragments()) {\n                                    builder.value(fragment);\n                                }\n                                builder.endArray();\n                            }\n                        }\n                        builder.endObject();\n                    }\n                    builder.endObject();\n                }\n            }\n            builder.endArray();\n        }\n        if (facets != null) {\n            facets.toXContent(builder, params);\n        }\n\n        if (aggregations != null) {\n            aggregations.toXContent(builder, params);\n        }\n\n        builder.endObject();\n        return builder;\n    }","id":48004,"modified_method":"@Override\n    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject();\n\n        builder.field(Fields.TOOK, tookInMillis);\n        RestActions.buildBroadcastShardsHeader(builder, this);\n\n        builder.field(Fields.TOTAL, count);\n        if (matches != null) {\n            builder.startArray(Fields.MATCHES);\n            boolean justIds = \"ids\".equals(params.param(\"percolate_format\"));\n            if (justIds) {\n                for (PercolateResponse.Match match : matches) {\n                    builder.value(match.getId());\n                }\n            } else {\n                for (PercolateResponse.Match match : matches) {\n                    builder.startObject();\n                    builder.field(Fields._INDEX, match.getIndex());\n                    builder.field(Fields._ID, match.getId());\n                    float score = match.getScore();\n                    if (score != PercolatorService.NO_SCORE) {\n                        builder.field(Fields._SCORE, match.getScore());\n                    }\n                    if (match.getHighlightFields() != null) {\n                        builder.startObject(Fields.HIGHLIGHT);\n                        for (HighlightField field : match.getHighlightFields().values()) {\n                            builder.field(field.name());\n                            if (field.fragments() == null) {\n                                builder.nullValue();\n                            } else {\n                                builder.startArray();\n                                for (Text fragment : field.fragments()) {\n                                    builder.value(fragment);\n                                }\n                                builder.endArray();\n                            }\n                        }\n                        builder.endObject();\n                    }\n                    builder.endObject();\n                }\n            }\n            builder.endArray();\n        }\n        if (facets != null) {\n            facets.toXContent(builder, params);\n        }\n\n        if (aggregations != null) {\n            aggregations.toXContent(builder, params);\n        }\n\n        builder.endObject();\n        return builder;\n    }","commit_id":"f38296da61ed21544ad45609c52d950adf913dca","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public void writeTo(StreamOutput out) throws IOException {\n        super.writeTo(out);\n        out.writeVLong(tookInMillis);\n        out.writeVLong(count);\n        out.writeVInt(matches.length);\n        for (Match match : matches) {\n            match.writeTo(out);\n        }\n        out.writeOptionalStreamable(facets);\n        out.writeOptionalStreamable(aggregations);\n    }","id":48005,"modified_method":"@Override\n    public void writeTo(StreamOutput out) throws IOException {\n        super.writeTo(out);\n        out.writeVLong(tookInMillis);\n        out.writeVLong(count);\n        if (matches == null) {\n            out.writeVInt(-1);\n        } else {\n            out.writeVInt(matches.length);\n            for (Match match : matches) {\n                match.writeTo(out);\n            }\n        }\n        out.writeOptionalStreamable(facets);\n        out.writeOptionalStreamable(aggregations);\n    }","commit_id":"f38296da61ed21544ad45609c52d950adf913dca","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public ReduceResult(long count, InternalFacets reducedFacets, InternalAggregations reducedAggregations) {\n            this.count = count;\n            this.matches = EMPTY;\n            this.reducedFacets = reducedFacets;\n            this.reducedAggregations = reducedAggregations;\n        }","id":48006,"modified_method":"public ReduceResult(long count, InternalFacets reducedFacets, InternalAggregations reducedAggregations) {\n            this.count = count;\n            this.matches = null;\n            this.reducedFacets = reducedFacets;\n            this.reducedAggregations = reducedAggregations;\n        }","commit_id":"f38296da61ed21544ad45609c52d950adf913dca","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testCountPercolation() throws Exception {\n        client().admin().indices().prepareCreate(\"test\").execute().actionGet();\n        ensureGreen();\n\n        logger.info(\"--> Add dummy doc\");\n        client().prepareIndex(\"test\", \"type\", \"1\").setSource(\"field\", \"value\").execute().actionGet();\n\n        logger.info(\"--> register a queries\");\n        client().prepareIndex(\"test\", PercolatorService.TYPE_NAME, \"1\")\n                .setSource(jsonBuilder().startObject().field(\"query\", matchQuery(\"field1\", \"b\")).field(\"a\", \"b\").endObject())\n                .execute().actionGet();\n        client().prepareIndex(\"test\", PercolatorService.TYPE_NAME, \"2\")\n                .setSource(jsonBuilder().startObject().field(\"query\", matchQuery(\"field1\", \"c\")).endObject())\n                .execute().actionGet();\n        client().prepareIndex(\"test\", PercolatorService.TYPE_NAME, \"3\")\n                .setSource(jsonBuilder().startObject().field(\"query\", boolQuery()\n                        .must(matchQuery(\"field1\", \"b\"))\n                        .must(matchQuery(\"field1\", \"c\"))\n                ).endObject())\n                .execute().actionGet();\n        client().prepareIndex(\"test\", PercolatorService.TYPE_NAME, \"4\")\n                .setSource(jsonBuilder().startObject().field(\"query\", matchAllQuery()).endObject())\n                .execute().actionGet();\n        client().admin().indices().prepareRefresh(\"test\").execute().actionGet();\n\n        logger.info(\"--> Count percolate doc with field1=b\");\n        PercolateResponse response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                .setPercolateDoc(docBuilder().setDoc(jsonBuilder().startObject().field(\"field1\", \"b\").endObject()))\n                .execute().actionGet();\n        assertMatchCount(response, 2l);\n        assertThat(response.getMatches(), emptyArray());\n\n        logger.info(\"--> Count percolate doc with field1=c\");\n        response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                .setPercolateDoc(docBuilder().setDoc(yamlBuilder().startObject().field(\"field1\", \"c\").endObject()))\n                .execute().actionGet();\n        assertMatchCount(response, 2l);\n        assertThat(response.getMatches(), emptyArray());\n\n        logger.info(\"--> Count percolate doc with field1=b c\");\n        response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                .setPercolateDoc(docBuilder().setDoc(smileBuilder().startObject().field(\"field1\", \"b c\").endObject()))\n                .execute().actionGet();\n        assertMatchCount(response, 4l);\n        assertThat(response.getMatches(), emptyArray());\n\n        logger.info(\"--> Count percolate doc with field1=d\");\n        response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                .setPercolateDoc(docBuilder().setDoc(jsonBuilder().startObject().field(\"field1\", \"d\").endObject()))\n                .execute().actionGet();\n        assertMatchCount(response, 1l);\n        assertThat(response.getMatches(), emptyArray());\n\n        logger.info(\"--> Count percolate non existing doc\");\n        try {\n            client().preparePercolate()\n                    .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                    .setGetRequest(Requests.getRequest(\"test\").type(\"type\").id(\"5\"))\n                    .execute().actionGet();\n            fail(\"Exception should have been thrown\");\n        } catch (DocumentMissingException e) {\n        }\n    }","id":48007,"modified_method":"@Test\n    public void testCountPercolation() throws Exception {\n        client().admin().indices().prepareCreate(\"test\").execute().actionGet();\n        ensureGreen();\n\n        logger.info(\"--> Add dummy doc\");\n        client().prepareIndex(\"test\", \"type\", \"1\").setSource(\"field\", \"value\").execute().actionGet();\n\n        logger.info(\"--> register a queries\");\n        client().prepareIndex(\"test\", PercolatorService.TYPE_NAME, \"1\")\n                .setSource(jsonBuilder().startObject().field(\"query\", matchQuery(\"field1\", \"b\")).field(\"a\", \"b\").endObject())\n                .execute().actionGet();\n        client().prepareIndex(\"test\", PercolatorService.TYPE_NAME, \"2\")\n                .setSource(jsonBuilder().startObject().field(\"query\", matchQuery(\"field1\", \"c\")).endObject())\n                .execute().actionGet();\n        client().prepareIndex(\"test\", PercolatorService.TYPE_NAME, \"3\")\n                .setSource(jsonBuilder().startObject().field(\"query\", boolQuery()\n                        .must(matchQuery(\"field1\", \"b\"))\n                        .must(matchQuery(\"field1\", \"c\"))\n                ).endObject())\n                .execute().actionGet();\n        client().prepareIndex(\"test\", PercolatorService.TYPE_NAME, \"4\")\n                .setSource(jsonBuilder().startObject().field(\"query\", matchAllQuery()).endObject())\n                .execute().actionGet();\n        client().admin().indices().prepareRefresh(\"test\").execute().actionGet();\n\n        logger.info(\"--> Count percolate doc with field1=b\");\n        PercolateResponse response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                .setPercolateDoc(docBuilder().setDoc(jsonBuilder().startObject().field(\"field1\", \"b\").endObject()))\n                .execute().actionGet();\n        assertMatchCount(response, 2l);\n        assertThat(response.getMatches(), nullValue());\n\n        logger.info(\"--> Count percolate doc with field1=c\");\n        response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                .setPercolateDoc(docBuilder().setDoc(yamlBuilder().startObject().field(\"field1\", \"c\").endObject()))\n                .execute().actionGet();\n        assertMatchCount(response, 2l);\n        assertThat(response.getMatches(), nullValue());\n\n        logger.info(\"--> Count percolate doc with field1=b c\");\n        response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                .setPercolateDoc(docBuilder().setDoc(smileBuilder().startObject().field(\"field1\", \"b c\").endObject()))\n                .execute().actionGet();\n        assertMatchCount(response, 4l);\n        assertThat(response.getMatches(), nullValue());\n\n        logger.info(\"--> Count percolate doc with field1=d\");\n        response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                .setPercolateDoc(docBuilder().setDoc(jsonBuilder().startObject().field(\"field1\", \"d\").endObject()))\n                .execute().actionGet();\n        assertMatchCount(response, 1l);\n        assertThat(response.getMatches(), nullValue());\n\n        logger.info(\"--> Count percolate non existing doc\");\n        try {\n            client().preparePercolate()\n                    .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                    .setGetRequest(Requests.getRequest(\"test\").type(\"type\").id(\"5\"))\n                    .execute().actionGet();\n            fail(\"Exception should have been thrown\");\n        } catch (DocumentMissingException e) {\n        }\n    }","commit_id":"f38296da61ed21544ad45609c52d950adf913dca","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testCountPercolatingExistingDocs() throws Exception {\n        client().admin().indices().prepareCreate(\"test\").execute().actionGet();\n        ensureGreen();\n\n        logger.info(\"--> Adding docs\");\n        client().prepareIndex(\"test\", \"type\", \"1\").setSource(\"field1\", \"b\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"2\").setSource(\"field1\", \"c\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"3\").setSource(\"field1\", \"b c\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"4\").setSource(\"field1\", \"d\").execute().actionGet();\n\n        logger.info(\"--> register a queries\");\n        client().prepareIndex(\"test\", PercolatorService.TYPE_NAME, \"1\")\n                .setSource(jsonBuilder().startObject().field(\"query\", matchQuery(\"field1\", \"b\")).field(\"a\", \"b\").endObject())\n                .execute().actionGet();\n        client().prepareIndex(\"test\", PercolatorService.TYPE_NAME, \"2\")\n                .setSource(jsonBuilder().startObject().field(\"query\", matchQuery(\"field1\", \"c\")).endObject())\n                .execute().actionGet();\n        client().prepareIndex(\"test\", PercolatorService.TYPE_NAME, \"3\")\n                .setSource(jsonBuilder().startObject().field(\"query\", boolQuery()\n                        .must(matchQuery(\"field1\", \"b\"))\n                        .must(matchQuery(\"field1\", \"c\"))\n                ).endObject())\n                .execute().actionGet();\n        client().prepareIndex(\"test\", PercolatorService.TYPE_NAME, \"4\")\n                .setSource(jsonBuilder().startObject().field(\"query\", matchAllQuery()).endObject())\n                .execute().actionGet();\n        client().admin().indices().prepareRefresh(\"test\").execute().actionGet();\n\n        logger.info(\"--> Count percolate existing doc with id 1\");\n        PercolateResponse response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                .setGetRequest(Requests.getRequest(\"test\").type(\"type\").id(\"1\"))\n                .execute().actionGet();\n        assertMatchCount(response, 2l);\n        assertThat(response.getMatches(), emptyArray());\n\n        logger.info(\"--> Count percolate existing doc with id 2\");\n        response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                .setGetRequest(Requests.getRequest(\"test\").type(\"type\").id(\"2\"))\n                .execute().actionGet();\n        assertMatchCount(response, 2l);\n        assertThat(response.getMatches(), emptyArray());\n\n        logger.info(\"--> Count percolate existing doc with id 3\");\n        response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                .setGetRequest(Requests.getRequest(\"test\").type(\"type\").id(\"3\"))\n                .execute().actionGet();\n        assertMatchCount(response, 4l);\n        assertThat(response.getMatches(), emptyArray());\n\n        logger.info(\"--> Count percolate existing doc with id 4\");\n        response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                .setGetRequest(Requests.getRequest(\"test\").type(\"type\").id(\"4\"))\n                .execute().actionGet();\n        assertMatchCount(response, 1l);\n        assertThat(response.getMatches(), emptyArray());\n    }","id":48008,"modified_method":"@Test\n    public void testCountPercolatingExistingDocs() throws Exception {\n        client().admin().indices().prepareCreate(\"test\").execute().actionGet();\n        ensureGreen();\n\n        logger.info(\"--> Adding docs\");\n        client().prepareIndex(\"test\", \"type\", \"1\").setSource(\"field1\", \"b\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"2\").setSource(\"field1\", \"c\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"3\").setSource(\"field1\", \"b c\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"4\").setSource(\"field1\", \"d\").execute().actionGet();\n\n        logger.info(\"--> register a queries\");\n        client().prepareIndex(\"test\", PercolatorService.TYPE_NAME, \"1\")\n                .setSource(jsonBuilder().startObject().field(\"query\", matchQuery(\"field1\", \"b\")).field(\"a\", \"b\").endObject())\n                .execute().actionGet();\n        client().prepareIndex(\"test\", PercolatorService.TYPE_NAME, \"2\")\n                .setSource(jsonBuilder().startObject().field(\"query\", matchQuery(\"field1\", \"c\")).endObject())\n                .execute().actionGet();\n        client().prepareIndex(\"test\", PercolatorService.TYPE_NAME, \"3\")\n                .setSource(jsonBuilder().startObject().field(\"query\", boolQuery()\n                        .must(matchQuery(\"field1\", \"b\"))\n                        .must(matchQuery(\"field1\", \"c\"))\n                ).endObject())\n                .execute().actionGet();\n        client().prepareIndex(\"test\", PercolatorService.TYPE_NAME, \"4\")\n                .setSource(jsonBuilder().startObject().field(\"query\", matchAllQuery()).endObject())\n                .execute().actionGet();\n        client().admin().indices().prepareRefresh(\"test\").execute().actionGet();\n\n        logger.info(\"--> Count percolate existing doc with id 1\");\n        PercolateResponse response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                .setGetRequest(Requests.getRequest(\"test\").type(\"type\").id(\"1\"))\n                .execute().actionGet();\n        assertMatchCount(response, 2l);\n        assertThat(response.getMatches(), nullValue());\n\n        logger.info(\"--> Count percolate existing doc with id 2\");\n        response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                .setGetRequest(Requests.getRequest(\"test\").type(\"type\").id(\"2\"))\n                .execute().actionGet();\n        assertMatchCount(response, 2l);\n        assertThat(response.getMatches(), nullValue());\n\n        logger.info(\"--> Count percolate existing doc with id 3\");\n        response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                .setGetRequest(Requests.getRequest(\"test\").type(\"type\").id(\"3\"))\n                .execute().actionGet();\n        assertMatchCount(response, 4l);\n        assertThat(response.getMatches(), nullValue());\n\n        logger.info(\"--> Count percolate existing doc with id 4\");\n        response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type\").setOnlyCount(true)\n                .setGetRequest(Requests.getRequest(\"test\").type(\"type\").id(\"4\"))\n                .execute().actionGet();\n        assertMatchCount(response, 1l);\n        assertThat(response.getMatches(), nullValue());\n    }","commit_id":"f38296da61ed21544ad45609c52d950adf913dca","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static PercolateResponse reduce(PercolateRequest request, AtomicReferenceArray shardsResponses, PercolatorService percolatorService) {\n        int successfulShards = 0;\n        int failedShards = 0;\n\n        List<PercolateShardResponse> shardResults = null;\n        List<ShardOperationFailedException> shardFailures = null;\n\n        byte percolatorTypeId = 0x00;\n        for (int i = 0; i < shardsResponses.length(); i++) {\n            Object shardResponse = shardsResponses.get(i);\n            if (shardResponse == null) {\n                // simply ignore non active shards\n            } else if (shardResponse instanceof BroadcastShardOperationFailedException) {\n                failedShards++;\n                if (shardFailures == null) {\n                    shardFailures = newArrayList();\n                }\n                shardFailures.add(new DefaultShardOperationFailedException((BroadcastShardOperationFailedException) shardResponse));\n            } else {\n                PercolateShardResponse percolateShardResponse = (PercolateShardResponse) shardResponse;\n                successfulShards++;\n                if (!percolateShardResponse.isEmpty()) {\n                    if (shardResults == null) {\n                        percolatorTypeId = percolateShardResponse.percolatorTypeId();\n                        shardResults = newArrayList();\n                    }\n                    shardResults.add(percolateShardResponse);\n                }\n            }\n        }\n\n        if (shardResults == null) {\n            long tookInMillis = System.currentTimeMillis() - request.startTime;\n            return new PercolateResponse(shardsResponses.length(), successfulShards, failedShards, shardFailures, tookInMillis);\n        } else {\n            PercolatorService.ReduceResult result = percolatorService.reduce(percolatorTypeId, shardResults);\n            long tookInMillis = System.currentTimeMillis() - request.startTime;\n            return new PercolateResponse(\n                    shardsResponses.length(), successfulShards, failedShards, shardFailures,\n                    result.matches(), result.count(), tookInMillis, result.reducedFacets(), result.reducedAggregations()\n            );\n        }\n    }","id":48009,"modified_method":"public static PercolateResponse reduce(PercolateRequest request, AtomicReferenceArray shardsResponses, PercolatorService percolatorService) {\n        int successfulShards = 0;\n        int failedShards = 0;\n\n        List<PercolateShardResponse> shardResults = null;\n        List<ShardOperationFailedException> shardFailures = null;\n\n        byte percolatorTypeId = 0x00;\n        for (int i = 0; i < shardsResponses.length(); i++) {\n            Object shardResponse = shardsResponses.get(i);\n            if (shardResponse == null) {\n                // simply ignore non active shards\n            } else if (shardResponse instanceof BroadcastShardOperationFailedException) {\n                failedShards++;\n                if (shardFailures == null) {\n                    shardFailures = newArrayList();\n                }\n                shardFailures.add(new DefaultShardOperationFailedException((BroadcastShardOperationFailedException) shardResponse));\n            } else {\n                PercolateShardResponse percolateShardResponse = (PercolateShardResponse) shardResponse;\n                successfulShards++;\n                if (!percolateShardResponse.isEmpty()) {\n                    if (shardResults == null) {\n                        percolatorTypeId = percolateShardResponse.percolatorTypeId();\n                        shardResults = newArrayList();\n                    }\n                    shardResults.add(percolateShardResponse);\n                }\n            }\n        }\n\n        if (shardResults == null) {\n            long tookInMillis = System.currentTimeMillis() - request.startTime;\n            PercolateResponse.Match[] matches = request.onlyCount() ? null : PercolateResponse.EMPTY;\n            return new PercolateResponse(shardsResponses.length(), successfulShards, failedShards, shardFailures, tookInMillis, matches);\n        } else {\n            PercolatorService.ReduceResult result = percolatorService.reduce(percolatorTypeId, shardResults);\n            long tookInMillis = System.currentTimeMillis() - request.startTime;\n            return new PercolateResponse(\n                    shardsResponses.length(), successfulShards, failedShards, shardFailures,\n                    result.matches(), result.count(), tookInMillis, result.reducedFacets(), result.reducedAggregations()\n            );\n        }\n    }","commit_id":"f38296da61ed21544ad45609c52d950adf913dca","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static ElasticsearchException readException(StreamInput input) throws IOException {\n        final String name = input.readString();\n        Constructor<? extends ElasticsearchException> elasticsearchException = MAPPING.get(name);\n        if (elasticsearchException == null) {\n            throw new IllegalStateException(\"unknown exception with name: \" + name);\n        }\n        try {\n            return elasticsearchException.newInstance(input);\n        } catch (InstantiationException|IllegalAccessException|InvocationTargetException e) {\n            throw new IOException(\"failed to read exception: [\" + name + \"]\", e);\n        }\n    }","id":48010,"modified_method":"public static ElasticsearchException readException(StreamInput input, String name) throws IOException {\n        Constructor<? extends ElasticsearchException> elasticsearchException = MAPPING.get(name);\n        if (elasticsearchException == null) {\n            throw new IllegalStateException(\"unknown exception with name: \" + name);\n        }\n        try {\n            return elasticsearchException.newInstance(input);\n        } catch (InstantiationException|IllegalAccessException|InvocationTargetException e) {\n            throw new IOException(\"failed to read exception: [\" + name + \"]\", e);\n        }\n    }","commit_id":"62d29ff6a48027962f4f10cb47aef4ddbbf5540f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static <T extends Throwable> T readStackTrace(T throwable, StreamInput in) throws IOException {\n        int stackTraceElements = in.readVInt();\n        StackTraceElement[] stackTrace = new StackTraceElement[stackTraceElements];\n        for (int i = 0; i < stackTraceElements; i++) {\n            String declaringClasss = in.readString();\n            String fielName = in.readString();\n            String methodName = in.readString();\n            int lineNumber = in.readVInt();\n            stackTrace[i] = new StackTraceElement(declaringClasss,methodName, fielName, lineNumber);\n        }\n        throwable.setStackTrace(stackTrace);\n\n        int numSuppressed = in.readVInt();\n        for (int i = 0; i < numSuppressed; i++) {\n            throwable.addSuppressed(in.readThrowable());\n        }\n        return throwable;\n    }","id":48011,"modified_method":"/**\n     * Deserializes stacktrace elements as well as suppressed exceptions from the given output stream and\n     * adds it to the given exception.\n     */\n    public static <T extends Throwable> T readStackTrace(T throwable, StreamInput in) throws IOException {\n        final int stackTraceElements = in.readVInt();\n        StackTraceElement[] stackTrace = new StackTraceElement[stackTraceElements];\n        for (int i = 0; i < stackTraceElements; i++) {\n            final String declaringClasss = in.readString();\n            final String fileName = in.readString();\n            final String methodName = in.readString();\n            final int lineNumber = in.readVInt();\n            stackTrace[i] = new StackTraceElement(declaringClasss,methodName, fileName, lineNumber);\n        }\n        throwable.setStackTrace(stackTrace);\n\n        int numSuppressed = in.readVInt();\n        for (int i = 0; i < numSuppressed; i++) {\n            throwable.addSuppressed(in.readThrowable());\n        }\n        return throwable;\n    }","commit_id":"62d29ff6a48027962f4f10cb47aef4ddbbf5540f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private static ImmutableMap<String, List<String>> headers(Tuple<String, String[]>... headers) {\n            Map<String, List<String>> map = Maps.newHashMap();\n            for (Tuple<String, String[]> header : headers) {\n                List<String> list = map.get(header.v1());\n                if (list == null) {\n                    list = Lists.newArrayList(header.v2());\n                    map.put(header.v1(), list);\n                } else {\n                    for (String value : header.v2()) {\n                        list.add(value);\n                    }\n                }\n            }\n            return ImmutableMap.copyOf(map);\n        }","id":48012,"modified_method":"private static Map<String, List<String>> headers(Tuple<String, String[]>... headers) {\n            Map<String, List<String>> map = Maps.newHashMap();\n            for (Tuple<String, String[]> header : headers) {\n                List<String> list = map.get(header.v1());\n                if (list == null) {\n                    list = Lists.newArrayList(header.v2());\n                    map.put(header.v1(), list);\n                } else {\n                    for (String value : header.v2()) {\n                        list.add(value);\n                    }\n                }\n            }\n            return ImmutableMap.copyOf(map);\n        }","commit_id":"62d29ff6a48027962f4f10cb47aef4ddbbf5540f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public WithRestHeadersException(StreamInput in) throws IOException {\n            super(in);\n            int numKeys = in.readVInt();\n            ImmutableMap.Builder<String, List<String>> builder = ImmutableMap.builder();\n            for (int i = 0; i < numKeys; i++) {\n                String key = in.readString();\n                int numValues = in.readVInt();\n                ArrayList<String> headers = new ArrayList<>(numValues);\n                for (int j = 0; j < numValues; j++) {\n                    headers.add(in.readString());\n                }\n                builder.put(key, headers);\n            }\n            headers = builder.build();\n        }","id":48013,"modified_method":"public WithRestHeadersException(StreamInput in) throws IOException {\n            super(in);\n            int numKeys = in.readVInt();\n            ImmutableMap.Builder<String, List<String>> builder = ImmutableMap.builder();\n            for (int i = 0; i < numKeys; i++) {\n                final String key = in.readString();\n                final int numValues = in.readVInt();\n                final ArrayList<String> headers = new ArrayList<>(numValues);\n                for (int j = 0; j < numValues; j++) {\n                    headers.add(in.readString());\n                }\n                builder.put(key, headers);\n            }\n            headers = builder.build();\n        }","commit_id":"62d29ff6a48027962f4f10cb47aef4ddbbf5540f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static <T extends Throwable> T writeStackTraces(T throwable, StreamOutput out) throws IOException {\n        StackTraceElement[] stackTrace = throwable.getStackTrace();\n        out.writeVInt(stackTrace.length);\n        for (StackTraceElement element : stackTrace) {\n            out.writeString(element.getClassName());\n            out.writeString(element.getFileName());\n            out.writeString(element.getMethodName());\n            out.writeVInt(element.getLineNumber());\n        }\n        Throwable[] suppressed = throwable.getSuppressed();\n        out.writeVInt(suppressed.length);\n        for (Throwable t : suppressed) {\n            out.writeThrowable(t);\n        }\n        return throwable;\n    }","id":48014,"modified_method":"/**\n     * Serializes the given exceptions stacktrace elements as well as it's suppressed exceptions to the given output stream.\n     */\n    public static <T extends Throwable> T writeStackTraces(T throwable, StreamOutput out) throws IOException {\n        StackTraceElement[] stackTrace = throwable.getStackTrace();\n        out.writeVInt(stackTrace.length);\n        for (StackTraceElement element : stackTrace) {\n            out.writeString(element.getClassName());\n            out.writeString(element.getFileName());\n            out.writeString(element.getMethodName());\n            out.writeVInt(element.getLineNumber());\n        }\n        Throwable[] suppressed = throwable.getSuppressed();\n        out.writeVInt(suppressed.length);\n        for (Throwable t : suppressed) {\n            out.writeThrowable(t);\n        }\n        return throwable;\n    }","commit_id":"62d29ff6a48027962f4f10cb47aef4ddbbf5540f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n        public ImmutableMap<String, List<String>> getHeaders() {\n            return headers;\n        }","id":48015,"modified_method":"@Override\n        public Map<String, List<String>> getHeaders() {\n            return headers;\n        }","commit_id":"62d29ff6a48027962f4f10cb47aef4ddbbf5540f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public <T extends Throwable> T readThrowable() throws IOException {\n        if (readBoolean()) {\n            int key = readVInt();\n            switch (key) {\n                case 0:\n                    return (T) ElasticsearchException.readException(this);\n                case 1:\n                    // this sucks it would be nice to have a better way to construct those?\n                    String msg = readOptionalString();\n                    final int idx = msg.indexOf(\" (resource=\");\n                    String resource = msg.substring(idx + \" (resource=\".length(), msg.length()-1);\n                    msg = msg.substring(0, idx);\n                    return (T) ElasticsearchException.readStackTrace(new CorruptIndexException(msg, resource, readThrowable()), this); // TODO add a string throwable ctor to this?\n                case 2:\n                    String itnMessage = readOptionalString();\n                    readThrowable();\n                    return (T) ElasticsearchException.readStackTrace(new IndexFormatTooNewException(itnMessage, -1, -1, -1), this);\n                case 3:\n                    String itoMessage = readOptionalString();\n                    readThrowable();\n                    return (T) ElasticsearchException.readStackTrace(new IndexFormatTooOldException(itoMessage, -1, -1, -1), this);\n                case 4:\n                    String npeMessage = readOptionalString();\n                    readThrowable();\n                    return (T) ElasticsearchException.readStackTrace(new NullPointerException(npeMessage), this);\n                case 5:\n                    String nfeMessage = readOptionalString();\n                    readThrowable();\n                    return (T) ElasticsearchException.readStackTrace(new NumberFormatException(nfeMessage), this);\n                case 6:\n                    return (T) ElasticsearchException.readStackTrace(new IllegalArgumentException(readOptionalString(), readThrowable()), this);\n                case 7:\n                    return (T) ElasticsearchException.readStackTrace(new IllegalStateException(readOptionalString(), readThrowable()), this);\n                case 8:\n                    String eofMessage = readOptionalString();\n                    readThrowable();\n                    return (T) ElasticsearchException.readStackTrace(new EOFException(eofMessage), this);\n                case 9:\n                    return (T) ElasticsearchException.readStackTrace(new SecurityException(readOptionalString(), readThrowable()), this);\n                case 10: // unknown -- // C - should we use a dedicated exception\n                    return (T) ElasticsearchException.readStackTrace(new ElasticsearchException(readOptionalString(), readThrowable()), this);\n                default:\n                    assert false : \"no such exception for id: \" + key;\n            }\n        }\n        return null;\n    }","id":48016,"modified_method":"public <T extends Throwable> T readThrowable() throws IOException {\n        if (readBoolean()) {\n            int key = readVInt();\n            switch (key) {\n                case 0:\n                    final String name = readString();\n                    return (T) readException(this, name);\n                case 1:\n                    // this sucks it would be nice to have a better way to construct those?\n                    String msg = readOptionalString();\n                    final int idx = msg.indexOf(\" (resource=\");\n                    final String resource = msg.substring(idx + \" (resource=\".length(), msg.length()-1);\n                    msg = msg.substring(0, idx);\n                    return (T) readStackTrace(new CorruptIndexException(msg, resource, readThrowable()), this); // Lucene 5.3 will have getters for all these\n                case 2:\n                    final String itnMessage = readOptionalString();\n                    readThrowable();\n                    return (T) readStackTrace(new IndexFormatTooNewException(itnMessage, -1, -1, -1), this);\n                case 3:\n                    final String itoMessage = readOptionalString();\n                    readThrowable();\n                    return (T) readStackTrace(new IndexFormatTooOldException(itoMessage, -1, -1, -1), this);\n                case 4:\n                    final String npeMessage = readOptionalString();\n                    readThrowable();\n                    return (T) readStackTrace(new NullPointerException(npeMessage), this);\n                case 5:\n                    final String nfeMessage = readOptionalString();\n                    readThrowable();\n                    return (T) readStackTrace(new NumberFormatException(nfeMessage), this);\n                case 6:\n                    return (T) readStackTrace(new IllegalArgumentException(readOptionalString(), readThrowable()), this);\n                case 7:\n                    return (T) readStackTrace(new IllegalStateException(readOptionalString(), readThrowable()), this);\n                case 8:\n                    final String eofMessage = readOptionalString();\n                    readThrowable();\n                    return (T) readStackTrace(new EOFException(eofMessage), this);\n                case 9:\n                    return (T) readStackTrace(new SecurityException(readOptionalString(), readThrowable()), this);\n                default:\n                    assert false : \"no such exception for id: \" + key;\n            }\n        }\n        return null;\n    }","commit_id":"62d29ff6a48027962f4f10cb47aef4ddbbf5540f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void writeThrowable(Throwable throwable) throws IOException {\n        if (throwable == null) {\n            writeBoolean(false);\n        } else {\n            writeBoolean(true);\n            if (throwable instanceof ElasticsearchException) {\n                writeVInt(0);\n                ElasticsearchException.writeException((ElasticsearchException) throwable, this);\n                return;\n            } else if (throwable instanceof CorruptIndexException) {\n                writeVInt(1);\n            } else if (throwable instanceof IndexFormatTooNewException) {\n                writeVInt(2);\n            } else if (throwable instanceof IndexFormatTooOldException) {\n                writeVInt(3);\n            } else if (throwable instanceof NullPointerException) {\n                writeVInt(4);\n            } else if (throwable instanceof NumberFormatException) {\n                writeVInt(5);\n            } else if (throwable instanceof IllegalArgumentException) {\n                writeVInt(6);\n            } else if (throwable instanceof IllegalStateException) {\n                writeVInt(7);\n            } else if (throwable instanceof EOFException) {\n                writeVInt(8);\n            } else if (throwable instanceof SecurityException) {\n                writeVInt(9);\n            } else {\n                writeVInt(10); // unknown\n            }\n            writeOptionalString(throwable.getMessage());\n            writeThrowable(throwable.getCause());\n            ElasticsearchException.writeStackTraces(throwable, this);\n        }\n    }","id":48017,"modified_method":"public void writeThrowable(Throwable throwable) throws IOException {\n        if (throwable == null) {\n            writeBoolean(false);\n        } else {\n            writeBoolean(true);\n            if (throwable instanceof ElasticsearchException) {\n\n            } else if (throwable instanceof CorruptIndexException) {\n                writeVInt(1);\n            } else if (throwable instanceof IndexFormatTooNewException) {\n                writeVInt(2);\n            } else if (throwable instanceof IndexFormatTooOldException) {\n                writeVInt(3);\n            } else if (throwable instanceof NullPointerException) {\n                writeVInt(4);\n            } else if (throwable instanceof NumberFormatException) {\n                writeVInt(5);\n            } else if (throwable instanceof IllegalArgumentException) {\n                writeVInt(6);\n            } else if (throwable instanceof IllegalStateException) {\n                writeVInt(7);\n            } else if (throwable instanceof EOFException) {\n                writeVInt(8);\n            } else if (throwable instanceof SecurityException) {\n                writeVInt(9);\n            } else {\n                ElasticsearchException ex;\n                if (throwable instanceof ElasticsearchException) {\n                    ex = (ElasticsearchException) throwable;\n                } else {\n                    ex = new StreamInput.NamedException(ElasticsearchException.getExceptionName(throwable), throwable.getMessage(), throwable.getCause());\n                }\n                writeVInt(0);\n                writeString(ex.getClass().getName());\n                ex.writeTo(this);\n                return;\n\n            }\n            writeOptionalString(throwable.getMessage());\n            writeThrowable(throwable.getCause());\n            ElasticsearchException.writeStackTraces(throwable, this);\n        }\n    }","commit_id":"62d29ff6a48027962f4f10cb47aef4ddbbf5540f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private static <K, V> ConcurrentWeakHashMap<K, V> createWeakMap() {\n    return new ConcurrentWeakHashMap<K, V>(7, 0.75f, Runtime.getRuntime().availableProcessors(),\n                                           ContainerUtil.<K>canonicalStrategy());\n  }","id":48018,"modified_method":"private static <K, V> ConcurrentMap<K, V> createWeakMap() {\n    return ContainerUtil.createConcurrentWeakMap(7, 0.75f, Runtime.getRuntime().availableProcessors(),\n                                           ContainerUtil.<K>canonicalStrategy());\n  }","commit_id":"4fe5426b9b62875227651dcaf2fb81f4c32ec60a","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"/**\n     * @throws Exception If failed.\n     */\n    public void testMultithreadedCommand() throws Exception {\n        final GridClientData data = client.data(PARTITIONED_CACHE_NAME);\n        final GridClientCompute compute = client.compute();\n        final AtomicInteger cnt = new AtomicInteger(0);\n\n        multithreaded(new Callable<Object>() {\n            @Override public Object call() throws Exception {\n                for (int i = 0; i < 20; i++) {\n                    String key = UUID.randomUUID().toString();\n                    String val = UUID.randomUUID().toString();\n\n                    switch (cnt.incrementAndGet() % 4) {\n                        case 0: {\n                            assertTrue(data.put(key, val));\n                            assertEquals(val, data.get(key));\n                            assertTrue(data.remove(key));\n\n                            break;\n                        }\n\n                        case 1: {\n                            assertNotNull(data.metrics());\n\n                            break;\n                        }\n\n                        case 2: {\n                            String nodeId = compute.execute(TestTask.class.getName(), null);\n\n                            assertNotNull(nodeId);\n                            assertNotNull(compute.refreshNode(UUID.fromString(nodeId), true, true));\n\n                            break;\n                        }\n\n                        case 3: {\n                            assertEquals(NODES_CNT, compute.refreshTopology(true, true).size());\n\n                            break;\n                        }\n                    }\n                }\n\n                return null;\n            }\n        }, 50, \"multithreaded-client-access\");\n    }","id":48019,"modified_method":"/**\n     * @throws Exception If failed.\n     */\n    public void _testMultithreadedCommand() throws Exception {\n        final GridClientData data = client.data(PARTITIONED_CACHE_NAME);\n        final GridClientCompute compute = client.compute();\n        final AtomicInteger cnt = new AtomicInteger(0);\n\n        multithreaded(new Callable<Object>() {\n            @Override public Object call() throws Exception {\n                for (int i = 0; i < 20; i++) {\n                    String key = UUID.randomUUID().toString();\n                    String val = UUID.randomUUID().toString();\n\n                    switch (cnt.incrementAndGet() % 4) {\n                        case 0: {\n                            assertTrue(data.put(key, val));\n                            assertEquals(val, data.get(key));\n                            assertTrue(data.remove(key));\n\n                            break;\n                        }\n\n                        case 1: {\n                            assertNotNull(data.metrics());\n\n                            break;\n                        }\n\n                        case 2: {\n                            String nodeId = compute.execute(TestTask.class.getName(), null);\n\n                            assertNotNull(nodeId);\n                            assertNotNull(compute.refreshNode(UUID.fromString(nodeId), true, true));\n\n                            break;\n                        }\n\n                        case 3: {\n                            assertEquals(NODES_CNT, compute.refreshTopology(true, true).size());\n\n                            break;\n                        }\n                    }\n                }\n\n                return null;\n            }\n        }, 50, \"multithreaded-client-access\");\n    }","commit_id":"3efd1ad2200bd89badc278ef3d394dc0a39eefe6","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Closes all opened connections.\n     *\n     * @param waitCompletion If {@code true} waits for all pending requests to be proceeded.\n     */\n    @SuppressWarnings(\"TooBroadScope\")\n    @Override public void stop(boolean waitCompletion) {\n        Collection<GridClientConnection> closeConns;\n\n        if (closed)\n            return;\n\n        // Mark manager as closed.\n        closed = true;\n\n        // Remove all connections from cache.\n        closeConns = new ArrayList<>(conns.values());\n\n        conns.clear();\n\n        nodeConns.clear();\n\n        // Close old connection outside the writer lock.\n        for (GridClientConnection conn : closeConns)\n            conn.close(CLIENT_CLOSED, waitCompletion);\n\n        if (evtLoop != null)\n            evtLoop.shutdownGracefully();\n        else if (executor != null)\n            // If we are in HTTP mode shutdown explicitly.\n            GridClientUtils.shutdownNow(GridClientConnectionManager.class, executor, log);\n    }","id":48020,"modified_method":"/**\n     * Closes all opened connections.\n     *\n     * @param waitCompletion If {@code true} waits for all pending requests to be proceeded.\n     */\n    @SuppressWarnings(\"TooBroadScope\")\n    @Override public void stop(boolean waitCompletion) {\n        Collection<GridClientConnection> closeConns;\n\n        if (closed)\n            return;\n\n        // Mark manager as closed.\n        closed = true;\n\n        // Remove all connections from cache.\n        closeConns = new ArrayList<>(conns.values());\n\n        conns.clear();\n\n        nodeConns.clear();\n\n        // Close old connection outside the writer lock.\n        for (GridClientConnection conn : closeConns)\n            conn.close(CLIENT_CLOSED, waitCompletion);\n\n        if (pingExecutor != null)\n            GridClientUtils.shutdownNow(GridClientConnectionManager.class, pingExecutor, log);\n\n        GridClientUtils.shutdownNow(GridClientConnectionManager.class, executor, log);\n\n        if (srv != null)\n            srv.stop();\n    }","commit_id":"3efd1ad2200bd89badc278ef3d394dc0a39eefe6","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @SuppressWarnings(\"BusyWait\")\n    @Override public void init(Collection<InetSocketAddress> srvs) throws GridClientException, InterruptedException {\n        GridClientException firstEx = null;\n\n        for (int i = 0; i < INIT_RETRY_CNT; i++) {\n            Collection<InetSocketAddress> srvsCp = new ArrayList<>(srvs);\n\n            while (!srvsCp.isEmpty()) {\n                GridClientConnection conn = null;\n\n                try {\n                    conn = connect(null, srvsCp);\n\n                    conn.topology(cfg.isAutoFetchAttributes(), cfg.isAutoFetchMetrics(), null).get();\n\n                    return;\n                }\n                catch (GridServerUnreachableException e) {\n                    // No connection could be opened to any of initial addresses - exit to retry loop.\n                    assert conn == null :\n                        \"GridClientConnectionResetException was thrown from GridClientConnection#topology\";\n\n                    if (firstEx == null)\n                        firstEx = e;\n\n                    break;\n                }\n                catch (GridClientConnectionResetException e) {\n                    // Connection was established but topology update failed -\n                    // trying other initial addresses if any.\n                    assert conn != null : \"GridClientConnectionResetException was thrown from connect()\";\n\n                    if (firstEx == null)\n                        firstEx = e;\n\n                    if (!srvsCp.remove(conn.serverAddress()))\n                        // We have misbehaving collection or equals - just exit to avoid infinite loop.\n                        break;\n                }\n            }\n\n            Thread.sleep(INIT_RETRY_INTERVAL);\n        }\n\n        for (GridClientConnection c : conns.values()) {\n            conns.remove(c.serverAddress(), c);\n\n            c.close(FAILED, false);\n        }\n\n        throw firstEx;\n    }","id":48021,"modified_method":"/** {@inheritDoc} */\n    @SuppressWarnings({\"BusyWait\", \"unchecked\"})\n    @Override public void init(Collection<InetSocketAddress> srvs) throws GridClientException, InterruptedException {\n        GridClientException firstEx = null;\n\n        for (int i = 0; i < INIT_RETRY_CNT; i++) {\n            Collection<InetSocketAddress> srvsCp = new ArrayList<>(srvs);\n\n            while (!srvsCp.isEmpty()) {\n                GridClientConnection conn = null;\n\n                try {\n                    conn = connect(null, srvsCp);\n\n                    conn.topology(cfg.isAutoFetchAttributes(), cfg.isAutoFetchMetrics(), null).get();\n\n                    return;\n                }\n                catch (GridServerUnreachableException e) {\n                    // No connection could be opened to any of initial addresses - exit to retry loop.\n                    assert conn == null :\n                        \"GridClientConnectionResetException was thrown from GridClientConnection#topology\";\n\n                    if (firstEx == null)\n                        firstEx = e;\n\n                    break;\n                }\n                catch (GridClientConnectionResetException e) {\n                    // Connection was established but topology update failed -\n                    // trying other initial addresses if any.\n                    assert conn != null : \"GridClientConnectionResetException was thrown from connect()\";\n\n                    if (firstEx == null)\n                        firstEx = e;\n\n                    if (!srvsCp.remove(conn.serverAddress()))\n                        // We have misbehaving collection or equals - just exit to avoid infinite loop.\n                        break;\n                }\n            }\n\n            Thread.sleep(INIT_RETRY_INTERVAL);\n        }\n\n        for (GridClientConnection c : conns.values()) {\n            conns.remove(c.serverAddress(), c);\n\n            c.close(FAILED, false);\n        }\n\n        throw firstEx;\n    }","commit_id":"3efd1ad2200bd89badc278ef3d394dc0a39eefe6","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Create new connection to specified server.\n     *\n     * @param nodeId {@code UUID} of node for mapping with connection.\n     *      {@code null} if no need of mapping.\n     * @param addr Remote socket to connect.\n     * @return Established connection.\n     * @throws IOException If connection failed.\n     * @throws GridClientException If protocol error happened.\n     * @throws InterruptedException If thread was interrupted before connection was established.\n     */\n    protected GridClientConnection connect(@Nullable UUID nodeId, InetSocketAddress addr)\n        throws IOException, GridClientException, InterruptedException {\n\n        endpointStripedLock.lock(addr);\n\n        try {\n            GridClientConnection old = conns.get(addr);\n\n            if (old != null) {\n                if (nodeId != null)\n                    nodeConns.put(nodeId, old);\n\n                return old;\n            }\n\n            GridClientConnection conn;\n\n            switch (cfg.getProtocol()) {\n                case TCP: {\n                    conn = new GridClientTcpConnection(clientId, addr, sslCtx, evtLoop,\n                        cfg.getConnectTimeout(), cfg.getPingInterval(), cfg.getPingTimeout(),\n                        cfg.isTcpNoDelay(), protoId == null ? cfg.getMarshaller() : null,\n                        top, cfg.getCredentials(), protoId);\n\n                    break;\n                }\n\n                case HTTP: {\n                    conn = new GridClientHttpConnection(clientId, addr, sslCtx,\n                        // Applying max idle time as read timeout for HTTP connections.\n                        cfg.getConnectTimeout(), (int)cfg.getMaxConnectionIdleTime(), top,\n                        executor == null ? cfg.getExecutorService() : executor, cfg.getCredentials());\n\n                    break;\n                }\n\n                default: {\n                    throw new GridServerUnreachableException(\"Failed to create client (protocol is not supported): \" +\n                        cfg.getProtocol());\n                }\n            }\n\n            old = conns.putIfAbsent(addr, conn);\n\n            assert old == null;\n\n            if (nodeId != null)\n                nodeConns.put(nodeId, conn);\n\n            return conn;\n        }\n        finally {\n            endpointStripedLock.unlock(addr);\n        }\n    }","id":48022,"modified_method":"/**\n     * Create new connection to specified server.\n     *\n     * @param nodeId {@code UUID} of node for mapping with connection.\n     *      {@code null} if no need of mapping.\n     * @param addr Remote socket to connect.\n     * @return Established connection.\n     * @throws IOException If connection failed.\n     * @throws GridClientException If protocol error happened.\n     * @throws InterruptedException If thread was interrupted before connection was established.\n     */\n    protected GridClientConnection connect(@Nullable UUID nodeId, InetSocketAddress addr)\n        throws IOException, GridClientException, InterruptedException {\n        endpointStripedLock.lock(addr);\n\n        try {\n            GridClientConnection old = conns.get(addr);\n\n            if (old != null) {\n                if (nodeId != null)\n                    nodeConns.put(nodeId, old);\n\n                return old;\n            }\n\n            GridClientConnection conn;\n\n            switch (cfg.getProtocol()) {\n                case TCP: {\n                    conn = new GridClientNioTcpConnection(srv, clientId, addr, sslCtx, pingExecutor,\n                        cfg.getConnectTimeout(), cfg.getPingInterval(), cfg.getPingTimeout(),\n                        cfg.isTcpNoDelay(), protoId == null ? cfg.getMarshaller() : null,\n                        top, cfg.getCredentials(), protoId);\n\n                    break;\n                }\n\n                case HTTP: {\n                    conn = new GridClientHttpConnection(clientId, addr, sslCtx,\n                        // Applying max idle time as read timeout for HTTP connections.\n                        cfg.getConnectTimeout(), (int)cfg.getMaxConnectionIdleTime(), top,\n                        executor == null ? cfg.getExecutorService() : executor, cfg.getCredentials());\n\n                    break;\n                }\n\n                default: {\n                    throw new GridServerUnreachableException(\"Failed to create client (protocol is not supported): \" +\n                        cfg.getProtocol());\n                }\n            }\n\n            old = conns.putIfAbsent(addr, conn);\n\n            assert old == null;\n\n            if (nodeId != null)\n                nodeConns.put(nodeId, conn);\n\n            return conn;\n        }\n        finally {\n            endpointStripedLock.unlock(addr);\n        }\n    }","commit_id":"3efd1ad2200bd89badc278ef3d394dc0a39eefe6","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Constructs connection manager.\n     *\n     * @param clientId Client ID.\n     * @param sslCtx SSL context to enable secured connection or {@code null} to use unsecured one.\n     * @param cfg Client configuration.\n     * @param routers Routers or empty collection to use endpoints from topology info.\n     * @param top Topology.\n     * @param protoId Custom protocol ID (optional).\n     */\n    public GridClientConnectionManagerImpl(UUID clientId, SSLContext sslCtx, GridClientConfiguration cfg,\n        Collection<InetSocketAddress> routers, GridClientTopology top, Byte protoId) {\n        assert clientId != null : \"clientId != null\";\n        assert cfg != null : \"cfg != null\";\n        assert routers != null : \"routers != null\";\n        assert top != null : \"top != null\";\n\n        this.clientId = clientId;\n        this.sslCtx = sslCtx;\n        this.cfg = cfg;\n        this.routers = new ArrayList<>(routers);\n        this.top = top;\n        this.protoId = protoId;\n\n        executor = cfg.getExecutorService() != null ? cfg.getExecutorService() : Executors.newCachedThreadPool();\n\n        int workerCnt = Runtime.getRuntime().availableProcessors();\n\n        evtLoop = cfg.getProtocol() == GridClientProtocol.TCP ? new NioEventLoopGroup(workerCnt) : null;\n    }","id":48023,"modified_method":"/**\n     * Constructs connection manager.\n     *\n     * @param clientId Client ID.\n     * @param sslCtx SSL context to enable secured connection or {@code null} to use unsecured one.\n     * @param cfg Client configuration.\n     * @param routers Routers or empty collection to use endpoints from topology info.\n     * @param top Topology.\n     * @param protoId Custom protocol ID (optional).\n     */\n    public GridClientConnectionManagerImpl(UUID clientId, SSLContext sslCtx, GridClientConfiguration cfg,\n        Collection<InetSocketAddress> routers, GridClientTopology top, Byte protoId) {\n        assert clientId != null : \"clientId != null\";\n        assert cfg != null : \"cfg != null\";\n        assert routers != null : \"routers != null\";\n        assert top != null : \"top != null\";\n\n        this.clientId = clientId;\n        this.sslCtx = sslCtx;\n        this.cfg = cfg;\n        this.routers = new ArrayList<>(routers);\n        this.top = top;\n        this.protoId = protoId;\n\n        executor = cfg.getExecutorService() != null ? cfg.getExecutorService() : Executors.newCachedThreadPool();\n\n        pingExecutor = cfg.getProtocol() == GridClientProtocol.TCP ?\n            Executors.newScheduledThreadPool(Runtime.getRuntime().availableProcessors()) : null;\n\n        if (cfg.getProtocol() == GridClientProtocol.TCP) {\n            try {\n                GridLogger gridLog = new GridJavaLogger();\n\n                GridNioFilter[] filters;\n\n                GridNioFilter codecFilter = new GridNioCodecFilter(new NioParser(), gridLog, false);\n\n                if (sslCtx != null) {\n                    filters = new GridNioFilter[]{codecFilter};\n\n                    // FIXME: need client SSL filter.\n                    //GridNioFilter sslFilter = ;\n\n                    //filters = new GridNioFilter[]{codecFilter, sslFilter};\n                }\n                else\n                    filters = new GridNioFilter[]{codecFilter};\n\n                srv = GridNioServer.builder().address(U.getLocalHost())\n                    .port(-1)\n                    .listener(new NioListener())\n                    .filters(filters)\n                    .logger(gridLog)\n                    .selectorCount(Runtime.getRuntime().availableProcessors())\n                    .sendQueueLimit(0)\n                    .byteOrder(ByteOrder.nativeOrder())\n                    .tcpNoDelay(cfg.isTcpNoDelay())\n                    .directBuffer(true)\n                    .idleTimeout(60_000)\n                    .gridName(\"client\")\n                    .build();\n\n                srv.start();\n            }\n            catch (IOException | GridException e) {\n                throw new RuntimeException(\"Failed to start connection server.\", e);\n            }\n        }\n    }","commit_id":"3efd1ad2200bd89badc278ef3d394dc0a39eefe6","url":"https://github.com/apache/ignite"},{"original_method":"private void tryToTriggerRelationshipLoadingStoppingMidWay( int denseNodeThreshold ) throws Throwable\n    {\n        GraphDatabaseAPI db = (GraphDatabaseAPI) new TestGraphDatabaseFactory().newImpermanentDatabaseBuilder()\n                .setConfig( dense_node_threshold, \"\" + denseNodeThreshold )\n                .newGraphDatabase();\n        Node node = createNodeWithRelationships( db );\n\n        checkStateToHelpDiagnoseFlakeyTest( db, node );\n\n        long end = currentTimeMillis() + SECONDS.toMillis( 5 );\n        int iterations = 0;\n        while ( currentTimeMillis() < end )\n        {\n            tryOnce( db, node, iterations++ );\n        }\n\n        db.shutdown();\n    }","id":48024,"modified_method":"private void tryToTriggerRelationshipLoadingStoppingMidWay( int denseNodeThreshold ) throws Throwable\n    {\n        GraphDatabaseAPI db = (GraphDatabaseAPI) new TestGraphDatabaseFactory().newImpermanentDatabaseBuilder()\n                .setConfig( dense_node_threshold, \"\" + denseNodeThreshold )\n                .newGraphDatabase();\n        Node node = createNodeWithRelationships( db );\n\n        checkStateToHelpDiagnoseFlakeyTest( db, node );\n\n        long end = currentTimeMillis() + SECONDS.toMillis( 5 );\n        int iterations = 0;\n        while ( currentTimeMillis() < end && iterations < 100 )\n        {\n            tryOnce( db, node );\n            iterations++;\n        }\n\n        db.shutdown();\n    }","commit_id":"414a188d40b5fa3101cfbc1d730ab34060589a06","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void tryOnce( final GraphDatabaseAPI db, final Node node, int iterations ) throws Throwable\n    {\n        ExecutorService executor = newCachedThreadPool();\n        final CountDownLatch startSignal = new CountDownLatch( 1 );\n        int threads = getRuntime().availableProcessors();\n        final List<Throwable> errors = Collections.synchronizedList( new ArrayList<>() );\n        for ( int i = 0; i < threads; i++ )\n        {\n            executor.submit( () -> {\n                awaitStartSignalAndRandomTimeLonger( startSignal );\n                try ( Transaction ignored = db.beginTx() )\n                {\n                    assertEquals( relCount, count( node.getRelationships() ) );\n                }\n                catch ( Throwable e )\n                {\n                    errors.add( e );\n                }\n            } );\n        }\n        startSignal.countDown();\n        executor.shutdown();\n        executor.awaitTermination( 10, SECONDS );\n\n        if ( !errors.isEmpty() )\n        {\n            Exception exception = new Exception(\n                    format(\"Exception(s) after %s iterations with %s threads\", iterations, threads));\n            for ( Throwable error : errors )\n            {\n                exception.addSuppressed( error );\n            }\n            throw exception;\n        }\n    }","id":48025,"modified_method":"private void tryOnce( final GraphDatabaseAPI db, final Node node ) throws Throwable\n    {\n        Race race = new Race( true );\n        race.addContestants( Runtime.getRuntime().availableProcessors(), () -> {\n            try ( Transaction ignored = db.beginTx() )\n            {\n                assertEquals( relCount, count( node.getRelationships() ) );\n            }\n        } );\n        race.go();\n    }","commit_id":"414a188d40b5fa3101cfbc1d730ab34060589a06","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Threaded(Layer[] ls, double epochs, final Key job) {\n      _trainers = new Base[Runtime.getRuntime().availableProcessors()];\n      _threads = new Thread[_trainers.length];\n      _stepsPerThread = (long) (epochs * ((Input) ls[0])._len / _threads.length);\n      _resume = new CyclicBarrier(_threads.length + 1);\n\n      for( int t = 0; t < _trainers.length; t++ ) {\n        Layer[] clones = new Layer[ls.length];\n        for( int y = 0; y < clones.length; y++ )\n          clones[y] = ls[y].clone();\n        for( int y = 0; y < clones.length; y++ ) {\n          clones[y].init(clones, y, false, 0);\n          clones[y]._training = new Training() {\n            @Override long processed() {\n              return _processed.get();\n            }\n          };\n        }\n        final Input input = (Input) clones[0];\n        input._pos = input._len * t / _trainers.length;\n        _trainers[t] = new Base(clones);\n        final Base trainer = _trainers[t];\n\n        _threads[t] = new Thread(\"H2O Trainer \" + t) {\n          @Override public void run() {\n            for( long i = 0; _stepsPerThread == 0 || i < _stepsPerThread; i++ ) {\n              CyclicBarrier b = _suspend;\n              if( b == DONE )\n                break;\n              if( Job.cancelled(job) )\n                break;\n              if( b != null ) {\n                try {\n                  b.await();\n                  _resume.await();\n                } catch( Exception e ) {\n                  throw new RuntimeException(e);\n                }\n              }\n              trainer.step();\n              input.move();\n              _processed.incrementAndGet();\n            }\n          }\n        };\n      }\n      Log.info(\"Started \" + _trainers.length + \" neural network trainers\");\n    }","id":48026,"modified_method":"public Threaded(Layer[] ls, double epochs, final Key job) {\n      final int num_threads = Runtime.getRuntime().availableProcessors();\n      _trainers = new Base[num_threads];\n      _threads = new Thread[num_threads];\n      _stepsPerThread = (long) (epochs * ((Input) ls[0])._len / num_threads);\n\n      System.out.println(\"Starting \" + num_threads + \" threads.\");\n      for( int t = 0; t < num_threads; t++ ) {\n        Layer[] clones = new Layer[ls.length];\n        for( int y = 0; y < clones.length; y++ )\n          clones[y] = ls[y].clone();\n        for( int y = 0; y < clones.length; y++ ) {\n          clones[y].init(clones, y, false, 0);\n          clones[y]._training = new Training() {\n            @Override long processed() {\n              return _processed.get();\n            }\n          };\n        }\n        final Input input = (Input) clones[0];\n        input._pos = input._len * t / num_threads;\n        _trainers[t] = new Base(clones);\n        final Base trainer = _trainers[t];\n\n        _threads[t] = new Thread(\"H2O Trainer \" + t) {\n          @Override public void run() {\n            for( long i = 0; _stepsPerThread == 0 || i < _stepsPerThread; i++ ) {\n              if( Job.cancelled(job) )\n                break;\n              trainer.step();\n              input.move();\n              _processed.incrementAndGet();\n            }\n          }\n        };\n      }\n    }","commit_id":"a28fc525bd718d70f92884173ee30cda043a6a25","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public void start( ) {\n    this.finished.set( false );\n    for ( int i = 0; i < NUM_WORKERS; i++ ) {\n      this.workers.execute( new ServiceEndpointWorker( ) );\n    }\n  }","id":48027,"modified_method":"public void start( ) {\n    if( this.finished.compareAndSet( false, true ) ) {\n      for ( int i = 0; i < NUM_WORKERS; i++ ) {\n        this.workers.execute( new ServiceEndpointWorker( ) );\n      }\n    }\n  }","commit_id":"970022055412cf1b05c0319c3f0fef7e37152d45","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void enqueue( final Request request ) {//FIXME: for now request is already wrapped in messaging state.\n    if ( this.finished.get( ) ) {\n      throw new RuntimeException( \"Endpoint is currently not operational.\" );\n    } else {\n      QueuedRequest event = new QueuedRequest( request );\n      EventRecord.caller( ServiceEndpoint.class, EventType.MSG_PENDING, this.parent.getName( ), event.getCallback( ).getClass( ).getSimpleName( ) ).info( );\n      if ( !this.filter( event ) ) {\n        try {\n          while ( !this.msgQueue.offer( event, this.offerInterval, TimeUnit.MILLISECONDS ) );\n        } catch ( final InterruptedException e ) {\n          LOG.debug( e, e );\n          Thread.currentThread( ).interrupted( );\n        }\n      }\n    }\n  }","id":48028,"modified_method":"public void enqueue( final Request request ) {//FIXME: for now request is already wrapped in messaging state.\n    if ( this.finished.get( ) ) {\n      throw new RuntimeException( \"Endpoint is currently not operational.\" );\n    } else {\n      QueuedRequest event = new QueuedRequest( request );\n      EventRecord.caller( ServiceEndpoint.class, EventType.MSG_PENDING, this.parent.getName( ), event.getCallback( ).getClass( ).getSimpleName( ) ).info( );\n      if ( !this.filter( event ) ) {\n        try {\n          while ( !this.msgQueue.offer( event, this.offerInterval, TimeUnit.MILLISECONDS ) );\n          if( LogLevels.TRACE ) {\n            Exceptions.eat( event.getRequest( ).getRequest( ).toSimpleString( ) );\n          }\n        } catch ( final InterruptedException e ) {\n          LOG.debug( e, e );\n          Thread.currentThread( ).interrupted( );\n        }\n      }\n    }\n  }","commit_id":"970022055412cf1b05c0319c3f0fef7e37152d45","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@SuppressWarnings( \"unchecked\" )\n    public void run( ) {\n      LOG.info( \"Starting message queue: \" + Thread.currentThread( ).getName( ) + \" for endpoint: \" + ServiceEndpoint.this.get( ) );\n      while ( !ServiceEndpoint.this.finished.get( ) ) {\n        try {\n          QueuedRequest event;\n          if ( ( event = ServiceEndpoint.this.msgQueue.poll( ServiceEndpoint.this.pollInterval, TimeUnit.MILLISECONDS ) ) != null ) {\n            LOG.debug( \"-> Dequeued message of type \" + event.getCallback( ).getClass( ).getSimpleName( ) );\n            final long start = System.nanoTime( );\n            event.getRequest( ).sendSync( ServiceEndpoint.this );\n            EventRecord.here( ServiceEndpointWorker.class, EventType.QUEUE, ServiceEndpoint.this.getParent( ).getName( ) )//\n            .append( event.getCallback( ).getClass( ).getSimpleName( ) )//\n            .append( EventType.QUEUE_TIME.name( ), Long.toString( start - event.getStartTime( ) ) )//\n            .append( EventType.SERVICE_TIME.name( ), Long.toString( System.currentTimeMillis( ) - start ) )//\n            .append( EventType.QUEUE_LENGTH.name( ), Long.toString( ServiceEndpoint.this.msgQueue.size( ) ) )//\n            .info( );\n          }\n        } catch ( InterruptedException e1 ) {\n          return;\n        } catch ( final ExecutionException e ) {\n          LOG.error( e.getCause( ), e.getCause( ) );\n        } catch ( final Throwable e ) {\n          LOG.error( e, e );\n        }\n      }\n      LOG.debug( \"Shutting down cluster message queue: \" + Thread.currentThread( ).getName( ) );\n    }","id":48029,"modified_method":"@SuppressWarnings( \"unchecked\" )\n    public void run( ) {\n      LOG.info( \"Starting message queue: \" + Thread.currentThread( ).getName( ) + \" for endpoint: \" + ServiceEndpoint.this.get( ) );\n      while ( !ServiceEndpoint.this.finished.get( ) ) {\n        try {\n          QueuedRequest event;\n          if ( ( event = ServiceEndpoint.this.msgQueue.poll( ServiceEndpoint.this.pollInterval, TimeUnit.MILLISECONDS ) ) != null ) {\n            EventRecord.here( ServiceEndpointWorker.class, EventType.DEQUEUE, event.getCallback( ).getClass( ).getSimpleName( ), event.getRequest( ).getRequest( ).toSimpleString( ) ).debug( );\n            final long start = System.nanoTime( );\n            event.getRequest( ).sendSync( ServiceEndpoint.this );\n            EventRecord.here( ServiceEndpointWorker.class, EventType.QUEUE, ServiceEndpoint.this.getParent( ).getName( ) )//\n            .append( event.getCallback( ).getClass( ).getSimpleName( ) )//\n            .append( EventType.QUEUE_TIME.name( ), Long.toString( start - event.getStartTime( ) ) )//\n            .append( EventType.SERVICE_TIME.name( ), Long.toString( System.currentTimeMillis( ) - start ) )//\n            .append( EventType.QUEUE_LENGTH.name( ), Long.toString( ServiceEndpoint.this.msgQueue.size( ) ) )//\n            .append( EventType.MSG_SENT.name( ), event.getRequest( ).getRequest( ).toSimpleString( ) )//\n            .info( );\n          }\n        } catch ( InterruptedException e1 ) {\n          return;\n        } catch ( final ExecutionException e ) {\n          LOG.error( e.getCause( ), e.getCause( ) );\n        } catch ( final Throwable e ) {\n          LOG.error( e, e );\n        }\n      }\n      LOG.debug( \"Shutting down cluster message queue: \" + Thread.currentThread( ).getName( ) );\n    }","commit_id":"970022055412cf1b05c0319c3f0fef7e37152d45","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@SuppressWarnings( \"unchecked\" )\n    public void run( ) {\n      LOG.info( \"Starting message queue: \" + Thread.currentThread( ).getName( ) + \" for endpoint: \" + ServiceEndpoint.this.get( ) );\n      while ( !ServiceEndpoint.this.finished.get( ) ) {\n        try {\n          QueuedRequest event;\n          if ( ( event = ServiceEndpoint.this.msgQueue.poll( ServiceEndpoint.this.pollInterval, TimeUnit.MILLISECONDS ) ) != null ) {\n            LOG.debug( \"-> Dequeued message of type \" + event.getCallback( ).getClass( ).getSimpleName( ) );\n            final long start = System.nanoTime( );\n            event.getRequest( ).sendSync( ServiceEndpoint.this );\n            EventRecord.here( ServiceEndpointWorker.class, EventType.QUEUE, ServiceEndpoint.this.getParent( ).getName( ) )//\n            .append( event.getCallback( ).getClass( ).getSimpleName( ) )//\n            .append( EventType.QUEUE_TIME.name( ), Long.toString( start - event.getStartTime( ) ) )//\n            .append( EventType.SERVICE_TIME.name( ), Long.toString( System.currentTimeMillis( ) - start ) )//\n            .append( EventType.QUEUE_LENGTH.name( ), Long.toString( ServiceEndpoint.this.msgQueue.size( ) ) )//\n            .info( );\n          }\n        } catch ( InterruptedException e1 ) {\n          return;\n        } catch ( final ExecutionException e ) {\n          LOG.error( e.getCause( ), e.getCause( ) );\n        } catch ( final Throwable e ) {\n          LOG.error( e, e );\n        }\n      }\n      LOG.debug( \"Shutting down cluster message queue: \" + Thread.currentThread( ).getName( ) );\n    }","id":48030,"modified_method":"@SuppressWarnings( \"unchecked\" )\n    public void run( ) {\n      LOG.info( \"Starting message queue: \" + Thread.currentThread( ).getName( ) + \" for endpoint: \" + ServiceEndpoint.this.get( ) );\n      while ( !ServiceEndpoint.this.finished.get( ) ) {\n        try {\n          QueuedRequest event;\n          if ( ( event = ServiceEndpoint.this.msgQueue.poll( ServiceEndpoint.this.pollInterval, TimeUnit.MILLISECONDS ) ) != null ) {\n            EventRecord.here( ServiceEndpointWorker.class, EventType.DEQUEUE, event.getCallback( ).getClass( ).getSimpleName( ), event.getRequest( ).getRequest( ).toSimpleString( ) ).debug( );\n            final long start = System.nanoTime( );\n            event.getRequest( ).sendSync( ServiceEndpoint.this );\n            EventRecord.here( ServiceEndpointWorker.class, EventType.QUEUE, ServiceEndpoint.this.getParent( ).getName( ) )//\n            .append( event.getCallback( ).getClass( ).getSimpleName( ) )//\n            .append( EventType.QUEUE_TIME.name( ), Long.toString( start - event.getStartTime( ) ) )//\n            .append( EventType.SERVICE_TIME.name( ), Long.toString( System.currentTimeMillis( ) - start ) )//\n            .append( EventType.QUEUE_LENGTH.name( ), Long.toString( ServiceEndpoint.this.msgQueue.size( ) ) )//\n            .append( EventType.MSG_SENT.name( ), event.getRequest( ).getRequest( ).toSimpleString( ) )//\n            .info( );\n          }\n        } catch ( InterruptedException e1 ) {\n          return;\n        } catch ( final ExecutionException e ) {\n          LOG.error( e.getCause( ), e.getCause( ) );\n        } catch ( final Throwable e ) {\n          LOG.error( e, e );\n        }\n      }\n      LOG.debug( \"Shutting down cluster message queue: \" + Thread.currentThread( ).getName( ) );\n    }","commit_id":"b63d2dcc5b2a659231142becb19cd00e3aa330fc","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void start( ) {\n    this.finished.set( false );\n    for ( int i = 0; i < NUM_WORKERS; i++ ) {\n      this.workers.execute( new ServiceEndpointWorker( ) );\n    }\n  }","id":48031,"modified_method":"public void start( ) {\n    if( this.finished.compareAndSet( false, true ) ) {\n      for ( int i = 0; i < NUM_WORKERS; i++ ) {\n        this.workers.execute( new ServiceEndpointWorker( ) );\n      }\n    }\n  }","commit_id":"b63d2dcc5b2a659231142becb19cd00e3aa330fc","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void enqueue( final Request request ) {//FIXME: for now request is already wrapped in messaging state.\n    if ( this.finished.get( ) ) {\n      throw new RuntimeException( \"Endpoint is currently not operational.\" );\n    } else {\n      QueuedRequest event = new QueuedRequest( request );\n      EventRecord.caller( ServiceEndpoint.class, EventType.MSG_PENDING, this.parent.getName( ), event.getCallback( ).getClass( ).getSimpleName( ) ).info( );\n      if ( !this.filter( event ) ) {\n        try {\n          while ( !this.msgQueue.offer( event, this.offerInterval, TimeUnit.MILLISECONDS ) );\n        } catch ( final InterruptedException e ) {\n          LOG.debug( e, e );\n          Thread.currentThread( ).interrupted( );\n        }\n      }\n    }\n  }","id":48032,"modified_method":"public void enqueue( final Request request ) {//FIXME: for now request is already wrapped in messaging state.\n    if ( this.finished.get( ) ) {\n      throw new RuntimeException( \"Endpoint is currently not operational.\" );\n    } else {\n      QueuedRequest event = new QueuedRequest( request );\n      EventRecord.caller( ServiceEndpoint.class, EventType.MSG_PENDING, this.parent.getName( ), event.getCallback( ).getClass( ).getSimpleName( ) ).info( );\n      if ( !this.filter( event ) ) {\n        try {\n          while ( !this.msgQueue.offer( event, this.offerInterval, TimeUnit.MILLISECONDS ) );\n          if( LogLevels.TRACE ) {\n            Exceptions.eat( event.getRequest( ).getRequest( ).toSimpleString( ) );\n          }\n        } catch ( final InterruptedException e ) {\n          LOG.debug( e, e );\n          Thread.currentThread( ).interrupted( );\n        }\n      }\n    }\n  }","commit_id":"b63d2dcc5b2a659231142becb19cd00e3aa330fc","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n     * Constructs this data source.\n     *\n     * @throws InstantiationException if the data source couldn't be\n     * instantiated\n     */\n    public LuceneDataSource( Config config,  IndexStore indexStore, FileSystemAbstraction fileSystemAbstraction, XaFactory xaFactory)\n    {\n        super( DEFAULT_BRANCH_ID, DEFAULT_NAME );\n        indexSearchers = new IndexSearcherClockCache( config.getInteger( Configuration.lucene_searcher_cache_size ) );\n        indexWriters = new IndexWriterClockCache( config.getInteger( Configuration.lucene_writer_cache_size ) );\n        caching = new Cache();\n        String storeDir = config.get( Configuration.store_dir );\n        this.baseStorePath = getStoreDir( storeDir ).first();\n        cleanWriteLocks( baseStorePath );\n        this.indexStore = indexStore;\n        boolean allowUpgrade = config.getBoolean( Configuration.allow_store_upgrade );\n        this.providerStore = newIndexStore( storeDir, fileSystemAbstraction, allowUpgrade );\n        this.typeCache = new IndexTypeCache( indexStore );\n        boolean isReadOnly = config.getBoolean( Configuration.read_only );\n        this.directoryGetter = config.getBoolean( Configuration.ephemeral ) ? DirectoryGetter.MEMORY : DirectoryGetter.FS;\n\n        nodeEntityType = new EntityType()\n        {\n            public Document newDocument( Object entityId )\n            {\n                return IndexType.newBaseDocument( (Long) entityId );\n            }\n\n            public Class<? extends PropertyContainer> getType()\n            {\n                return Node.class;\n            }\n        };\n        relationshipEntityType = new EntityType()\n        {\n            public Document newDocument( Object entityId )\n            {\n                RelationshipId relId = (RelationshipId) entityId;\n                Document doc = IndexType.newBaseDocument( relId.id );\n                doc.add( new Field( LuceneIndex.KEY_START_NODE_ID, \"\" + relId.startNode,\n                        Store.YES, org.apache.lucene.document.Field.Index.NOT_ANALYZED ) );\n                doc.add( new Field( LuceneIndex.KEY_END_NODE_ID, \"\" + relId.endNode,\n                        Store.YES, org.apache.lucene.document.Field.Index.NOT_ANALYZED ) );\n                return doc;\n            }\n\n            public Class<? extends PropertyContainer> getType()\n            {\n                return Relationship.class;\n            }\n        };\n\n        XaCommandFactory cf = new LuceneCommandFactory();\n        XaTransactionFactory tf = new LuceneTransactionFactory();\n        xaContainer = xaFactory.newXaContainer(this, this.baseStorePath + File.separator + \"lucene.log\", cf, tf, null, null );\n\n        if ( !isReadOnly )\n        {\n            try\n            {\n                xaContainer.openLogicalLog();\n            }\n            catch ( IOException e )\n            {\n                throw new RuntimeException( \"Unable to open lucene log in \" +\n                        this.baseStorePath, e );\n            }\n\n            setKeepLogicalLogsIfSpecified( config.getBoolean( new GraphDatabaseSetting.BooleanSetting( \"online_backup_enabled\") ) ? \"true\" : config.get( Configuration.keep_logical_logs ), DEFAULT_NAME );\n            setLogicalLogAtCreationTime( xaContainer.getLogicalLog() );\n        }\n    }","id":48033,"modified_method":"/**\n     * Constructs this data source.\n     *\n     * @throws InstantiationException if the data source couldn't be\n     * instantiated\n     */\n    public LuceneDataSource( Config config,  IndexStore indexStore, FileSystemAbstraction fileSystemAbstraction, XaFactory xaFactory)\n    {\n        super( DEFAULT_BRANCH_ID, DEFAULT_NAME );\n        indexSearchers = new IndexSearcherLruCache( config.getInteger( Configuration.lucene_searcher_cache_size ));\n        indexWriters = new IndexWriterLruCache( config.getInteger( Configuration.lucene_writer_cache_size ));\n        caching = new Cache();\n        String storeDir = config.get( Configuration.store_dir );\n        this.baseStorePath = getStoreDir( storeDir ).first();\n        cleanWriteLocks( baseStorePath );\n        this.indexStore = indexStore;\n        boolean allowUpgrade = config.getBoolean( Configuration.allow_store_upgrade );\n        this.providerStore = newIndexStore( storeDir, fileSystemAbstraction, allowUpgrade );\n        this.typeCache = new IndexTypeCache( indexStore );\n        boolean isReadOnly = config.getBoolean( Configuration.read_only );\n        this.directoryGetter = config.getBoolean( Configuration.ephemeral ) ? DirectoryGetter.MEMORY : DirectoryGetter.FS;\n\n        nodeEntityType = new EntityType()\n        {\n            public Document newDocument( Object entityId )\n            {\n                return IndexType.newBaseDocument( (Long) entityId );\n            }\n\n            public Class<? extends PropertyContainer> getType()\n            {\n                return Node.class;\n            }\n        };\n        relationshipEntityType = new EntityType()\n        {\n            public Document newDocument( Object entityId )\n            {\n                RelationshipId relId = (RelationshipId) entityId;\n                Document doc = IndexType.newBaseDocument( relId.id );\n                doc.add( new Field( LuceneIndex.KEY_START_NODE_ID, \"\" + relId.startNode,\n                        Store.YES, org.apache.lucene.document.Field.Index.NOT_ANALYZED ) );\n                doc.add( new Field( LuceneIndex.KEY_END_NODE_ID, \"\" + relId.endNode,\n                        Store.YES, org.apache.lucene.document.Field.Index.NOT_ANALYZED ) );\n                return doc;\n            }\n\n            public Class<? extends PropertyContainer> getType()\n            {\n                return Relationship.class;\n            }\n        };\n\n        XaCommandFactory cf = new LuceneCommandFactory();\n        XaTransactionFactory tf = new LuceneTransactionFactory();\n        xaContainer = xaFactory.newXaContainer(this, this.baseStorePath + File.separator + \"lucene.log\", cf, tf, null, null );\n\n        if ( !isReadOnly )\n        {\n            try\n            {\n                xaContainer.openLogicalLog();\n            }\n            catch ( IOException e )\n            {\n                throw new RuntimeException( \"Unable to open lucene log in \" +\n                        this.baseStorePath, e );\n            }\n\n            setKeepLogicalLogsIfSpecified( config.getBoolean( new GraphDatabaseSetting.BooleanSetting( \"online_backup_enabled\") ) ? \"true\" : config.get( Configuration.keep_logical_logs ), DEFAULT_NAME );\n            setLogicalLogAtCreationTime( xaContainer.getLogicalLog() );\n        }\n    }","commit_id":"615dbf1181eaba6406a2068e33bb7bbba33202d3","url":"https://github.com/neo4j/neo4j"},{"original_method":"IndexSearcherRef getIndexSearcher( IndexIdentifier identifier, boolean incRef )\n    {\n        Pair<IndexSearcherRef, AtomicBoolean> searcher = indexSearchers.get( identifier );\n        if ( searcher == null )\n        {\n            /*\n             * Double checked locking here. If we don't get a reference we need to create. But\n             * we need to lock to avoid double instantiations and we have to recheck no one\n             * created the stuff while we were waiting for the lock.\n             */\n            searcher = synchGetIndexSearcher( identifier, incRef );\n        }\n        else\n        {\n            if ( searcher.other().get() )\n            {\n                synchronized ( searcher )\n                {\n                    if ( searcher.other().get() )\n                    {\n                        IndexWriter writer = getIndexWriter( identifier );\n                        searcher = refreshSearcher( searcher, writer );\n                        if ( searcher != null )\n                        {\n                            indexSearchers.put( identifier, searcher );\n                        }\n                        searcher.other().set( false );\n                    }\n                }\n            }\n        }\n        if ( incRef )\n        {\n            searcher.first().incRef();\n        }\n        return searcher.first();\n    }","id":48034,"modified_method":"synchronized IndexSearcherRef getIndexSearcher( IndexIdentifier identifier, boolean incRef )\n    {\n        try\n        {\n            Pair<IndexSearcherRef, AtomicBoolean> searcher = indexSearchers.get( identifier );\n            IndexWriter writer = getIndexWriter( identifier );\n            if ( searcher == null )\n            {\n                IndexReader reader = IndexReader.open( writer, true );\n                IndexSearcher indexSearcher = new IndexSearcher( reader );\n                searcher = Pair.of( new IndexSearcherRef( identifier, indexSearcher ), new AtomicBoolean() );\n                indexSearchers.put( identifier, searcher );\n            }\n            else\n            {\n                if ( searcher.other().compareAndSet( true, false ) )\n                {\n                    searcher = refreshSearcher( searcher, writer );\n                    if ( searcher != null )\n                    {\n                        indexSearchers.put( identifier, searcher );\n                    }\n                }\n            }\n            if ( incRef )\n            {\n                searcher.first().incRef();\n            }\n            return searcher.first();\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"615dbf1181eaba6406a2068e33bb7bbba33202d3","url":"https://github.com/neo4j/neo4j"},{"original_method":"void invalidateIndexSearcher( IndexIdentifier identifier )\n    {\n        Pair<IndexSearcherRef, AtomicBoolean> searcher = indexSearchers.get( identifier );\n        if ( searcher != null )\n        {\n            synchronized ( searcher )\n            {\n                searcher.other().set( true );\n            }\n        }\n    }","id":48035,"modified_method":"synchronized void invalidateIndexSearcher( IndexIdentifier identifier )\n    {\n        Pair<IndexSearcherRef, AtomicBoolean> searcher = indexSearchers.get( identifier );\n        if ( searcher != null )\n        {\n            searcher.other().set( true );\n        }\n    }","commit_id":"615dbf1181eaba6406a2068e33bb7bbba33202d3","url":"https://github.com/neo4j/neo4j"},{"original_method":"IndexWriter getIndexWriter( IndexIdentifier identifier )\n    {\n        if ( closed ) throw new IllegalStateException( \"Index has been shut down\" );\n\n        IndexWriter writer = indexWriters.get( identifier );\n        if ( writer != null )\n        {\n            return writer;\n        }\n        else\n        {\n            /*\n             * Double checked locking, check out the reader getter.\n             */\n            return synchGetIndexWriter( identifier );\n        }\n    }","id":48036,"modified_method":"synchronized IndexWriter getIndexWriter( IndexIdentifier identifier )\n    {\n        if ( closed ) throw new IllegalStateException( \"Index has been shut down\" );\n\n        IndexWriter writer = indexWriters.get( identifier );\n        if ( writer != null )\n        {\n            return writer;\n        }\n\n        try\n        {\n            Directory dir = directoryGetter.getDirectory( baseStorePath, identifier ); //getDirectory( baseStorePath, identifier );\n            directoryExists( dir );\n            IndexType type = getType( identifier );\n            IndexWriterConfig writerConfig = new IndexWriterConfig( LUCENE_VERSION, type.analyzer );\n            writerConfig.setIndexDeletionPolicy( new MultipleBackupDeletionPolicy() );\n            Similarity similarity = type.getSimilarity();\n            if ( similarity != null )\n            {\n                writerConfig.setSimilarity( similarity );\n            }\n            IndexWriter indexWriter = new IndexWriter( dir, writerConfig );\n\n            // TODO We should tamper with this value and see how it affects the\n            // general performance. Lucene docs says rather <10 for mixed\n            // reads/writes\n//            writer.setMergeFactor( 8 );\n\n            indexWriters.put( identifier, indexWriter );\n            return indexWriter;\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"615dbf1181eaba6406a2068e33bb7bbba33202d3","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n  public void block( ) {\n    LOG.info( \"HostManager: blocked\" );\n  }","id":48037,"modified_method":"@Override\n  public void block( ) {\n    LOG.debug( \"HostManager: blocked\" );\n  }","commit_id":"634dadabb7b72253e65ac2f513ba79e65a3035d1","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n  public void receive( Message msg ) {\n    View view = this.currentView.getReference( );\n    if( view != null ) {\n      LOG.debug( msg.getObject( ) + \" [\" + msg.getSrc( ) + \"]\" );\n      Host recvHost = ( Host ) msg.getObject( );\n      LOG.debug( \"Received updated host information: \" + recvHost );\n      Host hostEntry = Hosts.updateHost( view, recvHost );\n      if ( !Bootstrap.isFinished( ) ) {\n        if ( hostEntry.hasDatabase( ) && !Bootstrap.isCloudController( ) ) {\n          for ( InetAddress addr : recvHost.getHostAddresses( ) ) {\n            if ( this.setupCloudLocals( addr ) ) {\n              break;\n            }\n          }\n        } else if ( Bootstrap.isCloudController( ) ) {\n          this.currentView.set( this.currentView.getReference( ), false );\n        }\n      }\n    }\n  }","id":48038,"modified_method":"@Override\n  public void receive( Message msg ) {\n    View view = this.currentView.getReference( );\n    if( view != null ) {\n      LOG.debug( msg.getObject( ) + \" [\" + msg.getSrc( ) + \"]\" );\n      Host recvHost = ( Host ) msg.getObject( );\n      if ( !Bootstrap.isFinished( ) ) {\n        if ( hostEntry.hasDatabase( ) && !Bootstrap.isCloudController( ) ) {\n          for ( InetAddress addr : recvHost.getHostAddresses( ) ) {\n            if ( this.setupCloudLocals( addr ) ) {\n              break;\n            }\n          }\n        } else if ( Bootstrap.isCloudController( ) ) {\n          this.currentView.set( this.currentView.getReference( ), false );\n        }\n      }\n      LOG.debug( \"Received updated host information: \" + recvHost );\n      Host hostEntry = Hosts.updateHost( view, recvHost );\n    }\n  }","commit_id":"634dadabb7b72253e65ac2f513ba79e65a3035d1","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private HostManager( ) {\n    ListenerRegistry.getInstance( ).register( ClockTick.class, new HostStateMonitor( ) );\n    this.membershipChannel = HostManager.buildChannel( );\n    this.membershipChannel.setReceiver( this );\n    this.membershipGroupName = SystemIds.membershipGroupName( );//TODO:GRZE:RELEASE make cached\n    try {\n      LOG.info( \"Starting membership channel... \" );\n      this.membershipChannel.connect( this.membershipGroupName );\n      this.physicalAddress = ( PhysicalAddress ) this.membershipChannel.downcall( new org.jgroups.Event( org.jgroups.Event.GET_PHYSICAL_ADDRESS, this.membershipChannel.getAddress( ) ) );\n      LOG.info( \"Started membership channel: \" + this.membershipGroupName );\n    } catch ( ChannelException ex ) {\n      LOG.fatal( ex, ex );\n      throw BootstrapException.throwFatal( \"Failed to connect membership channel because of \" + ex.getMessage( ), ex );\n    }\n    ListenerRegistry.getInstance( ).register( ClockTick.class, this );\n  }","id":48039,"modified_method":"private HostManager( ) {\n    this.membershipChannel = HostManager.buildChannel( );\n    this.membershipChannel.setReceiver( this );\n    this.membershipGroupName = SystemIds.membershipGroupName( );//TODO:GRZE:RELEASE make cached\n    try {\n      LOG.info( \"Starting membership channel... \" );\n      this.membershipChannel.connect( this.membershipGroupName );\n      this.physicalAddress = ( PhysicalAddress ) this.membershipChannel.downcall( new org.jgroups.Event( org.jgroups.Event.GET_PHYSICAL_ADDRESS, this.membershipChannel.getAddress( ) ) );\n      LOG.info( \"Started membership channel: \" + this.membershipGroupName );\n    } catch ( ChannelException ex ) {\n      LOG.fatal( ex, ex );\n      throw BootstrapException.throwFatal( \"Failed to connect membership channel because of \" + ex.getMessage( ), ex );\n    }\n    ListenerRegistry.getInstance( ).register( ClockTick.class, new HostStateMonitor( ) );\n    ListenerRegistry.getInstance( ).register( ClockTick.class, this );\n  }","commit_id":"634dadabb7b72253e65ac2f513ba79e65a3035d1","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n  public void unblock( ) {\n    LOG.info( \"HostManager: unblocked\" );\n  }","id":48040,"modified_method":"@Override\n  public void unblock( ) {\n    LOG.debug( \"HostManager: unblocked\" );\n  }","commit_id":"634dadabb7b72253e65ac2f513ba79e65a3035d1","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n  public void viewAccepted( final View newView ) {\n    if ( this.currentView.compareAndSet( null, newView, true, true ) ) {\n      LOG.info( \"Receiving initial view...\" );\n      this.currentView.set( newView, !Bootstrap.isCloudController( ) );\n    } else if ( this.currentView.compareAndSet( this.currentView.getReference( ), newView, true, true ) ) {\n      LOG.info( \"Receiving view.  Still waiting for database...\" );\n    } else {\n      this.currentView.set( newView, false );\n    }\n    LOG.info( \"-> view: \" + this.currentView.getReference( ) );\n    LOG.info( \"-> mark: \" + this.currentView.isMarked( ) );\n    if ( !Bootstrap.isCloudController( ) ) {\n      HostManager.this.broadcastAddresses( );\n    }\n  }","id":48041,"modified_method":"@Override\n  public void viewAccepted( final View newView ) {\n    if ( this.currentView.compareAndSet( null, newView, true, !Bootstrap.isCloudController( ) ) ) {\n      LOG.info( \"Receiving initial view...\" );\n    } else if ( this.currentView.compareAndSet( this.currentView.getReference( ), newView, true, true ) ) {\n      LOG.info( \"Receiving view.  Still waiting for database...\" );\n    } else {\n      this.currentView.set( newView, false );\n    }\n    LOG.info( \"-> view: \" + this.currentView.getReference( ) );\n    LOG.info( \"-> mark: \" + this.currentView.isMarked( ) );\n    if ( !Bootstrap.isCloudController( ) ) {\n      HostManager.this.broadcastAddresses( );\n    }\n  }","commit_id":"634dadabb7b72253e65ac2f513ba79e65a3035d1","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static Host updateHost( View currentView, Host updatedHost ) {\n    synchronized ( Hosts.class ) {\n      List<Address> currentMembers = Lists.newArrayList( currentView.getMembers( ) );\n      Host entry = null;\n      if ( hostMap.containsKey( updatedHost.getGroupsId( ) ) ) {\n        entry = hostMap.get( updatedHost.getGroupsId( ) );\n        entry.update( currentView.getViewId( ), updatedHost.hasDatabase( ), updatedHost.getHostAddresses( ) );\n      } else {\n        Component empyrean = Components.lookup( Empyrean.class );\n        ComponentId empyreanId = empyrean.getComponentId( );\n        for( InetAddress addr : updatedHost.getHostAddresses( ) ) {\n          ServiceConfiguration ephemeralConfig = ServiceConfigurations.createEphemeral( empyrean, addr );\n          if( !empyrean.hasService( ephemeralConfig ) ) {\n            try {\n              empyrean.initRemoteService( addr );\n              empyrean.loadService( ephemeralConfig ).get();\n            } catch ( ServiceRegistrationException ex ) {\n              LOG.error( ex , ex );\n            } catch ( ExecutionException ex ) {\n              LOG.error( ex , ex );\n            } catch ( InterruptedException ex ) {\n              LOG.error( ex , ex );\n            }\n          }\n          ServiceConfiguration config = empyrean.lookupService( ephemeralConfig ).getServiceConfiguration( );\n          entry = new Host( currentView.getViewId( ), updatedHost.getGroupsId( ), updatedHost.hasDatabase( ), updatedHost.getHostAddresses( ), config );\n          Host temp = hostMap.putIfAbsent( entry.getGroupsId( ), entry );\n          entry = ( temp != null ) ? temp : entry;\n          Mbeans.register( entry );\n        }\n      }\n      /** determine hosts to remove in this view **/\n//      List<Address> removeMembers = Lists.newArrayList( hostMap.keySet( ) );\n//      if ( removeMembers.removeAll( currentMembers ) ) {\n//        for ( Address addr : removeMembers ) {\n//          Host removedHost = hostMap.remove( addr );\n//          LOG.info( \"Removing host: \" + removedHost );\n//        }\n//      }\n      LOG.debug( \"Current host entries: \" );\n      for ( Host host : hostMap.values( ) ) {\n        LOG.debug( \"-> \" + host );\n      }\n      return entry;\n    }\n  }","id":48042,"modified_method":"public static Host updateHost( View currentView, Host updatedHost ) {\n    synchronized ( Hosts.class ) {\n      List<Address> currentMembers = Lists.newArrayList( currentView.getMembers( ) );\n      Host entry = null;\n      if ( hostMap.containsKey( updatedHost.getGroupsId( ) ) ) {\n        entry = hostMap.get( updatedHost.getGroupsId( ) );\n        entry.update( currentView.getViewId( ), updatedHost.hasDatabase( ), updatedHost.getHostAddresses( ) );\n      } else {\n        Component empyrean = Components.lookup( Empyrean.class );\n        ComponentId empyreanId = empyrean.getComponentId( );\n        for( InetAddress addr : updatedHost.getHostAddresses( ) ) {\n          ServiceConfiguration ephemeralConfig = ServiceConfigurations.createEphemeral( empyrean, addr );\n          if( !empyrean.hasService( ephemeralConfig ) ) {\n            try {\n              empyrean.initRemoteService( addr );\n              empyrean.loadService( ephemeralConfig ).get();\n              ServiceConfiguration config = empyrean.lookupService( ephemeralConfig ).getServiceConfiguration( );\n              entry = new Host( currentView.getViewId( ), updatedHost.getGroupsId( ), updatedHost.hasDatabase( ), updatedHost.getHostAddresses( ), config );\n              Host temp = hostMap.putIfAbsent( entry.getGroupsId( ), entry );\n              entry = ( temp != null ) ? temp : entry;\n              Mbeans.register( entry );\n            } catch ( ServiceRegistrationException ex ) {\n              LOG.error( ex , ex );\n            } catch ( ExecutionException ex ) {\n              LOG.error( ex , ex );\n            } catch ( InterruptedException ex ) {\n              Thread.currentThread( ).interrupt( );\n              LOG.error( ex , ex );\n            }\n          }\n        }\n      }\n      /** determine hosts to remove in this view **/\n//      List<Address> removeMembers = Lists.newArrayList( hostMap.keySet( ) );\n//      if ( removeMembers.removeAll( currentMembers ) ) {\n//        for ( Address addr : removeMembers ) {\n//          Host removedHost = hostMap.remove( addr );\n//          LOG.info( \"Removing host: \" + removedHost );\n//        }\n//      }\n      LOG.debug( \"Current host entries: \" );\n      for ( Host host : hostMap.values( ) ) {\n        LOG.debug( \"-> \" + host );\n      }\n      return entry;\n    }\n  }","commit_id":"634dadabb7b72253e65ac2f513ba79e65a3035d1","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n     * Orders by the specified property name and direction\n     *\n     * @param propertyName The property name to order by\n     * @param direction Either \"asc\" for ascending or \"desc\" for descending\n     *\n     * @return A Order instance\n     */\n    public Object order(String propertyName, String direction) {\n        if(this.criteria == null)\n                throwRuntimeException( new IllegalArgumentException(\"Call to [order] with propertyName [\"+propertyName+\"]not allowed here.\"));\n        propertyName = calculatePropertyName(propertyName);\n        Order o;\n        if(direction.equals( ORDER_DESCENDING )) {\n            o = Order.desc(propertyName);\n        }\n        else {\n            o = Order.asc(propertyName);\n        }\n        this.criteria.addOrder(o);\n\n        return o;\n    }","id":48043,"modified_method":"/**\n     * Orders by the specified property name and direction\n     *\n     * @param propertyName The property name to order by\n     * @param direction Either \"asc\" for ascending or \"desc\" for descending\n     *\n     * @return A Order instance\n     */\n    public Object order(String propertyName, String direction) {\n        if(this.criteria == null)\n                throwRuntimeException( new IllegalArgumentException(\"Call to [order] with propertyName [\"+propertyName+\"]not allowed here.\"));\n        propertyName = calculatePropertyName(propertyName);\n        Order o;\n        if(direction.equals( ORDER_DESCENDING )) {\n            o = Order.desc(propertyName);\n        }\n        else {\n            o = Order.asc(propertyName);\n        }\n\t\tif (this.paginationEnabledList) {\n\t\t\torderEntries.add(o);\n\t\t} else {\n\t\t\tthis.criteria.addOrder(o);\n\t\t}\n        return o;\n    }","commit_id":"13bb5192b67ba38e86549b039fb2cfe5d8242520","url":"https://github.com/grails/grails-core"},{"original_method":"public Object invokeMethod(String name, Object obj) {\n        Object[] args = obj.getClass().isArray() ? (Object[])obj : new Object[]{obj};\n\n        \n        if(isCriteriaConstructionMethod(name, args)) {\n\n            if(this.criteria != null) {\n                throwRuntimeException( new IllegalArgumentException(\"call to [\" + name + \"] not supported here\"));\n            }\n\n\n            if (name.equals(GET_CALL)) {\n                this.uniqueResult = true;\n            }\n            else if (name.equals(SCROLL_CALL)) {\n                this.scroll = true;\n            }\n            else if (name.equals(COUNT_CALL)) {\n                this.count = true;\n            }\n            else if (name.equals(LIST_DISTINCT_CALL)) {\n                this.resultTransformer = CriteriaSpecification.DISTINCT_ROOT_ENTITY;\n            }\n\n            boolean paginationEnabledList = false;\n\n            createCriteriaInstance();\n\n            // Check for pagination params\n            if(name.equals(LIST_CALL) && args.length == 2) {\n                paginationEnabledList = true;\n                invokeClosureNode(args[1]);\n            } else {\n                invokeClosureNode(args[0]);\n            }\n\n\n           if(resultTransformer != null) {\n                this.criteria.setResultTransformer(resultTransformer);\n            }\n            Object result;\n            if(!uniqueResult) {\n                if(scroll) {\n                    result = this.criteria.scroll();\n                }\n                else if(count) {\n                    this.criteria.setProjection(Projections.rowCount());\n                    result = this.criteria.uniqueResult();\n                } else if(paginationEnabledList) {\n                    // Calculate how many results there are in total. This has been\n                    // moved to before the 'list()' invocation to avoid any \"ORDER\n                    // BY\" clause added by 'populateArgumentsForCriteria()', otherwise\n                    // an exception is thrown for non-string sort fields (GRAILS-2690).\n                    this.criteria.setFirstResult(0);\n                    this.criteria.setMaxResults(Integer.MAX_VALUE);\n                    this.criteria.setProjection(Projections.rowCount());\n                    int totalCount = ((Integer)this.criteria.uniqueResult()).intValue();\n\n                    // Drop the projection, add settings for the pagination parameters,\n                    // and then execute the query.\n                    this.criteria.setProjection(null);\n                    this.criteria.setResultTransformer(CriteriaSpecification.ROOT_ENTITY);\n                    GrailsHibernateUtil.populateArgumentsForCriteria(targetClass, this.criteria, (Map)args[0]);\n                    PagedResultList pagedRes = new PagedResultList(this.criteria.list());\n\n                    // Updated the paged results with the total number of records\n                    // calculated previously.\n                    pagedRes.setTotalCount(totalCount);\n                    result = pagedRes;\n                } else {\n                    result = this.criteria.list();\n                }\n            }\n            else {\n                result = GrailsHibernateUtil.unwrapIfProxy(this.criteria.uniqueResult());\n            }\n            if(!this.participate) {\n                this.hibernateSession.close();\n            }\n            return result;\n\n        }\n        else {\n\n            if(criteria==null) createCriteriaInstance();\n\n           MetaMethod metaMethod = getMetaClass().getMetaMethod(name, args);\n            if(metaMethod != null) {\n                 return metaMethod.invoke(this, args);\n            }\n\n            metaMethod = criteriaMetaClass.getMetaMethod(name, args);\n            if(metaMethod != null) {\n                 return metaMethod.invoke(criteria, args);\n            }\n            metaMethod = criteriaMetaClass.getMetaMethod(GrailsClassUtils.getSetterName(name), args);\n            if(metaMethod != null) {\n                 return metaMethod.invoke(criteria, args);\n            }\n           else if(args.length == 1 && args[0] instanceof Closure) {\n                if(name.equals( AND ) ||\n                        name.equals( OR ) ||\n                        name.equals( NOT ) ) {\n                    if(this.criteria == null)\n                        throwRuntimeException( new IllegalArgumentException(\"call to [\" + name + \"] not supported here\"));\n\n                    this.logicalExpressionStack.add(new LogicalExpression(name));\n                    invokeClosureNode(args[0]);\n\n                    LogicalExpression logicalExpression = logicalExpressionStack.remove(logicalExpressionStack.size()-1);\n                    addToCriteria(logicalExpression.toCriterion());\n\n                    return name;\n                } else if(name.equals( PROJECTIONS ) && args.length == 1 && (args[0] instanceof Closure)) {\n                    if(this.criteria == null)\n                        throwRuntimeException( new IllegalArgumentException(\"call to [\" + name + \"] not supported here\"));\n\n                    this.projectionList = Projections.projectionList();\n                    invokeClosureNode(args[0]);\n\n                    if(this.projectionList != null && this.projectionList.getLength() > 0) {\n                        this.criteria.setProjection(this.projectionList);\n                    }\n\n\n                    return name;\n                }\n                else if(targetBean.isReadableProperty(name.toString())) {\n                    ClassMetadata meta = sessionFactory.getClassMetadata(targetBean.getWrappedClass());\n                    Type type = meta.getPropertyType(name.toString());\n                    if (type.isAssociationType()) {\n                        String otherSideEntityName =\n                                ((AssociationType) type).getAssociatedEntityName((SessionFactoryImplementor) sessionFactory);\n                        Class oldTargetClass = targetClass;\n                        targetClass = sessionFactory.getClassMetadata(otherSideEntityName).getMappedClass(EntityMode.POJO);\n                        BeanWrapper oldTargetBean = targetBean;\n                        targetBean = new BeanWrapperImpl(BeanUtils.instantiateClass(targetClass));\n                        associationStack.add(name.toString());\n                        final String associationPath = getAssociationPath();\n                        createAliasIfNeccessary(name, associationPath);\n                        // the criteria within an association node are grouped with an implicit AND\n                        logicalExpressionStack.add(new LogicalExpression(AND));\n                        invokeClosureNode(args[0]);\n                        aliasStack.remove(aliasStack.size() - 1);\n                        if(!aliasInstanceStack.isEmpty()) {\n                            aliasInstanceStack.remove(aliasInstanceStack.size() - 1);\n                        }\n                        LogicalExpression logicalExpression = logicalExpressionStack.remove(logicalExpressionStack.size()-1);\n                        if (!logicalExpression.args.isEmpty()) {\n                            addToCriteria(logicalExpression.toCriterion());\n                        }\n                        associationStack.remove(associationStack.size()-1);\n                        targetClass = oldTargetClass;\n                        targetBean = oldTargetBean;\n                        return name;\n                    }\n                }\n            }\n            else if(args.length == 1 && args[0] != null) {\n                if(this.criteria == null)\n                    throwRuntimeException( new IllegalArgumentException(\"call to [\" + name + \"] not supported here\"));\n\n                Object value = args[0];\n                Criterion c = null;\n                if(name.equals(ID_EQUALS)) {\n                    return eq(\"id\", value);\n                }\n                else {\n\n                    if(\tname.equals( IS_NULL ) ||\n                            name.equals( IS_NOT_NULL ) ||\n                            name.equals( IS_EMPTY ) ||\n                            name.equals( IS_NOT_EMPTY )) {\n                        if(!(value instanceof String))\n                            throwRuntimeException( new IllegalArgumentException(\"call to [\" + name + \"] with value [\"+value+\"] requires a String value.\"));\n                        String propertyName = calculatePropertyName((String)value);\n                        if(name.equals( IS_NULL )) {\n                            c = Restrictions.isNull( propertyName ) ;\n                        }\n                        else if(name.equals( IS_NOT_NULL )) {\n                            c = Restrictions.isNotNull( propertyName );\n                        }\n                        else if(name.equals( IS_EMPTY )) {\n                            c = Restrictions.isEmpty( propertyName );\n                        }\n                        else if(name.equals( IS_NOT_EMPTY )) {\n                            c = Restrictions.isNotEmpty(propertyName );\n                        }\n                    }\n                }\n                if(c != null) {\n                    return addToCriteria(c);\n                }\n\n            }\n        }\n\n\n        closeSessionFollowingException();\n        throw new MissingMethodException(name, getClass(), args) ;\n    }","id":48044,"modified_method":"public Object invokeMethod(String name, Object obj) {\n        Object[] args = obj.getClass().isArray() ? (Object[])obj : new Object[]{obj};\n\n        \n        if(isCriteriaConstructionMethod(name, args)) {\n\n            if(this.criteria != null) {\n                throwRuntimeException( new IllegalArgumentException(\"call to [\" + name + \"] not supported here\"));\n            }\n\n\n            if (name.equals(GET_CALL)) {\n                this.uniqueResult = true;\n            }\n            else if (name.equals(SCROLL_CALL)) {\n                this.scroll = true;\n            }\n            else if (name.equals(COUNT_CALL)) {\n                this.count = true;\n            }\n            else if (name.equals(LIST_DISTINCT_CALL)) {\n                this.resultTransformer = CriteriaSpecification.DISTINCT_ROOT_ENTITY;\n            }\n\n            createCriteriaInstance();\n\n            // Check for pagination params\n            if(name.equals(LIST_CALL) && args.length == 2) {\n            \tpaginationEnabledList = true;\n\t\t\t\torderEntries = new ArrayList<Order>();\n                invokeClosureNode(args[1]);\n            } else {\n                invokeClosureNode(args[0]);\n            }\n\n\n           if(resultTransformer != null) {\n                this.criteria.setResultTransformer(resultTransformer);\n            }\n            Object result;\n            if(!uniqueResult) {\n                if(scroll) {\n                    result = this.criteria.scroll();\n                }\n                else if(count) {\n                    this.criteria.setProjection(Projections.rowCount());\n                    result = this.criteria.uniqueResult();\n                } else if(paginationEnabledList) {\n                    // Calculate how many results there are in total. This has been\n                    // moved to before the 'list()' invocation to avoid any \"ORDER\n                    // BY\" clause added by 'populateArgumentsForCriteria()', otherwise\n                    // an exception is thrown for non-string sort fields (GRAILS-2690).\n                    this.criteria.setFirstResult(0);\n                    this.criteria.setMaxResults(Integer.MAX_VALUE);\n                    this.criteria.setProjection(Projections.rowCount());\n                    int totalCount = ((Integer)this.criteria.uniqueResult()).intValue();\n\n                    // Drop the projection, add settings for the pagination parameters,\n                    // and then execute the query.\n                    this.criteria.setProjection(null);\n\t\t\t\t\tfor(Iterator<Order> it = orderEntries.iterator();it.hasNext();){\n\t\t\t\t\t\tthis.criteria.addOrder(it.next());\n\t\t\t\t\t}\n                    this.criteria.setResultTransformer(CriteriaSpecification.ROOT_ENTITY);\n                    GrailsHibernateUtil.populateArgumentsForCriteria(targetClass, this.criteria, (Map)args[0]);\n                    PagedResultList pagedRes = new PagedResultList(this.criteria.list());\n\n                    // Updated the paged results with the total number of records\n                    // calculated previously.\n                    pagedRes.setTotalCount(totalCount);\n                    result = pagedRes;\n                } else {\n                    result = this.criteria.list();\n                }\n            }\n            else {\n                result = this.criteria.uniqueResult();\n            }\n            if(!this.participate) {\n                this.hibernateSession.close();\n            }\n            return result;\n\n        }\n        else {\n\n            if(criteria==null) createCriteriaInstance();\n\n           MetaMethod metaMethod = getMetaClass().getMetaMethod(name, args);\n            if(metaMethod != null) {\n                 return metaMethod.invoke(this, args);\n            }\n\n            metaMethod = criteriaMetaClass.getMetaMethod(name, args);\n            if(metaMethod != null) {\n                 return metaMethod.invoke(criteria, args);\n            }\n            metaMethod = criteriaMetaClass.getMetaMethod(GrailsClassUtils.getSetterName(name), args);\n            if(metaMethod != null) {\n                 return metaMethod.invoke(criteria, args);\n            }\n           else if(args.length == 1 && args[0] instanceof Closure) {\n                if(name.equals( AND ) ||\n                        name.equals( OR ) ||\n                        name.equals( NOT ) ) {\n                    if(this.criteria == null)\n                        throwRuntimeException( new IllegalArgumentException(\"call to [\" + name + \"] not supported here\"));\n\n                    this.logicalExpressionStack.add(new LogicalExpression(name));\n                    invokeClosureNode(args[0]);\n\n                    LogicalExpression logicalExpression = logicalExpressionStack.remove(logicalExpressionStack.size()-1);\n                    addToCriteria(logicalExpression.toCriterion());\n\n                    return name;\n                } else if(name.equals( PROJECTIONS ) && args.length == 1 && (args[0] instanceof Closure)) {\n                    if(this.criteria == null)\n                        throwRuntimeException( new IllegalArgumentException(\"call to [\" + name + \"] not supported here\"));\n\n                    this.projectionList = Projections.projectionList();\n                    invokeClosureNode(args[0]);\n\n                    if(this.projectionList != null && this.projectionList.getLength() > 0) {\n                        this.criteria.setProjection(this.projectionList);\n                    }\n\n\n                    return name;\n                }\n                else if(targetBean.isReadableProperty(name.toString())) {\n                    ClassMetadata meta = sessionFactory.getClassMetadata(targetBean.getWrappedClass());\n                    Type type = meta.getPropertyType(name.toString());\n                    if (type.isAssociationType()) {\n                        String otherSideEntityName =\n                                ((AssociationType) type).getAssociatedEntityName((SessionFactoryImplementor) sessionFactory);\n                        Class oldTargetClass = targetClass;\n                        targetClass = sessionFactory.getClassMetadata(otherSideEntityName).getMappedClass(EntityMode.POJO);\n                        BeanWrapper oldTargetBean = targetBean;\n                        targetBean = new BeanWrapperImpl(BeanUtils.instantiateClass(targetClass));\n                        associationStack.add(name.toString());\n                        final String associationPath = getAssociationPath();\n                        createAliasIfNeccessary(name, associationPath);\n                        // the criteria within an association node are grouped with an implicit AND\n                        logicalExpressionStack.add(new LogicalExpression(AND));\n                        invokeClosureNode(args[0]);\n                        aliasStack.remove(aliasStack.size() - 1);\n                        if(!aliasInstanceStack.isEmpty()) {\n                            aliasInstanceStack.remove(aliasInstanceStack.size() - 1);\n                        }\n                        LogicalExpression logicalExpression = logicalExpressionStack.remove(logicalExpressionStack.size()-1);\n                        if (!logicalExpression.args.isEmpty()) {\n                            addToCriteria(logicalExpression.toCriterion());\n                        }\n                        associationStack.remove(associationStack.size()-1);\n                        targetClass = oldTargetClass;\n                        targetBean = oldTargetBean;\n                        return name;\n                    }\n                }\n            }\n            else if(args.length == 1 && args[0] != null) {\n                if(this.criteria == null)\n                    throwRuntimeException( new IllegalArgumentException(\"call to [\" + name + \"] not supported here\"));\n\n                Object value = args[0];\n                Criterion c = null;\n                if(name.equals(ID_EQUALS)) {\n                    return eq(\"id\", value);\n                }\n                else {\n\n                    if(\tname.equals( IS_NULL ) ||\n                            name.equals( IS_NOT_NULL ) ||\n                            name.equals( IS_EMPTY ) ||\n                            name.equals( IS_NOT_EMPTY )) {\n                        if(!(value instanceof String))\n                            throwRuntimeException( new IllegalArgumentException(\"call to [\" + name + \"] with value [\"+value+\"] requires a String value.\"));\n                        String propertyName = calculatePropertyName((String)value);\n                        if(name.equals( IS_NULL )) {\n                            c = Restrictions.isNull( propertyName ) ;\n                        }\n                        else if(name.equals( IS_NOT_NULL )) {\n                            c = Restrictions.isNotNull( propertyName );\n                        }\n                        else if(name.equals( IS_EMPTY )) {\n                            c = Restrictions.isEmpty( propertyName );\n                        }\n                        else if(name.equals( IS_NOT_EMPTY )) {\n                            c = Restrictions.isNotEmpty(propertyName );\n                        }\n                    }\n                }\n                if(c != null) {\n                    return addToCriteria(c);\n                }\n\n            }\n        }\n\n\n        closeSessionFollowingException();\n        throw new MissingMethodException(name, getClass(), args) ;\n    }","commit_id":"13bb5192b67ba38e86549b039fb2cfe5d8242520","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Orders by the specified property name (defaults to ascending)\n     *\n     * @param propertyName The property name to order by\n     * @return A Order instance\n     */\n    public Object order(String propertyName) {\n        if(this.criteria == null)\n                throwRuntimeException( new IllegalArgumentException(\"Call to [order] with propertyName [\"+propertyName+\"]not allowed here.\"));\n        propertyName = calculatePropertyName(propertyName);\n        Order o = Order.asc(propertyName);\n        this.criteria.addOrder(o);\n\n        return o;\n    }","id":48045,"modified_method":"/**\n     * Orders by the specified property name (defaults to ascending)\n     *\n     * @param propertyName The property name to order by\n     * @return A Order instance\n     */\n    public Object order(String propertyName) {\n        if(this.criteria == null)\n                throwRuntimeException( new IllegalArgumentException(\"Call to [order] with propertyName [\"+propertyName+\"]not allowed here.\"));\n        propertyName = calculatePropertyName(propertyName);\n        Order o = Order.asc(propertyName);\n\t\tif (this.paginationEnabledList) {\n\t\t\torderEntries.add(o);\n\t\t} else {\n\t\t\tthis.criteria.addOrder(o);\n\t\t}\n        return o;\n    }","commit_id":"13bb5192b67ba38e86549b039fb2cfe5d8242520","url":"https://github.com/grails/grails-core"},{"original_method":"protected void addOrder(\n\t\tCriteria criteria, OrderByComparator orderByComparator) {\n\n\t\tif (orderByComparator == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tString[] orderByFields = orderByComparator.getOrderByFields();\n\n\t\tfor (String orderByField : orderByFields) {\n\t\t\tOrder order = null;\n\n\t\t\tString jbpmField = _fieldMap.get(orderByField);\n\n\t\t\tif (jbpmField == null) {\n\t\t\t\tjbpmField = orderByField;\n\t\t\t}\n\n\t\t\tif (orderByComparator.isAscending()) {\n\t\t\t\torder = Order.asc(jbpmField);\n\t\t\t}\n\t\t\telse {\n\t\t\t\torder = Order.desc(jbpmField);\n\t\t\t}\n\n\t\t\tcriteria.addOrder(order);\n\t\t}\n\t}","id":48046,"modified_method":"protected void addOrder(\n\t\tCriteria criteria, OrderByComparator orderByComparator,\n\t\tString... escapeFields) {\n\n\t\tif (orderByComparator == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tString[] orderByFields = orderByComparator.getOrderByFields();\n\t\tArrays.sort(escapeFields);\n\n\t\tfor (String orderByField : orderByFields) {\n\t\t\tOrder order = null;\n\n\t\t\tString jbpmField = _fieldMap.get(orderByField);\n\n\t\t\tif (jbpmField == null) {\n\t\t\t\tjbpmField = orderByField;\n\t\t\t}\n\t\t\tif (Arrays.binarySearch(escapeFields, jbpmField) < 0) {\n\t\t\t\tif (orderByComparator.isAscending()) {\n\t\t\t\t\torder = Order.asc(jbpmField);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\torder = Order.desc(jbpmField);\n\t\t\t\t}\n\t\t\t\tcriteria.addOrder(order);\n\t\t\t}\n\t\t}\n\t}","commit_id":"2ddff7c0b2640cb4a7e29729c3fbf47d68069cc7","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void addPagination(Criteria criteria, int start, int end) {\n\t\tcriteria.setFirstResult(start);\n\t\tcriteria.setMaxResults(end - start);\n\t}","id":48047,"modified_method":"protected void addPagination(Criteria criteria, int start, int end) {\n\t\tif (start != -1 && end != -1) {\n\t\t\tcriteria.setFirstResult(start);\n\t\t\tcriteria.setMaxResults(end - start);\n\t\t}\n\t}","commit_id":"2ddff7c0b2640cb4a7e29729c3fbf47d68069cc7","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public int countTaskInstances(\n\t\tlong processInstanceId, long tokenId, String[] actorIds,\n\t\tboolean pooledActors, Boolean completed) {\n\n\t\tif ((actorIds != null) && (actorIds.length == 0)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\ttry {\n\t\t\tCriteria criteria = _session.createCriteria(TaskInstance.class);\n\n\t\t\tcriteria.setProjection(Projections.countDistinct(\"id\"));\n\n\t\t\tif (processInstanceId > 0) {\n\t\t\t\tcriteria.add(\n\t\t\t\t\tRestrictions.eq(\"processInstance.id\", processInstanceId));\n\t\t\t}\n\t\t\telse if (tokenId > 0) {\n\t\t\t\tcriteria.add(Restrictions.eq(\"token.id\", tokenId));\n\t\t\t}\n\t\t\telse if (actorIds != null) {\n\t\t\t\tif (pooledActors) {\n\t\t\t\t\tcriteria.createCriteria(\"pooledActors\");\n\t\t\t\t}\n\n\t\t\t\tcriteria.add(Restrictions.in(\"actorId\", actorIds));\n\t\t\t}\n\n\t\t\tif (completed != null) {\n\t\t\t\tif (completed.booleanValue()) {\n\t\t\t\t\tcriteria.add(Restrictions.isNotNull(\"end\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcriteria.add(Restrictions.isNull(\"end\"));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tNumber count = (Number)criteria.uniqueResult();\n\n\t\t\treturn count.intValue();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new JbpmException(e);\n\t\t}\n\t}","id":48048,"modified_method":"public int countTaskInstances(\n\t\tlong processInstanceId, long tokenId, String[] actorIds,\n\t\tboolean pooledActors, Boolean completed) {\n\n\t\tif ((actorIds != null) && (actorIds.length == 0)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\ttry {\n\t\t\tCriteria criteria = _session.createCriteria(TaskInstance.class);\n\n\t\t\tcriteria.setProjection(Projections.countDistinct(\"id\"));\n\n\t\t\tif (processInstanceId > 0) {\n\t\t\t\tcriteria.add(\n\t\t\t\t\tRestrictions.eq(\"processInstance.id\", processInstanceId));\n\t\t\t}\n\t\t\telse if (tokenId > 0) {\n\t\t\t\tcriteria.add(Restrictions.eq(\"token.id\", tokenId));\n\t\t\t}\n\t\t\telse if (actorIds != null) {\n\t\t\t\tif (pooledActors) {\n\t\t\t\t\tcriteria.createCriteria(\"pooledActors\").\n\t\t\t\t\t\tadd(Restrictions.in(\"actorId\", actorIds));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcriteria.add(Restrictions.in(\"actorId\", actorIds));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (completed != null) {\n\t\t\t\tif (completed.booleanValue()) {\n\t\t\t\t\tcriteria.add(Restrictions.isNotNull(\"end\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcriteria.add(Restrictions.isNull(\"end\"));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tNumber count = (Number)criteria.uniqueResult();\n\n\t\t\treturn count.intValue();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new JbpmException(e);\n\t\t}\n\t}","commit_id":"2ddff7c0b2640cb4a7e29729c3fbf47d68069cc7","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public List<TaskInstance> findTaskInstances(\n\t\tlong processInstanceId, long tokenId, String[] actorIds,\n\t\tboolean pooledActors, Boolean completed, int start, int end,\n\t\tOrderByComparator orderByComparator) {\n\n\t\tif ((actorIds != null) && (actorIds.length == 0)) {\n\t\t\treturn Collections.EMPTY_LIST;\n\t\t}\n\n\t\ttry {\n\t\t\tCriteria criteria = _session.createCriteria(TaskInstance.class);\n\n\t\t\tif (processInstanceId > 0) {\n\t\t\t\tcriteria.add(\n\t\t\t\t\tRestrictions.eq(\"processInstance.id\", processInstanceId));\n\t\t\t}\n\t\t\telse if (tokenId > 0) {\n\t\t\t\tcriteria.add(Restrictions.eq(\"token.id\", tokenId));\n\t\t\t}\n\t\t\telse if (actorIds != null) {\n\t\t\t\tif (pooledActors) {\n\t\t\t\t\tcriteria.createCriteria(\"pooledActors\");\n\t\t\t\t}\n\n\t\t\t\tcriteria.add(Restrictions.in(\"actorId\", actorIds));\n\t\t\t}\n\n\t\t\tif (completed != null) {\n\t\t\t\tif (completed.booleanValue()) {\n\t\t\t\t\tcriteria.add(Restrictions.isNotNull(\"end\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcriteria.add(Restrictions.isNull(\"end\"));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\taddPagination(criteria, start, end);\n\t\t\taddOrder(criteria, orderByComparator);\n\n\t\t\treturn criteria.list();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new JbpmException(e);\n\t\t}\n\t}","id":48049,"modified_method":"public List<TaskInstance> findTaskInstances(\n\t\tlong processInstanceId, long tokenId, String[] actorIds,\n\t\tboolean pooledActors, Boolean completed, int start, int end,\n\t\tOrderByComparator orderByComparator) {\n\n\t\tif ((actorIds != null) && (actorIds.length == 0)) {\n\t\t\treturn Collections.EMPTY_LIST;\n\t\t}\n\n\t\ttry {\n\t\t\tCriteria criteria = _session.createCriteria(TaskInstance.class);\n\n\t\t\tif (processInstanceId > 0) {\n\t\t\t\tcriteria.add(\n\t\t\t\t\tRestrictions.eq(\"processInstance.id\", processInstanceId));\n\t\t\t}\n\t\t\telse if (tokenId > 0) {\n\t\t\t\tcriteria.add(Restrictions.eq(\"token.id\", tokenId));\n\t\t\t}\n\t\t\telse if (actorIds != null) {\n\t\t\t\tif (pooledActors) {\n\t\t\t\t\tcriteria.createCriteria(\"pooledActors\").\n\t\t\t\t\t\tadd(Restrictions.in(\"actorId\", actorIds));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcriteria.add(Restrictions.in(\"actorId\", actorIds));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (completed != null) {\n\t\t\t\tif (completed.booleanValue()) {\n\t\t\t\t\tcriteria.add(Restrictions.isNotNull(\"end\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcriteria.add(Restrictions.isNull(\"end\"));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\taddPagination(criteria, start, end);\n\t\t\taddOrder(criteria, orderByComparator);\n\n\t\t\treturn criteria.list();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new JbpmException(e);\n\t\t}\n\t}","commit_id":"2ddff7c0b2640cb4a7e29729c3fbf47d68069cc7","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public List<ProcessDefinition> findProcessDefinitions(\n\t\tString name, boolean latest, int start, int end,\n\t\tOrderByComparator orderByComparator) {\n\n\t\ttry {\n\t\t\tCriteria criteria = _session.createCriteria(\n\t\t\t\tProcessDefinition.class);\n\n\t\t\tif (latest) {\n\t\t\t\tcriteria.setProjection(\n\t\t\t\t\tProjections.distinct(Projections.groupProperty(\"name\")));\n\n\t\t\t\tOrder order = Order.desc(\"version\");\n\n\t\t\t\tcriteria.addOrder(order);\n\t\t\t}\n\n\t\t\tif (name != null) {\n\t\t\t\tcriteria.add(Restrictions.eq(\"name\", name));\n\t\t\t}\n\n\t\t\taddPagination(criteria, start, end);\n\t\t\taddOrder(criteria, orderByComparator);\n\n\t\t\tif (latest) {\n\t\t\t\tList<String> names = criteria.list();\n\n\t\t\t\treturn findProcessDefinitions(names);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn criteria.list();\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new JbpmException(e);\n\t\t}\n\t}","id":48050,"modified_method":"public List<ProcessDefinition> findProcessDefinitions(\n\t\tString name, boolean latest, int start, int end,\n\t\tOrderByComparator orderByComparator) {\n\n\t\ttry {\n\t\t\tCriteria criteria = _session.createCriteria(\n\t\t\t\tProcessDefinition.class);\n\n\t\t\tif (latest) {\n\t\t\t\tProjectionList projectionList = Projections.projectionList();\n\t\t\t\tprojectionList.add(Projections.groupProperty(\"name\"));\n\t\t\t\tprojectionList.add(Projections.max(\"version\"));\n\t\t\t\tcriteria.setProjection(projectionList);\n\t\t\t\taddOrder(criteria, orderByComparator, \"version\");\n\t\t\t}\n\n\t\t\tif (name != null) {\n\t\t\t\tcriteria.add(Restrictions.eq(\"name\", name));\n\t\t\t\taddOrder(criteria, orderByComparator, \"name\");\n\t\t\t}\n\n\t\t\tif (latest == false && name == null) {\n\t\t\t\taddOrder(criteria, orderByComparator);\n\t\t\t}\n\n\t\t\taddPagination(criteria, start, end);\n\n\t\t\tif (latest) {\n\t\t\t\tList results = criteria.list();\n\t\t\t\tList<String> names = new ArrayList<String>(results.size());\n\t\t\t\tfor(Object result:results){\n\t\t\t\t\tObject[] values = (Object[]) result;\n\t\t\t\t\tnames.add((String) values[0]);\n\t\t\t\t}\n\t\t\t\treturn findProcessDefinitions(names);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn criteria.list();\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new JbpmException(e);\n\t\t}\n\t}","commit_id":"2ddff7c0b2640cb4a7e29729c3fbf47d68069cc7","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n  public FinishApplicationMasterResponse finishApplicationMaster(\n      FinishApplicationMasterRequest request) throws YarnRemoteException,\n      IOException {\n    FinishApplicationMasterRequestProto requestProto =\n        ((FinishApplicationMasterRequestPBImpl) request).getProto();\n    try {\n      return new FinishApplicationMasterResponsePBImpl(\n        proxy.finishApplicationMaster(null, requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48051,"modified_method":"@Override\n  public FinishApplicationMasterResponse finishApplicationMaster(\n      FinishApplicationMasterRequest request) throws YarnRemoteException,\n      IOException {\n    FinishApplicationMasterRequestProto requestProto =\n        ((FinishApplicationMasterRequestPBImpl) request).getProto();\n    try {\n      return new FinishApplicationMasterResponsePBImpl(\n        proxy.finishApplicationMaster(null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public RegisterApplicationMasterResponse registerApplicationMaster(\n      RegisterApplicationMasterRequest request) throws YarnRemoteException,\n      IOException {\n    RegisterApplicationMasterRequestProto requestProto =\n        ((RegisterApplicationMasterRequestPBImpl) request).getProto();\n    try {\n      return new RegisterApplicationMasterResponsePBImpl(\n        proxy.registerApplicationMaster(null, requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48052,"modified_method":"@Override\n  public RegisterApplicationMasterResponse registerApplicationMaster(\n      RegisterApplicationMasterRequest request) throws YarnRemoteException,\n      IOException {\n    RegisterApplicationMasterRequestProto requestProto =\n        ((RegisterApplicationMasterRequestPBImpl) request).getProto();\n    try {\n      return new RegisterApplicationMasterResponsePBImpl(\n        proxy.registerApplicationMaster(null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public AllocateResponse allocate(AllocateRequest request)\n      throws YarnRemoteException, IOException {\n    AllocateRequestProto requestProto =\n        ((AllocateRequestPBImpl) request).getProto();\n    try {\n      return new AllocateResponsePBImpl(proxy.allocate(null, requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48053,"modified_method":"@Override\n  public AllocateResponse allocate(AllocateRequest request)\n      throws YarnRemoteException, IOException {\n    AllocateRequestProto requestProto =\n        ((AllocateRequestPBImpl) request).getProto();\n    try {\n      return new AllocateResponsePBImpl(proxy.allocate(null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public KillApplicationResponse forceKillApplication(\n      KillApplicationRequest request) throws YarnRemoteException, IOException {\n    KillApplicationRequestProto requestProto =\n        ((KillApplicationRequestPBImpl) request).getProto();\n    try {\n      return new KillApplicationResponsePBImpl(proxy.forceKillApplication(null,\n        requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48054,"modified_method":"@Override\n  public KillApplicationResponse forceKillApplication(\n      KillApplicationRequest request) throws YarnRemoteException, IOException {\n    KillApplicationRequestProto requestProto =\n        ((KillApplicationRequestPBImpl) request).getProto();\n    try {\n      return new KillApplicationResponsePBImpl(proxy.forceKillApplication(null,\n        requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public GetClusterNodesResponse\n      getClusterNodes(GetClusterNodesRequest request)\n          throws YarnRemoteException, IOException {\n    GetClusterNodesRequestProto requestProto =\n        ((GetClusterNodesRequestPBImpl) request).getProto();\n    try {\n      return new GetClusterNodesResponsePBImpl(proxy.getClusterNodes(null,\n        requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48055,"modified_method":"@Override\n  public GetClusterNodesResponse\n      getClusterNodes(GetClusterNodesRequest request)\n          throws YarnRemoteException, IOException {\n    GetClusterNodesRequestProto requestProto =\n        ((GetClusterNodesRequestPBImpl) request).getProto();\n    try {\n      return new GetClusterNodesResponsePBImpl(proxy.getClusterNodes(null,\n        requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public GetDelegationTokenResponse getDelegationToken(\n      GetDelegationTokenRequest request) throws YarnRemoteException,\n      IOException {\n    GetDelegationTokenRequestProto requestProto =\n        ((GetDelegationTokenRequestPBImpl) request).getProto();\n    try {\n      return new GetDelegationTokenResponsePBImpl(proxy.getDelegationToken(\n        null, requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48056,"modified_method":"@Override\n  public GetDelegationTokenResponse getDelegationToken(\n      GetDelegationTokenRequest request) throws YarnRemoteException,\n      IOException {\n    GetDelegationTokenRequestProto requestProto =\n        ((GetDelegationTokenRequestPBImpl) request).getProto();\n    try {\n      return new GetDelegationTokenResponsePBImpl(proxy.getDelegationToken(\n        null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public GetQueueInfoResponse getQueueInfo(GetQueueInfoRequest request)\n      throws YarnRemoteException, IOException {\n    GetQueueInfoRequestProto requestProto =\n        ((GetQueueInfoRequestPBImpl) request).getProto();\n    try {\n      return new GetQueueInfoResponsePBImpl(proxy.getQueueInfo(null,\n        requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48057,"modified_method":"@Override\n  public GetQueueInfoResponse getQueueInfo(GetQueueInfoRequest request)\n      throws YarnRemoteException, IOException {\n    GetQueueInfoRequestProto requestProto =\n        ((GetQueueInfoRequestPBImpl) request).getProto();\n    try {\n      return new GetQueueInfoResponsePBImpl(proxy.getQueueInfo(null,\n        requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public GetAllApplicationsResponse getAllApplications(\n      GetAllApplicationsRequest request) throws YarnRemoteException,\n      IOException {\n    GetAllApplicationsRequestProto requestProto =\n        ((GetAllApplicationsRequestPBImpl) request).getProto();\n    try {\n      return new GetAllApplicationsResponsePBImpl(proxy.getAllApplications(\n        null, requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48058,"modified_method":"@Override\n  public GetAllApplicationsResponse getAllApplications(\n      GetAllApplicationsRequest request) throws YarnRemoteException,\n      IOException {\n    GetAllApplicationsRequestProto requestProto =\n        ((GetAllApplicationsRequestPBImpl) request).getProto();\n    try {\n      return new GetAllApplicationsResponsePBImpl(proxy.getAllApplications(\n        null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public GetApplicationReportResponse getApplicationReport(\n      GetApplicationReportRequest request) throws YarnRemoteException,\n      IOException {\n    GetApplicationReportRequestProto requestProto =\n        ((GetApplicationReportRequestPBImpl) request).getProto();\n    try {\n      return new GetApplicationReportResponsePBImpl(proxy.getApplicationReport(\n        null, requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48059,"modified_method":"@Override\n  public GetApplicationReportResponse getApplicationReport(\n      GetApplicationReportRequest request) throws YarnRemoteException,\n      IOException {\n    GetApplicationReportRequestProto requestProto =\n        ((GetApplicationReportRequestPBImpl) request).getProto();\n    try {\n      return new GetApplicationReportResponsePBImpl(proxy.getApplicationReport(\n        null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public GetNewApplicationResponse getNewApplication(\n      GetNewApplicationRequest request) throws YarnRemoteException,\n      IOException {\n    GetNewApplicationRequestProto requestProto =\n        ((GetNewApplicationRequestPBImpl) request).getProto();\n    try {\n      return new GetNewApplicationResponsePBImpl(proxy.getNewApplication(null,\n        requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48060,"modified_method":"@Override\n  public GetNewApplicationResponse getNewApplication(\n      GetNewApplicationRequest request) throws YarnRemoteException,\n      IOException {\n    GetNewApplicationRequestProto requestProto =\n        ((GetNewApplicationRequestPBImpl) request).getProto();\n    try {\n      return new GetNewApplicationResponsePBImpl(proxy.getNewApplication(null,\n        requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public SubmitApplicationResponse submitApplication(\n      SubmitApplicationRequest request) throws YarnRemoteException,\n      IOException {\n    SubmitApplicationRequestProto requestProto =\n        ((SubmitApplicationRequestPBImpl) request).getProto();\n    try {\n      return new SubmitApplicationResponsePBImpl(proxy.submitApplication(null,\n        requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48061,"modified_method":"@Override\n  public SubmitApplicationResponse submitApplication(\n      SubmitApplicationRequest request) throws YarnRemoteException,\n      IOException {\n    SubmitApplicationRequestProto requestProto =\n        ((SubmitApplicationRequestPBImpl) request).getProto();\n    try {\n      return new SubmitApplicationResponsePBImpl(proxy.submitApplication(null,\n        requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public CancelDelegationTokenResponse cancelDelegationToken(\n      CancelDelegationTokenRequest request) throws YarnRemoteException,\n      IOException {\n    CancelDelegationTokenRequestProto requestProto =\n        ((CancelDelegationTokenRequestPBImpl) request).getProto();\n    try {\n      return new CancelDelegationTokenResponsePBImpl(\n          proxy.cancelDelegationToken(null, requestProto));\n\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48062,"modified_method":"@Override\n  public CancelDelegationTokenResponse cancelDelegationToken(\n      CancelDelegationTokenRequest request) throws YarnRemoteException,\n      IOException {\n    CancelDelegationTokenRequestProto requestProto =\n        ((CancelDelegationTokenRequestPBImpl) request).getProto();\n    try {\n      return new CancelDelegationTokenResponsePBImpl(\n          proxy.cancelDelegationToken(null, requestProto));\n\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public GetQueueUserAclsInfoResponse getQueueUserAcls(\n      GetQueueUserAclsInfoRequest request) throws YarnRemoteException,\n      IOException {\n    GetQueueUserAclsInfoRequestProto requestProto =\n        ((GetQueueUserAclsInfoRequestPBImpl) request).getProto();\n    try {\n      return new GetQueueUserAclsInfoResponsePBImpl(proxy.getQueueUserAcls(\n        null, requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48063,"modified_method":"@Override\n  public GetQueueUserAclsInfoResponse getQueueUserAcls(\n      GetQueueUserAclsInfoRequest request) throws YarnRemoteException,\n      IOException {\n    GetQueueUserAclsInfoRequestProto requestProto =\n        ((GetQueueUserAclsInfoRequestPBImpl) request).getProto();\n    try {\n      return new GetQueueUserAclsInfoResponsePBImpl(proxy.getQueueUserAcls(\n        null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public GetClusterMetricsResponse getClusterMetrics(\n      GetClusterMetricsRequest request) throws YarnRemoteException,\n      IOException {\n    GetClusterMetricsRequestProto requestProto =\n        ((GetClusterMetricsRequestPBImpl) request).getProto();\n    try {\n      return new GetClusterMetricsResponsePBImpl(proxy.getClusterMetrics(null,\n        requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48064,"modified_method":"@Override\n  public GetClusterMetricsResponse getClusterMetrics(\n      GetClusterMetricsRequest request) throws YarnRemoteException,\n      IOException {\n    GetClusterMetricsRequestProto requestProto =\n        ((GetClusterMetricsRequestPBImpl) request).getProto();\n    try {\n      return new GetClusterMetricsResponsePBImpl(proxy.getClusterMetrics(null,\n        requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public RenewDelegationTokenResponse renewDelegationToken(\n      RenewDelegationTokenRequest request) throws YarnRemoteException,\n      IOException {\n    RenewDelegationTokenRequestProto requestProto = \n        ((RenewDelegationTokenRequestPBImpl) request).getProto();\n    try {\n      return new RenewDelegationTokenResponsePBImpl(proxy.renewDelegationToken(\n          null, requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48065,"modified_method":"@Override\n  public RenewDelegationTokenResponse renewDelegationToken(\n      RenewDelegationTokenRequest request) throws YarnRemoteException,\n      IOException {\n    RenewDelegationTokenRequestProto requestProto = \n        ((RenewDelegationTokenRequestPBImpl) request).getProto();\n    try {\n      return new RenewDelegationTokenResponsePBImpl(proxy.renewDelegationToken(\n          null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public StopContainerResponse stopContainer(StopContainerRequest request)\n      throws YarnRemoteException, IOException {\n    StopContainerRequestProto requestProto =\n        ((StopContainerRequestPBImpl) request).getProto();\n    try {\n      return new StopContainerResponsePBImpl(proxy.stopContainer(null,\n        requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48066,"modified_method":"@Override\n  public StopContainerResponse stopContainer(StopContainerRequest request)\n      throws YarnRemoteException, IOException {\n    StopContainerRequestProto requestProto =\n        ((StopContainerRequestPBImpl) request).getProto();\n    try {\n      return new StopContainerResponsePBImpl(proxy.stopContainer(null,\n        requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public StartContainerResponse startContainer(StartContainerRequest request)\n      throws YarnRemoteException, IOException {\n    StartContainerRequestProto requestProto =\n        ((StartContainerRequestPBImpl) request).getProto();\n    try {\n      return new StartContainerResponsePBImpl(proxy.startContainer(null,\n        requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48067,"modified_method":"@Override\n  public StartContainerResponse startContainer(StartContainerRequest request)\n      throws YarnRemoteException, IOException {\n    StartContainerRequestProto requestProto =\n        ((StartContainerRequestPBImpl) request).getProto();\n    try {\n      return new StartContainerResponsePBImpl(proxy.startContainer(null,\n        requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public GetContainerStatusResponse getContainerStatus(\n      GetContainerStatusRequest request) throws YarnRemoteException,\n      IOException {\n    GetContainerStatusRequestProto requestProto =\n        ((GetContainerStatusRequestPBImpl) request).getProto();\n    try {\n      return new GetContainerStatusResponsePBImpl(proxy.getContainerStatus(\n        null, requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48068,"modified_method":"@Override\n  public GetContainerStatusResponse getContainerStatus(\n      GetContainerStatusRequest request) throws YarnRemoteException,\n      IOException {\n    GetContainerStatusRequestProto requestProto =\n        ((GetContainerStatusRequestPBImpl) request).getProto();\n    try {\n      return new GetContainerStatusResponsePBImpl(proxy.getContainerStatus(\n        null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public LocalizerHeartbeatResponse heartbeat(LocalizerStatus status)\n    throws YarnRemoteException, IOException {\n    LocalizerStatusProto statusProto = ((LocalizerStatusPBImpl)status).getProto();\n    try {\n      return new LocalizerHeartbeatResponsePBImpl(\n          proxy.heartbeat(null, statusProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48069,"modified_method":"@Override\n  public LocalizerHeartbeatResponse heartbeat(LocalizerStatus status)\n    throws YarnRemoteException, IOException {\n    LocalizerStatusProto statusProto = ((LocalizerStatusPBImpl)status).getProto();\n    try {\n      return new LocalizerHeartbeatResponsePBImpl(\n          proxy.heartbeat(null, statusProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n  throws YarnRemoteException, IOException {\n    RefreshNodesRequestProto requestProto = \n      ((RefreshNodesRequestPBImpl)request).getProto();\n    try {\n      return new RefreshNodesResponsePBImpl(\n          proxy.refreshNodes(null, requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48070,"modified_method":"@Override\n  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n  throws YarnRemoteException, IOException {\n    RefreshNodesRequestProto requestProto = \n      ((RefreshNodesRequestPBImpl)request).getProto();\n    try {\n      return new RefreshNodesResponsePBImpl(\n          proxy.refreshNodes(null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public RefreshQueuesResponse refreshQueues(RefreshQueuesRequest request)\n      throws YarnRemoteException, IOException {\n    RefreshQueuesRequestProto requestProto = \n      ((RefreshQueuesRequestPBImpl)request).getProto();\n    try {\n      return new RefreshQueuesResponsePBImpl(\n          proxy.refreshQueues(null, requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48071,"modified_method":"@Override\n  public RefreshQueuesResponse refreshQueues(RefreshQueuesRequest request)\n      throws YarnRemoteException, IOException {\n    RefreshQueuesRequestProto requestProto = \n      ((RefreshQueuesRequestPBImpl)request).getProto();\n    try {\n      return new RefreshQueuesResponsePBImpl(\n          proxy.refreshQueues(null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public RefreshUserToGroupsMappingsResponse refreshUserToGroupsMappings(\n      RefreshUserToGroupsMappingsRequest request) throws YarnRemoteException,\n      IOException {\n    RefreshUserToGroupsMappingsRequestProto requestProto = \n      ((RefreshUserToGroupsMappingsRequestPBImpl)request).getProto();\n    try {\n      return new RefreshUserToGroupsMappingsResponsePBImpl(\n          proxy.refreshUserToGroupsMappings(null, requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48072,"modified_method":"@Override\n  public RefreshUserToGroupsMappingsResponse refreshUserToGroupsMappings(\n      RefreshUserToGroupsMappingsRequest request) throws YarnRemoteException,\n      IOException {\n    RefreshUserToGroupsMappingsRequestProto requestProto = \n      ((RefreshUserToGroupsMappingsRequestPBImpl)request).getProto();\n    try {\n      return new RefreshUserToGroupsMappingsResponsePBImpl(\n          proxy.refreshUserToGroupsMappings(null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public RefreshServiceAclsResponse refreshServiceAcls(\n      RefreshServiceAclsRequest request) throws YarnRemoteException,\n      IOException {\n    RefreshServiceAclsRequestProto requestProto = \n        ((RefreshServiceAclsRequestPBImpl)request).getProto();\n    try {\n      return new RefreshServiceAclsResponsePBImpl(proxy.refreshServiceAcls(\n          null, requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48073,"modified_method":"@Override\n  public RefreshServiceAclsResponse refreshServiceAcls(\n      RefreshServiceAclsRequest request) throws YarnRemoteException,\n      IOException {\n    RefreshServiceAclsRequestProto requestProto = \n        ((RefreshServiceAclsRequestPBImpl)request).getProto();\n    try {\n      return new RefreshServiceAclsResponsePBImpl(proxy.refreshServiceAcls(\n          null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public RefreshSuperUserGroupsConfigurationResponse refreshSuperUserGroupsConfiguration(\n      RefreshSuperUserGroupsConfigurationRequest request)\n      throws YarnRemoteException, IOException {\n    RefreshSuperUserGroupsConfigurationRequestProto requestProto = \n      ((RefreshSuperUserGroupsConfigurationRequestPBImpl)request).getProto();\n    try {\n      return new RefreshSuperUserGroupsConfigurationResponsePBImpl(\n          proxy.refreshSuperUserGroupsConfiguration(null, requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48074,"modified_method":"@Override\n  public RefreshSuperUserGroupsConfigurationResponse refreshSuperUserGroupsConfiguration(\n      RefreshSuperUserGroupsConfigurationRequest request)\n      throws YarnRemoteException, IOException {\n    RefreshSuperUserGroupsConfigurationRequestProto requestProto = \n      ((RefreshSuperUserGroupsConfigurationRequestPBImpl)request).getProto();\n    try {\n      return new RefreshSuperUserGroupsConfigurationResponsePBImpl(\n          proxy.refreshSuperUserGroupsConfiguration(null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public RefreshAdminAclsResponse refreshAdminAcls(\n      RefreshAdminAclsRequest request) throws YarnRemoteException, IOException {\n    RefreshAdminAclsRequestProto requestProto = \n      ((RefreshAdminAclsRequestPBImpl)request).getProto();\n    try {\n      return new RefreshAdminAclsResponsePBImpl(\n          proxy.refreshAdminAcls(null, requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48075,"modified_method":"@Override\n  public RefreshAdminAclsResponse refreshAdminAcls(\n      RefreshAdminAclsRequest request) throws YarnRemoteException, IOException {\n    RefreshAdminAclsRequestProto requestProto = \n      ((RefreshAdminAclsRequestPBImpl)request).getProto();\n    try {\n      return new RefreshAdminAclsResponsePBImpl(\n          proxy.refreshAdminAcls(null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Utility method that unwraps and throws appropriate exception.\n   * \n   * @param se ServiceException\n   * @throws YarnRemoteException\n   * @throws UndeclaredThrowableException\n   */\n  public static YarnRemoteException unwrapAndThrowException(ServiceException se)\n      throws UndeclaredThrowableException {\n    if (se.getCause() instanceof RemoteException) {\n      try {\n        RemoteException re = (RemoteException) se.getCause();\n        Class<?> realClass = Class.forName(re.getClassName());\n        //YarnRemoteException is not rooted as IOException.\n        //Do the explicitly check if it is YarnRemoteException\n        if (YarnRemoteException.class.isAssignableFrom(realClass)) {\n          Constructor<? extends YarnRemoteException> cn =\n              realClass.asSubclass(YarnRemoteException.class).getConstructor(\n                  String.class);\n          cn.setAccessible(true);\n          YarnRemoteException ex = cn.newInstance(re.getMessage());\n          ex.initCause(re);\n          return ex;\n        } else {\n          // TODO Fix in YARN-628.\n          throw new IOException((RemoteException) se.getCause());\n        }\n      } catch (IOException e1) {\n        throw new UndeclaredThrowableException(e1);\n      } catch (Exception ex) {\n        throw new UndeclaredThrowableException(\n            (RemoteException) se.getCause());\n      }\n    } else if (se.getCause() instanceof YarnRemoteException) {\n      return (YarnRemoteException) se.getCause();\n    } else if (se.getCause() instanceof UndeclaredThrowableException) {\n      throw (UndeclaredThrowableException) se.getCause();\n    } else {\n      throw new UndeclaredThrowableException(se);\n    }\n  }","id":48076,"modified_method":"/**\n   * Utility method that unwraps and returns appropriate exceptions.\n   * \n   * @param se\n   *          ServiceException\n   * @return An instance of the actual exception, which will be a subclass of\n   *         {@link YarnRemoteException} or {@link IOException}\n   */\n  public static Void unwrapAndThrowException(ServiceException se)\n      throws IOException, YarnRemoteException {\n    Throwable cause = se.getCause();\n    if (cause == null) {\n      // SE generated by the RPC layer itself.\n      throw new IOException(se);\n    } else {\n      if (cause instanceof RemoteException) {\n        RemoteException re = (RemoteException) cause;\n        Class<?> realClass = null;\n        try {\n          realClass = Class.forName(re.getClassName());\n        } catch (ClassNotFoundException cnf) {\n          // Assume this to be a new exception type added to YARN. This isn't\n          // absolutely correct since the RPC layer could add an exception as\n          // well.\n          throw instantiateException(YarnRemoteException.class, re);\n        }\n\n        if (YarnRemoteException.class.isAssignableFrom(realClass)) {\n          throw instantiateException(\n              realClass.asSubclass(YarnRemoteException.class), re);\n        } else if (IOException.class.isAssignableFrom(realClass)) {\n          throw instantiateException(realClass.asSubclass(IOException.class),\n              re);\n        } else {\n          throw re;\n        }\n        // RemoteException contains useful information as against the\n        // java.lang.reflect exceptions.\n\n      } else if (cause instanceof IOException) {\n        // RPC Client exception.\n        throw (IOException) cause;\n      } else {\n        // Should not be generated.\n        throw new IOException(se);\n      }\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public NodeHeartbeatResponse nodeHeartbeat(NodeHeartbeatRequest request)\n      throws YarnRemoteException, IOException {\n    NodeHeartbeatRequestProto requestProto = ((NodeHeartbeatRequestPBImpl)request).getProto();\n    try {\n      return new NodeHeartbeatResponsePBImpl(proxy.nodeHeartbeat(null, requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48077,"modified_method":"@Override\n  public NodeHeartbeatResponse nodeHeartbeat(NodeHeartbeatRequest request)\n      throws YarnRemoteException, IOException {\n    NodeHeartbeatRequestProto requestProto = ((NodeHeartbeatRequestPBImpl)request).getProto();\n    try {\n      return new NodeHeartbeatResponsePBImpl(proxy.nodeHeartbeat(null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public RegisterNodeManagerResponse registerNodeManager(\n      RegisterNodeManagerRequest request) throws YarnRemoteException,\n      IOException {\n    RegisterNodeManagerRequestProto requestProto = ((RegisterNodeManagerRequestPBImpl)request).getProto();\n    try {\n      return new RegisterNodeManagerResponsePBImpl(proxy.registerNodeManager(null, requestProto));\n    } catch (ServiceException e) {\n      throw RPCUtil.unwrapAndThrowException(e);\n    }\n  }","id":48078,"modified_method":"@Override\n  public RegisterNodeManagerResponse registerNodeManager(\n      RegisterNodeManagerRequest request) throws YarnRemoteException,\n      IOException {\n    RegisterNodeManagerRequestProto requestProto = ((RegisterNodeManagerRequestPBImpl)request).getProto();\n    try {\n      return new RegisterNodeManagerResponsePBImpl(proxy.registerNodeManager(null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testDelegationToken() throws IOException, InterruptedException,\n      YarnRemoteException {\n    \n    final YarnConfiguration conf = new YarnConfiguration();\n    conf.set(YarnConfiguration.RM_PRINCIPAL, \"testuser/localhost@apache.org\");\n\n    conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION, \"kerberos\");\n    UserGroupInformation.setConfiguration(conf);\n    \n    ResourceScheduler scheduler = createMockScheduler(conf);\n    \n    long initialInterval = 10000l;\n    long maxLifetime= 20000l;\n    long renewInterval = 10000l;\n\n    RMDelegationTokenSecretManager rmDtSecretManager = createRMDelegationTokenSecretManager(\n        initialInterval, maxLifetime, renewInterval);\n    rmDtSecretManager.startThreads();\n    LOG.info(\"Creating DelegationTokenSecretManager with initialInterval: \"\n        + initialInterval + \", maxLifetime: \" + maxLifetime\n        + \", renewInterval: \" + renewInterval);\n\n    final ClientRMService clientRMService = new ClientRMServiceForTest(conf,\n        scheduler, rmDtSecretManager);\n    clientRMService.init(conf);\n    clientRMService.start();\n\n    ClientRMProtocol clientRMWithDT = null;\n    try {\n\n      // Create a user for the renewr and fake the authentication-method\n      UserGroupInformation loggedInUser = UserGroupInformation\n          .createRemoteUser(\"testrenewer@APACHE.ORG\");\n      Assert.assertEquals(\"testrenewer\", loggedInUser.getShortUserName());\n      // Default realm is APACHE.ORG\n      loggedInUser.setAuthenticationMethod(AuthenticationMethod.KERBEROS);\n\n      \n      DelegationToken token = getDelegationToken(loggedInUser, clientRMService,\n          loggedInUser.getShortUserName());\n      long tokenFetchTime = System.currentTimeMillis();\n      LOG.info(\"Got delegation token at: \" + tokenFetchTime);\n \n      // Now try talking to RMService using the delegation token\n      clientRMWithDT = getClientRMProtocolWithDT(token,\n          clientRMService.getBindAddress(), \"loginuser1\", conf);\n\n      GetNewApplicationRequest request = Records.newRecord(GetNewApplicationRequest.class);\n      \n      try {\n        clientRMWithDT.getNewApplication(request);\n      } catch (UndeclaredThrowableException e) {\n        fail(\"Unexpected exception\" + e);\n      }\n      \n      // Renew after 50% of token age.\n      while(System.currentTimeMillis() < tokenFetchTime + initialInterval / 2) {\n        Thread.sleep(500l);\n      }\n      long nextExpTime = renewDelegationToken(loggedInUser, clientRMService, token);\n      long renewalTime = System.currentTimeMillis();\n      LOG.info(\"Renewed token at: \" + renewalTime + \", NextExpiryTime: \"\n          + nextExpTime);\n\n      // Wait for first expiry, but before renewed expiry.\n      while (System.currentTimeMillis() > tokenFetchTime + initialInterval\n          && System.currentTimeMillis() < nextExpTime) {\n        Thread.sleep(500l);\n      }\n      Thread.sleep(50l);\n      \n      // Valid token because of renewal.\n      try {\n        clientRMWithDT.getNewApplication(request);\n      } catch (UndeclaredThrowableException e) {\n        fail(\"Unexpected exception\" + e);\n      }\n      \n      // Wait for expiry.\n      while(System.currentTimeMillis() < renewalTime + renewInterval) {\n        Thread.sleep(500l);\n      }\n      Thread.sleep(50l);\n      LOG.info(\"At time: \" + System.currentTimeMillis() + \", token should be invalid\");\n      // Token should have expired.      \n      try {\n        clientRMWithDT.getNewApplication(request);\n        fail(\"Should not have succeeded with an expired token\");\n      } catch (UndeclaredThrowableException e) {\n        assertTrue(e.getCause().getMessage().contains(\"is expired\"));\n      }\n\n      // Test cancellation\n      // Stop the existing proxy, start another.\n      if (clientRMWithDT != null) {\n        RPC.stopProxy(clientRMWithDT);\n        clientRMWithDT = null;\n      }\n      token = getDelegationToken(loggedInUser, clientRMService,\n          loggedInUser.getShortUserName());\n      tokenFetchTime = System.currentTimeMillis();\n      LOG.info(\"Got delegation token at: \" + tokenFetchTime);\n \n      // Now try talking to RMService using the delegation token\n      clientRMWithDT = getClientRMProtocolWithDT(token,\n          clientRMService.getBindAddress(), \"loginuser2\", conf);\n\n      request = Records.newRecord(GetNewApplicationRequest.class);\n      \n      try {\n        clientRMWithDT.getNewApplication(request);\n      } catch (UndeclaredThrowableException e) {\n        fail(\"Unexpected exception\" + e);\n      }\n      cancelDelegationToken(loggedInUser, clientRMService, token);\n      if (clientRMWithDT != null) {\n        RPC.stopProxy(clientRMWithDT);\n        clientRMWithDT = null;\n      } \n      \n      // Creating a new connection.\n      clientRMWithDT = getClientRMProtocolWithDT(token,\n          clientRMService.getBindAddress(), \"loginuser2\", conf);\n      LOG.info(\"Cancelled delegation token at: \" + System.currentTimeMillis());\n      // Verify cancellation worked.\n      try {\n        clientRMWithDT.getNewApplication(request);\n        fail(\"Should not have succeeded with a cancelled delegation token\");\n      } catch (UndeclaredThrowableException e) {\n      }\n\n\n\n    } finally {\n      rmDtSecretManager.stopThreads();\n      // TODO PRECOMMIT Close proxies.\n      if (clientRMWithDT != null) {\n        RPC.stopProxy(clientRMWithDT);\n      }\n    }\n  }","id":48079,"modified_method":"@Test\n  public void testDelegationToken() throws IOException, InterruptedException {\n    \n    final YarnConfiguration conf = new YarnConfiguration();\n    conf.set(YarnConfiguration.RM_PRINCIPAL, \"testuser/localhost@apache.org\");\n\n    conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION, \"kerberos\");\n    UserGroupInformation.setConfiguration(conf);\n    \n    ResourceScheduler scheduler = createMockScheduler(conf);\n    \n    long initialInterval = 10000l;\n    long maxLifetime= 20000l;\n    long renewInterval = 10000l;\n\n    RMDelegationTokenSecretManager rmDtSecretManager = createRMDelegationTokenSecretManager(\n        initialInterval, maxLifetime, renewInterval);\n    rmDtSecretManager.startThreads();\n    LOG.info(\"Creating DelegationTokenSecretManager with initialInterval: \"\n        + initialInterval + \", maxLifetime: \" + maxLifetime\n        + \", renewInterval: \" + renewInterval);\n\n    final ClientRMService clientRMService = new ClientRMServiceForTest(conf,\n        scheduler, rmDtSecretManager);\n    clientRMService.init(conf);\n    clientRMService.start();\n\n    ClientRMProtocol clientRMWithDT = null;\n    try {\n\n      // Create a user for the renewr and fake the authentication-method\n      UserGroupInformation loggedInUser = UserGroupInformation\n          .createRemoteUser(\"testrenewer@APACHE.ORG\");\n      Assert.assertEquals(\"testrenewer\", loggedInUser.getShortUserName());\n      // Default realm is APACHE.ORG\n      loggedInUser.setAuthenticationMethod(AuthenticationMethod.KERBEROS);\n\n      \n      DelegationToken token = getDelegationToken(loggedInUser, clientRMService,\n          loggedInUser.getShortUserName());\n      long tokenFetchTime = System.currentTimeMillis();\n      LOG.info(\"Got delegation token at: \" + tokenFetchTime);\n \n      // Now try talking to RMService using the delegation token\n      clientRMWithDT = getClientRMProtocolWithDT(token,\n          clientRMService.getBindAddress(), \"loginuser1\", conf);\n\n      GetNewApplicationRequest request = Records.newRecord(GetNewApplicationRequest.class);\n      \n      try {\n        clientRMWithDT.getNewApplication(request);\n      } catch (IOException e) {\n        fail(\"Unexpected exception\" + e);\n      }  catch (YarnRemoteException e) {\n        fail(\"Unexpected exception\" + e);\n      }\n      \n      // Renew after 50% of token age.\n      while(System.currentTimeMillis() < tokenFetchTime + initialInterval / 2) {\n        Thread.sleep(500l);\n      }\n      long nextExpTime = renewDelegationToken(loggedInUser, clientRMService, token);\n      long renewalTime = System.currentTimeMillis();\n      LOG.info(\"Renewed token at: \" + renewalTime + \", NextExpiryTime: \"\n          + nextExpTime);\n\n      // Wait for first expiry, but before renewed expiry.\n      while (System.currentTimeMillis() > tokenFetchTime + initialInterval\n          && System.currentTimeMillis() < nextExpTime) {\n        Thread.sleep(500l);\n      }\n      Thread.sleep(50l);\n      \n      // Valid token because of renewal.\n      try {\n        clientRMWithDT.getNewApplication(request);\n      } catch (IOException e) {\n        fail(\"Unexpected exception\" + e);\n      } catch (YarnRemoteException e) {\n        fail(\"Unexpected exception\" + e);\n      }\n      \n      // Wait for expiry.\n      while(System.currentTimeMillis() < renewalTime + renewInterval) {\n        Thread.sleep(500l);\n      }\n      Thread.sleep(50l);\n      LOG.info(\"At time: \" + System.currentTimeMillis() + \", token should be invalid\");\n      // Token should have expired.      \n      try {\n        clientRMWithDT.getNewApplication(request);\n        fail(\"Should not have succeeded with an expired token\");\n      } catch (Exception e) {\n        assertEquals(InvalidToken.class.getName(), e.getClass().getName());\n        assertTrue(e.getMessage().contains(\"is expired\"));\n      } \n\n      // Test cancellation\n      // Stop the existing proxy, start another.\n      if (clientRMWithDT != null) {\n        RPC.stopProxy(clientRMWithDT);\n        clientRMWithDT = null;\n      }\n      token = getDelegationToken(loggedInUser, clientRMService,\n          loggedInUser.getShortUserName());\n      tokenFetchTime = System.currentTimeMillis();\n      LOG.info(\"Got delegation token at: \" + tokenFetchTime);\n \n      // Now try talking to RMService using the delegation token\n      clientRMWithDT = getClientRMProtocolWithDT(token,\n          clientRMService.getBindAddress(), \"loginuser2\", conf);\n\n      request = Records.newRecord(GetNewApplicationRequest.class);\n      \n      try {\n        clientRMWithDT.getNewApplication(request);\n      } catch (IOException e) {\n        fail(\"Unexpected exception\" + e);\n      } catch (YarnRemoteException e) {\n        fail(\"Unexpected exception\" + e);\n      }\n      cancelDelegationToken(loggedInUser, clientRMService, token);\n      if (clientRMWithDT != null) {\n        RPC.stopProxy(clientRMWithDT);\n        clientRMWithDT = null;\n      } \n      \n      // Creating a new connection.\n      clientRMWithDT = getClientRMProtocolWithDT(token,\n          clientRMService.getBindAddress(), \"loginuser2\", conf);\n      LOG.info(\"Cancelled delegation token at: \" + System.currentTimeMillis());\n      // Verify cancellation worked.\n      try {\n        clientRMWithDT.getNewApplication(request);\n        fail(\"Should not have succeeded with a cancelled delegation token\");\n      } catch (IOException e) {\n      } catch (YarnRemoteException e) {\n      }\n\n\n\n    } finally {\n      rmDtSecretManager.stopThreads();\n      // TODO PRECOMMIT Close proxies.\n      if (clientRMWithDT != null) {\n        RPC.stopProxy(clientRMWithDT);\n      }\n    }\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testClientTokens() throws Exception {\n\n    final Configuration conf = new Configuration();\n    conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,\n      \"kerberos\");\n    UserGroupInformation.setConfiguration(conf);\n\n    CustomNM containerManager = new CustomNM();\n    final DrainDispatcher dispatcher = new DrainDispatcher();\n\n    MockRM rm = new MockRMWithCustomAMLauncher(conf, containerManager) {\n      protected ClientRMService createClientRMService() {\n        return new ClientRMService(this.rmContext, scheduler,\n          this.rmAppManager, this.applicationACLsManager,\n          this.rmDTSecretManager);\n      };\n\n      @Override\n      protected Dispatcher createDispatcher() {\n        return dispatcher;\n      }\n\n      @Override\n      protected void doSecureLogin() throws IOException {\n      }\n    };\n    rm.start();\n\n    // Submit an app\n    RMApp app = rm.submitApp(1024);\n    dispatcher.await();\n\n    // Set up a node.\n    MockNM nm1 = rm.registerNode(\"localhost:1234\", 3072);\n    nm1.nodeHeartbeat(true);\n    dispatcher.await();\n\n    // Get the app-report.\n    GetApplicationReportRequest request =\n        Records.newRecord(GetApplicationReportRequest.class);\n    request.setApplicationId(app.getApplicationId());\n    GetApplicationReportResponse reportResponse =\n        rm.getClientRMService().getApplicationReport(request);\n    ApplicationReport appReport = reportResponse.getApplicationReport();\n    ClientToken clientToken = appReport.getClientToken();\n\n    // Wait till AM is 'launched'\n    int waitTime = 0;\n    while (containerManager.clientTokensSecret == null && waitTime++ < 20) {\n      Thread.sleep(1000);\n    }\n    Assert.assertNotNull(containerManager.clientTokensSecret);\n\n    // Start the AM with the correct shared-secret.\n    ApplicationAttemptId appAttemptId =\n        app.getAppAttempts().keySet().iterator().next();\n    Assert.assertNotNull(appAttemptId);\n    final CustomAM am =\n        new CustomAM(appAttemptId, containerManager.clientTokensSecret);\n    am.init(conf);\n    am.start();\n\n    // Now the real test!\n    // Set up clients to be able to pick up correct tokens.\n    SecurityUtil.setSecurityInfoProviders(new CustomSecurityInfo());\n\n    // Verify denial for unauthenticated user\n    try {\n      CustomProtocol client =\n          (CustomProtocol) RPC.getProxy(CustomProtocol.class, 1L, am.address,\n            conf);\n      client.ping();\n      fail(\"Access by unauthenticated user should fail!!\");\n    } catch (Exception e) {\n      Assert.assertFalse(am.pinged);\n    }\n\n    // Verify denial for a malicious user\n    UserGroupInformation ugi = UserGroupInformation.createRemoteUser(\"me\");\n    Token<ClientTokenIdentifier> token =\n        ProtoUtils.convertFromProtoFormat(clientToken, am.address);\n\n    // Malicious user, messes with appId\n    ClientTokenIdentifier maliciousID =\n        new ClientTokenIdentifier(BuilderUtils.newApplicationAttemptId(\n          BuilderUtils.newApplicationId(app.getApplicationId()\n            .getClusterTimestamp(), 42), 43));\n\n    Token<ClientTokenIdentifier> maliciousToken =\n        new Token<ClientTokenIdentifier>(maliciousID.getBytes(),\n          token.getPassword(), token.getKind(),\n          token.getService());\n    ugi.addToken(maliciousToken);\n\n    try {\n      ugi.doAs(new PrivilegedExceptionAction<Void>()  {\n        @Override\n        public Void run() throws Exception {\n          try {\n            CustomProtocol client =\n                (CustomProtocol) RPC.getProxy(CustomProtocol.class, 1L,\n                  am.address, conf);\n            client.ping();\n            fail(\"Connection initiation with illegally modified \"\n                + \"tokens is expected to fail.\");\n            return null;\n          } catch (YarnRemoteException ex) {\n            fail(\"Cannot get a YARN remote exception as \"\n                + \"it will indicate RPC success\");\n            throw ex;\n          }\n        }\n      });\n    } catch (Exception e) {\n      Assert\n        .assertEquals(java.lang.reflect.UndeclaredThrowableException.class\n          .getCanonicalName(), e.getClass().getCanonicalName());\n      Assert.assertTrue(e\n        .getCause()\n        .getMessage()\n        .contains(\n          \"DIGEST-MD5: digest response format violation. \"\n              + \"Mismatched response.\"));\n      Assert.assertFalse(am.pinged);\n    }\n\n    // Now for an authenticated user\n    ugi = UserGroupInformation.createRemoteUser(\"me\");\n    ugi.addToken(token);\n\n    ugi.doAs(new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        CustomProtocol client =\n            (CustomProtocol) RPC.getProxy(CustomProtocol.class, 1L, am.address,\n              conf);\n        client.ping();\n        Assert.assertTrue(am.pinged);\n        return null;\n      }\n    });\n  }","id":48080,"modified_method":"@Test\n  public void testClientTokens() throws Exception {\n\n    final Configuration conf = new Configuration();\n    conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,\n      \"kerberos\");\n    UserGroupInformation.setConfiguration(conf);\n\n    CustomNM containerManager = new CustomNM();\n    final DrainDispatcher dispatcher = new DrainDispatcher();\n\n    MockRM rm = new MockRMWithCustomAMLauncher(conf, containerManager) {\n      protected ClientRMService createClientRMService() {\n        return new ClientRMService(this.rmContext, scheduler,\n          this.rmAppManager, this.applicationACLsManager,\n          this.rmDTSecretManager);\n      };\n\n      @Override\n      protected Dispatcher createDispatcher() {\n        return dispatcher;\n      }\n\n      @Override\n      protected void doSecureLogin() throws IOException {\n      }\n    };\n    rm.start();\n\n    // Submit an app\n    RMApp app = rm.submitApp(1024);\n    dispatcher.await();\n\n    // Set up a node.\n    MockNM nm1 = rm.registerNode(\"localhost:1234\", 3072);\n    nm1.nodeHeartbeat(true);\n    dispatcher.await();\n\n    // Get the app-report.\n    GetApplicationReportRequest request =\n        Records.newRecord(GetApplicationReportRequest.class);\n    request.setApplicationId(app.getApplicationId());\n    GetApplicationReportResponse reportResponse =\n        rm.getClientRMService().getApplicationReport(request);\n    ApplicationReport appReport = reportResponse.getApplicationReport();\n    ClientToken clientToken = appReport.getClientToken();\n\n    // Wait till AM is 'launched'\n    int waitTime = 0;\n    while (containerManager.clientTokensSecret == null && waitTime++ < 20) {\n      Thread.sleep(1000);\n    }\n    Assert.assertNotNull(containerManager.clientTokensSecret);\n\n    // Start the AM with the correct shared-secret.\n    ApplicationAttemptId appAttemptId =\n        app.getAppAttempts().keySet().iterator().next();\n    Assert.assertNotNull(appAttemptId);\n    final CustomAM am =\n        new CustomAM(appAttemptId, containerManager.clientTokensSecret);\n    am.init(conf);\n    am.start();\n\n    // Now the real test!\n    // Set up clients to be able to pick up correct tokens.\n    SecurityUtil.setSecurityInfoProviders(new CustomSecurityInfo());\n\n    // Verify denial for unauthenticated user\n    try {\n      CustomProtocol client =\n          (CustomProtocol) RPC.getProxy(CustomProtocol.class, 1L, am.address,\n            conf);\n      client.ping();\n      fail(\"Access by unauthenticated user should fail!!\");\n    } catch (Exception e) {\n      Assert.assertFalse(am.pinged);\n    }\n\n    // Verify denial for a malicious user\n    UserGroupInformation ugi = UserGroupInformation.createRemoteUser(\"me\");\n    Token<ClientTokenIdentifier> token =\n        ProtoUtils.convertFromProtoFormat(clientToken, am.address);\n\n    // Malicious user, messes with appId\n    ClientTokenIdentifier maliciousID =\n        new ClientTokenIdentifier(BuilderUtils.newApplicationAttemptId(\n          BuilderUtils.newApplicationId(app.getApplicationId()\n            .getClusterTimestamp(), 42), 43));\n\n    Token<ClientTokenIdentifier> maliciousToken =\n        new Token<ClientTokenIdentifier>(maliciousID.getBytes(),\n          token.getPassword(), token.getKind(),\n          token.getService());\n    ugi.addToken(maliciousToken);\n\n    try {\n      ugi.doAs(new PrivilegedExceptionAction<Void>()  {\n        @Override\n        public Void run() throws Exception {\n          try {\n            CustomProtocol client =\n                (CustomProtocol) RPC.getProxy(CustomProtocol.class, 1L,\n                  am.address, conf);\n            client.ping();\n            fail(\"Connection initiation with illegally modified \"\n                + \"tokens is expected to fail.\");\n            return null;\n          } catch (YarnRemoteException ex) {\n            fail(\"Cannot get a YARN remote exception as \"\n                + \"it will indicate RPC success\");\n            throw ex;\n          }\n        }\n      });\n    } catch (Exception e) {\n      Assert.assertEquals(RemoteException.class.getName(), e.getClass()\n          .getName());\n      e = ((RemoteException)e).unwrapRemoteException();\n      Assert\n        .assertEquals(SaslException.class\n          .getCanonicalName(), e.getClass().getCanonicalName());\n      Assert.assertTrue(e\n        .getMessage()\n        .contains(\n          \"DIGEST-MD5: digest response format violation. \"\n              + \"Mismatched response.\"));\n      Assert.assertFalse(am.pinged);\n    }\n\n    // Now for an authenticated user\n    ugi = UserGroupInformation.createRemoteUser(\"me\");\n    ugi.addToken(token);\n\n    ugi.doAs(new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        CustomProtocol client =\n            (CustomProtocol) RPC.getProxy(CustomProtocol.class, 1L, am.address,\n              conf);\n        client.ping();\n        Assert.assertTrue(am.pinged);\n        return null;\n      }\n    });\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"private void testRPCTimeout(String rpcClass) throws Exception {\n    Configuration conf = new Configuration();\n    // set timeout low for the test\n    conf.setInt(\"yarn.rpc.nm-command-timeout\", 3000);\n\n    conf.set(YarnConfiguration.IPC_RPC_IMPL, rpcClass);\n    YarnRPC rpc = YarnRPC.create(conf);\n    String bindAddr = \"localhost:0\";\n    InetSocketAddress addr = NetUtils.createSocketAddr(bindAddr);\n    Server server = rpc.getServer(ContainerManager.class,\n        new DummyContainerManager(), addr, conf, null, 1);\n    server.start();\n    try {\n\n      ContainerManager proxy = (ContainerManager) rpc.getProxy(\n          ContainerManager.class,\n          server.getListenerAddress(), conf);\n      ContainerLaunchContext containerLaunchContext = recordFactory\n          .newRecordInstance(ContainerLaunchContext.class);\n      containerLaunchContext.setUser(\"dummy-user\");\n      ContainerId containerId = recordFactory\n          .newRecordInstance(ContainerId.class);\n      ApplicationId applicationId = recordFactory\n          .newRecordInstance(ApplicationId.class);\n      ApplicationAttemptId applicationAttemptId = recordFactory\n          .newRecordInstance(ApplicationAttemptId.class);\n      applicationId.setClusterTimestamp(0);\n      applicationId.setId(0);\n      applicationAttemptId.setApplicationId(applicationId);\n      applicationAttemptId.setAttemptId(0);\n      containerId.setApplicationAttemptId(applicationAttemptId);\n      containerId.setId(100);\n      Container container =\n          BuilderUtils.newContainer(containerId, null, null, recordFactory\n              .newRecordInstance(Resource.class), null, null, 0);\n\n      StartContainerRequest scRequest = recordFactory\n          .newRecordInstance(StartContainerRequest.class);\n      scRequest.setContainerLaunchContext(containerLaunchContext);\n      scRequest.setContainer(container);\n      try {\n        proxy.startContainer(scRequest);\n      } catch (Exception e) {\n        LOG.info(StringUtils.stringifyException(e));\n        Assert.assertTrue(\"Error, exception does not contain: \"\n            + EXCEPTION_CAUSE,\n            e.getCause().getMessage().contains(EXCEPTION_CAUSE));\n\n        return;\n      }\n    } finally {\n      server.stop();\n    }\n\n    Assert.fail(\"timeout exception should have occurred!\");\n  }","id":48081,"modified_method":"private void testRPCTimeout(String rpcClass) throws Exception {\n    Configuration conf = new Configuration();\n    // set timeout low for the test\n    conf.setInt(\"yarn.rpc.nm-command-timeout\", 3000);\n\n    conf.set(YarnConfiguration.IPC_RPC_IMPL, rpcClass);\n    YarnRPC rpc = YarnRPC.create(conf);\n    String bindAddr = \"localhost:0\";\n    InetSocketAddress addr = NetUtils.createSocketAddr(bindAddr);\n    Server server = rpc.getServer(ContainerManager.class,\n        new DummyContainerManager(), addr, conf, null, 1);\n    server.start();\n    try {\n\n      ContainerManager proxy = (ContainerManager) rpc.getProxy(\n          ContainerManager.class,\n          server.getListenerAddress(), conf);\n      ContainerLaunchContext containerLaunchContext = recordFactory\n          .newRecordInstance(ContainerLaunchContext.class);\n      containerLaunchContext.setUser(\"dummy-user\");\n      ContainerId containerId = recordFactory\n          .newRecordInstance(ContainerId.class);\n      ApplicationId applicationId = recordFactory\n          .newRecordInstance(ApplicationId.class);\n      ApplicationAttemptId applicationAttemptId = recordFactory\n          .newRecordInstance(ApplicationAttemptId.class);\n      applicationId.setClusterTimestamp(0);\n      applicationId.setId(0);\n      applicationAttemptId.setApplicationId(applicationId);\n      applicationAttemptId.setAttemptId(0);\n      containerId.setApplicationAttemptId(applicationAttemptId);\n      containerId.setId(100);\n      Container container =\n          BuilderUtils.newContainer(containerId, null, null, recordFactory\n              .newRecordInstance(Resource.class), null, null, 0);\n\n      StartContainerRequest scRequest = recordFactory\n          .newRecordInstance(StartContainerRequest.class);\n      scRequest.setContainerLaunchContext(containerLaunchContext);\n      scRequest.setContainer(container);\n      try {\n        proxy.startContainer(scRequest);\n      } catch (Exception e) {\n        LOG.info(StringUtils.stringifyException(e));\n        Assert.assertEquals(\"Error, exception is not: \"\n            + SocketTimeoutException.class.getName(),\n            SocketTimeoutException.class.getName(), e.getClass().getName());\n        return;\n      }\n    } finally {\n      server.stop();\n    }\n\n    Assert.fail(\"timeout exception should have occurred!\");\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n    public StartContainerResponse startContainer(StartContainerRequest request)\n        throws YarnRemoteException {\n      StartContainerResponse response = recordFactory\n          .newRecordInstance(StartContainerResponse.class);\n      status = recordFactory.newRecordInstance(ContainerStatus.class);\n      try {\n        // make the thread sleep to look like its not going to respond\n        Thread.sleep(10000);\n      } catch (Exception e) {\n        LOG.error(e);\n        throw new UndeclaredThrowableException(e);\n      }\n      status.setState(ContainerState.RUNNING);\n      status.setContainerId(request.getContainer().getId());\n      status.setExitStatus(0);\n      return response;\n    }","id":48082,"modified_method":"@Override\n    public StartContainerResponse startContainer(StartContainerRequest request)\n        throws YarnRemoteException, IOException {\n      StartContainerResponse response = recordFactory\n          .newRecordInstance(StartContainerResponse.class);\n      status = recordFactory.newRecordInstance(ContainerStatus.class);\n      try {\n        // make the thread sleep to look like its not going to respond\n        Thread.sleep(10000);\n      } catch (Exception e) {\n        LOG.error(e);\n        throw new YarnRemoteException(e);\n      }\n      status.setState(ContainerState.RUNNING);\n      status.setContainerId(request.getContainer().getId());\n      status.setExitStatus(0);\n      return response;\n    }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testMaliceUser() throws IOException, InterruptedException,\n      YarnRemoteException {\n\n    LOG.info(\"Running test for malice user\");\n\n    ResourceManager resourceManager = yarnCluster.getResourceManager();\n\n    final YarnRPC yarnRPC = YarnRPC.create(conf);\n\n    // Submit an application\n    ApplicationId appID = resourceManager.getClientRMService()\n        .getNewApplication(Records.newRecord(GetNewApplicationRequest.class))\n        .getApplicationId();\n    AMRMProtocol scheduler = submitAndRegisterApplication(resourceManager,\n        yarnRPC, appID);\n\n    // Now request a container.\n    final Container allocatedContainer = requestAndGetContainer(scheduler,\n        appID);\n\n    // Now talk to the NM for launching the container with modified resource\n    final ContainerId containerID = allocatedContainer.getId();\n    UserGroupInformation maliceUser = UserGroupInformation\n        .createRemoteUser(containerID.toString());\n\n    ContainerToken containerToken = allocatedContainer.getContainerToken();\n    byte[] identifierBytes = containerToken.getIdentifier().array();\n\n    DataInputBuffer di = new DataInputBuffer();\n    di.reset(identifierBytes, identifierBytes.length);\n\n    ContainerTokenIdentifier dummyIdentifier = new ContainerTokenIdentifier();\n    dummyIdentifier.readFields(di);\n\n    // Malice user modifies the resource amount\n    Resource modifiedResource = BuilderUtils.newResource(2048, 1);\n    ContainerTokenIdentifier modifiedIdentifier =\n        new ContainerTokenIdentifier(dummyIdentifier.getContainerID(),\n          dummyIdentifier.getNmHostAddress(), \"testUser\", modifiedResource,\n          Long.MAX_VALUE, dummyIdentifier.getMasterKeyId());\n    Token<ContainerTokenIdentifier> modifiedToken = new Token<ContainerTokenIdentifier>(\n        modifiedIdentifier.getBytes(), containerToken.getPassword().array(),\n        new Text(containerToken.getKind()), new Text(containerToken\n            .getService()));\n    maliceUser.addToken(modifiedToken);\n    maliceUser.doAs(new PrivilegedAction<Void>() {\n      @Override\n      public Void run() {\n        ContainerManager client = (ContainerManager) yarnRPC.getProxy(\n            ContainerManager.class, NetUtils\n                .createSocketAddr(allocatedContainer.getNodeId().toString()),\n            conf);\n\n        LOG.info(\"Going to contact NM:  ilLegal request\");\n        GetContainerStatusRequest request = recordFactory\n            .newRecordInstance(GetContainerStatusRequest.class);\n        request.setContainerId(containerID);\n        try {\n          client.getContainerStatus(request);\n          fail(\"Connection initiation with illegally modified \"\n              + \"tokens is expected to fail.\");\n        } catch (YarnRemoteException e) {\n          LOG.error(\"Got exception\", e);\n          fail(\"Cannot get a YARN remote exception as \"\n              + \"it will indicate RPC success\");\n        } catch (Exception e) {\n          Assert.assertEquals(\n            java.lang.reflect.UndeclaredThrowableException.class\n              .getCanonicalName(), e.getClass().getCanonicalName());\n          Assert.assertTrue(e\n            .getCause()\n            .getMessage()\n            .contains(\n              \"DIGEST-MD5: digest response format violation. \"\n                  + \"Mismatched response.\"));\n        }\n        return null;\n      }\n    });\n\n    KillApplicationRequest request = Records\n        .newRecord(KillApplicationRequest.class);\n    request.setApplicationId(appID);\n    resourceManager.getClientRMService().forceKillApplication(request);\n  }","id":48083,"modified_method":"@Test\n  public void testMaliceUser() throws IOException, InterruptedException,\n      YarnRemoteException {\n\n    LOG.info(\"Running test for malice user\");\n\n    ResourceManager resourceManager = yarnCluster.getResourceManager();\n\n    final YarnRPC yarnRPC = YarnRPC.create(conf);\n\n    // Submit an application\n    ApplicationId appID = resourceManager.getClientRMService()\n        .getNewApplication(Records.newRecord(GetNewApplicationRequest.class))\n        .getApplicationId();\n    AMRMProtocol scheduler = submitAndRegisterApplication(resourceManager,\n        yarnRPC, appID);\n\n    // Now request a container.\n    final Container allocatedContainer = requestAndGetContainer(scheduler,\n        appID);\n\n    // Now talk to the NM for launching the container with modified resource\n    final ContainerId containerID = allocatedContainer.getId();\n    UserGroupInformation maliceUser = UserGroupInformation\n        .createRemoteUser(containerID.toString());\n\n    ContainerToken containerToken = allocatedContainer.getContainerToken();\n    byte[] identifierBytes = containerToken.getIdentifier().array();\n\n    DataInputBuffer di = new DataInputBuffer();\n    di.reset(identifierBytes, identifierBytes.length);\n\n    ContainerTokenIdentifier dummyIdentifier = new ContainerTokenIdentifier();\n    dummyIdentifier.readFields(di);\n\n    // Malice user modifies the resource amount\n    Resource modifiedResource = BuilderUtils.newResource(2048, 1);\n    ContainerTokenIdentifier modifiedIdentifier =\n        new ContainerTokenIdentifier(dummyIdentifier.getContainerID(),\n          dummyIdentifier.getNmHostAddress(), \"testUser\", modifiedResource,\n          Long.MAX_VALUE, dummyIdentifier.getMasterKeyId());\n    Token<ContainerTokenIdentifier> modifiedToken = new Token<ContainerTokenIdentifier>(\n        modifiedIdentifier.getBytes(), containerToken.getPassword().array(),\n        new Text(containerToken.getKind()), new Text(containerToken\n            .getService()));\n    maliceUser.addToken(modifiedToken);\n    maliceUser.doAs(new PrivilegedAction<Void>() {\n      @Override\n      public Void run() {\n        ContainerManager client = (ContainerManager) yarnRPC.getProxy(\n            ContainerManager.class, NetUtils\n                .createSocketAddr(allocatedContainer.getNodeId().toString()),\n            conf);\n\n        LOG.info(\"Going to contact NM:  ilLegal request\");\n        GetContainerStatusRequest request = recordFactory\n            .newRecordInstance(GetContainerStatusRequest.class);\n        request.setContainerId(containerID);\n        try {\n          client.getContainerStatus(request);\n          fail(\"Connection initiation with illegally modified \"\n              + \"tokens is expected to fail.\");\n        } catch (YarnRemoteException e) {\n          LOG.error(\"Got exception\", e);\n          fail(\"Cannot get a YARN remote exception as \"\n              + \"it will indicate RPC success\");\n        } catch (Exception e) {\n          Assert.assertEquals(\n              javax.security.sasl.SaslException.class\n              .getCanonicalName(), e.getClass().getCanonicalName());\n          Assert.assertTrue(e\n            .getMessage()\n            .contains(\n              \"DIGEST-MD5: digest response format violation. \"\n                  + \"Mismatched response.\"));\n        }\n        return null;\n      }\n    });\n\n    KillApplicationRequest request = Records\n        .newRecord(KillApplicationRequest.class);\n    request.setApplicationId(appID);\n    resourceManager.getClientRMService().forceKillApplication(request);\n  }","commit_id":"065747efabd1cbea9b14e93e905e304b9973d355","url":"https://github.com/apache/hadoop"},{"original_method":"public RowSet getMockInputRowSet( final List<Object[]> rows ) {\n    final AtomicInteger index = new AtomicInteger( 0 );\n    RowSet rowSet = mock( RowSet.class, Mockito.RETURNS_MOCKS );\n    when( rowSet.getRowWait( anyLong(), any( TimeUnit.class ) ) ).thenAnswer( new Answer<Object[]>() {\n      @Override\n      public Object[] answer( InvocationOnMock invocation ) throws Throwable {\n        int i = index.getAndIncrement();\n        return i < rows.size() ? rows.get( i ) : null;\n      }\n\n    } );\n    when( rowSet.isDone() ).thenAnswer( new Answer<Boolean>() {\n\n      @Override\n      public Boolean answer( InvocationOnMock invocation ) throws Throwable {\n        return index.get() >= rows.size();\n      }\n    } );\n    return rowSet;\n  }","id":48084,"modified_method":"public RowSet getMockInputRowSet( final List<Object[]> rows ) {\n    final AtomicInteger index = new AtomicInteger( 0 );\n    RowSet rowSet = mock( RowSet.class, Mockito.RETURNS_MOCKS );\n    Answer answer = new Answer<Object[]>() {\n      @Override\n      public Object[] answer( InvocationOnMock invocation ) throws Throwable {\n        int i = index.getAndIncrement();\n        return i < rows.size() ? rows.get( i ) : null;\n      }\n    };\n    when( rowSet.getRowWait( anyLong(), any( TimeUnit.class ) ) ).thenAnswer( answer );\n    when( rowSet.getRow() ).thenAnswer( answer );\n    when( rowSet.isDone() ).thenAnswer( new Answer<Boolean>() {\n\n      @Override\n      public Boolean answer( InvocationOnMock invocation ) throws Throwable {\n        return index.get() >= rows.size();\n      }\n    } );\n    return rowSet;\n  }","commit_id":"57dc38346162f8b33be4eaff61f1d9530bb02089","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public static List<Object[]> asList( Object[]... objects ) {\n    List<Object[]> result = new ArrayList<Object[]>();\n    for ( Object[] object : objects ) {\n      result.add( object );\n    }\n    return result;\n  }","id":48085,"modified_method":"public static List<Object[]> asList( Object[]... objects ) {\n    List<Object[]> result = new ArrayList<Object[]>();\n    Collections.addAll( result, objects );\n    return result;\n  }","commit_id":"57dc38346162f8b33be4eaff61f1d9530bb02089","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean init( StepMetaInterface smi, StepDataInterface sdi ) {\n    meta = (XMLJoinMeta) smi;\n    data = (XMLJoinData) sdi;\n    if ( !super.init( smi, sdi ) ) {\n      return false;\n    }\n\n    try {\n      if ( meta.isOmitNullValues() ) {\n        setSerializer( TransformerFactory.newInstance().newTransformer(\n          new StreamSource( XMLJoin.class.getClassLoader().getResourceAsStream(\n            \"org/pentaho/di/trans/steps/xmljoin/RemoveNulls.xsl\" ) ) ) );\n      } else {\n        setSerializer( TransformerFactory.newInstance().newTransformer() );\n      }\n      if ( meta.getEncoding() != null ) {\n        getSerializer().setOutputProperty( OutputKeys.ENCODING, meta.getEncoding() );\n      }\n\n      if ( meta.isOmitXMLHeader() ) {\n        getSerializer().setOutputProperty( OutputKeys.OMIT_XML_DECLARATION, \"yes\" );\n      }\n\n      // See if a main step is supplied: in that case move the corresponding rowset to position 0\n      //\n      for ( int i = 0; i < getInputRowSets().size(); i++ ) {\n        BlockingRowSet rs = (BlockingRowSet) getInputRowSets().get( i );\n        if ( rs.getOriginStepName().equalsIgnoreCase( meta.getTargetXMLstep() ) ) {\n          // swap this one and position 0...\n          // That means, the main stream is always stream 0 --> easy!\n          //\n          BlockingRowSet zero = (BlockingRowSet) getInputRowSets().get( 0 );\n          getInputRowSets().set( 0, rs );\n          getInputRowSets().set( i, zero );\n        }\n      }\n    } catch ( Exception e ) {\n      return false;\n    }\n\n    return true;\n  }","id":48086,"modified_method":"public boolean init( StepMetaInterface smi, StepDataInterface sdi ) {\n    meta = (XMLJoinMeta) smi;\n    data = (XMLJoinData) sdi;\n    if ( !super.init( smi, sdi ) ) {\n      return false;\n    }\n\n    try {\n      Transformer transformer = TransformerFactory.newInstance().newTransformer();\n\n      if ( meta.getEncoding() != null ) {\n        transformer.setOutputProperty( OutputKeys.ENCODING, meta.getEncoding() );\n      }\n\n      if ( meta.isOmitXMLHeader() ) {\n        transformer.setOutputProperty( OutputKeys.OMIT_XML_DECLARATION, \"yes\" );\n      }\n\n      transformer.setOutputProperty( OutputKeys.INDENT, \"no\" );\n\n      setTransformer( transformer );\n\n      // See if a main step is supplied: in that case move the corresponding rowset to position 0\n      //\n      for ( int i = 0; i < getInputRowSets().size(); i++ ) {\n        BlockingRowSet rs = (BlockingRowSet) getInputRowSets().get( i );\n        if ( rs.getOriginStepName().equalsIgnoreCase( meta.getTargetXMLstep() ) ) {\n          // swap this one and position 0...that means, the main stream is always stream 0 --> easy!\n          //\n          BlockingRowSet zero = (BlockingRowSet) getInputRowSets().get( 0 );\n          getInputRowSets().set( 0, rs );\n          getInputRowSets().set( i, zero );\n        }\n      }\n    } catch ( Exception e ) {\n      return false;\n    }\n\n    return true;\n  }","commit_id":"57dc38346162f8b33be4eaff61f1d9530bb02089","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean processRow( StepMetaInterface smi, StepDataInterface sdi ) throws KettleException {\n    meta = (XMLJoinMeta) smi;\n    data = (XMLJoinData) sdi;\n\n    XPath xpath = XPathFactory.newInstance().newXPath();\n\n    // if first row we do some initializing and process the first row of the target XML Step\n    if ( first ) {\n      first = false;\n      int target_field_id = -1;\n      XMLJoinMeta meta = (XMLJoinMeta) smi;\n\n      // Get the two input row sets\n      data.TargetRowSet = findInputRowSet( meta.getTargetXMLstep() );\n      data.SourceRowSet = findInputRowSet( meta.getSourceXMLstep() );\n\n      // get the first line from the target row set\n      Object[] rTarget = getRowFrom( data.TargetRowSet );\n\n      if ( rTarget == null ) { // nothing to do\n        logBasic( BaseMessages.getString( PKG, \"XMLJoin.NoRowsFoundInTarget\" ) );\n        setOutputDone();\n        return false;\n      }\n\n      // get target xml\n      meta.getTargetXMLstep();\n      String[] target_field_names = data.TargetRowSet.getRowMeta().getFieldNames();\n      for ( int i = 0; i < target_field_names.length; i++ ) {\n        if ( meta.getTargetXMLfield().equals( target_field_names[i] ) ) {\n          target_field_id = i;\n        }\n      }\n      // Throw exception if target field has not been found\n      if ( target_field_id == -1 ) {\n        throw new KettleException( BaseMessages.getString( PKG, \"XMLJoin.Exception.FieldNotFound\", meta\n          .getTargetXMLfield() ) );\n      }\n\n      data.outputRowMeta = data.TargetRowSet.getRowMeta().clone();\n      meta.getFields(\n        data.outputRowMeta, getStepname(), new RowMetaInterface[] { data.TargetRowSet.getRowMeta() }, null,\n        this, repository, metaStore );\n      data.outputRowData = rTarget.clone();\n\n      // get the target xml structure and create a DOM\n      String strTarget = (String) rTarget[target_field_id];\n      // parse the XML as a W3C Document\n\n      InputSource inputSource = new InputSource( new StringReader( strTarget ) );\n\n      data.XPathStatement = meta.getTargetXPath();\n      try {\n        DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n        data.targetDOM = builder.parse( inputSource );\n        if ( !meta.isComplexJoin() ) {\n          data.targetNode = (Node) xpath.evaluate( data.XPathStatement, data.targetDOM, XPathConstants.NODE );\n          if ( data.targetNode == null ) {\n            throw new KettleXMLException( \"XPath statement returned no result [\" + data.XPathStatement + \"]\" );\n          }\n        }\n      } catch ( Exception e ) {\n        throw new KettleXMLException( e );\n      }\n\n    }\n\n    Object[] rJoinSource = getRowFrom( data.SourceRowSet ); // This also waits for a row to be finished.\n    // no more input to be expected... create the output row\n    if ( rJoinSource == null ) { // no more input to be expected...\n\n      // create string from xml tree\n      try {\n        String strOmitXMLHeader;\n        if ( meta.isOmitXMLHeader() ) {\n          strOmitXMLHeader = \"yes\";\n        } else {\n          strOmitXMLHeader = \"no\";\n        }\n        serializer.setOutputProperty( OutputKeys.OMIT_XML_DECLARATION, strOmitXMLHeader );\n        serializer.setOutputProperty( OutputKeys.INDENT, \"no\" );\n        StringWriter sw = new StringWriter();\n        StreamResult resultXML = new StreamResult( sw );\n        DOMSource source = new DOMSource( data.targetDOM );\n        serializer.transform( source, resultXML );\n\n        int outputIndex = data.outputRowMeta.size() - 1;\n\n        // send the row to the next steps...\n        putRow( data.outputRowMeta, RowDataUtil.addValueData( data.outputRowData, outputIndex, sw.toString() ) );\n        // finishing up\n        setOutputDone();\n        return false;\n      } catch ( Exception e ) {\n        throw new KettleException( e );\n      }\n\n    }\n\n    if ( data.iSourceXMLField == -1 ) {\n      // assume failure\n      // get the column of the join xml set\n      // get target xml\n      String[] source_field_names = data.SourceRowSet.getRowMeta().getFieldNames();\n      for ( int i = 0; i < source_field_names.length; i++ ) {\n        if ( meta.getSourceXMLfield().equals( source_field_names[i] ) ) {\n          data.iSourceXMLField = i;\n        }\n      }\n      // Throw exception if source xml field has not been found\n      if ( data.iSourceXMLField == -1 ) {\n        throw new KettleException( BaseMessages.getString( PKG, \"XMLJoin.Exception.FieldNotFound\", meta\n          .getSourceXMLfield() ) );\n      }\n    }\n\n    if ( meta.isComplexJoin() && data.iCompareFieldID == -1 ) {\n      // get the column of the compare value\n      String[] source_field_names = data.SourceRowSet.getRowMeta().getFieldNames();\n      for ( int i = 0; i < source_field_names.length; i++ ) {\n        if ( meta.getJoinCompareField().equals( source_field_names[i] ) ) {\n          data.iCompareFieldID = i;\n        }\n      }\n      // Throw exception if source xml field has not been found\n      if ( data.iCompareFieldID == -1 ) {\n        throw new KettleException( BaseMessages.getString( PKG, \"XMLJoin.Exception.FieldNotFound\", meta\n          .getJoinCompareField() ) );\n      }\n    }\n\n    // get XML tags to join\n    Document joinDocument;\n\n    if ( rJoinSource != null ) {\n      String strJoinXML = (String) rJoinSource[data.iSourceXMLField];\n\n      DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n      try {\n        DocumentBuilder builder = factory.newDocumentBuilder();\n        joinDocument = builder.parse( new InputSource( new StringReader( strJoinXML ) ) );\n      } catch ( Exception e ) {\n        throw new KettleException( e );\n      }\n\n      Node node = data.targetDOM.importNode( joinDocument.getDocumentElement(), true );\n\n      if ( meta.isComplexJoin() ) {\n        String strCompareValue = rJoinSource[data.iCompareFieldID].toString();\n        String strXPathStatement = data.XPathStatement.replace( \"?\", strCompareValue );\n\n        try {\n          data.targetNode = (Node) xpath.evaluate( strXPathStatement, data.targetDOM, XPathConstants.NODE );\n          if ( data.targetNode == null ) {\n            throw new KettleXMLException( \"XPath statement returned no result [\" + strXPathStatement + \"]\" );\n          } else {\n            data.targetNode.appendChild( node );\n          }\n        } catch ( Exception e ) {\n          throw new KettleException( e );\n        }\n      } else {\n        data.targetNode.appendChild( node );\n      }\n\n    }\n\n    return true;\n\n  }","id":48087,"modified_method":"public boolean processRow( StepMetaInterface smi, StepDataInterface sdi ) throws KettleException {\n    meta = (XMLJoinMeta) smi;\n    data = (XMLJoinData) sdi;\n\n    XPath xpath = XPathFactory.newInstance().newXPath();\n\n    // if first row we do some initializing and process the first row of the target XML Step\n    if ( first ) {\n      first = false;\n      int target_field_id = -1;\n      XMLJoinMeta meta = (XMLJoinMeta) smi;\n\n      // Get the two input row sets\n      data.TargetRowSet = findInputRowSet( meta.getTargetXMLstep() );\n      data.SourceRowSet = findInputRowSet( meta.getSourceXMLstep() );\n\n      // get the first line from the target row set\n      Object[] rTarget = getRowFrom( data.TargetRowSet );\n\n      if ( rTarget == null ) { // nothing to do\n        logBasic( BaseMessages.getString( PKG, \"XMLJoin.NoRowsFoundInTarget\" ) );\n        setOutputDone();\n        return false;\n      }\n\n      // get target xml\n      String[] target_field_names = data.TargetRowSet.getRowMeta().getFieldNames();\n      for ( int i = 0; i < target_field_names.length; i++ ) {\n        if ( meta.getTargetXMLfield().equals( target_field_names[i] ) ) {\n          target_field_id = i;\n        }\n      }\n      // Throw exception if target field has not been found\n      if ( target_field_id == -1 ) {\n        throw new KettleException( BaseMessages.getString( PKG, \"XMLJoin.Exception.FieldNotFound\", meta\n          .getTargetXMLfield() ) );\n      }\n\n      data.outputRowMeta = data.TargetRowSet.getRowMeta().clone();\n      meta.getFields(\n        data.outputRowMeta, getStepname(), new RowMetaInterface[] { data.TargetRowSet.getRowMeta() }, null,\n        this, repository, metaStore );\n      data.outputRowData = rTarget.clone();\n\n      // get the target xml structure and create a DOM\n      String strTarget = (String) rTarget[target_field_id];\n      // parse the XML as a W3C Document\n\n      InputSource inputSource = new InputSource( new StringReader( strTarget ) );\n\n      data.XPathStatement = meta.getTargetXPath();\n      try {\n        DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n        data.targetDOM = builder.parse( inputSource );\n        if ( !meta.isComplexJoin() ) {\n          data.targetNode = (Node) xpath.evaluate( data.XPathStatement, data.targetDOM, XPathConstants.NODE );\n          if ( data.targetNode == null ) {\n            throw new KettleXMLException( \"XPath statement returned no result [\" + data.XPathStatement + \"]\" );\n          }\n        }\n      } catch ( Exception e ) {\n        throw new KettleXMLException( e );\n      }\n\n    }\n\n    Object[] rJoinSource = getRowFrom( data.SourceRowSet ); // This also waits for a row to be finished.\n    if ( rJoinSource == null ) {\n    // no more input to be expected... create the output row\n      try {\n        if ( meta.isOmitNullValues() ) {\n          removeEmptyNodes( data.targetDOM.getChildNodes() );\n        }\n        // create string from xml tree\n        StringWriter sw = new StringWriter();\n        StreamResult resultXML = new StreamResult( sw );\n        DOMSource source = new DOMSource( data.targetDOM );\n        getTransformer().transform( source, resultXML );\n\n        int outputIndex = data.outputRowMeta.size() - 1;\n\n        // send the row to the next steps...\n        putRow( data.outputRowMeta, RowDataUtil.addValueData( data.outputRowData, outputIndex, sw.toString() ) );\n        // finishing up\n        setOutputDone();\n\n        return false;\n      } catch ( Exception e ) {\n        throw new KettleException( e );\n      }\n    } else {\n      if ( data.iSourceXMLField == -1 ) {\n        // assume failure\n        // get the column of the join xml set\n        // get target xml\n        String[] source_field_names = data.SourceRowSet.getRowMeta().getFieldNames();\n        for ( int i = 0; i < source_field_names.length; i++ ) {\n          if ( meta.getSourceXMLfield().equals( source_field_names[i] ) ) {\n            data.iSourceXMLField = i;\n          }\n        }\n        // Throw exception if source xml field has not been found\n        if ( data.iSourceXMLField == -1 ) {\n          throw new KettleException( BaseMessages.getString( PKG, \"XMLJoin.Exception.FieldNotFound\", meta\n              .getSourceXMLfield() ) );\n        }\n      }\n\n      if ( meta.isComplexJoin() && data.iCompareFieldID == -1 ) {\n        // get the column of the compare value\n        String[] source_field_names = data.SourceRowSet.getRowMeta().getFieldNames();\n        for ( int i = 0; i < source_field_names.length; i++ ) {\n          if ( meta.getJoinCompareField().equals( source_field_names[i] ) ) {\n            data.iCompareFieldID = i;\n          }\n        }\n        // Throw exception if source xml field has not been found\n        if ( data.iCompareFieldID == -1 ) {\n          throw new KettleException( BaseMessages.getString( PKG, \"XMLJoin.Exception.FieldNotFound\", meta\n              .getJoinCompareField() ) );\n        }\n      }\n\n      // get XML tags to join\n      String strJoinXML = (String) rJoinSource[data.iSourceXMLField];\n\n      try {\n        DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n        Document joinDocument = builder.parse( new InputSource( new StringReader( strJoinXML ) ) );\n\n        Node node = data.targetDOM.importNode( joinDocument.getDocumentElement(), true );\n\n        if ( meta.isComplexJoin() ) {\n          String strCompareValue = rJoinSource[data.iCompareFieldID].toString();\n          String strXPathStatement = data.XPathStatement.replace( \"?\", strCompareValue );\n\n          data.targetNode = (Node) xpath.evaluate( strXPathStatement, data.targetDOM, XPathConstants.NODE );\n          if ( data.targetNode == null ) {\n            throw new KettleXMLException( \"XPath statement returned no result [\" + strXPathStatement + \"]\" );\n          }\n        }\n        data.targetNode.appendChild( node );\n      } catch ( Exception e ) {\n        throw new KettleException( e );\n      }\n    }\n\n    return true;\n  }","commit_id":"57dc38346162f8b33be4eaff61f1d9530bb02089","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void setSerializer( Transformer serializer ) {\n    this.serializer = serializer;\n  }","id":48088,"modified_method":"private void setTransformer( Transformer transformer ) {\n    this.transformer = transformer;\n  }","commit_id":"57dc38346162f8b33be4eaff61f1d9530bb02089","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"@Override\n    protected int poll() throws Exception {\n        GetRecordsRequest req = new GetRecordsRequest()\n                .withShardIterator(shardIteratorHandler.getShardIterator())\n                .withLimit(getEndpoint().getMaxResultsPerRequest());\n        GetRecordsResult result = getClient().getRecords(req);\n\n        Queue<Exchange> exchanges = createExchanges(result.getRecords());\n        int processedExchangeCount = processBatch(CastUtils.cast(exchanges));\n\n        shardIteratorHandler.updateShardIterator(result.getNextShardIterator());\n\n        return processedExchangeCount;\n    }","id":48089,"modified_method":"@Override\n    protected int poll() throws Exception {\n        GetRecordsResult result;\n        try {\n            GetRecordsRequest req = new GetRecordsRequest()\n                        .withShardIterator(shardIteratorHandler.getShardIterator(null))\n                        .withLimit(getEndpoint().getMaxResultsPerRequest());\n            result = getClient().getRecords(req);\n        } catch (ExpiredIteratorException e) {\n            LOG.warn(\"Expired Shard Iterator, attempting to resume from \" + lastSeenSequenceNumber, e);\n            GetRecordsRequest req = new GetRecordsRequest()\n                        .withShardIterator(shardIteratorHandler.getShardIterator(lastSeenSequenceNumber))\n                        .withLimit(getEndpoint().getMaxResultsPerRequest());\n            result = getClient().getRecords(req);\n        }\n\n        Queue<Exchange> exchanges = createExchanges(result.getRecords(), lastSeenSequenceNumber);\n        int processedExchangeCount = processBatch(CastUtils.cast(exchanges));\n\n        shardIteratorHandler.updateShardIterator(result.getNextShardIterator());\n        if (!result.getRecords().isEmpty()) {\n            lastSeenSequenceNumber = result.getRecords().get((result.getRecords().size()-1)).getDynamodb().getSequenceNumber();\n        }\n\n        return processedExchangeCount;\n    }","commit_id":"9c99648c601097bda6c5b08360b1c45c345793d8","url":"https://github.com/apache/camel"},{"original_method":"private Queue<Exchange> createExchanges(List<Record> records) {\n        Queue<Exchange> exchanges = new ArrayDeque<>();\n        BigIntComparisons condition;\n        BigInteger providedSeqNum = null;\n        switch(getEndpoint().getIteratorType()) {\n        case AFTER_SEQUENCE_NUMBER:\n            condition = BigIntComparisons.Conditions.LT;\n            providedSeqNum = new BigInteger(getEndpoint().getSequenceNumberProvider().getSequenceNumber());\n            break;\n        case AT_SEQUENCE_NUMBER:\n            condition = BigIntComparisons.Conditions.LTEQ;\n            providedSeqNum = new BigInteger(getEndpoint().getSequenceNumberProvider().getSequenceNumber());\n            break;\n        default:\n            condition = null;\n        }\n        for (Record record : records) {\n            BigInteger recordSeqNum = new BigInteger(record.getDynamodb().getSequenceNumber());\n            if (condition == null || condition.matches(providedSeqNum, recordSeqNum)) {\n                exchanges.add(getEndpoint().createExchange(record));\n            }\n        }\n        return exchanges;\n    }","id":48090,"modified_method":"private Queue<Exchange> createExchanges(List<Record> records, String lastSeenSequenceNumber) {\n        Queue<Exchange> exchanges = new ArrayDeque<>();\n        BigIntComparisons condition = null;\n        BigInteger providedSeqNum = null;\n        if (lastSeenSequenceNumber != null) {\n            providedSeqNum = new BigInteger(lastSeenSequenceNumber);\n            condition = BigIntComparisons.Conditions.LT;\n        }\n        switch(getEndpoint().getIteratorType()) {\n        case AFTER_SEQUENCE_NUMBER:\n            condition = BigIntComparisons.Conditions.LT;\n            providedSeqNum = new BigInteger(getEndpoint().getSequenceNumberProvider().getSequenceNumber());\n            break;\n        case AT_SEQUENCE_NUMBER:\n            condition = BigIntComparisons.Conditions.LTEQ;\n            providedSeqNum = new BigInteger(getEndpoint().getSequenceNumberProvider().getSequenceNumber());\n            break;\n        }\n        for (Record record : records) {\n            BigInteger recordSeqNum = new BigInteger(record.getDynamodb().getSequenceNumber());\n            if (condition == null || condition.matches(providedSeqNum, recordSeqNum)) {\n                exchanges.add(getEndpoint().createExchange(record));\n            }\n        }\n        return exchanges;\n    }","commit_id":"9c99648c601097bda6c5b08360b1c45c345793d8","url":"https://github.com/apache/camel"},{"original_method":"@Before\n    public void setup() throws Exception {\n        endpoint.setAmazonDynamoDbStreamsClient(amazonDynamoDBStreams);\n\n        undertest = new DdbStreamConsumer(endpoint, processor, shardIteratorHandler);\n\n        final Map<String, String> shardIterators = new HashMap<>();\n        shardIterators.put(\"shard_iterator_a_000\", \"shard_iterator_a_001\");\n        shardIterators.put(\"shard_iterator_b_000\", \"shard_iterator_b_001\");\n        shardIterators.put(\"shard_iterator_b_001\", \"shard_iterator_b_002\");\n        shardIterators.put(\"shard_iterator_c_000\", \"shard_iterator_c_001\");\n        shardIterators.put(\"shard_iterator_d_000\", \"shard_iterator_d_001\");\n        final Map<String, Collection<Record>> answers = new HashMap<>();\n        answers.put(\"shard_iterator_a_001\", createRecords(\"2\"));\n        answers.put(\"shard_iterator_b_000\", createRecords(\"9\"));\n        answers.put(\"shard_iterator_b_001\", createRecords(\"11\", \"13\"));\n        answers.put(\"shard_iterator_b_002\", createRecords(\"14\"));\n        answers.put(\"shard_iterator_d_000\", createRecords(\"21\", \"25\"));\n        answers.put(\"shard_iterator_d_001\", createRecords(\"30\", \"35\", \"40\"));\n        when(amazonDynamoDBStreams.getRecords(any(GetRecordsRequest.class))).thenAnswer(new Answer<GetRecordsResult>() {\n            @Override\n            public GetRecordsResult answer(InvocationOnMock invocation) throws Throwable {\n                final String shardIterator = ((GetRecordsRequest) invocation.getArguments()[0]).getShardIterator();\n                // note that HashMap returns null when there is no entry in the map.\n                // A null 'nextShardIterator' indicates that the shard has finished\n                // and we should move onto the next shard.\n                String nextShardIterator = shardIterators.get(shardIterator);\n                Matcher m = Pattern.compile(\"shard_iterator_d_0*(\\\\d+)\").matcher(shardIterator);\n                Collection<Record> ans = answers.get(shardIterator);\n                if (nextShardIterator == null && m.matches()) { // last shard iterates forever.\n                    Integer num = Integer.parseInt(m.group(1));\n                    nextShardIterator = \"shard_iterator_d_\" + pad(Integer.toString(num + 1), 3);\n                }\n                if (null == ans) { // default to an empty list of records.\n                    ans = createRecords();\n                }\n                return new GetRecordsResult()\n                        .withRecords(ans)\n                        .withNextShardIterator(nextShardIterator);\n            }\n        });\n    }","id":48091,"modified_method":"@Before\n    public void setup() throws Exception {\n        endpoint.setAmazonDynamoDbStreamsClient(amazonDynamoDBStreams);\n\n        undertest = new DdbStreamConsumer(endpoint, processor, shardIteratorHandler);\n\n        final Map<String, String> shardIterators = new HashMap<>();\n        shardIterators.put(\"shard_iterator_a_000\", \"shard_iterator_a_001\");\n        shardIterators.put(\"shard_iterator_b_000\", \"shard_iterator_b_001\");\n        shardIterators.put(\"shard_iterator_b_001\", \"shard_iterator_b_002\");\n        shardIterators.put(\"shard_iterator_c_000\", \"shard_iterator_c_001\");\n        shardIterators.put(\"shard_iterator_d_000\", \"shard_iterator_d_001\");\n        final Map<String, Collection<Record>> answers = new HashMap<>();\n        answers.put(\"shard_iterator_a_001\", createRecords(\"2\"));\n        answers.put(\"shard_iterator_b_000\", createRecords(\"9\"));\n        answers.put(\"shard_iterator_b_001\", createRecords(\"11\", \"13\"));\n        answers.put(\"shard_iterator_b_002\", createRecords(\"14\"));\n        answers.put(\"shard_iterator_d_000\", createRecords(\"21\", \"25\"));\n        answers.put(\"shard_iterator_d_001\", createRecords(\"30\", \"35\", \"40\"));\n        recordsAnswer = new GetRecordsAnswer(shardIterators, answers);\n        when(amazonDynamoDBStreams.getRecords(any(GetRecordsRequest.class))).thenAnswer(recordsAnswer);\n    }","commit_id":"9c99648c601097bda6c5b08360b1c45c345793d8","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void afterSeqNumber35GivesFirstRecordWithSeq40() throws Exception {\n        endpoint.setIteratorType(ShardIteratorType.AFTER_SEQUENCE_NUMBER);\n        endpoint.setSequenceNumberProvider(new StaticSequenceNumberProvider(\"35\"));\n        when(shardIteratorHandler.getShardIterator()).thenReturn(\"shard_iterator_d_001\", \"shard_iterator_d_002\");\n\n        for (int i = 0; i < 10; ++i) { // poll lots.\n            undertest.poll();\n        }\n\n        ArgumentCaptor<Exchange> exchangeCaptor = ArgumentCaptor.forClass(Exchange.class);\n        verify(processor, times(1)).process(exchangeCaptor.capture(), any(AsyncCallback.class));\n\n        assertThat(exchangeCaptor.getAllValues().get(0).getIn().getBody(Record.class).getDynamodb().getSequenceNumber(), is(\"40\"));\n    }","id":48092,"modified_method":"@Test\n    public void afterSeqNumber35GivesFirstRecordWithSeq40() throws Exception {\n        endpoint.setIteratorType(ShardIteratorType.AFTER_SEQUENCE_NUMBER);\n        endpoint.setSequenceNumberProvider(new StaticSequenceNumberProvider(\"35\"));\n        when(shardIteratorHandler.getShardIterator(anyString())).thenReturn(\"shard_iterator_d_001\", \"shard_iterator_d_002\");\n\n        for (int i = 0; i < 10; ++i) { // poll lots.\n            undertest.poll();\n        }\n\n        ArgumentCaptor<Exchange> exchangeCaptor = ArgumentCaptor.forClass(Exchange.class);\n        verify(processor, times(1)).process(exchangeCaptor.capture(), any(AsyncCallback.class));\n\n        assertThat(exchangeCaptor.getAllValues().get(0).getIn().getBody(Record.class).getDynamodb().getSequenceNumber(), is(\"40\"));\n    }","commit_id":"9c99648c601097bda6c5b08360b1c45c345793d8","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void atSeqNumber35GivesFirstRecordWithSeq35() throws Exception {\n        endpoint.setIteratorType(ShardIteratorType.AT_SEQUENCE_NUMBER);\n        endpoint.setSequenceNumberProvider(new StaticSequenceNumberProvider(\"35\"));\n        when(shardIteratorHandler.getShardIterator()).thenReturn(\"shard_iterator_d_001\", \"shard_iterator_d_002\");\n\n        for (int i = 0; i < 10; ++i) { // poll lots.\n            undertest.poll();\n        }\n\n        ArgumentCaptor<Exchange> exchangeCaptor = ArgumentCaptor.forClass(Exchange.class);\n        verify(processor, times(2)).process(exchangeCaptor.capture(), any(AsyncCallback.class));\n\n        assertThat(exchangeCaptor.getAllValues().get(0).getIn().getBody(Record.class).getDynamodb().getSequenceNumber(), is(\"35\"));\n        assertThat(exchangeCaptor.getAllValues().get(1).getIn().getBody(Record.class).getDynamodb().getSequenceNumber(), is(\"40\"));\n    }","id":48093,"modified_method":"@Test\n    public void atSeqNumber35GivesFirstRecordWithSeq35() throws Exception {\n        endpoint.setIteratorType(ShardIteratorType.AT_SEQUENCE_NUMBER);\n        endpoint.setSequenceNumberProvider(new StaticSequenceNumberProvider(\"35\"));\n        when(shardIteratorHandler.getShardIterator(anyString())).thenReturn(\"shard_iterator_d_001\", \"shard_iterator_d_002\");\n\n        for (int i = 0; i < 10; ++i) { // poll lots.\n            undertest.poll();\n        }\n\n        ArgumentCaptor<Exchange> exchangeCaptor = ArgumentCaptor.forClass(Exchange.class);\n        verify(processor, times(2)).process(exchangeCaptor.capture(), any(AsyncCallback.class));\n\n        assertThat(exchangeCaptor.getAllValues().get(0).getIn().getBody(Record.class).getDynamodb().getSequenceNumber(), is(\"35\"));\n        assertThat(exchangeCaptor.getAllValues().get(1).getIn().getBody(Record.class).getDynamodb().getSequenceNumber(), is(\"40\"));\n    }","commit_id":"9c99648c601097bda6c5b08360b1c45c345793d8","url":"https://github.com/apache/camel"},{"original_method":"String getShardIterator() {\n        // either return a cached one or get a new one via a GetShardIterator request.\n        if (currentShardIterator == null) {\n            ListStreamsRequest req0 = new ListStreamsRequest()\n                    .withTableName(getEndpoint().getTableName());\n            ListStreamsResult res0 = getClient().listStreams(req0);\n            final String streamArn = res0.getStreams().get(0).getStreamArn(); // XXX assumes there is only one stream\n            DescribeStreamRequest req1 = new DescribeStreamRequest()\n                    .withStreamArn(streamArn);\n            DescribeStreamResult res1 = getClient().describeStream(req1);\n            shardList.addAll(res1.getStreamDescription().getShards());\n\n            LOG.trace(\"Current shard is: {} (in {})\", currentShard, shardList);\n            if (currentShard == null) {\n                switch(getEndpoint().getIteratorType()) {\n                case AFTER_SEQUENCE_NUMBER:\n                    currentShard = shardList.afterSeq(getEndpoint().getSequenceNumber());\n                    break;\n                case AT_SEQUENCE_NUMBER:\n                    currentShard = shardList.atSeq(getEndpoint().getSequenceNumber());\n                    break;\n                case TRIM_HORIZON:\n                    currentShard = shardList.first();\n                    break;\n                case LATEST:\n                default:\n                    currentShard = shardList.last();\n                    break;\n                }\n            } else {\n                currentShard = shardList.nextAfter(currentShard);\n            }\n            shardList.removeOlderThan(currentShard);\n            LOG.trace(\"Next shard is: {} (in {})\", currentShard, shardList);\n\n            GetShardIteratorRequest req = new GetShardIteratorRequest()\n                    .withStreamArn(streamArn)\n                    .withShardId(currentShard.getShardId())\n                    .withShardIteratorType(getEndpoint().getIteratorType());\n            switch(getEndpoint().getIteratorType()) {\n            case AFTER_SEQUENCE_NUMBER:\n            case AT_SEQUENCE_NUMBER:\n                // if you request with a sequence number that is LESS than the\n                // start of the shard, you get a HTTP 400 from AWS.\n                // So only add the sequence number if the endpoints\n                // sequence number is less than or equal to the starting\n                // sequence for the shard.\n                // Otherwise change the shart iterator type to trim_horizon\n                // because we get a 400 when we use one of the\n                // {at,after}_sequence_number iterator types and don't supply\n                // a sequence number.\n                if (BigIntComparisons.Conditions.LTEQ.matches(\n                        new BigInteger(currentShard.getSequenceNumberRange().getStartingSequenceNumber()),\n                        new BigInteger(getEndpoint().getSequenceNumber())\n                )) {\n                    req = req.withSequenceNumber(getEndpoint().getSequenceNumber());\n                } else {\n                    req = req.withShardIteratorType(ShardIteratorType.TRIM_HORIZON);\n                }\n                break;\n            default:\n            }\n            GetShardIteratorResult result = getClient().getShardIterator(req);\n            currentShardIterator = result.getShardIterator();\n        }\n        LOG.trace(\"Shard Iterator is: {}\", currentShardIterator);\n        return currentShardIterator;\n    }","id":48094,"modified_method":"String getShardIterator(String resumeFromSequenceNumber) {\n        // either return a cached one or get a new one via a GetShardIterator request.\n        if (currentShardIterator == null) {\n            ListStreamsRequest req0 = new ListStreamsRequest()\n                    .withTableName(getEndpoint().getTableName());\n            ListStreamsResult res0 = getClient().listStreams(req0);\n            final String streamArn = res0.getStreams().get(0).getStreamArn(); // XXX assumes there is only one stream\n            DescribeStreamRequest req1 = new DescribeStreamRequest()\n                    .withStreamArn(streamArn);\n            DescribeStreamResult res1 = getClient().describeStream(req1);\n            shardList.addAll(res1.getStreamDescription().getShards());\n\n            LOG.trace(\"Current shard is: {} (in {})\", currentShard, shardList);\n            if (currentShard == null) {\n                switch(getEndpoint().getIteratorType()) {\n                case AFTER_SEQUENCE_NUMBER:\n                    currentShard = shardList.afterSeq(getEndpoint().getSequenceNumber());\n                    break;\n                case AT_SEQUENCE_NUMBER:\n                    currentShard = shardList.atSeq(getEndpoint().getSequenceNumber());\n                    break;\n                case TRIM_HORIZON:\n                    currentShard = shardList.first();\n                    break;\n                case LATEST:\n                default:\n                    currentShard = shardList.last();\n                    break;\n                }\n            } else {\n                currentShard = shardList.nextAfter(currentShard);\n            }\n            shardList.removeOlderThan(currentShard);\n            LOG.trace(\"Next shard is: {} (in {})\", currentShard, shardList);\n\n            GetShardIteratorRequest req = new GetShardIteratorRequest()\n                    .withStreamArn(streamArn)\n                    .withShardId(currentShard.getShardId())\n                    .withShardIteratorType(getEndpoint().getIteratorType());\n            switch(getEndpoint().getIteratorType()) {\n            case AFTER_SEQUENCE_NUMBER:\n            case AT_SEQUENCE_NUMBER:\n                // if you request with a sequence number that is LESS than the\n                // start of the shard, you get a HTTP 400 from AWS.\n                // So only add the sequence number if the endpoints\n                // sequence number is less than or equal to the starting\n                // sequence for the shard.\n                // Otherwise change the shart iterator type to trim_horizon\n                // because we get a 400 when we use one of the\n                // {at,after}_sequence_number iterator types and don't supply\n                // a sequence number.\n                if (BigIntComparisons.Conditions.LTEQ.matches(\n                        new BigInteger(currentShard.getSequenceNumberRange().getStartingSequenceNumber()),\n                        new BigInteger(getEndpoint().getSequenceNumber())\n                )) {\n                    req = req.withSequenceNumber(getEndpoint().getSequenceNumber());\n                } else {\n                    req = req.withShardIteratorType(ShardIteratorType.TRIM_HORIZON);\n                }\n                break;\n            default:\n            }\n            GetShardIteratorResult result = getClient().getShardIterator(req);\n            currentShardIterator = result.getShardIterator();\n        }\n        LOG.trace(\"Shard Iterator is: {}\", currentShardIterator);\n        return currentShardIterator;\n    }","commit_id":"9c99648c601097bda6c5b08360b1c45c345793d8","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void trimHorizonWalksAllShards() throws Exception {\n        endpoint.setIteratorType(ShardIteratorType.TRIM_HORIZON);\n\n        String[] shardIterators = new String[4];\n\n        for (int i = 0; i < shardIterators.length; ++i) {\n            shardIterators[i] = undertest.getShardIterator();\n            undertest.updateShardIterator(null);\n        }\n\n        ArgumentCaptor<GetShardIteratorRequest> getIteratorCaptor = ArgumentCaptor.forClass(GetShardIteratorRequest.class);\n        verify(amazonDynamoDBStreams, times(4)).getShardIterator(getIteratorCaptor.capture());\n        String[] shards = new String[]{\"a\", \"b\", \"c\", \"d\"};\n        for (int i = 0; i < shards.length; ++i) {\n            assertThat(getIteratorCaptor.getAllValues().get(i).getShardId(), is(shards[i]));\n        }\n        assertThat(shardIterators, is(new String[]{\"shard_iterator_a_000\", \"shard_iterator_b_000\", \"shard_iterator_c_000\", \"shard_iterator_d_000\"}));\n\n    }","id":48095,"modified_method":"@Test\n    public void trimHorizonWalksAllShards() throws Exception {\n        endpoint.setIteratorType(ShardIteratorType.TRIM_HORIZON);\n\n        String[] shardIterators = new String[4];\n\n        for (int i = 0; i < shardIterators.length; ++i) {\n            shardIterators[i] = undertest.getShardIterator(null);\n            undertest.updateShardIterator(null);\n        }\n\n        ArgumentCaptor<GetShardIteratorRequest> getIteratorCaptor = ArgumentCaptor.forClass(GetShardIteratorRequest.class);\n        verify(amazonDynamoDBStreams, times(4)).getShardIterator(getIteratorCaptor.capture());\n        String[] shards = new String[]{\"a\", \"b\", \"c\", \"d\"};\n        for (int i = 0; i < shards.length; ++i) {\n            assertThat(getIteratorCaptor.getAllValues().get(i).getShardId(), is(shards[i]));\n        }\n        assertThat(shardIterators, is(new String[]{\"shard_iterator_a_000\", \"shard_iterator_b_000\", \"shard_iterator_c_000\", \"shard_iterator_d_000\"}));\n\n    }","commit_id":"9c99648c601097bda6c5b08360b1c45c345793d8","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void afterSeqNumber16StartsWithShardC() throws Exception {\n        endpoint.setIteratorType(ShardIteratorType.AT_SEQUENCE_NUMBER);\n        endpoint.setSequenceNumberProvider(new StaticSequenceNumberProvider(\"16\"));\n\n        String shardIterator = undertest.getShardIterator();\n\n        ArgumentCaptor<GetShardIteratorRequest> getIteratorCaptor = ArgumentCaptor.forClass(GetShardIteratorRequest.class);\n        verify(amazonDynamoDBStreams).getShardIterator(getIteratorCaptor.capture());\n        assertThat(getIteratorCaptor.getValue().getShardId(), is(\"c\"));\n        assertThat(shardIterator, is(\"shard_iterator_c_000\"));\n    }","id":48096,"modified_method":"@Test\n    public void afterSeqNumber16StartsWithShardC() throws Exception {\n        endpoint.setIteratorType(ShardIteratorType.AT_SEQUENCE_NUMBER);\n        endpoint.setSequenceNumberProvider(new StaticSequenceNumberProvider(\"16\"));\n\n        String shardIterator = undertest.getShardIterator(null);\n\n        ArgumentCaptor<GetShardIteratorRequest> getIteratorCaptor = ArgumentCaptor.forClass(GetShardIteratorRequest.class);\n        verify(amazonDynamoDBStreams).getShardIterator(getIteratorCaptor.capture());\n        assertThat(getIteratorCaptor.getValue().getShardId(), is(\"c\"));\n        assertThat(shardIterator, is(\"shard_iterator_c_000\"));\n    }","commit_id":"9c99648c601097bda6c5b08360b1c45c345793d8","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void trimHorizonStartsWithTheFirstShard() throws Exception {\n        endpoint.setIteratorType(ShardIteratorType.TRIM_HORIZON);\n\n        String shardIterator = undertest.getShardIterator();\n\n        ArgumentCaptor<GetShardIteratorRequest> getIteratorCaptor = ArgumentCaptor.forClass(GetShardIteratorRequest.class);\n        verify(amazonDynamoDBStreams).getShardIterator(getIteratorCaptor.capture());\n        assertThat(getIteratorCaptor.getValue().getShardId(), is(\"a\"));\n        assertThat(shardIterator, is(\"shard_iterator_a_000\"));\n    }","id":48097,"modified_method":"@Test\n    public void trimHorizonStartsWithTheFirstShard() throws Exception {\n        endpoint.setIteratorType(ShardIteratorType.TRIM_HORIZON);\n\n        String shardIterator = undertest.getShardIterator(null);\n\n        ArgumentCaptor<GetShardIteratorRequest> getIteratorCaptor = ArgumentCaptor.forClass(GetShardIteratorRequest.class);\n        verify(amazonDynamoDBStreams).getShardIterator(getIteratorCaptor.capture());\n        assertThat(getIteratorCaptor.getValue().getShardId(), is(\"a\"));\n        assertThat(shardIterator, is(\"shard_iterator_a_000\"));\n    }","commit_id":"9c99648c601097bda6c5b08360b1c45c345793d8","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void cachesRecentShardId() throws Exception {\n        endpoint.setIteratorType(ShardIteratorType.LATEST);\n\n        undertest.updateShardIterator(\"bar\");\n        String shardIterator = undertest.getShardIterator();\n\n        verify(amazonDynamoDBStreams, times(0)).getShardIterator(any(GetShardIteratorRequest.class));\n        assertThat(shardIterator, is(\"bar\"));\n    }","id":48098,"modified_method":"@Test\n    public void cachesRecentShardId() throws Exception {\n        endpoint.setIteratorType(ShardIteratorType.LATEST);\n\n        undertest.updateShardIterator(\"bar\");\n        String shardIterator = undertest.getShardIterator(null);\n\n        verify(amazonDynamoDBStreams, times(0)).getShardIterator(any(GetShardIteratorRequest.class));\n        assertThat(shardIterator, is(\"bar\"));\n    }","commit_id":"9c99648c601097bda6c5b08360b1c45c345793d8","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void atSeqNumber12StartsWithShardB() throws Exception {\n        endpoint.setIteratorType(ShardIteratorType.AT_SEQUENCE_NUMBER);\n        endpoint.setSequenceNumberProvider(new StaticSequenceNumberProvider(\"12\"));\n\n        String shardIterator = undertest.getShardIterator();\n\n        ArgumentCaptor<GetShardIteratorRequest> getIteratorCaptor = ArgumentCaptor.forClass(GetShardIteratorRequest.class);\n        verify(amazonDynamoDBStreams).getShardIterator(getIteratorCaptor.capture());\n        assertThat(getIteratorCaptor.getValue().getShardId(), is(\"b\"));\n        assertThat(shardIterator, is(\"shard_iterator_b_000\"));\n    }","id":48099,"modified_method":"@Test\n    public void atSeqNumber12StartsWithShardB() throws Exception {\n        endpoint.setIteratorType(ShardIteratorType.AT_SEQUENCE_NUMBER);\n        endpoint.setSequenceNumberProvider(new StaticSequenceNumberProvider(\"12\"));\n\n        String shardIterator = undertest.getShardIterator(null);\n\n        ArgumentCaptor<GetShardIteratorRequest> getIteratorCaptor = ArgumentCaptor.forClass(GetShardIteratorRequest.class);\n        verify(amazonDynamoDBStreams).getShardIterator(getIteratorCaptor.capture());\n        assertThat(getIteratorCaptor.getValue().getShardId(), is(\"b\"));\n        assertThat(shardIterator, is(\"shard_iterator_b_000\"));\n    }","commit_id":"9c99648c601097bda6c5b08360b1c45c345793d8","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void latestOnlyUsesTheLastShard() throws Exception {\n        endpoint.setIteratorType(ShardIteratorType.LATEST);\n\n        String shardIterator = undertest.getShardIterator();\n\n        ArgumentCaptor<GetShardIteratorRequest> getIteratorCaptor = ArgumentCaptor.forClass(GetShardIteratorRequest.class);\n        verify(amazonDynamoDBStreams).getShardIterator(getIteratorCaptor.capture());\n        assertThat(getIteratorCaptor.getValue().getShardId(), is(\"d\"));\n        assertThat(shardIterator, is(\"shard_iterator_d_000\"));\n    }","id":48100,"modified_method":"@Test\n    public void latestOnlyUsesTheLastShard() throws Exception {\n        endpoint.setIteratorType(ShardIteratorType.LATEST);\n\n        String shardIterator = undertest.getShardIterator(null);\n\n        ArgumentCaptor<GetShardIteratorRequest> getIteratorCaptor = ArgumentCaptor.forClass(GetShardIteratorRequest.class);\n        verify(amazonDynamoDBStreams).getShardIterator(getIteratorCaptor.capture());\n        assertThat(getIteratorCaptor.getValue().getShardId(), is(\"d\"));\n        assertThat(shardIterator, is(\"shard_iterator_d_000\"));\n    }","commit_id":"9c99648c601097bda6c5b08360b1c45c345793d8","url":"https://github.com/apache/camel"},{"original_method":"public RowSet getMockInputRowSet( final List<Object[]> rows ) {\n    final AtomicInteger index = new AtomicInteger( 0 );\n    RowSet rowSet = mock( RowSet.class, Mockito.RETURNS_MOCKS );\n    when( rowSet.getRowWait( anyLong(), any( TimeUnit.class ) ) ).thenAnswer( new Answer<Object[]>() {\n      @Override\n      public Object[] answer( InvocationOnMock invocation ) throws Throwable {\n        int i = index.getAndIncrement();\n        return i < rows.size() ? rows.get( i ) : null;\n      }\n\n    } );\n    when( rowSet.isDone() ).thenAnswer( new Answer<Boolean>() {\n\n      @Override\n      public Boolean answer( InvocationOnMock invocation ) throws Throwable {\n        return index.get() >= rows.size();\n      }\n    } );\n    return rowSet;\n  }","id":48101,"modified_method":"public RowSet getMockInputRowSet( final List<Object[]> rows ) {\n    final AtomicInteger index = new AtomicInteger( 0 );\n    RowSet rowSet = mock( RowSet.class, Mockito.RETURNS_MOCKS );\n    Answer answer = new Answer<Object[]>() {\n      @Override\n      public Object[] answer( InvocationOnMock invocation ) throws Throwable {\n        int i = index.getAndIncrement();\n        return i < rows.size() ? rows.get( i ) : null;\n      }\n    };\n    when( rowSet.getRowWait( anyLong(), any( TimeUnit.class ) ) ).thenAnswer( answer );\n    when( rowSet.getRow() ).thenAnswer( answer );\n    when( rowSet.isDone() ).thenAnswer( new Answer<Boolean>() {\n\n      @Override\n      public Boolean answer( InvocationOnMock invocation ) throws Throwable {\n        return index.get() >= rows.size();\n      }\n    } );\n    return rowSet;\n  }","commit_id":"28004e6c5cbc120bf31a9961454af1166ed25114","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean readLookupValues() throws KettleException {\n    data.infoStream = meta.getStepIOMeta().getInfoStreams().get( 0 );\n    if ( data.infoStream.getStepMeta() == null ) {\n      logError( BaseMessages.getString( PKG, \"StreamLookup.Log.NoLookupStepSpecified\" ) );\n      return false;\n    }\n    if ( log.isDetailed() ) {\n      logDetailed( BaseMessages.getString( PKG, \"StreamLookup.Log.ReadingFromStream\" )\n        + data.infoStream.getStepname() + \"]\" );\n    }\n\n    int[] keyNrs = new int[meta.getKeylookup().length];\n    int[] valueNrs = new int[meta.getValue().length];\n    boolean firstRun = true;\n\n    // Which row set do we read from?\n    //\n    RowSet rowSet = findInputRowSet( data.infoStream.getStepname() );\n    Object[] rowData = getRowFrom( rowSet ); // rows are originating from \"lookup_from\"\n    while ( rowData != null ) {\n      if ( log.isRowLevel() ) {\n        logRowlevel( BaseMessages.getString( PKG, \"StreamLookup.Log.ReadLookupRow\" )\n          + rowSet.getRowMeta().getString( rowData ) );\n      }\n\n      if ( firstRun ) {\n        firstRun = false;\n        data.hasLookupRows = true;\n\n        data.infoMeta = rowSet.getRowMeta().clone();\n        data.keyMeta = new RowMeta();\n        data.valueMeta = new RowMeta();\n\n        // Look up the keys in the source rows\n        for ( int i = 0; i < meta.getKeylookup().length; i++ ) {\n          keyNrs[i] = rowSet.getRowMeta().indexOfValue( meta.getKeylookup()[i] );\n          if ( keyNrs[i] < 0 ) {\n            throw new KettleStepException( BaseMessages.getString(\n              PKG, \"StreamLookup.Exception.UnableToFindField\", meta.getKeylookup()[i] ) );\n          }\n          data.keyMeta.addValueMeta( rowSet.getRowMeta().getValueMeta( keyNrs[i] ) );\n        }\n        // Save the data types of the keys to optionally convert input rows later on...\n        if ( data.keyTypes == null ) {\n          data.keyTypes = data.keyMeta.clone();\n        }\n        // set the meta data for the keys also to STORAGE_TYPE_NORMAL, otherwise it will conflict later on\n        // for the data is is already set to STORAGE_TYPE_NORMAL in StreamLookupMeta.getFields()\n        // all values in the cache are of this storage type (see convertToNormalStorageType below)\n        // position here after keyTypes are stored (needed below for correct convertToNormalStorageType)\n        for ( int i = 0; i < keyNrs.length; i++ ) {\n          data.keyMeta.getValueMeta( i ).setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL );\n        }\n\n        for ( int v = 0; v < meta.getValue().length; v++ ) {\n          valueNrs[v] = rowSet.getRowMeta().indexOfValue( meta.getValue()[v] );\n          if ( valueNrs[v] < 0 ) {\n            throw new KettleStepException( BaseMessages.getString(\n              PKG, \"StreamLookup.Exception.UnableToFindField\", meta.getValue()[v] ) );\n          }\n          data.valueMeta.addValueMeta( rowSet.getRowMeta().getValueMeta( valueNrs[v] ) );\n        }\n      }\n\n      Object[] keyData = new Object[keyNrs.length];\n      for ( int i = 0; i < keyNrs.length; i++ ) {\n        ValueMetaInterface keyMeta = data.keyTypes.getValueMeta( i );\n        keyData[i] = keyMeta.convertToNormalStorageType( rowData[keyNrs[i]] ); // Make sure only normal storage goes in\n        keyMeta.setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL ); // now we need to change keyMeta/keyTypes also\n                                                                          // to normal\n      }\n\n      Object[] valueData = new Object[valueNrs.length];\n      for ( int i = 0; i < valueNrs.length; i++ ) {\n        ValueMetaInterface valueMeta = data.valueMeta.getValueMeta( i );\n        valueData[i] = valueMeta.convertToNormalStorageType( rowData[valueNrs[i]] ); // make sure only normal storage\n                                                                                     // goes in\n      }\n\n      addToCache( data.keyMeta, keyData, data.valueMeta, valueData );\n\n      rowData = getRowFrom( rowSet );\n    }\n\n    return true;\n  }","id":48102,"modified_method":"private boolean readLookupValues() throws KettleException {\n    data.infoStream = meta.getStepIOMeta().getInfoStreams().get( 0 );\n    if ( data.infoStream.getStepMeta() == null ) {\n      logError( BaseMessages.getString( PKG, \"StreamLookup.Log.NoLookupStepSpecified\" ) );\n      return false;\n    }\n    if ( log.isDetailed() ) {\n      logDetailed( BaseMessages.getString( PKG, \"StreamLookup.Log.ReadingFromStream\" )\n        + data.infoStream.getStepname() + \"]\" );\n    }\n\n    int[] keyNrs = new int[meta.getKeylookup().length];\n    int[] valueNrs = new int[meta.getValue().length];\n    boolean firstRun = true;\n\n    // Which row set do we read from?\n    //\n    RowSet rowSet = findInputRowSet( data.infoStream.getStepname() );\n    Object[] rowData = getRowFrom( rowSet ); // rows are originating from \"lookup_from\"\n    while ( rowData != null ) {\n      if ( log.isRowLevel() ) {\n        logRowlevel( BaseMessages.getString( PKG, \"StreamLookup.Log.ReadLookupRow\" )\n          + rowSet.getRowMeta().getString( rowData ) );\n      }\n\n      if ( firstRun ) {\n        firstRun = false;\n        data.hasLookupRows = true;\n\n        data.infoMeta = rowSet.getRowMeta().clone();\n        RowMetaInterface cacheKeyMeta = new RowMeta();\n        RowMetaInterface cacheValueMeta = new RowMeta();\n\n   // Look up the keys in the source rows\n        for ( int i = 0; i < meta.getKeylookup().length; i++ ) {\n          keyNrs[i] = rowSet.getRowMeta().indexOfValue( meta.getKeylookup()[i] );\n          if ( keyNrs[i] < 0 ) {\n            throw new KettleStepException( BaseMessages.getString(\n              PKG, \"StreamLookup.Exception.UnableToFindField\", meta.getKeylookup()[i] ) );\n          }\n          cacheKeyMeta.addValueMeta( rowSet.getRowMeta().getValueMeta( keyNrs[i] ) );\n        }\n       // Save the data types of the keys to optionally convert input rows later on...\n        if ( data.keyTypes == null ) {\n          data.keyTypes = cacheKeyMeta.clone();\n        }\n\n        // Cache keys are stored as normal types, not binary\n        for ( int i = 0; i < keyNrs.length; i++ ) {\n          cacheKeyMeta.getValueMeta( i ).setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL );\n        }\n\n       for ( int v = 0; v < meta.getValue().length; v++ ) {\n          valueNrs[v] = rowSet.getRowMeta().indexOfValue( meta.getValue()[v] );\n          if ( valueNrs[v] < 0 ) {\n            throw new KettleStepException( BaseMessages.getString(\n              PKG, \"StreamLookup.Exception.UnableToFindField\", meta.getValue()[v] ) );\n          }\n          cacheValueMeta.addValueMeta( rowSet.getRowMeta().getValueMeta( valueNrs[v] ) );\n        }\n\n        data.cacheKeyMeta = cacheKeyMeta;\n        data.cacheValueMeta = cacheValueMeta;\n      }\n\n      Object[] keyData = new Object[keyNrs.length];\n      for ( int i = 0; i < keyNrs.length; i++ ) {\n        ValueMetaInterface keyMeta = data.keyTypes.getValueMeta( i );\n        // Convert keys to normal storage type\n        keyData[i] = keyMeta.convertToNormalStorageType( rowData[keyNrs[i]] );\n      }\n\n      Object[] valueData = new Object[valueNrs.length];\n      for ( int i = 0; i < valueNrs.length; i++ ) {\n        // Store value as is, avoid preliminary binary->normal storage type conversion\n        valueData[i] = rowData[valueNrs[i]];\n      }\n\n      addToCache( data.cacheKeyMeta, keyData, data.cacheValueMeta, valueData );\n\n      rowData = getRowFrom( rowSet );\n    }\n\n    return true;\n  }","commit_id":"28004e6c5cbc120bf31a9961454af1166ed25114","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void handleNullIf() {\n    data.nullIf = new Object[meta.getValue().length];\n\n    for ( int i = 0; i < meta.getValue().length; i++ ) {\n      if ( meta.getValueDefaultType()[i] < 0 ) {\n        //CHECKSTYLE:Indentation:OFF\n        meta.getValueDefaultType()[i] = ValueMetaInterface.TYPE_STRING;\n      }\n      data.nullIf[i] = null;\n      switch ( meta.getValueDefaultType()[i] ) {\n        case ValueMetaInterface.TYPE_STRING:\n          if ( Const.isEmpty( meta.getValueDefault()[i] ) ) {\n            data.nullIf[i] = null;\n          } else {\n            data.nullIf[i] = meta.getValueDefault()[i];\n          }\n          break;\n        case ValueMetaInterface.TYPE_DATE:\n          try {\n            data.nullIf[i] = DateFormat.getInstance().parse( meta.getValueDefault()[i] );\n          } catch ( Exception e ) {\n            // Ignore errors\n          }\n          break;\n        case ValueMetaInterface.TYPE_NUMBER:\n          try {\n            data.nullIf[i] = new Double( Double.parseDouble( meta.getValueDefault()[i] ) );\n          } catch ( Exception e ) {\n            // Ignore errors\n          }\n          break;\n        case ValueMetaInterface.TYPE_INTEGER:\n          try {\n            data.nullIf[i] = new Long( Long.parseLong( meta.getValueDefault()[i] ) );\n          } catch ( Exception e ) {\n            // Ignore errors\n          }\n          break;\n        case ValueMetaInterface.TYPE_BOOLEAN:\n          if ( \"TRUE\".equalsIgnoreCase( meta.getValueDefault()[i] )\n            || \"Y\".equalsIgnoreCase( meta.getValueDefault()[i] ) ) {\n            data.nullIf[i] = Boolean.TRUE;\n          } else {\n            data.nullIf[i] = Boolean.FALSE;\n          }\n          break;\n        case ValueMetaInterface.TYPE_BIGNUMBER:\n          try {\n            data.nullIf[i] = new BigDecimal( meta.getValueDefault()[i] );\n          } catch ( Exception e ) {\n            // Ignore errors\n          }\n          break;\n        default:\n          // if a default value is given and no conversion is implemented throw an error\n          if ( meta.getValueDefault()[i] != null && meta.getValueDefault()[i].trim().length() > 0 ) {\n            throw new RuntimeException( BaseMessages.getString(\n              PKG, \"StreamLookup.Exception.ConversionNotImplemented\" )\n              + \" \" + ValueMeta.getTypeDesc( meta.getValueDefaultType()[i] ) );\n          } else {\n            // no default value given: just set it to null\n            data.nullIf[i] = null;\n            break;\n          }\n      }\n    }\n  }","id":48103,"modified_method":"private void handleNullIf() {\n    data.nullIf = new Object[meta.getValue().length];\n\n    for ( int i = 0; i < meta.getValue().length; i++ ) {\n      if ( meta.getValueDefaultType()[i] < 0 ) {\n        //CHECKSTYLE:Indentation:OFF\n        meta.getValueDefaultType()[i] = ValueMetaInterface.TYPE_STRING;\n      }\n      data.nullIf[i] = null;\n      switch ( meta.getValueDefaultType()[i] ) {\n        case ValueMetaInterface.TYPE_STRING:\n          if ( Const.isEmpty( meta.getValueDefault()[i] ) ) {\n            data.nullIf[i] = null;\n          } else {\n            data.nullIf[i] = meta.getValueDefault()[i];\n          }\n          break;\n        case ValueMetaInterface.TYPE_DATE:\n          try {\n            data.nullIf[i] = DateFormat.getInstance().parse( meta.getValueDefault()[i] );\n          } catch ( Exception e ) {\n            // Ignore errors\n          }\n          break;\n        case ValueMetaInterface.TYPE_NUMBER:\n          try {\n            data.nullIf[i] = Double.parseDouble( meta.getValueDefault()[i] );\n          } catch ( Exception e ) {\n            // Ignore errors\n          }\n          break;\n        case ValueMetaInterface.TYPE_INTEGER:\n          try {\n            data.nullIf[i] = Long.parseLong( meta.getValueDefault()[i] );\n        } catch ( Exception e ) {\n            // Ignore errors\n          }\n          break;\n        case ValueMetaInterface.TYPE_BOOLEAN:\n          if ( \"TRUE\".equalsIgnoreCase( meta.getValueDefault()[i] )\n            || \"Y\".equalsIgnoreCase( meta.getValueDefault()[i] ) ) {\n            data.nullIf[i] = Boolean.TRUE;\n          } else {\n            data.nullIf[i] = Boolean.FALSE;\n          }\n          break;\n        case ValueMetaInterface.TYPE_BIGNUMBER:\n          try {\n            data.nullIf[i] = new BigDecimal( meta.getValueDefault()[i] );\n          } catch ( Exception e ) {\n            // Ignore errors\n          }\n          break;\n        default:\n          // if a default value is given and no conversion is implemented throw an error\n          if ( meta.getValueDefault()[i] != null && meta.getValueDefault()[i].trim().length() > 0 ) {\n            throw new RuntimeException( BaseMessages.getString(\n              PKG, \"StreamLookup.Exception.ConversionNotImplemented\" )\n              + \" \" + ValueMeta.getTypeDesc( meta.getValueDefaultType()[i] ) );\n          } else {\n            // no default value given: just set it to null\n            data.nullIf[i] = null;\n            break;\n          }\n      }\n    }\n  }","commit_id":"28004e6c5cbc120bf31a9961454af1166ed25114","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private Object[] getFromCache( RowMetaInterface keyMeta, Object[] keyData ) throws KettleValueException {\n    if ( meta.isMemoryPreservationActive() ) {\n      if ( meta.isUsingSortedList() ) {\n        KeyValue keyValue = new KeyValue( keyData, null );\n        int idx = Collections.binarySearch( data.list, keyValue, data.comparator );\n        if ( idx < 0 ) {\n          return null; // nothing found\n        }\n\n        keyValue = data.list.get( idx );\n        return keyValue.getValue();\n      } else {\n        if ( meta.isUsingIntegerPair() ) {\n          Long value = data.longIndex.get( keyMeta.getInteger( keyData, 0 ) );\n          if ( value == null ) {\n            return null;\n          }\n          return new Object[] { value, };\n        } else {\n          try {\n            byte[] value = data.hashIndex.get( RowMeta.extractData( keyMeta, keyData ) );\n            if ( value == null ) {\n              return null;\n            }\n            return RowMeta.getRow( data.valueMeta, value );\n          } catch ( Exception e ) {\n            logError( \"Oops\", e );\n            throw new RuntimeException( e );\n          }\n        }\n      }\n    } else {\n      return data.look.get( new RowMetaAndData( keyMeta, keyData ) );\n    }\n  }","id":48104,"modified_method":"private Object[] getFromCache( RowMetaInterface keyMeta, Object[] keyData ) throws KettleValueException {\n    if ( meta.isMemoryPreservationActive() ) {\n      if ( meta.isUsingSortedList() ) {\n        KeyValue keyValue = new KeyValue( keyData, null );\n        int idx = Collections.binarySearch( data.list, keyValue, data.comparator );\n        if ( idx < 0 ) {\n          return null; // nothing found\n        }\n\n        keyValue = data.list.get( idx );\n        return keyValue.getValue();\n      } else {\n        if ( meta.isUsingIntegerPair() ) {\n          Long value = data.longIndex.get( keyMeta.getInteger( keyData, 0 ) );\n          if ( value == null ) {\n            return null;\n          }\n          return new Object[] { value, };\n        } else {\n          try {\n            byte[] value = data.hashIndex.get( RowMeta.extractData( keyMeta, keyData ) );\n            if ( value == null ) {\n              return null;\n            }\n            return RowMeta.getRow( data.cacheValueMeta, value );\n   } catch ( Exception e ) {\n            logError( \"Oops\", e );\n            throw new RuntimeException( e );\n          }\n        }\n      }\n    } else {\n      return data.look.get( new RowMetaAndData( keyMeta, keyData ) );\n    }\n  }","commit_id":"28004e6c5cbc120bf31a9961454af1166ed25114","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean processRow( StepMetaInterface smi, StepDataInterface sdi ) throws KettleException {\n    meta = (StreamLookupMeta) smi;\n    data = (StreamLookupData) sdi;\n\n    if ( data.readLookupValues ) {\n      data.readLookupValues = false;\n\n      if ( !readLookupValues() ) {\n        // Read values in lookup table (look)\n\n        logError( BaseMessages.getString( PKG, \"StreamLookup.Log.UnableToReadDataFromLookupStream\" ) );\n        setErrors( 1 );\n        stopAll();\n        return false;\n      }\n\n      // At this point, all the values in the cache are of normal storage data type...\n      // We should reflect this in the metadata...\n      //\n      if ( data.keyMeta != null ) { // null when no rows coming from lookup stream\n        for ( ValueMetaInterface valueMeta : data.keyMeta.getValueMetaList() ) {\n          valueMeta.setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL );\n        }\n      }\n      if ( data.valueMeta != null ) { // null when no rows coming from lookup stream\n        for ( ValueMetaInterface valueMeta : data.valueMeta.getValueMetaList() ) {\n          valueMeta.setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL );\n        }\n      }\n\n      return true;\n    }\n\n    Object[] r = getRow(); // Get row from input rowset & set row busy!\n    if ( r == null ) {\n      // no more input to be expected...\n\n      if ( log.isDetailed() ) {\n        logDetailed( BaseMessages.getString( PKG, \"StreamLookup.Log.StoppedProcessingWithEmpty\", getLinesRead()\n          + \"\" ) );\n      }\n      setOutputDone();\n      return false;\n    }\n\n    if ( first ) {\n      first = false;\n\n      // read the lookup values!\n      data.keynrs = new int[meta.getKeystream().length];\n      data.lookupMeta = new RowMeta();\n      data.convertKeysToNative = new boolean[meta.getKeystream().length];\n\n      for ( int i = 0; i < meta.getKeystream().length; i++ ) {\n        // Find the keynr in the row (only once)\n        data.keynrs[i] = getInputRowMeta().indexOfValue( meta.getKeystream()[i] );\n        if ( data.keynrs[i] < 0 ) {\n          throw new KettleStepException(\n            BaseMessages\n              .getString(\n                PKG,\n                \"StreamLookup.Log.FieldNotFound\", meta.getKeystream()[i], \"\" + getInputRowMeta().getString( r ) ) );\n        } else {\n          if ( log.isDetailed() ) {\n            logDetailed( BaseMessages.getString(\n              PKG, \"StreamLookup.Log.FieldInfo\", meta.getKeystream()[i], \"\" + data.keynrs[i] ) );\n          }\n        }\n\n        data.lookupMeta.addValueMeta( getInputRowMeta().getValueMeta( data.keynrs[i] ).clone() );\n\n        // If we have binary storage data coming in, we convert it to normal data storage.\n        // The storage in the lookup data store is also normal data storage. TODO: enforce normal data storage??\n        //\n        data.convertKeysToNative[i] = getInputRowMeta().getValueMeta( data.keynrs[i] ).isStorageBinaryString();\n      }\n\n      data.outputRowMeta = getInputRowMeta().clone();\n      meta.getFields(\n        data.outputRowMeta, getStepname(), new RowMetaInterface[] { data.infoMeta }, null, this, repository,\n        metaStore );\n\n      // Handle the NULL values (not found...)\n      handleNullIf();\n    }\n\n    Object[] outputRow = lookupValues( getInputRowMeta(), r ); // Do the actual lookup in the hastable.\n    if ( outputRow == null ) {\n      setOutputDone(); // signal end to receiver(s)\n      return false;\n    }\n\n    putRow( data.outputRowMeta, outputRow ); // copy row to output rowset(s);\n\n    if ( checkFeedback( getLinesRead() ) ) {\n      if ( log.isBasic() ) {\n        logBasic( BaseMessages.getString( PKG, \"StreamLookup.Log.LineNumber\" ) + getLinesRead() );\n      }\n    }\n\n    return true;\n  }","id":48105,"modified_method":"public boolean processRow( StepMetaInterface smi, StepDataInterface sdi ) throws KettleException {\n    meta = (StreamLookupMeta) smi;\n    data = (StreamLookupData) sdi;\n\n    if ( data.readLookupValues ) {\n      data.readLookupValues = false;\n\n      if ( !readLookupValues() ) {\n        // Read values in lookup table (look)\n        logError( BaseMessages.getString( PKG, \"StreamLookup.Log.UnableToReadDataFromLookupStream\" ) );\n        setErrors( 1 );\n        stopAll();\n        return false;\n      }\n\n      return true;\n    }\n\n    Object[] r = getRow(); // Get row from input rowset & set row busy!\n    if ( r == null ) {\n      // no more input to be expected...\n\n      if ( log.isDetailed() ) {\n        logDetailed( BaseMessages.getString( PKG, \"StreamLookup.Log.StoppedProcessingWithEmpty\", getLinesRead()\n          + \"\" ) );\n      }\n      setOutputDone();\n      return false;\n    }\n\n    if ( first ) {\n      first = false;\n\n      // read the lookup values!\n      data.keynrs = new int[meta.getKeystream().length];\n      data.lookupMeta = new RowMeta();\n      data.convertKeysToNative = new boolean[meta.getKeystream().length];\n\n      for ( int i = 0; i < meta.getKeystream().length; i++ ) {\n        // Find the keynr in the row (only once)\n        data.keynrs[i] = getInputRowMeta().indexOfValue( meta.getKeystream()[i] );\n        if ( data.keynrs[i] < 0 ) {\n          throw new KettleStepException(\n            BaseMessages\n              .getString(\n                PKG,\n                \"StreamLookup.Log.FieldNotFound\", meta.getKeystream()[i], \"\" + getInputRowMeta().getString( r ) ) );\n        } else {\n          if ( log.isDetailed() ) {\n            logDetailed( BaseMessages.getString(\n              PKG, \"StreamLookup.Log.FieldInfo\", meta.getKeystream()[i], \"\" + data.keynrs[i] ) );\n          }\n        }\n\n        data.lookupMeta.addValueMeta( getInputRowMeta().getValueMeta( data.keynrs[i] ).clone() );\n\n        // If we have binary storage data coming in, we convert it to normal data storage.\n        // The storage in the lookup data store is also normal data storage. TODO: enforce normal data storage??\n        //\n        data.convertKeysToNative[i] = getInputRowMeta().getValueMeta( data.keynrs[i] ).isStorageBinaryString();\n      }\n\n      data.outputRowMeta = getInputRowMeta().clone();\n      meta.getFields(\n        data.outputRowMeta, getStepname(), new RowMetaInterface[] { data.infoMeta }, null, this, repository,\n        metaStore );\n\n      // Handle the NULL values (not found...)\n      handleNullIf();\n    }\n\n    Object[] outputRow = lookupValues( getInputRowMeta(), r ); // Do the actual lookup in the hastable.\n    if ( outputRow == null ) {\n      setOutputDone(); // signal end to receiver(s)\n\n      return false;\n    }\n\n    putRow( data.outputRowMeta, outputRow ); // copy row to output rowset(s);\n\n    if ( checkFeedback( getLinesRead() ) ) {\n      if ( log.isBasic() ) {\n        logBasic( BaseMessages.getString( PKG, \"StreamLookup.Log.LineNumber\" ) + getLinesRead() );\n      }\n    }\n\n    return true;\n  }","commit_id":"28004e6c5cbc120bf31a9961454af1166ed25114","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private Object[] lookupValues( RowMetaInterface rowMeta, Object[] row ) throws KettleException {\n    // See if we need to stop.\n    if ( isStopped() ) {\n      return null;\n    }\n\n    if ( data.lookupColumnIndex == null ) {\n      String[] names = data.lookupMeta.getFieldNames();\n      data.lookupColumnIndex = new int[names.length];\n\n      for ( int i = 0; i < names.length; i++ ) {\n        data.lookupColumnIndex[i] = rowMeta.indexOfValue( names[i] );\n        if ( data.lookupColumnIndex[i] < 0 ) {\n          // we should not get here\n          throw new KettleStepException( \"The lookup column '\" + names[i] + \"' could not be found\" );\n        }\n      }\n    }\n\n    // Copy value references to lookup table.\n    //\n    Object[] lu = new Object[data.keynrs.length];\n    for ( int i = 0; i < data.keynrs.length; i++ ) {\n      // If the input is binary storage data, we convert it to normal storage.\n      //\n      if ( data.convertKeysToNative[i] ) {\n        lu[i] = data.lookupMeta.getValueMeta( i ).convertBinaryStringToNativeType( (byte[]) row[data.keynrs[i]] );\n      } else {\n        lu[i] = row[data.keynrs[i]];\n      }\n    }\n\n    // Handle conflicting types (Number-Integer-String conversion to lookup type in hashtable)\n    if ( data.keyTypes != null ) {\n      for ( int i = 0; i < data.lookupMeta.size(); i++ ) {\n        ValueMetaInterface inputValue = data.lookupMeta.getValueMeta( i );\n        ValueMetaInterface lookupValue = data.keyTypes.getValueMeta( i );\n        if ( inputValue.getType() != lookupValue.getType() ) {\n          try {\n            // Change the input value to match the lookup value\n            //\n            lu[i] = lookupValue.convertDataCompatible( inputValue, lu[i] );\n          } catch ( KettleValueException e ) {\n            throw new KettleStepException( \"Error converting data while looking up value\", e );\n          }\n        }\n      }\n    }\n\n    Object[] add = null;\n\n    if ( data.hasLookupRows ) {\n      try {\n        if ( meta.getKeystream().length > 0 ) {\n          add = getFromCache( data.keyTypes, lu );\n        } else {\n          // Just take the first element in the hashtable...\n          throw new KettleStepException( BaseMessages.getString( PKG, \"StreamLookup.Log.GotRowWithoutKeys\" ) );\n        }\n      } catch ( Exception e ) {\n        throw new KettleStepException( e );\n      }\n    }\n\n    if ( add == null ) // nothing was found, unknown code: add the specified default value...\n    {\n      add = data.nullIf;\n    }\n\n    return RowDataUtil.addRowData( row, rowMeta.size(), add );\n  }","id":48106,"modified_method":"private Object[] lookupValues( RowMetaInterface rowMeta, Object[] row ) throws KettleException {\n    // See if we need to stop.\n    if ( isStopped() ) {\n      return null;\n    }\n\n    if ( data.lookupColumnIndex == null ) {\n      String[] names = data.lookupMeta.getFieldNames();\n      data.lookupColumnIndex = new int[names.length];\n\n      for ( int i = 0; i < names.length; i++ ) {\n        data.lookupColumnIndex[i] = rowMeta.indexOfValue( names[i] );\n        if ( data.lookupColumnIndex[i] < 0 ) {\n          // we should not get here\n          throw new KettleStepException( \"The lookup column '\" + names[i] + \"' could not be found\" );\n        }\n      }\n    }\n\n    // Copy value references to lookup table.\n    //\n    Object[] lu = new Object[data.keynrs.length];\n    for ( int i = 0; i < data.keynrs.length; i++ ) {\n      // If the input is binary storage data, we convert it to normal storage.\n      //\n      if ( data.convertKeysToNative[i] ) {\n        lu[i] = data.lookupMeta.getValueMeta( i ).convertBinaryStringToNativeType( (byte[]) row[data.keynrs[i]] );\n      } else {\n        lu[i] = row[data.keynrs[i]];\n      }\n    }\n\n    // Handle conflicting types (Number-Integer-String conversion to lookup type in hashtable)\n    if ( data.keyTypes != null ) {\n      for ( int i = 0; i < data.lookupMeta.size(); i++ ) {\n        ValueMetaInterface inputValue = data.lookupMeta.getValueMeta( i );\n        ValueMetaInterface lookupValue = data.keyTypes.getValueMeta( i );\n        if ( inputValue.getType() != lookupValue.getType() ) {\n          try {\n            // Change the input value to match the lookup value\n            //\n            lu[i] = lookupValue.convertDataCompatible( inputValue, lu[i] );\n          } catch ( KettleValueException e ) {\n            throw new KettleStepException( \"Error converting data while looking up value\", e );\n          }\n        }\n      }\n    }\n\n    Object[] add = null;\n\n    if ( data.hasLookupRows ) {\n      try {\n        if ( meta.getKeystream().length > 0 ) {\n          add = getFromCache( data.cacheKeyMeta, lu );\n        } else {\n   // Just take the first element in the hashtable...\n          throw new KettleStepException( BaseMessages.getString( PKG, \"StreamLookup.Log.GotRowWithoutKeys\" ) );\n        }\n      } catch ( Exception e ) {\n        throw new KettleStepException( e );\n      }\n    }\n\n    if ( add == null ) // nothing was found, unknown code: add the specified default value...\n    {\n      add = data.nullIf;\n    }\n\n    return RowDataUtil.addRowData( row, rowMeta.size(), add );\n  }","commit_id":"28004e6c5cbc120bf31a9961454af1166ed25114","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public StreamLookupData() {\n    super();\n    look = new HashMap<RowMetaAndData, Object[]>();\n    hashIndex = null;\n    longIndex = new LongHashIndex();\n    list = new ArrayList<KeyValue>();\n    metadataVerifiedIntegerPair = false;\n    hasLookupRows = false;\n\n    comparator = new Comparator<KeyValue>() {\n      public int compare( KeyValue k1, KeyValue k2 ) {\n        try {\n          return keyMeta.compare( k1.getKey(), k2.getKey() );\n        } catch ( KettleValueException e ) {\n          throw new RuntimeException( \"Stream Lookup comparator error\", e );\n        }\n      }\n    };\n  }","id":48107,"modified_method":"public StreamLookupData() {\n    super();\n    look = new HashMap<RowMetaAndData, Object[]>();\n    hashIndex = null;\n    longIndex = new LongHashIndex();\n    list = new ArrayList<KeyValue>();\n    metadataVerifiedIntegerPair = false;\n    hasLookupRows = false;\n\n    comparator = new Comparator<KeyValue>() {\n      public int compare( KeyValue k1, KeyValue k2 ) {\n        try {\n          return cacheKeyMeta.compare( k1.getKey(), k2.getKey() );\n        } catch ( KettleValueException e ) {\n          throw new RuntimeException( \"Stream Lookup comparator error\", e );\n        }\n      }\n    };\n  }","commit_id":"28004e6c5cbc120bf31a9961454af1166ed25114","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void check( List<CheckResultInterface> remarks, TransMeta transMeta, StepMeta stepMeta,\n    RowMetaInterface prev, String[] input, String[] output, RowMetaInterface info, VariableSpace space,\n    Repository repository, IMetaStore metaStore ) {\n    CheckResult cr;\n\n    if ( prev != null && prev.size() > 0 ) {\n      cr =\n        new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString(\n          PKG, \"StreamLookupMeta.CheckResult.StepReceivingFields\", prev.size() + \"\" ), stepMeta );\n      remarks.add( cr );\n\n      String error_message = \"\";\n      boolean error_found = false;\n\n      // Starting from selected fields in ...\n      // Check the fields from the previous stream!\n      for ( int i = 0; i < keystream.length; i++ ) {\n        int idx = prev.indexOfValue( keystream[i] );\n        if ( idx < 0 ) {\n          error_message += \"\\t\\t\" + keystream[i] + Const.CR;\n          error_found = true;\n        }\n      }\n      if ( error_found ) {\n        error_message =\n          BaseMessages.getString( PKG, \"StreamLookupMeta.CheckResult.FieldsNotFound\" )\n            + Const.CR + Const.CR + error_message;\n\n        cr = new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, error_message, stepMeta );\n        remarks.add( cr );\n      } else {\n        cr =\n          new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString(\n            PKG, \"StreamLookupMeta.CheckResult.AllFieldsFound\" ), stepMeta );\n        remarks.add( cr );\n      }\n    } else {\n      cr =\n        new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, BaseMessages.getString(\n          PKG, \"StreamLookupMeta.CheckResult.CouldNotFindFieldsFromPreviousSteps\" ), stepMeta );\n      remarks.add( cr );\n    }\n\n    if ( info != null && info.size() > 0 ) {\n      cr =\n        new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString(\n          PKG, \"StreamLookupMeta.CheckResult.StepReceivingLookupData\", info.size() + \"\" ), stepMeta );\n      remarks.add( cr );\n\n      String error_message = \"\";\n      boolean error_found = false;\n\n      // Check the fields from the lookup stream!\n      for ( int i = 0; i < keylookup.length; i++ ) {\n        int idx = info.indexOfValue( keylookup[i] );\n        if ( idx < 0 ) {\n          error_message += \"\\t\\t\" + keylookup[i] + Const.CR;\n          error_found = true;\n        }\n      }\n      if ( error_found ) {\n        error_message =\n          BaseMessages.getString( PKG, \"StreamLookupMeta.CheckResult.FieldsNotFoundInLookupStream\" )\n            + Const.CR + Const.CR + error_message;\n\n        cr = new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, error_message, stepMeta );\n        remarks.add( cr );\n      } else {\n        cr =\n          new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString(\n            PKG, \"StreamLookupMeta.CheckResult.AllFieldsFoundInTheLookupStream\" ), stepMeta );\n        remarks.add( cr );\n      }\n\n      // Check the values to retrieve from the lookup stream!\n      for ( int i = 0; i < value.length; i++ ) {\n        int idx = info.indexOfValue( value[i] );\n        if ( idx < 0 ) {\n          error_message += \"\\t\\t\" + value[i] + Const.CR;\n          error_found = true;\n        }\n      }\n      if ( error_found ) {\n        error_message =\n          BaseMessages.getString( PKG, \"StreamLookupMeta.CheckResult.FieldsNotFoundInLookupStream2\" )\n            + Const.CR + Const.CR + error_message;\n\n        cr = new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, error_message, stepMeta );\n        remarks.add( cr );\n      } else {\n        cr =\n          new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString(\n            PKG, \"StreamLookupMeta.CheckResult.AllFieldsFoundInTheLookupStream2\" ), stepMeta );\n        remarks.add( cr );\n      }\n    } else {\n      cr =\n        new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, BaseMessages.getString(\n          PKG, \"StreamLookupMeta.CheckResult.FieldsNotFoundFromInLookupSep\" ), stepMeta );\n      remarks.add( cr );\n    }\n\n    // See if the source step is filled in!\n    StreamInterface infoStream = getStepIOMeta().getInfoStreams().get( 0 );\n    if ( infoStream.getStepMeta() == null ) {\n      cr =\n        new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, BaseMessages.getString(\n          PKG, \"StreamLookupMeta.CheckResult.SourceStepNotSelected\" ), stepMeta );\n      remarks.add( cr );\n    } else {\n      cr =\n        new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString(\n          PKG, \"StreamLookupMeta.CheckResult.SourceStepIsSelected\" ), stepMeta );\n      remarks.add( cr );\n\n      // See if the step exists!\n      //\n      if ( info != null ) {\n        cr =\n          new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString(\n            PKG, \"StreamLookupMeta.CheckResult.SourceStepExist\", infoStream.getStepname() ), stepMeta );\n        remarks.add( cr );\n      } else {\n        cr =\n          new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, BaseMessages.getString(\n            PKG, \"StreamLookupMeta.CheckResult.SourceStepDoesNotExist\", infoStream.getStepname() ), stepMeta );\n        remarks.add( cr );\n      }\n    }\n\n    // See if we have input streams leading to this step!\n    if ( input.length >= 2 ) {\n      cr =\n        new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString(\n          PKG, \"StreamLookupMeta.CheckResult.StepReceivingInfoFromInputSteps\", input.length + \"\" ), stepMeta );\n      remarks.add( cr );\n    } else {\n      cr =\n        new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, BaseMessages.getString(\n          PKG, \"StreamLookupMeta.CheckResult.NeedAtLeast2InputStreams\", Const.CR, Const.CR ), stepMeta );\n      remarks.add( cr );\n    }\n  }","id":48108,"modified_method":"public void check( List<CheckResultInterface> remarks, TransMeta transMeta, StepMeta stepMeta,\n    RowMetaInterface prev, String[] input, String[] output, RowMetaInterface info, VariableSpace space,\n    Repository repository, IMetaStore metaStore ) {\n    CheckResult cr;\n\n    if ( prev != null && prev.size() > 0 ) {\n      cr =\n        new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString(\n          PKG, \"StreamLookupMeta.CheckResult.StepReceivingFields\", prev.size() + \"\" ), stepMeta );\n      remarks.add( cr );\n\n      String error_message = \"\";\n      boolean error_found = false;\n\n      // Starting from selected fields in ...\n      // Check the fields from the previous stream!\n      for ( String aKeystream : getKeystream() ) {\n        int idx = prev.indexOfValue( aKeystream );\n        if ( idx < 0 ) {\n          error_message += \"\\t\\t\" + aKeystream + Const.CR;\n          error_found = true;\n        }\n      }\n      if ( error_found ) {\n        error_message =\n          BaseMessages.getString( PKG, \"StreamLookupMeta.CheckResult.FieldsNotFound\" )\n            + Const.CR + Const.CR + error_message;\n\n        cr = new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, error_message, stepMeta );\n        remarks.add( cr );\n      } else {\n        cr =\n          new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString(\n            PKG, \"StreamLookupMeta.CheckResult.AllFieldsFound\" ), stepMeta );\n        remarks.add( cr );\n      }\n    } else {\n      cr =\n        new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, BaseMessages.getString(\n          PKG, \"StreamLookupMeta.CheckResult.CouldNotFindFieldsFromPreviousSteps\" ), stepMeta );\n      remarks.add( cr );\n    }\n\n    if ( info != null && info.size() > 0 ) {\n      cr =\n        new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString(\n          PKG, \"StreamLookupMeta.CheckResult.StepReceivingLookupData\", info.size() + \"\" ), stepMeta );\n      remarks.add( cr );\n\n      String error_message = \"\";\n      boolean error_found = false;\n\n      // Check the fields from the lookup stream!\n      for ( String aKeylookup : getKeylookup() ) {\n        int idx = info.indexOfValue( aKeylookup );\n        if ( idx < 0 ) {\n          error_message += \"\\t\\t\" + aKeylookup + Const.CR;\n          error_found = true;\n        }\n      }\n      if ( error_found ) {\n        error_message =\n          BaseMessages.getString( PKG, \"StreamLookupMeta.CheckResult.FieldsNotFoundInLookupStream\" )\n            + Const.CR + Const.CR + error_message;\n\n        cr = new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, error_message, stepMeta );\n        remarks.add( cr );\n      } else {\n        cr =\n          new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString(\n            PKG, \"StreamLookupMeta.CheckResult.AllFieldsFoundInTheLookupStream\" ), stepMeta );\n        remarks.add( cr );\n      }\n\n      // Check the values to retrieve from the lookup stream!\n      for ( String aValue : getValue() ) {\n        int idx = info.indexOfValue( aValue );\n        if ( idx < 0 ) {\n          error_message += \"\\t\\t\" + aValue + Const.CR;\n          error_found = true;\n        }\n      }\n      if ( error_found ) {\n        error_message =\n          BaseMessages.getString( PKG, \"StreamLookupMeta.CheckResult.FieldsNotFoundInLookupStream2\" )\n            + Const.CR + Const.CR + error_message;\n\n        cr = new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, error_message, stepMeta );\n        remarks.add( cr );\n      } else {\n        cr =\n          new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString(\n            PKG, \"StreamLookupMeta.CheckResult.AllFieldsFoundInTheLookupStream2\" ), stepMeta );\n        remarks.add( cr );\n      }\n    } else {\n      cr =\n        new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, BaseMessages.getString(\n          PKG, \"StreamLookupMeta.CheckResult.FieldsNotFoundFromInLookupSep\" ), stepMeta );\n      remarks.add( cr );\n    }\n\n    // See if the source step is filled in!\n    StreamInterface infoStream = getStepIOMeta().getInfoStreams().get( 0 );\n    if ( infoStream.getStepMeta() == null ) {\n      cr =\n        new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, BaseMessages.getString(\n          PKG, \"StreamLookupMeta.CheckResult.SourceStepNotSelected\" ), stepMeta );\n      remarks.add( cr );\n    } else {\n      cr =\n        new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString(\n          PKG, \"StreamLookupMeta.CheckResult.SourceStepIsSelected\" ), stepMeta );\n      remarks.add( cr );\n\n      // See if the step exists!\n      //\n      if ( info != null ) {\n        cr =\n          new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString(\n            PKG, \"StreamLookupMeta.CheckResult.SourceStepExist\", infoStream.getStepname() ), stepMeta );\n        remarks.add( cr );\n      } else {\n        cr =\n          new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, BaseMessages.getString(\n            PKG, \"StreamLookupMeta.CheckResult.SourceStepDoesNotExist\", infoStream.getStepname() ), stepMeta );\n        remarks.add( cr );\n      }\n    }\n\n    // See if we have input streams leading to this step!\n    if ( input.length >= 2 ) {\n      cr =\n        new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString(\n          PKG, \"StreamLookupMeta.CheckResult.StepReceivingInfoFromInputSteps\", input.length + \"\" ), stepMeta );\n      remarks.add( cr );\n    } else {\n      cr =\n        new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, BaseMessages.getString(\n          PKG, \"StreamLookupMeta.CheckResult.NeedAtLeast2InputStreams\", Const.CR, Const.CR ), stepMeta );\n      remarks.add( cr );\n    }\n  }","commit_id":"28004e6c5cbc120bf31a9961454af1166ed25114","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void setDefault() {\n    int nrkeys, nrvalues;\n\n    keystream = null;\n    value = null;\n    valueDefault = null;\n\n    memoryPreservationActive = true;\n    usingSortedList = false;\n    usingIntegerPair = false;\n\n    nrkeys = 0;\n    nrvalues = 0;\n\n    allocate( nrkeys, nrvalues );\n\n    for ( int i = 0; i < nrkeys; i++ ) {\n      keystream[i] = \"key\" + i;\n      keylookup[i] = \"keyfield\" + i;\n    }\n\n    for ( int i = 0; i < nrvalues; i++ ) {\n      value[i] = \"value\" + i;\n      valueName[i] = \"valuename\" + i;\n      valueDefault[i] = \"default\" + i;\n      valueDefaultType[i] = ValueMetaInterface.TYPE_NUMBER;\n    }\n  }","id":48109,"modified_method":"public void setDefault() {\n    setMemoryPreservationActive( true );\n    setUsingSortedList( false );\n    setUsingIntegerPair( false );\n\n    allocate( 0, 0 );\n  }","commit_id":"28004e6c5cbc120bf31a9961454af1166ed25114","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void getFields( RowMetaInterface row, String origin, RowMetaInterface[] info, StepMeta nextStep,\n    VariableSpace space, Repository repository, IMetaStore metaStore ) throws KettleStepException {\n    if ( info != null && info.length == 1 && info[0] != null ) {\n      for ( int i = 0; i < valueName.length; i++ ) {\n        ValueMetaInterface v = info[0].searchValueMeta( value[i] );\n        if ( v != null ) {\n          // Configuration error/missing resources...\n\n          v.setName( valueName[i] );\n          v.setOrigin( origin );\n          v.setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL ); // Only normal storage goes into the cache\n          row.addValueMeta( v );\n        } else {\n          throw new KettleStepException( BaseMessages.getString(\n            PKG, \"StreamLookupMeta.Exception.ReturnValueCanNotBeFound\", value[i] ) );\n        }\n      }\n    } else {\n      for ( int i = 0; i < valueName.length; i++ ) {\n        try {\n          ValueMetaInterface v = ValueMetaFactory.createValueMeta( valueName[i], valueDefaultType[i] );\n          v.setOrigin( origin );\n          row.addValueMeta( v );\n        } catch ( Exception e ) {\n          throw new KettleStepException( e );\n        }\n      }\n    }\n  }","id":48110,"modified_method":"public void getFields( RowMetaInterface row, String origin, RowMetaInterface[] info, StepMeta nextStep,\n    VariableSpace space, Repository repository, IMetaStore metaStore ) throws KettleStepException {\n    if ( info != null && info.length == 1 && info[0] != null ) {\n      for ( int i = 0; i < getValueName().length; i++ ) {\n        ValueMetaInterface v = info[0].searchValueMeta( getValue()[i] );\n        if ( v != null ) {\n          // Configuration error/missing resources...\n          v.setName( getValueName()[i] );\n          v.setOrigin( origin );\n          row.addValueMeta( v );\n        } else {\n          throw new KettleStepException( BaseMessages.getString( PKG,\n              \"StreamLookupMeta.Exception.ReturnValueCanNotBeFound\", getValue()[i] ) );\n        }\n      }\n    } else {\n      for ( int i = 0; i < getValueName().length; i++ ) {\n        try {\n          ValueMetaInterface v = ValueMetaFactory.createValueMeta( getValueName()[i], getValueDefaultType()[i] );\n          v.setOrigin( origin );\n          row.addValueMeta( v );\n        } catch ( Exception e ) {\n          throw new KettleStepException( e );\n        }\n      }\n    }\n  }","commit_id":"28004e6c5cbc120bf31a9961454af1166ed25114","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void readData( Node stepnode ) throws KettleXMLException {\n    try {\n      String dtype;\n      int nrkeys, nrvalues;\n\n      String lookupFromStepname = XMLHandler.getTagValue( stepnode, \"from\" );\n      StreamInterface infoStream = getStepIOMeta().getInfoStreams().get( 0 );\n      infoStream.setSubject( lookupFromStepname );\n\n      inputSorted = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue( stepnode, \"input_sorted\" ) );\n      memoryPreservationActive = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue( stepnode, \"preserve_memory\" ) );\n      usingSortedList = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue( stepnode, \"sorted_list\" ) );\n      usingIntegerPair = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue( stepnode, \"integer_pair\" ) );\n\n      Node lookup = XMLHandler.getSubNode( stepnode, \"lookup\" );\n      nrkeys = XMLHandler.countNodes( lookup, \"key\" );\n      nrvalues = XMLHandler.countNodes( lookup, \"value\" );\n\n      allocate( nrkeys, nrvalues );\n\n      for ( int i = 0; i < nrkeys; i++ ) {\n        Node knode = XMLHandler.getSubNodeByNr( lookup, \"key\", i );\n\n        keystream[i] = XMLHandler.getTagValue( knode, \"name\" );\n        keylookup[i] = XMLHandler.getTagValue( knode, \"field\" );\n      }\n\n      for ( int i = 0; i < nrvalues; i++ ) {\n        Node vnode = XMLHandler.getSubNodeByNr( lookup, \"value\", i );\n\n        value[i] = XMLHandler.getTagValue( vnode, \"name\" );\n        valueName[i] = XMLHandler.getTagValue( vnode, \"rename\" );\n        if ( valueName[i] == null ) {\n          valueName[i] = value[i]; // default: same name to return!\n        }\n        valueDefault[i] = XMLHandler.getTagValue( vnode, \"default\" );\n        dtype = XMLHandler.getTagValue( vnode, \"type\" );\n        valueDefaultType[i] = ValueMeta.getType( dtype );\n      }\n    } catch ( Exception e ) {\n      throw new KettleXMLException( BaseMessages.getString(\n        PKG, \"StreamLookupMeta.Exception.UnableToLoadStepInfoFromXML\" ), e );\n    }\n  }","id":48111,"modified_method":"private void readData( Node stepnode ) throws KettleXMLException {\n    try {\n      String dtype;\n      int nrkeys, nrvalues;\n\n      String lookupFromStepname = XMLHandler.getTagValue( stepnode, \"from\" );\n      StreamInterface infoStream = getStepIOMeta().getInfoStreams().get( 0 );\n      infoStream.setSubject( lookupFromStepname );\n\n      setInputSorted( \"Y\".equalsIgnoreCase( XMLHandler.getTagValue( stepnode, \"input_sorted\" ) ) );\n      setMemoryPreservationActive( \"Y\".equalsIgnoreCase( XMLHandler.getTagValue( stepnode, \"preserve_memory\" ) ) );\n      setUsingSortedList( \"Y\".equalsIgnoreCase( XMLHandler.getTagValue( stepnode, \"sorted_list\" ) ) );\n      setUsingIntegerPair( \"Y\".equalsIgnoreCase( XMLHandler.getTagValue( stepnode, \"integer_pair\" ) ) );\n\n      Node lookup = XMLHandler.getSubNode( stepnode, \"lookup\" );\n      nrkeys = XMLHandler.countNodes( lookup, \"key\" );\n      nrvalues = XMLHandler.countNodes( lookup, \"value\" );\n\n      allocate( nrkeys, nrvalues );\n\n      for ( int i = 0; i < nrkeys; i++ ) {\n        Node knode = XMLHandler.getSubNodeByNr( lookup, \"key\", i );\n        // CHECKSTYLE:Indentation:OFF\n        getKeystream()[i] = XMLHandler.getTagValue( knode, \"name\" );\n        getKeylookup()[i] = XMLHandler.getTagValue( knode, \"field\" );\n        // CHECKSTYLE:Indentation:ON\n      }\n\n      for ( int i = 0; i < nrvalues; i++ ) {\n        Node vnode = XMLHandler.getSubNodeByNr( lookup, \"value\", i );\n        // CHECKSTYLE:Indentation:OFF\n        getValue()[i] = XMLHandler.getTagValue( vnode, \"name\" );\n        getValueName()[i] = XMLHandler.getTagValue( vnode, \"rename\" );\n        if ( getValueName()[i] == null ) {\n          getValueName()[i] = getValue()[i]; // default: same name to return!\n        }\n\n        getValueDefault()[i] = XMLHandler.getTagValue( vnode, \"default\" );\n        dtype = XMLHandler.getTagValue( vnode, \"type\" );\n        getValueDefaultType()[i] = ValueMeta.getType( dtype );\n        // CHECKSTYLE:Indentation:ON\n      }\n    } catch ( Exception e ) {\n      throw new KettleXMLException( BaseMessages.getString(\n        PKG, \"StreamLookupMeta.Exception.UnableToLoadStepInfoFromXML\" ), e );\n    }\n  }","commit_id":"28004e6c5cbc120bf31a9961454af1166ed25114","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void readRep( Repository rep, IMetaStore metaStore, ObjectId id_step, List<DatabaseMeta> databases )\n    throws KettleException {\n    try {\n      String lookupFromStepname = rep.getStepAttributeString( id_step, \"lookup_from_step\" );\n      StreamInterface infoStream = getStepIOMeta().getInfoStreams().get( 0 );\n      infoStream.setSubject( lookupFromStepname );\n\n      inputSorted = rep.getStepAttributeBoolean( id_step, \"input_sorted\" );\n      memoryPreservationActive = rep.getStepAttributeBoolean( id_step, \"preserve_memory\" );\n      usingSortedList = rep.getStepAttributeBoolean( id_step, \"sorted_list\" );\n      usingIntegerPair = rep.getStepAttributeBoolean( id_step, \"integer_pair\" );\n\n      int nrkeys = rep.countNrStepAttributes( id_step, \"lookup_key_name\" );\n      int nrvalues = rep.countNrStepAttributes( id_step, \"return_value_name\" );\n\n      allocate( nrkeys, nrvalues );\n\n      for ( int i = 0; i < nrkeys; i++ ) {\n        keystream[i] = rep.getStepAttributeString( id_step, i, \"lookup_key_name\" );\n        keylookup[i] = rep.getStepAttributeString( id_step, i, \"lookup_key_field\" );\n      }\n\n      for ( int i = 0; i < nrvalues; i++ ) {\n        value[i] = rep.getStepAttributeString( id_step, i, \"return_value_name\" );\n        valueName[i] = rep.getStepAttributeString( id_step, i, \"return_value_rename\" );\n        valueDefault[i] = rep.getStepAttributeString( id_step, i, \"return_value_default\" );\n        valueDefaultType[i] = ValueMeta.getType( rep.getStepAttributeString( id_step, i, \"return_value_type\" ) );\n      }\n    } catch ( Exception e ) {\n      throw new KettleException( BaseMessages.getString(\n        PKG, \"StreamLookupMeta.Exception.UnexpecteErrorReadingStepInfoFromRepository\" ), e );\n    }\n  }","id":48112,"modified_method":"public void readRep( Repository rep, IMetaStore metaStore, ObjectId id_step, List<DatabaseMeta> databases )\n    throws KettleException {\n    try {\n      String lookupFromStepname = rep.getStepAttributeString( id_step, \"lookup_from_step\" );\n      StreamInterface infoStream = getStepIOMeta().getInfoStreams().get( 0 );\n      infoStream.setSubject( lookupFromStepname );\n\n      setInputSorted( rep.getStepAttributeBoolean( id_step, \"input_sorted\" ) );\n      setMemoryPreservationActive( rep.getStepAttributeBoolean( id_step, \"preserve_memory\" ) );\n      setUsingSortedList( rep.getStepAttributeBoolean( id_step, \"sorted_list\" ) );\n      setUsingIntegerPair( rep.getStepAttributeBoolean( id_step, \"integer_pair\" ) );\n\n      int nrkeys = rep.countNrStepAttributes( id_step, \"lookup_key_name\" );\n      int nrvalues = rep.countNrStepAttributes( id_step, \"return_value_name\" );\n\n      allocate( nrkeys, nrvalues );\n\n      for ( int i = 0; i < nrkeys; i++ ) {\n        // CHECKSTYLE:Indentation:OFF\n        getKeystream()[i] = rep.getStepAttributeString( id_step, i, \"lookup_key_name\" );\n        getKeylookup()[i] = rep.getStepAttributeString( id_step, i, \"lookup_key_field\" );\n        // CHECKSTYLE:Indentation:ON\n      }\n\n      for ( int i = 0; i < nrvalues; i++ ) {\n        // CHECKSTYLE:Indentation:OFF\n        getValue()[i] = rep.getStepAttributeString( id_step, i, \"return_value_name\" );\n        getValueName()[i] = rep.getStepAttributeString( id_step, i, \"return_value_rename\" );\n        getValueDefault()[i] = rep.getStepAttributeString( id_step, i, \"return_value_default\" );\n        getValueDefaultType()[i] = ValueMeta.getType( rep.getStepAttributeString( id_step, i, \"return_value_type\" ) );\n        // CHECKSTYLE:Indentation:ON\n      }\n    } catch ( Exception e ) {\n      throw new KettleException( BaseMessages.getString(\n        PKG, \"StreamLookupMeta.Exception.UnexpecteErrorReadingStepInfoFromRepository\" ), e );\n    }\n  }","commit_id":"28004e6c5cbc120bf31a9961454af1166ed25114","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void allocate( int nrkeys, int nrvalues ) {\n    keystream = new String[nrkeys];\n    keylookup = new String[nrkeys];\n\n    value = new String[nrvalues];\n    valueName = new String[nrvalues];\n    valueDefault = new String[nrvalues];\n    valueDefaultType = new int[nrvalues];\n  }","id":48113,"modified_method":"public void allocate( int nrkeys, int nrvalues ) {\n    setKeystream( new String[nrkeys] );\n    setKeylookup( new String[nrkeys] );\n\n    setValue( new String[nrvalues] );\n    setValueName( new String[nrvalues] );\n    setValueDefault( new String[nrvalues] );\n    setValueDefaultType( new int[nrvalues] );\n  }","commit_id":"28004e6c5cbc120bf31a9961454af1166ed25114","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String getXML() {\n    StringBuffer retval = new StringBuffer();\n\n    StreamInterface infoStream = getStepIOMeta().getInfoStreams().get( 0 );\n    retval.append( \"    \" + XMLHandler.addTagValue( \"from\", infoStream.getStepname() ) );\n    retval.append( \"    \" + XMLHandler.addTagValue( \"input_sorted\", inputSorted ) );\n    retval.append( \"    \" + XMLHandler.addTagValue( \"preserve_memory\", memoryPreservationActive ) );\n    retval.append( \"    \" + XMLHandler.addTagValue( \"sorted_list\", usingSortedList ) );\n    retval.append( \"    \" + XMLHandler.addTagValue( \"integer_pair\", usingIntegerPair ) );\n\n    retval.append( \"    <lookup>\" + Const.CR );\n    for ( int i = 0; i < keystream.length; i++ ) {\n      retval.append( \"      <key>\" + Const.CR );\n      retval.append( \"        \" + XMLHandler.addTagValue( \"name\", keystream[i] ) );\n      retval.append( \"        \" + XMLHandler.addTagValue( \"field\", keylookup[i] ) );\n      retval.append( \"      <\/key>\" + Const.CR );\n    }\n\n    for ( int i = 0; i < value.length; i++ ) {\n      retval.append( \"      <value>\" + Const.CR );\n      retval.append( \"        \" + XMLHandler.addTagValue( \"name\", value[i] ) );\n      retval.append( \"        \" + XMLHandler.addTagValue( \"rename\", valueName[i] ) );\n      retval.append( \"        \" + XMLHandler.addTagValue( \"default\", valueDefault[i] ) );\n      retval.append( \"        \" + XMLHandler.addTagValue( \"type\", ValueMeta.getTypeDesc( valueDefaultType[i] ) ) );\n      retval.append( \"      <\/value>\" + Const.CR );\n    }\n    retval.append( \"    <\/lookup>\" + Const.CR );\n\n    return retval.toString();\n  }","id":48114,"modified_method":"public String getXML() {\n    StringBuilder retval = new StringBuilder();\n\n    StreamInterface infoStream = getStepIOMeta().getInfoStreams().get( 0 );\n    retval.append( \"    \" ).append( XMLHandler.addTagValue( \"from\", infoStream.getStepname() ) );\n    retval.append( \"    \" ).append( XMLHandler.addTagValue( \"input_sorted\", isInputSorted() ) );\n    retval.append( \"    \" ).append( XMLHandler.addTagValue( \"preserve_memory\", isMemoryPreservationActive() ) );\n    retval.append( \"    \" ).append( XMLHandler.addTagValue( \"sorted_list\", isUsingSortedList() ) );\n    retval.append( \"    \" ).append( XMLHandler.addTagValue( \"integer_pair\", isUsingIntegerPair() ) );\n\n    retval.append( \"    <lookup>\" ).append( Const.CR );\n    for ( int i = 0; i < getKeystream().length; i++ ) {\n      retval.append( \"      <key>\" ).append( Const.CR );\n      retval.append( \"        \" ).append( XMLHandler.addTagValue( \"name\", getKeystream()[i] ) );\n      retval.append( \"        \" ).append( XMLHandler.addTagValue( \"field\", getKeylookup()[i] ) );\n      retval.append( \"      <\/key>\" ).append( Const.CR );\n    }\n\n    for ( int i = 0; i < getValue().length; i++ ) {\n      retval.append( \"      <value>\" ).append( Const.CR );\n      retval.append( \"        \" ).append( XMLHandler.addTagValue( \"name\", getValue()[i] ) );\n      retval.append( \"        \" ).append( XMLHandler.addTagValue( \"rename\", getValueName()[i] ) );\n      retval.append( \"        \" ).append( XMLHandler.addTagValue( \"default\", getValueDefault()[i] ) );\n      retval.append( \"        \" ).append(\n          XMLHandler.addTagValue( \"type\", ValueMeta.getTypeDesc( getValueDefaultType()[i] ) ) );\n      retval.append( \"      <\/value>\" ).append( Const.CR );\n    }\n    retval.append( \"    <\/lookup>\" ).append( Const.CR );\n\n    return retval.toString();\n  }","commit_id":"28004e6c5cbc120bf31a9961454af1166ed25114","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void saveRep( Repository rep, IMetaStore metaStore, ObjectId id_transformation, ObjectId id_step )\n    throws KettleException {\n    try {\n      StreamInterface infoStream = getStepIOMeta().getInfoStreams().get( 0 );\n      rep.saveStepAttribute( id_transformation, id_step, \"lookup_from_step\", infoStream.getStepname() );\n      rep.saveStepAttribute( id_transformation, id_step, \"input_sorted\", inputSorted );\n      rep.saveStepAttribute( id_transformation, id_step, \"preserve_memory\", memoryPreservationActive );\n      rep.saveStepAttribute( id_transformation, id_step, \"sorted_list\", usingSortedList );\n      rep.saveStepAttribute( id_transformation, id_step, \"integer_pair\", usingIntegerPair );\n\n      for ( int i = 0; i < keystream.length; i++ ) {\n        rep.saveStepAttribute( id_transformation, id_step, i, \"lookup_key_name\", keystream[i] );\n        rep.saveStepAttribute( id_transformation, id_step, i, \"lookup_key_field\", keylookup[i] );\n      }\n\n      for ( int i = 0; i < value.length; i++ ) {\n        rep.saveStepAttribute( id_transformation, id_step, i, \"return_value_name\", value[i] );\n        rep.saveStepAttribute( id_transformation, id_step, i, \"return_value_rename\", valueName[i] );\n        rep.saveStepAttribute( id_transformation, id_step, i, \"return_value_default\", valueDefault[i] );\n        rep.saveStepAttribute( id_transformation, id_step, i, \"return_value_type\", ValueMeta\n          .getTypeDesc( valueDefaultType[i] ) );\n      }\n    } catch ( Exception e ) {\n      throw new KettleException( BaseMessages.getString(\n        PKG, \"StreamLookupMeta.Exception.UnableToSaveStepInfoToRepository\" )\n        + id_step, e );\n    }\n  }","id":48115,"modified_method":"public void saveRep( Repository rep, IMetaStore metaStore, ObjectId id_transformation, ObjectId id_step )\n    throws KettleException {\n    try {\n      StreamInterface infoStream = getStepIOMeta().getInfoStreams().get( 0 );\n      rep.saveStepAttribute( id_transformation, id_step, \"lookup_from_step\", infoStream.getStepname() );\n      rep.saveStepAttribute( id_transformation, id_step, \"input_sorted\", isInputSorted() );\n      rep.saveStepAttribute( id_transformation, id_step, \"preserve_memory\", isMemoryPreservationActive() );\n      rep.saveStepAttribute( id_transformation, id_step, \"sorted_list\", isUsingSortedList() );\n      rep.saveStepAttribute( id_transformation, id_step, \"integer_pair\", isUsingIntegerPair() );\n\n      for ( int i = 0; i < getKeystream().length; i++ ) {\n        rep.saveStepAttribute( id_transformation, id_step, i, \"lookup_key_name\", getKeystream()[i] );\n        rep.saveStepAttribute( id_transformation, id_step, i, \"lookup_key_field\", getKeylookup()[i] );\n      }\n\n      for ( int i = 0; i < getValue().length; i++ ) {\n        rep.saveStepAttribute( id_transformation, id_step, i, \"return_value_name\", getValue()[i] );\n        rep.saveStepAttribute( id_transformation, id_step, i, \"return_value_rename\", getValueName()[i] );\n        rep.saveStepAttribute( id_transformation, id_step, i, \"return_value_default\", getValueDefault()[i] );\n        rep.saveStepAttribute( id_transformation, id_step, i, \"return_value_type\", ValueMeta\n            .getTypeDesc( getValueDefaultType()[i] ) );\n      }\n    } catch ( Exception e ) {\n      throw new KettleException( BaseMessages.getString(\n        PKG, \"StreamLookupMeta.Exception.UnableToSaveStepInfoToRepository\" )\n        + id_step, e );\n    }\n  }","commit_id":"28004e6c5cbc120bf31a9961454af1166ed25114","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"@Override\n    public Query toQuery(QueryParseContext parseContext) throws QueryParsingException, IOException {\n        Query query = null;\n        FieldMapper mapper = parseContext.fieldMapper(this.fieldName);\n        if (mapper != null) {\n            if (mapper instanceof DateFieldMapper) {\n                if ((from instanceof Number || to instanceof Number) && timeZone != null) {\n                    throw new QueryParsingException(parseContext,\n                            \"[range] time_zone when using ms since epoch format as it's UTC based can not be applied to [\" + this.fieldName\n                                    + \"]\");\n                }\n                DateMathParser forcedDateParser = null;\n                if (this.format  != null) {\n                    forcedDateParser = new DateMathParser(Joda.forPattern(this.format), DateFieldMapper.Defaults.TIME_UNIT);\n                }\n                DateTimeZone dateTimeZone = null;\n                if (this.timeZone != null) {\n                    dateTimeZone = DateTimeZone.forID(this.timeZone);\n                }\n                query = ((DateFieldMapper) mapper).rangeQuery(from, to, includeLower, includeUpper, dateTimeZone, forcedDateParser, parseContext);\n            } else  {\n                if (timeZone != null) {\n                    throw new QueryParsingException(parseContext, \"[range] time_zone can not be applied to non date field [\"\n                            + this.fieldName + \"]\");\n                }\n                //LUCENE 4 UPGRADE Mapper#rangeQuery should use bytesref as well?\n                query = mapper.rangeQuery(from, to, includeLower, includeUpper, parseContext);\n            }\n        }\n        if (query == null) {\n            query = new TermRangeQuery(this.fieldName, BytesRefs.toBytesRef(from), BytesRefs.toBytesRef(to), includeLower, includeUpper);\n        }\n        query.setBoost(boost);\n        if (queryName != null) {\n            parseContext.addNamedQuery(queryName, query);\n        }\n        return query;\n    }","id":48116,"modified_method":"@Override\n    public Query toQuery(QueryParseContext parseContext) throws QueryParsingException, IOException {\n        Query query = null;\n        FieldMapper mapper = parseContext.fieldMapper(this.fieldName);\n        if (mapper != null) {\n            if (mapper instanceof DateFieldMapper) {\n                DateMathParser forcedDateParser = null;\n                if (this.format  != null) {\n                    forcedDateParser = new DateMathParser(Joda.forPattern(this.format));\n                }\n                DateTimeZone dateTimeZone = null;\n                if (this.timeZone != null) {\n                    dateTimeZone = DateTimeZone.forID(this.timeZone);\n                }\n                query = ((DateFieldMapper) mapper).fieldType().rangeQuery(from, to, includeLower, includeUpper, dateTimeZone, forcedDateParser, parseContext);\n            } else  {\n                if (timeZone != null) {\n                    throw new QueryParsingException(parseContext, \"[range] time_zone can not be applied to non date field [\"\n                            + fieldName + \"]\");\n                }\n                //LUCENE 4 UPGRADE Mapper#rangeQuery should use bytesref as well?\n                query = mapper.rangeQuery(from, to, includeLower, includeUpper, parseContext);\n            }\n        }\n\n        if (query == null) {\n            query = new TermRangeQuery(this.fieldName, BytesRefs.toBytesRef(from), BytesRefs.toBytesRef(to), includeLower, includeUpper);\n        }\n\n        query.setBoost(boost);\n        if (queryName != null) {\n            parseContext.addNamedQuery(queryName, query);\n        }\n        return query;\n    }","commit_id":"2fc162a04d2733d35647b9fa1527c81c5507cb7f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    protected Query createExpectedQuery(RangeQueryBuilder queryBuilder, QueryParseContext context) throws IOException {\n        Query expectedQuery;\n        if (getCurrentTypes().length == 0 || (queryBuilder.fieldName().equals(DATE_FIELD_NAME) == false && queryBuilder.fieldName().equals(INT_FIELD_NAME) == false) ) {\n            expectedQuery = new TermRangeQuery(queryBuilder.fieldName(),\n                    BytesRefs.toBytesRef(queryBuilder.from()), BytesRefs.toBytesRef(queryBuilder.to()),\n                    queryBuilder.includeLower(), queryBuilder.includeUpper());\n\n        } else if (queryBuilder.fieldName().equals(DATE_FIELD_NAME)) {\n            DateFieldMapper.Builder fieldMapperBuilder = new DateFieldMapper.Builder(queryBuilder.fieldName());\n            DateFieldMapper fieldMapper = fieldMapperBuilder.build(new Mapper.BuilderContext(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT).build(), new ContentPath()));\n            DateMathParser dateMathParser = null;\n            if (queryBuilder.format() != null) {\n                dateMathParser = new DateMathParser(Joda.forPattern(queryBuilder.format()), DateFieldMapper.Defaults.TIME_UNIT);\n            }\n            DateTimeZone timeZone = null;\n            if( queryBuilder.timeZone() != null) {\n                timeZone = DateTimeZone.forID(queryBuilder.timeZone());\n            }\n            Long from = null;\n            if (queryBuilder.from() != null) {\n                from = fieldMapper.parseToMilliseconds(queryBuilder.from(), queryBuilder.includeLower(), timeZone, dateMathParser);\n            }\n            Long to = null;\n            if (queryBuilder.to() != null) {\n                to = fieldMapper.parseToMilliseconds(queryBuilder.to(), queryBuilder.includeLower(), timeZone, dateMathParser);\n            }\n            expectedQuery = fieldMapper.rangeQuery(from, to, queryBuilder.includeLower(), queryBuilder.includeUpper(), timeZone, dateMathParser, context);\n        } else if (queryBuilder.fieldName().equals(INT_FIELD_NAME)) {\n            expectedQuery = NumericRangeQuery.newIntRange(INT_FIELD_NAME, (Integer) queryBuilder.from(), (Integer) queryBuilder.to(), queryBuilder.includeLower(), queryBuilder.includeUpper());\n        } else {\n            throw new UnsupportedOperationException();\n        }\n        expectedQuery.setBoost(queryBuilder.boost());\n        return expectedQuery;\n    }","id":48117,"modified_method":"@Override\n    protected Query createExpectedQuery(RangeQueryBuilder queryBuilder, QueryParseContext context) throws IOException {\n        Query expectedQuery;\n        String fieldName = queryBuilder.fieldName();\n        if (getCurrentTypes().length == 0 || (fieldName.equals(DATE_FIELD_NAME) == false && fieldName.equals(INT_FIELD_NAME) == false) ) {\n            expectedQuery = new TermRangeQuery(fieldName,\n                    BytesRefs.toBytesRef(queryBuilder.from()), BytesRefs.toBytesRef(queryBuilder.to()),\n                    queryBuilder.includeLower(), queryBuilder.includeUpper());\n\n        } else if (fieldName.equals(DATE_FIELD_NAME)) {\n            DateMathParser forcedDateParser = null;\n            if (queryBuilder.format()  != null) {\n                forcedDateParser = new DateMathParser(Joda.forPattern(queryBuilder.format()));\n            }\n            DateTimeZone dateTimeZone = null;\n            if (queryBuilder.timeZone() != null) {\n                dateTimeZone = DateTimeZone.forID(queryBuilder.timeZone());\n            }\n            FieldMapper mapper = context.fieldMapper(queryBuilder.fieldName());\n            expectedQuery = ((DateFieldMapper) mapper).fieldType().rangeQuery(queryBuilder.from(), queryBuilder.to(), queryBuilder.includeLower(), queryBuilder.includeUpper(), dateTimeZone, forcedDateParser, context);\n        } else if (queryBuilder.fieldName().equals(INT_FIELD_NAME)) {\n            expectedQuery = NumericRangeQuery.newIntRange(INT_FIELD_NAME, (Integer) queryBuilder.from(), (Integer) queryBuilder.to(), queryBuilder.includeLower(), queryBuilder.includeUpper());\n        } else {\n            throw new UnsupportedOperationException();\n        }\n        expectedQuery.setBoost(queryBuilder.boost());\n        return expectedQuery;\n    }","commit_id":"2fc162a04d2733d35647b9fa1527c81c5507cb7f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public Query toQuery(QueryParseContext context) {\n        BytesRef valueBytes = null;\n        String fieldName = this.fieldName;\n        FieldMapper mapper = context.fieldMapper(fieldName);\n        if (mapper != null) {\n            fieldName = mapper.names().indexName();\n            valueBytes = mapper.indexedValueForSearch(value);\n        }\n        if (valueBytes == null) {\n            valueBytes = BytesRefs.toBytesRef(this.value);\n        }\n\n        SpanTermQuery query = new SpanTermQuery(new Term(fieldName, valueBytes));\n        query.setBoost(boost);\n        if (queryName != null) {\n            context.addNamedQuery(queryName, query);\n        }\n        return query;\n    }","id":48118,"modified_method":"@Override\n    public Query toQuery(QueryParseContext context) {\n        BytesRef valueBytes = null;\n        String fieldName = this.fieldName;\n        FieldMapper mapper = context.fieldMapper(fieldName);\n        if (mapper != null) {\n            fieldName = mapper.fieldType().names().indexName();\n            valueBytes = mapper.indexedValueForSearch(value);\n        }\n        if (valueBytes == null) {\n            valueBytes = BytesRefs.toBytesRef(this.value);\n        }\n\n        SpanTermQuery query = new SpanTermQuery(new Term(fieldName, valueBytes));\n        query.setBoost(boost);\n        if (queryName != null) {\n            context.addNamedQuery(queryName, query);\n        }\n        return query;\n    }","commit_id":"2fc162a04d2733d35647b9fa1527c81c5507cb7f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    protected SpanContainingQueryBuilder doCreateTestQueryBuilder() {\n        SpanTermQueryBuilder bigQuery = new SpanTermQueryBuilderTest().createTestQueryBuilder();\n        // we need same field name and value type as bigQuery for little query\n        Object bigValue = bigQuery.value;\n        Object littleValue;\n        if (bigValue instanceof Boolean) {\n            littleValue = randomBoolean();\n        } else if (bigValue instanceof Integer) {\n            littleValue = randomInt();\n        } else if (bigValue instanceof Double) {\n            littleValue = randomDouble();\n        } else {\n            littleValue = randomAsciiOfLengthBetween(1, 10);\n        }\n        SpanTermQueryBuilder littleQuery = new SpanTermQueryBuilder(bigQuery.fieldName(), littleValue);\n        return new SpanContainingQueryBuilder(bigQuery, littleQuery);\n    }","id":48119,"modified_method":"@Override\n    protected SpanContainingQueryBuilder doCreateTestQueryBuilder() {\n        SpanTermQueryBuilder bigQuery = new SpanTermQueryBuilderTest().createTestQueryBuilder();\n        // we need same field name and value type as bigQuery for little query\n        String fieldName = bigQuery.fieldName();\n        Object littleValue;\n        switch (fieldName) {\n            case BOOLEAN_FIELD_NAME: littleValue = randomBoolean(); break;\n            case INT_FIELD_NAME: littleValue = randomInt(); break;\n            case DOUBLE_FIELD_NAME: littleValue = randomDouble(); break;\n            case STRING_FIELD_NAME: littleValue = randomAsciiOfLengthBetween(1, 10); break;\n            default : littleValue = randomAsciiOfLengthBetween(1, 10);\n        }\n        SpanTermQueryBuilder littleQuery = new SpanTermQueryBuilder(fieldName, littleValue);\n        return new SpanContainingQueryBuilder(bigQuery, littleQuery);\n    }","commit_id":"9897a5a6e7eb1f56c7705e91d9a942a5c6c9d48d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void reportsProjectEvaulationFailsWithGroovyException() {\n        ExecutionFailure failure = usingBuildScript(\"createTakk('do-stuff')\").runWithFailure();\n\n        failure.assertHasFileName(\"Embedded build file\");\n        failure.assertHasLineNumber(1);\n        failure.assertHasContext(\"A problem occurred evaluating root project 'tmpTest'\");\n    }","id":48120,"modified_method":"@Test\n    public void reportsProjectEvaulationFailsWithGroovyException() {\n        ExecutionFailure failure = usingBuildScript(\"\\ncreateTakk('do-stuff')\").runWithFailure();\n\n        failure.assertHasFileName(\"Embedded build file\");\n        failure.assertHasLineNumber(2);\n        failure.assertHasContext(\"A problem occurred evaluating root project 'tmpTest'\");\n        failure.assertHasDescription(\"Could not find method createTakk() for arguments [do-stuff] on root project 'tmpTest'.\");\n    }","commit_id":"6205ed751c312e6ba274a46e96e9e216ef4c306c","url":"https://github.com/gradle/gradle"},{"original_method":"@Test\n    public void reportsTaskGraphActionExecutionFailsWithRuntimeException() {\n        TestFile buildFile = testFile(\"build.gradle\");\n        buildFile.writelns(\"build.taskGraph.whenReady {\", \"throw new RuntimeException('broken closure')\", \"}\", \"createTask('a')\");\n\n        ExecutionFailure failure = usingBuildFile(buildFile).withTasks(\"a\").runWithFailure();\n\n        failure.assertHasFileName(String.format(\"Build file '%s'\", buildFile));\n        failure.assertHasLineNumber(2);\n        failure.assertHasContext(\"Failed to notify task execution graph listener\");\n        failure.assertHasDescription(\"broken closure\");\n    }","id":48121,"modified_method":"@Test\n    public void reportsTaskGraphReadyEventFailsWithRuntimeException() {\n        TestFile buildFile = testFile(\"build.gradle\");\n        buildFile.writelns(\"build.taskGraph.whenReady {\", \"throw new RuntimeException('broken closure')\", \"}\", \"createTask('a')\");\n\n        ExecutionFailure failure = usingBuildFile(buildFile).withTasks(\"a\").runWithFailure();\n\n        failure.assertHasFileName(String.format(\"Build file '%s'\", buildFile));\n        failure.assertHasLineNumber(2);\n        failure.assertHasContext(\"Failed to notify task execution graph listener\");\n        failure.assertHasDescription(\"broken closure\");\n    }","commit_id":"6205ed751c312e6ba274a46e96e9e216ef4c306c","url":"https://github.com/gradle/gradle"},{"original_method":"public Gradle newInstance(StartParameter startParameter) {\n        loggingConfigurer.configure(startParameter.getLogLevel());\n        ImportsReader importsReader = new ImportsReader(startParameter.getDefaultImportsFile());\n        IScriptProcessor scriptProcessor = new DefaultScriptProcessor(\n                new DefaultScriptCompilationHandler(new DefaultCachePropertiesHandler()),\n                startParameter.getCacheUsage());\n\n        ISettingsFinder settingsFinder = new EmbeddedScriptSettingsFinder(\n                new DefaultSettingsFinder(WrapUtil.<ISettingsFileSearchStrategy>toList(\n                        new MasterDirSettingsFinderStrategy(),\n                        new ParentDirSettingsFinderStrategy()))\n        );\n        ConfigurationContainerFactory configurationContainerFactory = new DefaultConfigurationContainerFactory();\n        DefaultInternalRepository internalRepository = new DefaultInternalRepository();\n        DependencyFactory dependencyFactory = new DefaultDependencyFactory(\n                WrapUtil.toSet(new ModuleDependencyFactory(), new ProjectDependencyFactory()),\n                new DefaultClientModuleFactory());\n        ResolverFactory resolverFactory = new DefaultResolverFactory();\n        DefaultProjectEvaluator projectEvaluator = new DefaultProjectEvaluator(importsReader, scriptProcessor,\n                new DefaultProjectScriptMetaData());\n        Gradle gradle = new Gradle(\n                startParameter,\n                settingsFinder,\n                new DefaultGradlePropertiesLoader(),\n                new ScriptLocatingSettingsProcessor(\n                        new PropertiesLoadingSettingsProcessor(\n                                new ScriptEvaluatingSettingsProcessor(\n                                        new DefaultSettingsScriptMetaData(),\n                                        scriptProcessor,\n                                        importsReader,\n                                        new SettingsFactory(\n                                                new DefaultProjectDescriptorRegistry(),\n                                                dependencyFactory,\n                                                new DefaultRepositoryHandler(resolverFactory, null),\n                                                configurationContainerFactory,\n                                                internalRepository,\n                                                new BuildSourceBuilder(new DefaultGradleFactory(\n                                                        new LoggingConfigurer() {\n                                                            public void configure(LogLevel logLevel) {\n                                                                // do nothing\n                                                            }\n                                                        }\n                                                ), new DefaultCacheInvalidationStrategy())))\n                )),\n                new BuildLoader(\n                        new ProjectFactory(\n                                new TaskFactory(),\n                                configurationContainerFactory,\n                                dependencyFactory,\n                                new DefaultRepositoryHandlerFactory(resolverFactory),\n                                new DefaultPublishArtifactFactory(),\n                                internalRepository,\n                                projectEvaluator,\n                                new PluginRegistry(\n                                        startParameter.getPluginPropertiesFile()),\n                                startParameter.getBuildScriptSource(),\n                                new DefaultAntBuilderFactory(new AntLoggingAdapter())),\n                        internalRepository),\n                new BuildConfigurer(new ProjectDependencies2TaskResolver()));\n        gradle.addBuildListener(internalRepository);\n        gradle.addBuildListener(projectEvaluator);\n        return gradle;\n    }","id":48122,"modified_method":"public Gradle newInstance(StartParameter startParameter) {\n        loggingConfigurer.configure(startParameter.getLogLevel());\n        ImportsReader importsReader = new ImportsReader(startParameter.getDefaultImportsFile());\n        CachePropertiesHandler cachePropertiesHandler = new DefaultCachePropertiesHandler();\n\n        ISettingsFinder settingsFinder = new EmbeddedScriptSettingsFinder(\n                new DefaultSettingsFinder(WrapUtil.<ISettingsFileSearchStrategy>toList(\n                        new MasterDirSettingsFinderStrategy(),\n                        new ParentDirSettingsFinderStrategy()))\n        );\n        ConfigurationContainerFactory configurationContainerFactory = new DefaultConfigurationContainerFactory();\n        DefaultInternalRepository internalRepository = new DefaultInternalRepository();\n        DependencyFactory dependencyFactory = new DefaultDependencyFactory(\n                WrapUtil.toSet(new ModuleDependencyFactory(), new ProjectDependencyFactory()),\n                new DefaultClientModuleFactory());\n        ResolverFactory resolverFactory = new DefaultResolverFactory();\n        DefaultProjectEvaluator projectEvaluator = new DefaultProjectEvaluator(importsReader,\n                new DefaultScriptProcessor(\n                        new DefaultScriptCompilationHandler(\n                                cachePropertiesHandler,\n                                new BuildScriptTransformer()),\n                        startParameter.getCacheUsage()),\n                new DefaultProjectScriptMetaData());\n        Gradle gradle = new Gradle(\n                startParameter,\n                settingsFinder,\n                new DefaultGradlePropertiesLoader(),\n                new ScriptLocatingSettingsProcessor(\n                        new PropertiesLoadingSettingsProcessor(\n                                new ScriptEvaluatingSettingsProcessor(\n                                        new DefaultSettingsScriptMetaData(),\n                                        new DefaultScriptProcessor(\n                                                new DefaultScriptCompilationHandler(cachePropertiesHandler),\n                                                startParameter.getCacheUsage()),\n                                        importsReader,\n                                        new SettingsFactory(\n                                                new DefaultProjectDescriptorRegistry(),\n                                                dependencyFactory,\n                                                new DefaultRepositoryHandler(resolverFactory, null),\n                                                configurationContainerFactory,\n                                                internalRepository,\n                                                new BuildSourceBuilder(new DefaultGradleFactory(\n                                                        new LoggingConfigurer() {\n                                                            public void configure(LogLevel logLevel) {\n                                                                // do nothing\n                                                            }\n                                                        }\n                                                ), new DefaultCacheInvalidationStrategy())))\n                )),\n                new BuildLoader(\n                        new ProjectFactory(\n                                new TaskFactory(),\n                                configurationContainerFactory,\n                                dependencyFactory,\n                                new DefaultRepositoryHandlerFactory(resolverFactory),\n                                new DefaultPublishArtifactFactory(),\n                                internalRepository,\n                                projectEvaluator,\n                                new PluginRegistry(\n                                        startParameter.getPluginPropertiesFile()),\n                                startParameter.getBuildScriptSource(),\n                                new DefaultAntBuilderFactory(new AntLoggingAdapter())),\n                        internalRepository),\n                new BuildConfigurer(new ProjectDependencies2TaskResolver()));\n        gradle.addBuildListener(internalRepository);\n        gradle.addBuildListener(projectEvaluator);\n        return gradle;\n    }","commit_id":"6205ed751c312e6ba274a46e96e9e216ef4c306c","url":"https://github.com/gradle/gradle"},{"original_method":"public Script loadFromCache(ScriptSource source, ClassLoader classLoader, File scriptCacheDir,\n                                Class<? extends Script> scriptBaseClass) {\n        String scriptText = source.getText();\n        String scriptName = source.getClassName();\n        CachePropertiesHandler.CacheState cacheState = cachePropertiesHandler.getCacheState(scriptText, scriptCacheDir);\n        if (cacheState == CachePropertiesHandler.CacheState.INVALID) {\n            return null;\n        }\n        if (!hasCompiledClasses(scriptCacheDir)) {\n            return new EmptyScript();\n        }\n        Clock clock = new Clock();\n        Script script;\n        try {\n            URLClassLoader urlClassLoader = new URLClassLoader(WrapUtil.toArray(scriptCacheDir.toURI().toURL()),\n                    classLoader);\n            script = (Script) urlClassLoader.loadClass(scriptName).newInstance();\n        } catch (ClassNotFoundException e) {\n            logger.debug(\"Class not in cache: \", e);\n            return null;\n        } catch (Exception e) {\n            throw new GradleException(e);\n        }\n        if (!scriptBaseClass.isInstance(script)) {\n            return null;\n        }\n        logger.debug(\"Timing: Loading script from cache took: {}\", clock.getTime());\n        return script;\n    }","id":48123,"modified_method":"public <T extends Script> T loadFromCache(ScriptSource source, ClassLoader classLoader, File scriptCacheDir,\n                                              Class<T> scriptBaseClass) {\n        String scriptText = source.getText();\n        String scriptName = source.getClassName();\n        CachePropertiesHandler.CacheState cacheState = cachePropertiesHandler.getCacheState(scriptText, scriptCacheDir);\n        if (cacheState == CachePropertiesHandler.CacheState.INVALID) {\n            return null;\n        }\n        Clock clock = new Clock();\n        Script script;\n        try {\n            URLClassLoader urlClassLoader = new URLClassLoader(WrapUtil.toArray(scriptCacheDir.toURI().toURL()),\n                    classLoader);\n            script = (Script) urlClassLoader.loadClass(scriptName).newInstance();\n        } catch (ClassNotFoundException e) {\n            logger.debug(\"Class not in cache: \", e);\n            return null;\n        } catch (Exception e) {\n            throw new GradleException(e);\n        }\n        if (!scriptBaseClass.isInstance(script)) {\n            return null;\n        }\n        logger.debug(\"Timing: Loading script from cache took: {}\", clock.getTime());\n        return scriptBaseClass.cast(script);\n    }","commit_id":"6205ed751c312e6ba274a46e96e9e216ef4c306c","url":"https://github.com/gradle/gradle"},{"original_method":"public DefaultScriptCompilationHandler(CachePropertiesHandler cachePropertiesHandler) {\n        this.cachePropertiesHandler = cachePropertiesHandler;\n    }","id":48124,"modified_method":"public DefaultScriptCompilationHandler(CachePropertiesHandler cachePropertiesHandler) {\n        this(cachePropertiesHandler, new CompilationUnit.SourceUnitOperation() {\n            @Override\n            public void call(SourceUnit source) throws CompilationFailedException {\n            }\n        });\n    }","commit_id":"6205ed751c312e6ba274a46e96e9e216ef4c306c","url":"https://github.com/gradle/gradle"},{"original_method":"public Script createScriptOnTheFly(ScriptSource source, ClassLoader classLoader,\n                                       Class<? extends Script> scriptBaseClass) {\n        Clock clock = new Clock();\n        CompilerConfiguration configuration = createBaseCompilerConfiguration(scriptBaseClass);\n        Class scriptClass = parseScript(source, classLoader, configuration);\n        if (scriptClass == null) {\n            // Assume an empty script\n            return new EmptyScript();\n        }\n        Script script = InvokerHelper.createScript(scriptClass, new Binding());\n\n        logger.debug(\"Timing: Creating script took: {}\", clock.getTime());\n        return script;\n    }","id":48125,"modified_method":"public <T extends Script> T createScriptOnTheFly(ScriptSource source, ClassLoader classLoader,\n                                                     Class<T> scriptBaseClass) {\n        Clock clock = new Clock();\n        CompilerConfiguration configuration = createBaseCompilerConfiguration(scriptBaseClass);\n        Class scriptClass = parseScript(source, classLoader, configuration);\n        T script = scriptBaseClass.cast(InvokerHelper.createScript(scriptClass, new Binding()));\n\n        logger.debug(\"Timing: Creating script took: {}\", clock.getTime());\n        return script;\n    }","commit_id":"6205ed751c312e6ba274a46e96e9e216ef4c306c","url":"https://github.com/gradle/gradle"},{"original_method":"private Class parseScript(ScriptSource source, ClassLoader classLoader, CompilerConfiguration configuration) {\n        GroovyClassLoader groovyClassLoader = new GroovyClassLoader(classLoader, configuration, false);\n        String scriptText = source.getText();\n        String scriptName = source.getClassName();\n        Class scriptClass;\n        try {\n            scriptClass = groovyClassLoader.parseClass(scriptText == null ? \"\" : scriptText, scriptName);\n        } catch (MultipleCompilationErrorsException e) {\n            throw new GradleScriptException(String.format(\"Could not compile %s.\", source.getDisplayName()), e, source,\n                    e.getErrorCollector().getSyntaxError(0).getLine());\n        } catch (CompilationFailedException e) {\n            throw new GradleException(String.format(\"Could not compile %s.\", source.getDisplayName()), e);\n        }\n        return scriptClass;\n    }","id":48126,"modified_method":"private Class parseScript(ScriptSource source, ClassLoader classLoader, CompilerConfiguration configuration) {\n        GroovyClassLoader groovyClassLoader = new GroovyClassLoader(classLoader, configuration, false) {\n            @Override\n            protected CompilationUnit createCompilationUnit(CompilerConfiguration config, CodeSource source) {\n                CompilationUnit compilationUnit = super.createCompilationUnit(config, source);\n                compilationUnit.addPhaseOperation(transformer, Phases.CANONICALIZATION);\n                return compilationUnit;\n            }\n        };\n        String scriptText = source.getText();\n        String scriptName = source.getClassName();\n        Class scriptClass;\n        try {\n            scriptClass = groovyClassLoader.parseClass(scriptText == null ? \"\" : scriptText, scriptName);\n        } catch (MultipleCompilationErrorsException e) {\n            throw new GradleScriptException(String.format(\"Could not compile %s.\", source.getDisplayName()), e, source,\n                    e.getErrorCollector().getSyntaxError(0).getLine());\n        } catch (CompilationFailedException e) {\n            throw new GradleException(String.format(\"Could not compile %s.\", source.getDisplayName()), e);\n        }\n        if (scriptClass == null) {\n            // Assume an empty script\n            String emptySource = String.format(\"class %s extends %s { public Object run() { return null } }\",\n                    source.getClassName(), configuration.getScriptBaseClass().replaceAll(\"\\\\$\", \".\"));\n            scriptClass = groovyClassLoader.parseClass(emptySource, scriptName);\n        }\n        return scriptClass;\n    }","commit_id":"6205ed751c312e6ba274a46e96e9e216ef4c306c","url":"https://github.com/gradle/gradle"},{"original_method":"@Test public void testCreateScriptOnTheFlyWithEmptyScript() {\n        Script script = scriptCompilationHandler.createScriptOnTheFly(new StringScriptSource(\"script\", \"\"), classLoader, expectedScriptClass);\n\n        checkScriptClassesNotInCache();\n\n        assertThat(script, is(EmptyScript.class));\n    }","id":48127,"modified_method":"@Test public void testCreateScriptOnTheFlyWithEmptyScript() {\n        Script script = scriptCompilationHandler.createScriptOnTheFly(new StringScriptSource(\"script\", \"\"), classLoader, expectedScriptClass);\n\n        checkScriptClassesNotInCache();\n\n        assertThat(script, is(expectedScriptClass));\n    }","commit_id":"6205ed751c312e6ba274a46e96e9e216ef4c306c","url":"https://github.com/gradle/gradle"},{"original_method":"@Test\n    public void testWriteToCacheAndLoadFromCacheWithWhitespaceOnly() {\n        final String emptyScript = \"// ignore me\\n\";\n        StringScriptSource scriptSource = new StringScriptSource(\"script\", emptyScript);\n        context.checking(new Expectations() {{\n            one(cachePropertiesHandlerMock).getCacheState(emptyScript, scriptCacheDir); will(returnValue(CachePropertiesHandler.CacheState.VALID));\n            one(cachePropertiesHandlerMock).writeProperties(emptyScript, scriptCacheDir);\n        }});\n\n        scriptCompilationHandler.writeToCache(scriptSource, classLoader, scriptCacheDir, expectedScriptClass);\n\n        Script script = scriptCompilationHandler.loadFromCache(scriptSource, classLoader, scriptCacheDir, expectedScriptClass);\n        assertThat(script, is(EmptyScript.class));\n    }","id":48128,"modified_method":"@Test\n    public void testWriteToCacheAndLoadFromCacheWithWhitespaceOnly() {\n        final String emptyScript = \"// ignore me\\n\";\n        StringScriptSource scriptSource = new StringScriptSource(\"script\", emptyScript);\n        context.checking(new Expectations() {{\n            one(cachePropertiesHandlerMock).getCacheState(emptyScript, scriptCacheDir); will(returnValue(CachePropertiesHandler.CacheState.VALID));\n            one(cachePropertiesHandlerMock).writeProperties(emptyScript, scriptCacheDir);\n        }});\n\n        scriptCompilationHandler.writeToCache(scriptSource, classLoader, scriptCacheDir, expectedScriptClass);\n\n        checkScriptClassesInCache();\n\n        Script script = scriptCompilationHandler.loadFromCache(scriptSource, classLoader, scriptCacheDir, expectedScriptClass);\n        assertThat(script, is(expectedScriptClass));\n    }","commit_id":"6205ed751c312e6ba274a46e96e9e216ef4c306c","url":"https://github.com/gradle/gradle"},{"original_method":"@Test\n    public void testWriteToCacheAndLoadFromCacheWithEmptyScript() {\n        final String emptyScript = \"\";\n        StringScriptSource scriptSource = new StringScriptSource(\"script\", emptyScript);\n        context.checking(new Expectations() {{\n            one(cachePropertiesHandlerMock).getCacheState(emptyScript, scriptCacheDir); will(returnValue(CachePropertiesHandler.CacheState.VALID));\n            one(cachePropertiesHandlerMock).writeProperties(emptyScript, scriptCacheDir);\n        }});\n\n        scriptCompilationHandler.writeToCache(scriptSource, classLoader, scriptCacheDir, expectedScriptClass);\n\n        Script script = scriptCompilationHandler.loadFromCache(scriptSource, classLoader, scriptCacheDir, expectedScriptClass);\n        assertThat(script, is(EmptyScript.class));\n    }","id":48129,"modified_method":"@Test\n    public void testWriteToCacheAndLoadFromCacheWithEmptyScript() {\n        final String emptyScript = \"\";\n        StringScriptSource scriptSource = new StringScriptSource(\"script\", emptyScript);\n        context.checking(new Expectations() {{\n            one(cachePropertiesHandlerMock).getCacheState(emptyScript, scriptCacheDir); will(returnValue(CachePropertiesHandler.CacheState.VALID));\n            one(cachePropertiesHandlerMock).writeProperties(emptyScript, scriptCacheDir);\n        }});\n\n        scriptCompilationHandler.writeToCache(scriptSource, classLoader, scriptCacheDir, expectedScriptClass);\n\n        checkScriptClassesInCache();\n\n        Script script = scriptCompilationHandler.loadFromCache(scriptSource, classLoader, scriptCacheDir, expectedScriptClass);\n        assertThat(script, is(expectedScriptClass));\n    }","commit_id":"6205ed751c312e6ba274a46e96e9e216ef4c306c","url":"https://github.com/gradle/gradle"},{"original_method":"@Test public void testCreateScriptOnTheFlyWithWhitespaceOnlyScript() {\n        Script script = scriptCompilationHandler.createScriptOnTheFly(new StringScriptSource(\"script\", \"// ignore me\\n\"), classLoader, expectedScriptClass);\n\n        checkScriptClassesNotInCache();\n\n        assertThat(script, is(EmptyScript.class));\n    }","id":48130,"modified_method":"@Test public void testCreateScriptOnTheFlyWithWhitespaceOnlyScript() {\n        Script script = scriptCompilationHandler.createScriptOnTheFly(new StringScriptSource(\"script\", \"// ignore me\\n\"), classLoader, expectedScriptClass);\n\n        checkScriptClassesNotInCache();\n\n        assertThat(script, is(expectedScriptClass));\n    }","commit_id":"6205ed751c312e6ba274a46e96e9e216ef4c306c","url":"https://github.com/gradle/gradle"},{"original_method":"private Script loadViaCache(ScriptSource source, ClassLoader classLoader, Class<? extends Script> scriptBaseClass) {\n        File sourceFile = source.getSourceFile();\n        File cacheDir = new File(sourceFile.getParentFile(), Project.CACHE_DIR_NAME);\n        File scriptCacheDir = new File(cacheDir, sourceFile.getName());\n        if (cacheUsage == CacheUsage.ON) {\n            Script cachedScript = scriptCompilationHandler.loadFromCache(source, classLoader, scriptCacheDir, scriptBaseClass);\n            if (cachedScript != null) {\n                return cachedScript;\n            }\n        }\n        scriptCompilationHandler.writeToCache(source, classLoader, scriptCacheDir, scriptBaseClass);\n        return scriptCompilationHandler.loadFromCache(source, classLoader, scriptCacheDir, scriptBaseClass);\n    }","id":48131,"modified_method":"private <T extends ScriptWithSource> T loadViaCache(ScriptSource source, ClassLoader classLoader, Class<T> scriptBaseClass) {\n        File sourceFile = source.getSourceFile();\n        File cacheDir = new File(sourceFile.getParentFile(), Project.CACHE_DIR_NAME);\n        File scriptCacheDir = new File(cacheDir, sourceFile.getName());\n        if (cacheUsage == CacheUsage.ON) {\n            T cachedScript = scriptCompilationHandler.loadFromCache(source, classLoader, scriptCacheDir, scriptBaseClass);\n            if (cachedScript != null) {\n                return cachedScript;\n            }\n        }\n        scriptCompilationHandler.writeToCache(source, classLoader, scriptCacheDir, scriptBaseClass);\n        return scriptCompilationHandler.loadFromCache(source, classLoader, scriptCacheDir, scriptBaseClass);\n    }","commit_id":"6205ed751c312e6ba274a46e96e9e216ef4c306c","url":"https://github.com/gradle/gradle"},{"original_method":"private Script loadWithoutCache(ScriptSource source, ClassLoader classLoader, Class<? extends Script> scriptBaseClass) {\n        return scriptCompilationHandler.createScriptOnTheFly(source, classLoader, scriptBaseClass);\n    }","id":48132,"modified_method":"private <T extends ScriptWithSource> T loadWithoutCache(ScriptSource source, ClassLoader classLoader, Class<T> scriptBaseClass) {\n        return scriptCompilationHandler.createScriptOnTheFly(source, classLoader, scriptBaseClass);\n    }","commit_id":"6205ed751c312e6ba274a46e96e9e216ef4c306c","url":"https://github.com/gradle/gradle"},{"original_method":"public <T extends ScriptWithSource> T createScript(ScriptSource source, ClassLoader classLoader,\n                                                       Class<T> scriptBaseClass) {\n        File sourceFile = source.getSourceFile();\n        ScriptWithSource script;\n        if (isCacheable(sourceFile)) {\n            script = (ScriptWithSource) loadViaCache(source, classLoader, scriptBaseClass);\n        }\n        else {\n            script = (ScriptWithSource) loadWithoutCache(source, classLoader, scriptBaseClass);\n        }\n        script.setScriptSource(source);\n        return (T) script;\n    }","id":48133,"modified_method":"public <T extends ScriptWithSource> T createScript(ScriptSource source, ClassLoader classLoader,\n                                                       Class<T> scriptBaseClass) {\n        File sourceFile = source.getSourceFile();\n        T script;\n        if (isCacheable(sourceFile)) {\n            script = loadViaCache(source, classLoader, scriptBaseClass);\n        }\n        else {\n            script = loadWithoutCache(source, classLoader, scriptBaseClass);\n        }\n        script.setScriptSource(source);\n        return script;\n    }","commit_id":"6205ed751c312e6ba274a46e96e9e216ef4c306c","url":"https://github.com/gradle/gradle"},{"original_method":"/**\n     * Run a script identified by name with a given binding.\n     *\n     * @param scriptName name of the script to run\n     * @param binding    binding to pass to the script\n     * @return an object\n     * @throws ResourceException if there is a problem accessing the script\n     * @throws ScriptException if there is a problem parsing the script\n     */\n    public Object run(String scriptName, Binding binding) throws ResourceException, ScriptException {\n        ScriptCacheEntry entry = updateCacheEntry(scriptName);\n        Script scriptObject = createScript(binding, entry);\n        return scriptObject.run();\n    }","id":48134,"modified_method":"/**\n     * Run a script identified by name with a given binding.\n     *\n     * @param scriptName name of the script to run\n     * @param binding    the binding to pass to the script\n     * @return an object\n     * @throws ResourceException if there is a problem accessing the script\n     * @throws ScriptException if there is a problem parsing the script\n     */\n    public Object run(String scriptName, Binding binding) throws ResourceException, ScriptException {\n        return createScript(scriptName, binding).run();\n    }","commit_id":"b80a51118c8fee5124d7db7a2c947bb76008401b","url":"https://github.com/apache/groovy"},{"original_method":"/**\n     * Creates a Script object given a cache entry object and a binding.\n     *\n     * @param binding the binding to use\n     * @param entry the script cache entry\n     * @return the script object\n     */\n    public Script createScript(Binding binding, ScriptCacheEntry entry) {\n        return InvokerHelper.createScript(entry.scriptClass, binding);\n    }","id":48135,"modified_method":"/**\n     * Creates a Script with a given scriptName and binding.\n     *\n     * @param scriptName name of the script to run\n     * @param binding    the binding to pass to the script\n     * @return the script object\n     * @throws ResourceException if there is a problem accessing the script\n     * @throws ScriptException if there is a problem parsing the script\n     */\n    public Script createScript(String scriptName, Binding binding) throws ResourceException, ScriptException {\n        ScriptCacheEntry entry = updateCacheEntry(scriptName);\n        scriptName = scriptName.intern();\n        return InvokerHelper.createScript(entry.scriptClass, binding);\n    }","commit_id":"b80a51118c8fee5124d7db7a2c947bb76008401b","url":"https://github.com/apache/groovy"},{"original_method":"@Override\n  public void start( AcceptsOneWidget container, EventBus eventBus ) {\n    this.container = container;\n    // Hide detail view at the beginning\n    this.clientFactory.getShellView( ).hideDetail( );\n    this.clientFactory.getShellView( ).getDetailView( ).setPresenter( this );\n    \n    this.clientFactory.getShellView( ).getContentView( ).setContentTitle( getTitle( ) );\n    \n    // Show loading first\n    LoadingAnimationView view = this.clientFactory.getLoadingAnimationView( );\n    container.setWidget( view );\n    \n    String query = URL.decodePathSegment( place.getSearch( ) );\n    LOG.log( Level.INFO, \"Start new search: \" + query + \"<-: \" + place.getSearch( ) );\n    doSearch( query, new SearchRange( 0, pageSize ) );\n  }","id":48136,"modified_method":"@Override\n  public void start( AcceptsOneWidget container, EventBus eventBus ) {\n    this.container = container;\n    // Hide detail view at the beginning\n    this.clientFactory.getShellView( ).hideDetail( );\n    this.clientFactory.getShellView( ).getDetailView( ).setPresenter( this );\n    \n    this.clientFactory.getShellView( ).getContentView( ).setContentTitle( getTitle( ) );\n    \n    // Show loading first\n    LoadingAnimationView view = this.clientFactory.getLoadingAnimationView( );\n    container.setWidget( view );\n    \n    LOG.log( Level.INFO, \"Search \" + getTitle( ) + \": \" + place.getSearch( ) );\n    doSearch( place.getSearch( ), new SearchRange( 0, pageSize ) );\n  }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public AccountPlace getPlace( String token ) {\n      return new AccountPlace( token );\n    }","id":48137,"modified_method":"@Override\n    public AccountPlace getPlace( String token ) {\n      return new AccountPlace( decode( token )  );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public String getToken( AccountPlace place ) {\n      return place.getSearch( );\n    }","id":48138,"modified_method":"@Override\n    public String getToken( AccountPlace place ) {\n      return encode( place.getSearch( ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public String getToken( CertPlace place ) {\n      return place.getSearch( );\n    }","id":48139,"modified_method":"@Override\n    public String getToken( CertPlace place ) {\n      return encode( place.getSearch( ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public CertPlace getPlace( String search ) {\n      return new CertPlace( search );\n    }","id":48140,"modified_method":"@Override\n    public CertPlace getPlace( String search ) {\n      return new CertPlace( decode( search ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public String getToken( ConfigPlace place ) {\n      return place.getSearch( );\n    }","id":48141,"modified_method":"@Override\n    public String getToken( ConfigPlace place ) {\n      return encode( place.getSearch( ) ); \n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public ConfigPlace getPlace( String token ) {\n      return new ConfigPlace( token );\n    }","id":48142,"modified_method":"@Override\n    public ConfigPlace getPlace( String token ) {\n      return new ConfigPlace( decode( token ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public String getToken( GroupPlace place ) {\n      return place.getSearch( );\n    }","id":48143,"modified_method":"@Override\n    public String getToken( GroupPlace place ) {\n      return encode( place.getSearch( ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public GroupPlace getPlace( String search ) {\n      return new GroupPlace( search );\n    }","id":48144,"modified_method":"@Override\n    public GroupPlace getPlace( String search ) {\n      return new GroupPlace( decode( search ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public String getToken( ImagePlace place ) {\n      return place.getSearch( );\n    }","id":48145,"modified_method":"@Override\n    public String getToken( ImagePlace place ) {\n      return encode( place.getSearch( ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public ImagePlace getPlace( String search ) {\n      return new ImagePlace( search );\n    }","id":48146,"modified_method":"@Override\n    public ImagePlace getPlace( String search ) {\n      return new ImagePlace( decode( search ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public String getToken( KeyPlace place ) {\n      return place.getSearch( );\n    }","id":48147,"modified_method":"@Override\n    public String getToken( KeyPlace place ) {\n      return encode( place.getSearch( ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public KeyPlace getPlace( String search ) {\n      return new KeyPlace( search );\n    }","id":48148,"modified_method":"@Override\n    public KeyPlace getPlace( String search ) {\n      return new KeyPlace( decode( search ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public String getToken( PolicyPlace place ) {\n      return place.getSearch( );\n    }","id":48149,"modified_method":"@Override\n    public String getToken( PolicyPlace place ) {\n      return encode( place.getSearch( ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public PolicyPlace getPlace( String search ) {\n      return new PolicyPlace( search );\n    }","id":48150,"modified_method":"@Override\n    public PolicyPlace getPlace( String search ) {\n      return new PolicyPlace( decode( search ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public ReportPlace getPlace( String search ) {\n      return new ReportPlace( search );\n    }","id":48151,"modified_method":"@Override\n    public ReportPlace getPlace( String search ) {\n      return new ReportPlace( decode( search ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public String getToken( ReportPlace place ) {\n      return place.getSearch( );\n    }","id":48152,"modified_method":"@Override\n    public String getToken( ReportPlace place ) {\n      return encode( place.getSearch( ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n  public void search( String search ) {\n    if ( search != null ) {\n      LOG.log( Level.INFO, \"New search: \" + search );\n      this.clientFactory.getMainHistorian( ).newItem( search, true/*issueEvent*/ );\n    } else {\n      LOG.log( Level.INFO, \"Empty search!\" );\n    }\n  }","id":48153,"modified_method":"@Override\n  public void search( String search ) {\n    if ( search != null ) {\n      LOG.log( Level.INFO, \"New search: \" + search );\n      this.clientFactory.getMainHistorian( ).newItem( SearchPlace.encode( search ), true/*issueEvent*/ );\n    } else {\n      LOG.log( Level.INFO, \"Empty search!\" );\n    }\n  }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public UserPlace getPlace( String search ) {\n      return new UserPlace( search );\n    }","id":48154,"modified_method":"@Override\n    public UserPlace getPlace( String search ) {\n      return new UserPlace( decode( search ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public String getToken( UserPlace place ) {\n      return place.getSearch( );\n    }","id":48155,"modified_method":"@Override\n    public String getToken( UserPlace place ) {\n      return encode( place.getSearch( ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public VmTypePlace getPlace( String search ) {\n      return new VmTypePlace( search );\n    }","id":48156,"modified_method":"@Override\n    public VmTypePlace getPlace( String search ) {\n      return new VmTypePlace( decode( search ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n    public String getToken( VmTypePlace place ) {\n      return place.getSearch( );\n    }","id":48157,"modified_method":"@Override\n    public String getToken( VmTypePlace place ) {\n      return encode( place.getSearch( ) );\n    }","commit_id":"7e23e7eb1881c53d55a9d2a073c4fb0ea8cf6fe0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"protected void translateFiles(\n            @NotNull Project project,\n            @NotNull List<String> files,\n            @NotNull String outputFile,\n            @NotNull MainCallParameters mainCallParameters,\n            @NotNull EcmaVersion version,\n            @NotNull TestConfigFactory configFactory\n    ) throws Exception {\n        TranslationUtils.translateFiles(project, files, outputFile, mainCallParameters, version, configFactory);\n    }","id":48158,"modified_method":"protected void translateFiles(\n            @NotNull Project project,\n            @NotNull List<String> files,\n            @NotNull String outputFile,\n            @NotNull MainCallParameters mainCallParameters,\n            @NotNull EcmaVersion version,\n            @NotNull TestConfigFactory configFactory\n    ) throws Exception {\n        TranslationUtils.translateFiles(project, mainCallParameters, files, outputFile, version, configFactory);\n    }","commit_id":"1409dd78126a52a8136cd24c2240a8d43ef42068","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public JetCompilerManager(Project project, CompilerManager manager) {\n        manager.addTranslatingCompiler(new JetCompiler(),\n                                       Collections.<FileType>singleton(JetFileType.INSTANCE),\n                                       Collections.singleton(StdFileTypes.CLASS));\n        manager.addTranslatingCompiler(new K2JSCompiler(),\n                                       Collections.<FileType>singleton(JetFileType.INSTANCE),\n                                       Collections.<FileType>singleton(StdFileTypes.JS));\n        manager.addCompilableFileType(JetFileType.INSTANCE);\n\n        manager.addCompilationStatusListener(new CompilationStatusListener() {\n            @Override\n            public void compilationFinished(\n                    boolean aborted, int errors, int warnings, CompileContext compileContext\n            ) {\n                for (CompilerMessage error : compileContext.getMessages(CompilerMessageCategory.ERROR)) {\n                    String message = error.getMessage();\n                    if (message.startsWith(INTERNAL_ERROR_PREFIX) || message.startsWith(PREFIX_WITH_COMPILER_NAME)) {\n                        LOG.error(new KotlinCompilerException(message));\n                    }\n                }\n            }\n\n            @Override\n            public void fileGenerated(String outputRoot, String relativePath) {\n            }\n        }, project);\n    }","id":48159,"modified_method":"public JetCompilerManager(Project project, CompilerManager manager) {\n        manager.addTranslatingCompiler(new JetCompiler(),\n                                       Collections.<FileType>singleton(JetFileType.INSTANCE),\n                                       Collections.singleton(StdFileTypes.CLASS));\n        manager.addTranslatingCompiler(new K2JSCompiler(),\n                                       Collections.<FileType>singleton(JetFileType.INSTANCE),\n                                       Collections.<FileType>singleton(StdFileTypes.JS));\n        manager.addCompilableFileType(JetFileType.INSTANCE);\n\n        manager.addCompilationStatusListener(new CompilationStatusListener() {\n            @Override\n            public void compilationFinished(\n                    boolean aborted, int errors, int warnings, CompileContext compileContext\n            ) {\n                for (CompilerMessage error : compileContext.getMessages(CompilerMessageCategory.ERROR)) {\n                    String message = error.getMessage();\n                    if (message.startsWith(INTERNAL_ERROR_PREFIX) || message.startsWith(PREFIX_WITH_COMPILER_NAME)) {\n                        LOG.error(new KotlinCompilerException(message));\n                    }\n                }\n            }\n\n            @Override\n            public void fileGenerated(String outputRoot, String relativePath) {\n                if (ApplicationManager.getApplication().isUnitTestMode()) return;\n\n                String ext = FileUtilRt.getExtension(relativePath).toLowerCase();\n\n                if (FILE_EXTS_WHICH_NEEDS_REFRESH.contains(ext)) {\n                    String outFile = outputRoot + \"/\" + relativePath;\n                    VirtualFile virtualFile = LocalFileSystem.getInstance().findFileByPath(outFile);\n                    assert virtualFile != null : \"Virtual file not found for generated file path: \" + outFile;\n                    virtualFile.refresh(/*async =*/ false, /*recursive =*/ false);\n                }\n            }\n        }, project);\n    }","commit_id":"1409dd78126a52a8136cd24c2240a8d43ef42068","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private static void doCompile(\n            @NotNull MessageCollector messageCollector, @NotNull OutputSink sink, @NotNull Module module,\n            @NotNull CompilerEnvironment environment, VirtualFile[] files\n    ) {\n        List<File> srcFiles = ContainerUtil.map(files, new Function<VirtualFile, File>() {\n            @Override\n            public File fun(VirtualFile file) {\n                return new File(file.getPath());\n            }\n        });\n        List<String> libraryFiles = getLibraryFiles(module);\n        File outDir = environment.getOutput();\n        File outFile = new File(outDir, module.getName() + \".js\");\n\n        OutputItemsCollectorImpl outputItemsCollector = new OutputItemsCollectorImpl();\n\n        Project project = module.getProject();\n        CommonCompilerArguments commonArguments = KotlinCommonCompilerArgumentsHolder.getInstance(project).getSettings();\n        K2JSCompilerArguments k2jsArguments = Kotlin2JsCompilerArgumentsHolder.getInstance(project).getSettings();\n        CompilerSettings compilerSettings = KotlinCompilerSettings.getInstance(project).getSettings();\n\n        KotlinCompilerRunner.runK2JsCompiler(commonArguments, k2jsArguments, compilerSettings, messageCollector, environment,\n                                             outputItemsCollector, srcFiles, libraryFiles, outFile);\n\n        if (!ApplicationManager.getApplication().isUnitTestMode()) {\n            VirtualFile virtualFile = LocalFileSystem.getInstance().findFileByIoFile(outDir);\n            assert virtualFile != null : \"Virtual file not found for module output: \" + outDir;\n            virtualFile.refresh(false, true);\n        }\n\n        TranslatingCompilerUtils.reportOutputs(sink, environment.getOutput(), outputItemsCollector);\n    }","id":48160,"modified_method":"private static void doCompile(\n            @NotNull MessageCollector messageCollector, @NotNull OutputSink sink, @NotNull Module module,\n            @NotNull CompilerEnvironment environment, VirtualFile[] files\n    ) {\n        List<File> srcFiles = ContainerUtil.map(files, new Function<VirtualFile, File>() {\n            @Override\n            public File fun(VirtualFile file) {\n                return new File(file.getPath());\n            }\n        });\n        List<String> libraryFiles = getLibraryFiles(module);\n        File outDir = environment.getOutput();\n        File outFile = new File(outDir, module.getName() + \".js\");\n\n        OutputItemsCollectorImpl outputItemsCollector = new OutputItemsCollectorImpl();\n\n        Project project = module.getProject();\n        CommonCompilerArguments commonArguments = KotlinCommonCompilerArgumentsHolder.getInstance(project).getSettings();\n        K2JSCompilerArguments k2jsArguments = Kotlin2JsCompilerArgumentsHolder.getInstance(project).getSettings();\n        CompilerSettings compilerSettings = KotlinCompilerSettings.getInstance(project).getSettings();\n\n        KotlinCompilerRunner.runK2JsCompiler(commonArguments, k2jsArguments, compilerSettings, messageCollector, environment,\n                                             outputItemsCollector, srcFiles, libraryFiles, outFile);\n\n        TranslatingCompilerUtils.reportOutputs(sink, environment.getOutput(), outputItemsCollector);\n    }","commit_id":"1409dd78126a52a8136cd24c2240a8d43ef42068","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    @Override\n    protected ExitCode doExecute(\n            @NotNull K2JSCompilerArguments arguments,\n            @NotNull MessageCollector messageCollector,\n            @NotNull Disposable rootDisposable\n    ) {\n        if (arguments.sourceFiles == null) {\n            messageCollector.report(CompilerMessageSeverity.ERROR, \"Specify sources location via -sourceFiles\", NO_LOCATION);\n            return ExitCode.INTERNAL_ERROR;\n        }\n\n        CompilerConfiguration configuration = new CompilerConfiguration();\n        configuration.addAll(CommonConfigurationKeys.SOURCE_ROOTS_KEY, Arrays.asList(arguments.sourceFiles));\n        JetCoreEnvironment environmentForJS = JetCoreEnvironment.createForProduction(rootDisposable, configuration);\n\n        Project project = environmentForJS.getProject();\n\n        ClassPathLibrarySourcesLoader sourceLoader = new ClassPathLibrarySourcesLoader(project);\n        List<JetFile> sourceFiles = sourceLoader.findSourceFiles();\n        environmentForJS.getSourceFiles().addAll(sourceFiles);\n\n        if (arguments.verbose) {\n            reportCompiledSourcesList(messageCollector, environmentForJS);\n        }\n\n        String outputFile = arguments.outputFile;\n        if (outputFile == null) {\n            messageCollector.report(CompilerMessageSeverity.ERROR, \"Specify output file via -output\", CompilerMessageLocation.NO_LOCATION);\n            return ExitCode.INTERNAL_ERROR;\n        }\n\n        Config config = getConfig(arguments, project);\n        if (analyzeAndReportErrors(messageCollector, environmentForJS.getSourceFiles(), config)) {\n            return COMPILATION_ERROR;\n        }\n\n        File outputPrefixFile = null;\n        if (arguments.outputPrefix != null) {\n            outputPrefixFile = new File(arguments.outputPrefix);\n            if (!outputPrefixFile.exists()) {\n                messageCollector.report(CompilerMessageSeverity.ERROR,\n                                        \"Output prefix file '\" + arguments.outputPrefix + \"' not found\",\n                                        CompilerMessageLocation.NO_LOCATION);\n                return ExitCode.COMPILATION_ERROR;\n            }\n        }\n\n        File outputPostfixFile = null;\n        if (arguments.outputPostfix != null) {\n            outputPostfixFile = new File(arguments.outputPostfix);\n            if (!outputPostfixFile.exists()) {\n                messageCollector.report(CompilerMessageSeverity.ERROR,\n                                        \"Output postfix file '\" + arguments.outputPostfix + \"' not found\",\n                                        CompilerMessageLocation.NO_LOCATION);\n                return ExitCode.COMPILATION_ERROR;\n            }\n        }\n\n        MainCallParameters mainCallParameters = createMainCallParameters(arguments.main);\n        return translateAndGenerateOutputFile(mainCallParameters, environmentForJS, config, outputFile, outputPrefixFile, outputPostfixFile);\n    }","id":48161,"modified_method":"@NotNull\n    @Override\n    protected ExitCode doExecute(\n            @NotNull K2JSCompilerArguments arguments,\n            @NotNull MessageCollector messageCollector,\n            @NotNull Disposable rootDisposable\n    ) {\n        if (arguments.sourceFiles == null) {\n            messageCollector.report(CompilerMessageSeverity.ERROR, \"Specify sources location via -sourceFiles\", NO_LOCATION);\n            return ExitCode.INTERNAL_ERROR;\n        }\n\n        CompilerConfiguration configuration = new CompilerConfiguration();\n        configuration.addAll(CommonConfigurationKeys.SOURCE_ROOTS_KEY, Arrays.asList(arguments.sourceFiles));\n        JetCoreEnvironment environmentForJS = JetCoreEnvironment.createForProduction(rootDisposable, configuration);\n\n        Project project = environmentForJS.getProject();\n        List<JetFile> sourcesFiles = environmentForJS.getSourceFiles();\n\n        ClassPathLibrarySourcesLoader sourceLoader = new ClassPathLibrarySourcesLoader(project);\n        List<JetFile> additionalSourceFiles = sourceLoader.findSourceFiles();\n        sourcesFiles.addAll(additionalSourceFiles);\n\n        if (arguments.verbose) {\n            reportCompiledSourcesList(messageCollector, sourcesFiles);\n        }\n\n        if (arguments.outputFile == null) {\n            messageCollector.report(CompilerMessageSeverity.ERROR, \"Specify output file via -output\", CompilerMessageLocation.NO_LOCATION);\n            return ExitCode.INTERNAL_ERROR;\n        }\n\n        File outputFile = new File(arguments.outputFile);\n\n        Config config = getConfig(arguments, project);\n        if (analyzeAndReportErrors(messageCollector, sourcesFiles, config)) {\n            return COMPILATION_ERROR;\n        }\n\n        File outputPrefixFile = null;\n        if (arguments.outputPrefix != null) {\n            outputPrefixFile = new File(arguments.outputPrefix);\n            if (!outputPrefixFile.exists()) {\n                messageCollector.report(CompilerMessageSeverity.ERROR,\n                                        \"Output prefix file '\" + arguments.outputPrefix + \"' not found\",\n                                        CompilerMessageLocation.NO_LOCATION);\n                return ExitCode.COMPILATION_ERROR;\n            }\n        }\n\n        File outputPostfixFile = null;\n        if (arguments.outputPostfix != null) {\n            outputPostfixFile = new File(arguments.outputPostfix);\n            if (!outputPostfixFile.exists()) {\n                messageCollector.report(CompilerMessageSeverity.ERROR,\n                                        \"Output postfix file '\" + arguments.outputPostfix + \"' not found\",\n                                        CompilerMessageLocation.NO_LOCATION);\n                return ExitCode.COMPILATION_ERROR;\n            }\n        }\n\n        MainCallParameters mainCallParameters = createMainCallParameters(arguments.main);\n\n        OutputFileCollection outputFiles = translate(mainCallParameters, config, sourcesFiles, outputFile, outputPrefixFile, outputPostfixFile);\n\n        OutputDirector outputDirector = new SingleDirectoryDirector(outputFile.getParentFile());\n        OutputUtilsPackage.writeAll(outputFiles, outputDirector, messageCollector);\n\n        return OK;\n    }","commit_id":"1409dd78126a52a8136cd24c2240a8d43ef42068","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private static void reportCompiledSourcesList(@NotNull MessageCollector messageCollector,\n            @NotNull JetCoreEnvironment environmentForJS) {\n        List<JetFile> files = environmentForJS.getSourceFiles();\n        Iterable<String> fileNames = Iterables.transform(files, new Function<JetFile, String>() {\n            @Override\n            public String apply(@Nullable JetFile file) {\n                assert file != null;\n                VirtualFile virtualFile = file.getVirtualFile();\n                if (virtualFile != null) {\n                    return FileUtil.toSystemIndependentName(virtualFile.getPath());\n                }\n                return file.getName() + \"(no virtual file)\";\n            }\n        });\n        messageCollector.report(CompilerMessageSeverity.LOGGING, \"Compiling source files: \" + Joiner.on(\", \").join(fileNames),\n                                CompilerMessageLocation.NO_LOCATION);\n    }","id":48162,"modified_method":"private static void reportCompiledSourcesList(@NotNull MessageCollector messageCollector, @NotNull List<JetFile> sourceFiles) {\n        Iterable<String> fileNames = ContainerUtil.map(sourceFiles, new Function<JetFile, String>() {\n            @Override\n            public String fun(@Nullable JetFile file) {\n                assert file != null;\n                VirtualFile virtualFile = file.getVirtualFile();\n                if (virtualFile != null) {\n                    return FileUtil.toSystemIndependentName(virtualFile.getPath());\n                }\n                return file.getName() + \"(no virtual file)\";\n            }\n        });\n        messageCollector.report(CompilerMessageSeverity.LOGGING, \"Compiling source files: \" + Joiner.on(\", \").join(fileNames),\n                                CompilerMessageLocation.NO_LOCATION);\n    }","commit_id":"1409dd78126a52a8136cd24c2240a8d43ef42068","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    private static ExitCode translateAndGenerateOutputFile(\n            @NotNull MainCallParameters mainCall,\n            @NotNull JetCoreEnvironment environmentForJS,\n            @NotNull Config config,\n            @NotNull String outputFile,\n            @Nullable File outputPrefix,\n            @Nullable File outputPostfix\n    ) {\n        try {\n            K2JSTranslator.translateWithMainCallParametersAndSaveToFile(mainCall, environmentForJS.getSourceFiles(),\n                                                                        outputFile, outputPrefix, outputPostfix, config);\n        }\n        catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n        return OK;\n    }","id":48163,"modified_method":"private static OutputFileCollection translate(\n            @NotNull MainCallParameters mainCall,\n            @NotNull Config config,\n            @NotNull List<JetFile> sourceFiles,\n            @NotNull File outputFile,\n            @Nullable File outputPrefix,\n            @Nullable File outputPostfix\n    ) {\n        try {\n            return K2JSTranslator.translateWithMainCallParameters(mainCall, sourceFiles, outputFile, outputPrefix, outputPostfix, config);\n        }\n        catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }","commit_id":"1409dd78126a52a8136cd24c2240a8d43ef42068","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public static void translateWithMainCallParametersAndSaveToFile(\n            @NotNull MainCallParameters mainCall,\n            @NotNull List<JetFile> files,\n            @NotNull String outputPath,\n            @Nullable File outputPrefixFile,\n            @Nullable File outputPostfixFile,\n            @NotNull Config config\n    ) throws TranslationException, IOException {\n        K2JSTranslator translator = new K2JSTranslator(config);\n        File outFile = new File(outputPath);\n        TextOutputImpl output = new TextOutputImpl();\n        SourceMapBuilder sourceMapBuilder = config.isSourcemap() ? new SourceMap3Builder(outFile, output, new SourceMapBuilderConsumer()) : null;\n        String programCode = translator.generateProgramCode(files, mainCall, output, sourceMapBuilder);\n\n        if (outputPrefixFile != null) {\n            String prefix = FileUtil.loadFile(outputPrefixFile);\n            FileUtil.writeToFile(outFile, prefix);\n            if (sourceMapBuilder != null) {\n                sourceMapBuilder.skipLinesInBegin(StringUtil.getLineBreakCount(prefix));\n            }\n        }\n\n        FileUtil.writeToFile(outFile, programCode.getBytes(), outputPrefixFile != null);\n\n        if (outputPostfixFile != null) {\n            byte[] postfix = FileUtil.loadFileBytes(outputPostfixFile);\n            FileUtil.writeToFile(outFile, postfix, true);\n        }\n\n        if (sourceMapBuilder != null) {\n            FileUtil.writeToFile(sourceMapBuilder.getOutFile(), sourceMapBuilder.build());\n        }\n    }","id":48164,"modified_method":"public static OutputFileCollection translateWithMainCallParameters(\n            @NotNull MainCallParameters mainCall,\n            @NotNull List<JetFile> files,\n            @NotNull File outputFile,\n            @Nullable File outputPrefixFile,\n            @Nullable File outputPostfixFile,\n            @NotNull Config config\n    ) throws TranslationException, IOException {\n        K2JSTranslator translator = new K2JSTranslator(config);\n        TextOutputImpl output = new TextOutputImpl();\n        SourceMapBuilder sourceMapBuilder = config.isSourcemap() ? new SourceMap3Builder(outputFile, output, new SourceMapBuilderConsumer()) : null;\n        String programCode = translator.generateProgramCode(files, mainCall, output, sourceMapBuilder);\n\n        String prefix = FileUtilsPackage.readTextOrEmpty(outputPrefixFile);\n        String postfix = FileUtilsPackage.readTextOrEmpty(outputPostfixFile);\n\n        StringBuilder outBuilder = new StringBuilder(programCode.length() + prefix.length() + postfix.length());\n        outBuilder.append(prefix).append(programCode).append(postfix);\n\n        List<File> sourceFiles = ContainerUtil.map(files, new Function<JetFile, File>() {\n            @Override\n            public File fun(JetFile file) {\n                VirtualFile virtualFile = file.getOriginalFile().getVirtualFile();\n                if (virtualFile == null) return new File(file.getName());\n                return VfsUtilCore.virtualToIoFile(virtualFile);\n            }\n        });\n\n        SimpleOutputFile jsFile = new SimpleOutputFile(sourceFiles, outputFile.getName(), outBuilder.toString());\n        List<SimpleOutputFile> outputFiles = new SmartList<SimpleOutputFile>(jsFile);\n\n        if (sourceMapBuilder != null) {\n            sourceMapBuilder.skipLinesInBegin(StringUtil.getLineBreakCount(prefix));\n            SimpleOutputFile sourcemapFile = new SimpleOutputFile(sourceFiles, sourceMapBuilder.getOutFile().getName(), sourceMapBuilder.build());\n            outputFiles.add(sourcemapFile);\n        }\n\n        return new SimpleOutputFileCollection(outputFiles);\n    }","commit_id":"1409dd78126a52a8136cd24c2240a8d43ef42068","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n        public void report(\n                @NotNull CompilerMessageSeverity severity,\n                @NotNull String message,\n                @NotNull CompilerMessageLocation location\n        ) {\n            String prefix = \"\";\n            if (severity == EXCEPTION) {\n                prefix = CompilerRunnerConstants.INTERNAL_ERROR_PREFIX;\n            }\n            context.processMessage(new CompilerMessage(\n                    CompilerRunnerConstants.KOTLIN_COMPILER_NAME,\n                    kind(severity),\n                    prefix + message,\n                    location.getPath(),\n                    -1, -1, -1,\n                    location.getLine(),\n                    location.getColumn()\n            ));\n        }","id":48165,"modified_method":"@Override\n        public void report(\n                @NotNull CompilerMessageSeverity severity,\n                @NotNull String message,\n                @NotNull CompilerMessageLocation location\n        ) {\n            String prefix = \"\";\n            if (severity == EXCEPTION) {\n                prefix = INTERNAL_ERROR_PREFIX;\n            }\n            context.processMessage(new CompilerMessage(\n                    CompilerRunnerConstants.KOTLIN_COMPILER_NAME,\n                    kind(severity),\n                    prefix + message,\n                    location.getPath(),\n                    -1, -1, -1,\n                    location.getLine(),\n                    location.getColumn()\n            ));\n        }","commit_id":"1409dd78126a52a8136cd24c2240a8d43ef42068","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public ExitCode build(\n            CompileContext context,\n            ModuleChunk chunk,\n            DirtyFilesHolder<JavaSourceRootDescriptor, ModuleBuildTarget> dirtyFilesHolder,\n            OutputConsumer outputConsumer\n    ) throws ProjectBuildException, IOException {\n        MessageCollector messageCollector = new MessageCollectorAdapter(context);\n        // Workaround for Android Studio\n        if (!isJavaPluginEnabled(context)) {\n            messageCollector.report(INFO, \"Kotlin JPS plugin is disabled\", CompilerMessageLocation.NO_LOCATION);\n            return ExitCode.NOTHING_DONE;\n        }\n\n        messageCollector.report(INFO, \"Kotlin JPS plugin version \" + KotlinVersion.VERSION, CompilerMessageLocation.NO_LOCATION);\n\n        ModuleBuildTarget representativeTarget = chunk.representativeTarget();\n\n        // For non-incremental build: take all sources\n        if (!dirtyFilesHolder.hasDirtyFiles() && !dirtyFilesHolder.hasRemovedFiles()) {\n            return ExitCode.NOTHING_DONE;\n        }\n\n        File outputDir = representativeTarget.getOutputDir();\n\n        CompilerEnvironment environment = CompilerEnvironment.getEnvironmentFor(PathUtil.getKotlinPathsForJpsPluginOrJpsTests(), outputDir);\n        if (!environment.success()) {\n            if (!hasKotlinFiles(chunk)) {\n                // Configuration is bad, but there's nothing to compile anyways\n                return ExitCode.NOTHING_DONE;\n            }\n            environment.reportErrorsTo(messageCollector);\n            return ExitCode.ABORT;\n        }\n\n        assert outputDir != null : \"CompilerEnvironment must have checked for outputDir to be not null, but it didn't\";\n\n        OutputItemsCollectorImpl outputItemCollector = new OutputItemsCollectorImpl();\n\n        JpsProject project = representativeTarget.getModule().getProject();\n        CommonCompilerArguments commonArguments = JpsKotlinCompilerSettings.getCommonCompilerArguments(project);\n        CompilerSettings compilerSettings = JpsKotlinCompilerSettings.getCompilerSettings(project);\n\n        if (JpsUtils.isJsKotlinModule(representativeTarget)) {\n            if (chunk.getModules().size() > 1) {\n                // We do not support circular dependencies, but if they are present, we do our best should not break the build,\n                // so we simply yield a warning and report NOTHING_DONE\n                messageCollector.report(\n                        WARNING, \"Circular dependencies are not supported. \" +\n                                 \"The following JS modules depend on each other: \" + StringUtil.join(chunk.getModules(), MODULE_NAME, \", \") + \". \" +\n                                 \"Kotlin is not compiled for these modules\",\n                        CompilerMessageLocation.NO_LOCATION);\n                return ExitCode.NOTHING_DONE;\n            }\n\n            List<File> sourceFiles = KotlinSourceFileCollector.getAllKotlinSourceFiles(representativeTarget);\n            //List<File> sourceFiles = KotlinSourceFileCollector.getDirtySourceFiles(dirtyFilesHolder);\n\n            if (sourceFiles.isEmpty()) {\n                return ExitCode.NOTHING_DONE;\n            }\n\n            File outputFile = new File(outputDir, representativeTarget.getModule().getName() + \".js\");\n            List<String> libraryFiles = JpsJsModuleUtils.getLibraryFilesAndDependencies(representativeTarget);\n            K2JSCompilerArguments k2JsArguments = JpsKotlinCompilerSettings.getK2JsCompilerArguments(project);\n\n            runK2JsCompiler(commonArguments, k2JsArguments, compilerSettings, messageCollector, environment,\n                            outputItemCollector, sourceFiles, libraryFiles, outputFile);\n        }\n        else {\n            if (chunk.getModules().size() > 1) {\n                messageCollector.report(\n                        WARNING, \"Circular dependencies are only partially supported. \" +\n                                 \"The following modules depend on each other: \" + StringUtil.join(chunk.getModules(), MODULE_NAME, \", \") + \". \" +\n                                 \"Kotlin will compile them, but some strange effect may happen\",\n                        CompilerMessageLocation.NO_LOCATION);\n            }\n\n            File moduleFile = KotlinBuilderModuleScriptGenerator.generateModuleDescription(context, chunk);\n            if (moduleFile == null) {\n                // No Kotlin sources found\n                return ExitCode.NOTHING_DONE;\n            }\n\n            K2JVMCompilerArguments k2JvmArguments = JpsKotlinCompilerSettings.getK2JvmCompilerArguments(project);\n\n            runK2JvmCompiler(commonArguments, k2JvmArguments, compilerSettings, messageCollector, environment,\n                             moduleFile, outputItemCollector);\n        }\n\n        // If there's only one target, this map is empty: get() always returns null, and the representativeTarget will be used below\n        Map<File, BuildTarget<?>> sourceToTarget = new HashMap<File, BuildTarget<?>>();\n        if (chunk.getTargets().size() > 1) {\n            for (ModuleBuildTarget target : chunk.getTargets()) {\n                for (File file : KotlinSourceFileCollector.getAllKotlinSourceFiles(target)) {\n                    sourceToTarget.put(file, target);\n                }\n            }\n        }\n\n        for (SimpleOutputItem outputItem : outputItemCollector.getOutputs()) {\n            BuildTarget<?> target = sourceToTarget.get(outputItem.getSourceFiles().iterator().next());\n            outputConsumer.registerOutputFile(\n                    target != null ? target : representativeTarget,\n                    outputItem.getOutputFile(),\n                    paths(outputItem.getSourceFiles()));\n        }\n\n        return ExitCode.OK;\n    }","id":48166,"modified_method":"@Override\n    public ExitCode build(\n            CompileContext context,\n            ModuleChunk chunk,\n            DirtyFilesHolder<JavaSourceRootDescriptor, ModuleBuildTarget> dirtyFilesHolder,\n            OutputConsumer outputConsumer\n    ) throws ProjectBuildException, IOException {\n        MessageCollector messageCollector = new MessageCollectorAdapter(context);\n        // Workaround for Android Studio\n        if (!isJavaPluginEnabled(context)) {\n            messageCollector.report(INFO, \"Kotlin JPS plugin is disabled\", NO_LOCATION);\n            return ExitCode.NOTHING_DONE;\n        }\n\n        messageCollector.report(INFO, \"Kotlin JPS plugin version \" + KotlinVersion.VERSION, NO_LOCATION);\n\n        ModuleBuildTarget representativeTarget = chunk.representativeTarget();\n\n        // For non-incremental build: take all sources\n        if (!dirtyFilesHolder.hasDirtyFiles() && !dirtyFilesHolder.hasRemovedFiles()) {\n            return ExitCode.NOTHING_DONE;\n        }\n\n        File outputDir = representativeTarget.getOutputDir();\n\n        CompilerEnvironment environment = CompilerEnvironment.getEnvironmentFor(PathUtil.getKotlinPathsForJpsPluginOrJpsTests(), outputDir);\n        if (!environment.success()) {\n            if (!hasKotlinFiles(chunk)) {\n                // Configuration is bad, but there's nothing to compile anyways\n                return ExitCode.NOTHING_DONE;\n            }\n            environment.reportErrorsTo(messageCollector);\n            return ExitCode.ABORT;\n        }\n\n        assert outputDir != null : \"CompilerEnvironment must have checked for outputDir to be not null, but it didn't\";\n\n        OutputItemsCollectorImpl outputItemCollector = new OutputItemsCollectorImpl();\n\n        JpsProject project = representativeTarget.getModule().getProject();\n        CommonCompilerArguments commonArguments = JpsKotlinCompilerSettings.getCommonCompilerArguments(project);\n        CompilerSettings compilerSettings = JpsKotlinCompilerSettings.getCompilerSettings(project);\n\n        if (JpsUtils.isJsKotlinModule(representativeTarget)) {\n            if (chunk.getModules().size() > 1) {\n                // We do not support circular dependencies, but if they are present, we do our best should not break the build,\n                // so we simply yield a warning and report NOTHING_DONE\n                messageCollector.report(\n                        WARNING, \"Circular dependencies are not supported. \" +\n                                 \"The following JS modules depend on each other: \" + StringUtil.join(chunk.getModules(), MODULE_NAME, \", \") + \". \" +\n                                 \"Kotlin is not compiled for these modules\",\n                        NO_LOCATION);\n                return ExitCode.NOTHING_DONE;\n            }\n\n            List<File> sourceFiles = KotlinSourceFileCollector.getAllKotlinSourceFiles(representativeTarget);\n            //List<File> sourceFiles = KotlinSourceFileCollector.getDirtySourceFiles(dirtyFilesHolder);\n\n            if (sourceFiles.isEmpty()) {\n                return ExitCode.NOTHING_DONE;\n            }\n\n            File outputFile = new File(outputDir, representativeTarget.getModule().getName() + \".js\");\n            List<String> libraryFiles = JpsJsModuleUtils.getLibraryFilesAndDependencies(representativeTarget);\n            K2JSCompilerArguments k2JsArguments = JpsKotlinCompilerSettings.getK2JsCompilerArguments(project);\n\n            runK2JsCompiler(commonArguments, k2JsArguments, compilerSettings, messageCollector, environment,\n                            outputItemCollector, sourceFiles, libraryFiles, outputFile);\n        }\n        else {\n            if (chunk.getModules().size() > 1) {\n                messageCollector.report(\n                        WARNING, \"Circular dependencies are only partially supported. \" +\n                                 \"The following modules depend on each other: \" + StringUtil.join(chunk.getModules(), MODULE_NAME, \", \") + \". \" +\n                                 \"Kotlin will compile them, but some strange effect may happen\",\n                        NO_LOCATION);\n            }\n\n            File moduleFile = KotlinBuilderModuleScriptGenerator.generateModuleDescription(context, chunk);\n            if (moduleFile == null) {\n                // No Kotlin sources found\n                return ExitCode.NOTHING_DONE;\n            }\n\n            K2JVMCompilerArguments k2JvmArguments = JpsKotlinCompilerSettings.getK2JvmCompilerArguments(project);\n\n            runK2JvmCompiler(commonArguments, k2JvmArguments, compilerSettings, messageCollector, environment,\n                             moduleFile, outputItemCollector);\n        }\n\n        // If there's only one target, this map is empty: get() always returns null, and the representativeTarget will be used below\n        Map<File, BuildTarget<?>> sourceToTarget = new HashMap<File, BuildTarget<?>>();\n        if (chunk.getTargets().size() > 1) {\n            for (ModuleBuildTarget target : chunk.getTargets()) {\n                for (File file : KotlinSourceFileCollector.getAllKotlinSourceFiles(target)) {\n                    sourceToTarget.put(file, target);\n                }\n            }\n        }\n\n        for (SimpleOutputItem outputItem : outputItemCollector.getOutputs()) {\n            BuildTarget<?> target = null;\n            Collection<File> sourceFiles = outputItem.getSourceFiles();\n            if (sourceFiles != null && !sourceFiles.isEmpty()) {\n                target = sourceToTarget.get(sourceFiles.iterator().next());\n            }\n            else {\n                messageCollector.report(ERROR,\n                                        INTERNAL_ERROR_PREFIX + \"outputItem.sourceFiles is null or empty, outputItem = \" + outputItem,\n                                        NO_LOCATION);\n            }\n\n            outputConsumer.registerOutputFile(\n                    target != null ? target : representativeTarget,\n                    outputItem.getOutputFile(),\n                    paths(outputItem.getSourceFiles()));\n        }\n\n        return ExitCode.OK;\n    }","commit_id":"1409dd78126a52a8136cd24c2240a8d43ef42068","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    protected void translateFiles(\n            @NotNull Project project,\n            @NotNull List<String> files,\n            @NotNull String outputFile,\n            @NotNull MainCallParameters mainCallParameters,\n            @NotNull EcmaVersion version,\n            @NotNull TestConfigFactory configFactory\n    ) throws Exception {\n        K2JSTranslator.translateWithMainCallParametersAndSaveToFile(mainCallParameters, createJetFileList(project, files, null),\n                                                                    outputFile, outputPrefixFile, outputPostfixFile,\n                                                                    getConfig(project, version, configFactory));\n    }","id":48167,"modified_method":"@Override\n    protected void translateFiles(\n            @NotNull Project project,\n            @NotNull List<String> files,\n            @NotNull String outputFile,\n            @NotNull MainCallParameters mainCallParameters,\n            @NotNull EcmaVersion version,\n            @NotNull TestConfigFactory configFactory\n    ) throws Exception {\n        TranslationUtils.translateFiles(mainCallParameters, createJetFileList(project, files, null),\n                                        outputFile, outputPrefixFile, outputPostfixFile,\n                                        getConfig(project, version, configFactory));\n    }","commit_id":"1409dd78126a52a8136cd24c2240a8d43ef42068","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    protected void translateFiles(\n            @NotNull Project project,\n            @NotNull List<String> files,\n            @NotNull String outputFile,\n            @NotNull MainCallParameters mainCallParameters,\n            @NotNull EcmaVersion version,\n            @NotNull TestConfigFactory configFactory\n    ) throws Exception {\n        K2JSTranslator.translateWithMainCallParametersAndSaveToFile(mainCallParameters, createJetFileList(project, files, null),\n                                                                    outputFile, null, null,\n                                                                    getConfig(project, version, configFactory));\n    }","id":48168,"modified_method":"@Override\n    protected void translateFiles(\n            @NotNull Project project,\n            @NotNull List<String> files,\n            @NotNull String outputFile,\n            @NotNull MainCallParameters mainCallParameters,\n            @NotNull EcmaVersion version,\n            @NotNull TestConfigFactory configFactory\n    ) throws Exception {\n        TranslationUtils.translateFiles(mainCallParameters, createJetFileList(project, files, null),\n                                        outputFile, null, null,\n                                        getConfig(project, version, configFactory));\n    }","commit_id":"1409dd78126a52a8136cd24c2240a8d43ef42068","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public static void translateFiles(@NotNull Project project, @NotNull List<String> inputFiles,\n            @NotNull String outputFile,\n            @NotNull MainCallParameters mainCallParameters,\n            @NotNull EcmaVersion version, TestConfigFactory configFactory) throws Exception {\n        List<JetFile> jetFiles = createJetFileList(project, inputFiles, null);\n        K2JSTranslator translator = new K2JSTranslator(getConfig(project, version, configFactory));\n        FileUtil.writeToFile(new File(outputFile), translator.generateProgramCode(jetFiles, mainCallParameters));\n    }","id":48169,"modified_method":"public static void translateFiles(\n            @NotNull Project project,\n            @NotNull MainCallParameters mainCallParameters,\n            @NotNull List<String> inputFiles,\n            @NotNull String outputFile,\n            @NotNull EcmaVersion version,\n            @NotNull TestConfigFactory configFactory\n    ) throws Exception {\n        List<JetFile> jetFiles = createJetFileList(project, inputFiles, null);\n        Config config = getConfig(project, version, configFactory);\n        translateFiles(mainCallParameters, jetFiles, outputFile, null, null, config);\n    }","commit_id":"1409dd78126a52a8136cd24c2240a8d43ef42068","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Nullable\n    public static ClassFileFactory compileModule(CompilerConfiguration configuration, Module module, File directory) {\n        if (module.getSourceFiles().isEmpty()) {\n            throw new CompileEnvironmentException(\"No source files where defined in module \" + module.getModuleName());\n        }\n\n        CompilerConfiguration compilerConfiguration = configuration.copy();\n        for (String sourceFile : module.getSourceFiles()) {\n            File source = new File(sourceFile);\n            if (!source.isAbsolute()) {\n                source = new File(directory, sourceFile);\n            }\n\n            if (!source.exists()) {\n                throw new CompileEnvironmentException(\"'\" + source + \"' does not exist in module \" + module.getModuleName());\n            }\n\n            compilerConfiguration.add(CommonConfigurationKeys.SOURCE_ROOTS_KEY, source.getPath());\n        }\n\n        for (String classpathRoot : module.getClasspathRoots()) {\n            compilerConfiguration.add(JVMConfigurationKeys.CLASSPATH_KEY, new File(classpathRoot));\n        }\n\n        for (String annotationsRoot : module.getAnnotationsRoots()) {\n            compilerConfiguration.add(JVMConfigurationKeys.ANNOTATIONS_PATH_KEY, new File(annotationsRoot));\n        }\n\n        Disposable parentDisposable = CompileEnvironmentUtil.createMockDisposable();\n        JetCoreEnvironment moduleEnvironment = null;\n        try {\n            moduleEnvironment = new JetCoreEnvironment(parentDisposable, compilerConfiguration);\n\n\n            GenerationState generationState = analyzeAndGenerate(moduleEnvironment);\n            if (generationState == null) {\n                return null;\n            }\n            return generationState.getFactory();\n        } finally {\n            if (moduleEnvironment != null) {\n                Disposer.dispose(parentDisposable);\n            }\n        }\n    }","id":48170,"modified_method":"@Nullable\n    public static ClassFileFactory compileModule(CompilerConfiguration configuration, Module module, File directory) {\n        List<String> sourceFiles = module.getSourceFiles();\n        if (sourceFiles.isEmpty()) {\n            throw new CompileEnvironmentException(\"No source files where defined in module \" + module.getModuleName());\n        }\n\n        CompilerConfiguration compilerConfiguration = configuration.copy();\n        for (String sourceFile : sourceFiles) {\n            File source = new File(sourceFile);\n            if (!source.isAbsolute()) {\n                source = new File(directory, sourceFile);\n            }\n\n            if (!source.exists()) {\n                throw new CompileEnvironmentException(\"'\" + source + \"' does not exist in module \" + module.getModuleName());\n            }\n\n            compilerConfiguration.add(CommonConfigurationKeys.SOURCE_ROOTS_KEY, source.getPath());\n        }\n\n        for (String classpathRoot : module.getClasspathRoots()) {\n            compilerConfiguration.add(JVMConfigurationKeys.CLASSPATH_KEY, new File(classpathRoot));\n        }\n\n        for (String annotationsRoot : module.getAnnotationsRoots()) {\n            compilerConfiguration.add(JVMConfigurationKeys.ANNOTATIONS_PATH_KEY, new File(annotationsRoot));\n        }\n\n        Disposable parentDisposable = CompileEnvironmentUtil.createMockDisposable();\n        JetCoreEnvironment moduleEnvironment = null;\n        try {\n            moduleEnvironment = new JetCoreEnvironment(parentDisposable, compilerConfiguration);\n\n\n            GenerationState generationState = analyzeAndGenerate(moduleEnvironment);\n            if (generationState == null) {\n                return null;\n            }\n            return generationState.getFactory();\n        } finally {\n            if (moduleEnvironment != null) {\n                Disposer.dispose(parentDisposable);\n            }\n        }\n    }","commit_id":"d5b08d4f1c43a01fd2715d0fa18507d085978701","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public static boolean compileModules(\n            CompilerConfiguration configuration,\n            @NotNull final ModuleChunk modules,\n            @NotNull File directory,\n            @Nullable File jarPath,\n            boolean jarRuntime\n    ) {\n        for (Module module : modules.getModules()) {\n            ClassFileFactory moduleFactory = compileModule(configuration, module, directory);\n            if (moduleFactory == null) {\n                return false;\n            }\n            CompileEnvironmentUtil.OutputDirector outputDir = new CompileEnvironmentUtil.OutputDirector() {\n                @NotNull\n                @Override\n                public File getOutputDirectory(@NotNull Collection<File> sourceFiles) {\n                    for (File sourceFile : sourceFiles) {\n                        Module module = modules.findModuleBySourceFile(sourceFile);\n                        if (module != null) {\n                            return new File(module.getOutputDirectory());\n                        }\n                    }\n                    throw new IllegalStateException(\"No module found for source files: \" + sourceFiles);\n                }\n            };\n\n            writeOutput(configuration, moduleFactory, outputDir, jarPath, jarRuntime, null);\n        }\n        return true;\n    }","id":48171,"modified_method":"public static boolean compileModules(\n            CompilerConfiguration configuration,\n            @NotNull final ModuleChunk chunk,\n            @NotNull File directory,\n            @Nullable File jarPath,\n            boolean jarRuntime\n    ) {\n        List<Module> modules = chunk.getModules();\n        if (COMPILE_CHUNK_AS_ONE_MODULE && modules.size() > 1) {\n            modules = Collections.<Module>singletonList(new ChunkAsOneModule(chunk));\n        }\n        for (Module module : modules) {\n            ClassFileFactory moduleFactory = compileModule(configuration, module, directory);\n            if (moduleFactory == null) {\n                return false;\n            }\n            CompileEnvironmentUtil.OutputDirector outputDir = new CompileEnvironmentUtil.OutputDirector() {\n                @NotNull\n                @Override\n                public File getOutputDirectory(@NotNull Collection<File> sourceFiles) {\n                    for (File sourceFile : sourceFiles) {\n                        // Note that here we track original modules:\n                        Module module = chunk.findModuleBySourceFile(sourceFile);\n                        if (module != null) {\n                            return new File(module.getOutputDirectory());\n                        }\n                    }\n                    throw new IllegalStateException(\"No module found for source files: \" + sourceFiles);\n                }\n            };\n\n            writeOutput(configuration, moduleFactory, outputDir, jarPath, jarRuntime, null);\n        }\n        return true;\n    }","commit_id":"d5b08d4f1c43a01fd2715d0fa18507d085978701","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public static List<UISample> getOtherSamples() {\n        ExtensionList<UISample> list = Jenkins.getInstance().getExtensionList(UISample.class);\n        List<UISample> r = new ArrayList<UISample>();\n        OUTER:\n        for (Iterator<UISample> ite = list.iterator(); ite.hasNext(); ) {\n            UISample uiSample = ite.next();\n            List<SourceFile> sourceFiles = uiSample.getSourceFiles();\n            for (Iterator<SourceFile> srcFileITe = sourceFiles.iterator(); srcFileITe.hasNext(); ) {\n                SourceFile src = (SourceFile) srcFileITe.next();\n                if (src.name.contains(\"groovy\")) {\n                    r.add(uiSample);\n                    continue OUTER;\n                }\n            }\n        }\n        return r;\n    }","id":48172,"modified_method":"public static List<UISample> getOtherSamples() {\n        List<UISample> r = new ArrayList<UISample>();\n        OUTER:\n        for (UISample uiSample : UISample.all()) {\n            for (SourceFile src : uiSample.getSourceFiles()) {\n                if (src.name.contains(\"groovy\")) {\n                    r.add(uiSample);\n                    continue OUTER;\n                }\n            }\n        }\n        return r;\n    }","commit_id":"c137de3bf828ba5e1a44a77e96e4e8e07ee9b890","url":"https://github.com/kohsuke/hudson"},{"original_method":"public static List<UISample> getGroovySamples() {\n        ExtensionList<UISample> list = Jenkins.getInstance().getExtensionList(UISample.class);\n        List<UISample> r = new ArrayList<UISample>();\n        for (Iterator<UISample> ite = list.iterator(); ite.hasNext(); ) {\n            UISample uiSample = ite.next();\n            List<SourceFile> sourceFiles = uiSample.getSourceFiles();\n            for (Iterator<SourceFile> srcFileITe = sourceFiles.iterator(); srcFileITe.hasNext(); ) {\n                SourceFile src = (SourceFile) srcFileITe.next();\n                if (src.name.contains(\"groovy\")) {\n                    r.add(uiSample);\n                    break;\n                }\n            }\n        }\n        return r;\n    }","id":48173,"modified_method":"public static List<UISample> getGroovySamples() {\n        List<UISample> r = new ArrayList<UISample>();\n        for (UISample uiSample : UISample.all()) {\n            for (SourceFile src : uiSample.getSourceFiles()) {\n                if (src.name.contains(\"groovy\")) {\n                    r.add(uiSample);\n                    break;\n                }\n            }\n        }\n        return r;\n    }","commit_id":"c137de3bf828ba5e1a44a77e96e4e8e07ee9b890","url":"https://github.com/kohsuke/hudson"},{"original_method":"public String getDescription() {\n        StringBuilder builder = new StringBuilder();\n        builder.append(GUtil.toWords(typeString));\n        builder.append(\" '\");\n        builder.append(parentName);\n        for (String dimension : dimensions) {\n            builder.append(':');\n            builder.append(dimension);\n        }\n        builder.append(':');\n        appendUncapitalized(builder, typeString);\n        builder.append(\"'\");\n        return builder.toString();\n    }","id":48174,"modified_method":"public String getDescription() {\n        StringBuilder builder = new StringBuilder();\n        builder.append(GUtil.toWords(roleName));\n        builder.append(\" '\");\n        builder.append(parentName);\n        for (String dimension : dimensions) {\n            builder.append(':');\n            builder.append(dimension);\n        }\n        builder.append(':');\n        appendUncapitalized(builder, roleName);\n        builder.append(\"'\");\n        return builder.toString();\n    }","commit_id":"e74c4cfbb42531b8732eeec2cab1c127a8782431","url":"https://github.com/gradle/gradle"},{"original_method":"public DefaultBinaryNamingScheme(String parentName, String typeString, List<String> dimensions) {\n        this.parentName = parentName;\n        this.typeString = typeString;\n        this.dimensions = dimensions;\n        this.dimensionPrefix = createPrefix(dimensions);\n    }","id":48175,"modified_method":"public DefaultBinaryNamingScheme(String parentName, String roleName, List<String> dimensions) {\n        this.parentName = parentName;\n        this.roleName = roleName;\n        this.dimensions = dimensions;\n        this.dimensionPrefix = createPrefix(dimensions);\n    }","commit_id":"e74c4cfbb42531b8732eeec2cab1c127a8782431","url":"https://github.com/gradle/gradle"},{"original_method":"public String getTaskName(@Nullable String verb, @Nullable String target) {\n        return makeName(verb, dimensionPrefix, parentName, typeString, target);\n    }","id":48176,"modified_method":"public String getTaskName(@Nullable String verb, @Nullable String target) {\n        return makeName(verb, dimensionPrefix, parentName, roleName, target);\n    }","commit_id":"e74c4cfbb42531b8732eeec2cab1c127a8782431","url":"https://github.com/gradle/gradle"},{"original_method":"public String getBinaryName() {\n        return makeName(dimensionPrefix, typeString);\n    }","id":48177,"modified_method":"public String getBinaryName() {\n        return makeName(dimensionPrefix, roleName);\n    }","commit_id":"e74c4cfbb42531b8732eeec2cab1c127a8782431","url":"https://github.com/gradle/gradle"},{"original_method":"public String getOutputDirectoryBase() {\n        StringBuilder builder = new StringBuilder(makeName(parentName, typeString));\n        if (dimensionPrefix.length() > 0) {\n            builder.append('/');\n            builder.append(dimensionPrefix);\n        }\n        return builder.toString();\n    }","id":48178,"modified_method":"public String getOutputDirectoryBase() {\n        StringBuilder builder = new StringBuilder(makeName(parentName, roleName));\n        if (dimensionPrefix.length() > 0) {\n            builder.append('/');\n            builder.append(dimensionPrefix);\n        }\n        return builder.toString();\n    }","commit_id":"e74c4cfbb42531b8732eeec2cab1c127a8782431","url":"https://github.com/gradle/gradle"},{"original_method":"@ComponentBinaries\n        public void createBinaries(ModelMap<JarBinarySpec> binaries, BinaryNamingSchemeBuilder namingSchemeBuilder,\n                                   PlatformResolvers platforms, final JvmLibrarySpecInternal jvmLibrary) {\n            List<JavaPlatform> selectedPlatforms = resolvePlatforms(platforms, jvmLibrary);\n            final Set<String> exportedPackages = exportedPackagesOf(jvmLibrary);\n            final Collection<DependencySpec> apiDependencies = apiDependenciesOf(jvmLibrary);\n            final Collection<DependencySpec> dependencies = componentDependenciesOf(jvmLibrary);\n            for (final JavaPlatform platform : selectedPlatforms) {\n                String binaryName = buildBinaryName(jvmLibrary, namingSchemeBuilder, selectedPlatforms, platform);\n                binaries.create(binaryName, new Action<JarBinarySpec>() {\n                    @Override\n                    public void execute(JarBinarySpec jarBinarySpec) {\n                        JarBinarySpecInternal jarBinary = (JarBinarySpecInternal) jarBinarySpec;\n                        jarBinary.setTargetPlatform(platform);\n                        jarBinary.setExportedPackages(exportedPackages);\n                        jarBinary.setApiDependencies(apiDependencies);\n                        jarBinary.setDependencies(dependencies);\n                    }\n                });\n            }\n        }","id":48179,"modified_method":"@ComponentBinaries\n        public void createBinaries(ModelMap<JarBinarySpec> binaries, PlatformResolvers platforms, final JvmLibrarySpecInternal jvmLibrary) {\n            List<JavaPlatform> selectedPlatforms = resolvePlatforms(platforms, jvmLibrary);\n            final Set<String> exportedPackages = exportedPackagesOf(jvmLibrary);\n            final Collection<DependencySpec> apiDependencies = apiDependenciesOf(jvmLibrary);\n            final Collection<DependencySpec> dependencies = componentDependenciesOf(jvmLibrary);\n            for (final JavaPlatform platform : selectedPlatforms) {\n                String binaryName = buildBinaryName(jvmLibrary, selectedPlatforms, platform);\n                binaries.create(binaryName, new Action<JarBinarySpec>() {\n                    @Override\n                    public void execute(JarBinarySpec jarBinarySpec) {\n                        JarBinarySpecInternal jarBinary = (JarBinarySpecInternal) jarBinarySpec;\n                        jarBinary.setTargetPlatform(platform);\n                        jarBinary.setExportedPackages(exportedPackages);\n                        jarBinary.setApiDependencies(apiDependencies);\n                        jarBinary.setDependencies(dependencies);\n                    }\n                });\n            }\n        }","commit_id":"e74c4cfbb42531b8732eeec2cab1c127a8782431","url":"https://github.com/gradle/gradle"},{"original_method":"private String buildBinaryName(JvmLibrarySpec jvmLibrary, BinaryNamingSchemeBuilder namingSchemeBuilder,\n                                       List<JavaPlatform> selectedPlatforms, JavaPlatform platform) {\n            BinaryNamingSchemeBuilder componentBuilder = namingSchemeBuilder\n                .withComponentName(jvmLibrary.getName())\n                .withTypeString(\"jar\");\n            if (selectedPlatforms.size() > 1) {\n                componentBuilder = componentBuilder.withVariantDimension(platform.getName());\n            }\n            return componentBuilder.build().getBinaryName();\n        }","id":48180,"modified_method":"private String buildBinaryName(JvmLibrarySpec jvmLibrary, List<JavaPlatform> selectedPlatforms, JavaPlatform platform) {\n            BinaryNamingScheme namingScheme = DefaultBinaryNamingScheme.component(jvmLibrary.getName()).withRole(\"jar\");\n            if (selectedPlatforms.size() > 1) {\n                namingScheme = namingScheme.withVariantDimension(platform.getName());\n            }\n            return namingScheme.getBinaryName();\n        }","commit_id":"e74c4cfbb42531b8732eeec2cab1c127a8782431","url":"https://github.com/gradle/gradle"},{"original_method":"public static void createNativeBinaries(\n        NativeComponentSpec component,\n        ModelMap<NativeBinarySpec> binaries,\n        NativeDependencyResolver resolver,\n        BinaryNamingSchemeBuilder namingScheme,\n        NativePlatform platform,\n        BuildType buildType,\n        Flavor flavor\n    ) {\n        if (component instanceof NativeLibrarySpec) {\n            createNativeBinary(SharedLibraryBinarySpec.class, binaries, resolver, namingScheme.withTypeString(\"SharedLibrary\").build(), platform, buildType, flavor);\n            createNativeBinary(StaticLibraryBinarySpec.class, binaries, resolver, namingScheme.withTypeString(\"StaticLibrary\").build(), platform, buildType, flavor);\n        } else {\n            createNativeBinary(NativeExecutableBinarySpec.class, binaries, resolver, namingScheme.withTypeString(\"Executable\").build(), platform, buildType, flavor);\n        }\n    }","id":48181,"modified_method":"public static void createNativeBinaries(\n        NativeComponentSpec component,\n        ModelMap<NativeBinarySpec> binaries,\n        NativeDependencyResolver resolver,\n        BinaryNamingScheme namingScheme,\n        NativePlatform platform,\n        BuildType buildType,\n        Flavor flavor\n    ) {\n        if (component instanceof NativeLibrarySpec) {\n            createNativeBinary(SharedLibraryBinarySpec.class, binaries, resolver, namingScheme.withRole(\"SharedLibrary\"), platform, buildType, flavor);\n            createNativeBinary(StaticLibraryBinarySpec.class, binaries, resolver, namingScheme.withRole(\"StaticLibrary\"), platform, buildType, flavor);\n        } else {\n            createNativeBinary(NativeExecutableBinarySpec.class, binaries, resolver, namingScheme.withRole(\"Executable\"), platform, buildType, flavor);\n        }\n    }","commit_id":"e74c4cfbb42531b8732eeec2cab1c127a8782431","url":"https://github.com/gradle/gradle"},{"original_method":"private static void executeForEachFlavor(\n        NativeComponentSpec projectNativeComponent,\n        NativePlatform platform,\n        BuildType buildType,\n        BinaryNamingSchemeBuilder buildTypedNameBuilder,\n        Set<? extends Flavor> allFlavors,\n        NativeDependencyResolver nativeDependencyResolver\n    ) {\n        Set<Flavor> targetFlavors = ((TargetedNativeComponentInternal) projectNativeComponent).chooseFlavors(allFlavors);\n        for (Flavor flavor : targetFlavors) {\n            BinaryNamingSchemeBuilder flavoredNameBuilder = maybeAddDimension(buildTypedNameBuilder, targetFlavors, flavor.getName());\n            NativeBinaries.createNativeBinaries(\n                projectNativeComponent,\n                projectNativeComponent.getBinaries().withType(NativeBinarySpec.class),\n                nativeDependencyResolver,\n                flavoredNameBuilder,\n                platform,\n                buildType,\n                flavor\n            );\n        }\n    }","id":48182,"modified_method":"private static void executeForEachFlavor(\n        NativeComponentSpec projectNativeComponent,\n        NativePlatform platform,\n        BuildType buildType,\n        BinaryNamingScheme namingScheme,\n        Set<? extends Flavor> allFlavors,\n        NativeDependencyResolver nativeDependencyResolver\n    ) {\n        Set<Flavor> targetFlavors = ((TargetedNativeComponentInternal) projectNativeComponent).chooseFlavors(allFlavors);\n        for (Flavor flavor : targetFlavors) {\n            BinaryNamingScheme namingSchemeWithFlavor = maybeAddDimension(namingScheme, targetFlavors, flavor.getName());\n            NativeBinaries.createNativeBinaries(\n                projectNativeComponent,\n                projectNativeComponent.getBinaries().withType(NativeBinarySpec.class),\n                nativeDependencyResolver,\n                namingSchemeWithFlavor,\n                platform,\n                buildType,\n                flavor\n            );\n        }\n    }","commit_id":"e74c4cfbb42531b8732eeec2cab1c127a8782431","url":"https://github.com/gradle/gradle"},{"original_method":"static void createBinariesImpl(\n        NativeComponentSpec nativeComponent,\n        PlatformResolvers platforms,\n        Set<? extends BuildType> buildTypes,\n        Set<? extends Flavor> flavors,\n        NativePlatforms nativePlatforms,\n        NativeDependencyResolver nativeDependencyResolver,\n        BinaryNamingSchemeBuilder namingSchemeBuilder\n    ) {\n        if (!(nativeComponent instanceof TargetedNativeComponentInternal)) {\n            return;\n        }\n        TargetedNativeComponentInternal targetedComponent = (TargetedNativeComponentInternal) nativeComponent;\n        List<NativePlatform> resolvedPlatforms = resolvePlatforms(targetedComponent, nativePlatforms, platforms);\n\n        for (NativePlatform platform : resolvedPlatforms) {\n            BinaryNamingSchemeBuilder builder = namingSchemeBuilder.withComponentName(nativeComponent.getName());\n            builder = maybeAddDimension(builder, resolvedPlatforms, platform.getName());\n            executeForEachBuildType(\n                nativeComponent,\n                (NativePlatformInternal) platform,\n                builder,\n                buildTypes,\n                flavors,\n                nativeDependencyResolver\n            );\n        }\n    }","id":48183,"modified_method":"static void createBinariesImpl(\n        NativeComponentSpec nativeComponent,\n        PlatformResolvers platforms,\n        Set<? extends BuildType> buildTypes,\n        Set<? extends Flavor> flavors,\n        NativePlatforms nativePlatforms,\n        NativeDependencyResolver nativeDependencyResolver\n    ) {\n        if (!(nativeComponent instanceof TargetedNativeComponentInternal)) {\n            return;\n        }\n        TargetedNativeComponentInternal targetedComponent = (TargetedNativeComponentInternal) nativeComponent;\n        List<NativePlatform> resolvedPlatforms = resolvePlatforms(targetedComponent, nativePlatforms, platforms);\n\n        for (NativePlatform platform : resolvedPlatforms) {\n            BinaryNamingScheme namingScheme = DefaultBinaryNamingScheme.component(nativeComponent.getName());\n            namingScheme = maybeAddDimension(namingScheme, resolvedPlatforms, platform.getName());\n            executeForEachBuildType(\n                nativeComponent,\n                (NativePlatformInternal) platform,\n                namingScheme,\n                buildTypes,\n                flavors,\n                nativeDependencyResolver\n            );\n        }\n    }","commit_id":"e74c4cfbb42531b8732eeec2cab1c127a8782431","url":"https://github.com/gradle/gradle"},{"original_method":"private static void executeForEachBuildType(\n        NativeComponentSpec projectNativeComponent,\n        NativePlatformInternal platform,\n        BinaryNamingSchemeBuilder builder,\n        Set<? extends BuildType> allBuildTypes,\n        Set<? extends Flavor> allFlavors,\n        NativeDependencyResolver nativeDependencyResolver\n    ) {\n        Set<BuildType> targetBuildTypes = ((TargetedNativeComponentInternal) projectNativeComponent).chooseBuildTypes(allBuildTypes);\n        for (BuildType buildType : targetBuildTypes) {\n            BinaryNamingSchemeBuilder nameBuilder = maybeAddDimension(builder, targetBuildTypes, buildType.getName());\n            executeForEachFlavor(\n                projectNativeComponent,\n                platform,\n                buildType,\n                nameBuilder,\n                allFlavors,\n                nativeDependencyResolver\n            );\n        }\n    }","id":48184,"modified_method":"private static void executeForEachBuildType(\n        NativeComponentSpec projectNativeComponent,\n        NativePlatformInternal platform,\n        BinaryNamingScheme namingScheme,\n        Set<? extends BuildType> allBuildTypes,\n        Set<? extends Flavor> allFlavors,\n        NativeDependencyResolver nativeDependencyResolver\n    ) {\n        Set<BuildType> targetBuildTypes = ((TargetedNativeComponentInternal) projectNativeComponent).chooseBuildTypes(allBuildTypes);\n        for (BuildType buildType : targetBuildTypes) {\n            BinaryNamingScheme namingSchemeWithBuildType = maybeAddDimension(namingScheme, targetBuildTypes, buildType.getName());\n            executeForEachFlavor(\n                projectNativeComponent,\n                platform,\n                buildType,\n                namingSchemeWithBuildType,\n                allFlavors,\n                nativeDependencyResolver\n            );\n        }\n    }","commit_id":"e74c4cfbb42531b8732eeec2cab1c127a8782431","url":"https://github.com/gradle/gradle"},{"original_method":"@Finalize\n    public static void createBinaries(\n        NativeComponentSpec nativeComponent,\n        PlatformResolvers platforms,\n        BuildTypeContainer buildTypes,\n        FlavorContainer flavors,\n        ServiceRegistry serviceRegistry\n    ) {\n        final NativePlatforms nativePlatforms = serviceRegistry.get(NativePlatforms.class);\n        final NativeDependencyResolver nativeDependencyResolver = serviceRegistry.get(NativeDependencyResolver.class);\n\n        createBinariesImpl(nativeComponent, platforms, buildTypes, flavors, nativePlatforms, nativeDependencyResolver, new DefaultBinaryNamingSchemeBuilder());\n    }","id":48185,"modified_method":"@Finalize\n    public static void createBinaries(\n        NativeComponentSpec nativeComponent,\n        PlatformResolvers platforms,\n        BuildTypeContainer buildTypes,\n        FlavorContainer flavors,\n        ServiceRegistry serviceRegistry\n    ) {\n        final NativePlatforms nativePlatforms = serviceRegistry.get(NativePlatforms.class);\n        final NativeDependencyResolver nativeDependencyResolver = serviceRegistry.get(NativeDependencyResolver.class);\n\n        createBinariesImpl(nativeComponent, platforms, buildTypes, flavors, nativePlatforms, nativeDependencyResolver);\n    }","commit_id":"e74c4cfbb42531b8732eeec2cab1c127a8782431","url":"https://github.com/gradle/gradle"},{"original_method":"private static BinaryNamingSchemeBuilder maybeAddDimension(BinaryNamingSchemeBuilder builder, Collection<?> variations, String name) {\n        if (variations.size() > 1) {\n            builder = builder.withVariantDimension(name);\n        }\n        return builder;\n    }","id":48186,"modified_method":"private static BinaryNamingScheme maybeAddDimension(BinaryNamingScheme builder, Collection<?> variations, String name) {\n        if (variations.size() > 1) {\n            builder = builder.withVariantDimension(name);\n        }\n        return builder;\n    }","commit_id":"e74c4cfbb42531b8732eeec2cab1c127a8782431","url":"https://github.com/gradle/gradle"},{"original_method":"public static void createNativeTestSuiteBinary(NativeTestSuiteSpec testSuite,\n                                                   Class<? extends NativeTestSuiteBinarySpec> testSuiteBinaryClass,\n                                                   String typeString, final NativeBinarySpec testedBinary,\n                                                   final File buildDir, ServiceRegistry serviceRegistry) {\n\n        final BinaryNamingScheme namingScheme = namingSchemeFor(testSuite, (NativeBinarySpecInternal) testedBinary, typeString);\n        final NativeDependencyResolver resolver = serviceRegistry.get(NativeDependencyResolver.class);\n\n        testSuite.getBinaries().create(namingScheme.getBinaryName(), testSuiteBinaryClass, new Action<NativeTestSuiteBinarySpec>() {\n            @Override\n            public void execute(NativeTestSuiteBinarySpec binary) {\n                NativeTestSuiteBinarySpecInternal testBinary = (NativeTestSuiteBinarySpecInternal) binary;\n                testBinary.setTestedBinary((NativeBinarySpecInternal) testedBinary);\n                testBinary.setNamingScheme(namingScheme);\n                testBinary.setResolver(resolver);\n                testBinary.setToolChain(testedBinary.getToolChain());\n                testBinary.getExecutable().setToolChain(testedBinary.getToolChain());\n                testBinary.getExecutable().setFile(executableFileFor(testBinary, buildDir, namingScheme));\n                testBinary.getInstallation().setDirectory(installDir(buildDir, namingScheme));\n            }\n        });\n    }","id":48187,"modified_method":"private static void createNativeTestSuiteBinary(NativeTestSuiteSpec testSuite,\n                                                   Class<? extends NativeTestSuiteBinarySpec> testSuiteBinaryClass,\n                                                   String typeString, final NativeBinarySpec testedBinary,\n                                                   final File buildDir, ServiceRegistry serviceRegistry) {\n\n        final BinaryNamingScheme namingScheme = namingSchemeFor(testSuite, (NativeBinarySpecInternal) testedBinary, typeString);\n        final NativeDependencyResolver resolver = serviceRegistry.get(NativeDependencyResolver.class);\n\n        testSuite.getBinaries().create(namingScheme.getBinaryName(), testSuiteBinaryClass, new Action<NativeTestSuiteBinarySpec>() {\n            @Override\n            public void execute(NativeTestSuiteBinarySpec binary) {\n                NativeTestSuiteBinarySpecInternal testBinary = (NativeTestSuiteBinarySpecInternal) binary;\n                testBinary.setTestedBinary((NativeBinarySpecInternal) testedBinary);\n                testBinary.setNamingScheme(namingScheme);\n                testBinary.setResolver(resolver);\n                testBinary.setToolChain(testedBinary.getToolChain());\n                testBinary.getExecutable().setToolChain(testedBinary.getToolChain());\n                testBinary.getExecutable().setFile(executableFileFor(testBinary, buildDir, namingScheme));\n                testBinary.getInstallation().setDirectory(installDir(buildDir, namingScheme));\n            }\n        });\n    }","commit_id":"e74c4cfbb42531b8732eeec2cab1c127a8782431","url":"https://github.com/gradle/gradle"},{"original_method":"private static BinaryNamingScheme namingSchemeFor(NativeTestSuiteSpec testSuite, NativeBinarySpecInternal testedBinary, String typeString) {\n        return new DefaultBinaryNamingSchemeBuilder(testedBinary.getNamingScheme())\n            .withComponentName(testSuite.getBaseName())\n            .withTypeString(typeString)\n            .build();\n    }","id":48188,"modified_method":"private static BinaryNamingScheme namingSchemeFor(NativeTestSuiteSpec testSuite, NativeBinarySpecInternal testedBinary, String typeString) {\n        return testedBinary.getNamingScheme()\n            .withComponentName(testSuite.getBaseName())\n            .withRole(typeString);\n    }","commit_id":"e74c4cfbb42531b8732eeec2cab1c127a8782431","url":"https://github.com/gradle/gradle"},{"original_method":"private <T extends NativeLibraryBinary> String getName(Class<T> type, PrebuiltLibrary library, NativePlatform platform, BuildType buildType, Flavor flavor) {\n        BinaryNamingSchemeBuilder namingScheme = new DefaultBinaryNamingSchemeBuilder()\n                .withComponentName(library.getName())\n                .withTypeString(type.getSimpleName())\n                .withVariantDimension(platform.getName())\n                .withVariantDimension(buildType.getName())\n                .withVariantDimension(flavor.getName());\n        return namingScheme.build().getBinaryName();\n    }","id":48189,"modified_method":"private <T extends NativeLibraryBinary> String getName(Class<T> type, PrebuiltLibrary library, NativePlatform platform, BuildType buildType, Flavor flavor) {\n        BinaryNamingScheme namingScheme = DefaultBinaryNamingScheme.component(library.getName())\n                .withRole(type.getSimpleName())\n                .withVariantDimension(platform.getName())\n                .withVariantDimension(buildType.getName())\n                .withVariantDimension(flavor.getName());\n        return namingScheme.getBinaryName();\n    }","commit_id":"e74c4cfbb42531b8732eeec2cab1c127a8782431","url":"https://github.com/gradle/gradle"},{"original_method":"private static void download(@Nullable final ProgressIndicator progress,\n                               @NotNull String location,\n                               @NotNull final OutputStream output) throws IOException {\n    final String originalText = progress != null ? progress.getText() : null;\n    substituteContentLength(progress, originalText, -1);\n    if (progress != null) {\n      progress.setText2(\"Downloading \" + location);\n    }\n\n    try {\n      HttpRequests.request(location)\n        .productNameAsUserAgent()\n        .connect(new HttpRequests.RequestProcessor<Object>() {\n          @Override\n          public Object process(@NotNull HttpRequests.Request request) throws IOException {\n            try {\n              int contentLength = request.getConnection().getContentLength();\n              substituteContentLength(progress, originalText, contentLength);\n              NetUtils.copyStreamContent(progress, request.getInputStream(), output, contentLength);\n            }\n            catch (IOException e) {\n              throw new IOException(HttpRequests.createErrorMessage(e, request), e);\n            }\n            return null;\n          }\n        });\n    }\n    catch (IOException e) {\n      throw new IOException(\"Cannot download \" + location, e);\n    }\n  }","id":48190,"modified_method":"private static void download(@Nullable final ProgressIndicator progress,\n                               @NotNull String location,\n                               @NotNull final OutputStream output) throws IOException {\n    final String originalText = progress != null ? progress.getText() : null;\n    substituteContentLength(progress, originalText, -1);\n    if (progress != null) {\n      progress.setText2(\"Downloading \" + location);\n    }\n\n    try {\n      HttpRequests.request(location)\n        .productNameAsUserAgent()\n        .connect(new HttpRequests.RequestProcessor<Object>() {\n          @Override\n          public Object process(@NotNull HttpRequests.Request request) throws IOException {\n            try {\n              int contentLength = request.getConnection().getContentLength();\n              substituteContentLength(progress, originalText, contentLength);\n              NetUtils.copyStreamContent(progress, request.getInputStream(), output, contentLength);\n            }\n            catch (IOException e) {\n              throw new IOException(HttpRequests.createErrorMessage(e, request, true), e);\n            }\n            return null;\n          }\n        });\n    }\n    catch (IOException e) {\n      throw new IOException(\"Cannot download \" + location, e);\n    }\n  }","commit_id":"3ea48786a6c8f02e0cf3c1f37a9762835f4fed30","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public static String createErrorMessage(@NotNull IOException e, @NotNull Request request) throws IOException {\n    URLConnection connection = request.getConnection();\n    String errorMessage = \"Cannot download '\" + connection.getURL().toExternalForm() + \"': \" + e.getMessage() + \"\\n, headers: \" + connection.getHeaderFields();\n    if (connection instanceof HttpURLConnection) {\n      HttpURLConnection httpConnection = (HttpURLConnection)connection;\n      errorMessage += \"\\n, response: \" + httpConnection.getResponseCode() + ' ' + httpConnection.getResponseMessage();\n    }\n    return errorMessage;\n  }","id":48191,"modified_method":"@NotNull\n  public static String createErrorMessage(@NotNull IOException e, @NotNull Request request, boolean includeHeaders) throws IOException {\n    URLConnection connection = request.getConnection();\n    StringBuilder builder = new StringBuilder();\n    builder.append(\"Cannot download '\").append(connection.getURL().toExternalForm()).append(\"': \").append(e.getMessage());\n    if (includeHeaders) {\n      builder.append(\"\\n, headers: \").append(connection.getHeaderFields());\n    }\n    if (connection instanceof HttpURLConnection) {\n      HttpURLConnection httpConnection = (HttpURLConnection)connection;\n      builder.append(\"\\n, response: \").append(httpConnection.getResponseCode()).append(' ').append(httpConnection.getResponseMessage());\n    }\n    return builder.toString();\n  }","commit_id":"3ea48786a6c8f02e0cf3c1f37a9762835f4fed30","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"static <T> T process(final RequestBuilder builder, RequestProcessor<T> processor) throws IOException {\n    class RequestImpl implements Request {\n      private URLConnection myConnection;\n      private InputStream myInputStream;\n      private BufferedReader myReader;\n\n      @NotNull\n      @Override\n      public URLConnection getConnection() throws IOException {\n        if (myConnection == null) {\n          myConnection = openConnection(builder);\n        }\n        return myConnection;\n      }\n\n      @NotNull\n      @Override\n      public InputStream getInputStream() throws IOException {\n        if (myInputStream == null) {\n          myInputStream = getConnection().getInputStream();\n          if (builder.myGzip && \"gzip\".equalsIgnoreCase(getConnection().getContentEncoding())) {\n            //noinspection IOResourceOpenedButNotSafelyClosed\n            myInputStream = new GZIPInputStream(myInputStream);\n          }\n        }\n        return myInputStream;\n      }\n\n      @NotNull\n      @Override\n      public BufferedReader getReader() throws IOException {\n        return getReader(null);\n      }\n\n      @NotNull\n      @Override\n      public BufferedReader getReader(@Nullable ProgressIndicator indicator) throws IOException {\n        if (myReader == null) {\n          InputStream inputStream = getInputStream();\n          if (indicator != null) {\n            int contentLength = getConnection().getContentLength();\n            if (contentLength > 0) {\n              //noinspection IOResourceOpenedButNotSafelyClosed\n              inputStream = new ProgressMonitorInputStream(indicator, inputStream, contentLength);\n            }\n          }\n          myReader = new BufferedReader(new InputStreamReader(inputStream, getCharset(this)));\n        }\n        return myReader;\n      }\n\n      @Override\n      public boolean isSuccessful() throws IOException {\n        URLConnection connection = getConnection();\n        return !(connection instanceof HttpURLConnection) || ((HttpURLConnection)connection).getResponseCode() == 200;\n      }\n\n      private void cleanup() {\n        StreamUtil.closeStream(myInputStream);\n        StreamUtil.closeStream(myReader);\n        if (myConnection instanceof HttpURLConnection) {\n          ((HttpURLConnection)myConnection).disconnect();\n        }\n      }\n\n      @NotNull\n      public byte[] readBytes(@Nullable ProgressIndicator indicator) throws IOException {\n        int contentLength = getConnection().getContentLength();\n        BufferExposingByteArrayOutputStream out = new BufferExposingByteArrayOutputStream(contentLength > 0 ? contentLength : 32 * 1024);\n        NetUtils.copyStreamContent(indicator, getInputStream(), out, contentLength);\n        return ArrayUtil.realloc(out.getInternalBuffer(), out.size());\n      }\n\n      @NotNull\n      public File saveToFile(@NotNull File file, @Nullable ProgressIndicator indicator) throws IOException {\n        FileUtilRt.createParentDirs(file);\n\n        boolean deleteFile = true;\n        try {\n          OutputStream out = new FileOutputStream(file);\n          try {\n            NetUtils.copyStreamContent(indicator, getInputStream(), out, getConnection().getContentLength());\n            deleteFile = false;\n          }\n          catch (IOException e) {\n            throw new IOException(createErrorMessage(e, this), e);\n          }\n          finally {\n            out.close();\n          }\n        }\n        finally {\n          if (deleteFile) {\n            FileUtilRt.delete(file);\n          }\n        }\n\n        return file;\n      }\n    }\n\n    RequestImpl request = new RequestImpl();\n    try {\n      return processor.process(request);\n    }\n    finally {\n      request.cleanup();\n    }\n  }","id":48192,"modified_method":"static <T> T process(final RequestBuilder builder, RequestProcessor<T> processor) throws IOException {\n    class RequestImpl implements Request {\n      private URLConnection myConnection;\n      private InputStream myInputStream;\n      private BufferedReader myReader;\n\n      @NotNull\n      @Override\n      public URLConnection getConnection() throws IOException {\n        if (myConnection == null) {\n          myConnection = openConnection(builder);\n        }\n        return myConnection;\n      }\n\n      @NotNull\n      @Override\n      public InputStream getInputStream() throws IOException {\n        if (myInputStream == null) {\n          myInputStream = getConnection().getInputStream();\n          if (builder.myGzip && \"gzip\".equalsIgnoreCase(getConnection().getContentEncoding())) {\n            //noinspection IOResourceOpenedButNotSafelyClosed\n            myInputStream = new GZIPInputStream(myInputStream);\n          }\n        }\n        return myInputStream;\n      }\n\n      @NotNull\n      @Override\n      public BufferedReader getReader() throws IOException {\n        return getReader(null);\n      }\n\n      @NotNull\n      @Override\n      public BufferedReader getReader(@Nullable ProgressIndicator indicator) throws IOException {\n        if (myReader == null) {\n          InputStream inputStream = getInputStream();\n          if (indicator != null) {\n            int contentLength = getConnection().getContentLength();\n            if (contentLength > 0) {\n              //noinspection IOResourceOpenedButNotSafelyClosed\n              inputStream = new ProgressMonitorInputStream(indicator, inputStream, contentLength);\n            }\n          }\n          myReader = new BufferedReader(new InputStreamReader(inputStream, getCharset(this)));\n        }\n        return myReader;\n      }\n\n      @Override\n      public boolean isSuccessful() throws IOException {\n        URLConnection connection = getConnection();\n        return !(connection instanceof HttpURLConnection) || ((HttpURLConnection)connection).getResponseCode() == 200;\n      }\n\n      private void cleanup() {\n        StreamUtil.closeStream(myInputStream);\n        StreamUtil.closeStream(myReader);\n        if (myConnection instanceof HttpURLConnection) {\n          ((HttpURLConnection)myConnection).disconnect();\n        }\n      }\n\n      @NotNull\n      public byte[] readBytes(@Nullable ProgressIndicator indicator) throws IOException {\n        int contentLength = getConnection().getContentLength();\n        BufferExposingByteArrayOutputStream out = new BufferExposingByteArrayOutputStream(contentLength > 0 ? contentLength : 32 * 1024);\n        NetUtils.copyStreamContent(indicator, getInputStream(), out, contentLength);\n        return ArrayUtil.realloc(out.getInternalBuffer(), out.size());\n      }\n\n      @NotNull\n      public File saveToFile(@NotNull File file, @Nullable ProgressIndicator indicator) throws IOException {\n        FileUtilRt.createParentDirs(file);\n\n        boolean deleteFile = true;\n        try {\n          OutputStream out = new FileOutputStream(file);\n          try {\n            NetUtils.copyStreamContent(indicator, getInputStream(), out, getConnection().getContentLength());\n            deleteFile = false;\n          }\n          catch (IOException e) {\n            throw new IOException(createErrorMessage(e, this, false), e);\n          }\n          finally {\n            out.close();\n          }\n        }\n        finally {\n          if (deleteFile) {\n            FileUtilRt.delete(file);\n          }\n        }\n\n        return file;\n      }\n    }\n\n    RequestImpl request = new RequestImpl();\n    try {\n      return processor.process(request);\n    }\n    finally {\n      request.cleanup();\n    }\n  }","commit_id":"3ea48786a6c8f02e0cf3c1f37a9762835f4fed30","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Test\n\tpublic void testPortalAuthenticationToken() throws Exception {\n\t\ttestPortlet = new TestPortlet() {\n\n\t\t\t@Override\n\t\t\tpublic void serveResource(\n\t\t\t\t\tResourceRequest resourceRequest,\n\t\t\t\t\tResourceResponse resourceResponse)\n\t\t\t\tthrows IOException {\n\n\t\t\t\tPrintWriter printWriter = resourceResponse.getWriter();\n\n\t\t\t\tPortletURL portletURL = resourceResponse.createActionURL();\n\n\t\t\t\tString queryString = HttpUtil.getQueryString(\n\t\t\t\t\tportletURL.toString());\n\n\t\t\t\tMap<String, String[]> parameterMap = HttpUtil.getParameterMap(\n\t\t\t\t\tqueryString);\n\n\t\t\t\tString portalAuthenticationToken = MapUtil.getString(\n\t\t\t\t\tparameterMap, \"p_auth\");\n\n\t\t\t\tprintWriter.write(portalAuthenticationToken);\n\t\t\t}\n\n\t\t};\n\n\t\tsetUpPortlet(\n\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\tTEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletContainerTestUtil.PortalAuthentication portalAuthentication =\n\t\t\tPortletContainerTestUtil.getPortalAuthentication(\n\t\t\t\thttpServletRequest, layout, TEST_PORTLET_ID);\n\n\t\ttestPortlet.reset();\n\n\t\t// Make an action request using the portal authentication token\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\tString url = portletURL.toString();\n\n\t\turl = HttpUtil.setParameter(\n\t\t\turl, \"p_auth\", portalAuthentication.getPortalAuthenticationToken());\n\n\t\tMap<String, List<String>> headers = new HashMap<>();\n\n\t\theaders.put(\"Cookie\", portalAuthentication.getCookies());\n\n\t\tMap<String, List<String>> responseMap =\n\t\t\tPortletContainerTestUtil.request(url, headers);\n\n\t\tAssert.assertEquals(\n\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\tAssert.assertTrue(testPortlet.isActionCalled());\n\t}","id":48193,"modified_method":"@Test\n\tpublic void testPortalAuthenticationToken() throws Exception {\n\t\ttestPortlet = new TestPortlet() {\n\n\t\t\t@Override\n\t\t\tpublic void serveResource(\n\t\t\t\t\tResourceRequest resourceRequest,\n\t\t\t\t\tResourceResponse resourceResponse)\n\t\t\t\tthrows IOException {\n\n\t\t\t\tPrintWriter printWriter = resourceResponse.getWriter();\n\n\t\t\t\tPortletURL portletURL = resourceResponse.createActionURL();\n\n\t\t\t\tString queryString = HttpUtil.getQueryString(\n\t\t\t\t\tportletURL.toString());\n\n\t\t\t\tMap<String, String[]> parameterMap = HttpUtil.getParameterMap(\n\t\t\t\t\tqueryString);\n\n\t\t\t\tString portalAuthenticationToken = MapUtil.getString(\n\t\t\t\t\tparameterMap, \"p_auth\");\n\n\t\t\t\tprintWriter.write(portalAuthenticationToken);\n\t\t\t}\n\n\t\t};\n\n\t\tsetUpPortlet(\n\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\tTEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tResponse response = PortletContainerTestUtil.getPortalAuthentication(\n\t\t\thttpServletRequest, layout, TEST_PORTLET_ID);\n\n\t\ttestPortlet.reset();\n\n\t\t// Make an action request using the portal authentication token\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\tString url = portletURL.toString();\n\n\t\turl = HttpUtil.setParameter(url, \"p_auth\", response.getBody());\n\n\t\tMap<String, List<String>> headers = new HashMap<>();\n\n\t\theaders.put(\"Cookie\", response.getCookies());\n\n\t\tresponse = PortletContainerTestUtil.request(url, headers);\n\n\t\tAssert.assertEquals(200, response.getCode());\n\t\tAssert.assertTrue(testPortlet.isActionCalled());\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testPortalAuthenticationTokenSecret() throws Exception {\n\t\tString authTokenSharedSecret = ReflectionTestUtil.getAndSetFieldValue(\n\t\t\tPropsValues.class, \"AUTH_TOKEN_SHARED_SECRET\", \"test\");\n\n\t\ttry {\n\t\t\tsetUpPortlet(\n\t\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\t\tTEST_PORTLET_ID);\n\n\t\t\tHttpServletRequest httpServletRequest =\n\t\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\t\tportletURL.setParameter(\"p_auth_secret\", Encryptor.digest(\"test\"));\n\n\t\t\tMap<String, List<String>> responseMap =\n\t\t\t\tPortletContainerTestUtil.request(portletURL.toString());\n\n\t\t\tAssert.assertEquals(\n\t\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\t\tAssert.assertTrue(testPortlet.isActionCalled());\n\t\t}\n\t\tfinally {\n\t\t\tReflectionTestUtil.setFieldValue(\n\t\t\t\tPropsValues.class, \"AUTH_TOKEN_SHARED_SECRET\",\n\t\t\t\tauthTokenSharedSecret);\n\t\t}\n\t}","id":48194,"modified_method":"@Test\n\tpublic void testPortalAuthenticationTokenSecret() throws Exception {\n\t\tString authTokenSharedSecret = ReflectionTestUtil.getAndSetFieldValue(\n\t\t\tPropsValues.class, \"AUTH_TOKEN_SHARED_SECRET\", \"test\");\n\n\t\ttry {\n\t\t\tsetUpPortlet(\n\t\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\t\tTEST_PORTLET_ID);\n\n\t\t\tHttpServletRequest httpServletRequest =\n\t\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\t\tportletURL.setParameter(\"p_auth_secret\", Encryptor.digest(\"test\"));\n\n\t\t\tResponse response = PortletContainerTestUtil.request(\n\t\t\t\tportletURL.toString());\n\n\t\t\tAssert.assertEquals(200, response.getCode());\n\t\t\tAssert.assertTrue(testPortlet.isActionCalled());\n\t\t}\n\t\tfinally {\n\t\t\tReflectionTestUtil.setFieldValue(\n\t\t\t\tPropsValues.class, \"AUTH_TOKEN_SHARED_SECRET\",\n\t\t\t\tauthTokenSharedSecret);\n\t\t}\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testAuthTokenCheckEnabled() throws Exception {\n\t\tBoolean authTokenCheckEnabled = ReflectionTestUtil.getAndSetFieldValue(\n\t\t\tPropsValues.class, \"AUTH_TOKEN_CHECK_ENABLED\", Boolean.FALSE);\n\n\t\ttry {\n\t\t\tsetUpPortlet(\n\t\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\t\tTEST_PORTLET_ID);\n\n\t\t\tHttpServletRequest httpServletRequest =\n\t\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\t\tMap<String, List<String>> responseMap =\n\t\t\t\tPortletContainerTestUtil.request(portletURL.toString());\n\n\t\t\tAssert.assertEquals(\n\t\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\t\tAssert.assertTrue(testPortlet.isActionCalled());\n\t\t}\n\t\tfinally {\n\t\t\tReflectionTestUtil.setFieldValue(\n\t\t\t\tPropsValues.class, \"AUTH_TOKEN_CHECK_ENABLED\",\n\t\t\t\tauthTokenCheckEnabled);\n\t\t}\n\t}","id":48195,"modified_method":"@Test\n\tpublic void testAuthTokenCheckEnabled() throws Exception {\n\t\tBoolean authTokenCheckEnabled = ReflectionTestUtil.getAndSetFieldValue(\n\t\t\tPropsValues.class, \"AUTH_TOKEN_CHECK_ENABLED\", Boolean.FALSE);\n\n\t\ttry {\n\t\t\tsetUpPortlet(\n\t\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\t\tTEST_PORTLET_ID);\n\n\t\t\tHttpServletRequest httpServletRequest =\n\t\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\t\tResponse response = PortletContainerTestUtil.request(\n\t\t\t\tportletURL.toString());\n\n\t\t\tAssert.assertEquals(200, response.getCode());\n\t\t\tAssert.assertTrue(testPortlet.isActionCalled());\n\t\t}\n\t\tfinally {\n\t\t\tReflectionTestUtil.setFieldValue(\n\t\t\t\tPropsValues.class, \"AUTH_TOKEN_CHECK_ENABLED\",\n\t\t\t\tauthTokenCheckEnabled);\n\t\t}\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testXCSRFToken() throws Exception {\n\t\ttestPortlet = new TestPortlet() {\n\n\t\t\t@Override\n\t\t\tpublic void serveResource(\n\t\t\t\t\tResourceRequest resourceRequest,\n\t\t\t\t\tResourceResponse resourceResponse)\n\t\t\t\tthrows IOException {\n\n\t\t\t\tPrintWriter printWriter = resourceResponse.getWriter();\n\n\t\t\t\tPortletURL portletURL = resourceResponse.createActionURL();\n\n\t\t\t\tString queryString = HttpUtil.getQueryString(\n\t\t\t\t\tportletURL.toString());\n\n\t\t\t\tMap<String, String[]> parameterMap = HttpUtil.getParameterMap(\n\t\t\t\t\tqueryString);\n\n\t\t\t\tString portalAuthenticationToken = MapUtil.getString(\n\t\t\t\t\tparameterMap, \"p_auth\");\n\n\t\t\t\tprintWriter.write(portalAuthenticationToken);\n\t\t\t}\n\n\t\t};\n\n\t\tsetUpPortlet(\n\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\tTEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletContainerTestUtil.PortalAuthentication portalAuthentication =\n\t\t\tPortletContainerTestUtil.getPortalAuthentication(\n\t\t\t\thttpServletRequest, layout, TEST_PORTLET_ID);\n\n\t\ttestPortlet.reset();\n\n\t\t// Make an action request using the portal authentication token\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\tString url = portletURL.toString();\n\n\t\turl = HttpUtil.removeParameter(url, \"p_auth\");\n\n\t\tMap<String, List<String>> headers = new HashMap<>();\n\n\t\theaders.put(\"Cookie\", portalAuthentication.getCookies());\n\t\theaders.put(\n\t\t\t\"X-CSRF-Token\",\n\t\t\tCollections.singletonList(\n\t\t\t\tportalAuthentication.getPortalAuthenticationToken()));\n\n\t\tMap<String, List<String>> responseMap =\n\t\t\tPortletContainerTestUtil.request(url, headers);\n\n\t\tAssert.assertEquals(\n\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\tAssert.assertTrue(testPortlet.isActionCalled());\n\t}","id":48196,"modified_method":"@Test\n\tpublic void testXCSRFToken() throws Exception {\n\t\ttestPortlet = new TestPortlet() {\n\n\t\t\t@Override\n\t\t\tpublic void serveResource(\n\t\t\t\t\tResourceRequest resourceRequest,\n\t\t\t\t\tResourceResponse resourceResponse)\n\t\t\t\tthrows IOException {\n\n\t\t\t\tPrintWriter printWriter = resourceResponse.getWriter();\n\n\t\t\t\tPortletURL portletURL = resourceResponse.createActionURL();\n\n\t\t\t\tString queryString = HttpUtil.getQueryString(\n\t\t\t\t\tportletURL.toString());\n\n\t\t\t\tMap<String, String[]> parameterMap = HttpUtil.getParameterMap(\n\t\t\t\t\tqueryString);\n\n\t\t\t\tString portalAuthenticationToken = MapUtil.getString(\n\t\t\t\t\tparameterMap, \"p_auth\");\n\n\t\t\t\tprintWriter.write(portalAuthenticationToken);\n\t\t\t}\n\n\t\t};\n\n\t\tsetUpPortlet(\n\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\tTEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tResponse response = PortletContainerTestUtil.getPortalAuthentication(\n\t\t\thttpServletRequest, layout, TEST_PORTLET_ID);\n\n\t\ttestPortlet.reset();\n\n\t\t// Make an action request using the portal authentication token\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\tString url = portletURL.toString();\n\n\t\turl = HttpUtil.removeParameter(url, \"p_auth\");\n\n\t\tMap<String, List<String>> headers = new HashMap<>();\n\n\t\theaders.put(\"Cookie\", response.getCookies());\n\t\theaders.put(\n\t\t\t\"X-CSRF-Token\", Collections.singletonList(response.getBody()));\n\n\t\tresponse = PortletContainerTestUtil.request(url, headers);\n\n\t\tAssert.assertEquals(200, response.getCode());\n\t\tAssert.assertTrue(testPortlet.isActionCalled());\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testAuthTokenIgnorePortlets() throws Exception {\n\t\tString[] authTokenIgnorePortlets =\n\t\t\tReflectionTestUtil.getAndSetFieldValue(\n\t\t\t\tPropsValues.class, \"AUTH_TOKEN_IGNORE_PORTLETS\",\n\t\t\t\tnew String[] {TEST_PORTLET_ID});\n\n\t\ttry {\n\t\t\tAuthTokenWhitelistUtil.resetPortletCSRFWhitelist();\n\n\t\t\tsetUpPortlet(\n\t\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\t\tTEST_PORTLET_ID);\n\n\t\t\tHttpServletRequest httpServletRequest =\n\t\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\t\tMap<String, List<String>> responseMap =\n\t\t\t\tPortletContainerTestUtil.request(portletURL.toString());\n\n\t\t\tAssert.assertEquals(\n\t\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\t\tAssert.assertTrue(testPortlet.isActionCalled());\n\t\t}\n\t\tfinally {\n\t\t\tReflectionTestUtil.setFieldValue(\n\t\t\t\tPropsValues.class, \"AUTH_TOKEN_IGNORE_PORTLETS\",\n\t\t\t\tauthTokenIgnorePortlets);\n\n\t\t\tAuthTokenWhitelistUtil.resetPortletCSRFWhitelist();\n\t\t}\n\t}","id":48197,"modified_method":"@Test\n\tpublic void testAuthTokenIgnorePortlets() throws Exception {\n\t\tString[] authTokenIgnorePortlets =\n\t\t\tReflectionTestUtil.getAndSetFieldValue(\n\t\t\t\tPropsValues.class, \"AUTH_TOKEN_IGNORE_PORTLETS\",\n\t\t\t\tnew String[] {TEST_PORTLET_ID});\n\n\t\ttry {\n\t\t\tAuthTokenWhitelistUtil.resetPortletCSRFWhitelist();\n\n\t\t\tsetUpPortlet(\n\t\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\t\tTEST_PORTLET_ID);\n\n\t\t\tHttpServletRequest httpServletRequest =\n\t\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\t\tResponse response = PortletContainerTestUtil.request(\n\t\t\t\tportletURL.toString());\n\n\t\t\tAssert.assertEquals(200, response.getCode());\n\t\t\tAssert.assertTrue(testPortlet.isActionCalled());\n\t\t}\n\t\tfinally {\n\t\t\tReflectionTestUtil.setFieldValue(\n\t\t\t\tPropsValues.class, \"AUTH_TOKEN_IGNORE_PORTLETS\",\n\t\t\t\tauthTokenIgnorePortlets);\n\n\t\t\tAuthTokenWhitelistUtil.resetPortletCSRFWhitelist();\n\t\t}\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testNoPortalAuthenticationTokens() throws Exception {\n\t\tsetUpPortlet(\n\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\tTEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\tString url = portletURL.toString();\n\n\t\ttry (CaptureAppender captureAppender =\n\t\t\t\tLog4JLoggerTestUtil.configureLog4JLogger(\n\t\t\t\t\tSecurityPortletContainerWrapper.class.getName(),\n\t\t\t\t\tLevel.WARN)) {\n\n\t\t\tMap<String, List<String>> responseMap =\n\t\t\t\tPortletContainerTestUtil.request(url);\n\n\t\t\tList<LoggingEvent> loggingEvents =\n\t\t\t\tcaptureAppender.getLoggingEvents();\n\n\t\t\tAssert.assertEquals(1, loggingEvents.size());\n\n\t\t\tLoggingEvent loggingEvent = loggingEvents.get(0);\n\n\t\t\tAssert.assertEquals(\n\t\t\t\t\"User 0 is not allowed to access URL \" +\n\t\t\t\t\turl.substring(0, url.indexOf('?')) + \" and portlet \" +\n\t\t\t\t\t\tTEST_PORTLET_ID,\n\t\t\t\tloggingEvent.getMessage());\n\n\t\t\tAssert.assertEquals(\n\t\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\t\tAssert.assertFalse(testPortlet.isActionCalled());\n\t\t}\n\t}","id":48198,"modified_method":"@Test\n\tpublic void testNoPortalAuthenticationTokens() throws Exception {\n\t\tsetUpPortlet(\n\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\tTEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\tString url = portletURL.toString();\n\n\t\ttry (CaptureAppender captureAppender =\n\t\t\t\tLog4JLoggerTestUtil.configureLog4JLogger(\n\t\t\t\t\tSecurityPortletContainerWrapper.class.getName(),\n\t\t\t\t\tLevel.WARN)) {\n\n\t\t\tResponse response = PortletContainerTestUtil.request(url);\n\n\t\t\tList<LoggingEvent> loggingEvents =\n\t\t\t\tcaptureAppender.getLoggingEvents();\n\n\t\t\tAssert.assertEquals(1, loggingEvents.size());\n\n\t\t\tLoggingEvent loggingEvent = loggingEvents.get(0);\n\n\t\t\tAssert.assertEquals(\n\t\t\t\t\"User 0 is not allowed to access URL \" +\n\t\t\t\t\turl.substring(0, url.indexOf('?')) + \" and portlet \" +\n\t\t\t\t\t\tTEST_PORTLET_ID,\n\t\t\t\tloggingEvent.getMessage());\n\t\t\tAssert.assertEquals(200, response.getCode());\n\t\t\tAssert.assertFalse(testPortlet.isActionCalled());\n\t\t}\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testAuthTokenIgnoreOrigins() throws Exception {\n\t\tString[] authTokenIgnoreOrigins =\n\t\t\tReflectionTestUtil.getAndSetFieldValue(\n\t\t\t\tPropsValues.class, \"AUTH_TOKEN_IGNORE_ORIGINS\",\n\t\t\t\tnew String[] {SecurityPortletContainerWrapper.class.getName()});\n\n\t\ttry {\n\t\t\tAuthTokenWhitelistUtil.resetOriginCSRFWhitelist();\n\n\t\t\tsetUpPortlet(\n\t\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\t\tTEST_PORTLET_ID);\n\n\t\t\tHttpServletRequest httpServletRequest =\n\t\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\t\tMap<String, List<String>> responseMap =\n\t\t\t\tPortletContainerTestUtil.request(portletURL.toString());\n\n\t\t\tAssert.assertEquals(\n\t\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\t\tAssert.assertTrue(testPortlet.isActionCalled());\n\t\t}\n\t\tfinally {\n\t\t\tReflectionTestUtil.setFieldValue(\n\t\t\t\tPropsValues.class, \"AUTH_TOKEN_IGNORE_ORIGINS\",\n\t\t\t\tauthTokenIgnoreOrigins);\n\n\t\t\tAuthTokenWhitelistUtil.resetOriginCSRFWhitelist();\n\t\t}\n\t}","id":48199,"modified_method":"@Test\n\tpublic void testAuthTokenIgnoreOrigins() throws Exception {\n\t\tString[] authTokenIgnoreOrigins =\n\t\t\tReflectionTestUtil.getAndSetFieldValue(\n\t\t\t\tPropsValues.class, \"AUTH_TOKEN_IGNORE_ORIGINS\",\n\t\t\t\tnew String[] {SecurityPortletContainerWrapper.class.getName()});\n\n\t\ttry {\n\t\t\tAuthTokenWhitelistUtil.resetOriginCSRFWhitelist();\n\n\t\t\tsetUpPortlet(\n\t\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\t\tTEST_PORTLET_ID);\n\n\t\t\tHttpServletRequest httpServletRequest =\n\t\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\t\tResponse response = PortletContainerTestUtil.request(\n\t\t\t\tportletURL.toString());\n\n\t\t\tAssert.assertEquals(200, response.getCode());\n\t\t\tAssert.assertTrue(testPortlet.isActionCalled());\n\t\t}\n\t\tfinally {\n\t\t\tReflectionTestUtil.setFieldValue(\n\t\t\t\tPropsValues.class, \"AUTH_TOKEN_IGNORE_ORIGINS\",\n\t\t\t\tauthTokenIgnoreOrigins);\n\n\t\t\tAuthTokenWhitelistUtil.resetOriginCSRFWhitelist();\n\t\t}\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testStrutsAction() throws Exception {\n\t\tDictionary<String, Object> properties = new HashMapDictionary<>();\n\n\t\tproperties.put(PropsKeys.AUTH_TOKEN_IGNORE_ACTIONS, \"/test/portlet/1\");\n\t\tproperties.put(\"com.liferay.portlet.struts-path\", \"test/portlet\");\n\n\t\tsetUpPortlet(testPortlet, properties, TEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\tportletURL.setParameter(\"struts_action\", \"/test/portlet/1\");\n\n\t\tMap<String, List<String>> responseMap =\n\t\t\tPortletContainerTestUtil.request(portletURL.toString());\n\n\t\tAssert.assertEquals(\n\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\tAssert.assertTrue(testPortlet.isActionCalled());\n\t}","id":48200,"modified_method":"@Test\n\tpublic void testStrutsAction() throws Exception {\n\t\tDictionary<String, Object> properties = new HashMapDictionary<>();\n\n\t\tproperties.put(PropsKeys.AUTH_TOKEN_IGNORE_ACTIONS, \"/test/portlet/1\");\n\t\tproperties.put(\"com.liferay.portlet.struts-path\", \"test/portlet\");\n\n\t\tsetUpPortlet(testPortlet, properties, TEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\tportletURL.setParameter(\"struts_action\", \"/test/portlet/1\");\n\n\t\tResponse response = PortletContainerTestUtil.request(\n\t\t\tportletURL.toString());\n\n\t\tAssert.assertEquals(200, response.getCode());\n\t\tAssert.assertTrue(testPortlet.isActionCalled());\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testInitParam() throws Exception {\n\t\tDictionary<String, Object> properties = new HashMapDictionary<>();\n\n\t\tproperties.put(\n\t\t\t\"javax.portlet.init-param.check-auth-token\",\n\t\t\tBoolean.FALSE.toString());\n\n\t\tsetUpPortlet(testPortlet, properties, TEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\tMap<String, List<String>> responseMap =\n\t\t\tPortletContainerTestUtil.request(portletURL.toString());\n\n\t\tAssert.assertEquals(\n\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\tAssert.assertTrue(testPortlet.isActionCalled());\n\t}","id":48201,"modified_method":"@Test\n\tpublic void testInitParam() throws Exception {\n\t\tDictionary<String, Object> properties = new HashMapDictionary<>();\n\n\t\tproperties.put(\n\t\t\t\"javax.portlet.init-param.check-auth-token\",\n\t\t\tBoolean.FALSE.toString());\n\n\t\tsetUpPortlet(testPortlet, properties, TEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.ACTION_PHASE);\n\n\t\tResponse response = PortletContainerTestUtil.request(\n\t\t\tportletURL.toString());\n\n\t\tAssert.assertEquals(200, response.getCode());\n\t\tAssert.assertTrue(testPortlet.isActionCalled());\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testLayoutRequest() throws Exception {\n\t\tsetUpPortlet(\n\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\tTEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tMap<String, List<String>> responseMap =\n\t\t\tPortletContainerTestUtil.request(\n\t\t\t\tlayout.getRegularURL(httpServletRequest));\n\n\t\tAssert.assertEquals(\n\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\tAssert.assertTrue(testPortlet.isRenderCalled());\n\t}","id":48202,"modified_method":"@Test\n\tpublic void testLayoutRequest() throws Exception {\n\t\tsetUpPortlet(\n\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\tTEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tResponse response = PortletContainerTestUtil.request(\n\t\t\tlayout.getRegularURL(httpServletRequest));\n\n\t\tAssert.assertEquals(200, response.getCode());\n\t\tAssert.assertTrue(testPortlet.isRenderCalled());\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Map<String, List<String>> request(\n\t\t\tString url, Map<String, List<String>> headers)\n\t\tthrows IOException {\n\n\t\tURL urlObject = new URL(url);\n\n\t\tHttpURLConnection httpURLConnection =\n\t\t\t(HttpURLConnection)urlObject.openConnection();\n\n\t\thttpURLConnection.setInstanceFollowRedirects(true);\n\t\thttpURLConnection.setConnectTimeout(1500 * 1000);\n\t\thttpURLConnection.setReadTimeout(1500 * 1000);\n\n\t\tif (headers != null) {\n\t\t\tfor (Map.Entry<String, List<String>> entry : headers.entrySet()) {\n\t\t\t\tString key = entry.getKey();\n\n\t\t\t\tfor (String value : entry.getValue()) {\n\t\t\t\t\tif (key.equals(\"Cookie\")) {\n\t\t\t\t\t\thttpURLConnection.addRequestProperty(\n\t\t\t\t\t\t\tkey, value.split(\";\", 2)[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thttpURLConnection.setRequestProperty(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tInputStream inputStream = null;\n\n\t\ttry {\n\t\t\tinputStream = httpURLConnection.getInputStream();\n\t\t}\n\t\tcatch (IOException ioe) {\n\t\t\tinputStream = httpURLConnection.getErrorStream();\n\t\t}\n\n\t\ttry {\n\t\t\tMap<String, List<String>> responseMap = new HashMap<>(\n\t\t\t\thttpURLConnection.getHeaderFields());\n\n\t\t\tresponseMap.put(\"body\", Arrays.asList(read(inputStream)));\n\n\t\t\tString code = String.valueOf(httpURLConnection.getResponseCode());\n\n\t\t\tresponseMap.put(\"code\", Arrays.asList(code));\n\n\t\t\treturn responseMap;\n\t\t}\n\t\tfinally {\n\t\t\tif (inputStream != null) {\n\t\t\t\tinputStream.close();\n\t\t\t}\n\t\t}\n\t}","id":48203,"modified_method":"public static Response request(\n\t\t\tString url, Map<String, List<String>> headers)\n\t\tthrows IOException {\n\n\t\tURL urlObject = new URL(url);\n\n\t\tHttpURLConnection httpURLConnection =\n\t\t\t(HttpURLConnection)urlObject.openConnection();\n\n\t\thttpURLConnection.setInstanceFollowRedirects(true);\n\t\thttpURLConnection.setConnectTimeout(1500 * 1000);\n\t\thttpURLConnection.setReadTimeout(1500 * 1000);\n\n\t\tif (headers != null) {\n\t\t\tfor (Map.Entry<String, List<String>> entry : headers.entrySet()) {\n\t\t\t\tString key = entry.getKey();\n\n\t\t\t\tfor (String value : entry.getValue()) {\n\t\t\t\t\tif (key.equals(\"Cookie\")) {\n\t\t\t\t\t\thttpURLConnection.addRequestProperty(\n\t\t\t\t\t\t\tkey, value.split(\";\", 2)[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thttpURLConnection.setRequestProperty(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tInputStream inputStream = null;\n\n\t\ttry {\n\t\t\tinputStream = httpURLConnection.getInputStream();\n\t\t}\n\t\tcatch (IOException ioe) {\n\t\t\tinputStream = httpURLConnection.getErrorStream();\n\t\t}\n\n\t\ttry {\n\t\t\tMap<String, List<String>> headerFields =\n\t\t\t\thttpURLConnection.getHeaderFields();\n\n\t\t\treturn new Response(\n\t\t\t\thttpURLConnection.getResponseCode(), read(inputStream),\n\t\t\t\theaderFields.get(\"Set-Cookie\"));\n\t\t}\n\t\tfinally {\n\t\t\tif (inputStream != null) {\n\t\t\t\tinputStream.close();\n\t\t\t}\n\t\t}\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static PortalAuthentication getPortalAuthentication(\n\t\t\tHttpServletRequest httpServletRequest, Layout layout,\n\t\t\tString portletId)\n\t\tthrows Exception {\n\n\t\t// Get the portal authentication token by making a resource request\n\n\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\thttpServletRequest, portletId, layout.getPlid(),\n\t\t\tPortletRequest.RESOURCE_PHASE);\n\n\t\tMap<String, List<String>> responseMap = request(portletURL.toString());\n\n\t\tString portalAuthenticationToken = getString(responseMap, \"body\");\n\n\t\tList<String> cookies = responseMap.get(\"Set-Cookie\");\n\n\t\treturn new PortalAuthentication(portalAuthenticationToken, cookies);\n\t}","id":48204,"modified_method":"public static Response getPortalAuthentication(\n\t\t\tHttpServletRequest httpServletRequest, Layout layout,\n\t\t\tString portletId)\n\t\tthrows Exception {\n\n\t\t// Get the portal authentication token by making a resource request\n\n\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\thttpServletRequest, portletId, layout.getPlid(),\n\t\t\tPortletRequest.RESOURCE_PHASE);\n\n\t\treturn request(portletURL.toString());\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Map<String, List<String>> postMultipart(\n\t\t\tString url,\n\t\t\tMockMultipartHttpServletRequest mockMultipartHttpServletRequest,\n\t\t\tString fileNameParameter)\n\t\tthrows IOException, URISyntaxException {\n\n\t\tif (mockMultipartHttpServletRequest.getInputStream() == null) {\n\t\t\tthrow new IllegalStateException(\n\t\t\t\t\"An inputStream must be present on the mock request.\");\n\t\t}\n\n\t\tString[] cookies = mockMultipartHttpServletRequest.getParameterValues(\n\t\t\t\"Cookie\");\n\n\t\tif ((cookies == null) || (cookies.length == 0)) {\n\t\t\tthrow new IllegalStateException(\n\t\t\t\t\"Valid cookies must be present on the mock request.\");\n\t\t}\n\n\t\tPostMethod postMethod = new PostMethod(url);\n\n\t\tfor (String cookie : cookies) {\n\t\t\tpostMethod.addRequestHeader(new Header(\"Cookie\", cookie));\n\t\t}\n\n\t\tbyte[] bytes = FileUtil.getBytes(\n\t\t\tmockMultipartHttpServletRequest.getInputStream());\n\n\t\tPart[] parts = {\n\t\t\tnew FilePart(\n\t\t\t\tfileNameParameter,\n\t\t\t\tnew ByteArrayPartSource(fileNameParameter, bytes))\n\t\t};\n\n\t\tMultipartRequestEntity multipartRequestEntity =\n\t\t\tnew MultipartRequestEntity(parts, postMethod.getParams());\n\n\t\tpostMethod.setRequestEntity(multipartRequestEntity);\n\n\t\tHttpClient client = new HttpClient();\n\n\t\tclient.executeMethod(postMethod);\n\n\t\tMap<String, List<String>> responseMap = new HashMap<>();\n\n\t\tStatusLine statusLine = postMethod.getStatusLine();\n\n\t\tString code = String.valueOf(statusLine.getStatusCode());\n\n\t\tresponseMap.put(\"code\", Arrays.asList(code));\n\n\t\tInputStream inputStream = postMethod.getResponseBodyAsStream();\n\n\t\tHeader[] headers = postMethod.getRequestHeaders();\n\n\t\tfor (Header header : headers) {\n\t\t\tHeaderElement[] elements = header.getElements();\n\n\t\t\tfor (HeaderElement element : elements) {\n\t\t\t\tString key = header.getName() + \"[\" + element.getName() + \"]\";\n\n\t\t\t\tresponseMap.put(key, Arrays.asList(element.getValue()));\n\t\t\t}\n\t\t}\n\n\t\tresponseMap.put(\"body\", Arrays.asList(read(inputStream)));\n\n\t\treturn responseMap;\n\t}","id":48205,"modified_method":"public static Response postMultipart(\n\t\t\tString url,\n\t\t\tMockMultipartHttpServletRequest mockMultipartHttpServletRequest,\n\t\t\tString fileNameParameter)\n\t\tthrows IOException, URISyntaxException {\n\n\t\tif (mockMultipartHttpServletRequest.getInputStream() == null) {\n\t\t\tthrow new IllegalStateException(\n\t\t\t\t\"An inputStream must be present on the mock request.\");\n\t\t}\n\n\t\tString[] cookies = mockMultipartHttpServletRequest.getParameterValues(\n\t\t\t\"Cookie\");\n\n\t\tif ((cookies == null) || (cookies.length == 0)) {\n\t\t\tthrow new IllegalStateException(\n\t\t\t\t\"Valid cookies must be present on the mock request.\");\n\t\t}\n\n\t\tPostMethod postMethod = new PostMethod(url);\n\n\t\tfor (String cookie : cookies) {\n\t\t\tpostMethod.addRequestHeader(new Header(\"Cookie\", cookie));\n\t\t}\n\n\t\tbyte[] bytes = FileUtil.getBytes(\n\t\t\tmockMultipartHttpServletRequest.getInputStream());\n\n\t\tPart[] parts = {\n\t\t\tnew FilePart(\n\t\t\t\tfileNameParameter,\n\t\t\t\tnew ByteArrayPartSource(fileNameParameter, bytes))\n\t\t};\n\n\t\tMultipartRequestEntity multipartRequestEntity =\n\t\t\tnew MultipartRequestEntity(parts, postMethod.getParams());\n\n\t\tpostMethod.setRequestEntity(multipartRequestEntity);\n\n\t\tHttpClient client = new HttpClient();\n\n\t\tclient.executeMethod(postMethod);\n\n\t\tStatusLine statusLine = postMethod.getStatusLine();\n\n\t\treturn new Response(\n\t\t\tstatusLine.getStatusCode(), postMethod.getResponseBodyAsString(),\n\t\t\tnull);\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testRequestFromValidURLWithoutHeaders() throws Exception {\n\t\tMap<String, List<String>> responseMap =\n\t\t\tPortletContainerTestUtil.request(\"http://www.google.com\");\n\n\t\tAssert.assertNotNull(responseMap.get(\"body\"));\n\t\tAssertUtils.assertEquals(Arrays.asList(\"200\"), responseMap.get(\"code\"));\n\t}","id":48206,"modified_method":"@Test\n\tpublic void testRequestFromValidURLWithoutHeaders() throws Exception {\n\t\tResponse response = PortletContainerTestUtil.request(\n\t\t\t\"http://www.google.com\");\n\n\t\tAssert.assertNotNull(response.getBody());\n\t\tAssert.assertEquals(200, response.getCode());\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testRequestFromValidURLWithHeaders() throws Exception {\n\t\tMap<String, List<String>> headers = new HashMap<>();\n\n\t\tList<String> values = new ArrayList<>();\n\n\t\tvalues.add(\"value1\");\n\n\t\theaders.put(\"key1\", values);\n\n\t\tList<String> cookieValues = new ArrayList<>();\n\n\t\tcookieValues.add(\"JSSESSIONID=1234567890\");\n\n\t\theaders.put(\"Cookie\", cookieValues);\n\n\t\tMap<String, List<String>> responseMap =\n\t\t\tPortletContainerTestUtil.request(\"http://www.google.com\", headers);\n\n\t\tAssert.assertNotNull(responseMap.get(\"body\"));\n\t\tAssertUtils.assertEquals(Arrays.asList(\"200\"), responseMap.get(\"code\"));\n\t}","id":48207,"modified_method":"@Test\n\tpublic void testRequestFromValidURLWithHeaders() throws Exception {\n\t\tMap<String, List<String>> headers = new HashMap<>();\n\n\t\tList<String> values = new ArrayList<>();\n\n\t\tvalues.add(\"value1\");\n\n\t\theaders.put(\"key1\", values);\n\n\t\tList<String> cookieValues = new ArrayList<>();\n\n\t\tcookieValues.add(\"JSSESSIONID=1234567890\");\n\n\t\theaders.put(\"Cookie\", cookieValues);\n\n\t\tResponse response = PortletContainerTestUtil.request(\n\t\t\t\"http://www.google.com\", headers);\n\n\t\tAssert.assertNotNull(response.getBody());\n\t\tAssert.assertEquals(200, response.getCode());\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testIsAccessGrantedByPortletOnPage() throws Exception {\n\t\tsetUpPortlet(\n\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\tTEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tMap<String, List<String>> responseMap =\n\t\t\tPortletContainerTestUtil.request(portletURL.toString());\n\n\t\tAssert.assertEquals(\n\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\tAssert.assertTrue(testPortlet.isRenderCalled());\n\t}","id":48208,"modified_method":"@Test\n\tpublic void testIsAccessGrantedByPortletOnPage() throws Exception {\n\t\tsetUpPortlet(\n\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\tTEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tResponse response = PortletContainerTestUtil.request(\n\t\t\tportletURL.toString());\n\n\t\tAssert.assertEquals(200, response.getCode());\n\t\tAssert.assertTrue(testPortlet.isRenderCalled());\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testIsAccessGrantedByPortletAuthenticationToken()\n\t\tthrows Exception {\n\n\t\tfinal String testTargetPortletId = \"testTargetPortletId\";\n\n\t\tDictionary<String, Object> properties = new HashMapDictionary<>();\n\n\t\tproperties.put(\n\t\t\t\"com.liferay.portlet.add-default-resource\", Boolean.TRUE);\n\t\tproperties.put(\"com.liferay.portlet.system\", Boolean.TRUE);\n\n\t\tTestPortlet testTargetPortlet = new TestPortlet();\n\n\t\tsetUpPortlet(testTargetPortlet, properties, testTargetPortletId, false);\n\n\t\ttestPortlet = new TestPortlet() {\n\n\t\t\t@Override\n\t\t\tpublic void serveResource(\n\t\t\t\t\tResourceRequest resourceRequest,\n\t\t\t\t\tResourceResponse resourceResponse)\n\t\t\t\tthrows IOException {\n\n\t\t\t\tPrintWriter printWriter = resourceResponse.getWriter();\n\n\t\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\t\tresourceRequest, testTargetPortletId, layout.getPlid(),\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tString queryString = HttpUtil.getQueryString(\n\t\t\t\t\tportletURL.toString());\n\n\t\t\t\tMap<String, String[]> parameterMap = HttpUtil.getParameterMap(\n\t\t\t\t\tqueryString);\n\n\t\t\t\tString portletAuthenticationToken = MapUtil.getString(\n\t\t\t\t\tparameterMap, \"p_p_auth\");\n\n\t\t\t\tprintWriter.write(portletAuthenticationToken);\n\t\t\t}\n\n\t\t};\n\n\t\tproperties = new HashMapDictionary<>();\n\n\t\tsetUpPortlet(testPortlet, properties, TEST_PORTLET_ID);\n\n\t\t// Get the portlet authentication token by making a resource request\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.RESOURCE_PHASE);\n\n\t\tMap<String, List<String>> responseMap =\n\t\t\tPortletContainerTestUtil.request(portletURL.toString());\n\n\t\tString portletAuthenticationToken = PortletContainerTestUtil.getString(\n\t\t\tresponseMap, \"body\");\n\n\t\tList<String> cookies = responseMap.get(\"Set-Cookie\");\n\n\t\ttestTargetPortlet.reset();\n\n\t\t// Make a render request to the target portlet using the portlet\n\t\t// authentication token\n\n\t\tportletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, testTargetPortletId, layout.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\tString url = portletURL.toString();\n\n\t\turl = HttpUtil.setParameter(\n\t\t\turl, \"p_p_auth\", portletAuthenticationToken);\n\n\t\tMap<String, List<String>> headers = new HashMap<>();\n\n\t\theaders.put(\"Cookie\", cookies);\n\n\t\tresponseMap = PortletContainerTestUtil.request(url, headers);\n\n\t\tAssert.assertEquals(\n\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\tAssert.assertTrue(testTargetPortlet.isRenderCalled());\n\t}","id":48209,"modified_method":"@Test\n\tpublic void testIsAccessGrantedByPortletAuthenticationToken()\n\t\tthrows Exception {\n\n\t\tfinal String testTargetPortletId = \"testTargetPortletId\";\n\n\t\tDictionary<String, Object> properties = new HashMapDictionary<>();\n\n\t\tproperties.put(\n\t\t\t\"com.liferay.portlet.add-default-resource\", Boolean.TRUE);\n\t\tproperties.put(\"com.liferay.portlet.system\", Boolean.TRUE);\n\n\t\tTestPortlet testTargetPortlet = new TestPortlet();\n\n\t\tsetUpPortlet(testTargetPortlet, properties, testTargetPortletId, false);\n\n\t\ttestPortlet = new TestPortlet() {\n\n\t\t\t@Override\n\t\t\tpublic void serveResource(\n\t\t\t\t\tResourceRequest resourceRequest,\n\t\t\t\t\tResourceResponse resourceResponse)\n\t\t\t\tthrows IOException {\n\n\t\t\t\tPrintWriter printWriter = resourceResponse.getWriter();\n\n\t\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\t\tresourceRequest, testTargetPortletId, layout.getPlid(),\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tString queryString = HttpUtil.getQueryString(\n\t\t\t\t\tportletURL.toString());\n\n\t\t\t\tMap<String, String[]> parameterMap = HttpUtil.getParameterMap(\n\t\t\t\t\tqueryString);\n\n\t\t\t\tString portletAuthenticationToken = MapUtil.getString(\n\t\t\t\t\tparameterMap, \"p_p_auth\");\n\n\t\t\t\tprintWriter.write(portletAuthenticationToken);\n\t\t\t}\n\n\t\t};\n\n\t\tproperties = new HashMapDictionary<>();\n\n\t\tsetUpPortlet(testPortlet, properties, TEST_PORTLET_ID);\n\n\t\t// Get the portlet authentication token by making a resource request\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.RESOURCE_PHASE);\n\n\t\tResponse response = PortletContainerTestUtil.request(\n\t\t\tportletURL.toString());\n\n\t\ttestTargetPortlet.reset();\n\n\t\t// Make a render request to the target portlet using the portlet\n\t\t// authentication token\n\n\t\tportletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, testTargetPortletId, layout.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\tString url = portletURL.toString();\n\n\t\turl = HttpUtil.setParameter(url, \"p_p_auth\", response.getBody());\n\n\t\tMap<String, List<String>> headers = new HashMap<>();\n\n\t\theaders.put(\"Cookie\", response.getCookies());\n\n\t\tresponse = PortletContainerTestUtil.request(url, headers);\n\n\t\tAssert.assertEquals(200, response.getCode());\n\t\tAssert.assertTrue(testTargetPortlet.isRenderCalled());\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testInvalidPortletId() throws Exception {\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tString url =\n\t\t\tlayout.getRegularURL(httpServletRequest) +\n\t\t\t\t\"?p_p_id='\\\"><script>alert(1)<\/script>&p_p_lifecycle=0&\" +\n\t\t\t\t\t\"p_p_state=exclusive\";\n\n\t\ttry (CaptureAppender captureAppender =\n\t\t\t\tLog4JLoggerTestUtil.configureLog4JLogger(\n\t\t\t\t\tSecurityPortletContainerWrapper.class.getName(),\n\t\t\t\t\tLevel.WARN)) {\n\n\t\t\tMap<String, List<String>> responseMap =\n\t\t\t\tPortletContainerTestUtil.request(url);\n\n\t\t\tList<LoggingEvent> loggingEvents =\n\t\t\t\tcaptureAppender.getLoggingEvents();\n\n\t\t\tAssert.assertEquals(1, loggingEvents.size());\n\n\t\t\tLoggingEvent loggingEvent = loggingEvents.get(0);\n\n\t\t\tAssert.assertEquals(\n\t\t\t\t\"Invalid portlet ID '\\\"><script>alert(1)<\/script>\",\n\t\t\t\tloggingEvent.getMessage());\n\n\t\t\tAssert.assertEquals(\n\t\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\t}\n\t}","id":48210,"modified_method":"@Test\n\tpublic void testInvalidPortletId() throws Exception {\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tString url =\n\t\t\tlayout.getRegularURL(httpServletRequest) +\n\t\t\t\t\"?p_p_id='\\\"><script>alert(1)<\/script>&p_p_lifecycle=0&\" +\n\t\t\t\t\t\"p_p_state=exclusive\";\n\n\t\ttry (CaptureAppender captureAppender =\n\t\t\t\tLog4JLoggerTestUtil.configureLog4JLogger(\n\t\t\t\t\tSecurityPortletContainerWrapper.class.getName(),\n\t\t\t\t\tLevel.WARN)) {\n\n\t\t\tResponse response = PortletContainerTestUtil.request(url);\n\n\t\t\tList<LoggingEvent> loggingEvents =\n\t\t\t\tcaptureAppender.getLoggingEvents();\n\n\t\t\tAssert.assertEquals(1, loggingEvents.size());\n\n\t\t\tLoggingEvent loggingEvent = loggingEvents.get(0);\n\n\t\t\tAssert.assertEquals(\n\t\t\t\t\"Invalid portlet ID '\\\"><script>alert(1)<\/script>\",\n\t\t\t\tloggingEvent.getMessage());\n\t\t\tAssert.assertEquals(200, response.getCode());\n\t\t}\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testIsAccessGrantedByRuntimePortlet() throws Exception {\n\t\ttestPortlet = new TestPortlet() {\n\n\t\t\t@Override\n\t\t\tpublic void render(\n\t\t\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\t\t\tthrows IOException, PortletException {\n\n\t\t\t\tPortletContext portletContext = getPortletContext();\n\n\t\t\t\tPortletRequestDispatcher portletRequestDispatcher =\n\t\t\t\t\tportletContext.getRequestDispatcher(\"/runtime_portlet.jsp\");\n\n\t\t\t\tportletRequestDispatcher.include(renderRequest, renderResponse);\n\t\t\t}\n\n\t\t};\n\n\t\tsetUpPortlet(\n\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\tTEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tString testRuntimePortletId = \"testRuntimePortletId\";\n\n\t\tTestPortlet testRuntimePortlet = new TestPortlet();\n\n\t\tsetUpPortlet(\n\t\t\ttestRuntimePortlet, new HashMapDictionary<String, Object>(),\n\t\t\ttestRuntimePortletId, false);\n\n\t\tportletURL.setParameter(\"testRuntimePortletId\", testRuntimePortletId);\n\n\t\tMap<String, List<String>> responseMap =\n\t\t\tPortletContainerTestUtil.request(portletURL.toString());\n\n\t\tAssert.assertEquals(\n\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\tAssert.assertTrue(testRuntimePortlet.isRenderCalled());\n\t}","id":48211,"modified_method":"@Test\n\tpublic void testIsAccessGrantedByRuntimePortlet() throws Exception {\n\t\ttestPortlet = new TestPortlet() {\n\n\t\t\t@Override\n\t\t\tpublic void render(\n\t\t\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\t\t\tthrows IOException, PortletException {\n\n\t\t\t\tPortletContext portletContext = getPortletContext();\n\n\t\t\t\tPortletRequestDispatcher portletRequestDispatcher =\n\t\t\t\t\tportletContext.getRequestDispatcher(\"/runtime_portlet.jsp\");\n\n\t\t\t\tportletRequestDispatcher.include(renderRequest, renderResponse);\n\t\t\t}\n\n\t\t};\n\n\t\tsetUpPortlet(\n\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\tTEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tString testRuntimePortletId = \"testRuntimePortletId\";\n\n\t\tTestPortlet testRuntimePortlet = new TestPortlet();\n\n\t\tsetUpPortlet(\n\t\t\ttestRuntimePortlet, new HashMapDictionary<String, Object>(),\n\t\t\ttestRuntimePortletId, false);\n\n\t\tportletURL.setParameter(\"testRuntimePortletId\", testRuntimePortletId);\n\n\t\tResponse response = PortletContainerTestUtil.request(\n\t\t\tportletURL.toString());\n\n\t\tAssert.assertEquals(200, response.getCode());\n\t\tAssert.assertTrue(testRuntimePortlet.isRenderCalled());\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testIsAccessGrantedByPortletOnPage() throws Exception {\n\t\tsetUpPortlet(\n\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\tTEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.RESOURCE_PHASE);\n\n\t\tMap<String, List<String>> responseMap =\n\t\t\tPortletContainerTestUtil.request(portletURL.toString());\n\n\t\tAssert.assertEquals(\n\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\tAssert.assertTrue(testPortlet.isResourceCalled());\n\t}","id":48212,"modified_method":"@Test\n\tpublic void testIsAccessGrantedByPortletOnPage() throws Exception {\n\t\tsetUpPortlet(\n\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\tTEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.RESOURCE_PHASE);\n\n\t\tResponse response = PortletContainerTestUtil.request(\n\t\t\tportletURL.toString());\n\n\t\tAssert.assertEquals(200, response.getCode());\n\t\tAssert.assertTrue(testPortlet.isResourceCalled());\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testIsAccessGrantedByPortletAuthenticationToken()\n\t\tthrows Exception {\n\n\t\tfinal String testTargetPortletId = \"testTargetPortletId\";\n\n\t\tDictionary<String, Object> properties = new HashMapDictionary<>();\n\n\t\tproperties.put(\n\t\t\t\"com.liferay.portlet.add-default-resource\", Boolean.TRUE);\n\t\tproperties.put(\"com.liferay.portlet.system\", Boolean.TRUE);\n\n\t\tTestPortlet testTargetPortlet = new TestPortlet();\n\n\t\tsetUpPortlet(testTargetPortlet, properties, testTargetPortletId, false);\n\n\t\ttestPortlet = new TestPortlet() {\n\n\t\t\t@Override\n\t\t\tpublic void serveResource(\n\t\t\t\t\tResourceRequest resourceRequest,\n\t\t\t\t\tResourceResponse resourceResponse)\n\t\t\t\tthrows IOException {\n\n\t\t\t\tPrintWriter printWriter = resourceResponse.getWriter();\n\n\t\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\t\tresourceRequest, testTargetPortletId, layout.getPlid(),\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tString queryString = HttpUtil.getQueryString(\n\t\t\t\t\tportletURL.toString());\n\n\t\t\t\tMap<String, String[]> parameterMap = HttpUtil.getParameterMap(\n\t\t\t\t\tqueryString);\n\n\t\t\t\tString portletAuthenticationToken = MapUtil.getString(\n\t\t\t\t\tparameterMap, \"p_p_auth\");\n\n\t\t\t\tprintWriter.write(portletAuthenticationToken);\n\t\t\t}\n\n\t\t};\n\n\t\tproperties = new HashMapDictionary<>();\n\n\t\tsetUpPortlet(testPortlet, properties, TEST_PORTLET_ID);\n\n\t\t// Get the portlet authentication token by making a resource request\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.RESOURCE_PHASE);\n\n\t\tMap<String, List<String>> responseMap =\n\t\t\tPortletContainerTestUtil.request(portletURL.toString());\n\n\t\tString portletAuthenticationToken = PortletContainerTestUtil.getString(\n\t\t\tresponseMap, \"body\");\n\n\t\tList<String> cookies = responseMap.get(\"Set-Cookie\");\n\n\t\ttestTargetPortlet.reset();\n\n\t\t// Make a resource request to the target portlet using the portlet\n\t\t// authentication token\n\n\t\tportletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, testTargetPortletId, layout.getPlid(),\n\t\t\tPortletRequest.RESOURCE_PHASE);\n\n\t\tportletURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\tString url = portletURL.toString();\n\n\t\turl = HttpUtil.setParameter(\n\t\t\turl, \"p_p_auth\", portletAuthenticationToken);\n\n\t\tMap<String, List<String>> headers = new HashMap<>();\n\n\t\theaders.put(\"Cookie\", cookies);\n\n\t\tresponseMap = PortletContainerTestUtil.request(url, headers);\n\n\t\tAssert.assertEquals(\n\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\tAssert.assertTrue(testTargetPortlet.isResourceCalled());\n\t}","id":48213,"modified_method":"@Test\n\tpublic void testIsAccessGrantedByPortletAuthenticationToken()\n\t\tthrows Exception {\n\n\t\tfinal String testTargetPortletId = \"testTargetPortletId\";\n\n\t\tDictionary<String, Object> properties = new HashMapDictionary<>();\n\n\t\tproperties.put(\n\t\t\t\"com.liferay.portlet.add-default-resource\", Boolean.TRUE);\n\t\tproperties.put(\"com.liferay.portlet.system\", Boolean.TRUE);\n\n\t\tTestPortlet testTargetPortlet = new TestPortlet();\n\n\t\tsetUpPortlet(testTargetPortlet, properties, testTargetPortletId, false);\n\n\t\ttestPortlet = new TestPortlet() {\n\n\t\t\t@Override\n\t\t\tpublic void serveResource(\n\t\t\t\t\tResourceRequest resourceRequest,\n\t\t\t\t\tResourceResponse resourceResponse)\n\t\t\t\tthrows IOException {\n\n\t\t\t\tPrintWriter printWriter = resourceResponse.getWriter();\n\n\t\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\t\tresourceRequest, testTargetPortletId, layout.getPlid(),\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tString queryString = HttpUtil.getQueryString(\n\t\t\t\t\tportletURL.toString());\n\n\t\t\t\tMap<String, String[]> parameterMap = HttpUtil.getParameterMap(\n\t\t\t\t\tqueryString);\n\n\t\t\t\tString portletAuthenticationToken = MapUtil.getString(\n\t\t\t\t\tparameterMap, \"p_p_auth\");\n\n\t\t\t\tprintWriter.write(portletAuthenticationToken);\n\t\t\t}\n\n\t\t};\n\n\t\tproperties = new HashMapDictionary<>();\n\n\t\tsetUpPortlet(testPortlet, properties, TEST_PORTLET_ID);\n\n\t\t// Get the portlet authentication token by making a resource request\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.RESOURCE_PHASE);\n\n\t\tResponse response = PortletContainerTestUtil.request(\n\t\t\tportletURL.toString());\n\n\t\ttestTargetPortlet.reset();\n\n\t\t// Make a resource request to the target portlet using the portlet\n\t\t// authentication token\n\n\t\tportletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, testTargetPortletId, layout.getPlid(),\n\t\t\tPortletRequest.RESOURCE_PHASE);\n\n\t\tportletURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\tString url = portletURL.toString();\n\n\t\turl = HttpUtil.setParameter(url, \"p_p_auth\", response.getBody());\n\n\t\tMap<String, List<String>> headers = new HashMap<>();\n\n\t\theaders.put(\"Cookie\", response.getCookies());\n\n\t\tresponse = PortletContainerTestUtil.request(url, headers);\n\n\t\tAssert.assertEquals(200, response.getCode());\n\t\tAssert.assertTrue(testTargetPortlet.isResourceCalled());\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testIsAccessGrantedByRuntimePortlet() throws Exception {\n\t\ttestPortlet = new TestPortlet() {\n\n\t\t\t@Override\n\t\t\tpublic void serveResource(\n\t\t\t\t\tResourceRequest resourceRequest,\n\t\t\t\t\tResourceResponse resourceResponse)\n\t\t\t\tthrows IOException, PortletException {\n\n\t\t\t\tPortletContext portletContext = getPortletContext();\n\n\t\t\t\tPortletRequestDispatcher portletRequestDispatcher =\n\t\t\t\t\tportletContext.getRequestDispatcher(\"/runtime_portlet.jsp\");\n\n\t\t\t\tportletRequestDispatcher.include(\n\t\t\t\t\tresourceRequest, resourceResponse);\n\t\t\t}\n\n\t\t};\n\n\t\tsetUpPortlet(\n\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\tTEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.RESOURCE_PHASE);\n\n\t\tString testRuntimePortletId = \"testRuntimePortletId\";\n\n\t\tTestPortlet testRuntimePortlet = new TestPortlet();\n\n\t\tsetUpPortlet(\n\t\t\ttestRuntimePortlet, new HashMapDictionary<String, Object>(),\n\t\t\ttestRuntimePortletId, false);\n\n\t\tportletURL.setParameter(\"testRuntimePortletId\", testRuntimePortletId);\n\n\t\tMap<String, List<String>> responseMap =\n\t\t\tPortletContainerTestUtil.request(portletURL.toString());\n\n\t\tAssert.assertEquals(\n\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\tAssert.assertTrue(testRuntimePortlet.isRenderCalled());\n\t}","id":48214,"modified_method":"@Test\n\tpublic void testIsAccessGrantedByRuntimePortlet() throws Exception {\n\t\ttestPortlet = new TestPortlet() {\n\n\t\t\t@Override\n\t\t\tpublic void serveResource(\n\t\t\t\t\tResourceRequest resourceRequest,\n\t\t\t\t\tResourceResponse resourceResponse)\n\t\t\t\tthrows IOException, PortletException {\n\n\t\t\t\tPortletContext portletContext = getPortletContext();\n\n\t\t\t\tPortletRequestDispatcher portletRequestDispatcher =\n\t\t\t\t\tportletContext.getRequestDispatcher(\"/runtime_portlet.jsp\");\n\n\t\t\t\tportletRequestDispatcher.include(\n\t\t\t\t\tresourceRequest, resourceResponse);\n\t\t\t}\n\n\t\t};\n\n\t\tsetUpPortlet(\n\t\t\ttestPortlet, new HashMapDictionary<String, Object>(),\n\t\t\tTEST_PORTLET_ID);\n\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\thttpServletRequest, TEST_PORTLET_ID, layout.getPlid(),\n\t\t\tPortletRequest.RESOURCE_PHASE);\n\n\t\tString testRuntimePortletId = \"testRuntimePortletId\";\n\n\t\tTestPortlet testRuntimePortlet = new TestPortlet();\n\n\t\tsetUpPortlet(\n\t\t\ttestRuntimePortlet, new HashMapDictionary<String, Object>(),\n\t\t\ttestRuntimePortletId, false);\n\n\t\tportletURL.setParameter(\"testRuntimePortletId\", testRuntimePortletId);\n\n\t\tResponse response = PortletContainerTestUtil.request(\n\t\t\tportletURL.toString());\n\n\t\tAssert.assertEquals(200, response.getCode());\n\t\tAssert.assertTrue(testRuntimePortlet.isRenderCalled());\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testInvalidPortletId() throws Exception {\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tString layoutURL = layout.getRegularURL(httpServletRequest);\n\n\t\tString url =\n\t\t\tlayoutURL +\n\t\t\t\t\"?p_p_id='\\\"><script>alert(1)<\/script>&p_p_lifecycle=2&\";\n\n\t\ttry (CaptureAppender captureAppender =\n\t\t\t\tLog4JLoggerTestUtil.configureLog4JLogger(\n\t\t\t\t\tSecurityPortletContainerWrapper.class.getName(),\n\t\t\t\t\tLevel.WARN)) {\n\n\t\t\tMap<String, List<String>> responseMap =\n\t\t\t\tPortletContainerTestUtil.request(url);\n\n\t\t\tList<LoggingEvent> loggingEvents =\n\t\t\t\tcaptureAppender.getLoggingEvents();\n\n\t\t\tAssert.assertEquals(2, loggingEvents.size());\n\n\t\t\tLoggingEvent loggingEvent = loggingEvents.get(0);\n\n\t\t\tAssert.assertEquals(\n\t\t\t\t\"Invalid portlet ID '\\\"><script>alert(1)<\/script>\",\n\t\t\t\tloggingEvent.getMessage());\n\n\t\t\tloggingEvent = loggingEvents.get(1);\n\n\t\t\tAssert.assertEquals(\n\t\t\t\t\"Reject serveResource for \" + layoutURL +\n\t\t\t\t\t\" on '\\\"><script>alert(1)<\/script>\",\n\t\t\t\tloggingEvent.getMessage());\n\n\t\t\tAssert.assertEquals(\n\t\t\t\t\"400\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\t\t}\n\t}","id":48215,"modified_method":"@Test\n\tpublic void testInvalidPortletId() throws Exception {\n\t\tHttpServletRequest httpServletRequest =\n\t\t\tPortletContainerTestUtil.getHttpServletRequest(group, layout);\n\n\t\tString layoutURL = layout.getRegularURL(httpServletRequest);\n\n\t\tString url =\n\t\t\tlayoutURL +\n\t\t\t\t\"?p_p_id='\\\"><script>alert(1)<\/script>&p_p_lifecycle=2&\";\n\n\t\ttry (CaptureAppender captureAppender =\n\t\t\t\tLog4JLoggerTestUtil.configureLog4JLogger(\n\t\t\t\t\tSecurityPortletContainerWrapper.class.getName(),\n\t\t\t\t\tLevel.WARN)) {\n\n\t\t\tResponse response = PortletContainerTestUtil.request(url);\n\n\t\t\tList<LoggingEvent> loggingEvents =\n\t\t\t\tcaptureAppender.getLoggingEvents();\n\n\t\t\tAssert.assertEquals(2, loggingEvents.size());\n\n\t\t\tLoggingEvent loggingEvent = loggingEvents.get(0);\n\n\t\t\tAssert.assertEquals(\n\t\t\t\t\"Invalid portlet ID '\\\"><script>alert(1)<\/script>\",\n\t\t\t\tloggingEvent.getMessage());\n\n\t\t\tloggingEvent = loggingEvents.get(1);\n\n\t\t\tAssert.assertEquals(\n\t\t\t\t\"Reject serveResource for \" + layoutURL +\n\t\t\t\t\t\" on '\\\"><script>alert(1)<\/script>\",\n\t\t\t\tloggingEvent.getMessage());\n\t\t\tAssert.assertEquals(400, response.getCode());\n\t\t}\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testUploadZeroBitsFile() throws Exception {\n\t\tregisterMVCActionCommand(new TestUploadMVCActionCommand());\n\n\t\tMap<String, List<String>> responseMap = testUpload(new byte[0]);\n\n\t\tAssert.assertEquals(\n\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\n\t\tString body = PortletContainerTestUtil.getString(responseMap, \"body\");\n\n\t\tJSONObject jsonObject = JSONFactoryUtil.createJSONObject(body);\n\n\t\tAssert.assertTrue(jsonObject.getBoolean(\"success\"));\n\n\t\t// verify the file was upload to the TestUploadPortlet store, but empty\n\n\t\tString key =\n\t\t\tgroup.getGroupId() + \"_0_\" +\n\t\t\t\tTestUploadPortlet.TEST_UPLOAD_FILE_NAME_PARAMETER;\n\n\t\tTestFileEntry actualTestFileEntry = TestUploadPortlet.get(key);\n\n\t\tAssert.assertNull(actualTestFileEntry.getInputStream());\n\t}","id":48216,"modified_method":"@Test\n\tpublic void testUploadZeroBitsFile() throws Exception {\n\t\tregisterMVCActionCommand(new TestUploadMVCActionCommand());\n\n\t\tResponse response = testUpload(new byte[0]);\n\n\t\tAssert.assertEquals(200, response.getCode());\n\n\t\tJSONObject jsonObject = JSONFactoryUtil.createJSONObject(\n\t\t\tresponse.getBody());\n\n\t\tAssert.assertTrue(jsonObject.getBoolean(\"success\"));\n\n\t\t// verify the file was upload to the TestUploadPortlet store, but empty\n\n\t\tString key =\n\t\t\tgroup.getGroupId() + \"_0_\" +\n\t\t\t\tTestUploadPortlet.TEST_UPLOAD_FILE_NAME_PARAMETER;\n\n\t\tTestFileEntry actualTestFileEntry = TestUploadPortlet.get(key);\n\n\t\tAssert.assertNull(actualTestFileEntry.getInputStream());\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected Map<String, List<String>> testUpload(byte[] bytes)\n\t\tthrows Exception {\n\n\t\tregisterMVCActionCommand(new TestUploadMVCActionCommand());\n\n\t\tLiferayServletRequest liferayServletRequest =\n\t\t\tPortletContainerTestUtil.getMultipartRequest(\n\t\t\t\tTestUploadPortlet.TEST_UPLOAD_FILE_NAME_PARAMETER, bytes);\n\n\t\t_addGroupAndLayoutToServletRequest(liferayServletRequest, layout);\n\n\t\tServletRequest servletRequest = liferayServletRequest.getRequest();\n\n\t\tMockMultipartHttpServletRequest mockServletRequest =\n\t\t\t(MockMultipartHttpServletRequest)servletRequest;\n\n\t\tPortletContainerTestUtil.PortalAuthentication portalAuthentication =\n\t\t\tPortletContainerTestUtil.getPortalAuthentication(\n\t\t\t\tmockServletRequest, layout,\n\t\t\t\tTestUploadPortlet.TEST_UPLOAD_PORTLET);\n\n\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\tmockServletRequest, TestUploadPortlet.TEST_UPLOAD_PORTLET,\n\t\t\tlayout.getPlid(), PortletRequest.ACTION_PHASE);\n\n\t\tportletURL.setParameter(\n\t\t\tActionRequest.ACTION_NAME, TestUploadPortlet.TEST_MVC_COMMAND_NAME);\n\t\tportletURL.setParameter(\"randomId\", RandomTestUtil.randomString());\n\n\t\tString url = portletURL.toString();\n\n\t\turl = HttpUtil.setParameter(\n\t\t\turl, \"p_auth\", portalAuthentication.getPortalAuthenticationToken());\n\n\t\tList<String> cookies = portalAuthentication.getCookies();\n\n\t\tmockServletRequest.addParameter(\n\t\t\t\"Cookie\", cookies.toArray(new String[cookies.size()]));\n\n\t\treturn PortletContainerTestUtil.postMultipart(\n\t\t\turl, mockServletRequest,\n\t\t\tTestUploadPortlet.TEST_UPLOAD_FILE_NAME_PARAMETER);\n\t}","id":48217,"modified_method":"protected Response testUpload(byte[] bytes) throws Exception {\n\t\tregisterMVCActionCommand(new TestUploadMVCActionCommand());\n\n\t\tLiferayServletRequest liferayServletRequest =\n\t\t\tPortletContainerTestUtil.getMultipartRequest(\n\t\t\t\tTestUploadPortlet.TEST_UPLOAD_FILE_NAME_PARAMETER, bytes);\n\n\t\t_addGroupAndLayoutToServletRequest(liferayServletRequest, layout);\n\n\t\tServletRequest servletRequest = liferayServletRequest.getRequest();\n\n\t\tMockMultipartHttpServletRequest mockServletRequest =\n\t\t\t(MockMultipartHttpServletRequest)servletRequest;\n\n\t\tResponse response = PortletContainerTestUtil.getPortalAuthentication(\n\t\t\tmockServletRequest, layout, TestUploadPortlet.TEST_UPLOAD_PORTLET);\n\n\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\tmockServletRequest, TestUploadPortlet.TEST_UPLOAD_PORTLET,\n\t\t\tlayout.getPlid(), PortletRequest.ACTION_PHASE);\n\n\t\tportletURL.setParameter(\n\t\t\tActionRequest.ACTION_NAME, TestUploadPortlet.TEST_MVC_COMMAND_NAME);\n\t\tportletURL.setParameter(\"randomId\", RandomTestUtil.randomString());\n\n\t\tString url = portletURL.toString();\n\n\t\turl = HttpUtil.setParameter(url, \"p_auth\", response.getBody());\n\n\t\tList<String> cookies = response.getCookies();\n\n\t\tmockServletRequest.addParameter(\n\t\t\t\"Cookie\", cookies.toArray(new String[cookies.size()]));\n\n\t\treturn PortletContainerTestUtil.postMultipart(\n\t\t\turl, mockServletRequest,\n\t\t\tTestUploadPortlet.TEST_UPLOAD_FILE_NAME_PARAMETER);\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testUploadFile() throws Exception {\n\t\tregisterMVCActionCommand(new TestUploadMVCActionCommand());\n\n\t\tInputStream inputStream = getClass().getResourceAsStream(\n\t\t\t\"/com/liferay/portal/portlet/container/upload/test/dependencies/\" +\n\t\t\t\t\"file_upload.txt\");\n\n\t\tbyte[] bytes = FileUtil.getBytes(inputStream);\n\n\t\tMap<String, List<String>> responseMap = testUpload(bytes);\n\n\t\tAssert.assertEquals(\n\t\t\t\"200\", PortletContainerTestUtil.getString(responseMap, \"code\"));\n\n\t\tString body = PortletContainerTestUtil.getString(responseMap, \"body\");\n\n\t\tJSONObject jsonObject = JSONFactoryUtil.createJSONObject(body);\n\n\t\tAssert.assertTrue(jsonObject.getBoolean(\"success\"));\n\n\t\tString key =\n\t\t\tgroup.getGroupId() + \"_0_\" +\n\t\t\t\tTestUploadPortlet.TEST_UPLOAD_FILE_NAME_PARAMETER;\n\n\t\t// verify the file was upload to the TestUploadPortlet store\n\n\t\tTestFileEntry actualTestFileEntry = TestUploadPortlet.get(key);\n\n\t\tAssert.assertNotNull(actualTestFileEntry);\n\n\t\tbyte[] actualBytes = FileUtil.getBytes(\n\t\t\tactualTestFileEntry.getInputStream());\n\n\t\tAssert.assertArrayEquals(bytes, actualBytes);\n\t}","id":48218,"modified_method":"@Test\n\tpublic void testUploadFile() throws Exception {\n\t\tregisterMVCActionCommand(new TestUploadMVCActionCommand());\n\n\t\tInputStream inputStream = getClass().getResourceAsStream(\n\t\t\t\"/com/liferay/portal/portlet/container/upload/test/dependencies/\" +\n\t\t\t\t\"file_upload.txt\");\n\n\t\tbyte[] bytes = FileUtil.getBytes(inputStream);\n\n\t\tResponse response = testUpload(bytes);\n\n\t\tAssert.assertEquals(200, response.getCode());\n\n\t\tJSONObject jsonObject = JSONFactoryUtil.createJSONObject(\n\t\t\tresponse.getBody());\n\n\t\tAssert.assertTrue(jsonObject.getBoolean(\"success\"));\n\n\t\tString key =\n\t\t\tgroup.getGroupId() + \"_0_\" +\n\t\t\t\tTestUploadPortlet.TEST_UPLOAD_FILE_NAME_PARAMETER;\n\n\t\t// verify the file was upload to the TestUploadPortlet store\n\n\t\tTestFileEntry actualTestFileEntry = TestUploadPortlet.get(key);\n\n\t\tAssert.assertNotNull(actualTestFileEntry);\n\n\t\tbyte[] actualBytes = FileUtil.getBytes(\n\t\t\tactualTestFileEntry.getInputStream());\n\n\t\tAssert.assertArrayEquals(bytes, actualBytes);\n\t}","commit_id":"f85bc5fefd3632f898602e0cd7dd88eeeab24a5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n         * Returns an unmodifiable Map mapping header keys to a List of header values.\n         * @return unmodifiable Map mapping header keys to a List of header values\n         * @see HttpURLConnection#getHeaderFields()\n         * @since 9232\n         */\n        public Map<String, List<String>> getHeaderFields() {\n            return connection.getHeaderFields();\n        }","id":48219,"modified_method":"/**\n         * Returns an unmodifiable Map mapping header keys to a List of header values.\n         * As per RFC 2616, section 4.2 header names are case insensitive, so returned map is also case insensitive\n         * @return unmodifiable Map mapping header keys to a List of header values\n         * @see HttpURLConnection#getHeaderFields()\n         * @since 9232\n         */\n        public Map<String, List<String>> getHeaderFields() {\n            // returned map from HttpUrlConnection is case sensitive, use case insensitive TreeMap to conform to RFC 2616\n            Map<String, List<String>> ret = new TreeMap<>(String.CASE_INSENSITIVE_ORDER);\n            for(Entry<String, List<String>> e: connection.getHeaderFields().entrySet()) {\n                if (e.getKey() != null) {\n                    ret.put(e.getKey(), e.getValue());\n                }\n            }\n            return Collections.unmodifiableMap(ret);\n        }","commit_id":"f1e26530b28aee70bc9f5d3db20a1ab21116a693","url":"https://github.com/openstreetmap/josm"},{"original_method":"@Test\n    public void testGet() throws Exception {\n        final HttpClient.Response response = HttpClient.create(new URL(\"https://httpbin.org/get?foo=bar\")).connect(progress);\n        assertThat(response.getRequestMethod(), is(\"GET\"));\n        assertThat(response.getResponseCode(), is(200));\n        assertThat(response.getResponseMessage(), is(\"OK\"));\n        assertThat(response.getContentType(), is(\"application/json\"));\n        assertThat(response.getHeaderField(\"Content-Type\"), is(\"application/json\"));\n        assertThat(response.getHeaderField(\"Content-TYPE\"), is(\"application/json\"));\n        assertThat(response.getHeaderFields().get(\"Content-Type\"), is(Collections.singletonList(\"application/json\")));\n        assertThat(response.getHeaderFields().get(\"Content-TYPE\"), nullValue());\n        try (final InputStream in = response.getContent();\n             final JsonReader json = JsonProvider.provider().createReader(in)) {\n            final JsonObject root = json.readObject();\n            assertThat(root.getJsonObject(\"args\").getString(\"foo\"), is(\"bar\"));\n            assertThat(root.getString(\"url\"), is(\"https://httpbin.org/get?foo=bar\"));\n        }\n    }","id":48220,"modified_method":"@Test\n    public void testGet() throws Exception {\n        final HttpClient.Response response = HttpClient.create(new URL(\"https://httpbin.org/get?foo=bar\")).connect(progress);\n        assertThat(response.getRequestMethod(), is(\"GET\"));\n        assertThat(response.getResponseCode(), is(200));\n        assertThat(response.getResponseMessage(), is(\"OK\"));\n        assertThat(response.getContentType(), is(\"application/json\"));\n        assertThat(response.getHeaderField(\"Content-Type\"), is(\"application/json\"));\n        assertThat(response.getHeaderField(\"Content-TYPE\"), is(\"application/json\"));\n        assertThat(response.getHeaderFields().get(\"Content-Type\"), is(Collections.singletonList(\"application/json\")));\n        assertThat(response.getHeaderFields().get(\"Content-TYPE\"), is(Collections.singletonList(\"application/json\")));\n        try (final InputStream in = response.getContent();\n             final JsonReader json = JsonProvider.provider().createReader(in)) {\n            final JsonObject root = json.readObject();\n            assertThat(root.getJsonObject(\"args\").getString(\"foo\"), is(\"bar\"));\n            assertThat(root.getString(\"url\"), is(\"https://httpbin.org/get?foo=bar\"));\n        }\n    }","commit_id":"f1e26530b28aee70bc9f5d3db20a1ab21116a693","url":"https://github.com/openstreetmap/josm"},{"original_method":"@Override\n        public void handleMessage(ByteBuffer message, Connection c) {\n            try {\n                final ClientResponseImpl error = handleRead(message, this, c);\n                if (error != null) {\n                    ByteBuffer buf = ByteBuffer.allocate(error.getSerializedSize());\n                    c.writeStream().enqueue(error.flattenToBuffer(buf));\n                }\n            } catch (Exception e) {\n                throw new RuntimeException(e);\n            }\n        }","id":48221,"modified_method":"@Override\n        public void handleMessage(ByteBuffer message, Connection c) {\n            try {\n                final ClientResponseImpl error = handleRead(message, this, c);\n                if (error != null) {\n                    ByteBuffer buf = ByteBuffer.allocate(error.getSerializedSize());\n                    error.flattenToBuffer(buf).flip();\n                    c.writeStream().enqueue(buf);\n                }\n            } catch (Exception e) {\n                throw new RuntimeException(e);\n            }\n        }","commit_id":"d294f0043f83d84008c0f9e81bd88ce46ee5fb7d","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static ComponentDto newFileDto(ComponentDto subProjectOrProject) {\n    return new ComponentDto()\n      .setUuid(UUID.randomUUID().toString())\n      .setProjectUuid(subProjectOrProject.projectUuid())\n      .setModuleUuid(!subProjectOrProject.scope().equals(Scopes.PROJECT) ? subProjectOrProject.uuid() : null)\n      .setModuleUuidPath(subProjectOrProject.moduleUuidPath() == null ? subProjectOrProject.uuid() : subProjectOrProject.moduleUuidPath() + \".\" + subProjectOrProject.uuid())\n      .setKey(\"file\")\n      .setName(\"File\")\n      .setLongName(\"File\")\n      .setSubProjectId(subProjectOrProject.getId())\n      .setScope(Scopes.FILE)\n      .setQualifier(Qualifiers.FILE)\n      .setPath(\"src/main/xoo/org/sonar/samples/File.xoo\")\n      .setLanguage(\"xoo\")\n      .setEnabled(true);\n  }","id":48222,"modified_method":"public static ComponentDto newFileDto(ComponentDto subProjectOrProject) {\n    return new ComponentDto()\n      .setUuid(UUID.randomUUID().toString())\n      .setProjectUuid(subProjectOrProject.projectUuid())\n      .setModuleUuid(subProjectOrProject.uuid())\n      .setModuleUuidPath(subProjectOrProject.moduleUuidPath() == null ? subProjectOrProject.uuid() : subProjectOrProject.moduleUuidPath() + \".\" + subProjectOrProject.uuid())\n      .setKey(\"file\")\n      .setName(\"File\")\n      .setLongName(\"File\")\n      .setSubProjectId(subProjectOrProject.getId())\n      .setScope(Scopes.FILE)\n      .setQualifier(Qualifiers.FILE)\n      .setPath(\"src/main/xoo/org/sonar/samples/File.xoo\")\n      .setLanguage(\"xoo\")\n      .setEnabled(true);\n  }","commit_id":"61242ad3110155c3b22028349d4bd5d0578244c0","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public static ComponentDto newModuleDto(ComponentDto subProjectOrProject) {\n    return new ComponentDto()\n      .setUuid(UUID.randomUUID().toString())\n      .setProjectUuid(subProjectOrProject.projectUuid())\n      .setModuleUuid(!subProjectOrProject.scope().equals(Scopes.PROJECT) ? subProjectOrProject.uuid() : null)\n      .setModuleUuidPath(subProjectOrProject.moduleUuidPath() == null ? subProjectOrProject.uuid() : subProjectOrProject.moduleUuidPath() + \".\" + subProjectOrProject.uuid())\n      .setKey(\"module\")\n      .setName(\"Module\")\n      .setLongName(\"Module\")\n      .setSubProjectId(subProjectOrProject.getId())\n      .setScope(Scopes.PROJECT)\n      .setQualifier(Qualifiers.MODULE)\n      .setPath(\"module\")\n      .setLanguage(null)\n      .setEnabled(true);\n  }","id":48223,"modified_method":"public static ComponentDto newModuleDto(ComponentDto subProjectOrProject) {\n    return new ComponentDto()\n      .setUuid(UUID.randomUUID().toString())\n      .setProjectUuid(subProjectOrProject.projectUuid())\n      .setModuleUuid(subProjectOrProject.uuid())\n      .setModuleUuidPath(subProjectOrProject.moduleUuidPath() == null ? subProjectOrProject.uuid() : subProjectOrProject.moduleUuidPath() + \".\" + subProjectOrProject.uuid())\n      .setKey(\"module\")\n      .setName(\"Module\")\n      .setLongName(\"Module\")\n      .setSubProjectId(subProjectOrProject.getId())\n      .setScope(Scopes.PROJECT)\n      .setQualifier(Qualifiers.MODULE)\n      .setPath(\"module\")\n      .setLanguage(null)\n      .setEnabled(true);\n  }","commit_id":"61242ad3110155c3b22028349d4bd5d0578244c0","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void get_by_key() throws Exception {\n    IssueDto issue = IssueTesting.newDto(rule, file, project);\n    db.issueDao().insert(session, issue);\n    session.commit();\n\n    Issue result = index.getByKey(issue.getKey());\n    IssueTesting.assertIsEquivalent(issue, result);\n  }","id":48224,"modified_method":"@Test\n  public void get_by_key() throws Exception {\n    IssueDto issue = IssueTesting.newDto(rule, file, project);\n    db.issueDao().insert(session, issue);\n    session.commit();\n\n    Issue result = index.getByKey(issue.getKey());\n    IssueTesting.assertIsEquivalent(issue, (IssueDoc) result);\n  }","commit_id":"61242ad3110155c3b22028349d4bd5d0578244c0","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void get_by_key_with_attributes() throws Exception {\n    IssueDto issue = IssueTesting.newDto(rule, file, project);\n    db.issueDao().insert(session, issue).setIssueAttributes(KeyValueFormat.format(ImmutableMap.of(\"jira-issue-key\", \"SONAR-1234\")));\n    session.commit();\n\n    Issue result = index.getByKey(issue.getKey());\n    IssueTesting.assertIsEquivalent(issue, result);\n\n    assertThat(result.attribute(\"jira-issue-key\")).isEqualTo(\"SONAR-1234\");\n  }","id":48225,"modified_method":"@Test\n  public void get_by_key_with_attributes() throws Exception {\n    IssueDto issue = IssueTesting.newDto(rule, file, project);\n    db.issueDao().insert(session, issue).setIssueAttributes(KeyValueFormat.format(ImmutableMap.of(\"jira-issue-key\", \"SONAR-1234\")));\n    session.commit();\n\n    Issue result = index.getByKey(issue.getKey());\n    IssueTesting.assertIsEquivalent(issue, (IssueDoc) result);\n\n    assertThat(result.attribute(\"jira-issue-key\")).isEqualTo(\"SONAR-1234\");\n  }","commit_id":"61242ad3110155c3b22028349d4bd5d0578244c0","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public List<UpdateRequest> normalize(IssueDto dto) {\n    Map<String, Object> update = newHashMap();\n\n    Preconditions.checkNotNull(dto.getProjectUuid(), \"Project uuid is null on issue %s\", dto.getKey());\n    Preconditions.checkNotNull(dto.getComponentUuid(), \"Component uuid is null on issue %s\", dto.getKey());\n\n    update.put(\"_parent\", dto.getProjectUuid());\n    update.put(IssueField.KEY.field(), dto.getKey());\n    update.put(IssueField.UPDATED_AT.field(), dto.getUpdatedAt());\n    update.put(IssueField.CREATED_AT.field(), dto.getCreatedAt());\n\n    update.put(IssueField.ACTION_PLAN.field(), dto.getActionPlanKey());\n    update.put(IssueField.ATTRIBUTES.field(), dto.getIssueAttributes());\n    update.put(IssueField.ASSIGNEE.field(), dto.getAssignee());\n    update.put(IssueField.AUTHOR_LOGIN.field(), dto.getAuthorLogin());\n    update.put(IssueField.ISSUE_CLOSE_DATE.field(), dto.getIssueCloseDate());\n    update.put(IssueField.PROJECT.field(), dto.getProjectUuid());\n    update.put(IssueField.MODULE_PATH.field(), dto.getModuleUuidPath());\n    update.put(IssueField.COMPONENT.field(), dto.getComponentUuid());\n    update.put(IssueField.ISSUE_CREATED_AT.field(), dto.getIssueCreationDate());\n    update.put(IssueField.ISSUE_UPDATED_AT.field(), dto.getIssueUpdateDate());\n    update.put(IssueField.EFFORT.field(), dto.getEffortToFix());\n    update.put(IssueField.RESOLUTION.field(), dto.getResolution());\n    update.put(IssueField.LINE.field(), dto.getLine());\n    update.put(IssueField.MESSAGE.field(), dto.getMessage());\n    update.put(IssueField.REPORTER.field(), dto.getReporter());\n    update.put(IssueField.STATUS.field(), dto.getStatus());\n    update.put(IssueField.SEVERITY.field(), dto.getSeverity());\n    update.put(IssueField.SEVERITY_VALUE.field(), Severity.ALL.indexOf(dto.getSeverity()));\n    update.put(IssueField.DEBT.field(), dto.getDebt());\n    update.put(IssueField.LANGUAGE.field(), dto.getLanguage());\n    update.put(IssueField.RULE_KEY.field(), dto.getRuleKey().toString());\n\n    /** Upsert elements */\n    Map<String, Object> upsert = getUpsertFor(IssueField.ALL_FIELDS, update);\n    upsert.put(IssueField.KEY.field(), dto.getKey());\n\n    return ImmutableList.of(\n      new UpdateRequest()\n        .id(dto.getKey())\n        .routing(dto.getProjectUuid())\n        .parent(dto.getProjectUuid())\n        .doc(update)\n        .upsert(upsert));\n  }","id":48226,"modified_method":"@Override\n  public List<UpdateRequest> normalize(IssueDto dto) {\n    Map<String, Object> update = newHashMap();\n\n    Preconditions.checkNotNull(dto.getProjectUuid(), \"Project uuid is null on issue %s\", dto.getKey());\n    Preconditions.checkNotNull(dto.getComponentUuid(), \"Component uuid is null on issue %s\", dto.getKey());\n\n    update.put(\"_parent\", dto.getProjectUuid());\n    update.put(IssueField.KEY.field(), dto.getKey());\n    update.put(IssueField.UPDATED_AT.field(), dto.getUpdatedAt());\n    update.put(IssueField.CREATED_AT.field(), dto.getCreatedAt());\n\n    update.put(IssueField.PROJECT.field(), dto.getProjectUuid());\n    update.put(IssueField.COMPONENT.field(), dto.getComponentUuid());\n    update.put(IssueField.MODULE.field(), dto.getModuleUuid());\n    update.put(IssueField.MODULE_PATH.field(), dto.getModuleUuidPath());\n\n    update.put(IssueField.ACTION_PLAN.field(), dto.getActionPlanKey());\n    update.put(IssueField.ATTRIBUTES.field(), dto.getIssueAttributes());\n    update.put(IssueField.ASSIGNEE.field(), dto.getAssignee());\n    update.put(IssueField.AUTHOR_LOGIN.field(), dto.getAuthorLogin());\n    update.put(IssueField.ISSUE_CLOSE_DATE.field(), dto.getIssueCloseDate());\n    update.put(IssueField.ISSUE_CREATED_AT.field(), dto.getIssueCreationDate());\n    update.put(IssueField.ISSUE_UPDATED_AT.field(), dto.getIssueUpdateDate());\n    update.put(IssueField.EFFORT.field(), dto.getEffortToFix());\n    update.put(IssueField.RESOLUTION.field(), dto.getResolution());\n    update.put(IssueField.LINE.field(), dto.getLine());\n    update.put(IssueField.MESSAGE.field(), dto.getMessage());\n    update.put(IssueField.REPORTER.field(), dto.getReporter());\n    update.put(IssueField.STATUS.field(), dto.getStatus());\n    update.put(IssueField.SEVERITY.field(), dto.getSeverity());\n    update.put(IssueField.SEVERITY_VALUE.field(), Severity.ALL.indexOf(dto.getSeverity()));\n    update.put(IssueField.DEBT.field(), dto.getDebt());\n    update.put(IssueField.LANGUAGE.field(), dto.getLanguage());\n    update.put(IssueField.RULE_KEY.field(), dto.getRuleKey().toString());\n\n    /** Upsert elements */\n    Map<String, Object> upsert = getUpsertFor(IssueField.ALL_FIELDS, update);\n    upsert.put(IssueField.KEY.field(), dto.getKey());\n\n    return ImmutableList.of(\n      new UpdateRequest()\n        .id(dto.getKey())\n        .routing(dto.getProjectUuid())\n        .parent(dto.getProjectUuid())\n        .doc(update)\n        .upsert(upsert));\n  }","commit_id":"61242ad3110155c3b22028349d4bd5d0578244c0","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void do_transition() {\n    IssueDto issue = newIssue().setStatus(Issue.STATUS_OPEN);\n    tester.get(IssueDao.class).insert(session, issue);\n    session.commit();\n\n    assertThat(db.issueDao().getByKey(session, issue.getKey())).isNotNull();\n    IssueTesting.assertIsEquivalent(issue, indexClient.get(IssueIndex.class).getByKey(issue.getKey()));\n\n    assertThat(indexClient.get(IssueIndex.class).getByKey(issue.getKey()).status()).isEqualTo(Issue.STATUS_OPEN);\n\n    service.doTransition(issue.getKey(), DefaultTransitions.CONFIRM);\n\n    assertThat(indexClient.get(IssueIndex.class).getByKey(issue.getKey()).status()).isEqualTo(Issue.STATUS_CONFIRMED);\n  }","id":48227,"modified_method":"@Test\n  public void do_transition() {\n    IssueDto issue = newIssue().setStatus(Issue.STATUS_OPEN);\n    tester.get(IssueDao.class).insert(session, issue);\n    session.commit();\n\n    assertThat(db.issueDao().getByKey(session, issue.getKey())).isNotNull();\n    IssueTesting.assertIsEquivalent(issue, (IssueDoc) indexClient.get(IssueIndex.class).getByKey(issue.getKey()));\n\n    assertThat(indexClient.get(IssueIndex.class).getByKey(issue.getKey()).status()).isEqualTo(Issue.STATUS_OPEN);\n\n    service.doTransition(issue.getKey(), DefaultTransitions.CONFIRM);\n\n    assertThat(indexClient.get(IssueIndex.class).getByKey(issue.getKey()).status()).isEqualTo(Issue.STATUS_CONFIRMED);\n  }","commit_id":"61242ad3110155c3b22028349d4bd5d0578244c0","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public static void assertIsEquivalent(IssueDto dto, Issue issue) {\n    assertThat(issue).isNotNull();\n    assertThat(dto).isNotNull();\n\n    assertThat(issue.key()).isEqualTo(dto.getKey());\n    assertThat(issue.actionPlanKey()).isEqualTo(dto.getActionPlanKey());\n    assertThat(issue.assignee()).isEqualTo(dto.getAssignee());\n    assertThat(issue.authorLogin()).isEqualTo(dto.getAuthorLogin());\n    assertThat(issue.closeDate()).isEqualTo(dto.getIssueCloseDate());\n    assertThat(issue.effortToFix()).isEqualTo(dto.getEffortToFix());\n    assertThat(issue.resolution()).isEqualTo(dto.getResolution());\n    assertThat(issue.ruleKey()).isEqualTo(RuleKey.of(dto.getRuleRepo(), dto.getRule()));\n    assertThat(issue.line()).isEqualTo(dto.getLine());\n    assertThat(issue.message()).isEqualTo(dto.getMessage());\n    assertThat(issue.reporter()).isEqualTo(dto.getReporter());\n    assertThat(issue.language()).isEqualTo(dto.getLanguage());\n    assertThat(issue.status()).isEqualTo(dto.getStatus());\n    assertThat(issue.severity()).isEqualTo(dto.getSeverity());\n\n    assertThat(issue.attributes()).isEqualTo(KeyValueFormat.parse(dto.getIssueAttributes()));\n\n    assertThat(issue.creationDate()).isEqualTo(dto.getIssueCreationDate());\n    assertThat(issue.updateDate()).isEqualTo(dto.getIssueUpdateDate());\n    assertThat(issue.closeDate()).isEqualTo(dto.getIssueCloseDate());\n  }","id":48228,"modified_method":"public static void assertIsEquivalent(IssueDto dto, IssueDoc issue) {\n    assertThat(issue).isNotNull();\n    assertThat(dto).isNotNull();\n\n    assertThat(issue.key()).isEqualTo(dto.getKey());\n    assertThat(issue.componentUuid()).isEqualTo(dto.getComponentUuid());\n    assertThat(issue.moduleUuid()).isEqualTo(dto.getModuleUuid());\n    assertThat(issue.projectUuid()).isEqualTo(dto.getProjectUuid());\n\n    assertThat(issue.actionPlanKey()).isEqualTo(dto.getActionPlanKey());\n    assertThat(issue.assignee()).isEqualTo(dto.getAssignee());\n    assertThat(issue.authorLogin()).isEqualTo(dto.getAuthorLogin());\n    assertThat(issue.closeDate()).isEqualTo(dto.getIssueCloseDate());\n    assertThat(issue.effortToFix()).isEqualTo(dto.getEffortToFix());\n    assertThat(issue.resolution()).isEqualTo(dto.getResolution());\n    assertThat(issue.ruleKey()).isEqualTo(RuleKey.of(dto.getRuleRepo(), dto.getRule()));\n    assertThat(issue.line()).isEqualTo(dto.getLine());\n    assertThat(issue.message()).isEqualTo(dto.getMessage());\n    assertThat(issue.reporter()).isEqualTo(dto.getReporter());\n    assertThat(issue.language()).isEqualTo(dto.getLanguage());\n    assertThat(issue.status()).isEqualTo(dto.getStatus());\n    assertThat(issue.severity()).isEqualTo(dto.getSeverity());\n\n    assertThat(issue.attributes()).isEqualTo(KeyValueFormat.parse(dto.getIssueAttributes()));\n\n    assertThat(issue.creationDate()).isEqualTo(dto.getIssueCreationDate());\n    assertThat(issue.updateDate()).isEqualTo(dto.getIssueUpdateDate());\n    assertThat(issue.closeDate()).isEqualTo(dto.getIssueCloseDate());\n  }","commit_id":"61242ad3110155c3b22028349d4bd5d0578244c0","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void delete(DbSession dbSession, ComponentDto project) {\n    if (hasNotProjectScope(project) || isNotDeletable(project)) {\n      throw new IllegalArgumentException(\"Only projects can be deleted\");\n    }\n    dbClient.purgeDao().deleteResourceTree(dbSession, new IdUuidPair(project.getId(), project.uuid()), new PurgeProfiler());\n    dbSession.commit();\n\n    deleteFromIndices(project.uuid());\n  }","id":48229,"modified_method":"private void delete(DbSession dbSession, ComponentDto project) {\n    if (hasNotProjectScope(project) || isNotDeletable(project)) {\n      throw new IllegalArgumentException(\"Only projects can be deleted\");\n    }\n    dbClient.purgeDao().deleteProject(dbSession, project.uuid());\n    dbSession.commit();\n\n    deleteFromIndices(project.uuid());\n  }","commit_id":"62c31297a82541d5e1e46515155c224366ebf890","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public MyBatis start() {\n    LogFactory.useSlf4jLogging();\n\n    MyBatisConfBuilder confBuilder = new MyBatisConfBuilder(database);\n\n    confBuilder.loadAlias(\"ActiveDashboard\", ActiveDashboardDto.class);\n    confBuilder.loadAlias(\"Author\", AuthorDto.class);\n    confBuilder.loadAlias(\"Component\", ComponentDto.class);\n    confBuilder.loadAlias(\"ComponentLink\", ComponentLinkDto.class);\n    confBuilder.loadAlias(\"Dashboard\", DashboardDto.class);\n    confBuilder.loadAlias(\"DuplicationUnit\", DuplicationUnitDto.class);\n    confBuilder.loadAlias(\"Group\", GroupDto.class);\n    confBuilder.loadAlias(\"GroupRole\", GroupRoleDto.class);\n    confBuilder.loadAlias(\"GroupMembership\", GroupMembershipDto.class);\n    confBuilder.loadAlias(\"LoadedTemplate\", LoadedTemplateDto.class);\n    confBuilder.loadAlias(\"MeasureFilter\", MeasureFilterDto.class);\n    confBuilder.loadAlias(\"NotificationQueue\", NotificationQueueDto.class);\n    confBuilder.loadAlias(\"Property\", PropertyDto.class);\n    confBuilder.loadAlias(\"PurgeableSnapshot\", PurgeableSnapshotDto.class);\n    confBuilder.loadAlias(\"QualityGate\", QualityGateDto.class);\n    confBuilder.loadAlias(\"QualityGateCondition\", QualityGateConditionDto.class);\n    confBuilder.loadAlias(\"ProjectQgateAssociation\", ProjectQgateAssociationDto.class);\n    confBuilder.loadAlias(\"Resource\", ResourceDto.class);\n    confBuilder.loadAlias(\"ResourceIndex\", ResourceIndexDto.class);\n    confBuilder.loadAlias(\"Rule\", RuleDto.class);\n    confBuilder.loadAlias(\"RuleParam\", RuleParamDto.class);\n    confBuilder.loadAlias(\"Snapshot\", SnapshotDto.class);\n    confBuilder.loadAlias(\"SchemaMigration\", SchemaMigrationDto.class);\n    confBuilder.loadAlias(\"User\", UserDto.class);\n    confBuilder.loadAlias(\"UserRole\", UserRoleDto.class);\n    confBuilder.loadAlias(\"UserGroup\", UserGroupDto.class);\n    confBuilder.loadAlias(\"Widget\", WidgetDto.class);\n    confBuilder.loadAlias(\"WidgetProperty\", WidgetPropertyDto.class);\n    confBuilder.loadAlias(\"Measure\", MeasureDto.class);\n    confBuilder.loadAlias(\"Issue\", IssueDto.class);\n    confBuilder.loadAlias(\"IssueChange\", IssueChangeDto.class);\n    confBuilder.loadAlias(\"IssueFilter\", IssueFilterDto.class);\n    confBuilder.loadAlias(\"IssueFilterFavourite\", IssueFilterFavouriteDto.class);\n    confBuilder.loadAlias(\"ActionPlanIssue\", ActionPlanDto.class);\n    confBuilder.loadAlias(\"ActionPlanStats\", ActionPlanStatsDto.class);\n    confBuilder.loadAlias(\"PermissionTemplate\", PermissionTemplateDto.class);\n    confBuilder.loadAlias(\"PermissionTemplateUser\", PermissionTemplateUserDto.class);\n    confBuilder.loadAlias(\"PermissionTemplateGroup\", PermissionTemplateGroupDto.class);\n    confBuilder.loadAlias(\"Characteristic\", CharacteristicDto.class);\n    confBuilder.loadAlias(\"UserWithPermission\", UserWithPermissionDto.class);\n    confBuilder.loadAlias(\"GroupWithPermission\", GroupWithPermissionDto.class);\n    confBuilder.loadAlias(\"QualityProfile\", QualityProfileDto.class);\n    confBuilder.loadAlias(\"ActiveRule\", ActiveRuleDto.class);\n    confBuilder.loadAlias(\"ActiveRuleParam\", ActiveRuleParamDto.class);\n    confBuilder.loadAlias(\"RequirementMigration\", RequirementMigrationDto.class);\n    confBuilder.loadAlias(\"Activity\", ActivityDto.class);\n    confBuilder.loadAlias(\"AnalysisReport\", AnalysisReportDto.class);\n    confBuilder.loadAlias(\"IdUuidPair\", IdUuidPair.class);\n    confBuilder.loadAlias(\"FilePathWithHash\", FilePathWithHashDto.class);\n    confBuilder.loadAlias(\"UuidWithProjectUuid\", UuidWithProjectUuidDto.class);\n    confBuilder.loadAlias(\"Event\", EventDto.class);\n    confBuilder.loadAlias(\"CustomMeasure\", CustomMeasureDto.class);\n    confBuilder.loadAlias(\"ViewsComponent\", ViewsComponentDto.class);\n    confBuilder.loadAlias(\"ViewsSnapshot\", ViewsSnapshotDto.class);\n\n    // AuthorizationMapper has to be loaded before IssueMapper because this last one used it\n    confBuilder.loadMapper(\"org.sonar.db.user.AuthorizationMapper\");\n    // ResourceMapper has to be loaded before IssueMapper because this last one used it\n    confBuilder.loadMapper(ResourceMapper.class);\n\n    confBuilder.loadMapper(\"org.sonar.db.permission.PermissionMapper\");\n    Class<?>[] mappers = {ActivityMapper.class, ActiveDashboardMapper.class, AuthorMapper.class, DashboardMapper.class,\n      DuplicationMapper.class,\n      IssueMapper.class, IssueChangeMapper.class, IssueFilterMapper.class, IssueFilterFavouriteMapper.class,\n      IsAliveMapper.class,\n      LoadedTemplateMapper.class, MeasureFilterMapper.class, PermissionTemplateMapper.class, PropertiesMapper.class, PurgeMapper.class,\n      ResourceKeyUpdaterMapper.class, ResourceIndexMapper.class, RoleMapper.class, RuleMapper.class,\n      SchemaMigrationMapper.class, UserMapper.class, GroupMapper.class, UserGroupMapper.class, WidgetMapper.class, WidgetPropertyMapper.class,\n      FileSourceMapper.class, ActionPlanMapper.class,\n      ActionPlanStatsMapper.class,\n      NotificationQueueMapper.class, CharacteristicMapper.class,\n      GroupMembershipMapper.class, QualityProfileMapper.class, ActiveRuleMapper.class,\n      MeasureMapper.class, MetricMapper.class, CustomMeasureMapper.class, QualityGateMapper.class, QualityGateConditionMapper.class, ComponentMapper.class, SnapshotMapper.class,\n      ProjectQgateAssociationMapper.class, EventMapper.class,\n      AnalysisReportMapper.class, ComponentLinkMapper.class,\n      Migration45Mapper.class, Migration50Mapper.class\n    };\n    confBuilder.loadMappers(mappers);\n\n    sessionFactory = new SqlSessionFactoryBuilder().build(confBuilder.build());\n    return this;\n  }","id":48230,"modified_method":"public MyBatis start() {\n    LogFactory.useSlf4jLogging();\n\n    MyBatisConfBuilder confBuilder = new MyBatisConfBuilder(database);\n\n    confBuilder.loadAlias(\"ActiveDashboard\", ActiveDashboardDto.class);\n    confBuilder.loadAlias(\"Author\", AuthorDto.class);\n    confBuilder.loadAlias(\"Component\", ComponentDto.class);\n    confBuilder.loadAlias(\"ComponentLink\", ComponentLinkDto.class);\n    confBuilder.loadAlias(\"Dashboard\", DashboardDto.class);\n    confBuilder.loadAlias(\"DuplicationUnit\", DuplicationUnitDto.class);\n    confBuilder.loadAlias(\"Group\", GroupDto.class);\n    confBuilder.loadAlias(\"GroupRole\", GroupRoleDto.class);\n    confBuilder.loadAlias(\"GroupMembership\", GroupMembershipDto.class);\n    confBuilder.loadAlias(\"LoadedTemplate\", LoadedTemplateDto.class);\n    confBuilder.loadAlias(\"MeasureFilter\", MeasureFilterDto.class);\n    confBuilder.loadAlias(\"NotificationQueue\", NotificationQueueDto.class);\n    confBuilder.loadAlias(\"Property\", PropertyDto.class);\n    confBuilder.loadAlias(\"PurgeableSnapshot\", PurgeableSnapshotDto.class);\n    confBuilder.loadAlias(\"QualityGate\", QualityGateDto.class);\n    confBuilder.loadAlias(\"QualityGateCondition\", QualityGateConditionDto.class);\n    confBuilder.loadAlias(\"ProjectQgateAssociation\", ProjectQgateAssociationDto.class);\n    confBuilder.loadAlias(\"Resource\", ResourceDto.class);\n    confBuilder.loadAlias(\"ResourceIndex\", ResourceIndexDto.class);\n    confBuilder.loadAlias(\"Rule\", RuleDto.class);\n    confBuilder.loadAlias(\"RuleParam\", RuleParamDto.class);\n    confBuilder.loadAlias(\"Snapshot\", SnapshotDto.class);\n    confBuilder.loadAlias(\"SchemaMigration\", SchemaMigrationDto.class);\n    confBuilder.loadAlias(\"User\", UserDto.class);\n    confBuilder.loadAlias(\"UserRole\", UserRoleDto.class);\n    confBuilder.loadAlias(\"UserGroup\", UserGroupDto.class);\n    confBuilder.loadAlias(\"Widget\", WidgetDto.class);\n    confBuilder.loadAlias(\"WidgetProperty\", WidgetPropertyDto.class);\n    confBuilder.loadAlias(\"Measure\", MeasureDto.class);\n    confBuilder.loadAlias(\"Issue\", IssueDto.class);\n    confBuilder.loadAlias(\"IssueChange\", IssueChangeDto.class);\n    confBuilder.loadAlias(\"IssueFilter\", IssueFilterDto.class);\n    confBuilder.loadAlias(\"IssueFilterFavourite\", IssueFilterFavouriteDto.class);\n    confBuilder.loadAlias(\"ActionPlanIssue\", ActionPlanDto.class);\n    confBuilder.loadAlias(\"ActionPlanStats\", ActionPlanStatsDto.class);\n    confBuilder.loadAlias(\"PermissionTemplate\", PermissionTemplateDto.class);\n    confBuilder.loadAlias(\"PermissionTemplateUser\", PermissionTemplateUserDto.class);\n    confBuilder.loadAlias(\"PermissionTemplateGroup\", PermissionTemplateGroupDto.class);\n    confBuilder.loadAlias(\"Characteristic\", CharacteristicDto.class);\n    confBuilder.loadAlias(\"UserWithPermission\", UserWithPermissionDto.class);\n    confBuilder.loadAlias(\"GroupWithPermission\", GroupWithPermissionDto.class);\n    confBuilder.loadAlias(\"QualityProfile\", QualityProfileDto.class);\n    confBuilder.loadAlias(\"ActiveRule\", ActiveRuleDto.class);\n    confBuilder.loadAlias(\"ActiveRuleParam\", ActiveRuleParamDto.class);\n    confBuilder.loadAlias(\"RequirementMigration\", RequirementMigrationDto.class);\n    confBuilder.loadAlias(\"Activity\", ActivityDto.class);\n    confBuilder.loadAlias(\"AnalysisReport\", AnalysisReportDto.class);\n    confBuilder.loadAlias(\"FilePathWithHash\", FilePathWithHashDto.class);\n    confBuilder.loadAlias(\"UuidWithProjectUuid\", UuidWithProjectUuidDto.class);\n    confBuilder.loadAlias(\"Event\", EventDto.class);\n    confBuilder.loadAlias(\"CustomMeasure\", CustomMeasureDto.class);\n    confBuilder.loadAlias(\"ViewsComponent\", ViewsComponentDto.class);\n    confBuilder.loadAlias(\"ViewsSnapshot\", ViewsSnapshotDto.class);\n\n    // AuthorizationMapper has to be loaded before IssueMapper because this last one used it\n    confBuilder.loadMapper(\"org.sonar.db.user.AuthorizationMapper\");\n    // ResourceMapper has to be loaded before IssueMapper because this last one used it\n    confBuilder.loadMapper(ResourceMapper.class);\n\n    confBuilder.loadMapper(\"org.sonar.db.permission.PermissionMapper\");\n    Class<?>[] mappers = {ActivityMapper.class, ActiveDashboardMapper.class, AuthorMapper.class, DashboardMapper.class,\n      DuplicationMapper.class,\n      IssueMapper.class, IssueChangeMapper.class, IssueFilterMapper.class, IssueFilterFavouriteMapper.class,\n      IsAliveMapper.class,\n      LoadedTemplateMapper.class, MeasureFilterMapper.class, PermissionTemplateMapper.class, PropertiesMapper.class, PurgeMapper.class,\n      ResourceKeyUpdaterMapper.class, ResourceIndexMapper.class, RoleMapper.class, RuleMapper.class,\n      SchemaMigrationMapper.class, UserMapper.class, GroupMapper.class, UserGroupMapper.class, WidgetMapper.class, WidgetPropertyMapper.class,\n      FileSourceMapper.class, ActionPlanMapper.class,\n      ActionPlanStatsMapper.class,\n      NotificationQueueMapper.class, CharacteristicMapper.class,\n      GroupMembershipMapper.class, QualityProfileMapper.class, ActiveRuleMapper.class,\n      MeasureMapper.class, MetricMapper.class, CustomMeasureMapper.class, QualityGateMapper.class, QualityGateConditionMapper.class, ComponentMapper.class, SnapshotMapper.class,\n      ProjectQgateAssociationMapper.class, EventMapper.class,\n      AnalysisReportMapper.class, ComponentLinkMapper.class,\n      Migration45Mapper.class, Migration50Mapper.class\n    };\n    confBuilder.loadMappers(mappers);\n\n    sessionFactory = new SqlSessionFactoryBuilder().build(confBuilder.build());\n    return this;\n  }","commit_id":"62c31297a82541d5e1e46515155c224366ebf890","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private static void deleteProject(IdUuidPair rootProjectId, PurgeMapper mapper, PurgeCommands commands) {\n    List<IdUuidPair> childrenIdUuid = mapper.selectProjectIdUuidsByRootId(rootProjectId.getId());\n    for (IdUuidPair childId : childrenIdUuid) {\n      deleteProject(childId, mapper, commands);\n    }\n\n    List<IdUuidPair> componentIdUuids = mapper.selectComponentIdUuidsByRootId(rootProjectId.getId());\n    commands.deleteResources(componentIdUuids);\n  }","id":48231,"modified_method":"private static void deleteProject(String rootUuid, PurgeMapper mapper, PurgeCommands commands) {\n    List<IdUuidPair> childrenIds = mapper.selectComponentsByProjectUuid(rootUuid);\n    commands.deleteResources(childrenIds);\n  }","commit_id":"62c31297a82541d5e1e46515155c224366ebf890","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_delete_project_and_associated_data() {\n    dbTester.prepareDbUnit(getClass(), \"shouldDeleteProject.xml\");\n    underTest.deleteResourceTree(new IdUuidPair(1L, \"A\"), new PurgeProfiler());\n    assertThat(dbTester.countRowsOfTable(\"projects\")).isZero();\n    assertThat(dbTester.countRowsOfTable(\"snapshots\")).isZero();\n    assertThat(dbTester.countRowsOfTable(\"action_plans\")).isZero();\n    assertThat(dbTester.countRowsOfTable(\"issues\")).isZero();\n    assertThat(dbTester.countRowsOfTable(\"issue_changes\")).isZero();\n    assertThat(dbTester.countRowsOfTable(\"file_sources\")).isZero();\n  }","id":48232,"modified_method":"@Test\n  public void delete_project_and_associated_data() {\n    dbTester.prepareDbUnit(getClass(), \"shouldDeleteProject.xml\");\n    underTest.deleteProject(dbSession, \"A\");\n    dbSession.commit();\n    assertThat(dbTester.countRowsOfTable(\"projects\")).isZero();\n    assertThat(dbTester.countRowsOfTable(\"snapshots\")).isZero();\n    assertThat(dbTester.countRowsOfTable(\"action_plans\")).isZero();\n    assertThat(dbTester.countRowsOfTable(\"issues\")).isZero();\n    assertThat(dbTester.countRowsOfTable(\"issue_changes\")).isZero();\n    assertThat(dbTester.countRowsOfTable(\"file_sources\")).isZero();\n  }","commit_id":"62c31297a82541d5e1e46515155c224366ebf890","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void delete(String projectKey) {\n    DbSession session = dbClient.openSession(false);\n    try {\n      AuthorizedComponentDto project = dbClient.componentDao().getAuthorizedComponentByKey(projectKey, session);\n      if (!Scopes.PROJECT.equals(project.scope())) {\n        throw new IllegalArgumentException(\"Only project can be deleted\");\n      }\n      purgeDao.deleteResourceTree(project.getId());\n      deletePermissionIndexes(session, project.uuid());\n      session.commit();\n    } finally {\n      session.close();\n    }\n  }","id":48233,"modified_method":"public void delete(String projectKey) {\n    DbSession session = dbClient.openSession(false);\n    try {\n      AuthorizedComponentDto project = dbClient.componentDao().getAuthorizedComponentByKey(projectKey, session);\n      if (!Scopes.PROJECT.equals(project.scope())) {\n        throw new IllegalArgumentException(\"Only project can be deleted\");\n      }\n      purgeDao.deleteResourceTree(project.getId());\n      String uuid = project.uuid();\n      if (uuid != null) {\n        deletePermissionIndexes(session, uuid);\n      }\n      session.commit();\n    } finally {\n      session.close();\n    }\n  }","commit_id":"8e0036b88494eec45a570694e8a19d645eb6b7b9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void synchronizePermissions(DbSession session, String projectUuid) {\n    dbClient.issueAuthorizationDao().synchronizeAfter(session,\n      index.get(IssueAuthorizationIndex.class).getLastSynchronization(),\n      ImmutableMap.of(IssueAuthorizationDao.PROJECT_UUID, projectUuid));\n  }","id":48234,"modified_method":"public void synchronizePermissions(DbSession session, @Nullable String projectUuid) {\n    if (projectUuid != null) {\n      // Views and Dev Cockpit have no uuid, but it's not an problem because they are not existing in the issue authorization index, so there's nothing to remove\n      dbClient.issueAuthorizationDao().synchronizeAfter(session,\n        index.get(IssueAuthorizationIndex.class).getLastSynchronization(),\n        ImmutableMap.of(IssueAuthorizationDao.PROJECT_UUID, projectUuid));\n    } else {\n      // TODO Set this log in debug mode to not poluate the logs.\n      LOG.info(\"Try to synchronize issues permissions on a project without UUID, ignore\");\n    }\n  }","commit_id":"8e0036b88494eec45a570694e8a19d645eb6b7b9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void synchronizeProjectPermissionsIfNotFound(DbSession session, String projectKey) {\n    if (index.get(IssueAuthorizationIndex.class).getNullableByKey(projectKey) == null) {\n      // TODO Remove this db call by inserting the project uuid in the report\n      AuthorizedComponentDto project = dbClient.componentDao().getAuthorizedComponentByKey(projectKey, session);\n      String uuid = project.uuid();\n      if (uuid == null) {\n        throw new IllegalArgumentException(String.format(\"No uuid for project %s\", project));\n      }\n      permissionService.synchronizePermissions(session, uuid);\n      session.commit();\n    }\n  }","id":48235,"modified_method":"private void synchronizeProjectPermissionsIfNotFound(DbSession session, String projectKey) {\n    if (index.get(IssueAuthorizationIndex.class).getNullableByKey(projectKey) == null) {\n      // TODO Remove this db call by inserting the project uuid in the report\n      AuthorizedComponentDto project = dbClient.componentDao().getAuthorizedComponentByKey(projectKey, session);\n      permissionService.synchronizePermissions(session, project.uuid());\n      session.commit();\n    }\n  }","commit_id":"8e0036b88494eec45a570694e8a19d645eb6b7b9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\r\n  public Expr comp(final QueryContext ctx) throws QueryException {\r\n    for(int c = 0; c < ctch.length; ++c) {\r\n      ctch[c] = ((Catch) checkUp(ctch[c], ctx)).comp(ctx);\r\n    }\r\n    checkUp(expr, ctx);\r\n\r\n    // compile expression\r\n    Expr e = this;\r\n    try {\r\n      e = super.comp(ctx);\r\n    } catch(final QueryException ex) {\r\n      // catch exception for evaluation if expression fails at compile time\r\n      qe = ex;\r\n    }\r\n\r\n    // evaluate result type\r\n    type = expr.type();\r\n    for(final Catch c : ctch) type = type.intersect(c.type());\r\n    return e;\r\n  }","id":48236,"modified_method":"@Override\r\n  public Expr comp(final QueryContext ctx) throws QueryException {\r\n    for(int c = 0; c < ctch.length; ++c) {\r\n      ctch[c] = ((Catch) checkUp(ctch[c], ctx)).comp(ctx);\r\n    }\r\n    checkUp(expr, ctx);\r\n\r\n    // compile expression\r\n    try {\r\n      super.comp(ctx);\r\n      // return value, which will never throw an error\r\n      if(expr.value()) return expr;\r\n    } catch(final QueryException ex) {\r\n      // catch exception for evaluation if expression fails at compile time\r\n      qe = ex;\r\n    }\r\n\r\n    // evaluate result type\r\n    type = expr.type();\r\n    for(final Catch c : ctch) type = type.intersect(c.type());\r\n    return this;\r\n  }","commit_id":"3249a8f937f48bf8ddc15630a3e85f3a6d6b3017","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public boolean removable(final Var v, final QueryContext ctx) {\r\n    for(final Step s : step) if(s.uses(Use.VAR, ctx)) return false;\r\n    return true;\r\n  }","id":48237,"modified_method":"@Override\r\n  public boolean removable(final Var v, final QueryContext ctx) {\r\n    for(final Step s : step) {\r\n      if(s.uses(Use.VAR, ctx) || s.pred.length != 0) return false;\r\n    }\r\n    return true;\r\n  }","commit_id":"0e7711089cbf379ca1985631ff45810c92db6490","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public void close() {\r\n    super.close();\r\n\r\n    final String in = input != null ? input.getText() :\r\n      string(input3.getText());\r\n\r\n    result.add(in);\r\n    if(kind == Data.ELEM || kind == Data.DOC) {\r\n      if(in.length() == 0 || in.equals(old1)) return;\r\n    } else if(kind == Data.TEXT || kind == Data.COMM) {\r\n      if(in.equals(old2)) return;\r\n    } else {\r\n      final String in2 = kind == Data.ATTR ? input2.getText() :\r\n        string(input3.getText());\r\n\r\n      if(in.length() == 0 || in.equals(old1) && in2.equals(old2)) return;\r\n      result.add(in2);\r\n    }\r\n    result.add(null);\r\n  }","id":48238,"modified_method":"@Override\r\n  public void close() {\r\n    super.close();\r\n\r\n    final String in = input != null ? input.getText() :\r\n      string(input3.getText());\r\n\r\n    result = new StringList();\r\n    result.add(in);\r\n    if(kind == Data.ELEM || kind == Data.DOC) {\r\n      if(in.length() == 0 || in.equals(old1)) return;\r\n    } else if(kind == Data.TEXT || kind == Data.COMM) {\r\n      if(in.equals(old2)) return;\r\n    } else {\r\n      final String in2 = kind == Data.ATTR ? input2.getText() :\r\n        string(input3.getText());\r\n\r\n      if(in.length() == 0 || in.equals(old1) && in2.equals(old2)) return;\r\n      result.add(in2);\r\n    }\r\n    result.add(null);\r\n  }","commit_id":"0e7711089cbf379ca1985631ff45810c92db6490","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public void close() {\r\n    super.close();\r\n\r\n    final String in1 = input1.getText();\r\n    final String in2 = Token.string(input2.getText());\r\n\r\n    for(int i = 1; i < KINDS.length; i++) if(radio[i].isSelected()) kind = i;\r\n\r\n    switch(kind) {\r\n      case 0: case 3: case 5:\r\n        result.add(in1);\r\n        result.add(in2);\r\n        break;\r\n      case 1:\r\n        result.add(in1);\r\n        break;\r\n      case 2: case 4:\r\n        result.add(in2);\r\n        break;\r\n    }\r\n    result.add(null);\r\n    lkind = kind;\r\n  }","id":48239,"modified_method":"@Override\r\n  public void close() {\r\n    super.close();\r\n\r\n    final String in1 = input1.getText();\r\n    final String in2 = Token.string(input2.getText());\r\n\r\n    for(int i = 1; i < KINDS.length; i++) if(radio[i].isSelected()) kind = i;\r\n\r\n    result = new StringList();\r\n    switch(kind) {\r\n      case 0: case 3: case 5:\r\n        result.add(in1);\r\n        result.add(in2);\r\n        break;\r\n      case 1:\r\n        result.add(in1);\r\n        break;\r\n      case 2: case 4:\r\n        result.add(in2);\r\n        break;\r\n    }\r\n    result.add(null);\r\n    lkind = kind;\r\n  }","commit_id":"0e7711089cbf379ca1985631ff45810c92db6490","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Default Constructor.\r\n   * @param main reference to the main window\r\n   */\r\n  public DialogInsert(final GUI main) {\r\n    super(main, INSERTTITLE);\r\n\r\n    final BaseXBack pp = new BaseXBack();\r\n    pp.setLayout(new BorderLayout());\r\n\r\n    final BaseXBack b = new BaseXBack();\r\n    b.setLayout(new TableLayout(5, 1, 0, 8));\r\n\r\n    label1 = new BaseXLabel(INSERTNAME, true, true);\r\n    label1.setBorder(0, 0, 0, 0);\r\n    label2 = new BaseXLabel(\" \", true, true);\r\n    label2.setBorder(0, 0, 0, 0);\r\n    label2.setEnabled(false);\r\n\r\n    input1 = new BaseXTextField(null);\r\n    BaseXLayout.setWidth(input1, 320);\r\n\r\n    input2 = new BaseXText(gui, null);\r\n    input2.setFont(GUIConstants.mfont);\r\n    input2.setPreferredSize(new Dimension(400, 200));\r\n    input2.setEnabled(false);\r\n    setResizable(true);\r\n\r\n    final BaseXBack knd = new BaseXBack();\r\n    knd.setLayout(new TableLayout(1, 5));\r\n    final ButtonGroup group = new ButtonGroup();\r\n    \r\n    final ActionListener al = new ActionListener() {\r\n      public void actionPerformed(final ActionEvent e) {\r\n        change(e.getSource());\r\n      }\r\n    };\r\n\r\n    radio = new BaseXRadio[EDITKIND.length];\r\n    for(int i = 1; i < EDITKIND.length; i++) {\r\n      radio[i] = new BaseXRadio(EDITKIND[i], null, false, this);\r\n      radio[i].addActionListener(al);\r\n      radio[i].setSelected(i == lkind);\r\n      group.add(radio[i]);\r\n      knd.add(radio[i]);\r\n    }\r\n\r\n    b.add(knd);\r\n    b.add(label1);\r\n    b.add(input1);\r\n    b.add(label2);\r\n    pp.add(b, BorderLayout.CENTER);\r\n\r\n    set(pp, BorderLayout.NORTH);\r\n    set(input2, BorderLayout.CENTER);\r\n\r\n    buttons = BaseXLayout.okCancel(this);\r\n    set(buttons, BorderLayout.SOUTH);\r\n    change(radio[lkind]);\r\n    finish(null);\r\n  }","id":48240,"modified_method":"/**\r\n   * Default Constructor.\r\n   * @param main reference to the main window\r\n   */\r\n  public DialogInsert(final GUI main) {\r\n    super(main, INSERTTITLE);\r\n\r\n    final BaseXBack pp = new BaseXBack();\r\n    pp.setLayout(new BorderLayout());\r\n\r\n    final BaseXBack b = new BaseXBack();\r\n    b.setLayout(new TableLayout(5, 1, 0, 8));\r\n\r\n    label1 = new BaseXLabel(INSERTNAME, true, true);\r\n    label1.setBorder(0, 0, 0, 0);\r\n    label2 = new BaseXLabel(\" \", true, true);\r\n    label2.setBorder(0, 0, 0, 0);\r\n\r\n    input1 = new BaseXTextField(null, this);\r\n    BaseXLayout.setWidth(input1, 320);\r\n\r\n    input2 = new BaseXText(gui, null, true, this);\r\n    input2.setFont(GUIConstants.mfont);\r\n    input2.setPreferredSize(new Dimension(400, 200));\r\n    setResizable(true);\r\n\r\n    final BaseXBack knd = new BaseXBack();\r\n    knd.setLayout(new TableLayout(1, 5));\r\n    final ButtonGroup group = new ButtonGroup();\r\n    \r\n    final ActionListener al = new ActionListener() {\r\n      public void actionPerformed(final ActionEvent e) {\r\n        change(e.getSource());\r\n      }\r\n    };\r\n\r\n    radio = new BaseXRadio[EDITKIND.length];\r\n    for(int i = 1; i < EDITKIND.length; i++) {\r\n      radio[i] = new BaseXRadio(EDITKIND[i], null, false, this);\r\n      radio[i].addActionListener(al);\r\n      radio[i].setSelected(i == lkind);\r\n      group.add(radio[i]);\r\n      knd.add(radio[i]);\r\n    }\r\n\r\n    b.add(knd);\r\n    b.add(label1);\r\n    b.add(input1);\r\n    b.add(label2);\r\n    pp.add(b, BorderLayout.CENTER);\r\n\r\n    set(pp, BorderLayout.NORTH);\r\n    set(input2, BorderLayout.CENTER);\r\n\r\n    buttons = BaseXLayout.okCancel(this);\r\n    set(buttons, BorderLayout.SOUTH);\r\n    change(radio[lkind]);\r\n    finish(null);\r\n  }","commit_id":"0e7711089cbf379ca1985631ff45810c92db6490","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public Expr comp(final QueryContext ctx) throws QueryException {\r\n    for(int i = 0; i != step.length; i++) {\r\n      step[i] = step[i].comp(ctx);\r\n      if(step[i].e()) return step[i];\r\n    }\r\n    return super.comp(ctx);\r\n  }","id":48241,"modified_method":"@Override\r\n  public Expr comp(final QueryContext ctx) throws QueryException {\r\n    super.comp(ctx);\r\n    if(root instanceof Context) root = null;\r\n\r\n    final Item ci = ctx.item;\r\n    ctx.item = root(ctx);\r\n    Expr e = this;\r\n    for(int i = 0; i != step.length; i++) {\r\n      step[i] = step[i].comp(ctx);\r\n      if(step[i].e()) {\r\n        e = step[i];\r\n        break;\r\n      }\r\n    }\r\n    ctx.item = ci;\r\n    return e;\r\n  }","commit_id":"0e7711089cbf379ca1985631ff45810c92db6490","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public boolean removable(final Var v, final QueryContext ctx) {\r\n    return root.removable(v, ctx) && super.removable(v, ctx);\r\n  }","id":48242,"modified_method":"@Override\r\n  public boolean removable(final Var v, final QueryContext ctx) {\r\n    return false;\r\n    //return root.removable(v, ctx) && super.removable(v, ctx);\r\n  }","commit_id":"0e7711089cbf379ca1985631ff45810c92db6490","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public Expr comp(final QueryContext ctx) throws QueryException {\r\n    super.comp(ctx);\r\n    final int el = expr.length;\r\n    for(int e = 0; e != expr.length; e++) {\r\n      if(expr[e].e()) expr = Array.delete(expr, e--);\r\n    }\r\n    if(el != expr.length) ctx.compInfo(OPTEMPTY);\r\n    // as union always returns sorted results,\r\n    // a single argument must be evaluated as well\r\n    return this;\r\n  }","id":48243,"modified_method":"@Override\r\n  public Expr comp(final QueryContext ctx) throws QueryException {\r\n    super.comp(ctx);\r\n    final int el = expr.length;\r\n    for(int e = 0; e != expr.length; e++) {\r\n      if(expr[e].e()) expr = Array.delete(expr, e--);\r\n    }\r\n    if(el != expr.length) ctx.compInfo(OPTEMPTY);\r\n\r\n    // as union always returns sorted results,\r\n    // a single, non-sorted argument must be evaluated as well\r\n    return expr.length == 0 ? Seq.EMPTY :\r\n      expr.length == 1 && !duplicates(ctx) ? expr[0] : this;\r\n  }","commit_id":"0e7711089cbf379ca1985631ff45810c92db6490","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n     * Return the right SAM handler depending on the protocol version\n     * required by the client.\n     *\n     * @param s Socket attached to SAM client\n     * @param i2cpProps config options for our i2cp connection\n     * @throws SAMException if the connection handshake (HELLO message) was malformed\n     * @return A SAM protocol handler, or null if the client closed before the handshake\n     */\n    public static SAMHandler createSAMHandler(SocketChannel s, Properties i2cpProps) throws SAMException {\n        String line;\n        StringTokenizer tok;\n        Log log = new Log(SAMHandlerFactory.class);\n\n        try {\n            line = DataHelper.readLine(s.socket().getInputStream());\n            if (line == null) {\n                log.debug(\"Connection closed by client\");\n                return null;\n            }\n            tok = new StringTokenizer(line.trim(), \" \");\n        } catch (IOException e) {\n            throw new SAMException(\"Error reading from socket\", e);\n        } catch (Exception e) {\n            throw new SAMException(\"Unexpected error\", e);\n        }\n\n        // Message format: HELLO VERSION MIN=v1 MAX=v2\n        if (tok.countTokens() != 4) {\n            throw new SAMException(\"Bad format in HELLO message\");\n        }\n        if (!tok.nextToken().equals(\"HELLO\")) {\n            throw new SAMException(\"Bad domain in HELLO message\");\n        }\n        {\n            String opcode;\n            if (!(opcode = tok.nextToken()).equals(\"VERSION\")) {\n                throw new SAMException(\"Unrecognized HELLO message opcode: '\"\n                                       + opcode + \"'\");\n            }\n        }\n\n        Properties props = SAMUtils.parseParams(tok);\n        if (props.isEmpty()) {\n            throw new SAMException(\"No parameters in HELLO VERSION message\");\n        }\n\n        String minVer = props.getProperty(\"MIN\");\n        if (minVer == null) {\n            throw new SAMException(\"Missing MIN parameter in HELLO VERSION message\");\n        }\n\n        String maxVer = props.getProperty(\"MAX\");\n        if (maxVer == null) {\n            //throw new SAMException(\"Missing MAX parameter in HELLO VERSION message\");\n            // MAX optional as of 0.9.14\n            maxVer = \"99.99\";\n        }\n\n        String ver = chooseBestVersion(minVer, maxVer);\n\n        if (ver == null) {\n            SAMHandler.writeString(\"HELLO REPLY RESULT=NOVERSION\\n\", s);\n            return null;\n        }\n        // Let's answer positively\n        if (!SAMHandler.writeString(\"HELLO REPLY RESULT=OK VERSION=\" + ver + \"\\n\", s))\n            throw new SAMException(\"Error writing to socket\");       \n\n        // ...and instantiate the right SAM handler\n        int verMajor = getMajor(ver);\n        int verMinor = getMinor(ver);\n        SAMHandler handler;\n\n        try {\n            switch (verMajor) {\n            case 1:\n                handler = new SAMv1Handler(s, verMajor, verMinor, i2cpProps);\n                break;\n            case 2:\n                handler = new SAMv2Handler(s, verMajor, verMinor, i2cpProps);\n                break;\n            case 3:\n            \thandler = new SAMv3Handler(s, verMajor, verMinor, i2cpProps);\n            \tbreak;\n            default:\n                log.error(\"BUG! Trying to initialize the wrong SAM version!\");\n                throw new SAMException(\"BUG! (in handler instantiation)\");\n            }\n        } catch (IOException e) {\n            log.error(\"Error creating the handler for version \"+verMajor, e);\n            throw new SAMException(\"IOException caught during SAM handler instantiation\");\n        }\n        return handler;\n    }","id":48244,"modified_method":"/**\n     * Return the right SAM handler depending on the protocol version\n     * required by the client.\n     *\n     * @param s Socket attached to SAM client\n     * @param i2cpProps config options for our i2cp connection\n     * @throws SAMException if the connection handshake (HELLO message) was malformed\n     * @return A SAM protocol handler, or null if the client closed before the handshake\n     */\n    public static SAMHandler createSAMHandler(SocketChannel s, Properties i2cpProps) throws SAMException {\n        String line;\n        StringTokenizer tok;\n        Log log = new Log(SAMHandlerFactory.class);\n\n        try {\n            line = DataHelper.readLine(s.socket().getInputStream());\n            if (line == null) {\n                log.debug(\"Connection closed by client\");\n                return null;\n            }\n            tok = new StringTokenizer(line.trim(), \" \");\n        } catch (IOException e) {\n            throw new SAMException(\"Error reading from socket\", e);\n        } catch (Exception e) {\n            throw new SAMException(\"Unexpected error\", e);\n        }\n\n        // Message format: HELLO VERSION [MIN=v1] [MAX=v2]\n        if (tok.countTokens() < 2) {\n            throw new SAMException(\"Must start with HELLO VERSION\");\n        }\n        if (!tok.nextToken().equals(\"HELLO\") ||\n            !tok.nextToken().equals(\"VERSION\")) {\n            throw new SAMException(\"Must start with HELLO VERSION\");\n        }\n\n        Properties props = SAMUtils.parseParams(tok);\n\n        String minVer = props.getProperty(\"MIN\");\n        if (minVer == null) {\n            //throw new SAMException(\"Missing MIN parameter in HELLO VERSION message\");\n            // MIN optional as of 0.9.14\n            minVer = \"1\";\n        }\n\n        String maxVer = props.getProperty(\"MAX\");\n        if (maxVer == null) {\n            //throw new SAMException(\"Missing MAX parameter in HELLO VERSION message\");\n            // MAX optional as of 0.9.14\n            maxVer = \"99.99\";\n        }\n\n        String ver = chooseBestVersion(minVer, maxVer);\n\n        if (ver == null) {\n            SAMHandler.writeString(\"HELLO REPLY RESULT=NOVERSION\\n\", s);\n            return null;\n        }\n        // Let's answer positively\n        if (!SAMHandler.writeString(\"HELLO REPLY RESULT=OK VERSION=\" + ver + \"\\n\", s))\n            throw new SAMException(\"Error writing to socket\");       \n\n        // ...and instantiate the right SAM handler\n        int verMajor = getMajor(ver);\n        int verMinor = getMinor(ver);\n        SAMHandler handler;\n\n        try {\n            switch (verMajor) {\n            case 1:\n                handler = new SAMv1Handler(s, verMajor, verMinor, i2cpProps);\n                break;\n            case 2:\n                handler = new SAMv2Handler(s, verMajor, verMinor, i2cpProps);\n                break;\n            case 3:\n            \thandler = new SAMv3Handler(s, verMajor, verMinor, i2cpProps);\n            \tbreak;\n            default:\n                log.error(\"BUG! Trying to initialize the wrong SAM version!\");\n                throw new SAMException(\"BUG! (in handler instantiation)\");\n            }\n        } catch (IOException e) {\n            log.error(\"Error creating the handler for version \"+verMajor, e);\n            throw new SAMException(\"IOException caught during SAM handler instantiation\");\n        }\n        return handler;\n    }","commit_id":"fef591412ec4c5c18bb9f7fb52507fe499acce51","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"private static int getMajor(String ver) {\n        if ( (ver == null) || (ver.indexOf('.') < 0) )\n            return -1;\n        try {\n            String major = ver.substring(0, ver.indexOf(\".\"));\n            return Integer.parseInt(major);\n        } catch (NumberFormatException e) {\n            return -1;\n        } catch (ArrayIndexOutOfBoundsException e) {\n            return -1;\n        }\n    }","id":48245,"modified_method":"private static int getMajor(String ver) {\n        if (ver == null)\n            return -1;\n        int dot = ver.indexOf(\".\");\n        if (dot == 0)\n            return -1;\n        if (dot > 0)\n            ver = ver.substring(0, dot);\n        try {\n            return Integer.parseInt(ver);\n        } catch (NumberFormatException e) {\n            return -1;\n        }\n    }","commit_id":"fef591412ec4c5c18bb9f7fb52507fe499acce51","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"private static String chooseBestVersion(String minVer, String maxVer) {\n        // in VersionComparator, \"3\" < \"3.0\" so\n        // use comparisons carefully\n        if (VersionComparator.comp(\"3.0\", minVer) >= 0) {\n            // Documentation said:\n            // In order to force protocol version 3.0, the values of $min and $max\n            // must be \"3.0\".\n            int maxcomp = VersionComparator.comp(\"3\", maxVer);\n            if (maxcomp == 0 || maxVer.equals(\"3.0\"))\n                return \"3.0\";  // spoof version\n            if (maxcomp < 0)\n                return VERSION;\n        }\n        if (VersionComparator.comp(\"2.0\", minVer) >= 0 &&\n            VersionComparator.comp(\"2\", maxVer) <= 0)\n            return \"2.0\";\n        if (VersionComparator.comp(\"1.0\", minVer) >= 0 &&\n            VersionComparator.comp(\"1\", maxVer) <= 0)\n            return \"1.0\";\n        return null;\n    }","id":48246,"modified_method":"private static String chooseBestVersion(String minVer, String maxVer) {\n        if (VersionComparator.comp(VERSION, minVer) >= 0 &&\n            VersionComparator.comp(VERSION, maxVer) <= 0)\n            return VERSION;\n        // in VersionComparator, \"3\" < \"3.0\" so\n        // use comparisons carefully\n        if (VersionComparator.comp(\"3.0\", minVer) >= 0 &&\n            VersionComparator.comp(\"3\", maxVer) <= 0)\n            return \"3.0\";\n        if (VersionComparator.comp(\"2.0\", minVer) >= 0 &&\n            VersionComparator.comp(\"2\", maxVer) <= 0)\n            return \"2.0\";\n        if (VersionComparator.comp(\"1.0\", minVer) >= 0 &&\n            VersionComparator.comp(\"1\", maxVer) <= 0)\n            return \"1.0\";\n        return null;\n    }","commit_id":"fef591412ec4c5c18bb9f7fb52507fe499acce51","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n     * Generate a random destination key\n     *\n     * @param priv Stream used to write the private key\n     * @param pub Stream used to write the public key (may be null)\n     */\n    public static void genRandomKey(OutputStream priv, OutputStream pub) {\n        //_log.debug(\"Generating random keys...\");\n        try {\n            I2PClient c = I2PClientFactory.createClient();\n            Destination d = c.createDestination(priv);\n            priv.flush();\n\n            if (pub != null) {\n                d.writeBytes(pub);\n                pub.flush();\n            }\n        } catch (I2PException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }","id":48247,"modified_method":"/**\n     * Generate a random destination key using DSA_SHA1 signature type.\n     * Caller must close streams. Fails silently.\n     *\n     * @param priv Stream used to write the destination and private keys\n     * @param pub Stream used to write the destination (may be null)\n     */\n    public static void genRandomKey(OutputStream priv, OutputStream pub) {\n        genRandomKey(priv, pub, SigType.DSA_SHA1);\n    }","commit_id":"fef591412ec4c5c18bb9f7fb52507fe499acce51","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n     * Check whether a base64-encoded {dest,privkey,signingprivkey} is valid\n     *\n     * @param dest The base64-encoded destination and keys to be checked (same format as PrivateKeyFile)\n     * @return true if valid\n     */\n    public static boolean checkPrivateDestination(String dest) {\n    \tByteArrayInputStream destKeyStream = new ByteArrayInputStream(Base64.decode(dest));\n    \ttry {\n    \t\tDestination d = new Destination();\n    \t\td.readBytes(destKeyStream);\n    \t\tnew PrivateKey().readBytes(destKeyStream);\n    \t\tSigningPrivateKey spk = new SigningPrivateKey(d.getSigningPublicKey().getType());\n    \t\tspk.readBytes(destKeyStream);\n    \t} catch (DataFormatException e) {\n                return false;\n    \t} catch (IOException e) {\n                return false;\n    \t}\n        return destKeyStream.available() == 0;\n    }","id":48248,"modified_method":"/**\n     * Check whether a base64-encoded {dest,privkey,signingprivkey} is valid\n     *\n     * @param dest The base64-encoded destination and keys to be checked (same format as PrivateKeyFile)\n     * @return true if valid\n     */\n    public static boolean checkPrivateDestination(String dest) {\n        byte[] b = Base64.decode(dest);\n        if (b == null || b.length < 663)\n            return false;\n    \tByteArrayInputStream destKeyStream = new ByteArrayInputStream(b);\n    \ttry {\n    \t\tDestination d = new Destination();\n    \t\td.readBytes(destKeyStream);\n    \t\tnew PrivateKey().readBytes(destKeyStream);\n    \t\tSigningPrivateKey spk = new SigningPrivateKey(d.getSigningPublicKey().getType());\n    \t\tspk.readBytes(destKeyStream);\n    \t} catch (DataFormatException e) {\n                return false;\n    \t} catch (IOException e) {\n                return false;\n    \t}\n        return destKeyStream.available() == 0;\n    }","commit_id":"fef591412ec4c5c18bb9f7fb52507fe499acce51","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"SAMStreamSession newSAMStreamSession(String destKeystream, String direction, Properties props )\n    throws IOException, DataFormatException, SAMException\n  {\n    return new SAMStreamSession(destKeystream, direction, props, this) ;\n  }","id":48249,"modified_method":"private SAMStreamSession newSAMStreamSession(String destKeystream, String direction, Properties props )\n    throws IOException, DataFormatException, SAMException\n  {\n    return new SAMStreamSession(destKeystream, direction, props, this) ;\n  }","commit_id":"fef591412ec4c5c18bb9f7fb52507fe499acce51","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"protected boolean execDestMessage(String opcode, Properties props) {\n\n        if (opcode.equals(\"GENERATE\")) {\n            if (!props.isEmpty()) {\n                if (_log.shouldLog(Log.DEBUG))\n                    _log.debug(\"Properties specified in DEST GENERATE message\");\n                return false;\n            }\n\n            ByteArrayOutputStream priv = new ByteArrayOutputStream();\n            ByteArrayOutputStream pub = new ByteArrayOutputStream();\n            \n            SAMUtils.genRandomKey(priv, pub);\n            return writeString(\"DEST REPLY\"\n                               + \" PUB=\"\n                               + Base64.encode(pub.toByteArray())\n                               + \" PRIV=\"\n                               + Base64.encode(priv.toByteArray())\n                               + \"\\n\");\n        } else {\n            if (_log.shouldLog(Log.DEBUG))\n                _log.debug(\"Unrecognized DEST message opcode: \\\"\" + opcode + \"\\\"\");\n            return false;\n        }\n    }","id":48250,"modified_method":"protected boolean execDestMessage(String opcode, Properties props) {\n\n        if (opcode.equals(\"GENERATE\")) {\n            String sigTypeStr = props.getProperty(\"SIGNATURE_TYPE\");\n            SigType sigType;\n            if (sigTypeStr != null) {\n                sigType = SigType.parseSigType(sigTypeStr);\n                if (sigType == null) {\n                    writeString(\"DEST REPLY RESULT=I2P_ERROR MESSAGE=\\\"SIGNATURE_TYPE \" +\n                                sigTypeStr + \" unsupported\\\"\\n\");\n                    return false;\n                }\n            } else {\n                sigType = SigType.DSA_SHA1;\n            }\n\n            ByteArrayOutputStream priv = new ByteArrayOutputStream(663);\n            ByteArrayOutputStream pub = new ByteArrayOutputStream(387);\n            \n            SAMUtils.genRandomKey(priv, pub, sigType);\n            return writeString(\"DEST REPLY\"\n                               + \" PUB=\"\n                               + Base64.encode(pub.toByteArray())\n                               + \" PRIV=\"\n                               + Base64.encode(priv.toByteArray())\n                               + \"\\n\");\n        } else {\n            writeString(\"DEST REPLY RESULT=I2P_ERROR MESSAGE=\\\"DEST GENERATE required\\\"\");\n            if (_log.shouldLog(Log.DEBUG))\n                _log.debug(\"Unrecognized DEST message opcode: \\\"\" + opcode + \"\\\"\");\n            return false;\n        }\n    }","commit_id":"fef591412ec4c5c18bb9f7fb52507fe499acce51","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"@Override\n\tprotected boolean execSessionMessage(String opcode, Properties props) {\n\n\t\tString dest = \"BUG!\";\n\t\tString nick =  null ;\n\t\tboolean ok = false ;\n\n\t\ttry{\n\t\t\tif (opcode.equals(\"CREATE\")) {\n\t\t\t\tif ((this.getRawSession()!= null) || (this.getDatagramSession() != null)\n\t\t\t\t\t\t|| (this.getStreamSession() != null)) {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"Trying to create a session, but one still exists\");\n\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR MESSAGE=\\\"Session already exists\\\"\\n\");\n\t\t\t\t}\n\t\t\t\tif (props.isEmpty()) {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"No parameters specified in SESSION CREATE message\");\n\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR MESSAGE=\\\"No parameters for SESSION CREATE\\\"\\n\");\n\t\t\t\t}\n\n\t\t\t\tdest = props.getProperty(\"DESTINATION\");\n\t\t\t\tif (dest == null) {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"SESSION DESTINATION parameter not specified\");\n\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR MESSAGE=\\\"DESTINATION not specified\\\"\\n\");\n\t\t\t\t}\n\t\t\t\tprops.remove(\"DESTINATION\");\n\n\n\t\t\t\tif (dest.equals(\"TRANSIENT\")) {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"TRANSIENT destination requested\");\n\t\t\t\t\tByteArrayOutputStream priv = new ByteArrayOutputStream(640);\n\t\t\t\t\tSAMUtils.genRandomKey(priv, null);\n\n\t\t\t\t\tdest = Base64.encode(priv.toByteArray());\n\t\t\t\t} else {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"Custom destination specified [\" + dest + \"]\");\n\t\t\t\t}\n\n\t\t\t\tif (!SAMUtils.checkPrivateDestination(dest))\n\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=INVALID_KEY\\n\");\n\n\t\t\t\tnick = props.getProperty(\"ID\");\n\t\t\t\tif (nick == null) {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"SESSION ID parameter not specified\");\n\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR MESSAGE=\\\"ID not specified\\\"\\n\");\n\t\t\t\t}\n\t\t\t\tprops.remove(\"ID\");\n\n\n\t\t\t\tString style = props.getProperty(\"STYLE\");\n\t\t\t\tif (style == null) {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"SESSION STYLE parameter not specified\");\n\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR MESSAGE=\\\"No SESSION STYLE specified\\\"\\n\");\n\t\t\t\t}\n\t\t\t\tprops.remove(\"STYLE\");\n\n\t\t\t\t// Unconditionally override what the client may have set\n\t\t\t\t// (iMule sets BestEffort) as None is more efficient\n\t\t\t\t// and the client has no way to access delivery notifications\n\t\t\t\ti2cpProps.setProperty(I2PClient.PROP_RELIABILITY, I2PClient.PROP_RELIABILITY_NONE);\n\n\t\t\t\t// Record the session in the database sSessionsHash\n\t\t\t\tProperties allProps = new Properties();\n\t\t\t\tallProps.putAll(i2cpProps);\n\t\t\t\tallProps.putAll(props);\n\t\t\t\t\n\n\t\t\t\ttry {\n\t\t\t\t\tsSessionsHash.put( nick, new SessionRecord(dest, allProps, this) ) ;\n\t\t\t\t} catch (SessionsDB.ExistingIdException e) {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"SESSION ID parameter already in use\");\n\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=DUPLICATED_ID\\n\");\n\t\t\t\t} catch (SessionsDB.ExistingDestException e) {\n\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=DUPLICATED_DEST\\n\");\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t\t// Create the session\n\n\t\t\t\tif (style.equals(\"RAW\")) {\n\t\t\t\t\tDatagramServer.getInstance(i2cpProps);\n\t\t\t\t\tSAMv3RawSession v3 = newSAMRawSession(nick);\n                                        rawSession = v3;\n\t\t\t\t\tthis.session = v3;\n\t\t\t\t} else if (style.equals(\"DATAGRAM\")) {\n\t\t\t\t\tDatagramServer.getInstance(i2cpProps);\n\t\t\t\t\tSAMv3DatagramSession v3 = newSAMDatagramSession(nick);\n\t\t\t\t\tdatagramSession = v3;\n\t\t\t\t\tthis.session = v3;\n\t\t\t\t} else if (style.equals(\"STREAM\")) {\n\t\t\t\t\tSAMv3StreamSession v3 = newSAMStreamSession(nick);\n\t\t\t\t\tstreamSession = v3;\n\t\t\t\t\tthis.session = v3;\n\t\t\t\t} else {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"Unrecognized SESSION STYLE: \\\"\" + style +\"\\\"\");\n\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR MESSAGE=\\\"Unrecognized SESSION STYLE\\\"\\n\");\n\t\t\t\t}\n\t\t\t\tok = true ;\n\t\t\t\treturn writeString(\"SESSION STATUS RESULT=OK DESTINATION=\"\n\t\t\t\t\t\t+ dest + \"\\n\");\n\t\t\t} else {\n\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t_log.debug(\"Unrecognized SESSION message opcode: \\\"\"\n\t\t\t\t\t\t+ opcode + \"\\\"\");\n\t\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR MESSAGE=\\\"Unrecognized opcode\\\"\\n\");\n\t\t\t}\n\t\t} catch (DataFormatException e) {\n\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t_log.debug(\"Invalid destination specified\");\n\t\t\treturn writeString(\"SESSION STATUS RESULT=INVALID_KEY DESTINATION=\" + dest + \" MESSAGE=\\\"\" + e.getMessage() + \"\\\"\\n\");\n\t\t} catch (I2PSessionException e) {\n\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t_log.debug(\"I2P error when instantiating session\", e);\n\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR DESTINATION=\" + dest + \" MESSAGE=\\\"\" + e.getMessage() + \"\\\"\\n\");\n\t\t} catch (SAMException e) {\n\t\t\tif (_log.shouldLog(Log.INFO))\n\t\t\t\t_log.info(\"Funny SAM error\", e);\n\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR DESTINATION=\" + dest + \" MESSAGE=\\\"\" + e.getMessage() + \"\\\"\\n\");\n\t\t} catch (IOException e) {\n\t\t\t_log.error(\"Unexpected IOException\", e);\n\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR DESTINATION=\" + dest + \" MESSAGE=\\\"\" + e.getMessage() + \"\\\"\\n\");\n\t\t} finally {\n\t\t\t// unregister the session if it has not been created\n\t\t\tif ( !ok && nick!=null ) {\n\t\t\t\tsSessionsHash.del(nick) ;\n\t\t\t\tsession = null ;\n\t\t\t}\n\t\t}\n\t}","id":48251,"modified_method":"@Override\n\tprotected boolean execSessionMessage(String opcode, Properties props) {\n\n\t\tString dest = \"BUG!\";\n\t\tString nick =  null ;\n\t\tboolean ok = false ;\n\n\t\ttry{\n\t\t\tif (opcode.equals(\"CREATE\")) {\n\t\t\t\tif ((this.getRawSession()!= null) || (this.getDatagramSession() != null)\n\t\t\t\t\t\t|| (this.getStreamSession() != null)) {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"Trying to create a session, but one still exists\");\n\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR MESSAGE=\\\"Session already exists\\\"\\n\");\n\t\t\t\t}\n\t\t\t\tif (props.isEmpty()) {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"No parameters specified in SESSION CREATE message\");\n\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR MESSAGE=\\\"No parameters for SESSION CREATE\\\"\\n\");\n\t\t\t\t}\n\n\t\t\t\tdest = props.getProperty(\"DESTINATION\");\n\t\t\t\tif (dest == null) {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"SESSION DESTINATION parameter not specified\");\n\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR MESSAGE=\\\"DESTINATION not specified\\\"\\n\");\n\t\t\t\t}\n\t\t\t\tprops.remove(\"DESTINATION\");\n\n\t\t\t\tif (dest.equals(\"TRANSIENT\")) {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"TRANSIENT destination requested\");\n\t\t\t\t\tString sigTypeStr = props.getProperty(\"SIGNATURE_TYPE\");\n\t\t\t\t\tSigType sigType;\n\t\t\t\t\tif (sigTypeStr != null) {\n\t\t\t\t\t\tsigType = SigType.parseSigType(sigTypeStr);\n\t\t\t\t\t\tif (sigType == null) {\n\t\t\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR MESSAGE=\\\"SIGNATURE_TYPE \"\n\t\t\t\t\t\t\t                   + sigTypeStr + \" unsupported\\\"\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprops.remove(\"SIGNATURE_TYPE\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsigType = SigType.DSA_SHA1;\n\t\t\t\t\t}\n\t\t\t\t\tByteArrayOutputStream priv = new ByteArrayOutputStream(663);\n\t\t\t\t\tSAMUtils.genRandomKey(priv, null, sigType);\n\n\t\t\t\t\tdest = Base64.encode(priv.toByteArray());\n\t\t\t\t} else {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"Custom destination specified [\" + dest + \"]\");\n\t\t\t\t\tif (!SAMUtils.checkPrivateDestination(dest))\n\t\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=INVALID_KEY\\n\");\n\t\t\t\t}\n\n\n\t\t\t\tnick = props.getProperty(\"ID\");\n\t\t\t\tif (nick == null) {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"SESSION ID parameter not specified\");\n\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR MESSAGE=\\\"ID not specified\\\"\\n\");\n\t\t\t\t}\n\t\t\t\tprops.remove(\"ID\");\n\n\n\t\t\t\tString style = props.getProperty(\"STYLE\");\n\t\t\t\tif (style == null) {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"SESSION STYLE parameter not specified\");\n\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR MESSAGE=\\\"No SESSION STYLE specified\\\"\\n\");\n\t\t\t\t}\n\t\t\t\tprops.remove(\"STYLE\");\n\n\t\t\t\t// Unconditionally override what the client may have set\n\t\t\t\t// (iMule sets BestEffort) as None is more efficient\n\t\t\t\t// and the client has no way to access delivery notifications\n\t\t\t\ti2cpProps.setProperty(I2PClient.PROP_RELIABILITY, I2PClient.PROP_RELIABILITY_NONE);\n\n\t\t\t\t// Record the session in the database sSessionsHash\n\t\t\t\tProperties allProps = new Properties();\n\t\t\t\tallProps.putAll(i2cpProps);\n\t\t\t\tallProps.putAll(props);\n\t\t\t\t\n\n\t\t\t\ttry {\n\t\t\t\t\tsSessionsHash.put( nick, new SessionRecord(dest, allProps, this) ) ;\n\t\t\t\t} catch (SessionsDB.ExistingIdException e) {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"SESSION ID parameter already in use\");\n\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=DUPLICATED_ID\\n\");\n\t\t\t\t} catch (SessionsDB.ExistingDestException e) {\n\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=DUPLICATED_DEST\\n\");\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t\t// Create the session\n\n\t\t\t\tif (style.equals(\"RAW\")) {\n\t\t\t\t\tDatagramServer.getInstance(i2cpProps);\n\t\t\t\t\tSAMv3RawSession v3 = newSAMRawSession(nick);\n                                        rawSession = v3;\n\t\t\t\t\tthis.session = v3;\n\t\t\t\t} else if (style.equals(\"DATAGRAM\")) {\n\t\t\t\t\tDatagramServer.getInstance(i2cpProps);\n\t\t\t\t\tSAMv3DatagramSession v3 = newSAMDatagramSession(nick);\n\t\t\t\t\tdatagramSession = v3;\n\t\t\t\t\tthis.session = v3;\n\t\t\t\t} else if (style.equals(\"STREAM\")) {\n\t\t\t\t\tSAMv3StreamSession v3 = newSAMStreamSession(nick);\n\t\t\t\t\tstreamSession = v3;\n\t\t\t\t\tthis.session = v3;\n\t\t\t\t} else {\n\t\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t\t_log.debug(\"Unrecognized SESSION STYLE: \\\"\" + style +\"\\\"\");\n\t\t\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR MESSAGE=\\\"Unrecognized SESSION STYLE\\\"\\n\");\n\t\t\t\t}\n\t\t\t\tok = true ;\n\t\t\t\treturn writeString(\"SESSION STATUS RESULT=OK DESTINATION=\"\n\t\t\t\t\t\t+ dest + \"\\n\");\n\t\t\t} else {\n\t\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t\t_log.debug(\"Unrecognized SESSION message opcode: \\\"\"\n\t\t\t\t\t\t+ opcode + \"\\\"\");\n\t\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR MESSAGE=\\\"Unrecognized opcode\\\"\\n\");\n\t\t\t}\n\t\t} catch (DataFormatException e) {\n\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t_log.debug(\"Invalid destination specified\");\n\t\t\treturn writeString(\"SESSION STATUS RESULT=INVALID_KEY DESTINATION=\" + dest + \" MESSAGE=\\\"\" + e.getMessage() + \"\\\"\\n\");\n\t\t} catch (I2PSessionException e) {\n\t\t\tif (_log.shouldLog(Log.DEBUG))\n\t\t\t\t_log.debug(\"I2P error when instantiating session\", e);\n\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR DESTINATION=\" + dest + \" MESSAGE=\\\"\" + e.getMessage() + \"\\\"\\n\");\n\t\t} catch (SAMException e) {\n\t\t\tif (_log.shouldLog(Log.INFO))\n\t\t\t\t_log.info(\"Funny SAM error\", e);\n\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR DESTINATION=\" + dest + \" MESSAGE=\\\"\" + e.getMessage() + \"\\\"\\n\");\n\t\t} catch (IOException e) {\n\t\t\t_log.error(\"Unexpected IOException\", e);\n\t\t\treturn writeString(\"SESSION STATUS RESULT=I2P_ERROR DESTINATION=\" + dest + \" MESSAGE=\\\"\" + e.getMessage() + \"\\\"\\n\");\n\t\t} finally {\n\t\t\t// unregister the session if it has not been created\n\t\t\tif ( !ok && nick!=null ) {\n\t\t\t\tsSessionsHash.del(nick) ;\n\t\t\t\tsession = null ;\n\t\t\t}\n\t\t}\n\t}","commit_id":"fef591412ec4c5c18bb9f7fb52507fe499acce51","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public static serverObjects respond(httpHeader header, serverObjects post, serverSwitch<?> env) {\r\n        // return variable that accumulates replacements\r\n        final plasmaSwitchboard sb = (plasmaSwitchboard) env;\r\n        final serverObjects prop = new serverObjects();\r\n\r\n        int lines = 500;\r\n        boolean showControl = env.getConfigBool(\"IndexMonitorControl\", true);\r\n        boolean showInit = env.getConfigBool(\"IndexMonitorInit\", false);\r\n        boolean showExec = env.getConfigBool(\"IndexMonitorExec\", false);\r\n        boolean showDate = env.getConfigBool(\"IndexMonitorDate\", true);\r\n        boolean showWords = env.getConfigBool(\"IndexMonitorWords\", true);\r\n        boolean showTitle = env.getConfigBool(\"IndexMonitorTitle\", true);\r\n        boolean showURL = env.getConfigBool(\"IndexMonitorURL\", true);\r\n\r\n        if (post == null) {\r\n            post = new serverObjects();\r\n            post.put(\"process\", \"0\");\r\n        }\r\n\r\n        // find process number\r\n        int tabletype;\r\n        try {\r\n            tabletype = Integer.parseInt(post.get(\"process\", \"0\"));\r\n        } catch (NumberFormatException e) {\r\n            tabletype = 0;\r\n        }\r\n\r\n        if ((post != null) && (post.containsKey(\"autoforward\")) && (tabletype == 5) && (sb.crawlResults.getStackSize(5) == 0)) {\r\n            // the main menu does a request to the local crawler page, but in case this table is empty, the overview page is shown\r\n            tabletype = 0;\r\n        }\r\n        \r\n        // check if authorization is needed and/or given\r\n        if (((tabletype > 0) && (tabletype < 6)) ||\r\n            (post != null && (post.containsKey(\"clearlist\") ||\r\n            post.containsKey(\"deleteentry\")))) {\r\n            String authorization = ((String) header.get(httpHeader.AUTHORIZATION, \"xxxxxx\"));\r\n            if (authorization.length() != 0) {\r\n                if (! sb.verifyAuthentication(header, true)){\r\n                    // force log-in (again, because wrong password was given)\r\n                    prop.put(\"AUTHENTICATE\", \"admin log-in\");\r\n                    return prop;\r\n                }\r\n            } else {\r\n                // force log-in\r\n                prop.put(\"AUTHENTICATE\", \"admin log-in\");\r\n                return prop;\r\n            }\r\n        }\r\n\r\n        if(post != null) {\r\n        // custom number of lines\r\n        if (post.containsKey(\"count\")) {\r\n            lines = Integer.parseInt(post.get(\"count\", \"500\"));\r\n        }\r\n\r\n        // do the commands\r\n        if (post.containsKey(\"clearlist\")) sb.crawlResults.clearStack(tabletype);\r\n        if (post.containsKey(\"deleteentry\")) {\r\n                String hash = post.get(\"hash\", null);\r\n                if (hash != null) {\r\n                    // delete from database\r\n                    sb.webIndex.removeURL(hash);\r\n                }\r\n            }\r\n        if (post.containsKey(\"moreIndexed\")) {\r\n            lines = Integer.parseInt(post.get(\"showIndexed\", \"500\"));\r\n        }\r\n        if (post.get(\"sc\") != null)\r\n            if (post.get(\"sc\").equals(\"0\")) showControl = false; else showControl = true;\r\n        if (post.get(\"si\") != null)\r\n            if (post.get(\"si\").equals(\"0\")) showInit = false; else showInit = true;\r\n        if (post.get(\"se\") != null)\r\n            if (post.get(\"se\").equals(\"0\")) showExec = false; else showExec = true;\r\n        if (post.get(\"sd\") != null)\r\n            if (post.get(\"sd\").equals(\"0\")) showDate = false; else showDate = true;\r\n        if (post.get(\"sw\") != null)\r\n            if (post.get(\"sw\").equals(\"0\")) showWords = false; else showWords = true;\r\n        if (post.get(\"st\") != null)\r\n            if (post.get(\"st\").equals(\"0\")) showTitle = false; else showTitle = true;\r\n        if (post.get(\"su\") != null)\r\n            if (post.get(\"su\").equals(\"0\")) showURL = false; else showURL = true;\r\n        } // end != null\r\n\r\n        // create table\r\n        if (tabletype == 0) {\r\n            prop.put(\"table\", \"2\");\r\n        } else if (sb.crawlResults.getStackSize(tabletype) == 0) {\r\n            prop.put(\"table\", \"0\");\r\n        } else {\r\n            prop.put(\"table\", \"1\");\r\n            if (lines > sb.crawlResults.getStackSize(tabletype)) lines = sb.crawlResults.getStackSize(tabletype);\r\n            if (lines == sb.crawlResults.getStackSize(tabletype)) {\r\n                prop.put(\"table_size\", \"0\");\r\n            } else {\r\n                prop.put(\"table_size\", \"1\");\r\n                prop.put(\"table_size_count\", lines);\r\n            }\r\n            prop.put(\"table_size_all\", sb.crawlResults.getStackSize(tabletype));\r\n            \r\n            if (showControl) {\r\n                prop.put(\"table_showControl\", \"1\");\r\n                prop.putHTML(\"table_showControl_feedbackpage\", \"CrawlResults.html\");\r\n                prop.put(\"table_showControl_tabletype\", tabletype);\r\n            } else\r\n                prop.put(\"table_showControl\", \"0\");\r\n            prop.put(\"table_showInit\", (showInit) ? \"1\" : \"0\");\r\n            prop.put(\"table_showExec\", (showExec) ? \"1\" : \"0\");\r\n            prop.put(\"table_showDate\", (showDate) ? \"1\" : \"0\");\r\n            prop.put(\"table_showWords\", (showWords) ? \"1\" : \"0\");\r\n            prop.put(\"table_showTitle\", (showTitle) ? \"1\" : \"0\");\r\n            prop.put(\"table_showURL\", (showURL) ? \"1\" : \"0\");\r\n\r\n            boolean dark = true;\r\n            String urlHash, initiatorHash, executorHash;\r\n            String cachepath, urlstr, urltxt;\r\n            yacySeed initiatorSeed, executorSeed;\r\n            indexURLReference urle;\r\n\r\n            int i, cnt = 0;\r\n            for (i = sb.crawlResults.getStackSize(tabletype) - 1; i >= (sb.crawlResults.getStackSize(tabletype) - lines); i--) {\r\n                initiatorHash = sb.crawlResults.getInitiatorHash(tabletype, i);\r\n                executorHash = sb.crawlResults.getExecutorHash(tabletype, i);\r\n//              serverLog.logFinest(\"PLASMA\", \"plasmaCrawlLURL/genTableProps initiatorHash=\" + initiatorHash + \" executorHash=\" + executorHash);\r\n                urlHash = sb.crawlResults.getUrlHash(tabletype, i);\r\n//              serverLog.logFinest(\"PLASMA\", \"plasmaCrawlLURL/genTableProps urlHash=\" + urlHash);\r\n                try {\r\n                    urle = sb.webIndex.getURL(urlHash, null, 0);\r\n                    if(urle == null) {\r\n                        serverLog.logWarning(\"PLASMA\", \"CrawlResults: URL not in index for crawl result \"+ i +\" with hash \"+ urlHash);\r\n                        urlstr = null;\r\n                        urltxt = null;\r\n                        cachepath = null;\r\n                    } else {\r\n                        indexURLReference.Components comp = urle.comp();\r\n                        urlstr = comp.url().toNormalform(false, true);\r\n                        urltxt = nxTools.shortenURLString(urlstr, 72); // shorten the string text like a URL\r\n                        cachepath = plasmaHTCache.getCachePath(new yacyURL(urlstr, null)).toString().replace('\\\\', '/').substring(plasmaHTCache.cachePath.toString().length() + 1);\r\n                    }\r\n//                  serverLog.logFinest(\"PLASMA\", \"plasmaCrawlLURL/genTableProps urle=\" + urle.toString());\r\n                    initiatorSeed = sb.webIndex.seedDB.getConnected(initiatorHash);\r\n                    executorSeed = sb.webIndex.seedDB.getConnected(executorHash);\r\n\r\n                    prop.put(\"table_indexed_\" + cnt + \"_dark\", (dark) ? \"1\" : \"0\");\r\n                    if (showControl) {\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showControl\", \"1\");\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showControl_feedbackpage\", \"CrawlResults.html\");\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showControl_tabletype\", tabletype);\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showControl_urlhash\", urlHash);\r\n                    } else\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showControl\", \"0\");\r\n\r\n                    if (showInit) {\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showInit\", \"1\");\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showInit_initiatorSeed\", (initiatorSeed == null) ? \"unknown\" : initiatorSeed.getName());\r\n                    } else\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showInit\", \"0\");\r\n\r\n                    if (showExec) {\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showExec\", \"1\");\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showExec_executorSeed\", (executorSeed == null) ? \"unknown\" : executorSeed.getName());\r\n                    } else\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showExec\", \"0\");\r\n\r\n                    if (showDate) {\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showDate\", \"1\");\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showDate_modified\", daydate(urle.moddate()));\r\n                    } else\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showDate\", \"0\");\r\n\r\n                    if (showWords) {\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showWords\", \"1\");\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showWords_count\", urle.wordCount());\r\n                    } else\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showWords\", \"0\");\r\n\r\n                    if (showTitle) {\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showTitle\", (showTitle) ? \"1\" : \"0\");\r\n                        if (cachepath == null) {\r\n                            prop.put(\"table_indexed_\" + cnt + \"_showTitle_available\", \"0\");\r\n                        } else {\r\n                            prop.put(\"table_indexed_\" + cnt + \"_showTitle_available\", \"1\");\r\n\r\n                            if (comp.dc_title() == null || comp.dc_title().trim().length() == 0)\r\n                                prop.put(\"table_indexed_\" + cnt + \"_showTitle_available_nodescr\", \"0\");\r\n                            else\r\n                                prop.put(\"table_indexed_\" + cnt + \"_showTitle_available_nodescr\", \"1\");\r\n                            prop.putHTML(\"table_indexed_\" + cnt + \"_showTitle_available_nodescr_urldescr\", comp.dc_title());\r\n\r\n                            prop.put(\"table_indexed_\" + cnt + \"_showTitle_available_cachepath\", cachepath);\r\n                            prop.putHTML(\"table_indexed_\" + cnt + \"_showTitle_available_urltitle\", urlstr);\r\n                        }\r\n                    } else\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showTitle\", \"0\");\r\n\r\n                    if (showURL) {\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showURL\", \"1\");\r\n                        if (cachepath == null) {\r\n                            prop.put(\"table_indexed_\" + cnt + \"_showURL_available\", \"0\");\r\n                        } else {\r\n                            prop.put(\"table_indexed_\" + cnt + \"_showURL_available\", \"1\");\r\n\r\n                            prop.put(\"table_indexed_\" + cnt + \"_showURL_available_cachepath\", cachepath);\r\n                            prop.putHTML(\"table_indexed_\" + cnt + \"_showURL_available_urltitle\", urlstr);\r\n                            prop.put(\"table_indexed_\" + cnt + \"_showURL_available_url\", urltxt);\r\n                        }\r\n                    } else\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showURL\", \"0\");\r\n\r\n                    dark = !dark;\r\n                    cnt++;\r\n                } catch (Exception e) {\r\n                    serverLog.logSevere(\"PLASMA\", \"genTableProps\", e);\r\n                }\r\n            }\r\n            prop.put(\"table_indexed\", cnt);\r\n        }\r\n        prop.put(\"process\", tabletype);\r\n        // return rewrite properties\r\n        return prop;\r\n    }","id":48252,"modified_method":"public static serverObjects respond(httpHeader header, serverObjects post, serverSwitch<?> env) {\r\n        // return variable that accumulates replacements\r\n        final plasmaSwitchboard sb = (plasmaSwitchboard) env;\r\n        final serverObjects prop = new serverObjects();\r\n\r\n        int lines = 500;\r\n        boolean showControl = env.getConfigBool(\"IndexMonitorControl\", true);\r\n        boolean showInit = env.getConfigBool(\"IndexMonitorInit\", false);\r\n        boolean showExec = env.getConfigBool(\"IndexMonitorExec\", false);\r\n        boolean showDate = env.getConfigBool(\"IndexMonitorDate\", true);\r\n        boolean showWords = env.getConfigBool(\"IndexMonitorWords\", true);\r\n        boolean showTitle = env.getConfigBool(\"IndexMonitorTitle\", true);\r\n        boolean showURL = env.getConfigBool(\"IndexMonitorURL\", true);\r\n\r\n        if (post == null) {\r\n            post = new serverObjects();\r\n            post.put(\"process\", \"0\");\r\n        }\r\n\r\n        // find process number\r\n        int tabletype;\r\n        try {\r\n            tabletype = Integer.parseInt(post.get(\"process\", \"0\"));\r\n        } catch (NumberFormatException e) {\r\n            tabletype = 0;\r\n        }\r\n\r\n        if ((post != null) && (post.containsKey(\"autoforward\")) && (tabletype == 5) && (sb.crawlResults.getStackSize(5) == 0)) {\r\n            // the main menu does a request to the local crawler page, but in case this table is empty, the overview page is shown\r\n            tabletype = 0;\r\n        }\r\n        \r\n        // check if authorization is needed and/or given\r\n        if (((tabletype > 0) && (tabletype < 6)) ||\r\n            (post != null && (post.containsKey(\"clearlist\") ||\r\n            post.containsKey(\"deleteentry\")))) {\r\n            String authorization = ((String) header.get(httpHeader.AUTHORIZATION, \"xxxxxx\"));\r\n            if (authorization.length() != 0) {\r\n                if (! sb.verifyAuthentication(header, true)){\r\n                    // force log-in (again, because wrong password was given)\r\n                    prop.put(\"AUTHENTICATE\", \"admin log-in\");\r\n                    return prop;\r\n                }\r\n            } else {\r\n                // force log-in\r\n                prop.put(\"AUTHENTICATE\", \"admin log-in\");\r\n                return prop;\r\n            }\r\n        }\r\n\r\n        if(post != null) {\r\n        // custom number of lines\r\n        if (post.containsKey(\"count\")) {\r\n            lines = Integer.parseInt(post.get(\"count\", \"500\"));\r\n        }\r\n\r\n        // do the commands\r\n        if (post.containsKey(\"clearlist\")) sb.crawlResults.clearStack(tabletype);\r\n        if (post.containsKey(\"deleteentry\")) {\r\n                String hash = post.get(\"hash\", null);\r\n                if (hash != null) {\r\n                    // delete from database\r\n                    sb.webIndex.removeURL(hash);\r\n                }\r\n            }\r\n        if (post.containsKey(\"moreIndexed\")) {\r\n            lines = Integer.parseInt(post.get(\"showIndexed\", \"500\"));\r\n        }\r\n        if (post.get(\"sc\") != null)\r\n            if (post.get(\"sc\").equals(\"0\")) showControl = false; else showControl = true;\r\n        if (post.get(\"si\") != null)\r\n            if (post.get(\"si\").equals(\"0\")) showInit = false; else showInit = true;\r\n        if (post.get(\"se\") != null)\r\n            if (post.get(\"se\").equals(\"0\")) showExec = false; else showExec = true;\r\n        if (post.get(\"sd\") != null)\r\n            if (post.get(\"sd\").equals(\"0\")) showDate = false; else showDate = true;\r\n        if (post.get(\"sw\") != null)\r\n            if (post.get(\"sw\").equals(\"0\")) showWords = false; else showWords = true;\r\n        if (post.get(\"st\") != null)\r\n            if (post.get(\"st\").equals(\"0\")) showTitle = false; else showTitle = true;\r\n        if (post.get(\"su\") != null)\r\n            if (post.get(\"su\").equals(\"0\")) showURL = false; else showURL = true;\r\n        } // end != null\r\n\r\n        // create table\r\n        if (tabletype == 0) {\r\n            prop.put(\"table\", \"2\");\r\n        } else if (sb.crawlResults.getStackSize(tabletype) == 0) {\r\n            prop.put(\"table\", \"0\");\r\n        } else {\r\n            prop.put(\"table\", \"1\");\r\n            if (lines > sb.crawlResults.getStackSize(tabletype)) lines = sb.crawlResults.getStackSize(tabletype);\r\n            if (lines == sb.crawlResults.getStackSize(tabletype)) {\r\n                prop.put(\"table_size\", \"0\");\r\n            } else {\r\n                prop.put(\"table_size\", \"1\");\r\n                prop.put(\"table_size_count\", lines);\r\n            }\r\n            prop.put(\"table_size_all\", sb.crawlResults.getStackSize(tabletype));\r\n            \r\n            if (showControl) {\r\n                prop.put(\"table_showControl\", \"1\");\r\n                prop.putHTML(\"table_showControl_feedbackpage\", \"CrawlResults.html\");\r\n                prop.put(\"table_showControl_tabletype\", tabletype);\r\n            } else\r\n                prop.put(\"table_showControl\", \"0\");\r\n            prop.put(\"table_showInit\", (showInit) ? \"1\" : \"0\");\r\n            prop.put(\"table_showExec\", (showExec) ? \"1\" : \"0\");\r\n            prop.put(\"table_showDate\", (showDate) ? \"1\" : \"0\");\r\n            prop.put(\"table_showWords\", (showWords) ? \"1\" : \"0\");\r\n            prop.put(\"table_showTitle\", (showTitle) ? \"1\" : \"0\");\r\n            prop.put(\"table_showURL\", (showURL) ? \"1\" : \"0\");\r\n\r\n            boolean dark = true;\r\n            String urlHash, initiatorHash, executorHash;\r\n            String cachepath, urlstr, urltxt;\r\n            yacySeed initiatorSeed, executorSeed;\r\n            indexURLReference urle;\r\n            indexURLReference.Components comp;\r\n\r\n            int i, cnt = 0;\r\n            for (i = sb.crawlResults.getStackSize(tabletype) - 1; i >= (sb.crawlResults.getStackSize(tabletype) - lines); i--) {\r\n                initiatorHash = sb.crawlResults.getInitiatorHash(tabletype, i);\r\n                executorHash = sb.crawlResults.getExecutorHash(tabletype, i);\r\n//              serverLog.logFinest(\"PLASMA\", \"plasmaCrawlLURL/genTableProps initiatorHash=\" + initiatorHash + \" executorHash=\" + executorHash);\r\n                urlHash = sb.crawlResults.getUrlHash(tabletype, i);\r\n//              serverLog.logFinest(\"PLASMA\", \"plasmaCrawlLURL/genTableProps urlHash=\" + urlHash);\r\n                try {\r\n                    urle = sb.webIndex.getURL(urlHash, null, 0);\r\n                    if(urle == null) {\r\n                        serverLog.logWarning(\"PLASMA\", \"CrawlResults: URL not in index for crawl result \"+ i +\" with hash \"+ urlHash);\r\n                        urlstr = null;\r\n                        urltxt = null;\r\n                        cachepath = null;\r\n                        comp = null;\r\n                    } else {\r\n                        comp = urle.comp();\r\n                        urlstr = comp.url().toNormalform(false, true);\r\n                        urltxt = nxTools.shortenURLString(urlstr, 72); // shorten the string text like a URL\r\n                        cachepath = plasmaHTCache.getCachePath(new yacyURL(urlstr, null)).toString().replace('\\\\', '/').substring(plasmaHTCache.cachePath.toString().length() + 1);\r\n                    }\r\n//                  serverLog.logFinest(\"PLASMA\", \"plasmaCrawlLURL/genTableProps urle=\" + urle.toString());\r\n                    initiatorSeed = sb.webIndex.seedDB.getConnected(initiatorHash);\r\n                    executorSeed = sb.webIndex.seedDB.getConnected(executorHash);\r\n\r\n                    prop.put(\"table_indexed_\" + cnt + \"_dark\", (dark) ? \"1\" : \"0\");\r\n                    if (showControl) {\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showControl\", \"1\");\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showControl_feedbackpage\", \"CrawlResults.html\");\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showControl_tabletype\", tabletype);\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showControl_urlhash\", urlHash);\r\n                    } else\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showControl\", \"0\");\r\n\r\n                    if (showInit) {\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showInit\", \"1\");\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showInit_initiatorSeed\", (initiatorSeed == null) ? \"unknown\" : initiatorSeed.getName());\r\n                    } else\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showInit\", \"0\");\r\n\r\n                    if (showExec) {\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showExec\", \"1\");\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showExec_executorSeed\", (executorSeed == null) ? \"unknown\" : executorSeed.getName());\r\n                    } else\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showExec\", \"0\");\r\n\r\n                    if (showDate && urle != null) {\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showDate\", \"1\");\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showDate_modified\", daydate(urle.moddate()));\r\n                    } else\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showDate\", \"0\");\r\n\r\n                    if (showWords && urle != null) {\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showWords\", \"1\");\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showWords_count\", urle.wordCount());\r\n                    } else\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showWords\", \"0\");\r\n\r\n                    if (showTitle) {\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showTitle\", (showTitle) ? \"1\" : \"0\");\r\n                        if (cachepath == null) {\r\n                            prop.put(\"table_indexed_\" + cnt + \"_showTitle_available\", \"0\");\r\n                        } else {\r\n                            prop.put(\"table_indexed_\" + cnt + \"_showTitle_available\", \"1\");\r\n\r\n                            if (comp == null || comp.dc_title() == null || comp.dc_title().trim().length() == 0)\r\n                                prop.put(\"table_indexed_\" + cnt + \"_showTitle_available_nodescr\", \"0\");\r\n                            else {\r\n                                prop.put(\"table_indexed_\" + cnt + \"_showTitle_available_nodescr\", \"1\");\r\n                                prop.putHTML(\"table_indexed_\" + cnt + \"_showTitle_available_nodescr_urldescr\", comp.dc_title());\r\n                            }\r\n\r\n                            prop.put(\"table_indexed_\" + cnt + \"_showTitle_available_cachepath\", cachepath);\r\n                            prop.putHTML(\"table_indexed_\" + cnt + \"_showTitle_available_urltitle\", urlstr);\r\n                        }\r\n                    } else\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showTitle\", \"0\");\r\n\r\n                    if (showURL) {\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showURL\", \"1\");\r\n                        if (cachepath == null) {\r\n                            prop.put(\"table_indexed_\" + cnt + \"_showURL_available\", \"0\");\r\n                        } else {\r\n                            prop.put(\"table_indexed_\" + cnt + \"_showURL_available\", \"1\");\r\n\r\n                            prop.put(\"table_indexed_\" + cnt + \"_showURL_available_cachepath\", cachepath);\r\n                            prop.putHTML(\"table_indexed_\" + cnt + \"_showURL_available_urltitle\", urlstr);\r\n                            prop.put(\"table_indexed_\" + cnt + \"_showURL_available_url\", urltxt);\r\n                        }\r\n                    } else\r\n                        prop.put(\"table_indexed_\" + cnt + \"_showURL\", \"0\");\r\n\r\n                    dark = !dark;\r\n                    cnt++;\r\n                } catch (Exception e) {\r\n                    serverLog.logSevere(\"PLASMA\", \"genTableProps\", e);\r\n                }\r\n            }\r\n            prop.put(\"table_indexed\", cnt);\r\n        }\r\n        prop.put(\"process\", tabletype);\r\n        // return rewrite properties\r\n        return prop;\r\n    }","commit_id":"b63a519456d0d52346ea418632aa3417b098ce9a","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"@Override\r\n  public boolean uses(final Using u) {\r\n    switch(u) {\r\n      case POS:\r\n        for(final Expr e : expr) {\r\n          final Type t = e.returned();\r\n          if(t == null || t.num || e.uses(u)) return true;\r\n        }\r\n        return super.uses(u);\r\n      default:\r\n        return super.uses(u);\r\n    }\r\n  }","id":48253,"modified_method":"@Override\r\n  public boolean uses(final Using u) {\r\n    switch(u) {\r\n      case POS:\r\n        for(final Expr e : expr) {\r\n          final Type t = e.returned();\r\n          \r\n          // I need to find a way to get access to e.func.desc or \r\n          // e.func.name because there is the last() or position() \r\n          // function described and I didn't find it anywhere else.\r\n\r\n          if(t == null || t.num || e.uses(u)) return false;\r\n        }\r\n        return super.uses(u);\r\n      default:\r\n        return super.uses(u);\r\n    }\r\n  }","commit_id":"48010d56b961ac97979d04bcb189a8cde524c057","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public Expr comp(final XQContext ctx) throws XQException {\r\n    root = root.comp(ctx);\r\n    return super.comp(ctx);\r\n  }","id":48254,"modified_method":"@Override\r\n  public Expr comp(final XQContext ctx) throws XQException {\r\n    root = root.comp(ctx);\r\n    super.comp(ctx);\r\n    // if in Using.POS is a predicate that has the last() or\r\n    // position() function, it will be processed in PredIter\r\n    return uses(Using.POS) ? new PredIter(root, expr) : this; \r\n  }","commit_id":"48010d56b961ac97979d04bcb189a8cde524c057","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public Iter iter(final XQContext ctx) throws XQException {\r\n    return new Iter() {\r\n\r\n      Iter iter = ctx.iter(root);\r\n\r\n      final Item ci = ctx.item;\r\n      final int cs = ctx.size;\r\n      final int cp = ctx.pos;\r\n      \r\n      boolean firstTime = true;\r\n      int predCount = 0;\r\n      int predCountTemp = predCount - 1;\r\n      int c = 0;\r\n      int s = 0;\r\n      \r\n      final SeqIter sb = new SeqIter();\r\n      Item i;\r\n      \r\n      @Override\r\n      public Item next() throws XQException {\r\n\r\n        // cache results to support last() function\r\n        if (firstTime) {\r\n          while((i = iter.next()) != null) sb.add(i);\r\n          firstTime = false;\r\n        }\r\n\r\n        // evaluates predicates\r\n        while (predCount < expr.length) {\r\n          // looks if it's a new predicate\r\n          if ((predCount - 1) == predCountTemp) {\r\n            predCountTemp++;\r\n            ctx.size = sb.size;\r\n            ctx.pos = 1;\r\n          }\r\n\r\n          while (s < sb.size) {\r\n            ctx.item = sb.item[s];\r\n            i = ctx.iter(expr[predCount]).ebv();\r\n            if(i.n() ? i.dbl() == ctx.pos : i.bool()) {\r\n              sb.item[c] = sb.item[s];\r\n              ctx.pos++;\r\n              s++;\r\n              return sb.item[c++];\r\n            }\r\n            ctx.pos++;\r\n            s++;\r\n          }\r\n          predCount++;\r\n          s = 0;\r\n          sb.size = c;\r\n        }\r\n\r\n        ctx.item = ci;\r\n        ctx.size = cs;\r\n        ctx.pos = cp;\r\n        return null;\r\n      }\r\n    };\r\n  }","id":48255,"modified_method":"@Override\r\n  public Iter iter(final XQContext ctx) throws XQException {\r\n    Iter iter = ctx.iter(root);\r\n\r\n    final Item ci = ctx.item;\r\n    final int cs = ctx.size;\r\n    final int cp = ctx.pos;\r\n    \r\n    // cache results to support last() function\r\n    final SeqIter sb = new SeqIter();\r\n    Item i;\r\n    while((i = iter.next()) != null) sb.add(i);\r\n\r\n    // evaluates predicates\r\n    for(final Expr p : expr) {\r\n      ctx.size = sb.size;\r\n      ctx.pos = 1;\r\n      int c = 0;\r\n      for(int s = 0; s < sb.size; s++) {\r\n        ctx.item = sb.item[s];\r\n        i = ctx.iter(p).ebv();\r\n        if(i.n() ? i.dbl() == ctx.pos : i.bool()) sb.item[c++] = sb.item[s];\r\n        ctx.pos++;\r\n      }\r\n      sb.size = c;\r\n    }\r\n\r\n    ctx.item = ci;\r\n    ctx.size = cs;\r\n    ctx.pos = cp;\r\n    return sb;\r\n  }","commit_id":"48010d56b961ac97979d04bcb189a8cde524c057","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public boolean uses(final Using u) {\r\n    switch(u) {\r\n      case POS:\r\n        for(int e = 0; e != expr.length; e++) {\r\n          final Type t = expr[e].returned();\r\n          if(t == null || t.num || expr[e].uses(u)) return true;\r\n        }\r\n        return super.uses(u);\r\n      default:\r\n        return super.uses(u);\r\n    }\r\n  }","id":48256,"modified_method":"@Override\r\n  public boolean uses(final Using u) {\r\n    switch(u) {\r\n      case POS:\r\n        for(final Expr e : expr) {\r\n          final Type t = e.returned();\r\n          if(t == null || t.num || e.uses(u)) return true;\r\n        }\r\n        return super.uses(u);\r\n      default:\r\n        return super.uses(u);\r\n    }\r\n  }","commit_id":"48010d56b961ac97979d04bcb189a8cde524c057","url":"https://github.com/BaseXdb/basex"},{"original_method":"public XmldbURI toXmldbURI() throws XPathException {\n\t\ttry {\n\t\t\treturn XmldbURI.xmldbUriFor(escape(uri));\n\t\t} catch (URISyntaxException e) {\n\t\t\tthrow new XPathException(\n\t\t\t\t\"failed to convert \" + uri + \" into an XmldbURI: \" + e.getMessage(),\n\t\t\t\te);\n\t\t}\n\t}","id":48257,"modified_method":"public XmldbURI toXmldbURI() throws XPathException {\n\t\ttry {\n\t\t\treturn XmldbURI.xmldbUriFor(uri, false);\n\t\t} catch (URISyntaxException e) {\n\t\t\tthrow new XPathException(\n\t\t\t\t\"failed to convert \" + uri + \" into an XmldbURI: \" + e.getMessage(),\n\t\t\t\te);\n\t\t}\n\t}","commit_id":"77e6e168ffccc5fec2aa8483f05fc4db82fb2184","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * This function accepts a String representation of an xs:anyURI and applies\n\t * the escaping method described in Section 5.4 of XML Linking (http://www.w3.org/TR/2000/PR-xlink-20001220/#link-locators)\n\t * to turn it into a valid URI\n\t * \n         * @see <a href=\"http://www.w3.org/TR/2000/PR-xlink-20001220/#link-locators\">http://www.w3.org/TR/2000/PR-xlink-20001220/#link-locators<\/A>\n\t * @param uri The xs:anyURI to escape into a valid URI\n\t * @return An escaped string representation of the provided xs:anyURI\n\t */\n\t public static String escape(String uri) {\n\t\t\t//TODO: TEST TEST TEST!\n\t\t\t// basically copied from URLEncoder.encode\n\t\ttry {\n\t\t\tboolean needToChange = false;\n\t\t\tboolean wroteUnencodedChar = false; \n\t\t\tint maxBytesPerChar = 10; // rather arbitrary limit, but safe for now\n\t\t\tStringBuffer out = new StringBuffer(uri.length());\n\t\t\tByteArrayOutputStream buf = new ByteArrayOutputStream(maxBytesPerChar);\n\t\t\t\n\t\t\tOutputStreamWriter writer = new OutputStreamWriter(buf, \"UTF-8\");\n\t\t\t\n\t\t\tfor (int i = 0; i < uri.length(); i++) {\n\t\t\t\tint c = (int) uri.charAt(i);\n\t\t\t\tif (c>127 || needEncoding.get(c)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (wroteUnencodedChar) { // Fix for 4407610\n\t\t\t\t\t\t\twriter = new OutputStreamWriter(buf, \"UTF-8\");\n\t\t\t\t\t\t\twroteUnencodedChar = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twriter.write(c);\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If this character represents the start of a Unicode\n\t\t\t\t\t\t * surrogate pair, then pass in two characters. It's not\n\t\t\t\t\t\t * clear what should be done if a bytes reserved in the \n\t\t\t\t\t\t * surrogate pairs range occurs outside of a legal\n\t\t\t\t\t\t * surrogate pair. For now, just treat it as if it were \n\t\t\t\t\t\t * any other character.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (c >= 0xD800 && c <= 0xDBFF) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t System.out.println(Integer.toHexString(c) \n\t\t\t\t\t\t\t + \" is high surrogate\");\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tif ( (i+1) < uri.length()) {\n\t\t\t\t\t\t\t\tint d = (int) uri.charAt(i+1);\n\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t System.out.println(\"\\tExamining \" \n\t\t\t\t\t\t\t\t + Integer.toHexString(d));\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tif (d >= 0xDC00 && d <= 0xDFFF) {\n\t\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t\t System.out.println(\"\\t\" \n\t\t\t\t\t\t\t\t\t + Integer.toHexString(d) \n\t\t\t\t\t\t\t\t\t + \" is low surrogate\");\n\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\twriter.write(d);\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\twriter.flush();\n\t\t\t\t\t} catch(IOException e) {\n\t\t\t\t\t\tbuf.reset();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tbyte[] ba = buf.toByteArray();\n\t\t\t\t\tfor (int j = 0; j < ba.length; j++) {\n\t\t\t\t\t\tout.append('%');\n\t\t\t\t\t\tchar ch = Character.forDigit((ba[j] >> 4) & 0xF, 16);\n\t\t\t\t\t\t// converting to use uppercase letter as part of\n\t\t\t\t\t\t// the hex value if ch is a letter.\n\t\t\t\t\t\tif (Character.isLetter(ch)) {\n\t\t\t\t\t\t\tch -= caseDiff;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tout.append(ch);\n\t\t\t\t\t\tch = Character.forDigit(ba[j] & 0xF, 16);\n\t\t\t\t\t\tif (Character.isLetter(ch)) {\n\t\t\t\t\t\t\tch -= caseDiff;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tout.append(ch);\n\t\t\t\t\t}\n\t\t\t\t\tbuf.reset();\n\t\t\t\t\tneedToChange = true;\n\t\t\t\t} else {\n\t\t\t\t\tout.append((char)c);\n\t\t\t\t\twroteUnencodedChar = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn (needToChange? out.toString() : uri);\n\t\t} catch(UnsupportedEncodingException e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}","id":48258,"modified_method":"/**\n\t * This function accepts a String representation of an xs:anyURI and applies\n\t * the escaping method described in Section 5.4 of XML Linking (http://www.w3.org/TR/2000/PR-xlink-20001220/#link-locators)\n\t * to turn it into a valid URI\n\t * \n         * @see <a href=\"http://www.w3.org/TR/2000/PR-xlink-20001220/#link-locators\">http://www.w3.org/TR/2000/PR-xlink-20001220/#link-locators<\/A>\n\t * @param uri The xs:anyURI to escape into a valid URI\n\t * @return An escaped string representation of the provided xs:anyURI\n\t */\n\t public static String escape(String uri) {\n\n        return FunEscapeURI.escape(uri, false);\n\n        //TODO: TEST TEST TEST!\n//\t\t\t// basically copied from URLEncoder.encode\n//\t\ttry {\n//\t\t\tboolean needToChange = false;\n//\t\t\tboolean wroteUnencodedChar = false;\n//\t\t\tint maxBytesPerChar = 10; // rather arbitrary limit, but safe for now\n//\t\t\tStringBuffer out = new StringBuffer(uri.length());\n//\t\t\tByteArrayOutputStream buf = new ByteArrayOutputStream(maxBytesPerChar);\n//\n//\t\t\tOutputStreamWriter writer = new OutputStreamWriter(buf, \"UTF-8\");\n//\n//\t\t\tfor (int i = 0; i < uri.length(); i++) {\n//\t\t\t\tint c = (int) uri.charAt(i);\n//\t\t\t\tif (c>127 || needEncoding.get(c)) {\n//\t\t\t\t\ttry {\n//\t\t\t\t\t\tif (wroteUnencodedChar) { // Fix for 4407610\n//\t\t\t\t\t\t\twriter = new OutputStreamWriter(buf, \"UTF-8\");\n//\t\t\t\t\t\t\twroteUnencodedChar = false;\n//\t\t\t\t\t\t}\n//\t\t\t\t\t\twriter.write(c);\n//\t\t\t\t\t\t/*\n//\t\t\t\t\t\t * If this character represents the start of a Unicode\n//\t\t\t\t\t\t * surrogate pair, then pass in two characters. It's not\n//\t\t\t\t\t\t * clear what should be done if a bytes reserved in the\n//\t\t\t\t\t\t * surrogate pairs range occurs outside of a legal\n//\t\t\t\t\t\t * surrogate pair. For now, just treat it as if it were\n//\t\t\t\t\t\t * any other character.\n//\t\t\t\t\t\t */\n//\t\t\t\t\t\tif (c >= 0xD800 && c <= 0xDBFF) {\n//\t\t\t\t\t\t\t/*\n//\t\t\t\t\t\t\t System.out.println(Integer.toHexString(c)\n//\t\t\t\t\t\t\t + \" is high surrogate\");\n//\t\t\t\t\t\t\t */\n//\t\t\t\t\t\t\tif ( (i+1) < uri.length()) {\n//\t\t\t\t\t\t\t\tint d = (int) uri.charAt(i+1);\n//\t\t\t\t\t\t\t\t/*\n//\t\t\t\t\t\t\t\t System.out.println(\"\\tExamining \"\n//\t\t\t\t\t\t\t\t + Integer.toHexString(d));\n//\t\t\t\t\t\t\t\t */\n//\t\t\t\t\t\t\t\tif (d >= 0xDC00 && d <= 0xDFFF) {\n//\t\t\t\t\t\t\t\t\t/*\n//\t\t\t\t\t\t\t\t\t System.out.println(\"\\t\"\n//\t\t\t\t\t\t\t\t\t + Integer.toHexString(d)\n//\t\t\t\t\t\t\t\t\t + \" is low surrogate\");\n//\t\t\t\t\t\t\t\t\t */\n//\t\t\t\t\t\t\t\t\twriter.write(d);\n//\t\t\t\t\t\t\t\t\ti++;\n//\t\t\t\t\t\t\t\t}\n//\t\t\t\t\t\t\t}\n//\t\t\t\t\t\t}\n//\t\t\t\t\t\twriter.flush();\n//\t\t\t\t\t} catch(IOException e) {\n//\t\t\t\t\t\tbuf.reset();\n//\t\t\t\t\t\tcontinue;\n//\t\t\t\t\t}\n//\t\t\t\t\tbyte[] ba = buf.toByteArray();\n//\t\t\t\t\tfor (int j = 0; j < ba.length; j++) {\n//\t\t\t\t\t\tout.append('%');\n//\t\t\t\t\t\tchar ch = Character.forDigit((ba[j] >> 4) & 0xF, 16);\n//\t\t\t\t\t\t// converting to use uppercase letter as part of\n//\t\t\t\t\t\t// the hex value if ch is a letter.\n//\t\t\t\t\t\tif (Character.isLetter(ch)) {\n//\t\t\t\t\t\t\tch -= caseDiff;\n//\t\t\t\t\t\t}\n//\t\t\t\t\t\tout.append(ch);\n//\t\t\t\t\t\tch = Character.forDigit(ba[j] & 0xF, 16);\n//\t\t\t\t\t\tif (Character.isLetter(ch)) {\n//\t\t\t\t\t\t\tch -= caseDiff;\n//\t\t\t\t\t\t}\n//\t\t\t\t\t\tout.append(ch);\n//\t\t\t\t\t}\n//\t\t\t\t\tbuf.reset();\n//\t\t\t\t\tneedToChange = true;\n//\t\t\t\t} else {\n//\t\t\t\t\tout.append((char)c);\n//\t\t\t\t\twroteUnencodedChar = true;\n//\t\t\t\t}\n//\t\t\t}\n//\n//\t\t\treturn (needToChange? out.toString() : uri);\n//\t\t} catch(UnsupportedEncodingException e) {\n//\t\t\tthrow new RuntimeException(e);\n//\t\t}\n\t}","commit_id":"77e6e168ffccc5fec2aa8483f05fc4db82fb2184","url":"https://github.com/eXist-db/exist"},{"original_method":"private static Sequence getDocumentByPath(XQueryContext context, String path) throws XPathException, PermissionDeniedException\n\t{\t \n\t\tSequence document = Sequence.EMPTY_SEQUENCE;\t\n\n\t\tif(path.matches(\"^[a-z]+://.*\"))\n\t\t{\n\t\t\t/* URL */\n\t\t\t\n\t\t\ttry\n\t\t\t{\n\t\t\t\t//Basic tests on the URL\t\t\t\t\n\t\t\t\tURL url = new URL(path);\n\t\t\t\tURLConnection con = url.openConnection();\n\t\t\t\tif(con instanceof HttpURLConnection)\n\t\t\t\t{\n\t\t\t\t\tHttpURLConnection httpConnection = (HttpURLConnection)con;\n\t\t\t\t\tif(httpConnection.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Special case: '404'\n                        return Sequence.EMPTY_SEQUENCE;\n                    }\n\t\t\t\t\telse if(httpConnection.getResponseCode() != HttpURLConnection.HTTP_OK)\n\t\t\t\t\t{\n\t\t\t\t\t\t//TODO : return another type \n                        throw new PermissionDeniedException(\"Server returned code \" + httpConnection.getResponseCode());\t\n                    }\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//TODO : process pseudo-protocols URLs more efficiently.\n\t\t\t\torg.exist.memtree.DocumentImpl memtreeDoc = null;\n\t\t\t\t// we use eXist's in-memory DOM implementation\n\t\t\t\tSAXParserFactory factory = SAXParserFactory.newInstance();\n\t\t\t\tfactory.setNamespaceAware(true);\t\t\t\t\n\t\t\t\t//TODO : we should be able to cope with context.getBaseURI()\t\t\t\t\n\t\t\t\tInputSource src = new InputSource(con.getInputStream());\n\t\t\t\tSAXParser parser = factory.newSAXParser();\n\t\t\t\tXMLReader reader = parser.getXMLReader();\n\t\t\t\tSAXAdapter adapter = new SAXAdapter();\n\t\t\t\treader.setContentHandler(adapter);\n\t\t\t\treader.parse(src);\t\t\t\t\t\n\t\t\t\tDocument doc = adapter.getDocument();\n\t\t\t\tmemtreeDoc = (org.exist.memtree.DocumentImpl)doc;\n\t\t\t\tmemtreeDoc.setContext(context);\n\t\t\t\tdocument = memtreeDoc;\n\t\t\t}\n\t\t\tcatch(MalformedURLException e)\n\t\t\t{\n\t\t\t\tthrow new XPathException(e.getMessage(), e);\t\t\t\t\t\n\t\t\t}\n\t\t\tcatch(ParserConfigurationException e)\n\t\t\t{\t\t\t\t\n\t\t\t\tthrow new XPathException(e.getMessage(), e);\t\t\n\t\t\t}\n\t\t\tcatch(SAXException e)\n\t\t\t{\n\t\t\t\tthrow new XPathException(e.getMessage(), e);\t\n\t\t\t}\n\t\t\tcatch(IOException e)\n\t\t\t{\n\t\t\t\t// Special case: FileNotFoundException\n                if(e instanceof FileNotFoundException)\n                {\n                \treturn Sequence.EMPTY_SEQUENCE;\n                }\n                else\n                {\n                \tthrow new XPathException(e.getMessage(), e);\t\n                }\n\t\t\t}\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Database documents */\n\n\t\t\t// check if the loaded documents should remain locked\n\t\t\tboolean lockOnLoad = context.lockDocumentsOnLoad();\n\n\t\t\tDocumentImpl doc = null;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tXmldbURI pathUri = XmldbURI.xmldbUriFor(path);\n\t\t\t\t// relative collection Path: add the current base URI\n\t\t\t\tpathUri = context.getBaseURI().toXmldbURI().resolveCollectionPath(pathUri);\n\t\t\t\t// try to open the document and acquire a lock\n\t\t\t\tdoc = (DocumentImpl) context.getBroker().getXMLResource(pathUri, Lock.READ_LOCK);\n\t\t\t\tif(doc != null)\n\t\t\t\t{\t\t\t\t\n\t\t\t\t\tif(!doc.getPermissions().validate(context.getUser(), Permission.READ))\n\t\t\t\t\t{\n\t\t\t\t\t\tdoc.getUpdateLock().release(Lock.READ_LOCK);\n\t\t\t\t\t\tthrow new PermissionDeniedException(\"Insufficient privileges to read resource \" + path);\n\t\t\t\t\t}\n\t\t\t\t\t\n                    if(doc.getResourceType() == DocumentImpl.BINARY_FILE)\n                    {\n                        throw new XPathException(\"Document is a binary resource, not an XML document. Please consider using the function util:binary-resource to retrieve a reference to it.\");\n                    }\n\t\t\t\t\t\n                    if(lockOnLoad)\n                    {\n\t\t\t\t\t\t// add the document to the list of locked documents\n\t\t\t\t\t\tcontext.getLockedDocuments().add(doc);\n\t\t\t\t\t}\n\t\t\t\t\tdocument = new NodeProxy(doc);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch(PermissionDeniedException e)\n\t\t\t{\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tcatch(URISyntaxException e)\n\t\t\t{\n\t\t\t\tthrow new XPathException(e);\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\t// release all locks unless lockOnLoad is true\n\t\t\t\tif(!lockOnLoad && doc != null)\n\t\t\t\t\tdoc.getUpdateLock().release(Lock.READ_LOCK);\n\t\t\t}\n\t\t}\t \t  \n\t\treturn document;\n\t}","id":48259,"modified_method":"private static Sequence getDocumentByPath(XQueryContext context, String path) throws XPathException, PermissionDeniedException\n\t{\t \n\t\tSequence document = Sequence.EMPTY_SEQUENCE;\t\n\n\t\tif(path.matches(\"^[a-z]+://.*\"))\n\t\t{\n\t\t\t/* URL */\n\t\t\t\n\t\t\ttry\n\t\t\t{\n\t\t\t\t//Basic tests on the URL\t\t\t\t\n\t\t\t\tURL url = new URL(path);\n\t\t\t\tURLConnection con = url.openConnection();\n\t\t\t\tif(con instanceof HttpURLConnection)\n\t\t\t\t{\n\t\t\t\t\tHttpURLConnection httpConnection = (HttpURLConnection)con;\n\t\t\t\t\tif(httpConnection.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Special case: '404'\n                        return Sequence.EMPTY_SEQUENCE;\n                    }\n\t\t\t\t\telse if(httpConnection.getResponseCode() != HttpURLConnection.HTTP_OK)\n\t\t\t\t\t{\n\t\t\t\t\t\t//TODO : return another type \n                        throw new PermissionDeniedException(\"Server returned code \" + httpConnection.getResponseCode());\t\n                    }\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//TODO : process pseudo-protocols URLs more efficiently.\n\t\t\t\torg.exist.memtree.DocumentImpl memtreeDoc = null;\n\t\t\t\t// we use eXist's in-memory DOM implementation\n\t\t\t\tSAXParserFactory factory = SAXParserFactory.newInstance();\n\t\t\t\tfactory.setNamespaceAware(true);\t\t\t\t\n\t\t\t\t//TODO : we should be able to cope with context.getBaseURI()\t\t\t\t\n\t\t\t\tInputSource src = new InputSource(con.getInputStream());\n\t\t\t\tSAXParser parser = factory.newSAXParser();\n\t\t\t\tXMLReader reader = parser.getXMLReader();\n\t\t\t\tSAXAdapter adapter = new SAXAdapter();\n\t\t\t\treader.setContentHandler(adapter);\n\t\t\t\treader.parse(src);\t\t\t\t\t\n\t\t\t\tDocument doc = adapter.getDocument();\n\t\t\t\tmemtreeDoc = (org.exist.memtree.DocumentImpl)doc;\n\t\t\t\tmemtreeDoc.setContext(context);\n\t\t\t\tdocument = memtreeDoc;\n\t\t\t}\n\t\t\tcatch(MalformedURLException e)\n\t\t\t{\n\t\t\t\tthrow new XPathException(e.getMessage(), e);\t\t\t\t\t\n\t\t\t}\n\t\t\tcatch(ParserConfigurationException e)\n\t\t\t{\t\t\t\t\n\t\t\t\tthrow new XPathException(e.getMessage(), e);\t\t\n\t\t\t}\n\t\t\tcatch(SAXException e)\n\t\t\t{\n\t\t\t\tthrow new XPathException(e.getMessage(), e);\t\n\t\t\t}\n\t\t\tcatch(IOException e)\n\t\t\t{\n\t\t\t\t// Special case: FileNotFoundException\n                if(e instanceof FileNotFoundException)\n                {\n                \treturn Sequence.EMPTY_SEQUENCE;\n                }\n                else\n                {\n                \tthrow new XPathException(e.getMessage(), e);\t\n                }\n\t\t\t}\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Database documents */\n\n\t\t\t// check if the loaded documents should remain locked\n\t\t\tboolean lockOnLoad = context.lockDocumentsOnLoad();\n\n\t\t\tDocumentImpl doc = null;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tXmldbURI pathUri = XmldbURI.xmldbUriFor(path, false);\n\t\t\t\t// relative collection Path: add the current base URI\n\t\t\t\tpathUri = context.getBaseURI().toXmldbURI().resolveCollectionPath(pathUri);\n\t\t\t\t// try to open the document and acquire a lock\n\t\t\t\tdoc = context.getBroker().getXMLResource(pathUri, Lock.READ_LOCK);\n\t\t\t\tif(doc != null)\n\t\t\t\t{\n\t\t\t\t\tif(!doc.getPermissions().validate(context.getUser(), Permission.READ))\n\t\t\t\t\t{\n\t\t\t\t\t\tdoc.getUpdateLock().release(Lock.READ_LOCK);\n\t\t\t\t\t\tthrow new PermissionDeniedException(\"Insufficient privileges to read resource \" + path);\n\t\t\t\t\t}\n\t\t\t\t\t\n                    if(doc.getResourceType() == DocumentImpl.BINARY_FILE)\n                    {\n                        throw new XPathException(\"Document is a binary resource, not an XML document. Please consider using the function util:binary-resource to retrieve a reference to it.\");\n                    }\n\t\t\t\t\t\n                    if(lockOnLoad)\n                    {\n\t\t\t\t\t\t// add the document to the list of locked documents\n\t\t\t\t\t\tcontext.getLockedDocuments().add(doc);\n\t\t\t\t\t}\n\t\t\t\t\tdocument = new NodeProxy(doc);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch(PermissionDeniedException e)\n\t\t\t{\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tcatch(URISyntaxException e)\n\t\t\t{\n\t\t\t\tthrow new XPathException(e);\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\t// release all locks unless lockOnLoad is true\n\t\t\t\tif(!lockOnLoad && doc != null)\n\t\t\t\t\tdoc.getUpdateLock().release(Lock.READ_LOCK);\n\t\t\t}\n\t\t}\t \t  \n\t\treturn document;\n\t}","commit_id":"77e6e168ffccc5fec2aa8483f05fc4db82fb2184","url":"https://github.com/eXist-db/exist"},{"original_method":"public static XmldbURI xmldbUriFor(String xmldbURI) throws URISyntaxException {\n        if (xmldbURI==null) return null;\n\t\tURI uri = new URI(AnyURIValue.escape(xmldbURI));\n\t\treturn getXmldbURI(uri);\n\t}","id":48260,"modified_method":"public static XmldbURI xmldbUriFor(String xmldbURI) throws URISyntaxException {\n        return xmldbUriFor(xmldbURI, true);\n    }","commit_id":"77e6e168ffccc5fec2aa8483f05fc4db82fb2184","url":"https://github.com/eXist-db/exist"},{"original_method":"private void writeResourceAs(DocumentImpl resource, DBBroker broker, String stylesheet, String encoding, String asMimeType, Properties outputProperties, HttpServletResponse response) throws BadRequestException, PermissionDeniedException, IOException\n    {\n    \t//Do we have permission to read the resource\n    \tif (!resource.getPermissions().validate(broker.getUser(), Permission.READ))\n    \t\tthrow new PermissionDeniedException(\"Not allowed to read resource\");\n    \t\n        if (resource.getResourceType() == DocumentImpl.BINARY_FILE)\n        {\n        \t// binary resource\n        \tif(asMimeType != null) //was a mime-type specified?\n        \t{\n        \t\tresponse.setContentType(asMimeType);\n        \t}\n        \telse\n        \t{\n        \t\tresponse.setContentType(resource.getMetadata().getMimeType());\n        \t}\n        \tOutputStream os = response.getOutputStream();\n        \tbroker.readBinaryResource((BinaryDocument) resource, os);\n        \tos.flush();\n        }\n        else\n        {\n            // xml resource\n            Serializer serializer = broker.getSerializer();\n            serializer.reset();\n            \n            //use a stylesheet if specified in query parameters\n            if (stylesheet != null)\n            {\n                serializer.setStylesheet(resource, stylesheet);\n            }\n            \n            //Serialize the document\n            try\n\t\t\t{\n                serializer.setProperties(outputProperties);\n                if(asMimeType != null) //was a mime-type specified?\n                {\n                \tresponse.setContentType(asMimeType+\"; charset=\"+encoding);\n                }\n                else\n                {\n\t                if (serializer.isStylesheetApplied() || Serializer.hasXSLPi(resource) != null)\n\t                {\n\t                    response.setContentType(\"text/html; charset=\"+encoding);\n\t                }\n\t                else\n\t                {\n\t                    response.setContentType(resource.getMetadata().getMimeType()+\"; charset=\"+encoding);\n\t                }\n                }\n                OutputStream is = response.getOutputStream();\n                Writer w = new OutputStreamWriter(is,encoding);\n                serializer.serialize(resource,w);\n                w.flush();\n                w.close();\n            }\n            catch (SAXException saxe)\n\t\t\t{\n                LOG.warn(saxe);\n                throw new BadRequestException(\"Error while serializing XML: \" + saxe.getMessage());\n            }\n        }\n    }","id":48261,"modified_method":"private void writeResourceAs(DocumentImpl resource, DBBroker broker, String stylesheet, String encoding, String asMimeType, Properties outputProperties, HttpServletResponse response) throws BadRequestException, PermissionDeniedException, IOException\n    {\n    \t//Do we have permission to read the resource\n    \tif (!resource.getPermissions().validate(broker.getUser(), Permission.READ))\n    \t\tthrow new PermissionDeniedException(\"Not allowed to read resource\");\n    \t\n        if (resource.getResourceType() == DocumentImpl.BINARY_FILE)\n        {\n        \t// binary resource\n        \tif(asMimeType != null) //was a mime-type specified?\n        \t{\n        \t\tresponse.setContentType(asMimeType);\n        \t}\n        \telse\n        \t{\n        \t\tresponse.setContentType(resource.getMetadata().getMimeType());\n        \t}\n        \tOutputStream os = response.getOutputStream();\n        \tbroker.readBinaryResource((BinaryDocument) resource, os);\n        \tos.flush();\n        }\n        else\n        {\n            // xml resource\n            Serializer serializer = broker.getSerializer();\n            serializer.reset();\n            \n            //use a stylesheet if specified in query parameters\n            if (stylesheet != null)\n            {\n                serializer.setStylesheet(resource, stylesheet);\n            }\n            \n            //Serialize the document\n            try\n\t\t\t{\n                serializer.setProperties(outputProperties);\n                if(asMimeType != null) //was a mime-type specified?\n                {\n                \tresponse.setContentType(asMimeType+\"; charset=\"+encoding);\n                }\n                else\n                {\n\t                if (serializer.isStylesheetApplied() || serializer.hasXSLPi(resource) != null)\n\t                {\n\t                    response.setContentType(\"text/html; charset=\"+encoding);\n\t                }\n\t                else\n\t                {\n\t                    response.setContentType(resource.getMetadata().getMimeType()+\"; charset=\"+encoding);\n\t                }\n                }\n                OutputStream is = response.getOutputStream();\n                Writer w = new OutputStreamWriter(is,encoding);\n                serializer.serialize(resource,w);\n                w.flush();\n                w.close();\n            }\n            catch (SAXException saxe)\n\t\t\t{\n                LOG.warn(saxe);\n                throw new BadRequestException(\"Error while serializing XML: \" + saxe.getMessage());\n            }\n        }\n    }","commit_id":"5c0f2f9061fc29525d1570c20474dfda5b57ccc6","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * Handle GET request. In the simplest case just returns the document or\n     * binary resource specified in the path. If the path leads to a collection,\n     * a listing of the collection contents is returned. If it resolves to a binary\n     * resource with mime-type \"application/xquery\", this resource will be\n     * loaded and executed by the XQuery engine.\n     *\n     * The method also recognizes a number of predefined parameters:\n     *\n     * <ul>\n     * <li>_xpath or _query: if specified, the given query is executed on the\n     * current resource or collection.<\/li>\n     *\n     * <li>_howmany: defines how many items from the query result will be\n     * returned.<\/li>\n     *\n     * <li>_start: a start offset into the result set.<\/li>\n     *\n     * <li>_wrap: if set to \"yes\", the query results will be wrapped into a\n     * exist:result element.<\/li>\n     *\n     * <li>_indent: if set to \"yes\", the returned XML will be pretty-printed.\n     * <\/li>\n     *\n     * <li>_source: if set to \"yes\" and a resource with mime-type \"application/xquery\" is requested\n     * then the xquery will not be executed, instead the source of the document will be returned.\n     * Must be enabled in descriptor.xml with the following syntax \n     * <xquery-app><allow-source><xquery path=\"/db/mycollection/myquery.xql\"/><\/allow-source><\/xquery-app>\n     * <\/li>\n     * \n     * <li>_xsl: an URI pointing to an XSL stylesheet that will be applied to\n     * the returned XML.<\/li>\n     *\n     * @param broker\n     * @param parameters\n     * @param path\n     * @return\n     * @throws BadRequestException\n     * @throws PermissionDeniedException\n     * @throws NotFoundException\n     */\n    public void doGet(DBBroker broker, HttpServletRequest request, HttpServletResponse response, String path)\n    throws BadRequestException, PermissionDeniedException,\n            NotFoundException, IOException {\n    \tif (request.getCharacterEncoding() == null)\n\t\t\trequest.setCharacterEncoding(formEncoding);\n    \t\n        // Process special parameters\n        \n        int howmany = 10;\n        int start = 1;\n        boolean wrap = true;\n        boolean source = false;\n        Properties outputProperties = new Properties();\n        String query = request.getParameter(\"_xpath\");\n        if (query == null)\n            query = request.getParameter(\"_query\");\n        \n        String p_howmany = request.getParameter(\"_howmany\");\n        if (p_howmany != null) {\n            try {\n                howmany = Integer.parseInt(p_howmany);\n            } catch (NumberFormatException nfe) {\n                throw new BadRequestException(\n                        \"Parameter _howmany should be an int\");\n            }\n        }\n        String p_start = (String) request.getParameter(\"_start\");\n        if (p_start != null) {\n            try {\n                start = Integer.parseInt(p_start);\n            } catch (NumberFormatException nfe) {\n                throw new BadRequestException(\n                        \"Parameter _start should be an int\");\n            }\n        }\n        String option;\n        if ((option = request.getParameter(\"_wrap\")) != null)\n            wrap = option.equals(\"yes\");\n        if ((option = request.getParameter(\"_indent\")) != null)\n            outputProperties.setProperty(OutputKeys.INDENT, option);\n        if((option = request.getParameter(\"_source\")) != null)\n        \tsource = option.equals(\"yes\");\n        String stylesheet;\n        if ((stylesheet = request.getParameter(\"_xsl\")) != null) {\n            if (stylesheet.equals(\"no\"))\n                outputProperties.setProperty(EXistOutputKeys.PROCESS_XSL_PI,\n                        stylesheet);\n            else\n                outputProperties.setProperty(EXistOutputKeys.STYLESHEET,\n                        stylesheet);\n        } else\n            outputProperties.setProperty(EXistOutputKeys.PROCESS_XSL_PI, \"yes\");\n        LOG.debug(\"stylesheet = \" + stylesheet);\n        LOG.debug(\"query = \" + query);\n        String encoding;\n        if ((encoding = request.getParameter(\"_encoding\")) != null)\n            outputProperties.setProperty(OutputKeys.ENCODING, encoding);\n        else\n            encoding = \"UTF-8\";\n        \n        // Process the request\n        DocumentImpl resource = null;\n        XmldbURI pathUri = XmldbURI.create(path);\n        try {\n            // check if path leads to an XQuery resource\n            resource = (DocumentImpl) broker.getXMLResource(pathUri, Lock.READ_LOCK);\n            if (resource != null)\n            {\n                if (resource.getResourceType() == DocumentImpl.BINARY_FILE && \"application/xquery\".equals(resource.getMetadata().getMimeType()))\n                {\n                \t// found an XQuery resource\n                    \n                \t//Should we display the source of the XQuery or execute it\n                \tDescriptor descriptor = Descriptor.getDescriptorSingleton();\n                \tif(source && descriptor != null)\n                \t{\n                \t\t//show the source\n                \t\t\n                \t\t//check are we allowed to show the xquery source - descriptor.xml\n                \t\tif(descriptor.allowSourceXQuery(path))\n                \t\t{\n                \t\t\t//TODO: change writeResourceAs to use a serializer that will serialize xquery to syntax coloured xhtml, replace the asMimeType parameter with a method for specifying the serializer, or split the code into two methods. - deliriumsky\n                \t\t\t\n                \t\t\t//Show the source of the XQuery\n                \t\t\twriteResourceAs(resource, broker, stylesheet, encoding, \"text/plain\", outputProperties, response);\n                \t\t}\n                \t\telse\n                \t\t{\n                \t\t\t//we are not allowed to show the source - query not allowed in descriptor.xml\n                \t\t\t//TODO: is this the correct exception to throw or should we return a http response?\n                \t\t\tthrow new PermissionDeniedException(\"Permission to view XQuery source for: \" + path + \" denied. Must be explicitly defined in descriptor.xml\");\n                \t\t}\n                \t\t\n                \t}\n                \telse\n            \t\t{\n            \t\t\t//Execute the XQuery\n            \t\t\ttry\n\t\t\t\t\t\t{\n                            String result = executeXQuery(broker, resource, request, response, outputProperties);\n                            encoding = outputProperties.getProperty(OutputKeys.ENCODING, encoding);\n                            String mimeType = outputProperties.getProperty(OutputKeys.MEDIA_TYPE, \"text/html\");\n                            if (!response.isCommitted())\n                                response.setContentType(mimeType);\n                            writeResponse(response, result, encoding);\n                        }\n            \t\t\tcatch (XPathException e)\n\t\t\t\t\t\t{\n                            response.setContentType(\"text/html\");\n                            response.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n                            writeResponse(response, formatXPathException(query, path, e), encoding);\n                        }\n            \t\t}\n                    return;\n                }\n            }\n            if (query != null) {\n                // query parameter specified\n                try {\n                    String result = search(broker, query, path, howmany, start, outputProperties, wrap, request, response);\n                    encoding = outputProperties.getProperty(OutputKeys.ENCODING, encoding);\n                    String mimeType = outputProperties.getProperty(OutputKeys.MEDIA_TYPE, \"text/html\");\n                    response.setContentType(mimeType);\n                    writeResponse(response, result, encoding);\n                } catch (XPathException e) {\n                    response.setContentType(\"text/html\");\n                    response.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n                    writeResponse(response, formatXPathException(query, path, e), encoding);\n                }\n            } else {\n                // no query parameter: try to load a document from the specified\n                // path\n                if (resource == null) {\n                    // no document: check if path points to a collection\n                    Collection collection = broker.getCollection(pathUri);\n                    if (collection != null) {\n                        if (!collection.getPermissions().validate(\n                                broker.getUser(), Permission.READ))\n                            throw new PermissionDeniedException(\n                                    \"Not allowed to read collection\");\n                        // return a listing of the collection contents\n                        response.setContentType(\"text/xml\");\n                        writeResponse(response, printCollection(broker, collection), encoding);\n                    } else {\n                        throw new NotFoundException(\"Document \" + path\n                                + \" not found\");\n                    }\n                } else {\n                    // document found: serialize it\n                    writeResourceAs(resource, broker, stylesheet, encoding, null, outputProperties, response);\n                }\n            }\n        } finally {\n            if (resource != null)\n                resource.getUpdateLock().release(Lock.READ_LOCK);\n        }\n    }","id":48262,"modified_method":"/**\n     * Handle GET request. In the simplest case just returns the document or\n     * binary resource specified in the path. If the path leads to a collection,\n     * a listing of the collection contents is returned. If it resolves to a binary\n     * resource with mime-type \"application/xquery\", this resource will be\n     * loaded and executed by the XQuery engine.\n     *\n     * The method also recognizes a number of predefined parameters:\n     *\n     * <ul>\n     * <li>_xpath or _query: if specified, the given query is executed on the\n     * current resource or collection.<\/li>\n     *\n     * <li>_howmany: defines how many items from the query result will be\n     * returned.<\/li>\n     *\n     * <li>_start: a start offset into the result set.<\/li>\n     *\n     * <li>_wrap: if set to \"yes\", the query results will be wrapped into a\n     * exist:result element.<\/li>\n     *\n     * <li>_indent: if set to \"yes\", the returned XML will be pretty-printed.\n     * <\/li>\n     *\n     * <li>_source: if set to \"yes\" and a resource with mime-type \"application/xquery\" is requested\n     * then the xquery will not be executed, instead the source of the document will be returned.\n     * Must be enabled in descriptor.xml with the following syntax \n     * <xquery-app><allow-source><xquery path=\"/db/mycollection/myquery.xql\"/><\/allow-source><\/xquery-app>\n     * <\/li>\n     * \n     * <li>_xsl: an URI pointing to an XSL stylesheet that will be applied to\n     * the returned XML.<\/li>\n     *\n     * @param broker\n     * @param parameters\n     * @param path\n     * @return\n     * @throws BadRequestException\n     * @throws PermissionDeniedException\n     * @throws NotFoundException\n     */\n    public void doGet(DBBroker broker, HttpServletRequest request, HttpServletResponse response, String path)\n    throws BadRequestException, PermissionDeniedException,\n            NotFoundException, IOException {\n    \tif (request.getCharacterEncoding() == null)\n\t\t\trequest.setCharacterEncoding(formEncoding);\n    \t\n        // Process special parameters\n        \n        int howmany = 10;\n        int start = 1;\n        boolean wrap = true;\n        boolean source = false;\n        Properties outputProperties = new Properties();\n        String query = request.getParameter(\"_xpath\");\n        if (query == null)\n            query = request.getParameter(\"_query\");\n        \n        String p_howmany = request.getParameter(\"_howmany\");\n        if (p_howmany != null) {\n            try {\n                howmany = Integer.parseInt(p_howmany);\n            } catch (NumberFormatException nfe) {\n                throw new BadRequestException(\n                        \"Parameter _howmany should be an int\");\n            }\n        }\n        String p_start = (String) request.getParameter(\"_start\");\n        if (p_start != null) {\n            try {\n                start = Integer.parseInt(p_start);\n            } catch (NumberFormatException nfe) {\n                throw new BadRequestException(\n                        \"Parameter _start should be an int\");\n            }\n        }\n        String option;\n        if ((option = request.getParameter(\"_wrap\")) != null)\n            wrap = option.equals(\"yes\");\n        if ((option = request.getParameter(\"_indent\")) != null)\n            outputProperties.setProperty(OutputKeys.INDENT, option);\n        if((option = request.getParameter(\"_source\")) != null)\n        \tsource = option.equals(\"yes\");\n        String stylesheet;\n        if ((stylesheet = request.getParameter(\"_xsl\")) != null) {\n            if (stylesheet.equals(\"no\")) {\n                outputProperties.setProperty(EXistOutputKeys.PROCESS_XSL_PI, \"no\");\n                outputProperties.remove(EXistOutputKeys.STYLESHEET);\n                stylesheet = null;\n            } else\n                outputProperties.setProperty(EXistOutputKeys.STYLESHEET,\n                        stylesheet);\n        } else\n            outputProperties.setProperty(EXistOutputKeys.PROCESS_XSL_PI, \"yes\");\n        LOG.debug(\"stylesheet = \" + stylesheet);\n        LOG.debug(\"query = \" + query);\n        String encoding;\n        if ((encoding = request.getParameter(\"_encoding\")) != null)\n            outputProperties.setProperty(OutputKeys.ENCODING, encoding);\n        else\n            encoding = \"UTF-8\";\n        \n        // Process the request\n        DocumentImpl resource = null;\n        XmldbURI pathUri = XmldbURI.create(path);\n        try {\n            // check if path leads to an XQuery resource\n            resource = broker.getXMLResource(pathUri, Lock.READ_LOCK);\n            if (resource != null)\n            {\n                if (resource.getResourceType() == DocumentImpl.BINARY_FILE && \"application/xquery\".equals(resource.getMetadata().getMimeType()))\n                {\n                \t// found an XQuery resource\n                    \n                \t//Should we display the source of the XQuery or execute it\n                \tDescriptor descriptor = Descriptor.getDescriptorSingleton();\n                \tif(source && descriptor != null)\n                \t{\n                \t\t//show the source\n                \t\t\n                \t\t//check are we allowed to show the xquery source - descriptor.xml\n                \t\tif(descriptor.allowSourceXQuery(path))\n                \t\t{\n                \t\t\t//TODO: change writeResourceAs to use a serializer that will serialize xquery to syntax coloured xhtml, replace the asMimeType parameter with a method for specifying the serializer, or split the code into two methods. - deliriumsky\n                \t\t\t\n                \t\t\t//Show the source of the XQuery\n                \t\t\twriteResourceAs(resource, broker, stylesheet, encoding, \"text/plain\", outputProperties, response);\n                \t\t}\n                \t\telse\n                \t\t{\n                \t\t\t//we are not allowed to show the source - query not allowed in descriptor.xml\n                \t\t\t//TODO: is this the correct exception to throw or should we return a http response?\n                \t\t\tthrow new PermissionDeniedException(\"Permission to view XQuery source for: \" + path + \" denied. Must be explicitly defined in descriptor.xml\");\n                \t\t}\n                \t\t\n                \t}\n                \telse\n            \t\t{\n            \t\t\t//Execute the XQuery\n            \t\t\ttry\n\t\t\t\t\t\t{\n                            String result = executeXQuery(broker, resource, request, response, outputProperties);\n                            encoding = outputProperties.getProperty(OutputKeys.ENCODING, encoding);\n                            String mimeType = outputProperties.getProperty(OutputKeys.MEDIA_TYPE, \"text/html\");\n                            if (!response.isCommitted())\n                                response.setContentType(mimeType);\n                            writeResponse(response, result, encoding);\n                        }\n            \t\t\tcatch (XPathException e)\n\t\t\t\t\t\t{\n                            response.setContentType(\"text/html\");\n                            response.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n                            writeResponse(response, formatXPathException(query, path, e), encoding);\n                        }\n            \t\t}\n                    return;\n                }\n            }\n            if (query != null) {\n                // query parameter specified\n                try {\n                    String result = search(broker, query, path, howmany, start, outputProperties, wrap, request, response);\n                    encoding = outputProperties.getProperty(OutputKeys.ENCODING, encoding);\n                    String mimeType = outputProperties.getProperty(OutputKeys.MEDIA_TYPE, \"text/html\");\n                    response.setContentType(mimeType);\n                    writeResponse(response, result, encoding);\n                } catch (XPathException e) {\n                    response.setContentType(\"text/html\");\n                    response.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n                    writeResponse(response, formatXPathException(query, path, e), encoding);\n                }\n            } else {\n                // no query parameter: try to load a document from the specified\n                // path\n                if (resource == null) {\n                    // no document: check if path points to a collection\n                    Collection collection = broker.getCollection(pathUri);\n                    if (collection != null) {\n                        if (!collection.getPermissions().validate(\n                                broker.getUser(), Permission.READ))\n                            throw new PermissionDeniedException(\n                                    \"Not allowed to read collection\");\n                        // return a listing of the collection contents\n                        response.setContentType(\"text/xml\");\n                        writeResponse(response, printCollection(broker, collection), encoding);\n                    } else {\n                        throw new NotFoundException(\"Document \" + path\n                                + \" not found\");\n                    }\n                } else {\n                    // document found: serialize it\n                    writeResourceAs(resource, broker, stylesheet, encoding, null, outputProperties, response);\n                }\n            }\n        } finally {\n            if (resource != null)\n                resource.getUpdateLock().release(Lock.READ_LOCK);\n        }\n    }","commit_id":"5c0f2f9061fc29525d1570c20474dfda5b57ccc6","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * TODO: pass request and response objects to XQuery.\n     *\n     * @throws XPathException\n     */\n    protected String search(DBBroker broker, String query, String path,\n            int howmany, int start, Properties outputProperties, boolean wrap,\n            HttpServletRequest request, HttpServletResponse response)\n            throws BadRequestException, PermissionDeniedException,\n            XPathException {\n        XmldbURI pathUri = XmldbURI.create(path);\n        try {\n            Source source = new StringSource(query);\n            XQuery xquery = broker.getXQueryService();\n            XQueryPool pool = xquery.getXQueryPool();\n            CompiledXQuery compiled = pool.borrowCompiledXQuery(broker, source);\n            XQueryContext context;\n            if (compiled == null)\n                context = xquery.newContext(AccessContext.REST);\n            else\n                context = compiled.getContext();\n            context.setStaticallyKnownDocuments(new XmldbURI[] { pathUri });\n            declareVariables(context, request, response);\n            \n            if (compiled == null)\n                compiled = xquery.compile(context, source);\n            checkPragmas(context, outputProperties);\n            try {\n                long startTime = System.currentTimeMillis();\n                Sequence resultSequence = xquery.execute(compiled, null);\n                long queryTime = System.currentTimeMillis() - startTime;\n                if (LOG.isDebugEnabled())\n                \tLOG.debug(\"Found \" + resultSequence.getLength() + \" in \"\n                        + queryTime + \"ms.\");\n                return printResults(broker, resultSequence, howmany, start,\n                        queryTime, outputProperties, wrap);\n            } finally {\n                pool.returnCompiledXQuery(source, compiled);\n            }\n        } catch (IOException e) {\n            throw new BadRequestException(e.getMessage(), e);\n        }\n    }","id":48263,"modified_method":"/**\n     * TODO: pass request and response objects to XQuery.\n     *\n     * @throws XPathException\n     */\n    protected String search(DBBroker broker, String query, String path,\n            int howmany, int start, Properties outputProperties, boolean wrap,\n            HttpServletRequest request, HttpServletResponse response)\n            throws BadRequestException, PermissionDeniedException,\n            XPathException {\n        XmldbURI pathUri = XmldbURI.create(path);\n        try {\n            Source source = new StringSource(query);\n            XQuery xquery = broker.getXQueryService();\n            XQueryPool pool = xquery.getXQueryPool();\n            CompiledXQuery compiled = pool.borrowCompiledXQuery(broker, source);\n            XQueryContext context;\n            if (compiled == null)\n                context = xquery.newContext(AccessContext.REST);\n            else\n                context = compiled.getContext();\n            context.setStaticallyKnownDocuments(new XmldbURI[] { pathUri });\n            context.setBaseURI(new AnyURIValue(pathUri.toString()));\n            declareVariables(context, request, response);\n            \n            if (compiled == null)\n                compiled = xquery.compile(context, source);\n            checkPragmas(context, outputProperties);\n            try {\n                long startTime = System.currentTimeMillis();\n                Sequence resultSequence = xquery.execute(compiled, null);\n                long queryTime = System.currentTimeMillis() - startTime;\n                if (LOG.isDebugEnabled())\n                \tLOG.debug(\"Found \" + resultSequence.getLength() + \" in \"\n                        + queryTime + \"ms.\");\n                return printResults(broker, resultSequence, howmany, start,\n                        queryTime, outputProperties, wrap);\n            } finally {\n                pool.returnCompiledXQuery(source, compiled);\n            }\n        } catch (IOException e) {\n            throw new BadRequestException(e.getMessage(), e);\n        }\n    }","commit_id":"e2f5c769602d675fb415e82d3da4fd98b6e4c407","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * Handles POST requests. If the path leads to a binary resource with\n     * mime-type \"application/xquery\", that resource will be read and executed\n     * by the XQuery engine. Otherwise, the request content is loaded and parsed\n     * as XML. It may either contain an XUpdate or a query request.\n     *\n     * @param broker\n     * @param request\n     * @param response\n     * @param path\n     * @throws BadRequestException\n     * @throws PermissionDeniedException\n     */\n    public void doPost(DBBroker broker, HttpServletRequest request, HttpServletResponse response, String path) throws BadRequestException, PermissionDeniedException, IOException\n    {\t\n    \t//if required, set character encoding\n    \tif (request.getCharacterEncoding() == null)\n\t\t\trequest.setCharacterEncoding(formEncoding);\n    \n        Properties outputProperties = new Properties(defaultProperties);\n        XmldbURI pathUri = XmldbURI.create(path);\n        DocumentImpl resource = null;\n        try {\n            // check if path leads to an XQuery resource.\n            // if yes, the resource is loaded and the XQuery executed.\n            resource = (DocumentImpl) broker.getXMLResource(pathUri, Lock.READ_LOCK);\n            if (resource != null) {\n                if (resource.getResourceType() == DocumentImpl.BINARY_FILE &&\n                        \"application/xquery\".equals(resource.getMetadata().getMimeType())) {\n                    // found an XQuery resource\n                    try {\n                        String result = executeXQuery(broker, resource, request, response, outputProperties);\n                        String encoding = outputProperties.getProperty(OutputKeys.ENCODING, \"UTF-8\");\n                        String mimeType = outputProperties.getProperty(OutputKeys.MEDIA_TYPE, \"text/html\");\n                        writeResponse(response, result, mimeType, encoding);\n                    } catch (XPathException e) {\n                        response.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n                        writeResponse(response, formatXPathException(null, path, e), \"text/html\", \"UTF-8\");\n                    }\n                    return;\n                }\n            }\n        } finally {\n            if(resource != null)\n                resource.getUpdateLock().release(Lock.READ_LOCK);\n        }\n        \n        // third, normal POST: read the request content and check if\n        // it is an XUpdate or a query request.        \n        int howmany = 10;\n        int start = 1;\n        boolean enclose = true;\n        String mime = \"text/xml\";\n        String query = null;\n        TransactionManager transact = broker.getBrokerPool().getTransactionManager();\n        Txn transaction = transact.beginTransaction();\n        try {\n            String content = getRequestContent(request);\n            InputSource src = new InputSource(new StringReader(content));\n            DocumentBuilderFactory docFactory = DocumentBuilderFactory\n                    .newInstance();\n            docFactory.setNamespaceAware(true);\n            DocumentBuilder docBuilder = null;\n            try {\n                docBuilder = docFactory.newDocumentBuilder();\n            } catch (ParserConfigurationException e) {\n                LOG.warn(e);\n                transact.abort(transaction);\n                throw new BadRequestException(e.getMessage());\n            }\n            Document doc = docBuilder.parse(src);\n            Element root = doc.getDocumentElement();\n            String rootNS = root.getNamespaceURI();\n            if (rootNS != null && rootNS.equals(NS)) {\n                if (root.getLocalName().equals(\"query\")) {\n                    // process <query>xpathQuery<\/query>\n                    String option = root.getAttribute(\"start\");\n                    if (option != null)\n                        try {\n                            start = Integer.parseInt(option);\n                        } catch (NumberFormatException e) {\n                        }\n                    option = root.getAttribute(\"max\");\n                    if (option != null)\n                        try {\n                            howmany = Integer.parseInt(option);\n                        } catch (NumberFormatException e) {\n                        }\n                    \n                    option = root.getAttribute(\"enclose\");\n                    if (option != null) {\n                        if (option.equals(\"no\"))\n                            enclose = false;\n                    }\n                    \n                    option = root.getAttribute(\"mime\");\n                    mime = \"text/xml\";\n                    if ((option != null) && (!option.equals(\"\"))) {\n                        mime = option;\n                    }\n                    \n                    NodeList children = root.getChildNodes();\n                    for (int i = 0; i < children.getLength(); i++) {\n                        Node child = children.item(i);\n                        if (child.getNodeType() == Node.ELEMENT_NODE\n                                && child.getNamespaceURI().equals(NS)) {\n                            if (child.getLocalName().equals(\"text\")) {\n                                StringBuffer buf = new StringBuffer();\n                                Node next = child.getFirstChild();\n                                while (next != null) {\n                                    if (next.getNodeType() == Node.TEXT_NODE\n                                            || next.getNodeType() == Node.CDATA_SECTION_NODE)\n                                        buf.append(next.getNodeValue());\n                                    next = next.getNextSibling();\n                                }\n                                query = buf.toString();\n                            } else if (child.getLocalName()\n                            .equals(\"properties\")) {\n                                Node node = child.getFirstChild();\n                                while (node != null) {\n                                    if (node.getNodeType() == Node.ELEMENT_NODE\n                                            && node.getNamespaceURI()\n                                            .equals(NS)\n                                            && node.getLocalName().equals(\n                                            \"property\")) {\n                                        Element property = (Element) node;\n                                        String key = property\n                                                .getAttribute(\"name\");\n                                        String value = property\n                                                .getAttribute(\"value\");\n                                        LOG.debug(key + \" = \" + value);\n                                        if (key != null && value != null)\n                                            outputProperties.setProperty(key,\n                                                    value);\n                                    }\n                                    node = node.getNextSibling();\n                                }\n                            }\n                        }\n                    }\n                }\n                // execute query\n                if (query != null) {\n                    writeResponse(response, search(broker, query, path, howmany,\n                            start, outputProperties, enclose, request, response), mime,\n                            outputProperties.getProperty(OutputKeys.ENCODING, \"UTF-8\"));\n                } else {\n                    transact.abort(transaction);\n                    throw new BadRequestException(\"No query specified\");\n                }\n            } else if (rootNS != null && rootNS.equals(XUPDATE_NS)) {\n                LOG.debug(\"Got xupdate request: \" + content);\n                DocumentSet docs = new DocumentSet();\n                Collection collection = broker.getCollection(pathUri);\n                if (collection != null) {\n                    collection.allDocs(broker, docs, true, true);\n                } else {\n                    DocumentImpl xupdateDoc = (DocumentImpl) broker.getXMLResource(pathUri);\n                    if (xupdateDoc != null) {\n                        if (!xupdateDoc.getPermissions().validate(\n                                broker.getUser(), Permission.READ)) {\n                            transact.abort(transaction);\n                            throw new PermissionDeniedException(\n                                    \"Not allowed to read collection\");\n                        }\n                        docs.add(xupdateDoc);\n                    } else\n                        broker.getAllXMLResources(docs);\n                }\n                \n                XUpdateProcessor processor = new XUpdateProcessor(broker, docs, AccessContext.REST);\n                Modification modifications[] = processor.parse(new InputSource(\n                        new StringReader(content)));\n                long mods = 0;\n                for (int i = 0; i < modifications.length; i++) {\n                    mods += modifications[i].process(transaction);\n                    broker.flush();\n                }\n                transact.commit(transaction);\n                \n                // FD : Returns an XML doc\n                writeResponse(response,\n                        \"<?xml version='1.0'?>\\n\"\n                        + \"<exist:modifications xmlns:exist='\" + NS\n                        + \"' count='\" + mods + \"'>\" + mods\n                        + \"modifications processed.<\/exist:modifications>\",\n                        \"text/xml\", \"UTF-8\");\n                // END FD\n            } else {\n                transact.abort(transaction);\n                throw new BadRequestException(\"Unknown XML root element: \"\n                        + root.getNodeName());\n            }\n        } catch (SAXException e) {\n            transact.abort(transaction);\n            Exception cause = e;\n            if (e.getException() != null)\n                cause = e.getException();\n            LOG.debug(\"SAX exception while parsing request: \"\n                    + cause.getMessage(), cause);\n            throw new BadRequestException(\n                    \"SAX exception while parsing request: \"\n                    + cause.getMessage());\n        } catch (ParserConfigurationException e) {\n            transact.abort(transaction);\n            throw new BadRequestException(\n                    \"Parser exception while parsing request: \" + e.getMessage());\n        } catch (XPathException e) {\n            transact.abort(transaction);\n            throw new BadRequestException(\n                    \"Query exception while parsing request: \" + e.getMessage());\n        } catch (IOException e) {\n            transact.abort(transaction);\n            throw new BadRequestException(\n                    \"IO exception while parsing request: \" + e.getMessage());\n        } catch (EXistException e) {\n            transact.abort(transaction);\n            throw new BadRequestException(e.getMessage());\n        } catch (LockException e) {\n            transact.abort(transaction);\n            throw new PermissionDeniedException(e.getMessage());\n        }\n    }","id":48264,"modified_method":"/**\n     * Handles POST requests. If the path leads to a binary resource with\n     * mime-type \"application/xquery\", that resource will be read and executed\n     * by the XQuery engine. Otherwise, the request content is loaded and parsed\n     * as XML. It may either contain an XUpdate or a query request.\n     *\n     * @param broker\n     * @param request\n     * @param response\n     * @param path\n     * @throws BadRequestException\n     * @throws PermissionDeniedException\n     */\n    public void doPost(DBBroker broker, HttpServletRequest request, HttpServletResponse response, String path) throws BadRequestException, PermissionDeniedException, IOException\n    {\t\n    \t//if required, set character encoding\n    \tif (request.getCharacterEncoding() == null)\n\t\t\trequest.setCharacterEncoding(formEncoding);\n    \n        Properties outputProperties = new Properties(defaultProperties);\n        XmldbURI pathUri = XmldbURI.create(path);\n        DocumentImpl resource = null;\n        try {\n            // check if path leads to an XQuery resource.\n            // if yes, the resource is loaded and the XQuery executed.\n            resource = broker.getXMLResource(pathUri, Lock.READ_LOCK);\n            if (resource != null) {\n                if (resource.getResourceType() == DocumentImpl.BINARY_FILE &&\n                        \"application/xquery\".equals(resource.getMetadata().getMimeType())) {\n                    // found an XQuery resource\n                    try {\n                        String result = executeXQuery(broker, resource, request, response, outputProperties);\n                        String encoding = outputProperties.getProperty(OutputKeys.ENCODING, \"UTF-8\");\n                        String mimeType = outputProperties.getProperty(OutputKeys.MEDIA_TYPE, \"text/html\");\n                        writeResponse(response, result, mimeType, encoding);\n                    } catch (XPathException e) {\n                        response.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n                        writeResponse(response, formatXPathException(null, path, e), \"text/html\", \"UTF-8\");\n                    }\n                    return;\n                }\n            }\n        } finally {\n            if(resource != null)\n                resource.getUpdateLock().release(Lock.READ_LOCK);\n        }\n        \n        // third, normal POST: read the request content and check if\n        // it is an XUpdate or a query request.        \n        int howmany = 10;\n        int start = 1;\n        boolean enclose = true;\n        String mime = \"text/xml\";\n        String query = null;\n        TransactionManager transact = broker.getBrokerPool().getTransactionManager();\n        Txn transaction = transact.beginTransaction();\n        try {\n            String content = getRequestContent(request);\n            InputSource src = new InputSource(new StringReader(content));\n            DocumentBuilderFactory docFactory = DocumentBuilderFactory\n                    .newInstance();\n            docFactory.setNamespaceAware(true);\n            DocumentBuilder docBuilder;\n            try {\n                docBuilder = docFactory.newDocumentBuilder();\n            } catch (ParserConfigurationException e) {\n                LOG.warn(e);\n                transact.abort(transaction);\n                throw new BadRequestException(e.getMessage());\n            }\n            Document doc = docBuilder.parse(src);\n            Element root = doc.getDocumentElement();\n            String rootNS = root.getNamespaceURI();\n            if (rootNS != null && rootNS.equals(NS)) {\n                if (root.getLocalName().equals(\"query\")) {\n                    // process <query>xpathQuery<\/query>\n                    String option = root.getAttribute(\"start\");\n                    if (option != null)\n                        try {\n                            start = Integer.parseInt(option);\n                        } catch (NumberFormatException e) {\n                        }\n                    option = root.getAttribute(\"max\");\n                    if (option != null)\n                        try {\n                            howmany = Integer.parseInt(option);\n                        } catch (NumberFormatException e) {\n                        }\n                    \n                    option = root.getAttribute(\"enclose\");\n                    if (option != null) {\n                        if (option.equals(\"no\"))\n                            enclose = false;\n                    }\n                    \n                    option = root.getAttribute(\"mime\");\n                    mime = \"text/xml\";\n                    if ((option != null) && (!option.equals(\"\"))) {\n                        mime = option;\n                    }\n                    \n                    NodeList children = root.getChildNodes();\n                    for (int i = 0; i < children.getLength(); i++) {\n                        Node child = children.item(i);\n                        if (child.getNodeType() == Node.ELEMENT_NODE\n                                && child.getNamespaceURI().equals(NS)) {\n                            if (child.getLocalName().equals(\"text\")) {\n                                StringBuffer buf = new StringBuffer();\n                                Node next = child.getFirstChild();\n                                while (next != null) {\n                                    if (next.getNodeType() == Node.TEXT_NODE\n                                            || next.getNodeType() == Node.CDATA_SECTION_NODE)\n                                        buf.append(next.getNodeValue());\n                                    next = next.getNextSibling();\n                                }\n                                query = buf.toString();\n                            } else if (child.getLocalName().equals(\"properties\")) {\n                                Node node = child.getFirstChild();\n                                while (node != null) {\n                                    if (node.getNodeType() == Node.ELEMENT_NODE\n                                            && node.getNamespaceURI().equals(NS)\n                                            && node.getLocalName().equals(\"property\")) {\n                                        Element property = (Element) node;\n                                        String key = property\n                                                .getAttribute(\"name\");\n                                        String value = property\n                                                .getAttribute(\"value\");\n                                        LOG.debug(key + \" = \" + value);\n                                        if (key != null && value != null)\n                                            outputProperties.setProperty(key,\n                                                    value);\n                                    }\n                                    node = node.getNextSibling();\n                                }\n                            }\n                        }\n                    }\n                }\n                // execute query\n                if (query != null) {\n                    writeResponse(response, search(broker, query, path, howmany,\n                            start, outputProperties, enclose, request, response), mime,\n                            outputProperties.getProperty(OutputKeys.ENCODING, \"UTF-8\"));\n                } else {\n                    transact.abort(transaction);\n                    throw new BadRequestException(\"No query specified\");\n                }\n            } else if (rootNS != null && rootNS.equals(XUPDATE_NS)) {\n                LOG.debug(\"Got xupdate request: \" + content);\n                DocumentSet docs = new DocumentSet();\n                Collection collection = broker.getCollection(pathUri);\n                if (collection != null) {\n                    collection.allDocs(broker, docs, true, true);\n                } else {\n                    DocumentImpl xupdateDoc = (DocumentImpl) broker.getXMLResource(pathUri);\n                    if (xupdateDoc != null) {\n                        if (!xupdateDoc.getPermissions().validate(\n                                broker.getUser(), Permission.READ)) {\n                            transact.abort(transaction);\n                            throw new PermissionDeniedException(\n                                    \"Not allowed to read collection\");\n                        }\n                        docs.add(xupdateDoc);\n                    } else\n                        broker.getAllXMLResources(docs);\n                }\n                \n                XUpdateProcessor processor = new XUpdateProcessor(broker, docs, AccessContext.REST);\n                Modification modifications[] = processor.parse(new InputSource(\n                        new StringReader(content)));\n                long mods = 0;\n                for (int i = 0; i < modifications.length; i++) {\n                    mods += modifications[i].process(transaction);\n                    broker.flush();\n                }\n                transact.commit(transaction);\n                \n                // FD : Returns an XML doc\n                writeResponse(response,\n                        \"<?xml version='1.0'?>\\n\"\n                        + \"<exist:modifications xmlns:exist='\" + NS\n                        + \"' count='\" + mods + \"'>\" + mods\n                        + \"modifications processed.<\/exist:modifications>\",\n                        \"text/xml\", \"UTF-8\");\n                // END FD\n            } else {\n                transact.abort(transaction);\n                throw new BadRequestException(\"Unknown XML root element: \"\n                        + root.getNodeName());\n            }\n        } catch (SAXException e) {\n            transact.abort(transaction);\n            Exception cause = e;\n            if (e.getException() != null)\n                cause = e.getException();\n            LOG.debug(\"SAX exception while parsing request: \"\n                    + cause.getMessage(), cause);\n            throw new BadRequestException(\n                    \"SAX exception while parsing request: \"\n                    + cause.getMessage());\n        } catch (ParserConfigurationException e) {\n            transact.abort(transaction);\n            throw new BadRequestException(\n                    \"Parser exception while parsing request: \" + e.getMessage());\n        } catch (XPathException e) {\n            transact.abort(transaction);\n            throw new BadRequestException(\n                    \"Query exception while parsing request: \" + e.getMessage());\n        } catch (IOException e) {\n            transact.abort(transaction);\n            throw new BadRequestException(\n                    \"IO exception while parsing request: \" + e.getMessage());\n        } catch (EXistException e) {\n            transact.abort(transaction);\n            throw new BadRequestException(e.getMessage());\n        } catch (LockException e) {\n            transact.abort(transaction);\n            throw new PermissionDeniedException(e.getMessage());\n        }\n    }","commit_id":"e2f5c769602d675fb415e82d3da4fd98b6e4c407","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * Handle GET request. In the simplest case just returns the document or\n     * binary resource specified in the path. If the path leads to a collection,\n     * a listing of the collection contents is returned. If it resolves to a binary\n     * resource with mime-type \"application/xquery\", this resource will be\n     * loaded and executed by the XQuery engine.\n     *\n     * The method also recognizes a number of predefined parameters:\n     *\n     * <ul>\n     * <li>_xpath or _query: if specified, the given query is executed on the\n     * current resource or collection.<\/li>\n     *\n     * <li>_howmany: defines how many items from the query result will be\n     * returned.<\/li>\n     *\n     * <li>_start: a start offset into the result set.<\/li>\n     *\n     * <li>_wrap: if set to \"yes\", the query results will be wrapped into a\n     * exist:result element.<\/li>\n     *\n     * <li>_indent: if set to \"yes\", the returned XML will be pretty-printed.\n     * <\/li>\n     *\n     * <li>_source: if set to \"yes\" and a resource with mime-type \"application/xquery\" is requested\n     * then the xquery will not be executed, instead the source of the document will be returned.\n     * Must be enabled in descriptor.xml with the following syntax \n     * <xquery-app><allow-source><xquery path=\"/db/mycollection/myquery.xql\"/><\/allow-source><\/xquery-app>\n     * <\/li>\n     * \n     * <li>_xsl: an URI pointing to an XSL stylesheet that will be applied to\n     * the returned XML.<\/li>\n     *\n     * @param broker\n     * @param request\n     * @param response\n     * @param path\n     * @throws BadRequestException\n     * @throws PermissionDeniedException\n     * @throws NotFoundException\n     */\n    public void doGet(DBBroker broker, HttpServletRequest request, HttpServletResponse response, String path)\n    throws BadRequestException, PermissionDeniedException,\n            NotFoundException, IOException {\n    \t\n    \t//if required, set character encoding\n    \tif (request.getCharacterEncoding() == null)\n\t\t\trequest.setCharacterEncoding(formEncoding);\n    \t\n        // Process special parameters\n        \n        int howmany = 10;\n        int start = 1;\n        boolean wrap = true;\n        boolean source = false;\n        Properties outputProperties = new Properties();\n        String query = request.getParameter(\"_xpath\");\n        if (query == null)\n            query = request.getParameter(\"_query\");\n        \n        String p_howmany = request.getParameter(\"_howmany\");\n        if (p_howmany != null) {\n            try {\n                howmany = Integer.parseInt(p_howmany);\n            } catch (NumberFormatException nfe) {\n                throw new BadRequestException(\n                        \"Parameter _howmany should be an int\");\n            }\n        }\n        String p_start = (String) request.getParameter(\"_start\");\n        if (p_start != null) {\n            try {\n                start = Integer.parseInt(p_start);\n            } catch (NumberFormatException nfe) {\n                throw new BadRequestException(\n                        \"Parameter _start should be an int\");\n            }\n        }\n        String option;\n        if ((option = request.getParameter(\"_wrap\")) != null)\n            wrap = option.equals(\"yes\");\n        if ((option = request.getParameter(\"_indent\")) != null)\n            outputProperties.setProperty(OutputKeys.INDENT, option);\n        if((option = request.getParameter(\"_source\")) != null)\n        \tsource = option.equals(\"yes\");\n        String stylesheet;\n        if ((stylesheet = request.getParameter(\"_xsl\")) != null) {\n            if (stylesheet.equals(\"no\")) {\n                outputProperties.setProperty(EXistOutputKeys.PROCESS_XSL_PI, \"no\");\n                outputProperties.remove(EXistOutputKeys.STYLESHEET);\n                stylesheet = null;\n            } else\n                outputProperties.setProperty(EXistOutputKeys.STYLESHEET,\n                        stylesheet);\n        } else\n            outputProperties.setProperty(EXistOutputKeys.PROCESS_XSL_PI, \"yes\");\n        LOG.debug(\"stylesheet = \" + stylesheet);\n        LOG.debug(\"query = \" + query);\n        String encoding;\n        if ((encoding = request.getParameter(\"_encoding\")) != null)\n            outputProperties.setProperty(OutputKeys.ENCODING, encoding);\n        else\n            encoding = \"UTF-8\";\n        \n        // Process the request\n        DocumentImpl resource = null;\n        XmldbURI pathUri = XmldbURI.create(path);\n        try {\n            // check if path leads to an XQuery resource\n            resource = broker.getXMLResource(pathUri, Lock.READ_LOCK);\n            if (resource != null)\n            {\n                if (resource.getResourceType() == DocumentImpl.BINARY_FILE && \"application/xquery\".equals(resource.getMetadata().getMimeType()))\n                {\n                \t// found an XQuery resource\n                    \n                \t//Should we display the source of the XQuery or execute it\n                \tDescriptor descriptor = Descriptor.getDescriptorSingleton();\n                \tif(source && descriptor != null)\n                \t{\n                \t\t//show the source\n                \t\t\n                \t\t//check are we allowed to show the xquery source - descriptor.xml\n                \t\tif(descriptor.allowSourceXQuery(path))\n                \t\t{\n                \t\t\t//TODO: change writeResourceAs to use a serializer that will serialize xquery to syntax coloured xhtml, replace the asMimeType parameter with a method for specifying the serializer, or split the code into two methods. - deliriumsky\n                \t\t\t\n                \t\t\t//Show the source of the XQuery\n                \t\t\twriteResourceAs(resource, broker, stylesheet, encoding, \"text/plain\", outputProperties, response);\n                \t\t}\n                \t\telse\n                \t\t{\n                \t\t\t//we are not allowed to show the source - query not allowed in descriptor.xml\n                            response.sendError(HttpServletResponse.SC_FORBIDDEN, \"Permission to view XQuery source for: \" + path + \" denied. Must be explicitly defined in descriptor.xml\");\n                \t\t\treturn;\n                \t\t}\n                \t}\n                \telse\n            \t\t{\n            \t\t\t//Execute the XQuery\n            \t\t\ttry\n\t\t\t\t\t\t{\n                            String result = executeXQuery(broker, resource, request, response, outputProperties);\n                            encoding = outputProperties.getProperty(OutputKeys.ENCODING, encoding);\n                            \n                        \t//only write the response if it is not already committed,\n                        \t//some xquery functions can write directly to the response\n                            if(!response.isCommitted())\n                            {\n                                String mimeType = outputProperties.getProperty(OutputKeys.MEDIA_TYPE, \"text/html\");\n                            \t\n                            \twriteResponse(response, result, mimeType, encoding);\n                            }\n                        }\n            \t\t\tcatch (XPathException e)\n\t\t\t\t\t\t{\n                            response.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n                            writeResponse(response, formatXPathException(query, path, e), \"text/html\", encoding);\n                        }\n            \t\t}\n                    return;\n                }\n            }\n            if (query != null) {\n                // query parameter specified\n                try {\n                    String result = search(broker, query, path, howmany, start, outputProperties, wrap, request, response);\n                    encoding = outputProperties.getProperty(OutputKeys.ENCODING, encoding);\n                    \n                \t//only write the response if it is not already committed,\n                \t//some xquery functions can write directly to the response\n                    if(!response.isCommitted())\n                    {\n                    \tString mimeType = outputProperties.getProperty(OutputKeys.MEDIA_TYPE, \"text/html\");\n                    \twriteResponse(response, result, mimeType, encoding);\n                    }\n                    \n                } catch (XPathException e) {\n                    response.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n                    writeResponse(response, formatXPathException(query, path, e), \"text/html\", encoding);\n                }\n            } else {\n                // no query parameter: try to load a document from the specified\n                // path\n                if (resource == null) {\n                    // no document: check if path points to a collection\n                    Collection collection = broker.getCollection(pathUri);\n                    if (collection != null) {\n                        if (!collection.getPermissions().validate(\n                                broker.getUser(), Permission.READ))\n                            throw new PermissionDeniedException(\n                                    \"Not allowed to read collection\");\n                        // return a listing of the collection contents\n                        writeResponse(response, printCollection(broker, collection), \"text/xml\", encoding);\n                    } else {\n                        throw new NotFoundException(\"Document \" + path\n                                + \" not found\");\n                    }\n                } else {\n                    // document found: serialize it\n                    writeResourceAs(resource, broker, stylesheet, encoding, null, outputProperties, response);\n                }\n            }\n        } finally {\n            if (resource != null)\n                resource.getUpdateLock().release(Lock.READ_LOCK);\n        }\n    }","id":48265,"modified_method":"/**\n     * Handle GET request. In the simplest case just returns the document or\n     * binary resource specified in the path. If the path leads to a collection,\n     * a listing of the collection contents is returned. If it resolves to a binary\n     * resource with mime-type \"application/xquery\", this resource will be\n     * loaded and executed by the XQuery engine.\n     *\n     * The method also recognizes a number of predefined parameters:\n     *\n     * <ul>\n     * <li>_xpath or _query: if specified, the given query is executed on the\n     * current resource or collection.<\/li>\n     *\n     * <li>_howmany: defines how many items from the query result will be\n     * returned.<\/li>\n     *\n     * <li>_start: a start offset into the result set.<\/li>\n     *\n     * <li>_wrap: if set to \"yes\", the query results will be wrapped into a\n     * exist:result element.<\/li>\n     *\n     * <li>_indent: if set to \"yes\", the returned XML will be pretty-printed.\n     * <\/li>\n     *\n     * <li>_source: if set to \"yes\" and a resource with mime-type \"application/xquery\" is requested\n     * then the xquery will not be executed, instead the source of the document will be returned.\n     * Must be enabled in descriptor.xml with the following syntax \n     * <xquery-app><allow-source><xquery path=\"/db/mycollection/myquery.xql\"/><\/allow-source><\/xquery-app>\n     * <\/li>\n     * \n     * <li>_xsl: an URI pointing to an XSL stylesheet that will be applied to\n     * the returned XML.<\/li>\n     *\n     * @param broker\n     * @param request\n     * @param response\n     * @param path\n     * @throws BadRequestException\n     * @throws PermissionDeniedException\n     * @throws NotFoundException\n     */\n    public void doGet(DBBroker broker, HttpServletRequest request, HttpServletResponse response, String path)\n    throws BadRequestException, PermissionDeniedException,\n            NotFoundException, IOException {\n    \t\n    \t//if required, set character encoding\n    \tif (request.getCharacterEncoding() == null)\n\t\t\trequest.setCharacterEncoding(formEncoding);\n    \t\n        // Process special parameters\n        \n        int howmany = 10;\n        int start = 1;\n        boolean wrap = true;\n        boolean source = false;\n        Properties outputProperties = new Properties();\n        String query = request.getParameter(\"_xpath\");\n        if (query == null)\n            query = request.getParameter(\"_query\");\n        \n        String p_howmany = request.getParameter(\"_howmany\");\n        if (p_howmany != null) {\n            try {\n                howmany = Integer.parseInt(p_howmany);\n            } catch (NumberFormatException nfe) {\n                throw new BadRequestException(\n                        \"Parameter _howmany should be an int\");\n            }\n        }\n        String p_start = request.getParameter(\"_start\");\n        if (p_start != null) {\n            try {\n                start = Integer.parseInt(p_start);\n            } catch (NumberFormatException nfe) {\n                throw new BadRequestException(\n                        \"Parameter _start should be an int\");\n            }\n        }\n        String option;\n        if ((option = request.getParameter(\"_wrap\")) != null)\n            wrap = option.equals(\"yes\");\n        if ((option = request.getParameter(\"_indent\")) != null)\n            outputProperties.setProperty(OutputKeys.INDENT, option);\n        if((option = request.getParameter(\"_source\")) != null)\n        \tsource = option.equals(\"yes\");\n        String stylesheet;\n        if ((stylesheet = request.getParameter(\"_xsl\")) != null) {\n            if (stylesheet.equals(\"no\")) {\n                outputProperties.setProperty(EXistOutputKeys.PROCESS_XSL_PI, \"no\");\n                outputProperties.remove(EXistOutputKeys.STYLESHEET);\n                stylesheet = null;\n            } else\n                outputProperties.setProperty(EXistOutputKeys.STYLESHEET,\n                        stylesheet);\n        } else\n            outputProperties.setProperty(EXistOutputKeys.PROCESS_XSL_PI, \"yes\");\n        LOG.debug(\"stylesheet = \" + stylesheet);\n        LOG.debug(\"query = \" + query);\n        String encoding;\n        if ((encoding = request.getParameter(\"_encoding\")) != null)\n            outputProperties.setProperty(OutputKeys.ENCODING, encoding);\n        else\n            encoding = \"UTF-8\";\n        \n        // Process the request\n        DocumentImpl resource = null;\n        XmldbURI pathUri = XmldbURI.create(path);\n        try {\n            // check if path leads to an XQuery resource\n            resource = broker.getXMLResource(pathUri, Lock.READ_LOCK);\n            if (resource != null)\n            {\n                if (resource.getResourceType() == DocumentImpl.BINARY_FILE && \"application/xquery\".equals(resource.getMetadata().getMimeType()))\n                {\n                \t// found an XQuery resource\n                    \n                \t//Should we display the source of the XQuery or execute it\n                \tDescriptor descriptor = Descriptor.getDescriptorSingleton();\n                \tif(source && descriptor != null)\n                \t{\n                \t\t//show the source\n                \t\t\n                \t\t//check are we allowed to show the xquery source - descriptor.xml\n                \t\tif(descriptor.allowSourceXQuery(path))\n                \t\t{\n                \t\t\t//TODO: change writeResourceAs to use a serializer that will serialize xquery to syntax coloured xhtml, replace the asMimeType parameter with a method for specifying the serializer, or split the code into two methods. - deliriumsky\n                \t\t\t\n                \t\t\t//Show the source of the XQuery\n                \t\t\twriteResourceAs(resource, broker, stylesheet, encoding, \"text/plain\", outputProperties, response);\n                \t\t}\n                \t\telse\n                \t\t{\n                \t\t\t//we are not allowed to show the source - query not allowed in descriptor.xml\n                            response.sendError(HttpServletResponse.SC_FORBIDDEN, \"Permission to view XQuery source for: \" + path + \" denied. Must be explicitly defined in descriptor.xml\");\n                \t\t\treturn;\n                \t\t}\n                \t}\n                \telse\n            \t\t{\n            \t\t\t//Execute the XQuery\n            \t\t\ttry\n\t\t\t\t\t\t{\n                            String result = executeXQuery(broker, resource, request, response, outputProperties);\n                            encoding = outputProperties.getProperty(OutputKeys.ENCODING, encoding);\n                            \n                        \t//only write the response if it is not already committed,\n                        \t//some xquery functions can write directly to the response\n                            if(!response.isCommitted())\n                            {\n                                String mimeType = outputProperties.getProperty(OutputKeys.MEDIA_TYPE, \"text/html\");\n                            \t\n                            \twriteResponse(response, result, mimeType, encoding);\n                            }\n                        }\n            \t\t\tcatch (XPathException e)\n\t\t\t\t\t\t{\n                            response.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n                            writeResponse(response, formatXPathException(query, path, e), \"text/html\", encoding);\n                        }\n            \t\t}\n                    return;\n                }\n            }\n            if (query != null) {\n                // query parameter specified\n                try {\n                    String result = search(broker, query, path, howmany, start, outputProperties, wrap, request, response);\n                    encoding = outputProperties.getProperty(OutputKeys.ENCODING, encoding);\n                    \n                \t//only write the response if it is not already committed,\n                \t//some xquery functions can write directly to the response\n                    if(!response.isCommitted())\n                    {\n                    \tString mimeType = outputProperties.getProperty(OutputKeys.MEDIA_TYPE, \"text/html\");\n                    \twriteResponse(response, result, mimeType, encoding);\n                    }\n                    \n                } catch (XPathException e) {\n                    response.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n                    writeResponse(response, formatXPathException(query, path, e), \"text/html\", encoding);\n                }\n            } else {\n                // no query parameter: try to load a document from the specified\n                // path\n                if (resource == null) {\n                    // no document: check if path points to a collection\n                    Collection collection = broker.getCollection(pathUri);\n                    if (collection != null) {\n                        if (!collection.getPermissions().validate(\n                                broker.getUser(), Permission.READ))\n                            throw new PermissionDeniedException(\n                                    \"Not allowed to read collection\");\n                        // return a listing of the collection contents\n                        writeResponse(response, printCollection(broker, collection), \"text/xml\", encoding);\n                    } else {\n                        throw new NotFoundException(\"Document \" + path\n                                + \" not found\");\n                    }\n                } else {\n                    // document found: serialize it\n                    writeResourceAs(resource, broker, stylesheet, encoding, null, outputProperties, response);\n                }\n            }\n        } finally {\n            if (resource != null)\n                resource.getUpdateLock().release(Lock.READ_LOCK);\n        }\n    }","commit_id":"e2f5c769602d675fb415e82d3da4fd98b6e4c407","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n   * methodsOrFields: true for methods. false for fields\n   */\n  public static Iterable<SNode> staticImportedThings(final SNode neededConcept, SNode imports) {\n    List<SNode> result = ListSequence.fromList(new ArrayList<SNode>());\n    IScope moduleScope = ((AbstractModule) SNodeOperations.getModel(imports).getModule()).getScope();\n    for (SNode imp : ListSequence.fromList(SLinkOperations.getTargets(imports, \"entries\", true)).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return SPropertyOperations.getBoolean(it, \"static\");\n      }\n    })) {\n\n      if (SPropertyOperations.getBoolean(imp, \"onDemand\")) {\n        String className = Tokens_Behavior.call_stringRep_6148840541591415725(imp);\n        SNode containingClas = resolveFqName(className, moduleScope.getModels(), null);\n        if ((containingClas == null)) {\n          continue;\n        }\n\n        Iterable<SNode> neededMembers = ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), containingClas, \"virtual_getMembers_1213877531970\", new Object[]{})).where(new IWhereFilter<SNode>() {\n          public boolean accept(SNode it) {\n            return SNodeOperations.getConceptDeclaration(it) == neededConcept;\n          }\n        });\n        ListSequence.fromList(result).addSequence(Sequence.fromIterable(neededMembers));\n\n      } else {\n\n        final String memberName = SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getTargets(imp, \"token\", true)).last(), \"value\");\n        String className = Tokens_Behavior.call_stringRep_6148840541591441572(imp, 1);\n\n        SNode containingClas = resolveFqName(className, moduleScope.getModels(), null);\n        if ((containingClas == null)) {\n          continue;\n        }\n\n        // or findAll instead of findFirst ? \n        SNode neededMember = ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), containingClas, \"virtual_getMembers_1213877531970\", new Object[]{})).where(new IWhereFilter<SNode>() {\n          public boolean accept(SNode it) {\n            return SNodeOperations.getConceptDeclaration(it) == neededConcept;\n          }\n        }).findFirst(new IWhereFilter<SNode>() {\n          public boolean accept(SNode it) {\n            return memberName.equals(it.getName());\n          }\n        });\n\n        if ((neededMember == null)) {\n          continue;\n        }\n\n        ListSequence.fromList(result).addElement(neededMember);\n      }\n    }\n    return result;\n  }","id":48266,"modified_method":"/**\n   * methodsOrFields: true for methods. false for fields\n   */\n  public static Iterable<SNode> staticImportedThings(final SNode neededConcept, SNode imports) {\n    List<SNode> result = ListSequence.fromList(new ArrayList<SNode>());\n    IScope moduleScope = ((AbstractModule) SNodeOperations.getModel(imports).getModule()).getScope();\n    for (SNode imp : ListSequence.fromList(SLinkOperations.getTargets(imports, \"entries\", true)).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return SPropertyOperations.getBoolean(it, \"static\");\n      }\n    })) {\n\n      if (SPropertyOperations.getBoolean(imp, \"onDemand\")) {\n        String className = Tokens_Behavior.call_stringRep_6148840541591415725(imp);\n        Iterable<SNode> classes = resolveClassifierByFqNameWithNonStubPriority(moduleScope.getModels(), className);\n        SNode containingClas = ((int) Sequence.fromIterable(classes).count() == 1 ?\n          Sequence.fromIterable(classes).first() :\n          null\n        );\n        if ((containingClas == null)) {\n          continue;\n        }\n\n        Iterable<SNode> neededMembers = ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), containingClas, \"virtual_getMembers_1213877531970\", new Object[]{})).where(new IWhereFilter<SNode>() {\n          public boolean accept(SNode it) {\n            return SNodeOperations.getConceptDeclaration(it) == neededConcept;\n          }\n        });\n        ListSequence.fromList(result).addSequence(Sequence.fromIterable(neededMembers));\n\n      } else {\n\n        final String memberName = SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getTargets(imp, \"token\", true)).last(), \"value\");\n        String className = Tokens_Behavior.call_stringRep_6148840541591441572(imp, 1);\n\n        Iterable<SNode> classes = resolveClassifierByFqNameWithNonStubPriority(moduleScope.getModels(), className);\n\n        SNode containingClas = ((int) Sequence.fromIterable(classes).count() == 1 ?\n          Sequence.fromIterable(classes).first() :\n          null\n        );\n        if ((containingClas == null)) {\n          continue;\n        }\n\n        // or findAll instead of findFirst ? \n        SNode neededMember = ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), containingClas, \"virtual_getMembers_1213877531970\", new Object[]{})).where(new IWhereFilter<SNode>() {\n          public boolean accept(SNode it) {\n            return SNodeOperations.getConceptDeclaration(it) == neededConcept;\n          }\n        }).findFirst(new IWhereFilter<SNode>() {\n          public boolean accept(SNode it) {\n            return memberName.equals(it.getName());\n          }\n        });\n\n        if ((neededMember == null)) {\n          continue;\n        }\n\n        ListSequence.fromList(result).addElement(neededMember);\n      }\n    }\n    return result;\n  }","commit_id":"d354501d689f0cc77b979095a67e85c1b963d541","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void initVisibleModels(SModel modelDescriptor) {\n    myVisibleModels = SetSequence.fromSet(new HashSet<SModel>());\n    SetSequence.fromSet(myVisibleModels).addElement(modelDescriptor);\n    for (SModel nextOwnModelDescriptor : ListSequence.fromList(((AbstractModule) modelDescriptor.getModule()).getModels())) {\n      SetSequence.fromSet(myVisibleModels).addElement(nextOwnModelDescriptor);\n    }\n    SModel model = modelDescriptor;\n    for (SModelReference sm : SModelOperations.getImportedModelUIDs(model)) {\n      SModel importedModelDescriptor = myContext.getScope().getModelDescriptor(sm);\n      if (importedModelDescriptor != null) {\n        SetSequence.fromSet(myVisibleModels).addElement(importedModelDescriptor);\n      }\n    }\n  }","id":48267,"modified_method":"private void initVisibleModels(SModel modelDescriptor) {\n    myVisibleModels = SetSequence.fromSet(new HashSet<SModel>());\n    SetSequence.fromSet(myVisibleModels).addElement(modelDescriptor);\n    for (SModel nextOwnModel : Sequence.fromIterable(modelDescriptor.getModule().getModels())) {\n      SetSequence.fromSet(myVisibleModels).addElement(nextOwnModel);\n    }\n    SModel model = modelDescriptor;\n    for (SModelReference sm : SModelOperations.getImportedModelUIDs(model)) {\n      SModel importedModelDescriptor = myContext.getScope().getModelDescriptor(sm);\n      if (importedModelDescriptor != null) {\n        SetSequence.fromSet(myVisibleModels).addElement(importedModelDescriptor);\n      }\n    }\n  }","commit_id":"64dacbc32e148f88417b80c8b1aeb49d032c7f79","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SModel createModel(final String modelName, final Solution solution) {\n    List<SModel> ownModelDescriptors = solution.getModels();\n    final Wrappers._T<SModel> modelDescriptor = new Wrappers._T<SModel>(null);\n    for (SModel descriptor : ListSequence.fromList(ownModelDescriptors)) {\n      if (descriptor.getReference().getModelName().equals(modelName)) {\n        modelDescriptor.value = descriptor;\n        break;\n      }\n    }\n    if (modelDescriptor.value == null) {\n      ModelAccess.instance().runWriteAction(new Runnable() {\n        public void run() {\n          modelDescriptor.value = SModuleOperations.createModelWithAdjustments(modelName, solution.getModelRoots().iterator().next());\n        }\n      });\n    }\n    return modelDescriptor.value;\n  }","id":48268,"modified_method":"public static SModel createModel(final String modelName, final Solution solution) {\n    final Wrappers._T<SModel> model = new Wrappers._T<SModel>(null);\n    for (SModel descriptor : ListSequence.fromList(solution.getModels())) {\n      if (descriptor.getReference().getModelName().equals(modelName)) {\n        model.value = descriptor;\n        break;\n      }\n    }\n    if (model.value == null) {\n      ModelAccess.instance().runWriteAction(new Runnable() {\n        public void run() {\n          model.value = SModuleOperations.createModelWithAdjustments(modelName, solution.getModelRoots().iterator().next());\n        }\n      });\n    }\n    return model.value;\n  }","commit_id":"64dacbc32e148f88417b80c8b1aeb49d032c7f79","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {\n    try {\n      // todo: rename action name. Something like \"import implicitly imported models\" ? \n\n      MPSProject mpsProject = ((Project) MapSequence.fromMap(_params).get(\"project\")).getComponent(MPSProject.class);\n      List<IModule> allModules = ListSequence.fromListWithValues(new ArrayList<IModule>(), mpsProject.getModulesWithGenerators());\n      for (IModule module : ListSequence.fromList(allModules)) {\n        ModuleDescriptor descriptor = module.getModuleDescriptor();\n        if (descriptor == null) {\n          continue;\n        }\n\n        for (SModel modelDescriptor : ListSequence.fromIterable(module.getModels())) {\n          if (SModelStereotype.isStubModelStereotype(SModelStereotype.getStereotype(modelDescriptor))) {\n            continue;\n          }\n\n          SModel model = modelDescriptor;\n          Set<SModelReference> dependencies = SetSequence.fromSet(new HashSet<SModelReference>());\n          for (SNode node : ListSequence.fromList(SModelOperations.getNodes(model, null))) {\n            SNode nodeToImport = ImportModelsWithUsedClassifiers_Action.this.getNodeToImport(node, _params);\n            SModelReference mref = check_rft9c_a0b0e0d0e0a(SNodeOperations.getModel(nodeToImport));\n            if (mref == null) {\n              continue;\n            }\n            SetSequence.fromSet(dependencies).addElement(mref);\n          }\n          // remove all imported already models \n          SetSequence.fromSet(dependencies).removeElement(modelDescriptor.getReference());\n          for (SModel importedModel : ListSequence.fromList(jetbrains.mps.smodel.SModelOperations.allImportedModels(model, GlobalScope.getInstance()))) {\n            SetSequence.fromSet(dependencies).removeElement(importedModel.getReference());\n          }\n          // add new dependencies to model \n          for (SModelReference modelToImport : SetSequence.fromSet(dependencies)) {\n            ((SModelInternal) model).addModelImport(modelToImport, false);\n          }\n        }\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User's action execute method failed. Action:\" + \"ImportModelsWithUsedClassifiers\", t);\n    }\n  }","id":48269,"modified_method":"public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {\n    try {\n      // todo: rename action name. Something like \"import implicitly imported models\" ? \n\n      MPSProject mpsProject = ((Project) MapSequence.fromMap(_params).get(\"project\")).getComponent(MPSProject.class);\n      List<IModule> allModules = ListSequence.fromListWithValues(new ArrayList<IModule>(), mpsProject.getModulesWithGenerators());\n      for (IModule module : ListSequence.fromList(allModules)) {\n        ModuleDescriptor descriptor = module.getModuleDescriptor();\n        if (descriptor == null) {\n          continue;\n        }\n\n        for (SModel _model : Sequence.fromIterable(module.getModels())) {\n          if (SModelStereotype.isStubModelStereotype(SModelStereotype.getStereotype(_model))) {\n            continue;\n          }\n\n          SModel model = _model;\n\n          Set<SModelReference> dependencies = SetSequence.fromSet(new HashSet<SModelReference>());\n          for (SNode node : ListSequence.fromList(SModelOperations.getNodes(model, null))) {\n            SNode nodeToImport = ImportModelsWithUsedClassifiers_Action.this.getNodeToImport(node, _params);\n            SModelReference mref = check_rft9c_a0b0f0d0e0a(SNodeOperations.getModel(nodeToImport));\n            if (mref == null) {\n              continue;\n            }\n            SetSequence.fromSet(dependencies).addElement(mref);\n          }\n          // remove all imported already models \n          SetSequence.fromSet(dependencies).removeElement(_model.getReference());\n          for (SModel importedModel : ListSequence.fromList(jetbrains.mps.smodel.SModelOperations.allImportedModels(model, GlobalScope.getInstance()))) {\n            SetSequence.fromSet(dependencies).removeElement(importedModel.getReference());\n          }\n          // add new dependencies to model \n          for (SModelReference modelToImport : SetSequence.fromSet(dependencies)) {\n            ((SModelInternal) model).addModelImport(modelToImport, false);\n          }\n        }\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User's action execute method failed. Action:\" + \"ImportModelsWithUsedClassifiers\", t);\n    }\n  }","commit_id":"64dacbc32e148f88417b80c8b1aeb49d032c7f79","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SModelReference check_rft9c_a0b0e0d0e0a(SModel checkedDotOperand) {\n    if (null != checkedDotOperand) {\n      return checkedDotOperand.getReference();\n    }\n    return null;\n  }","id":48270,"modified_method":"private static SModelReference check_rft9c_a0b0f0d0e0a(SModel checkedDotOperand) {\n    if (null != checkedDotOperand) {\n      return checkedDotOperand.getReference();\n    }\n    return null;\n  }","commit_id":"64dacbc32e148f88417b80c8b1aeb49d032c7f79","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {\n    try {\n      final Queue<IModule> modules = QueueSequence.fromQueueWithValues(new LinkedList<IModule>(), ((Project) MapSequence.fromMap(_params).get(\"project\")).getComponent(MPSProject.class).getModules());\n      final List<SModel> modelsToFix = ListSequence.fromList(new ArrayList<SModel>());\n      final CountDownLatch latch = new CountDownLatch(1);\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          try {\n            while (QueueSequence.fromQueue(modules).isNotEmpty()) {\n              IModule module = QueueSequence.fromQueue(modules).removeFirstElement();\n              if (module.isReadOnly()) {\n                continue;\n              }\n\n              if (module instanceof Language) {\n                QueueSequence.fromQueue(modules).addSequence(CollectionSequence.fromCollection(((Language) module).getGenerators()));\n              }\n              IScope moduleScope = module.getScope();\n              for (SModel model : ListSequence.fromIterable(module.getModels())) {\n                if (!(SModelStereotype.isUserModel(model))) {\n                  continue;\n                }\n                if (!(model instanceof EditableSModel)) {\n                  continue;\n                }\n\n                List<SModelReference> imports = SModelOperations.getImportedModelUIDs(model);\n                ListSequence.fromList(modelsToFix).addElement(model);\n              }\n            }\n          } finally {\n            latch.countDown();\n          }\n        }\n      });\n      try {\n        latch.await();\n      } catch (InterruptedException ignore) {\n      }\n      if (ListSequence.fromList(modelsToFix).isNotEmpty()) {\n        ModelAccess.instance().runWriteActionInCommand(new Runnable() {\n          public void run() {\n            new OptimizeImportsHelper(((IOperationContext) MapSequence.fromMap(_params).get(\"context\"))).optimizeModelsImports(modelsToFix);\n            SModelRepository.getInstance().saveAll();\n          }\n        });\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User's action execute method failed. Action:\" + \"OptimizeImportsInProject\", t);\n    }\n  }","id":48271,"modified_method":"public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {\n    try {\n      final Queue<IModule> modules = QueueSequence.fromQueueWithValues(new LinkedList<IModule>(), ((Project) MapSequence.fromMap(_params).get(\"project\")).getComponent(MPSProject.class).getModules());\n      final List<SModel> modelsToFix = ListSequence.fromList(new ArrayList<SModel>());\n      final CountDownLatch latch = new CountDownLatch(1);\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          try {\n            while (QueueSequence.fromQueue(modules).isNotEmpty()) {\n              IModule module = QueueSequence.fromQueue(modules).removeFirstElement();\n              if (module.isReadOnly()) {\n                continue;\n              }\n\n              if (module instanceof Language) {\n                QueueSequence.fromQueue(modules).addSequence(CollectionSequence.fromCollection(((Language) module).getGenerators()));\n              }\n              for (SModel model : Sequence.fromIterable(module.getModels())) {\n                if (SModelStereotype.isUserModel(model) && model instanceof EditableSModel) {\n                  ListSequence.fromList(modelsToFix).addElement(model);\n                }\n              }\n            }\n          } finally {\n            latch.countDown();\n          }\n        }\n      });\n      try {\n        latch.await();\n      } catch (InterruptedException ignore) {\n      }\n      if (ListSequence.fromList(modelsToFix).isNotEmpty()) {\n        ModelAccess.instance().runWriteActionInCommand(new Runnable() {\n          public void run() {\n            new OptimizeImportsHelper(((IOperationContext) MapSequence.fromMap(_params).get(\"context\"))).optimizeModelsImports(modelsToFix);\n            SModelRepository.getInstance().saveAll();\n          }\n        });\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User's action execute method failed. Action:\" + \"OptimizeImportsInProject\", t);\n    }\n  }","commit_id":"64dacbc32e148f88417b80c8b1aeb49d032c7f79","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void movePluginOut(Language l) {\n    assert !(l.isReadOnly());\n\n    String solutionName = makePluginSolutionName(l, SOLUTION_NAME);\n    Solution s = ModuleRepositoryFacade.getInstance().getModule(solutionName, Solution.class);\n    if (s == null) {\n      s = NewModuleUtil.createSolution(solutionName, l.getModuleSourceDir().getDescendant(\"solutions\").getDescendant(SOLUTION_NAME).getPath(), myProject);\n\n      StandaloneMPSProject project = (StandaloneMPSProject) myProject;\n      project.setFolderFor(s, project.getFolderFor(l));\n    }\n    s.getModuleDescriptor().setKind(SolutionKind.PLUGIN_OTHER);\n\n    final String modelName = s.getModuleName() + \".plugin\";\n    List<SModel> solModels = s.getModels();\n    final Wrappers._T<SModel> pluginModel = new Wrappers._T<SModel>(ListSequence.fromList(solModels).where(new IWhereFilter<SModel>() {\n      public boolean accept(SModel it) {\n        return jetbrains.mps.util.SNodeOperations.getModelLongName(it).equals(modelName);\n      }\n    }).first());\n    if (pluginModel.value == null) {\n      pluginModel.value = SModuleOperations.createModelWithAdjustments(modelName, s.getModelRoots().iterator().next());\n    }\n\n    List<SNode> nodes = IterableUtil.asList(LanguageAspect.PLUGIN.get(l).getRootNodes());\n\n    Iterable<SNode> nodes2Refactor = ListSequence.fromList(nodes).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return !(isFromFacetLang(it));\n      }\n    });\n    final RefactoringContext context = RefactoringContext.createRefactoringContextByName(\"jetbrains.mps.lang.core.refactorings.MoveNodes\", Arrays.asList(\"target\"), Arrays.asList(pluginModel.value), Sequence.fromIterable(nodes2Refactor).toListSequence(), myProject);\n    RefactoringContext rc = (RefactoringContext) context;\n    rc.setLocal(true);\n\n    ModelAccess.instance().runWriteInEDT(new Runnable() {\n      @Override\n      public void run() {\n        RefactoringAccess.getInstance().getRefactoringFacade().executeSimple(context);\n      }\n    });\n\n    // <node> \n\n    jetbrains.mps.smodel.SModelOperations.validateLanguagesAndImports(pluginModel.value, false, true);\n\n    s.save();\n    SModelRepository.getInstance().saveAll();\n  }","id":48272,"modified_method":"private void movePluginOut(Language l) {\n    assert !(l.isReadOnly());\n\n    String solutionName = makePluginSolutionName(l, SOLUTION_NAME);\n    Solution s = ModuleRepositoryFacade.getInstance().getModule(solutionName, Solution.class);\n    if (s == null) {\n      s = NewModuleUtil.createSolution(solutionName, l.getModuleSourceDir().getDescendant(\"solutions\").getDescendant(SOLUTION_NAME).getPath(), myProject);\n\n      StandaloneMPSProject project = (StandaloneMPSProject) myProject;\n      project.setFolderFor(s, project.getFolderFor(l));\n    }\n    s.getModuleDescriptor().setKind(SolutionKind.PLUGIN_OTHER);\n\n    final String modelName = s.getModuleName() + \".plugin\";\n    final Wrappers._T<SModel> pluginModel = new Wrappers._T<SModel>(Sequence.fromIterable(((Iterable<SModel>) s.getModels())).where(new IWhereFilter<SModel>() {\n      public boolean accept(SModel it) {\n        return jetbrains.mps.util.SNodeOperations.getModelLongName(it).equals(modelName);\n      }\n    }).first());\n    if (pluginModel.value == null) {\n      pluginModel.value = SModuleOperations.createModelWithAdjustments(modelName, s.getModelRoots().iterator().next());\n    }\n\n    List<SNode> nodes = IterableUtil.asList(LanguageAspect.PLUGIN.get(l).getRootNodes());\n\n    Iterable<SNode> nodes2Refactor = ListSequence.fromList(nodes).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return !(isFromFacetLang(it));\n      }\n    });\n    final RefactoringContext context = RefactoringContext.createRefactoringContextByName(\"jetbrains.mps.lang.core.refactorings.MoveNodes\", Arrays.asList(\"target\"), Arrays.asList(pluginModel.value), Sequence.fromIterable(nodes2Refactor).toListSequence(), myProject);\n    RefactoringContext rc = (RefactoringContext) context;\n    rc.setLocal(true);\n\n    ModelAccess.instance().runWriteInEDT(new Runnable() {\n      @Override\n      public void run() {\n        RefactoringAccess.getInstance().getRefactoringFacade().executeSimple(context);\n      }\n    });\n\n    // <node> \n\n    jetbrains.mps.smodel.SModelOperations.validateLanguagesAndImports(pluginModel.value, false, true);\n\n    s.save();\n    SModelRepository.getInstance().saveAll();\n  }","commit_id":"64dacbc32e148f88417b80c8b1aeb49d032c7f79","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Nullable\n  public static SModel getDebuggerModelForReference(SReference reference) {\n    SModelReference targetSModelReference = reference.getTargetSModelReference();\n    if (targetSModelReference == null) {\n      return null;\n    }\n\n    IModule debuggerApi = MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString(\"cc7da2f6-419f-4133-a811-31fcd3295a85\"));\n    List<SModel> debuggerModels = IterableUtil.asList(debuggerApi.getModels());\n    for (SModel debuggerModel : ListSequence.fromList(debuggerModels)) {\n      if (eq_g10q2g_a0a0f0c(SNodeOperations.getModelLongName(debuggerModel), SModelStereotype.withoutStereotype(targetSModelReference.getModelName()))) {\n        return debuggerModel;\n      }\n    }\n    return null;\n  }","id":48273,"modified_method":"@Nullable\n  public static SModel getDebuggerModelForReference(SReference reference) {\n    SModelReference targetSModelReference = reference.getTargetSModelReference();\n    if (targetSModelReference == null) {\n      return null;\n    }\n\n    IModule debuggerApi = MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString(\"cc7da2f6-419f-4133-a811-31fcd3295a85\"));\n    for (SModel debuggerModel : Sequence.fromIterable(debuggerApi.getModels())) {\n      if (eq_g10q2g_a0a0e0c(SNodeOperations.getModelLongName(debuggerModel), SModelStereotype.withoutStereotype(targetSModelReference.getModelName()))) {\n        return debuggerModel;\n      }\n    }\n    return null;\n  }","commit_id":"64dacbc32e148f88417b80c8b1aeb49d032c7f79","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static boolean eq_g10q2g_a0a0f0c(Object a, Object b) {\n    return (a != null ?\n      a.equals(b) :\n      a == b\n    );\n  }","id":48274,"modified_method":"private static boolean eq_g10q2g_a0a0e0c(Object a, Object b) {\n    return (a != null ?\n      a.equals(b) :\n      a == b\n    );\n  }","commit_id":"64dacbc32e148f88417b80c8b1aeb49d032c7f79","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Collection<SNode> instances(ConsoleScope scope, SAbstractConcept concept) {\n    // todo: readOnly \n    return FindUsagesManager.getInstance().findInstances(scope.getSearchScope(), Collections.singleton(concept), false, new EmptyProgressMonitor());\n  }","id":48275,"modified_method":"public static Collection<SNode> instances(SearchScope scope, SAbstractConcept concept) {\n    return FindUsagesManager.getInstance().findInstances(scope, Collections.singleton(concept), false, new EmptyProgressMonitor());\n  }","commit_id":"a5f144c8cbf97b270f6867cffc8773d833be2c94","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Iterable<SReference> references(ConsoleScope scope) {\n    return Sequence.fromIterable(nodes(scope)).translate(new ITranslator2<SNode, SReference>() {\n      public Iterable<SReference> translate(SNode it) {\n        return SNodeOperations.getReferences(it);\n      }\n    });\n  }","id":48276,"modified_method":"public static Iterable<SReference> references(SearchScope scope) {\n    return Sequence.fromIterable(nodes(scope)).translate(new ITranslator2<SNode, SReference>() {\n      public Iterable<SReference> translate(SNode it) {\n        return SNodeOperations.getReferences(it);\n      }\n    });\n  }","commit_id":"a5f144c8cbf97b270f6867cffc8773d833be2c94","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Iterable<SModule> modules(ConsoleScope scope) {\n    Iterable<SModule> allModules = scope.getSearchScope().getModules();\n    return (scope.includeReadOnly() ? allModules : Sequence.fromIterable(allModules).where(new IWhereFilter<SModule>() {\n      public boolean accept(SModule it) {\n        return !(it.isReadOnly());\n      }\n    }));\n  }","id":48277,"modified_method":"public static Iterable<SModule> modules(SearchScope scope) {\n    return scope.getModules();\n  }","commit_id":"a5f144c8cbf97b270f6867cffc8773d833be2c94","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static ConsoleScope createConsoleScope(@Nullable final SearchScope searchScope, final boolean includeReadOnly, final ConsoleContext context) {\n    return new ConsoleScope() {\n\n      private SearchScope mySearchScope = (searchScope == null ? context.getDefaultSearchscope() : searchScope);\n\n      public SearchScope getSearchScope() {\n        return mySearchScope;\n      }\n      public boolean includeReadOnly() {\n        return includeReadOnly;\n      }\n    };\n  }","id":48278,"modified_method":"public static SearchScope createConsoleScope(@Nullable final SearchScope baseScope, final boolean includeReadOnly, final ConsoleContext context) {\n    SearchScope scope = (baseScope == null ? context.getDefaultSearchscope() : baseScope);\n    return (includeReadOnly ? scope : new EditableFilteringScope(scope));\n  }","commit_id":"a5f144c8cbf97b270f6867cffc8773d833be2c94","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Collection<SReference> usages(ConsoleScope scope, SNode node) {\n    // todo: readOnly \n    Collection<SReference> result = FindUsagesManager.getInstance().findUsages(scope.getSearchScope(), Collections.<SNode>singleton(node), new EmptyProgressMonitor());\n    return result;\n  }","id":48279,"modified_method":"public static Collection<SReference> usages(SearchScope scope, SNode node) {\n    return (Set<SReference>) FindUsagesManager.getInstance().findUsages(scope, Collections.<SNode>singleton(node), new EmptyProgressMonitor());\n  }","commit_id":"a5f144c8cbf97b270f6867cffc8773d833be2c94","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void generate(GeneratorManager gm, IGenerationHandler generationHandler, IMessageHandler messageHandler) {\n      List<Pair<SModelDescriptor, IOperationContext>> modelsToContext = new ArrayList<Pair<SModelDescriptor, IOperationContext>>();\n      for (IModule module : myModules) {\n        ModuleContext moduleContext = new ModuleContext(module, myProject);\n        List<SModelDescriptor> modelsToGenerateNow = myModuleToModels.get(module);\n        for (SModelDescriptor model : modelsToGenerateNow) {\n          modelsToContext.add(new Pair<SModelDescriptor, IOperationContext>(model, moduleContext));\n        }\n      }\n      gm.generateModels(modelsToContext, generationHandler, new EmptyProgressIndicator(), messageHandler, false, true);\n    }","id":48280,"modified_method":"public void generate(GeneratorManager gm, IGenerationHandler generationHandler, IMessageHandler messageHandler) {\n      List<Pair<RegularSModelDescriptor, IOperationContext>> modelsToContext = new ArrayList<Pair<RegularSModelDescriptor, IOperationContext>>();\n      for (IModule module : myModules) {\n        ModuleContext moduleContext = new ModuleContext(module, myProject);\n        List<RegularSModelDescriptor> modelsToGenerateNow = myModuleToModels.get(module);\n        for (RegularSModelDescriptor model : modelsToGenerateNow) {\n          modelsToContext.add(new Pair<RegularSModelDescriptor, IOperationContext>(model, moduleContext));\n        }\n      }\n      gm.generateModels(modelsToContext, generationHandler, new EmptyProgressIndicator(), messageHandler, false, true);\n    }","commit_id":"61f59de3a04f54ef0dec814d5e2d8e19917e72ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected List<Cycle> computeGenerationOrder(MPSProject project, ObjectsToProcess go) {\n\n    final Map<IModule, List<SModelDescriptor>> moduleToModels = new LinkedHashMap<IModule, List<SModelDescriptor>>();\n    extractModels(go.getProjects(), go.getModules(), go.getModels(), moduleToModels);\n\n    // calculate order\n    List<Set<IModule>> modulesOrder = ModelAccess.instance().runReadAction(new Computable<List<Set<IModule>>>() {\n      public List<Set<IModule>> compute() {\n        return StronglyConnectedModules.getInstance().getStronglyConnectedComponents(moduleToModels.keySet(), new IModuleDecoratorBuilder<IModule, IModuleDecorator<IModule>>() {\n          public IModuleDecorator<IModule> decorate(IModule module) {\n            return new ModuleDecorator(module);\n          }\n        });\n      }\n    });\n\n    // create cycles\n    List<Cycle> cycles = new ArrayList<Cycle>();\n    for (Set<IModule> modulesSet : modulesOrder) {\n      SimpleModuleCycle cycle = new SimpleModuleCycle(project, modulesSet, moduleToModels);\n      cycles.add(cycle);\n    }\n\n    return cycles;\n  }","id":48281,"modified_method":"protected List<Cycle> computeGenerationOrder(MPSProject project, ObjectsToProcess go) {\n\n    final Map<IModule, List<RegularSModelDescriptor>> moduleToModels = new LinkedHashMap<IModule, List<RegularSModelDescriptor>>();\n    extractModels(go.getProjects(), go.getModules(), (Set)go.getModels(), (Map)moduleToModels);\n\n    // calculate order\n    List<Set<IModule>> modulesOrder = ModelAccess.instance().runReadAction(new Computable<List<Set<IModule>>>() {\n      public List<Set<IModule>> compute() {\n        return StronglyConnectedModules.getInstance().getStronglyConnectedComponents(moduleToModels.keySet(), new IModuleDecoratorBuilder<IModule, IModuleDecorator<IModule>>() {\n          public IModuleDecorator<IModule> decorate(IModule module) {\n            return new ModuleDecorator(module);\n          }\n        });\n      }\n    });\n\n    // create cycles\n    List<Cycle> cycles = new ArrayList<Cycle>();\n    for (Set<IModule> modulesSet : modulesOrder) {\n      SimpleModuleCycle cycle = new SimpleModuleCycle(project, modulesSet, moduleToModels);\n      cycles.add(cycle);\n    }\n\n    return cycles;\n  }","commit_id":"61f59de3a04f54ef0dec814d5e2d8e19917e72ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SimpleModuleCycle(MPSProject project, Set<IModule> modules, Map<IModule, List<SModelDescriptor>> moduleToModels) {\n      myModules = modules;\n      myProject = project;\n      myModuleToModels = moduleToModels;\n    }","id":48282,"modified_method":"public SimpleModuleCycle(MPSProject project, Set<IModule> modules, Map<IModule, List<RegularSModelDescriptor>> moduleToModels) {\n      myModules = modules;\n      myProject = project;\n      myModuleToModels = moduleToModels;\n    }","commit_id":"61f59de3a04f54ef0dec814d5e2d8e19917e72ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ModelCycle(SModelDescriptor sModel, IModule module, MPSProject project) {\n      mySModel = sModel;\n      myProject = project;\n      myModule = module;\n    }","id":48283,"modified_method":"public ModelCycle(RegularSModelDescriptor sModel, IModule module, MPSProject project) {\n      mySModel = sModel;\n      myProject = project;\n      myModule = module;\n    }","commit_id":"61f59de3a04f54ef0dec814d5e2d8e19917e72ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected List<Cycle> computeGenerationOrder(MPSProject project, ObjectsToProcess go) {\n    List<Cycle> cycles = new ArrayList<Cycle>();\n    Map<IModule, List<SModelDescriptor>> moduleToModels = new LinkedHashMap<IModule, List<SModelDescriptor>>();\n\n    extractModels(go.getProjects(), go.getModules(), go.getModels(), moduleToModels);\n\n    for (IModule module : moduleToModels.keySet()) {\n      List<SModelDescriptor> modelsForModule = moduleToModels.get(module);\n      for (SModelDescriptor smodel : modelsForModule) {\n        cycles.add(new ModelCycle(smodel, module, project));\n      }\n    }\n\n    return cycles;\n  }","id":48284,"modified_method":"@Override\n  protected List<Cycle> computeGenerationOrder(MPSProject project, ObjectsToProcess go) {\n    List<Cycle> cycles = new ArrayList<Cycle>();\n    Map<IModule, List<RegularSModelDescriptor>> moduleToModels = new LinkedHashMap<IModule, List<RegularSModelDescriptor>>();\n\n    extractModels(go.getProjects(), go.getModules(), go.getModels(), (Map) moduleToModels);\n\n    for (IModule module : moduleToModels.keySet()) {\n      List<RegularSModelDescriptor> modelsForModule = moduleToModels.get(module);\n      for (RegularSModelDescriptor smodel : modelsForModule) {\n        cycles.add(new ModelCycle(smodel, module, project));\n      }\n    }\n\n    return cycles;\n  }","commit_id":"61f59de3a04f54ef0dec814d5e2d8e19917e72ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Nullable\n  public static JSProperty getSelector(PsiElement decorator) {\n    final JSArgumentList argumentList = PsiTreeUtil.getChildOfType(decorator, JSArgumentList.class);\n    final JSExpression[] arguments = argumentList != null ? argumentList.getArguments() : null;\n    final JSObjectLiteralExpression descriptor = ObjectUtils.tryCast(arguments != null && arguments.length > 0 ? arguments[0] : null,\n                                                                     JSObjectLiteralExpression.class);\n    return descriptor != null ? descriptor.findProperty(\"selector\") : null;\n  }","id":48285,"modified_method":"@Nullable\n  public static JSProperty getSelector(PsiElement decorator) {\n    return getProperty(decorator, SELECTOR);\n  }","commit_id":"35624499bd0c632f50a2235b70ec2c3ccbf59a9d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  public void processCallExpression(JSCallExpression callExpression, @NotNull JSElementIndexingData outData) {\n    final JSExpression expression = callExpression.getMethodExpression();\n    if (expression instanceof JSReferenceExpression) {\n      final String name = ((JSReferenceExpression)expression).getReferenceName();\n      if (!isDirective(name)) return;\n      addImplicitElement(callExpression, (JSElementIndexingDataImpl)outData, getSelectorName(callExpression));\n    }\n  }","id":48286,"modified_method":"@Override\n  public void processCallExpression(JSCallExpression callExpression, @NotNull JSElementIndexingData outData) {\n    final JSExpression expression = callExpression.getMethodExpression();\n    if (expression instanceof JSReferenceExpression) {\n      final String name = ((JSReferenceExpression)expression).getReferenceName();\n      if (isDirective(name)) {\n        addImplicitElement(callExpression, (JSElementIndexingDataImpl)outData, getPropertyName(callExpression, SELECTOR));\n      }\n      if (isPipe(name)) {\n        addPipe(callExpression, (JSElementIndexingDataImpl)outData, getPropertyName(callExpression, NAME));\n      }\n     }\n  }","commit_id":"35624499bd0c632f50a2235b70ec2c3ccbf59a9d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  public boolean shouldCreateStubForCallExpression(ASTNode node) {\n    ASTNode ref = node.getFirstChildNode();\n    if (ref.getElementType() == JSTokenTypes.NEW_KEYWORD) {\n      ref = TreeUtil.findSibling(ref, JSElementTypes.REFERENCE_EXPRESSION);\n    }\n    if (ref != null){\n      final ASTNode name = ref.getLastChildNode();\n      if (name != null && name.getElementType() == JSTokenTypes.IDENTIFIER) {\n        final String referencedName = name.getText();\n        return isDirective(referencedName);\n      }\n    }\n    return false;\n  }","id":48287,"modified_method":"@Override\n  public boolean shouldCreateStubForCallExpression(ASTNode node) {\n    ASTNode ref = node.getFirstChildNode();\n    if (ref.getElementType() == JSTokenTypes.NEW_KEYWORD) {\n      ref = TreeUtil.findSibling(ref, JSElementTypes.REFERENCE_EXPRESSION);\n    }\n    if (ref != null){\n      final ASTNode name = ref.getLastChildNode();\n      if (name != null && name.getElementType() == JSTokenTypes.IDENTIFIER) {\n        final String referencedName = name.getText();\n        return isDirective(referencedName) || isPipe(referencedName);\n      }\n    }\n    return false;\n  }","commit_id":"35624499bd0c632f50a2235b70ec2c3ccbf59a9d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  public JSElementIndexingDataImpl processDecorator(ES7Decorator decorator, JSElementIndexingDataImpl outData) {\n    final String name = decorator.getName();\n    if (!isDirective(name)) return outData;\n    final String selectorName = getSelectorName(decorator);\n\n    return addImplicitElement(decorator, outData, selectorName);\n  }","id":48288,"modified_method":"@Override\n  public JSElementIndexingDataImpl processDecorator(ES7Decorator decorator, JSElementIndexingDataImpl outData) {\n    final String name = decorator.getName();\n    if (isDirective(name)) {\n      return addImplicitElement(decorator, outData, getPropertyName(decorator, SELECTOR));\n    }\n    if (isPipe(name)) {\n      return addPipe(decorator, outData, getPropertyName(decorator, NAME));\n    }\n    return outData;\n  }","commit_id":"35624499bd0c632f50a2235b70ec2c3ccbf59a9d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  public ResolveResult[] doResolve() {\n    if (myReferencedName == null) return ResolveResult.EMPTY_ARRAY;\n    if (myRef.getParent() instanceof JSDefinitionExpression) {\n      final AngularJSRepeatExpression repeat = PsiTreeUtil.getParentOfType(myRef, AngularJSRepeatExpression.class);\n      if (repeat != null) {\n        for (JSDefinitionExpression def : repeat.getDefinitions()) {\n          if (PsiTreeUtil.isAncestor(def, myRef, true)) return new JSResolveResult[]{new JSResolveResult(myRef)};\n        }\n      }\n      final AngularJSAsExpression as = PsiTreeUtil.getParentOfType(myRef, AngularJSAsExpression.class);\n      if (as != null) {\n        if (PsiTreeUtil.isAncestor(as.getDefinition(), myRef, true)) return new JSResolveResult[]{new JSResolveResult(myRef)};\n      }\n      return ResolveResult.EMPTY_ARRAY;\n    }\n\n    if (AngularJSAsExpression.isAsControllerRef(myRef, myRef.getParent())) {\n      final PsiElement resolve = AngularIndexUtil.resolve(myParent.getProject(), AngularControllerIndex.KEY, myReferencedName);\n      if (resolve != null) {\n        return new JSResolveResult[]{new JSResolveResult(resolve)};\n      }\n    } else if (myQualifier == null) {\n      final Collection<JSNamedElement> localVariables = getItemsByName(myReferencedName, myRef);\n      if (!localVariables.isEmpty()) {\n        return ContainerUtil.map2Array(localVariables, JSResolveResult.class, new Function<JSNamedElement, JSResolveResult>() {\n          @Override\n          public JSResolveResult fun(JSNamedElement item) {\n            return new JSResolveResult(item);\n          }\n        });\n      }\n    }\n    return super.doResolve();\n  }","id":48289,"modified_method":"@Override\n  public ResolveResult[] doResolve() {\n    if (myReferencedName == null) return ResolveResult.EMPTY_ARRAY;\n    if (myRef.getParent() instanceof JSDefinitionExpression) {\n      final AngularJSRepeatExpression repeat = PsiTreeUtil.getParentOfType(myRef, AngularJSRepeatExpression.class);\n      if (repeat != null) {\n        for (JSDefinitionExpression def : repeat.getDefinitions()) {\n          if (PsiTreeUtil.isAncestor(def, myRef, true)) return new JSResolveResult[]{new JSResolveResult(myRef)};\n        }\n      }\n      final AngularJSAsExpression as = PsiTreeUtil.getParentOfType(myRef, AngularJSAsExpression.class);\n      if (as != null) {\n        if (PsiTreeUtil.isAncestor(as.getDefinition(), myRef, true)) return new JSResolveResult[]{new JSResolveResult(myRef)};\n      }\n      return ResolveResult.EMPTY_ARRAY;\n    }\n\n    if (AngularJSAsExpression.isAsControllerRef(myRef, myRef.getParent())) {\n      final PsiElement resolve = AngularIndexUtil.resolve(myParent.getProject(), AngularControllerIndex.KEY, myReferencedName);\n      if (resolve != null) {\n        return new JSResolveResult[]{new JSResolveResult(resolve)};\n      }\n    } else if (AngularJSFilterExpression.isFilterNameRef(myRef, myParent)) {\n      final PsiElement resolve = AngularIndexUtil.resolve(myParent.getProject(), AngularFilterIndex.KEY, myReferencedName);\n      if (resolve != null) {\n        return new JSResolveResult[] {new JSResolveResult(resolve)};\n      }\n    } else if (myQualifier == null) {\n      final Collection<JSNamedElement> localVariables = getItemsByName(myReferencedName, myRef);\n      if (!localVariables.isEmpty()) {\n        return ContainerUtil.map2Array(localVariables, JSResolveResult.class, new Function<JSNamedElement, JSResolveResult>() {\n          @Override\n          public JSResolveResult fun(JSNamedElement item) {\n            return new JSResolveResult(item);\n          }\n        });\n      }\n    }\n    return super.doResolve();\n  }","commit_id":"35624499bd0c632f50a2235b70ec2c3ccbf59a9d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public void testFilterCutomResolve() {\n    myFixture.configureByFiles(\"filterCustom.resolve.html\", \"angular.js\", \"custom.js\");\n    int offsetBySignature = AngularTestUtil.findOffsetBySignature(\"fil<caret>ta\", myFixture.getFile());\n    PsiReference ref = myFixture.getFile().findReferenceAt(offsetBySignature);\n    assertNotNull(ref);\n    PsiElement resolve = ref.resolve();\n    assertNotNull(resolve);\n    assertEquals(\"custom.js\", resolve.getContainingFile().getName());\n    assertEquals(\"\\\"filta\\\"\", resolve.getParent().getText());\n  }","id":48290,"modified_method":"public void testFilterCustomResolve() {\n    myFixture.configureByFiles(\"filterCustom.resolve.html\", \"angular.js\", \"custom.js\");\n    int offsetBySignature = AngularTestUtil.findOffsetBySignature(\"fil<caret>ta\", myFixture.getFile());\n    PsiReference ref = myFixture.getFile().findReferenceAt(offsetBySignature);\n    assertNotNull(ref);\n    PsiElement resolve = ref.resolve();\n    assertNotNull(resolve);\n    assertEquals(\"custom.js\", resolve.getContainingFile().getName());\n    assertEquals(\"\\\"filta\\\"\", resolve.getParent().getText());\n  }","commit_id":"35624499bd0c632f50a2235b70ec2c3ccbf59a9d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public static JetScope getExpressionMemberScope(@NotNull ResolveSession resolveSession, @NotNull JetExpression expression) {\n        DelegatingBindingTrace trace = new DelegatingBindingTrace(resolveSession.getBindingContext());\n\n        if (expression instanceof JetReferenceExpression) {\n            // In some type declaration\n            if (expression.getParent() instanceof JetUserType) {\n                JetUserType qualifier = ((JetUserType) expression.getParent()).getQualifier();\n                if (qualifier != null) {\n                    Collection<? extends DeclarationDescriptor> descriptors = resolveSession.getInjector().getQualifiedExpressionResolver()\n                            .lookupDescriptorsForUserType(qualifier, getExpressionOuterScope(resolveSession, expression), trace);\n\n                    for (DeclarationDescriptor descriptor : descriptors) {\n                        if (descriptor instanceof LazyPackageDescriptor) {\n                            return ((LazyPackageDescriptor) descriptor).getMemberScope();\n                        }\n\n                    }\n                }\n            }\n\n            // Inside import\n            if (PsiTreeUtil.getParentOfType(expression, JetImportDirective.class, false) != null) {\n                if (expression.getParent() instanceof JetDotQualifiedExpression) {\n                    JetExpression element = ((JetDotQualifiedExpression) expression.getParent()).getReceiverExpression();\n\n                    NamespaceDescriptor filePackage = resolveSession.getPackageDescriptorByFqName(\n                            new FqName(((JetFile) expression.getContainingFile()).getPackageName()));\n\n                    NamespaceDescriptor rootPackage = resolveSession.getPackageDescriptorByFqName(FqName.ROOT);\n\n                    Collection<? extends DeclarationDescriptor> descriptors;\n\n                    if (element instanceof JetDotQualifiedExpression) {\n                        descriptors = resolveSession.getInjector().getQualifiedExpressionResolver().lookupDescriptorsForQualifiedExpression(\n                                (JetDotQualifiedExpression) element, rootPackage.getMemberScope(), filePackage.getMemberScope(), trace, false, false);\n                    }\n                    else {\n                        descriptors = resolveSession.getInjector().getQualifiedExpressionResolver().lookupDescriptorsForSimpleNameReference(\n                                (JetSimpleNameExpression) element, rootPackage.getMemberScope(), filePackage.getMemberScope(), trace, false, false, false);\n                    }\n\n                    for (DeclarationDescriptor descriptor : descriptors) {\n                        if (descriptor instanceof NamespaceDescriptor) {\n                            return ((NamespaceDescriptor) descriptor).getMemberScope();\n                        }\n                    }\n                }\n                else {\n                    return resolveSession.getPackageDescriptorByFqName(FqName.ROOT).getMemberScope();\n                }\n            }\n\n            // Inside package declaration\n            JetNamespaceHeader namespaceHeader = PsiTreeUtil.getParentOfType(expression, JetNamespaceHeader.class, false);\n            if (namespaceHeader != null) {\n                NamespaceDescriptor packageDescriptor = resolveSession.getPackageDescriptorByFqName(\n                        namespaceHeader.getParentFqName((JetReferenceExpression)expression));\n                if (packageDescriptor != null) {\n                    return packageDescriptor.getMemberScope();\n                }\n            }\n        }\n\n        return null;\n    }","id":48291,"modified_method":"public static JetScope getExpressionMemberScope(@NotNull ResolveSession resolveSession, @NotNull JetExpression expression) {\n        DelegatingBindingTrace trace = new DelegatingBindingTrace(resolveSession.getBindingContext());\n\n        if (expression instanceof JetReferenceExpression) {\n            QualifiedExpressionResolver qualifiedExpressionResolver = resolveSession.getInjector().getQualifiedExpressionResolver();\n\n            // In some type declaration\n            if (expression.getParent() instanceof JetUserType) {\n                JetUserType qualifier = ((JetUserType) expression.getParent()).getQualifier();\n                if (qualifier != null) {\n                    Collection<? extends DeclarationDescriptor> descriptors = qualifiedExpressionResolver\n                            .lookupDescriptorsForUserType(qualifier, getExpressionOuterScope(resolveSession, expression), trace);\n\n                    for (DeclarationDescriptor descriptor : descriptors) {\n                        if (descriptor instanceof LazyPackageDescriptor) {\n                            return ((LazyPackageDescriptor) descriptor).getMemberScope();\n                        }\n                    }\n                }\n            }\n\n            // Inside import\n            if (PsiTreeUtil.getParentOfType(expression, JetImportDirective.class, false) != null) {\n                NamespaceDescriptor rootPackage = resolveSession.getPackageDescriptorByFqName(FqName.ROOT);\n                assert rootPackage != null;\n\n                if (expression.getParent() instanceof JetDotQualifiedExpression) {\n                    JetExpression element = ((JetDotQualifiedExpression) expression.getParent()).getReceiverExpression();\n                    String name = ((JetFile) expression.getContainingFile()).getPackageName();\n\n                    NamespaceDescriptor filePackage = name != null ? resolveSession.getPackageDescriptorByFqName(new FqName(name)) : rootPackage;\n                    assert filePackage != null : \"File package should be already resolved and be found\";\n\n                    JetScope scope = filePackage.getMemberScope();\n                    Collection<? extends DeclarationDescriptor> descriptors;\n\n                    if (element instanceof JetDotQualifiedExpression) {\n                        descriptors = qualifiedExpressionResolver.lookupDescriptorsForQualifiedExpression(\n                                (JetDotQualifiedExpression) element, rootPackage.getMemberScope(), scope, trace, false, false);\n                    }\n                    else {\n                        descriptors = qualifiedExpressionResolver.lookupDescriptorsForSimpleNameReference(\n                                (JetSimpleNameExpression) element, rootPackage.getMemberScope(), scope, trace, false, false, false);\n                    }\n\n                    for (DeclarationDescriptor descriptor : descriptors) {\n                        if (descriptor instanceof NamespaceDescriptor) {\n                            return ((NamespaceDescriptor) descriptor).getMemberScope();\n                        }\n                    }\n                }\n                else {\n                    return rootPackage.getMemberScope();\n                }\n            }\n\n            // Inside package declaration\n            JetNamespaceHeader namespaceHeader = PsiTreeUtil.getParentOfType(expression, JetNamespaceHeader.class, false);\n            if (namespaceHeader != null) {\n                NamespaceDescriptor packageDescriptor = resolveSession.getPackageDescriptorByFqName(\n                        namespaceHeader.getParentFqName((JetReferenceExpression)expression));\n                if (packageDescriptor != null) {\n                    return packageDescriptor.getMemberScope();\n                }\n            }\n        }\n\n        return null;\n    }","commit_id":"d2fa6abf4a383ad13a52c068883691b369790479","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public JetBasicCompletionTest(@NotNull String path, @NotNull String name) {\n        myPath = path;\n        myName = name;\n\n        // Set name explicitly because otherwise there will be \"TestCase.fName cannot be null\"\n        setName(\"testCompletionExecute\");\n    }","id":48292,"modified_method":"protected JetBasicCompletionTest(@NotNull String path, @NotNull String name) {\n        super(path, name);\n    }","commit_id":"182009ab61eb91f5aaee6ef430f789da75b326bb","url":"https://github.com/JetBrains/kotlin"},{"original_method":"protected void doTest() throws Exception {\n        final String testName = getTestName(false);\n\n        type = (testName.startsWith(\"Smart\")) ? CompletionType.SMART : CompletionType.BASIC;\n\n        configureByFile(testName + \".kt\");\n\n        assertContainsItems(itemsShouldExist(getFile().getText()));\n        assertNotContainItems(itemsShouldAbsent(getFile().getText()));\n    }","id":48293,"modified_method":"protected JetCompletionTestBase(@NotNull String path, @NotNull String name) {\n        myPath = path;\n        myName = name;\n\n        // Set name explicitly because otherwise there will be \"TestCase.fName cannot be null\"\n        setName(\"testCompletionExecute\");\n    }","commit_id":"182009ab61eb91f5aaee6ef430f789da75b326bb","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private Object[] collectLookupElements(BindingContext bindingContext, JetScope scope) {\n        List<LookupElement> result = Lists.newArrayList();\n        for (final DeclarationDescriptor descriptor : scope.getAllDescriptors()) {\n            LookupElementBuilder element = LookupElementBuilder.create(descriptor.getName());\n            String typeText = \"\";\n            String tailText = \"\";\n            boolean tailTextGrayed = false;\n            if (descriptor instanceof FunctionDescriptor) {\n                FunctionDescriptor functionDescriptor = (FunctionDescriptor) descriptor;\n                JetType returnType = functionDescriptor.getReturnType();\n                typeText = DescriptorRenderer.TEXT.renderType(returnType);\n                tailText = \"(\" + StringUtil.join(functionDescriptor.getValueParameters(), new Function<ValueParameterDescriptor, String>() {\n                    @Override\n                    public String fun(ValueParameterDescriptor valueParameterDescriptor) {\n                        return valueParameterDescriptor.getName() + \":\" +\n                               DescriptorRenderer.TEXT.renderType(valueParameterDescriptor.getOutType());\n                    }\n                }, \",\") + \")\";\n            }\n            else if (descriptor instanceof VariableDescriptor) {\n                JetType outType = ((VariableDescriptor) descriptor).getOutType();\n                typeText = DescriptorRenderer.TEXT.renderType(outType);\n            }\n            else if (descriptor instanceof ClassDescriptor) {\n                tailText = \" (\" + DescriptorUtils.getFQName(descriptor.getContainingDeclaration()) + \")\";\n                tailTextGrayed = true;\n            }\n            else {\n                typeText = DescriptorRenderer.TEXT.render(descriptor);\n            }\n            element = element.setTailText(tailText, tailTextGrayed).setTypeText(typeText);\n\n            PsiElement declaration = bindingContext.get(BindingContext.DESCRIPTOR_TO_DECLARATION, descriptor.getOriginal());\n            if (declaration != null) {\n                element = element.setIcon(declaration.getIcon(Iconable.ICON_FLAG_OPEN | Iconable.ICON_FLAG_VISIBILITY));\n            }\n\n            result.add(element);\n        }\n        return result.toArray();\n    }","id":48294,"modified_method":"private Object[] collectLookupElements(BindingContext bindingContext, Iterable<DeclarationDescriptor> descriptors) {\n        List<LookupElement> result = Lists.newArrayList();\n\n        for (final DeclarationDescriptor descriptor : descriptors) {\n            LookupElementBuilder element = LookupElementBuilder.create(descriptor.getName());\n            String typeText = \"\";\n            String tailText = \"\";\n            boolean tailTextGrayed = false;\n            if (descriptor instanceof FunctionDescriptor) {\n                FunctionDescriptor functionDescriptor = (FunctionDescriptor) descriptor;\n                JetType returnType = functionDescriptor.getReturnType();\n                typeText = DescriptorRenderer.TEXT.renderType(returnType);\n                tailText = \"(\" + StringUtil.join(functionDescriptor.getValueParameters(), new Function<ValueParameterDescriptor, String>() {\n                    @Override\n                    public String fun(ValueParameterDescriptor valueParameterDescriptor) {\n                        return valueParameterDescriptor.getName() + \":\" +\n                               DescriptorRenderer.TEXT.renderType(valueParameterDescriptor.getOutType());\n                    }\n                }, \",\") + \")\";\n            }\n            else if (descriptor instanceof VariableDescriptor) {\n                JetType outType = ((VariableDescriptor) descriptor).getOutType();\n                typeText = DescriptorRenderer.TEXT.renderType(outType);\n            }\n            else if (descriptor instanceof ClassDescriptor) {\n                tailText = \" (\" + DescriptorUtils.getFQName(descriptor.getContainingDeclaration()) + \")\";\n                tailTextGrayed = true;\n            }\n            else {\n                typeText = DescriptorRenderer.TEXT.render(descriptor);\n            }\n            element = element.setTailText(tailText, tailTextGrayed).setTypeText(typeText);\n\n            PsiElement declaration = bindingContext.get(BindingContext.DESCRIPTOR_TO_DECLARATION, descriptor.getOriginal());\n            if (declaration != null) {\n                element = element.setIcon(declaration.getIcon(Iconable.ICON_FLAG_OPEN | Iconable.ICON_FLAG_VISIBILITY));\n            }\n\n            result.add(element);\n        }\n        return result.toArray();\n    }","commit_id":"182009ab61eb91f5aaee6ef430f789da75b326bb","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    @Override\n    public Object[] getVariants() {\n        PsiElement parent = myExpression.getParent();\n        if (parent instanceof JetQualifiedExpression) {\n            JetQualifiedExpression qualifiedExpression = (JetQualifiedExpression) parent;\n            JetExpression receiverExpression = qualifiedExpression.getReceiverExpression();\n            JetFile file = (JetFile) myExpression.getContainingFile();\n            BindingContext bindingContext = WholeProjectAnalyzerFacade.analyzeProjectWithCacheOnAFile(file);\n            final JetType expressionType = bindingContext.get(BindingContext.EXPRESSION_TYPE, receiverExpression);\n            if (expressionType != null) {\n                return collectLookupElements(bindingContext, expressionType.getMemberScope());\n            }\n        }\n        else {\n            JetFile file = (JetFile) myExpression.getContainingFile();\n            BindingContext bindingContext = WholeProjectAnalyzerFacade.analyzeProjectWithCacheOnAFile(file);\n            JetScope resolutionScope = bindingContext.get(BindingContext.RESOLUTION_SCOPE, myExpression);\n            if (resolutionScope != null) {\n                return collectLookupElements(bindingContext, resolutionScope);\n            }\n        }\n\n        return EMPTY_ARRAY;\n    }","id":48295,"modified_method":"@NotNull\n    @Override\n    public Object[] getVariants() {\n        PsiElement parent = myExpression.getParent();\n        if (parent instanceof JetQualifiedExpression) {\n            JetQualifiedExpression qualifiedExpression = (JetQualifiedExpression) parent;\n            JetExpression receiverExpression = qualifiedExpression.getReceiverExpression();\n            JetFile file = (JetFile) myExpression.getContainingFile();\n            BindingContext bindingContext = WholeProjectAnalyzerFacade.analyzeProjectWithCacheOnAFile(file);\n\n            final JetType expressionType = bindingContext.get(BindingContext.EXPRESSION_TYPE, receiverExpression);\n            final JetScope resolutionScope = bindingContext.get(BindingContext.RESOLUTION_SCOPE, receiverExpression);\n\n            if (expressionType != null && resolutionScope != null) {\n                return collectLookupElements(bindingContext,\n                        includeExternalCallableExtensions(expressionType.getMemberScope().getAllDescriptors(),\n                                                          resolutionScope, new ExpressionReceiver(receiverExpression, expressionType)));\n            }\n        }\n        else {\n            JetFile file = (JetFile) myExpression.getContainingFile();\n            BindingContext bindingContext = WholeProjectAnalyzerFacade.analyzeProjectWithCacheOnAFile(file);\n            JetScope resolutionScope = bindingContext.get(BindingContext.RESOLUTION_SCOPE, myExpression);\n            if (resolutionScope != null) {\n                return collectLookupElements(bindingContext,\n                        excludeNotCallableExtensions(resolutionScope.getAllDescriptors(), resolutionScope));\n            }\n        }\n\n        return EMPTY_ARRAY;\n    }","commit_id":"182009ab61eb91f5aaee6ef430f789da75b326bb","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public KeywordsCompletionTest(@NotNull String path, @NotNull String name) {\n        myPath = path;\n        myName = name;\n\n        // Set name explicitly because otherwise there will be \"TestCase.fName cannot be null\"\n        setName(\"testCompletionExecute\");\n    }","id":48296,"modified_method":"protected KeywordsCompletionTest(@NotNull String path, @NotNull String name) {\n        super(path, name);\n    }","commit_id":"182009ab61eb91f5aaee6ef430f789da75b326bb","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    public JetScope getFileScopeForDeclarationResolution(JetFile file) {\n        // package\n        JetNamespaceHeader header = file.getNamespaceHeader();\n        if (header == null) {\n            throw new IllegalArgumentException(\"Scripts are not supported: \" + file.getName());\n        }\n\n        FqName fqName = new FqName(header.getQualifiedName());\n        NamespaceDescriptor packageDescriptor = resolveSession.getPackageDescriptorByFqName(fqName);\n\n        if (packageDescriptor == null) {\n            throw new IllegalStateException(\"Package not found: \" + fqName + \" maybe the file is not in scope of this resolve session: \" + file.getName());\n        }\n\n        WritableScope writableScope = new WritableScopeImpl(\n                JetScope.EMPTY, packageDescriptor, RedeclarationHandler.DO_NOTHING, \"File scope for declaration resolution\");\n        writableScope.changeLockLevel(WritableScope.LockLevel.BOTH);\n\n        NamespaceDescriptor rootPackageDescriptor = resolveSession.getPackageDescriptorByFqName(FqName.ROOT);\n        if (rootPackageDescriptor == null) {\n            throw new IllegalStateException(\"Root package not found\");\n        }\n\n        // Don't import twice\n        if (!packageDescriptor.getQualifiedName().equals(FqName.ROOT)) {\n            writableScope.importScope(rootPackageDescriptor.getMemberScope());\n        }\n\n        ImportsResolver.processImportsInFile(true, writableScope, Lists.newArrayList(file.getImportDirectives()),\n                                             rootPackageDescriptor.getMemberScope(),\n                                             resolveSession.getModuleConfiguration(), resolveSession.getTrace(),\n                                             resolveSession.getInjector().getQualifiedExpressionResolver());\n\n        writableScope.importScope(packageDescriptor.getMemberScope());\n\n        writableScope.changeLockLevel(WritableScope.LockLevel.READING);\n        // TODO: Cache\n        return writableScope;\n    }","id":48297,"modified_method":"@NotNull\n    public JetScope getFileScopeForDeclarationResolution(JetFile file) {\n        // package\n        JetNamespaceHeader header = file.getNamespaceHeader();\n        if (header == null) {\n            throw new IllegalArgumentException(\"Scripts are not supported: \" + file.getName());\n        }\n\n        FqName fqName = new FqName(header.getQualifiedName());\n        NamespaceDescriptor packageDescriptor = resolveSession.getPackageDescriptorByFqName(fqName);\n\n        if (packageDescriptor == null) {\n            throw new IllegalStateException(\"Package not found: \" + fqName + \" maybe the file is not in scope of this resolve session: \" + file.getName());\n        }\n\n        WritableScope fileScope = new WritableScopeImpl(\n                JetScope.EMPTY, packageDescriptor, RedeclarationHandler.DO_NOTHING, \"File scope for declaration resolution\");\n\n        fileScope.changeLockLevel(WritableScope.LockLevel.BOTH);\n\n        NamespaceDescriptor rootPackageDescriptor = resolveSession.getPackageDescriptorByFqName(FqName.ROOT);\n        if (rootPackageDescriptor == null) {\n            throw new IllegalStateException(\"Root package not found\");\n        }\n\n        // Don't import twice\n        if (!packageDescriptor.getQualifiedName().equals(FqName.ROOT)) {\n            fileScope.importScope(rootPackageDescriptor.getMemberScope());\n        }\n\n        ImportsResolver.processImportsInFile(true, fileScope, Lists.newArrayList(file.getImportDirectives()),\n                                             rootPackageDescriptor.getMemberScope(),\n                                             resolveSession.getModuleConfiguration(), resolveSession.getTrace(),\n                                             resolveSession.getInjector().getQualifiedExpressionResolver());\n\n        fileScope.changeLockLevel(WritableScope.LockLevel.READING);\n\n        // TODO: Cache\n        return new ChainedScope(packageDescriptor, packageDescriptor.getMemberScope(), fileScope);\n    }","commit_id":"79ffea63a6aa972ad7e0984df1e63ed722359860","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void select(final List<T> changes) {\n    final DefaultTreeModel treeModel = (DefaultTreeModel) myTree.getModel();\n    final TreeNode root = (TreeNode) treeModel.getRoot();\n    final List<TreePath> treeSelection = new ArrayList<TreePath>(changes.size());\n    TreeUtil.traverse(root, new TreeUtil.Traverse() {\n      public boolean accept(Object node) {\n        final T change = (T) ((DefaultMutableTreeNode) node).getUserObject();\n        if (changes.contains(change)) {\n          treeSelection.add(new TreePath(((DefaultMutableTreeNode) node).getPath()));\n        }\n        return true;\n      }\n    });\n    myTree.setSelectionPaths(treeSelection.toArray(new TreePath[treeSelection.size()]));\n\n    // list\n    final ListModel model = myList.getModel();\n    final int size = model.getSize();\n    final List<Integer> listSelection = new ArrayList<Integer>(changes.size());\n    for (int i = 0; i < size; i++) {\n      final T el = (T) model.getElementAt(i);\n      if (changes.contains(el)) {\n        listSelection.add(i);\n      }\n    }\n    myList.setSelectedIndices(int2int(listSelection));\n  }","id":48298,"modified_method":"public void select(final List<T> changes) {\n    final DefaultTreeModel treeModel = (DefaultTreeModel) myTree.getModel();\n    final TreeNode root = (TreeNode) treeModel.getRoot();\n    final List<TreePath> treeSelection = new ArrayList<TreePath>(changes.size());\n    TreeUtil.traverse(root, new TreeUtil.Traverse() {\n      @Override\n      public boolean accept(Object node) {\n        @SuppressWarnings(\"unchecked\")\n        final T change = (T) ((DefaultMutableTreeNode) node).getUserObject();\n        if (changes.contains(change)) {\n          treeSelection.add(new TreePath(((DefaultMutableTreeNode) node).getPath()));\n        }\n        return true;\n      }\n    });\n    myTree.setSelectionPaths(treeSelection.toArray(new TreePath[treeSelection.size()]));\n\n    // list\n    final ListModel model = myList.getModel();\n    final int size = model.getSize();\n    final List<Integer> listSelection = new ArrayList<Integer>(changes.size());\n    for (int i = 0; i < size; i++) {\n      @SuppressWarnings(\"unchecked\")\n      final T el = (T) model.getElementAt(i);\n      if (changes.contains(el)) {\n        listSelection.add(i);\n      }\n    }\n    myList.setSelectedIndices(int2int(listSelection));\n  }","commit_id":"60b90f993ce40e50ac341c5c5b4c18e070b628e8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public List<T> getChanges() {\n    if (myShowFlatten) {\n      ListModel m = myList.getModel();\n      int size = m.getSize();\n      List result = new ArrayList(size);\n      for (int i = 0; i < size; i++) {\n        result.add(m.getElementAt(i));\n      }\n      return result;\n    }\n    else {\n      final LinkedHashSet result = new LinkedHashSet();\n      TreeUtil.traverseDepth((ChangesBrowserNode)myTree.getModel().getRoot(), new TreeUtil.Traverse() {\n        public boolean accept(Object node) {\n          ChangesBrowserNode changeNode = (ChangesBrowserNode)node;\n          if (changeNode.isLeaf()) result.addAll(changeNode.getAllChangesUnder());\n          return true;\n        }\n      });\n      return new ArrayList<T>(result);\n    }\n  }","id":48299,"modified_method":"public List<T> getChanges() {\n    if (myShowFlatten) {\n      ListModel m = myList.getModel();\n      int size = m.getSize();\n      List<T> result = new ArrayList<T>(size);\n      for (int i = 0; i < size; i++) {\n        //noinspection unchecked\n        result.add((T)m.getElementAt(i));\n      }\n      return result;\n    }\n    else {\n      final LinkedHashSet<T> result = new LinkedHashSet<T>();\n      TreeUtil.traverseDepth((ChangesBrowserNode)myTree.getModel().getRoot(), new TreeUtil.Traverse() {\n        @Override\n        public boolean accept(Object node) {\n          ChangesBrowserNode changeNode = (ChangesBrowserNode)node;\n          if (changeNode.isLeaf()) {\n            //noinspection unchecked\n            result.addAll(changeNode.getAllChangesUnder());\n          }\n          return true;\n        }\n      });\n      return new ArrayList<T>(result);\n    }\n  }","commit_id":"60b90f993ce40e50ac341c5c5b4c18e070b628e8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setShowFlatten(final boolean showFlatten) {\n    final List<T> wasSelected = getSelectedChanges();\n    myShowFlatten = showFlatten;\n    myCards.show(this, myShowFlatten ? LIST_CARD : TREE_CARD);\n    select(wasSelected);\n    if (myList.hasFocus() || myTree.hasFocus()) {\n      SwingUtilities.invokeLater(new Runnable() {\n        public void run() {\n          requestFocus();\n        }\n      });\n    }\n  }","id":48300,"modified_method":"public void setShowFlatten(final boolean showFlatten) {\n    final List<T> wasSelected = getSelectedChanges();\n    myShowFlatten = showFlatten;\n    myCards.show(this, myShowFlatten ? LIST_CARD : TREE_CARD);\n    select(wasSelected);\n    if (myList.hasFocus() || myTree.hasFocus()) {\n      SwingUtilities.invokeLater(new Runnable() {\n        @Override\n        public void run() {\n          requestFocus();\n        }\n      });\n    }\n  }","commit_id":"60b90f993ce40e50ac341c5c5b4c18e070b628e8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MyTree(Project project, int checkboxWidth) {\n      super(ChangesBrowserNode.create(ChangesTreeList.this.myProject, ChangesTreeList.ROOT));\n      myProject = project;\n      myCheckboxWidth = checkboxWidth;\n    }","id":48301,"modified_method":"public MyTree(Project project, int checkboxWidth) {\n      super(ChangesBrowserNode.create(ChangesTreeList.this.myProject, ROOT));\n      myProject = project;\n      myCheckboxWidth = checkboxWidth;\n    }","commit_id":"60b90f993ce40e50ac341c5c5b4c18e070b628e8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Component getTreeCellRendererComponent(JTree tree,\n                                                  Object value,\n                                                  boolean selected,\n                                                  boolean expanded,\n                                                  boolean leaf,\n                                                  int row,\n                                                  boolean hasFocus) {\n\n      if (UIUtil.isUnderGTKLookAndFeel() || UIUtil.isUnderNimbusLookAndFeel()) {\n        NonOpaquePanel.setTransparent(this);\n        NonOpaquePanel.setTransparent(myCheckBox);\n      } else {\n        setBackground(null);\n        myCheckBox.setBackground(null);\n        myCheckBox.setOpaque(false);\n      }\n\n      myTextRenderer.setOpaque(false);\n      myTextRenderer.setTransparentIconBackground(true);\n      myTextRenderer.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);\n      if (myShowCheckboxes) {\n        ChangesBrowserNode node = (ChangesBrowserNode)value;\n\n        CheckboxTree.NodeState state = getNodeStatus(node);\n        myCheckBox.setSelected(state != CheckboxTree.NodeState.CLEAR);\n        myCheckBox.setEnabled(state != CheckboxTree.NodeState.PARTIAL);\n        revalidate();\n\n        return this;\n      }\n      else {\n        return myTextRenderer;\n      }\n    }","id":48302,"modified_method":"@Override\n    public Component getTreeCellRendererComponent(JTree tree,\n                                                  Object value,\n                                                  boolean selected,\n                                                  boolean expanded,\n                                                  boolean leaf,\n                                                  int row,\n                                                  boolean hasFocus) {\n\n      if (UIUtil.isUnderGTKLookAndFeel() || UIUtil.isUnderNimbusLookAndFeel()) {\n        NonOpaquePanel.setTransparent(this);\n        NonOpaquePanel.setTransparent(myCheckBox);\n      } else {\n        setBackground(null);\n        myCheckBox.setBackground(null);\n        myCheckBox.setOpaque(false);\n      }\n\n      myTextRenderer.setOpaque(false);\n      myTextRenderer.setTransparentIconBackground(true);\n      myTextRenderer.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);\n      if (myShowCheckboxes) {\n        @SuppressWarnings(\"unchecked\")\n        CheckboxTree.NodeState state = getNodeStatus((ChangesBrowserNode)value);\n        myCheckBox.setSelected(state != CheckboxTree.NodeState.CLEAR);\n        myCheckBox.setEnabled(state != CheckboxTree.NodeState.PARTIAL);\n        revalidate();\n\n        return this;\n      }\n      else {\n        return myTextRenderer;\n      }\n    }","commit_id":"60b90f993ce40e50ac341c5c5b4c18e070b628e8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public AnAction[] getTreeActions() {\n    final ToggleShowDirectoriesAction directoriesAction = new ToggleShowDirectoriesAction();\n    final ExpandAllAction expandAllAction = new ExpandAllAction(myTree) {\n      public void update(AnActionEvent e) {\n        e.getPresentation().setVisible(!myShowFlatten);\n      }\n    };\n    final CollapseAllAction collapseAllAction = new CollapseAllAction(myTree) {\n      public void update(AnActionEvent e) {\n        e.getPresentation().setVisible(!myShowFlatten);\n      }\n    };\n    final AnAction[] actions = new AnAction[]{directoriesAction, expandAllAction, collapseAllAction};\n    directoriesAction.registerCustomShortcutSet(\n      new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_P, SystemInfo.isMac ? KeyEvent.META_DOWN_MASK : KeyEvent.CTRL_DOWN_MASK)),\n      this);\n    expandAllAction.registerCustomShortcutSet(\n      new CustomShortcutSet(KeymapManager.getInstance().getActiveKeymap().getShortcuts(IdeActions.ACTION_EXPAND_ALL)),\n      myTree);\n    collapseAllAction.registerCustomShortcutSet(\n      new CustomShortcutSet(KeymapManager.getInstance().getActiveKeymap().getShortcuts(IdeActions.ACTION_COLLAPSE_ALL)),\n      myTree);\n    return actions;\n  }","id":48303,"modified_method":"public AnAction[] getTreeActions() {\n    final ToggleShowDirectoriesAction directoriesAction = new ToggleShowDirectoriesAction();\n    final ExpandAllAction expandAllAction = new ExpandAllAction(myTree) {\n      @Override\n      public void update(AnActionEvent e) {\n        e.getPresentation().setVisible(!myShowFlatten);\n      }\n    };\n    final CollapseAllAction collapseAllAction = new CollapseAllAction(myTree) {\n      @Override\n      public void update(AnActionEvent e) {\n        e.getPresentation().setVisible(!myShowFlatten);\n      }\n    };\n    final AnAction[] actions = new AnAction[]{directoriesAction, expandAllAction, collapseAllAction};\n    directoriesAction.registerCustomShortcutSet(\n      new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_P, SystemInfo.isMac ? InputEvent.META_DOWN_MASK : InputEvent.CTRL_DOWN_MASK)),\n      this);\n    expandAllAction.registerCustomShortcutSet(\n      new CustomShortcutSet(KeymapManager.getInstance().getActiveKeymap().getShortcuts(IdeActions.ACTION_EXPAND_ALL)),\n      myTree);\n    collapseAllAction.registerCustomShortcutSet(\n      new CustomShortcutSet(KeymapManager.getInstance().getActiveKeymap().getShortcuts(IdeActions.ACTION_COLLAPSE_ALL)),\n      myTree);\n    return actions;\n  }","commit_id":"60b90f993ce40e50ac341c5c5b4c18e070b628e8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public T getHighestLeadSelection() {\n    if (myShowFlatten) {\n      final int index = myList.getLeadSelectionIndex();\n      ListModel listModel = myList.getModel();\n      if (index < 0 || index >= listModel.getSize()) return null;\n      //noinspection unchecked\n      return (T)listModel.getElementAt(index);\n    }\n    else {\n      final TreePath path = myTree.getSelectionPath();\n      if (path == null) return null;\n      return getLeadSelectedObject((ChangesBrowserNode<T>)path.getLastPathComponent());\n    }\n  }","id":48304,"modified_method":"@Nullable\n  public T getHighestLeadSelection() {\n    if (myShowFlatten) {\n      final int index = myList.getLeadSelectionIndex();\n      ListModel listModel = myList.getModel();\n      if (index < 0 || index >= listModel.getSize()) return null;\n      //noinspection unchecked\n      return (T)listModel.getElementAt(index);\n    }\n    else {\n      final TreePath path = myTree.getSelectionPath();\n      if (path == null) {\n        return null;\n      }\n      //noinspection unchecked\n      return getLeadSelectedObject((ChangesBrowserNode<T>)path.getLastPathComponent());\n    }\n  }","commit_id":"60b90f993ce40e50ac341c5c5b4c18e070b628e8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setChangesToDisplay(final List<T> changes, @Nullable final VirtualFile toSelect) {\n    final boolean wasEmpty = myList.isEmpty();\n    final List<T> sortedChanges = new ArrayList<T>(changes);\n    Collections.sort(sortedChanges, new Comparator<T>() {\n      public int compare(final T o1, final T o2) {\n        return TreeModelBuilder.getPathForObject(o1).getName().compareToIgnoreCase(TreeModelBuilder.getPathForObject(o2).getName());\n      }\n    });\n\n    final Set<Object> wasSelected = new HashSet<Object>(Arrays.asList(myList.getSelectedValues()));\n    myList.setModel(new AbstractListModel() {\n      @Override\n      public int getSize() {\n        return sortedChanges.size();\n      }\n\n      @Override\n      public Object getElementAt(int index) {\n        return sortedChanges.get(index);\n      }\n    });\n\n    final DefaultTreeModel model = buildTreeModel(changes, myChangeDecorator);\n    TreeState state = null;\n    if (! myAlwaysExpandList && ! wasEmpty) {\n      state = TreeState.createOn(myTree, (DefaultMutableTreeNode) myTree.getModel().getRoot());\n    }\n    myTree.setModel(model);\n    if (! myAlwaysExpandList && ! wasEmpty) {\n      state.applyTo(myTree, (DefaultMutableTreeNode) myTree.getModel().getRoot());\n\n      final TIntArrayList indices = new TIntArrayList();\n      for (int i = 0; i < sortedChanges.size(); i++) {\n        T t = sortedChanges.get(i);\n        if (wasSelected.contains(t)) {\n          indices.add(i);\n        }\n      }\n      myList.setSelectedIndices(indices.toNativeArray());\n      return;\n    }\n\n    final Runnable runnable = new Runnable() {\n      public void run() {\n        if (myProject.isDisposed()) return;\n        TreeUtil.expandAll(myTree);\n\n        int listSelection = 0;\n        int scrollRow = 0;\n\n        if (myShowCheckboxes) {\n          if (myIncludedChanges.size() > 0) {\n            for (int i = 0; i < sortedChanges.size(); i++) {\n              T t = sortedChanges.get(i);\n              if (myIncludedChanges.contains(t)) {\n                listSelection = i;\n                break;\n              }\n            }\n\n            ChangesBrowserNode root = (ChangesBrowserNode)model.getRoot();\n            Enumeration enumeration = root.depthFirstEnumeration();\n\n            while (enumeration.hasMoreElements()) {\n              ChangesBrowserNode node = (ChangesBrowserNode)enumeration.nextElement();\n              final CheckboxTree.NodeState state = getNodeStatus(node);\n              if (node != root && state == CheckboxTree.NodeState.CLEAR) {\n                myTree.collapsePath(new TreePath(node.getPath()));\n              }\n            }\n\n            enumeration = root.depthFirstEnumeration();\n            while (enumeration.hasMoreElements()) {\n              ChangesBrowserNode node = (ChangesBrowserNode)enumeration.nextElement();\n              final CheckboxTree.NodeState state = getNodeStatus(node);\n              if (state == CheckboxTree.NodeState.FULL && node.isLeaf()) {\n                scrollRow = myTree.getRowForPath(new TreePath(node.getPath()));\n                break;\n              }\n            }\n          }\n        } else {\n          if (toSelect != null) {\n            ChangesBrowserNode root = (ChangesBrowserNode)model.getRoot();\n            final int[] rowToSelect = new int[] {-1}; \n            TreeUtil.traverse(root, new TreeUtil.Traverse() {\n              @Override\n              public boolean accept(Object node) {\n                if (node instanceof DefaultMutableTreeNode) {\n                  Object userObject = ((DefaultMutableTreeNode)node).getUserObject();\n                  if (userObject instanceof Change) {\n                    Change change = (Change)userObject;\n                    VirtualFile virtualFile = change.getVirtualFile();\n                    if ((virtualFile != null && virtualFile.equals(toSelect)) || seemsToBeMoved(change, toSelect)) {\n                      TreeNode[] path = ((DefaultMutableTreeNode)node).getPath();\n                      rowToSelect[0] = myTree.getRowForPath(new TreePath(path));\n                    }\n                  }\n                }\n\n                return rowToSelect[0] == -1;\n              }\n            });\n            \n            scrollRow = rowToSelect[0] == -1 ? scrollRow : rowToSelect[0];\n          }\n        }\n        \n        if (changes.size() > 0) {\n          myList.setSelectedIndex(listSelection);\n          myList.ensureIndexIsVisible(listSelection);\n\n          myTree.setSelectionRow(scrollRow);\n          TreeUtil.showRowCentered(myTree, scrollRow, false);\n        }\n      }\n    };\n    if (ApplicationManager.getApplication().isDispatchThread()) {\n      runnable.run();\n    } else {\n      SwingUtilities.invokeLater(runnable);\n    }\n  }","id":48305,"modified_method":"public void setChangesToDisplay(final List<T> changes, @Nullable final VirtualFile toSelect) {\n    final boolean wasEmpty = myList.isEmpty();\n    final List<T> sortedChanges = new ArrayList<T>(changes);\n    Collections.sort(sortedChanges, new Comparator<T>() {\n      @Override\n      public int compare(final T o1, final T o2) {\n        return TreeModelBuilder.getPathForObject(o1).getName().compareToIgnoreCase(TreeModelBuilder.getPathForObject(o2).getName());\n      }\n    });\n\n    @SuppressWarnings(\"deprecation\")\n    final Set<Object> wasSelected = new THashSet<Object>(Arrays.asList(myList.getSelectedValues()));\n    //noinspection unchecked\n    myList.setModel(new AbstractListModel() {\n      @Override\n      public int getSize() {\n        return sortedChanges.size();\n      }\n\n      @Override\n      public Object getElementAt(int index) {\n        return sortedChanges.get(index);\n      }\n    });\n\n    final DefaultTreeModel model = buildTreeModel(changes, myChangeDecorator);\n    TreeState state = null;\n    if (! myAlwaysExpandList && ! wasEmpty) {\n      state = TreeState.createOn(myTree, (DefaultMutableTreeNode) myTree.getModel().getRoot());\n    }\n    myTree.setModel(model);\n    if (! myAlwaysExpandList && ! wasEmpty) {\n      //noinspection ConstantConditions\n      state.applyTo(myTree, (DefaultMutableTreeNode) myTree.getModel().getRoot());\n\n      final TIntArrayList indices = new TIntArrayList();\n      for (int i = 0; i < sortedChanges.size(); i++) {\n        T t = sortedChanges.get(i);\n        if (wasSelected.contains(t)) {\n          indices.add(i);\n        }\n      }\n      myList.setSelectedIndices(indices.toNativeArray());\n      return;\n    }\n\n    final Runnable runnable = new Runnable() {\n      @Override\n      public void run() {\n        if (myProject.isDisposed()) return;\n        TreeUtil.expandAll(myTree);\n\n        int listSelection = 0;\n        int scrollRow = 0;\n\n        if (myShowCheckboxes) {\n          if (myIncludedChanges.size() > 0) {\n            for (int i = 0; i < sortedChanges.size(); i++) {\n              T t = sortedChanges.get(i);\n              if (myIncludedChanges.contains(t)) {\n                listSelection = i;\n                break;\n              }\n            }\n\n            ChangesBrowserNode root = (ChangesBrowserNode)model.getRoot();\n            Enumeration enumeration = root.depthFirstEnumeration();\n\n            while (enumeration.hasMoreElements()) {\n              ChangesBrowserNode node = (ChangesBrowserNode)enumeration.nextElement();\n              @SuppressWarnings(\"unchecked\")\n              final CheckboxTree.NodeState state = getNodeStatus(node);\n              if (node != root && state == CheckboxTree.NodeState.CLEAR) {\n                myTree.collapsePath(new TreePath(node.getPath()));\n              }\n            }\n\n            enumeration = root.depthFirstEnumeration();\n            while (enumeration.hasMoreElements()) {\n              ChangesBrowserNode node = (ChangesBrowserNode)enumeration.nextElement();\n              @SuppressWarnings(\"unchecked\")\n              final CheckboxTree.NodeState state = getNodeStatus(node);\n              if (state == CheckboxTree.NodeState.FULL && node.isLeaf()) {\n                scrollRow = myTree.getRowForPath(new TreePath(node.getPath()));\n                break;\n              }\n            }\n          }\n        } else {\n          if (toSelect != null) {\n            ChangesBrowserNode root = (ChangesBrowserNode)model.getRoot();\n            final int[] rowToSelect = new int[] {-1}; \n            TreeUtil.traverse(root, new TreeUtil.Traverse() {\n              @Override\n              public boolean accept(Object node) {\n                if (node instanceof DefaultMutableTreeNode) {\n                  Object userObject = ((DefaultMutableTreeNode)node).getUserObject();\n                  if (userObject instanceof Change) {\n                    Change change = (Change)userObject;\n                    VirtualFile virtualFile = change.getVirtualFile();\n                    if ((virtualFile != null && virtualFile.equals(toSelect)) || seemsToBeMoved(change, toSelect)) {\n                      TreeNode[] path = ((DefaultMutableTreeNode)node).getPath();\n                      rowToSelect[0] = myTree.getRowForPath(new TreePath(path));\n                    }\n                  }\n                }\n\n                return rowToSelect[0] == -1;\n              }\n            });\n            \n            scrollRow = rowToSelect[0] == -1 ? scrollRow : rowToSelect[0];\n          }\n        }\n        \n        if (changes.size() > 0) {\n          myList.setSelectedIndex(listSelection);\n          myList.ensureIndexIsVisible(listSelection);\n\n          myTree.setSelectionRow(scrollRow);\n          TreeUtil.showRowCentered(myTree, scrollRow, false);\n        }\n      }\n    };\n    if (ApplicationManager.getApplication().isDispatchThread()) {\n      runnable.run();\n    } else {\n      SwingUtilities.invokeLater(runnable);\n    }\n  }","commit_id":"60b90f993ce40e50ac341c5c5b4c18e070b628e8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public List<T> getSelectedChanges() {\n    if (myShowFlatten) {\n      final Object[] o = myList.getSelectedValues();\n      final List<T> changes = new ArrayList<T>();\n      for (Object anO : o) {\n        changes.add((T)anO);\n      }\n\n      return changes;\n    }\n    else {\n      final List<T> changes = new ArrayList<T>();\n      final Set<Integer> checkSet = new HashSet<Integer>();\n      final TreePath[] paths = myTree.getSelectionPaths();\n      if (paths != null) {\n        for (TreePath path : paths) {\n          final ChangesBrowserNode node = (ChangesBrowserNode)path.getLastPathComponent();\n          final List<T> objects = getSelectedObjects(node);\n          for (T object : objects) {\n            final int hash = object.hashCode();\n            if (! checkSet.contains(hash)) {\n              changes.add(object);\n              checkSet.add(hash);\n            } else {\n              if (! changes.contains(object)) {\n                changes.add(object);\n              }\n            }\n          }\n        }\n      }\n\n      return changes;\n    }\n  }","id":48306,"modified_method":"@NotNull\n  public List<T> getSelectedChanges() {\n    if (myShowFlatten) {\n      final List<T> changes = new ArrayList<T>();\n      //noinspection deprecation\n      for (Object anO : myList.getSelectedValues()) {\n        //noinspection unchecked\n        changes.add((T)anO);\n      }\n      return changes;\n    }\n    else {\n      final TreePath[] paths = myTree.getSelectionPaths();\n      if (paths == null) {\n        return Collections.emptyList();\n      }\n      else {\n        final List<T> changes = new ArrayList<T>();\n        final TIntHashSet checkSet = new TIntHashSet();\n        for (TreePath path : paths) {\n          //noinspection unchecked\n          for (T object : getSelectedObjects((ChangesBrowserNode)path.getLastPathComponent())) {\n            if (!checkSet.add(object.hashCode()) || !changes.contains(object)) {\n              changes.add(object);\n            }\n          }\n        }\n        return changes;\n      }\n    }\n  }","commit_id":"60b90f993ce40e50ac341c5c5b4c18e070b628e8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public T getLeadSelection() {\n    if (myShowFlatten) {\n      final int index = myList.getLeadSelectionIndex();\n      ListModel listModel = myList.getModel();\n      if (index < 0 || index >= listModel.getSize()) return null;\n      //noinspection unchecked\n      return (T)listModel.getElementAt(index);\n    }\n    else {\n      final TreePath path = myTree.getSelectionPath();\n      if (path == null) return null;\n      final List<T> changes = getSelectedObjects(((ChangesBrowserNode<T>)path.getLastPathComponent()));\n      return changes.size() > 0 ? changes.get(0) : null;\n    }\n  }","id":48307,"modified_method":"@Nullable\n  public T getLeadSelection() {\n    if (myShowFlatten) {\n      final int index = myList.getLeadSelectionIndex();\n      ListModel listModel = myList.getModel();\n      //noinspection unchecked\n      return index < 0 || index >= listModel.getSize() ? null : (T)listModel.getElementAt(index);\n    }\n    else {\n      final TreePath path = myTree.getSelectionPath();\n      //noinspection unchecked\n      return path == null ? null : ContainerUtil.getFirstItem(getSelectedObjects(((ChangesBrowserNode<T>)path.getLastPathComponent())));\n    }\n  }","commit_id":"60b90f993ce40e50ac341c5c5b4c18e070b628e8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ChangesTreeList(final Project project, Collection<T> initiallyIncluded, final boolean showCheckboxes,\n                         final boolean highlightProblems, @Nullable final Runnable inclusionListener, @Nullable final ChangeNodeDecorator decorator) {\n    myProject = project;\n    myShowCheckboxes = showCheckboxes;\n    myHighlightProblems = highlightProblems;\n    myInclusionListener = inclusionListener;\n    myChangeDecorator = decorator;\n    myIncludedChanges = new HashSet<T>(initiallyIncluded);\n    myAlwaysExpandList = true;\n\n    myCards = new CardLayout();\n\n    setLayout(myCards);\n\n    final int checkboxWidth = new JCheckBox().getPreferredSize().width;\n    myTree = new MyTree(project, checkboxWidth);\n    myTree.setHorizontalAutoScrollingEnabled(false);\n    myTree.setRootVisible(false);\n    myTree.setShowsRootHandles(true);\n    myTree.setOpaque(false);\n    myTree.setCellRenderer(new MyTreeCellRenderer());\n    new TreeSpeedSearch(myTree, new Convertor<TreePath, String>() {\n      public String convert(TreePath o) {\n        ChangesBrowserNode node = (ChangesBrowserNode) o.getLastPathComponent();\n        return node.getTextPresentation();\n      }\n    });\n\n    myList = new JBList(new DefaultListModel());\n    myList.setVisibleRowCount(10);\n\n    add(myListScrollPane = ScrollPaneFactory.createScrollPane(myList), LIST_CARD);\n    add(myTreeScrollPane = ScrollPaneFactory.createScrollPane(myTree), TREE_CARD);\n\n    new ListSpeedSearch(myList) {\n      protected String getElementText(Object element) {\n        if (element instanceof Change) {\n          return ChangesUtil.getFilePath((Change)element).getName();\n        }\n        return super.getElementText(element);\n      }\n    };\n\n    myList.setCellRenderer(new MyListCellRenderer());\n\n    new MyToggleSelectionAction().registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0)), this);\n    if (myShowCheckboxes) {\n      registerKeyboardAction(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n          includeSelection();\n        }\n\n      }, KeyStroke.getKeyStroke(KeyEvent.VK_INSERT, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);\n\n      registerKeyboardAction(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n          excludeSelection();\n        }\n      }, KeyStroke.getKeyStroke(KeyEvent.VK_DELETE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);\n    }\n\n    registerKeyboardAction(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        myDoubleClickHandler.run();\n      }\n    }, KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);\n\n    myTree.addKeyListener(new KeyAdapter() {\n      @Override\n      public void keyPressed(KeyEvent e) {\n        if (KeyEvent.VK_ENTER == e.getKeyCode() && e.getModifiers() == 0) {\n          if (myTree.getSelectionCount() <= 1) {\n            Object lastPathComponent = myTree.getLastSelectedPathComponent();\n            if (!(lastPathComponent instanceof DefaultMutableTreeNode)) {\n              return;\n            }\n            DefaultMutableTreeNode node = (DefaultMutableTreeNode)lastPathComponent;\n            if (!node.isLeaf()) {\n              return;\n            }\n          }\n          myDoubleClickHandler.run();\n          e.consume();\n        }\n      }\n    });\n\n    new ClickListener() {\n      @Override\n      public boolean onClick(MouseEvent e, int clickCount) {\n        final int idx = myList.locationToIndex(e.getPoint());\n        if (idx >= 0) {\n          final Rectangle baseRect = myList.getCellBounds(idx, idx);\n          baseRect.setSize(checkboxWidth, baseRect.height);\n          if (baseRect.contains(e.getPoint())) {\n            toggleSelection();\n            return true;\n          }\n          else if (clickCount == 2) {\n            myDoubleClickHandler.run();\n            return true;\n          }\n        }\n        return false;\n      }\n    }.installOn(myList);\n\n    new DoubleClickListener() {\n      @Override\n      protected boolean onDoubleClick(MouseEvent e) {\n        final TreePath clickPath = myTree.getUI() instanceof WideSelectionTreeUI\n                                   ? myTree.getClosestPathForLocation(e.getX(), e.getY())\n                                   : myTree.getPathForLocation(e.getX(), e.getY());\n        if (clickPath == null) return false;\n\n        myDoubleClickHandler.run();\n        return true;\n      }\n    }.installOn(myTree);\n\n    setShowFlatten(PropertiesComponent.getInstance(myProject).isTrueValue(FLATTEN_OPTION_KEY));\n\n    String emptyText = StringUtil.capitalize(DiffBundle.message(\"diff.count.differences.status.text\", 0));\n    setEmptyText(emptyText);\n  }","id":48308,"modified_method":"public ChangesTreeList(final Project project, Collection<T> initiallyIncluded, final boolean showCheckboxes,\n                         final boolean highlightProblems, @Nullable final Runnable inclusionListener, @Nullable final ChangeNodeDecorator decorator) {\n    myProject = project;\n    myShowCheckboxes = showCheckboxes;\n    myHighlightProblems = highlightProblems;\n    myInclusionListener = inclusionListener;\n    myChangeDecorator = decorator;\n    myIncludedChanges = new HashSet<T>(initiallyIncluded);\n    myAlwaysExpandList = true;\n\n    myCards = new CardLayout();\n\n    setLayout(myCards);\n\n    final int checkboxWidth = new JCheckBox().getPreferredSize().width;\n    myTree = new MyTree(project, checkboxWidth);\n    myTree.setHorizontalAutoScrollingEnabled(false);\n    myTree.setRootVisible(false);\n    myTree.setShowsRootHandles(true);\n    myTree.setOpaque(false);\n    myTree.setCellRenderer(new MyTreeCellRenderer());\n    new TreeSpeedSearch(myTree, new Convertor<TreePath, String>() {\n      @Override\n      public String convert(TreePath o) {\n        ChangesBrowserNode node = (ChangesBrowserNode) o.getLastPathComponent();\n        return node.getTextPresentation();\n      }\n    });\n\n    myList = new JBList(new DefaultListModel());\n    myList.setVisibleRowCount(10);\n\n    add(myListScrollPane = ScrollPaneFactory.createScrollPane(myList), LIST_CARD);\n    add(myTreeScrollPane = ScrollPaneFactory.createScrollPane(myTree), TREE_CARD);\n\n    new ListSpeedSearch(myList) {\n      @Override\n      protected String getElementText(Object element) {\n        if (element instanceof Change) {\n          return ChangesUtil.getFilePath((Change)element).getName();\n        }\n        return super.getElementText(element);\n      }\n    };\n\n    myList.setCellRenderer(new MyListCellRenderer());\n\n    new MyToggleSelectionAction().registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0)), this);\n    if (myShowCheckboxes) {\n      registerKeyboardAction(new ActionListener() {\n        @Override\n        public void actionPerformed(ActionEvent e) {\n          includeSelection();\n        }\n\n      }, KeyStroke.getKeyStroke(KeyEvent.VK_INSERT, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);\n\n      registerKeyboardAction(new ActionListener() {\n        @Override\n        public void actionPerformed(ActionEvent e) {\n          excludeSelection();\n        }\n      }, KeyStroke.getKeyStroke(KeyEvent.VK_DELETE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);\n    }\n\n    registerKeyboardAction(new ActionListener() {\n      @Override\n      public void actionPerformed(ActionEvent e) {\n        myDoubleClickHandler.run();\n      }\n    }, KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);\n\n    myTree.addKeyListener(new KeyAdapter() {\n      @Override\n      public void keyPressed(KeyEvent e) {\n        if (KeyEvent.VK_ENTER == e.getKeyCode() && e.getModifiers() == 0) {\n          if (myTree.getSelectionCount() <= 1) {\n            Object lastPathComponent = myTree.getLastSelectedPathComponent();\n            if (!(lastPathComponent instanceof DefaultMutableTreeNode)) {\n              return;\n            }\n            DefaultMutableTreeNode node = (DefaultMutableTreeNode)lastPathComponent;\n            if (!node.isLeaf()) {\n              return;\n            }\n          }\n          myDoubleClickHandler.run();\n          e.consume();\n        }\n      }\n    });\n\n    new ClickListener() {\n      @Override\n      public boolean onClick(MouseEvent e, int clickCount) {\n        final int idx = myList.locationToIndex(e.getPoint());\n        if (idx >= 0) {\n          final Rectangle baseRect = myList.getCellBounds(idx, idx);\n          baseRect.setSize(checkboxWidth, baseRect.height);\n          if (baseRect.contains(e.getPoint())) {\n            toggleSelection();\n            return true;\n          }\n          else if (clickCount == 2) {\n            myDoubleClickHandler.run();\n            return true;\n          }\n        }\n        return false;\n      }\n    }.installOn(myList);\n\n    new DoubleClickListener() {\n      @Override\n      protected boolean onDoubleClick(MouseEvent e) {\n        final TreePath clickPath = myTree.getUI() instanceof WideSelectionTreeUI\n                                   ? myTree.getClosestPathForLocation(e.getX(), e.getY())\n                                   : myTree.getPathForLocation(e.getX(), e.getY());\n        if (clickPath == null) return false;\n\n        myDoubleClickHandler.run();\n        return true;\n      }\n    }.installOn(myTree);\n\n    setShowFlatten(PropertiesComponent.getInstance(myProject).isTrueValue(FLATTEN_OPTION_KEY));\n\n    String emptyText = StringUtil.capitalize(DiffBundle.message(\"diff.count.differences.status.text\", 0));\n    setEmptyText(emptyText);\n  }","commit_id":"60b90f993ce40e50ac341c5c5b4c18e070b628e8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\n      myTextRenderer.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\n      if (myShowCheckboxes) {\n        myCheckbox.setSelected(myIncludedChanges.contains(value));\n        return this;\n      }\n      else {\n        return myTextRenderer;\n      }\n    }","id":48309,"modified_method":"@Override\n    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\n      myTextRenderer.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\n      if (myShowCheckboxes) {\n        //noinspection SuspiciousMethodCalls\n        myCheckbox.setSelected(myIncludedChanges.contains(value));\n        return this;\n      }\n      else {\n        return myTextRenderer;\n      }\n    }","commit_id":"60b90f993ce40e50ac341c5c5b4c18e070b628e8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public VcsSelectionHistoryDialog(@NotNull Project project,\n                                   @NotNull VirtualFile file,\n                                   @NotNull Editor editor,\n                                   @NotNull VcsHistoryProvider vcsHistoryProvider,\n                                   @NotNull VcsHistorySession session,\n                                   @NotNull AbstractVcs vcs,\n                                   int selectionStart,\n                                   int selectionEnd,\n                                   @NotNull String title,\n                                   @NotNull CachedRevisionsContents cachedContents) {\n    super(project);\n    myProject = project;\n    myFile = file;\n    myEditor = editor;\n    myActiveVcs = vcs;\n    myCachedContents = cachedContents;\n    mySelectionStart = selectionStart;\n    mySelectionEnd = selectionEnd;\n    myHelpId = notNull(vcsHistoryProvider.getHelpId(), \"reference.dialogs.vcs.selection.history\");\n\n    myComments = new JEditorPane(UIUtil.HTML_MIME, \"\");\n    myComments.setPreferredSize(new Dimension(150, 100));\n    myComments.setEditable(false);\n    myComments.addHyperlinkListener(BrowserHyperlinkListener.INSTANCE);\n\n    JRootPane rootPane = ((RootPaneContainer)getFrame()).getRootPane();\n    final VcsDependentHistoryComponents components = vcsHistoryProvider.getUICustomization(session, rootPane);\n\n    ColumnInfo[] defaultColumns = new ColumnInfo[]{\n      new FileHistoryPanelImpl.RevisionColumnInfo(null),\n      new FileHistoryPanelImpl.DateColumnInfo(),\n      new FileHistoryPanelImpl.AuthorColumnInfo(),\n      new FileHistoryPanelImpl.MessageColumnInfo(project)};\n    ColumnInfo[] additionalColumns = notNull(components.getColumns(), ColumnInfo.EMPTY_ARRAY);\n    myListModel = new ListTableModel<VcsFileRevision>(ArrayUtil.mergeArrays(defaultColumns, additionalColumns));\n    myListModel.setSortable(false);\n    myList = new TableView<VcsFileRevision>(myListModel);\n    new TableLinkMouseListener().installOn(myList);\n\n    myList.getEmptyText().setText(VcsBundle.message(\"history.empty\"));\n\n    myDiffPanel = DiffManager.getInstance().createRequestPanel(myProject, this, getFrame());\n\n    myRevisions.add(new CurrentRevision(file, LOCAL_REVISION_NUMBER));\n    myRevisions.addAll(session.getRevisionList());\n\n    myBlocks.addAll(Collections.<Block>nCopies(myRevisions.size(), null));\n\n    mySplitter = new JBSplitter(true, DIFF_SPLITTER_PROPORTION_KEY, DIFF_SPLITTER_PROPORTION);\n\n    mySplitter.setFirstComponent(myDiffPanel.getComponent());\n    mySplitter.setSecondComponent(createBottomPanel(components.getDetailsComponent()));\n\n    final ListSelectionListener selectionListener = new ListSelectionListener() {\n      @Override\n      public void valueChanged(ListSelectionEvent e) {\n        final VcsFileRevision revision;\n        if (myList.getSelectedRowCount() == 1 && !myList.isEmpty()) {\n          revision = myList.getItems().get(myList.getSelectedRow());\n          String message = IssueLinkHtmlRenderer.formatTextIntoHtml(myProject, revision.getCommitMessage());\n          myComments.setText(message);\n          myComments.setCaretPosition(0);\n        }\n        else {\n          revision = null;\n          myComments.setText(\"\");\n        }\n        if (components.getRevisionListener() != null) {\n          components.getRevisionListener().consume(revision);\n        }\n        updateDiff();\n      }\n    };\n    myList.getSelectionModel().addListSelectionListener(selectionListener);\n\n    final VcsConfiguration configuration = VcsConfiguration.getInstance(myProject);\n    myChangesOnlyCheckBox.setSelected(configuration.SHOW_ONLY_CHANGED_IN_SELECTION_DIFF);\n    myChangesOnlyCheckBox.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(ActionEvent e) {\n        configuration.SHOW_ONLY_CHANGED_IN_SELECTION_DIFF = myChangesOnlyCheckBox.isSelected();\n        updateRevisionsList();\n      }\n    });\n\n    updateRevisionsList();\n    myList.getSelectionModel().setSelectionInterval(0, 0);\n\n    final DefaultActionGroup popupActions = new DefaultActionGroup();\n    popupActions.add(new MyDiffAction());\n    popupActions.add(new MyDiffLocalAction());\n    popupActions.add(ShowAllAffectedGenericAction.getInstance());\n    popupActions.add(ActionManager.getInstance().getAction(VcsActions.ACTION_COPY_REVISION_NUMBER));\n    PopupHandler.installPopupHandler(myList, popupActions, ActionPlaces.UPDATE_POPUP, ActionManager.getInstance());\n\n    setTitle(title);\n    setComponent(mySplitter);\n    setPreferredFocusedComponent(myList);\n    setDimensionKey(\"VCS.FileHistoryDialog\");\n    closeOnEsc();\n  }","id":48310,"modified_method":"public VcsSelectionHistoryDialog(@NotNull Project project,\n                                   @NotNull VirtualFile file,\n                                   @NotNull Editor editor,\n                                   @NotNull VcsHistoryProvider vcsHistoryProvider,\n                                   @NotNull VcsHistorySession session,\n                                   @NotNull AbstractVcs vcs,\n                                   int selectionStart,\n                                   int selectionEnd,\n                                   @NotNull String title,\n                                   @NotNull CachedRevisionsContents cachedContents) {\n    super(project);\n    myProject = project;\n    myFile = file;\n    myEditor = editor;\n    myActiveVcs = vcs;\n    myCachedContents = cachedContents;\n    mySelectionStart = selectionStart;\n    mySelectionEnd = selectionEnd;\n    myHelpId = notNull(vcsHistoryProvider.getHelpId(), \"reference.dialogs.vcs.selection.history\");\n\n    myComments = new JEditorPane(UIUtil.HTML_MIME, \"\");\n    myComments.setPreferredSize(new Dimension(150, 100));\n    myComments.setEditable(false);\n    myComments.addHyperlinkListener(BrowserHyperlinkListener.INSTANCE);\n\n    JRootPane rootPane = ((RootPaneContainer)getFrame()).getRootPane();\n    final VcsDependentHistoryComponents components = vcsHistoryProvider.getUICustomization(session, rootPane);\n\n    ColumnInfo[] defaultColumns = new ColumnInfo[]{\n      new FileHistoryPanelImpl.RevisionColumnInfo(null),\n      new FileHistoryPanelImpl.DateColumnInfo(),\n      new FileHistoryPanelImpl.AuthorColumnInfo(),\n      new FileHistoryPanelImpl.MessageColumnInfo(project)};\n    ColumnInfo[] additionalColumns = notNull(components.getColumns(), ColumnInfo.EMPTY_ARRAY);\n    myListModel = new ListTableModel<VcsFileRevision>(ArrayUtil.mergeArrays(defaultColumns, additionalColumns));\n    myListModel.setSortable(false);\n    myList = new TableView<VcsFileRevision>(myListModel);\n    new TableLinkMouseListener().installOn(myList);\n\n    myList.getEmptyText().setText(VcsBundle.message(\"history.empty\"));\n\n    myDiffPanel = DiffManager.getInstance().createRequestPanel(myProject, this, getFrame());\n\n    myCurrentRevision = new CurrentRevision(file, LOCAL_REVISION_NUMBER);\n    myRevisions.add(myCurrentRevision);\n    myRevisions.addAll(session.getRevisionList());\n\n    myBlocks.addAll(Collections.<Block>nCopies(myRevisions.size(), null));\n\n    mySplitter = new JBSplitter(true, DIFF_SPLITTER_PROPORTION_KEY, DIFF_SPLITTER_PROPORTION);\n\n    mySplitter.setFirstComponent(myDiffPanel.getComponent());\n    mySplitter.setSecondComponent(createBottomPanel(components.getDetailsComponent()));\n\n    final ListSelectionListener selectionListener = new ListSelectionListener() {\n      @Override\n      public void valueChanged(ListSelectionEvent e) {\n        final VcsFileRevision revision;\n        if (myList.getSelectedRowCount() == 1 && !myList.isEmpty()) {\n          revision = myList.getItems().get(myList.getSelectedRow());\n          String message = IssueLinkHtmlRenderer.formatTextIntoHtml(myProject, revision.getCommitMessage());\n          myComments.setText(message);\n          myComments.setCaretPosition(0);\n        }\n        else {\n          revision = null;\n          myComments.setText(\"\");\n        }\n        if (components.getRevisionListener() != null) {\n          components.getRevisionListener().consume(revision);\n        }\n        updateDiff();\n      }\n    };\n    myList.getSelectionModel().addListSelectionListener(selectionListener);\n\n    final VcsConfiguration configuration = VcsConfiguration.getInstance(myProject);\n    myChangesOnlyCheckBox.setSelected(configuration.SHOW_ONLY_CHANGED_IN_SELECTION_DIFF);\n    myChangesOnlyCheckBox.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(ActionEvent e) {\n        configuration.SHOW_ONLY_CHANGED_IN_SELECTION_DIFF = myChangesOnlyCheckBox.isSelected();\n        updateRevisionsList();\n      }\n    });\n\n    updateRevisionsList();\n    myList.getSelectionModel().setSelectionInterval(0, 0);\n\n    final DefaultActionGroup popupActions = new DefaultActionGroup();\n    popupActions.add(new MyDiffAction());\n    popupActions.add(new MyDiffLocalAction());\n    popupActions.add(ShowAllAffectedGenericAction.getInstance());\n    popupActions.add(ActionManager.getInstance().getAction(VcsActions.ACTION_COPY_REVISION_NUMBER));\n    PopupHandler.installPopupHandler(myList, popupActions, ActionPlaces.UPDATE_POPUP, ActionManager.getInstance());\n\n    setTitle(title);\n    setComponent(mySplitter);\n    setPreferredFocusedComponent(myList);\n    setDimensionKey(\"VCS.FileHistoryDialog\");\n    closeOnEsc();\n  }","commit_id":"4a3bbf2cd8771a3d44c7685f0abf64d8e2902f1e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void update(final AnActionEvent e) {\n      e.getPresentation().setEnabled(myList.getSelectedRowCount() > 1 ||\n                                     myList.getSelectedRowCount() == 1 && myList.getSelectedRow() != 0);\n    }","id":48311,"modified_method":"public void update(final AnActionEvent e) {\n      e.getPresentation().setEnabled(myList.getSelectedRowCount() > 1 ||\n                                     myList.getSelectedRowCount() == 1 && myList.getSelectedObject() != myCurrentRevision);\n    }","commit_id":"4a3bbf2cd8771a3d44c7685f0abf64d8e2902f1e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public Object getData(@NonNls String dataId) {\n    if (CommonDataKeys.PROJECT.is(dataId)) {\n      return myProject;\n    }\n    else if (VcsDataKeys.VCS_VIRTUAL_FILE.is(dataId)) {\n      return myFile;\n    }\n    else if (VcsDataKeys.VCS_FILE_REVISION.is(dataId)) {\n      VcsFileRevision selectedObject = myList.getSelectedObject();\n      return selectedObject instanceof CurrentRevision ? null : selectedObject;\n    }\n    else if (VcsDataKeys.VCS_REVISION_NUMBERS.is(dataId)) {\n      List<VcsFileRevision> objects = myList.getSelectedObjects();\n      List<VcsRevisionNumber> revisionNumbers = ContainerUtil.mapNotNull(objects, new Function<VcsFileRevision, VcsRevisionNumber>() {\n        @Override\n        public VcsRevisionNumber fun(VcsFileRevision revision) {\n          return revision instanceof CurrentRevision ? null : revision.getRevisionNumber();\n        }\n      });\n      return ArrayUtil.toObjectArray(revisionNumbers, VcsRevisionNumber.class);\n    }\n    else if (VcsDataKeys.VCS.is(dataId)) {\n      return myActiveVcs.getKeyInstanceMethod();\n    }\n    else if (PlatformDataKeys.HELP_ID.is(dataId)) {\n      return myHelpId;\n    }\n    return null;\n  }","id":48312,"modified_method":"@Override\n  public Object getData(@NonNls String dataId) {\n    if (CommonDataKeys.PROJECT.is(dataId)) {\n      return myProject;\n    }\n    else if (VcsDataKeys.VCS_VIRTUAL_FILE.is(dataId)) {\n      return myFile;\n    }\n    else if (VcsDataKeys.VCS_FILE_REVISION.is(dataId)) {\n      VcsFileRevision selectedObject = myList.getSelectedObject();\n      return selectedObject instanceof CurrentRevision ? null : selectedObject;\n    }\n    else if (VcsDataKeys.VCS_FILE_REVISIONS.is(dataId)) {\n      List<VcsFileRevision> revisions = ContainerUtil.filter(myList.getSelectedObjects(), Conditions.notEqualTo(myCurrentRevision));\n      return ArrayUtil.toObjectArray(revisions, VcsFileRevision.class);\n    }\n    else if (VcsDataKeys.VCS.is(dataId)) {\n      return myActiveVcs.getKeyInstanceMethod();\n    }\n    else if (PlatformDataKeys.HELP_ID.is(dataId)) {\n      return myHelpId;\n    }\n    return null;\n  }","commit_id":"4a3bbf2cd8771a3d44c7685f0abf64d8e2902f1e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void actionPerformed(AnActionEvent e) {\n      VcsFileRevision revision = myList.getSelectedObject();\n      if (revision == null) return;\n\n      VcsFileRevision localRevision = myRevisions.get(0);\n      FilePath filePath = VcsUtil.getFilePath(myFile);\n\n      getDiffHandler().showDiffForTwo(myProject, filePath, revision, localRevision);\n    }","id":48313,"modified_method":"public void actionPerformed(AnActionEvent e) {\n      VcsFileRevision revision = myList.getSelectedObject();\n      if (revision == null) return;\n\n      FilePath filePath = VcsUtil.getFilePath(myFile);\n\n      getDiffHandler().showDiffForTwo(myProject, filePath, revision, myCurrentRevision);\n    }","commit_id":"4a3bbf2cd8771a3d44c7685f0abf64d8e2902f1e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void update(final AnActionEvent e) {\n      e.getPresentation().setEnabled(myList.getSelectedRowCount() == 1 && myList.getSelectedRow() != 0);\n    }","id":48314,"modified_method":"public void update(final AnActionEvent e) {\n      e.getPresentation().setEnabled(myList.getSelectedRowCount() == 1 && myList.getSelectedObject() != myCurrentRevision);\n    }","commit_id":"4a3bbf2cd8771a3d44c7685f0abf64d8e2902f1e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n\t * Concrete subclasses can override this to provide custom lookup behaviour\n\t * for <code>CrossReference<\/code>. This implementation delegates to the\n\t * injected LinkingService\n\t * \n\t * @return a list of <code>ICompletionProposal<\/code> matching the given\n\t *         assignment\n\t */\n\tprotected List<? extends ICompletionProposal> lookupCrossReference(CrossReference crossReference, EObject model,\n\t\t\tint offset) {\n\t\t\n\t\tList<ICompletionProposal> completionProposalList = new ArrayList<ICompletionProposal>();\n\n\t\tif (linkingService != null && model instanceof AbstractNode) {\n\t\t\tEObject semanticModel = NodeUtil.getNearestSemanticObject((AbstractNode) model);\n\t\t\tList<Pair<String, URI>> candidates = linkingService.getLinkCandidates(semanticModel, crossReference, \"\");\n\t\t\tfor (Pair<String, URI> candidate : candidates) {\n\t\t\t\tcompletionProposalList.add(createCompletionProposal(candidate.getFirstElement(), offset));\n\t\t\t}\n\t\t}\n\n\t\treturn completionProposalList;\n\t}","id":48315,"modified_method":"/**\n\t * Concrete subclasses can override this to provide custom lookup behaviour\n\t * for <code>CrossReference<\/code>. This implementation delegates to the\n\t * injected LinkingService\n\t * \n\t * @return a list of <code>ICompletionProposal<\/code> matching the given\n\t *         assignment\n\t */\n\tprotected List<? extends ICompletionProposal> lookupCrossReference(CrossReference crossReference, EObject model,\n\t\t\tString prefix, int offset) {\n\t\t\n\t\tList<ICompletionProposal> completionProposalList = new ArrayList<ICompletionProposal>();\n\n\t\tif (linkingService != null) {\n\t\t\tEObject semanticModel = model instanceof AbstractNode?NodeUtil.getNearestSemanticObject((AbstractNode) model):model;\n\t\t\tList<Pair<String, URI>> candidates = linkingService.getLinkCandidates(semanticModel, crossReference, prefix);\n\t\t\tfor (Pair<String, URI> candidate : candidates) {\n\t\t\t\tcompletionProposalList.add(createCompletionProposal(candidate.getFirstElement(), offset));\n\t\t\t}\n\t\t}\n\n\t\treturn completionProposalList;\n\t}","commit_id":"c4047ef21c1d59299dae6e115b0c5e62ae908da5","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * computes the possible grammar elements following the one at the given\n\t * offset and calls the respective methods on the proposal provider.\n\t */\n\tpublic ICompletionProposal[] computeCompletionProposals(ITextViewer viewer, final int offset) {\n\t\tif (proposalProvider != null) {\n\t\t\tIDocument document = viewer.getDocument();\n\t\t\tif (document instanceof XtextDocument) {\n\n\t\t\t\tXtextDocument xtextDocument = (XtextDocument) document;\n\n\t\t\t\tCompositeNode rootNode = xtextDocument.readOnly(new UnitOfWork<CompositeNode>() {\n\t\t\t\t\tpublic CompositeNode exec(XtextResource resource) throws Exception {\n\t\t\t\t\t\tIParseResult parseResult = resource.getParseResult();\n\t\t\t\t\t\tAssert.isNotNull(parseResult);\n\t\t\t\t\t\treturn parseResult.getRootNode();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tAssert.isNotNull(rootNode);\n\n\t\t\t\t\n\t\t\t\t// last COMPLETE node element with associated grammar element\n\t\t\t\tAbstractNode lastCompleteNode = ParseTreeUtil.getLastCompleteNodeByOffset(rootNode, offset);\n\t\t\t\t// node at CURRENT cursor pos. with or without grammar element\n\t\t\t\tLeafNode currentLeafNode = (LeafNode) ParseTreeUtil.getCurrentNodeByOffset(rootNode, offset);\n\t\t\t\t// get associated grammar element\n\t\t\t\tAbstractElement grammarElement = ParseTreeUtil.getGrammarElementFromNode(lastCompleteNode);\n\n\t\t\t\tString prefix = viewer.getTextWidget().getCharCount()>0 ?\n\t\t\t\t\tviewer.getTextWidget().getText(currentLeafNode.getOffset(), offset<viewer.getTextWidget().getCharCount()?offset : \n\t\t\t\t\tviewer.getTextWidget().getCharCount()-1) : \"\";\n\n\t\t\t\tList<ICompletionProposal> completionProposalList = new ArrayList<ICompletionProposal>();\n\n\t\t\t\tSet<AbstractElement> calculatePossibleElementSet = calculatePossibleElementSet(lastCompleteNode,\n\t\t\t\t\t\tgrammarElement);\n\t\t\t\tfor (Iterator<AbstractElement> iterator = calculatePossibleElementSet.iterator(); iterator.hasNext();) {\n\t\t\t\t\tAbstractElement nextElement = iterator.next();\n\n\t\t\t\t\tList<EObject> resolvedElementOrRuleList = resolveElement(nextElement);\n\n\t\t\t\t\tcollectCompletionProposalList(resolvedElementOrRuleList, completionProposalList, xtextDocument,\n\t\t\t\t\t\t\tcurrentLeafNode, prefix, offset);\n\t\t\t\t}\n\n\t\t\t\tif (completionProposalList != null) {\n\t\t\t\t\tList<? extends ICompletionProposal> sortAndFilter = proposalProvider\n\t\t\t\t\t\t\t.sortAndFilter(completionProposalList);\n\t\t\t\t\treturn (ICompletionProposal[]) sortAndFilter.toArray(new ICompletionProposal[] {});\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}","id":48316,"modified_method":"/**\n\t * computes the possible grammar elements following the one at the given\n\t * offset and calls the respective methods on the proposal provider.\n\t */\n\tpublic ICompletionProposal[] computeCompletionProposals(ITextViewer viewer, final int offset) {\n\t\tif (proposalProvider != null) {\n\t\t\tIDocument document = viewer.getDocument();\n\t\t\tif (document instanceof XtextDocument) {\n\n\t\t\t\tXtextDocument xtextDocument = (XtextDocument) document;\n\n\t\t\t\tCompositeNode rootNode = xtextDocument.readOnly(new UnitOfWork<CompositeNode>() {\n\t\t\t\t\tpublic CompositeNode exec(XtextResource resource) throws Exception {\n\t\t\t\t\t\tIParseResult parseResult = resource.getParseResult();\n\t\t\t\t\t\tAssert.isNotNull(parseResult);\n\t\t\t\t\t\treturn parseResult.getRootNode();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tAssert.isNotNull(rootNode);\n\n\t\t\t\t// last COMPLETE node element with associated grammar element\n\t\t\t\tAbstractNode lastCompleteNode = ParseTreeUtil.getLastCompleteNodeByOffset(rootNode, offset);\n\t\t\t\t// node at CURRENT cursor pos. with or without grammar element\n\t\t\t\tLeafNode currentLeafNode = (LeafNode) ParseTreeUtil.getCurrentNodeByOffset(rootNode, offset);\n\t\t\t\t// get associated grammar element\n\t\t\t\tAbstractElement grammarElement = ParseTreeUtil.getGrammarElementFromNode(lastCompleteNode);\n\n\t\t\t\tString prefix = \"\";\n\t\t\t\tStyledText textWidget = viewer.getTextWidget();\n\t\t\t\tif (textWidget.getCharCount() > 0) {\n\t\t\t\t\tint boundedOffset = Math.min(offset, textWidget.getCharCount()) -1;\n\t\t\t\t\tif(currentLeafNode.getOffset() <= boundedOffset)\n\t\t\t\t\t\tprefix = textWidget.getText(currentLeafNode.getOffset(), boundedOffset);\n\t\t\t\t}\n\n\t\t\t\tList<ICompletionProposal> completionProposalList = new ArrayList<ICompletionProposal>();\n\n\t\t\t\tSet<AbstractElement> calculatePossibleElementSet = calculatePossibleElementSet(lastCompleteNode,\n\t\t\t\t\t\tgrammarElement);\n\t\t\t\tfor (Iterator<AbstractElement> iterator = calculatePossibleElementSet.iterator(); iterator.hasNext();) {\n\t\t\t\t\tAbstractElement nextElement = iterator.next();\n\n\t\t\t\t\tList<EObject> resolvedElementOrRuleList = resolveElement(nextElement);\n\n\t\t\t\t\tcollectCompletionProposalList(resolvedElementOrRuleList, completionProposalList, xtextDocument,\n\t\t\t\t\t\t\tcurrentLeafNode, prefix, offset);\n\t\t\t\t}\n\n\t\t\t\tif (completionProposalList != null) {\n\t\t\t\t\tList<? extends ICompletionProposal> sortAndFilter = proposalProvider\n\t\t\t\t\t\t\t.sortAndFilter(completionProposalList);\n\t\t\t\t\treturn (ICompletionProposal[]) sortAndFilter.toArray(new ICompletionProposal[] {});\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}","commit_id":"c4047ef21c1d59299dae6e115b0c5e62ae908da5","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * Concrete subclasses can override this to provide custom lookup behaviour\n\t * for <code>CrossReference<\/code>. This implementation delegates to the\n\t * injected LinkingService\n\t * \n\t * @return a list of <code>ICompletionProposal<\/code> matching the given\n\t *         assignment\n\t */\n\tprotected List<? extends ICompletionProposal> lookupCrossReference(CrossReference crossReference, EObject model,\n\t\t\tint offset) {\n\t\t\n\t\tList<ICompletionProposal> completionProposalList = new ArrayList<ICompletionProposal>();\n\n\t\tif (linkingService != null && model instanceof AbstractNode) {\n\t\t\tEObject semanticModel = NodeUtil.getNearestSemanticObject((AbstractNode) model);\n\t\t\tList<Pair<String, URI>> candidates = linkingService.getLinkCandidates(semanticModel, crossReference, \"\");\n\t\t\tfor (Pair<String, URI> candidate : candidates) {\n\t\t\t\tcompletionProposalList.add(createCompletionProposal(candidate.getFirstElement(), offset));\n\t\t\t}\n\t\t}\n\n\t\treturn completionProposalList;\n\t}","id":48317,"modified_method":"/**\n\t * Concrete subclasses can override this to provide custom lookup behaviour\n\t * for <code>CrossReference<\/code>. This implementation delegates to the\n\t * injected LinkingService\n\t * \n\t * @return a list of <code>ICompletionProposal<\/code> matching the given\n\t *         assignment\n\t */\n\tprotected List<? extends ICompletionProposal> lookupCrossReference(CrossReference crossReference, EObject model,\n\t\t\tString prefix, int offset) {\n\t\t\n\t\tList<ICompletionProposal> completionProposalList = new ArrayList<ICompletionProposal>();\n\n\t\tif (linkingService != null) {\n\t\t\tEObject semanticModel = model instanceof AbstractNode?NodeUtil.getNearestSemanticObject((AbstractNode) model):model;\n\t\t\tList<Pair<String, URI>> candidates = linkingService.getLinkCandidates(semanticModel, crossReference, prefix);\n\t\t\tfor (Pair<String, URI> candidate : candidates) {\n\t\t\t\tcompletionProposalList.add(createCompletionProposal(candidate.getFirstElement(), offset));\n\t\t\t}\n\t\t}\n\n\t\treturn completionProposalList;\n\t}","commit_id":"7d6f230a1a839b5c6a4b9e246c950f4d1aeb9942","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * computes the possible grammar elements following the one at the given\n\t * offset and calls the respective methods on the proposal provider.\n\t */\n\tpublic ICompletionProposal[] computeCompletionProposals(ITextViewer viewer, final int offset) {\n\t\tif (proposalProvider != null) {\n\t\t\tIDocument document = viewer.getDocument();\n\t\t\tif (document instanceof XtextDocument) {\n\n\t\t\t\tXtextDocument xtextDocument = (XtextDocument) document;\n\n\t\t\t\tCompositeNode rootNode = xtextDocument.readOnly(new UnitOfWork<CompositeNode>() {\n\t\t\t\t\tpublic CompositeNode exec(XtextResource resource) throws Exception {\n\t\t\t\t\t\tIParseResult parseResult = resource.getParseResult();\n\t\t\t\t\t\tAssert.isNotNull(parseResult);\n\t\t\t\t\t\treturn parseResult.getRootNode();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tAssert.isNotNull(rootNode);\n\n\t\t\t\t\n\t\t\t\t// last COMPLETE node element with associated grammar element\n\t\t\t\tAbstractNode lastCompleteNode = ParseTreeUtil.getLastCompleteNodeByOffset(rootNode, offset);\n\t\t\t\t// node at CURRENT cursor pos. with or without grammar element\n\t\t\t\tLeafNode currentLeafNode = (LeafNode) ParseTreeUtil.getCurrentNodeByOffset(rootNode, offset);\n\t\t\t\t// get associated grammar element\n\t\t\t\tAbstractElement grammarElement = ParseTreeUtil.getGrammarElementFromNode(lastCompleteNode);\n\n\t\t\t\tString prefix = viewer.getTextWidget().getCharCount()>0 ?\n\t\t\t\t\tviewer.getTextWidget().getText(currentLeafNode.getOffset(), offset<viewer.getTextWidget().getCharCount()?offset : \n\t\t\t\t\tviewer.getTextWidget().getCharCount()-1) : \"\";\n\n\t\t\t\tList<ICompletionProposal> completionProposalList = new ArrayList<ICompletionProposal>();\n\n\t\t\t\tSet<AbstractElement> calculatePossibleElementSet = calculatePossibleElementSet(lastCompleteNode,\n\t\t\t\t\t\tgrammarElement);\n\t\t\t\tfor (Iterator<AbstractElement> iterator = calculatePossibleElementSet.iterator(); iterator.hasNext();) {\n\t\t\t\t\tAbstractElement nextElement = iterator.next();\n\n\t\t\t\t\tList<EObject> resolvedElementOrRuleList = resolveElement(nextElement);\n\n\t\t\t\t\tcollectCompletionProposalList(resolvedElementOrRuleList, completionProposalList, xtextDocument,\n\t\t\t\t\t\t\tcurrentLeafNode, prefix, offset);\n\t\t\t\t}\n\n\t\t\t\tif (completionProposalList != null) {\n\t\t\t\t\tList<? extends ICompletionProposal> sortAndFilter = proposalProvider\n\t\t\t\t\t\t\t.sortAndFilter(completionProposalList);\n\t\t\t\t\treturn (ICompletionProposal[]) sortAndFilter.toArray(new ICompletionProposal[] {});\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}","id":48318,"modified_method":"/**\n\t * computes the possible grammar elements following the one at the given\n\t * offset and calls the respective methods on the proposal provider.\n\t */\n\tpublic ICompletionProposal[] computeCompletionProposals(ITextViewer viewer, final int offset) {\n\t\tif (proposalProvider != null) {\n\t\t\tIDocument document = viewer.getDocument();\n\t\t\tif (document instanceof XtextDocument) {\n\n\t\t\t\tXtextDocument xtextDocument = (XtextDocument) document;\n\n\t\t\t\tCompositeNode rootNode = xtextDocument.readOnly(new UnitOfWork<CompositeNode>() {\n\t\t\t\t\tpublic CompositeNode exec(XtextResource resource) throws Exception {\n\t\t\t\t\t\tIParseResult parseResult = resource.getParseResult();\n\t\t\t\t\t\tAssert.isNotNull(parseResult);\n\t\t\t\t\t\treturn parseResult.getRootNode();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tAssert.isNotNull(rootNode);\n\n\t\t\t\t// last COMPLETE node element with associated grammar element\n\t\t\t\tAbstractNode lastCompleteNode = ParseTreeUtil.getLastCompleteNodeByOffset(rootNode, offset);\n\t\t\t\t// node at CURRENT cursor pos. with or without grammar element\n\t\t\t\tLeafNode currentLeafNode = (LeafNode) ParseTreeUtil.getCurrentNodeByOffset(rootNode, offset);\n\t\t\t\t// get associated grammar element\n\t\t\t\tAbstractElement grammarElement = ParseTreeUtil.getGrammarElementFromNode(lastCompleteNode);\n\n\t\t\t\tString prefix = \"\";\n\t\t\t\tStyledText textWidget = viewer.getTextWidget();\n\t\t\t\tif (textWidget.getCharCount() > 0) {\n\t\t\t\t\tint boundedOffset = Math.min(offset, textWidget.getCharCount()) -1;\n\t\t\t\t\tif(currentLeafNode.getOffset() <= boundedOffset)\n\t\t\t\t\t\tprefix = textWidget.getText(currentLeafNode.getOffset(), boundedOffset);\n\t\t\t\t}\n\n\t\t\t\tList<ICompletionProposal> completionProposalList = new ArrayList<ICompletionProposal>();\n\n\t\t\t\tSet<AbstractElement> calculatePossibleElementSet = calculatePossibleElementSet(lastCompleteNode,\n\t\t\t\t\t\tgrammarElement);\n\t\t\t\tfor (Iterator<AbstractElement> iterator = calculatePossibleElementSet.iterator(); iterator.hasNext();) {\n\t\t\t\t\tAbstractElement nextElement = iterator.next();\n\n\t\t\t\t\tList<EObject> resolvedElementOrRuleList = resolveElement(nextElement);\n\n\t\t\t\t\tcollectCompletionProposalList(resolvedElementOrRuleList, completionProposalList, xtextDocument,\n\t\t\t\t\t\t\tcurrentLeafNode, prefix, offset);\n\t\t\t\t}\n\n\t\t\t\tif (completionProposalList != null) {\n\t\t\t\t\tList<? extends ICompletionProposal> sortAndFilter = proposalProvider\n\t\t\t\t\t\t\t.sortAndFilter(completionProposalList);\n\t\t\t\t\treturn (ICompletionProposal[]) sortAndFilter.toArray(new ICompletionProposal[] {});\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}","commit_id":"7d6f230a1a839b5c6a4b9e246c950f4d1aeb9942","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * @param contextNode\n\t *            the node representing the 'scope' of the current lookup\n\t * @param offsetPosition\n\t *            the text position within the the current sentence\n\t * @return the last 'complete' (an associated grammar element is available)\n\t *         node element contained within the given contextNode at the\n\t *         provided position\n\t */\n\tpublic static final AbstractNode getLastCompleteNodeByOffset(AbstractNode contextNode, int offsetPosition) {\n\n\t\tassertParameterNotNull(contextNode, \"contextNode\");\n\n\t\tAbstractNode abstractNode = null;\n\n\t\tif (contextNode.getOffset() < offsetPosition\n\t\t\t\t|| (0 == offsetPosition && offsetPosition == contextNode.getOffset())) {\n\n\t\t\tif (contextNode.getGrammarElement() instanceof AbstractElement\n\t\t\t\t\t|| contextNode.getGrammarElement() instanceof ParserRule) {\n\n\t\t\t\tabstractNode = contextNode;\n\t\t\t}\n\t\t\tfor (AbstractNode childNode : contextNode.getLeafNodes()) {\n\n\t\t\t\tAbstractNode lastElementByOffset = getLastCompleteNodeByOffset(childNode, offsetPosition);\n\n\t\t\t\tif (lastElementByOffset != null) {\n\t\t\t\t\tabstractNode = lastElementByOffset;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn abstractNode;\n\t}","id":48319,"modified_method":"/**\n\t * @param contextNode\n\t *            the node representing the 'scope' of the current lookup\n\t * @param offsetPosition\n\t *            the text position within the the current sentence\n\t * @return the last 'complete' (an associated grammar element is available)\n\t *         node element contained within the given contextNode at the\n\t *         provided position\n\t */\n\tpublic static final AbstractNode getLastCompleteNodeByOffset(AbstractNode contextNode, int offsetPosition) {\n\n\t\tassertParameterNotNull(contextNode, \"contextNode\");\n\n\t\tAbstractNode abstractNode = null;\n\n\t\tif (contextNode.getOffset() < offsetPosition\n\t\t\t\t|| (0 == offsetPosition && offsetPosition == contextNode.getOffset())) {\n\n\t\t\tfor (AbstractNode childNode : contextNode.getLeafNodes()) {\n\t\t\t\tAbstractNode lastElementByOffset = getLastCompleteNodeByOffset(childNode, offsetPosition);\n\n\t\t\t\tif (lastElementByOffset != null) {\n\t\t\t\t\tabstractNode = lastElementByOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (abstractNode == null && contextNode.getOffset() + contextNode.getLength() <= offsetPosition) {\n\t\t\t\tEObject grammarElement = contextNode.getGrammarElement();\n\t\t\t\tif (grammarElement instanceof AbstractElement || grammarElement instanceof ParserRule) {\n\t\t\t\t\tabstractNode = contextNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\treturn abstractNode;\n\t}","commit_id":"7d6f230a1a839b5c6a4b9e246c950f4d1aeb9942","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * \n\t * @param contextNode\n\t *            the node representing the 'scope' of the current lookup\n\t * @param offsetPosition\n\t *            the text position within the the current sentence\n\t * \n\t * @return the last node element at the provided position\n\t */\n\tpublic static final LeafNode getCurrentNodeByOffset(AbstractNode contextNode, int offsetPosition) {\n\n\t\tassertParameterNotNull(contextNode, \"contextNode\");\n\n\t\tLeafNode leafNode = null;\n\n\t\tfor (AbstractNode childNode : contextNode.getLeafNodes()) {\n\n\t\t\tif (childNode.getOffset() + childNode.getLength() <= offsetPosition) {\n\t\t\t\tleafNode = (LeafNode) childNode;\n\t\t\t}\n\t\t}\n\n\t\treturn leafNode;\n\t}","id":48320,"modified_method":"/**\n\t * \n\t * @param contextNode\n\t *            the node representing the 'scope' of the current lookup\n\t * @param offsetPosition\n\t *            the text position within the the current sentence\n\t * \n\t * @return the node element that starts at or spans across the provided position\n\t */\n\tpublic static final LeafNode getCurrentNodeByOffset(AbstractNode contextNode, int offsetPosition) {\n\n\t\tassertParameterNotNull(contextNode, \"contextNode\");\n\n\t\tLeafNode leafNode = null;\n\n\t\tfor (AbstractNode childNode : contextNode.getLeafNodes()) {\n\t\t\tif (childNode.getOffset() <= offsetPosition && offsetPosition <= childNode.getOffset() + childNode.getLength()) {\n\t\t\t\tleafNode = (LeafNode) childNode;\n\t\t\t}\n\t\t}\n\n\t\treturn leafNode;\n\t}","commit_id":"7d6f230a1a839b5c6a4b9e246c950f4d1aeb9942","url":"https://github.com/eclipse/xtext"},{"original_method":"private boolean isPartialLinkTextMatching(String partialLinkText, String linktext) {\n\t\t// TODO this might be unnecessary due to filtering on the UI side\n\t\treturn linktext.startsWith(partialLinkText);\n\t}","id":48321,"modified_method":"private boolean isPartialLinkTextMatching(String partialLinkText, String linktext) {\n\t\t// TODO this might be unnecessary due to filtering on the UI side\n\t\treturn linktext.toUpperCase().startsWith(partialLinkText.trim().toUpperCase());\n\t}","commit_id":"7d6f230a1a839b5c6a4b9e246c950f4d1aeb9942","url":"https://github.com/eclipse/xtext"},{"original_method":"private GlobalSearchScope calcLibraryUseScope(List<OrderEntry> entries) {\n    List<GlobalSearchScope> united = ContainerUtil.newArrayList();\n    united.add(getLibrariesOnlyScope());\n    for (OrderEntry entry : entries) {\n      united.add(GlobalSearchScope.moduleWithDependentsScope(entry.getOwnerModule()));\n    }\n    return GlobalSearchScope.union(united.toArray(new GlobalSearchScope[united.size()]));\n  }","id":48322,"modified_method":"@NotNull\n  private GlobalSearchScope calcLibraryUseScope(@NotNull List<OrderEntry> entries) {\n    List<GlobalSearchScope> united = ContainerUtil.newArrayList();\n    united.add(getLibrariesOnlyScope());\n    Set<Module> modulesInvolved = new THashSet<>(entries.size());\n    for (OrderEntry entry : entries) {\n      Module ownerModule = entry.getOwnerModule();\n      united.add(GlobalSearchScope.moduleWithDependentsScope(ownerModule));\n      modulesInvolved.add(ownerModule);\n    }\n    // optimisation: if the library attached to all modules (often the case with JDK) then replace the 'union of all modules' scope with just 'project'\n    if (modulesInvolved.size() == ModuleManager.getInstance(myProject).getModules().length) {\n      return GlobalSearchScope.allScope(myProject);\n    }\n\n    return GlobalSearchScope.union(united.toArray(new GlobalSearchScope[united.size()]));\n  }","commit_id":"41fde692534dafe39db37135af56d5eb3fef686d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private GlobalSearchScope calcLibraryUseScope(@NotNull List<OrderEntry> entries) {\n    List<GlobalSearchScope> united = ContainerUtil.newArrayList();\n    united.add(getLibrariesOnlyScope());\n    Set<Module> modulesInvolved = new THashSet<>(entries.size());\n    for (OrderEntry entry : entries) {\n      Module ownerModule = entry.getOwnerModule();\n      united.add(GlobalSearchScope.moduleWithDependentsScope(ownerModule));\n      modulesInvolved.add(ownerModule);\n    }\n    // optimisation: if the library attached to all modules (often the case with JDK) then replace the 'union of all modules' scope with just 'project'\n    if (modulesInvolved.size() == ModuleManager.getInstance(myProject).getModules().length) {\n      return GlobalSearchScope.allScope(myProject);\n    }\n\n    return GlobalSearchScope.union(united.toArray(new GlobalSearchScope[united.size()]));\n  }","id":48323,"modified_method":"@NotNull\n  private GlobalSearchScope calcLibraryUseScope(@NotNull List<OrderEntry> entries) {\n    Set<Module> modulesWithLibrary = new THashSet<>(entries.size());\n    Set<Module> modulesWithSdk = new THashSet<>(entries.size());\n    for (OrderEntry entry : entries) {\n      (entry instanceof JdkOrderEntry ? modulesWithSdk : modulesWithLibrary).add(entry.getOwnerModule());\n    }\n    modulesWithSdk.removeAll(modulesWithLibrary);\n\n    // optimisation: if the library attached to all modules (often the case with JDK) then replace the 'union of all modules' scope with just 'project'\n    if (modulesWithSdk.size() + modulesWithLibrary.size() == ModuleManager.getInstance(myProject).getModules().length) {\n      return GlobalSearchScope.allScope(myProject);\n    }\n\n    List<GlobalSearchScope> united = ContainerUtil.newArrayList();\n    united.add(getLibrariesOnlyScope());\n    if (!modulesWithSdk.isEmpty()) {\n      united.add(new ModulesScope(modulesWithSdk, myProject));\n    }\n\n    for (Module module : modulesWithLibrary) {\n      united.add(GlobalSearchScope.moduleWithDependentsScope(module));\n    }\n\n    return GlobalSearchScope.union(united.toArray(new GlobalSearchScope[united.size()]));\n  }","commit_id":"e410d374dd8a8363b47410ba0ad25f68ec4d7323","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public GlobalSearchScope getResolveScope(@NotNull PsiElement element) {\n    final ProgressManager progressManager = ProgressManager.getInstance();\n    progressManager.checkCanceled();\n\n    VirtualFile vFile;\n    final Project project = myManager.getProject();\n    if (element instanceof PsiDirectory) {\n      vFile = ((PsiDirectory)element).getVirtualFile();\n    }\n    else {\n      final PsiFile containingFile = element.getContainingFile();\n      if (containingFile instanceof PsiCodeFragment) {\n        final GlobalSearchScope forcedScope = ((PsiCodeFragment)containingFile).getForcedResolveScope();\n        if (forcedScope != null) {\n          return forcedScope;\n        }\n        final PsiElement context = containingFile.getContext();\n        if (context == null) {\n          return GlobalSearchScope.allScope(project);\n        }\n        return getResolveScope(context);\n      }\n\n      final PsiFile contextFile = containingFile != null ? FileContextUtil.getContextFile(containingFile) : null;\n      if (contextFile == null) {\n        return GlobalSearchScope.allScope(project);\n      }\n      else if (contextFile instanceof FileResolveScopeProvider) {\n        return ((FileResolveScopeProvider) contextFile).getFileResolveScope();\n      }\n      vFile = contextFile.getVirtualFile();\n      if (vFile == null) {\n        PsiFile originalFile = contextFile.getOriginalFile();\n        if (originalFile != null) {\n          vFile = originalFile.getVirtualFile();\n        }\n      }\n    }\n    if (vFile == null) {\n      return GlobalSearchScope.allScope(project);\n    }\n\n    ProjectFileIndex projectFileIndex = myProjectRootManager.getFileIndex();\n    Module module = projectFileIndex.getModuleForFile(vFile);\n    if (module != null) {\n      boolean includeTests = projectFileIndex.isInTestSourceContent(vFile) ||\n                             !projectFileIndex.isContentJavaSourceFile(vFile);\n      return GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(module, includeTests);\n    }\n    else {\n      // resolve references in libraries in context of all modules which contain it\n      List<Module> modulesLibraryUsedIn = new ArrayList<Module>();\n      List<OrderEntry> orderEntries = projectFileIndex.getOrderEntriesForFile(vFile);\n      for (OrderEntry entry : orderEntries) {\n        progressManager.checkCanceled();\n\n        if (entry instanceof JdkOrderEntry) {\n          return ((ProjectRootManagerEx)myProjectRootManager).getScopeForJdk((JdkOrderEntry)entry);\n        }\n\n        if (entry instanceof LibraryOrderEntry) {\n          Module ownerModule = entry.getOwnerModule();\n          modulesLibraryUsedIn.add(ownerModule);\n        }\n      }\n\n      return ((ProjectRootManagerEx)myProjectRootManager).getScopeForLibraryUsedIn(modulesLibraryUsedIn);\n    }\n  }","id":48324,"modified_method":"@NotNull\n  public GlobalSearchScope getResolveScope(@NotNull PsiElement element) {\n    final ProgressManager progressManager = ProgressManager.getInstance();\n    progressManager.checkCanceled();\n\n    VirtualFile vFile;\n    final Project project = myManager.getProject();\n    if (element instanceof PsiDirectory) {\n      vFile = ((PsiDirectory)element).getVirtualFile();\n    }\n    else {\n      final PsiFile containingFile = element.getContainingFile();\n      if (containingFile instanceof PsiCodeFragment) {\n        final GlobalSearchScope forcedScope = ((PsiCodeFragment)containingFile).getForcedResolveScope();\n        if (forcedScope != null) {\n          return forcedScope;\n        }\n        final PsiElement context = containingFile.getContext();\n        if (context == null) {\n          return GlobalSearchScope.allScope(project);\n        }\n        return getResolveScope(context);\n      }\n\n      final PsiFile contextFile = containingFile != null ? FileContextUtil.getContextFile(containingFile) : null;\n      if (contextFile == null) {\n        return GlobalSearchScope.allScope(project);\n      }\n      else if (contextFile instanceof FileResolveScopeProvider) {\n        return ((FileResolveScopeProvider) contextFile).getFileResolveScope();\n      }\n      vFile = contextFile.getVirtualFile();\n      if (vFile == null) {\n        PsiFile originalFile = contextFile.getOriginalFile();\n        if (originalFile != null) {\n          vFile = originalFile.getVirtualFile();\n        }\n      }\n    }\n    if (vFile == null) {\n      return GlobalSearchScope.allScope(project);\n    }\n\n    ProjectFileIndex projectFileIndex = myProjectRootManager.getFileIndex();\n    Module module = projectFileIndex.getModuleForFile(vFile);\n    if (module != null) {\n      boolean includeTests = projectFileIndex.isInTestSourceContent(vFile) ||\n                             !projectFileIndex.isContentJavaSourceFile(vFile);\n      return GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(module, includeTests);\n    }\n    else {\n      // resolve references in libraries in context of all modules which contain it\n      List<Module> modulesLibraryUsedIn = new ArrayList<Module>();\n      List<OrderEntry> orderEntries = projectFileIndex.getOrderEntriesForFile(vFile);\n      for (OrderEntry entry : orderEntries) {\n        progressManager.checkCanceled();\n\n        if (entry instanceof JdkOrderEntry) {\n          return ((ProjectRootManagerEx)myProjectRootManager).getScopeForJdk((JdkOrderEntry)entry);\n        }\n\n        if (entry instanceof LibraryOrderEntry || entry instanceof ModuleOrderEntry) {\n          modulesLibraryUsedIn.add(entry.getOwnerModule());\n        }\n      }\n\n      return ((ProjectRootManagerEx)myProjectRootManager).getScopeForLibraryUsedIn(modulesLibraryUsedIn);\n    }\n  }","commit_id":"752039dbe1ca7de5ef0446debae6e1981f2d94f4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * @param header\n     * @param post\n     * @param env\n     * @param out\n     * @return\n     */\n    public static serverObjects respond(final RequestHeader header, final serverObjects post, final serverSwitch env, final OutputStream out) {\n\n        // this uses the methods in the jetty servlet environment and can be removed if jetty in implemented\n        Switchboard sb = (Switchboard) env;\n\n        // remember the peer contact for peer statistics\n        final String clientip = header.get(HeaderFramework.CONNECTION_PROP_CLIENTIP, \"<unknown>\"); // read an artificial header addendum\n        final String userAgent = header.get(HeaderFramework.USER_AGENT, \"<unknown>\");\n        sb.peers.peerActions.setUserAgent(clientip, userAgent);\n\n        // check if user is allowed to search (can be switched in /ConfigPortal.html)\n        boolean authenticated = sb.adminAuthenticated(header) >= 2;\n        final boolean searchAllowed = authenticated || sb.getConfigBool(\"publicSearchpage\", true);\n        if (!searchAllowed) return null;\n\n        // check post\n        if (post == null) return null;\n        Log.logInfo(\"GSA Query\", post.toString());\n        sb.intermissionAllThreads(3000); // tell all threads to do nothing for a specific time\n\n        // update the boost values\n        Boost.RANKING.updateBoosts(sb.getConfig(SwitchboardConstants.SEARCH_RANKING_SOLR_BOOST, \"\"));\n        \n        // rename post fields according to result style\n        //post.put(CommonParams.Q, post.remove(\"q\")); // same as solr\n        //post.put(CommonParams.START, post.remove(\"start\")); // same as solr\n        //post.put(, post.remove(\"site\"));//required, example: col1|col2\n        //post.put(, post.remove(\"client\"));//required, example: myfrontend\n        //post.put(, post.remove(\"output\"));//required, example: xml,xml_no_dtd\n        String q = post.get(CommonParams.Q, \"\");\n        post.put(\"originalQuery\", q);\n        \n        // get a solr query string\n        QueryGoal qg = new QueryGoal(q);\n        q = qg.solrQueryString(sb.index.fulltext().getSolrScheme()).toString();\n        \n        post.put(CommonParams.ROWS, post.remove(\"num\"));\n        post.put(CommonParams.ROWS, Math.min(post.getInt(CommonParams.ROWS, 10), (authenticated) ? 5000 : 100));\n        post.put(\"defType\", \"edismax\");\n        float f = Boost.RANKING.get(YaCySchema.fuzzy_signature_unique_b);\n        post.put(\"bq\", YaCySchema.fuzzy_signature_unique_b.getSolrFieldName() + \":true^\" + Float.toString(f)); // a boost query that moves double content to the back\n        post.put(CommonParams.FL,\n                YaCySchema.content_type.getSolrFieldName() + ',' +\n                YaCySchema.id.getSolrFieldName() + ',' +\n                YaCySchema.sku.getSolrFieldName() + ',' +\n                YaCySchema.title.getSolrFieldName() + ',' +\n                YaCySchema.description.getSolrFieldName() + ',' +\n                YaCySchema.load_date_dt.getSolrFieldName() + ',' +\n                YaCySchema.last_modified.getSolrFieldName() + ',' +\n                YaCySchema.size_i.getSolrFieldName());\n        post.put(\"hl\", \"true\");\n        post.put(\"hl.q\", q);\n        post.put(\"hl.fl\", YaCySchema.h1_txt.getSolrFieldName() + \",\" + YaCySchema.h2_txt.getSolrFieldName() + \",\" + YaCySchema.text_t.getSolrFieldName());\n        post.put(\"hl.alternateField\", YaCySchema.description.getSolrFieldName());\n        post.put(\"hl.simple.pre\", \"<b>\");\n        post.put(\"hl.simple.post\", \"<\/b>\");\n        post.put(\"hl.fragsize\", Integer.toString(SearchEvent.SNIPPET_MAX_LENGTH));\n        GSAResponseWriter.Sort sort = new GSAResponseWriter.Sort(post.get(CommonParams.SORT, \"\"));\n        String sorts = sort.toSolr();\n        if (sorts == null) {\n            post.remove(CommonParams.SORT);\n        } else {\n            post.put(CommonParams.SORT, sorts);\n        }\n        String site = post.remove(\"site\");\n        String access = post.remove(\"access\");\n        String entqr = post.remove(\"entqr\");\n\n        // add sites operator\n        if (site != null && site.length() > 0) {\n            String[] s0 = CommonPattern.VERTICALBAR.split(site);\n            ArrayList<String> sites = new ArrayList<String>(2);\n            for (String s: s0) {\n                s = s.trim().toLowerCase();\n                if (s.length() > 0) sites.add(s);\n            }\n            if (sites.size() > 1) {\n                q += \" AND (\" + YaCySchema.collection_sxt.getSolrFieldName() + \":\" + sites.get(0);\n                for (int i = 1; i < sites.size(); i++) {\n                    q += \" OR \" + YaCySchema.collection_sxt.getSolrFieldName() + \":\" + sites.get(i);\n                }\n                q += \")\";\n            } else if (sites.size() == 1) {\n                q += \" AND \" + YaCySchema.collection_sxt.getSolrFieldName() + \":\" + sites.get(0);\n            }\n            post.put(CommonParams.Q, q);\n        }\n        post.put(CommonParams.Q, q);\n        \n        // get the embedded connector\n        EmbeddedSolrConnector connector = (EmbeddedSolrConnector) sb.index.fulltext().getLocalSolr();\n        if (connector == null) return null;\n\n        // do the solr request\n        SolrQueryRequest req = connector.request(post.toSolrParams(null));\n        SolrQueryResponse response = null;\n        Exception e = null;\n        try {response = connector.query(req);} catch (SolrException ee) {e = ee;}\n        if (response != null) e = response.getException();\n        if (e != null) {\n            Log.logException(e);\n            return null;\n        }\n\n        // set some context for the writer\n        Map<Object,Object> context = req.getContext();\n        context.put(\"ip\", header.get(\"CLIENTIP\", \"\"));\n        context.put(\"client\", \"vsm_frontent\");\n        context.put(\"sort\", sort.sort);\n        context.put(\"site\", site == null ? \"\" : site);\n        context.put(\"access\", access == null ? \"p\" : access);\n        context.put(\"entqr\", entqr == null ? \"3\" : entqr);\n\n        // write the result directly to the output stream\n        Writer ow = new FastWriter(new OutputStreamWriter(out, UTF8.charset));\n        try {\n            responseWriter.write(ow, req, response);\n            ow.flush();\n        } catch (IOException e1) {\n        } finally {\n            req.close();\n            try {ow.close();} catch (IOException e1) {}\n        }\n\n        // log result\n        Object rv = response.getValues().get(\"response\");\n        if (rv != null && rv instanceof ResultContext) {\n            AccessTracker.addToDump(q, Integer.toString(((ResultContext) rv).docs.matches()));\n        }\n        return null;\n    }","id":48325,"modified_method":"/**\n     * @param header\n     * @param post\n     * @param env\n     * @param out\n     * @return\n     */\n    public static serverObjects respond(final RequestHeader header, final serverObjects post, final serverSwitch env, final OutputStream out) {\n\n        // this uses the methods in the jetty servlet environment and can be removed if jetty in implemented\n        Switchboard sb = (Switchboard) env;\n\n        // remember the peer contact for peer statistics\n        final String clientip = header.get(HeaderFramework.CONNECTION_PROP_CLIENTIP, \"<unknown>\"); // read an artificial header addendum\n        final String userAgent = header.get(HeaderFramework.USER_AGENT, \"<unknown>\");\n        sb.peers.peerActions.setUserAgent(clientip, userAgent);\n\n        // check if user is allowed to search (can be switched in /ConfigPortal.html)\n        boolean authenticated = sb.adminAuthenticated(header) >= 2;\n        final boolean searchAllowed = authenticated || sb.getConfigBool(\"publicSearchpage\", true);\n        if (!searchAllowed) return null;\n\n        // check post\n        if (post == null) return null;\n        Log.logInfo(\"GSA Query\", post.toString());\n        sb.intermissionAllThreads(3000); // tell all threads to do nothing for a specific time\n\n        // update the boost values\n        Boost.RANKING.updateBoosts(sb.getConfig(SwitchboardConstants.SEARCH_RANKING_SOLR_BOOST, \"\"));\n        \n        // rename post fields according to result style\n        //post.put(CommonParams.Q, post.remove(\"q\")); // same as solr\n        //post.put(CommonParams.START, post.remove(\"start\")); // same as solr\n        //post.put(, post.remove(\"client\"));//required, example: myfrontend\n        //post.put(, post.remove(\"output\"));//required, example: xml,xml_no_dtd\n        String originalQuery = post.get(CommonParams.Q, \"\");\n        post.put(\"originalQuery\", originalQuery);\n        \n        // get a solr query string\n        QueryGoal qg = new QueryGoal(originalQuery);\n        StringBuilder solrQ = qg.solrQueryString(sb.index.fulltext().getSolrScheme());\n        post.put(\"defType\", \"edismax\");\n        post.put(CommonParams.Q, solrQ.toString());\n        post.put(CommonParams.ROWS, post.remove(\"num\"));\n        post.put(CommonParams.ROWS, Math.min(post.getInt(CommonParams.ROWS, 10), (authenticated) ? 5000 : 100));\n        float f = Boost.RANKING.get(YaCySchema.fuzzy_signature_unique_b);\n        post.put(\"bq\", YaCySchema.fuzzy_signature_unique_b.getSolrFieldName() + \":true^\" + Float.toString(f)); // a boost query that moves double content to the back\n        post.put(CommonParams.FL,\n                YaCySchema.content_type.getSolrFieldName() + ',' +\n                YaCySchema.id.getSolrFieldName() + ',' +\n                YaCySchema.sku.getSolrFieldName() + ',' +\n                YaCySchema.title.getSolrFieldName() + ',' +\n                YaCySchema.description.getSolrFieldName() + ',' +\n                YaCySchema.load_date_dt.getSolrFieldName() + ',' +\n                YaCySchema.last_modified.getSolrFieldName() + ',' +\n                YaCySchema.size_i.getSolrFieldName());\n        post.put(\"hl\", \"true\");\n        post.put(\"hl.q\", originalQuery);\n        post.put(\"hl.fl\", YaCySchema.h1_txt.getSolrFieldName() + \",\" + YaCySchema.h2_txt.getSolrFieldName() + \",\" + YaCySchema.text_t.getSolrFieldName());\n        post.put(\"hl.alternateField\", YaCySchema.description.getSolrFieldName());\n        post.put(\"hl.simple.pre\", \"<b>\");\n        post.put(\"hl.simple.post\", \"<\/b>\");\n        post.put(\"hl.fragsize\", Integer.toString(SearchEvent.SNIPPET_MAX_LENGTH));\n        GSAResponseWriter.Sort sort = new GSAResponseWriter.Sort(post.get(CommonParams.SORT, \"\"));\n        String sorts = sort.toSolr();\n        if (sorts == null) {\n            post.remove(CommonParams.SORT);\n        } else {\n            post.put(CommonParams.SORT, sorts);\n        }\n        String site = post.remove(\"site\"); // example: col1|col2\n        String access = post.remove(\"access\");\n        String entqr = post.remove(\"entqr\");\n\n        // add sites operator\n        if (site != null && site.length() > 0) {\n            String[] s0 = CommonPattern.VERTICALBAR.split(site);\n            ArrayList<String> sites = new ArrayList<String>(2);\n            for (String s: s0) {\n                s = s.trim().toLowerCase();\n                if (s.length() > 0) sites.add(s);\n            }\n            StringBuilder fq = new StringBuilder(20);\n            if (sites.size() > 1) {\n                fq.append(YaCySchema.collection_sxt.getSolrFieldName()).append(':').append(sites.get(0));\n                for (int i = 1; i < sites.size(); i++) {\n                    fq.append(\" OR \").append(YaCySchema.collection_sxt.getSolrFieldName()).append(':').append(sites.get(i));\n                }\n            } else if (sites.size() == 1) {\n                fq.append(YaCySchema.collection_sxt.getSolrFieldName()).append(':').append(sites.get(0));\n            }\n            post.put(CommonParams.FQ, fq.toString());\n        }\n        \n        // get the embedded connector\n        EmbeddedSolrConnector connector = (EmbeddedSolrConnector) sb.index.fulltext().getLocalSolr();\n        if (connector == null) return null;\n\n        // do the solr request\n        SolrQueryRequest req = connector.request(post.toSolrParams(null));\n        SolrQueryResponse response = null;\n        Exception e = null;\n        try {response = connector.query(req);} catch (SolrException ee) {e = ee;}\n        if (response != null) e = response.getException();\n        if (e != null) {\n            Log.logException(e);\n            return null;\n        }\n\n        // set some context for the writer\n        Map<Object,Object> context = req.getContext();\n        context.put(\"ip\", header.get(\"CLIENTIP\", \"\"));\n        context.put(\"client\", \"vsm_frontent\");\n        context.put(\"sort\", sort.sort);\n        context.put(\"site\", site == null ? \"\" : site);\n        context.put(\"access\", access == null ? \"p\" : access);\n        context.put(\"entqr\", entqr == null ? \"3\" : entqr);\n\n        // write the result directly to the output stream\n        Writer ow = new FastWriter(new OutputStreamWriter(out, UTF8.charset));\n        try {\n            responseWriter.write(ow, req, response);\n            ow.flush();\n        } catch (IOException e1) {\n        } finally {\n            req.close();\n            try {ow.close();} catch (IOException e1) {}\n        }\n\n        // log result\n        Object rv = response.getValues().get(\"response\");\n        if (rv != null && rv instanceof ResultContext) {\n            AccessTracker.addToDump(originalQuery, Integer.toString(((ResultContext) rv).docs.matches()));\n        }\n        return null;\n    }","commit_id":"2b7d46bc1fa678418c4b52674d68cca069f7d9a6","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"@Override\n    public SolrDocument getDocumentById(final String id, final String ... fields) throws IOException {\n        final SolrQuery query = new SolrQuery();\n        assert id.length() == 12;\n        // construct query\n        query.setQuery(\"{!raw f=\" + CollectionSchema.id.getSolrFieldName() + \"}\" + id);\n        query.clearSorts();\n        query.setRows(1);\n        query.setStart(0);\n        if (fields.length > 0) query.setFields(fields);\n        query.setIncludeScore(false);\n\n        // query the server\n        try {\n            final QueryResponse rsp = getResponseByParams(query);\n            final SolrDocumentList docs = rsp.getResults();\n            if (docs.isEmpty()) return null;\n            return docs.get(0);\n        } catch (final Throwable e) {\n            throw new IOException(e.getMessage(), e);\n        }\n    }","id":48326,"modified_method":"@Override\n    public SolrDocument getDocumentById(final String id, final String ... fields) throws IOException {\n        final SolrQuery query = new SolrQuery();\n        assert id.length() == 12;\n        // construct query\n        StringBuilder sb = new StringBuilder(23);\n        sb.append(\"{!raw f=\").append(CollectionSchema.id.getSolrFieldName()).append('}').append(id);\n        query.setQuery(sb.toString());\n        query.clearSorts();\n        query.setRows(1);\n        query.setStart(0);\n        if (fields.length > 0) query.setFields(fields);\n        query.setIncludeScore(false);\n\n        // query the server\n        try {\n            final QueryResponse rsp = getResponseByParams(query);\n            final SolrDocumentList docs = rsp.getResults();\n            if (docs.isEmpty()) return null;\n            return docs.get(0);\n        } catch (final Throwable e) {\n            throw new IOException(e.getMessage(), e);\n        }\n    }","commit_id":"7e346e1d79ab0a4b0c708b25d8b3f3680fc24bbc","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"/**\n     * Calculate the five summary stats per sample\n     * @param sampleStats The Map which holds concordance values per sample\n     */\n    public void generateSampleSummaryStats( final SampleStats sampleStats ) {\n        EnumSet<Genotype.Type> allVariantGenotypes = EnumSet.of(Genotype.Type.HOM_VAR, Genotype.Type.HET);\n        EnumSet<Genotype.Type> allCalledGenotypes = EnumSet.of(Genotype.Type.HOM_VAR, Genotype.Type.HET, Genotype.Type.HOM_REF);\n        EnumSet<Genotype.Type> allGenotypes = EnumSet.allOf(Genotype.Type.class);\n\n        for( final String sample : concordanceSummary.keySet() ) {\n            if ( sample.equals(ALL_SAMPLES_KEY) ) continue;\n\n            final long[][] stats = sampleStats.concordanceStats.get(sample);\n            final double[] summary = concordanceSummary.get(sample);\n            if( stats == null ) { throw new ReviewedStingException( \"SampleStats and SampleSummaryStats contain different samples! sample = \" + sample ); }\n\n            long numer, denom;\n\n            // Summary 0: % ref called as var\n            numer = sumStatsAllPairs(stats, EnumSet.of(Genotype.Type.HOM_REF), allVariantGenotypes);\n            denom = sumStatsAllPairs(stats, EnumSet.of(Genotype.Type.HOM_REF), allGenotypes);\n            updateSummaries(0, summary,  numer, denom);\n\n            // Summary 1: % het called as het\n            numer = stats[Genotype.Type.HET.ordinal()][Genotype.Type.HET.ordinal()];\n            denom = sumStatsAllPairs(stats, EnumSet.of(Genotype.Type.HET), allGenotypes);\n            updateSummaries(1, summary,  numer, denom);\n\n            // Summary 2: % het called as var\n            numer = sumStatsAllPairs(stats, EnumSet.of(Genotype.Type.HET), allVariantGenotypes);\n            denom = sumStatsAllPairs(stats, EnumSet.of(Genotype.Type.HET), allGenotypes);\n            updateSummaries(2, summary,  numer, denom);\n\n            // Summary 3: % homVar called as homVar\n            numer = stats[Genotype.Type.HOM_VAR.ordinal()][Genotype.Type.HOM_VAR.ordinal()];\n            denom = sumStatsAllPairs(stats, EnumSet.of(Genotype.Type.HOM_VAR), allGenotypes);\n            updateSummaries(3, summary,  numer, denom);\n\n            // Summary 4: % homVars called as var\n            numer = sumStatsAllPairs(stats, EnumSet.of(Genotype.Type.HOM_VAR), allVariantGenotypes);\n            denom = sumStatsAllPairs(stats, EnumSet.of(Genotype.Type.HOM_VAR), allGenotypes);\n            updateSummaries(4, summary,  numer, denom);\n\n            // Summary 5: % non-ref called as non-ref\n            // MAD: this is known as the non-reference sensitivity (# non-ref according to comp found in eval / # non-ref in comp)\n            numer = sumStatsAllPairs(stats, allVariantGenotypes, allVariantGenotypes);\n            denom = sumStatsAllPairs(stats, allVariantGenotypes, allGenotypes);\n            updateSummaries(5, summary,  numer, denom);\n\n            // Summary 6: overall genotype concordance of sites called in eval track\n            // MAD: this is the tradition genotype concordance\n            numer = sumStatsDiag(stats, allCalledGenotypes);\n            denom = sumStatsAllPairs(stats, allCalledGenotypes, allCalledGenotypes);\n            updateSummaries(6, summary,  numer, denom);\n\n            // Summary 7: overall genotype concordance of sites called non-ref in eval track\n            long homrefConcords = stats[Genotype.Type.HOM_REF.ordinal()][Genotype.Type.HOM_REF.ordinal()];\n            long diag = sumStatsDiag(stats, allVariantGenotypes);\n            long allNoHomRef = sumStatsAllPairs(stats, allCalledGenotypes, allCalledGenotypes) - homrefConcords;\n            numer = allNoHomRef - diag;\n            denom = allNoHomRef;\n            updateSummaries(7, summary,  numer, denom);\n        }\n\n        // update the final summary stats\n        final double[] allSamplesSummary = concordanceSummary.get(ALL_SAMPLES_KEY);\n        for ( int i = 0; i < allSamplesSummary.length; i++) {\n            allSamplesSummary[i] = ratio(allSamplesNumerators[i], allSamplesDenominators[i]);\n        }\n\n    }","id":48327,"modified_method":"/**\n     * Calculate the five summary stats per sample\n     * @param sampleStats The Map which holds concordance values per sample\n     */\n    public void generateSampleSummaryStats( final SampleStats sampleStats ) {\n        EnumSet<Genotype.Type> allVariantGenotypes = EnumSet.of(Genotype.Type.HOM_VAR, Genotype.Type.HET);\n        EnumSet<Genotype.Type> allCalledGenotypes = EnumSet.of(Genotype.Type.HOM_VAR, Genotype.Type.HET, Genotype.Type.HOM_REF);\n        EnumSet<Genotype.Type> allGenotypes = EnumSet.allOf(Genotype.Type.class);\n\n        for( final String sample : concordanceSummary.keySet() ) {\n            if ( sample.equals(ALL_SAMPLES_KEY) ) continue;\n\n            final long[][] stats = sampleStats.concordanceStats.get(sample);\n            final double[] summary = concordanceSummary.get(sample);\n            if( stats == null ) { throw new ReviewedStingException( \"SampleStats and SampleSummaryStats contain different samples! sample = \" + sample ); }\n\n            long numer, denom;\n\n            // Summary 0: % ref called as ref\n            numer = stats[Genotype.Type.HOM_REF.ordinal()][Genotype.Type.HOM_REF.ordinal()];\n            denom = sumStatsAllPairs(stats, EnumSet.of(Genotype.Type.HOM_REF), allGenotypes);\n            updateSummaries(0, summary,  numer, denom);\n\n            // Summary 1: % het called as het\n            numer = stats[Genotype.Type.HET.ordinal()][Genotype.Type.HET.ordinal()];\n            denom = sumStatsAllPairs(stats, EnumSet.of(Genotype.Type.HET), allGenotypes);\n            updateSummaries(1, summary,  numer, denom);\n\n            // Summary 2: % homVar called as homVar\n            numer = stats[Genotype.Type.HOM_VAR.ordinal()][Genotype.Type.HOM_VAR.ordinal()];\n            denom = sumStatsAllPairs(stats, EnumSet.of(Genotype.Type.HOM_VAR), allGenotypes);\n            updateSummaries(2, summary,  numer, denom);\n\n            // Summary 3: % non-ref called as non-ref\n            // MAD: this is known as the non-reference sensitivity (# non-ref according to comp found in eval / # non-ref in comp)\n            numer = sumStatsAllPairs(stats, allVariantGenotypes, allVariantGenotypes);\n            denom = sumStatsAllPairs(stats, allVariantGenotypes, allGenotypes);\n            updateSummaries(3, summary,  numer, denom);\n\n            // Summary 4: overall genotype concordance of sites called in eval track\n            // MAD: this is the tradition genotype concordance\n            numer = sumStatsDiag(stats, allCalledGenotypes);\n            denom = sumStatsAllPairs(stats, allCalledGenotypes, allCalledGenotypes);\n            updateSummaries(4, summary,  numer, denom);\n\n            // Summary 5: overall genotype concordance of sites called non-ref in eval track\n            long homrefConcords = stats[Genotype.Type.HOM_REF.ordinal()][Genotype.Type.HOM_REF.ordinal()];\n            long diag = sumStatsDiag(stats, allVariantGenotypes);\n            long allNoHomRef = sumStatsAllPairs(stats, allCalledGenotypes, allCalledGenotypes) - homrefConcords;\n            numer = allNoHomRef - diag;\n            denom = allNoHomRef;\n            updateSummaries(5, summary,  numer, denom);\n        }\n\n        // update the final summary stats\n        final double[] allSamplesSummary = concordanceSummary.get(ALL_SAMPLES_KEY);\n        for ( int i = 0; i < allSamplesSummary.length; i++) {\n            allSamplesSummary[i] = ratio(allSamplesNumerators[i], allSamplesDenominators[i]);\n        }\n\n    }","commit_id":"ee8f2871f730b307d377e681ec04863db85693cb","url":"https://github.com/broadgsa/gatk"},{"original_method":"@Test\n    public void testCompVsEvalAC() {\n        String extraArgs = \"-T VariantEval -R \"+b36KGReference+\" -o %s -ST CpG -EV GenotypeConcordance -B:evalYRI,VCF /humgen/gsa-hpprojects/GATK/data/Validation_Data/yri.trio.gatk.ug.very.few.lines.vcf -B:compYRI,VCF /humgen/gsa-hpprojects/GATK/data/Validation_Data/yri.trio.gatk.fake.genotypes.ac.test.vcf\";\n        WalkerTestSpec spec = new WalkerTestSpec(extraArgs,1,Arrays.asList(\"3199177faa347fe3a78de17b83afd909\"));\n        executeTestParallel(\"testCompVsEvalAC\",spec);\n        //executeTest(\"testCompVsEvalAC\",spec);\n    }","id":48328,"modified_method":"@Test\n    public void testCompVsEvalAC() {\n        String extraArgs = \"-T VariantEval -R \"+b36KGReference+\" -o %s -ST CpG -EV GenotypeConcordance -B:evalYRI,VCF /humgen/gsa-hpprojects/GATK/data/Validation_Data/yri.trio.gatk.ug.very.few.lines.vcf -B:compYRI,VCF /humgen/gsa-hpprojects/GATK/data/Validation_Data/yri.trio.gatk.fake.genotypes.ac.test.vcf\";\n        WalkerTestSpec spec = new WalkerTestSpec(extraArgs,1,Arrays.asList(\"06cd5618ec23fe83a0ddb2a3e8622a16\"));\n        executeTestParallel(\"testCompVsEvalAC\",spec);\n        //executeTest(\"testCompVsEvalAC\",spec);\n    }","commit_id":"ee8f2871f730b307d377e681ec04863db85693cb","url":"https://github.com/broadgsa/gatk"},{"original_method":"@Test\n    public void testVEGenotypeConcordance() {\n        String vcfFiles[] = {\"GenotypeConcordanceEval.vcf\", \"GenotypeConcordanceEval.vcf.gz\"};\n        for (String vcfFile : vcfFiles) {\n            WalkerTestSpec spec = new WalkerTestSpec(cmdRoot + \" -ST CpG -B:eval,VCF \" + validationDataLocation + vcfFile + \" -B:comp,VCF \" + validationDataLocation + \"GenotypeConcordanceComp.vcf -noEV -EV GenotypeConcordance -o %s\",\n                    1,\n                    Arrays.asList(\"86de930ab857e27717c80b11594808f3\"));\n            executeTestParallel(\"testVEGenotypeConcordance\" + vcfFile, spec);\n            //executeTest(\"testVEGenotypeConcordance\" + vcfFile, spec);\n        }\n\n    }","id":48329,"modified_method":"@Test\n    public void testVEGenotypeConcordance() {\n        String vcfFiles[] = {\"GenotypeConcordanceEval.vcf\", \"GenotypeConcordanceEval.vcf.gz\"};\n        for (String vcfFile : vcfFiles) {\n            WalkerTestSpec spec = new WalkerTestSpec(cmdRoot + \" -ST CpG -B:eval,VCF \" + validationDataLocation + vcfFile + \" -B:comp,VCF \" + validationDataLocation + \"GenotypeConcordanceComp.vcf -noEV -EV GenotypeConcordance -o %s\",\n                    1,\n                    Arrays.asList(\"732d32997b19d9c4f0291287858c56d2\"));\n            executeTestParallel(\"testVEGenotypeConcordance\" + vcfFile, spec);\n            //executeTest(\"testVEGenotypeConcordance\" + vcfFile, spec);\n        }\n\n    }","commit_id":"ee8f2871f730b307d377e681ec04863db85693cb","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Overridden to set the IDs for the field and the div tag.\n     */\n    public void awake() {\n        super.awake();\n        divName = safeElementID() + \"_div\";\n        fieldName = safeElementID() + \"_field\";\n    }","id":48330,"modified_method":"/**\n     * Overridden to set the IDs for the field and the div tag.\n     */\n    public void awake() {\n        super.awake();\n        divName = safeElementID() + \"_div\";\n        fieldName = safeElementID() + \"_field\";\n        indicatorName = safeElementID() + \"_indicator\";\n    }","commit_id":"3a666e4beae87aefef309da4ce0cac137e42825e","url":"https://github.com/wocommunity/wonder"},{"original_method":"protected NSDictionary createAjaxOptions() {\n      NSMutableArray ajaxOptionsArray = new NSMutableArray();\n      ajaxOptionsArray.addObject(new AjaxOption(\"tokens\", AjaxOption.STRING_ARRAY));\n      ajaxOptionsArray.addObject(new AjaxOption(\"frequency\", AjaxOption.NUMBER));\n      ajaxOptionsArray.addObject(new AjaxOption(\"minChars\", AjaxOption.NUMBER));\n      ajaxOptionsArray.addObject(new AjaxOption(\"indicator\", AjaxOption.SCRIPT));\n      ajaxOptionsArray.addObject(new AjaxOption(\"updateElement\", AjaxOption.SCRIPT));\n      ajaxOptionsArray.addObject(new AjaxOption(\"afterUpdateElement\", AjaxOption.SCRIPT));\n\t  ajaxOptionsArray.addObject(new AjaxOption(\"fullSearch\", AjaxOption.BOOLEAN));\n\t  ajaxOptionsArray.addObject(new AjaxOption(\"partialSearch\", AjaxOption.BOOLEAN));\n\t  ajaxOptionsArray.addObject(new AjaxOption(\"defaultValue\", AjaxOption.STRING));\n\t  ajaxOptionsArray.addObject(new AjaxOption(\"autoSelect\", AjaxOption.BOOLEAN));\n\t  ajaxOptionsArray.addObject(new AjaxOption(\"choices\", AjaxOption.NUMBER));\n\t  ajaxOptionsArray.addObject(new AjaxOption(\"partialChars\", AjaxOption.NUMBER));\n\t  ajaxOptionsArray.addObject(new AjaxOption(\"ignoreCase\", AjaxOption.BOOLEAN));\n\t  ajaxOptionsArray.addObject(new AjaxOption(\"activateOnFocus\", AjaxOption.BOOLEAN));\n      NSMutableDictionary options = AjaxOption.createAjaxOptionsDictionary(ajaxOptionsArray, this);\n      return options;\n    }","id":48331,"modified_method":"protected NSDictionary createAjaxOptions() {\n      NSMutableArray ajaxOptionsArray = new NSMutableArray();\n      ajaxOptionsArray.addObject(new AjaxOption(\"tokens\", AjaxOption.STRING_ARRAY));\n      ajaxOptionsArray.addObject(new AjaxOption(\"frequency\", AjaxOption.NUMBER));\n      ajaxOptionsArray.addObject(new AjaxOption(\"minChars\", AjaxOption.NUMBER));\n      ajaxOptionsArray.addObject(new AjaxOption(\"indicator\", indicator(), AjaxOption.SCRIPT));\n      ajaxOptionsArray.addObject(new AjaxOption(\"updateElement\", AjaxOption.SCRIPT));\n      ajaxOptionsArray.addObject(new AjaxOption(\"afterUpdateElement\", AjaxOption.SCRIPT));\n\t  ajaxOptionsArray.addObject(new AjaxOption(\"fullSearch\", AjaxOption.BOOLEAN));\n\t  ajaxOptionsArray.addObject(new AjaxOption(\"partialSearch\", AjaxOption.BOOLEAN));\n\t  ajaxOptionsArray.addObject(new AjaxOption(\"defaultValue\", AjaxOption.STRING));\n\t  ajaxOptionsArray.addObject(new AjaxOption(\"autoSelect\", AjaxOption.BOOLEAN));\n\t  ajaxOptionsArray.addObject(new AjaxOption(\"choices\", AjaxOption.NUMBER));\n\t  ajaxOptionsArray.addObject(new AjaxOption(\"partialChars\", AjaxOption.NUMBER));\n\t  ajaxOptionsArray.addObject(new AjaxOption(\"ignoreCase\", AjaxOption.BOOLEAN));\n\t  ajaxOptionsArray.addObject(new AjaxOption(\"activateOnFocus\", AjaxOption.BOOLEAN));\n      NSMutableDictionary options = AjaxOption.createAjaxOptionsDictionary(ajaxOptionsArray, this);\n      return options;\n    }","commit_id":"3a666e4beae87aefef309da4ce0cac137e42825e","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Handles the Ajax request. Checks for the form value in the edit field,\n     * pushes it up to the parent and pulls the \"list\" binding. The parent is\n     * responsible for returning a list with some items that match the current value.\n     */\n     public WOActionResults handleRequest(WORequest request, WOContext context) {\n        // String inputString = request.contentString();\n        String fieldValue = context.request().stringFormValueForKey(fieldName);\n        setValueForBinding(fieldValue, \"value\");\n        \n        WOResponse response = AjaxUtils.createResponse(request, context);\n        response.appendContentString(\"<ul>\");\n        \n        int maxItems = maxItems();\n        int itemsCount = 0;\n        List values = (List) valueForBinding(\"list\");\n        WOElement child = _childTemplate();\n        boolean hasItem = hasBinding(\"item\");\n        for(Iterator iter = values.iterator(); iter.hasNext() && itemsCount++ < maxItems;) {\n            response.appendContentString(\"<li>\");\n            Object value = iter.next();\n            if(hasItem && child != null) {\n                setValueForBinding(value, \"item\");\n                context._setCurrentComponent(parent());\n                child.appendToResponse(response, context);\n                context._setCurrentComponent(this);\n            } else {\n            \tif(hasItem) {\n                    setValueForBinding(value, \"item\");\n             \t}\n                response.appendContentString(displayStringForValue(value));\n            }\n            response.appendContentString(\"<\/li>\");\n        }\n        response.appendContentString(\"<\/ul>\");\n        return response;\n     }","id":48332,"modified_method":"/**\n     * Handles the Ajax request. Checks for the form value in the edit field,\n     * pushes it up to the parent and pulls the \"list\" binding. The parent is\n     * responsible for returning a list with some items that match the current value.\n     */\n     public WOActionResults handleRequest(WORequest request, WOContext context) {\n        // String inputString = request.contentString();\n        String fieldValue = context.request().stringFormValueForKey(fieldName);\n        setValueForBinding(fieldValue, \"value\");\n        \n        WOResponse response = AjaxUtils.createResponse(request, context);\n        response.appendContentString(\"<ul>\");\n        \n        int maxItems = maxItems();\n        int itemsCount = 0;\n        Object values = valueForBinding(\"list\");\n        WOElement child = _childTemplate();\n        boolean hasItem = hasBinding(\"item\");\n        if (values instanceof NSArray) {\n\t        for(Enumeration valueEnum = ((NSArray)values).objectEnumerator(); valueEnum.hasMoreElements() && itemsCount++ < maxItems;) {\n\t        \tappendItemToResponse(valueEnum.nextElement(), child, hasItem, response, context);\n\t        }\n        }\n        else if (values instanceof List) {\n\t        for(Iterator iter = ((List)values).iterator(); iter.hasNext() && itemsCount++ < maxItems;) {\n\t        \tappendItemToResponse(iter.next(), child, hasItem, response, context);\n\t        }\n        }\n        response.appendContentString(\"<\/ul>\");\n        return response;\n     }","commit_id":"3a666e4beae87aefef309da4ce0cac137e42825e","url":"https://github.com/wocommunity/wonder"},{"original_method":"public boolean isEditable() {\n        boolean result = false;\n        Integer isEditable = (Integer)d2wContext().valueForKey(\"isEntityEditable\");\n        if (isEditable != null) {\n            result = isEditable.intValue() != 0;\n        }\n        Object o = object();\n        if (o instanceof ERXGuardedObjectInterface) {\n            result = result && ((ERXGuardedObjectInterface)o).canUpdate();\n        }\n        return result;\n    }","id":48333,"modified_method":"public boolean isEditable() {\n        boolean result = ERXValueUtilities.booleanValue(d2wContext().valueForKey(\"isEntityEditable\"));\n        Object o = object();\n        if (o instanceof ERXGuardedObjectInterface) {\n            result = result && ((ERXGuardedObjectInterface)o).canUpdate();\n        }\n        return result;\n    }","commit_id":"90f19b20fdfacf06d04209a163e9a1286c6d18da","url":"https://github.com/wocommunity/wonder"},{"original_method":"public boolean shouldShowSelectAllButtons() {\n        boolean result = false;\n        if (canGetValueForBinding(\"shouldShowSelectAllButtons\")) {\n            result = ((Integer)valueForBinding(\"shouldShowSelectAllButtons\")).intValue() != 0;\n        } else {\n            Integer tmp = (Integer)d2wContext().valueForKey(\"shouldShowSelectAllButtons\");\n            if (tmp != null)\n                result = tmp.intValue() != 0;\n        }\n        return result;\n    }","id":48334,"modified_method":"public boolean shouldShowSelectAllButtons() {\n        boolean result = false;\n        if (canGetValueForBinding(\"shouldShowSelectAllButtons\")) {\n            result = ERXValueUtilities.booleanValue(valueForBinding(\"shouldShowSelectAllButtons\"));\n        } else {\n            result = ERXValueUtilities.booleanValue(d2wContext().valueForKey(\"shouldShowSelectAllButtons\"));\n        }\n        return result;\n    }","commit_id":"90f19b20fdfacf06d04209a163e9a1286c6d18da","url":"https://github.com/wocommunity/wonder"},{"original_method":"public boolean editTime(){\n        if (_editTime==null) {\n            Object et=valueForBinding(\"editTime\");\n            if (et!=null) {\n                _editTime=et instanceof Integer ? (Integer)valueForBinding(\"editTime\") :\n                ((String)et).equals(\"YES\") || ((String)et).equals(\"1\") ? ERXConstant.OneInteger : ERXConstant.ZeroInteger;\n            }\n        }\n        return _editTime!=null ? _editTime.intValue()!=0 : false;\n    }","id":48335,"modified_method":"public boolean editTime(){\n        if (_editTime==null) {\n            _editTime= ERXValueUtilities.booleanValue(valueForBinding(\"editTime\")) ? ERXConstant.OneInteger : ERXConstant.ZeroInteger;\n        }\n        return _editTime!=null ? _editTime.intValue()!=0 : false;\n    }","commit_id":"90f19b20fdfacf06d04209a163e9a1286c6d18da","url":"https://github.com/wocommunity/wonder"},{"original_method":"public static void appendToResponse(WOResponse response, WOContext context, AjaxDynamicElement element, String observeFieldID, String updateContainerID, boolean fullSubmit, NSMutableDictionary options) {\n\t    WOComponent component = context.component();\n\t\tString submitButtonName = nameInContext(context, component, element);\n\t\tNSMutableDictionary observerOptions = new NSMutableDictionary();\n\t\tif (options != null) {\n\t\t\tobserverOptions.addEntriesFromDictionary(options);\n\t\t}\n\t\tAjaxSubmitButton.fillInAjaxOptions(element, component, submitButtonName, observerOptions);\n\n\t\tObject observeFieldFrequency = options.removeObjectForKey(\"observeFieldFrequency\");\n\t\tresponse.appendContentString(\"ASB.observeField(\" + AjaxUtils.quote(updateContainerID) + \", \" + AjaxUtils.quote(observeFieldID) + \", \" + observeFieldFrequency + \", \" + (!fullSubmit) + \", \");\n\t\tAjaxOptions.appendToResponse(observerOptions, response, context);\n\t\tresponse.appendContentString(\");\");\n\t}","id":48336,"modified_method":"public static void appendToResponse(WOResponse response, WOContext context, AjaxDynamicElement element, String observeFieldID, boolean observeDescendentFields, String updateContainerID, boolean fullSubmit, NSMutableDictionary options) {\n\t    WOComponent component = context.component();\n\t\tString submitButtonName = nameInContext(context, component, element);\n\t\tNSMutableDictionary observerOptions = new NSMutableDictionary();\n\t\tif (options != null) {\n\t\t\tobserverOptions.addEntriesFromDictionary(options);\n\t\t}\n\t\tAjaxSubmitButton.fillInAjaxOptions(element, component, submitButtonName, observerOptions);\n\n\t\tObject observeFieldFrequency = options.removeObjectForKey(\"observeFieldFrequency\");\n\t\tif (observeDescendentFields) {\n\t\t\tresponse.appendContentString(\"ASB.observeDescendentFields\");\n\t\t}\n\t\telse {\n\t\t\tresponse.appendContentString(\"ASB.observeField\");\n\t\t}\n\t\t\n\t\tresponse.appendContentString(\"(\" + AjaxUtils.quote(updateContainerID) + \", \" + AjaxUtils.quote(observeFieldID) + \", \" + observeFieldFrequency + \", \" + (!fullSubmit) + \", \");\n\t\tAjaxOptions.appendToResponse(observerOptions, response, context);\n\t\tresponse.appendContentString(\");\");\n\t}","commit_id":"ff3a595f7516266fb9f6ffe7e1732056493004fe","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse response, WOContext context) {\n\t\tWOComponent component = context.component();\n\t\tString observeFieldID = (String) valueForBinding(\"observeFieldID\", component);\n\t\tString updateContainerID = (String) valueForBinding(\"updateContainerID\", component);\n\t\tif (observeFieldID != null || updateContainerID != null) {\n\t\t\tAjaxUtils.appendScriptHeader(response);\n\t\t\tNSMutableDictionary options = createAjaxOptions(component);\n\t\t\tBoolean fullSubmitBoolean = (Boolean) valueForBinding(\"fullSubmit\", component);\n\t\t\tboolean fullSubmit = (fullSubmitBoolean != null && fullSubmitBoolean.booleanValue());\n\t\t\tAjaxObserveField.appendToResponse(response, context, this, observeFieldID, updateContainerID, fullSubmit, options);\n\t\t\tAjaxUtils.appendScriptFooter(response);\n\t\t}\n\t}","id":48337,"modified_method":"public void appendToResponse(WOResponse response, WOContext context) {\n\t\tsuper.appendToResponse(response, context);\n\t\t\n\t\tWOComponent component = context.component();\n\t\tString observeFieldID = (String) valueForBinding(\"observeFieldID\", component);\n\t\tString updateContainerID = (String) valueForBinding(\"updateContainerID\", component);\n\t\tNSMutableDictionary options = createAjaxOptions(component);\n\t\tboolean fullSubmit = ERXComponentUtilities.booleanValueForBinding(component, \"fullSubmit\", false);\n\t\tboolean observeFieldDescendents;\n\t\tif (observeFieldID != null) {\n\t\t\tobserveFieldDescendents = false;\n\t\t}\n\t\telse {\n\t\t\tobserveFieldDescendents = true;\n\t\t\tobserveFieldID = (String)valueForBinding(\"id\", component);\n\t\t\tif (observeFieldID == null) {\n\t\t\t\tobserveFieldID = AjaxUtils.toSafeElementID(context.elementID());\n\t\t\t}\n\t\t\tString elementName = (String)valueForBinding(\"elementName\", component);\n\t\t\tif (elementName == null) {\n\t\t\t\telementName = \"div\";\n\t\t\t}\n\t\t\tresponse.appendContentString(\"<\" + elementName + \" id = \\\"\" + observeFieldID + \"\\\">\");\n\t\t\tif (hasChildrenElements()) {\n\t\t\t\tappendChildrenToResponse(response, context);\n\t\t\t}\n\t\t\tresponse.appendContentString(\"<\/\" + elementName + \">\");\n\t\t}\n\t\tAjaxUtils.appendScriptHeader(response);\n\t\tAjaxObserveField.appendToResponse(response, context, this, observeFieldID, observeFieldDescendents, updateContainerID, fullSubmit, options);\n\t\tAjaxUtils.appendScriptFooter(response);\n\t}","commit_id":"ff3a595f7516266fb9f6ffe7e1732056493004fe","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse response, WOContext context) {\n\t\tString previousUpdateContainerID = AjaxUpdateContainer.currentUpdateContainerID();\n\t\ttry {\n\t\t\tAjaxUpdateContainer.setCurrentUpdateContainerID(_containerID(context));\n\t\t\tWOComponent component = context.component();\n\t\t\tString elementName = (String) valueForBinding(\"elementName\", \"div\", component);\n\t\t\tString id = _containerID(context);\n\t\t\tresponse.appendContentString(\"<\" + elementName + \" \");\n\t\t\tappendTagAttributeToResponse(response, \"id\", id);\n\t\t\tappendTagAttributeToResponse(response, \"class\", valueForBinding(\"class\", component));\n\t\t\tappendTagAttributeToResponse(response, \"style\", valueForBinding(\"style\", component));\t\t\n\t\t\tappendTagAttributeToResponse(response, \"updateUrl\", AjaxUtils.ajaxComponentActionUrl(context));\n\t\t\t// appendTagAttributeToResponse(response, \"woElementID\", context.elementID());\n\t\t\tresponse.appendContentString(\">\");\n\t\t\tif (hasChildrenElements()) {\n\t\t\t\tappendChildrenToResponse(response, context);\n\t\t\t}\n\t\t\tresponse.appendContentString(\"<\/\" + elementName + \">\");\n\t\n\t\t\tsuper.appendToResponse(response, context);\n\t\n\t\t\tNSDictionary options = createAjaxOptions(component);\n\t\n\t\t\tObject frequency = valueForBinding(\"frequency\", component);\n\t\t\tString observeFieldID = (String) valueForBinding(\"observeFieldID\", component);\n\t\n\t\t\tboolean skipFunction = frequency == null && observeFieldID == null && booleanValueForBinding(\"skipFunction\", false, component);\n\t\t\tif (!skipFunction) {\n\t\t\t\tAjaxUtils.appendScriptHeader(response);\n\t\n\t\t\t\tif (frequency != null) {\n\t\t\t\t\tString type = \"PeriodicalUpdater\";\n\t\t\t\t\tboolean stopped = false;\n\t\t\t\t\tif (associations().objectForKey(\"stopped\") != null) {\n\t\t\t\t\t\tstopped = booleanValueForBinding(\"stopped\", false, component);\n\t\t\t\t\t\tif (stopped) {\n\t\t\t\t\t\t\ttype = \"StoppedPeriodicalUpdater\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttype = \"ActivePeriodicalUpdater\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresponse.appendContentString(id + \"PeriodicalUpdater = new Ajax.\" + type + \"('\" + id + \"', $('\" + id + \"').getAttribute('updateUrl'), \");\n\t\t\t\t\tAjaxOptions.appendToResponse(options, response, context);\n\t\t\t\t\tresponse.appendContentString(\");\");\n\t\t\t\t\tresponse.appendContentString(id + \"Stop = function() { \" + id + \"PeriodicalUpdater.stop() };\");\n\t\t\t\t\tif(stopped) {\n\t\t\t\t\t\tresponse.appendContentString(id + \"Stop();\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (observeFieldID != null) {\n\t\t\t\t\tboolean fullSubmit = booleanValueForBinding(\"fullSubmit\", false, component);\n\t\t\t\t\tAjaxObserveField.appendToResponse(response, context, this, observeFieldID, id, fullSubmit, createObserveFieldOptions(component));\n\t\t\t\t}\n\t\n\t//\t\t\tresponse.appendContentString(id + \"Update = function() { new Ajax.Updater('\" + id + \"', $('\" + id + \"').getAttribute('updateUrl'), \");\n\t//\t\t\tAjaxOptions.appendToResponse(AjaxUpdateContainer.removeDefaultOptions(options), response, context);\n\t//\t\t\tresponse.appendContentString(\"); }\");\n\t\t\t\tresponse.appendContentString(\"AUC.register('\" + id + \"'\");\n\t\t\t\tNSDictionary nonDefaultOptions = AjaxUpdateContainer.removeDefaultOptions(options);\n\t\t\t\tif (nonDefaultOptions.count()>0) {\n\t\t\t\t\tresponse.appendContentString(\", \");\n\t\t\t\t\tAjaxOptions.appendToResponse(nonDefaultOptions, response, context);\n\t\t\t\t}\n\t\t\t\tresponse.appendContentString(\");\");\n\t\n\t\t\t\tAjaxUtils.appendScriptFooter(response);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tAjaxUpdateContainer.setCurrentUpdateContainerID(previousUpdateContainerID);\n\t\t}\n\t}","id":48338,"modified_method":"public void appendToResponse(WOResponse response, WOContext context) {\n\t\tString previousUpdateContainerID = AjaxUpdateContainer.currentUpdateContainerID();\n\t\ttry {\n\t\t\tAjaxUpdateContainer.setCurrentUpdateContainerID(_containerID(context));\n\t\t\tWOComponent component = context.component();\n\t\t\tString elementName = (String) valueForBinding(\"elementName\", \"div\", component);\n\t\t\tString id = _containerID(context);\n\t\t\tresponse.appendContentString(\"<\" + elementName + \" \");\n\t\t\tappendTagAttributeToResponse(response, \"id\", id);\n\t\t\tappendTagAttributeToResponse(response, \"class\", valueForBinding(\"class\", component));\n\t\t\tappendTagAttributeToResponse(response, \"style\", valueForBinding(\"style\", component));\t\t\n\t\t\tappendTagAttributeToResponse(response, \"updateUrl\", AjaxUtils.ajaxComponentActionUrl(context));\n\t\t\t// appendTagAttributeToResponse(response, \"woElementID\", context.elementID());\n\t\t\tresponse.appendContentString(\">\");\n\t\t\tif (hasChildrenElements()) {\n\t\t\t\tappendChildrenToResponse(response, context);\n\t\t\t}\n\t\t\tresponse.appendContentString(\"<\/\" + elementName + \">\");\n\t\n\t\t\tsuper.appendToResponse(response, context);\n\t\n\t\t\tNSDictionary options = createAjaxOptions(component);\n\t\n\t\t\tObject frequency = valueForBinding(\"frequency\", component);\n\t\t\tString observeFieldID = (String) valueForBinding(\"observeFieldID\", component);\n\t\n\t\t\tboolean skipFunction = frequency == null && observeFieldID == null && booleanValueForBinding(\"skipFunction\", false, component);\n\t\t\tif (!skipFunction) {\n\t\t\t\tAjaxUtils.appendScriptHeader(response);\n\t\n\t\t\t\tif (frequency != null) {\n\t\t\t\t\tString type = \"PeriodicalUpdater\";\n\t\t\t\t\tboolean stopped = false;\n\t\t\t\t\tif (associations().objectForKey(\"stopped\") != null) {\n\t\t\t\t\t\tstopped = booleanValueForBinding(\"stopped\", false, component);\n\t\t\t\t\t\tif (stopped) {\n\t\t\t\t\t\t\ttype = \"StoppedPeriodicalUpdater\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttype = \"ActivePeriodicalUpdater\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresponse.appendContentString(id + \"PeriodicalUpdater = new Ajax.\" + type + \"('\" + id + \"', $('\" + id + \"').getAttribute('updateUrl'), \");\n\t\t\t\t\tAjaxOptions.appendToResponse(options, response, context);\n\t\t\t\t\tresponse.appendContentString(\");\");\n\t\t\t\t\tresponse.appendContentString(id + \"Stop = function() { \" + id + \"PeriodicalUpdater.stop() };\");\n\t\t\t\t\tif(stopped) {\n\t\t\t\t\t\tresponse.appendContentString(id + \"Stop();\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (observeFieldID != null) {\n\t\t\t\t\tboolean fullSubmit = booleanValueForBinding(\"fullSubmit\", false, component);\n\t\t\t\t\tAjaxObserveField.appendToResponse(response, context, this, observeFieldID, false, id, fullSubmit, createObserveFieldOptions(component));\n\t\t\t\t}\n\t\n\t//\t\t\tresponse.appendContentString(id + \"Update = function() { new Ajax.Updater('\" + id + \"', $('\" + id + \"').getAttribute('updateUrl'), \");\n\t//\t\t\tAjaxOptions.appendToResponse(AjaxUpdateContainer.removeDefaultOptions(options), response, context);\n\t//\t\t\tresponse.appendContentString(\"); }\");\n\t\t\t\tresponse.appendContentString(\"AUC.register('\" + id + \"'\");\n\t\t\t\tNSDictionary nonDefaultOptions = AjaxUpdateContainer.removeDefaultOptions(options);\n\t\t\t\tif (nonDefaultOptions.count()>0) {\n\t\t\t\t\tresponse.appendContentString(\", \");\n\t\t\t\t\tAjaxOptions.appendToResponse(nonDefaultOptions, response, context);\n\t\t\t\t}\n\t\t\t\tresponse.appendContentString(\");\");\n\t\n\t\t\t\tAjaxUtils.appendScriptFooter(response);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tAjaxUpdateContainer.setCurrentUpdateContainerID(previousUpdateContainerID);\n\t\t}\n\t}","commit_id":"ff3a595f7516266fb9f6ffe7e1732056493004fe","url":"https://github.com/wocommunity/wonder"},{"original_method":"public ToggleExample(WOContext context) {\n\t\tsuper(context);\n\t\t_text = \"This text should not change!\";\n\t}","id":48339,"modified_method":"public ToggleExample(WOContext context) {\n\t\tsuper(context);\n\t\t_text = \"This text should not change!\";\n\t\t_names = new NSMutableArray<String>(new String[] { \"Name 1\", \"Name 2\", \"Name 3\", \"Name 4\" });\n\t\t_selectedNames = new NSMutableSet<String>();\n\t}","commit_id":"ff3a595f7516266fb9f6ffe7e1732056493004fe","url":"https://github.com/wocommunity/wonder"},{"original_method":"public WOActionResults handleRequest(WORequest request, WOContext context) {\n\t\treturn null;\n\t}","id":48340,"modified_method":"public WOActionResults handleRequest(WORequest request, WOContext context) {\n\t\tvalueForBinding(\"action\");\n\t\treturn null;\n\t}","commit_id":"4d63242075366569f84f07d32108b7a4ac974aa3","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Generate a link that opens the indicated dialog.\n\t *\n\t * @see er.ajax.AjaxComponent#appendToResponse(com.webobjects.appserver.WOResponse, com.webobjects.appserver.WOContext)\n\t */\n\tpublic void appendToResponse(WOResponse response, WOContext context) {\n\t\tresponse.appendContentString(\"<a href=\\\"javascript:void(0)\\\"\");\n\t\tappendTagAttributeToResponse(response, \"id\", id());\n\t\tappendTagAttributeToResponse(response, \"class\", valueForBinding(\"class\", null));\n\t\tappendTagAttributeToResponse(response, \"style\", valueForBinding(\"style\", null));\n\t\tappendTagAttributeToResponse(response, \"title\", valueForBinding(\"linkTitle\", null));\n\t\t\n\t\t// onclick calls the script that opens the AjaxModalDialog\n\t\tresponse.appendContentString(\" onclick=\\\"\");\n\t\tresponse.appendContentString(AjaxModalDialog.openDialogFunctionName(modalDialogId()));\n\t\t\n\t\t// Override for dialog name\n\t\tresponse.appendContentString(\"(\");\t\n\t\tif (hasBinding(\"title\")) {\n\t\t\tresponse.appendContentString(\"'\");\t\n\t\t\tresponse.appendContentString((String) valueForBinding(\"title\"));\n\t\t\tresponse.appendContentString(\"'\");\t\n\t\t}\t\t\n\t\tresponse.appendContentString(\"); return false;\\\" >\");\t\n\n\t\tif (hasBinding(\"label\")) {\n\t\t\tresponse.appendContentString((String) valueForBinding(\"label\"));\n\t\t} else {\n\t\t\t// This will append the contents inside of the link\n\t\t\tsuper.appendToResponse(response, context);\n\t\t}\n\t\tresponse.appendContentString(\"<\/a>\");\n\t}","id":48341,"modified_method":"/**\n\t * Generate a link that opens the indicated dialog.\n\t *\n\t * @see er.ajax.AjaxComponent#appendToResponse(com.webobjects.appserver.WOResponse, com.webobjects.appserver.WOContext)\n\t */\n\tpublic void appendToResponse(WOResponse response, WOContext context) {\n\t\tif( ! booleanValueForBinding(\"enabled\", true)) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tresponse.appendContentString(\"<a href=\\\"javascript:void(0)\\\"\");\n\t\tappendTagAttributeToResponse(response, \"id\", id());\n\t\tappendTagAttributeToResponse(response, \"class\", valueForBinding(\"class\", null));\n\t\tappendTagAttributeToResponse(response, \"style\", valueForBinding(\"style\", null));\n\t\tappendTagAttributeToResponse(response, \"title\", valueForBinding(\"linkTitle\", null));\n\t\t\n\t\t// onclick calls the script that opens the AjaxModalDialog\n\t\tresponse.appendContentString(\" onclick=\\\"\");\n\t\t\n\t\tif (hasBinding(\"action\")) {\n\t\t\tresponse.appendContentString(\"new Ajax.Request('\");\n\t\t\tresponse.appendContentString(AjaxUtils.ajaxComponentActionUrl(context()));\n\t\t\tresponse.appendContentString(\"',  {asynchronous:false, evalScripts:false});\");\n\t\t}\n\n\t\tresponse.appendContentString(AjaxModalDialog.openDialogFunctionName(modalDialogId()));\n\t\t\n\t\t// Override for dialog name\n\t\tresponse.appendContentString(\"(\");\t\n\t\tif (hasBinding(\"title\")) {\t\n\t\t\tresponse.appendContentString(AjaxValue.javaScriptEscaped(valueForBinding(\"title\")));\n\t\t}\t\t\n\t\tresponse.appendContentString(\"); return false;\\\" >\");\t\n\n\t\tif (hasBinding(\"label\")) {\n\t\t\tresponse.appendContentString((String) valueForBinding(\"label\"));\n\t\t} else {\n\t\t\t// This will append the contents inside of the link\n\t\t\tsuper.appendToResponse(response, context);\n\t\t}\n\t\tresponse.appendContentString(\"<\/a>\");\n\t}","commit_id":"4d63242075366569f84f07d32108b7a4ac974aa3","url":"https://github.com/wocommunity/wonder"},{"original_method":"public ModalDialogExample(WOContext context) {\n        super(context);\n        \n        // Fetch/create some sample data to edit\n        EOEditingContext ec = session().defaultEditingContext();\n        \n        for (int i = 0; i < companyNames.count(); i++) {\n\t\t\tString name = (String) companyNames.objectAtIndex(i);\n\t        Company company = Company.fetchCompany(ec, Company.NAME_KEY, name);\n\t        if (company == null) {\n\t        \tcompany = Company.createCompany(ec, name);\n\t        }\n\t        ((NSMutableArray)companies).addObject(company);\n\t\t}\n        ec.saveChanges();\n        \n        employee = Employee.fetchEmployee(ec, ERXQ.and(ERXQ.equals(Employee.FIRST_NAME_KEY, \"Bill\"),\n        \t\t\t\t\t\t\t\t\t\t       ERXQ.equals(Employee.LAST_NAME_KEY, \"Wratchit\")));\n        if (employee == null) {\n            Company company = Company.fetchCompany(ec, Company.NAME_KEY, companyNames.objectAtIndex(0));\n            employee = Employee.createEmployee(ec, \"Bill\", \"Wratchit\", company);\n        }\n        ec.saveChanges();\n\t}","id":48342,"modified_method":"public ModalDialogExample(WOContext context) {\n        super(context);\n        \n        // Fetch/create some sample data to edit\n        EOEditingContext ec = session().defaultEditingContext();\n        \n        for (int i = 0; i < companyNames.count(); i++) {\n\t\t\tString name = (String) companyNames.objectAtIndex(i);\n\t        Company company = Company.fetchCompany(ec, Company.NAME_KEY, name);\n\t        if (company == null) {\n\t        \tcompany = Company.createCompany(ec, name);\n\t        }\n\t        ((NSMutableArray)companies).addObject(company);\n\t\t}\n        ec.saveChanges();\n        \n        employee = Employee.fetchEmployee(ec, ERXQ.and(ERXQ.equals(Employee.FIRST_NAME_KEY, \"Bill\"),\n        \t\t\t\t\t\t\t\t\t\t       ERXQ.equals(Employee.LAST_NAME_KEY, \"Wratchit\")));\n        if (employee == null) {\n            Company company = Company.fetchCompany(ec, Company.NAME_KEY, companyNames.objectAtIndex(2));\n            employee = Employee.createEmployee(ec, \"Bill\", \"Wratchit\", company);\n        }\n        ec.saveChanges();\n\t}","commit_id":"4d63242075366569f84f07d32108b7a4ac974aa3","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Updates the editor forms when the dialog is closed.\n     */\n    public void updatePage() {\n\t\tif (AjaxRequestHandler.AjaxRequestHandlerKey.equals(context().request().requestHandlerKey())) {\n\t    \tAjaxUtils.javascriptResponse(\"UIUpdater1Update(); UIUpdater2Update();\", context());\n\t\t}\n    }","id":48343,"modified_method":"/**\n     * Updates the editor forms when the dialog is closed.\n     */\n    public void updatePage() {\n\t\tif (AjaxRequestHandler.AjaxRequestHandlerKey.equals(context().request().requestHandlerKey())) {\n\t    \tAjaxUtils.javascriptResponse(\"UIUpdater1Update(); UIUpdater2Update();  CompanyListUpdaterUpdate();\", context());\n\t\t}\n    }","commit_id":"4d63242075366569f84f07d32108b7a4ac974aa3","url":"https://github.com/wocommunity/wonder"},{"original_method":"public WOActionResults startEditing() {\n\t\tif (canEdit()) {\n\t\t\tsetEditing(true);\n\t\t\tWOActionResults results = (WOActionResults) valueForBinding(\"editAction\");\n\t\t}\n\t\t// ignore results\n\t\treturn null;\n\t}","id":48344,"modified_method":"public WOActionResults startEditing() {\n\t\tif (canEdit()) {\n\t\t\tsetEditing(true);\n\t\t\tvalueForBinding(\"editAction\");\t// ignore results\n\t\t}\n\t\treturn null;\n\t}","commit_id":"79f8db9589d6aefb1ee35f5ba8cd07da173ac46c","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void setNumberOfObjectsPerBatch(Number newValue) {\n        if (newValue!=null) {\n            if (displayGroup()!=null) {\n                cat.debug(\"Setting db # of objects per batch to \"+newValue);\n                displayGroup().setNumberOfObjectsPerBatch(newValue.intValue());\n\n                if(cat.isDebugEnabled()) cat.debug(\"The batch index is being set to : \"+ 1);\n                displayGroup().setCurrentBatchIndex(1);\n            }\n            D2WContext context=(D2WContext)valueForBinding(\"d2wContext\");\n            if (context!=null) {\n                NSNotificationCenter.defaultCenter().postNotification(\"BatchSizeChanged\",\n                                                                      ERXConstant.integerForInt(newValue.intValue()),\n                                                                      new NSDictionary(context,\"d2wContext\"));\n            }\n        }\n    }","id":48345,"modified_method":"public void setNumberOfObjectsPerBatch(Number newValue) {\n        if (newValue!=null) {\n            if (displayGroup()!=null) {\n                cat.debug(\"Setting db # of objects per batch to \"+newValue);\n                displayGroup().setNumberOfObjectsPerBatch(newValue.intValue());\n\n                if(cat.isDebugEnabled()) cat.debug(\"The batch index is being set to : \"+ 1);\n                displayGroup().setCurrentBatchIndex(1);\n            }\n            Object context=valueForBinding(\"d2wContext\");\n            if (context!=null) {\n                NSNotificationCenter.defaultCenter().postNotification(\"BatchSizeChanged\",\n                                                                      ERXConstant.integerForInt(newValue.intValue()),\n                                                                      new NSDictionary(context,\"d2wContext\"));\n            }\n        }\n    }","commit_id":"e0b4786411b7029406b16362552d271119b31b25","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse response, WOContext context) {\n        WOComponent component = context.component();\n        String divID = (String)valueForBinding(\"id\", component);\n        if (divID == null) {\n        \tdivID=ERXWOContext.safeIdentifierName(context, false);\n        }\n        response.appendContentString(\"<a\");\n        String href = (String) valueForBinding(\"href\", component);\n        if(href == null) {\n            if(associations().objectForKey(\"action\") != null) {\n            \t// don't use ajax request handler here\n                href = context.componentActionURL();\n            }\n            else if (booleanValueForBinding(\"ajax\", false, component)) {\n            \tif (valueForBinding(\"id\", component) == null) {\n    \t\t\t\tthrow new IllegalArgumentException(\"If ajax = 'true', you must also bind 'id'.\");\n            \t}\n            \thref = AjaxUtils.ajaxComponentActionUrl(context);\n            }\n            if(href == null) {\n                href = \"#\" + divID;\n            }\n        }\n        appendTagAttributeToResponse(response, \"href\", href);\n\t\tString relAttributeValue = \"ibox\";\n\t\tObject height = valueForBinding(\"height\", component);\n\t\tObject width = valueForBinding(\"width\", component);\n\t\tObject closeLabel = valueForBinding(\"closeLabel\", component);\n\t\tif (height != null) {\n\t\t\trelAttributeValue += \"&height=\" + height;\n\t\t}\n\t\tif (width != null) {\n\t\t\trelAttributeValue += \"&width=\" + width;\n\t\t}\n\t\tif (closeLabel != null) {\n\t\t\trelAttributeValue += \"&closeLabel=\" + ERXStringUtilities.urlEncode(closeLabel.toString());\n\t\t}\n\t\tresponse._appendTagAttributeAndValue(\"rel\", relAttributeValue, false); // don't escape the ampersands\n        appendTagAttributeToResponse(response, \"title\", valueForBinding(\"title\", component));\n        appendTagAttributeToResponse(response, \"value\", valueForBinding(\"value\", component));\n        appendTagAttributeToResponse(response, \"class\", valueForBinding(\"class\", component));\n        appendTagAttributeToResponse(response, \"style\", valueForBinding(\"style\", component));\n        appendTagAttributeToResponse(response, \"id\", valueForBinding(\"id\", component));\n        response.appendContentString(\">\");\n        response.appendContentString((String) valueForBinding(\"label\",component));\n        response.appendContentString(\"<\/a>\");\n        if(href.startsWith(\"#\")) {\n        \tresponse.appendContentString(\"<div\");\n\n        \tappendTagAttributeToResponse(response, \"id\", divID);\n        \tappendTagAttributeToResponse(response, \"style\", \"display:none;\");\n        \tresponse.appendContentString(\">\");\n        \tappendChildrenToResponse(response, context);\n        \tresponse.appendContentString(\"<\/div>\");\n        }\n        super.appendToResponse(response, context);\n    }","id":48346,"modified_method":"public void appendToResponse(WOResponse response, WOContext context) {\n        WOComponent component = context.component();\n        String divID = (String)valueForBinding(\"id\", component);\n        if (divID == null) {\n        \tdivID=ERXWOContext.safeIdentifierName(context, false);\n        }\n        response.appendContentString(\"<a\");\n        String href = (String) valueForBinding(\"href\", component);\n        if(href == null) {\n            if(associations().objectForKey(\"action\") != null) {\n            \t// don't use ajax request handler here\n                href = context.componentActionURL();\n            }\n            else if (booleanValueForBinding(\"ajax\", false, component)) {\n            \tif (valueForBinding(\"id\", component) == null) {\n    \t\t\t\tthrow new IllegalArgumentException(\"If ajax = 'true', you must also bind 'id'.\");\n            \t}\n            \thref = AjaxUtils.ajaxComponentActionUrl(context);\n            }\n            if(href == null) {\n                href = \"#\" + divID;\n            }\n        }\n        appendTagAttributeToResponse(response, \"href\", href);\n\t\tString relAttributeValue = \"ibox\";\n\t\tObject height = valueForBinding(\"height\", component);\n\t\tObject width = valueForBinding(\"width\", component);\n\t\tObject closeLabel = valueForBinding(\"closeLabel\", component);\n\t\tif (height != null) {\n\t\t\trelAttributeValue += \"&height=\" + height;\n\t\t}\n\t\tif (width != null) {\n\t\t\trelAttributeValue += \"&width=\" + width;\n\t\t}\n\t\tif (closeLabel != null) {\n\t\t\trelAttributeValue += \"&closeLabel=\" + ERXStringUtilities.urlEncode(closeLabel.toString());\n\t\t}\n\t\tresponse._appendTagAttributeAndValue(\"rel\", relAttributeValue, false); // don't escape the ampersands\n        appendTagAttributeToResponse(response, \"title\", valueForBinding(\"title\", component));\n        appendTagAttributeToResponse(response, \"value\", valueForBinding(\"value\", component));\n        appendTagAttributeToResponse(response, \"class\", valueForBinding(\"class\", component));\n        appendTagAttributeToResponse(response, \"style\", valueForBinding(\"style\", component));\n        appendTagAttributeToResponse(response, \"id\", valueForBinding(\"id\", component));\n        response.appendContentString(\">\");\n        response.appendContentString(valueForBinding(\"label\", \"\", component).toString());\n        response.appendContentString(\"<\/a>\");\n        if(href.startsWith(\"#\")) {\n        \tresponse.appendContentString(\"<div\");\n\n        \tappendTagAttributeToResponse(response, \"id\", divID);\n        \tappendTagAttributeToResponse(response, \"style\", \"display:none;\");\n        \tresponse.appendContentString(\">\");\n        \tappendChildrenToResponse(response, context);\n        \tresponse.appendContentString(\"<\/div>\");\n        }\n        super.appendToResponse(response, context);\n    }","commit_id":"8b371546f67a73dfcf5c5dffed94b0f8f9478e24","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse response, WOContext context) {\n    WOComponent component = context.component();\n\n    String functionName = (String)valueForBinding(\"functionName\", null, component);\n    String formName = (String)valueForBinding(\"formName\", component);\n    boolean showUI = (functionName == null || booleanValueForBinding(\"showUI\", false, component));\n    boolean showButton = showUI && booleanValueForBinding(\"button\", true, component);\n    String formReference;\n    if ((!showButton || functionName != null) && formName == null) {\n      formName = ERXWOForm.formName(context, null);\n      if (formName == null) {\n        throw new WODynamicElementCreationException(\"If button = false or functionName is not null, the containing form must have an explicit name.\");\n      }\n    }\n    if (formName == null) {\n      formReference = \"this.form\";\n    }\n    else {\n      formReference = \"document.\" + formName;\n    }\n    \n    StringBuffer onClickBuffer = new StringBuffer();\n\n\tString onClickBefore = (String)valueForBinding(\"onClickBefore\", component);\n\tif (onClickBefore != null) {\n\t\tonClickBuffer.append(\"if (\");\n\t\tonClickBuffer.append(onClickBefore);\n\t\tonClickBuffer.append(\") {\");\n\t}\n\t\n\tString updateContainerID = AjaxUpdateContainer.updateContainerID(this, component); \n\t\n\t// PROTOTYPE EFFECTS\n\tString beforeEffect = (String) valueForBinding(\"beforeEffect\", component);\n\tif (beforeEffect != null) {\n\t\tonClickBuffer.append(\"new \");\n\t\tonClickBuffer.append(AjaxUpdateLink.fullEffectName(beforeEffect));\n\t\tonClickBuffer.append(\"('\");\n\t\t\n\t\tString beforeEffectID = (String) valueForBinding(\"beforeEffectID\", component);\n\t\tif (beforeEffectID == null) {\n\t\t\tbeforeEffectID = AjaxUpdateContainer.currentUpdateContainerID();\n\t\t\tif (beforeEffectID == null) {\n\t\t\t\tbeforeEffectID = updateContainerID;\n\t\t\t}\n\t\t}\n\t\tonClickBuffer.append(beforeEffectID);\n\t\t\n\t\tonClickBuffer.append(\"', { \");\n\t\t\n\t\tString beforeEffectDuration = (String) valueForBinding(\"beforeEffectDuration\", component);\n\t\tif (beforeEffectDuration != null) {\n\t\t\tonClickBuffer.append(\"duration: \");\n\t\t\tonClickBuffer.append(beforeEffectDuration);\n\t\t\tonClickBuffer.append(\", \");\n\t\t}\n\t\t\n\t\tonClickBuffer.append(\"queue:'end', afterFinish: function() {\");\n\t}\n\n\tif (updateContainerID != null) {\n\t\tonClickBuffer.append(\"ASB.update('\" + updateContainerID + \"',\");\n\t}\n\telse {\n\t\tonClickBuffer.append(\"ASB.request(\");\n\t}\n\tonClickBuffer.append(formReference);\n\tif (valueForBinding(\"functionName\", component) != null) {\n\t\tonClickBuffer.append(\",additionalParams\");\n\t}\n\telse {\n\t\tonClickBuffer.append(\",null\");\n\t}\n\tonClickBuffer.append(\",\");\n\t\n    NSMutableDictionary options = createAjaxOptions(component);\n\t\n\tAjaxUpdateLink.addEffect(options, (String) valueForBinding(\"effect\", component), updateContainerID, (String) valueForBinding(\"effectDuration\", component));\n\tString afterEffectID = (String) valueForBinding(\"afterEffectID\", component);\n\tif (afterEffectID == null) {\n\t\tafterEffectID = AjaxUpdateContainer.currentUpdateContainerID();\n\t\tif (afterEffectID == null) {\n\t\t\tafterEffectID = updateContainerID;\n\t\t}\n\t}\n\tAjaxUpdateLink.addEffect(options, (String) valueForBinding(\"afterEffect\", component), afterEffectID, (String) valueForBinding(\"afterEffectDuration\", component));\n\t\n    AjaxOptions.appendToBuffer(options, onClickBuffer, context);\n    onClickBuffer.append(\")\");\n    String onClick = (String) valueForBinding(\"onClick\", component);\n    if (onClick != null) {\n      onClickBuffer.append(\";\");\n      onClickBuffer.append(onClick);\n    }\n\t\n\tif (beforeEffect != null) {\n\t\tonClickBuffer.append(\"}});\");\n\t}\n\n    if (onClickBefore != null) {\n    \tonClickBuffer.append(\"}\");\n    }\n\n    \n    if (functionName != null) {\n      \tAjaxUtils.appendScriptHeader(response);\n    \tresponse.appendContentString(functionName + \" = function(additionalParams) { \" + onClickBuffer + \" }\\n\");\n    \tAjaxUtils.appendScriptFooter(response);\n    }\n    if (showUI) {\n    \tboolean disabled = disabledInComponent(component);\n    \tString elementName = (String) valueForBinding(\"elementName\", \"a\", component);\n    \tboolean useButtonTag = ERXProperties.booleanForKeyWithDefault(\"er.extensions.foundation.ERXPatcher.DynamicElementsPatches.SubmitButton.useButtonTag\", false);\n    \t\n\t    if (showButton) {\n\t      elementName = useButtonTag ? \"button\" : \"input\";\n\t      response.appendContentString(\"<\" + elementName + \" \");\n\t      appendTagAttributeToResponse(response, \"type\", \"button\");\n\t      String name = nameInContext(context, component);\n\t      appendTagAttributeToResponse(response, \"name\", name);\n\t      appendTagAttributeToResponse(response, \"value\", valueForBinding(\"value\", component));\n\t      String accesskey = (String) valueForBinding(\"accesskey\", component);\n\t      if(accesskey != null)\n\t    \t  appendTagAttributeToResponse(response, \"accesskey\", accesskey);\n\t      if (disabled) {\n\t    \t  appendTagAttributeToResponse(response, \"disabled\", \"disabled\");\n\t      }\n\t    }\n\t    else {\n\t\t\tboolean isATag = \"a\".equalsIgnoreCase(elementName);\n\t\t\tif (isATag) {\n\t\t\t\tresponse.appendContentString(\"<a href = \\\"javascript:void(0)\\\" \");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresponse.appendContentString(\"<\" + elementName + \" \");\n\t\t\t}\n\t    }\n\t    appendTagAttributeToResponse(response, \"class\", valueForBinding(\"class\", component));\n\t    appendTagAttributeToResponse(response, \"style\", valueForBinding(\"style\", component));\n\t    appendTagAttributeToResponse(response, \"id\", valueForBinding(\"id\", component));\n    \tif (functionName == null) {\n    \t\tappendTagAttributeToResponse(response, \"onclick\", onClickBuffer.toString());\n    \t}\n    \telse {\n    \t\tappendTagAttributeToResponse(response, \"onclick\", functionName + \"()\");\n    \t}\n\t    if (showButton && !useButtonTag) {\n\t      response.appendContentString(\" />\");\n\t    }\n\t    else {\n\t      response.appendContentString(\">\");\n\t      if (hasChildrenElements()) {\n\t        appendChildrenToResponse(response, context);\n\t      }\n\t      response.appendContentString(\"<\/\" + elementName + \">\");\n\t    }\n    }\n    super.appendToResponse(response, context);\n  }","id":48347,"modified_method":"public void appendToResponse(WOResponse response, WOContext context) {\n    WOComponent component = context.component();\n\n    String functionName = (String)valueForBinding(\"functionName\", null, component);\n    String formName = (String)valueForBinding(\"formName\", component);\n    boolean showUI = (functionName == null || booleanValueForBinding(\"showUI\", false, component));\n    boolean showButton = showUI && booleanValueForBinding(\"button\", true, component);\n    String formReference;\n    if ((!showButton || functionName != null) && formName == null) {\n      formName = ERXWOForm.formName(context, null);\n      if (formName == null) {\n        throw new WODynamicElementCreationException(\"If button = false or functionName is not null, the containing form must have an explicit name.\");\n      }\n    }\n    if (formName == null) {\n      formReference = \"this.form\";\n    }\n    else {\n      formReference = \"document.\" + formName;\n    }\n    \n    StringBuffer onClickBuffer = new StringBuffer();\n\n\tString onClickBefore = (String)valueForBinding(\"onClickBefore\", component);\n\tif (onClickBefore != null) {\n\t\tonClickBuffer.append(\"if (\");\n\t\tonClickBuffer.append(onClickBefore);\n\t\tonClickBuffer.append(\") {\");\n\t}\n\t\n\tString updateContainerID = AjaxUpdateContainer.updateContainerID(this, component); \n\t\n\t// PROTOTYPE EFFECTS\n\tString beforeEffect = (String) valueForBinding(\"beforeEffect\", component);\n\tif (beforeEffect != null) {\n\t\tonClickBuffer.append(\"new \");\n\t\tonClickBuffer.append(AjaxUpdateLink.fullEffectName(beforeEffect));\n\t\tonClickBuffer.append(\"('\");\n\t\t\n\t\tString beforeEffectID = (String) valueForBinding(\"beforeEffectID\", component);\n\t\tif (beforeEffectID == null) {\n\t\t\tbeforeEffectID = AjaxUpdateContainer.currentUpdateContainerID();\n\t\t\tif (beforeEffectID == null) {\n\t\t\t\tbeforeEffectID = updateContainerID;\n\t\t\t}\n\t\t}\n\t\tonClickBuffer.append(beforeEffectID);\n\t\t\n\t\tonClickBuffer.append(\"', { \");\n\t\t\n\t\tString beforeEffectDuration = (String) valueForBinding(\"beforeEffectDuration\", component);\n\t\tif (beforeEffectDuration != null) {\n\t\t\tonClickBuffer.append(\"duration: \");\n\t\t\tonClickBuffer.append(beforeEffectDuration);\n\t\t\tonClickBuffer.append(\", \");\n\t\t}\n\t\t\n\t\tonClickBuffer.append(\"queue:'end', afterFinish: function() {\");\n\t}\n\n\tif (updateContainerID != null) {\n\t\tonClickBuffer.append(\"ASB.update('\" + updateContainerID + \"',\");\n\t}\n\telse {\n\t\tonClickBuffer.append(\"ASB.request(\");\n\t}\n\tonClickBuffer.append(formReference);\n\tif (valueForBinding(\"functionName\", component) != null) {\n\t\tonClickBuffer.append(\",additionalParams\");\n\t}\n\telse {\n\t\tonClickBuffer.append(\",null\");\n\t}\n\tonClickBuffer.append(\",\");\n\t\n    NSMutableDictionary options = createAjaxOptions(component);\n\t\n\tAjaxUpdateLink.addEffect(options, (String) valueForBinding(\"effect\", component), updateContainerID, (String) valueForBinding(\"effectDuration\", component));\n\tString afterEffectID = (String) valueForBinding(\"afterEffectID\", component);\n\tif (afterEffectID == null) {\n\t\tafterEffectID = AjaxUpdateContainer.currentUpdateContainerID();\n\t\tif (afterEffectID == null) {\n\t\t\tafterEffectID = updateContainerID;\n\t\t}\n\t}\n\tAjaxUpdateLink.addEffect(options, (String) valueForBinding(\"afterEffect\", component), afterEffectID, (String) valueForBinding(\"afterEffectDuration\", component));\n\t\n    AjaxOptions.appendToBuffer(options, onClickBuffer, context);\n    onClickBuffer.append(\")\");\n    String onClick = (String) valueForBinding(\"onClick\", component);\n    if (onClick != null) {\n      onClickBuffer.append(\";\");\n      onClickBuffer.append(onClick);\n    }\n\t\n\tif (beforeEffect != null) {\n\t\tonClickBuffer.append(\"}});\");\n\t}\n\n    if (onClickBefore != null) {\n    \tonClickBuffer.append(\"}\");\n    }\n\n    \n    if (functionName != null) {\n      \tAjaxUtils.appendScriptHeader(response);\n    \tresponse.appendContentString(functionName + \" = function(additionalParams) { \" + onClickBuffer + \" }\\n\");\n    \tAjaxUtils.appendScriptFooter(response);\n    }\n    if (showUI) {\n    \tboolean disabled = disabledInComponent(component);\n    \tString elementName = (String) valueForBinding(\"elementName\", \"a\", component);\n    \tboolean useButtonTag = ERXProperties.booleanForKeyWithDefault(\"er.extensions.foundation.ERXPatcher.DynamicElementsPatches.SubmitButton.useButtonTag\", false);\n    \t\n\t    if (showButton) {\n\t      elementName = useButtonTag ? \"button\" : \"input\";\n\t      response.appendContentString(\"<\" + elementName + \" \");\n\t      appendTagAttributeToResponse(response, \"type\", \"button\");\n\t      String name = nameInContext(context, component);\n\t      appendTagAttributeToResponse(response, \"name\", name);\n\t      appendTagAttributeToResponse(response, \"value\", valueForBinding(\"value\", component));\n\t      appendTagAttributeToResponse(response, \"accesskey\", valueForBinding(\"accesskey\", component));\n\t      if (disabled) {\n\t    \t  appendTagAttributeToResponse(response, \"disabled\", \"disabled\");\n\t      }\n\t    }\n\t    else {\n\t\t\tboolean isATag = \"a\".equalsIgnoreCase(elementName);\n\t\t\tif (isATag) {\n\t\t\t\tresponse.appendContentString(\"<a href = \\\"javascript:void(0)\\\" \");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresponse.appendContentString(\"<\" + elementName + \" \");\n\t\t\t}\n\t    }\n\t    appendTagAttributeToResponse(response, \"class\", valueForBinding(\"class\", component));\n\t    appendTagAttributeToResponse(response, \"style\", valueForBinding(\"style\", component));\n\t    appendTagAttributeToResponse(response, \"id\", valueForBinding(\"id\", component));\n    \tif (functionName == null) {\n    \t\tappendTagAttributeToResponse(response, \"onclick\", onClickBuffer.toString());\n    \t}\n    \telse {\n    \t\tappendTagAttributeToResponse(response, \"onclick\", functionName + \"()\");\n    \t}\n\t    if (showButton && !useButtonTag) {\n\t      response.appendContentString(\" />\");\n\t    }\n\t    else {\n\t      response.appendContentString(\">\");\n\t      if (hasChildrenElements()) {\n\t        appendChildrenToResponse(response, context);\n\t      }\n\t      response.appendContentString(\"<\/\" + elementName + \">\");\n\t    }\n    }\n    super.appendToResponse(response, context);\n  }","commit_id":"eebef6ab5f70f44b5b2a92cfe25551a0639e9f39","url":"https://github.com/wocommunity/wonder"},{"original_method":"public static void fillInAjaxOptions(IAjaxElement element, WOComponent component, String submitButtonName, NSMutableDictionary options) {\n    StringBuffer parametersBuffer = new StringBuffer();\n    String systemDefaultFormSerializer = \"Form.serializeWithoutSubmits\";\n    String defaultFormSerializer = ERXProperties.stringForKeyWithDefault(\"er.ajax.formSerializer\", systemDefaultFormSerializer);\n    String formSerializer = (String) element.valueForBinding(\"formSerializer\", defaultFormSerializer, component);\n    if (!defaultFormSerializer.equals(systemDefaultFormSerializer)) {\n    \t// _fs = formSerializer (but short)\n\t    options.setObjectForKey(formSerializer, \"_fs\");\n    }\n\t// _asbn = AJAX_SUBMIT_BUTTON_NAME (but short)\n    options.setObjectForKey(\"'\" + submitButtonName + \"'\", \"_asbn\");\n\n\t// PROTOTYPE OPTIONS\n    // default to true in javascript\n    if (\"true\".equals(options.objectForKey(\"asynchronous\"))) {\n    \toptions.removeObjectForKey(\"asynchronous\");\n    }\n\n\t// PROTOTYPE OPTIONS\n    // default to true in javascript\n    if (\"true\".equals(options.objectForKey(\"evalScripts\"))) {\n    \toptions.removeObjectForKey(\"evalScripts\");\n    }\n\tAjaxUpdateContainer.expandInsertionFromOptions(options, element, component);\n  }","id":48348,"modified_method":"public static void fillInAjaxOptions(IAjaxElement element, WOComponent component, String submitButtonName, NSMutableDictionary options) {\n    String systemDefaultFormSerializer = \"Form.serializeWithoutSubmits\";\n    String defaultFormSerializer = ERXProperties.stringForKeyWithDefault(\"er.ajax.formSerializer\", systemDefaultFormSerializer);\n    String formSerializer = (String) element.valueForBinding(\"formSerializer\", defaultFormSerializer, component);\n    if (!defaultFormSerializer.equals(systemDefaultFormSerializer)) {\n    \t// _fs = formSerializer (but short)\n\t    options.setObjectForKey(formSerializer, \"_fs\");\n    }\n\t// _asbn = AJAX_SUBMIT_BUTTON_NAME (but short)\n    options.setObjectForKey(\"'\" + submitButtonName + \"'\", \"_asbn\");\n\n\t// PROTOTYPE OPTIONS\n    // default to true in javascript\n    if (\"true\".equals(options.objectForKey(\"asynchronous\"))) {\n    \toptions.removeObjectForKey(\"asynchronous\");\n    }\n\n\t// PROTOTYPE OPTIONS\n    // default to true in javascript\n    if (\"true\".equals(options.objectForKey(\"evalScripts\"))) {\n    \toptions.removeObjectForKey(\"evalScripts\");\n    }\n\tAjaxUpdateContainer.expandInsertionFromOptions(options, element, component);\n  }","commit_id":"eebef6ab5f70f44b5b2a92cfe25551a0639e9f39","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse response, WOContext context) {\n\t\tWOComponent component = context.component();\n\t\t\n\t\tboolean disabled = booleanValueForBinding(\"disabled\", false, component);\n\t\tObject stringValue = valueForBinding(\"string\", component);\n\t\tString functionName = (String) valueForBinding(\"functionName\", component);\n\t\tif (functionName == null) {\n\t\t\tString elementName;\n\t\t\tboolean button = booleanValueForBinding(\"button\", false, component);\n\t\t\tif (button) {\n\t\t\t\telementName = \"input\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\telementName = (String) valueForBinding(\"elementName\", \"a\", component);\n\t\t\t}\n\t\t\tboolean isATag = \"a\".equalsIgnoreCase(elementName);\n\t\t\tboolean renderTags = (!disabled || !isATag);\n\t\t\tif (renderTags) {\n\t\t\t\tresponse.appendContentString(\"<\");\n\t\t\t\tresponse.appendContentString(elementName);\n\t\t\t\tresponse.appendContentString(\" \");\n\t\t\t\tif (button) {\n\t\t\t\t\tappendTagAttributeToResponse(response, \"type\", \"button\");\n\t\t\t\t}\n\t\t\t\tif (isATag) {\n\t\t\t\t\tappendTagAttributeToResponse(response, \"href\", \"javascript:void(0);\");\n\t\t\t\t}\n\t\t\t\tappendTagAttributeToResponse(response, \"onclick\", onClick(context, false));\n\t\t\t\tappendTagAttributeToResponse(response, \"title\", valueForBinding(\"title\", component));\n\t\t\t\tappendTagAttributeToResponse(response, \"value\", valueForBinding(\"value\", component));\n\t\t\t\tappendTagAttributeToResponse(response, \"class\", valueForBinding(\"class\", component));\n\t\t\t\tappendTagAttributeToResponse(response, \"style\", valueForBinding(\"style\", component));\n\t\t\t\tappendTagAttributeToResponse(response, \"id\", valueForBinding(\"id\", component));\n\t\t\t\tif (button) {\n\t\t\t\t\tif (stringValue != null) {\n\t\t\t\t\t\tappendTagAttributeToResponse(response, \"value\", stringValue);\n\t\t\t\t\t}\n\t\t\t\t\tif (disabled) {\n\t\t\t\t\t\tresponse.appendContentString(\" disabled\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// appendTagAttributeToResponse(response, \"onclick\",\n\t\t\t\t// onClick(context));\n\t\t\t\tresponse.appendContentString(\">\");\n\t\t\t}\n\t\t\tif (stringValue != null && !button) {\n\t\t\t\tresponse.appendContentHTMLString(stringValue.toString());\n\t\t\t}\n\t\t\tappendChildrenToResponse(response, context);\n\t\t\tif (renderTags) {\n\t\t\t\tresponse.appendContentString(\"<\/\");\n\t\t\t\tresponse.appendContentString(elementName);\n\t\t\t\tresponse.appendContentString(\">\");\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tAjaxUtils.appendScriptHeader(response);\n\t\t\tresponse.appendContentString(functionName);\n\t\t\tresponse.appendContentString(\" = \");\n\t\t\tresponse.appendContentString(onClick(context, true));\n\t\t\tAjaxUtils.appendScriptFooter(response);\n\t\t}\n\t\tsuper.appendToResponse(response, context);\n\t}","id":48349,"modified_method":"public void appendToResponse(WOResponse response, WOContext context) {\n\t\tWOComponent component = context.component();\n\t\t\n\t\tboolean disabled = booleanValueForBinding(\"disabled\", false, component);\n\t\tObject stringValue = valueForBinding(\"string\", component);\n\t\tString functionName = (String) valueForBinding(\"functionName\", component);\n\t\tif (functionName == null) {\n\t\t\tString elementName;\n\t\t\tboolean button = booleanValueForBinding(\"button\", false, component);\n\t\t\tif (button) {\n\t\t\t\telementName = \"input\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\telementName = (String) valueForBinding(\"elementName\", \"a\", component);\n\t\t\t}\n\t\t\tboolean isATag = \"a\".equalsIgnoreCase(elementName);\n\t\t\tboolean renderTags = (!disabled || !isATag);\n\t\t\tif (renderTags) {\n\t\t\t\tresponse.appendContentString(\"<\");\n\t\t\t\tresponse.appendContentString(elementName);\n\t\t\t\tresponse.appendContentString(\" \");\n\t\t\t\tif (button) {\n\t\t\t\t\tappendTagAttributeToResponse(response, \"type\", \"button\");\n\t\t\t\t}\n\t\t\t\tif (isATag) {\n\t\t\t\t\tappendTagAttributeToResponse(response, \"href\", \"javascript:void(0);\");\n\t\t\t\t}\n\t\t\t\tappendTagAttributeToResponse(response, \"onclick\", onClick(context, false));\n\t\t\t\tappendTagAttributeToResponse(response, \"title\", valueForBinding(\"title\", component));\n\t\t\t\tappendTagAttributeToResponse(response, \"value\", valueForBinding(\"value\", component));\n\t\t\t\tappendTagAttributeToResponse(response, \"class\", valueForBinding(\"class\", component));\n\t\t\t\tappendTagAttributeToResponse(response, \"style\", valueForBinding(\"style\", component));\n\t\t\t\tappendTagAttributeToResponse(response, \"id\", valueForBinding(\"id\", component));\n\t\t\t\tappendTagAttributeToResponse(response, \"accesskey\", valueForBinding(\"accesskey\", component));\n\t\t\t\tif (button) {\n\t\t\t\t\tif (stringValue != null) {\n\t\t\t\t\t\tappendTagAttributeToResponse(response, \"value\", stringValue);\n\t\t\t\t\t}\n\t\t\t\t\tif (disabled) {\n\t\t\t\t\t\tresponse.appendContentString(\" disabled\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// appendTagAttributeToResponse(response, \"onclick\",\n\t\t\t\t// onClick(context));\n\t\t\t\tresponse.appendContentString(\">\");\n\t\t\t}\n\t\t\tif (stringValue != null && !button) {\n\t\t\t\tresponse.appendContentHTMLString(stringValue.toString());\n\t\t\t}\n\t\t\tappendChildrenToResponse(response, context);\n\t\t\tif (renderTags) {\n\t\t\t\tresponse.appendContentString(\"<\/\");\n\t\t\t\tresponse.appendContentString(elementName);\n\t\t\t\tresponse.appendContentString(\">\");\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tAjaxUtils.appendScriptHeader(response);\n\t\t\tresponse.appendContentString(functionName);\n\t\t\tresponse.appendContentString(\" = \");\n\t\t\tresponse.appendContentString(onClick(context, true));\n\t\t\tAjaxUtils.appendScriptFooter(response);\n\t\t}\n\t\tsuper.appendToResponse(response, context);\n\t}","commit_id":"eebef6ab5f70f44b5b2a92cfe25551a0639e9f39","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Fixed length of the string to be displayed.\n     * @return int value of the binding: <b>length<\/b>\n     */\n    public int length() {\n        Integer l=(Integer)valueForBinding(\"length\");\n        return l!=null ? l.intValue() : 0;\n    }","id":48350,"modified_method":"/**\n     * Fixed length of the string to be displayed.\n     * @return int value of the binding: <b>length<\/b>\n     */\n    public int length() {\n    \tObject value = valueForBinding(\"length\");\n    \tint result = ERXValueUtilities.intValue(value);\n        return result;\n    }","commit_id":"1ca738bc37b5b951764a9079b3140e1fc4c84dcf","url":"https://github.com/wocommunity/wonder"},{"original_method":"public final void register() {\n    if (myProject.isDisposed()) return;\n    if (isRegistered()) return;\n    setIsRegistered(true);\n\n    myWindowManager = ToolWindowManager.getInstance(myProject);\n\n    if (myNumber != -1) {\n      Keymap keymap = KeymapManager.getInstance().getKeymap(KeymapManager.DEFAULT_IDEA_KEYMAP);\n      String actionId = ActivateToolWindowAction.getActionIdForToolWindow(myId);\n      //noinspection ConstantConditions\n      if (keymap.getShortcuts(actionId).length == 0) {\n        KeyboardShortcut shortcut = new KeyboardShortcut(KeyStroke.getKeyStroke(\"alt \" + myNumber), null);\n        keymap.addShortcut(actionId, shortcut);\n      }\n    }\n\n    //if we create a new project, tool windows are created for it automatically\n    ToolWindow toolWindow = myWindowManager.getToolWindow(myId);\n    if (toolWindow == null) {\n      toolWindow = myWindowManager.registerToolWindow(myId, myCanCloseContent, myAnchor, mySideTool);\n    }\n    toolWindow.setIcon(myIcon);\n\n    if (myComponent == null) myComponent = getComponent();\n    if (myComponent != null) {\n      addContent(myComponent, null, null, false);\n    }\n\n\n    toolWindow.setToHideOnEmptyContent(true);\n    toolWindow.installWatcher(toolWindow.getContentManager());\n    if (!isInitiallyAvailable()) {\n      setAvailable(false);\n    }\n\n    doRegister();\n  }","id":48351,"modified_method":"public final void register() {\n    if (myProject.isDisposed()) return;\n    if (isRegistered()) return;\n    setIsRegistered(true);\n\n    myWindowManager = ToolWindowManager.getInstance(myProject);\n\n    if (myNumber != -1) {\n      String actionId = ActivateToolWindowAction.getActionIdForToolWindow(myId);\n\n      Keymap keymap = KeymapManager.getInstance().getKeymap(KeymapManager.DEFAULT_IDEA_KEYMAP);\n      assert keymap != null;\n      KeyboardShortcut defShortcut = new KeyboardShortcut(KeyStroke.getKeyStroke(\"alt \" + myNumber), null);\n      keymap.addShortcut(actionId, defShortcut);\n\n      keymap = KeymapManager.getInstance().getKeymap(KeymapManager.MAC_OS_X_KEYMAP);\n      assert keymap != null;\n      KeyboardShortcut oldShortcut = new KeyboardShortcut(KeyStroke.getKeyStroke(\"alt \" + myNumber), null);\n      keymap.removeShortcut(actionId, oldShortcut);\n      KeyboardShortcut macShortcut = new KeyboardShortcut(KeyStroke.getKeyStroke(\"meta \" + myNumber), null);\n      keymap.addShortcut(actionId, macShortcut);\n    }\n\n    //if we create a new project, tool windows are created for it automatically\n    ToolWindow toolWindow = myWindowManager.getToolWindow(myId);\n    if (toolWindow == null) {\n      toolWindow = myWindowManager.registerToolWindow(myId, myCanCloseContent, myAnchor, mySideTool);\n    }\n    toolWindow.setIcon(myIcon);\n\n    if (myComponent == null) myComponent = getComponent();\n    if (myComponent != null) {\n      addContent(myComponent, null, null, false);\n    }\n\n\n    toolWindow.setToHideOnEmptyContent(true);\n    toolWindow.installWatcher(toolWindow.getContentManager());\n    if (!isInitiallyAvailable()) {\n      setAvailable(false);\n    }\n\n    doRegister();\n  }","commit_id":"761b5fc180f673e20919462810a66bb1e4628c66","url":"https://github.com/JetBrains/MPS"},{"original_method":"public final void unregister() {\n    if (!isRegistered()) return;\n\n    doUnregister();\n\n    if (myNumber != -1) {\n      KeymapManager.getInstance().getActiveKeymap().removeAllActionShortcuts(ActivateToolWindowAction.getActionIdForToolWindow(myId));\n    }\n\n    ToolWindow toolWindow = getToolWindow();\n    if (toolWindow != null) {\n      ContentManager contentManager = toolWindow.getContentManager();\n      if (contentManager != null && !contentManager.isDisposed()) {\n        contentManager.removeAllContents(true);\n      }\n    }\n\n    myWindowManager.unregisterToolWindow(myId);\n    myIsRegistered = false;\n  }","id":48352,"modified_method":"public final void unregister() {\n    if (!isRegistered()) return;\n\n    doUnregister();\n\n    if (myNumber != -1) {\n      Keymap keymap = KeymapManager.getInstance().getKeymap(KeymapManager.DEFAULT_IDEA_KEYMAP);\n      //noinspection ConstantConditions\n      keymap.removeAllActionShortcuts(ActivateToolWindowAction.getActionIdForToolWindow(myId));\n\n      keymap = KeymapManager.getInstance().getKeymap(KeymapManager.MAC_OS_X_KEYMAP);\n      //noinspection ConstantConditions\n      keymap.removeAllActionShortcuts(ActivateToolWindowAction.getActionIdForToolWindow(myId));\n    }\n\n    ToolWindow toolWindow = getToolWindow();\n    if (toolWindow != null) {\n      ContentManager contentManager = toolWindow.getContentManager();\n      if (contentManager != null && !contentManager.isDisposed()) {\n        contentManager.removeAllContents(true);\n      }\n    }\n\n    myWindowManager.unregisterToolWindow(myId);\n    myIsRegistered = false;\n  }","commit_id":"761b5fc180f673e20919462810a66bb1e4628c66","url":"https://github.com/JetBrains/MPS"},{"original_method":"/**\n   * Unregister Tool and removes all shortcuts in case of reload.\n   * Need to be called in EDT.\n   * <p>\n   * If project is closing (== not in opened projects) {\n   * <p>\n   * }, but there are some other opened projects,\n   * than shortcuts must not be removed - instance of BaseTool still exists for other projects\n   * and shortcuts are global (registered by ActionId).\n   * In case of BaseTool reload (unregister on opened project) we need do this,\n   * because it will register (probably changed) shortcuts back on load.\n   */\n  public final void unregister() {\n    if (!isRegistered()) {\n      return;\n    }\n    ThreadUtils.assertEDT();\n\n    doUnregister();\n\n    // see Javadoc for if condition explanation\n    final List<Project> openedProjects = Arrays.asList(ProjectManager.getInstance().getOpenProjects());\n    if (myNumber != -1 && (openedProjects.contains(getProject()) || openedProjects.isEmpty())) {\n      Keymap keymap = KeymapManager.getInstance().getKeymap(KeymapManager.DEFAULT_IDEA_KEYMAP);\n      //noinspection ConstantConditions\n      keymap.removeAllActionShortcuts(ActivateToolWindowAction.getActionIdForToolWindow(myId));\n\n      keymap = KeymapManager.getInstance().getKeymap(KeymapManager.MAC_OS_X_KEYMAP);\n      //noinspection ConstantConditions\n      keymap.removeAllActionShortcuts(ActivateToolWindowAction.getActionIdForToolWindow(myId));\n    }\n\n    ToolWindow toolWindow = getToolWindow();\n    if (toolWindow != null) {\n      ContentManager contentManager = toolWindow.getContentManager();\n      if (contentManager != null && !contentManager.isDisposed()) {\n        contentManager.removeAllContents(true);\n      }\n    }\n\n    myWindowManager.unregisterToolWindow(myId);\n    myIsRegistered = false;\n  }","id":48353,"modified_method":"/**\n   * Unregister Tool and removes all shortcuts in case of reload.\n   * Need to be called in EDT.\n   * <p>\n   * If project is closing (== not in opened projects) {\n   * <p>\n   * }, but there are some other opened projects,\n   * than shortcuts must not be removed - instance of BaseTool still exists for other projects\n   * and shortcuts are global (registered by ActionId).\n   * In case of BaseTool reload (unregister on opened project) we need do this,\n   * because it will register (probably changed) shortcuts back on load.\n   */\n  public final void unregister() {\n    if (!isRegistered()) {\n      return;\n    }\n    ThreadUtils.assertEDT();\n\n    doUnregister();\n\n    // see Javadoc for if condition explanation\n    final List<Project> openedProjects = Arrays.asList(ProjectManager.getInstance().getOpenProjects());\n    if (myNumber != -1 && (openedProjects.contains(getProject()) || openedProjects.isEmpty())) {\n      Keymap keymap = KeymapManager.getInstance().getKeymap(KeymapManager.DEFAULT_IDEA_KEYMAP);\n      if (keymap != null) {\n        //noinspection ConstantConditions\n        keymap.removeAllActionShortcuts(ActivateToolWindowAction.getActionIdForToolWindow(myId));\n      }\n\n      keymap = KeymapManager.getInstance().getKeymap(KeymapManager.MAC_OS_X_KEYMAP);\n      if (keymap != null) {\n        //noinspection ConstantConditions\n        keymap.removeAllActionShortcuts(ActivateToolWindowAction.getActionIdForToolWindow(myId));\n      }\n    }\n\n    ToolWindow toolWindow = getToolWindow();\n    if (toolWindow != null) {\n      ContentManager contentManager = toolWindow.getContentManager();\n      if (contentManager != null && !contentManager.isDisposed()) {\n        contentManager.removeAllContents(true);\n      }\n    }\n\n    myWindowManager.unregisterToolWindow(myId);\n    myIsRegistered = false;\n  }","commit_id":"166f1ae85d867f538c051db414240e66941bcdb7","url":"https://github.com/JetBrains/MPS"},{"original_method":"public final void register() {\n    if (myProject.isDisposed()) {\n      return;\n    }\n    if (isRegistered()) {\n      return;\n    }\n    ThreadUtils.assertEDT();\n    setIsRegistered(true);\n\n    myWindowManager = ToolWindowManager.getInstance(myProject);\n\n    if (myNumber != -1) {\n      String actionId = ActivateToolWindowAction.getActionIdForToolWindow(myId);\n\n      Keymap keymap = KeymapManager.getInstance().getKeymap(KeymapManager.DEFAULT_IDEA_KEYMAP);\n      assert keymap != null;\n      KeyboardShortcut defShortcut = new KeyboardShortcut(KeyStroke.getKeyStroke(\"alt \" + myNumber), null);\n      keymap.addShortcut(actionId, defShortcut);\n\n      keymap = KeymapManager.getInstance().getKeymap(KeymapManager.MAC_OS_X_KEYMAP);\n      assert keymap != null;\n      KeyboardShortcut oldShortcut = new KeyboardShortcut(KeyStroke.getKeyStroke(\"alt \" + myNumber), null);\n      keymap.removeShortcut(actionId, oldShortcut);\n      KeyboardShortcut macShortcut = new KeyboardShortcut(KeyStroke.getKeyStroke(\"meta \" + myNumber), null);\n      keymap.addShortcut(actionId, macShortcut);\n    }\n\n    //if we create a new project, tool windows are created for it automatically\n    ToolWindow toolWindow = myWindowManager.getToolWindow(myId);\n    if (toolWindow == null) {\n      toolWindow = myWindowManager.registerToolWindow(myId, myCanCloseContent, myAnchor, getProject(), true, mySideTool);\n    }\n    toolWindow.setIcon(myIcon);\n\n    toolWindow.setToHideOnEmptyContent(true);\n    toolWindow.installWatcher(toolWindow.getContentManager());\n    setAvailable(isInitiallyAvailable());\n\n    doRegister();\n\n    if (myComponent == null) {\n      myComponent = getComponent();\n    }\n    if (myComponent != null) {\n      addContent(myComponent, \"\", null, false);\n    }\n\n    toolWindow.setToHideOnEmptyContent(true);\n    toolWindow.installWatcher(toolWindow.getContentManager());\n    setAvailable(isInitiallyAvailable());\n  }","id":48354,"modified_method":"public final void register() {\n    if (myProject.isDisposed()) {\n      return;\n    }\n    if (isRegistered()) {\n      return;\n    }\n    ThreadUtils.assertEDT();\n    setIsRegistered(true);\n\n    myWindowManager = ToolWindowManager.getInstance(myProject);\n\n    if (myNumber != -1) {\n      String actionId = ActivateToolWindowAction.getActionIdForToolWindow(myId);\n\n      Keymap keymap = KeymapManager.getInstance().getKeymap(KeymapManager.DEFAULT_IDEA_KEYMAP);\n      if (keymap == null) {\n        LOG.error(\"Default IDEA Keymap cannot be found\");\n        return;\n      } else {\n        KeyboardShortcut defShortcut = new KeyboardShortcut(KeyStroke.getKeyStroke(\"alt \" + myNumber), null);\n        keymap.addShortcut(actionId, defShortcut);\n      }\n\n      keymap = KeymapManager.getInstance().getKeymap(KeymapManager.MAC_OS_X_KEYMAP);\n      if (keymap == null) {\n        LOG.error(\"Keymap for MAC OS cannot be found\");\n        return;\n      }\n      KeyboardShortcut oldShortcut = new KeyboardShortcut(KeyStroke.getKeyStroke(\"alt \" + myNumber), null);\n      keymap.removeShortcut(actionId, oldShortcut);\n      KeyboardShortcut macShortcut = new KeyboardShortcut(KeyStroke.getKeyStroke(\"meta \" + myNumber), null);\n      keymap.addShortcut(actionId, macShortcut);\n    }\n\n    //if we create a new project, tool windows are created for it automatically\n    ToolWindow toolWindow = myWindowManager.getToolWindow(myId);\n    if (toolWindow == null) {\n      toolWindow = myWindowManager.registerToolWindow(myId, myCanCloseContent, myAnchor, getProject(), true, mySideTool);\n    }\n    toolWindow.setIcon(myIcon);\n\n    toolWindow.setToHideOnEmptyContent(true);\n    toolWindow.installWatcher(toolWindow.getContentManager());\n    setAvailable(isInitiallyAvailable());\n\n    doRegister();\n\n    if (myComponent == null) {\n      myComponent = getComponent();\n    }\n    if (myComponent != null) {\n      addContent(myComponent, \"\", null, false);\n    }\n\n    toolWindow.setToHideOnEmptyContent(true);\n    toolWindow.installWatcher(toolWindow.getContentManager());\n    setAvailable(isInitiallyAvailable());\n  }","commit_id":"166f1ae85d867f538c051db414240e66941bcdb7","url":"https://github.com/JetBrains/MPS"},{"original_method":"public CommitBuilder(String baseRevId, String msg, RevisionStore store) throws Exception {\n        this.baseRevId = baseRevId;\n        this.msg = msg;\n        this.store = store;\n        staged = new HashMap<String, MutableNode>();\n        changeLog = new ArrayList<Change>();\n    }","id":48355,"modified_method":"public CommitBuilder(String baseRevId, String msg, RevisionStore store) throws Exception {\n        this.baseRevId = Id.fromString(baseRevId);\n        this.msg = msg;\n        this.store = store;\n    }","commit_id":"b4ead29bee5c9ef60b41ef9a7d6396d4f2d75087","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"MutableNode getOrCreateStagedNode(String nodePath) throws Exception {\n        MutableNode node = staged.get(nodePath);\n        if (node == null) {\n            MutableNode parent = staged.get(\"/\");\n            if (parent == null) {\n                parent = new MutableNode(store.getRootNode(Id.fromString(baseRevId)), store);\n                staged.put(\"/\", parent);\n            }\n            node = parent;\n            String names[] = PathUtils.split(nodePath);\n            for (int i = names.length - 1; i >= 0; i--) {\n                String path = PathUtils.getAncestorPath(nodePath, i);\n                node = staged.get(path);\n                if (node == null) {\n                    // not yet staged, resolve id using staged parent\n                    // to allow for staged move operations\n                    ChildNodeEntry cne = parent.getChildNodeEntry(names[names.length - i - 1]);\n                    if (cne == null) {\n                        throw new NotFoundException(nodePath);\n                    }\n                    node = new MutableNode(store.getNode(cne.getId()), store);\n                    staged.put(path, node);\n                }\n                parent = node;\n            }\n        }\n        return node;\n    }","id":48356,"modified_method":"MutableNode getOrCreateStagedNode(String nodePath) throws Exception {\n        MutableNode node = staged.get(nodePath);\n        if (node == null) {\n            MutableNode parent = staged.get(\"/\");\n            if (parent == null) {\n                parent = new MutableNode(store.getRootNode(baseRevId), store);\n                staged.put(\"/\", parent);\n            }\n            node = parent;\n            String names[] = PathUtils.split(nodePath);\n            for (int i = names.length - 1; i >= 0; i--) {\n                String path = PathUtils.getAncestorPath(nodePath, i);\n                node = staged.get(path);\n                if (node == null) {\n                    // not yet staged, resolve id using staged parent\n                    // to allow for staged move operations\n                    ChildNodeEntry cne = parent.getChildNodeEntry(names[names.length - i - 1]);\n                    if (cne == null) {\n                        throw new NotFoundException(nodePath);\n                    }\n                    node = new MutableNode(store.getNode(cne.getId()), store);\n                    staged.put(path, node);\n                }\n                parent = node;\n            }\n        }\n        return node;\n    }","commit_id":"b4ead29bee5c9ef60b41ef9a7d6396d4f2d75087","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public String /* new revId */ doCommit() throws Exception {\n        if (staged.isEmpty()) {\n            // nothing to commit\n            return baseRevId;\n        }\n\n        String currentHead = store.getHeadCommitId().toString();\n        if (!currentHead.equals(baseRevId)) {\n            // todo gracefully handle certain conflicts (e.g. changes on moved sub-trees, competing deletes etc)\n            // update base revision to new head\n            baseRevId = currentHead;\n            // clear staging area\n            staged.clear();\n            // replay change log on new base revision\n            // copy log in order to avoid concurrent modifications\n            List<Change> log = new ArrayList<Change>(changeLog);\n            for (Change change : log) {\n                change.apply();\n            }\n        }\n\n        Id rootNodeId = persistStagedNodes();\n\n        Id newRevId;\n        store.lockHead();\n        try {\n            currentHead = store.getHeadCommitId().toString();\n            if (!currentHead.equals(baseRevId)) {\n                StoredNode baseRoot = store.getRootNode(Id.fromString(baseRevId));\n                StoredNode theirRoot = store.getRootNode(Id.fromString(currentHead));\n                StoredNode ourRoot = store.getNode(rootNodeId);\n\n                rootNodeId = mergeTree(baseRoot, ourRoot, theirRoot);\n\n                baseRevId = currentHead;\n            }\n\n            if (store.getCommit(Id.fromString(currentHead)).getRootNodeId().equals(rootNodeId)) {\n                // the commit didn't cause any changes,\n                // no need to create new commit object/update head revision\n                return currentHead;\n            }\n            MutableCommit newCommit = new MutableCommit();\n            newCommit.setParentId(Id.fromString(baseRevId));\n            newCommit.setCommitTS(System.currentTimeMillis());\n            newCommit.setMsg(msg);\n            newCommit.setRootNodeId(rootNodeId);\n            newRevId = store.putCommit(newCommit);\n\n            store.setHeadCommitId(newRevId);\n        } finally {\n            store.unlockHead();\n        }\n\n        // reset instance in order to be reusable\n        staged.clear();\n        changeLog.clear();\n\n        return newRevId.toString();\n    }","id":48357,"modified_method":"public String /* new revId */ doCommit() throws Exception {\n        if (staged.isEmpty()) {\n            // nothing to commit\n            return baseRevId.toString();\n        }\n\n        Id currentHead = store.getHeadCommitId();\n        if (!currentHead.equals(baseRevId)) {\n            // todo gracefully handle certain conflicts (e.g. changes on moved sub-trees, competing deletes etc)\n            // update base revision to new head\n            baseRevId = currentHead;\n            // clear staging area\n            staged.clear();\n            // replay change log on new base revision\n            // copy log in order to avoid concurrent modifications\n            List<Change> log = new ArrayList<Change>(changeLog);\n            for (Change change : log) {\n                change.apply();\n            }\n        }\n\n        Id rootNodeId = persistStagedNodes();\n\n        Id newRevId;\n        store.lockHead();\n        try {\n            currentHead = store.getHeadCommitId();\n            if (!currentHead.equals(baseRevId)) {\n                StoredNode baseRoot = store.getRootNode(baseRevId);\n                StoredNode theirRoot = store.getRootNode(currentHead);\n                StoredNode ourRoot = store.getNode(rootNodeId);\n\n                rootNodeId = mergeTree(baseRoot, ourRoot, theirRoot);\n\n                baseRevId = currentHead;\n            }\n\n            if (store.getCommit(currentHead).getRootNodeId().equals(rootNodeId)) {\n                // the commit didn't cause any changes,\n                // no need to create new commit object/update head revision\n                return currentHead.toString();\n            }\n            MutableCommit newCommit = new MutableCommit();\n            newCommit.setParentId(baseRevId);\n            newCommit.setCommitTS(System.currentTimeMillis());\n            newCommit.setMsg(msg);\n            newCommit.setRootNodeId(rootNodeId);\n            newRevId = store.putCommit(newCommit);\n\n            store.setHeadCommitId(newRevId);\n        } finally {\n            store.unlockHead();\n        }\n\n        // reset instance in order to be reusable\n        staged.clear();\n        changeLog.clear();\n\n        return newRevId.toString();\n    }","commit_id":"b4ead29bee5c9ef60b41ef9a7d6396d4f2d75087","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public CommitBuilder(String baseRevId, String msg, RevisionStore store) throws Exception {\n        this.baseRevId = Id.fromString(baseRevId);\n        this.msg = msg;\n        this.store = store;\n    }","id":48358,"modified_method":"public CommitBuilder(Id baseRevId, String msg, RevisionStore store) throws Exception {\n        this.baseRevId = baseRevId;\n        this.msg = msg;\n        this.store = store;\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public String /* new revId */ doCommit() throws Exception {\n        if (staged.isEmpty()) {\n            // nothing to commit\n            return baseRevId.toString();\n        }\n\n        Id currentHead = store.getHeadCommitId();\n        if (!currentHead.equals(baseRevId)) {\n            // todo gracefully handle certain conflicts (e.g. changes on moved sub-trees, competing deletes etc)\n            // update base revision to new head\n            baseRevId = currentHead;\n            // clear staging area\n            staged.clear();\n            // replay change log on new base revision\n            // copy log in order to avoid concurrent modifications\n            List<Change> log = new ArrayList<Change>(changeLog);\n            for (Change change : log) {\n                change.apply();\n            }\n        }\n\n        Id rootNodeId = persistStagedNodes();\n\n        Id newRevId;\n        store.lockHead();\n        try {\n            currentHead = store.getHeadCommitId();\n            if (!currentHead.equals(baseRevId)) {\n                StoredNode baseRoot = store.getRootNode(baseRevId);\n                StoredNode theirRoot = store.getRootNode(currentHead);\n                StoredNode ourRoot = store.getNode(rootNodeId);\n\n                rootNodeId = mergeTree(baseRoot, ourRoot, theirRoot);\n\n                baseRevId = currentHead;\n            }\n\n            if (store.getCommit(currentHead).getRootNodeId().equals(rootNodeId)) {\n                // the commit didn't cause any changes,\n                // no need to create new commit object/update head revision\n                return currentHead.toString();\n            }\n            MutableCommit newCommit = new MutableCommit();\n            newCommit.setParentId(baseRevId);\n            newCommit.setCommitTS(System.currentTimeMillis());\n            newCommit.setMsg(msg);\n            newCommit.setRootNodeId(rootNodeId);\n            newRevId = store.putCommit(newCommit);\n\n            store.setHeadCommitId(newRevId);\n        } finally {\n            store.unlockHead();\n        }\n\n        // reset instance in order to be reusable\n        staged.clear();\n        changeLog.clear();\n\n        return newRevId.toString();\n    }","id":48359,"modified_method":"public Id /* new revId */ doCommit() throws Exception {\n        if (staged.isEmpty()) {\n            // nothing to commit\n            return baseRevId;\n        }\n\n        Id currentHead = store.getHeadCommitId();\n        if (!currentHead.equals(baseRevId)) {\n            // todo gracefully handle certain conflicts (e.g. changes on moved sub-trees, competing deletes etc)\n            // update base revision to new head\n            baseRevId = currentHead;\n            // clear staging area\n            staged.clear();\n            // replay change log on new base revision\n            // copy log in order to avoid concurrent modifications\n            List<Change> log = new ArrayList<Change>(changeLog);\n            for (Change change : log) {\n                change.apply();\n            }\n        }\n\n        Id rootNodeId = persistStagedNodes();\n\n        Id newRevId;\n        store.lockHead();\n        try {\n            currentHead = store.getHeadCommitId();\n            if (!currentHead.equals(baseRevId)) {\n                StoredNode baseRoot = store.getRootNode(baseRevId);\n                StoredNode theirRoot = store.getRootNode(currentHead);\n                StoredNode ourRoot = store.getNode(rootNodeId);\n\n                rootNodeId = mergeTree(baseRoot, ourRoot, theirRoot);\n\n                baseRevId = currentHead;\n            }\n\n            if (store.getCommit(currentHead).getRootNodeId().equals(rootNodeId)) {\n                // the commit didn't cause any changes,\n                // no need to create new commit object/update head revision\n                return currentHead;\n            }\n            MutableCommit newCommit = new MutableCommit();\n            newCommit.setParentId(baseRevId);\n            newCommit.setCommitTS(System.currentTimeMillis());\n            newCommit.setMsg(msg);\n            newCommit.setRootNodeId(rootNodeId);\n            newRevId = store.putCommit(newCommit);\n\n            store.setHeadCommitId(newRevId);\n        } finally {\n            store.unlockHead();\n        }\n\n        // reset instance in order to be reusable\n        staged.clear();\n        changeLog.clear();\n\n        return newRevId;\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public String diff(String fromRevisionId, String toRevisionId, String filter) throws MicroKernelException {\n        // TODO extract and evaluate filter criteria (such as e.g. 'path') specified in 'filter' parameter\n        String path = \"/\";\n\n        toRevisionId = toRevisionId == null ? getHeadRevision() : toRevisionId;\n\n        try {\n            final JsopBuilder buff = new JsopBuilder();\n            final RevisionProvider rp = rep.getRevisionStore();\n            // maps (key: id of target node, value: path/to/target)\n            // for tracking added/removed nodes; this allows us\n            // to detect 'move' operations\n            final HashMap<Id, String> addedNodes = new HashMap<Id, String>();\n            final HashMap<Id, String> removedNodes = new HashMap<Id, String>();\n            NodeState node1, node2;\n            try {\n                node1 = rep.getNodeState(fromRevisionId, path);\n            } catch (NotFoundException e) {\n                node1 = null;\n            }\n            try {\n                node2 = rep.getNodeState(toRevisionId, path);\n            } catch (NotFoundException e) {\n                node2 = null;\n            }\n\n            if (node1 == null) {\n                if (node2 != null) {\n                    buff.tag('+').key(path).object();\n                    toJson(buff, node2, Integer.MAX_VALUE, 0, -1, false);\n                    return buff.endObject().newline().toString();\n                } else {\n                    throw new MicroKernelException(\"path doesn't exist in the specified revisions: \" + path);\n                }\n            } else if (node2 == null) {\n                buff.tag('-');\n                buff.value(path);\n                return buff.newline().toString();\n            }\n\n            TraversingNodeDiffHandler diffHandler = new TraversingNodeDiffHandler() {\n                @Override\n                public void propertyAdded(PropertyState after) {\n                    buff.tag('+').\n                            key(PathUtils.concat(getCurrentPath(), after.getName())).\n                            encodedValue(after.getEncodedValue()).\n                            newline();\n                }\n\n                @Override\n                public void propertyChanged(PropertyState before, PropertyState after) {\n                    buff.tag('^').\n                            key(PathUtils.concat(getCurrentPath(), after.getName())).\n                            encodedValue(after.getEncodedValue()).\n                            newline();\n                }\n\n                @Override\n                public void propertyDeleted(PropertyState before) {\n                    // since property and node deletions can't be distinguished\n                    // using the \"- <path>\" notation we're representing\n                    // property deletions as \"^ <path>:null\"\n                    buff.tag('^').\n                            key(PathUtils.concat(getCurrentPath(), before.getName())).\n                            value(null).\n                            newline();\n                }\n\n                @Override\n                public void childNodeAdded(String name, NodeState after) {\n                    addedNodes.put(rp.getId(after), PathUtils.concat(getCurrentPath(), name));\n                    buff.tag('+').\n                            key(PathUtils.concat(getCurrentPath(), name)).object();\n                    toJson(buff, after, Integer.MAX_VALUE, 0, -1, false);\n                    buff.endObject().newline();\n                }\n\n                @Override\n                public void childNodeDeleted(String name, NodeState before) {\n                    removedNodes.put(rp.getId(before), PathUtils.concat(getCurrentPath(), name));\n                    buff.tag('-');\n                    buff.value(PathUtils.concat(getCurrentPath(), name));\n                    buff.newline();\n                }\n            };\n            diffHandler.start(node1, node2, path);\n\n            // check if this commit includes 'move' operations\n            // by building intersection of added and removed nodes\n            addedNodes.keySet().retainAll(removedNodes.keySet());\n            if (!addedNodes.isEmpty()) {\n                // this commit includes 'move' operations\n                removedNodes.keySet().retainAll(addedNodes.keySet());\n                // addedNodes & removedNodes now only contain information about moved nodes\n\n                // re-build the diff in a 2nd pass, this time representing moves correctly\n                buff.resetWriter();\n\n                // TODO refactor code, avoid duplication\n\n                diffHandler = new TraversingNodeDiffHandler() {\n                    @Override\n                    public void propertyAdded(PropertyState after) {\n                        buff.tag('+').\n                                key(PathUtils.concat(getCurrentPath(), after.getName())).\n                                encodedValue(after.getEncodedValue()).\n                                newline();\n                    }\n\n                    @Override\n                    public void propertyChanged(PropertyState before, PropertyState after) {\n                        buff.tag('^').\n                                key(PathUtils.concat(getCurrentPath(), after.getName())).\n                                encodedValue(after.getEncodedValue()).\n                                newline();\n                    }\n\n                    @Override\n                    public void propertyDeleted(PropertyState before) {\n                        // since property and node deletions can't be distinguished\n                        // using the \"- <path>\" notation we're representing\n                        // property deletions as \"^ <path>:null\"\n                        buff.tag('^').\n                                key(PathUtils.concat(getCurrentPath(), before.getName())).\n                                value(null).\n                                newline();\n                    }\n\n                    @Override\n                    public void childNodeAdded(String name, NodeState after) {\n                        if (addedNodes.containsKey(rp.getId(after))) {\n                            // moved node, will be processed separately\n                            return;\n                        }\n                        buff.tag('+').\n                                key(PathUtils.concat(getCurrentPath(), name)).object();\n                        toJson(buff, after, Integer.MAX_VALUE, 0, -1, false);\n                        buff.endObject().newline();\n                    }\n\n                    @Override\n                    public void childNodeDeleted(String name, NodeState before) {\n                        if (addedNodes.containsKey(rp.getId(before))) {\n                            // moved node, will be processed separately\n                            return;\n                        }\n                        buff.tag('-');\n                        buff.value(PathUtils.concat(getCurrentPath(), name));\n                        buff.newline();\n                    }\n\n                };\n                diffHandler.start(node1, node2, path);\n\n                // finally process moved nodes\n                for (Map.Entry<Id, String> entry : addedNodes.entrySet()) {\n                    buff.tag('>').\n                            // path/to/deleted/node\n                            key(removedNodes.get(entry.getKey())).\n                            // path/to/added/node\n                            value(entry.getValue()).\n                            newline();\n                }\n            }\n            return buff.toString();\n\n        } catch (Exception e) {\n            throw new MicroKernelException(e);\n        }\n    }","id":48360,"modified_method":"public String diff(String fromRevision, String toRevision, String filter) throws MicroKernelException {\n        Id toRevisionId = toRevision == null ? getHeadRevisionId() : Id.fromString(toRevision);\n        \n        return diff(Id.fromString(fromRevision), toRevisionId, filter);\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public String commit(String path, String jsonDiff, String revisionId, String message) throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n        if (path.length() > 0 && !PathUtils.isAbsolute(path)) {\n            throw new IllegalArgumentException(\"absolute path expected: \" + path);\n        }\n\n        revisionId = revisionId == null ? getHeadRevision() : revisionId;\n\n        try {\n            JsopTokenizer t = new JsopTokenizer(jsonDiff);\n            CommitBuilder cb = rep.getCommitBuilder(revisionId, message);\n            while (true) {\n                int r = t.read();\n                if (r == JsopTokenizer.END) {\n                    break;\n                }\n                int pos; // used for error reporting\n                switch (r) {\n                    case '+': {\n                        pos = t.getLastPos();\n                        String subPath = t.readString();\n                        t.read(':');\n                        if (t.matches('{')) {\n                            String nodePath = PathUtils.concat(path, subPath);\n                            if (!PathUtils.isAbsolute(nodePath)) {\n                                throw new Exception(\"absolute path expected: \" + nodePath + \", pos: \" + pos);\n                            }\n                            String parentPath = PathUtils.getParentPath(nodePath);\n                            String nodeName = PathUtils.getName(nodePath);\n                            // build the list of added nodes recursively\n                            LinkedList<AddNodeOperation> list = new LinkedList<AddNodeOperation>();\n                            addNode(list, parentPath, nodeName, t);\n                            for (AddNodeOperation op : list) {\n                                cb.addNode(op.path, op.name, op.props);\n                            }\n                        } else {\n                            String value;\n                            if (t.matches(JsopTokenizer.NULL)) {\n                                value = null;\n                            } else {\n                                value = t.readRawValue().trim();\n                            }\n                            String targetPath = PathUtils.concat(path, subPath);\n                            if (!PathUtils.isAbsolute(targetPath)) {\n                                throw new Exception(\"absolute path expected: \" + targetPath + \", pos: \" + pos);\n                            }\n                            String parentPath = PathUtils.getParentPath(targetPath);\n                            String propName = PathUtils.getName(targetPath);\n                            cb.setProperty(parentPath, propName, value);\n                        }\n                        break;\n                    }\n                    case '-': {\n                        pos = t.getLastPos();\n                        String subPath = t.readString();\n                        String targetPath = PathUtils.concat(path, subPath);\n                        if (!PathUtils.isAbsolute(targetPath)) {\n                            throw new Exception(\"absolute path expected: \" + targetPath + \", pos: \" + pos);\n                        }\n                        cb.removeNode(targetPath);\n                        break;\n                    }\n                    case '^': {\n                        pos = t.getLastPos();\n                        String subPath = t.readString();\n                        t.read(':');\n                        String value;\n                        if (t.matches(JsopTokenizer.NULL)) {\n                            value = null;\n                        } else {\n                            value = t.readRawValue().trim();\n                        }\n                        String targetPath = PathUtils.concat(path, subPath);\n                        if (!PathUtils.isAbsolute(targetPath)) {\n                            throw new Exception(\"absolute path expected: \" + targetPath + \", pos: \" + pos);\n                        }\n                        String parentPath = PathUtils.getParentPath(targetPath);\n                        String propName = PathUtils.getName(targetPath);\n                        cb.setProperty(parentPath, propName, value);\n                        break;\n                    }\n                    case '>': {\n                        pos = t.getLastPos();\n                        String subPath = t.readString();\n                        String srcPath = PathUtils.concat(path, subPath);\n                        if (!PathUtils.isAbsolute(srcPath)) {\n                            throw new Exception(\"absolute path expected: \" + srcPath + \", pos: \" + pos);\n                        }\n                        t.read(':');\n                        pos = t.getLastPos();\n                        String targetPath = t.readString();\n                        if (!PathUtils.isAbsolute(targetPath)) {\n                            targetPath = PathUtils.concat(path, targetPath);\n                            if (!PathUtils.isAbsolute(targetPath)) {\n                                throw new Exception(\"absolute path expected: \" + targetPath + \", pos: \" + pos);\n                            }\n                        }\n                        cb.moveNode(srcPath, targetPath);\n                        break;\n                    }\n                    case '*': {\n                        pos = t.getLastPos();\n                        String subPath = t.readString();\n                        String srcPath = PathUtils.concat(path, subPath);\n                        if (!PathUtils.isAbsolute(srcPath)) {\n                            throw new Exception(\"absolute path expected: \" + srcPath + \", pos: \" + pos);\n                        }\n                        t.read(':');\n                        pos = t.getLastPos();\n                        String targetPath = t.readString();\n                        if (!PathUtils.isAbsolute(targetPath)) {\n                            targetPath = PathUtils.concat(path, targetPath);\n                            if (!PathUtils.isAbsolute(targetPath)) {\n                                throw new Exception(\"absolute path expected: \" + targetPath + \", pos: \" + pos);\n                            }\n                        }\n                        cb.copyNode(srcPath, targetPath);\n                        break;\n                    }\n                    default:\n                        throw new AssertionError(\"token type: \" + t.getTokenType());\n                }\n            }\n            String newHead = cb.doCommit();\n            if (newHead.equals(revisionId)) {\n                // 'empty' commit\n                return newHead;\n            }\n            gate.commit(newHead);\n            return newHead;\n        } catch (Exception e) {\n            throw new MicroKernelException(e);\n        }\n    }","id":48361,"modified_method":"public String commit(String path, String jsonDiff, String revision, String message) throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n        if (path.length() > 0 && !PathUtils.isAbsolute(path)) {\n            throw new IllegalArgumentException(\"absolute path expected: \" + path);\n        }\n\n        Id revisionId = revision == null ? getHeadRevisionId() : Id.fromString(revision);\n\n        try {\n            JsopTokenizer t = new JsopTokenizer(jsonDiff);\n            CommitBuilder cb = rep.getCommitBuilder(revisionId, message);\n            while (true) {\n                int r = t.read();\n                if (r == JsopTokenizer.END) {\n                    break;\n                }\n                int pos; // used for error reporting\n                switch (r) {\n                    case '+': {\n                        pos = t.getLastPos();\n                        String subPath = t.readString();\n                        t.read(':');\n                        if (t.matches('{')) {\n                            String nodePath = PathUtils.concat(path, subPath);\n                            if (!PathUtils.isAbsolute(nodePath)) {\n                                throw new Exception(\"absolute path expected: \" + nodePath + \", pos: \" + pos);\n                            }\n                            String parentPath = PathUtils.getParentPath(nodePath);\n                            String nodeName = PathUtils.getName(nodePath);\n                            // build the list of added nodes recursively\n                            LinkedList<AddNodeOperation> list = new LinkedList<AddNodeOperation>();\n                            addNode(list, parentPath, nodeName, t);\n                            for (AddNodeOperation op : list) {\n                                cb.addNode(op.path, op.name, op.props);\n                            }\n                        } else {\n                            String value;\n                            if (t.matches(JsopTokenizer.NULL)) {\n                                value = null;\n                            } else {\n                                value = t.readRawValue().trim();\n                            }\n                            String targetPath = PathUtils.concat(path, subPath);\n                            if (!PathUtils.isAbsolute(targetPath)) {\n                                throw new Exception(\"absolute path expected: \" + targetPath + \", pos: \" + pos);\n                            }\n                            String parentPath = PathUtils.getParentPath(targetPath);\n                            String propName = PathUtils.getName(targetPath);\n                            cb.setProperty(parentPath, propName, value);\n                        }\n                        break;\n                    }\n                    case '-': {\n                        pos = t.getLastPos();\n                        String subPath = t.readString();\n                        String targetPath = PathUtils.concat(path, subPath);\n                        if (!PathUtils.isAbsolute(targetPath)) {\n                            throw new Exception(\"absolute path expected: \" + targetPath + \", pos: \" + pos);\n                        }\n                        cb.removeNode(targetPath);\n                        break;\n                    }\n                    case '^': {\n                        pos = t.getLastPos();\n                        String subPath = t.readString();\n                        t.read(':');\n                        String value;\n                        if (t.matches(JsopTokenizer.NULL)) {\n                            value = null;\n                        } else {\n                            value = t.readRawValue().trim();\n                        }\n                        String targetPath = PathUtils.concat(path, subPath);\n                        if (!PathUtils.isAbsolute(targetPath)) {\n                            throw new Exception(\"absolute path expected: \" + targetPath + \", pos: \" + pos);\n                        }\n                        String parentPath = PathUtils.getParentPath(targetPath);\n                        String propName = PathUtils.getName(targetPath);\n                        cb.setProperty(parentPath, propName, value);\n                        break;\n                    }\n                    case '>': {\n                        pos = t.getLastPos();\n                        String subPath = t.readString();\n                        String srcPath = PathUtils.concat(path, subPath);\n                        if (!PathUtils.isAbsolute(srcPath)) {\n                            throw new Exception(\"absolute path expected: \" + srcPath + \", pos: \" + pos);\n                        }\n                        t.read(':');\n                        pos = t.getLastPos();\n                        String targetPath = t.readString();\n                        if (!PathUtils.isAbsolute(targetPath)) {\n                            targetPath = PathUtils.concat(path, targetPath);\n                            if (!PathUtils.isAbsolute(targetPath)) {\n                                throw new Exception(\"absolute path expected: \" + targetPath + \", pos: \" + pos);\n                            }\n                        }\n                        cb.moveNode(srcPath, targetPath);\n                        break;\n                    }\n                    case '*': {\n                        pos = t.getLastPos();\n                        String subPath = t.readString();\n                        String srcPath = PathUtils.concat(path, subPath);\n                        if (!PathUtils.isAbsolute(srcPath)) {\n                            throw new Exception(\"absolute path expected: \" + srcPath + \", pos: \" + pos);\n                        }\n                        t.read(':');\n                        pos = t.getLastPos();\n                        String targetPath = t.readString();\n                        if (!PathUtils.isAbsolute(targetPath)) {\n                            targetPath = PathUtils.concat(path, targetPath);\n                            if (!PathUtils.isAbsolute(targetPath)) {\n                                throw new Exception(\"absolute path expected: \" + targetPath + \", pos: \" + pos);\n                            }\n                        }\n                        cb.copyNode(srcPath, targetPath);\n                        break;\n                    }\n                    default:\n                        throw new AssertionError(\"token type: \" + t.getTokenType());\n                }\n            }\n            Id newHead = cb.doCommit();\n            if (!newHead.equals(revisionId)) {\n                // non-empty commit\n                gate.commit(newHead.toString());\n            }\n            return newHead.toString();\n        } catch (Exception e) {\n            throw new MicroKernelException(e);\n        }\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public long getChildNodeCount(String path, String revisionId) throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n\n        revisionId = revisionId == null ? getHeadRevision() : revisionId;\n\n        try {\n            return rep.getNodeState(revisionId, path).getChildNodeCount();\n        } catch (Exception e) {\n            throw new MicroKernelException(e);\n        }\n    }","id":48362,"modified_method":"public long getChildNodeCount(String path, String revision) throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n\n        Id revisionId = revision == null ? getHeadRevisionId() : Id.fromString(revision);\n\n        try {\n            return rep.getNodeState(revisionId, path).getChildNodeCount();\n        } catch (Exception e) {\n            throw new MicroKernelException(e);\n        }\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public String getHeadRevision() throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n\n        try {\n            return rep.getHeadRevision();\n        } catch (Exception e) {\n            throw new MicroKernelException(e);\n        }\n    }","id":48363,"modified_method":"public String getHeadRevision() throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n        return getHeadRevisionId().toString();\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public String getRevisions(long since, int maxEntries) throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n        maxEntries = maxEntries < 0 ? Integer.MAX_VALUE : maxEntries;\n        List<StoredCommit> history = new ArrayList<StoredCommit>();\n        try {\n            StoredCommit commit = rep.getHeadCommit();\n            while (commit != null\n                    && history.size() < maxEntries\n                    && commit.getCommitTS() >= since) {\n                history.add(commit);\n\n                Id commitId = commit.getParentId();\n                if (commitId == null) {\n                    break;\n                }\n                commit = rep.getCommit(commitId.toString());\n            }\n        } catch (Exception e) {\n            throw new MicroKernelException(e);\n        }\n\n        JsopBuilder buff = new JsopBuilder().array();\n        for (int i = history.size() - 1; i >= 0; i--) {\n            StoredCommit commit = history.get(i);\n            buff.object().\n                    key(\"id\").value(commit.getId().toString()).\n                    key(\"ts\").value(commit.getCommitTS()).\n                    endObject();\n        }\n        return buff.endArray().toString();\n    }","id":48364,"modified_method":"public String getRevisions(long since, int maxEntries) throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n        maxEntries = maxEntries < 0 ? Integer.MAX_VALUE : maxEntries;\n        List<StoredCommit> history = new ArrayList<StoredCommit>();\n        try {\n            StoredCommit commit = rep.getHeadCommit();\n            while (commit != null\n                    && history.size() < maxEntries\n                    && commit.getCommitTS() >= since) {\n                history.add(commit);\n\n                Id commitId = commit.getParentId();\n                if (commitId == null) {\n                    break;\n                }\n                commit = rep.getCommit(commitId);\n            }\n        } catch (Exception e) {\n            throw new MicroKernelException(e);\n        }\n\n        JsopBuilder buff = new JsopBuilder().array();\n        for (int i = history.size() - 1; i >= 0; i--) {\n            StoredCommit commit = history.get(i);\n            buff.object().\n                    key(\"id\").value(commit.getId().toString()).\n                    key(\"ts\").value(commit.getCommitTS()).\n                    endObject();\n        }\n        return buff.endArray().toString();\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public String getJournal(String fromRevisionId, String toRevisionId, String filter) throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n\n        toRevisionId = toRevisionId == null ? getHeadRevision() : toRevisionId;\n\n        List<StoredCommit> commits = new ArrayList<StoredCommit>();\n        try {\n            StoredCommit toCommit = rep.getCommit(toRevisionId);\n\n            Commit fromCommit;\n            if (toRevisionId.equals(fromRevisionId)) {\n                fromCommit = toCommit;\n            } else {\n                fromCommit = rep.getCommit(fromRevisionId);\n                if (fromCommit.getCommitTS() > toCommit.getCommitTS()) {\n                    // negative range, return empty array\n                    return \"[]\";\n                }\n            }\n\n            // collect commits, starting with toRevisionId\n            // and traversing parent commit links until we've reached\n            // fromRevisionId\n            StoredCommit commit = toCommit;\n            while (commit != null) {\n                commits.add(commit);\n                if (commit.getId().toString().equals(fromRevisionId)) {\n                    break;\n                }\n                Id commitId = commit.getParentId();\n                if (commitId == null) {\n                    break;\n                }\n                commit = rep.getCommit(commitId.toString());\n            }\n        } catch (Exception e) {\n            throw new MicroKernelException(e);\n        }\n\n        JsopBuilder commitBuff = new JsopBuilder().array();\n        // iterate over commits in chronological order,\n        // starting with oldest commit\n        for (int i = commits.size() - 1; i >= 0; i--) {\n            StoredCommit commit = commits.get(i);\n            if (commit.getParentId() == null) {\n                continue;\n            }\n            commitBuff.object().\n                    key(\"id\").value(commit.getId().toString()).\n                    key(\"ts\").value(commit.getCommitTS()).\n                    key(\"msg\").value(commit.getMsg());\n            String diff = diffCache.get(commit.getId().toString());\n            if (diff == null) {\n                diff = diff(commit.getParentId().toString(), commit.getId().toString(), filter);\n                diffCache.put(commit.getId().toString(), diff);\n            }\n            commitBuff.key(\"changes\").value(diff).endObject();\n        }\n        return commitBuff.endArray().toString();\n    }","id":48365,"modified_method":"public String getJournal(String fromRevision, String toRevision, String filter) throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n\n        Id fromRevisionId = Id.fromString(fromRevision);\n        Id toRevisionId = toRevision == null ? getHeadRevisionId() : Id.fromString(toRevision);\n\n        List<StoredCommit> commits = new ArrayList<StoredCommit>();\n        try {\n            StoredCommit toCommit = rep.getCommit(toRevisionId);\n\n            Commit fromCommit;\n            if (toRevisionId.equals(fromRevisionId)) {\n                fromCommit = toCommit;\n            } else {\n                fromCommit = rep.getCommit(fromRevisionId);\n                if (fromCommit.getCommitTS() > toCommit.getCommitTS()) {\n                    // negative range, return empty array\n                    return \"[]\";\n                }\n            }\n\n            // collect commits, starting with toRevisionId\n            // and traversing parent commit links until we've reached\n            // fromRevisionId\n            StoredCommit commit = toCommit;\n            while (commit != null) {\n                commits.add(commit);\n                if (commit.getId().equals(fromRevisionId)) {\n                    break;\n                }\n                Id commitId = commit.getParentId();\n                if (commitId == null) {\n                    break;\n                }\n                commit = rep.getCommit(commitId);\n            }\n        } catch (Exception e) {\n            throw new MicroKernelException(e);\n        }\n\n        JsopBuilder commitBuff = new JsopBuilder().array();\n        // iterate over commits in chronological order,\n        // starting with oldest commit\n        for (int i = commits.size() - 1; i >= 0; i--) {\n            StoredCommit commit = commits.get(i);\n            if (commit.getParentId() == null) {\n                continue;\n            }\n            commitBuff.object().\n                    key(\"id\").value(commit.getId().toString()).\n                    key(\"ts\").value(commit.getCommitTS()).\n                    key(\"msg\").value(commit.getMsg());\n            String diff = diffCache.get(commit.getId());\n            if (diff == null) {\n                diff = diff(commit.getParentId(), commit.getId(), filter);\n                diffCache.put(commit.getId(), diff);\n            }\n            commitBuff.key(\"changes\").value(diff).endObject();\n        }\n        return commitBuff.endArray().toString();\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public String getNodes(String path, String revisionId, int depth, long offset, int count, String filter) throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n\n        revisionId = revisionId == null ? getHeadRevision() : revisionId;\n\n        // TODO extract and evaluate filter criteria (such as e.g. ':hash') specified in 'filter' parameter\n\n        try {\n            JsopBuilder buf = new JsopBuilder().object();\n            toJson(buf, rep.getNodeState(revisionId, path), depth, (int) offset, count, true);\n            return buf.endObject().toString();\n        } catch (Exception e) {\n            throw new MicroKernelException(e);\n        }\n    }","id":48366,"modified_method":"public String getNodes(String path, String revision, int depth, long offset, int count, String filter) throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n\n        Id revisionId = revision == null ? getHeadRevisionId() : Id.fromString(revision);\n\n        // TODO extract and evaluate filter criteria (such as e.g. ':hash') specified in 'filter' parameter\n\n        try {\n            JsopBuilder buf = new JsopBuilder().object();\n            toJson(buf, rep.getNodeState(revisionId, path), depth, (int) offset, count, true);\n            return buf.endObject().toString();\n        } catch (Exception e) {\n            throw new MicroKernelException(e);\n        }\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public String getNodes(String path, String revisionId) throws MicroKernelException {\n        return getNodes(path, revisionId, 1, 0, -1, null);\n    }","id":48367,"modified_method":"public String getNodes(String path, String revision) throws MicroKernelException {\n        return getNodes(path, revision, 1, 0, -1, null);\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public boolean nodeExists(String path, String revisionId) throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n\n        revisionId = revisionId == null ? getHeadRevision() : revisionId;\n\n        return rep.nodeExists(revisionId, path);\n    }","id":48368,"modified_method":"public boolean nodeExists(String path, String revision) throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n\n        Id revisionId = revision == null ? getHeadRevisionId() : Id.fromString(revision);\n        return rep.nodeExists(revisionId, path);\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public StoredCommit getCommit(String id) throws NotFoundException, Exception {\n        if (!initialized) {\n            throw new IllegalStateException(\"not initialized\");\n        }\n        return rs.getCommit(Id.fromString(id));\n    }","id":48369,"modified_method":"public StoredCommit getCommit(Id id) throws NotFoundException, Exception {\n        if (!initialized) {\n            throw new IllegalStateException(\"not initialized\");\n        }\n        return rs.getCommit(id);\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"/**\n     *\n     * @param revId\n     * @param path\n     * @return\n     * @throws NotFoundException if either path or revision doesn't exist\n     * @throws Exception if another error occurs\n     */\n    public StoredNode getNode(String revId, String path) throws NotFoundException, Exception {\n        if (!initialized) {\n            throw new IllegalStateException(\"not initialized\");\n        }\n\n        StoredNode root = rs.getRootNode(Id.fromString(revId));\n        if (PathUtils.denotesRoot(path)) {\n            return root;\n        }\n\n        //return root.getNode(path.substring(1), pm);\n        Id[] ids = resolvePath(revId, path);\n        return rs.getNode(ids[ids.length - 1]);\n    }","id":48370,"modified_method":"/**\n     *\n     * @param revId\n     * @param path\n     * @return\n     * @throws NotFoundException if either path or revision doesn't exist\n     * @throws Exception if another error occurs\n     */\n    public StoredNode getNode(Id revId, String path) throws NotFoundException, Exception {\n        if (!initialized) {\n            throw new IllegalStateException(\"not initialized\");\n        }\n\n        StoredNode root = rs.getRootNode(revId);\n        if (PathUtils.denotesRoot(path)) {\n            return root;\n        }\n\n        //return root.getNode(path.substring(1), pm);\n        Id[] ids = resolvePath(revId, path);\n        return rs.getNode(ids[ids.length - 1]);\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public CommitBuilder getCommitBuilder(String revId, String msg) throws Exception {\n        return new CommitBuilder(revId, msg, rs);\n    }","id":48371,"modified_method":"public CommitBuilder getCommitBuilder(Id revId, String msg) throws Exception {\n        return new CommitBuilder(revId, msg, rs);\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public boolean nodeExists(String revId, String path) {\n        if (!initialized) {\n            throw new IllegalStateException(\"not initialized\");\n        }\n\n        if (!PathUtils.isAbsolute(path)) {\n            throw new IllegalArgumentException(\"illegal path\");\n        }\n\n        try {\n            String[] names = PathUtils.split(path);\n            Node parent = rs.getRootNode(Id.fromString(revId));\n            for (int i = 0; i < names.length; i++) {\n                ChildNodeEntry cne = parent.getChildNodeEntry(names[i]);\n                if (cne == null) {\n                    return false;\n                }\n                parent = rs.getNode(cne.getId());\n            }\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }","id":48372,"modified_method":"public boolean nodeExists(Id revId, String path) {\n        if (!initialized) {\n            throw new IllegalStateException(\"not initialized\");\n        }\n\n        if (!PathUtils.isAbsolute(path)) {\n            throw new IllegalArgumentException(\"illegal path\");\n        }\n\n        try {\n            String[] names = PathUtils.split(path);\n            Node parent = rs.getRootNode(revId);\n            for (int i = 0; i < names.length; i++) {\n                ChildNodeEntry cne = parent.getChildNodeEntry(names[i]);\n                if (cne == null) {\n                    return false;\n                }\n                parent = rs.getNode(cne.getId());\n            }\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"/**\n     *\n     * @param revId\n     * @param nodePath\n     * @return\n     * @throws IllegalArgumentException if the specified path is not absolute\n     * @throws NotFoundException if either path or revision doesn't exist\n     * @throws Exception if another error occurs\n     */\n    Id[] /* array of node id's */ resolvePath(String revId, String nodePath) throws Exception {\n        if (!PathUtils.isAbsolute(nodePath)) {\n            throw new IllegalArgumentException(\"illegal path\");\n        }\n\n        Commit commit = rs.getCommit(Id.fromString(revId));\n\n        if (PathUtils.denotesRoot(nodePath)) {\n            return new Id[]{commit.getRootNodeId()};\n        }\n        String[] names = PathUtils.split(nodePath);\n        Id[] ids = new Id[names.length + 1];\n\n        // get root node\n        ids[0] = commit.getRootNodeId();\n        Node parent = rs.getNode(ids[0]);\n        // traverse path and remember id of each element\n        for (int i = 0; i < names.length; i++) {\n            ChildNodeEntry cne = parent.getChildNodeEntry(names[i]);\n            if (cne == null) {\n                throw new NotFoundException(nodePath);\n            }\n            ids[i + 1] = cne.getId();\n            parent = rs.getNode(cne.getId());\n        }\n        return ids;\n    }","id":48373,"modified_method":"/**\n     *\n     * @param revId\n     * @param nodePath\n     * @return\n     * @throws IllegalArgumentException if the specified path is not absolute\n     * @throws NotFoundException if either path or revision doesn't exist\n     * @throws Exception if another error occurs\n     */\n    Id[] /* array of node id's */ resolvePath(Id revId, String nodePath) throws Exception {\n        if (!PathUtils.isAbsolute(nodePath)) {\n            throw new IllegalArgumentException(\"illegal path\");\n        }\n\n        Commit commit = rs.getCommit(revId);\n\n        if (PathUtils.denotesRoot(nodePath)) {\n            return new Id[]{commit.getRootNodeId()};\n        }\n        String[] names = PathUtils.split(nodePath);\n        Id[] ids = new Id[names.length + 1];\n\n        // get root node\n        ids[0] = commit.getRootNodeId();\n        Node parent = rs.getNode(ids[0]);\n        // traverse path and remember id of each element\n        for (int i = 0; i < names.length; i++) {\n            ChildNodeEntry cne = parent.getChildNodeEntry(names[i]);\n            if (cne == null) {\n                throw new NotFoundException(nodePath);\n            }\n            ids[i + 1] = cne.getId();\n            parent = rs.getNode(cne.getId());\n        }\n        return ids;\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public NodeState getNodeState(String revId, String path) throws NotFoundException, Exception {\n        return rs.getNodeState(getNode(revId, path));\n    }","id":48374,"modified_method":"public NodeState getNodeState(Id revId, String path) throws NotFoundException, Exception {\n        return rs.getNodeState(getNode(revId, path));\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public String getHeadRevision() throws Exception {\n        if (!initialized) {\n            throw new IllegalStateException(\"not initialized\");\n        }\n        return rs.getHeadCommitId().toString();\n    }","id":48375,"modified_method":"public Id getHeadRevision() throws Exception {\n        if (!initialized) {\n            throw new IllegalStateException(\"not initialized\");\n        }\n        return rs.getHeadCommitId();\n    }","commit_id":"d9c3db295ee9e69b9890946261d5fd99fbde6779","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public String getParentId() {\n        return parentId;\n    }","id":48376,"modified_method":"public Id getParentId() {\n        return parentId;\n    }","commit_id":"c272dff08a5a0b7374acefe251d5a2f11eba10d6","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public String /* new revId */ doCommit() throws Exception {\n        if (staged.isEmpty()) {\n            // nothing to commit\n            return baseRevId;\n        }\n\n        String currentHead = store.getHeadCommitId().toString();\n        if (!currentHead.equals(baseRevId)) {\n            // todo gracefully handle certain conflicts (e.g. changes on moved sub-trees, competing deletes etc)\n            // update base revision to new head\n            baseRevId = currentHead;\n            // clear staging area\n            staged.clear();\n            // replay change log on new base revision\n            // copy log in order to avoid concurrent modifications\n            List<Change> log = new ArrayList<Change>(changeLog);\n            for (Change change : log) {\n                change.apply();\n            }\n        }\n\n        Id rootNodeId = persistStagedNodes();\n\n        Id newRevId;\n        store.lockHead();\n        try {\n            currentHead = store.getHeadCommitId().toString();\n            if (!currentHead.equals(baseRevId)) {\n                StoredNode baseRoot = store.getRootNode(Id.fromString(baseRevId));\n                StoredNode theirRoot = store.getRootNode(Id.fromString(currentHead));\n                StoredNode ourRoot = store.getNode(rootNodeId);\n\n                rootNodeId = mergeTree(baseRoot, ourRoot, theirRoot);\n\n                baseRevId = currentHead;\n            }\n\n            if (store.getCommit(Id.fromString(currentHead)).getRootNodeId().equals(rootNodeId)) {\n                // the commit didn't cause any changes,\n                // no need to create new commit object/update head revision\n                return currentHead;\n            }\n            MutableCommit newCommit = new MutableCommit();\n            newCommit.setParentId(baseRevId);\n            newCommit.setCommitTS(System.currentTimeMillis());\n            newCommit.setMsg(msg);\n            newCommit.setRootNodeId(rootNodeId);\n            newRevId = store.putCommit(newCommit);\n\n            store.setHeadCommitId(newRevId);\n        } finally {\n            store.unlockHead();\n        }\n\n        // reset instance in order to be reusable\n        staged.clear();\n        changeLog.clear();\n\n        return newRevId.toString();\n    }","id":48377,"modified_method":"public String /* new revId */ doCommit() throws Exception {\n        if (staged.isEmpty()) {\n            // nothing to commit\n            return baseRevId;\n        }\n\n        String currentHead = store.getHeadCommitId().toString();\n        if (!currentHead.equals(baseRevId)) {\n            // todo gracefully handle certain conflicts (e.g. changes on moved sub-trees, competing deletes etc)\n            // update base revision to new head\n            baseRevId = currentHead;\n            // clear staging area\n            staged.clear();\n            // replay change log on new base revision\n            // copy log in order to avoid concurrent modifications\n            List<Change> log = new ArrayList<Change>(changeLog);\n            for (Change change : log) {\n                change.apply();\n            }\n        }\n\n        Id rootNodeId = persistStagedNodes();\n\n        Id newRevId;\n        store.lockHead();\n        try {\n            currentHead = store.getHeadCommitId().toString();\n            if (!currentHead.equals(baseRevId)) {\n                StoredNode baseRoot = store.getRootNode(Id.fromString(baseRevId));\n                StoredNode theirRoot = store.getRootNode(Id.fromString(currentHead));\n                StoredNode ourRoot = store.getNode(rootNodeId);\n\n                rootNodeId = mergeTree(baseRoot, ourRoot, theirRoot);\n\n                baseRevId = currentHead;\n            }\n\n            if (store.getCommit(Id.fromString(currentHead)).getRootNodeId().equals(rootNodeId)) {\n                // the commit didn't cause any changes,\n                // no need to create new commit object/update head revision\n                return currentHead;\n            }\n            MutableCommit newCommit = new MutableCommit();\n            newCommit.setParentId(Id.fromString(baseRevId));\n            newCommit.setCommitTS(System.currentTimeMillis());\n            newCommit.setMsg(msg);\n            newCommit.setRootNodeId(rootNodeId);\n            newRevId = store.putCommit(newCommit);\n\n            store.setHeadCommitId(newRevId);\n        } finally {\n            store.unlockHead();\n        }\n\n        // reset instance in order to be reusable\n        staged.clear();\n        changeLog.clear();\n\n        return newRevId.toString();\n    }","commit_id":"c272dff08a5a0b7374acefe251d5a2f11eba10d6","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"/**\n     * Start GC cycle.\n     * \n     * @throws Exception if an error occurs\n     */\n    public void start() throws Exception {\n        commits.clear();\n        firstCommitId = rsTo.getHeadCommitId().toString();\n        \n        // Copy the head commit\n        MutableCommit commitTo = copy(rsFrom.getHeadCommit());\n        commitTo.setParentId(rsTo.getHeadCommitId().toString());\n        Id revId = rsTo.putCommit(commitTo);\n        rsTo.setHeadCommitId(revId);\n\n        // Add this as sentinel\n        commits.add(commitTo);\n\n        running = true;\n    }","id":48378,"modified_method":"/**\n     * Start GC cycle.\n     * \n     * @throws Exception if an error occurs\n     */\n    public void start() throws Exception {\n        commits.clear();\n        firstCommitId = rsTo.getHeadCommitId();\n        \n        // Copy the head commit\n        MutableCommit commitTo = copy(rsFrom.getHeadCommit());\n        commitTo.setParentId(rsTo.getHeadCommitId());\n        Id revId = rsTo.putCommit(commitTo);\n        rsTo.setHeadCommitId(revId);\n\n        // Add this as sentinel\n        commits.add(commitTo);\n\n        running = true;\n    }","commit_id":"c272dff08a5a0b7374acefe251d5a2f11eba10d6","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"/**\n     * Stop GC cycle.\n     */\n    public void stop() throws Exception {\n        running = false;\n        \n        if (commits.size() > 1) {\n            String parentId = firstCommitId;\n            for (MutableCommit commit : commits) {\n                commit.setParentId(parentId);\n                rsTo.putCommit(commit);\n                parentId = commit.getId().toString();\n            }\n        }\n        // TODO: swap rsFrom/rsTo and reset them\n        rsFrom = rsTo;\n        rsTo = null;\n    }","id":48379,"modified_method":"/**\n     * Stop GC cycle.\n     */\n    public void stop() throws Exception {\n        running = false;\n        \n        if (commits.size() > 1) {\n            Id parentId = firstCommitId;\n            for (MutableCommit commit : commits) {\n                commit.setParentId(parentId);\n                rsTo.putCommit(commit);\n                parentId = commit.getId();\n            }\n        }\n        // TODO: swap rsFrom/rsTo and reset them\n        rsFrom = rsTo;\n        rsTo = null;\n    }","commit_id":"c272dff08a5a0b7374acefe251d5a2f11eba10d6","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public String getJournal(String fromRevisionId, String toRevisionId, String filter) throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n\n        toRevisionId = toRevisionId == null ? getHeadRevision() : toRevisionId;\n\n        List<StoredCommit> commits = new ArrayList<StoredCommit>();\n        try {\n            StoredCommit toCommit = rep.getCommit(toRevisionId);\n\n            Commit fromCommit;\n            if (toRevisionId.equals(fromRevisionId)) {\n                fromCommit = toCommit;\n            } else {\n                fromCommit = rep.getCommit(fromRevisionId);\n                if (fromCommit.getCommitTS() > toCommit.getCommitTS()) {\n                    // negative range, return empty array\n                    return \"[]\";\n                }\n            }\n\n            // collect commits, starting with toRevisionId\n            // and traversing parent commit links until we've reached\n            // fromRevisionId\n            StoredCommit commit = toCommit;\n            while (commit != null) {\n                commits.add(commit);\n                if (commit.getId().toString().equals(fromRevisionId)) {\n                    break;\n                }\n                String commitId = commit.getParentId();\n                if (commitId == null) {\n                    break;\n                }\n                commit = rep.getCommit(commitId);\n            }\n        } catch (Exception e) {\n            throw new MicroKernelException(e);\n        }\n\n        JsopBuilder commitBuff = new JsopBuilder().array();\n        // iterate over commits in chronological order,\n        // starting with oldest commit\n        for (int i = commits.size() - 1; i >= 0; i--) {\n            StoredCommit commit = commits.get(i);\n            if (commit.getParentId() == null) {\n                continue;\n            }\n            commitBuff.object().\n                    key(\"id\").value(commit.getId().toString()).\n                    key(\"ts\").value(commit.getCommitTS()).\n                    key(\"msg\").value(commit.getMsg());\n            String diff = diffCache.get(commit.getId().toString());\n            if (diff == null) {\n                diff = diff(commit.getParentId().toString(), commit.getId().toString(), filter);\n                diffCache.put(commit.getId().toString(), diff);\n            }\n            commitBuff.key(\"changes\").value(diff).endObject();\n        }\n        return commitBuff.endArray().toString();\n    }","id":48380,"modified_method":"public String getJournal(String fromRevisionId, String toRevisionId, String filter) throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n\n        toRevisionId = toRevisionId == null ? getHeadRevision() : toRevisionId;\n\n        List<StoredCommit> commits = new ArrayList<StoredCommit>();\n        try {\n            StoredCommit toCommit = rep.getCommit(toRevisionId);\n\n            Commit fromCommit;\n            if (toRevisionId.equals(fromRevisionId)) {\n                fromCommit = toCommit;\n            } else {\n                fromCommit = rep.getCommit(fromRevisionId);\n                if (fromCommit.getCommitTS() > toCommit.getCommitTS()) {\n                    // negative range, return empty array\n                    return \"[]\";\n                }\n            }\n\n            // collect commits, starting with toRevisionId\n            // and traversing parent commit links until we've reached\n            // fromRevisionId\n            StoredCommit commit = toCommit;\n            while (commit != null) {\n                commits.add(commit);\n                if (commit.getId().toString().equals(fromRevisionId)) {\n                    break;\n                }\n                Id commitId = commit.getParentId();\n                if (commitId == null) {\n                    break;\n                }\n                commit = rep.getCommit(commitId.toString());\n            }\n        } catch (Exception e) {\n            throw new MicroKernelException(e);\n        }\n\n        JsopBuilder commitBuff = new JsopBuilder().array();\n        // iterate over commits in chronological order,\n        // starting with oldest commit\n        for (int i = commits.size() - 1; i >= 0; i--) {\n            StoredCommit commit = commits.get(i);\n            if (commit.getParentId() == null) {\n                continue;\n            }\n            commitBuff.object().\n                    key(\"id\").value(commit.getId().toString()).\n                    key(\"ts\").value(commit.getCommitTS()).\n                    key(\"msg\").value(commit.getMsg());\n            String diff = diffCache.get(commit.getId().toString());\n            if (diff == null) {\n                diff = diff(commit.getParentId().toString(), commit.getId().toString(), filter);\n                diffCache.put(commit.getId().toString(), diff);\n            }\n            commitBuff.key(\"changes\").value(diff).endObject();\n        }\n        return commitBuff.endArray().toString();\n    }","commit_id":"c272dff08a5a0b7374acefe251d5a2f11eba10d6","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public String getRevisions(long since, int maxEntries) throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n        maxEntries = maxEntries < 0 ? Integer.MAX_VALUE : maxEntries;\n        List<StoredCommit> history = new ArrayList<StoredCommit>();\n        try {\n            StoredCommit commit = rep.getHeadCommit();\n            while (commit != null\n                    && history.size() < maxEntries\n                    && commit.getCommitTS() >= since) {\n                history.add(commit);\n\n                String commitId = commit.getParentId();\n                if (commitId == null) {\n                    break;\n                }\n                commit = rep.getCommit(commitId);\n            }\n        } catch (Exception e) {\n            throw new MicroKernelException(e);\n        }\n\n        JsopBuilder buff = new JsopBuilder().array();\n        for (int i = history.size() - 1; i >= 0; i--) {\n            StoredCommit commit = history.get(i);\n            buff.object().\n                    key(\"id\").value(commit.getId().toString()).\n                    key(\"ts\").value(commit.getCommitTS()).\n                    endObject();\n        }\n        return buff.endArray().toString();\n    }","id":48381,"modified_method":"public String getRevisions(long since, int maxEntries) throws MicroKernelException {\n        if (rep == null) {\n            throw new IllegalStateException(\"this instance has already been disposed\");\n        }\n        maxEntries = maxEntries < 0 ? Integer.MAX_VALUE : maxEntries;\n        List<StoredCommit> history = new ArrayList<StoredCommit>();\n        try {\n            StoredCommit commit = rep.getHeadCommit();\n            while (commit != null\n                    && history.size() < maxEntries\n                    && commit.getCommitTS() >= since) {\n                history.add(commit);\n\n                Id commitId = commit.getParentId();\n                if (commitId == null) {\n                    break;\n                }\n                commit = rep.getCommit(commitId.toString());\n            }\n        } catch (Exception e) {\n            throw new MicroKernelException(e);\n        }\n\n        JsopBuilder buff = new JsopBuilder().array();\n        for (int i = history.size() - 1; i >= 0; i--) {\n            StoredCommit commit = history.get(i);\n            buff.object().\n                    key(\"id\").value(commit.getId().toString()).\n                    key(\"ts\").value(commit.getCommitTS()).\n                    endObject();\n        }\n        return buff.endArray().toString();\n    }","commit_id":"c272dff08a5a0b7374acefe251d5a2f11eba10d6","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public void setParentId(String parentId) {\n        this.parentId = parentId;\n    }","id":48382,"modified_method":"public void setParentId(Id parentId) {\n        this.parentId = parentId;\n    }","commit_id":"c272dff08a5a0b7374acefe251d5a2f11eba10d6","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public StoredCommit(Id id, String parentId, long commitTS, Id rootNodeId, String msg) {\n        this.id = id;\n        this.parentId = parentId;\n        this.commitTS = commitTS;\n        this.rootNodeId = rootNodeId;\n        this.msg = msg;\n    }","id":48383,"modified_method":"public StoredCommit(Id id, Id parentId, long commitTS, Id rootNodeId, String msg) {\n        this.id = id;\n        this.parentId = parentId;\n        this.commitTS = commitTS;\n        this.rootNodeId = rootNodeId;\n        this.msg = msg;\n    }","commit_id":"c272dff08a5a0b7374acefe251d5a2f11eba10d6","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public static StoredCommit deserialize(Id id, Binding binding) throws Exception {\n        Id rootNodeId = new Id(binding.readBytesValue(\"rootNodeId\"));\n        long commitTS = binding.readLongValue(\"commitTS\");\n        String msg = binding.readStringValue(\"msg\");\n        String parentId = binding.readStringValue(\"parentId\");\n        return new StoredCommit(id, \"\".equals(parentId) ? null : parentId, commitTS, rootNodeId, \"\".equals(msg) ? null : msg);\n    }","id":48384,"modified_method":"public static StoredCommit deserialize(Id id, Binding binding) throws Exception {\n        Id rootNodeId = new Id(binding.readBytesValue(\"rootNodeId\"));\n        long commitTS = binding.readLongValue(\"commitTS\");\n        String msg = binding.readStringValue(\"msg\");\n        String parentId = binding.readStringValue(\"parentId\");\n        return new StoredCommit(id, \"\".equals(parentId) ? null : Id.fromString(parentId),\n                commitTS, rootNodeId, \"\".equals(msg) ? null : msg);\n    }","commit_id":"c272dff08a5a0b7374acefe251d5a2f11eba10d6","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"protected void doImportLayouts(\n\t\t\tlong userId, long groupId, boolean privateLayout,\n\t\t\tMap<String, String[]> parameterMap, File file)\n\t\tthrows Exception {\n\n\t\tboolean deleteMissingLayouts = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.DELETE_MISSING_LAYOUTS,\n\t\t\tBoolean.TRUE.booleanValue());\n\t\tboolean deletePortletData = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.DELETE_PORTLET_DATA);\n\t\tboolean importCategories = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.CATEGORIES);\n\t\tboolean importPermissions = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PERMISSIONS);\n\t\tboolean importPortletData = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PORTLET_DATA);\n\t\tboolean importPortletSetup = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PORTLET_SETUP);\n\t\tboolean importPortletArchivedSetups = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PORTLET_ARCHIVED_SETUPS);\n\t\tboolean importPortletUserPreferences = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PORTLET_USER_PREFERENCES);\n\t\tboolean importTheme = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.THEME);\n\t\tboolean importThemeSettings = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.THEME_REFERENCE);\n\t\tboolean importLogo = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.LOGO);\n\t\tboolean importLayoutSetSettings = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.LAYOUT_SET_SETTINGS);\n\n\t\tboolean layoutSetPrototypeLinkEnabled = MapUtil.getBoolean(\n\t\t\tparameterMap,\n\t\t\tPortletDataHandlerKeys.LAYOUT_SET_PROTOTYPE_LINK_ENABLED, true);\n\n\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\tif (group.isLayoutSetPrototype()) {\n\t\t\tlayoutSetPrototypeLinkEnabled = false;\n\t\t}\n\n\t\tString layoutsImportMode = MapUtil.getString(\n\t\t\tparameterMap, PortletDataHandlerKeys.LAYOUTS_IMPORT_MODE,\n\t\t\tPortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_MERGE_BY_LAYOUT_UUID);\n\t\tString userIdStrategy = MapUtil.getString(\n\t\t\tparameterMap, PortletDataHandlerKeys.USER_ID_STRATEGY);\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Delete portlet data \" + deletePortletData);\n\t\t\t_log.debug(\"Import categories \" + importCategories);\n\t\t\t_log.debug(\"Import permissions \" + importPermissions);\n\t\t\t_log.debug(\"Import portlet data \" + importPortletData);\n\t\t\t_log.debug(\"Import portlet setup \" + importPortletSetup);\n\t\t\t_log.debug(\n\t\t\t\t\"Import portlet archived setups \" +\n\t\t\t\t\timportPortletArchivedSetups);\n\t\t\t_log.debug(\n\t\t\t\t\"Import portlet user preferences \" +\n\t\t\t\t\timportPortletUserPreferences);\n\t\t\t_log.debug(\"Import theme \" + importTheme);\n\t\t}\n\n\t\tStopWatch stopWatch = null;\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\tstopWatch = new StopWatch();\n\n\t\t\tstopWatch.start();\n\t\t}\n\n\t\tLayoutCache layoutCache = new LayoutCache();\n\n\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\tgroupId, privateLayout);\n\n\t\tlong companyId = layoutSet.getCompanyId();\n\n\t\tUser user = UserUtil.findByPrimaryKey(userId);\n\n\t\tUserIdStrategy strategy = _portletImporter.getUserIdStrategy(\n\t\t\tuser, userIdStrategy);\n\n\t\tZipReader zipReader = ZipReaderFactoryUtil.getZipReader(file);\n\n\t\tPortletDataContext portletDataContext =\n\t\t\tPortletDataContextFactoryUtil.createImportPortletDataContext(\n\t\t\t\tcompanyId, groupId, parameterMap, strategy, zipReader);\n\n\t\tportletDataContext.setPortetDataContextListener(\n\t\t\tnew PortletDataContextListenerImpl(portletDataContext));\n\n\t\tportletDataContext.setPrivateLayout(privateLayout);\n\n\t\t// Zip\n\n\t\tInputStream themeZip = null;\n\n\t\tvalidateFile(portletDataContext);\n\n\t\t// Company id\n\n\t\tlong sourceCompanyId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"company-id\"));\n\n\t\tportletDataContext.setSourceCompanyId(sourceCompanyId);\n\n\t\t// Company group id\n\n\t\tlong sourceCompanyGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"company-group-id\"));\n\n\t\tportletDataContext.setSourceCompanyGroupId(sourceCompanyGroupId);\n\n\t\t// Group id\n\n\t\tlong sourceGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"group-id\"));\n\n\t\tportletDataContext.setSourceGroupId(sourceGroupId);\n\n\t\t// User personal site group id\n\n\t\tlong sourceUserPersonalSiteGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"user-personal-site-group-id\"));\n\n\t\tportletDataContext.setSourceUserPersonalSiteGroupId(\n\t\t\tsourceUserPersonalSiteGroupId);\n\n\t\t// Layout and layout set prototype\n\n\t\tString layoutSetPrototypeUuid = _layoutsElement.attributeValue(\n\t\t\t\"layout-set-prototype-uuid\");\n\n\t\tString larType = _headerElement.attributeValue(\"type\");\n\n\t\tif (group.isLayoutPrototype() && larType.equals(\"layout-prototype\")) {\n\t\t\tdeleteMissingLayouts = false;\n\n\t\t\tLayoutPrototype layoutPrototype =\n\t\t\t\tLayoutPrototypeLocalServiceUtil.getLayoutPrototype(\n\t\t\t\t\tgroup.getClassPK());\n\n\t\t\tString layoutPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\n\t\t\tLayoutPrototype existingLayoutPrototype = null;\n\n\t\t\tif (Validator.isNotNull(layoutPrototypeUuid)) {\n\t\t\t\ttry {\n\t\t\t\t\texistingLayoutPrototype =\n\t\t\t\t\t\tLayoutPrototypeLocalServiceUtil.\n\t\t\t\t\t\t\tgetLayoutPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\t\t\tlayoutPrototypeUuid, companyId);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchLayoutPrototypeException nslpe) {\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingLayoutPrototype == null) {\n\t\t\t\tlayoutPrototype.setUuid(layoutPrototypeUuid);\n\n\t\t\t\tLayoutPrototypeLocalServiceUtil.updateLayoutPrototype(\n\t\t\t\t\tlayoutPrototype);\n\t\t\t}\n\t\t}\n\t\telse if (group.isLayoutSetPrototype() &&\n\t\t\t\t larType.equals(\"layout-set-prototype\")) {\n\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.getLayoutSetPrototype(\n\t\t\t\t\tgroup.getClassPK());\n\n\t\t\tString importedLayoutSetPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\n\t\t\tLayoutSetPrototype existingLayoutSetPrototype = null;\n\n\t\t\tif (Validator.isNotNull(importedLayoutSetPrototypeUuid)) {\n\t\t\t\ttry {\n\t\t\t\t\texistingLayoutSetPrototype =\n\t\t\t\t\t\tLayoutSetPrototypeLocalServiceUtil.\n\t\t\t\t\t\t\tgetLayoutSetPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\t\t\timportedLayoutSetPrototypeUuid, companyId);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchLayoutSetPrototypeException nslspe) {\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingLayoutSetPrototype == null) {\n\t\t\t\tlayoutSetPrototype.setUuid(importedLayoutSetPrototypeUuid);\n\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.updateLayoutSetPrototype(\n\t\t\t\t\tlayoutSetPrototype);\n\t\t\t}\n\t\t}\n\t\telse if (larType.equals(\"layout-set-prototype\")) {\n\t\t\tlayoutSetPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\t\t}\n\n\t\tServiceContext serviceContext =\n\t\t\tServiceContextThreadLocal.getServiceContext();\n\n\t\tif (Validator.isNotNull(layoutSetPrototypeUuid)) {\n\t\t\tlayoutSet.setLayoutSetPrototypeUuid(layoutSetPrototypeUuid);\n\t\t\tlayoutSet.setLayoutSetPrototypeLinkEnabled(\n\t\t\t\tlayoutSetPrototypeLinkEnabled);\n\n\t\t\tLayoutSetLocalServiceUtil.updateLayoutSet(layoutSet);\n\t\t}\n\n\t\t// Look and feel\n\n\t\tif (importTheme) {\n\t\t\tthemeZip = portletDataContext.getZipEntryAsInputStream(\"theme.zip\");\n\t\t}\n\n\t\t// Look and feel\n\n\t\tString themeId = layoutSet.getThemeId();\n\t\tString colorSchemeId = layoutSet.getColorSchemeId();\n\n\t\tif (importThemeSettings) {\n\t\t\tAttribute themeIdAttribute = _headerElement.attribute(\"theme-id\");\n\n\t\t\tif (themeIdAttribute != null) {\n\t\t\t\tthemeId = themeIdAttribute.getValue();\n\t\t\t}\n\n\t\t\tAttribute colorSchemeIdAttribute = _headerElement.attribute(\n\t\t\t\t\"color-scheme-id\");\n\n\t\t\tif (colorSchemeIdAttribute != null) {\n\t\t\t\tcolorSchemeId = colorSchemeIdAttribute.getValue();\n\t\t\t}\n\t\t}\n\n\t\tif (importLogo) {\n\t\t\tString logoPath = _headerElement.attributeValue(\"logo-path\");\n\n\t\t\tbyte[] iconBytes = portletDataContext.getZipEntryAsByteArray(\n\t\t\t\tlogoPath);\n\n\t\t\tif ((iconBytes != null) && (iconBytes.length > 0)) {\n\t\t\t\tFile logo = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tlogo = FileUtil.createTempFile(iconBytes);\n\n\t\t\t\t\tLayoutSetLocalServiceUtil.updateLogo(\n\t\t\t\t\t\tgroupId, privateLayout, true, logo);\n\t\t\t\t}\n\t\t\t\tfinally {\n\t\t\t\t\tFileUtil.delete(logo);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tLayoutSetLocalServiceUtil.updateLogo(\n\t\t\t\t\tgroupId, privateLayout, false, (File)null);\n\t\t\t}\n\t\t}\n\n\t\tif (importLayoutSetSettings) {\n\t\t\tString settings = GetterUtil.getString(\n\t\t\t\t_headerElement.elementText(\"settings\"));\n\n\t\t\tLayoutSetLocalServiceUtil.updateSettings(\n\t\t\t\tgroupId, privateLayout, settings);\n\t\t}\n\n\t\tString css = GetterUtil.getString(_headerElement.elementText(\"css\"));\n\n\t\tif (themeZip != null) {\n\t\t\tString importThemeId = importTheme(layoutSet, themeZip);\n\n\t\t\tif (importThemeId != null) {\n\t\t\t\tthemeId = importThemeId;\n\t\t\t\tcolorSchemeId =\n\t\t\t\t\tColorSchemeFactoryUtil.getDefaultRegularColorSchemeId();\n\t\t\t}\n\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Importing theme takes \" + stopWatch.getTime() + \" ms\");\n\t\t\t}\n\t\t}\n\n\t\tboolean wapTheme = false;\n\n\t\tLayoutSetLocalServiceUtil.updateLookAndFeel(\n\t\t\tgroupId, privateLayout, themeId, colorSchemeId, css, wapTheme);\n\n\t\t// Read asset categories, asset tags, comments, locks, permissions, and\n\t\t// ratings entries to make them available to the data handlers through\n\t\t// the context\n\n\t\tif (importPermissions) {\n\t\t\t_permissionImporter.readPortletDataPermissions(portletDataContext);\n\t\t}\n\n\t\tif (importCategories || group.isCompany()) {\n\t\t\t_portletImporter.readAssetCategories(portletDataContext);\n\t\t}\n\n\t\t_portletImporter.readAssetTags(portletDataContext);\n\t\t_portletImporter.readComments(portletDataContext);\n\t\t_portletImporter.readExpandoTables(portletDataContext);\n\t\t_portletImporter.readLocks(portletDataContext);\n\t\t_portletImporter.readRatingsEntries(portletDataContext);\n\n\t\t// Layouts\n\n\t\tList<Layout> previousLayouts = LayoutUtil.findByG_P(\n\t\t\tgroupId, privateLayout);\n\n\t\t// Remove layouts that were deleted from the layout set prototype\n\n\t\tif (Validator.isNotNull(layoutSetPrototypeUuid) &&\n\t\t\tlayoutSetPrototypeLinkEnabled) {\n\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.\n\t\t\t\t\tgetLayoutSetPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\tlayoutSetPrototypeUuid, companyId);\n\n\t\t\tGroup layoutSetPrototypeGroup = layoutSetPrototype.getGroup();\n\n\t\t\tfor (Layout layout : previousLayouts) {\n\t\t\t\tString sourcePrototypeLayoutUuid =\n\t\t\t\t\tlayout.getSourcePrototypeLayoutUuid();\n\n\t\t\t\tif (Validator.isNull(layout.getSourcePrototypeLayoutUuid())) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tLayout sourcePrototypeLayout = LayoutUtil.fetchByUUID_G_P(\n\t\t\t\t\tsourcePrototypeLayoutUuid,\n\t\t\t\t\tlayoutSetPrototypeGroup.getGroupId(), true);\n\n\t\t\t\tif (sourcePrototypeLayout == null) {\n\t\t\t\t\tLayoutLocalServiceUtil.deleteLayout(\n\t\t\t\t\t\tlayout, false, serviceContext);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tList<Layout> newLayouts = new ArrayList<Layout>();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\tif (_layoutElements.size() > 0) {\n\t\t\t\t_log.debug(\"Importing layouts\");\n\t\t\t}\n\t\t}\n\n\t\tfor (Element layoutElement : _layoutElements) {\n\t\t\timportLayout(portletDataContext, newLayouts, layoutElement);\n\t\t}\n\n\t\tElement portletsElement = _rootElement.element(\"portlets\");\n\n\t\tList<Element> portletElements = portletsElement.elements(\"portlet\");\n\n\t\t// Delete portlet data\n\n\t\tMap<Long, Layout> newLayoutsMap =\n\t\t\t(Map<Long, Layout>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\tLayout.class);\n\n\t\tif (deletePortletData) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\tif (portletElements.size() > 0) {\n\t\t\t\t\t_log.debug(\"Deleting portlet data\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (Element portletElement : portletElements) {\n\t\t\t\tString portletId = portletElement.attributeValue(\"portlet-id\");\n\t\t\t\tlong layoutId = GetterUtil.getLong(\n\t\t\t\t\tportletElement.attributeValue(\"layout-id\"));\n\n\t\t\t\tLayout layout = newLayoutsMap.get(layoutId);\n\n\t\t\t\tlong plid = layout.getPlid();\n\n\t\t\t\tportletDataContext.setPlid(plid);\n\n\t\t\t\t_portletImporter.deletePortletData(\n\t\t\t\t\tportletDataContext, portletId, plid);\n\t\t\t}\n\t\t}\n\n\t\t// Import portlets\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\tif (portletElements.size() > 0) {\n\t\t\t\t_log.debug(\"Importing portlets\");\n\t\t\t}\n\t\t}\n\n\t\tfor (Element portletElement : portletElements) {\n\t\t\tString portletPath = portletElement.attributeValue(\"path\");\n\t\t\tString portletId = portletElement.attributeValue(\"portlet-id\");\n\t\t\tlong layoutId = GetterUtil.getLong(\n\t\t\t\tportletElement.attributeValue(\"layout-id\"));\n\t\t\tlong oldPlid = GetterUtil.getLong(\n\t\t\t\tportletElement.attributeValue(\"old-plid\"));\n\n\t\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\t\tportletDataContext.getCompanyId(), portletId);\n\n\t\t\tif (!portlet.isActive() || portlet.isUndeployedPortlet()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tLayout layout = newLayoutsMap.get(layoutId);\n\n\t\t\tlong plid = LayoutConstants.DEFAULT_PLID;\n\n\t\t\tif (layout != null) {\n\t\t\t\tplid = layout.getPlid();\n\t\t\t}\n\n\t\t\tlayout = LayoutUtil.fetchByPrimaryKey(plid);\n\n\t\t\tif ((layout == null) && !group.isCompany()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tportletDataContext.setPlid(plid);\n\t\t\tportletDataContext.setOldPlid(oldPlid);\n\n\t\t\tDocument portletDocument = SAXReaderUtil.read(\n\t\t\t\tportletDataContext.getZipEntryAsString(portletPath));\n\n\t\t\tportletElement = portletDocument.getRootElement();\n\n\t\t\t// The order of the import is important. You must always import the\n\t\t\t// portlet preferences first, then the portlet data, then the\n\t\t\t// portlet permissions. The import of the portlet data assumes that\n\t\t\t// portlet preferences already exist.\n\n\t\t\t_portletImporter.setPortletScope(\n\t\t\t\tportletDataContext, portletElement);\n\n\t\t\tlong portletPreferencesGroupId = groupId;\n\n\t\t\tElement portletDataElement = portletElement.element(\"portlet-data\");\n\n\t\t\tboolean importData =\n\t\t\t\timportPortletData && (portletDataElement != null);\n\n\t\t\ttry {\n\t\t\t\tif ((layout != null) && !group.isCompany()) {\n\t\t\t\t\tportletPreferencesGroupId = layout.getGroupId();\n\t\t\t\t}\n\n\t\t\t\t// Portlet preferences\n\n\t\t\t\t_portletImporter.importPortletPreferences(\n\t\t\t\t\tportletDataContext, layoutSet.getCompanyId(),\n\t\t\t\t\tportletPreferencesGroupId, layout, null, portletElement,\n\t\t\t\t\timportPortletSetup, importPortletArchivedSetups,\n\t\t\t\t\timportPortletUserPreferences, false, importData);\n\n\t\t\t\t// Portlet data\n\n\t\t\t\tif (importData) {\n\t\t\t\t\t_portletImporter.importPortletData(\n\t\t\t\t\t\tportletDataContext, portletId, plid,\n\t\t\t\t\t\tportletDataElement);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\t_portletImporter.resetPortletScope(\n\t\t\t\t\tportletDataContext, portletPreferencesGroupId);\n\t\t\t}\n\n\t\t\t// Portlet permissions\n\n\t\t\tif (importPermissions) {\n\t\t\t\t_permissionImporter.importPortletPermissions(\n\t\t\t\t\tlayoutCache, companyId, groupId, userId, layout,\n\t\t\t\t\tportletElement, portletId);\n\t\t\t}\n\n\t\t\t// Archived setups\n\n\t\t\t_portletImporter.importPortletPreferences(\n\t\t\t\tportletDataContext, layoutSet.getCompanyId(), groupId, null,\n\t\t\t\tnull, portletElement, importPortletSetup,\n\t\t\t\timportPortletArchivedSetups, importPortletUserPreferences,\n\t\t\t\tfalse, importData);\n\t\t}\n\n\t\tif (importPermissions) {\n\t\t\tif (userId > 0) {\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tUser.class);\n\n\t\t\t\tindexer.reindex(userId);\n\t\t\t}\n\t\t}\n\n\t\t// Asset links\n\n\t\t_portletImporter.readAssetLinks(portletDataContext);\n\n\t\t// Delete missing layouts\n\n\t\tif (deleteMissingLayouts) {\n\t\t\tdeleteMissingLayouts(\n\t\t\t\tgroupId, privateLayout, newLayouts, previousLayouts,\n\t\t\t\tserviceContext);\n\t\t}\n\n\t\t// Page count\n\n\t\tlayoutSet = LayoutSetLocalServiceUtil.updatePageCount(\n\t\t\tgroupId, privateLayout);\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Importing layouts takes \" + stopWatch.getTime() + \" ms\");\n\t\t}\n\n\t\t// Site\n\n\t\tGroupLocalServiceUtil.updateSite(groupId, true);\n\n\t\t// Last merge time must be the same for merged layouts and the layout\n\t\t// set\n\n\t\tlong lastMergeTime = System.currentTimeMillis();\n\n\t\tfor (Layout layout : newLayouts) {\n\t\t\tboolean modifiedTypeSettingsProperties = false;\n\n\t\t\tUnicodeProperties typeSettingsProperties =\n\t\t\t\tlayout.getTypeSettingsProperties();\n\n\t\t\t// Journal article layout type\n\n\t\t\tString articleId = typeSettingsProperties.getProperty(\"article-id\");\n\n\t\t\tif (Validator.isNotNull(articleId)) {\n\t\t\t\tMap<String, String> articleIds =\n\t\t\t\t\t(Map<String, String>)portletDataContext.\n\t\t\t\t\t\tgetNewPrimaryKeysMap(\n\t\t\t\t\t\t\tJournalArticle.class + \".articleId\");\n\n\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\"article-id\",\n\t\t\t\t\tMapUtil.getString(articleIds, articleId, articleId));\n\n\t\t\t\tmodifiedTypeSettingsProperties = true;\n\t\t\t}\n\n\t\t\t// Last merge time for layout\n\n\t\t\tif (layoutsImportMode.equals(\n\t\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\t\tLAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\tSites.LAST_MERGE_TIME, String.valueOf(lastMergeTime));\n\n\t\t\t\tmodifiedTypeSettingsProperties = true;\n\t\t\t}\n\n\t\t\tif (modifiedTypeSettingsProperties) {\n\t\t\t\tLayoutUtil.update(layout);\n\t\t\t}\n\t\t}\n\n\t\t// Last merge time for layout set\n\n\t\tif (layoutsImportMode.equals(\n\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\tLAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\tUnicodeProperties settingsProperties =\n\t\t\t\tlayoutSet.getSettingsProperties();\n\n\t\t\tsettingsProperties.setProperty(\n\t\t\t\tSites.LAST_MERGE_TIME, String.valueOf(lastMergeTime));\n\n\t\t\tLayoutSetLocalServiceUtil.updateLayoutSet(layoutSet);\n\t\t}\n\n\t\tzipReader.close();\n\t}","id":48385,"modified_method":"protected void doImportLayouts(\n\t\t\tlong userId, long groupId, boolean privateLayout,\n\t\t\tMap<String, String[]> parameterMap, File file)\n\t\tthrows Exception {\n\n\t\tboolean deleteMissingLayouts = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.DELETE_MISSING_LAYOUTS,\n\t\t\tBoolean.TRUE.booleanValue());\n\t\tboolean deletePortletData = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.DELETE_PORTLET_DATA);\n\t\tboolean importCategories = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.CATEGORIES);\n\t\tboolean importPermissions = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PERMISSIONS);\n\t\tboolean importPortletData = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PORTLET_DATA);\n\t\tboolean importPortletSetup = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PORTLET_SETUP);\n\t\tboolean importPortletArchivedSetups = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PORTLET_ARCHIVED_SETUPS);\n\t\tboolean importPortletUserPreferences = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PORTLET_USER_PREFERENCES);\n\t\tboolean importTheme = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.THEME);\n\t\tboolean importThemeSettings = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.THEME_REFERENCE);\n\t\tboolean importLogo = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.LOGO);\n\t\tboolean importLayoutSetSettings = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.LAYOUT_SET_SETTINGS);\n\n\t\tboolean layoutSetPrototypeLinkEnabled = MapUtil.getBoolean(\n\t\t\tparameterMap,\n\t\t\tPortletDataHandlerKeys.LAYOUT_SET_PROTOTYPE_LINK_ENABLED, true);\n\n\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\tif (group.isLayoutSetPrototype()) {\n\t\t\tlayoutSetPrototypeLinkEnabled = false;\n\t\t}\n\n\t\tString layoutsImportMode = MapUtil.getString(\n\t\t\tparameterMap, PortletDataHandlerKeys.LAYOUTS_IMPORT_MODE,\n\t\t\tPortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_MERGE_BY_LAYOUT_UUID);\n\t\tString userIdStrategy = MapUtil.getString(\n\t\t\tparameterMap, PortletDataHandlerKeys.USER_ID_STRATEGY);\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Delete portlet data \" + deletePortletData);\n\t\t\t_log.debug(\"Import categories \" + importCategories);\n\t\t\t_log.debug(\"Import permissions \" + importPermissions);\n\t\t\t_log.debug(\"Import portlet data \" + importPortletData);\n\t\t\t_log.debug(\"Import portlet setup \" + importPortletSetup);\n\t\t\t_log.debug(\n\t\t\t\t\"Import portlet archived setups \" +\n\t\t\t\t\timportPortletArchivedSetups);\n\t\t\t_log.debug(\n\t\t\t\t\"Import portlet user preferences \" +\n\t\t\t\t\timportPortletUserPreferences);\n\t\t\t_log.debug(\"Import theme \" + importTheme);\n\t\t}\n\n\t\tStopWatch stopWatch = null;\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\tstopWatch = new StopWatch();\n\n\t\t\tstopWatch.start();\n\t\t}\n\n\t\tLayoutCache layoutCache = new LayoutCache();\n\n\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\tgroupId, privateLayout);\n\n\t\tlong companyId = layoutSet.getCompanyId();\n\n\t\tUser user = UserUtil.findByPrimaryKey(userId);\n\n\t\tUserIdStrategy strategy = _portletImporter.getUserIdStrategy(\n\t\t\tuser, userIdStrategy);\n\n\t\tZipReader zipReader = ZipReaderFactoryUtil.getZipReader(file);\n\n\t\tPortletDataContext portletDataContext =\n\t\t\tPortletDataContextFactoryUtil.createImportPortletDataContext(\n\t\t\t\tcompanyId, groupId, parameterMap, strategy, zipReader);\n\n\t\tportletDataContext.setPortetDataContextListener(\n\t\t\tnew PortletDataContextListenerImpl(portletDataContext));\n\n\t\tportletDataContext.setPrivateLayout(privateLayout);\n\n\t\t// Zip\n\n\t\tInputStream themeZip = null;\n\n\t\tvalidateFile(portletDataContext);\n\n\t\t// Company id\n\n\t\tlong sourceCompanyId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"company-id\"));\n\n\t\tportletDataContext.setSourceCompanyId(sourceCompanyId);\n\n\t\t// Company group id\n\n\t\tlong sourceCompanyGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"company-group-id\"));\n\n\t\tportletDataContext.setSourceCompanyGroupId(sourceCompanyGroupId);\n\n\t\t// Group id\n\n\t\tlong sourceGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"group-id\"));\n\n\t\tportletDataContext.setSourceGroupId(sourceGroupId);\n\n\t\t// User personal site group id\n\n\t\tlong sourceUserPersonalSiteGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"user-personal-site-group-id\"));\n\n\t\tportletDataContext.setSourceUserPersonalSiteGroupId(\n\t\t\tsourceUserPersonalSiteGroupId);\n\n\t\t// Layout and layout set prototype\n\n\t\tString layoutSetPrototypeUuid = _layoutsElement.attributeValue(\n\t\t\t\"layout-set-prototype-uuid\");\n\n\t\tString larType = _headerElement.attributeValue(\"type\");\n\n\t\tif (group.isLayoutPrototype() && larType.equals(\"layout-prototype\")) {\n\t\t\tdeleteMissingLayouts = false;\n\n\t\t\tLayoutPrototype layoutPrototype =\n\t\t\t\tLayoutPrototypeLocalServiceUtil.getLayoutPrototype(\n\t\t\t\t\tgroup.getClassPK());\n\n\t\t\tString layoutPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\n\t\t\tLayoutPrototype existingLayoutPrototype = null;\n\n\t\t\tif (Validator.isNotNull(layoutPrototypeUuid)) {\n\t\t\t\ttry {\n\t\t\t\t\texistingLayoutPrototype =\n\t\t\t\t\t\tLayoutPrototypeLocalServiceUtil.\n\t\t\t\t\t\t\tgetLayoutPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\t\t\tlayoutPrototypeUuid, companyId);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchLayoutPrototypeException nslpe) {\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingLayoutPrototype == null) {\n\t\t\t\tList<Layout> layoutsWithPreviousPrototype =\n\t\t\t\t\tLayoutLocalServiceUtil.getLayoutsByLayoutPrototypeUuid(\n\t\t\t\t\t\tlayoutPrototype.getUuid());\n\n\t\t\t\tlayoutPrototype.setUuid(layoutPrototypeUuid);\n\n\t\t\t\tLayoutPrototypeLocalServiceUtil.updateLayoutPrototype(\n\t\t\t\t\tlayoutPrototype);\n\n\t\t\t\tfor (Layout layout : layoutsWithPreviousPrototype) {\n\t\t\t\t\tlayout.setLayoutPrototypeUuid(layoutPrototypeUuid);\n\n\t\t\t\t\tLayoutLocalServiceUtil.updateLayout(layout);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (group.isLayoutSetPrototype() &&\n\t\t\t\t larType.equals(\"layout-set-prototype\")) {\n\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.getLayoutSetPrototype(\n\t\t\t\t\tgroup.getClassPK());\n\n\t\t\tString importedLayoutSetPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\n\t\t\tLayoutSetPrototype existingLayoutSetPrototype = null;\n\n\t\t\tif (Validator.isNotNull(importedLayoutSetPrototypeUuid)) {\n\t\t\t\ttry {\n\t\t\t\t\texistingLayoutSetPrototype =\n\t\t\t\t\t\tLayoutSetPrototypeLocalServiceUtil.\n\t\t\t\t\t\t\tgetLayoutSetPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\t\t\timportedLayoutSetPrototypeUuid, companyId);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchLayoutSetPrototypeException nslspe) {\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingLayoutSetPrototype == null) {\n\t\t\t\tlayoutSetPrototype.setUuid(importedLayoutSetPrototypeUuid);\n\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.updateLayoutSetPrototype(\n\t\t\t\t\tlayoutSetPrototype);\n\t\t\t}\n\t\t}\n\t\telse if (larType.equals(\"layout-set-prototype\")) {\n\t\t\tlayoutSetPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\t\t}\n\n\t\tServiceContext serviceContext =\n\t\t\tServiceContextThreadLocal.getServiceContext();\n\n\t\tif (Validator.isNotNull(layoutSetPrototypeUuid)) {\n\t\t\tlayoutSet.setLayoutSetPrototypeUuid(layoutSetPrototypeUuid);\n\t\t\tlayoutSet.setLayoutSetPrototypeLinkEnabled(\n\t\t\t\tlayoutSetPrototypeLinkEnabled);\n\n\t\t\tLayoutSetLocalServiceUtil.updateLayoutSet(layoutSet);\n\t\t}\n\n\t\t// Look and feel\n\n\t\tif (importTheme) {\n\t\t\tthemeZip = portletDataContext.getZipEntryAsInputStream(\"theme.zip\");\n\t\t}\n\n\t\t// Look and feel\n\n\t\tString themeId = layoutSet.getThemeId();\n\t\tString colorSchemeId = layoutSet.getColorSchemeId();\n\n\t\tif (importThemeSettings) {\n\t\t\tAttribute themeIdAttribute = _headerElement.attribute(\"theme-id\");\n\n\t\t\tif (themeIdAttribute != null) {\n\t\t\t\tthemeId = themeIdAttribute.getValue();\n\t\t\t}\n\n\t\t\tAttribute colorSchemeIdAttribute = _headerElement.attribute(\n\t\t\t\t\"color-scheme-id\");\n\n\t\t\tif (colorSchemeIdAttribute != null) {\n\t\t\t\tcolorSchemeId = colorSchemeIdAttribute.getValue();\n\t\t\t}\n\t\t}\n\n\t\tif (importLogo) {\n\t\t\tString logoPath = _headerElement.attributeValue(\"logo-path\");\n\n\t\t\tbyte[] iconBytes = portletDataContext.getZipEntryAsByteArray(\n\t\t\t\tlogoPath);\n\n\t\t\tif ((iconBytes != null) && (iconBytes.length > 0)) {\n\t\t\t\tFile logo = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tlogo = FileUtil.createTempFile(iconBytes);\n\n\t\t\t\t\tLayoutSetLocalServiceUtil.updateLogo(\n\t\t\t\t\t\tgroupId, privateLayout, true, logo);\n\t\t\t\t}\n\t\t\t\tfinally {\n\t\t\t\t\tFileUtil.delete(logo);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tLayoutSetLocalServiceUtil.updateLogo(\n\t\t\t\t\tgroupId, privateLayout, false, (File)null);\n\t\t\t}\n\t\t}\n\n\t\tif (importLayoutSetSettings) {\n\t\t\tString settings = GetterUtil.getString(\n\t\t\t\t_headerElement.elementText(\"settings\"));\n\n\t\t\tLayoutSetLocalServiceUtil.updateSettings(\n\t\t\t\tgroupId, privateLayout, settings);\n\t\t}\n\n\t\tString css = GetterUtil.getString(_headerElement.elementText(\"css\"));\n\n\t\tif (themeZip != null) {\n\t\t\tString importThemeId = importTheme(layoutSet, themeZip);\n\n\t\t\tif (importThemeId != null) {\n\t\t\t\tthemeId = importThemeId;\n\t\t\t\tcolorSchemeId =\n\t\t\t\t\tColorSchemeFactoryUtil.getDefaultRegularColorSchemeId();\n\t\t\t}\n\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Importing theme takes \" + stopWatch.getTime() + \" ms\");\n\t\t\t}\n\t\t}\n\n\t\tboolean wapTheme = false;\n\n\t\tLayoutSetLocalServiceUtil.updateLookAndFeel(\n\t\t\tgroupId, privateLayout, themeId, colorSchemeId, css, wapTheme);\n\n\t\t// Read asset categories, asset tags, comments, locks, permissions, and\n\t\t// ratings entries to make them available to the data handlers through\n\t\t// the context\n\n\t\tif (importPermissions) {\n\t\t\t_permissionImporter.readPortletDataPermissions(portletDataContext);\n\t\t}\n\n\t\tif (importCategories || group.isCompany()) {\n\t\t\t_portletImporter.readAssetCategories(portletDataContext);\n\t\t}\n\n\t\t_portletImporter.readAssetTags(portletDataContext);\n\t\t_portletImporter.readComments(portletDataContext);\n\t\t_portletImporter.readExpandoTables(portletDataContext);\n\t\t_portletImporter.readLocks(portletDataContext);\n\t\t_portletImporter.readRatingsEntries(portletDataContext);\n\n\t\t// Layouts\n\n\t\tList<Layout> previousLayouts = LayoutUtil.findByG_P(\n\t\t\tgroupId, privateLayout);\n\n\t\t// Remove layouts that were deleted from the layout set prototype\n\n\t\tif (Validator.isNotNull(layoutSetPrototypeUuid) &&\n\t\t\tlayoutSetPrototypeLinkEnabled) {\n\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.\n\t\t\t\t\tgetLayoutSetPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\tlayoutSetPrototypeUuid, companyId);\n\n\t\t\tGroup layoutSetPrototypeGroup = layoutSetPrototype.getGroup();\n\n\t\t\tfor (Layout layout : previousLayouts) {\n\t\t\t\tString sourcePrototypeLayoutUuid =\n\t\t\t\t\tlayout.getSourcePrototypeLayoutUuid();\n\n\t\t\t\tif (Validator.isNull(layout.getSourcePrototypeLayoutUuid())) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tLayout sourcePrototypeLayout = LayoutUtil.fetchByUUID_G_P(\n\t\t\t\t\tsourcePrototypeLayoutUuid,\n\t\t\t\t\tlayoutSetPrototypeGroup.getGroupId(), true);\n\n\t\t\t\tif (sourcePrototypeLayout == null) {\n\t\t\t\t\tLayoutLocalServiceUtil.deleteLayout(\n\t\t\t\t\t\tlayout, false, serviceContext);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tList<Layout> newLayouts = new ArrayList<Layout>();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\tif (_layoutElements.size() > 0) {\n\t\t\t\t_log.debug(\"Importing layouts\");\n\t\t\t}\n\t\t}\n\n\t\tfor (Element layoutElement : _layoutElements) {\n\t\t\timportLayout(portletDataContext, newLayouts, layoutElement);\n\t\t}\n\n\t\tElement portletsElement = _rootElement.element(\"portlets\");\n\n\t\tList<Element> portletElements = portletsElement.elements(\"portlet\");\n\n\t\t// Delete portlet data\n\n\t\tMap<Long, Layout> newLayoutsMap =\n\t\t\t(Map<Long, Layout>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\tLayout.class);\n\n\t\tif (deletePortletData) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\tif (portletElements.size() > 0) {\n\t\t\t\t\t_log.debug(\"Deleting portlet data\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (Element portletElement : portletElements) {\n\t\t\t\tString portletId = portletElement.attributeValue(\"portlet-id\");\n\t\t\t\tlong layoutId = GetterUtil.getLong(\n\t\t\t\t\tportletElement.attributeValue(\"layout-id\"));\n\n\t\t\t\tLayout layout = newLayoutsMap.get(layoutId);\n\n\t\t\t\tlong plid = layout.getPlid();\n\n\t\t\t\tportletDataContext.setPlid(plid);\n\n\t\t\t\t_portletImporter.deletePortletData(\n\t\t\t\t\tportletDataContext, portletId, plid);\n\t\t\t}\n\t\t}\n\n\t\t// Import portlets\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\tif (portletElements.size() > 0) {\n\t\t\t\t_log.debug(\"Importing portlets\");\n\t\t\t}\n\t\t}\n\n\t\tfor (Element portletElement : portletElements) {\n\t\t\tString portletPath = portletElement.attributeValue(\"path\");\n\t\t\tString portletId = portletElement.attributeValue(\"portlet-id\");\n\t\t\tlong layoutId = GetterUtil.getLong(\n\t\t\t\tportletElement.attributeValue(\"layout-id\"));\n\t\t\tlong oldPlid = GetterUtil.getLong(\n\t\t\t\tportletElement.attributeValue(\"old-plid\"));\n\n\t\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\t\tportletDataContext.getCompanyId(), portletId);\n\n\t\t\tif (!portlet.isActive() || portlet.isUndeployedPortlet()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tLayout layout = newLayoutsMap.get(layoutId);\n\n\t\t\tlong plid = LayoutConstants.DEFAULT_PLID;\n\n\t\t\tif (layout != null) {\n\t\t\t\tplid = layout.getPlid();\n\t\t\t}\n\n\t\t\tlayout = LayoutUtil.fetchByPrimaryKey(plid);\n\n\t\t\tif ((layout == null) && !group.isCompany()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tportletDataContext.setPlid(plid);\n\t\t\tportletDataContext.setOldPlid(oldPlid);\n\n\t\t\tDocument portletDocument = SAXReaderUtil.read(\n\t\t\t\tportletDataContext.getZipEntryAsString(portletPath));\n\n\t\t\tportletElement = portletDocument.getRootElement();\n\n\t\t\t// The order of the import is important. You must always import the\n\t\t\t// portlet preferences first, then the portlet data, then the\n\t\t\t// portlet permissions. The import of the portlet data assumes that\n\t\t\t// portlet preferences already exist.\n\n\t\t\t_portletImporter.setPortletScope(\n\t\t\t\tportletDataContext, portletElement);\n\n\t\t\tlong portletPreferencesGroupId = groupId;\n\n\t\t\tElement portletDataElement = portletElement.element(\"portlet-data\");\n\n\t\t\tboolean importData =\n\t\t\t\timportPortletData && (portletDataElement != null);\n\n\t\t\ttry {\n\t\t\t\tif ((layout != null) && !group.isCompany()) {\n\t\t\t\t\tportletPreferencesGroupId = layout.getGroupId();\n\t\t\t\t}\n\n\t\t\t\t// Portlet preferences\n\n\t\t\t\t_portletImporter.importPortletPreferences(\n\t\t\t\t\tportletDataContext, layoutSet.getCompanyId(),\n\t\t\t\t\tportletPreferencesGroupId, layout, null, portletElement,\n\t\t\t\t\timportPortletSetup, importPortletArchivedSetups,\n\t\t\t\t\timportPortletUserPreferences, false, importData);\n\n\t\t\t\t// Portlet data\n\n\t\t\t\tif (importData) {\n\t\t\t\t\t_portletImporter.importPortletData(\n\t\t\t\t\t\tportletDataContext, portletId, plid,\n\t\t\t\t\t\tportletDataElement);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\t_portletImporter.resetPortletScope(\n\t\t\t\t\tportletDataContext, portletPreferencesGroupId);\n\t\t\t}\n\n\t\t\t// Portlet permissions\n\n\t\t\tif (importPermissions) {\n\t\t\t\t_permissionImporter.importPortletPermissions(\n\t\t\t\t\tlayoutCache, companyId, groupId, userId, layout,\n\t\t\t\t\tportletElement, portletId);\n\t\t\t}\n\n\t\t\t// Archived setups\n\n\t\t\t_portletImporter.importPortletPreferences(\n\t\t\t\tportletDataContext, layoutSet.getCompanyId(), groupId, null,\n\t\t\t\tnull, portletElement, importPortletSetup,\n\t\t\t\timportPortletArchivedSetups, importPortletUserPreferences,\n\t\t\t\tfalse, importData);\n\t\t}\n\n\t\tif (importPermissions) {\n\t\t\tif (userId > 0) {\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tUser.class);\n\n\t\t\t\tindexer.reindex(userId);\n\t\t\t}\n\t\t}\n\n\t\t// Asset links\n\n\t\t_portletImporter.readAssetLinks(portletDataContext);\n\n\t\t// Delete missing layouts\n\n\t\tif (deleteMissingLayouts) {\n\t\t\tdeleteMissingLayouts(\n\t\t\t\tgroupId, privateLayout, newLayouts, previousLayouts,\n\t\t\t\tserviceContext);\n\t\t}\n\n\t\t// Page count\n\n\t\tlayoutSet = LayoutSetLocalServiceUtil.updatePageCount(\n\t\t\tgroupId, privateLayout);\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Importing layouts takes \" + stopWatch.getTime() + \" ms\");\n\t\t}\n\n\t\t// Site\n\n\t\tGroupLocalServiceUtil.updateSite(groupId, true);\n\n\t\t// Last merge time must be the same for merged layouts and the layout\n\t\t// set\n\n\t\tlong lastMergeTime = System.currentTimeMillis();\n\n\t\tfor (Layout layout : newLayouts) {\n\t\t\tboolean modifiedTypeSettingsProperties = false;\n\n\t\t\tUnicodeProperties typeSettingsProperties =\n\t\t\t\tlayout.getTypeSettingsProperties();\n\n\t\t\t// Journal article layout type\n\n\t\t\tString articleId = typeSettingsProperties.getProperty(\"article-id\");\n\n\t\t\tif (Validator.isNotNull(articleId)) {\n\t\t\t\tMap<String, String> articleIds =\n\t\t\t\t\t(Map<String, String>)portletDataContext.\n\t\t\t\t\t\tgetNewPrimaryKeysMap(\n\t\t\t\t\t\t\tJournalArticle.class + \".articleId\");\n\n\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\"article-id\",\n\t\t\t\t\tMapUtil.getString(articleIds, articleId, articleId));\n\n\t\t\t\tmodifiedTypeSettingsProperties = true;\n\t\t\t}\n\n\t\t\t// Last merge time for layout\n\n\t\t\tif (layoutsImportMode.equals(\n\t\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\t\tLAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\tSites.LAST_MERGE_TIME, String.valueOf(lastMergeTime));\n\n\t\t\t\tmodifiedTypeSettingsProperties = true;\n\t\t\t}\n\n\t\t\tif (modifiedTypeSettingsProperties) {\n\t\t\t\tLayoutUtil.update(layout);\n\t\t\t}\n\t\t}\n\n\t\t// Last merge time for layout set\n\n\t\tif (layoutsImportMode.equals(\n\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\tLAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\tUnicodeProperties settingsProperties =\n\t\t\t\tlayoutSet.getSettingsProperties();\n\n\t\t\tsettingsProperties.setProperty(\n\t\t\t\tSites.LAST_MERGE_TIME, String.valueOf(lastMergeTime));\n\n\t\t\tLayoutSetLocalServiceUtil.updateLayoutSet(layoutSet);\n\t\t}\n\n\t\tzipReader.close();\n\t}","commit_id":"e02237dc1c26f609ed06bcdf09906a3926c9aa0d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doImportLayouts(\n\t\t\tlong userId, long groupId, boolean privateLayout,\n\t\t\tMap<String, String[]> parameterMap, File file)\n\t\tthrows Exception {\n\n\t\tboolean deleteMissingLayouts = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.DELETE_MISSING_LAYOUTS,\n\t\t\tBoolean.TRUE.booleanValue());\n\t\tboolean deletePortletData = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.DELETE_PORTLET_DATA);\n\t\tboolean importCategories = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.CATEGORIES);\n\t\tboolean importPermissions = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PERMISSIONS);\n\t\tboolean importLogo = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.LOGO);\n\t\tboolean importLayoutSetSettings = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.LAYOUT_SET_SETTINGS);\n\n\t\tboolean layoutSetPrototypeLinkEnabled = MapUtil.getBoolean(\n\t\t\tparameterMap,\n\t\t\tPortletDataHandlerKeys.LAYOUT_SET_PROTOTYPE_LINK_ENABLED, true);\n\n\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\tif (group.isLayoutSetPrototype()) {\n\t\t\tlayoutSetPrototypeLinkEnabled = false;\n\t\t}\n\n\t\tString layoutsImportMode = MapUtil.getString(\n\t\t\tparameterMap, PortletDataHandlerKeys.LAYOUTS_IMPORT_MODE,\n\t\t\tPortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_MERGE_BY_LAYOUT_UUID);\n\t\tString userIdStrategy = MapUtil.getString(\n\t\t\tparameterMap, PortletDataHandlerKeys.USER_ID_STRATEGY);\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Delete portlet data \" + deletePortletData);\n\t\t\t_log.debug(\"Import categories \" + importCategories);\n\t\t\t_log.debug(\"Import permissions \" + importPermissions);\n\t\t}\n\n\t\tStopWatch stopWatch = null;\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\tstopWatch = new StopWatch();\n\n\t\t\tstopWatch.start();\n\t\t}\n\n\t\tLayoutCache layoutCache = new LayoutCache();\n\n\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\tgroupId, privateLayout);\n\n\t\tlong companyId = layoutSet.getCompanyId();\n\n\t\tUser user = UserUtil.findByPrimaryKey(userId);\n\n\t\tServiceContext serviceContext =\n\t\t\tServiceContextThreadLocal.getServiceContext();\n\n\t\tif (serviceContext == null) {\n\t\t\tserviceContext = new ServiceContext();\n\n\t\t\tserviceContext.setCompanyId(companyId);\n\t\t\tserviceContext.setSignedIn(false);\n\t\t\tserviceContext.setUserId(userId);\n\n\t\t\tServiceContextThreadLocal.pushServiceContext(serviceContext);\n\t\t}\n\n\t\tUserIdStrategy strategy = _portletImporter.getUserIdStrategy(\n\t\t\tuser, userIdStrategy);\n\n\t\tManifestSummary manifestSummary =\n\t\t\tExportImportHelperUtil.getManifestSummary(\n\t\t\t\tuserId, groupId, parameterMap, file);\n\n\t\tif (BackgroundTaskThreadLocal.hasBackgroundTask()) {\n\t\t\tPortletDataHandlerStatusMessageSenderUtil.sendStatusMessage(\n\t\t\t\t\"layout\", manifestSummary);\n\t\t}\n\n\t\tZipReader zipReader = ZipReaderFactoryUtil.getZipReader(file);\n\n\t\tPortletDataContext portletDataContext =\n\t\t\tPortletDataContextFactoryUtil.createImportPortletDataContext(\n\t\t\t\tcompanyId, groupId, parameterMap, strategy, zipReader);\n\n\t\tportletDataContext.setManifestSummary(manifestSummary);\n\t\tportletDataContext.setPortetDataContextListener(\n\t\t\tnew PortletDataContextListenerImpl(portletDataContext));\n\n\t\tportletDataContext.setPrivateLayout(privateLayout);\n\n\t\t// Zip\n\n\t\tvalidateFile(portletDataContext);\n\n\t\t// Company id\n\n\t\tlong sourceCompanyId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"company-id\"));\n\n\t\tportletDataContext.setSourceCompanyId(sourceCompanyId);\n\n\t\t// Company group id\n\n\t\tlong sourceCompanyGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"company-group-id\"));\n\n\t\tportletDataContext.setSourceCompanyGroupId(sourceCompanyGroupId);\n\n\t\t// Group id\n\n\t\tlong sourceGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"group-id\"));\n\n\t\tportletDataContext.setSourceGroupId(sourceGroupId);\n\n\t\t// User personal site group id\n\n\t\tlong sourceUserPersonalSiteGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"user-personal-site-group-id\"));\n\n\t\tportletDataContext.setSourceUserPersonalSiteGroupId(\n\t\t\tsourceUserPersonalSiteGroupId);\n\n\t\t// Layout and layout set prototype\n\n\t\tString layoutSetPrototypeUuid = _layoutsElement.attributeValue(\n\t\t\t\"layout-set-prototype-uuid\");\n\n\t\tString larType = _headerElement.attributeValue(\"type\");\n\n\t\tif (group.isLayoutPrototype() && larType.equals(\"layout-prototype\")) {\n\t\t\tdeleteMissingLayouts = false;\n\n\t\t\tLayoutPrototype layoutPrototype =\n\t\t\t\tLayoutPrototypeLocalServiceUtil.getLayoutPrototype(\n\t\t\t\t\tgroup.getClassPK());\n\n\t\t\tString layoutPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\n\t\t\tLayoutPrototype existingLayoutPrototype = null;\n\n\t\t\tif (Validator.isNotNull(layoutPrototypeUuid)) {\n\t\t\t\ttry {\n\t\t\t\t\texistingLayoutPrototype =\n\t\t\t\t\t\tLayoutPrototypeLocalServiceUtil.\n\t\t\t\t\t\t\tgetLayoutPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\t\t\tlayoutPrototypeUuid, companyId);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchLayoutPrototypeException nslpe) {\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingLayoutPrototype == null) {\n\t\t\t\tList<Layout> layouts =\n\t\t\t\t\tLayoutLocalServiceUtil.getLayoutsByLayoutPrototypeUuid(\n\t\t\t\t\t\tlayoutPrototype.getUuid());\n\n\t\t\t\tlayoutPrototype.setUuid(layoutPrototypeUuid);\n\n\t\t\t\tLayoutPrototypeLocalServiceUtil.updateLayoutPrototype(\n\t\t\t\t\tlayoutPrototype);\n\n\t\t\t\tfor (Layout layout : layouts) {\n\t\t\t\t\tlayout.setLayoutPrototypeUuid(layoutPrototypeUuid);\n\n\t\t\t\t\tLayoutLocalServiceUtil.updateLayout(layout);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (group.isLayoutSetPrototype() &&\n\t\t\t\t larType.equals(\"layout-set-prototype\")) {\n\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.getLayoutSetPrototype(\n\t\t\t\t\tgroup.getClassPK());\n\n\t\t\tString importedLayoutSetPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\n\t\t\tLayoutSetPrototype existingLayoutSetPrototype = null;\n\n\t\t\tif (Validator.isNotNull(importedLayoutSetPrototypeUuid)) {\n\t\t\t\ttry {\n\t\t\t\t\texistingLayoutSetPrototype =\n\t\t\t\t\t\tLayoutSetPrototypeLocalServiceUtil.\n\t\t\t\t\t\t\tgetLayoutSetPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\t\t\timportedLayoutSetPrototypeUuid, companyId);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchLayoutSetPrototypeException nslspe) {\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingLayoutSetPrototype == null) {\n\t\t\t\tlayoutSetPrototype.setUuid(importedLayoutSetPrototypeUuid);\n\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.updateLayoutSetPrototype(\n\t\t\t\t\tlayoutSetPrototype);\n\t\t\t}\n\t\t}\n\t\telse if (larType.equals(\"layout-set-prototype\")) {\n\t\t\tlayoutSetPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\t\t}\n\n\t\tif (Validator.isNotNull(layoutSetPrototypeUuid)) {\n\t\t\tlayoutSet.setLayoutSetPrototypeUuid(layoutSetPrototypeUuid);\n\t\t\tlayoutSet.setLayoutSetPrototypeLinkEnabled(\n\t\t\t\tlayoutSetPrototypeLinkEnabled);\n\n\t\t\tLayoutSetLocalServiceUtil.updateLayoutSet(layoutSet);\n\t\t}\n\n\t\t// Look and feel\n\n\t\tif (importLogo) {\n\t\t\tString logoPath = _headerElement.attributeValue(\"logo-path\");\n\n\t\t\tbyte[] iconBytes = portletDataContext.getZipEntryAsByteArray(\n\t\t\t\tlogoPath);\n\n\t\t\tif (ArrayUtil.isNotEmpty(iconBytes)) {\n\t\t\t\tFile logo = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tlogo = FileUtil.createTempFile(iconBytes);\n\n\t\t\t\t\tLayoutSetLocalServiceUtil.updateLogo(\n\t\t\t\t\t\tgroupId, privateLayout, true, logo);\n\t\t\t\t}\n\t\t\t\tfinally {\n\t\t\t\t\tFileUtil.delete(logo);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tLayoutSetLocalServiceUtil.updateLogo(\n\t\t\t\t\tgroupId, privateLayout, false, (File)null);\n\t\t\t}\n\t\t}\n\n\t\t_themeImporter.importTheme(portletDataContext, layoutSet);\n\n\t\tif (importLayoutSetSettings) {\n\t\t\tString settings = GetterUtil.getString(\n\t\t\t\t_headerElement.elementText(\"settings\"));\n\n\t\t\tLayoutSetLocalServiceUtil.updateSettings(\n\t\t\t\tgroupId, privateLayout, settings);\n\t\t}\n\n\t\t// Read asset categories, asset tags, comments, locks, permissions, and\n\t\t// ratings entries to make them available to the data handlers through\n\t\t// the context\n\n\t\tElement portletsElement = _rootElement.element(\"portlets\");\n\n\t\tList<Element> portletElements = portletsElement.elements(\"portlet\");\n\n\t\tif (importPermissions) {\n\t\t\tfor (Element portletElement : portletElements) {\n\t\t\t\tString portletPath = portletElement.attributeValue(\"path\");\n\n\t\t\t\tDocument portletDocument = SAXReaderUtil.read(\n\t\t\t\t\tportletDataContext.getZipEntryAsString(portletPath));\n\n\t\t\t\t_permissionImporter.checkRoles(\n\t\t\t\t\tlayoutCache, companyId, groupId, userId,\n\t\t\t\t\tportletDocument.getRootElement());\n\t\t\t}\n\n\t\t\t_permissionImporter.readPortletDataPermissions(portletDataContext);\n\t\t}\n\n\t\t_portletImporter.readAssetCategories(portletDataContext);\n\t\t_portletImporter.readAssetTags(portletDataContext);\n\t\t_portletImporter.readComments(portletDataContext);\n\t\t_portletImporter.readExpandoTables(portletDataContext);\n\t\t_portletImporter.readLocks(portletDataContext);\n\t\t_portletImporter.readRatingsEntries(portletDataContext);\n\n\t\t// Layouts\n\n\t\tList<Layout> previousLayouts = LayoutUtil.findByG_P(\n\t\t\tgroupId, privateLayout);\n\n\t\t// Remove layouts that were deleted from the layout set prototype\n\n\t\tif (Validator.isNotNull(layoutSetPrototypeUuid) &&\n\t\t\tlayoutSetPrototypeLinkEnabled) {\n\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.\n\t\t\t\t\tgetLayoutSetPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\tlayoutSetPrototypeUuid, companyId);\n\n\t\t\tfor (Layout layout : previousLayouts) {\n\t\t\t\tString sourcePrototypeLayoutUuid =\n\t\t\t\t\tlayout.getSourcePrototypeLayoutUuid();\n\n\t\t\t\tif (Validator.isNull(layout.getSourcePrototypeLayoutUuid())) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tLayout sourcePrototypeLayout = LayoutUtil.fetchByUUID_G_P(\n\t\t\t\t\tsourcePrototypeLayoutUuid, layoutSetPrototype.getGroupId(),\n\t\t\t\t\ttrue);\n\n\t\t\t\tif (sourcePrototypeLayout == null) {\n\t\t\t\t\tLayoutLocalServiceUtil.deleteLayout(\n\t\t\t\t\t\tlayout, false, serviceContext);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tList<String> sourceLayoutsUuids = new ArrayList<String>();\n\t\tList<Layout> newLayouts = new ArrayList<Layout>();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\tif (_layoutElements.size() > 0) {\n\t\t\t\t_log.debug(\"Importing layouts\");\n\t\t\t}\n\t\t}\n\n\t\tfor (Element layoutElement : _layoutElements) {\n\t\t\timportLayout(\n\t\t\t\tportletDataContext, sourceLayoutsUuids, newLayouts,\n\t\t\t\tlayoutElement);\n\t\t}\n\n\t\t// Delete portlet data\n\n\t\tMap<Long, Layout> newLayoutsMap =\n\t\t\t(Map<Long, Layout>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\tLayout.class + \".layout\");\n\n\t\tif (deletePortletData) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\tif (portletElements.size() > 0) {\n\t\t\t\t\t_log.debug(\"Deleting portlet data\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (Element portletElement : portletElements) {\n\t\t\t\tString portletId = portletElement.attributeValue(\"portlet-id\");\n\t\t\t\tlong layoutId = GetterUtil.getLong(\n\t\t\t\t\tportletElement.attributeValue(\"layout-id\"));\n\n\t\t\t\tLayout layout = newLayoutsMap.get(layoutId);\n\n\t\t\t\tlong plid = layout.getPlid();\n\n\t\t\t\tportletDataContext.setPlid(plid);\n\n\t\t\t\t_portletImporter.deletePortletData(\n\t\t\t\t\tportletDataContext, portletId, plid);\n\t\t\t}\n\t\t}\n\n\t\t// Import portlets\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\tif (portletElements.size() > 0) {\n\t\t\t\t_log.debug(\"Importing portlets\");\n\t\t\t}\n\t\t}\n\n\t\tfor (Element portletElement : portletElements) {\n\t\t\tString portletPath = portletElement.attributeValue(\"path\");\n\t\t\tString portletId = portletElement.attributeValue(\"portlet-id\");\n\t\t\tlong layoutId = GetterUtil.getLong(\n\t\t\t\tportletElement.attributeValue(\"layout-id\"));\n\t\t\tlong oldPlid = GetterUtil.getLong(\n\t\t\t\tportletElement.attributeValue(\"old-plid\"));\n\n\t\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\t\tportletDataContext.getCompanyId(), portletId);\n\n\t\t\tif (!portlet.isActive() || portlet.isUndeployedPortlet()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tLayout layout = newLayoutsMap.get(layoutId);\n\n\t\t\tlong plid = LayoutConstants.DEFAULT_PLID;\n\n\t\t\tif (layout != null) {\n\t\t\t\tplid = layout.getPlid();\n\t\t\t}\n\n\t\t\tportletDataContext.setPlid(plid);\n\t\t\tportletDataContext.setOldPlid(oldPlid);\n\n\t\t\tDocument portletDocument = SAXReaderUtil.read(\n\t\t\t\tportletDataContext.getZipEntryAsString(portletPath));\n\n\t\t\tportletElement = portletDocument.getRootElement();\n\n\t\t\t// The order of the import is important. You must always import the\n\t\t\t// portlet preferences first, then the portlet data, then the\n\t\t\t// portlet permissions. The import of the portlet data assumes that\n\t\t\t// portlet preferences already exist.\n\n\t\t\tsetPortletScope(portletDataContext, portletElement);\n\n\t\t\tlong portletPreferencesGroupId = groupId;\n\n\t\t\tElement portletDataElement = portletElement.element(\"portlet-data\");\n\n\t\t\tboolean[] importPortletControls =\n\t\t\t\tExportImportHelperUtil.getImportPortletControls(\n\t\t\t\t\tcompanyId, portletId, parameterMap, portletDataElement,\n\t\t\t\t\tmanifestSummary);\n\n\t\t\ttry {\n\t\t\t\tif (layout != null) {\n\t\t\t\t\tportletPreferencesGroupId = layout.getGroupId();\n\t\t\t\t}\n\n\t\t\t\t// Portlet preferences\n\n\t\t\t\t_portletImporter.importPortletPreferences(\n\t\t\t\t\tportletDataContext, layoutSet.getCompanyId(),\n\t\t\t\t\tportletPreferencesGroupId, layout, null, portletElement,\n\t\t\t\t\tfalse, importPortletControls[0], importPortletControls[1],\n\t\t\t\t\timportPortletControls[2], importPortletControls[3]);\n\n\t\t\t\t// Portlet data\n\n\t\t\t\tif (importPortletControls[1]) {\n\t\t\t\t\t_portletImporter.importPortletData(\n\t\t\t\t\t\tportletDataContext, portletId, plid,\n\t\t\t\t\t\tportletDataElement);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\t_portletImporter.resetPortletScope(\n\t\t\t\t\tportletDataContext, portletPreferencesGroupId);\n\t\t\t}\n\n\t\t\t// Portlet permissions\n\n\t\t\tif (importPermissions) {\n\t\t\t\t_permissionImporter.importPortletPermissions(\n\t\t\t\t\tlayoutCache, companyId, groupId, userId, layout,\n\t\t\t\t\tportletElement, portletId);\n\t\t\t}\n\n\t\t\t// Archived setups\n\n\t\t\t_portletImporter.importPortletPreferences(\n\t\t\t\tportletDataContext, layoutSet.getCompanyId(), groupId, null,\n\t\t\t\tnull, portletElement, false, importPortletControls[0],\n\t\t\t\timportPortletControls[1], importPortletControls[2],\n\t\t\t\timportPortletControls[3]);\n\t\t}\n\n\t\tif (importPermissions) {\n\t\t\tif (userId > 0) {\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tUser.class);\n\n\t\t\t\tindexer.reindex(userId);\n\t\t\t}\n\t\t}\n\n\t\t// Asset links\n\n\t\t_portletImporter.readAssetLinks(portletDataContext);\n\n\t\t// Delete missing layouts\n\n\t\tif (deleteMissingLayouts) {\n\t\t\tdeleteMissingLayouts(\n\t\t\t\tsourceLayoutsUuids, previousLayouts, serviceContext);\n\t\t}\n\n\t\t// Page count\n\n\t\tlayoutSet = LayoutSetLocalServiceUtil.updatePageCount(\n\t\t\tgroupId, privateLayout);\n\n\t\t// Site\n\n\t\tGroupLocalServiceUtil.updateSite(groupId, true);\n\n\t\t// Last merge time must be the same for merged layouts and the layout\n\t\t// set\n\n\t\tlong lastMergeTime = System.currentTimeMillis();\n\n\t\tfor (Layout layout : newLayouts) {\n\t\t\tboolean modifiedTypeSettingsProperties = false;\n\n\t\t\tUnicodeProperties typeSettingsProperties =\n\t\t\t\tlayout.getTypeSettingsProperties();\n\n\t\t\t// Journal article layout type\n\n\t\t\tString articleId = typeSettingsProperties.getProperty(\"article-id\");\n\n\t\t\tif (Validator.isNotNull(articleId)) {\n\t\t\t\tMap<String, String> articleIds =\n\t\t\t\t\t(Map<String, String>)portletDataContext.\n\t\t\t\t\t\tgetNewPrimaryKeysMap(\n\t\t\t\t\t\t\tJournalArticle.class + \".articleId\");\n\n\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\"article-id\",\n\t\t\t\t\tMapUtil.getString(articleIds, articleId, articleId));\n\n\t\t\t\tmodifiedTypeSettingsProperties = true;\n\t\t\t}\n\n\t\t\t// Last merge time for layout\n\n\t\t\tif (layoutsImportMode.equals(\n\t\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\t\tLAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\tSites.LAST_MERGE_TIME, String.valueOf(lastMergeTime));\n\n\t\t\t\tmodifiedTypeSettingsProperties = true;\n\t\t\t}\n\n\t\t\tif (modifiedTypeSettingsProperties) {\n\t\t\t\tLayoutUtil.update(layout);\n\t\t\t}\n\t\t}\n\n\t\t// Last merge time for layout set\n\n\t\tif (layoutsImportMode.equals(\n\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\tLAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\tUnicodeProperties settingsProperties =\n\t\t\t\tlayoutSet.getSettingsProperties();\n\n\t\t\tString mergeFailFriendlyURLLayouts =\n\t\t\t\tsettingsProperties.getProperty(\n\t\t\t\t\tSites.MERGE_FAIL_FRIENDLY_URL_LAYOUTS);\n\n\t\t\tif (Validator.isNull(mergeFailFriendlyURLLayouts)) {\n\t\t\t\tsettingsProperties.setProperty(\n\t\t\t\t\tSites.LAST_MERGE_TIME, String.valueOf(lastMergeTime));\n\n\t\t\t\tLayoutSetLocalServiceUtil.updateLayoutSet(layoutSet);\n\t\t\t}\n\t\t}\n\n\t\t// Deletion system events\n\n\t\t_deletionSystemEventImporter.importDeletionSystemEvents(\n\t\t\tportletDataContext);\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Importing layouts takes \" + stopWatch.getTime() + \" ms\");\n\t\t}\n\n\t\tzipReader.close();\n\t}","id":48386,"modified_method":"protected void doImportLayouts(\n\t\t\tlong userId, long groupId, boolean privateLayout,\n\t\t\tMap<String, String[]> parameterMap, File file)\n\t\tthrows Exception {\n\n\t\tboolean deleteMissingLayouts = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.DELETE_MISSING_LAYOUTS,\n\t\t\tBoolean.TRUE.booleanValue());\n\t\tboolean deletePortletData = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.DELETE_PORTLET_DATA);\n\t\tboolean importCategories = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.CATEGORIES);\n\t\tboolean importPermissions = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.PERMISSIONS);\n\t\tboolean importLogo = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.LOGO);\n\t\tboolean importLayoutSetSettings = MapUtil.getBoolean(\n\t\t\tparameterMap, PortletDataHandlerKeys.LAYOUT_SET_SETTINGS);\n\n\t\tboolean layoutSetPrototypeLinkEnabled = MapUtil.getBoolean(\n\t\t\tparameterMap,\n\t\t\tPortletDataHandlerKeys.LAYOUT_SET_PROTOTYPE_LINK_ENABLED, true);\n\n\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\tif (group.isLayoutSetPrototype()) {\n\t\t\tlayoutSetPrototypeLinkEnabled = false;\n\t\t}\n\n\t\tString layoutsImportMode = MapUtil.getString(\n\t\t\tparameterMap, PortletDataHandlerKeys.LAYOUTS_IMPORT_MODE,\n\t\t\tPortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_MERGE_BY_LAYOUT_UUID);\n\t\tString userIdStrategy = MapUtil.getString(\n\t\t\tparameterMap, PortletDataHandlerKeys.USER_ID_STRATEGY);\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Delete portlet data \" + deletePortletData);\n\t\t\t_log.debug(\"Import categories \" + importCategories);\n\t\t\t_log.debug(\"Import permissions \" + importPermissions);\n\t\t}\n\n\t\tStopWatch stopWatch = null;\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\tstopWatch = new StopWatch();\n\n\t\t\tstopWatch.start();\n\t\t}\n\n\t\tLayoutCache layoutCache = new LayoutCache();\n\n\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\tgroupId, privateLayout);\n\n\t\tlong companyId = layoutSet.getCompanyId();\n\n\t\tUser user = UserUtil.findByPrimaryKey(userId);\n\n\t\tServiceContext serviceContext =\n\t\t\tServiceContextThreadLocal.getServiceContext();\n\n\t\tif (serviceContext == null) {\n\t\t\tserviceContext = new ServiceContext();\n\n\t\t\tserviceContext.setCompanyId(companyId);\n\t\t\tserviceContext.setSignedIn(false);\n\t\t\tserviceContext.setUserId(userId);\n\n\t\t\tServiceContextThreadLocal.pushServiceContext(serviceContext);\n\t\t}\n\n\t\tUserIdStrategy strategy = _portletImporter.getUserIdStrategy(\n\t\t\tuser, userIdStrategy);\n\n\t\tManifestSummary manifestSummary =\n\t\t\tExportImportHelperUtil.getManifestSummary(\n\t\t\t\tuserId, groupId, parameterMap, file);\n\n\t\tif (BackgroundTaskThreadLocal.hasBackgroundTask()) {\n\t\t\tPortletDataHandlerStatusMessageSenderUtil.sendStatusMessage(\n\t\t\t\t\"layout\", manifestSummary);\n\t\t}\n\n\t\tZipReader zipReader = ZipReaderFactoryUtil.getZipReader(file);\n\n\t\tPortletDataContext portletDataContext =\n\t\t\tPortletDataContextFactoryUtil.createImportPortletDataContext(\n\t\t\t\tcompanyId, groupId, parameterMap, strategy, zipReader);\n\n\t\tportletDataContext.setManifestSummary(manifestSummary);\n\t\tportletDataContext.setPortetDataContextListener(\n\t\t\tnew PortletDataContextListenerImpl(portletDataContext));\n\n\t\tportletDataContext.setPrivateLayout(privateLayout);\n\n\t\t// Zip\n\n\t\tvalidateFile(portletDataContext);\n\n\t\t// Company id\n\n\t\tlong sourceCompanyId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"company-id\"));\n\n\t\tportletDataContext.setSourceCompanyId(sourceCompanyId);\n\n\t\t// Company group id\n\n\t\tlong sourceCompanyGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"company-group-id\"));\n\n\t\tportletDataContext.setSourceCompanyGroupId(sourceCompanyGroupId);\n\n\t\t// Group id\n\n\t\tlong sourceGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"group-id\"));\n\n\t\tportletDataContext.setSourceGroupId(sourceGroupId);\n\n\t\t// User personal site group id\n\n\t\tlong sourceUserPersonalSiteGroupId = GetterUtil.getLong(\n\t\t\t_headerElement.attributeValue(\"user-personal-site-group-id\"));\n\n\t\tportletDataContext.setSourceUserPersonalSiteGroupId(\n\t\t\tsourceUserPersonalSiteGroupId);\n\n\t\t// Layout and layout set prototype\n\n\t\tString layoutSetPrototypeUuid = _layoutsElement.attributeValue(\n\t\t\t\"layout-set-prototype-uuid\");\n\n\t\tString larType = _headerElement.attributeValue(\"type\");\n\n\t\tif (group.isLayoutPrototype() && larType.equals(\"layout-prototype\")) {\n\t\t\tdeleteMissingLayouts = false;\n\n\t\t\tLayoutPrototype layoutPrototype =\n\t\t\t\tLayoutPrototypeLocalServiceUtil.getLayoutPrototype(\n\t\t\t\t\tgroup.getClassPK());\n\n\t\t\tString layoutPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\n\t\t\tLayoutPrototype existingLayoutPrototype = null;\n\n\t\t\tif (Validator.isNotNull(layoutPrototypeUuid)) {\n\t\t\t\ttry {\n\t\t\t\t\texistingLayoutPrototype =\n\t\t\t\t\t\tLayoutPrototypeLocalServiceUtil.\n\t\t\t\t\t\t\tgetLayoutPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\t\t\tlayoutPrototypeUuid, companyId);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchLayoutPrototypeException nslpe) {\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingLayoutPrototype == null) {\n\t\t\t\tList<Layout> layouts =\n\t\t\t\t\tLayoutLocalServiceUtil.getLayoutsByLayoutPrototypeUuid(\n\t\t\t\t\t\tlayoutPrototype.getUuid());\n\n\t\t\t\tlayoutPrototype.setUuid(layoutPrototypeUuid);\n\n\t\t\t\tLayoutPrototypeLocalServiceUtil.updateLayoutPrototype(\n\t\t\t\t\tlayoutPrototype);\n\n\t\t\t\tfor (Layout layout : layouts) {\n\t\t\t\t\tlayout.setLayoutPrototypeUuid(layoutPrototypeUuid);\n\n\t\t\t\t\tLayoutLocalServiceUtil.updateLayout(layout);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (group.isLayoutSetPrototype() &&\n\t\t\t\t larType.equals(\"layout-set-prototype\")) {\n\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.getLayoutSetPrototype(\n\t\t\t\t\tgroup.getClassPK());\n\n\t\t\tString importedLayoutSetPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\n\t\t\tLayoutSetPrototype existingLayoutSetPrototype = null;\n\n\t\t\tif (Validator.isNotNull(importedLayoutSetPrototypeUuid)) {\n\t\t\t\ttry {\n\t\t\t\t\texistingLayoutSetPrototype =\n\t\t\t\t\t\tLayoutSetPrototypeLocalServiceUtil.\n\t\t\t\t\t\t\tgetLayoutSetPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\t\t\timportedLayoutSetPrototypeUuid, companyId);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchLayoutSetPrototypeException nslspe) {\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingLayoutSetPrototype == null) {\n\t\t\t\tList<LayoutSet> layoutSets =\n\t\t\t\t\tLayoutSetLocalServiceUtil.\n\t\t\t\t\t\tgetLayoutSetsByLayoutSetPrototypeUuid(\n\t\t\t\t\t\t\tlayoutSetPrototype.getUuid());\n\n\t\t\t\tlayoutSetPrototype.setUuid(importedLayoutSetPrototypeUuid);\n\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.updateLayoutSetPrototype(\n\t\t\t\t\tlayoutSetPrototype);\n\n\t\t\t\tfor (LayoutSet layoutSetUpdate : layoutSets) {\n\t\t\t\t\tlayoutSetUpdate.setLayoutSetPrototypeUuid(\n\t\t\t\t\t\timportedLayoutSetPrototypeUuid);\n\n\t\t\t\t\tLayoutSetLocalServiceUtil.updateLayoutSet(layoutSetUpdate);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (larType.equals(\"layout-set-prototype\")) {\n\t\t\tlayoutSetPrototypeUuid = GetterUtil.getString(\n\t\t\t\t_headerElement.attributeValue(\"type-uuid\"));\n\t\t}\n\n\t\tif (Validator.isNotNull(layoutSetPrototypeUuid)) {\n\t\t\tlayoutSet.setLayoutSetPrototypeUuid(layoutSetPrototypeUuid);\n\t\t\tlayoutSet.setLayoutSetPrototypeLinkEnabled(\n\t\t\t\tlayoutSetPrototypeLinkEnabled);\n\n\t\t\tLayoutSetLocalServiceUtil.updateLayoutSet(layoutSet);\n\t\t}\n\n\t\t// Look and feel\n\n\t\tif (importLogo) {\n\t\t\tString logoPath = _headerElement.attributeValue(\"logo-path\");\n\n\t\t\tbyte[] iconBytes = portletDataContext.getZipEntryAsByteArray(\n\t\t\t\tlogoPath);\n\n\t\t\tif (ArrayUtil.isNotEmpty(iconBytes)) {\n\t\t\t\tFile logo = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tlogo = FileUtil.createTempFile(iconBytes);\n\n\t\t\t\t\tLayoutSetLocalServiceUtil.updateLogo(\n\t\t\t\t\t\tgroupId, privateLayout, true, logo);\n\t\t\t\t}\n\t\t\t\tfinally {\n\t\t\t\t\tFileUtil.delete(logo);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tLayoutSetLocalServiceUtil.updateLogo(\n\t\t\t\t\tgroupId, privateLayout, false, (File)null);\n\t\t\t}\n\t\t}\n\n\t\t_themeImporter.importTheme(portletDataContext, layoutSet);\n\n\t\tif (importLayoutSetSettings) {\n\t\t\tString settings = GetterUtil.getString(\n\t\t\t\t_headerElement.elementText(\"settings\"));\n\n\t\t\tLayoutSetLocalServiceUtil.updateSettings(\n\t\t\t\tgroupId, privateLayout, settings);\n\t\t}\n\n\t\t// Read asset categories, asset tags, comments, locks, permissions, and\n\t\t// ratings entries to make them available to the data handlers through\n\t\t// the context\n\n\t\tElement portletsElement = _rootElement.element(\"portlets\");\n\n\t\tList<Element> portletElements = portletsElement.elements(\"portlet\");\n\n\t\tif (importPermissions) {\n\t\t\tfor (Element portletElement : portletElements) {\n\t\t\t\tString portletPath = portletElement.attributeValue(\"path\");\n\n\t\t\t\tDocument portletDocument = SAXReaderUtil.read(\n\t\t\t\t\tportletDataContext.getZipEntryAsString(portletPath));\n\n\t\t\t\t_permissionImporter.checkRoles(\n\t\t\t\t\tlayoutCache, companyId, groupId, userId,\n\t\t\t\t\tportletDocument.getRootElement());\n\t\t\t}\n\n\t\t\t_permissionImporter.readPortletDataPermissions(portletDataContext);\n\t\t}\n\n\t\t_portletImporter.readAssetCategories(portletDataContext);\n\t\t_portletImporter.readAssetTags(portletDataContext);\n\t\t_portletImporter.readComments(portletDataContext);\n\t\t_portletImporter.readExpandoTables(portletDataContext);\n\t\t_portletImporter.readLocks(portletDataContext);\n\t\t_portletImporter.readRatingsEntries(portletDataContext);\n\n\t\t// Layouts\n\n\t\tList<Layout> previousLayouts = LayoutUtil.findByG_P(\n\t\t\tgroupId, privateLayout);\n\n\t\t// Remove layouts that were deleted from the layout set prototype\n\n\t\tif (Validator.isNotNull(layoutSetPrototypeUuid) &&\n\t\t\tlayoutSetPrototypeLinkEnabled) {\n\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\tLayoutSetPrototypeLocalServiceUtil.\n\t\t\t\t\tgetLayoutSetPrototypeByUuidAndCompanyId(\n\t\t\t\t\t\tlayoutSetPrototypeUuid, companyId);\n\n\t\t\tfor (Layout layout : previousLayouts) {\n\t\t\t\tString sourcePrototypeLayoutUuid =\n\t\t\t\t\tlayout.getSourcePrototypeLayoutUuid();\n\n\t\t\t\tif (Validator.isNull(layout.getSourcePrototypeLayoutUuid())) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tLayout sourcePrototypeLayout = LayoutUtil.fetchByUUID_G_P(\n\t\t\t\t\tsourcePrototypeLayoutUuid, layoutSetPrototype.getGroupId(),\n\t\t\t\t\ttrue);\n\n\t\t\t\tif (sourcePrototypeLayout == null) {\n\t\t\t\t\tLayoutLocalServiceUtil.deleteLayout(\n\t\t\t\t\t\tlayout, false, serviceContext);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tList<String> sourceLayoutsUuids = new ArrayList<String>();\n\t\tList<Layout> newLayouts = new ArrayList<Layout>();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\tif (_layoutElements.size() > 0) {\n\t\t\t\t_log.debug(\"Importing layouts\");\n\t\t\t}\n\t\t}\n\n\t\tfor (Element layoutElement : _layoutElements) {\n\t\t\timportLayout(\n\t\t\t\tportletDataContext, sourceLayoutsUuids, newLayouts,\n\t\t\t\tlayoutElement);\n\t\t}\n\n\t\t// Delete portlet data\n\n\t\tMap<Long, Layout> newLayoutsMap =\n\t\t\t(Map<Long, Layout>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\tLayout.class + \".layout\");\n\n\t\tif (deletePortletData) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\tif (portletElements.size() > 0) {\n\t\t\t\t\t_log.debug(\"Deleting portlet data\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (Element portletElement : portletElements) {\n\t\t\t\tString portletId = portletElement.attributeValue(\"portlet-id\");\n\t\t\t\tlong layoutId = GetterUtil.getLong(\n\t\t\t\t\tportletElement.attributeValue(\"layout-id\"));\n\n\t\t\t\tLayout layout = newLayoutsMap.get(layoutId);\n\n\t\t\t\tlong plid = layout.getPlid();\n\n\t\t\t\tportletDataContext.setPlid(plid);\n\n\t\t\t\t_portletImporter.deletePortletData(\n\t\t\t\t\tportletDataContext, portletId, plid);\n\t\t\t}\n\t\t}\n\n\t\t// Import portlets\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\tif (portletElements.size() > 0) {\n\t\t\t\t_log.debug(\"Importing portlets\");\n\t\t\t}\n\t\t}\n\n\t\tfor (Element portletElement : portletElements) {\n\t\t\tString portletPath = portletElement.attributeValue(\"path\");\n\t\t\tString portletId = portletElement.attributeValue(\"portlet-id\");\n\t\t\tlong layoutId = GetterUtil.getLong(\n\t\t\t\tportletElement.attributeValue(\"layout-id\"));\n\t\t\tlong oldPlid = GetterUtil.getLong(\n\t\t\t\tportletElement.attributeValue(\"old-plid\"));\n\n\t\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\t\tportletDataContext.getCompanyId(), portletId);\n\n\t\t\tif (!portlet.isActive() || portlet.isUndeployedPortlet()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tLayout layout = newLayoutsMap.get(layoutId);\n\n\t\t\tlong plid = LayoutConstants.DEFAULT_PLID;\n\n\t\t\tif (layout != null) {\n\t\t\t\tplid = layout.getPlid();\n\t\t\t}\n\n\t\t\tportletDataContext.setPlid(plid);\n\t\t\tportletDataContext.setOldPlid(oldPlid);\n\n\t\t\tDocument portletDocument = SAXReaderUtil.read(\n\t\t\t\tportletDataContext.getZipEntryAsString(portletPath));\n\n\t\t\tportletElement = portletDocument.getRootElement();\n\n\t\t\t// The order of the import is important. You must always import the\n\t\t\t// portlet preferences first, then the portlet data, then the\n\t\t\t// portlet permissions. The import of the portlet data assumes that\n\t\t\t// portlet preferences already exist.\n\n\t\t\tsetPortletScope(portletDataContext, portletElement);\n\n\t\t\tlong portletPreferencesGroupId = groupId;\n\n\t\t\tElement portletDataElement = portletElement.element(\"portlet-data\");\n\n\t\t\tboolean[] importPortletControls =\n\t\t\t\tExportImportHelperUtil.getImportPortletControls(\n\t\t\t\t\tcompanyId, portletId, parameterMap, portletDataElement,\n\t\t\t\t\tmanifestSummary);\n\n\t\t\ttry {\n\t\t\t\tif (layout != null) {\n\t\t\t\t\tportletPreferencesGroupId = layout.getGroupId();\n\t\t\t\t}\n\n\t\t\t\t// Portlet preferences\n\n\t\t\t\t_portletImporter.importPortletPreferences(\n\t\t\t\t\tportletDataContext, layoutSet.getCompanyId(),\n\t\t\t\t\tportletPreferencesGroupId, layout, null, portletElement,\n\t\t\t\t\tfalse, importPortletControls[0], importPortletControls[1],\n\t\t\t\t\timportPortletControls[2], importPortletControls[3]);\n\n\t\t\t\t// Portlet data\n\n\t\t\t\tif (importPortletControls[1]) {\n\t\t\t\t\t_portletImporter.importPortletData(\n\t\t\t\t\t\tportletDataContext, portletId, plid,\n\t\t\t\t\t\tportletDataElement);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\t_portletImporter.resetPortletScope(\n\t\t\t\t\tportletDataContext, portletPreferencesGroupId);\n\t\t\t}\n\n\t\t\t// Portlet permissions\n\n\t\t\tif (importPermissions) {\n\t\t\t\t_permissionImporter.importPortletPermissions(\n\t\t\t\t\tlayoutCache, companyId, groupId, userId, layout,\n\t\t\t\t\tportletElement, portletId);\n\t\t\t}\n\n\t\t\t// Archived setups\n\n\t\t\t_portletImporter.importPortletPreferences(\n\t\t\t\tportletDataContext, layoutSet.getCompanyId(), groupId, null,\n\t\t\t\tnull, portletElement, false, importPortletControls[0],\n\t\t\t\timportPortletControls[1], importPortletControls[2],\n\t\t\t\timportPortletControls[3]);\n\t\t}\n\n\t\tif (importPermissions) {\n\t\t\tif (userId > 0) {\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tUser.class);\n\n\t\t\t\tindexer.reindex(userId);\n\t\t\t}\n\t\t}\n\n\t\t// Asset links\n\n\t\t_portletImporter.readAssetLinks(portletDataContext);\n\n\t\t// Delete missing layouts\n\n\t\tif (deleteMissingLayouts) {\n\t\t\tdeleteMissingLayouts(\n\t\t\t\tsourceLayoutsUuids, previousLayouts, serviceContext);\n\t\t}\n\n\t\t// Page count\n\n\t\tlayoutSet = LayoutSetLocalServiceUtil.updatePageCount(\n\t\t\tgroupId, privateLayout);\n\n\t\t// Site\n\n\t\tGroupLocalServiceUtil.updateSite(groupId, true);\n\n\t\t// Last merge time must be the same for merged layouts and the layout\n\t\t// set\n\n\t\tlong lastMergeTime = System.currentTimeMillis();\n\n\t\tfor (Layout layout : newLayouts) {\n\t\t\tboolean modifiedTypeSettingsProperties = false;\n\n\t\t\tUnicodeProperties typeSettingsProperties =\n\t\t\t\tlayout.getTypeSettingsProperties();\n\n\t\t\t// Journal article layout type\n\n\t\t\tString articleId = typeSettingsProperties.getProperty(\"article-id\");\n\n\t\t\tif (Validator.isNotNull(articleId)) {\n\t\t\t\tMap<String, String> articleIds =\n\t\t\t\t\t(Map<String, String>)portletDataContext.\n\t\t\t\t\t\tgetNewPrimaryKeysMap(\n\t\t\t\t\t\t\tJournalArticle.class + \".articleId\");\n\n\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\"article-id\",\n\t\t\t\t\tMapUtil.getString(articleIds, articleId, articleId));\n\n\t\t\t\tmodifiedTypeSettingsProperties = true;\n\t\t\t}\n\n\t\t\t// Last merge time for layout\n\n\t\t\tif (layoutsImportMode.equals(\n\t\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\t\tLAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\tSites.LAST_MERGE_TIME, String.valueOf(lastMergeTime));\n\n\t\t\t\tmodifiedTypeSettingsProperties = true;\n\t\t\t}\n\n\t\t\tif (modifiedTypeSettingsProperties) {\n\t\t\t\tLayoutUtil.update(layout);\n\t\t\t}\n\t\t}\n\n\t\t// Last merge time for layout set\n\n\t\tif (layoutsImportMode.equals(\n\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\tLAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\tUnicodeProperties settingsProperties =\n\t\t\t\tlayoutSet.getSettingsProperties();\n\n\t\t\tString mergeFailFriendlyURLLayouts =\n\t\t\t\tsettingsProperties.getProperty(\n\t\t\t\t\tSites.MERGE_FAIL_FRIENDLY_URL_LAYOUTS);\n\n\t\t\tif (Validator.isNull(mergeFailFriendlyURLLayouts)) {\n\t\t\t\tsettingsProperties.setProperty(\n\t\t\t\t\tSites.LAST_MERGE_TIME, String.valueOf(lastMergeTime));\n\n\t\t\t\tLayoutSetLocalServiceUtil.updateLayoutSet(layoutSet);\n\t\t\t}\n\t\t}\n\n\t\t// Deletion system events\n\n\t\t_deletionSystemEventImporter.importDeletionSystemEvents(\n\t\t\tportletDataContext);\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Importing layouts takes \" + stopWatch.getTime() + \" ms\");\n\t\t}\n\n\t\tzipReader.close();\n\t}","commit_id":"7e8c8a0ffde337606325f205ce8454c4e6f0f216","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public boolean isClusterNodeAlive(String clusterNodeId) {\n\t\tif (!isEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tremoveExpiredInstances();\n\n\t\treturn _clusterNodeAddresses.containsKey(clusterNodeId);\n\t}","id":48387,"modified_method":"public boolean isClusterNodeAlive(String clusterNodeId) {\n\t\tif (!isEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn _clusterNodeAddresses.containsKey(clusterNodeId);\n\t}","commit_id":"8943425a7712c8642236f72728d049da5c3b1f82","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void destroy() {\n\t\tif (!isEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\t_scheduledExecutorService.shutdownNow();\n\n\t\t_clusterRequestReceiver.destroy();\n\n\t\t_controlChannel.close();\n\t}","id":48388,"modified_method":"@Override\n\tpublic void destroy() {\n\t\tif (!isEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\t_controlChannel.close();\n\t}","commit_id":"8943425a7712c8642236f72728d049da5c3b1f82","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void initChannels() {\n\t\tProperties controlProperties = PropsUtil.getProperties(\n\t\t\tPropsKeys.CLUSTER_LINK_CHANNEL_PROPERTIES_CONTROL, false);\n\n\t\tString controlProperty = controlProperties.getProperty(\n\t\t\tPropsKeys.CLUSTER_LINK_CHANNEL_PROPERTIES_CONTROL);\n\n\t\t_clusterRequestReceiver = new ClusterRequestReceiver(this);\n\n\t\ttry {\n\t\t\t_controlChannel = createJChannel(\n\t\t\t\tcontrolProperty, _clusterRequestReceiver,\n\t\t\t\t_DEFAULT_CLUSTER_NAME);\n\t\t}\n\t\tcatch (ChannelException ce) {\n\t\t\t_log.error(ce, ce);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\t\t}\n\t}","id":48389,"modified_method":"@Override\n\tprotected void initChannels() {\n\t\tProperties controlProperties = PropsUtil.getProperties(\n\t\t\tPropsKeys.CLUSTER_LINK_CHANNEL_PROPERTIES_CONTROL, false);\n\n\t\tString controlProperty = controlProperties.getProperty(\n\t\t\tPropsKeys.CLUSTER_LINK_CHANNEL_PROPERTIES_CONTROL);\n\n\t\tClusterRequestReceiver clusterInvokeReceiver =\n\t\t\tnew ClusterRequestReceiver(this);\n\n\t\ttry {\n\t\t\t_controlChannel = createJChannel(\n\t\t\t\tcontrolProperty, clusterInvokeReceiver, _DEFAULT_CLUSTER_NAME);\n\t\t}\n\t\tcatch (ChannelException ce) {\n\t\t\t_log.error(ce, ce);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\t\t}\n\t}","commit_id":"8943425a7712c8642236f72728d049da5c3b1f82","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public List<ClusterNode> getClusterNodes() {\n\t\tif (!isEnabled()) {\n\t\t\treturn Collections.emptyList();\n\t\t}\n\n\t\tremoveExpiredInstances();\n\n\t\tSet<ObjectValuePair<Address, ClusterNode>> liveInstances =\n\t\t\t_liveInstances.keySet();\n\n\t\tList<ClusterNode> liveClusterNodes = new ArrayList<ClusterNode>(\n\t\t\tliveInstances.size());\n\n\t\tfor (ObjectValuePair<Address, ClusterNode> liveInstance :\n\t\t\t\tliveInstances) {\n\n\t\t\tliveClusterNodes.add(liveInstance.getValue());\n\t\t}\n\n\t\treturn liveClusterNodes;\n\t}","id":48390,"modified_method":"public List<ClusterNode> getClusterNodes() {\n\t\tif (!isEnabled()) {\n\t\t\treturn Collections.emptyList();\n\t\t}\n\n\t\treturn new ArrayList<ClusterNode>(_liveInstances.values());\n\t}","commit_id":"8943425a7712c8642236f72728d049da5c3b1f82","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void initialize() {\n\t\tif (!isEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tPortalUtil.addPortalPortEventListener(this);\n\n\t\t_localAddress = new AddressImpl(_controlChannel.getLocalAddress());\n\n\t\ttry {\n\t\t\tinitLocalClusterNode();\n\t\t}\n\t\tcatch (SystemException se) {\n\t\t\t_log.error(\"Unable to determine local network address\", se);\n\t\t}\n\n\t\tObjectValuePair<Address, ClusterNode> localInstance =\n\t\t\tnew ObjectValuePair<Address, ClusterNode>(\n\t\t\t\t_localAddress, _localClusterNode);\n\n\t\t_liveInstances.put(localInstance, Long.MAX_VALUE);\n\n\t\t_clusterNodeAddresses.put(\n\t\t\t_localClusterNode.getClusterNodeId(), _localAddress);\n\n\t\t_clusterRequestReceiver.initialize();\n\n\t\t_scheduledExecutorService = Executors.newScheduledThreadPool(\n\t\t\t1,\n\t\t\tnew NamedThreadFactory(\n\t\t\t\tClusterExecutorImpl.class.getName(), Thread.NORM_PRIORITY,\n\t\t\t\tThread.currentThread().getContextClassLoader()));\n\n\t\t_scheduledExecutorService.scheduleWithFixedDelay(\n\t\t\tnew HeartbeatTask(), 0,\n\t\t\tPropsValues.CLUSTER_EXECUTOR_HEARTBEAT_INTERVAL,\n\t\t\tTimeUnit.MILLISECONDS);\n\t}","id":48391,"modified_method":"public void initialize() {\n\t\tif (!isEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tPortalUtil.addPortalPortEventListener(this);\n\n\t\t_localAddress = new AddressImpl(_controlChannel.getLocalAddress());\n\n\t\ttry {\n\t\t\tinitLocalClusterNode();\n\t\t}\n\t\tcatch (SystemException se) {\n\t\t\t_log.error(\"Unable to determine local network address\", se);\n\t\t}\n\n\t\ttry {\n\t\t\tmemberJoined(_localAddress, _localClusterNode);\n\n\t\t\tClusterRequest clusterRequest = ClusterRequest.createClusterRequest(\n\t\t\t\tClusterMessageType.NOTIFY, _localClusterNode);\n\n\t\t\t_controlChannel.send(null, null, clusterRequest);\n\t\t}\n\t\tcatch (Exception ce) {\n\t\t\t_log.error(\"Unable to send multicast message \", ce);\n\t\t}\n\t}","commit_id":"8943425a7712c8642236f72728d049da5c3b1f82","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void portalPortConfigured(int port) {\n\t\tif (!isEnabled() ||\n\t\t\t_localClusterNode.getPort() ==\n\t\t\t\tPropsValues.PORTAL_INSTANCE_HTTP_PORT) {\n\n\t\t\treturn;\n\t\t}\n\n\t\t_localClusterNode.setPort(port);\n\t}","id":48392,"modified_method":"public void portalPortConfigured(int port) {\n\t\tif (!isEnabled() ||\n\t\t\t_localClusterNode.getPort() ==\n\t\t\t\tPropsValues.PORTAL_INSTANCE_HTTP_PORT) {\n\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\t_localClusterNode.setPort(port);\n\n\t\t\tmemberJoined(_localAddress, _localClusterNode);\n\n\t\t\tClusterRequest clusterRequest = ClusterRequest.createClusterRequest(\n\t\t\t\tClusterMessageType.UPDATE, _localClusterNode);\n\n\t\t\t_controlChannel.send(null, null, clusterRequest);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (_log.isErrorEnabled()) {\n\t\t\t\t_log.error(\"Unable to determine configure node port\", e);\n\t\t\t}\n\t\t}\n\t}","commit_id":"8943425a7712c8642236f72728d049da5c3b1f82","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void notify(\n\t\tAddress address, ClusterNode clusterNode, long expirationTime) {\n\n\t\tremoveExpiredInstances();\n\n\t\tif (System.currentTimeMillis() > expirationTime) {\n\t\t\treturn;\n\t\t}\n\n\t\tObjectValuePair<Address, ClusterNode> liveInstance =\n\t\t\tnew ObjectValuePair<Address, ClusterNode>(address, clusterNode);\n\n\t\t// Go through the extra step of removing, and then putting the new\n\t\t// expiration time. See LPS-23463.\n\n\t\tLong oldExpirationTime = _liveInstances.remove(liveInstance);\n\n\t\t_liveInstances.put(liveInstance, expirationTime);\n\n\t\tif ((oldExpirationTime != null) ||\n\t\t\t((_localAddress != null) && _localAddress.equals(address))) {\n\n\t\t\treturn;\n\t\t}\n\n\t\t_clusterNodeAddresses.put(clusterNode.getClusterNodeId(), address);\n\n\t\tClusterEvent clusterEvent = ClusterEvent.join(clusterNode);\n\n\t\tfireClusterEvent(clusterEvent);\n\t}","id":48393,"modified_method":"protected void memberJoined(Address joinAddress, ClusterNode clusterNode) {\n\t\t_liveInstances.put(joinAddress, clusterNode);\n\n\t\tAddress previousAddress = _clusterNodeAddresses.put(\n\t\t\tclusterNode.getClusterNodeId(), joinAddress);\n\n\t\tif ((previousAddress == null) && !_localAddress.equals(joinAddress)) {\n\n\t\t\tClusterEvent clusterEvent = ClusterEvent.join(clusterNode);\n\n\t\t\tfireClusterEvent(clusterEvent);\n\t\t}\n\t}","commit_id":"8943425a7712c8642236f72728d049da5c3b1f82","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic String toString() {\n\t\tStringBundler sb = new StringBundler(9);\n\n\t\tsb.append(\"{clusterMessageType=\");\n\t\tsb.append(_clusterMessageType);\n\n\t\tif (hasException()) {\n\t\t\tsb.append(\", exception=\");\n\t\t\tsb.append(_exception);\n\t\t}\n\n\t\tsb.append(\", multicast=\");\n\t\tsb.append(_multicast);\n\n\t\tif (!hasException()) {\n\t\t\tsb.append(\", result=\");\n\t\t\tsb.append(_result);\n\t\t}\n\n\t\tsb.append(\", uuid=\");\n\t\tsb.append(_uuid);\n\t\tsb.append(\"}\");\n\n\t\treturn sb.toString();\n\t}","id":48394,"modified_method":"@Override\n\tpublic String toString() {\n\t\tStringBundler sb = new StringBundler(9);\n\n\t\tsb.append(\"{clusterMessageType=\");\n\t\tsb.append(_clusterMessageType);\n\t\tsb.append(\", multicast=\");\n\t\tsb.append(_multicast);\n\t\tsb.append(\", uuid=\");\n\t\tsb.append(_uuid);\n\n\t\tif (_clusterMessageType.equals(ClusterMessageType.NOTIFY) ||\n\t\t\t_clusterMessageType.equals(ClusterMessageType.UPDATE)) {\n\n\t\t\tsb.append(\", clusterNode=\");\n\t\t\tsb.append(_clusterNode);\n\t\t}\n\t\telse {\n\t\t\tif (hasException()) {\n\t\t\t\tsb.append(\", exception=\");\n\t\t\t\tsb.append(_exception);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsb.append(\", result=\");\n\t\t\t\tsb.append(_result);\n\t\t\t}\n\t\t}\n\n\t\tsb.append(\"}\");\n\n\t\treturn sb.toString();\n\t}","commit_id":"8943425a7712c8642236f72728d049da5c3b1f82","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic String toString() {\n\t\tStringBundler sb = new StringBundler(17);\n\n\t\tsb.append(\"{clusterMessageType=\");\n\t\tsb.append(_clusterMessageType);\n\t\tsb.append(\", methodHandler=\");\n\t\tsb.append(_methodHandler);\n\t\tsb.append(\", multicast=\");\n\t\tsb.append(_multicast);\n\n\t\tif (_clusterMessageType.equals(ClusterMessageType.NOTIFY)) {\n\t\t\tsb.append(\", originatingClusterNode=\");\n\t\t\tsb.append(_originatingClusterNode);\n\t\t}\n\n\t\tsb.append(\", servletContextName=\");\n\t\tsb.append(_servletContextName);\n\t\tsb.append(\", parallelized=\");\n\t\tsb.append(_parallelized);\n\t\tsb.append(\", skipLocal=\");\n\t\tsb.append(_skipLocal);\n\t\tsb.append(\", uuid=\");\n\t\tsb.append(_uuid);\n\t\tsb.append(\"}\");\n\n\t\treturn sb.toString();\n\t}","id":48395,"modified_method":"@Override\n\tpublic String toString() {\n\t\tStringBundler sb = new StringBundler(13);\n\n\t\tsb.append(\"{clusterMessageType=\");\n\t\tsb.append(_clusterMessageType);\n\t\tsb.append(\", multicast=\");\n\t\tsb.append(_multicast);\n\t\tsb.append(\", servletContextName=\");\n\t\tsb.append(_servletContextName);\n\t\tsb.append(\", skipLocal=\");\n\t\tsb.append(_skipLocal);\n\t\tsb.append(\", uuid=\");\n\t\tsb.append(_uuid);\n\n\t\tif (_clusterMessageType.equals(ClusterMessageType.NOTIFY) ||\n\t\t\t_clusterMessageType.equals(ClusterMessageType.UPDATE)) {\n\n\t\t\tsb.append(\", originatingClusterNode=\");\n\t\t\tsb.append(_originatingClusterNode);\n\t\t}\n\t\telse {\n\t\t\tsb.append(\", methodHandler=\");\n\t\t\tsb.append(_methodHandler);\n\t\t}\n\n\t\tsb.append(\"}\");\n\n\t\treturn sb.toString();\n\t}","commit_id":"8943425a7712c8642236f72728d049da5c3b1f82","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static ClusterRequest createClusterNotifyRequest(\n\t\tClusterNode originatingClusterNode) {\n\n\t\tClusterRequest clusterRequest = new ClusterRequest();\n\n\t\tclusterRequest.setClusterMessageType(ClusterMessageType.NOTIFY);\n\t\tclusterRequest.setMulticast(true);\n\t\tclusterRequest.setOriginatingClusterNode(originatingClusterNode);\n\t\tclusterRequest.setParallelized(true);\n\t\tclusterRequest.setSkipLocal(true);\n\t\tclusterRequest.setUuid(PortalUUIDUtil.generate());\n\n\t\treturn clusterRequest;\n\t}","id":48396,"modified_method":"public static ClusterRequest createClusterRequest(\n\t\tClusterMessageType clusterMessageType,\n\t\tClusterNode originatingClusterNode) {\n\n\t\tClusterRequest clusterRequest = new ClusterRequest();\n\n\t\tclusterRequest.setClusterMessageType(clusterMessageType);\n\t\tclusterRequest.setMulticast(true);\n\t\tclusterRequest.setOriginatingClusterNode(originatingClusterNode);\n\t\tclusterRequest.setSkipLocal(true);\n\t\tclusterRequest.setUuid(PortalUUIDUtil.generate());\n\n\t\treturn clusterRequest;\n\t}","commit_id":"8943425a7712c8642236f72728d049da5c3b1f82","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void processClusterResponse(\n\t\tClusterNodeResponse clusterNodeResponse,\n\t\torg.jgroups.Address sourceAddress, org.jgroups.Address localAddress) {\n\n\t\tString uuid = clusterNodeResponse.getUuid();\n\n\t\tFutureClusterResponses futureClusterResponses =\n\t\t\t_clusterExecutorImpl.getExecutionResults(uuid);\n\n\t\tif (futureClusterResponses == null) {\n\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t_log.info(\"Unable to find response container for \" + uuid);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tAddress address = new AddressImpl(sourceAddress);\n\n\t\tif (futureClusterResponses.expectsReply(address)) {\n\t\t\tfutureClusterResponses.addClusterNodeResponse(clusterNodeResponse);\n\t\t}\n\t\telse {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\"Unknown uuid \" + uuid + \" from \" + sourceAddress);\n\t\t\t}\n\t\t}\n\t}","id":48397,"modified_method":"protected void processClusterResponse(\n\t\tClusterNodeResponse clusterNodeResponse,\n\t\torg.jgroups.Address sourceAddress, org.jgroups.Address localAddress) {\n\n\t\tClusterMessageType clusterMessageType =\n\t\t\tclusterNodeResponse.getClusterMessageType();\n\n\t\tif (clusterMessageType.equals(ClusterMessageType.NOTIFY) ||\n\t\t\tclusterMessageType.equals(ClusterMessageType.UPDATE)) {\n\n\t\t\tClusterNode clusterNode = clusterNodeResponse.getClusterNode();\n\n\t\t\tif (clusterNode != null) {\n\t\t\t\tAddress joinAddress = new AddressImpl(sourceAddress);\n\n\t\t\t\t_clusterExecutorImpl.memberJoined(joinAddress, clusterNode);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"Response of notify message does not contain cluster \" +\n\t\t\t\t\t\t\t\"node information\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tString uuid = clusterNodeResponse.getUuid();\n\n\t\tFutureClusterResponses futureClusterResponses =\n\t\t\t_clusterExecutorImpl.getExecutionResults(uuid);\n\n\t\tif (futureClusterResponses == null) {\n\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t_log.info(\"Unable to find response container for \" + uuid);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tAddress address = new AddressImpl(sourceAddress);\n\n\t\tif (futureClusterResponses.expectsReply(address)) {\n\t\t\tfutureClusterResponses.addClusterNodeResponse(clusterNodeResponse);\n\t\t}\n\t\telse {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\"Unknown uuid \" + uuid + \" from \" + sourceAddress);\n\t\t\t}\n\t\t}\n\t}","commit_id":"8943425a7712c8642236f72728d049da5c3b1f82","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void processClusterRequest(\n\t\tClusterRequest clusterRequest, org.jgroups.Address sourceAddress,\n\t\torg.jgroups.Address localAddress) {\n\n\t\tClusterMessageType clusterMessageType =\n\t\t\tclusterRequest.getClusterMessageType();\n\n\t\tif (clusterMessageType.equals(ClusterMessageType.NOTIFY)) {\n\t\t\tClusterNode originatingClusterNode =\n\t\t\t\tclusterRequest.getOriginatingClusterNode();\n\n\t\t\tif (originatingClusterNode != null) {\n\t\t\t\tlong expirationTime =\n\t\t\t\t\tSystem.currentTimeMillis() +\n\t\t\t\t\t\t(PropsValues.CLUSTER_EXECUTOR_HEARTBEAT_INTERVAL * 2);\n\n\t\t\t\t_clusterExecutorImpl.notify(\n\t\t\t\t\tnew AddressImpl(sourceAddress), originatingClusterNode,\n\t\t\t\t\texpirationTime);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"Content of notify message does not contain cluster \" +\n\t\t\t\t\t\t\t\"node information\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tClusterNodeResponse clusterNodeResponse = new ClusterNodeResponse();\n\n\t\tAddress address = new AddressImpl(localAddress);\n\n\t\tclusterNodeResponse.setAddress(address);\n\n\t\tclusterNodeResponse.setClusterMessageType(ClusterMessageType.EXECUTE);\n\n\t\ttry {\n\t\t\tClusterNode localClusterNode =\n\t\t\t\t_clusterExecutorImpl.getLocalClusterNode();\n\n\t\t\tclusterNodeResponse.setClusterNode(localClusterNode);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tclusterNodeResponse.setException(e);\n\t\t}\n\n\t\tclusterNodeResponse.setMulticast(clusterRequest.isMulticast());\n\t\tclusterNodeResponse.setUuid(clusterRequest.getUuid());\n\n\t\tMethodHandler methodHandler = clusterRequest.getMethodHandler();\n\n\t\tif (methodHandler != null) {\n\t\t\ttry {\n\t\t\t\tClusterInvokeThreadLocal.setEnabled(false);\n\n\t\t\t\tObject returnValue = invoke(\n\t\t\t\t\tclusterRequest.getServletContextName(),\n\t\t\t\t\tclusterRequest.getBeanIdentifier(), methodHandler);\n\n\t\t\t\tif (returnValue instanceof Serializable) {\n\t\t\t\t\tclusterNodeResponse.setResult(returnValue);\n\t\t\t\t}\n\t\t\t\telse if (returnValue != null) {\n\t\t\t\t\tclusterNodeResponse.setException(\n\t\t\t\t\t\tnew ClusterException(\n\t\t\t\t\t\t\t\"Return value is not serializable\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tclusterNodeResponse.setException(e);\n\n\t\t\t\t_log.error(\"Failed to invoke method \" + methodHandler, e);\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tClusterInvokeThreadLocal.setEnabled(true);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tclusterNodeResponse.setException(\n\t\t\t\tnew ClusterException(\n\t\t\t\t\t\"Payload is not of type \" + MethodHandler.class.getName()));\n\t\t}\n\n\t\tChannel controlChannel = _clusterExecutorImpl.getControlChannel();\n\n\t\ttry {\n\t\t\tcontrolChannel.send(\n\t\t\t\tsourceAddress, localAddress, clusterNodeResponse);\n\t\t}\n\t\tcatch (ChannelException ce) {\n\t\t\t_log.error(\n\t\t\t\t\"Unable to send response message \" + clusterNodeResponse, ce);\n\t\t}\n\t\tcatch (Throwable t) {\n\t\t\t_log.error(t, t);\n\t\t}\n\t}","id":48398,"modified_method":"protected void processClusterRequest(\n\t\tClusterRequest clusterRequest, org.jgroups.Address sourceAddress,\n\t\torg.jgroups.Address localAddress) {\n\n\t\tClusterMessageType clusterMessageType =\n\t\t\tclusterRequest.getClusterMessageType();\n\n\t\tClusterNodeResponse clusterNodeResponse = new ClusterNodeResponse();\n\n\t\tAddress address = new AddressImpl(localAddress);\n\n\t\tclusterNodeResponse.setAddress(address);\n\n\t\ttry {\n\t\t\tClusterNode localClusterNode =\n\t\t\t\t_clusterExecutorImpl.getLocalClusterNode();\n\n\t\t\tclusterNodeResponse.setClusterNode(localClusterNode);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tclusterNodeResponse.setException(e);\n\t\t}\n\n\t\tif (clusterMessageType.equals(ClusterMessageType.NOTIFY) ||\n\t\t\tclusterMessageType.equals(ClusterMessageType.UPDATE)) {\n\n\t\t\tClusterNode originatingClusterNode =\n\t\t\t\tclusterRequest.getOriginatingClusterNode();\n\n\t\t\tif (originatingClusterNode != null) {\n\t\t\t\t_clusterExecutorImpl.memberJoined(\n\t\t\t\t\tnew AddressImpl(sourceAddress), originatingClusterNode);\n\n\t\t\t\tclusterNodeResponse.setClusterMessageType(clusterMessageType);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"Content of notify message does not contain cluster \" +\n\t\t\t\t\t\t\t\"node information\");\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tclusterNodeResponse.setClusterMessageType(\n\t\t\t\tClusterMessageType.EXECUTE);\n\t\t\tclusterNodeResponse.setMulticast(clusterRequest.isMulticast());\n\t\t\tclusterNodeResponse.setUuid(clusterRequest.getUuid());\n\n\t\t\tMethodHandler methodHandler = clusterRequest.getMethodHandler();\n\n\t\t\tif (methodHandler != null) {\n\t\t\t\ttry {\n\t\t\t\t\tClusterInvokeThreadLocal.setEnabled(false);\n\n\t\t\t\t\tObject returnValue = invoke(\n\t\t\t\t\t\tclusterRequest.getServletContextName(),\n\t\t\t\t\t\tclusterRequest.getBeanIdentifier(), methodHandler);\n\n\t\t\t\t\tif (returnValue instanceof Serializable) {\n\t\t\t\t\t\tclusterNodeResponse.setResult(returnValue);\n\t\t\t\t\t}\n\t\t\t\t\telse if (returnValue != null) {\n\t\t\t\t\t\tclusterNodeResponse.setException(\n\t\t\t\t\t\t\tnew ClusterException(\n\t\t\t\t\t\t\t\t\"Return value is not serializable\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (Exception e) {\n\t\t\t\t\tclusterNodeResponse.setException(e);\n\n\t\t\t\t\t_log.error(\"Failed to invoke method \" + methodHandler, e);\n\t\t\t\t}\n\t\t\t\tfinally {\n\t\t\t\t\tClusterInvokeThreadLocal.setEnabled(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tclusterNodeResponse.setException(\n\t\t\t\tnew ClusterException(\n\t\t\t\t\t\"Payload is not of type \" + MethodHandler.class.getName()));\n\t\t\t}\n\t\t}\n\n\t\tChannel controlChannel = _clusterExecutorImpl.getControlChannel();\n\n\t\ttry {\n\t\t\tcontrolChannel.send(\n\t\t\t\tsourceAddress, localAddress, clusterNodeResponse);\n\t\t}\n\t\tcatch (ChannelException ce) {\n\t\t\t_log.error(\n\t\t\t\t\"Unable to send response message \" + clusterNodeResponse, ce);\n\t\t}\n\t\tcatch (Throwable t) {\n\t\t\t_log.error(t, t);\n\t\t}\n\t}","commit_id":"8943425a7712c8642236f72728d049da5c3b1f82","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void receive(Message message) {\n\t\torg.jgroups.Address sourceAddress = message.getSrc();\n\n\t\tChannel controlChannel = _clusterExecutorImpl.getControlChannel();\n\n\t\torg.jgroups.Address localAddress = controlChannel.getAddress();\n\n\t\tObject obj = message.getObject();\n\n\t\tif (obj == null) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\"Message content is null\");\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (localAddress.equals(sourceAddress)) {\n\t\t\tboolean isProcessed = processLocalMessage(obj, sourceAddress);\n\n\t\t\tif (isProcessed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (obj instanceof ClusterRequest) {\n\t\t\tClusterRequest clusterRequest = (ClusterRequest)obj;\n\n\t\t\tRequestTask requestTask = new RequestTask(\n\t\t\t\tclusterRequest, sourceAddress, localAddress);\n\n\t\t\tif (clusterRequest.isParallelized()) {\n\t\t\t\t_parallelExecutorService.execute(requestTask);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_serialExecutorService.execute(requestTask);\n\t\t\t}\n\t\t}\n\t\telse if (obj instanceof ClusterNodeResponse) {\n\t\t\tClusterNodeResponse clusterNodeResponse = (ClusterNodeResponse)obj;\n\n\t\t\tprocessClusterResponse(\n\t\t\t\tclusterNodeResponse, sourceAddress, localAddress);\n\t\t}\n\t\telse if (_log.isWarnEnabled()) {\n\t\t\t_log.warn(\n\t\t\t\t\"Unable to process message content of type \" + obj.getClass());\n\t\t}\n\t}","id":48399,"modified_method":"@Override\n\tpublic void receive(Message message) {\n\t\torg.jgroups.Address sourceAddress = message.getSrc();\n\n\t\tChannel controlChannel = _clusterExecutorImpl.getControlChannel();\n\n\t\torg.jgroups.Address localAddress = controlChannel.getAddress();\n\n\t\tObject obj = message.getObject();\n\n\t\tif (obj == null) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\"Message content is null\");\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (localAddress.equals(sourceAddress)) {\n\t\t\tboolean isProcessed = processLocalMessage(obj, sourceAddress);\n\n\t\t\tif (isProcessed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (obj instanceof ClusterRequest) {\n\t\t\tClusterRequest clusterRequest = (ClusterRequest)obj;\n\n\t\t\tprocessClusterRequest(clusterRequest, sourceAddress, localAddress);\n\t\t}\n\t\telse if (obj instanceof ClusterNodeResponse) {\n\t\t\tClusterNodeResponse clusterNodeResponse = (ClusterNodeResponse)obj;\n\n\t\t\tprocessClusterResponse(\n\t\t\t\tclusterNodeResponse, sourceAddress, localAddress);\n\t\t}\n\t\telse if (_log.isWarnEnabled()) {\n\t\t\t_log.warn(\n\t\t\t\t\"Unable to process message content of type \" + obj.getClass());\n\t\t}\n\t}","commit_id":"8943425a7712c8642236f72728d049da5c3b1f82","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected Role checkRole(\n\t\t\tLayoutCache layoutCache, long companyId, long groupId, long userId,\n\t\t\tElement roleElement)\n\t\tthrows Exception {\n\n\t\tString name = roleElement.attributeValue(\"name\");\n\n\t\tRole role = null;\n\n\t\tif (name.startsWith(PermissionExporter.ROLE_TEAM_PREFIX)) {\n\t\t\tname = name.substring(PermissionExporter.ROLE_TEAM_PREFIX.length());\n\n\t\t\tString description = roleElement.attributeValue(\"description\");\n\n\t\t\tTeam team = null;\n\n\t\t\ttry {\n\t\t\t\tteam = TeamLocalServiceUtil.getTeam(groupId, name);\n\t\t\t}\n\t\t\tcatch (NoSuchTeamException nste) {\n\t\t\t\tteam = TeamLocalServiceUtil.addTeam(\n\t\t\t\t\tuserId, groupId, name, description);\n\t\t\t}\n\n\t\t\trole = RoleLocalServiceUtil.getTeamRole(\n\t\t\t\tcompanyId, team.getTeamId());\n\n\t\t\treturn role;\n\t\t}\n\n\t\tString uuid = roleElement.attributeValue(\"uuid\");\n\n\t\trole = layoutCache.getRoleByUuid(companyId, uuid);\n\n\t\tif (role == null) {\n\t\t\trole = layoutCache.getRoleByName(companyId, name);\n\t\t}\n\n\t\tif (role != null) {\n\t\t\treturn role;\n\t\t}\n\n\t\tString title = roleElement.attributeValue(\"title\");\n\n\t\tMap<Locale, String> titleMap = LocalizationUtil.getLocalizationMap(\n\t\t\ttitle);\n\n\t\tString description = roleElement.attributeValue(\"description\");\n\n\t\tMap<Locale, String> descriptionMap =\n\t\t\tLocalizationUtil.getLocalizationMap(description);\n\n\t\tint type = GetterUtil.getInteger(roleElement.attributeValue(\"type\"));\n\t\tString subtype = roleElement.attributeValue(\"subtype\");\n\n\t\trole = RoleLocalServiceUtil.addRole(\n\t\t\tuserId, null, 0, name, titleMap, descriptionMap, type, subtype,\n\t\t\tnull);\n\n\t\trole.setUuid(uuid);\n\n\t\treturn role;\n\t}","id":48400,"modified_method":"protected Role checkRole(\n\t\t\tLayoutCache layoutCache, long companyId, long groupId, long userId,\n\t\t\tElement roleElement)\n\t\tthrows Exception {\n\n\t\tString name = roleElement.attributeValue(\"name\");\n\n\t\tRole role = null;\n\n\t\tif (name.startsWith(PermissionExporter.ROLE_TEAM_PREFIX)) {\n\t\t\tname = name.substring(PermissionExporter.ROLE_TEAM_PREFIX.length());\n\n\t\t\tString description = roleElement.attributeValue(\"description\");\n\n\t\t\tTeam team = null;\n\n\t\t\ttry {\n\t\t\t\tteam = TeamLocalServiceUtil.getTeam(groupId, name);\n\t\t\t}\n\t\t\tcatch (NoSuchTeamException nste) {\n\t\t\t\tteam = TeamLocalServiceUtil.addTeam(\n\t\t\t\t\tuserId, groupId, name, description);\n\t\t\t}\n\n\t\t\trole = RoleLocalServiceUtil.getTeamRole(\n\t\t\t\tcompanyId, team.getTeamId());\n\n\t\t\treturn role;\n\t\t}\n\n\t\tString uuid = roleElement.attributeValue(\"uuid\");\n\n\t\trole = layoutCache.getRoleByUuid(companyId, uuid);\n\n\t\tif (role == null) {\n\t\t\trole = layoutCache.getRoleByName(companyId, name);\n\t\t}\n\n\t\tif (role != null) {\n\t\t\treturn role;\n\t\t}\n\n\t\tString title = roleElement.attributeValue(\"title\");\n\n\t\tMap<Locale, String> titleMap = LocalizationUtil.getLocalizationMap(\n\t\t\ttitle);\n\n\t\tString description = roleElement.attributeValue(\"description\");\n\n\t\tMap<Locale, String> descriptionMap =\n\t\t\tLocalizationUtil.getLocalizationMap(description);\n\n\t\tint type = GetterUtil.getInteger(roleElement.attributeValue(\"type\"));\n\t\tString subtype = roleElement.attributeValue(\"subtype\");\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setUuid(uuid);\n\n\t\trole = RoleLocalServiceUtil.addRole(\n\t\t\tuserId, null, 0, name, titleMap, descriptionMap, type, subtype,\n\t\t\tserviceContext);\n\n\t\treturn role;\n\t}","commit_id":"a08c827ad18e13f8afa342cb36ab730dcbf096e9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void importLayout(\n\t\t\tPortletDataContext portletDataContext, User user,\n\t\t\tLayoutCache layoutCache, List<Layout> previousLayouts,\n\t\t\tList<Layout> newLayouts, Map<Long, Layout> newLayoutsMap,\n\t\t\tSet<Long> newLayoutIds, String portletsMergeMode, String themeId,\n\t\t\tString colorSchemeId, String layoutsImportMode,\n\t\t\tboolean privateLayout, boolean importPermissions,\n\t\t\tboolean importPublicLayoutPermissions,\n\t\t\tboolean importUserPermissions, boolean importThemeSettings,\n\t\t\tElement rootElement, Element layoutElement)\n\t\tthrows Exception {\n\n\t\tlong groupId = portletDataContext.getGroupId();\n\n\t\tString layoutUuid = GetterUtil.getString(\n\t\t\tlayoutElement.attributeValue(\"layout-uuid\"));\n\n\t\tlong layoutId = GetterUtil.getInteger(\n\t\t\tlayoutElement.attributeValue(\"layout-id\"));\n\n\t\tlong oldLayoutId = layoutId;\n\n\t\tboolean deleteLayout = GetterUtil.getBoolean(\n\t\t\tlayoutElement.attributeValue(\"delete\"));\n\n\t\tif (deleteLayout) {\n\t\t\tLayout layout = LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(\n\t\t\t\tlayoutUuid, groupId);\n\n\t\t\tif (layout != null) {\n\t\t\t\tnewLayoutsMap.put(oldLayoutId, layout);\n\n\t\t\t\tLayoutLocalServiceUtil.deleteLayout(layout);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tString path = layoutElement.attributeValue(\"path\");\n\n\t\tif (!portletDataContext.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tLayout layout = (Layout)portletDataContext.getZipEntryAsObject(path);\n\n\t\tLayout existingLayout = null;\n\t\tLayout importedLayout = null;\n\n\t\tString friendlyURL = layout.getFriendlyURL();\n\n\t\tif (layoutsImportMode.equals(\n\t\t\t\tPortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_ADD_AS_NEW)) {\n\n\t\t\tlayoutId = LayoutLocalServiceUtil.getNextLayoutId(\n\t\t\t\tgroupId, privateLayout);\n\t\t\tfriendlyURL = StringPool.SLASH + layoutId;\n\t\t}\n\t\telse if (layoutsImportMode.equals(\n\t\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\t\tLAYOUTS_IMPORT_MODE_MERGE_BY_LAYOUT_NAME)) {\n\n\t\t\tLocale locale = LocaleUtil.getDefault();\n\n\t\t\tString localizedName = layout.getName(locale);\n\n\t\t\tfor (Layout curLayout : previousLayouts) {\n\t\t\t\tif (localizedName.equals(curLayout.getName(locale)) ||\n\t\t\t\t\tfriendlyURL.equals(curLayout.getFriendlyURL())) {\n\n\t\t\t\t\texistingLayout = curLayout;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingLayout == null) {\n\t\t\t\tlayoutId = LayoutLocalServiceUtil.getNextLayoutId(\n\t\t\t\t\tgroupId, privateLayout);\n\t\t\t}\n\t\t}\n\t\telse {\n\n\t\t\t// The default behaviour of import mode is\n\t\t\t// PortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_MERGE_BY_LAYOUT_ID\n\n\t\t\texistingLayout = LayoutUtil.fetchByUUID_G(\n\t\t\t\tlayout.getUuid(), groupId);\n\n\t\t\tif (existingLayout == null) {\n\t\t\t\texistingLayout = LayoutUtil.fetchByG_P_F(\n\t\t\t\t\tgroupId, privateLayout, friendlyURL);\n\t\t\t}\n\n\t\t\tif (existingLayout == null) {\n\t\t\t\tlayoutId = LayoutLocalServiceUtil.getNextLayoutId(\n\t\t\t\t\tgroupId, privateLayout);\n\t\t\t}\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\tif (existingLayout == null) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Layout with {groupId=\" + groupId + \",privateLayout=\" +\n\t\t\t\t\t\tprivateLayout + \",layoutId=\" + layoutId +\n\t\t\t\t\t\t\t\"} does not exist\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Layout with {groupId=\" + groupId + \",privateLayout=\" +\n\t\t\t\t\t\tprivateLayout + \",layoutId=\" + layoutId +\n\t\t\t\t\t\t\t\"} exists\");\n\t\t\t}\n\t\t}\n\n\t\tif (existingLayout == null) {\n\t\t\tlong plid = CounterLocalServiceUtil.increment();\n\n\t\t\timportedLayout = LayoutUtil.create(plid);\n\n\t\t\timportedLayout.setUuid(layout.getUuid());\n\t\t\timportedLayout.setGroupId(groupId);\n\t\t\timportedLayout.setPrivateLayout(privateLayout);\n\t\t\timportedLayout.setLayoutId(layoutId);\n\n\t\t\tif (layout.isIconImage()) {\n\t\t\t\tlong iconImageId = CounterLocalServiceUtil.increment();\n\n\t\t\t\timportedLayout.setIconImageId(iconImageId);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\timportedLayout = existingLayout;\n\t\t}\n\n\t\tnewLayoutsMap.put(oldLayoutId, importedLayout);\n\n\t\tlong parentLayoutId = layout.getParentLayoutId();\n\n\t\tNode parentLayoutNode = rootElement.selectSingleNode(\n\t\t\t\"./layouts/layout[@layout-id='\" + parentLayoutId + \"']\");\n\n\t\tString parentLayoutUuid = GetterUtil.getString(\n\t\t\tlayoutElement.attributeValue(\"parent-layout-uuid\"));\n\n\t\tif ((parentLayoutId != LayoutConstants.DEFAULT_PARENT_LAYOUT_ID) &&\n\t\t\t(parentLayoutNode != null)) {\n\n\t\t\timportLayout(\n\t\t\t\tportletDataContext, user, layoutCache, previousLayouts,\n\t\t\t\tnewLayouts, newLayoutsMap, newLayoutIds, portletsMergeMode,\n\t\t\t\tthemeId, colorSchemeId, layoutsImportMode, privateLayout,\n\t\t\t\timportPermissions, importPublicLayoutPermissions,\n\t\t\t\timportUserPermissions, importThemeSettings,\n\t\t\t\trootElement, (Element)parentLayoutNode);\n\n\t\t\tLayout parentLayout = newLayoutsMap.get(parentLayoutId);\n\n\t\t\tparentLayoutId = parentLayout.getLayoutId();\n\t\t}\n\t\telse if (Validator.isNotNull(parentLayoutUuid)) {\n\t\t\tLayout parentLayout =\n\t\t\t\tLayoutLocalServiceUtil.getLayoutByUuidAndGroupId(\n\t\t\t\t\tparentLayoutUuid, groupId);\n\n\t\t\tparentLayoutId = parentLayout.getLayoutId();\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\n\t\t\t\t\"Importing layout with layout id \" + layoutId +\n\t\t\t\t\t\" and parent layout id \" + parentLayoutId);\n\t\t}\n\n\t\timportedLayout.setCompanyId(user.getCompanyId());\n\t\timportedLayout.setParentLayoutId(parentLayoutId);\n\t\timportedLayout.setName(layout.getName());\n\t\timportedLayout.setTitle(layout.getTitle());\n\t\timportedLayout.setDescription(layout.getDescription());\n\t\timportedLayout.setKeywords(layout.getKeywords());\n\t\timportedLayout.setRobots(layout.getRobots());\n\t\timportedLayout.setType(layout.getType());\n\n\t\tif (layout.isTypeArticle()) {\n\t\t\timportJournalArticle(portletDataContext, layout, layoutElement);\n\n\t\t\timportedLayout.setTypeSettings(layout.getTypeSettings());\n\t\t}\n\t\telse if (layout.isTypePortlet() &&\n\t\t\t\t Validator.isNotNull(layout.getTypeSettings()) &&\n\t\t\t\t !portletsMergeMode.equals(\n\t\t\t\t\t PortletDataHandlerKeys.PORTLETS_MERGE_MODE_REPLACE)) {\n\n\t\t\tmergePortlets(\n\t\t\t\timportedLayout, layout.getTypeSettings(), portletsMergeMode);\n\t\t}\n\t\telse if (layout.isTypeLinkToLayout()) {\n\t\t\tUnicodeProperties typeSettingsProperties =\n\t\t\t\tlayout.getTypeSettingsProperties();\n\n\t\t\tlong linkToLayoutId = GetterUtil.getLong(\n\t\t\t\ttypeSettingsProperties.getProperty(\n\t\t\t\t\t\"linkToLayoutId\", StringPool.BLANK));\n\n\t\t\tif (linkToLayoutId > 0) {\n\t\t\t\tNode linkedLayoutNode = rootElement.selectSingleNode(\n\t\t\t\t\t\"./layouts/layout[@layout-id='\" + linkToLayoutId + \"']\");\n\n\t\t\t\tif (linkedLayoutNode != null) {\n\t\t\t\t\timportLayout(\n\t\t\t\t\t\tportletDataContext, user, layoutCache, previousLayouts,\n\t\t\t\t\t\tnewLayouts, newLayoutsMap, newLayoutIds,\n\t\t\t\t\t\tportletsMergeMode, themeId, colorSchemeId,\n\t\t\t\t\t\tlayoutsImportMode, privateLayout, importPermissions,\n\t\t\t\t\t\timportPublicLayoutPermissions, importUserPermissions,\n\t\t\t\t\t\timportThemeSettings, rootElement,\n\t\t\t\t\t\t(Element)linkedLayoutNode);\n\n\t\t\t\t\tLayout linkedLayout = newLayoutsMap.get(linkToLayoutId);\n\n\t\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\t\"privateLayout\",\n\t\t\t\t\t\tString.valueOf(linkedLayout.getPrivateLayout()));\n\t\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\t\"linkToLayoutId\",\n\t\t\t\t\t\tString.valueOf(linkedLayout.getLayoutId()));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t\tStringBundler sb = new StringBundler();\n\n\t\t\t\t\t\tsb.append(\"Unable to link layout with friendly URL \");\n\t\t\t\t\t\tsb.append(layout.getFriendlyURL());\n\t\t\t\t\t\tsb.append(\" and layout id \");\n\t\t\t\t\t\tsb.append(layout.getLayoutId());\n\t\t\t\t\t\tsb.append(\" to layout with layout id \");\n\t\t\t\t\t\tsb.append(linkToLayoutId);\n\n\t\t\t\t\t\t_log.warn(sb.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\timportedLayout.setTypeSettings(layout.getTypeSettings());\n\t\t}\n\t\telse {\n\t\t\timportedLayout.setTypeSettings(layout.getTypeSettings());\n\t\t}\n\n\t\timportedLayout.setHidden(layout.isHidden());\n\t\timportedLayout.setFriendlyURL(friendlyURL);\n\n\t\tif (importThemeSettings) {\n\t\t\timportedLayout.setThemeId(layout.getThemeId());\n\t\t\timportedLayout.setColorSchemeId(layout.getColorSchemeId());\n\t\t}\n\t\telse {\n\t\t\timportedLayout.setThemeId(StringPool.BLANK);\n\t\t\timportedLayout.setColorSchemeId(StringPool.BLANK);\n\t\t}\n\n\t\timportedLayout.setWapThemeId(layout.getWapThemeId());\n\t\timportedLayout.setWapColorSchemeId(layout.getWapColorSchemeId());\n\t\timportedLayout.setCss(layout.getCss());\n\t\timportedLayout.setPriority(layout.getPriority());\n\n\t\tStagingUtil.updateLastImportSettings(\n\t\t\tlayoutElement, importedLayout, portletDataContext);\n\n\t\tfixTypeSettings(importedLayout);\n\n\t\tif (layout.isIconImage()) {\n\t\t\tString iconImagePath = layoutElement.elementText(\"icon-image-path\");\n\n\t\t\tbyte[] iconBytes = portletDataContext.getZipEntryAsByteArray(\n\t\t\t\ticonImagePath);\n\n\t\t\tif ((iconBytes != null) && (iconBytes.length > 0)) {\n\t\t\t\timportedLayout.setIconImage(true);\n\n\t\t\t\tImageLocalServiceUtil.updateImage(\n\t\t\t\t\timportedLayout.getIconImageId(), iconBytes);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tImageLocalServiceUtil.deleteImage(importedLayout.getIconImageId());\n\t\t}\n\n\t\tServiceContext serviceContext = portletDataContext.createServiceContext(\n\t\t\tlayoutElement, importedLayout, null);\n\n\t\timportedLayout.setExpandoBridgeAttributes(serviceContext);\n\n\t\tLayoutUtil.update(importedLayout, false);\n\n\t\tportletDataContext.setPlid(importedLayout.getPlid());\n\t\tportletDataContext.setOldPlid(layout.getPlid());\n\n\t\tnewLayoutIds.add(importedLayout.getLayoutId());\n\n\t\tnewLayouts.add(importedLayout);\n\n\t\t// Layout permissions\n\n\t\tif (importPermissions) {\n\t\t\t_permissionImporter.importLayoutPermissions(\n\t\t\t\tlayoutCache, portletDataContext.getCompanyId(), groupId,\n\t\t\t\tuser.getUserId(), importedLayout, layoutElement, rootElement,\n\t\t\t\timportUserPermissions);\n\t\t}\n\n\t\tif (importPublicLayoutPermissions) {\n\t\t\tString resourceName = Layout.class.getName();\n\t\t\tString resourcePrimKey = String.valueOf(importedLayout.getPlid());\n\n\t\t\tRole guestRole = RoleLocalServiceUtil.getRole(\n\t\t\t\timportedLayout.getCompanyId(), RoleConstants.GUEST);\n\n\t\t\tif (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 5) {\n\t\t\t\tResource resource = layoutCache.getResource(\n\t\t\t\t\timportedLayout.getCompanyId(), groupId, resourceName,\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL, resourcePrimKey, false);\n\n\t\t\t\tPermissionLocalServiceUtil.setRolePermissions(\n\t\t\t\t\tguestRole.getRoleId(), new String[] {ActionKeys.VIEW},\n\t\t\t\t\tresource.getResourceId());\n\t\t\t}\n\t\t\telse if (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 6) {\n\t\t\t\tResourcePermissionLocalServiceUtil.setResourcePermissions(\n\t\t\t\t\timportedLayout.getCompanyId(), resourceName,\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL, resourcePrimKey,\n\t\t\t\t\tguestRole.getRoleId(), new String[] {ActionKeys.VIEW});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tResource resource = layoutCache.getResource(\n\t\t\t\t\timportedLayout.getCompanyId(), groupId, resourceName,\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL, resourcePrimKey, false);\n\n\t\t\t\tPermissionLocalServiceUtil.setGroupPermissions(\n\t\t\t\t\tgroupId, new String[] {ActionKeys.VIEW},\n\t\t\t\t\tresource.getResourceId());\n\t\t\t}\n\t\t}\n\n\t\t_portletImporter.importPortletData(\n\t\t\tportletDataContext, PortletKeys.LAYOUT_CONFIGURATION, null,\n\t\t\tlayoutElement);\n\t}","id":48401,"modified_method":"protected void importLayout(\n\t\t\tPortletDataContext portletDataContext, User user,\n\t\t\tLayoutCache layoutCache, List<Layout> previousLayouts,\n\t\t\tList<Layout> newLayouts, Map<Long, Layout> newLayoutsMap,\n\t\t\tSet<Long> newLayoutIds, String portletsMergeMode, String themeId,\n\t\t\tString colorSchemeId, String layoutsImportMode,\n\t\t\tboolean privateLayout, boolean importPermissions,\n\t\t\tboolean importPublicLayoutPermissions,\n\t\t\tboolean importUserPermissions, boolean importThemeSettings,\n\t\t\tElement rootElement, Element layoutElement)\n\t\tthrows Exception {\n\n\t\tlong groupId = portletDataContext.getGroupId();\n\n\t\tString layoutUuid = GetterUtil.getString(\n\t\t\tlayoutElement.attributeValue(\"layout-uuid\"));\n\n\t\tlong layoutId = GetterUtil.getInteger(\n\t\t\tlayoutElement.attributeValue(\"layout-id\"));\n\n\t\tlong oldLayoutId = layoutId;\n\n\t\tboolean deleteLayout = GetterUtil.getBoolean(\n\t\t\tlayoutElement.attributeValue(\"delete\"));\n\n\t\tif (deleteLayout) {\n\t\t\tLayout layout = LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(\n\t\t\t\tlayoutUuid, groupId);\n\n\t\t\tif (layout != null) {\n\t\t\t\tnewLayoutsMap.put(oldLayoutId, layout);\n\n\t\t\t\tLayoutLocalServiceUtil.deleteLayout(layout);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tString path = layoutElement.attributeValue(\"path\");\n\n\t\tif (!portletDataContext.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tLayout layout = (Layout)portletDataContext.getZipEntryAsObject(path);\n\n\t\tLayout existingLayout = null;\n\t\tLayout importedLayout = null;\n\n\t\tString friendlyURL = layout.getFriendlyURL();\n\n\t\tif (layoutsImportMode.equals(\n\t\t\t\tPortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_ADD_AS_NEW) ||\n\t\t\tlayoutsImportMode.equals(\n\t\t\t\tPortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\tlayoutId = LayoutLocalServiceUtil.getNextLayoutId(\n\t\t\t\tgroupId, privateLayout);\n\t\t\tfriendlyURL = StringPool.SLASH + layoutId;\n\t\t}\n\t\telse if (layoutsImportMode.equals(\n\t\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\t\tLAYOUTS_IMPORT_MODE_MERGE_BY_LAYOUT_NAME)) {\n\n\t\t\tLocale locale = LocaleUtil.getDefault();\n\n\t\t\tString localizedName = layout.getName(locale);\n\n\t\t\tfor (Layout curLayout : previousLayouts) {\n\t\t\t\tif (localizedName.equals(curLayout.getName(locale)) ||\n\t\t\t\t\tfriendlyURL.equals(curLayout.getFriendlyURL())) {\n\n\t\t\t\t\texistingLayout = curLayout;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingLayout == null) {\n\t\t\t\tlayoutId = LayoutLocalServiceUtil.getNextLayoutId(\n\t\t\t\t\tgroupId, privateLayout);\n\t\t\t}\n\t\t}\n\t\telse {\n\n\t\t\t// The default behaviour of import mode is\n\t\t\t// PortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_MERGE_BY_LAYOUT_ID\n\n\t\t\texistingLayout = LayoutUtil.fetchByUUID_G(\n\t\t\t\tlayout.getUuid(), groupId);\n\n\t\t\tif (existingLayout == null) {\n\t\t\t\texistingLayout = LayoutUtil.fetchByG_P_F(\n\t\t\t\t\tgroupId, privateLayout, friendlyURL);\n\t\t\t}\n\n\t\t\tif (existingLayout == null) {\n\t\t\t\tlayoutId = LayoutLocalServiceUtil.getNextLayoutId(\n\t\t\t\t\tgroupId, privateLayout);\n\t\t\t}\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\tif (existingLayout == null) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Layout with {groupId=\" + groupId + \",privateLayout=\" +\n\t\t\t\t\t\tprivateLayout + \",layoutId=\" + layoutId +\n\t\t\t\t\t\t\t\"} does not exist\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Layout with {groupId=\" + groupId + \",privateLayout=\" +\n\t\t\t\t\t\tprivateLayout + \",layoutId=\" + layoutId +\n\t\t\t\t\t\t\t\"} exists\");\n\t\t\t}\n\t\t}\n\n\t\tif (existingLayout == null) {\n\t\t\tlong plid = CounterLocalServiceUtil.increment();\n\n\t\t\timportedLayout = LayoutUtil.create(plid);\n\n\t\t\tif (layoutsImportMode.equals(\n\t\t\t\t\tPortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\t\timportedLayout.setTemplateLayoutUuid(layout.getUuid());\n\t\t\t}\n\t\t\telse {\n\t\t\t\timportedLayout.setUuid(layout.getUuid());\n\t\t\t}\n\n\t\t\timportedLayout.setGroupId(groupId);\n\t\t\timportedLayout.setPrivateLayout(privateLayout);\n\t\t\timportedLayout.setLayoutId(layoutId);\n\n\t\t\tif (layout.isIconImage()) {\n\t\t\t\tlong iconImageId = CounterLocalServiceUtil.increment();\n\n\t\t\t\timportedLayout.setIconImageId(iconImageId);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\timportedLayout = existingLayout;\n\t\t}\n\n\t\tnewLayoutsMap.put(oldLayoutId, importedLayout);\n\n\t\tlong parentLayoutId = layout.getParentLayoutId();\n\n\t\tNode parentLayoutNode = rootElement.selectSingleNode(\n\t\t\t\"./layouts/layout[@layout-id='\" + parentLayoutId + \"']\");\n\n\t\tString parentLayoutUuid = GetterUtil.getString(\n\t\t\tlayoutElement.attributeValue(\"parent-layout-uuid\"));\n\n\t\tif ((parentLayoutId != LayoutConstants.DEFAULT_PARENT_LAYOUT_ID) &&\n\t\t\t(parentLayoutNode != null)) {\n\n\t\t\timportLayout(\n\t\t\t\tportletDataContext, user, layoutCache, previousLayouts,\n\t\t\t\tnewLayouts, newLayoutsMap, newLayoutIds, portletsMergeMode,\n\t\t\t\tthemeId, colorSchemeId, layoutsImportMode, privateLayout,\n\t\t\t\timportPermissions, importPublicLayoutPermissions,\n\t\t\t\timportUserPermissions, importThemeSettings,\n\t\t\t\trootElement, (Element)parentLayoutNode);\n\n\t\t\tLayout parentLayout = newLayoutsMap.get(parentLayoutId);\n\n\t\t\tparentLayoutId = parentLayout.getLayoutId();\n\t\t}\n\t\telse if (Validator.isNotNull(parentLayoutUuid)) {\n\t\t\tLayout parentLayout =\n\t\t\t\tLayoutLocalServiceUtil.getLayoutByUuidAndGroupId(\n\t\t\t\t\tparentLayoutUuid, groupId);\n\n\t\t\tparentLayoutId = parentLayout.getLayoutId();\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\n\t\t\t\t\"Importing layout with layout id \" + layoutId +\n\t\t\t\t\t\" and parent layout id \" + parentLayoutId);\n\t\t}\n\n\t\timportedLayout.setCompanyId(user.getCompanyId());\n\t\timportedLayout.setParentLayoutId(parentLayoutId);\n\t\timportedLayout.setName(layout.getName());\n\t\timportedLayout.setTitle(layout.getTitle());\n\t\timportedLayout.setDescription(layout.getDescription());\n\t\timportedLayout.setKeywords(layout.getKeywords());\n\t\timportedLayout.setRobots(layout.getRobots());\n\t\timportedLayout.setType(layout.getType());\n\n\t\tif (layout.isTypeArticle()) {\n\t\t\timportJournalArticle(portletDataContext, layout, layoutElement);\n\n\t\t\timportedLayout.setTypeSettings(layout.getTypeSettings());\n\t\t}\n\t\telse if (layout.isTypePortlet() &&\n\t\t\t\t Validator.isNotNull(layout.getTypeSettings()) &&\n\t\t\t\t !portletsMergeMode.equals(\n\t\t\t\t\t PortletDataHandlerKeys.PORTLETS_MERGE_MODE_REPLACE)) {\n\n\t\t\tmergePortlets(\n\t\t\t\timportedLayout, layout.getTypeSettings(), portletsMergeMode);\n\t\t}\n\t\telse if (layout.isTypeLinkToLayout()) {\n\t\t\tUnicodeProperties typeSettingsProperties =\n\t\t\t\tlayout.getTypeSettingsProperties();\n\n\t\t\tlong linkToLayoutId = GetterUtil.getLong(\n\t\t\t\ttypeSettingsProperties.getProperty(\n\t\t\t\t\t\"linkToLayoutId\", StringPool.BLANK));\n\n\t\t\tif (linkToLayoutId > 0) {\n\t\t\t\tNode linkedLayoutNode = rootElement.selectSingleNode(\n\t\t\t\t\t\"./layouts/layout[@layout-id='\" + linkToLayoutId + \"']\");\n\n\t\t\t\tif (linkedLayoutNode != null) {\n\t\t\t\t\timportLayout(\n\t\t\t\t\t\tportletDataContext, user, layoutCache, previousLayouts,\n\t\t\t\t\t\tnewLayouts, newLayoutsMap, newLayoutIds,\n\t\t\t\t\t\tportletsMergeMode, themeId, colorSchemeId,\n\t\t\t\t\t\tlayoutsImportMode, privateLayout, importPermissions,\n\t\t\t\t\t\timportPublicLayoutPermissions, importUserPermissions,\n\t\t\t\t\t\timportThemeSettings, rootElement,\n\t\t\t\t\t\t(Element)linkedLayoutNode);\n\n\t\t\t\t\tLayout linkedLayout = newLayoutsMap.get(linkToLayoutId);\n\n\t\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\t\"privateLayout\",\n\t\t\t\t\t\tString.valueOf(linkedLayout.getPrivateLayout()));\n\t\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\t\"linkToLayoutId\",\n\t\t\t\t\t\tString.valueOf(linkedLayout.getLayoutId()));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t\tStringBundler sb = new StringBundler();\n\n\t\t\t\t\t\tsb.append(\"Unable to link layout with friendly URL \");\n\t\t\t\t\t\tsb.append(layout.getFriendlyURL());\n\t\t\t\t\t\tsb.append(\" and layout id \");\n\t\t\t\t\t\tsb.append(layout.getLayoutId());\n\t\t\t\t\t\tsb.append(\" to layout with layout id \");\n\t\t\t\t\t\tsb.append(linkToLayoutId);\n\n\t\t\t\t\t\t_log.warn(sb.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\timportedLayout.setTypeSettings(layout.getTypeSettings());\n\t\t}\n\t\telse {\n\t\t\timportedLayout.setTypeSettings(layout.getTypeSettings());\n\t\t}\n\n\t\timportedLayout.setHidden(layout.isHidden());\n\t\timportedLayout.setFriendlyURL(friendlyURL);\n\n\t\tif (importThemeSettings) {\n\t\t\timportedLayout.setThemeId(layout.getThemeId());\n\t\t\timportedLayout.setColorSchemeId(layout.getColorSchemeId());\n\t\t}\n\t\telse {\n\t\t\timportedLayout.setThemeId(StringPool.BLANK);\n\t\t\timportedLayout.setColorSchemeId(StringPool.BLANK);\n\t\t}\n\n\t\timportedLayout.setWapThemeId(layout.getWapThemeId());\n\t\timportedLayout.setWapColorSchemeId(layout.getWapColorSchemeId());\n\t\timportedLayout.setCss(layout.getCss());\n\t\timportedLayout.setPriority(layout.getPriority());\n\n\t\tStagingUtil.updateLastImportSettings(\n\t\t\tlayoutElement, importedLayout, portletDataContext);\n\n\t\tfixTypeSettings(importedLayout);\n\n\t\tif (layout.isIconImage()) {\n\t\t\tString iconImagePath = layoutElement.elementText(\"icon-image-path\");\n\n\t\t\tbyte[] iconBytes = portletDataContext.getZipEntryAsByteArray(\n\t\t\t\ticonImagePath);\n\n\t\t\tif ((iconBytes != null) && (iconBytes.length > 0)) {\n\t\t\t\timportedLayout.setIconImage(true);\n\n\t\t\t\tImageLocalServiceUtil.updateImage(\n\t\t\t\t\timportedLayout.getIconImageId(), iconBytes);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tImageLocalServiceUtil.deleteImage(importedLayout.getIconImageId());\n\t\t}\n\n\t\tServiceContext serviceContext = portletDataContext.createServiceContext(\n\t\t\tlayoutElement, importedLayout, null);\n\n\t\timportedLayout.setExpandoBridgeAttributes(serviceContext);\n\n\t\tLayoutUtil.update(importedLayout, false);\n\n\t\tportletDataContext.setPlid(importedLayout.getPlid());\n\t\tportletDataContext.setOldPlid(layout.getPlid());\n\n\t\tnewLayoutIds.add(importedLayout.getLayoutId());\n\n\t\tnewLayouts.add(importedLayout);\n\n\t\t// Layout permissions\n\n\t\tif (importPermissions) {\n\t\t\t_permissionImporter.importLayoutPermissions(\n\t\t\t\tlayoutCache, portletDataContext.getCompanyId(), groupId,\n\t\t\t\tuser.getUserId(), importedLayout, layoutElement, rootElement,\n\t\t\t\timportUserPermissions);\n\t\t}\n\n\t\tif (importPublicLayoutPermissions) {\n\t\t\tString resourceName = Layout.class.getName();\n\t\t\tString resourcePrimKey = String.valueOf(importedLayout.getPlid());\n\n\t\t\tRole guestRole = RoleLocalServiceUtil.getRole(\n\t\t\t\timportedLayout.getCompanyId(), RoleConstants.GUEST);\n\n\t\t\tif (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 5) {\n\t\t\t\tResource resource = layoutCache.getResource(\n\t\t\t\t\timportedLayout.getCompanyId(), groupId, resourceName,\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL, resourcePrimKey, false);\n\n\t\t\t\tPermissionLocalServiceUtil.setRolePermissions(\n\t\t\t\t\tguestRole.getRoleId(), new String[] {ActionKeys.VIEW},\n\t\t\t\t\tresource.getResourceId());\n\t\t\t}\n\t\t\telse if (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 6) {\n\t\t\t\tResourcePermissionLocalServiceUtil.setResourcePermissions(\n\t\t\t\t\timportedLayout.getCompanyId(), resourceName,\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL, resourcePrimKey,\n\t\t\t\t\tguestRole.getRoleId(), new String[] {ActionKeys.VIEW});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tResource resource = layoutCache.getResource(\n\t\t\t\t\timportedLayout.getCompanyId(), groupId, resourceName,\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL, resourcePrimKey, false);\n\n\t\t\t\tPermissionLocalServiceUtil.setGroupPermissions(\n\t\t\t\t\tgroupId, new String[] {ActionKeys.VIEW},\n\t\t\t\t\tresource.getResourceId());\n\t\t\t}\n\t\t}\n\n\t\t_portletImporter.importPortletData(\n\t\t\tportletDataContext, PortletKeys.LAYOUT_CONFIGURATION, null,\n\t\t\tlayoutElement);\n\t}","commit_id":"110b673f08fc87e02c0daa0fbaf949f01bc6dfb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Map<String, String[]> getLayoutSetPrototypeParameters(\n\t\tServiceContext serviceContext) {\n\n\t\tMap<String, String[]> parameterMap =\n\t\t\tnew LinkedHashMap<String, String[]>();\n\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.CATEGORIES,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.DATA_STRATEGY,\n\t\t\tnew String[] {PortletDataHandlerKeys.DATA_STRATEGY_MIRROR});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.DELETE_MISSING_LAYOUTS,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.DELETE_PORTLET_DATA,\n\t\t\tnew String[] {Boolean.FALSE.toString()});\n\n\t\tString siteTemplateRelationship = ParamUtil.getString(\n\t\t\tserviceContext, \"siteTemplateRelationship\");\n\n\t\tif (siteTemplateRelationship.equals(\"inherited\")) {\n\t\t\tparameterMap.put(\n\t\t\t\tPortletDataHandlerKeys.LAYOUT_SET_PROTOTYPE_INHERITED,\n\t\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\t}\n\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.PERFORM_DIRECT_BINARY_IMPORT,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.PERMISSIONS,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.PORTLET_DATA,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.PORTLET_DATA_ALL,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.PORTLET_SETUP,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.PORTLET_USER_PREFERENCES,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.THEME,\n\t\t\tnew String[] {Boolean.FALSE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.THEME_REFERENCE,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.USER_ID_STRATEGY,\n\t\t\tnew String[] {UserIdStrategy.CURRENT_USER_ID});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.USER_PERMISSIONS,\n\t\t\tnew String[] {Boolean.FALSE.toString()});\n\n\t\treturn parameterMap;\n\t}","id":48402,"modified_method":"public static Map<String, String[]> getLayoutSetPrototypeParameters(\n\t\tServiceContext serviceContext) {\n\n\t\tMap<String, String[]> parameterMap =\n\t\t\tnew LinkedHashMap<String, String[]>();\n\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.CATEGORIES,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.DATA_STRATEGY,\n\t\t\tnew String[] {PortletDataHandlerKeys.DATA_STRATEGY_MIRROR});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.DELETE_MISSING_LAYOUTS,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.DELETE_PORTLET_DATA,\n\t\t\tnew String[] {Boolean.FALSE.toString()});\n\n\t\tString siteTemplateRelationship = ParamUtil.getString(\n\t\t\tserviceContext, \"siteTemplateRelationship\");\n\n\t\tif (siteTemplateRelationship.equals(\"inherited\")) {\n\t\t\tparameterMap.put(\n\t\t\t\tPortletDataHandlerKeys.LAYOUT_SET_PROTOTYPE_INHERITED,\n\t\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\t}\n\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.LAYOUTS_IMPORT_MODE,\n\t\t\tnew String[] {\n\t\t\t\tPortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.PERFORM_DIRECT_BINARY_IMPORT,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.PERMISSIONS,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.PORTLET_DATA,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.PORTLET_DATA_ALL,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.PORTLET_SETUP,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.PORTLET_USER_PREFERENCES,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.THEME,\n\t\t\tnew String[] {Boolean.FALSE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.THEME_REFERENCE,\n\t\t\tnew String[] {Boolean.TRUE.toString()});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.USER_ID_STRATEGY,\n\t\t\tnew String[] {UserIdStrategy.CURRENT_USER_ID});\n\t\tparameterMap.put(\n\t\t\tPortletDataHandlerKeys.USER_PERMISSIONS,\n\t\t\tnew String[] {Boolean.FALSE.toString()});\n\n\t\treturn parameterMap;\n\t}","commit_id":"110b673f08fc87e02c0daa0fbaf949f01bc6dfb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic CalendarBooking addCalendarBooking(\n\t\t\tlong userId, long calendarId, long[] childCalendarIds,\n\t\t\tlong parentCalendarBookingId, Map<Locale, String> titleMap,\n\t\t\tMap<Locale, String> descriptionMap, String location, long startTime,\n\t\t\tlong endTime, boolean allDay, String recurrence, long firstReminder,\n\t\t\tString firstReminderType, long secondReminder,\n\t\t\tString secondReminderType, String vEventUid,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\t// Calendar booking\n\n\t\tUser user = userPersistence.findByPrimaryKey(userId);\n\t\tCalendar calendar = calendarPersistence.findByPrimaryKey(calendarId);\n\n\t\tlong calendarBookingId = counterLocalService.increment();\n\n\t\tfor (Locale locale : descriptionMap.keySet()) {\n\t\t\tString sanitizedDescription = SanitizerUtil.sanitize(\n\t\t\t\tcalendar.getCompanyId(), calendar.getGroupId(), userId,\n\t\t\t\tCalendarBooking.class.getName(), calendarBookingId,\n\t\t\t\tContentTypes.TEXT_HTML, Sanitizer.MODE_ALL,\n\t\t\t\tdescriptionMap.get(locale), null);\n\n\t\t\tdescriptionMap.put(locale, sanitizedDescription);\n\t\t}\n\n\t\tjava.util.Calendar startTimeJCalendar = JCalendarUtil.getJCalendar(\n\t\t\tstartTime);\n\t\tjava.util.Calendar endTimeJCalendar = JCalendarUtil.getJCalendar(\n\t\t\tendTime);\n\n\t\tif (allDay) {\n\t\t\tstartTimeJCalendar = JCalendarUtil.toMidnightJCalendar(\n\t\t\t\tstartTimeJCalendar);\n\t\t\tendTimeJCalendar = JCalendarUtil.toLastHourJCalendar(\n\t\t\t\tendTimeJCalendar);\n\t\t}\n\n\t\tif (firstReminder < secondReminder) {\n\t\t\tlong originalSecondReminder = secondReminder;\n\n\t\t\tsecondReminder = firstReminder;\n\t\t\tfirstReminder = originalSecondReminder;\n\t\t}\n\n\t\tDate now = new Date();\n\n\t\tvalidate(titleMap, startTimeJCalendar, endTimeJCalendar);\n\n\t\tCalendarBooking calendarBooking = calendarBookingPersistence.create(\n\t\t\tcalendarBookingId);\n\n\t\tif (vEventUid != null) {\n\t\t\tcalendarBooking.setVEventUid(vEventUid);\n\t\t}\n\t\telse {\n\t\t\tcalendarBooking.setUuid(serviceContext.getUuid());\n\t\t}\n\n\t\tcalendarBooking.setGroupId(calendar.getGroupId());\n\t\tcalendarBooking.setCompanyId(user.getCompanyId());\n\t\tcalendarBooking.setUserId(user.getUserId());\n\t\tcalendarBooking.setUserName(user.getFullName());\n\t\tcalendarBooking.setCreateDate(serviceContext.getCreateDate(now));\n\t\tcalendarBooking.setModifiedDate(serviceContext.getModifiedDate(now));\n\t\tcalendarBooking.setCalendarId(calendarId);\n\t\tcalendarBooking.setCalendarResourceId(calendar.getCalendarResourceId());\n\n\t\tif (parentCalendarBookingId > 0) {\n\t\t\tcalendarBooking.setParentCalendarBookingId(parentCalendarBookingId);\n\t\t}\n\t\telse {\n\t\t\tcalendarBooking.setParentCalendarBookingId(calendarBookingId);\n\t\t}\n\n\t\tcalendarBooking.setTitleMap(titleMap);\n\t\tcalendarBooking.setDescriptionMap(descriptionMap);\n\t\tcalendarBooking.setLocation(location);\n\t\tcalendarBooking.setStartTime(startTimeJCalendar.getTimeInMillis());\n\t\tcalendarBooking.setEndTime(endTimeJCalendar.getTimeInMillis());\n\t\tcalendarBooking.setAllDay(allDay);\n\t\tcalendarBooking.setRecurrence(recurrence);\n\t\tcalendarBooking.setFirstReminder(firstReminder);\n\t\tcalendarBooking.setFirstReminderType(firstReminderType);\n\t\tcalendarBooking.setSecondReminder(secondReminder);\n\t\tcalendarBooking.setSecondReminderType(secondReminderType);\n\t\tcalendarBooking.setExpandoBridgeAttributes(serviceContext);\n\t\tcalendarBooking.setStatus(\n\t\t\tCalendarBookingWorkflowConstants.STATUS_PENDING);\n\t\tcalendarBooking.setStatusDate(serviceContext.getModifiedDate(now));\n\n\t\tcalendarBookingPersistence.update(calendarBooking);\n\n\t\taddChildCalendarBookings(\n\t\t\tcalendarBooking, childCalendarIds, serviceContext);\n\n\t\t// Resources\n\n\t\tresourceLocalService.addModelResources(calendarBooking, serviceContext);\n\n\t\t// Asset\n\n\t\tupdateAsset(\n\t\t\tuserId, calendarBooking, serviceContext.getAssetCategoryIds(),\n\t\t\tserviceContext.getAssetTagNames(),\n\t\t\tserviceContext.getAssetLinkEntryIds());\n\n\t\t// Social\n\n\t\tsocialActivityLocalService.addActivity(\n\t\t\tuserId, calendarBooking.getGroupId(),\n\t\t\tCalendarBooking.class.getName(), calendarBookingId,\n\t\t\tCalendarActivityKeys.ADD_CALENDAR_BOOKING,\n\t\t\tgetExtraDataJSON(calendarBooking), 0);\n\n\t\t// Notifications\n\n\t\tsendNotification(\n\t\t\tcalendarBooking, NotificationTemplateType.INVITE, serviceContext);\n\n\t\t// Workflow\n\n\t\tcalendarBookingApprovalWorkflow.startWorkflow(\n\t\t\tuserId, calendarBooking, serviceContext);\n\n\t\treturn calendarBooking;\n\t}","id":48403,"modified_method":"@Override\n\tpublic CalendarBooking addCalendarBooking(\n\t\t\tlong userId, long calendarId, long[] childCalendarIds,\n\t\t\tlong parentCalendarBookingId, Map<Locale, String> titleMap,\n\t\t\tMap<Locale, String> descriptionMap, String location, long startTime,\n\t\t\tlong endTime, boolean allDay, String recurrence, long firstReminder,\n\t\t\tString firstReminderType, long secondReminder,\n\t\t\tString secondReminderType, String vEventUid,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\t// Calendar booking\n\n\t\tUser user = userPersistence.findByPrimaryKey(userId);\n\t\tCalendar calendar = calendarPersistence.findByPrimaryKey(calendarId);\n\n\t\tlong calendarBookingId = counterLocalService.increment();\n\n\t\tfor (Locale locale : descriptionMap.keySet()) {\n\t\t\tString sanitizedDescription = SanitizerUtil.sanitize(\n\t\t\t\tcalendar.getCompanyId(), calendar.getGroupId(), userId,\n\t\t\t\tCalendarBooking.class.getName(), calendarBookingId,\n\t\t\t\tContentTypes.TEXT_HTML, Sanitizer.MODE_ALL,\n\t\t\t\tdescriptionMap.get(locale), null);\n\n\t\t\tdescriptionMap.put(locale, sanitizedDescription);\n\t\t}\n\n\t\tjava.util.Calendar startTimeJCalendar = JCalendarUtil.getJCalendar(\n\t\t\tstartTime);\n\t\tjava.util.Calendar endTimeJCalendar = JCalendarUtil.getJCalendar(\n\t\t\tendTime);\n\n\t\tif (allDay) {\n\t\t\tstartTimeJCalendar = JCalendarUtil.toMidnightJCalendar(\n\t\t\t\tstartTimeJCalendar);\n\t\t\tendTimeJCalendar = JCalendarUtil.toLastHourJCalendar(\n\t\t\t\tendTimeJCalendar);\n\t\t}\n\n\t\tif (firstReminder < secondReminder) {\n\t\t\tlong originalSecondReminder = secondReminder;\n\n\t\t\tsecondReminder = firstReminder;\n\t\t\tfirstReminder = originalSecondReminder;\n\t\t}\n\n\t\tDate now = new Date();\n\n\t\tvalidate(titleMap, startTimeJCalendar, endTimeJCalendar);\n\n\t\tCalendarBooking calendarBooking = calendarBookingPersistence.create(\n\t\t\tcalendarBookingId);\n\n\t\tcalendarBooking.setUuid(serviceContext.getUuid());\n\n\t\tif (vEventUid != null) {\n\t\t\tcalendarBooking.setVEventUid(vEventUid);\n\t\t}\n\t\telse {\n\t\t\tcalendarBooking.setVEventUid(PortalUUIDUtil.generate());\n\t\t}\n\n\t\tcalendarBooking.setGroupId(calendar.getGroupId());\n\t\tcalendarBooking.setCompanyId(user.getCompanyId());\n\t\tcalendarBooking.setUserId(user.getUserId());\n\t\tcalendarBooking.setUserName(user.getFullName());\n\t\tcalendarBooking.setCreateDate(serviceContext.getCreateDate(now));\n\t\tcalendarBooking.setModifiedDate(serviceContext.getModifiedDate(now));\n\t\tcalendarBooking.setCalendarId(calendarId);\n\t\tcalendarBooking.setCalendarResourceId(calendar.getCalendarResourceId());\n\n\t\tif (parentCalendarBookingId > 0) {\n\t\t\tcalendarBooking.setParentCalendarBookingId(parentCalendarBookingId);\n\t\t}\n\t\telse {\n\t\t\tcalendarBooking.setParentCalendarBookingId(calendarBookingId);\n\t\t}\n\n\t\tcalendarBooking.setTitleMap(titleMap);\n\t\tcalendarBooking.setDescriptionMap(descriptionMap);\n\t\tcalendarBooking.setLocation(location);\n\t\tcalendarBooking.setStartTime(startTimeJCalendar.getTimeInMillis());\n\t\tcalendarBooking.setEndTime(endTimeJCalendar.getTimeInMillis());\n\t\tcalendarBooking.setAllDay(allDay);\n\t\tcalendarBooking.setRecurrence(recurrence);\n\t\tcalendarBooking.setFirstReminder(firstReminder);\n\t\tcalendarBooking.setFirstReminderType(firstReminderType);\n\t\tcalendarBooking.setSecondReminder(secondReminder);\n\t\tcalendarBooking.setSecondReminderType(secondReminderType);\n\t\tcalendarBooking.setExpandoBridgeAttributes(serviceContext);\n\t\tcalendarBooking.setStatus(\n\t\t\tCalendarBookingWorkflowConstants.STATUS_PENDING);\n\t\tcalendarBooking.setStatusDate(serviceContext.getModifiedDate(now));\n\n\t\tcalendarBookingPersistence.update(calendarBooking);\n\n\t\taddChildCalendarBookings(\n\t\t\tcalendarBooking, childCalendarIds, serviceContext);\n\n\t\t// Resources\n\n\t\tresourceLocalService.addModelResources(calendarBooking, serviceContext);\n\n\t\t// Asset\n\n\t\tupdateAsset(\n\t\t\tuserId, calendarBooking, serviceContext.getAssetCategoryIds(),\n\t\t\tserviceContext.getAssetTagNames(),\n\t\t\tserviceContext.getAssetLinkEntryIds());\n\n\t\t// Social\n\n\t\tsocialActivityLocalService.addActivity(\n\t\t\tuserId, calendarBooking.getGroupId(),\n\t\t\tCalendarBooking.class.getName(), calendarBookingId,\n\t\t\tCalendarActivityKeys.ADD_CALENDAR_BOOKING,\n\t\t\tgetExtraDataJSON(calendarBooking), 0);\n\n\t\t// Notifications\n\n\t\tsendNotification(\n\t\t\tcalendarBooking, NotificationTemplateType.INVITE, serviceContext);\n\n\t\t// Workflow\n\n\t\tcalendarBookingApprovalWorkflow.startWorkflow(\n\t\t\tuserId, calendarBooking, serviceContext);\n\n\t\treturn calendarBooking;\n\t}","commit_id":"067c0b7ca6db89f4a9bd03f89e489a4e5575d1f9","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected VEvent toICalEvent(CalendarBooking calendarBooking)\n\t\tthrows Exception {\n\n\t\tVEvent vEvent = new VEvent();\n\n\t\tPropertyList propertyList = vEvent.getProperties();\n\n\t\t// UID\n\n\t\tUid uid = null;\n\n\t\tif (Validator.isNotNull(calendarBooking.getVEventUid())) {\n\t\t\tuid = new Uid(calendarBooking.getVEventUid());\n\t\t}\n\t\telse {\n\t\t\tuid = new Uid(calendarBooking.getUuid());\n\t\t}\n\n\t\tpropertyList.add(uid);\n\n\t\t// Dates\n\n\t\tif (calendarBooking.isAllDay()) {\n\t\t\tDtStart dtStart = new DtStart(\n\t\t\t\tnew Date(calendarBooking.getStartTime()));\n\n\t\t\tpropertyList.add(dtStart);\n\n\t\t\tjava.util.Calendar endJCalendar = JCalendarUtil.getJCalendar(\n\t\t\t\tcalendarBooking.getEndTime());\n\n\t\t\tendJCalendar.add(java.util.Calendar.DAY_OF_MONTH, 1);\n\n\t\t\tDtEnd dtEnd = new DtEnd(new Date(endJCalendar.getTime()));\n\n\t\t\tpropertyList.add(dtEnd);\n\t\t}\n\t\telse {\n\t\t\tDtStart dtStart = new DtStart(\n\t\t\t\ttoICalDateTime(calendarBooking.getStartTime()));\n\n\t\t\tpropertyList.add(dtStart);\n\n\t\t\tDtEnd dtEnd = new DtEnd(\n\t\t\t\ttoICalDateTime(calendarBooking.getEndTime()));\n\n\t\t\tpropertyList.add(dtEnd);\n\t\t}\n\n\t\t// Title\n\n\t\tUser user = UserLocalServiceUtil.getUser(calendarBooking.getUserId());\n\n\t\tSummary summary = new Summary(\n\t\t\tcalendarBooking.getTitle(user.getLocale()));\n\n\t\tpropertyList.add(summary);\n\n\t\t// Description\n\n\t\tCompany company = CompanyLocalServiceUtil.getCompany(\n\t\t\tcalendarBooking.getCompanyId());\n\n\t\tString calendarBookingDescription = StringUtil.replace(\n\t\t\tcalendarBooking.getDescription(user.getLocale()),\n\t\t\tnew String[] {\n\t\t\t\t\"href=\\\"/\", \"src=\\\"/\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\t\"href=\\\"\" +\n\t\t\t\t\tcompany.getPortalURL(calendarBooking.getGroupId()) + \"/\",\n\t\t\t\t\"src=\\\"\" +\n\t\t\t\t\tcompany.getPortalURL(calendarBooking.getGroupId()) + \"/\"\n\t\t});\n\n\t\tDescription description = new Description(calendarBookingDescription);\n\n\t\tpropertyList.add(description);\n\n\t\tXProperty xProperty = new XProperty(\n\t\t\t\"X-ALT-DESC\", calendarBookingDescription);\n\n\t\tParameterList parameters = xProperty.getParameters();\n\n\t\tparameters.add(new XParameter(\"FMTTYPE\", \"text/html\"));\n\n\t\tpropertyList.add(xProperty);\n\n\t\t// Location\n\n\t\tLocation location = new Location(calendarBooking.getLocation());\n\n\t\tpropertyList.add(location);\n\n\t\t// Recurrence\n\n\t\tif (calendarBooking.isRecurring()) {\n\t\t\tString recurrence = calendarBooking.getRecurrence();\n\n\t\t\tint index = recurrence.indexOf(StringPool.NEW_LINE);\n\n\t\t\tif (index > 0) {\n\t\t\t\trecurrence = recurrence.substring(0, index);\n\t\t\t}\n\n\t\t\tString value = StringUtil.replace(\n\t\t\t\trecurrence, _RRULE, StringPool.BLANK);\n\n\t\t\tRRule rRule = new RRule(value);\n\n\t\t\tpropertyList.add(rRule);\n\n\t\t\tExDate exDate = toICalExDate(calendarBooking.getRecurrenceObj());\n\n\t\t\tif (exDate != null) {\n\t\t\t\tpropertyList.add(exDate);\n\t\t\t}\n\t\t}\n\n\t\t// Reminders\n\n\t\tComponentList componentList = vEvent.getAlarms();\n\n\t\tlong firstReminder = calendarBooking.getFirstReminder();\n\n\t\tif (firstReminder > 0) {\n\t\t\tVAlarm vAlarm = toICalAlarm(\n\t\t\t\tcalendarBooking.getFirstReminderNotificationType(),\n\t\t\t\tfirstReminder, user.getEmailAddress());\n\n\t\t\tcomponentList.add(vAlarm);\n\t\t}\n\n\t\tlong secondReminder = calendarBooking.getSecondReminder();\n\n\t\tif (secondReminder > 0) {\n\t\t\tVAlarm alarm = toICalAlarm(\n\t\t\t\tcalendarBooking.getSecondReminderNotificationType(),\n\t\t\t\tsecondReminder, user.getEmailAddress());\n\n\t\t\tcomponentList.add(alarm);\n\t\t}\n\n\t\t// Attendees\n\n\t\tList<CalendarBooking> childCalendarBookings =\n\t\t\tcalendarBooking.getChildCalendarBookings();\n\n\t\tfor (CalendarBooking childCalendarBooking : childCalendarBookings) {\n\t\t\tCalendarResource calResource =\n\t\t\t\tchildCalendarBooking.getCalendarResource();\n\n\t\t\tif (!calResource.isUser() ||\n\t\t\t\t(calendarBooking.getCalendarBookingId() ==\n\t\t\t\t\tchildCalendarBooking.getCalendarBookingId())) {\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tUser calResourceUser = UserLocalServiceUtil.getUser(\n\t\t\t\tcalResource.getClassPK());\n\n\t\t\tAttendee attendee = toICalAttendee(\n\t\t\t\tcalResourceUser.getFullName(),\n\t\t\t\tcalResourceUser.getEmailAddress(),\n\t\t\t\tchildCalendarBooking.getStatus());\n\n\t\t\tpropertyList.add(attendee);\n\t\t}\n\n\t\treturn vEvent;\n\t}","id":48404,"modified_method":"protected VEvent toICalEvent(CalendarBooking calendarBooking)\n\t\tthrows Exception {\n\n\t\tVEvent vEvent = new VEvent();\n\n\t\tPropertyList propertyList = vEvent.getProperties();\n\n\t\t// UID\n\n\t\tUid uid = new Uid(calendarBooking.getVEventUid());\n\n\t\tpropertyList.add(uid);\n\n\t\t// Dates\n\n\t\tif (calendarBooking.isAllDay()) {\n\t\t\tDtStart dtStart = new DtStart(\n\t\t\t\tnew Date(calendarBooking.getStartTime()));\n\n\t\t\tpropertyList.add(dtStart);\n\n\t\t\tjava.util.Calendar endJCalendar = JCalendarUtil.getJCalendar(\n\t\t\t\tcalendarBooking.getEndTime());\n\n\t\t\tendJCalendar.add(java.util.Calendar.DAY_OF_MONTH, 1);\n\n\t\t\tDtEnd dtEnd = new DtEnd(new Date(endJCalendar.getTime()));\n\n\t\t\tpropertyList.add(dtEnd);\n\t\t}\n\t\telse {\n\t\t\tDtStart dtStart = new DtStart(\n\t\t\t\ttoICalDateTime(calendarBooking.getStartTime()));\n\n\t\t\tpropertyList.add(dtStart);\n\n\t\t\tDtEnd dtEnd = new DtEnd(\n\t\t\t\ttoICalDateTime(calendarBooking.getEndTime()));\n\n\t\t\tpropertyList.add(dtEnd);\n\t\t}\n\n\t\t// Title\n\n\t\tUser user = UserLocalServiceUtil.getUser(calendarBooking.getUserId());\n\n\t\tSummary summary = new Summary(\n\t\t\tcalendarBooking.getTitle(user.getLocale()));\n\n\t\tpropertyList.add(summary);\n\n\t\t// Description\n\n\t\tCompany company = CompanyLocalServiceUtil.getCompany(\n\t\t\tcalendarBooking.getCompanyId());\n\n\t\tString calendarBookingDescription = StringUtil.replace(\n\t\t\tcalendarBooking.getDescription(user.getLocale()),\n\t\t\tnew String[] {\n\t\t\t\t\"href=\\\"/\", \"src=\\\"/\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\t\"href=\\\"\" +\n\t\t\t\t\tcompany.getPortalURL(calendarBooking.getGroupId()) + \"/\",\n\t\t\t\t\"src=\\\"\" +\n\t\t\t\t\tcompany.getPortalURL(calendarBooking.getGroupId()) + \"/\"\n\t\t});\n\n\t\tDescription description = new Description(calendarBookingDescription);\n\n\t\tpropertyList.add(description);\n\n\t\tXProperty xProperty = new XProperty(\n\t\t\t\"X-ALT-DESC\", calendarBookingDescription);\n\n\t\tParameterList parameters = xProperty.getParameters();\n\n\t\tparameters.add(new XParameter(\"FMTTYPE\", \"text/html\"));\n\n\t\tpropertyList.add(xProperty);\n\n\t\t// Location\n\n\t\tLocation location = new Location(calendarBooking.getLocation());\n\n\t\tpropertyList.add(location);\n\n\t\t// Recurrence\n\n\t\tif (calendarBooking.isRecurring()) {\n\t\t\tString recurrence = calendarBooking.getRecurrence();\n\n\t\t\tint index = recurrence.indexOf(StringPool.NEW_LINE);\n\n\t\t\tif (index > 0) {\n\t\t\t\trecurrence = recurrence.substring(0, index);\n\t\t\t}\n\n\t\t\tString value = StringUtil.replace(\n\t\t\t\trecurrence, _RRULE, StringPool.BLANK);\n\n\t\t\tRRule rRule = new RRule(value);\n\n\t\t\tpropertyList.add(rRule);\n\n\t\t\tExDate exDate = toICalExDate(calendarBooking.getRecurrenceObj());\n\n\t\t\tif (exDate != null) {\n\t\t\t\tpropertyList.add(exDate);\n\t\t\t}\n\t\t}\n\n\t\t// Reminders\n\n\t\tComponentList componentList = vEvent.getAlarms();\n\n\t\tlong firstReminder = calendarBooking.getFirstReminder();\n\n\t\tif (firstReminder > 0) {\n\t\t\tVAlarm vAlarm = toICalAlarm(\n\t\t\t\tcalendarBooking.getFirstReminderNotificationType(),\n\t\t\t\tfirstReminder, user.getEmailAddress());\n\n\t\t\tcomponentList.add(vAlarm);\n\t\t}\n\n\t\tlong secondReminder = calendarBooking.getSecondReminder();\n\n\t\tif (secondReminder > 0) {\n\t\t\tVAlarm alarm = toICalAlarm(\n\t\t\t\tcalendarBooking.getSecondReminderNotificationType(),\n\t\t\t\tsecondReminder, user.getEmailAddress());\n\n\t\t\tcomponentList.add(alarm);\n\t\t}\n\n\t\t// Attendees\n\n\t\tList<CalendarBooking> childCalendarBookings =\n\t\t\tcalendarBooking.getChildCalendarBookings();\n\n\t\tfor (CalendarBooking childCalendarBooking : childCalendarBookings) {\n\t\t\tCalendarResource calResource =\n\t\t\t\tchildCalendarBooking.getCalendarResource();\n\n\t\t\tif (!calResource.isUser() ||\n\t\t\t\t(calendarBooking.getCalendarBookingId() ==\n\t\t\t\t\tchildCalendarBooking.getCalendarBookingId())) {\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tUser calResourceUser = UserLocalServiceUtil.getUser(\n\t\t\t\tcalResource.getClassPK());\n\n\t\t\tAttendee attendee = toICalAttendee(\n\t\t\t\tcalResourceUser.getFullName(),\n\t\t\t\tcalResourceUser.getEmailAddress(),\n\t\t\t\tchildCalendarBooking.getStatus());\n\n\t\t\tpropertyList.add(attendee);\n\t\t}\n\n\t\treturn vEvent;\n\t}","commit_id":"067c0b7ca6db89f4a9bd03f89e489a4e5575d1f9","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (tableHasColumn(\"CalendarBooking\", \"vEventUid\")) {\n\t\t\treturn;\n\t\t}\n\n\t\trunSQL(\"alter table CalendarBooking add vEventUid VARCHAR(255)\");\n\n\t\trunSQL(\n\t\t\t\"create index IX_8B23DA0E on CalendarBooking \" +\n\t\t\t\t\"(calendarId, vEventUid)\");\n\t}","id":48405,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (!tableHasColumn(\"CalendarBooking\", \"vEventUid\")) {\n\t\t\trunSQL(\"alter table CalendarBooking add vEventUid VARCHAR(255)\");\n\n\t\t\trunSQL(\n\t\t\t\t\"create index IX_8B23DA0E on CalendarBooking \" +\n\t\t\t\t\t\"(calendarId, vEventUid)\");\n\t\t}\n\n\t\trunSQL(\n\t\t\t\"update CalendarBooking set vEventUid = uuid_ \" +\n\t\t\t\t\"where vEventUid is NULL or vEventUid = ''\");\n\t}","commit_id":"067c0b7ca6db89f4a9bd03f89e489a4e5575d1f9","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void importLayout(\n\t\t\tPortletDataContext portletDataContext, User user,\n\t\t\tLayoutCache layoutCache, List<Layout> previousLayouts,\n\t\t\tList<Layout> newLayouts, Map<Long, Layout> newLayoutsMap,\n\t\t\tSet<Long> newLayoutIds, String portletsMergeMode, String themeId,\n\t\t\tString colorSchemeId, String layoutsImportMode,\n\t\t\tboolean privateLayout, boolean importPermissions,\n\t\t\tboolean importPublicLayoutPermissions,\n\t\t\tboolean importUserPermissions, boolean importThemeSettings,\n\t\t\tElement rootElement, Element layoutElement)\n\t\tthrows Exception {\n\n\t\tlong groupId = portletDataContext.getGroupId();\n\n\t\tString layoutUuid = GetterUtil.getString(\n\t\t\tlayoutElement.attributeValue(\"layout-uuid\"));\n\n\t\tlong layoutId = GetterUtil.getInteger(\n\t\t\tlayoutElement.attributeValue(\"layout-id\"));\n\n\t\tlong oldLayoutId = layoutId;\n\n\t\tboolean deleteLayout = GetterUtil.getBoolean(\n\t\t\tlayoutElement.attributeValue(\"delete\"));\n\n\t\tif (deleteLayout) {\n\t\t\tLayout layout = LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(\n\t\t\t\tlayoutUuid, groupId);\n\n\t\t\tif (layout != null) {\n\t\t\t\tnewLayoutsMap.put(oldLayoutId, layout);\n\n\t\t\t\tServiceContext serviceContext =\n\t\t\t\t\tServiceContextThreadLocal.getServiceContext();\n\n\t\t\t\tLayoutLocalServiceUtil.deleteLayout(\n\t\t\t\t\tlayout, false, serviceContext);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tString path = layoutElement.attributeValue(\"path\");\n\n\t\tif (!portletDataContext.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tLayout layout = (Layout)portletDataContext.getZipEntryAsObject(path);\n\n\t\tLayout existingLayout = null;\n\t\tLayout importedLayout = null;\n\n\t\tString friendlyURL = layout.getFriendlyURL();\n\n\t\tif (layoutsImportMode.equals(\n\t\t\t\tPortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_ADD_AS_NEW)) {\n\n\t\t\tlayoutId = LayoutLocalServiceUtil.getNextLayoutId(\n\t\t\t\tgroupId, privateLayout);\n\t\t\tfriendlyURL = StringPool.SLASH + layoutId;\n\t\t}\n\t\telse if (layoutsImportMode.equals(\n\t\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\t\tLAYOUTS_IMPORT_MODE_MERGE_BY_LAYOUT_NAME)) {\n\n\t\t\tLocale locale = LocaleUtil.getDefault();\n\n\t\t\tString localizedName = layout.getName(locale);\n\n\t\t\tfor (Layout curLayout : previousLayouts) {\n\t\t\t\tif (localizedName.equals(curLayout.getName(locale)) ||\n\t\t\t\t\tfriendlyURL.equals(curLayout.getFriendlyURL())) {\n\n\t\t\t\t\texistingLayout = curLayout;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingLayout == null) {\n\t\t\t\tlayoutId = LayoutLocalServiceUtil.getNextLayoutId(\n\t\t\t\t\tgroupId, privateLayout);\n\t\t\t}\n\t\t}\n\t\telse if (layoutsImportMode.equals(\n\t\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\t\tLAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\texistingLayout = LayoutUtil.fetchByG_P_SPLU(\n\t\t\t\tgroupId, privateLayout, layout.getUuid());\n\n\t\t\tif (SitesUtil.isLayoutModifiedSinceLastMerge(existingLayout)) {\n\t\t\t\tnewLayoutsMap.put(oldLayoutId, existingLayout);\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse {\n\n\t\t\t// The default behaviour of import mode is\n\t\t\t// PortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_MERGE_BY_LAYOUT_UUID\n\n\t\t\texistingLayout = LayoutUtil.fetchByUUID_G(\n\t\t\t\tlayout.getUuid(), groupId);\n\n\t\t\tif (existingLayout == null) {\n\t\t\t\texistingLayout = LayoutUtil.fetchByG_P_F(\n\t\t\t\t\tgroupId, privateLayout, friendlyURL);\n\t\t\t}\n\n\t\t\tif (existingLayout == null) {\n\t\t\t\tlayoutId = LayoutLocalServiceUtil.getNextLayoutId(\n\t\t\t\t\tgroupId, privateLayout);\n\t\t\t}\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\tif (existingLayout == null) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Layout with {groupId=\" + groupId + \",privateLayout=\" +\n\t\t\t\t\t\tprivateLayout + \",layoutId=\" + layoutId +\n\t\t\t\t\t\t\t\"} does not exist\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Layout with {groupId=\" + groupId + \",privateLayout=\" +\n\t\t\t\t\t\tprivateLayout + \",layoutId=\" + layoutId +\n\t\t\t\t\t\t\t\"} exists\");\n\t\t\t}\n\t\t}\n\n\t\tif (existingLayout == null) {\n\t\t\tlong plid = CounterLocalServiceUtil.increment();\n\n\t\t\timportedLayout = LayoutUtil.create(plid);\n\n\t\t\tif (layoutsImportMode.equals(\n\t\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\t\tLAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\t\timportedLayout.setSourcePrototypeLayoutUuid(layout.getUuid());\n\n\t\t\t\tlayoutId = LayoutLocalServiceUtil.getNextLayoutId(\n\t\t\t\t\tgroupId, privateLayout);\n\t\t\t}\n\t\t\telse {\n\t\t\t\timportedLayout.setUuid(layout.getUuid());\n\t\t\t}\n\n\t\t\timportedLayout.setGroupId(groupId);\n\t\t\timportedLayout.setPrivateLayout(privateLayout);\n\t\t\timportedLayout.setLayoutId(layoutId);\n\n\t\t\tif (layout.isIconImage()) {\n\t\t\t\tlong iconImageId = CounterLocalServiceUtil.increment();\n\n\t\t\t\timportedLayout.setIconImageId(iconImageId);\n\t\t\t}\n\n\t\t\t// Resources\n\n\t\t\tboolean addGroupPermissions = true;\n\n\t\t\tGroup group = importedLayout.getGroup();\n\n\t\t\tif (privateLayout && group.isUser()) {\n\t\t\t\taddGroupPermissions = false;\n\t\t\t}\n\n\t\t\tboolean addGuestPermissions = false;\n\n\t\t\tif (!privateLayout || layout.isTypeControlPanel()) {\n\t\t\t\taddGuestPermissions = true;\n\t\t\t}\n\n\t\t\tResourceLocalServiceUtil.addResources(\n\t\t\t\tuser.getCompanyId(), groupId, user.getUserId(),\n\t\t\t\tLayout.class.getName(), importedLayout.getPlid(), false,\n\t\t\t\taddGroupPermissions, addGuestPermissions);\n\n\t\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\t\tgroupId, privateLayout);\n\n\t\t\timportedLayout.setLayoutSet(layoutSet);\n\t\t}\n\t\telse {\n\t\t\timportedLayout = existingLayout;\n\t\t}\n\n\t\tnewLayoutsMap.put(oldLayoutId, importedLayout);\n\n\t\tlong parentLayoutId = layout.getParentLayoutId();\n\n\t\tNode parentLayoutNode = rootElement.selectSingleNode(\n\t\t\t\"./layouts/layout[@layout-id='\" + parentLayoutId + \"']\");\n\n\t\tString parentLayoutUuid = GetterUtil.getString(\n\t\t\tlayoutElement.attributeValue(\"parent-layout-uuid\"));\n\n\t\tif ((parentLayoutId != LayoutConstants.DEFAULT_PARENT_LAYOUT_ID) &&\n\t\t\t(parentLayoutNode != null)) {\n\n\t\t\timportLayout(\n\t\t\t\tportletDataContext, user, layoutCache, previousLayouts,\n\t\t\t\tnewLayouts, newLayoutsMap, newLayoutIds, portletsMergeMode,\n\t\t\t\tthemeId, colorSchemeId, layoutsImportMode, privateLayout,\n\t\t\t\timportPermissions, importPublicLayoutPermissions,\n\t\t\t\timportUserPermissions, importThemeSettings,\n\t\t\t\trootElement, (Element)parentLayoutNode);\n\n\t\t\tLayout parentLayout = newLayoutsMap.get(parentLayoutId);\n\n\t\t\tparentLayoutId = parentLayout.getLayoutId();\n\t\t}\n\t\telse if (Validator.isNotNull(parentLayoutUuid)) {\n\t\t\tLayout parentLayout =\n\t\t\t\tLayoutLocalServiceUtil.getLayoutByUuidAndGroupId(\n\t\t\t\t\tparentLayoutUuid, groupId);\n\n\t\t\tparentLayoutId = parentLayout.getLayoutId();\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\n\t\t\t\t\"Importing layout with layout id \" + layoutId +\n\t\t\t\t\t\" and parent layout id \" + parentLayoutId);\n\t\t}\n\n\t\timportedLayout.setCompanyId(user.getCompanyId());\n\t\timportedLayout.setParentLayoutId(parentLayoutId);\n\t\timportedLayout.setName(layout.getName());\n\t\timportedLayout.setTitle(layout.getTitle());\n\t\timportedLayout.setDescription(layout.getDescription());\n\t\timportedLayout.setKeywords(layout.getKeywords());\n\t\timportedLayout.setRobots(layout.getRobots());\n\t\timportedLayout.setType(layout.getType());\n\n\t\tif (layout.isTypeArticle()) {\n\t\t\timportJournalArticle(portletDataContext, layout, layoutElement);\n\n\t\t\timportedLayout.setTypeSettings(layout.getTypeSettings());\n\t\t}\n\t\telse if (layout.isTypePortlet() &&\n\t\t\t\t Validator.isNotNull(layout.getTypeSettings()) &&\n\t\t\t\t !portletsMergeMode.equals(\n\t\t\t\t\t PortletDataHandlerKeys.PORTLETS_MERGE_MODE_REPLACE)) {\n\n\t\t\tmergePortlets(\n\t\t\t\timportedLayout, layout.getTypeSettings(), portletsMergeMode);\n\t\t}\n\t\telse if (layout.isTypeLinkToLayout()) {\n\t\t\tUnicodeProperties typeSettingsProperties =\n\t\t\t\tlayout.getTypeSettingsProperties();\n\n\t\t\tlong linkToLayoutId = GetterUtil.getLong(\n\t\t\t\ttypeSettingsProperties.getProperty(\n\t\t\t\t\t\"linkToLayoutId\", StringPool.BLANK));\n\n\t\t\tif (linkToLayoutId > 0) {\n\t\t\t\tNode linkedLayoutNode = rootElement.selectSingleNode(\n\t\t\t\t\t\"./layouts/layout[@layout-id='\" + linkToLayoutId + \"']\");\n\n\t\t\t\tif (linkedLayoutNode != null) {\n\t\t\t\t\timportLayout(\n\t\t\t\t\t\tportletDataContext, user, layoutCache, previousLayouts,\n\t\t\t\t\t\tnewLayouts, newLayoutsMap, newLayoutIds,\n\t\t\t\t\t\tportletsMergeMode, themeId, colorSchemeId,\n\t\t\t\t\t\tlayoutsImportMode, privateLayout, importPermissions,\n\t\t\t\t\t\timportPublicLayoutPermissions, importUserPermissions,\n\t\t\t\t\t\timportThemeSettings, rootElement,\n\t\t\t\t\t\t(Element)linkedLayoutNode);\n\n\t\t\t\t\tLayout linkedLayout = newLayoutsMap.get(linkToLayoutId);\n\n\t\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\t\"privateLayout\",\n\t\t\t\t\t\tString.valueOf(linkedLayout.getPrivateLayout()));\n\t\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\t\"linkToLayoutId\",\n\t\t\t\t\t\tString.valueOf(linkedLayout.getLayoutId()));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t\tStringBundler sb = new StringBundler();\n\n\t\t\t\t\t\tsb.append(\"Unable to link layout with friendly URL \");\n\t\t\t\t\t\tsb.append(layout.getFriendlyURL());\n\t\t\t\t\t\tsb.append(\" and layout id \");\n\t\t\t\t\t\tsb.append(layout.getLayoutId());\n\t\t\t\t\t\tsb.append(\" to layout with layout id \");\n\t\t\t\t\t\tsb.append(linkToLayoutId);\n\n\t\t\t\t\t\t_log.warn(sb.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\timportedLayout.setTypeSettings(layout.getTypeSettings());\n\t\t}\n\t\telse {\n\t\t\timportedLayout.setTypeSettings(layout.getTypeSettings());\n\t\t}\n\n\t\timportedLayout.setHidden(layout.isHidden());\n\t\timportedLayout.setFriendlyURL(friendlyURL);\n\n\t\tif (importThemeSettings) {\n\t\t\timportedLayout.setThemeId(layout.getThemeId());\n\t\t\timportedLayout.setColorSchemeId(layout.getColorSchemeId());\n\t\t}\n\t\telse {\n\t\t\timportedLayout.setThemeId(StringPool.BLANK);\n\t\t\timportedLayout.setColorSchemeId(StringPool.BLANK);\n\t\t}\n\n\t\timportedLayout.setWapThemeId(layout.getWapThemeId());\n\t\timportedLayout.setWapColorSchemeId(layout.getWapColorSchemeId());\n\t\timportedLayout.setCss(layout.getCss());\n\t\timportedLayout.setPriority(layout.getPriority());\n\t\timportedLayout.setLayoutPrototypeUuid(layout.getLayoutPrototypeUuid());\n\t\timportedLayout.setLayoutPrototypeLinkEnabled(\n\t\t\tlayout.isLayoutPrototypeLinkEnabled());\n\n\t\tStagingUtil.updateLastImportSettings(\n\t\t\tlayoutElement, importedLayout, portletDataContext);\n\n\t\tfixTypeSettings(importedLayout);\n\n\t\tif (layout.isIconImage()) {\n\t\t\tString iconImagePath = layoutElement.elementText(\"icon-image-path\");\n\n\t\t\tbyte[] iconBytes = portletDataContext.getZipEntryAsByteArray(\n\t\t\t\ticonImagePath);\n\n\t\t\tif ((iconBytes != null) && (iconBytes.length > 0)) {\n\t\t\t\timportedLayout.setIconImage(true);\n\n\t\t\t\tImageLocalServiceUtil.updateImage(\n\t\t\t\t\timportedLayout.getIconImageId(), iconBytes);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tImageLocalServiceUtil.deleteImage(importedLayout.getIconImageId());\n\t\t}\n\n\t\tServiceContext serviceContext = portletDataContext.createServiceContext(\n\t\t\tlayoutElement, importedLayout, null);\n\n\t\timportedLayout.setExpandoBridgeAttributes(serviceContext);\n\n\t\tLayoutUtil.update(importedLayout, false);\n\n\t\tportletDataContext.setPlid(importedLayout.getPlid());\n\t\tportletDataContext.setOldPlid(layout.getPlid());\n\n\t\tnewLayoutIds.add(importedLayout.getLayoutId());\n\n\t\tnewLayouts.add(importedLayout);\n\n\t\t// Layout permissions\n\n\t\tif (importPermissions) {\n\t\t\t_permissionImporter.importLayoutPermissions(\n\t\t\t\tlayoutCache, portletDataContext.getCompanyId(), groupId,\n\t\t\t\tuser.getUserId(), importedLayout, layoutElement, rootElement,\n\t\t\t\timportUserPermissions);\n\t\t}\n\n\t\tif (importPublicLayoutPermissions) {\n\t\t\tString resourceName = Layout.class.getName();\n\t\t\tString resourcePrimKey = String.valueOf(importedLayout.getPlid());\n\n\t\t\tRole guestRole = RoleLocalServiceUtil.getRole(\n\t\t\t\timportedLayout.getCompanyId(), RoleConstants.GUEST);\n\n\t\t\tif (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 5) {\n\t\t\t\tResource resource = layoutCache.getResource(\n\t\t\t\t\timportedLayout.getCompanyId(), groupId, resourceName,\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL, resourcePrimKey, false);\n\n\t\t\t\tPermissionLocalServiceUtil.setRolePermissions(\n\t\t\t\t\tguestRole.getRoleId(), new String[] {ActionKeys.VIEW},\n\t\t\t\t\tresource.getResourceId());\n\t\t\t}\n\t\t\telse if (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 6) {\n\t\t\t\tResourcePermissionLocalServiceUtil.setResourcePermissions(\n\t\t\t\t\timportedLayout.getCompanyId(), resourceName,\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL, resourcePrimKey,\n\t\t\t\t\tguestRole.getRoleId(), new String[] {ActionKeys.VIEW});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tResource resource = layoutCache.getResource(\n\t\t\t\t\timportedLayout.getCompanyId(), groupId, resourceName,\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL, resourcePrimKey, false);\n\n\t\t\t\tPermissionLocalServiceUtil.setGroupPermissions(\n\t\t\t\t\tgroupId, new String[] {ActionKeys.VIEW},\n\t\t\t\t\tresource.getResourceId());\n\t\t\t}\n\t\t}\n\n\t\t_portletImporter.importPortletData(\n\t\t\tportletDataContext, PortletKeys.LAYOUT_CONFIGURATION, null,\n\t\t\tlayoutElement);\n\t}","id":48406,"modified_method":"protected void importLayout(\n\t\t\tPortletDataContext portletDataContext, User user,\n\t\t\tLayoutCache layoutCache, List<Layout> previousLayouts,\n\t\t\tList<Layout> newLayouts, Map<Long, Layout> newLayoutsMap,\n\t\t\tSet<Long> newLayoutIds, String portletsMergeMode, String themeId,\n\t\t\tString colorSchemeId, String layoutsImportMode,\n\t\t\tboolean privateLayout, boolean importPermissions,\n\t\t\tboolean importPublicLayoutPermissions,\n\t\t\tboolean importUserPermissions, boolean importThemeSettings,\n\t\t\tElement rootElement, Element layoutElement)\n\t\tthrows Exception {\n\n\t\tlong groupId = portletDataContext.getGroupId();\n\n\t\tString layoutUuid = GetterUtil.getString(\n\t\t\tlayoutElement.attributeValue(\"layout-uuid\"));\n\n\t\tlong layoutId = GetterUtil.getInteger(\n\t\t\tlayoutElement.attributeValue(\"layout-id\"));\n\n\t\tlong oldLayoutId = layoutId;\n\n\t\tboolean deleteLayout = GetterUtil.getBoolean(\n\t\t\tlayoutElement.attributeValue(\"delete\"));\n\n\t\tif (deleteLayout) {\n\t\t\tLayout layout = LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(\n\t\t\t\tlayoutUuid, groupId);\n\n\t\t\tif (layout != null) {\n\t\t\t\tnewLayoutsMap.put(oldLayoutId, layout);\n\n\t\t\t\tServiceContext serviceContext =\n\t\t\t\t\tServiceContextThreadLocal.getServiceContext();\n\n\t\t\t\tLayoutLocalServiceUtil.deleteLayout(\n\t\t\t\t\tlayout, false, serviceContext);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tString path = layoutElement.attributeValue(\"path\");\n\n\t\tif (!portletDataContext.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tLayout layout = (Layout)portletDataContext.getZipEntryAsObject(path);\n\n\t\tLayout existingLayout = null;\n\t\tLayout importedLayout = null;\n\n\t\tString friendlyURL = layout.getFriendlyURL();\n\n\t\tif (layoutsImportMode.equals(\n\t\t\t\tPortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_ADD_AS_NEW)) {\n\n\t\t\tlayoutId = LayoutLocalServiceUtil.getNextLayoutId(\n\t\t\t\tgroupId, privateLayout);\n\t\t\tfriendlyURL = StringPool.SLASH + layoutId;\n\t\t}\n\t\telse if (layoutsImportMode.equals(\n\t\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\t\tLAYOUTS_IMPORT_MODE_MERGE_BY_LAYOUT_NAME)) {\n\n\t\t\tLocale locale = LocaleUtil.getDefault();\n\n\t\t\tString localizedName = layout.getName(locale);\n\n\t\t\tfor (Layout curLayout : previousLayouts) {\n\t\t\t\tif (localizedName.equals(curLayout.getName(locale)) ||\n\t\t\t\t\tfriendlyURL.equals(curLayout.getFriendlyURL())) {\n\n\t\t\t\t\texistingLayout = curLayout;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingLayout == null) {\n\t\t\t\tlayoutId = LayoutLocalServiceUtil.getNextLayoutId(\n\t\t\t\t\tgroupId, privateLayout);\n\t\t\t}\n\t\t}\n\t\telse if (layoutsImportMode.equals(\n\t\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\t\tLAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\texistingLayout = LayoutUtil.fetchByG_P_SPLU(\n\t\t\t\tgroupId, privateLayout, layout.getUuid());\n\n\t\t\tif (SitesUtil.isLayoutModifiedSinceLastMerge(existingLayout)) {\n\t\t\t\tnewLayoutsMap.put(oldLayoutId, existingLayout);\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse {\n\n\t\t\t// The default behaviour of import mode is\n\t\t\t// PortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_MERGE_BY_LAYOUT_UUID\n\n\t\t\texistingLayout = LayoutUtil.fetchByUUID_G(\n\t\t\t\tlayout.getUuid(), groupId);\n\n\t\t\tif (existingLayout == null) {\n\t\t\t\texistingLayout = LayoutUtil.fetchByG_P_F(\n\t\t\t\t\tgroupId, privateLayout, friendlyURL);\n\t\t\t}\n\n\t\t\tif (existingLayout == null) {\n\t\t\t\tlayoutId = LayoutLocalServiceUtil.getNextLayoutId(\n\t\t\t\t\tgroupId, privateLayout);\n\t\t\t}\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\tif (existingLayout == null) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Layout with {groupId=\" + groupId + \",privateLayout=\" +\n\t\t\t\t\t\tprivateLayout + \",layoutId=\" + layoutId +\n\t\t\t\t\t\t\t\"} does not exist\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Layout with {groupId=\" + groupId + \",privateLayout=\" +\n\t\t\t\t\t\tprivateLayout + \",layoutId=\" + layoutId +\n\t\t\t\t\t\t\t\"} exists\");\n\t\t\t}\n\t\t}\n\n\t\tif (existingLayout == null) {\n\t\t\tlong plid = CounterLocalServiceUtil.increment();\n\n\t\t\timportedLayout = LayoutUtil.create(plid);\n\n\t\t\tif (layoutsImportMode.equals(\n\t\t\t\t\tPortletDataHandlerKeys.\n\t\t\t\t\t\tLAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {\n\n\t\t\t\timportedLayout.setSourcePrototypeLayoutUuid(layout.getUuid());\n\n\t\t\t\tlayoutId = LayoutLocalServiceUtil.getNextLayoutId(\n\t\t\t\t\tgroupId, privateLayout);\n\t\t\t}\n\t\t\telse {\n\t\t\t\timportedLayout.setUuid(layout.getUuid());\n\t\t\t\timportedLayout.setLayoutPrototypeUuid(\n\t\t\t\t\tlayout.getLayoutPrototypeUuid());\n\t\t\t\timportedLayout.setLayoutPrototypeLinkEnabled(\n\t\t\t\t\tlayout.getLayoutPrototypeLinkEnabled());\n\t\t\t\timportedLayout.setSourcePrototypeLayoutUuid(\n\t\t\t\t\tlayout.getSourcePrototypeLayoutUuid());\n\t\t\t}\n\n\t\t\timportedLayout.setGroupId(groupId);\n\t\t\timportedLayout.setPrivateLayout(privateLayout);\n\t\t\timportedLayout.setLayoutId(layoutId);\n\n\t\t\tif (layout.isIconImage()) {\n\t\t\t\tlong iconImageId = CounterLocalServiceUtil.increment();\n\n\t\t\t\timportedLayout.setIconImageId(iconImageId);\n\t\t\t}\n\n\t\t\t// Resources\n\n\t\t\tboolean addGroupPermissions = true;\n\n\t\t\tGroup group = importedLayout.getGroup();\n\n\t\t\tif (privateLayout && group.isUser()) {\n\t\t\t\taddGroupPermissions = false;\n\t\t\t}\n\n\t\t\tboolean addGuestPermissions = false;\n\n\t\t\tif (!privateLayout || layout.isTypeControlPanel()) {\n\t\t\t\taddGuestPermissions = true;\n\t\t\t}\n\n\t\t\tResourceLocalServiceUtil.addResources(\n\t\t\t\tuser.getCompanyId(), groupId, user.getUserId(),\n\t\t\t\tLayout.class.getName(), importedLayout.getPlid(), false,\n\t\t\t\taddGroupPermissions, addGuestPermissions);\n\n\t\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\t\tgroupId, privateLayout);\n\n\t\t\timportedLayout.setLayoutSet(layoutSet);\n\t\t}\n\t\telse {\n\t\t\timportedLayout = existingLayout;\n\t\t}\n\n\t\tnewLayoutsMap.put(oldLayoutId, importedLayout);\n\n\t\tlong parentLayoutId = layout.getParentLayoutId();\n\n\t\tNode parentLayoutNode = rootElement.selectSingleNode(\n\t\t\t\"./layouts/layout[@layout-id='\" + parentLayoutId + \"']\");\n\n\t\tString parentLayoutUuid = GetterUtil.getString(\n\t\t\tlayoutElement.attributeValue(\"parent-layout-uuid\"));\n\n\t\tif ((parentLayoutId != LayoutConstants.DEFAULT_PARENT_LAYOUT_ID) &&\n\t\t\t(parentLayoutNode != null)) {\n\n\t\t\timportLayout(\n\t\t\t\tportletDataContext, user, layoutCache, previousLayouts,\n\t\t\t\tnewLayouts, newLayoutsMap, newLayoutIds, portletsMergeMode,\n\t\t\t\tthemeId, colorSchemeId, layoutsImportMode, privateLayout,\n\t\t\t\timportPermissions, importPublicLayoutPermissions,\n\t\t\t\timportUserPermissions, importThemeSettings,\n\t\t\t\trootElement, (Element)parentLayoutNode);\n\n\t\t\tLayout parentLayout = newLayoutsMap.get(parentLayoutId);\n\n\t\t\tparentLayoutId = parentLayout.getLayoutId();\n\t\t}\n\t\telse if (Validator.isNotNull(parentLayoutUuid)) {\n\t\t\tLayout parentLayout =\n\t\t\t\tLayoutLocalServiceUtil.getLayoutByUuidAndGroupId(\n\t\t\t\t\tparentLayoutUuid, groupId);\n\n\t\t\tparentLayoutId = parentLayout.getLayoutId();\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\n\t\t\t\t\"Importing layout with layout id \" + layoutId +\n\t\t\t\t\t\" and parent layout id \" + parentLayoutId);\n\t\t}\n\n\t\timportedLayout.setCompanyId(user.getCompanyId());\n\t\timportedLayout.setParentLayoutId(parentLayoutId);\n\t\timportedLayout.setName(layout.getName());\n\t\timportedLayout.setTitle(layout.getTitle());\n\t\timportedLayout.setDescription(layout.getDescription());\n\t\timportedLayout.setKeywords(layout.getKeywords());\n\t\timportedLayout.setRobots(layout.getRobots());\n\t\timportedLayout.setType(layout.getType());\n\n\t\tif (layout.isTypeArticle()) {\n\t\t\timportJournalArticle(portletDataContext, layout, layoutElement);\n\n\t\t\timportedLayout.setTypeSettings(layout.getTypeSettings());\n\t\t}\n\t\telse if (layout.isTypePortlet() &&\n\t\t\t\t Validator.isNotNull(layout.getTypeSettings()) &&\n\t\t\t\t !portletsMergeMode.equals(\n\t\t\t\t\t PortletDataHandlerKeys.PORTLETS_MERGE_MODE_REPLACE)) {\n\n\t\t\tmergePortlets(\n\t\t\t\timportedLayout, layout.getTypeSettings(), portletsMergeMode);\n\t\t}\n\t\telse if (layout.isTypeLinkToLayout()) {\n\t\t\tUnicodeProperties typeSettingsProperties =\n\t\t\t\tlayout.getTypeSettingsProperties();\n\n\t\t\tlong linkToLayoutId = GetterUtil.getLong(\n\t\t\t\ttypeSettingsProperties.getProperty(\n\t\t\t\t\t\"linkToLayoutId\", StringPool.BLANK));\n\n\t\t\tif (linkToLayoutId > 0) {\n\t\t\t\tNode linkedLayoutNode = rootElement.selectSingleNode(\n\t\t\t\t\t\"./layouts/layout[@layout-id='\" + linkToLayoutId + \"']\");\n\n\t\t\t\tif (linkedLayoutNode != null) {\n\t\t\t\t\timportLayout(\n\t\t\t\t\t\tportletDataContext, user, layoutCache, previousLayouts,\n\t\t\t\t\t\tnewLayouts, newLayoutsMap, newLayoutIds,\n\t\t\t\t\t\tportletsMergeMode, themeId, colorSchemeId,\n\t\t\t\t\t\tlayoutsImportMode, privateLayout, importPermissions,\n\t\t\t\t\t\timportPublicLayoutPermissions, importUserPermissions,\n\t\t\t\t\t\timportThemeSettings, rootElement,\n\t\t\t\t\t\t(Element)linkedLayoutNode);\n\n\t\t\t\t\tLayout linkedLayout = newLayoutsMap.get(linkToLayoutId);\n\n\t\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\t\"privateLayout\",\n\t\t\t\t\t\tString.valueOf(linkedLayout.getPrivateLayout()));\n\t\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\t\"linkToLayoutId\",\n\t\t\t\t\t\tString.valueOf(linkedLayout.getLayoutId()));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t\tStringBundler sb = new StringBundler();\n\n\t\t\t\t\t\tsb.append(\"Unable to link layout with friendly URL \");\n\t\t\t\t\t\tsb.append(layout.getFriendlyURL());\n\t\t\t\t\t\tsb.append(\" and layout id \");\n\t\t\t\t\t\tsb.append(layout.getLayoutId());\n\t\t\t\t\t\tsb.append(\" to layout with layout id \");\n\t\t\t\t\t\tsb.append(linkToLayoutId);\n\n\t\t\t\t\t\t_log.warn(sb.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\timportedLayout.setTypeSettings(layout.getTypeSettings());\n\t\t}\n\t\telse {\n\t\t\timportedLayout.setTypeSettings(layout.getTypeSettings());\n\t\t}\n\n\t\timportedLayout.setHidden(layout.isHidden());\n\t\timportedLayout.setFriendlyURL(friendlyURL);\n\n\t\tif (importThemeSettings) {\n\t\t\timportedLayout.setThemeId(layout.getThemeId());\n\t\t\timportedLayout.setColorSchemeId(layout.getColorSchemeId());\n\t\t}\n\t\telse {\n\t\t\timportedLayout.setThemeId(StringPool.BLANK);\n\t\t\timportedLayout.setColorSchemeId(StringPool.BLANK);\n\t\t}\n\n\t\timportedLayout.setWapThemeId(layout.getWapThemeId());\n\t\timportedLayout.setWapColorSchemeId(layout.getWapColorSchemeId());\n\t\timportedLayout.setCss(layout.getCss());\n\t\timportedLayout.setPriority(layout.getPriority());\n\t\timportedLayout.setLayoutPrototypeUuid(layout.getLayoutPrototypeUuid());\n\t\timportedLayout.setLayoutPrototypeLinkEnabled(\n\t\t\tlayout.isLayoutPrototypeLinkEnabled());\n\n\t\tStagingUtil.updateLastImportSettings(\n\t\t\tlayoutElement, importedLayout, portletDataContext);\n\n\t\tfixTypeSettings(importedLayout);\n\n\t\tif (layout.isIconImage()) {\n\t\t\tString iconImagePath = layoutElement.elementText(\"icon-image-path\");\n\n\t\t\tbyte[] iconBytes = portletDataContext.getZipEntryAsByteArray(\n\t\t\t\ticonImagePath);\n\n\t\t\tif ((iconBytes != null) && (iconBytes.length > 0)) {\n\t\t\t\timportedLayout.setIconImage(true);\n\n\t\t\t\tImageLocalServiceUtil.updateImage(\n\t\t\t\t\timportedLayout.getIconImageId(), iconBytes);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tImageLocalServiceUtil.deleteImage(importedLayout.getIconImageId());\n\t\t}\n\n\t\tServiceContext serviceContext = portletDataContext.createServiceContext(\n\t\t\tlayoutElement, importedLayout, null);\n\n\t\timportedLayout.setExpandoBridgeAttributes(serviceContext);\n\n\t\tLayoutUtil.update(importedLayout, false);\n\n\t\tportletDataContext.setPlid(importedLayout.getPlid());\n\t\tportletDataContext.setOldPlid(layout.getPlid());\n\n\t\tnewLayoutIds.add(importedLayout.getLayoutId());\n\n\t\tnewLayouts.add(importedLayout);\n\n\t\t// Layout permissions\n\n\t\tif (importPermissions) {\n\t\t\t_permissionImporter.importLayoutPermissions(\n\t\t\t\tlayoutCache, portletDataContext.getCompanyId(), groupId,\n\t\t\t\tuser.getUserId(), importedLayout, layoutElement, rootElement,\n\t\t\t\timportUserPermissions);\n\t\t}\n\n\t\tif (importPublicLayoutPermissions) {\n\t\t\tString resourceName = Layout.class.getName();\n\t\t\tString resourcePrimKey = String.valueOf(importedLayout.getPlid());\n\n\t\t\tRole guestRole = RoleLocalServiceUtil.getRole(\n\t\t\t\timportedLayout.getCompanyId(), RoleConstants.GUEST);\n\n\t\t\tif (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 5) {\n\t\t\t\tResource resource = layoutCache.getResource(\n\t\t\t\t\timportedLayout.getCompanyId(), groupId, resourceName,\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL, resourcePrimKey, false);\n\n\t\t\t\tPermissionLocalServiceUtil.setRolePermissions(\n\t\t\t\t\tguestRole.getRoleId(), new String[] {ActionKeys.VIEW},\n\t\t\t\t\tresource.getResourceId());\n\t\t\t}\n\t\t\telse if (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 6) {\n\t\t\t\tResourcePermissionLocalServiceUtil.setResourcePermissions(\n\t\t\t\t\timportedLayout.getCompanyId(), resourceName,\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL, resourcePrimKey,\n\t\t\t\t\tguestRole.getRoleId(), new String[] {ActionKeys.VIEW});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tResource resource = layoutCache.getResource(\n\t\t\t\t\timportedLayout.getCompanyId(), groupId, resourceName,\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL, resourcePrimKey, false);\n\n\t\t\t\tPermissionLocalServiceUtil.setGroupPermissions(\n\t\t\t\t\tgroupId, new String[] {ActionKeys.VIEW},\n\t\t\t\t\tresource.getResourceId());\n\t\t\t}\n\t\t}\n\n\t\t_portletImporter.importPortletData(\n\t\t\tportletDataContext, PortletKeys.LAYOUT_CONFIGURATION, null,\n\t\t\tlayoutElement);\n\t}","commit_id":"f8204de8121fb4c40f3ecae4db7f1be71df84655","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void mergeLayoutProtypeLayout(Group group, Layout layout)\n\t\tthrows Exception {\n\n\t\tif (!layout.isLayoutPrototypeLinkActive() ||\n\t\t\tgroup.isLayoutPrototype() || group.isLayoutSetPrototype()) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tUnicodeProperties typeSettingsProperties =\n\t\t\tlayout.getTypeSettingsProperties();\n\n\t\tlong lastMergeTime = GetterUtil.getLong(\n\t\t\ttypeSettingsProperties.getProperty(\"last-merge-time\"));\n\n\t\tLayoutPrototype layoutPrototype =\n\t\t\tLayoutPrototypeLocalServiceUtil.getLayoutPrototypeByUuid(\n\t\t\t\tlayout.getLayoutPrototypeUuid());\n\n\t\tLayout layoutPrototypeLayout = layoutPrototype.getLayout();\n\n\t\tDate modifiedDate = layoutPrototypeLayout.getModifiedDate();\n\n\t\tif (lastMergeTime >= modifiedDate.getTime()) {\n\t\t\treturn;\n\t\t}\n\n\t\tUnicodeProperties prototypeTypeSettingsProperties =\n\t\t\tlayoutPrototypeLayout.getTypeSettingsProperties();\n\n\t\tint mergeFailCount = GetterUtil.getInteger(\n\t\t\tprototypeTypeSettingsProperties.getProperty(\"merge-fail-count\"));\n\n\t\tif (mergeFailCount >\n\t\t\tPropsValues.LAYOUT_PROTOTYPE_MERGE_FAIL_THRESHOLD) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tString owner = PortalUUIDUtil.generate();\n\n\t\ttry {\n\t\t\tLock lock = LockLocalServiceUtil.lock(\n\t\t\t\tLayoutLocalServiceVirtualLayoutsAdvice.class.getName(),\n\t\t\t\tString.valueOf(layout.getPlid()), owner, false);\n\n\t\t\t// Double deep check\n\n\t\t\tif (!owner.equals(lock.getOwner())) {\n\t\t\t\tDate createDate = lock.getCreateDate();\n\n\t\t\t\tif (((System.currentTimeMillis() - createDate.getTime()) >=\n\t\t\t\t\tPropsValues.LAYOUT_PROTOTYPE_MERGE_LOCK_MAX_TIME)) {\n\n\t\t\t\t\t// Acquire lock if the lock is older than the lock max time\n\n\t\t\t\t\tlock = LockLocalServiceUtil.lock(\n\t\t\t\t\t\tLayoutLocalServiceVirtualLayoutsAdvice.class.getName(),\n\t\t\t\t\t\tString.valueOf(layout.getPlid()), lock.getOwner(),\n\t\t\t\t\t\towner, false);\n\n\t\t\t\t\t// Check if acquiring the lock succeeded or if another\n\t\t\t\t\t// process has the lock\n\n\t\t\t\t\tif (!owner.equals(lock.getOwner())) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tSitesUtil.applyLayoutPrototype(layoutPrototype, layout, true);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\n\t\t\tprototypeTypeSettingsProperties.setProperty(\n\t\t\t\t\"merge-fail-count\", String.valueOf(++mergeFailCount));\n\n\t\t\t// Invoke updateImpl so that we do not trigger the listeners\n\n\t\t\tLayoutUtil.updateImpl(layoutPrototypeLayout, false);\n\t\t}\n\t\tfinally {\n\t\t\tLockLocalServiceUtil.unlock(\n\t\t\t\tLayoutLocalServiceVirtualLayoutsAdvice.class.getName(),\n\t\t\t\tString.valueOf(layout.getPlid()), owner, false);\n\t\t}\n\t}","id":48407,"modified_method":"protected void mergeLayoutProtypeLayout(Group group, Layout layout)\n\t\tthrows Exception {\n\n\t\tif (!layout.isLayoutPrototypeLinkActive() ||\n\t\t\tgroup.isLayoutPrototype() || group.isLayoutSetPrototype() ||\n\t\t\t(group.hasStagingGroup())) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tUnicodeProperties typeSettingsProperties =\n\t\t\tlayout.getTypeSettingsProperties();\n\n\t\tlong lastMergeTime = GetterUtil.getLong(\n\t\t\ttypeSettingsProperties.getProperty(\"last-merge-time\"));\n\n\t\tLayoutPrototype layoutPrototype =\n\t\t\tLayoutPrototypeLocalServiceUtil.getLayoutPrototypeByUuid(\n\t\t\t\tlayout.getLayoutPrototypeUuid());\n\n\t\tLayout layoutPrototypeLayout = layoutPrototype.getLayout();\n\n\t\tDate modifiedDate = layoutPrototypeLayout.getModifiedDate();\n\n\t\tif (lastMergeTime >= modifiedDate.getTime()) {\n\t\t\treturn;\n\t\t}\n\n\t\tUnicodeProperties prototypeTypeSettingsProperties =\n\t\t\tlayoutPrototypeLayout.getTypeSettingsProperties();\n\n\t\tint mergeFailCount = GetterUtil.getInteger(\n\t\t\tprototypeTypeSettingsProperties.getProperty(\"merge-fail-count\"));\n\n\t\tif (mergeFailCount >\n\t\t\tPropsValues.LAYOUT_PROTOTYPE_MERGE_FAIL_THRESHOLD) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tString owner = PortalUUIDUtil.generate();\n\n\t\ttry {\n\t\t\tLock lock = LockLocalServiceUtil.lock(\n\t\t\t\tLayoutLocalServiceVirtualLayoutsAdvice.class.getName(),\n\t\t\t\tString.valueOf(layout.getPlid()), owner, false);\n\n\t\t\t// Double deep check\n\n\t\t\tif (!owner.equals(lock.getOwner())) {\n\t\t\t\tDate createDate = lock.getCreateDate();\n\n\t\t\t\tif (((System.currentTimeMillis() - createDate.getTime()) >=\n\t\t\t\t\tPropsValues.LAYOUT_PROTOTYPE_MERGE_LOCK_MAX_TIME)) {\n\n\t\t\t\t\t// Acquire lock if the lock is older than the lock max time\n\n\t\t\t\t\tlock = LockLocalServiceUtil.lock(\n\t\t\t\t\t\tLayoutLocalServiceVirtualLayoutsAdvice.class.getName(),\n\t\t\t\t\t\tString.valueOf(layout.getPlid()), lock.getOwner(),\n\t\t\t\t\t\towner, false);\n\n\t\t\t\t\t// Check if acquiring the lock succeeded or if another\n\t\t\t\t\t// process has the lock\n\n\t\t\t\t\tif (!owner.equals(lock.getOwner())) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tSitesUtil.applyLayoutPrototype(layoutPrototype, layout, true);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\n\t\t\tprototypeTypeSettingsProperties.setProperty(\n\t\t\t\t\"merge-fail-count\", String.valueOf(++mergeFailCount));\n\n\t\t\t// Invoke updateImpl so that we do not trigger the listeners\n\n\t\t\tLayoutUtil.updateImpl(layoutPrototypeLayout, false);\n\t\t}\n\t\tfinally {\n\t\t\tLockLocalServiceUtil.unlock(\n\t\t\t\tLayoutLocalServiceVirtualLayoutsAdvice.class.getName(),\n\t\t\t\tString.valueOf(layout.getPlid()), owner, false);\n\t\t}\n\t}","commit_id":"f8204de8121fb4c40f3ecae4db7f1be71df84655","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public LayoutPrototype addLayoutPrototype(\n\t\tlong userId, long companyId, Map<Locale, String> nameMap,\n\t\tString description, boolean active, ServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\t// Layout prototype\n\n\t\tlong layoutPrototypeId = counterLocalService.increment();\n\n\t\tLayoutPrototype layoutPrototype = layoutPrototypePersistence.create(\n\t\t\tlayoutPrototypeId);\n\n\t\tif (serviceContext != null) {\n\t\t\tlayoutPrototype.setUuid(serviceContext.getUuid());\n\t\t}\n\t\tlayoutPrototype.setCompanyId(companyId);\n\t\tlayoutPrototype.setNameMap(nameMap);\n\t\tlayoutPrototype.setDescription(description);\n\t\tlayoutPrototype.setActive(active);\n\n\t\tlayoutPrototypePersistence.update(layoutPrototype);\n\n\t\t// Resources\n\n\t\tif (userId > 0) {\n\t\t\tresourceLocalService.addResources(\n\t\t\t\tcompanyId, 0, userId, LayoutPrototype.class.getName(),\n\t\t\t\tlayoutPrototype.getLayoutPrototypeId(), false, false, false);\n\t\t}\n\n\t\t// Group\n\n\t\tString friendlyURL =\n\t\t\t\"/template-\" + layoutPrototype.getLayoutPrototypeId();\n\n\t\tGroup group = groupLocalService.addGroup(\n\t\t\tuserId, GroupConstants.DEFAULT_PARENT_GROUP_ID,\n\t\t\tLayoutPrototype.class.getName(),\n\t\t\tlayoutPrototype.getLayoutPrototypeId(),\n\t\t\tGroupConstants.DEFAULT_LIVE_GROUP_ID,\n\t\t\tlayoutPrototype.getName(LocaleUtil.getDefault()), null, 0,\n\t\t\tfriendlyURL, false, true, null);\n\n\t\tlayoutLocalService.addLayout(\n\t\t\tuserId, group.getGroupId(), true,\n\t\t\tLayoutConstants.DEFAULT_PARENT_LAYOUT_ID,\n\t\t\tlayoutPrototype.getName(LocaleUtil.getDefault()), null, null,\n\t\t\tLayoutConstants.TYPE_PORTLET, false, \"/layout\", serviceContext);\n\n\t\treturn layoutPrototype;\n\t}","id":48408,"modified_method":"public LayoutPrototype addLayoutPrototype(\n\t\tlong userId, long companyId, Map<Locale, String> nameMap,\n\t\tString description, boolean active, ServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\t// Layout prototype\n\n\t\tUser user = userPersistence.findByPrimaryKey(userId);\n\t\tDate now = new Date();\n\n\t\tlong layoutPrototypeId = counterLocalService.increment();\n\n\t\tLayoutPrototype layoutPrototype = layoutPrototypePersistence.create(\n\t\t\tlayoutPrototypeId);\n\n\t\tif (serviceContext != null) {\n\t\t\tlayoutPrototype.setUuid(serviceContext.getUuid());\n\t\t\tlayoutPrototype.setCreateDate(serviceContext.getCreateDate(now));\n\t\t\tlayoutPrototype.setModifiedDate(\n\t\t\t\tserviceContext.getModifiedDate(now));\n\t\t}\n\t\telse {\n\t\t\tlayoutPrototype.setCreateDate(now);\n\t\t\tlayoutPrototype.setModifiedDate(now);\n\t\t}\n\t\tlayoutPrototype.setCompanyId(companyId);\n\t\tlayoutPrototype.setUserId(userId);\n\t\tlayoutPrototype.setUserName(user.getFullName());\n\t\tlayoutPrototype.setNameMap(nameMap);\n\t\tlayoutPrototype.setDescription(description);\n\t\tlayoutPrototype.setActive(active);\n\n\t\tlayoutPrototypePersistence.update(layoutPrototype);\n\n\t\t// Resources\n\n\t\tif (userId > 0) {\n\t\t\tresourceLocalService.addResources(\n\t\t\t\tcompanyId, 0, userId, LayoutPrototype.class.getName(),\n\t\t\t\tlayoutPrototype.getLayoutPrototypeId(), false, false, false);\n\t\t}\n\n\t\t// Group\n\n\t\tString friendlyURL =\n\t\t\t\"/template-\" + layoutPrototype.getLayoutPrototypeId();\n\n\t\tGroup group = groupLocalService.addGroup(\n\t\t\tuserId, GroupConstants.DEFAULT_PARENT_GROUP_ID,\n\t\t\tLayoutPrototype.class.getName(),\n\t\t\tlayoutPrototype.getLayoutPrototypeId(),\n\t\t\tGroupConstants.DEFAULT_LIVE_GROUP_ID,\n\t\t\tlayoutPrototype.getName(LocaleUtil.getDefault()), null, 0,\n\t\t\tfriendlyURL, false, true, null);\n\n\t\tlayoutLocalService.addLayout(\n\t\t\tuserId, group.getGroupId(), true,\n\t\t\tLayoutConstants.DEFAULT_PARENT_LAYOUT_ID,\n\t\t\tlayoutPrototype.getName(LocaleUtil.getDefault()), null, null,\n\t\t\tLayoutConstants.TYPE_PORTLET, false, \"/layout\", serviceContext);\n\n\t\treturn layoutPrototype;\n\t}","commit_id":"785004e37b3275d4ec51213dc7a7cdc71907ffaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public LayoutPrototype updateLayoutPrototype(\n\t\tlong layoutPrototypeId, Map<Locale, String> nameMap,\n\t\tString description, boolean active, ServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\t// Layout prototype\n\n\t\tLayoutPrototype layoutPrototype =\n\t\t\tlayoutPrototypePersistence.findByPrimaryKey(layoutPrototypeId);\n\n\t\tlayoutPrototype.setNameMap(nameMap);\n\t\tlayoutPrototype.setDescription(description);\n\t\tlayoutPrototype.setActive(active);\n\n\t\tlayoutPrototypePersistence.update(layoutPrototype);\n\n\t\t// Group\n\n\t\tGroup group = groupLocalService.getLayoutPrototypeGroup(\n\t\t\tlayoutPrototype.getCompanyId(), layoutPrototypeId);\n\n\t\tgroup.setName(layoutPrototype.getName(LocaleUtil.getDefault()));\n\n\t\tgroupPersistence.update(group);\n\n\t\treturn layoutPrototype;\n\t}","id":48409,"modified_method":"public LayoutPrototype updateLayoutPrototype(\n\t\tlong layoutPrototypeId, Map<Locale, String> nameMap,\n\t\tString description, boolean active, ServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\t// Layout prototype\n\n\t\tLayoutPrototype layoutPrototype =\n\t\t\tlayoutPrototypePersistence.findByPrimaryKey(layoutPrototypeId);\n\n\t\tlayoutPrototype.setModifiedDate(new Date());\n\t\tlayoutPrototype.setNameMap(nameMap);\n\t\tlayoutPrototype.setDescription(description);\n\t\tlayoutPrototype.setActive(active);\n\n\t\tlayoutPrototypePersistence.update(layoutPrototype);\n\n\t\t// Group\n\n\t\tGroup group = groupLocalService.getLayoutPrototypeGroup(\n\t\t\tlayoutPrototype.getCompanyId(), layoutPrototypeId);\n\n\t\tgroup.setName(layoutPrototype.getName(LocaleUtil.getDefault()));\n\n\t\tgroupPersistence.update(group);\n\n\t\treturn layoutPrototype;\n\t}","commit_id":"785004e37b3275d4ec51213dc7a7cdc71907ffaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public LayoutSetPrototype addLayoutSetPrototype(\n\t\t\tlong userId, long companyId, Map<Locale, String> nameMap,\n\t\t\tString description, boolean active, boolean layoutsUpdateable,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\t// Layout set prototype\n\n\t\tDate now = new Date();\n\n\t\tlong layoutSetPrototypeId = counterLocalService.increment();\n\n\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\tlayoutSetPrototypePersistence.create(layoutSetPrototypeId);\n\n\t\tlayoutSetPrototype.setUuid(serviceContext.getUuid());\n\t\tlayoutSetPrototype.setCompanyId(companyId);\n\t\tlayoutSetPrototype.setCreateDate(serviceContext.getCreateDate(now));\n\t\tlayoutSetPrototype.setModifiedDate(serviceContext.getModifiedDate(now));\n\t\tlayoutSetPrototype.setNameMap(nameMap);\n\t\tlayoutSetPrototype.setDescription(description);\n\t\tlayoutSetPrototype.setActive(active);\n\n\t\tUnicodeProperties settingsProperties =\n\t\t\tlayoutSetPrototype.getSettingsProperties();\n\n\t\tsettingsProperties.put(\n\t\t\t\"layoutsUpdateable\", String.valueOf(layoutsUpdateable));\n\n\t\tlayoutSetPrototype.setSettingsProperties(settingsProperties);\n\n\t\tlayoutSetPrototypePersistence.update(layoutSetPrototype);\n\n\t\t// Resources\n\n\t\tif (userId > 0) {\n\t\t\tresourceLocalService.addResources(\n\t\t\t\tcompanyId, 0, userId, LayoutSetPrototype.class.getName(),\n\t\t\t\tlayoutSetPrototype.getLayoutSetPrototypeId(), false, false,\n\t\t\t\tfalse);\n\t\t}\n\n\t\t// Group\n\n\t\tString friendlyURL =\n\t\t\t\"/template-\" + layoutSetPrototype.getLayoutSetPrototypeId();\n\n\t\tGroup group = groupLocalService.addGroup(\n\t\t\tuserId, GroupConstants.DEFAULT_PARENT_GROUP_ID,\n\t\t\tLayoutSetPrototype.class.getName(),\n\t\t\tlayoutSetPrototype.getLayoutSetPrototypeId(),\n\t\t\tGroupConstants.DEFAULT_LIVE_GROUP_ID,\n\t\t\tlayoutSetPrototype.getName(LocaleUtil.getDefault()), null, 0,\n\t\t\tfriendlyURL, false, true, serviceContext);\n\n\t\tlayoutLocalService.addLayout(\n\t\t\tuserId, group.getGroupId(), true,\n\t\t\tLayoutConstants.DEFAULT_PARENT_LAYOUT_ID, \"home\", null, null,\n\t\t\tLayoutConstants.TYPE_PORTLET, false, \"/home\", serviceContext);\n\n\t\treturn layoutSetPrototype;\n\t}","id":48410,"modified_method":"public LayoutSetPrototype addLayoutSetPrototype(\n\t\t\tlong userId, long companyId, Map<Locale, String> nameMap,\n\t\t\tString description, boolean active, boolean layoutsUpdateable,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\t// Layout set prototype\n\n\t\tUser user = userPersistence.findByPrimaryKey(userId);\n\t\tDate now = new Date();\n\n\t\tlong layoutSetPrototypeId = counterLocalService.increment();\n\n\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\tlayoutSetPrototypePersistence.create(layoutSetPrototypeId);\n\n\t\tlayoutSetPrototype.setUuid(serviceContext.getUuid());\n\t\tlayoutSetPrototype.setCompanyId(companyId);\n\t\tlayoutSetPrototype.setUserId(userId);\n\t\tlayoutSetPrototype.setUserName(user.getFullName());\n\t\tlayoutSetPrototype.setCreateDate(serviceContext.getCreateDate(now));\n\t\tlayoutSetPrototype.setModifiedDate(serviceContext.getModifiedDate(now));\n\t\tlayoutSetPrototype.setNameMap(nameMap);\n\t\tlayoutSetPrototype.setDescription(description);\n\t\tlayoutSetPrototype.setActive(active);\n\n\t\tUnicodeProperties settingsProperties =\n\t\t\tlayoutSetPrototype.getSettingsProperties();\n\n\t\tsettingsProperties.put(\n\t\t\t\"layoutsUpdateable\", String.valueOf(layoutsUpdateable));\n\n\t\tlayoutSetPrototype.setSettingsProperties(settingsProperties);\n\n\t\tlayoutSetPrototypePersistence.update(layoutSetPrototype);\n\n\t\t// Resources\n\n\t\tif (userId > 0) {\n\t\t\tresourceLocalService.addResources(\n\t\t\t\tcompanyId, 0, userId, LayoutSetPrototype.class.getName(),\n\t\t\t\tlayoutSetPrototype.getLayoutSetPrototypeId(), false, false,\n\t\t\t\tfalse);\n\t\t}\n\n\t\t// Group\n\n\t\tString friendlyURL =\n\t\t\t\"/template-\" + layoutSetPrototype.getLayoutSetPrototypeId();\n\n\t\tGroup group = groupLocalService.addGroup(\n\t\t\tuserId, GroupConstants.DEFAULT_PARENT_GROUP_ID,\n\t\t\tLayoutSetPrototype.class.getName(),\n\t\t\tlayoutSetPrototype.getLayoutSetPrototypeId(),\n\t\t\tGroupConstants.DEFAULT_LIVE_GROUP_ID,\n\t\t\tlayoutSetPrototype.getName(LocaleUtil.getDefault()), null, 0,\n\t\t\tfriendlyURL, false, true, serviceContext);\n\n\t\tlayoutLocalService.addLayout(\n\t\t\tuserId, group.getGroupId(), true,\n\t\t\tLayoutConstants.DEFAULT_PARENT_LAYOUT_ID, \"home\", null, null,\n\t\t\tLayoutConstants.TYPE_PORTLET, false, \"/home\", serviceContext);\n\n\t\treturn layoutSetPrototype;\n\t}","commit_id":"785004e37b3275d4ec51213dc7a7cdc71907ffaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public RepositoryEntry addRepositoryEntry(\n\t\t\tlong groupId, long repositoryId, String mappedId,\n\t\t\tServiceContext serviceContext)\n\t\tthrows SystemException {\n\n\t\tlong repositoryEntryId = counterLocalService.increment();\n\n\t\tRepositoryEntry repositoryEntry = repositoryEntryPersistence.create(\n\t\t\trepositoryEntryId);\n\n\t\trepositoryEntry.setGroupId(groupId);\n\t\trepositoryEntry.setUuid(serviceContext.getUuid());\n\t\trepositoryEntry.setRepositoryId(repositoryId);\n\t\trepositoryEntry.setMappedId(mappedId);\n\n\t\trepositoryEntryPersistence.update(repositoryEntry);\n\n\t\treturn repositoryEntry;\n\t}","id":48411,"modified_method":"public RepositoryEntry addRepositoryEntry(\n\t\t\tlong userId, long groupId, long repositoryId, String mappedId,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\tUser user = userPersistence.findByPrimaryKey(userId);\n\n\t\tlong repositoryEntryId = counterLocalService.increment();\n\n\t\tRepositoryEntry repositoryEntry = repositoryEntryPersistence.create(\n\t\t\trepositoryEntryId);\n\n\t\tDate now = new Date();\n\n\t\trepositoryEntry.setUuid(serviceContext.getUuid());\n\t\trepositoryEntry.setGroupId(groupId);\n\t\trepositoryEntry.setCompanyId(user.getCompanyId());\n\t\trepositoryEntry.setUserId(userId);\n\t\trepositoryEntry.setUserName(user.getFullName());\n\t\trepositoryEntry.setCreateDate(serviceContext.getCreateDate(now));\n\t\trepositoryEntry.setModifiedDate(serviceContext.getModifiedDate(now));\n\t\trepositoryEntry.setRepositoryId(repositoryId);\n\t\trepositoryEntry.setMappedId(mappedId);\n\n\t\trepositoryEntryPersistence.update(repositoryEntry);\n\n\t\treturn repositoryEntry;\n\t}","commit_id":"d53f11040fda79990beb43ba2f6f8133410bc994","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public RepositoryEntry updateRepositoryEntry(\n\t\t\tlong repositoryEntryId, String mappedId)\n\t\tthrows PortalException, SystemException {\n\n\t\tRepositoryEntry repositoryEntry =\n\t\t\trepositoryEntryPersistence.findByPrimaryKey(repositoryEntryId);\n\n\t\trepositoryEntry.setMappedId(mappedId);\n\n\t\trepositoryEntryPersistence.update(repositoryEntry);\n\n\t\treturn repositoryEntry;\n\t}","id":48412,"modified_method":"public RepositoryEntry updateRepositoryEntry(\n\t\t\tlong repositoryEntryId, String mappedId)\n\t\tthrows PortalException, SystemException {\n\n\t\tRepositoryEntry repositoryEntry =\n\t\t\trepositoryEntryPersistence.findByPrimaryKey(repositoryEntryId);\n\n\t\trepositoryEntry.setMappedId(mappedId);\n\t\trepositoryEntry.setModifiedDate(new Date());\n\n\t\trepositoryEntryPersistence.update(repositoryEntry);\n\n\t\treturn repositoryEntry;\n\t}","commit_id":"d53f11040fda79990beb43ba2f6f8133410bc994","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private String getJavaAttributeName(String getterName) {\n        if (getterName.startsWith(\"get\") || getterName.startsWith(\"set\")) {\n            return Character.toLowerCase(getterName.charAt(3)) + getterName.substring(4);\n        } else if (getterName.startsWith(\"is\")) {\n            // Starts with \"is\"\n            return Character.toLowerCase(getterName.charAt(2)) + getterName.substring(3);\n        } else {\n            throw new RuntimeException(\"Illegal java getter/setter name\");\n        }\n    }","id":48413,"modified_method":"private String getJavaAttributeName(String getterName) {\n        if (getterName.startsWith(\"get\") || getterName.startsWith(\"set\")) {\n            return getJavaBeanName(getterName.substring(3));\n        } else if (getterName.startsWith(\"is\")) {\n            // Starts with \"is\"\n            return getJavaBeanName(getterName.substring(2));\n        } else {\n            throw new RuntimeException(\"Illegal java getter/setter name\");\n        }\n    }","commit_id":"c868c5fc3515f8fb9a94629603dcb91f70f008dd","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"@Nullable\n  public static ResourceBundle createByUrl(final @NotNull String url, final @NotNull Project project) {\n    if (!url.startsWith(ResourceBundleImpl.RESOURCE_BUNDLE_PREFIX)) return null;\n\n    final String defaultPropertiesUrl = url.substring(ResourceBundleImpl.RESOURCE_BUNDLE_PREFIX.length());\n    final int idx = defaultPropertiesUrl.lastIndexOf('/');\n    if (idx == -1) return null;\n    final String baseDirectoryName = defaultPropertiesUrl.substring(0, idx);\n    final String baseName = defaultPropertiesUrl.substring(idx + 1);\n    final VirtualFile baseDirectoryVirtualFile = VirtualFileManager.getInstance().findFileByUrl(baseDirectoryName);\n    if (baseDirectoryVirtualFile == null) {\n      return null;\n    }\n    final PsiFile baseDirectory = PsiManager.getInstance(project).findFile(baseDirectoryVirtualFile);\n    if (baseDirectory == null || !(baseDirectory instanceof PsiDirectory)) {\n      return null;\n    }\n    return getResourceBundle(baseName, (PsiDirectory)baseDirectory);\n  }","id":48414,"modified_method":"@Nullable\n  public static ResourceBundle createByUrl(final @NotNull String url, final @NotNull Project project) {\n    final int idx = url.lastIndexOf('/');\n    if (idx == -1) return null;\n    final String baseDirectoryName = url.substring(0, idx);\n    final String baseName = url.substring(idx + 1);\n    final VirtualFile baseDirectoryVirtualFile = VirtualFileManager.getInstance().findFileByUrl(baseDirectoryName);\n    if (baseDirectoryVirtualFile == null) {\n      return null;\n    }\n    final PsiDirectory baseDirectory = PsiManager.getInstance(project).findDirectory(baseDirectoryVirtualFile);\n    if (baseDirectory == null) {\n      return null;\n    }\n    return getResourceBundle(baseName, baseDirectory);\n  }","commit_id":"3c19fd9f7c3e35746b219dc044d9cea6d4748f06","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Element getState() {\n    Element element = new Element(\"PropertiesSeparatorManager\");\n    for (final String url: mySeparators.keySet()) {\n      String separator = mySeparators.get(url);\n      StringBuilder encoded = new StringBuilder(separator.length());\n      for (int i=0;i<separator.length();i++) {\n        char c = separator.charAt(i);\n        encoded.append(\"\\\\u\");\n        encoded.append(Character.forDigit(c >> 12, 16));\n        encoded.append(Character.forDigit((c >> 8) & 0xf, 16));\n        encoded.append(Character.forDigit((c >> 4) & 0xf, 16));\n        encoded.append(Character.forDigit(c & 0xf, 16));\n      }\n      Element fileElement = new Element(FILE_ELEMENT);\n      fileElement.setAttribute(URL_ELEMENT, url);\n      fileElement.setAttribute(SEPARATOR_ATTR, encoded.toString());\n      element.addContent(fileElement);\n    }\n    return element;\n  }","id":48415,"modified_method":"@Nullable\n  @Override\n  public PropertiesSeparatorManagerState getState() {\n    return myUserDefinedSeparators.isEmpty() ? null : myUserDefinedSeparators.encode();\n  }","commit_id":"3c19fd9f7c3e35746b219dc044d9cea6d4748f06","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setSeparator(ResourceBundle resourceBundle, String separator) {\n    if (resourceBundle instanceof ResourceBundleImpl) {\n      mySeparators.put(((ResourceBundleImpl)resourceBundle).getUrl(), separator);\n    }\n  }","id":48416,"modified_method":"public void setSeparator(ResourceBundle resourceBundle, String separator) {\n    if (resourceBundle instanceof ResourceBundleImpl) {\n      myUserDefinedSeparators.getSeparators().put(((ResourceBundleImpl)resourceBundle).getUrl(), separator);\n    }\n  }","commit_id":"3c19fd9f7c3e35746b219dc044d9cea6d4748f06","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static String decodeSeparator(String separator) {\n    if (separator.length() % 6 != 0) {\n      return null;\n    }\n    StringBuilder result = new StringBuilder();\n    int pos = 0;\n    while (pos < separator.length()) {\n      String encodedCharacter = separator.substring(pos, pos+6);\n      if (!encodedCharacter.startsWith(\"\\\\u\")) {\n        return null;\n      }\n      int d1 = Character.digit(encodedCharacter.charAt(2), 16);      \n      int d2 = Character.digit(encodedCharacter.charAt(3), 16);      \n      int d3 = Character.digit(encodedCharacter.charAt(4), 16);      \n      int d4 = Character.digit(encodedCharacter.charAt(5), 16);\n      if (d1 == -1 || d2 == -1 || d3 == -1 || d4 == -1) {\n        return null;\n      }\n      int b1 = (d1 << 12) & 0xF000;\n      int b2 = (d2 << 8) & 0x0F00;\n      int b3 = (d3 << 4) & 0x00F0;\n      int b4 = (d4 << 0) & 0x000F;\n      char code = (char) (b1 | b2 | b3 | b4);\n      result.append(code);\n      pos += 6;\n    }\n    return result.toString();\n  }","id":48417,"modified_method":"@Nullable\n  private static String decodeSeparator(String separator) {\n    if (separator.length() % 6 != 0) {\n      return null;\n    }\n    StringBuilder result = new StringBuilder();\n    int pos = 0;\n    while (pos < separator.length()) {\n      String encodedCharacter = separator.substring(pos, pos+6);\n      if (!encodedCharacter.startsWith(\"\\\\u\")) {\n        return null;\n      }\n      char code = (char) Integer.parseInt(encodedCharacter.substring(2), 16);\n      result.append(code);\n      pos += 6;\n    }\n    return result.toString();\n  }","commit_id":"3c19fd9f7c3e35746b219dc044d9cea6d4748f06","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public String getSeparator(final ResourceBundle resourceBundle) {\n    if (!(resourceBundle instanceof ResourceBundleImpl)) {\n      return \".\";\n    }\n    String separator = mySeparators.get(((ResourceBundleImpl)resourceBundle).getUrl());\n    if (separator == null) {\n      separator = guessSeparator((ResourceBundleImpl)resourceBundle);\n      setSeparator(resourceBundle, separator);\n    }\n    return separator;\n  }","id":48418,"modified_method":"@NotNull\n  public String getSeparator(final ResourceBundle resourceBundle) {\n    if (!(resourceBundle instanceof ResourceBundleImpl)) {\n      return \".\";\n    }\n    final ResourceBundleImpl resourceBundleImpl = (ResourceBundleImpl)resourceBundle;\n    String separator = myUserDefinedSeparators.getSeparators().get(resourceBundleImpl.getUrl());\n    return separator == null ? myGuessedSeparators.get(resourceBundleImpl) : separator;\n  }","commit_id":"3c19fd9f7c3e35746b219dc044d9cea6d4748f06","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String getUrl() {\n    return RESOURCE_BUNDLE_PREFIX + getBaseDirectory() + \"/\" + getBaseName();\n  }","id":48419,"modified_method":"public String getUrl() {\n    return getBaseDirectory() + \"/\" + getBaseName();\n  }","commit_id":"3c19fd9f7c3e35746b219dc044d9cea6d4748f06","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * @return <code>true<\/code> if and only if the passed event is already dispatched by the\n   *         <code>IdeMouseEventDispatcher<\/code> and there is no need for any other processing of the event.\n   *         If the method returns <code>false<\/code> then it means that the event should be delivered\n   *         to normal event dispatching.\n   */\n  public boolean dispatchMouseEvent(MouseEvent e) {\n    Component c = e.getComponent();\n\n    //frame activation by mouse click\n    if (e.getID() == MOUSE_PRESSED && c instanceof IdeFrame && !c.hasFocus()) {\n      IdeFocusManager focusManager = IdeFocusManager.getGlobalInstance();\n      if (focusManager instanceof FocusManagerImpl) {\n        Component at = SwingUtilities.getDeepestComponentAt(c, e.getX(), e.getY());\n        if (at != null && at.isFocusable()) {\n          ((FocusManagerImpl)focusManager).setLastFocusedAtDeactivation((IdeFrame)c, at);\n        }\n      }\n    }\n\n    if (SystemInfo.isXWindow && e.isPopupTrigger() && e.getButton() != 3) {\n      // we can do better than silly triggering popup on everything but left click\n      resetPopupTrigger(e);\n    }\n\n    boolean ignore = false;\n    if (!(e.getID() == MouseEvent.MOUSE_PRESSED ||\n          e.getID() == MouseEvent.MOUSE_RELEASED ||\n          e.getID() == MOUSE_CLICKED)) {\n      ignore = true;\n    }\n\n    patchClickCount(e);\n\n    if (e.isConsumed()\n        || e.isPopupTrigger()\n        || (e.getButton() > 3 ? e.getID() != MOUSE_PRESSED : e.getID() != MOUSE_RELEASED)\n        || e.getClickCount() < 1\n        || e.getButton() == MouseEvent.NOBUTTON) { // See #16995. It did happen\n      ignore = true;\n    }\n\n    final JRootPane root = findRoot(e);\n    if (root != null) {\n      BlockState blockState = myRootPane2BlockedId.get(root);\n      if (blockState != null) {\n        if (SWING_EVENTS_PRIORITY.indexOf(blockState.currentEventId) < SWING_EVENTS_PRIORITY.indexOf(e.getID())) {\n          blockState.currentEventId = e.getID();\n          if (blockState.blockMode == IdeEventQueue.BlockMode.COMPLETE) {\n            return true;\n          }\n          else {\n            ignore = true;\n          }\n        } else {\n          myRootPane2BlockedId.remove(root);\n        }\n      }\n    }\n\n    if (c == null) {\n      throw new IllegalStateException(\"component cannot be null\");\n    }\n    c = SwingUtilities.getDeepestComponentAt(c, e.getX(), e.getY());\n\n    if (c instanceof IdeGlassPaneImpl) {\n      c = ((IdeGlassPaneImpl)c).getTargetComponentFor(e);\n    }\n\n    if (c == null) { // do nothing if component doesn't contains specified point\n      return false;\n    }\n\n    if (isHorizontalScrolling(c, e)) {\n      boolean done = doHorizontalScrolling(c, (MouseWheelEvent)e);\n      if (done) return true;\n    }\n\n    if (ignore) return false;\n\n    // avoid \"cyclic component initialization error\" in case of dialogs shown because of component initialization failure\n    if (!KeymapManagerImpl.ourKeymapManagerInitialized) {\n      return false;\n    }\n\n    final MouseShortcut shortcut = new MouseShortcut(e.getButton(), e.getModifiersEx(), e.getClickCount());\n    fillActionsList(c, shortcut, IdeKeyEventDispatcher.isModalContext(c));\n    ActionManagerEx actionManager = ActionManagerEx.getInstanceEx();\n    if (actionManager != null) {\n      AnAction[] actions = myActions.toArray(new AnAction[myActions.size()]);\n      for (AnAction action : actions) {\n        DataContext dataContext = DataManager.getInstance().getDataContext(c);\n        Presentation presentation = myPresentationFactory.getPresentation(action);\n        AnActionEvent actionEvent = new AnActionEvent(e, dataContext, ActionPlaces.MAIN_MENU, presentation,\n                                                      ActionManager.getInstance(),\n                                                      e.getModifiers());\n        action.beforeActionPerformedUpdate(actionEvent);\n\n        if (presentation.isEnabled()) {\n          actionManager.fireBeforeActionPerformed(action, dataContext, actionEvent);\n          final Component context = PlatformDataKeys.CONTEXT_COMPONENT.getData(dataContext);\n\n          if (context != null && !context.isShowing()) continue;\n\n          action.actionPerformed(actionEvent);\n          e.consume();\n        }\n      }\n      if (actions.length > 0 && e.isConsumed())\n        return true;\n    }\n    return e.getButton() > 3;\n  }","id":48420,"modified_method":"/**\n   * @return <code>true<\/code> if and only if the passed event is already dispatched by the\n   *         <code>IdeMouseEventDispatcher<\/code> and there is no need for any other processing of the event.\n   *         If the method returns <code>false<\/code> then it means that the event should be delivered\n   *         to normal event dispatching.\n   */\n  public boolean dispatchMouseEvent(MouseEvent e) {\n    Component c = e.getComponent();\n\n    //frame activation by mouse click\n    if (e.getID() == MOUSE_PRESSED && c instanceof IdeFrame && !c.hasFocus()) {\n      IdeFocusManager focusManager = IdeFocusManager.getGlobalInstance();\n      if (focusManager instanceof FocusManagerImpl) {\n        Component at = SwingUtilities.getDeepestComponentAt(c, e.getX(), e.getY());\n        if (at != null && at.isFocusable()) {\n          ((FocusManagerImpl)focusManager).setLastFocusedAtDeactivation((IdeFrame)c, at);\n        }\n      }\n    }\n\n    if (SystemInfo.isXWindow && e.isPopupTrigger() && e.getButton() != 3) {\n      // we can do better than silly triggering popup on everything but left click\n      resetPopupTrigger(e);\n    }\n\n    boolean ignore = false;\n    if (!(e.getID() == MouseEvent.MOUSE_PRESSED ||\n          e.getID() == MouseEvent.MOUSE_RELEASED ||\n          e.getID() == MOUSE_CLICKED)) {\n      ignore = true;\n    }\n\n    patchClickCount(e);\n\n    if (e.isConsumed()\n        || e.isPopupTrigger()\n        || (e.getButton() > 3 ? e.getID() != MOUSE_PRESSED : e.getID() != MOUSE_RELEASED)\n        || e.getClickCount() < 1\n        || e.getButton() == MouseEvent.NOBUTTON) { // See #16995. It did happen\n      ignore = true;\n    }\n\n    int modifiers = e.getModifiers();\n    int modifiersEx = e.getModifiersEx();\n    if (e.getID() == MOUSE_PRESSED) {\n      myPressedModifiersStored = true;\n      myModifiers = modifiers;\n      myModifiersEx = modifiersEx;\n    }\n    else if (e.getID() == MOUSE_RELEASED) {\n      if (myPressedModifiersStored) {\n        myPressedModifiersStored = false;\n        modifiers = myModifiers;\n        modifiersEx = myModifiersEx;\n      }\n    }\n\n    final JRootPane root = findRoot(e);\n    if (root != null) {\n      BlockState blockState = myRootPane2BlockedId.get(root);\n      if (blockState != null) {\n        if (SWING_EVENTS_PRIORITY.indexOf(blockState.currentEventId) < SWING_EVENTS_PRIORITY.indexOf(e.getID())) {\n          blockState.currentEventId = e.getID();\n          if (blockState.blockMode == IdeEventQueue.BlockMode.COMPLETE) {\n            return true;\n          }\n          else {\n            ignore = true;\n          }\n        } else {\n          myRootPane2BlockedId.remove(root);\n        }\n      }\n    }\n\n    if (c == null) {\n      throw new IllegalStateException(\"component cannot be null\");\n    }\n    c = SwingUtilities.getDeepestComponentAt(c, e.getX(), e.getY());\n\n    if (c instanceof IdeGlassPaneImpl) {\n      c = ((IdeGlassPaneImpl)c).getTargetComponentFor(e);\n    }\n\n    if (c == null) { // do nothing if component doesn't contains specified point\n      return false;\n    }\n\n    if (isHorizontalScrolling(c, e)) {\n      boolean done = doHorizontalScrolling(c, (MouseWheelEvent)e);\n      if (done) return true;\n    }\n\n    if (ignore) return false;\n\n    // avoid \"cyclic component initialization error\" in case of dialogs shown because of component initialization failure\n    if (!KeymapManagerImpl.ourKeymapManagerInitialized) {\n      return false;\n    }\n\n    final MouseShortcut shortcut = new MouseShortcut(e.getButton(), modifiersEx, e.getClickCount());\n    fillActionsList(c, shortcut, IdeKeyEventDispatcher.isModalContext(c));\n    ActionManagerEx actionManager = ActionManagerEx.getInstanceEx();\n    if (actionManager != null) {\n      AnAction[] actions = myActions.toArray(new AnAction[myActions.size()]);\n      for (AnAction action : actions) {\n        DataContext dataContext = DataManager.getInstance().getDataContext(c);\n        Presentation presentation = myPresentationFactory.getPresentation(action);\n        AnActionEvent actionEvent = new AnActionEvent(e, dataContext, ActionPlaces.MAIN_MENU, presentation,\n                                                      ActionManager.getInstance(),\n                                                      modifiers);\n        action.beforeActionPerformedUpdate(actionEvent);\n\n        if (presentation.isEnabled()) {\n          actionManager.fireBeforeActionPerformed(action, dataContext, actionEvent);\n          final Component context = PlatformDataKeys.CONTEXT_COMPONENT.getData(dataContext);\n\n          if (context != null && !context.isShowing()) continue;\n\n          action.actionPerformed(actionEvent);\n          e.consume();\n        }\n      }\n      if (actions.length > 0 && e.isConsumed())\n        return true;\n    }\n    return e.getButton() > 3;\n  }","commit_id":"7ef4b6d7e4104ca0e9ebfb874e93e444911e4133","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setUp() throws Exception {\n    assumeFalse(GraphicsEnvironment.isHeadless());\n\n    super.setUp();\n\n    ActionManager.getInstance().registerAction(OUR_TEST_ACTION, new EmptyAction());\n\n    keymap = new KeymapImpl();\n    keymap.setName(OUR_KEYMAP_NAME);\n    keymap.addShortcut(OUR_TEST_ACTION, OUR_SHORTCUT);\n    KeymapManagerEx.getInstanceEx().getSchemesManager().addNewScheme(keymap, false);\n    mySavedKeymap = KeymapManagerEx.getInstanceEx().getActiveKeymap();\n    KeymapManagerEx.getInstanceEx().setActiveKeymap(keymap);\n\n    myEventSource = new JFrame();\n    myEventSource.setSize(1,1);\n  }","id":48421,"modified_method":"public void setUp() throws Exception {\n    assumeFalse(GraphicsEnvironment.isHeadless());\n\n    super.setUp();\n\n    ActionManager.getInstance().registerAction(OUR_TEST_ACTION, new EmptyAction());\n\n    keymap = new KeymapImpl();\n    keymap.setName(OUR_KEYMAP_NAME);\n    keymap.addShortcut(OUR_TEST_ACTION, OUR_SHORTCUT);\n    keymap.addShortcut(OUR_TEST_ACTION, OUR_SHORTCUT_WITH_MODIFIER);\n    KeymapManagerEx.getInstanceEx().getSchemesManager().addNewScheme(keymap, false);\n    mySavedKeymap = KeymapManagerEx.getInstanceEx().getActiveKeymap();\n    KeymapManagerEx.getInstanceEx().setActiveKeymap(keymap);\n\n    myEventSource = new JFrame();\n    myEventSource.setSize(1,1);\n  }","commit_id":"7ef4b6d7e4104ca0e9ebfb874e93e444911e4133","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testActionTriggering() throws Exception {\n    IdeMouseEventDispatcher dispatcher = new IdeMouseEventDispatcher();\n\n    assertFalse(dispatcher.dispatchMouseEvent(new MouseEvent(myEventSource, MouseEvent.MOUSE_PRESSED, 0, 0, 0, 0, 1, false, MouseEvent.BUTTON2)));\n    assertTrue(dispatcher.dispatchMouseEvent(new MouseEvent(myEventSource, MouseEvent.MOUSE_RELEASED, 0, 0, 0, 0, 1, false, MouseEvent.BUTTON2)));\n    assertFalse(dispatcher.dispatchMouseEvent(new MouseEvent(myEventSource, MouseEvent.MOUSE_CLICKED, 0, 0, 0, 0, 1, false, MouseEvent.BUTTON2)));\n    assertEquals(1, myActionExecutionCount);\n  }","id":48422,"modified_method":"public void testActionTriggering() throws Exception {\n    assertFalse(myDispatcher.dispatchMouseEvent(new MouseEvent(myEventSource, MouseEvent.MOUSE_PRESSED, 0, 0, 0, 0, 1, false, MouseEvent.BUTTON2)));\n    assertTrue(myDispatcher.dispatchMouseEvent(new MouseEvent(myEventSource, MouseEvent.MOUSE_RELEASED, 0, 0, 0, 0, 1, false, MouseEvent.BUTTON2)));\n    assertFalse(myDispatcher.dispatchMouseEvent(new MouseEvent(myEventSource, MouseEvent.MOUSE_CLICKED, 0, 0, 0, 0, 1, false, MouseEvent.BUTTON2)));\n    assertEquals(1, myActionExecutionCount);\n  }","commit_id":"7ef4b6d7e4104ca0e9ebfb874e93e444911e4133","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testActionBlocking() throws Exception {\n    IdeMouseEventDispatcher dispatcher = new IdeMouseEventDispatcher();\n\n    assertFalse(dispatcher.dispatchMouseEvent(new MouseEvent(myEventSource, MouseEvent.MOUSE_PRESSED, 0, 0, 0, 0, 1, false, MouseEvent.BUTTON2)));\n    MouseEvent dragEvent = new MouseEvent(myEventSource, MouseEvent.MOUSE_DRAGGED, 0, 0, 0, 0, 0, false, MouseEvent.BUTTON2);\n    assertFalse(dispatcher.dispatchMouseEvent(dragEvent));\n    dispatcher.blockNextEvents(dragEvent, IdeEventQueue.BlockMode.ACTIONS);\n    assertFalse(dispatcher.dispatchMouseEvent(new MouseEvent(myEventSource, MouseEvent.MOUSE_RELEASED, 0, 0, 0, 0, 1, false, MouseEvent.BUTTON2)));\n    assertEquals(0, myActionExecutionCount);\n  }","id":48423,"modified_method":"public void testActionBlocking() throws Exception {\n    assertFalse(myDispatcher.dispatchMouseEvent(new MouseEvent(myEventSource, MouseEvent.MOUSE_PRESSED, 0, 0, 0, 0, 1, false, MouseEvent.BUTTON2)));\n    MouseEvent dragEvent = new MouseEvent(myEventSource, MouseEvent.MOUSE_DRAGGED, 0, 0, 0, 0, 0, false, MouseEvent.BUTTON2);\n    assertFalse(myDispatcher.dispatchMouseEvent(dragEvent));\n    myDispatcher.blockNextEvents(dragEvent, IdeEventQueue.BlockMode.ACTIONS);\n    assertFalse(myDispatcher.dispatchMouseEvent(new MouseEvent(myEventSource, MouseEvent.MOUSE_RELEASED, 0, 0, 0, 0, 1, false, MouseEvent.BUTTON2)));\n    assertEquals(0, myActionExecutionCount);\n  }","commit_id":"7ef4b6d7e4104ca0e9ebfb874e93e444911e4133","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MapMouseEvent(MouseEvent e, float mapX, float mapY, LWComponent hitComponent, Rectangle selectorBox)\n    {\n        super(e.getComponent(),\n              e.getID(),\n              e.getWhen(),\n              e.getModifiers(),\n              e.getX(),\n              e.getY(),\n              e.getClickCount(),\n              e.isPopupTrigger(),\n              e.getButton());\n\n        this.mapX = mapX;\n        this.mapY = mapY;\n        this.hitComponent = hitComponent;\n        this.selectorBox = selectorBox;\n    }","id":48424,"modified_method":"public MapMouseEvent(MouseEvent e, float mapX, float mapY, LWComponent hitComponent, Rectangle selectorBox)\n    {\n        super(e.getComponent(),\n              e.getID(),\n              e.getWhen(),\n              e.getModifiers() | e.getModifiersEx(),\n              e.getX(),\n              e.getY(),\n              e.getClickCount(),\n              e.isPopupTrigger(),\n              e.getButton());\n\n        this.mapX = mapX;\n        this.mapY = mapY;\n        this.hitComponent = hitComponent;\n        this.selectorBox = selectorBox;\n    }","commit_id":"8434d3e65d34b557cc1b093a13250a89a8b160c7","url":"https://github.com/VUE/VUE"},{"original_method":"private AWTEvent mapMetaState(AWTEvent e) {\n    if (myWinMetaPressed) {\n      Application app = ApplicationManager.getApplication();\n      if (app == null || !app.isActive()) {\n        myWinMetaPressed = false;\n        return e;\n      }\n    }\n\n    if (e instanceof KeyEvent) {\n      KeyEvent ke = (KeyEvent)e;\n      if (ke.getKeyCode() == KeyEvent.VK_WINDOWS) {\n        if (ke.getID() == KeyEvent.KEY_PRESSED) myWinMetaPressed = true;\n        if (ke.getID() == KeyEvent.KEY_RELEASED) myWinMetaPressed = false;\n        return new KeyEvent(ke.getComponent(), ke.getID(), ke.getWhen(), ke.getModifiers(), KeyEvent.VK_META, ke.getKeyChar(),\n                            ke.getKeyLocation());\n      }\n      if (myWinMetaPressed) {\n        return new KeyEvent(ke.getComponent(), ke.getID(), ke.getWhen(), ke.getModifiers() | InputEvent.META_MASK, ke.getKeyCode(),\n                            ke.getKeyChar(), ke.getKeyLocation());\n      }\n    }\n\n    if (myWinMetaPressed && e instanceof MouseEvent && ((MouseEvent)e).getButton() != 0) {\n      MouseEvent me = (MouseEvent)e;\n      return new MouseEvent(me.getComponent(), me.getID(), me.getWhen(), me.getModifiers() | me.getModifiersEx() | InputEvent.META_MASK, me.getX(), me.getY(),\n                            me.getClickCount(), me.isPopupTrigger(), me.getButton());\n    }\n\n    return e;\n  }","id":48425,"modified_method":"private AWTEvent mapMetaState(AWTEvent e) {\n    if (myWinMetaPressed) {\n      Application app = ApplicationManager.getApplication();\n      if (app == null || !app.isActive()) {\n        myWinMetaPressed = false;\n        return e;\n      }\n    }\n\n    if (e instanceof KeyEvent) {\n      KeyEvent ke = (KeyEvent)e;\n      if (ke.getKeyCode() == KeyEvent.VK_WINDOWS) {\n        if (ke.getID() == KeyEvent.KEY_PRESSED) myWinMetaPressed = true;\n        if (ke.getID() == KeyEvent.KEY_RELEASED) myWinMetaPressed = false;\n        return new KeyEvent(ke.getComponent(), ke.getID(), ke.getWhen(), ke.getModifiers() | ke.getModifiersEx(), KeyEvent.VK_META, ke.getKeyChar(),\n                            ke.getKeyLocation());\n      }\n      if (myWinMetaPressed) {\n        return new KeyEvent(ke.getComponent(), ke.getID(), ke.getWhen(), ke.getModifiers() | ke.getModifiersEx() | InputEvent.META_MASK, ke.getKeyCode(),\n                            ke.getKeyChar(), ke.getKeyLocation());\n      }\n    }\n\n    if (myWinMetaPressed && e instanceof MouseEvent && ((MouseEvent)e).getButton() != 0) {\n      MouseEvent me = (MouseEvent)e;\n      return new MouseEvent(me.getComponent(), me.getID(), me.getWhen(), me.getModifiers() | me.getModifiersEx() | InputEvent.META_MASK, me.getX(), me.getY(),\n                            me.getClickCount(), me.isPopupTrigger(), me.getButton());\n    }\n\n    return e;\n  }","commit_id":"c68694f4da707395c3d1af44e842ef2a64f5bc84","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void checkFinalFieldAccess(Expression expression) {\n        if (!(expression instanceof VariableExpression)) return;\n        boolean isFinal, isStatic, error;\n        int modifiers = 0;\n        VariableExpression ve = (VariableExpression) expression;\n        Variable v = ve.getAccessedVariable();\n        if (v instanceof PropertyNode) {\n            PropertyNode pn = (PropertyNode) v;\n            modifiers = pn.getModifiers();\n        } else if (v instanceof FieldNode) {\n            FieldNode fn = (FieldNode) v;\n            modifiers = fn.getModifiers();\n        }\n        /*\n         *  if it is static final but not accessed inside a static constructor, or,\n         *  if it is an instance final but not accessed inside a instance constructor, it is an error\n         */\n        isFinal = (modifiers & Opcodes.ACC_FINAL) != 0;\n        isStatic = (modifiers & Opcodes.ACC_STATIC) != 0;\n        error = isFinal && ((isStatic && !inStaticConstructor) || (!isStatic && !inConstructor));\n\n        if (error) addError(\"cannnot access final field or property \" +\n                            \"outside of constructor.\", expression);\n    }","id":48426,"modified_method":"private void checkFinalFieldAccess(Expression expression) {\n        if (!(expression instanceof VariableExpression)) return;\n        VariableExpression ve = (VariableExpression) expression;\n        Variable v = ve.getAccessedVariable();\n        if (v instanceof FieldNode) {\n            FieldNode fn = (FieldNode) v;\n            int modifiers = fn.getModifiers();\n\n            /*\n             *  if it is static final but not accessed inside a static constructor, or,\n             *  if it is an instance final but not accessed inside a instance constructor, it is an error\n             */\n            boolean isFinal = (modifiers & Opcodes.ACC_FINAL) != 0;\n            boolean isStatic = (modifiers & Opcodes.ACC_STATIC) != 0;\n            boolean error = isFinal && ((isStatic && !inStaticConstructor) || (!isStatic && !inConstructor));\n\n            if (error) addError(\"cannot modify\" + (isStatic ? \" static\" : \"\") + \" final field '\" + fn.getName() +\n                    \"' outside of \" + (isStatic ? \"static initialization block.\" : \"constructor.\"), expression);\n        }\n    }","commit_id":"1d97569ff82ecc0f7a86560804b8932f40c421f5","url":"https://github.com/apache/groovy"},{"original_method":"public long[] getOrCreateIds( String[] labels )\n    {\n        long[] result = new long[labels.length];\n        for ( int i = 0; i < labels.length; i++ )\n        {\n            result[i] = getOrCreateId( labels[i] );\n        }\n        return result;\n    }","id":48427,"modified_method":"/**\n     * Converts label names into label ids. Also sorts and deduplicates.\n     */\n    public long[] getOrCreateIds( String[] labels )\n    {\n        long[] result = new long[labels.length];\n        int from, to;\n        for ( from = 0, to = 0; from < labels.length; from++ )\n        {\n            int id = getOrCreateId( labels[from] );\n            if ( !contains( result, id, to ) )\n            {\n                result[to++] = id;\n            }\n        }\n        if ( to < from )\n        {\n            result = Arrays.copyOf( result, to );\n        }\n        Arrays.sort( result );\n        return result;\n    }","commit_id":"9f1ea98df1d0ca1712546e9040fb1897f45ba17f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void verifyImportedData( List<InputNode> nodeData, List<InputRelationship> relationshipData )\n    {\n        // Build up expected data for the verification below\n        Map<String/*id*/, InputNode> expectedNodes = new HashMap<>();\n        Map<String,String[]> expectedNodeNames = new HashMap<>();\n        Map<String/*start node name*/, Map<String/*end node name*/, Map<String, AtomicInteger>>> expectedRelationships =\n                new AutoCreatingHashMap<>( nested( String.class, nested( String.class, values( AtomicInteger.class ) ) ) );\n        Map<String, AtomicLong> expectedNodeCounts = new AutoCreatingHashMap<>( values( AtomicLong.class ) );\n        Map<String, Map<String, Map<String, AtomicLong>>> expectedRelationshipCounts =\n                new AutoCreatingHashMap<>( nested( String.class, nested( String.class, values( AtomicLong.class ) ) ) );\n        buildUpExpectedData( nodeData, relationshipData, expectedNodes, expectedNodeNames, expectedRelationships,\n                expectedNodeCounts, expectedRelationshipCounts );\n\n        // Do the verification\n        GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase( directory.absolutePath() );\n        try ( Transaction tx = db.beginTx() )\n        {\n            // Verify nodes\n            for ( Node node : GlobalGraphOperations.at( db ).getAllNodes() )\n            {\n                String name = (String) node.getProperty( \"name\" );\n                String[] labels = expectedNodeNames.remove( name );\n                assertArrayEquals( labels, names( node.getLabels() ) );\n            }\n            assertEquals( 0, expectedNodeNames.size() );\n\n            // Verify relationships\n            for ( Relationship relationship : GlobalGraphOperations.at( db ).getAllRelationships() )\n            {\n                String startNodeName = (String) relationship.getStartNode().getProperty( \"name\" );\n                Map<String, Map<String, AtomicInteger>> inner = expectedRelationships.get( startNodeName );\n                String endNodeName = (String) relationship.getEndNode().getProperty( \"name\" );\n                Map<String, AtomicInteger> innerInner = inner.get( endNodeName );\n                String type = relationship.getType().name();\n                int countAfterwards = innerInner.get( type ).decrementAndGet();\n                assertThat( countAfterwards, greaterThanOrEqualTo( 0 ) );\n                if ( countAfterwards == 0 )\n                {\n                    innerInner.remove( type );\n                    if ( innerInner.isEmpty() )\n                    {\n                        inner.remove( endNodeName );\n                        if ( inner.isEmpty() )\n                        {\n                            expectedRelationships.remove( startNodeName );\n                        }\n                    }\n                }\n            }\n            assertEquals( 0, expectedRelationships.size() );\n\n            // Verify counts, TODO how to get counts store other than this way?\n            NeoStore neoStore = ((GraphDatabaseAPI)db).getDependencyResolver().resolveDependency(\n                    NeoStoreProvider.class ).evaluate();\n            Function<String, Integer> labelTranslationTable =\n                    translationTable( neoStore.getLabelTokenStore(), ReadOperations.ANY_LABEL );\n            for ( Pair<Integer,Long> count : allNodeCounts( labelTranslationTable, expectedNodeCounts ) )\n            {\n                assertEquals( \"Label count mismatch for label \" + count.first(),\n                        count.other().longValue(),\n                        neoStore.getCounts().nodeCount( count.first().intValue() ) );\n            }\n\n            Function<String, Integer> relationshipTypeTranslationTable =\n                    translationTable( neoStore.getRelationshipTypeTokenStore(), ReadOperations.ANY_RELATIONSHIP_TYPE );\n            for ( Pair<RelationshipCountKey,Long> count : allRelationshipCounts( labelTranslationTable,\n                    relationshipTypeTranslationTable, expectedRelationshipCounts ) )\n            {\n                RelationshipCountKey key = count.first();\n                assertEquals( \"Label count mismatch for label \" + key,\n                        count.other().longValue(),\n                        neoStore.getCounts().relationshipCount( key.startLabel, key.type, key.endLabel ) );\n            }\n\n            tx.success();\n        }\n        finally\n        {\n            db.shutdown();\n        }\n    }","id":48428,"modified_method":"private void verifyImportedData( List<InputNode> nodeData, List<InputRelationship> relationshipData )\n    {\n        // Build up expected data for the verification below\n        Map<String/*id*/, InputNode> expectedNodes = new HashMap<>();\n        Map<String,String[]> expectedNodeNames = new HashMap<>();\n        Map<String/*start node name*/, Map<String/*end node name*/, Map<String, AtomicInteger>>> expectedRelationships =\n                new AutoCreatingHashMap<>( nested( String.class, nested( String.class, values( AtomicInteger.class ) ) ) );\n        Map<String, AtomicLong> expectedNodeCounts = new AutoCreatingHashMap<>( values( AtomicLong.class ) );\n        Map<String, Map<String, Map<String, AtomicLong>>> expectedRelationshipCounts =\n                new AutoCreatingHashMap<>( nested( String.class, nested( String.class, values( AtomicLong.class ) ) ) );\n        buildUpExpectedData( nodeData, relationshipData, expectedNodes, expectedNodeNames, expectedRelationships,\n                expectedNodeCounts, expectedRelationshipCounts );\n\n        // Do the verification\n        GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase( directory.absolutePath() );\n        try ( Transaction tx = db.beginTx() )\n        {\n            // Verify nodes\n            for ( Node node : GlobalGraphOperations.at( db ).getAllNodes() )\n            {\n                String name = (String) node.getProperty( \"name\" );\n                String[] labels = expectedNodeNames.remove( name );\n                assertEquals( asSet( labels ), names( node.getLabels() ) );\n            }\n            assertEquals( 0, expectedNodeNames.size() );\n\n            // Verify relationships\n            for ( Relationship relationship : GlobalGraphOperations.at( db ).getAllRelationships() )\n            {\n                String startNodeName = (String) relationship.getStartNode().getProperty( \"name\" );\n                Map<String, Map<String, AtomicInteger>> inner = expectedRelationships.get( startNodeName );\n                String endNodeName = (String) relationship.getEndNode().getProperty( \"name\" );\n                Map<String, AtomicInteger> innerInner = inner.get( endNodeName );\n                String type = relationship.getType().name();\n                int countAfterwards = innerInner.get( type ).decrementAndGet();\n                assertThat( countAfterwards, greaterThanOrEqualTo( 0 ) );\n                if ( countAfterwards == 0 )\n                {\n                    innerInner.remove( type );\n                    if ( innerInner.isEmpty() )\n                    {\n                        inner.remove( endNodeName );\n                        if ( inner.isEmpty() )\n                        {\n                            expectedRelationships.remove( startNodeName );\n                        }\n                    }\n                }\n            }\n            assertEquals( 0, expectedRelationships.size() );\n\n            // Verify counts, TODO how to get counts store other than this way?\n            NeoStore neoStore = ((GraphDatabaseAPI)db).getDependencyResolver().resolveDependency(\n                    NeoStoreProvider.class ).evaluate();\n            Function<String, Integer> labelTranslationTable =\n                    translationTable( neoStore.getLabelTokenStore(), ReadOperations.ANY_LABEL );\n            for ( Pair<Integer,Long> count : allNodeCounts( labelTranslationTable, expectedNodeCounts ) )\n            {\n                assertEquals( \"Label count mismatch for label \" + count.first(),\n                        count.other().longValue(),\n                        neoStore.getCounts().nodeCount( count.first().intValue() ) );\n            }\n\n            Function<String, Integer> relationshipTypeTranslationTable =\n                    translationTable( neoStore.getRelationshipTypeTokenStore(), ReadOperations.ANY_RELATIONSHIP_TYPE );\n            for ( Pair<RelationshipCountKey,Long> count : allRelationshipCounts( labelTranslationTable,\n                    relationshipTypeTranslationTable, expectedRelationshipCounts ) )\n            {\n                RelationshipCountKey key = count.first();\n                assertEquals( \"Label count mismatch for label \" + key,\n                        count.other().longValue(),\n                        neoStore.getCounts().relationshipCount( key.startLabel, key.type, key.endLabel ) );\n            }\n\n            tx.success();\n        }\n        finally\n        {\n            db.shutdown();\n        }\n    }","commit_id":"9f1ea98df1d0ca1712546e9040fb1897f45ba17f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private String[] names( Iterable<Label> labels )\n    {\n        List<String> names = new ArrayList<>();\n        for ( Label label : labels )\n        {\n            names.add( label.name() );\n        }\n        return names.toArray( new String[names.size()] );\n    }","id":48429,"modified_method":"private Set<String> names( Iterable<Label> labels )\n    {\n        Set<String> names = new HashSet<>();\n        for ( Label label : labels )\n        {\n            names.add( label.name() );\n        }\n        return names;\n    }","commit_id":"9f1ea98df1d0ca1712546e9040fb1897f45ba17f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void countNodeLabels( Map<String, AtomicLong> nodeCounts, String[] labels )\n    {\n        for ( String labelName : labels )\n        {\n            nodeCounts.get( labelName ).incrementAndGet();\n        }\n    }","id":48430,"modified_method":"private void countNodeLabels( Map<String, AtomicLong> nodeCounts, String[] labels )\n    {\n        Set<String> seen = new HashSet<>();\n        for ( String labelName : labels )\n        {\n            if ( seen.add( labelName ) )\n            {\n                nodeCounts.get( labelName ).incrementAndGet();\n            }\n        }\n    }","commit_id":"9f1ea98df1d0ca1712546e9040fb1897f45ba17f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void buildUpExpectedData(\n            List<InputNode> nodeData,\n            List<InputRelationship> relationshipData,\n            Map<String, InputNode> expectedNodes,\n            Map<String, String[]> expectedNodeNames,\n            Map<String, Map<String, Map<String, AtomicInteger>>> expectedRelationships,\n            Map<String, AtomicLong> nodeCounts,\n            Map<String, Map<String, Map<String, AtomicLong>>> relationshipCounts )\n    {\n        for ( InputNode node : nodeData )\n        {\n            expectedNodes.put( (String) node.id(), node );\n            expectedNodeNames.put( nameOf( node ), node.labels() );\n            countNodeLabels( nodeCounts, node.labels() );\n        }\n        for ( InputRelationship relationship : relationshipData )\n        {\n            // Expected relationship counts per node, type and direction\n            InputNode startNode = expectedNodes.get( relationship.startNode() );\n            InputNode endNode = expectedNodes.get( relationship.endNode() );\n            {\n                expectedRelationships.get( nameOf( startNode ) )\n                                     .get( nameOf( endNode ) )\n                                     .get( relationship.type() )\n                                     .incrementAndGet();\n            }\n\n            // Expected counts per start/end node label ids\n            // Let's do what CountsState#addRelationship does, roughly\n            relationshipCounts.get( null ).get( null ).get( null ).incrementAndGet();\n            relationshipCounts.get( null ).get( relationship.type() ).get( null ).incrementAndGet();\n            for ( String startNodeLabelName : startNode.labels() )\n            {\n                Map<String, Map<String, AtomicLong>> startLabelCounts = relationshipCounts.get( startNodeLabelName );\n                startLabelCounts.get( null ).get( null ).incrementAndGet();\n                Map<String, AtomicLong> typeCounts = startLabelCounts.get( relationship.type() );\n                typeCounts.get( null ).incrementAndGet();\n                for ( String endNodeLabelName : endNode.labels() )\n                {\n                    startLabelCounts.get( null ).get( endNodeLabelName ).incrementAndGet();\n                    typeCounts.get( endNodeLabelName ).incrementAndGet();\n                }\n            }\n            for ( String endNodeLabelName : endNode.labels() )\n            {\n                relationshipCounts.get( null ).get( null ).get( endNodeLabelName ).incrementAndGet();\n                relationshipCounts.get( null ).get( relationship.type() ).get( endNodeLabelName ).incrementAndGet();\n            }\n        }\n    }","id":48431,"modified_method":"private void buildUpExpectedData(\n            List<InputNode> nodeData,\n            List<InputRelationship> relationshipData,\n            Map<String, InputNode> expectedNodes,\n            Map<String, String[]> expectedNodeNames,\n            Map<String, Map<String, Map<String, AtomicInteger>>> expectedRelationships,\n            Map<String, AtomicLong> nodeCounts,\n            Map<String, Map<String, Map<String, AtomicLong>>> relationshipCounts )\n    {\n        for ( InputNode node : nodeData )\n        {\n            expectedNodes.put( (String) node.id(), node );\n            expectedNodeNames.put( nameOf( node ), node.labels() );\n            countNodeLabels( nodeCounts, node.labels() );\n        }\n        for ( InputRelationship relationship : relationshipData )\n        {\n            // Expected relationship counts per node, type and direction\n            InputNode startNode = expectedNodes.get( relationship.startNode() );\n            InputNode endNode = expectedNodes.get( relationship.endNode() );\n            {\n                expectedRelationships.get( nameOf( startNode ) )\n                                     .get( nameOf( endNode ) )\n                                     .get( relationship.type() )\n                                     .incrementAndGet();\n            }\n\n            // Expected counts per start/end node label ids\n            // Let's do what CountsState#addRelationship does, roughly\n            relationshipCounts.get( null ).get( null ).get( null ).incrementAndGet();\n            relationshipCounts.get( null ).get( relationship.type() ).get( null ).incrementAndGet();\n            for ( String startNodeLabelName : asSet( startNode.labels() ) )\n            {\n                Map<String, Map<String, AtomicLong>> startLabelCounts = relationshipCounts.get( startNodeLabelName );\n                startLabelCounts.get( null ).get( null ).incrementAndGet();\n                Map<String, AtomicLong> typeCounts = startLabelCounts.get( relationship.type() );\n                typeCounts.get( null ).incrementAndGet();\n                for ( String endNodeLabelName : asSet( endNode.labels() ) )\n                {\n                    startLabelCounts.get( null ).get( endNodeLabelName ).incrementAndGet();\n                    typeCounts.get( endNodeLabelName ).incrementAndGet();\n                }\n            }\n            for ( String endNodeLabelName : asSet( endNode.labels() ) )\n            {\n                relationshipCounts.get( null ).get( null ).get( endNodeLabelName ).incrementAndGet();\n                relationshipCounts.get( null ).get( relationship.type() ).get( endNodeLabelName ).incrementAndGet();\n            }\n        }\n    }","commit_id":"9f1ea98df1d0ca1712546e9040fb1897f45ba17f","url":"https://github.com/neo4j/neo4j"},{"original_method":"public String generate(Link link)\n    {\n        return link.getReference();\n    }","id":48432,"modified_method":"/**\n     * {@inheritDoc}\n     * @see org.xwiki.rendering.renderer.LinkLabelGenerator#generate(org.xwiki.rendering.listener.Link)\n     */\n    public String generate(Link link)\n    {\n        return link.getReference();\n    }","commit_id":"000d353c2c1e5d15f41e14f15d00ae984ff7aaf6","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see XHTMLLinkRenderer#endLink(Link, boolean, Map)\n     */\n    public void endLink(Link link, boolean isFreeStandingURI, Map<String, String> parameters)\n    {\n        // If there was no link content then generate it based on the passed reference\n        if (!this.hasLabel) {\n            getXHTMLWikiPrinter().printXMLStartElement(SPAN, new String[][] {{CLASS, \"wikigeneratedlinkcontent\"}});\n            if (link.getType() == LinkType.DOCUMENT) {\n                getXHTMLWikiPrinter().printXML(this.linkLabelGenerator.generate(link));\n            } else if (link.getType() == LinkType.URI) {\n                String label;\n                // Special handling for MAILTO and ATTACH URIs for which we don't want to print the scheme in the label\n                // (so that they appear displayed a nicer way for users).\n                if (link.getReference().startsWith(ATTACH)) {\n                    // Only display the attachment name.\n                    Attachment attachment = this.attachmentParser.parse(link.getReference().substring(ATTACH.length()));\n                    label = attachment.getAttachmentName();\n                } else if (link.getReference().startsWith(MAILTO)) {\n                    label = link.getReference().substring(MAILTO.length());\n                    // For MAILTO also remove the query string part from the label (we only want the email address).\n                    int queryStringPosition = label.indexOf(\"?\");\n                    if (queryStringPosition > -1) {\n                        label = label.substring(0, queryStringPosition);\n                    }\n                } else {\n                    label = link.getReference();\n                }\n                getXHTMLWikiPrinter().printXML(label);\n            } else {\n                getXHTMLWikiPrinter().printXML(link.getReference());\n            }\n            getXHTMLWikiPrinter().printXMLEndElement(SPAN);\n        }\n\n        getXHTMLWikiPrinter().printXMLEndElement(ANCHOR);\n        getXHTMLWikiPrinter().printXMLEndElement(SPAN);\n    }","id":48433,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see XHTMLLinkRenderer#endLink(Link, boolean, Map)\n     */\n    public void endLink(Link link, boolean isFreeStandingURI, Map<String, String> parameters)\n    {\n        // If there was no link content then generate it based on the passed reference\n        if (!this.hasLabel) {\n            getXHTMLWikiPrinter().printXMLStartElement(SPAN, new String[][] {{CLASS, \"wikigeneratedlinkcontent\"}});\n            if (link.getType() == LinkType.DOCUMENT) {\n                getXHTMLWikiPrinter().printXML(this.linkLabelGenerator.generate(link));\n            } else if (link.getType() == LinkType.URI) {\n\n                // Look for a component implementing URILabelGenerator with a role hint matching the URI scheme.\n                // If not found then use the full reference as the label.\n                int schemeSeparator = link.getReference().indexOf(\":\");\n\n                // If there's no scheme separator then use the full reference as the label. Note that this can happen\n                // when we're not in wiki mode (since all links are considered URIs when not in wiki mode).\n                String label;\n                if (schemeSeparator > -1) {\n                    String scheme = link.getReference().substring(0, schemeSeparator);\n                    try {\n                        URILabelGenerator uriLabelGenerator = this.componentManager.lookup(URILabelGenerator.class, scheme);\n                        label = uriLabelGenerator.generateLabel(link);\n                    } catch (ComponentLookupException e) {\n                        label = link.getReference();\n                    }\n                } else {\n                    label = link.getReference();\n                }\n\n                getXHTMLWikiPrinter().printXML(label);\n            } else {\n                getXHTMLWikiPrinter().printXML(link.getReference());\n            }\n            getXHTMLWikiPrinter().printXMLEndElement(SPAN);\n        }\n\n        getXHTMLWikiPrinter().printXMLEndElement(ANCHOR);\n        getXHTMLWikiPrinter().printXMLEndElement(SPAN);\n    }","commit_id":"000d353c2c1e5d15f41e14f15d00ae984ff7aaf6","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public static junit.framework.Test suite() throws Exception\n    {\n        RenderingTestSuite suite = new RenderingTestSuite(\"Rendering tests not requiring the wiki notion\");\n\n        // Embedded documents\n        suite.addTestsFromResource(\"group/group1\", false);\n        suite.addTestsFromResource(\"group/group2\", false);\n        suite.addTestsFromResource(\"group/group3\", false);\n        suite.addTestsFromResource(\"group/group4\", false);\n        suite.addTestsFromResource(\"group/group5\", false);\n        suite.addTestsFromResource(\"group/group6\", false);\n        suite.addTestsFromResource(\"group/group7\", false);\n        suite.addTestsFromResource(\"group/group8\", false);\n        suite.addTestsFromResource(\"group/group9\", false);\n        suite.addTestsFromResource(\"group/group10\", false);\n        suite.addTestsFromResource(\"group/group11\", false);\n        suite.addTestsFromResource(\"group/group12\", false);\n\n        // Text formatting\n        suite.addTestsFromResource(\"bold/bold1\", false);\n        suite.addTestsFromResource(\"bold/bold2\", false);\n        suite.addTestsFromResource(\"bold/bold3\", false);\n        suite.addTestsFromResource(\"bold/bold4\", false);\n        suite.addTestsFromResource(\"bold/bold5\", false);\n        suite.addTestsFromResource(\"bold/bold6\", false);\n        suite.addTestsFromResource(\"bold/bold7\", false);\n        suite.addTestsFromResource(\"bold/bold8\", false);\n        suite.addTestsFromResource(\"bold/bold9\", false);\n        suite.addTestsFromResource(\"italic/italic1\", false);\n        suite.addTestsFromResource(\"italic/italic2\", false);\n        suite.addTestsFromResource(\"italic/italic3\", false);\n        suite.addTestsFromResource(\"italic/italic4\", false);\n        suite.addTestsFromResource(\"italic/italic5\", false);\n        suite.addTestsFromResource(\"italic/italic6\", false);\n        suite.addTestsFromResource(\"italic/italic7\", false);\n        suite.addTestsFromResource(\"italic/italic8\", false);\n        suite.addTestsFromResource(\"underline/underline1\", false);\n        suite.addTestsFromResource(\"underline/underline2\", false);\n        suite.addTestsFromResource(\"strikedout/strikedout1\", false);\n        suite.addTestsFromResource(\"strikedout/strikedout2\", false);\n        suite.addTestsFromResource(\"strikedout/strikedout3\", false);\n        suite.addTestsFromResource(\"strikedout/strikedout4\", false);\n        suite.addTestsFromResource(\"superscript/superscript1\", false);\n        suite.addTestsFromResource(\"superscript/superscript2\", false);\n        suite.addTestsFromResource(\"subscript/subscript1\", false);\n        suite.addTestsFromResource(\"subscript/subscript2\", false);\n        suite.addTestsFromResource(\"monospace/monospace1\", false);\n        suite.addTestsFromResource(\"monospace/monospace2\", false);\n        suite.addTestsFromResource(\"verbatim/verbatim1\", false);\n        suite.addTestsFromResource(\"verbatim/verbatim2\", false);\n        suite.addTestsFromResource(\"verbatim/verbatim3\", false);\n        suite.addTestsFromResource(\"verbatim/verbatim4\", false);\n        suite.addTestsFromResource(\"verbatim/verbatim5\", false);\n        suite.addTestsFromResource(\"verbatim/verbatim6\", false);\n        suite.addTestsFromResource(\"verbatim/verbatim7\", false);\n        suite.addTestsFromResource(\"verbatim/verbatim8\", false);\n\n        // Paragraphs\n        suite.addTestsFromResource(\"paragraph/paragraph1\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph2\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph3\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph4\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph5\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph6\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph7\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph8\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph9\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph10\", false);\n\n        // Tables\n        suite.addTestsFromResource(\"table/table1\", false);\n        suite.addTestsFromResource(\"table/table2\", false);\n        suite.addTestsFromResource(\"table/table3\", false);\n        suite.addTestsFromResource(\"table/table4\", false);\n        suite.addTestsFromResource(\"table/table5\", false);\n        suite.addTestsFromResource(\"table/table6\", false);\n        suite.addTestsFromResource(\"table/table7\", false);\n\n        // Macros\n        suite.addTestsFromResource(\"macros/macro1\", false);\n        suite.addTestsFromResource(\"macros/macro2\", false);\n        suite.addTestsFromResource(\"macros/macro3\", false);\n        suite.addTestsFromResource(\"macros/macro4\", false);\n        suite.addTestsFromResource(\"macros/macro5\", false);\n        suite.addTestsFromResource(\"macros/macro6\", true);\n        suite.addTestsFromResource(\"macros/macro7\", true);\n        suite.addTestsFromResource(\"macros/macro8\", true);\n        suite.addTestsFromResource(\"macros/macro9\", true);\n        suite.addTestsFromResource(\"macros/macro10\", true);\n        suite.addTestsFromResource(\"macros/macro11\", true);\n        suite.addTestsFromResource(\"macros/macro12\", true);\n        suite.addTestsFromResource(\"macros/macro13\", true);\n        suite.addTestsFromResource(\"macros/macro14\", true);\n        suite.addTestsFromResource(\"macros/macro15\", false);\n\n        // Lists\n        suite.addTestsFromResource(\"list/list1\", false);\n        suite.addTestsFromResource(\"list/list2\", false);\n        suite.addTestsFromResource(\"list/list3\", false);\n        suite.addTestsFromResource(\"list/list4\", false);\n        suite.addTestsFromResource(\"list/list5\", false);\n        suite.addTestsFromResource(\"list/list6\", false);\n        suite.addTestsFromResource(\"list/list7\", false);\n        suite.addTestsFromResource(\"list/list8\", false);\n        suite.addTestsFromResource(\"list/list9\", false);\n        suite.addTestsFromResource(\"list/list10\", false);\n        suite.addTestsFromResource(\"list/list11\", false);\n        suite.addTestsFromResource(\"list/list12\", false);\n        suite.addTestsFromResource(\"list/list13\", false);\n        suite.addTestsFromResource(\"list/list14\", false);\n        suite.addTestsFromResource(\"list/definitionlist1\", false);\n        suite.addTestsFromResource(\"list/definitionlist2\", false);\n        suite.addTestsFromResource(\"list/definitionlist3\", false);\n        suite.addTestsFromResource(\"list/definitionlist4\", false);\n        suite.addTestsFromResource(\"list/definitionlist5\", false);\n        suite.addTestsFromResource(\"list/definitionlist6\", false);\n        suite.addTestsFromResource(\"list/definitionlist7\", false);\n        suite.addTestsFromResource(\"list/definitionlist8\", false);\n\n        // Sections\n        suite.addTestsFromResource(\"section/section1\", false);\n        suite.addTestsFromResource(\"section/section2\", false);\n        suite.addTestsFromResource(\"section/section3\", true);\n        suite.addTestsFromResource(\"section/section4\", false);\n        suite.addTestsFromResource(\"section/section5\", false);\n        suite.addTestsFromResource(\"section/section6\", false);\n        suite.addTestsFromResource(\"section/section7\", false);\n        suite.addTestsFromResource(\"section/section8\", false);\n        suite.addTestsFromResource(\"section/section9\", false);\n        suite.addTestsFromResource(\"section/section10\", false);\n\n        // Escaping\n        suite.addTestsFromResource(\"escape/escape1\", false);\n        suite.addTestsFromResource(\"escape/escape2\", false);\n        suite.addTestsFromResource(\"escape/escape3\", false);\n        suite.addTestsFromResource(\"escape/escape4\", false);\n        suite.addTestsFromResource(\"escape/escape5\", false);\n        suite.addTestsFromResource(\"escape/escape6\", false);\n        suite.addTestsFromResource(\"escape/escape7\", false);\n        suite.addTestsFromResource(\"escape/escape8\", false);\n        suite.addTestsFromResource(\"escape/escape9\", false);\n        suite.addTestsFromResource(\"escape/escape10\", false);\n        suite.addTestsFromResource(\"escape/escape11\", false);\n        suite.addTestsFromResource(\"escape/escape12\", false);\n        suite.addTestsFromResource(\"escape/escape13\", false);\n        suite.addTestsFromResource(\"escape/escape14\", false);\n        suite.addTestsFromResource(\"escape/escape15\", false);\n        suite.addTestsFromResource(\"escape/escape16\", false);\n        suite.addTestsFromResource(\"escape/escape17\", false);\n        suite.addTestsFromResource(\"escape/escape18\", false);\n        suite.addTestsFromResource(\"escape/escape19\", false);\n        suite.addTestsFromResource(\"escape/escape20\", false);\n        suite.addTestsFromResource(\"escape/escape21\", false);\n        suite.addTestsFromResource(\"escape/escape22\", false);\n\n        // Other\n        suite.addTestsFromResource(\"horizontalline/horizontalline1\", false);\n        suite.addTestsFromResource(\"horizontalline/horizontalline2\", false);\n        suite.addTestsFromResource(\"horizontalline/horizontalline3\", false);\n        suite.addTestsFromResource(\"horizontalline/horizontalline4\", false);\n        suite.addTestsFromResource(\"horizontalline/horizontalline5\", false);\n        suite.addTestsFromResource(\"quote/quote1\", false);\n        suite.addTestsFromResource(\"quote/quote2\", false);\n        suite.addTestsFromResource(\"quote/quote3\", false);\n        suite.addTestsFromResource(\"quote/quote4\", false);\n        suite.addTestsFromResource(\"quote/quote5\", false);\n        suite.addTestsFromResource(\"misc/misc1\", false);\n        suite.addTestsFromResource(\"misc/misc2\", false);\n        suite.addTestsFromResource(\"misc/misc3\", false);\n        suite.addTestsFromResource(\"misc/misc4\", false);\n        suite.addTestsFromResource(\"misc/misc5\", false);\n        suite.addTestsFromResource(\"misc/misc6\", false);\n        suite.addTestsFromResource(\"misc/misc7\", false);\n        suite.addTestsFromResource(\"encoding/encoding1\", false);\n\n        // Links without WikiModel\n        suite.addTestsFromResource(\"link/links24\", false);\n\n        return new ComponentManagerTestSetup(suite);\n    }","id":48434,"modified_method":"public static junit.framework.Test suite() throws Exception\n    {\n        RenderingTestSuite suite = new RenderingTestSuite(\"Rendering tests not requiring the wiki notion\");\n        suite.addTestsFromResource(\"link/links24\", false);\n\n        // Embedded documents\n        suite.addTestsFromResource(\"group/group1\", false);\n        suite.addTestsFromResource(\"group/group2\", false);\n        suite.addTestsFromResource(\"group/group3\", false);\n        suite.addTestsFromResource(\"group/group4\", false);\n        suite.addTestsFromResource(\"group/group5\", false);\n        suite.addTestsFromResource(\"group/group6\", false);\n        suite.addTestsFromResource(\"group/group7\", false);\n        suite.addTestsFromResource(\"group/group8\", false);\n        suite.addTestsFromResource(\"group/group9\", false);\n        suite.addTestsFromResource(\"group/group10\", false);\n        suite.addTestsFromResource(\"group/group11\", false);\n        suite.addTestsFromResource(\"group/group12\", false);\n\n        // Text formatting\n        suite.addTestsFromResource(\"bold/bold1\", false);\n        suite.addTestsFromResource(\"bold/bold2\", false);\n        suite.addTestsFromResource(\"bold/bold3\", false);\n        suite.addTestsFromResource(\"bold/bold4\", false);\n        suite.addTestsFromResource(\"bold/bold5\", false);\n        suite.addTestsFromResource(\"bold/bold6\", false);\n        suite.addTestsFromResource(\"bold/bold7\", false);\n        suite.addTestsFromResource(\"bold/bold8\", false);\n        suite.addTestsFromResource(\"bold/bold9\", false);\n        suite.addTestsFromResource(\"italic/italic1\", false);\n        suite.addTestsFromResource(\"italic/italic2\", false);\n        suite.addTestsFromResource(\"italic/italic3\", false);\n        suite.addTestsFromResource(\"italic/italic4\", false);\n        suite.addTestsFromResource(\"italic/italic5\", false);\n        suite.addTestsFromResource(\"italic/italic6\", false);\n        suite.addTestsFromResource(\"italic/italic7\", false);\n        suite.addTestsFromResource(\"italic/italic8\", false);\n        suite.addTestsFromResource(\"underline/underline1\", false);\n        suite.addTestsFromResource(\"underline/underline2\", false);\n        suite.addTestsFromResource(\"strikedout/strikedout1\", false);\n        suite.addTestsFromResource(\"strikedout/strikedout2\", false);\n        suite.addTestsFromResource(\"strikedout/strikedout3\", false);\n        suite.addTestsFromResource(\"strikedout/strikedout4\", false);\n        suite.addTestsFromResource(\"superscript/superscript1\", false);\n        suite.addTestsFromResource(\"superscript/superscript2\", false);\n        suite.addTestsFromResource(\"subscript/subscript1\", false);\n        suite.addTestsFromResource(\"subscript/subscript2\", false);\n        suite.addTestsFromResource(\"monospace/monospace1\", false);\n        suite.addTestsFromResource(\"monospace/monospace2\", false);\n        suite.addTestsFromResource(\"verbatim/verbatim1\", false);\n        suite.addTestsFromResource(\"verbatim/verbatim2\", false);\n        suite.addTestsFromResource(\"verbatim/verbatim3\", false);\n        suite.addTestsFromResource(\"verbatim/verbatim4\", false);\n        suite.addTestsFromResource(\"verbatim/verbatim5\", false);\n        suite.addTestsFromResource(\"verbatim/verbatim6\", false);\n        suite.addTestsFromResource(\"verbatim/verbatim7\", false);\n        suite.addTestsFromResource(\"verbatim/verbatim8\", false);\n\n        // Paragraphs\n        suite.addTestsFromResource(\"paragraph/paragraph1\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph2\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph3\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph4\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph5\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph6\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph7\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph8\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph9\", false);\n        suite.addTestsFromResource(\"paragraph/paragraph10\", false);\n\n        // Tables\n        suite.addTestsFromResource(\"table/table1\", false);\n        suite.addTestsFromResource(\"table/table2\", false);\n        suite.addTestsFromResource(\"table/table3\", false);\n        suite.addTestsFromResource(\"table/table4\", false);\n        suite.addTestsFromResource(\"table/table5\", false);\n        suite.addTestsFromResource(\"table/table6\", false);\n        suite.addTestsFromResource(\"table/table7\", false);\n\n        // Macros\n        suite.addTestsFromResource(\"macros/macro1\", false);\n        suite.addTestsFromResource(\"macros/macro2\", false);\n        suite.addTestsFromResource(\"macros/macro3\", false);\n        suite.addTestsFromResource(\"macros/macro4\", false);\n        suite.addTestsFromResource(\"macros/macro5\", false);\n        suite.addTestsFromResource(\"macros/macro6\", true);\n        suite.addTestsFromResource(\"macros/macro7\", true);\n        suite.addTestsFromResource(\"macros/macro8\", true);\n        suite.addTestsFromResource(\"macros/macro9\", true);\n        suite.addTestsFromResource(\"macros/macro10\", true);\n        suite.addTestsFromResource(\"macros/macro11\", true);\n        suite.addTestsFromResource(\"macros/macro12\", true);\n        suite.addTestsFromResource(\"macros/macro13\", true);\n        suite.addTestsFromResource(\"macros/macro14\", true);\n        suite.addTestsFromResource(\"macros/macro15\", false);\n\n        // Lists\n        suite.addTestsFromResource(\"list/list1\", false);\n        suite.addTestsFromResource(\"list/list2\", false);\n        suite.addTestsFromResource(\"list/list3\", false);\n        suite.addTestsFromResource(\"list/list4\", false);\n        suite.addTestsFromResource(\"list/list5\", false);\n        suite.addTestsFromResource(\"list/list6\", false);\n        suite.addTestsFromResource(\"list/list7\", false);\n        suite.addTestsFromResource(\"list/list8\", false);\n        suite.addTestsFromResource(\"list/list9\", false);\n        suite.addTestsFromResource(\"list/list10\", false);\n        suite.addTestsFromResource(\"list/list11\", false);\n        suite.addTestsFromResource(\"list/list12\", false);\n        suite.addTestsFromResource(\"list/list13\", false);\n        suite.addTestsFromResource(\"list/list14\", false);\n        suite.addTestsFromResource(\"list/definitionlist1\", false);\n        suite.addTestsFromResource(\"list/definitionlist2\", false);\n        suite.addTestsFromResource(\"list/definitionlist3\", false);\n        suite.addTestsFromResource(\"list/definitionlist4\", false);\n        suite.addTestsFromResource(\"list/definitionlist5\", false);\n        suite.addTestsFromResource(\"list/definitionlist6\", false);\n        suite.addTestsFromResource(\"list/definitionlist7\", false);\n        suite.addTestsFromResource(\"list/definitionlist8\", false);\n\n        // Sections\n        suite.addTestsFromResource(\"section/section1\", false);\n        suite.addTestsFromResource(\"section/section2\", false);\n        suite.addTestsFromResource(\"section/section3\", true);\n        suite.addTestsFromResource(\"section/section4\", false);\n        suite.addTestsFromResource(\"section/section5\", false);\n        suite.addTestsFromResource(\"section/section6\", false);\n        suite.addTestsFromResource(\"section/section7\", false);\n        suite.addTestsFromResource(\"section/section8\", false);\n        suite.addTestsFromResource(\"section/section9\", false);\n        suite.addTestsFromResource(\"section/section10\", false);\n\n        // Escaping\n        suite.addTestsFromResource(\"escape/escape1\", false);\n        suite.addTestsFromResource(\"escape/escape2\", false);\n        suite.addTestsFromResource(\"escape/escape3\", false);\n        suite.addTestsFromResource(\"escape/escape4\", false);\n        suite.addTestsFromResource(\"escape/escape5\", false);\n        suite.addTestsFromResource(\"escape/escape6\", false);\n        suite.addTestsFromResource(\"escape/escape7\", false);\n        suite.addTestsFromResource(\"escape/escape8\", false);\n        suite.addTestsFromResource(\"escape/escape9\", false);\n        suite.addTestsFromResource(\"escape/escape10\", false);\n        suite.addTestsFromResource(\"escape/escape11\", false);\n        suite.addTestsFromResource(\"escape/escape12\", false);\n        suite.addTestsFromResource(\"escape/escape13\", false);\n        suite.addTestsFromResource(\"escape/escape14\", false);\n        suite.addTestsFromResource(\"escape/escape15\", false);\n        suite.addTestsFromResource(\"escape/escape16\", false);\n        suite.addTestsFromResource(\"escape/escape17\", false);\n        suite.addTestsFromResource(\"escape/escape18\", false);\n        suite.addTestsFromResource(\"escape/escape19\", false);\n        suite.addTestsFromResource(\"escape/escape20\", false);\n        suite.addTestsFromResource(\"escape/escape21\", false);\n        suite.addTestsFromResource(\"escape/escape22\", false);\n\n        // Other\n        suite.addTestsFromResource(\"horizontalline/horizontalline1\", false);\n        suite.addTestsFromResource(\"horizontalline/horizontalline2\", false);\n        suite.addTestsFromResource(\"horizontalline/horizontalline3\", false);\n        suite.addTestsFromResource(\"horizontalline/horizontalline4\", false);\n        suite.addTestsFromResource(\"horizontalline/horizontalline5\", false);\n        suite.addTestsFromResource(\"quote/quote1\", false);\n        suite.addTestsFromResource(\"quote/quote2\", false);\n        suite.addTestsFromResource(\"quote/quote3\", false);\n        suite.addTestsFromResource(\"quote/quote4\", false);\n        suite.addTestsFromResource(\"quote/quote5\", false);\n        suite.addTestsFromResource(\"misc/misc1\", false);\n        suite.addTestsFromResource(\"misc/misc2\", false);\n        suite.addTestsFromResource(\"misc/misc3\", false);\n        suite.addTestsFromResource(\"misc/misc4\", false);\n        suite.addTestsFromResource(\"misc/misc5\", false);\n        suite.addTestsFromResource(\"misc/misc6\", false);\n        suite.addTestsFromResource(\"misc/misc7\", false);\n        suite.addTestsFromResource(\"encoding/encoding1\", false);\n\n        // Links without WikiModel\n//        suite.addTestsFromResource(\"link/links24\", false);\n\n        return new ComponentManagerTestSetup(suite);\n    }","commit_id":"000d353c2c1e5d15f41e14f15d00ae984ff7aaf6","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public Shader getShader(String resId){\n\t\t\n\t\tif(shaders.get(resId) == null){\n\t\t\tBitmap bmp = RenderingIcons.getIcon(context, resId);\n\t\t\tif(bmp != null){\n\t\t\t\tShader sh = new BitmapShader(bmp, TileMode.REPEAT, TileMode.REPEAT);\n\t\t\t\tshaders.put(resId, sh);\n\t\t\t} else {\n\t\t\t\tshaders.put(resId, null);\n\t\t\t}\n\t\t}\t\n\t\treturn shaders.get(resId);\n\t}","id":48435,"modified_method":"public Shader getShader(String resId){\n\t\t\n\t\tif(shaders.get(resId) == null){\n\t\t\tBitmap bmp = RenderingIcons.getIcon(context, resId, true);\n\t\t\tif(bmp != null){\n\t\t\t\tShader sh = new BitmapShader(bmp, TileMode.REPEAT, TileMode.REPEAT);\n\t\t\t\tshaders.put(resId, sh);\n\t\t\t} else {\n\t\t\t\tshaders.put(resId, null);\n\t\t\t}\n\t\t}\t\n\t\treturn shaders.get(resId);\n\t}","commit_id":"970fdd45e13606c7b3de0f4f82358f623b3da4ed","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void drawIconsOverCanvas(RenderingContext rc, Canvas cv) {\n\t\t// 1. Sort text using text order\n\t\tCollections.sort(rc.iconsToDraw, new Comparator<IconDrawInfo>() {\n\t\t\t@Override\n\t\t\tpublic int compare(IconDrawInfo object1, IconDrawInfo object2) {\n\t\t\t\treturn object1.iconOrder - object2.iconOrder;\n\t\t\t}\n\t\t});\n\t\tQuadRect bounds = new QuadRect(0, 0, rc.width, rc.height);\n\t\tbounds.inset(-bounds.width()/4, -bounds.height()/4);\n\t\tQuadTree<RectF> boundIntersections = new QuadTree<RectF>(bounds, 4, 0.6f);\n\t\tList<RectF> result = new ArrayList<RectF>();\n\t\t\n\t\tfor (IconDrawInfo icon : rc.iconsToDraw) {\n\t\t\tif (icon.resId != null) {\n\t\t\t\tBitmap ico = RenderingIcons.getIcon(context, icon.resId);\n\t\t\t\tif (ico != null) {\n\t\t\t\t\tif (icon.y >= 0 && icon.y < rc.height && icon.x >= 0 && icon.x < rc.width) {\n\t\t\t\t\t\tint visbleWidth = icon.iconSize >= 0 ? (int) icon.iconSize : ico.getWidth();\n\t\t\t\t\t\tint visbleHeight = icon.iconSize >= 0 ? (int) icon.iconSize : ico.getHeight();\n\t\t\t\t\t\tboolean intersects = false;\n\t\t\t\t\t\tfloat coeff = rc.getDensityValue(rc.screenDensityRatio * rc.textScale);\n\t\t\t\t\t\tRectF rf = calculateRect(rc, icon, ico.getWidth(), ico.getHeight());\n\t\t\t\t\t\tRectF visibleRect = null;\n\t\t\t\t\t\tif (visbleHeight > 0 && visbleWidth > 0) {\n\t\t\t\t\t\t\tvisibleRect = calculateRect(rc, icon, visbleWidth, visbleHeight);\n\t\t\t\t\t\t\tboundIntersections.queryInBox(new QuadRect(visibleRect.left, visibleRect.top, visibleRect.right, visibleRect.bottom), result);\n\t\t\t\t\t\t\tfor (RectF r : result) {\n\t\t\t\t\t\t\t\tif (r.intersect(visibleRect)) {\n\t\t\t\t\t\t\t\t\tintersects = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!intersects) {\n\t\t\t\t\t\t\tBitmap shield = icon.shieldId == null ? null : RenderingIcons.getIcon(context, icon.shieldId);\n\t\t\t\t\t\t\tif(shield != null) {\n\t\t\t\t\t\t\t\tRectF shieldRf = calculateRect(rc, icon, shield.getWidth(), shield.getHeight());\n\t\t\t\t\t\t\t\tif (coeff != 1f) {\n\t\t\t\t\t\t\t\t\tRect src = new Rect(0, 0, shield.getWidth(), shield.getHeight());\n\t\t\t\t\t\t\t\t\tdrawBitmap(cv, shield, shieldRf, src);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdrawBitmap(cv, shield, shieldRf);\n\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (coeff != 1f) {\n\t\t\t\t\t\t\t\tRect src = new Rect(0, 0, ico.getWidth(), ico.getHeight());\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId_1), rf, src);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, ico, rf, src);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId2), rf, src);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId3), rf, src);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId4), rf, src);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId5), rf, src);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId_1), rf);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, ico, rf);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId2), rf);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId3), rf);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId4), rf);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId5), rf);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(visibleRect != null) {\n\t\t\t\t\t\t\t\tvisibleRect.inset(-visibleRect.width() / 4, -visibleRect.height() / 4);\n\t\t\t\t\t\t\t\tboundIntersections.insert(visibleRect, \n\t\t\t\t\t\t\t\t\t\tnew QuadRect(visibleRect.left, visibleRect.top, visibleRect.right, visibleRect.bottom));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (rc.interrupted) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}","id":48436,"modified_method":"private void drawIconsOverCanvas(RenderingContext rc, Canvas cv) {\n\t\t// 1. Sort text using text order\n\t\tCollections.sort(rc.iconsToDraw, new Comparator<IconDrawInfo>() {\n\t\t\t@Override\n\t\t\tpublic int compare(IconDrawInfo object1, IconDrawInfo object2) {\n\t\t\t\treturn object1.iconOrder - object2.iconOrder;\n\t\t\t}\n\t\t});\n\t\tQuadRect bounds = new QuadRect(0, 0, rc.width, rc.height);\n\t\tbounds.inset(-bounds.width()/4, -bounds.height()/4);\n\t\tQuadTree<RectF> boundIntersections = new QuadTree<RectF>(bounds, 4, 0.6f);\n\t\tList<RectF> result = new ArrayList<RectF>();\n\t\t\n\t\tfor (IconDrawInfo icon : rc.iconsToDraw) {\n\t\t\tif (icon.resId != null) {\n\t\t\t\tBitmap ico = RenderingIcons.getIcon(context, icon.resId, true);\n\t\t\t\tif (ico != null) {\n\t\t\t\t\tif (icon.y >= 0 && icon.y < rc.height && icon.x >= 0 && icon.x < rc.width) {\n\t\t\t\t\t\tint visbleWidth = icon.iconSize >= 0 ? (int) icon.iconSize : ico.getWidth();\n\t\t\t\t\t\tint visbleHeight = icon.iconSize >= 0 ? (int) icon.iconSize : ico.getHeight();\n\t\t\t\t\t\tboolean intersects = false;\n\t\t\t\t\t\tfloat coeff = rc.getDensityValue(rc.screenDensityRatio * rc.textScale);\n\t\t\t\t\t\tRectF rf = calculateRect(rc, icon, ico.getWidth(), ico.getHeight());\n\t\t\t\t\t\tRectF visibleRect = null;\n\t\t\t\t\t\tif (visbleHeight > 0 && visbleWidth > 0) {\n\t\t\t\t\t\t\tvisibleRect = calculateRect(rc, icon, visbleWidth, visbleHeight);\n\t\t\t\t\t\t\tboundIntersections.queryInBox(new QuadRect(visibleRect.left, visibleRect.top, visibleRect.right, visibleRect.bottom), result);\n\t\t\t\t\t\t\tfor (RectF r : result) {\n\t\t\t\t\t\t\t\tif (r.intersect(visibleRect)) {\n\t\t\t\t\t\t\t\t\tintersects = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!intersects) {\n\t\t\t\t\t\t\tBitmap shield = icon.shieldId == null ? null : RenderingIcons.getIcon(context, icon.shieldId, true);\n\t\t\t\t\t\t\tif(shield != null) {\n\t\t\t\t\t\t\t\tRectF shieldRf = calculateRect(rc, icon, shield.getWidth(), shield.getHeight());\n\t\t\t\t\t\t\t\tif (coeff != 1f) {\n\t\t\t\t\t\t\t\t\tRect src = new Rect(0, 0, shield.getWidth(), shield.getHeight());\n\t\t\t\t\t\t\t\t\tdrawBitmap(cv, shield, shieldRf, src);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdrawBitmap(cv, shield, shieldRf);\n\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (coeff != 1f) {\n\t\t\t\t\t\t\t\tRect src = new Rect(0, 0, ico.getWidth(), ico.getHeight());\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId_1, true), rf, src);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, ico, rf, src);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId2, true), rf, src);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId3, true), rf, src);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId4, true), rf, src);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId5, true), rf, src);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId_1, true), rf);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, ico, rf);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId2, true), rf);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId3, true), rf);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId4, true), rf);\n\t\t\t\t\t\t\t\tdrawBitmap(cv, RenderingIcons.getIcon(context, icon.resId5, true), rf);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(visibleRect != null) {\n\t\t\t\t\t\t\t\tvisibleRect.inset(-visibleRect.width() / 4, -visibleRect.height() / 4);\n\t\t\t\t\t\t\t\tboundIntersections.insert(visibleRect, \n\t\t\t\t\t\t\t\t\t\tnew QuadRect(visibleRect.left, visibleRect.top, visibleRect.right, visibleRect.bottom));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (rc.interrupted) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}","commit_id":"970fdd45e13606c7b3de0f4f82358f623b3da4ed","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void onPrepareBufferImage(Canvas canvas, RotatedTileBox tileBox, DrawSettings settings) {\n\t\tif(!Algorithms.objectEquals(this.settings.SELECTED_POI_FILTER_FOR_MAP.get(), \n\t\t\t\tfilter == null ? null : filter.getFilterId())) {\n\t\t\tif(this.settings.SELECTED_POI_FILTER_FOR_MAP.get() == null) {\n\t\t\t\tthis.filter = null;\n\t\t\t} else {\n\t\t\t\tPoiFiltersHelper pfh = app.getPoiFilters();\n\t\t\t\tthis.filter = pfh.getFilterById(this.settings.SELECTED_POI_FILTER_FOR_MAP.get());\n\t\t\t}\n\t\t\tdata.clearCache();\n\t\t}\n\t\tList<Amenity> objects = Collections.emptyList();\n\t\tif (filter != null) {\n\t\t\tif (tileBox.getZoom() >= startZoom) {\n\t\t\t\tdata.queryNewData(tileBox);\n\t\t\t\tobjects = data.getResults();\n\t\t\t\tif (objects != null) {\n\t\t\t\t\tint r = getRadiusPoi(tileBox);\n\t\t\t\t\tfor (Amenity o : objects) {\n\t\t\t\t\t\tint x = (int) tileBox.getPixXFromLatLon(o.getLocation().getLatitude(), o.getLocation()\n\t\t\t\t\t\t\t\t.getLongitude());\n\t\t\t\t\t\tint y = (int) tileBox.getPixYFromLatLon(o.getLocation().getLatitude(), o.getLocation()\n\t\t\t\t\t\t\t\t.getLongitude());\n\t\t\t\t\t\tcanvas.drawCircle(x, y, r, pointAltUI);\n\t\t\t\t\t\tcanvas.drawCircle(x, y, r, point);\n\t\t\t\t\t\tString id = null;\n\t\t\t\t\t\tPoiType st = o.getType().getPoiTypeByKeyName(o.getSubType());\n\t\t\t\t\t\tif (st != null) {\n\t\t\t\t\t\t\tif (RenderingIcons.containsIcon(st.getIconKeyName())) {\n\t\t\t\t\t\t\t\tid = st.getIconKeyName();\n\t\t\t\t\t\t\t} else if (RenderingIcons.containsIcon(st.getOsmTag() + \"_\" + st.getOsmValue())) {\n\t\t\t\t\t\t\t\tid = st.getOsmTag() + \"_\" + st.getOsmValue();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (id != null) {\n\t\t\t\t\t\t\tBitmap bmp = RenderingIcons.getIcon(view.getContext(), id);\n\t\t\t\t\t\t\tif (bmp != null) {\n\t\t\t\t\t\t\t\tcanvas.drawBitmap(bmp, x - bmp.getWidth() / 2, y - bmp.getHeight() / 2, paintIcon);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmapTextLayer.putData(this, objects);\n\t}","id":48437,"modified_method":"@Override\n\tpublic void onPrepareBufferImage(Canvas canvas, RotatedTileBox tileBox, DrawSettings settings) {\n\t\tif(!Algorithms.objectEquals(this.settings.SELECTED_POI_FILTER_FOR_MAP.get(), \n\t\t\t\tfilter == null ? null : filter.getFilterId())) {\n\t\t\tif(this.settings.SELECTED_POI_FILTER_FOR_MAP.get() == null) {\n\t\t\t\tthis.filter = null;\n\t\t\t} else {\n\t\t\t\tPoiFiltersHelper pfh = app.getPoiFilters();\n\t\t\t\tthis.filter = pfh.getFilterById(this.settings.SELECTED_POI_FILTER_FOR_MAP.get());\n\t\t\t}\n\t\t\tdata.clearCache();\n\t\t}\n\t\tList<Amenity> objects = Collections.emptyList();\n\t\tif (filter != null) {\n\t\t\tif (tileBox.getZoom() >= startZoom) {\n\t\t\t\tdata.queryNewData(tileBox);\n\t\t\t\tobjects = data.getResults();\n\t\t\t\tif (objects != null) {\n\t\t\t\t\tint r = getRadiusPoi(tileBox);\n\t\t\t\t\tfor (Amenity o : objects) {\n\t\t\t\t\t\tint x = (int) tileBox.getPixXFromLatLon(o.getLocation().getLatitude(), o.getLocation()\n\t\t\t\t\t\t\t\t.getLongitude());\n\t\t\t\t\t\tint y = (int) tileBox.getPixYFromLatLon(o.getLocation().getLatitude(), o.getLocation()\n\t\t\t\t\t\t\t\t.getLongitude());\n\t\t\t\t\t\tcanvas.drawCircle(x, y, r, pointAltUI);\n\t\t\t\t\t\tcanvas.drawCircle(x, y, r, point);\n\t\t\t\t\t\tString id = null;\n\t\t\t\t\t\tPoiType st = o.getType().getPoiTypeByKeyName(o.getSubType());\n\t\t\t\t\t\tif (st != null) {\n\t\t\t\t\t\t\tif (RenderingIcons.containsSmallIcon(st.getIconKeyName())) {\n\t\t\t\t\t\t\t\tid = st.getIconKeyName();\n\t\t\t\t\t\t\t} else if (RenderingIcons.containsSmallIcon(st.getOsmTag() + \"_\" + st.getOsmValue())) {\n\t\t\t\t\t\t\t\tid = st.getOsmTag() + \"_\" + st.getOsmValue();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (id != null) {\n\t\t\t\t\t\t\tBitmap bmp = RenderingIcons.getIcon(view.getContext(), id, false);\n\t\t\t\t\t\t\tif (bmp != null) {\n\t\t\t\t\t\t\t\tcanvas.drawBitmap(bmp, x - bmp.getWidth() / 2, y - bmp.getHeight() / 2, paintIcon);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmapTextLayer.putData(this, objects);\n\t}","commit_id":"970fdd45e13606c7b3de0f4f82358f623b3da4ed","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public static byte[] getIconRawData(Context ctx, String s) {\n\t\tInteger resId = icons.get(s);\n\t\t\n\t\t// Quite bad error\n\t\tif(resId == null)\n\t\t\treturn null;\n\t\t\t\n\t\ttry {\n\t\t\tfinal InputStream inputStream = ctx.getResources().openRawResource(resId.intValue());\n\t\t\tfinal ByteArrayOutputStream proxyOutputStream = new ByteArrayOutputStream(1024);\n            final byte[] ioBuffer = new byte[1024];\n            int bytesRead;\n            while ((bytesRead = inputStream.read(ioBuffer)) >= 0) {\n\t\t\t\tproxyOutputStream.write(ioBuffer, 0, bytesRead);\n\t\t\t}\n\t\t\tinputStream.close();\n\t\t\tfinal byte[] bitmapData = proxyOutputStream.toByteArray();\n\t\t\tlog.info(\"Icon data length is \" + bitmapData.length); //$NON-NLS-1$\n//\t\t\tBitmap dm = android.graphics.BitmapFactory.decodeByteArray(bitmapData, 0, bitmapData.length) ;\n//\t\t\tif(dm != null){\n//\t\t\t\tSystem.out.println(\"IC \" + s +\" \" + dm.getHeight() + \"x\" + dm.getWidth());\n//\t\t\t}\n\t\t\t//if(android.graphics.BitmapFactory.decodeByteArray(bitmapData, 0, bitmapData.length) == null)\n\t\t\t//\tthrow new Exception();\n            return bitmapData;\n\t\t} catch(Throwable e) {\n\t\t\tlog.error(\"Failed to get byte stream from icon\", e); //$NON-NLS-1$\n\t\t\treturn null;\n\t\t}\n\t}","id":48438,"modified_method":"public static byte[] getIconRawData(Context ctx, String s) {\n\t\tInteger resId = shaderIcons.get(s);\n\t\tif(resId == null) {\n\t\t\t resId = smallIcons.get(s);\n\t\t}\n\t\tif(resId == null)\n\t\t\treturn null;\n\t\t\t\n\t\ttry {\n\t\t\tfinal InputStream inputStream = ctx.getResources().openRawResource(resId.intValue());\n\t\t\tfinal ByteArrayOutputStream proxyOutputStream = new ByteArrayOutputStream(1024);\n            final byte[] ioBuffer = new byte[1024];\n            int bytesRead;\n            while ((bytesRead = inputStream.read(ioBuffer)) >= 0) {\n\t\t\t\tproxyOutputStream.write(ioBuffer, 0, bytesRead);\n\t\t\t}\n\t\t\tinputStream.close();\n\t\t\tfinal byte[] bitmapData = proxyOutputStream.toByteArray();\n\t\t\tlog.info(\"Icon data length is \" + bitmapData.length); //$NON-NLS-1$\n//\t\t\tBitmap dm = android.graphics.BitmapFactory.decodeByteArray(bitmapData, 0, bitmapData.length) ;\n//\t\t\tif(dm != null){\n//\t\t\t\tSystem.out.println(\"IC \" + s +\" \" + dm.getHeight() + \"x\" + dm.getWidth());\n//\t\t\t}\n\t\t\t//if(android.graphics.BitmapFactory.decodeByteArray(bitmapData, 0, bitmapData.length) == null)\n\t\t\t//\tthrow new Exception();\n            return bitmapData;\n\t\t} catch(Throwable e) {\n\t\t\tlog.error(\"Failed to get byte stream from icon\", e); //$NON-NLS-1$\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"970fdd45e13606c7b3de0f4f82358f623b3da4ed","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public static boolean containsIcon(String s){\n\t\treturn icons.containsKey(s);\n\t}","id":48439,"modified_method":"public static boolean containsSmallIcon(String s){\n\t\treturn smallIcons.containsKey(s);\n\t}","commit_id":"970fdd45e13606c7b3de0f4f82358f623b3da4ed","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public static void initIcons() {\n\t\tClass<? extends drawable> cl = R.drawable.class;\n\t\tfor (Field f : cl.getDeclaredFields()) {\n\t\t\tif (f.getName().startsWith(\"h_\") || f.getName().startsWith(\"mm_\")) {\n\t\t\t\ttry {\n\t\t\t\t\tString id = f.getName().substring(f.getName().startsWith(\"mm_\") ? 3 : 2);\n\t\t\t\t\tint i = f.getInt(null);\n\t\t\t\t\t// don't override shader or map icons (h) \n\t\t\t\t\tif(f.getName().startsWith(\"h_\") || !icons.containsKey(id)) {\n\t\t\t\t\t\ticons.put(id, i);\n\t\t\t\t\t}\n\t\t\t\t\tif(f.getName().startsWith(\"mm_\")) {\n\t\t\t\t\t\tsmallIcons.put(id, i);\n\t\t\t\t\t}\n\t\t\t\t} catch (IllegalArgumentException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t} catch (IllegalAccessException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (f.getName().startsWith(\"mx_\") ) {\n\t\t\t\ttry {\n\t\t\t\t\tbigIcons.put(f.getName().substring(3), f.getInt(null));\n\t\t\t\t} catch (IllegalArgumentException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t} catch (IllegalAccessException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":48440,"modified_method":"public static void initIcons() {\n\t\tClass<? extends drawable> cl = R.drawable.class;\n\t\tfor (Field f : cl.getDeclaredFields()) {\n\t\t\ttry {\n\t\t\t\tif (f.getName().startsWith(\"h_\")) {\n\t\t\t\t\tshaderIcons.put(f.getName().substring(2), f.getInt(null));\n\t\t\t\t} else if( f.getName().startsWith(\"mm_\")) {\n\t\t\t\t\tsmallIcons.put(f.getName().substring(3), f.getInt(null));\n\t\t\t\t} else if (f.getName().startsWith(\"mx_\")) {\n\t\t\t\t\tbigIcons.put(f.getName().substring(3), f.getInt(null));\n\t\t\t\t}\n\t\t\t} catch (IllegalArgumentException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t} catch (IllegalAccessException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}","commit_id":"970fdd45e13606c7b3de0f4f82358f623b3da4ed","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public static Bitmap getIcon(Context ctx, String s) {\n\t\tif(s == null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (!iconsBmp.containsKey(s)) {\n\t\t\tInteger resId = icons.get(s);\n\t\t\tif (resId != null) {\n\t\t\t\tBitmap bmp = BitmapFactory.decodeResource(ctx.getResources(), resId, null);\n\t\t\t\ticonsBmp.put(s, bmp);\n\t\t\t} else {\n\t\t\t\ticonsBmp.put(s, null);\n\t\t\t}\n\t\t}\n\t\treturn iconsBmp.get(s);\n\t}","id":48441,"modified_method":"public static Bitmap getIcon(Context ctx, String s, boolean includeShader) {\n\t\tif(s == null) {\n\t\t\treturn null;\n\t\t}\n\t\tif(includeShader && shaderIcons.containsKey(s)) {\n\t\t\ts = \"h_\" + s;\n\t\t}\n\t\tif (!iconsBmp.containsKey(s)) {\n\t\t\tInteger resId = s.startsWith(\"h_\") ? shaderIcons.get(s.substring(2)) : smallIcons.get(s);\n\t\t\tif (resId != null) {\n\t\t\t\tBitmap bmp = BitmapFactory.decodeResource(ctx.getResources(), resId, null);\n\t\t\t\ticonsBmp.put(s, bmp);\n\t\t\t} else {\n\t\t\t\ticonsBmp.put(s, null);\n\t\t\t}\n\t\t}\n\t\treturn iconsBmp.get(s);\n\t}","commit_id":"970fdd45e13606c7b3de0f4f82358f623b3da4ed","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void drawShieldIcon(RenderingContext rc, Canvas cv, TextDrawInfo text, String sr) {\n\t\tif (sr != null) {\n\t\t\tfloat coef = rc.getDensityValue(rc.screenDensityRatio * rc.textScale);\n\t\t\tBitmap ico = RenderingIcons.getIcon(context, sr);\n\t\t\tif (ico != null) {\n\t\t\t\tfloat left = text.centerX - ico.getWidth() / 2 * coef - 0.5f;\n\t\t\t\tfloat top = text.centerY - ico.getHeight() / 2 * coef -  paintText.descent() - 0.5f;\n\t\t\t\tif(rc.screenDensityRatio != 1f){\n\t\t\t\t\tRectF rf = new RectF(left, top, left + ico.getWidth() * coef, \n\t\t\t\t\t\t\ttop + ico.getHeight() * coef);\n\t\t\t\t\tRect src = new Rect(0, 0, ico.getWidth(), ico\n\t\t\t\t\t\t\t.getHeight());\n\t\t\t\t\tcv.drawBitmap(ico, src, rf, paintIcon);\n\t\t\t\t} else {\n\t\t\t\t\tcv.drawBitmap(ico, left, top, paintIcon);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":48442,"modified_method":"private void drawShieldIcon(RenderingContext rc, Canvas cv, TextDrawInfo text, String sr) {\n\t\tif (sr != null) {\n\t\t\tfloat coef = rc.getDensityValue(rc.screenDensityRatio * rc.textScale);\n\t\t\tBitmap ico = RenderingIcons.getIcon(context, sr, true);\n\t\t\tif (ico != null) {\n\t\t\t\tfloat left = text.centerX - ico.getWidth() / 2 * coef - 0.5f;\n\t\t\t\tfloat top = text.centerY - ico.getHeight() / 2 * coef -  paintText.descent() - 0.5f;\n\t\t\t\tif(rc.screenDensityRatio != 1f){\n\t\t\t\t\tRectF rf = new RectF(left, top, left + ico.getWidth() * coef, \n\t\t\t\t\t\t\ttop + ico.getHeight() * coef);\n\t\t\t\t\tRect src = new Rect(0, 0, ico.getWidth(), ico\n\t\t\t\t\t\t\t.getHeight());\n\t\t\t\t\tcv.drawBitmap(ico, src, rf, paintIcon);\n\t\t\t\t} else {\n\t\t\t\t\tcv.drawBitmap(ico, left, top, paintIcon);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"970fdd45e13606c7b3de0f4f82358f623b3da4ed","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Nullable\n  @Override\n  public ServerResult doAnnotate(@NotNull final AnnotatorInfo info) {\n    final AnalysisError[] errors = DartAnalysisServerService.getInstance().analysis_getErrors(info);\n    if (errors == null || errors.length == 0) return null;\n\n    final ServerResult result = new ServerResult();\n\n    boolean errorFromGetFixes = false;\n    for (final AnalysisError error : errors) {\n      if (error == null || shouldIgnoreMessageFromDartAnalyzer(error)) continue;\n\n      final List<AnalysisErrorFixes> fixes = errorFromGetFixes\n                                             ? null\n                                             : DartAnalysisServerService.getInstance().edit_getFixes(info, error.getLocation().getOffset());\n      if (!errorFromGetFixes && fixes == null) {\n        errorFromGetFixes = true;\n      }\n\n      result.add(error, fixes != null ? fixes : Collections.<AnalysisErrorFixes>emptyList());\n    }\n\n    return result;\n  }","id":48443,"modified_method":"@Nullable\n  @Override\n  public AnalysisError[] doAnnotate(@NotNull final AnnotatorInfo info) {\n    return DartAnalysisServerService.getInstance().analysis_getErrors(info);\n  }","commit_id":"92d56f6dc1661c00f619fd695689d10f451499d7","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  public void apply(@NotNull final PsiFile psiFile, @Nullable final ServerResult serverResult, @NotNull final AnnotationHolder holder) {\n    if (serverResult == null || serverResult.getErrorsAndFixes().isEmpty()) return;\n\n    final Map<AnalysisError, List<AnalysisErrorFixes>> errorsAndFixesMap = serverResult.getErrorsAndFixes();\n    final long psiModificationCount = psiFile.getManager().getModificationTracker().getModificationCount();\n\n    for (Map.Entry<AnalysisError, List<AnalysisErrorFixes>> entry : errorsAndFixesMap.entrySet()) {\n      final AnalysisError error = entry.getKey();\n      final List<AnalysisErrorFixes> fixes = entry.getValue();\n\n      final Annotation annotation = annotate(holder, error, psiFile.getTextLength());\n      if (annotation != null && fixes != null && !fixes.isEmpty()) {\n        for (final AnalysisErrorFixes fixList : fixes) {\n          for (final SourceChange change : fixList.getFixes()) {\n            annotation.registerFix(new DartServerFixIntention(change, psiModificationCount));\n          }\n        }\n      }\n    }\n  }","id":48444,"modified_method":"@Override\n  public void apply(@NotNull final PsiFile psiFile, @Nullable final AnalysisError[] errors, @NotNull final AnnotationHolder holder) {\n    if (errors == null || errors.length == 0) return;\n\n    final long psiModificationCount = psiFile.getManager().getModificationTracker().getModificationCount();\n\n    for (AnalysisError error : errors) {\n      final Annotation annotation = annotate(holder, error, psiFile.getTextLength());\n\n      if (annotation != null) {\n        final DartQuickFixSet quickFixSet = new DartQuickFixSet(FileUtil.toSystemIndependentName(error.getLocation().getFile()),\n                                                                error.getLocation().getOffset(),\n                                                                psiModificationCount);\n        for (IntentionAction quickFix : quickFixSet.getQuickFixes()) {\n          annotation.registerFix(quickFix);\n        }\n      }\n    }\n  }","commit_id":"92d56f6dc1661c00f619fd695689d10f451499d7","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Nullable\n  public AnalysisError[] analysis_getErrors(@NotNull final PsiFile file) {\n    final Ref<AnalysisError[]> resultError = new Ref<AnalysisError[]>();\n    final Semaphore semaphore = new Semaphore();\n    semaphore.down();\n\n    final String path = FileUtil.toSystemDependentName(file.getOriginalFile().getVirtualFile().getPath());\n    myServer.analysis_getErrors(path, new GetErrorsConsumer() {\n      @Override\n      public void computedErrors(final AnalysisError[] errors) {\n        resultError.set(errors);\n        semaphore.up();\n      }\n    });\n    semaphore.waitFor(10000);\n    return resultError.get();\n  }","id":48445,"modified_method":"@Nullable\n  public AnalysisError[] analysis_getErrors(@NotNull final PsiFile psiFile) {\n    final VirtualFile vFile = DartResolveUtil.getRealVirtualFile(psiFile);\n    if (vFile == null) return null;\n\n    final Ref<AnalysisError[]> resultError = new Ref<AnalysisError[]>();\n\n    final Semaphore semaphore = new Semaphore();\n    semaphore.down();\n\n    try {\n      myServer.analysis_getErrors(FileUtil.toSystemDependentName(vFile.getPath()), new GetErrorsConsumer() {\n        @Override\n        public void computedErrors(final AnalysisError[] errors) {\n          if (semaphore.tryUp()) {\n            resultError.set(errors);\n          }\n          else {\n            // semaphore unlocked by timeout, schedule to highlight the file again\n            ApplicationManager.getApplication().runReadAction(new Runnable() {\n              @Override\n              public void run() {\n                final Project project = psiFile.isValid() ? psiFile.getProject() : null;\n                if (project != null && !project.isDisposed()) {\n                  DaemonCodeAnalyzer.getInstance(project).restart(psiFile);\n                }\n              }\n            });\n          }\n        }\n      });\n\n      semaphore.waitFor(5000);\n    }\n    finally {\n      semaphore.up(); // make sure that semaphore is unlock so that computedErrors() can understand when it was unlocked by timeout\n    }\n\n    return resultError.get();\n  }","commit_id":"ed57c3da93bd1deacd3134bbe9c8008e40569e31","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  public void apply(@NotNull final PsiFile psiFile, @Nullable final AnalysisError[] errors, @NotNull final AnnotationHolder holder) {\n    if (errors == null) return;\n\n    final Document document = PsiDocumentManager.getInstance(psiFile.getProject()).getCachedDocument(psiFile);\n    if (document == null) return;\n\n    for (AnalysisError error : errors) {\n      if (shouldIgnoreMessageFromDartAnalyzer(error)) continue;\n      final Annotation annotation = annotate(document, holder, error);\n      if (annotation != null) {\n        registerFixes(psiFile, document, annotation, error);\n      }\n    }\n  }","id":48446,"modified_method":"@Override\n  public void apply(@NotNull final PsiFile psiFile, @Nullable final ServerResult serverResult, @NotNull final AnnotationHolder holder) {\n    if (serverResult == null || serverResult.getPairs().isEmpty()) return;\n\n    final Document document = PsiDocumentManager.getInstance(psiFile.getProject()).getCachedDocument(psiFile);\n    if (document == null) return;\n\n    for (Pair<AnalysisError, List<AnalysisErrorFixes>> result : serverResult.getPairs()) {\n      final AnalysisError error = result.first;\n      if (shouldIgnoreMessageFromDartAnalyzer(error)) continue;\n      final List<AnalysisErrorFixes> fixes = result.second;\n      final Annotation annotation = annotate(document, holder, error);\n      if (annotation != null && fixes != null) {\n        for (AnalysisErrorFixes fixList : fixes) {\n          for (SourceChange change : fixList.getFixes()) {\n            annotation.registerFix(new DartServerFixIntention(change));\n          }\n        }\n      }\n    }\n  }","commit_id":"694d8eefa1460a8f7f39ddea14a015eea2a3c7cc","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  @Nullable\n  public PsiFile collectInformation(@NotNull final PsiFile psiFile) {\n    if (psiFile instanceof DartExpressionCodeFragment) return null;\n\n    final VirtualFile annotatedFile = DartResolveUtil.getRealVirtualFile(psiFile);\n    if (annotatedFile == null) return null;\n\n    final Module module = ModuleUtilCore.findModuleForPsiElement(psiFile);\n    if (module == null) return null;\n\n    final DartSdk sdk = DartSdk.getGlobalDartSdk();\n    if (sdk == null) return null;\n\n    if (psiFile instanceof XmlFile && !containsDartEmbeddedContent((XmlFile)psiFile)) return null;\n\n    if (FileUtil.isAncestor(sdk.getHomePath(), annotatedFile.getPath(), true)) return null;\n\n    if (PsiDocumentManager.getInstance(psiFile.getProject()).getCachedDocument(psiFile) == null) return null;\n\n    return psiFile;\n  }","id":48447,"modified_method":"@Nullable\n  @Override\n  public Pair<PsiFile, Document> collectInformation(@NotNull final PsiFile psiFile, @NotNull final Editor editor, final boolean hasErrors) {\n    if (psiFile instanceof DartExpressionCodeFragment) return null;\n\n    final VirtualFile annotatedFile = DartResolveUtil.getRealVirtualFile(psiFile);\n    if (annotatedFile == null) return null;\n\n    final Module module = ModuleUtilCore.findModuleForPsiElement(psiFile);\n    if (module == null) return null;\n\n    final DartSdk sdk = DartSdk.getGlobalDartSdk();\n    if (sdk == null) return null;\n\n    if (psiFile instanceof XmlFile && !containsDartEmbeddedContent((XmlFile)psiFile)) return null;\n\n    if (FileUtil.isAncestor(sdk.getHomePath(), annotatedFile.getPath(), true)) return null;\n\n    if (PsiDocumentManager.getInstance(psiFile.getProject()).getCachedDocument(psiFile) == null) return null;\n\n    return Pair.create(psiFile, editor.getDocument());\n  }","commit_id":"694d8eefa1460a8f7f39ddea14a015eea2a3c7cc","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  @Nullable\n  public AnalysisError[] doAnnotate(@NotNull final PsiFile psiFile) {\n    // todo: need to figure out how to send only the diff\n    //final CharSequence charSequence = editor.getDocument().getCharsSequence();\n    //final String fileContent = charSequence.toString();\n    //final THashMap<String, Object> files = new THashMap<String, Object>();\n    //final ArrayList<SourceEdit> sourceEdits = new ArrayList<SourceEdit>(1);\n    //final SourceEdit sourceEdit = new SourceEdit(0, fileContent.length() - 1, fileContent, null);\n    //sourceEdits.add(sourceEdit);\n    //files.put(psiFile.getOriginalFile().getVirtualFile().getPath(), new ChangeContentOverlay(sourceEdits));\n    //DartAnalysisServerService.getInstance(psiFile.getProject()).updateContent(files);\n    return DartAnalysisServerService.getInstance().analysis_getErrors(psiFile);\n  }","id":48448,"modified_method":"@Override\n  @Nullable\n  public ServerResult doAnnotate(@NotNull final Pair<PsiFile, Document> info) {\n    // todo: need to figure out how to send only the diff\n    //final CharSequence charSequence = editor.getDocument().getCharsSequence();\n    //final String fileContent = charSequence.toString();\n    //final THashMap<String, Object> files = new THashMap<String, Object>();\n    //final ArrayList<SourceEdit> sourceEdits = new ArrayList<SourceEdit>(1);\n    //final SourceEdit sourceEdit = new SourceEdit(0, fileContent.length() - 1, fileContent, null);\n    //sourceEdits.add(sourceEdit);\n    //files.put(psiFile.getOriginalFile().getVirtualFile().getPath(), new ChangeContentOverlay(sourceEdits));\n    //DartAnalysisServerService.getInstance(psiFile.getProject()).updateContent(files);\n\n    final PsiFile psiFile = info.first;\n    final Document document = info.second;\n\n    final AnalysisError[] errors = DartAnalysisServerService.getInstance().analysis_getErrors(psiFile);\n    if (errors == null) return null;\n\n    final ServerResult result = new ServerResult();\n\n    for (AnalysisError error : errors) {\n      if (shouldIgnoreMessageFromDartAnalyzer(error)) continue;\n\n      final TextRange textRange = getRealTextRange(document, error.getLocation());\n      final List<AnalysisErrorFixes> fixesList =\n        DartAnalysisServerService.getInstance().analysis_getFixes(psiFile, textRange.getStartOffset());\n      result.add(Pair.create(error, fixesList));\n    }\n\n    return result;\n  }","commit_id":"694d8eefa1460a8f7f39ddea14a015eea2a3c7cc","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Nullable\n  public List<AnalysisErrorFixes> analysis_getFixes(@NotNull final PsiFile psiFile, final int offset) {\n    final VirtualFile vFile = DartResolveUtil.getRealVirtualFile(psiFile);\n    if (vFile == null) return null;\n\n    final Ref<List<AnalysisErrorFixes>> resultError = new Ref<List<AnalysisErrorFixes>>();\n\n    final Semaphore semaphore = new Semaphore();\n    semaphore.down();\n\n    try {\n      myServer.edit_getFixes(FileUtil.toSystemDependentName(vFile.getPath()), offset, new GetFixesConsumer() {\n        @Override\n        public void computedFixes(final List<AnalysisErrorFixes> fixes) {\n          if (semaphore.tryUp()) {\n            resultError.set(fixes);\n          }\n          else {\n            // semaphore unlocked by timeout, schedule to highlight the file again\n            ApplicationManager.getApplication().runReadAction(new Runnable() {\n              @Override\n              public void run() {\n                final Project project = psiFile.isValid() ? psiFile.getProject() : null;\n                if (project != null && !project.isDisposed()) {\n                  DaemonCodeAnalyzer.getInstance(project).restart(psiFile);\n                }\n              }\n            });\n          }\n        }\n\n        @Override\n        public void onError(final RequestError requestError) {\n          semaphore.up();\n          LOG.error(requestError.getMessage(), requestError.getStackTrace());\n        }\n      });\n\n      semaphore.waitFor(5000);\n    }\n    finally {\n      semaphore.up(); // make sure that semaphore is unlock so that computedErrors() can understand when it was unlocked by timeout\n    }\n\n    return resultError.get();\n  }","id":48449,"modified_method":"@Nullable\n  public List<AnalysisErrorFixes> analysis_getFixes(@NotNull final PsiFile psiFile, final int offset) {\n    final VirtualFile vFile = DartResolveUtil.getRealVirtualFile(psiFile);\n    if (vFile == null) return null;\n\n    final Ref<List<AnalysisErrorFixes>> resultError = new Ref<List<AnalysisErrorFixes>>();\n\n    final Semaphore semaphore = new Semaphore();\n    semaphore.down();\n\n    try {\n      myServer.edit_getFixes(FileUtil.toSystemDependentName(vFile.getPath()), offset, new GetFixesConsumer() {\n        @Override\n        public void computedFixes(final List<AnalysisErrorFixes> fixes) {\n          if (semaphore.tryUp()) {\n            resultError.set(fixes);\n          }\n          else {\n            // semaphore unlocked by timeout, schedule to highlight the file again\n            ApplicationManager.getApplication().runReadAction(new Runnable() {\n              @Override\n              public void run() {\n                final Project project = psiFile.isValid() ? psiFile.getProject() : null;\n                if (project != null && !project.isDisposed()) {\n                  DaemonCodeAnalyzer.getInstance(project).restart(psiFile);\n                }\n              }\n            });\n          }\n        }\n\n        @Override\n        public void onError(final RequestError requestError) {\n          semaphore.up();\n          LOG.warn(requestError.getMessage());\n        }\n      });\n\n      semaphore.waitFor(GET_FIXES_TIMEOUT);\n    }\n    finally {\n      semaphore.up(); // make sure that semaphore is unlock so that computedErrors() can understand when it was unlocked by timeout\n    }\n\n    return resultError.get();\n  }","commit_id":"694d8eefa1460a8f7f39ddea14a015eea2a3c7cc","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Nullable\n  public AnalysisError[] analysis_getErrors(@NotNull final PsiFile psiFile) {\n    final VirtualFile vFile = DartResolveUtil.getRealVirtualFile(psiFile);\n    if (vFile == null) return null;\n\n    final Ref<AnalysisError[]> resultError = new Ref<AnalysisError[]>();\n\n    final Semaphore semaphore = new Semaphore();\n    semaphore.down();\n\n    try {\n      myServer.analysis_getErrors(FileUtil.toSystemDependentName(vFile.getPath()), new GetErrorsConsumer() {\n        @Override\n        public void computedErrors(final AnalysisError[] errors) {\n          if (semaphore.tryUp()) {\n            resultError.set(errors);\n          }\n          else {\n            // semaphore unlocked by timeout, schedule to highlight the file again\n            ApplicationManager.getApplication().runReadAction(new Runnable() {\n              @Override\n              public void run() {\n                final Project project = psiFile.isValid() ? psiFile.getProject() : null;\n                if (project != null && !project.isDisposed()) {\n                  DaemonCodeAnalyzer.getInstance(project).restart(psiFile);\n                }\n              }\n            });\n          }\n        }\n\n        @Override\n        public void onError(final RequestError requestError) {\n          semaphore.up();\n          LOG.error(requestError.getMessage(), requestError.getStackTrace());\n        }\n      });\n\n      semaphore.waitFor(5000);\n    }\n    finally {\n      semaphore.up(); // make sure that semaphore is unlock so that computedErrors() can understand when it was unlocked by timeout\n    }\n\n    return resultError.get();\n  }","id":48450,"modified_method":"@Nullable\n  public AnalysisError[] analysis_getErrors(@NotNull final PsiFile psiFile) {\n    final VirtualFile vFile = DartResolveUtil.getRealVirtualFile(psiFile);\n    if (vFile == null) return null;\n\n    final Ref<AnalysisError[]> resultError = new Ref<AnalysisError[]>();\n\n    final Semaphore semaphore = new Semaphore();\n    semaphore.down();\n\n    try {\n      myServer.analysis_getErrors(FileUtil.toSystemDependentName(vFile.getPath()), new GetErrorsConsumer() {\n        @Override\n        public void computedErrors(final AnalysisError[] errors) {\n          if (semaphore.tryUp()) {\n            resultError.set(errors);\n          }\n          else {\n            // semaphore unlocked by timeout, schedule to highlight the file again\n            ApplicationManager.getApplication().runReadAction(new Runnable() {\n              @Override\n              public void run() {\n                final Project project = psiFile.isValid() ? psiFile.getProject() : null;\n                if (project != null && !project.isDisposed()) {\n                  DaemonCodeAnalyzer.getInstance(project).restart(psiFile);\n                }\n              }\n            });\n          }\n        }\n\n        @Override\n        public void onError(final RequestError requestError) {\n          semaphore.up();\n          LOG.error(requestError.getMessage(), requestError.getStackTrace());\n        }\n      });\n\n      semaphore.waitFor(GET_ERRORS_TIMEOUT);\n    }\n    finally {\n      semaphore.up(); // make sure that semaphore is unlock so that computedErrors() can understand when it was unlocked by timeout\n    }\n\n    return resultError.get();\n  }","commit_id":"694d8eefa1460a8f7f39ddea14a015eea2a3c7cc","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  public void invoke(@NotNull final Project project, final Editor editor, final PsiFile file) throws IncorrectOperationException {\n    final Document document = editor.getDocument();\n    for (SourceFileEdit fileEdit : myChange.getEdits()) {\n      for (SourceEdit edit : fileEdit.getEdits()) {\n\n        // Templates can only grow source, so we trim first if necessary\n        if (edit.getLength() > 0) {\n          document.replaceString(edit.getOffset(), edit.getOffset() + edit.getLength(), \"\");\n        }\n\n        final TemplateManager templateManager = TemplateManager.getInstance(project);\n        Template template = templateManager.createTemplate(\"\", \"\");\n        template.setToReformat(true);\n\n        addContents(template, edit);\n\n        try {\n          final VirtualFile virtualFile = VfsUtil.findFileByURL(new URL(\"file://\" + fileEdit.getFile()));\n          if (virtualFile != null) {\n            final Editor targetEditor = BaseCreateFix.navigate(project, edit.getOffset(), virtualFile);\n            if (targetEditor != null) {\n              templateManager.startTemplate(targetEditor, template);\n            }\n          }\n        }\n        catch (MalformedURLException e) {\n          LOG.error(e);\n        }\n      }\n    }\n  }","id":48451,"modified_method":"@Override\n  public void invoke(@NotNull final Project project, final Editor editor, final PsiFile file) throws IncorrectOperationException {\n    final Document document = editor.getDocument();\n    for (SourceFileEdit fileEdit : myChange.getEdits()) {\n      for (SourceEdit edit : fileEdit.getEdits()) {\n\n        // Templates can only grow source, so we trim first if necessary\n        if (edit.getLength() > 0) {\n          document.deleteString(edit.getOffset(), edit.getOffset() + edit.getLength());\n        }\n\n        final TemplateManager templateManager = TemplateManager.getInstance(project);\n        Template template = templateManager.createTemplate(\"\", \"\");\n        template.setToReformat(true);\n\n        addContents(template, edit);\n\n        try {\n          final VirtualFile virtualFile = VfsUtil.findFileByURL(new URL(\"file://\" + fileEdit.getFile()));\n          if (virtualFile != null) {\n            final Editor targetEditor = BaseCreateFix.navigate(project, edit.getOffset(), virtualFile);\n            if (targetEditor != null) {\n              templateManager.startTemplate(targetEditor, template);\n            }\n          }\n        }\n        catch (MalformedURLException e) {\n          LOG.error(e);\n        }\n      }\n    }\n  }","commit_id":"694d8eefa1460a8f7f39ddea14a015eea2a3c7cc","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public EditorCell getCurrentAttributedNodeCell() {\n    return getCurrentAttributedCellWithRole(AttributeKind.Node.class);\n  }","id":48452,"modified_method":"/**\n   * Should be removed after MPS 3.0\n   *\n   * @deprecated use getCurrentAttributedCellWithRole() instead\n   */\n  @Deprecated\n  public jetbrains.mps.nodeEditor.cells.EditorCell getCurrentAttributedNodeCell() {\n    return (jetbrains.mps.nodeEditor.cells.EditorCell) getCurrentAttributedCellWithRole(AttributeKind.Node.class);\n  }","commit_id":"7f8f99ff3d0517e0653e15b1d8f29706cc4ba7e8","url":"https://github.com/JetBrains/MPS"},{"original_method":"public EditorCell getCurrentAttributedPropertyCell() {\n    return getCurrentAttributedCellWithRole(AttributeKind.Property.class);\n  }","id":48453,"modified_method":"/**\n   * Should be removed after MPS 3.0\n   *\n   * @deprecated use getCurrentAttributedCellWithRole() instead\n   */\n  @Deprecated\n  public jetbrains.mps.nodeEditor.cells.EditorCell getCurrentAttributedPropertyCell() {\n    return (jetbrains.mps.nodeEditor.cells.EditorCell) getCurrentAttributedCellWithRole(AttributeKind.Property.class);\n  }","commit_id":"7f8f99ff3d0517e0653e15b1d8f29706cc4ba7e8","url":"https://github.com/JetBrains/MPS"},{"original_method":"public EditorCell createRoleAttributeCell(jetbrains.mps.openapi.editor.EditorContext context, SNode roleAttribute, Class attributeKind, EditorCell cellWithRole) {\n    // TODO: Make processing of style attributes more generic.\n    EditorCell attributeCell = context.createRoleAttributeCell(attributeKind, cellWithRole, roleAttribute);\n    // see a comment for isAttributedCell() method\n    if (attributeCell == cellWithRole) {\n      return cellWithRole;\n    }\n    if (cellWithRole.getStyle().get(StyleAttributes.INDENT_LAYOUT_NEW_LINE)) {\n      attributeCell.getStyle().set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);\n    }\n\n    EditorComponent editor = (EditorComponent) context.getEditorComponent();\n    Set<SNode> newAttributeCell_DependOn = new HashSet<SNode>();\n    Set<SNode> attributeCell_DependOn = editor.getNodesCellDependOn(attributeCell);\n    if (attributeCell_DependOn != null) {\n      newAttributeCell_DependOn.addAll(attributeCell_DependOn);\n    }\n    Set<SNodeReference> newAttributeCell_RefTargetsDependsOn = new HashSet<SNodeReference>();\n    Set<SNodeReference> attributeCell_RefTargetsDependsOn = editor.getCopyOfRefTargetsCellDependsOn(attributeCell);\n    if (attributeCell_RefTargetsDependsOn != null) {\n      newAttributeCell_RefTargetsDependsOn.addAll(attributeCell_RefTargetsDependsOn);\n    }\n\n    Set<SNode> cellWithRole_DependOn = editor.getNodesCellDependOn(cellWithRole);\n    if (cellWithRole_DependOn != null) {\n      newAttributeCell_DependOn.addAll(cellWithRole_DependOn);\n    }\n    Set<SNodeReference> cellWithRole_RefTargetsDependsOn = editor.getCopyOfRefTargetsCellDependsOn(cellWithRole);\n    if (cellWithRole_RefTargetsDependsOn != null) {\n      newAttributeCell_RefTargetsDependsOn.addAll(cellWithRole_RefTargetsDependsOn);\n    }\n    if (attributeKind != AttributeKind.Node.class) {\n      NodeReadAccessInEditorListener readAccessListener = NodeReadAccessCasterInEditor.getReadAccessListener();\n      if (readAccessListener != null) {\n        newAttributeCell_DependOn.addAll(readAccessListener.getNodesToDependOn());\n        newAttributeCell_RefTargetsDependsOn.addAll(readAccessListener.getRefTargetsToDependOn());\n      }\n    }\n    editor.putCellAndNodesToDependOn(attributeCell, newAttributeCell_DependOn, newAttributeCell_RefTargetsDependsOn);\n\n    return attributeCell;\n  }","id":48454,"modified_method":"/**\n   * Should be removed after MPS 3.0\n   *\n   * @deprecated use createNodeRoleAttributeCell() instead\n   */\n  @Deprecated\n  public jetbrains.mps.nodeEditor.cells.EditorCell createRoleAttributeCell(jetbrains.mps.openapi.editor.EditorContext context, SNode roleAttribute,\n      Class attributeKind, EditorCell cellWithRole) {\n    return (jetbrains.mps.nodeEditor.cells.EditorCell) createNodeRoleAttributeCell(context, roleAttribute, attributeKind, cellWithRole);\n  }","commit_id":"7f8f99ff3d0517e0653e15b1d8f29706cc4ba7e8","url":"https://github.com/JetBrains/MPS"},{"original_method":"public EditorCell getCurrentAttributedLinkCell() {\n    return getCurrentAttributedCellWithRole(AttributeKind.Reference.class);\n  }","id":48455,"modified_method":"/**\n   * Should be removed after MPS 3.0\n   *\n   * @deprecated use getCurrentAttributedCellWithRole() instead\n   */\n  @Deprecated\n  public jetbrains.mps.nodeEditor.cells.EditorCell getCurrentAttributedLinkCell() {\n    return (jetbrains.mps.nodeEditor.cells.EditorCell) getCurrentAttributedCellWithRole(AttributeKind.Reference.class);\n  }","commit_id":"7f8f99ff3d0517e0653e15b1d8f29706cc4ba7e8","url":"https://github.com/JetBrains/MPS"},{"original_method":"/**\n     * Run command and place the result to a remote Hudson installation\n     */\n    public static int remotePost(String[] args) throws Exception {\n        String projectName = args[0];\n\n        String home = getHudsonHome();\n        if(!home.endsWith(\"/\"))     home = home + '/';  // make sure it ends with '/'\n\n        // check for authentication info\n        String auth = new URL(home).getUserInfo();\n        if(auth != null) auth = \"Basic \" + new Base64Encoder().encode(auth.getBytes(\"UTF-8\"));\n\n        {// check if the home is set correctly\n            HttpURLConnection con = (HttpURLConnection)new URL(home).openConnection();\n            if (auth != null) con.setRequestProperty(\"Authorization\", auth);\n            con.connect();\n            if(con.getResponseCode()!=200\n            || con.getHeaderField(\"X-Hudson\")==null) {\n                System.err.println(home+\" is not Hudson (\"+con.getResponseMessage()+\")\");\n                return -1;\n            }\n        }\n\n        String projectNameEnc = URLEncoder.encode(projectName,\"UTF-8\").replaceAll(\"\\\\+\",\"%20\");\n\n        {// check if the job name is correct\n            HttpURLConnection con = (HttpURLConnection)new URL(home+\"job/\"+projectNameEnc+\"/acceptBuildResult\").openConnection();\n            if (auth != null) con.setRequestProperty(\"Authorization\", auth);\n            con.connect();\n            if(con.getResponseCode()!=200) {\n                System.err.println(projectName+\" is not a valid job name on \"+home+\" (\"+con.getResponseMessage()+\")\");\n                return -1;\n            }\n        }\n\n        // write the output to a temporary file first.\n        File tmpFile = File.createTempFile(\"hudson\",\"log\");\n        try {\n            FileOutputStream os = new FileOutputStream(tmpFile);\n\n            Writer w = new OutputStreamWriter(os,\"UTF-8\");\n            w.write(\"<?xml version='1.0' encoding='UTF-8'?>\");\n            w.write(\"<run><log encoding='hexBinary' content-encoding='\"+Charset.defaultCharset().name()+\"'>\");\n            w.flush();\n\n            // run the command\n            long start = System.currentTimeMillis();\n\n            List<String> cmd = new ArrayList<String>();\n            for( int i=1; i<args.length; i++ )\n                cmd.add(args[i]);\n            Proc proc = new Proc.LocalProc(cmd.toArray(new String[0]),(String[])null,System.in,\n                new DualOutputStream(System.out,new EncodingStream(os)));\n\n            int ret = proc.join();\n\n            w.write(\"<\/log><result>\"+ret+\"<\/result><duration>\"+(System.currentTimeMillis()-start)+\"<\/duration><\/run>\");\n            w.close();\n\n            String location = home+\"job/\"+projectNameEnc+\"/postBuildResult\";\n            while(true) {\n                try {\n                    // start a remote connection\n                    HttpURLConnection con = (HttpURLConnection) new URL(location).openConnection();\n                    if (auth != null) con.setRequestProperty(\"Authorization\", auth);\n                    con.setDoOutput(true);\n                    // this tells HttpURLConnection not to buffer the whole thing\n                    con.setFixedLengthStreamingMode((int)tmpFile.length());\n                    con.connect();\n                    // send the data\n                    FileInputStream in = new FileInputStream(tmpFile);\n                    Util.copyStream(in,con.getOutputStream());\n                    in.close();\n\n                    if(con.getResponseCode()!=200) {\n                        Util.copyStream(con.getErrorStream(),System.err);\n                    }\n\n                    return ret;\n                } catch (HttpRetryException e) {\n                    if(e.getLocation()!=null) {\n                        // retry with the new location\n                        location = e.getLocation();\n                        continue;\n                    }\n                    // otherwise failed for reasons beyond us.\n                    throw e;\n                }\n            }\n        } finally {\n            tmpFile.delete();\n        }\n    }","id":48456,"modified_method":"/**\n     * Run command and place the result to a remote Hudson installation\n     */\n    public static int remotePost(String[] args) throws Exception {\n        String projectName = args[0];\n\n        String home = getHudsonHome();\n        if(!home.endsWith(\"/\"))     home = home + '/';  // make sure it ends with '/'\n\n        // check for authentication info\n        String auth = new URL(home).getUserInfo();\n        if(auth != null) auth = \"Basic \" + new Base64Encoder().encode(auth.getBytes(\"UTF-8\"));\n\n        {// check if the home is set correctly\n            HttpURLConnection con = open(new URL(home));\n            if (auth != null) con.setRequestProperty(\"Authorization\", auth);\n            con.connect();\n            if(con.getResponseCode()!=200\n            || con.getHeaderField(\"X-Hudson\")==null) {\n                System.err.println(home+\" is not Hudson (\"+con.getResponseMessage()+\")\");\n                return -1;\n            }\n        }\n\n        String projectNameEnc = URLEncoder.encode(projectName,\"UTF-8\").replaceAll(\"\\\\+\",\"%20\");\n\n        {// check if the job name is correct\n            HttpURLConnection con = open(new URL(home+\"job/\"+projectNameEnc+\"/acceptBuildResult\"));\n            if (auth != null) con.setRequestProperty(\"Authorization\", auth);\n            con.connect();\n            if(con.getResponseCode()!=200) {\n                System.err.println(projectName+\" is not a valid job name on \"+home+\" (\"+con.getResponseMessage()+\")\");\n                return -1;\n            }\n        }\n\n        // write the output to a temporary file first.\n        File tmpFile = File.createTempFile(\"hudson\",\"log\");\n        try {\n            FileOutputStream os = new FileOutputStream(tmpFile);\n\n            Writer w = new OutputStreamWriter(os,\"UTF-8\");\n            w.write(\"<?xml version='1.0' encoding='UTF-8'?>\");\n            w.write(\"<run><log encoding='hexBinary' content-encoding='\"+Charset.defaultCharset().name()+\"'>\");\n            w.flush();\n\n            // run the command\n            long start = System.currentTimeMillis();\n\n            List<String> cmd = new ArrayList<String>();\n            for( int i=1; i<args.length; i++ )\n                cmd.add(args[i]);\n            Proc proc = new Proc.LocalProc(cmd.toArray(new String[0]),(String[])null,System.in,\n                new DualOutputStream(System.out,new EncodingStream(os)));\n\n            int ret = proc.join();\n\n            w.write(\"<\/log><result>\"+ret+\"<\/result><duration>\"+(System.currentTimeMillis()-start)+\"<\/duration><\/run>\");\n            w.close();\n\n            String location = home+\"job/\"+projectNameEnc+\"/postBuildResult\";\n            while(true) {\n                try {\n                    // start a remote connection\n                    HttpURLConnection con = open(new URL(location));\n                    if (auth != null) con.setRequestProperty(\"Authorization\", auth);\n                    con.setDoOutput(true);\n                    // this tells HttpURLConnection not to buffer the whole thing\n                    con.setFixedLengthStreamingMode((int)tmpFile.length());\n                    con.connect();\n                    // send the data\n                    FileInputStream in = new FileInputStream(tmpFile);\n                    Util.copyStream(in,con.getOutputStream());\n                    in.close();\n\n                    if(con.getResponseCode()!=200) {\n                        Util.copyStream(con.getErrorStream(),System.err);\n                    }\n\n                    return ret;\n                } catch (HttpRetryException e) {\n                    if(e.getLocation()!=null) {\n                        // retry with the new location\n                        location = e.getLocation();\n                        continue;\n                    }\n                    // otherwise failed for reasons beyond us.\n                    throw e;\n                }\n            }\n        } finally {\n            tmpFile.delete();\n        }\n    }","commit_id":"63123401899cb685438d38b0cc234cff1e58acd9","url":"https://github.com/kohsuke/hudson"},{"original_method":"private static void setTypeName(JComponent component, LWComponent c, String suffix) {\n        component.setName(c.getComponentTypeLabel() + \" \" + suffix);\n    }","id":48457,"modified_method":"private void setTypeName(JComponent component, LWComponent c, String suffix)\n    {\n        final String type = c.getComponentTypeLabel();\n        String title;\n        if (DEBUG.Enabled) {\n            String name = c.getDisplayLabel();\n            \n            if (name == null)\n                title = type;\n            else\n                title = type + \": \" + name;\n\n//             if (title.length() > 30)\n//                 title = title.substring(0,20) + \"...\";\n            stack.putClientProperty(\"TITLE-INFO\", title);\n        }// else\n        //stack.putClientProperty(\"TITLE-INFO\", null);\n\n        if (suffix != null)\n            title = type + \" \" + suffix;\n        else\n            title = type;\n        component.setName(title);\n    }","commit_id":"ca41cc13e0b436c618125d58bd6676e1671ca7d7","url":"https://github.com/VUE/VUE"},{"original_method":"public void activeChanged(final tufts.vue.ActiveEvent e, final LWComponent c)\n    {\n        showNodePanes(true);\n        if (c == null) {\n            loadResource(null);\n            this.setEnabled(false);\n           // this.getParent().setEnabled(false);\n            showNodePanes(false);\n            showResourcePanes(false);\n        } else {\n            this.setEnabled(true);\n            //this.getParent().setEnabled(true);\n            if (c.hasResource()) {\n                loadResource(c.getResource());\n                showResourcePanes(true);\n            } else {\n                showResourcePanes(false);\n            }\n            mSummaryPane.load(c);\n            mUserMetaData.load(c);\n            \n            //mNodeTree.load(c);\n\n            //setTypeName(mNotePanel, c, \"Notes\");\n        }\n    }","id":48458,"modified_method":"public void activeChanged(final tufts.vue.ActiveEvent e, final LWComponent c)\n    {\n        showNodePanes(true);\n        if (c == null) {\n            loadResource(null);\n            this.setEnabled(false);\n           // this.getParent().setEnabled(false);\n            showNodePanes(false);\n            showResourcePanes(false);\n            stack.putClientProperty(\"TITLE-INFO\", null);\n        } else {\n            this.setEnabled(true);\n            //this.getParent().setEnabled(true);\n            if (c.hasResource()) {\n                loadResource(c.getResource());\n                showResourcePanes(true);\n            } else {\n                showResourcePanes(false);\n            }\n            mSummaryPane.load(c);\n            mUserMetaData.load(c);\n            \n            //mNodeTree.load(c);\n\n            //setTypeName(mNotePanel, c, \"Notes\");\n        }\n    }","commit_id":"ca41cc13e0b436c618125d58bd6676e1671ca7d7","url":"https://github.com/VUE/VUE"},{"original_method":"private static void setTypeName(JComponent component, LWComponent c, String suffix) {\n        component.setName(c.getComponentTypeLabel() + \" \" + suffix);\n    }","id":48459,"modified_method":"private static void setTypeName(JComponent component, LWComponent c, String suffix) {\n        final String type;\n\n        if (c instanceof LWSlide && c.isPathwayOwned())\n            type = \"Pathway\";\n        else\n            type = c.getComponentTypeLabel();\n        \n        component.setName(type + \" \" + suffix);\n    }","commit_id":"172281475dcdbbd764cc23191594419c1f0005c2","url":"https://github.com/VUE/VUE"},{"original_method":"private void loadData(LWComponent c) {\n\n        LWComponent slideTitle = null;\n\n        if (c instanceof LWSlide && c.isPathwayOwned() && c.hasChildren()) {\n            search:\n            try { \n                final LWComponent titleStyle = ((LWSlide)c).getEntry().pathway.getMasterSlide().getTitleStyle();\n                    \n                if (titleStyle == null)\n                    break search;\n                \n                // check top-level children first:\n                for (LWComponent sc : c.getChildren()) {\n                    if (sc.getStyle() == titleStyle) {\n                        slideTitle = sc;\n                        break search;\n                    }\n                }\n                \n                // check everything else second\n                // We wind up rechecking the slide's immediate children, but this is just a fallback condition.\n                for (LWComponent sc : c.getAllDescendents()) {\n                    if (sc.getStyle() == titleStyle) {\n                        slideTitle = sc;\n                        break search;\n                    }\n                }\n            } catch (Throwable t) {\n                Log.error(\"load \" + c, t);\n            }\n        }\n\n        if (slideTitle == null)\n            mLabelPane.load(c);\n        else\n            mLabelPane.load(slideTitle, c);\n\n\n        if (c.getDataTable() == null) {\n            Widget.setHidden(mDataSetData, true);\n        } else {\n            mDataSetData.loadTable(c.getDataTable());\n            Widget.setHidden(mDataSetData, false);\n        }\n        \n        mKeywords.loadKeywords(c);\n        \n        if (DEBUG.Enabled)\n            setTitleItem(c.getUniqueComponentTypeLabel());\n        else\n            setTitleItem(c.getComponentTypeLabel());\n    }","id":48460,"modified_method":"private void loadAllNodePanes(LWComponent c) {\n\n        LWComponent slideTitle = null;\n\n        if (c instanceof LWSlide && c.isPathwayOwned() && c.hasChildren()) {\n            search:\n            try { \n                final LWComponent titleStyle = ((LWSlide)c).getEntry().pathway.getMasterSlide().getTitleStyle();\n                    \n                if (titleStyle == null)\n                    break search;\n                \n                // check top-level children first:\n                for (LWComponent sc : c.getChildren()) {\n                    if (sc.getStyle() == titleStyle) {\n                        slideTitle = sc;\n                        break search;\n                    }\n                }\n                \n                // check everything else second\n                // We wind up rechecking the slide's immediate children, but this is just a fallback condition.\n                for (LWComponent sc : c.getAllDescendents()) {\n                    if (sc.getStyle() == titleStyle) {\n                        slideTitle = sc;\n                        break search;\n                    }\n                }\n            } catch (Throwable t) {\n                Log.error(\"load \" + c, t);\n            }\n        }\n\n        if (slideTitle == null)\n            mLabelPane.load(c);\n        else\n            mLabelPane.load(slideTitle, c);\n\n\n        if (c.getDataTable() == null) {\n            Widget.hide(mDataSetData);\n        } else {\n            mDataSetData.loadTable(c.getDataTable());\n            Widget.show(mDataSetData);\n        }\n        \n        if (c.hasResource()) {\n            //loadResource(c.getResource());\n            loadResource(c.getResource(), c);\n            showResourcePanes(true);\n        } else {\n            showResourcePanes(false);\n        }\n        \n        mKeywords.loadKeywords(c);\n        \n        if (DEBUG.Enabled)\n            setTitleItem(c.getUniqueComponentTypeLabel());\n        else\n            setTitleItem(c.getComponentTypeLabel());\n    }","commit_id":"161ca8a9c5e1f011eb81295a93dd8a8fa3003e5b","url":"https://github.com/VUE/VUE"},{"original_method":"private void loadSingleSelection(LWComponent c)\n    {\n        Widget.setHidden(mSelectionInfo, true);\n        \n        //displayPanes(NODE);\n        showNodePanes(true);\n\n        if (c instanceof LWSlide || c.hasAncestorOfType(LWSlide.class)) {\n            mKeywords.setHidden(true);\n            Widget.setHidden(ontologicalMetadata, true);\n        }\n\n        if (activeEntrySelectionSync != c) {\n            mPathwayNotes.setHidden(true);\n            loadedEntry = null;\n        } \n        activeEntrySelectionSync = null;\n\n        loadData(c);\n             \t\n        if (c.hasResource()) {\n            //loadResource(c.getResource());\n            loadResource(c.getResource(), c);\n            showResourcePanes(true);\n        } else {\n            showResourcePanes(false);\n        }\n        \n    }","id":48461,"modified_method":"private void loadSingleSelection(LWComponent c)\n    {\n        Widget.hide(mSelectionInfo);\n        \n        //displayPanes(NODE);\n        showNodePanes(true);\n\n        if (c instanceof LWSlide || c.hasAncestorOfType(LWSlide.class)) {\n            Widget.hide(mKeywords);\n            Widget.hide(ontologicalMetadata);\n        }\n\n        if (activeEntrySelectionSync != c) {\n            Widget.hide(mPathwayNotes);\n            loadedEntry = null;\n        } \n        activeEntrySelectionSync = null;\n\n        loadAllNodePanes(c);\n             \t\n//         if (c.hasResource()) {\n//             //loadResource(c.getResource());\n//             loadResource(c.getResource(), c);\n//             showResourcePanes(true);\n//         } else {\n//             showResourcePanes(false);\n//         }\n        \n    }","commit_id":"161ca8a9c5e1f011eb81295a93dd8a8fa3003e5b","url":"https://github.com/VUE/VUE"},{"original_method":"public void activeChanged(final tufts.vue.ActiveEvent _e, final LWPathway.Entry entry)\n    {\n        displayHold();\n        \n        final int index = (entry == null ? -9 : entry.index() + 1);\n\n        loadedEntry = entry;\n\n//         //final boolean slidesShowing = LWPathway.isShowingSlideIcons();\n//         final boolean slidesShowing = entry.pathway.isShowingSlides();\n        \n        if (index < 1 || entry.pathway.isShowingSlides()) {\n            \n            mPathwayNotes.setHidden(true);\n            mPathwayNotes.detach();\n            activeEntrySelectionSync = null;\n\n        } else {\n\n            // We always get activeChanged events for the LWPathway.Entry BEFORE the\n            // resulting selection change on the map, so we can reliably set\n            // activeEntrySelectioSync here, and check for it later when are notified\n            // that the selection has changed.\n\n//             if (slidesShowing) {\n//                 // This adds the reverse case: display node notes when a slide is selected:\n//                 activeEntrySelectionSync = entry.getSlide();\n//                 mPathwayNotes.attach(entry.node);\n//                 mPathwayNotes.setTitle(\"Node Notes\");\n//          } else {\n                activeEntrySelectionSync = entry.node;\n                mPathwayNotes.attach(entry.getSlide());\n                mPathwayNotes.setTitle(\"Pathway Notes (\" + entry.pathway.getLabel() + \": #\" + index + \")\");\n//          }\n\n            \n            mPathwayNotes.setHidden(false);\n        }\n\n        displayRelease(); // can optimize out: should be able to rely on follow-on selectionChanged...\n        \n    }","id":48462,"modified_method":"public void activeChanged(final tufts.vue.ActiveEvent _e, final LWPathway.Entry entry)\n    {\n        displayHold();\n        \n        final int index = (entry == null ? -9 : entry.index() + 1);\n\n        loadedEntry = entry;\n\n//         //final boolean slidesShowing = LWPathway.isShowingSlideIcons();\n//         final boolean slidesShowing = entry.pathway.isShowingSlides();\n        \n        if (index < 1 || entry.pathway.isShowingSlides()) {\n            \n            Widget.hide(mPathwayNotes);\n            mPathwayNotes.detach();\n            activeEntrySelectionSync = null;\n\n        } else {\n\n            // We always get activeChanged events for the LWPathway.Entry BEFORE the\n            // resulting selection change on the map, so we can reliably set\n            // activeEntrySelectioSync here, and check for it later when are notified\n            // that the selection has changed.\n\n//             if (slidesShowing) {\n//                 // This adds the reverse case: display node notes when a slide is selected:\n//                 activeEntrySelectionSync = entry.getSlide();\n//                 mPathwayNotes.attach(entry.node);\n//                 mPathwayNotes.setTitle(\"Node Notes\");\n//          } else {\n                activeEntrySelectionSync = entry.node;\n                mPathwayNotes.attach(entry.getSlide());\n                mPathwayNotes.setTitle(\"Pathway Notes (\" + entry.pathway.getLabel() + \": #\" + index + \")\");\n//          }\n\n            Widget.show(mPathwayNotes);\n        }\n\n        displayRelease(); // can optimize out: should be able to rely on follow-on selectionChanged...\n        \n    }","commit_id":"161ca8a9c5e1f011eb81295a93dd8a8fa3003e5b","url":"https://github.com/VUE/VUE"},{"original_method":"private void loadResource(final Resource r, LWComponent node) {\n        \n        if (DEBUG.RESOURCE) out(\"loadResource: \" + r);\n        \n        if (r == null)\n            return;\n\n        mResource = r;\n        //mResourceMetaData.loadResource(r);\n        mResourceMetaData.loadTable(r.getProperties());\n        mPreview.loadResource(r);\n\n        Widget.setHidden(mSelectionInfo, true);\n        loadContentSummary(r, node);\n\n    }","id":48463,"modified_method":"private void loadResource(final Resource r, LWComponent node) {\n        \n        if (DEBUG.RESOURCE) out(\"loadResource: \" + r);\n        \n        if (r == null)\n            return;\n\n        mResource = r;\n        //mResourceMetaData.loadResource(r);\n        mResourceMetaData.loadTable(r.getProperties());\n        mPreview.loadResource(r);\n\n        Widget.hide(mSelectionInfo);\n        loadContentSummary(r, node);\n\n    }","commit_id":"161ca8a9c5e1f011eb81295a93dd8a8fa3003e5b","url":"https://github.com/VUE/VUE"},{"original_method":"private void loadMultiSelection(final LWSelection s)\n    {\n        loadedEntry = null;\n        hideAllPanes();\n        mKeywords.loadKeywords(null);\n        // todo: actually pull mTypes out of LWSelection to count types of each kind\n        String txt = String.format(\"%d items selected\", s.size());\n        setTitleItem(txt);\n        //String txt = String.format(\"<html><center>%d items selected\", s.size());\n        if (s.getDescription().length() > 0)\n            txt = \"<html>\" + txt + \" \" + s.getDescription();\n            //txt = txt + \" \" + s.getDescription();\n        //txt = \"<html><center>\" + txt + \" \" + s.getDescription();\n        mSelectionInfo.setText(txt);\n        Widget.setHidden(mLabelPane, false); // connect up to schematic-field style node?\n        Widget.setHidden(mSelectionInfo, false);\n      //Widget.setExpanded(mKeywords, true);\n        Widget.setHidden(mKeywords, false);\n    }","id":48464,"modified_method":"private void loadMultiSelection(final LWSelection s)\n    {\n        loadedEntry = null;\n        hideAllPanes();\n        mKeywords.loadKeywords(null);\n        // todo: actually pull mTypes out of LWSelection to count types of each kind\n        String txt = String.format(\"%d items selected\", s.size());\n        setTitleItem(txt);\n        //String txt = String.format(\"<html><center>%d items selected\", s.size());\n        if (s.getDescription().length() > 0)\n            txt = \"<html>\" + txt + \" \" + s.getDescription();\n            //txt = txt + \" \" + s.getDescription();\n        //txt = \"<html><center>\" + txt + \" \" + s.getDescription();\n        mSelectionInfo.setText(txt);\n        Widget.show(mLabelPane); // connect up to schematic-field style node?\n        Widget.show(mSelectionInfo);\n      //Widget.setExpanded(mKeywords, true);\n        Widget.show(mKeywords);\n    }","commit_id":"161ca8a9c5e1f011eb81295a93dd8a8fa3003e5b","url":"https://github.com/VUE/VUE"},{"original_method":"private void setTypeName(JComponent component, LWComponent c, String suffix)\n    {\n        final String type = c.getComponentTypeLabel();\n        \n        String title;\n        if (suffix != null)\n            title = type + \" \" + suffix;\n        else\n            title = type;\n        \n        component.setName(title);\n    }","id":48465,"modified_method":"private static void setTypeName(JComponent component, LWComponent c, String suffix)\n    {\n        final String type;\n\n        if (DEBUG.Enabled)\n            type = c.getUniqueComponentTypeLabel();\n        else\n            type = c.getComponentTypeLabel();\n        \n        String title;\n        if (suffix != null)\n            title = type + \" \" + suffix;\n        else\n            title = type;\n        \n        component.setName(title);\n    }","commit_id":"161ca8a9c5e1f011eb81295a93dd8a8fa3003e5b","url":"https://github.com/VUE/VUE"},{"original_method":"public void selectionChanged(final LWSelection s)\n    {\n        selectionChanged = true;\n\n        displayHold();\n        \n        if (s.size() == 0) {\n            \n            hideAll();\n            mSelectionInfo.setText(\"nothing selected\");\n            Widget.setHidden(mSelectionInfo, false);        \n            setVisible(true);\n            \n        } else if (s.size() == 1) {\n\n            loadSingleSelection(s.first());\n            setVisible(true);\n            \n        } else {\n            \n            loadMultiSelection(s);\n            setVisible(true);\n            \n        }\n\n        displayRelease();\n    }","id":48466,"modified_method":"public void selectionChanged(final LWSelection s)\n    {\n        selectionChanged = true;\n\n        displayHold();\n        \n        if (s.size() == 0) {\n            \n            hideAll();\n            mSelectionInfo.setText(\"nothing selected\");\n            Widget.show(mSelectionInfo);\n            setVisible(true);\n            \n        } else if (s.size() == 1) {\n\n            loadSingleSelection(s.first());\n            setVisible(true);\n            \n        } else {\n            \n            loadMultiSelection(s);\n            setVisible(true);\n            \n        }\n\n        displayRelease();\n    }","commit_id":"161ca8a9c5e1f011eb81295a93dd8a8fa3003e5b","url":"https://github.com/VUE/VUE"},{"original_method":"private void propagateFromDeclaration(Term that, Declaration term) {\n        if(Util.isUnBoxed(term))\n            Util.markUnBoxed(that);\n    }","id":48467,"modified_method":"private void propagateFromDeclaration(Term that, TypedDeclaration term) {\n        if(Util.isUnBoxed(term))\n            Util.markUnBoxed(that);\n    }","commit_id":"4574ec51fb2eb56b20b6f2d71fdd628bdb8bfa70","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"@Override\n    public void visit(BaseMemberExpression that) {\n        super.visit(that);\n        if(Util.isUnBoxed(that.getDeclaration()) || transformer.isCeylonBoolean(that.getTypeModel()))\n            Util.markUnBoxed(that);\n    }","id":48468,"modified_method":"@Override\n    public void visit(BaseMemberExpression that) {\n        super.visit(that);\n        if(Util.isUnBoxed((TypedDeclaration)that.getDeclaration()) || transformer.isCeylonBoolean(that.getTypeModel()))\n            Util.markUnBoxed(that);\n    }","commit_id":"4574ec51fb2eb56b20b6f2d71fdd628bdb8bfa70","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"@Override\n    public void visit(QualifiedMemberExpression that) {\n        super.visit(that);\n        propagateFromDeclaration(that, that.getDeclaration());\n    }","id":48469,"modified_method":"@Override\n    public void visit(QualifiedMemberExpression that) {\n        super.visit(that);\n        propagateFromDeclaration(that, (TypedDeclaration)that.getDeclaration());\n    }","commit_id":"4574ec51fb2eb56b20b6f2d71fdd628bdb8bfa70","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"JCExpression transformAssignment(Node op, Term leftTerm, Term rightTerm) {\n        JCExpression result = null;\n\n        // FIXME: can this be anything else than a Primary?\n        Declaration decl = ((Tree.Primary)leftTerm).getDeclaration();\n\n        // right side is easy\n        JCExpression rhs = transformExpression(rightTerm, Util.getBoxingStrategy(decl));\n        \n        // left side depends\n        \n        JCExpression expr = null;\n        CeylonVisitor v = new CeylonVisitor(gen());\n        leftTerm.visitChildren(v);\n        if (v.hasResult()) {\n            expr = v.getSingleResult();\n        }\n        \n        // FIXME: can this be anything else than a Value or a TypedDeclaration?\n        boolean variable = false;\n        if (decl instanceof Value) {\n            variable = ((Value)decl).isVariable();\n        } else if (decl instanceof TypedDeclaration) {\n            variable = ((TypedDeclaration)decl).isVariable();\n        }\n        if(decl.isToplevel()){\n            // must use top level setter\n            result = globalGen().setGlobalValue(\n                    makeIdentOrSelect(expr, decl.getContainer().getQualifiedNameString()),\n                    decl.getName(),\n                    rhs);\n        } else if ((decl instanceof Getter)) {\n            // must use the setter\n            if (decl.getContainer() instanceof Method){\n                result = at(op).Apply(List.<JCTree.JCExpression>nil(),\n                        makeIdentOrSelect(expr, decl.getName() + \"$setter\", Util.getSetterName(decl.getName())),\n                        List.<JCTree.JCExpression>of(rhs));\n            } else {\n                result = at(op).Apply(List.<JCTree.JCExpression>nil(),\n                        makeIdentOrSelect(expr, Util.getSetterName(decl.getName())),\n                        List.<JCTree.JCExpression>of(rhs));            \n            }\n        } else if(variable && (Util.isClassAttribute(decl))){\n            // must use the setter\n            result = at(op).Apply(List.<JCTree.JCExpression>nil(),\n                    makeIdentOrSelect(expr, Util.getSetterName(decl.getName())), \n                    List.<JCTree.JCExpression>of(rhs));\n        } else if(variable && decl.isCaptured()){\n            // must use the qualified setter\n            result = at(op).Apply(List.<JCTree.JCExpression>nil(),\n                    makeIdentOrSelect(expr, decl.getName(), Util.getSetterName(decl.getName())), \n                    List.<JCTree.JCExpression>of(rhs));\n        } else {\n            result = at(op).Assign(makeIdentOrSelect(expr, decl.getName()), rhs);\n        }\n        \n        return result;\n    }","id":48470,"modified_method":"JCExpression transformAssignment(Node op, Term leftTerm, Term rightTerm) {\n        JCExpression result = null;\n\n        // FIXME: can this be anything else than a Primary?\n        TypedDeclaration decl = (TypedDeclaration) ((Tree.Primary)leftTerm).getDeclaration();\n\n        // right side is easy\n        JCExpression rhs = transformExpression(rightTerm, Util.getBoxingStrategy(decl));\n        \n        // left side depends\n        \n        JCExpression expr = null;\n        CeylonVisitor v = new CeylonVisitor(gen());\n        leftTerm.visitChildren(v);\n        if (v.hasResult()) {\n            expr = v.getSingleResult();\n        }\n        \n        // FIXME: can this be anything else than a Value or a TypedDeclaration?\n        boolean variable = false;\n        if (decl instanceof Value) {\n            variable = ((Value)decl).isVariable();\n        } else {\n            variable = decl.isVariable();\n        }\n        if(decl.isToplevel()){\n            // must use top level setter\n            result = globalGen().setGlobalValue(\n                    makeIdentOrSelect(expr, decl.getContainer().getQualifiedNameString()),\n                    decl.getName(),\n                    rhs);\n        } else if ((decl instanceof Getter)) {\n            // must use the setter\n            if (decl.getContainer() instanceof Method){\n                result = at(op).Apply(List.<JCTree.JCExpression>nil(),\n                        makeIdentOrSelect(expr, decl.getName() + \"$setter\", Util.getSetterName(decl.getName())),\n                        List.<JCTree.JCExpression>of(rhs));\n            } else {\n                result = at(op).Apply(List.<JCTree.JCExpression>nil(),\n                        makeIdentOrSelect(expr, Util.getSetterName(decl.getName())),\n                        List.<JCTree.JCExpression>of(rhs));            \n            }\n        } else if(variable && (Util.isClassAttribute(decl))){\n            // must use the setter\n            result = at(op).Apply(List.<JCTree.JCExpression>nil(),\n                    makeIdentOrSelect(expr, Util.getSetterName(decl.getName())), \n                    List.<JCTree.JCExpression>of(rhs));\n        } else if(variable && decl.isCaptured()){\n            // must use the qualified setter\n            result = at(op).Apply(List.<JCTree.JCExpression>nil(),\n                    makeIdentOrSelect(expr, decl.getName(), Util.getSetterName(decl.getName())), \n                    List.<JCTree.JCExpression>of(rhs));\n        } else {\n            result = at(op).Assign(makeIdentOrSelect(expr, decl.getName()), rhs);\n        }\n        \n        return result;\n    }","commit_id":"4574ec51fb2eb56b20b6f2d71fdd628bdb8bfa70","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"JCStatement transform(Tree.Return ret) {\n        Tree.Expression expr = ret.getExpression();\n        JCExpression returnExpr = null;\n        if (expr != null) {\n            returnExpr = expressionGen().transformExpression(expr.getTerm(), Util.getBoxingStrategy(ret.getDeclaration()));\n        }\n        return at(ret).Return(returnExpr);\n    }","id":48471,"modified_method":"JCStatement transform(Tree.Return ret) {\n        Tree.Expression expr = ret.getExpression();\n        JCExpression returnExpr = null;\n        if (expr != null) {\n            // we can cast to TypedDeclaration here because return with expressions are only in Method\n            returnExpr = expressionGen().transformExpression(expr.getTerm(), Util.getBoxingStrategy((TypedDeclaration)ret.getDeclaration()));\n        }\n        return at(ret).Return(returnExpr);\n    }","commit_id":"4574ec51fb2eb56b20b6f2d71fdd628bdb8bfa70","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"public static boolean isUnBoxed(Term node){\n        return node.hasAttribute(IS_UNBOXED);\n    }","id":48472,"modified_method":"public static boolean isUnBoxed(Term node){\n        return node.getUnboxed();\n    }","commit_id":"4574ec51fb2eb56b20b6f2d71fdd628bdb8bfa70","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"public static boolean isUnBoxed(Declaration decl){\n        return decl.hasAttribute(IS_UNBOXED);\n    }","id":48473,"modified_method":"public static boolean isUnBoxed(TypedDeclaration decl){\n        return decl.getUnboxed();\n    }","commit_id":"4574ec51fb2eb56b20b6f2d71fdd628bdb8bfa70","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"public static void markUnBoxed(Term node) {\n        node.setAttribute(IS_UNBOXED, true);\n    }","id":48474,"modified_method":"public static void markUnBoxed(Term node) {\n        node.setUnboxed(true);\n    }","commit_id":"4574ec51fb2eb56b20b6f2d71fdd628bdb8bfa70","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"public static BoxingStrategy getBoxingStrategy(Declaration decl) {\n        return isUnBoxed(decl) ? BoxingStrategy.UNBOXED : BoxingStrategy.BOXED;\n    }","id":48475,"modified_method":"public static BoxingStrategy getBoxingStrategy(TypedDeclaration decl) {\n        return isUnBoxed(decl) ? BoxingStrategy.UNBOXED : BoxingStrategy.BOXED;\n    }","commit_id":"4574ec51fb2eb56b20b6f2d71fdd628bdb8bfa70","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"public static void markUnBoxed(Declaration decl) {\n        decl.setAttribute(IS_UNBOXED, true);\n    }","id":48476,"modified_method":"public static void markUnBoxed(TypedDeclaration decl) {\n        decl.setUnboxed(true);\n    }","commit_id":"4574ec51fb2eb56b20b6f2d71fdd628bdb8bfa70","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"private void setErasureState(TypedDeclaration decl) {\n        // deal with invalid input\n        if(decl == null)\n            return;\n\n        ProducedType type = decl.getType();\n        if(type != null){\n            if(hasErasure(type)){\n                decl.setTypeErased(true);\n            }\n            if(hasTypeParameterWithConstraints(type)){\n                decl.setUntrustedType(true);\n                decl.setTypeErased(true);\n            }\n            if(!BooleanUtil.isTrue(decl.getTypeErased())\n                    && decl.isActual()\n                    && decl.getContainer() instanceof ClassOrInterface){\n                // make sure we did not lose type information due to non-widening\n                if(isWideningTypedDeclaration(decl))\n                    decl.setTypeErased(true);\n            }\n        }\n    }","id":48477,"modified_method":"private void setErasureState(TypedDeclaration decl) {\n        // deal with invalid input\n        if(decl == null)\n            return;\n\n        ProducedType type = decl.getType();\n        if(type != null){\n            if(hasErasure(type)){\n                decl.setTypeErased(true);\n            }\n            if(decl.isActual()\n                    && decl.getContainer() instanceof ClassOrInterface\n                    // make sure we did not lose type information due to non-widening\n                    && isWideningTypedDeclaration(decl)){\n                // widening means not trusting the type, otherwise we end up thinking that the type is\n                // something it's not and regular erasure rules don't apply there\n                decl.setUntrustedType(true);\n                decl.setTypeErased(true);\n            }\n        }\n    }","commit_id":"1698b6fc02428fdbc2f81ac32a6eb249c0443f45","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"@Override\n    public void visit(BaseMemberExpression that) {\n        super.visit(that);\n        // handle errors gracefully\n        if(that.getDeclaration() == null)\n            return;\n        Declaration decl = that.getDeclaration();\n        if(CodegenUtil.isUnBoxed((TypedDeclaration)decl)\n                // special cases for true/false\n                || isBooleanTrue(decl)\n                || isBooleanFalse(decl))\n            CodegenUtil.markUnBoxed(that);\n        if(CodegenUtil.isRaw((TypedDeclaration) decl))\n            CodegenUtil.markRaw(that);\n        if(CodegenUtil.hasTypeErased((TypedDeclaration) decl))\n            CodegenUtil.markTypeErased(that);\n    }","id":48478,"modified_method":"@Override\n    public void visit(BaseMemberExpression that) {\n        super.visit(that);\n        // handle errors gracefully\n        if(that.getDeclaration() == null)\n            return;\n        TypedDeclaration decl = (TypedDeclaration) that.getDeclaration();\n        if(CodegenUtil.isUnBoxed(decl)\n                // special cases for true/false\n                || isBooleanTrue(decl)\n                || isBooleanFalse(decl))\n            CodegenUtil.markUnBoxed(that);\n        if(CodegenUtil.isRaw(decl))\n            CodegenUtil.markRaw(that);\n        if(CodegenUtil.hasTypeErased(decl))\n            CodegenUtil.markTypeErased(that);\n        if(CodegenUtil.hasUntrustedType(decl))\n            CodegenUtil.markUntrustedType(that);\n    }","commit_id":"1698b6fc02428fdbc2f81ac32a6eb249c0443f45","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"private void propagateFromDeclaration(Term that, TypedDeclaration term) {\n        if(CodegenUtil.isUnBoxed(term))\n            CodegenUtil.markUnBoxed(that);\n        if(CodegenUtil.isRaw(term))\n            CodegenUtil.markRaw(that);\n        if(CodegenUtil.hasTypeErased(term))\n            CodegenUtil.markTypeErased(that);\n        if(CodegenUtil.hasUntrustedType(term))\n            CodegenUtil.markUntrustedType(that);\n    }","id":48479,"modified_method":"private void propagateFromDeclaration(Term that, TypedDeclaration decl) {\n        if(CodegenUtil.isUnBoxed(decl))\n            CodegenUtil.markUnBoxed(that);\n        if(CodegenUtil.isRaw(decl))\n            CodegenUtil.markRaw(that);\n        if(CodegenUtil.hasTypeErased(decl))\n            CodegenUtil.markTypeErased(that);\n        if(CodegenUtil.hasUntrustedType(decl) || hasTypeParameterWithConstraintsOutsideScope(decl.getType(), that.getScope()))\n            CodegenUtil.markUntrustedType(that);\n    }","commit_id":"1698b6fc02428fdbc2f81ac32a6eb249c0443f45","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"public ClassDefinitionBuilder reifiedIs(ProducedType type, java.util.List<TypeParameter> typeParameters,\n            java.util.List<ProducedType> satisfiedTypes, ProducedType extendedType){\n        MethodDefinitionBuilder method = MethodDefinitionBuilder.systemMethod(gen, gen.naming.getIsMethodName(type));\n        method.modifiers(PUBLIC);\n        method.resultType(List.<JCAnnotation>nil(), gen.make().TypeIdent(TypeTags.BOOLEAN));\n        // in classes this overrides an interface method\n        if(type.getDeclaration() instanceof com.redhat.ceylon.compiler.typechecker.model.Class)\n            method.isOverride(true);\n\n        String paramName = \"type\";\n        ParameterDefinitionBuilder param = ParameterDefinitionBuilder.instance(gen, paramName);\n        param.type(gen.makeTypeDescriptorType(), List.<JCAnnotation>nil());\n        method.parameter(param);\n\n        if ((modifiers & INTERFACE) != 0) {\n            // place the real body in the impl class\n            concreteInterfaceMemberDefs.reifiedIs(type, typeParameters, satisfiedTypes, extendedType);\n            method.noBody();\n        }else{\n            // we build the body last to first, and last is false or extended type\n            JCExpression lastTest;\n            if(extendedType != null && !gen.willEraseToObject(extendedType)){\n                if(Decl.isCeylon(extendedType.getDeclaration()))\n                    lastTest = gen.make().Apply(null, gen.makeSelect(\"super\", gen.naming.getIsMethodName(extendedType)), List.of(gen.makeUnquotedIdent(paramName)));\n                else\n                    lastTest = gen.makeUtilInvocation(\"isReifiedJava\", \n                            List.of(gen.makeReifiedTypeArgument(extendedType), gen.makeUnquotedIdent(paramName)), \n                            List.<JCTree.JCExpression>nil());\n            }else\n                lastTest = gen.makeBoolean(false);\n            List<JCStatement> body = List.<JCStatement>of(gen.make().Return(lastTest));\n\n            // then before that we test every interface\n            if(!satisfiedTypes.isEmpty()){\n                JCExpression interfacesTest = null;\n                for(ProducedType pt : satisfiedTypes){\n                    String isDelegateName = gen.naming.getIsMethodName(pt);\n                    JCExpression isCall;\n                    if(Decl.isCeylon(pt.getDeclaration())){\n                        isCall = gen.make().Apply(null, gen.makeUnquotedIdent(isDelegateName), List.<JCExpression>of(gen.makeUnquotedIdent(paramName)));\n                    }else{\n                        isCall = gen.makeUtilInvocation(\"isReifiedJava\", \n                                List.of(gen.makeReifiedTypeArgument(pt), gen.makeUnquotedIdent(paramName)), \n                                List.<JCTree.JCExpression>nil());\n                    }\n                    if(interfacesTest != null)\n                        interfacesTest = gen.make().Binary(JCTree.OR, isCall, interfacesTest);\n                    else\n                        interfacesTest = isCall;\n                }\n                JCStatement ifInterfacesTest = gen.make().If(interfacesTest, gen.make().Return(gen.makeBoolean(true)), null);\n                body = body.prepend(ifInterfacesTest);\n            }\n            \n            // no point checking for exact class since anonymous classes can't be referred to by \"is\"\n            if(!type.getDeclaration().isAnonymous()){\n                // finally check for the exact class match\n                JCExpression classDescriptorCall = gen.makeReifiedTypeArgument(type);\n                JCExpression classEqualsCall = gen.make().Apply(null, gen.makeSelect(classDescriptorCall, \"equals\"), List.of(gen.makeUnquotedIdent(paramName)));\n                JCStatement classTest = gen.make().If(classEqualsCall, gen.make().Return(gen.makeBoolean(true)), null);\n                body = body.prepend(classTest);\n            }\n\n            method.body(body);\n        }\n        \n        defs(method.build());\n        return this;\n    }","id":48480,"modified_method":"public ClassDefinitionBuilder reifiedIs(ProducedType type, java.util.List<TypeParameter> typeParameters,\n            java.util.List<ProducedType> satisfiedTypes, ProducedType extendedType){\n        if ((modifiers & INTERFACE) != 0) {\n            // place the real body in the impl class\n            concreteInterfaceMemberDefs.reifiedIs(type, typeParameters, satisfiedTypes, extendedType);\n        }else{\n            MethodDefinitionBuilder method = MethodDefinitionBuilder.systemMethod(gen, gen.naming.getIsMethodName(type));\n            method.modifiers(PUBLIC);\n            method.resultType(List.<JCAnnotation>nil(), gen.make().TypeIdent(TypeTags.BOOLEAN));\n            // in classes this overrides an interface method\n            if(type.getDeclaration() instanceof com.redhat.ceylon.compiler.typechecker.model.Class)\n                method.isOverride(true);\n\n            String paramName = \"type\";\n            ParameterDefinitionBuilder param = ParameterDefinitionBuilder.instance(gen, paramName);\n            param.type(gen.makeTypeDescriptorType(), List.<JCAnnotation>nil());\n            method.parameter(param);\n\n            // we build the body last to first, and last is false or extended type\n            JCExpression lastTest;\n            if(extendedType != null && !gen.willEraseToObject(extendedType)){\n                if(Decl.isCeylon(extendedType.getDeclaration()))\n                    lastTest = gen.make().Apply(null, gen.makeSelect(\"super\", gen.naming.getIsMethodName(extendedType)), List.of(gen.makeUnquotedIdent(paramName)));\n                else\n                    lastTest = gen.makeUtilInvocation(\"isReifiedJava\", \n                            List.of(gen.makeReifiedTypeArgument(extendedType), gen.makeUnquotedIdent(paramName)), \n                            List.<JCTree.JCExpression>nil());\n            }else\n                lastTest = gen.makeBoolean(false);\n            List<JCStatement> body = List.<JCStatement>of(gen.make().Return(lastTest));\n\n            // then before that we test every interface\n            if(!satisfiedTypes.isEmpty()){\n                JCExpression interfacesTest = null;\n                for(ProducedType pt : satisfiedTypes){\n                    JCExpression isCall;\n                    Interface iface = (Interface) pt.getDeclaration();\n                    if(Decl.isCeylon(iface)){\n                        final String implFieldName = gen.getCompanionFieldName(iface);\n                        String isDelegateName = gen.naming.getIsMethodName(pt);\n                        isCall = gen.make().Apply(null, gen.makeSelect(implFieldName, isDelegateName), \n                                                  List.<JCExpression>of(gen.makeUnquotedIdent(paramName)));\n                    }else{\n                        isCall = gen.makeUtilInvocation(\"isReifiedJava\", \n                                List.of(gen.makeReifiedTypeArgument(pt), gen.makeUnquotedIdent(paramName)), \n                                List.<JCTree.JCExpression>nil());\n                    }\n                    if(interfacesTest != null)\n                        interfacesTest = gen.make().Binary(JCTree.OR, isCall, interfacesTest);\n                    else\n                        interfacesTest = isCall;\n                }\n                JCStatement ifInterfacesTest = gen.make().If(interfacesTest, gen.make().Return(gen.makeBoolean(true)), null);\n                body = body.prepend(ifInterfacesTest);\n            }\n            \n            // no point checking for exact class since anonymous classes can't be referred to by \"is\"\n            if(!type.getDeclaration().isAnonymous()){\n                // finally check for the exact class match\n                JCExpression classDescriptorCall = gen.makeReifiedTypeArgument(type);\n                JCExpression classEqualsCall = gen.make().Apply(null, gen.makeSelect(classDescriptorCall, \"equals\"), List.of(gen.makeUnquotedIdent(paramName)));\n                JCStatement classTest = gen.make().If(classEqualsCall, gen.make().Return(gen.makeBoolean(true)), null);\n                body = body.prepend(classTest);\n            }\n\n            method.body(body);\n            defs(method.build());\n        }\n        \n        return this;\n    }","commit_id":"87f2ba4fe4ddf96006ea05db553079bdc7fc4897","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"/**\r\n\t * \r\n\t *\r\n\t */\r\n\tpublic static void reloadConfiguration()\r\n\t{\r\n\t\t// DEBUG level logging won't work here since we haven't loaded the config yet...\r\n\t\tproperties = new Properties();\r\n\t\tInputStream iv = null;\r\n\t\ttry {\r\n\t\t\tiv = Config.class.getResourceAsStream(\"/susimail.properties\");\r\n\t\t\tproperties.load(iv);\r\n\t\t} catch (Exception e) {\r\n\t\t\tDebug.debug(Debug.ERROR, \"Could not open WEB-INF/classes/susimail.properties (possibly in jar), reason: \" + e);\r\n\t\t} finally {\r\n\t\t\tif(iv != null) try { iv.close(); } catch(IOException ioe) {}\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tFile cfg = new File(I2PAppContext.getGlobalContext().getConfigDir(), \"susimail.config\");\r\n\t\t\tif (cfg.exists()) {\r\n\t\t\t\tconfig = new Properties();\r\n\t\t\t\tDataHelper.loadProps(config, cfg);\r\n\t\t\t}\r\n\t\t} catch (Exception e) {\r\n\t\t\tDebug.debug(Debug.ERROR, \"Could not open susimail.config, reason: \" + e);\r\n\t\t}\r\n\t}","id":48481,"modified_method":"/**\r\n\t * \r\n\t *\r\n\t */\r\n\tpublic synchronized static void reloadConfiguration()\r\n\t{\r\n\t\t// DEBUG level logging won't work here since we haven't loaded the config yet...\r\n\t\tproperties = new Properties();\r\n\t\tInputStream iv = null;\r\n\t\ttry {\r\n\t\t\tiv = Config.class.getResourceAsStream(\"/susimail.properties\");\r\n\t\t\tproperties.load(iv);\r\n\t\t} catch (Exception e) {\r\n\t\t\tDebug.debug(Debug.ERROR, \"Could not open WEB-INF/classes/susimail.properties (possibly in jar), reason: \" + e);\r\n\t\t} finally {\r\n\t\t\tif(iv != null) try { iv.close(); } catch(IOException ioe) {}\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tFile cfg = new File(I2PAppContext.getGlobalContext().getConfigDir(), \"susimail.config\");\r\n\t\t\tif (cfg.exists()) {\r\n\t\t\t\tconfig = new OrderedProperties();\r\n\t\t\t\tDataHelper.loadProps(config, cfg);\r\n\t\t\t}\r\n\t\t} catch (Exception e) {\r\n\t\t\tDebug.debug(Debug.ERROR, \"Could not open susimail.config, reason: \" + e);\r\n\t\t}\r\n\t}","commit_id":"91d7a0ab98cab07f17058bc57f777e8b460012df","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n\t * Save data to disk.\n\t * \n\t * @return success\n\t */\n\tpublic boolean saveMail(Mail mail) {\n\t\tReadBuffer rb = mail.getBody();\n\t\tif (rb != null) {\n\t\t\tFile f = getFullFile(mail.uidl);\n\t\t\tif (f.exists())\n\t\t\t\treturn true;  // already there, all good\n\t\t\tboolean rv = write(rb, f);\n\t\t\tif (rv)\n\t\t\t\tgetHeaderFile(mail.uidl).delete();\n\t\t\treturn rv;\n\t\t}\n\t\trb = mail.getHeader();\n\t\tif (rb != null) {\n\t\t\tFile f = getHeaderFile(mail.uidl);\n\t\t\tif (f.exists())\n\t\t\t\treturn true;  // already there, all good\n\t\t\tboolean rv = write(rb, f);\n\t\t\treturn rv;\n\t\t}\n\t\treturn false;\n\t}","id":48482,"modified_method":"/**\n\t * Save data to disk.\n\t * \n\t * @return success\n\t */\n\tpublic boolean saveMail(Mail mail) {\n\t\tsynchronized(_lock) {\n\t\t\treturn locked_saveMail(mail);\n\t\t}\n\t}","commit_id":"91d7a0ab98cab07f17058bc57f777e8b460012df","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n\t * \n\t * Delete data from disk.\n\t */\n\tpublic void deleteMail(String uidl) {\n\t\tgetFullFile(uidl).delete();\n\t\tgetHeaderFile(uidl).delete();\n\t}","id":48483,"modified_method":"/**\n\t * \n\t * Delete data from disk.\n\t */\n\tpublic void deleteMail(String uidl) {\n\t\tsynchronized(_lock) {\n\t\t\tgetFullFile(uidl).delete();\n\t\t\tgetHeaderFile(uidl).delete();\n\t\t}\n\t}","commit_id":"91d7a0ab98cab07f17058bc57f777e8b460012df","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n\t *  Use the params to generate a unique directory name.\n\t *  @param pass ignored\n\t */\n\tpublic PersistentMailCache(String host, int port, String user, String pass) throws IOException {\n\t\t_cacheDir = makeCacheDirs(host, port, user, pass);\n\t\t// TODO static locking\n\t}","id":48484,"modified_method":"/**\n\t *  Use the params to generate a unique directory name.\n\t *  @param pass ignored\n\t */\n\tpublic PersistentMailCache(String host, int port, String user, String pass) throws IOException {\n\t\t_lock = getLock(host, port, user, pass);\n\t\tsynchronized(_lock) {\n\t\t\t_cacheDir = makeCacheDirs(host, port, user, pass);\n\t\t}\n\t}","commit_id":"91d7a0ab98cab07f17058bc57f777e8b460012df","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n\t * Fetch any needed data from disk.\n\t * \n\t * @return success\n\t */\n\tpublic boolean getMail(Mail mail, boolean headerOnly) {\n\t\tFile f = getFullFile(mail.uidl);\n\t\tif (f.exists()) {\n\t\t\tReadBuffer rb = read(f);\n\t\t\tif (rb != null) {\n\t\t\t\tmail.setBody(rb);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tf = getHeaderFile(mail.uidl);\n\t\tif (f.exists()) {\n\t\t\tReadBuffer rb = read(f);\n\t\t\tif (rb != null) {\n\t\t\t\tmail.setHeader(rb);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}","id":48485,"modified_method":"/**\n\t * Fetch any needed data from disk.\n\t * \n\t * @return success\n\t */\n\tpublic boolean getMail(Mail mail, boolean headerOnly) {\n\t\tsynchronized(_lock) {\n\t\t\treturn locked_getMail(mail, headerOnly);\n\t\t}\n\t}","commit_id":"91d7a0ab98cab07f17058bc57f777e8b460012df","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n\t * Fetch all mails from disk.\n\t * \n\t * @return a new collection\n\t */\n\tpublic Collection<Mail> getMails() {\n\t\tList<Mail> rv = new ArrayList<Mail>();\n\t\tfor (int j = 0; j < B64.length(); j++) {\n\t\t\tFile subdir = new File(_cacheDir, DIR_PREFIX + B64.charAt(j));\n\t\t\tFile[] files = subdir.listFiles();\n\t\t\tif (files == null)\n\t\t\t\tcontinue;\n\t\t\tfor (int i = 0; i < files.length; i++) {\n\t\t\t\tFile f = files[i];\n\t\t\t\tif (!f.isFile())\n\t\t\t\t\tcontinue;\n\t\t\t\tMail mail = load(f);\n\t\t\t\tif (mail != null)\n\t\t\t               rv.add(mail);\n\t\t\t}\n\t\t}\n\t\treturn rv;\n\t}","id":48486,"modified_method":"/**\n\t * Fetch all mails from disk.\n\t * \n\t * @return a new collection\n\t */\n\tpublic Collection<Mail> getMails() {\n\t\tsynchronized(_lock) {\n\t\t\treturn locked_getMails();\n\t\t}\n\t}","commit_id":"91d7a0ab98cab07f17058bc57f777e8b460012df","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\r\n\t * \r\n\t * @param sessionObject\r\n\t * @param request\r\n\t */\r\n\tprivate static void processLogout( SessionObject sessionObject, RequestWrapper request )\r\n\t{\r\n\t\tif( buttonPressed( request, LOGOUT ) ) {\r\n\t\t\tDebug.debug(Debug.DEBUG, \"LOGOUT, REMOVING SESSION\");\r\n\t\t\tHttpSession session = request.getSession();\r\n\t\t\tsession.removeAttribute( \"sessionObject\" );\r\n\t\t\tsession.invalidate();\r\n\t\t\tPOP3MailBox mailbox = sessionObject.mailbox;\r\n\t\t\tif (mailbox != null) {\r\n\t\t\t\tmailbox.destroy();\r\n\t\t\t\tsessionObject.mailbox = null;\r\n\t\t\t\tsessionObject.mailCache = null;\r\n\t\t\t}\r\n\t\t\tsessionObject.info += _(\"User logged out.\") + \"<br>\";\r\n\t\t\tsessionObject.state = STATE_AUTH;\r\n\t\t}\r\n\t\telse if( sessionObject.mailbox == null ) {\r\n\t\t\tsessionObject.error += _(\"Internal error, lost connection.\") + \"<br>\";\r\n\t\t\tsessionObject.state = STATE_AUTH;\r\n\t\t}\r\n\t}","id":48487,"modified_method":"/**\r\n\t * \r\n\t * @param sessionObject\r\n\t * @param request\r\n\t */\r\n\tprivate static void processLogout( SessionObject sessionObject, RequestWrapper request, boolean isPOST )\r\n\t{\r\n\t\tif( buttonPressed( request, LOGOUT ) && isPOST) {\r\n\t\t\tDebug.debug(Debug.DEBUG, \"LOGOUT, REMOVING SESSION\");\r\n\t\t\tHttpSession session = request.getSession();\r\n\t\t\tsession.removeAttribute( \"sessionObject\" );\r\n\t\t\tsession.invalidate();\r\n\t\t\tPOP3MailBox mailbox = sessionObject.mailbox;\r\n\t\t\tif (mailbox != null) {\r\n\t\t\t\tmailbox.destroy();\r\n\t\t\t\tsessionObject.mailbox = null;\r\n\t\t\t\tsessionObject.mailCache = null;\r\n\t\t\t}\r\n\t\t\tsessionObject.info += _(\"User logged out.\") + \"<br>\";\r\n\t\t\tsessionObject.state = STATE_AUTH;\r\n\t\t} else if( sessionObject.mailbox == null ) {\r\n\t\t\tsessionObject.error += _(\"Internal error, lost connection.\") + \"<br>\";\r\n\t\t\tsessionObject.state = STATE_AUTH;\r\n\t\t}\r\n\t}","commit_id":"91d7a0ab98cab07f17058bc57f777e8b460012df","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\r\n\t * \r\n\t * @param out\r\n\t */\r\n\tprivate static void showLogin( PrintWriter out )\r\n\t{\r\n\t\tString fixedPorts = Config.getProperty( CONFIG_PORTS_FIXED, \"true\" );\r\n\t\tboolean fixed = !fixedPorts.equalsIgnoreCase(\"false\");\r\n\t\tString host = Config.getProperty( CONFIG_HOST, DEFAULT_HOST );\r\n\t\tString pop3 = Config.getProperty( CONFIG_PORTS_POP3, \"\" + DEFAULT_POP3PORT );\r\n\t\tString smtp = Config.getProperty( CONFIG_PORTS_SMTP, \"\" + DEFAULT_SMTPPORT );\r\n\t\t\r\n\t\tout.println( \"<table cellspacing=\\\"3\\\" cellpadding=\\\"5\\\">\\n\" +\r\n\t\t\t// current postman hq length limits 16/12, new postman version 32/32\r\n\t\t\t\"<tr><td align=\\\"right\\\" width=\\\"30%\\\">\" + _(\"User\") + \"<\/td><td width=\\\"40%\\\" align=\\\"left\\\"><input type=\\\"text\\\" size=\\\"32\\\" name=\\\"\" + USER + \"\\\" value=\\\"\" + \"\\\"> @mail.i2p<\/td><\/tr>\\n\" +\r\n\t\t\t\"<tr><td align=\\\"right\\\" width=\\\"30%\\\">\" + _(\"Password\") + \"<\/td><td width=\\\"40%\\\" align=\\\"left\\\"><input type=\\\"password\\\" size=\\\"32\\\" name=\\\"pass\\\" value=\\\"\" + \"\\\"><\/td><\/tr>\\n\");\r\n\t\t// which is better?\r\n\t\t//if (!fixed) {\r\n\t\tif (true) {\r\n\t\t    out.println(\r\n\t\t\t\"<tr><td align=\\\"right\\\" width=\\\"30%\\\">\" + _(\"Host\") + \"<\/td><td width=\\\"40%\\\" align=\\\"left\\\"><input type=\\\"text\\\" size=\\\"32\\\" name=\\\"\" + HOST +\"\\\" value=\\\"\" + host + \"\\\"\" + ( fixed ? \" disabled\" : \"\" ) + \"><\/td><\/tr>\\n\" +\r\n\t\t\t\"<tr><td align=\\\"right\\\" width=\\\"30%\\\">\" + _(\"POP3 Port\") + \"<\/td><td width=\\\"40%\\\" align=\\\"left\\\"><input type=\\\"text\\\" style=\\\"text-align: right;\\\" size=\\\"5\\\" name=\\\"\" + POP3 +\"\\\" value=\\\"\" + pop3 + \"\\\"\" + ( fixed ? \" disabled\" : \"\" ) + \"><\/td><\/tr>\\n\" +\r\n\t\t\t\"<tr><td align=\\\"right\\\" width=\\\"30%\\\">\" + _(\"SMTP Port\") + \"<\/td><td width=\\\"40%\\\" align=\\\"left\\\"><input type=\\\"text\\\" style=\\\"text-align: right;\\\" size=\\\"5\\\" name=\\\"\" + SMTP +\"\\\" value=\\\"\" + smtp + \"\\\"\" + ( fixed ? \" disabled\" : \"\" ) + \"><\/td><\/tr>\\n\");\r\n\t\t}\r\n\t\tout.println(\r\n\t\t\t\"<tr><td colspan=\\\"2\\\">&nbsp;<\/td><\/tr>\\n\" +\r\n\t\t\t\"<tr><td><\/td><td align=\\\"left\\\">\" + button( LOGIN, _(\"Login\") ) + spacer +\r\n\t\t\t  button(OFFLINE, _(\"Read Mail Offline\") ) + spacer +\r\n\t\t\t \" <input class=\\\"cancel\\\" type=\\\"reset\\\" value=\\\"\" + _(\"Reset\") + \"\\\"><\/td><\/tr>\\n\" +\r\n\t\t\t\"<tr><td colspan=\\\"2\\\">&nbsp;<\/td><\/tr>\\n\" +\r\n\t\t\t\"<tr><td><\/td><td align=\\\"left\\\"><a href=\\\"http://hq.postman.i2p/?page_id=14\\\">\" + _(\"Learn about I2P mail\") + \"<\/a><\/td><\/tr>\\n\" +\r\n\t\t\t\"<tr><td><\/td><td align=\\\"left\\\"><a href=\\\"http://hq.postman.i2p/?page_id=16\\\">\" + _(\"Create Account\") + \"<\/a><\/td><\/tr>\\n\" +\r\n\t\t\t\"<\/table>\");\r\n\t}","id":48488,"modified_method":"/**\r\n\t * \r\n\t * @param out\r\n\t */\r\n\tprivate static void showLogin( PrintWriter out )\r\n\t{\r\n\t\tString fixedPorts = Config.getProperty( CONFIG_PORTS_FIXED, \"true\" );\r\n\t\tboolean fixed = !fixedPorts.equalsIgnoreCase(\"false\");\r\n\t\tString host = Config.getProperty( CONFIG_HOST, DEFAULT_HOST );\r\n\t\tString pop3 = Config.getProperty( CONFIG_PORTS_POP3, \"\" + DEFAULT_POP3PORT );\r\n\t\tString smtp = Config.getProperty( CONFIG_PORTS_SMTP, \"\" + DEFAULT_SMTPPORT );\r\n\t\t\r\n\t\tout.println( \"<table cellspacing=\\\"3\\\" cellpadding=\\\"5\\\">\\n\" +\r\n\t\t\t// current postman hq length limits 16/12, new postman version 32/32\r\n\t\t\t\"<tr><td align=\\\"right\\\" width=\\\"30%\\\">\" + _(\"User\") + \"<\/td><td width=\\\"40%\\\" align=\\\"left\\\"><input type=\\\"text\\\" size=\\\"32\\\" name=\\\"\" + USER + \"\\\" value=\\\"\" + \"\\\"> @mail.i2p<\/td><\/tr>\\n\" +\r\n\t\t\t\"<tr><td align=\\\"right\\\" width=\\\"30%\\\">\" + _(\"Password\") + \"<\/td><td width=\\\"40%\\\" align=\\\"left\\\"><input type=\\\"password\\\" size=\\\"32\\\" name=\\\"pass\\\" value=\\\"\" + \"\\\"><\/td><\/tr>\\n\");\r\n\t\t// which is better?\r\n\t\t//if (!fixed) {\r\n\t\tif (true) {\r\n\t\t    out.println(\r\n\t\t\t\"<tr><td align=\\\"right\\\" width=\\\"30%\\\">\" + _(\"Host\") + \"<\/td><td width=\\\"40%\\\" align=\\\"left\\\"><input type=\\\"text\\\" size=\\\"32\\\" name=\\\"\" + HOST +\"\\\" value=\\\"\" + host + \"\\\"\" + ( fixed ? \" disabled\" : \"\" ) + \"><\/td><\/tr>\\n\" +\r\n\t\t\t\"<tr><td align=\\\"right\\\" width=\\\"30%\\\">\" + _(\"POP3 Port\") + \"<\/td><td width=\\\"40%\\\" align=\\\"left\\\"><input type=\\\"text\\\" style=\\\"text-align: right;\\\" size=\\\"5\\\" name=\\\"\" + POP3 +\"\\\" value=\\\"\" + pop3 + \"\\\"\" + ( fixed ? \" disabled\" : \"\" ) + \"><\/td><\/tr>\\n\" +\r\n\t\t\t\"<tr><td align=\\\"right\\\" width=\\\"30%\\\">\" + _(\"SMTP Port\") + \"<\/td><td width=\\\"40%\\\" align=\\\"left\\\"><input type=\\\"text\\\" style=\\\"text-align: right;\\\" size=\\\"5\\\" name=\\\"\" + SMTP +\"\\\" value=\\\"\" + smtp + \"\\\"\" + ( fixed ? \" disabled\" : \"\" ) + \"><\/td><\/tr>\\n\");\r\n\t\t}\r\n\t\tout.println(\r\n\t\t\t\"<tr><td colspan=\\\"2\\\">&nbsp;<\/td><\/tr>\\n\" +\r\n\t\t\t\"<tr><td><\/td><td align=\\\"left\\\">\" + button( LOGIN, _(\"Login\") ) + spacer +\r\n\t\t\t button(OFFLINE, _(\"Read Mail Offline\") ) +\r\n\t\t\t //spacer +\r\n\t\t\t //\" <input class=\\\"cancel\\\" type=\\\"reset\\\" value=\\\"\" + _(\"Reset\") + \"\\\">\" +\r\n\t\t\t spacer +\r\n\t\t\t button(CONFIGURE, _(\"Settings\")) +\r\n\t\t\t\"<\/td><\/tr>\\n\" +\r\n\t\t\t\"<tr><td colspan=\\\"2\\\">&nbsp;<\/td><\/tr>\\n\" +\r\n\t\t\t\"<tr><td><\/td><td align=\\\"left\\\"><a href=\\\"http://hq.postman.i2p/?page_id=14\\\">\" + _(\"Learn about I2P mail\") + \"<\/a><\/td><\/tr>\\n\" +\r\n\t\t\t\"<tr><td><\/td><td align=\\\"left\\\"><a href=\\\"http://hq.postman.i2p/?page_id=16\\\">\" + _(\"Create Account\") + \"<\/a><\/td><\/tr>\\n\" +\r\n\t\t\t\"<\/table>\");\r\n\t}","commit_id":"91d7a0ab98cab07f17058bc57f777e8b460012df","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\r\n\t * The entry point for all web page loads\r\n\t * \r\n\t * @param httpRequest\r\n\t * @param response\r\n\t * @param isPOST disallow button pushes if false\r\n\t * @throws IOException\r\n\t * @throws ServletException\r\n\t */\r\n\tprivate void processRequest( HttpServletRequest httpRequest, HttpServletResponse response, boolean isPOST )\r\n\tthrows IOException, ServletException\r\n\t{\r\n\t\tString theme = Config.getProperty(CONFIG_THEME, DEFAULT_THEME);\r\n\t\tI2PAppContext ctx = I2PAppContext.getGlobalContext();\r\n\t\tboolean universalTheming = ctx.getBooleanProperty(RC_PROP_UNIVERSAL_THEMING);\r\n\t\tif (universalTheming) {\r\n\t\t\t// Fetch routerconsole theme (or use our default if it doesn't exist)\r\n\t\t\ttheme = ctx.getProperty(RC_PROP_THEME, DEFAULT_THEME);\r\n\t\t\t// Ensure that theme exists\r\n\t\t\tString[] themes = getThemes();\r\n\t\t\tboolean themeExists = false;\r\n\t\t\tfor (int i = 0; i < themes.length; i++) {\r\n\t\t\t\tif (themes[i].equals(theme))\r\n\t\t\t\t\tthemeExists = true;\r\n\t\t\t}\r\n\t\t\tif (!themeExists) {\r\n\t\t\t\ttheme = DEFAULT_THEME;\r\n\t\t\t}\r\n\t\t}\r\n\t\tboolean forceMobileConsole = ctx.getBooleanProperty(RC_PROP_FORCE_MOBILE_CONSOLE);\r\n\t\tboolean isMobile = (forceMobileConsole || isMobile(httpRequest.getHeader(\"User-Agent\")));\r\n\r\n\t\thttpRequest.setCharacterEncoding(\"UTF-8\");\r\n\t\tresponse.setCharacterEncoding(\"UTF-8\");\r\n                response.setHeader(\"X-Frame-Options\", \"SAMEORIGIN\");\r\n\t\tRequestWrapper request = new RequestWrapper( httpRequest );\r\n\t\t\r\n\t\tSessionObject sessionObject = null;\r\n\t\t\r\n\t\tString subtitle = \"\";\r\n\t\t\r\n\t\tHttpSession httpSession = request.getSession( true );\r\n\t\t\r\n\t\tsessionObject = getSessionObject( httpSession );\r\n\r\n\t\tsynchronized( sessionObject ) {\r\n\t\t\t\r\n\t\t\tsessionObject.error = \"\";\r\n\t\t\tsessionObject.info = \"\";\r\n\t\t\tsessionObject.pageChanged = false;\r\n\t\t\tsessionObject.themePath = \"/themes/susimail/\" + theme + '/';\r\n\t\t\tsessionObject.imgPath = sessionObject.themePath + \"images/\";\r\n\t\t\tsessionObject.isMobile = isMobile;\r\n\t\t\t\r\n\t\t\t// This must be called to add the attachment before\r\n\t\t\t// processStateChangeButtons() sends the message\r\n\t\t\tif( sessionObject.state == STATE_NEW )\r\n\t\t\t\tprocessComposeButtons( sessionObject, request );\r\n\t\t\r\n\t\t\tint oldState = sessionObject.state;\r\n\t\t\tprocessStateChangeButtons( sessionObject, request, isPOST );\r\n\t\t\tint newState = sessionObject.state;\r\n\t\t\tif (oldState != newState)\r\n\t\t\t\tDebug.debug(Debug.DEBUG, \"STATE CHANGE from \" + oldState + \" to \" + newState);\r\n\t\t\t// Set in web.xml\r\n\t\t\t//if (oldState == STATE_AUTH && newState != STATE_AUTH) {\r\n\t\t\t//\tint oldIdle = httpSession.getMaxInactiveInterval();\r\n\t\t\t//\thttpSession.setMaxInactiveInterval(60*60*24);  // seconds\r\n\t\t\t//\tint newIdle = httpSession.getMaxInactiveInterval();\r\n\t\t\t//\tDebug.debug(Debug.DEBUG, \"Changed idle from \" + oldIdle + \" to \" + newIdle);\r\n\t\t\t//}\r\n\t\t\t\r\n\t\t\tif( sessionObject.state != STATE_AUTH ) {\r\n\t\t\t\tif (isPOST)\r\n\t\t\t\t       processGenericButtons( sessionObject, request );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif( sessionObject.state == STATE_LIST ) {\r\n\t\t\t\tif (isPOST)\r\n\t\t\t\t\tprocessFolderButtons( sessionObject, request );\r\n\t\t\t\tprocessSortingButtons( sessionObject, request );\r\n\t\t\t\tfor( Iterator<String> it = sessionObject.folder.currentPageIterator(); it != null && it.hasNext(); ) {\r\n\t\t\t\t\tString uidl = it.next();\r\n\t\t\t\t\tMail mail = sessionObject.mailCache.getMail( uidl, MailCache.FETCH_HEADER );\r\n\t\t\t\t\tif( mail != null && mail.error.length() > 0 ) {\r\n\t\t\t\t\t\tsessionObject.error += mail.error;\r\n\t\t\t\t\t\tmail.error = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif( sessionObject.state == STATE_SHOW ) {\r\n\t\t\t\tif (isPOST)\r\n\t\t\t\t\tprocessMessageButtons( sessionObject, request );\r\n\t\t\t\t// ?download=nnn link should be valid in any state\r\n\t\t\t\t// but depends on current UIDL\r\n\t\t\t\tif (processDownloadLink(sessionObject, request, response)) {\r\n\t\t\t\t\t// download or raw view sent, or 404\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// If the last message has just been deleted then\r\n\t\t\t\t// sessionObject.state = STATE_LIST and\r\n\t\t\t\t// sessionObject.showUIDL = null\r\n\t\t\t\tif ( sessionObject.showUIDL != null ) {\r\n\t\t\t\t\tMail mail = sessionObject.mailCache.getMail( sessionObject.showUIDL, MailCache.FETCH_ALL );\r\n\t\t\t\t\tif( mail != null && mail.error.length() > 0 ) {\r\n\t\t\t\t\t\tsessionObject.error += mail.error;\r\n\t\t\t\t\t\tmail.error = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\t * update folder content\r\n\t\t\t */\r\n\t\t\tif( sessionObject.state != STATE_AUTH ) {\r\n\t\t\t\t// get through cache so we have the disk-only ones too\r\n\t\t\t\tString[] uidls = sessionObject.mailCache.getUIDLs();\r\n\t\t\t\tif (uidls != null) {\r\n\t\t\t\t\t// TODO why every time?\r\n\t\t\t\t\tsessionObject.folder.setElements(uidls);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t\tPrintWriter out = response.getWriter();\r\n\t\t\t\t\r\n\t\t\t\t/*\r\n\t\t\t\t * build subtitle\r\n\t\t\t\t */\r\n\t\t\t\tif( sessionObject.state == STATE_AUTH )\r\n\t\t\t\t\tsubtitle = _(\"Login\");\r\n\t\t\t\telse if( sessionObject.state == STATE_LIST ) {\r\n\t\t\t\t\t// mailbox.getNumMails() forces a connection, don't use it\r\n\t\t\t\t\t// Not only does it slow things down, but a failure causes all our messages to \"vanish\"\r\n\t\t\t\t\t//subtitle = ngettext(\"1 Message\", \"{0} Messages\", sessionObject.mailbox.getNumMails());\r\n\t\t\t\t\tsubtitle = ngettext(\"1 Message\", \"{0} Messages\", sessionObject.folder.getSize());\r\n\t\t\t\t} else if( sessionObject.state == STATE_SHOW ) {\r\n\t\t\t\t\tMail mail = sessionObject.mailCache.getMail(sessionObject.showUIDL, MailCache.FETCH_HEADER);\r\n\t\t\t\t\tif (mail != null && mail.shortSubject != null)\r\n\t\t\t\t\t\tsubtitle = mail.shortSubject;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tsubtitle = _(\"Show Message\");\r\n\t\t\t\t} else if( sessionObject.state == STATE_NEW ) {\r\n\t\t\t\t\tsubtitle = _(\"New Message\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresponse.setContentType( \"text/html\" );\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * write header\r\n\t\t\t\t */\r\n\t\t\t\tout.println( \"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\">\\n<html>\\n\" +\r\n\t\t\t\t\t\"<head>\\n\" +\r\n\t\t\t\t\t\"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=UTF-8\\\">\\n\" +\r\n\t\t\t\t\t\"<title>\" + _(\"SusiMail\") + \" - \" + subtitle + \"<\/title>\\n\" +\r\n\t\t\t\t\t\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\" + sessionObject.themePath + \"susimail.css\\\">\\n\" );\r\n\t\t\t\tif (sessionObject.isMobile ) {\r\n\t\t\t\t\tout.println( \"<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes\\\" />\\n\" +\r\n\t\t\t\t\t\t\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\" + sessionObject.themePath + \"mobile.css\\\" />\\n\" );\r\n\t\t\t\t}\r\n\t\t\t\tif (sessionObject.state == STATE_NEW) {\r\n\t\t\t\t\t// TODO cancel if to and body are empty\r\n\t\t\t\t\tout.println(\r\n\t\t\t\t\t\t\"<script type = \\\"text/javascript\\\">\" +\r\n\t\t\t\t\t\t\t\"window.onbeforeunload = function () {\" +\r\n\t\t\t\t\t\t\t\t\"return \\\"\" + _(\"Message has not been sent. Do you want to discard it?\") + \"\\\";\" +\r\n\t\t\t\t\t\t\t\"};\" +\r\n\t\t\t\t\t\t\t\"function cancelPopup() {\" +\r\n\t\t\t\t\t\t\t\t\"window.onbeforeunload = null;\" +\r\n\t\t\t\t\t\t\t\"};\" +\r\n\t\t\t\t\t\t\"<\/script>\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tout.println( \"<\/head>\\n<body>\\n\" +\r\n\t\t\t\t\t\"<div class=\\\"page\\\"><p><img src=\\\"\" + sessionObject.imgPath + \"susimail.png\\\" alt=\\\"Susimail\\\"><\/p>\\n\" +\r\n\t\t\t\t\t\"<form method=\\\"POST\\\" enctype=\\\"multipart/form-data\\\" action=\\\"\" + myself + \"\\\" accept-charset=\\\"UTF-8\\\">\" );\r\n\r\n\t\t\t\tif( sessionObject.error != null && sessionObject.error.length() > 0 ) {\r\n\t\t\t\t\tout.println( \"<p class=\\\"error\\\">\" + sessionObject.error + \"<\/p>\" );\r\n\t\t\t\t}\r\n\t\t\t\tif( sessionObject.info != null && sessionObject.info.length() > 0 ) {\r\n\t\t\t\t\tout.println( \"<p class=\\\"info\\\">\" + sessionObject.info + \"<\/p>\" );\r\n\t\t\t\t}\r\n\t\t\t\t/*\r\n\t\t\t\t * now write body\r\n\t\t\t\t */\r\n\t\t\t\tif( sessionObject.state == STATE_AUTH )\r\n\t\t\t\t\tshowLogin( out );\r\n\t\t\t\t\r\n\t\t\t\telse if( sessionObject.state == STATE_LIST )\r\n\t\t\t\t\tshowFolder( out, sessionObject, request );\r\n\t\t\t\t\r\n\t\t\t\telse if( sessionObject.state == STATE_SHOW )\r\n\t\t\t\t\tshowMessage( out, sessionObject );\r\n\t\t\t\t\r\n\t\t\t\telse if( sessionObject.state == STATE_NEW )\r\n\t\t\t\t\tshowCompose( out, sessionObject, request );\r\n\t\t\t\t\r\n\t\t\t\t//out.println( \"<\/form><div id=\\\"footer\\\"><hr><p class=\\\"footer\\\">susimail v0.\" + version +\" \" + ( RELEASE ? \"release\" : \"development\" ) + \" &copy; 2004-2005 <a href=\\\"mailto:susi23@mail.i2p\\\">susi<\/a><\/div><\/div><\/body>\\n<\/html>\");\t\t\t\t\r\n\t\t\t\tout.println( \"<\/form><div id=\\\"footer\\\"><hr><p class=\\\"footer\\\">susimail &copy; 2004-2005 susi<\/div><\/div><\/body>\\n<\/html>\");\t\t\t\t\r\n\t\t\t\tout.flush();\r\n\t\t}\r\n\t}","id":48489,"modified_method":"/**\r\n\t * The entry point for all web page loads\r\n\t * \r\n\t * @param httpRequest\r\n\t * @param response\r\n\t * @param isPOST disallow button pushes if false\r\n\t * @throws IOException\r\n\t * @throws ServletException\r\n\t */\r\n\tprivate void processRequest( HttpServletRequest httpRequest, HttpServletResponse response, boolean isPOST )\r\n\tthrows IOException, ServletException\r\n\t{\r\n\t\tString theme = Config.getProperty(CONFIG_THEME, DEFAULT_THEME);\r\n\t\tI2PAppContext ctx = I2PAppContext.getGlobalContext();\r\n\t\tboolean universalTheming = ctx.getBooleanProperty(RC_PROP_UNIVERSAL_THEMING);\r\n\t\tif (universalTheming) {\r\n\t\t\t// Fetch routerconsole theme (or use our default if it doesn't exist)\r\n\t\t\ttheme = ctx.getProperty(RC_PROP_THEME, DEFAULT_THEME);\r\n\t\t\t// Ensure that theme exists\r\n\t\t\tString[] themes = getThemes();\r\n\t\t\tboolean themeExists = false;\r\n\t\t\tfor (int i = 0; i < themes.length; i++) {\r\n\t\t\t\tif (themes[i].equals(theme))\r\n\t\t\t\t\tthemeExists = true;\r\n\t\t\t}\r\n\t\t\tif (!themeExists) {\r\n\t\t\t\ttheme = DEFAULT_THEME;\r\n\t\t\t}\r\n\t\t}\r\n\t\tboolean forceMobileConsole = ctx.getBooleanProperty(RC_PROP_FORCE_MOBILE_CONSOLE);\r\n\t\tboolean isMobile = (forceMobileConsole || isMobile(httpRequest.getHeader(\"User-Agent\")));\r\n\r\n\t\thttpRequest.setCharacterEncoding(\"UTF-8\");\r\n\t\tresponse.setCharacterEncoding(\"UTF-8\");\r\n                response.setHeader(\"X-Frame-Options\", \"SAMEORIGIN\");\r\n\t\tRequestWrapper request = new RequestWrapper( httpRequest );\r\n\t\t\r\n\t\tSessionObject sessionObject = null;\r\n\t\t\r\n\t\tString subtitle = \"\";\r\n\t\t\r\n\t\tHttpSession httpSession = request.getSession( true );\r\n\t\t\r\n\t\tsessionObject = getSessionObject( httpSession );\r\n\r\n\t\tsynchronized( sessionObject ) {\r\n\t\t\t\r\n\t\t\tsessionObject.error = \"\";\r\n\t\t\tsessionObject.info = \"\";\r\n\t\t\tsessionObject.pageChanged = false;\r\n\t\t\tsessionObject.themePath = \"/themes/susimail/\" + theme + '/';\r\n\t\t\tsessionObject.imgPath = sessionObject.themePath + \"images/\";\r\n\t\t\tsessionObject.isMobile = isMobile;\r\n\t\t\t\r\n\t\t\t// This must be called to add the attachment before\r\n\t\t\t// processStateChangeButtons() sends the message\r\n\t\t\tif( sessionObject.state == STATE_NEW )\r\n\t\t\t\tprocessComposeButtons( sessionObject, request );\r\n\t\t\r\n\t\t\tint oldState = sessionObject.state;\r\n\t\t\tprocessStateChangeButtons( sessionObject, request, isPOST );\r\n\t\t\tif (isPOST)\r\n\t\t\t\tprocessConfigButtons( sessionObject, request );\r\n\t\t\tint newState = sessionObject.state;\r\n\t\t\tif (oldState != newState)\r\n\t\t\t\tDebug.debug(Debug.DEBUG, \"STATE CHANGE from \" + oldState + \" to \" + newState);\r\n\t\t\t// Set in web.xml\r\n\t\t\t//if (oldState == STATE_AUTH && newState != STATE_AUTH) {\r\n\t\t\t//\tint oldIdle = httpSession.getMaxInactiveInterval();\r\n\t\t\t//\thttpSession.setMaxInactiveInterval(60*60*24);  // seconds\r\n\t\t\t//\tint newIdle = httpSession.getMaxInactiveInterval();\r\n\t\t\t//\tDebug.debug(Debug.DEBUG, \"Changed idle from \" + oldIdle + \" to \" + newIdle);\r\n\t\t\t//}\r\n\t\t\t\r\n\t\t\tif( sessionObject.state != STATE_AUTH ) {\r\n\t\t\t\tif (isPOST)\r\n\t\t\t\t       processGenericButtons( sessionObject, request );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif( sessionObject.state == STATE_LIST ) {\r\n\t\t\t\tif (isPOST)\r\n\t\t\t\t\tprocessFolderButtons( sessionObject, request );\r\n\t\t\t\tprocessSortingButtons( sessionObject, request );\r\n\t\t\t\tfor( Iterator<String> it = sessionObject.folder.currentPageIterator(); it != null && it.hasNext(); ) {\r\n\t\t\t\t\tString uidl = it.next();\r\n\t\t\t\t\tMail mail = sessionObject.mailCache.getMail( uidl, MailCache.FETCH_HEADER );\r\n\t\t\t\t\tif( mail != null && mail.error.length() > 0 ) {\r\n\t\t\t\t\t\tsessionObject.error += mail.error;\r\n\t\t\t\t\t\tmail.error = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif( sessionObject.state == STATE_SHOW ) {\r\n\t\t\t\tif (isPOST)\r\n\t\t\t\t\tprocessMessageButtons( sessionObject, request );\r\n\t\t\t\t// ?download=nnn link should be valid in any state\r\n\t\t\t\t// but depends on current UIDL\r\n\t\t\t\tif (processDownloadLink(sessionObject, request, response)) {\r\n\t\t\t\t\t// download or raw view sent, or 404\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// If the last message has just been deleted then\r\n\t\t\t\t// sessionObject.state = STATE_LIST and\r\n\t\t\t\t// sessionObject.showUIDL = null\r\n\t\t\t\tif ( sessionObject.showUIDL != null ) {\r\n\t\t\t\t\tMail mail = sessionObject.mailCache.getMail( sessionObject.showUIDL, MailCache.FETCH_ALL );\r\n\t\t\t\t\tif( mail != null && mail.error.length() > 0 ) {\r\n\t\t\t\t\t\tsessionObject.error += mail.error;\r\n\t\t\t\t\t\tmail.error = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\t * update folder content\r\n\t\t\t */\r\n\t\t\tif( sessionObject.state == STATE_LIST ) {\r\n\t\t\t\t// get through cache so we have the disk-only ones too\r\n\t\t\t\tString[] uidls = sessionObject.mailCache.getUIDLs();\r\n\t\t\t\tif (uidls != null) {\r\n\t\t\t\t\t// TODO why every time?\r\n\t\t\t\t\tsessionObject.folder.setElements(uidls);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t\tPrintWriter out = response.getWriter();\r\n\t\t\t\t\r\n\t\t\t\t/*\r\n\t\t\t\t * build subtitle\r\n\t\t\t\t */\r\n\t\t\t\tif( sessionObject.state == STATE_AUTH )\r\n\t\t\t\t\tsubtitle = _(\"Login\");\r\n\t\t\t\telse if( sessionObject.state == STATE_LIST ) {\r\n\t\t\t\t\t// mailbox.getNumMails() forces a connection, don't use it\r\n\t\t\t\t\t// Not only does it slow things down, but a failure causes all our messages to \"vanish\"\r\n\t\t\t\t\t//subtitle = ngettext(\"1 Message\", \"{0} Messages\", sessionObject.mailbox.getNumMails());\r\n\t\t\t\t\tsubtitle = ngettext(\"1 Message\", \"{0} Messages\", sessionObject.folder.getSize());\r\n\t\t\t\t} else if( sessionObject.state == STATE_SHOW ) {\r\n\t\t\t\t\tMail mail = sessionObject.mailCache.getMail(sessionObject.showUIDL, MailCache.FETCH_HEADER);\r\n\t\t\t\t\tif (mail != null && mail.shortSubject != null)\r\n\t\t\t\t\t\tsubtitle = mail.shortSubject;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tsubtitle = _(\"Show Message\");\r\n\t\t\t\t} else if( sessionObject.state == STATE_NEW ) {\r\n\t\t\t\t\tsubtitle = _(\"New Message\");\r\n\t\t\t\t} else if( sessionObject.state == STATE_CONFIG ) {\r\n\t\t\t\t\tsubtitle = _(\"Configuration\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresponse.setContentType( \"text/html\" );\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * write header\r\n\t\t\t\t */\r\n\t\t\t\tout.println( \"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\">\\n<html>\\n\" +\r\n\t\t\t\t\t\"<head>\\n\" +\r\n\t\t\t\t\t\"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=UTF-8\\\">\\n\" +\r\n\t\t\t\t\t\"<title>\" + _(\"SusiMail\") + \" - \" + subtitle + \"<\/title>\\n\" +\r\n\t\t\t\t\t\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\" + sessionObject.themePath + \"susimail.css\\\">\\n\" );\r\n\t\t\t\tif (sessionObject.isMobile ) {\r\n\t\t\t\t\tout.println( \"<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes\\\" />\\n\" +\r\n\t\t\t\t\t\t\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\" + sessionObject.themePath + \"mobile.css\\\" />\\n\" );\r\n\t\t\t\t}\r\n\t\t\t\tif (sessionObject.state == STATE_NEW) {\r\n\t\t\t\t\t// TODO cancel if to and body are empty\r\n\t\t\t\t\tout.println(\r\n\t\t\t\t\t\t\"<script type = \\\"text/javascript\\\">\" +\r\n\t\t\t\t\t\t\t\"window.onbeforeunload = function () {\" +\r\n\t\t\t\t\t\t\t\t\"return \\\"\" + _(\"Message has not been sent. Do you want to discard it?\") + \"\\\";\" +\r\n\t\t\t\t\t\t\t\"};\" +\r\n\t\t\t\t\t\t\t\"function cancelPopup() {\" +\r\n\t\t\t\t\t\t\t\t\"window.onbeforeunload = null;\" +\r\n\t\t\t\t\t\t\t\"};\" +\r\n\t\t\t\t\t\t\"<\/script>\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tout.println( \"<\/head>\\n<body>\\n\" +\r\n\t\t\t\t\t\"<div class=\\\"page\\\"><p><img src=\\\"\" + sessionObject.imgPath + \"susimail.png\\\" alt=\\\"Susimail\\\"><\/p>\\n\" +\r\n\t\t\t\t\t\"<form method=\\\"POST\\\" enctype=\\\"multipart/form-data\\\" action=\\\"\" + myself + \"\\\" accept-charset=\\\"UTF-8\\\">\" );\r\n\r\n\t\t\t\tif( sessionObject.error != null && sessionObject.error.length() > 0 ) {\r\n\t\t\t\t\tout.println( \"<p class=\\\"error\\\">\" + sessionObject.error + \"<\/p>\" );\r\n\t\t\t\t}\r\n\t\t\t\tif( sessionObject.info != null && sessionObject.info.length() > 0 ) {\r\n\t\t\t\t\tout.println( \"<p class=\\\"info\\\"><b>\" + sessionObject.info + \"<\/b><\/p>\" );\r\n\t\t\t\t}\r\n\t\t\t\t/*\r\n\t\t\t\t * now write body\r\n\t\t\t\t */\r\n\t\t\t\tif( sessionObject.state == STATE_AUTH )\r\n\t\t\t\t\tshowLogin( out );\r\n\t\t\t\t\r\n\t\t\t\telse if( sessionObject.state == STATE_LIST )\r\n\t\t\t\t\tshowFolder( out, sessionObject, request );\r\n\t\t\t\t\r\n\t\t\t\telse if( sessionObject.state == STATE_SHOW )\r\n\t\t\t\t\tshowMessage( out, sessionObject );\r\n\t\t\t\t\r\n\t\t\t\telse if( sessionObject.state == STATE_NEW )\r\n\t\t\t\t\tshowCompose( out, sessionObject, request );\r\n\t\t\t\t\r\n\t\t\t\telse if( sessionObject.state == STATE_CONFIG )\r\n\t\t\t\t\tshowConfig(out, sessionObject);\r\n\t\t\t\t\r\n\t\t\t\t//out.println( \"<\/form><div id=\\\"footer\\\"><hr><p class=\\\"footer\\\">susimail v0.\" + version +\" \" + ( RELEASE ? \"release\" : \"development\" ) + \" &copy; 2004-2005 <a href=\\\"mailto:susi23@mail.i2p\\\">susi<\/a><\/div><\/div><\/body>\\n<\/html>\");\t\t\t\t\r\n\t\t\t\tout.println( \"<\/form><div id=\\\"footer\\\"><hr><p class=\\\"footer\\\">susimail &copy; 2004-2005 susi<\/div><\/div><\/body>\\n<\/html>\");\t\t\t\t\r\n\t\t\t\tout.flush();\r\n\t\t}\r\n\t}","commit_id":"91d7a0ab98cab07f17058bc57f777e8b460012df","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\r\n\t * Process all buttons, which possibly change internal state.\r\n\t * Also processes ?show=x for a GET\r\n\t * \r\n\t * @param sessionObject\r\n\t * @param request\r\n\t * @param isPOST disallow button pushes if false\r\n\t */\r\n\tprivate static void processStateChangeButtons(SessionObject sessionObject, RequestWrapper request, boolean isPOST )\r\n\t{\r\n\t\t/*\r\n\t\t * LOGIN/LOGOUT\r\n\t\t */\r\n\t\tif( sessionObject.state == STATE_AUTH && isPOST )\r\n\t\t\tprocessLogin( sessionObject, request );\r\n\r\n\t\tif( sessionObject.state != STATE_AUTH && isPOST )\r\n\t\t\tprocessLogout( sessionObject, request );\r\n\r\n\t\t/*\r\n\t\t *  compose dialog\r\n\t\t */\r\n\t\tif( sessionObject.state == STATE_NEW && isPOST ) {\r\n\t\t\t// We have to make sure to get the state right even if\r\n\t\t\t// the user hit the back button previously\r\n\t\t\tif( buttonPressed( request, SEND ) ) {\r\n\t\t\t\tif( sendMail( sessionObject, request ) )\r\n\t\t\t\t\tsessionObject.state = STATE_LIST;\r\n\t\t\t} else if (buttonPressed( request, CANCEL ) ||\r\n\t\t\t    buttonPressed( request, SHOW )  ||       // A param, not a button, but we could be lost\r\n\t\t\t    buttonPressed( request, PREVPAGE ) ||    // All these buttons are not shown but we could be lost\r\n\t\t\t    buttonPressed( request, NEXTPAGE ) ||\r\n\t\t\t    buttonPressed( request, FIRSTPAGE ) ||\r\n\t\t\t    buttonPressed( request, LASTPAGE ) ||\r\n\t\t\t    buttonPressed( request, SETPAGESIZE ) ||\r\n\t\t\t    buttonPressed( request, MARKALL ) ||\r\n\t\t\t    buttonPressed( request, CLEAR ) ||\r\n\t\t\t    buttonPressed( request, INVERT ) ||\r\n\t\t\t    buttonPressed( request, SORT_ID ) ||\r\n\t\t\t    buttonPressed( request, SORT_SENDER ) ||\r\n\t\t\t    buttonPressed( request, SORT_SUBJECT ) ||\r\n\t\t\t    buttonPressed( request, SORT_DATE ) ||\r\n\t\t\t    buttonPressed( request, SORT_SIZE ) ||\r\n\t\t\t    buttonPressed( request, REFRESH ) ||\r\n\t\t\t    buttonPressed( request, LIST )) {\r\n\t\t\t\tsessionObject.state = STATE_LIST;\r\n\t\t\t\tsessionObject.sentMail = null;\t\r\n\t\t\t\tif( sessionObject.attachments != null )\r\n\t\t\t\t\tsessionObject.attachments.clear();\r\n\t\t\t} else if (buttonPressed( request, PREV ) ||     // All these buttons are not shown but we could be lost\r\n\t\t\t    buttonPressed( request, NEXT )  ||\r\n\t\t\t    buttonPressed( request, DELETE )) {\r\n\t\t\t\tsessionObject.state = STATE_SHOW;\r\n\t\t\t\tsessionObject.sentMail = null;\t\r\n\t\t\t\tif( sessionObject.attachments != null )\r\n\t\t\t\t\tsessionObject.attachments.clear();\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*\r\n\t\t * message dialog\r\n\t\t */\r\n\t\tif( sessionObject.state == STATE_SHOW && isPOST ) {\r\n\t\t\tif( buttonPressed( request, LIST ) ) { \r\n\t\t\t\tsessionObject.state = STATE_LIST;\r\n\t\t\t} else if (buttonPressed( request, CANCEL ) ||\r\n\t\t\t    buttonPressed( request, PREVPAGE ) ||    // All these buttons are not shown but we could be lost\r\n\t\t\t    buttonPressed( request, NEXTPAGE ) ||\r\n\t\t\t    buttonPressed( request, FIRSTPAGE ) ||\r\n\t\t\t    buttonPressed( request, LASTPAGE ) ||\r\n\t\t\t    buttonPressed( request, SETPAGESIZE ) ||\r\n\t\t\t    buttonPressed( request, MARKALL ) ||\r\n\t\t\t    buttonPressed( request, CLEAR ) ||\r\n\t\t\t    buttonPressed( request, INVERT ) ||\r\n\t\t\t    buttonPressed( request, SORT_ID ) ||\r\n\t\t\t    buttonPressed( request, SORT_SENDER ) ||\r\n\t\t\t    buttonPressed( request, SORT_SUBJECT ) ||\r\n\t\t\t    buttonPressed( request, SORT_DATE ) ||\r\n\t\t\t    buttonPressed( request, SORT_SIZE ) ||\r\n\t\t\t    buttonPressed( request, REFRESH )) {\r\n\t\t\t\tsessionObject.state = STATE_LIST;\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*\r\n\t\t * buttons on both folder and message dialog\r\n\t\t */\r\n\t\tif( sessionObject.state == STATE_SHOW || sessionObject.state == STATE_LIST ) {\r\n\t\t\tif( isPOST && buttonPressed( request, NEW ) ) {\r\n\t\t\t\tsessionObject.state = STATE_NEW;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tboolean reply = false;\r\n\t\t\tboolean replyAll = false;\r\n\t\t\tboolean forward = false;\r\n\t\t\tsessionObject.replyTo = null;\r\n\t\t\tsessionObject.replyCC = null;\r\n\t\t\tsessionObject.body = null;\r\n\t\t\tsessionObject.subject = null;\r\n\t\t\t\r\n\t\t\tif( buttonPressed( request, REPLY ) )\r\n\t\t\t\treply = true;\r\n\t\t\t\r\n\t\t\tif( buttonPressed( request, REPLYALL ) ) {\r\n\t\t\t\treplyAll = true;\r\n\t\t\t}\r\n\t\t\tif( buttonPressed( request, FORWARD ) ) {\r\n\t\t\t\tforward = true;\r\n\t\t\t}\r\n\t\t\tif( reply || replyAll || forward ) {\r\n\t\t\t\t/*\r\n\t\t\t\t * try to find message\r\n\t\t\t\t */\r\n\t\t\t\tString uidl = null;\r\n\t\t\t\tif( sessionObject.state == STATE_LIST ) {\r\n\t\t\t\t\t// these buttons are now hidden on the folder page,\r\n\t\t\t\t\t// but the idea is to use the first checked message\r\n\t\t\t\t\tList<Integer> items = getCheckedItems(request);\r\n\t\t\t\t\tif (!items.isEmpty()) {\r\n\t\t\t\t\t\tint pos = items.get(0).intValue();\r\n\t\t\t\t\t\tuidl = sessionObject.folder.getElementAtPosXonCurrentPage( pos );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tuidl = sessionObject.showUIDL;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif( uidl != null ) {\r\n\t\t\t\t\tMail mail = sessionObject.mailCache.getMail( uidl, MailCache.FETCH_ALL );\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * extract original sender from Reply-To: or From:\r\n\t\t\t\t\t */\r\n\t\t\t\t\tMailPart part = mail != null ? mail.getPart() : null;\r\n\t\t\t\t\tif (part != null) {\r\n\t\t\t\t\t\tif( reply || replyAll ) {\r\n\t\t\t\t\t\t\tif( mail.reply != null && Mail.validateAddress( mail.reply ) )\r\n\t\t\t\t\t\t\t\tsessionObject.replyTo = mail.reply;\r\n\t\t\t\t\t\t\telse if( mail.sender != null && Mail.validateAddress( mail.sender ) )\r\n\t\t\t\t\t\t\t\tsessionObject.replyTo = mail.sender;\r\n\t\t\t\t\t\t\tsessionObject.subject = _(\"Re:\") + ' ' + mail.formattedSubject;\r\n\t\t\t\t\t\t\tStringWriter text = new StringWriter();\r\n\t\t\t\t\t\t\tPrintWriter pw = new PrintWriter( text );\r\n\t\t\t\t\t\t\tpw.println( _(\"On {0} {1} wrote:\", mail.formattedDate + \" UTC\", sessionObject.replyTo) );\r\n\t\t\t\t\t\t\tStringWriter text2 = new StringWriter();\r\n\t\t\t\t\t\t\tPrintWriter pw2 = new PrintWriter( text2 );\r\n\t\t\t\t\t\t\tshowPart( pw2, part, 0, TEXT_ONLY );\r\n\t\t\t\t\t\t\tpw2.flush();\r\n\t\t\t\t\t\t\tString[] lines = text2.toString().split( \"\\r\\n\" );\r\n\t\t\t\t\t\t\tfor( int i = 0; i < lines.length; i++ )\r\n\t\t\t\t\t\t\t\tpw.println( \"> \" + lines[i] );\r\n\t\t\t\t\t\t\tpw.flush();\r\n\t\t\t\t\t\t\tsessionObject.body = text.toString();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( replyAll ) {\r\n\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t * extract additional recipients\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\tStringBuilder buf = new StringBuilder();\r\n\t\t\t\t\t\t\tString pad = \"\";\r\n\t\t\t\t\t\t\tif( mail.to != null ) {\r\n\t\t\t\t\t\t\t\tfor( int i = 0; i < mail.to.length; i++ ) {\r\n\t\t\t\t\t\t\t\t\tbuf.append( pad );\r\n\t\t\t\t\t\t\t\t\tbuf.append(mail.to[i]);\r\n\t\t\t\t\t\t\t\t\tpad = \", \";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif( mail.cc != null ) {\r\n\t\t\t\t\t\t\t\tfor( int i = 0; i < mail.cc.length; i++ ) {\r\n\t\t\t\t\t\t\t\t\tbuf.append( pad );\r\n\t\t\t\t\t\t\t\t\tbuf.append(mail.cc[i]);\r\n\t\t\t\t\t\t\t\t\tpad = \", \";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif( buf.length() > 0 )\r\n\t\t\t\t\t\t\t\tsessionObject.replyCC = buf.toString();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( forward ) {\r\n\t\t\t\t\t\t\tsessionObject.subject = _(\"Fwd:\") + ' ' + mail.formattedSubject;\r\n\t\t\t\t\t\t\tString sender = null;\r\n\t\t\t\t\t\t\tif( mail.reply != null && Mail.validateAddress( mail.reply ) )\r\n\t\t\t\t\t\t\t\tsender = Mail.getAddress( mail.reply );\r\n\t\t\t\t\t\t\telse if( mail.sender != null && Mail.validateAddress( mail.sender ) )\r\n\t\t\t\t\t\t\t\tsender = Mail.getAddress( mail.sender );\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tStringWriter text = new StringWriter();\r\n\t\t\t\t\t\t\tPrintWriter pw = new PrintWriter( text );\r\n\t\t\t\t\t\t\tpw.println();\r\n\t\t\t\t\t\t\tpw.println();\r\n\t\t\t\t\t\t\tpw.println();\r\n\t\t\t\t\t\t\tpw.println( \"---- \" + _(\"begin forwarded mail\") + \" ----\" );\r\n\t\t\t\t\t\t\tpw.println( \"From: \" + sender );\r\n\t\t\t\t\t\t\tif( mail.to != null ) {\r\n\t\t\t\t\t\t\t\tString pad = \"To: \";\r\n\t\t\t\t\t\t\t\tfor( int i = 0; i < mail.to.length; i++ ) {\r\n\t\t\t\t\t\t\t\t\tpw.println( pad );\r\n\t\t\t\t\t\t\t\t\tpw.println(mail.to[i]);\r\n\t\t\t\t\t\t\t\t\tpad = \"    \";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif( mail.cc != null ) {\r\n\t\t\t\t\t\t\t\tString pad = \"Cc: \";\r\n\t\t\t\t\t\t\t\tfor( int i = 0; i < mail.cc.length; i++ ) {\r\n\t\t\t\t\t\t\t\t\tpw.println( pad );\r\n\t\t\t\t\t\t\t\t\tpw.println(mail.cc[i]);\r\n\t\t\t\t\t\t\t\t\tpad = \"    \";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif( mail.dateString != null )\r\n\t\t\t\t\t\t\t\tpw.print( \"Date: \" + mail.dateString );\r\n\t\t\t\t\t\t\tpw.println();\r\n\t\t\t\t\t\t\tshowPart( pw, part, 0, TEXT_ONLY );\r\n\t\t\t\t\t\t\tpw.println( \"----  \" + _(\"end forwarded mail\") + \"  ----\" );\r\n\t\t\t\t\t\t\tpw.flush();\r\n\t\t\t\t\t\t\tsessionObject.body = text.toString();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsessionObject.state = STATE_NEW;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tsessionObject.error += _(\"Could not fetch mail body.\") + \"<br>\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * folder view\r\n\t\t * SHOW is the one parameter that's a link, not a button, so we allow it for GET\r\n\t\t */\r\n\t\tif( sessionObject.state == STATE_LIST || sessionObject.state == STATE_SHOW) {\r\n\t\t\t/*\r\n\t\t\t * check if user wants to view a message\r\n\t\t\t */\r\n\t\t\tString show = request.getParameter( SHOW );\r\n\t\t\tif( show != null && show.length() > 0 ) {\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tint id = Integer.parseInt( show );\r\n\t\t\t\t\t\r\n\t\t\t\t\tif( id >= 0 && id < sessionObject.folder.getPageSize() ) {\r\n\t\t\t\t\t\tString uidl = sessionObject.folder.getElementAtPosXonCurrentPage( id );\r\n\t\t\t\t\t\tif( uidl != null ) {\r\n\t\t\t\t\t\t\tsessionObject.state = STATE_SHOW;\r\n\t\t\t\t\t\t\tsessionObject.showUIDL = uidl;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch( NumberFormatException nfe )\r\n\t\t\t\t{\r\n\t\t\t\t\tsessionObject.error += _(\"Message id not valid.\") + \"<br>\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}","id":48490,"modified_method":"/**\r\n\t * Process all buttons, which possibly change internal state.\r\n\t * Also processes ?show=x for a GET\r\n\t * \r\n\t * @param sessionObject\r\n\t * @param request\r\n\t * @param isPOST disallow button pushes if false\r\n\t */\r\n\tprivate static void processStateChangeButtons(SessionObject sessionObject, RequestWrapper request, boolean isPOST )\r\n\t{\r\n\t\t/*\r\n\t\t * LOGIN/LOGOUT\r\n\t\t */\r\n\t\tif( sessionObject.state == STATE_AUTH && isPOST )\r\n\t\t\tprocessLogin( sessionObject, request );\r\n\r\n\t\tif( sessionObject.state != STATE_AUTH && sessionObject.state != STATE_CONFIG )\r\n\t\t\tprocessLogout( sessionObject, request, isPOST );\r\n\r\n\t\t/*\r\n\t\t *  compose dialog\r\n\t\t */\r\n\t\tif( sessionObject.state == STATE_NEW && isPOST ) {\r\n\t\t\t// We have to make sure to get the state right even if\r\n\t\t\t// the user hit the back button previously\r\n\t\t\tif( buttonPressed( request, SEND ) ) {\r\n\t\t\t\tif( sendMail( sessionObject, request ) )\r\n\t\t\t\t\tsessionObject.state = STATE_LIST;\r\n\t\t\t} else if (buttonPressed( request, CANCEL ) ||\r\n\t\t\t    buttonPressed( request, SHOW )  ||       // A param, not a button, but we could be lost\r\n\t\t\t    buttonPressed( request, PREVPAGE ) ||    // All these buttons are not shown but we could be lost\r\n\t\t\t    buttonPressed( request, NEXTPAGE ) ||\r\n\t\t\t    buttonPressed( request, FIRSTPAGE ) ||\r\n\t\t\t    buttonPressed( request, LASTPAGE ) ||\r\n\t\t\t    buttonPressed( request, SETPAGESIZE ) ||\r\n\t\t\t    buttonPressed( request, MARKALL ) ||\r\n\t\t\t    buttonPressed( request, CLEAR ) ||\r\n\t\t\t    buttonPressed( request, INVERT ) ||\r\n\t\t\t    buttonPressed( request, SORT_ID ) ||\r\n\t\t\t    buttonPressed( request, SORT_SENDER ) ||\r\n\t\t\t    buttonPressed( request, SORT_SUBJECT ) ||\r\n\t\t\t    buttonPressed( request, SORT_DATE ) ||\r\n\t\t\t    buttonPressed( request, SORT_SIZE ) ||\r\n\t\t\t    buttonPressed( request, REFRESH ) ||\r\n\t\t\t    buttonPressed( request, LIST )) {\r\n\t\t\t\tsessionObject.state = STATE_LIST;\r\n\t\t\t\tsessionObject.sentMail = null;\t\r\n\t\t\t\tif( sessionObject.attachments != null )\r\n\t\t\t\t\tsessionObject.attachments.clear();\r\n\t\t\t} else if (buttonPressed( request, PREV ) ||     // All these buttons are not shown but we could be lost\r\n\t\t\t    buttonPressed( request, NEXT )  ||\r\n\t\t\t    buttonPressed( request, DELETE )) {\r\n\t\t\t\tsessionObject.state = STATE_SHOW;\r\n\t\t\t\tsessionObject.sentMail = null;\t\r\n\t\t\t\tif( sessionObject.attachments != null )\r\n\t\t\t\t\tsessionObject.attachments.clear();\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*\r\n\t\t * message dialog or config\r\n\t\t */\r\n\t\tif((sessionObject.state == STATE_SHOW || sessionObject.state == STATE_CONFIG) && isPOST ) {\r\n\t\t\tif( buttonPressed( request, LIST ) ) { \r\n\t\t\t\tsessionObject.state = STATE_LIST;\r\n\t\t\t} else if (buttonPressed( request, CANCEL ) ||\r\n\t\t\t    buttonPressed( request, PREVPAGE ) ||    // All these buttons are not shown but we could be lost\r\n\t\t\t    buttonPressed( request, NEXTPAGE ) ||\r\n\t\t\t    buttonPressed( request, FIRSTPAGE ) ||\r\n\t\t\t    buttonPressed( request, LASTPAGE ) ||\r\n\t\t\t    buttonPressed( request, SETPAGESIZE ) ||\r\n\t\t\t    buttonPressed( request, MARKALL ) ||\r\n\t\t\t    buttonPressed( request, CLEAR ) ||\r\n\t\t\t    buttonPressed( request, INVERT ) ||\r\n\t\t\t    buttonPressed( request, SORT_ID ) ||\r\n\t\t\t    buttonPressed( request, SORT_SENDER ) ||\r\n\t\t\t    buttonPressed( request, SORT_SUBJECT ) ||\r\n\t\t\t    buttonPressed( request, SORT_DATE ) ||\r\n\t\t\t    buttonPressed( request, SORT_SIZE ) ||\r\n\t\t\t    buttonPressed( request, REFRESH )) {\r\n\t\t\t\tsessionObject.state = STATE_LIST;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * config\r\n\t\t */\r\n\t\tif (sessionObject.state == STATE_CONFIG && isPOST) {\r\n\t\t\tif (buttonPressed(request, OFFLINE)) {       // lost\r\n\t\t\t\tsessionObject.state = STATE_AUTH;\r\n\t\t\t} else if (buttonPressed(request, LOGIN)) {  // lost\r\n\t\t\t\tsessionObject.state = STATE_AUTH;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * buttons on both folder and message dialog\r\n\t\t */\r\n\t\tif( sessionObject.state == STATE_SHOW || sessionObject.state == STATE_LIST ) {\r\n\t\t\tif( isPOST && buttonPressed( request, NEW ) ) {\r\n\t\t\t\tsessionObject.state = STATE_NEW;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tboolean reply = false;\r\n\t\t\tboolean replyAll = false;\r\n\t\t\tboolean forward = false;\r\n\t\t\tsessionObject.replyTo = null;\r\n\t\t\tsessionObject.replyCC = null;\r\n\t\t\tsessionObject.body = null;\r\n\t\t\tsessionObject.subject = null;\r\n\t\t\t\r\n\t\t\tif( buttonPressed( request, REPLY ) )\r\n\t\t\t\treply = true;\r\n\t\t\t\r\n\t\t\tif( buttonPressed( request, REPLYALL ) ) {\r\n\t\t\t\treplyAll = true;\r\n\t\t\t}\r\n\t\t\tif( buttonPressed( request, FORWARD ) ) {\r\n\t\t\t\tforward = true;\r\n\t\t\t}\r\n\t\t\tif( reply || replyAll || forward ) {\r\n\t\t\t\t/*\r\n\t\t\t\t * try to find message\r\n\t\t\t\t */\r\n\t\t\t\tString uidl = null;\r\n\t\t\t\tif( sessionObject.state == STATE_LIST ) {\r\n\t\t\t\t\t// these buttons are now hidden on the folder page,\r\n\t\t\t\t\t// but the idea is to use the first checked message\r\n\t\t\t\t\tList<Integer> items = getCheckedItems(request);\r\n\t\t\t\t\tif (!items.isEmpty()) {\r\n\t\t\t\t\t\tint pos = items.get(0).intValue();\r\n\t\t\t\t\t\tuidl = sessionObject.folder.getElementAtPosXonCurrentPage( pos );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tuidl = sessionObject.showUIDL;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif( uidl != null ) {\r\n\t\t\t\t\tMail mail = sessionObject.mailCache.getMail( uidl, MailCache.FETCH_ALL );\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * extract original sender from Reply-To: or From:\r\n\t\t\t\t\t */\r\n\t\t\t\t\tMailPart part = mail != null ? mail.getPart() : null;\r\n\t\t\t\t\tif (part != null) {\r\n\t\t\t\t\t\tif( reply || replyAll ) {\r\n\t\t\t\t\t\t\tif( mail.reply != null && Mail.validateAddress( mail.reply ) )\r\n\t\t\t\t\t\t\t\tsessionObject.replyTo = mail.reply;\r\n\t\t\t\t\t\t\telse if( mail.sender != null && Mail.validateAddress( mail.sender ) )\r\n\t\t\t\t\t\t\t\tsessionObject.replyTo = mail.sender;\r\n\t\t\t\t\t\t\tsessionObject.subject = _(\"Re:\") + ' ' + mail.formattedSubject;\r\n\t\t\t\t\t\t\tStringWriter text = new StringWriter();\r\n\t\t\t\t\t\t\tPrintWriter pw = new PrintWriter( text );\r\n\t\t\t\t\t\t\tpw.println( _(\"On {0} {1} wrote:\", mail.formattedDate + \" UTC\", sessionObject.replyTo) );\r\n\t\t\t\t\t\t\tStringWriter text2 = new StringWriter();\r\n\t\t\t\t\t\t\tPrintWriter pw2 = new PrintWriter( text2 );\r\n\t\t\t\t\t\t\tshowPart( pw2, part, 0, TEXT_ONLY );\r\n\t\t\t\t\t\t\tpw2.flush();\r\n\t\t\t\t\t\t\tString[] lines = text2.toString().split( \"\\r\\n\" );\r\n\t\t\t\t\t\t\tfor( int i = 0; i < lines.length; i++ )\r\n\t\t\t\t\t\t\t\tpw.println( \"> \" + lines[i] );\r\n\t\t\t\t\t\t\tpw.flush();\r\n\t\t\t\t\t\t\tsessionObject.body = text.toString();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( replyAll ) {\r\n\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t * extract additional recipients\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\tStringBuilder buf = new StringBuilder();\r\n\t\t\t\t\t\t\tString pad = \"\";\r\n\t\t\t\t\t\t\tif( mail.to != null ) {\r\n\t\t\t\t\t\t\t\tfor( int i = 0; i < mail.to.length; i++ ) {\r\n\t\t\t\t\t\t\t\t\tbuf.append( pad );\r\n\t\t\t\t\t\t\t\t\tbuf.append(mail.to[i]);\r\n\t\t\t\t\t\t\t\t\tpad = \", \";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif( mail.cc != null ) {\r\n\t\t\t\t\t\t\t\tfor( int i = 0; i < mail.cc.length; i++ ) {\r\n\t\t\t\t\t\t\t\t\tbuf.append( pad );\r\n\t\t\t\t\t\t\t\t\tbuf.append(mail.cc[i]);\r\n\t\t\t\t\t\t\t\t\tpad = \", \";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif( buf.length() > 0 )\r\n\t\t\t\t\t\t\t\tsessionObject.replyCC = buf.toString();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( forward ) {\r\n\t\t\t\t\t\t\tsessionObject.subject = _(\"Fwd:\") + ' ' + mail.formattedSubject;\r\n\t\t\t\t\t\t\tString sender = null;\r\n\t\t\t\t\t\t\tif( mail.reply != null && Mail.validateAddress( mail.reply ) )\r\n\t\t\t\t\t\t\t\tsender = Mail.getAddress( mail.reply );\r\n\t\t\t\t\t\t\telse if( mail.sender != null && Mail.validateAddress( mail.sender ) )\r\n\t\t\t\t\t\t\t\tsender = Mail.getAddress( mail.sender );\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tStringWriter text = new StringWriter();\r\n\t\t\t\t\t\t\tPrintWriter pw = new PrintWriter( text );\r\n\t\t\t\t\t\t\tpw.println();\r\n\t\t\t\t\t\t\tpw.println();\r\n\t\t\t\t\t\t\tpw.println();\r\n\t\t\t\t\t\t\tpw.println( \"---- \" + _(\"begin forwarded mail\") + \" ----\" );\r\n\t\t\t\t\t\t\tpw.println( \"From: \" + sender );\r\n\t\t\t\t\t\t\tif( mail.to != null ) {\r\n\t\t\t\t\t\t\t\tString pad = \"To: \";\r\n\t\t\t\t\t\t\t\tfor( int i = 0; i < mail.to.length; i++ ) {\r\n\t\t\t\t\t\t\t\t\tpw.println( pad );\r\n\t\t\t\t\t\t\t\t\tpw.println(mail.to[i]);\r\n\t\t\t\t\t\t\t\t\tpad = \"    \";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif( mail.cc != null ) {\r\n\t\t\t\t\t\t\t\tString pad = \"Cc: \";\r\n\t\t\t\t\t\t\t\tfor( int i = 0; i < mail.cc.length; i++ ) {\r\n\t\t\t\t\t\t\t\t\tpw.println( pad );\r\n\t\t\t\t\t\t\t\t\tpw.println(mail.cc[i]);\r\n\t\t\t\t\t\t\t\t\tpad = \"    \";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif( mail.dateString != null )\r\n\t\t\t\t\t\t\t\tpw.print( \"Date: \" + mail.dateString );\r\n\t\t\t\t\t\t\tpw.println();\r\n\t\t\t\t\t\t\tshowPart( pw, part, 0, TEXT_ONLY );\r\n\t\t\t\t\t\t\tpw.println( \"----  \" + _(\"end forwarded mail\") + \"  ----\" );\r\n\t\t\t\t\t\t\tpw.flush();\r\n\t\t\t\t\t\t\tsessionObject.body = text.toString();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsessionObject.state = STATE_NEW;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tsessionObject.error += _(\"Could not fetch mail body.\") + \"<br>\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * folder view\r\n\t\t * SHOW is the one parameter that's a link, not a button, so we allow it for GET\r\n\t\t */\r\n\t\tif( sessionObject.state == STATE_LIST || sessionObject.state == STATE_SHOW) {\r\n\t\t\t/*\r\n\t\t\t * check if user wants to view a message\r\n\t\t\t */\r\n\t\t\tString show = request.getParameter( SHOW );\r\n\t\t\tif( show != null && show.length() > 0 ) {\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tint id = Integer.parseInt( show );\r\n\t\t\t\t\t\r\n\t\t\t\t\tif( id >= 0 && id < sessionObject.folder.getPageSize() ) {\r\n\t\t\t\t\t\tString uidl = sessionObject.folder.getElementAtPosXonCurrentPage( id );\r\n\t\t\t\t\t\tif( uidl != null ) {\r\n\t\t\t\t\t\t\tsessionObject.state = STATE_SHOW;\r\n\t\t\t\t\t\t\tsessionObject.showUIDL = uidl;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch( NumberFormatException nfe )\r\n\t\t\t\t{\r\n\t\t\t\t\tsessionObject.error += _(\"Message id not valid.\") + \"<br>\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}","commit_id":"91d7a0ab98cab07f17058bc57f777e8b460012df","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\r\n\t * process buttons of folder view\r\n\t * @param sessionObject\r\n\t * @param request\r\n\t */\r\n\tprivate static void processFolderButtons(SessionObject sessionObject, RequestWrapper request)\r\n\t{\r\n\t\t/*\r\n\t\t * process paging buttons\r\n\t\t */\r\n\t\tif (buttonPressed(request, PAGESIZE) && !buttonPressed(request, RELOAD)) {\r\n\t\t\ttry {\r\n\t\t\t\tint pageSize = Math.max(5, Integer.parseInt(request.getParameter(PAGESIZE)));\r\n\t\t\t\tint oldPageSize = sessionObject.folder.getPageSize();\r\n\t\t\t\tif( pageSize != oldPageSize )\r\n\t\t\t\t\tsessionObject.folder.setPageSize( pageSize );\r\n\t\t\t}\r\n\t\t\tcatch( NumberFormatException nfe ) {\r\n\t\t\t\tsessionObject.error += _(\"Invalid pagesize number, resetting to default value.\") + \"<br>\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( buttonPressed( request, PREVPAGE ) ) {\r\n\t\t\tsessionObject.pageChanged = true;\r\n\t\t\tsessionObject.folder.previousPage();\r\n\t\t}\r\n\t\telse if( buttonPressed( request, NEXTPAGE ) ) {\r\n\t\t\tsessionObject.pageChanged = true;\r\n\t\t\tsessionObject.folder.nextPage();\r\n\t\t}\r\n\t\telse if( buttonPressed( request, FIRSTPAGE ) ) {\r\n\t\t\tsessionObject.pageChanged = true;\r\n\t\t\tsessionObject.folder.firstPage();\r\n\t\t}\r\n\t\telse if( buttonPressed( request, LASTPAGE ) ) {\r\n\t\t\tsessionObject.pageChanged = true;\r\n\t\t\tsessionObject.folder.lastPage();\r\n\t\t}\r\n\t\telse if( buttonPressed( request, DELETE ) ) {\r\n\t\t\tint m = getCheckedItems(request).size();\r\n\t\t\tif (m > 0)\r\n\t\t\t\tsessionObject.reallyDelete = true;\r\n\t\t\telse\r\n\t\t\t\tsessionObject.error += _(\"No messages marked for deletion.\") + \"<br>\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif( buttonPressed( request, REALLYDELETE ) ) {\r\n\t\t\t\tList<String> toDelete = new ArrayList<String>();\r\n\t\t\t\tfor (Integer item : getCheckedItems(request)) {\r\n\t\t\t\t\tint n = item.intValue();\r\n\t\t\t\t\tString uidl = sessionObject.folder.getElementAtPosXonCurrentPage( n );\r\n\t\t\t\t\tif( uidl != null )\r\n\t\t\t\t\t\ttoDelete.add(uidl);\r\n\t\t\t\t}\r\n\t\t\t\tint numberDeleted = toDelete.size();\r\n\t\t\t\tif (numberDeleted > 0) {\r\n\t\t\t\t\tsessionObject.mailCache.delete(toDelete);\r\n\t\t\t\t\tsessionObject.folder.removeElements(toDelete);\r\n\t\t\t\t\tsessionObject.pageChanged = true;\r\n\t\t\t\t\tsessionObject.info += ngettext(\"1 message deleted.\", \"{0} messages deleted.\", numberDeleted);\r\n\t\t\t\t\t//sessionObject.error += _(\"Error deleting message: {0}\", sessionObject.mailbox.lastError()) + \"<br>\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsessionObject.reallyDelete = false;\r\n\t\t}\r\n\t\t\r\n\t\tsessionObject.markAll = buttonPressed( request, MARKALL );\r\n\t\tsessionObject.clear = buttonPressed( request, CLEAR );\r\n\t\tsessionObject.invert = buttonPressed( request, INVERT );\r\n\t}","id":48491,"modified_method":"/**\r\n\t * process buttons of folder view\r\n\t * @param sessionObject\r\n\t * @param request\r\n\t */\r\n\tprivate static void processFolderButtons(SessionObject sessionObject, RequestWrapper request)\r\n\t{\r\n\t\t/*\r\n\t\t * process paging buttons\r\n\t\t */\r\n\t\tif (buttonPressed(request, SETPAGESIZE)) {\r\n\t\t\ttry {\r\n\t\t\t\tint pageSize = Math.max(5, Integer.parseInt(request.getParameter(PAGESIZE)));\r\n\t\t\t\tint oldPageSize = sessionObject.folder.getPageSize();\r\n\t\t\t\tif( pageSize != oldPageSize )\r\n\t\t\t\t\tsessionObject.folder.setPageSize( pageSize );\r\n\t\t\t}\r\n\t\t\tcatch( NumberFormatException nfe ) {\r\n\t\t\t\tsessionObject.error += _(\"Invalid pagesize number, resetting to default value.\") + \"<br>\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( buttonPressed( request, PREVPAGE ) ) {\r\n\t\t\tsessionObject.pageChanged = true;\r\n\t\t\tsessionObject.folder.previousPage();\r\n\t\t}\r\n\t\telse if( buttonPressed( request, NEXTPAGE ) ) {\r\n\t\t\tsessionObject.pageChanged = true;\r\n\t\t\tsessionObject.folder.nextPage();\r\n\t\t}\r\n\t\telse if( buttonPressed( request, FIRSTPAGE ) ) {\r\n\t\t\tsessionObject.pageChanged = true;\r\n\t\t\tsessionObject.folder.firstPage();\r\n\t\t}\r\n\t\telse if( buttonPressed( request, LASTPAGE ) ) {\r\n\t\t\tsessionObject.pageChanged = true;\r\n\t\t\tsessionObject.folder.lastPage();\r\n\t\t}\r\n\t\telse if( buttonPressed( request, DELETE ) ) {\r\n\t\t\tint m = getCheckedItems(request).size();\r\n\t\t\tif (m > 0)\r\n\t\t\t\tsessionObject.reallyDelete = true;\r\n\t\t\telse\r\n\t\t\t\tsessionObject.error += _(\"No messages marked for deletion.\") + \"<br>\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif( buttonPressed( request, REALLYDELETE ) ) {\r\n\t\t\t\tList<String> toDelete = new ArrayList<String>();\r\n\t\t\t\tfor (Integer item : getCheckedItems(request)) {\r\n\t\t\t\t\tint n = item.intValue();\r\n\t\t\t\t\tString uidl = sessionObject.folder.getElementAtPosXonCurrentPage( n );\r\n\t\t\t\t\tif( uidl != null )\r\n\t\t\t\t\t\ttoDelete.add(uidl);\r\n\t\t\t\t}\r\n\t\t\t\tint numberDeleted = toDelete.size();\r\n\t\t\t\tif (numberDeleted > 0) {\r\n\t\t\t\t\tsessionObject.mailCache.delete(toDelete);\r\n\t\t\t\t\tsessionObject.folder.removeElements(toDelete);\r\n\t\t\t\t\tsessionObject.pageChanged = true;\r\n\t\t\t\t\tsessionObject.info += ngettext(\"1 message deleted.\", \"{0} messages deleted.\", numberDeleted);\r\n\t\t\t\t\t//sessionObject.error += _(\"Error deleting message: {0}\", sessionObject.mailbox.lastError()) + \"<br>\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsessionObject.reallyDelete = false;\r\n\t\t}\r\n\t\t\r\n\t\tsessionObject.markAll = buttonPressed( request, MARKALL );\r\n\t\tsessionObject.clear = buttonPressed( request, CLEAR );\r\n\t\tsessionObject.invert = buttonPressed( request, INVERT );\r\n\t}","commit_id":"91d7a0ab98cab07f17058bc57f777e8b460012df","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\r\n\t * \r\n\t * @param out\r\n\t * @param sessionObject\r\n\t * @param request\r\n\t */\r\n\tprivate static void showFolder( PrintWriter out, SessionObject sessionObject, RequestWrapper request )\r\n\t{\r\n\t\tout.println( button( NEW, _(\"New\") ) + spacer +\r\n\t\t\t// In theory, these are valid and will apply to the first checked message,\r\n\t\t\t// but that's not obvious and did it work?\r\n\t\t\t//button( REPLY, _(\"Reply\") ) +\r\n\t\t\t//button( REPLYALL, _(\"Reply All\") ) +\r\n\t\t\t//button( FORWARD, _(\"Forward\") ) + spacer +\r\n\t\t\t//button( DELETE, _(\"Delete\") ) + spacer +\r\n\t\t\tbutton( REFRESH, _(\"Check Mail\") ) + spacer);\r\n\t\tif (Config.hasConfigFile())\r\n\t\t\tout.println(button( RELOAD, _(\"Reload Config\") ) + spacer);\r\n\t\tout.println(button( LOGOUT, _(\"Logout\") ));\r\n\r\n\t\tif (sessionObject.folder.getPages() > 1)\r\n\t\t\tshowPageButtons(out, sessionObject.folder);\r\n\r\n\t\tString curSort = sessionObject.folder.getCurrentSortBy();\r\n\t\tFolder.SortOrder curOrder = sessionObject.folder.getCurrentSortingDirection();\r\n\t\tout.println(\"<table id=\\\"mailbox\\\" cellspacing=\\\"0\\\" cellpadding=\\\"5\\\">\\n\" +\r\n\t\t\t\"<tr><td colspan=\\\"9\\\"><hr><\/td><\/tr>\\n<tr>\" +\r\n\t\t\tthSpacer +\r\n\t\t\tthSpacer + \"<th>\" + sortHeader( SORT_SENDER, _(\"From\"), sessionObject.imgPath, curSort, curOrder ) + \"<\/th>\" +\r\n\t\t\tthSpacer + \"<th>\" + sortHeader( SORT_SUBJECT, _(\"Subject\"), sessionObject.imgPath, curSort, curOrder ) + \"<\/th>\" +\r\n\t\t\tthSpacer + \"<th>\" + sortHeader( SORT_DATE, _(\"Date\"), sessionObject.imgPath, curSort, curOrder ) +\r\n\t\t\t//sortHeader( SORT_ID, \"\", sessionObject.imgPath ) +\r\n\t\t\t\"<\/th>\" +\r\n\t\t\tthSpacer + \"<th>\" + sortHeader( SORT_SIZE, _(\"Size\"), sessionObject.imgPath, curSort, curOrder ) + \"<\/th><\/tr>\" );\r\n\t\tint bg = 0;\r\n\t\tint i = 0;\r\n\t\tfor( Iterator<String> it = sessionObject.folder.currentPageIterator(); it != null && it.hasNext(); ) {\r\n\t\t\tString uidl = it.next();\r\n\t\t\tMail mail = sessionObject.mailCache.getMail( uidl, MailCache.FETCH_HEADER );\r\n\t\t\tif (mail == null) {\r\n\t\t\t\ti++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tString type;\r\n\t\t\tif (mail.isSpam())\r\n\t\t\t\ttype = \"linkspam\";\r\n\t\t\telse if (mail.isNew())\r\n\t\t\t\ttype = \"linknew\";\r\n\t\t\telse\r\n\t\t\t\ttype = \"linkold\";\r\n\t\t\tString link = \"<a href=\\\"\" + myself + \"?\" + SHOW + \"=\" + i + \"\\\" class=\\\"\" + type + \"\\\">\";\r\n\t\t\t\r\n\t\t\tboolean idChecked = false;\r\n\t\t\tString checkId = sessionObject.pageChanged ? null : request.getParameter( \"check\" + i );\r\n\t\t\t\r\n\t\t\tif( checkId != null && checkId.equals(\"1\"))\r\n\t\t\t\tidChecked = true;\r\n\t\t\t\r\n\t\t\tif( sessionObject.markAll )\r\n\t\t\t\tidChecked = true;\r\n\t\t\tif( sessionObject.invert )\r\n\t\t\t\tidChecked = !idChecked;\r\n\t\t\tif( sessionObject.clear )\r\n\t\t\t\tidChecked = false;\r\n\r\n\t\t\t//Debug.debug( Debug.DEBUG, \"check\" + i + \": checkId=\" + checkId + \", idChecked=\" + idChecked + \", pageChanged=\" + sessionObject.pageChanged +\r\n\t\t\t//\t\t\", markAll=\" + sessionObject.markAll +\r\n\t\t\t//\t\t\", invert=\" + sessionObject.invert +\r\n\t\t\t//\t\t\", clear=\" + sessionObject.clear );\r\n\t\t\tout.println( \"<tr class=\\\"list\" + bg + \"\\\"><td><input type=\\\"checkbox\\\" class=\\\"optbox\\\" name=\\\"check\" + i + \"\\\" value=\\\"1\\\"\" + \r\n\t\t\t\t\t( idChecked ? \"checked\" : \"\" ) + \">\" + \"<\/td><td>\" +\r\n\t\t\t\t\t(mail.isNew() ? \"<img src=\\\"/susimail/icons/flag_green.png\\\" alt=\\\"\\\" title=\\\"\" + _(\"Message is new\") + \"\\\">\" : \"&nbsp;\") + \"<\/td><td>\" +\r\n\t\t\t\t\tlink + mail.shortSender + \"<\/a><\/td><td>\" +\r\n\t\t\t\t\t(mail.hasAttachment() ? \"<img src=\\\"/susimail/icons/attach.png\\\" alt=\\\"\\\" title=\\\"\" + _(\"Message has an attachment\") + \"\\\">\" : \"&nbsp;\") + \"<\/td><td>\" +\r\n\t\t\t\t\tlink + mail.shortSubject + \"<\/a><\/td><td>\" +\r\n\t\t\t\t\t(mail.isSpam() ? \"<img src=\\\"/susimail/icons/flag_red.png\\\" alt=\\\"\\\" title=\\\"\" + _(\"Message is spam\") + \"\\\">\" : \"&nbsp;\") + \"<\/td><td>\" +\r\n\t\t\t\t\t// don't let date get split across lines\r\n\t\t\t\t\tmail.localFormattedDate.replace(\" \", \"&nbsp;\") + \"<\/td><td>&nbsp;<\/td><td align=\\\"right\\\">\" +\r\n\t\t\t\t\t((mail.getSize() > 0) ? (DataHelper.formatSize2(mail.getSize()) + 'B') : \"???\") + \"<\/td><\/tr>\" );\r\n\t\t\tbg = 1 - bg;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tif (i == 0)\r\n\t\t\tout.println(\"<tr><td colspan=\\\"9\\\" align=\\\"center\\\"><i>\" + _(\"No messages\") + \"<\/i><\/td><\/tr>\\n<\/table>\");\r\n\t\tif (i > 0) {\r\n\t\t\tout.println( \"<tr><td colspan=\\\"9\\\"><hr><\/td><\/tr>\");\r\n\t\t\tif (sessionObject.folder.getPages() > 1 && i > 30) {\r\n\t\t\t\t// show the buttons again if page is big\r\n\t\t\t\tout.println(\"<tr><td colspan=\\\"9\\\" align=\\\"center\\\">\");\r\n\t\t\t\tshowPageButtons(out, sessionObject.folder);\r\n\t\t\t\tout.println(\"<\/td><\/tr>\");\r\n\t\t\t}\r\n\t\t\tout.println(\"<tr><td colspan=\\\"5\\\" align=\\\"left\\\">\");\r\n\t\t\tif( sessionObject.reallyDelete ) {\r\n\t\t\t\t// TODO ngettext\r\n\t\t\t\tout.println(\"<p class=\\\"error\\\">\" + _(\"Really delete the marked messages?\") +\r\n\t\t\t\t\t\t\"<\/p>\" + button( REALLYDELETE, _(\"Yes, really delete them!\") ) +\r\n\t\t\t\t\t\t\"<br>\" + button( CLEAR, _(\"Cancel\")));\r\n\t\t\t} else {\r\n\t\t\t\t// TODO js\r\n\t\t\t\tout.println(button( DELETE, _(\"Delete Selected\") ) + \"<br>\");\r\n\t\t\t\tout.print(\r\n\t\t\t\t\tbutton( CLEAR, _(\"Clear All\") ) +\r\n\t\t\t\t\t\"&nbsp;\" +\r\n\t\t\t\t\tbutton( MARKALL, _(\"Mark All\") ));\r\n\t\t\t\t\t//\"<br>\" + \r\n\t\t\t\t\t//button( INVERT, _(\"Invert Selection\") ) +\r\n\t\t\t\t\t//\"<br>\");\r\n\t\t\t}\r\n\t\t\tout.print(\"<\/td>\\n<td colspan=\\\"4\\\" align=\\\"right\\\">\");\r\n\t\t\tout.print(\r\n\t\t\t\t_(\"Page Size\") + \":&nbsp;<input type=\\\"text\\\" style=\\\"text-align: right;\\\" name=\\\"\" + PAGESIZE + \"\\\" size=\\\"4\\\" value=\\\"\" +  sessionObject.folder.getPageSize() + \"\\\">\" +\r\n\t\t\t\t\"&nbsp;\" + \r\n\t\t\t\tbutton( SETPAGESIZE, _(\"Set\") ) );\r\n\t\t\tout.println(\"<\/td>\");\r\n\t\t}\r\n\t\tout.println( \"<\/table>\");\r\n\t}","id":48492,"modified_method":"/**\r\n\t * \r\n\t * @param out\r\n\t * @param sessionObject\r\n\t * @param request\r\n\t */\r\n\tprivate static void showFolder( PrintWriter out, SessionObject sessionObject, RequestWrapper request )\r\n\t{\r\n\t\tout.println( button( NEW, _(\"New\") ) + spacer);\r\n\t\t\t// In theory, these are valid and will apply to the first checked message,\r\n\t\t\t// but that's not obvious and did it work?\r\n\t\t\t//button( REPLY, _(\"Reply\") ) +\r\n\t\t\t//button( REPLYALL, _(\"Reply All\") ) +\r\n\t\t\t//button( FORWARD, _(\"Forward\") ) + spacer +\r\n\t\t\t//button( DELETE, _(\"Delete\") ) + spacer +\r\n\t\tout.println(button( REFRESH, _(\"Check Mail\") ) + spacer);\r\n\t\t//if (Config.hasConfigFile())\r\n\t\t//\tout.println(button( RELOAD, _(\"Reload Config\") ) + spacer);\r\n\t\tout.println(button( LOGOUT, _(\"Logout\") ));\r\n\r\n\t\tif (sessionObject.folder.getPages() > 1)\r\n\t\t\tshowPageButtons(out, sessionObject.folder);\r\n\r\n\t\tString curSort = sessionObject.folder.getCurrentSortBy();\r\n\t\tFolder.SortOrder curOrder = sessionObject.folder.getCurrentSortingDirection();\r\n\t\tout.println(\"<table id=\\\"mailbox\\\" cellspacing=\\\"0\\\" cellpadding=\\\"5\\\">\\n\" +\r\n\t\t\t\"<tr><td colspan=\\\"9\\\"><hr><\/td><\/tr>\\n<tr>\" +\r\n\t\t\tthSpacer +\r\n\t\t\tthSpacer + \"<th>\" + sortHeader( SORT_SENDER, _(\"From\"), sessionObject.imgPath, curSort, curOrder ) + \"<\/th>\" +\r\n\t\t\tthSpacer + \"<th>\" + sortHeader( SORT_SUBJECT, _(\"Subject\"), sessionObject.imgPath, curSort, curOrder ) + \"<\/th>\" +\r\n\t\t\tthSpacer + \"<th>\" + sortHeader( SORT_DATE, _(\"Date\"), sessionObject.imgPath, curSort, curOrder ) +\r\n\t\t\t//sortHeader( SORT_ID, \"\", sessionObject.imgPath ) +\r\n\t\t\t\"<\/th>\" +\r\n\t\t\tthSpacer + \"<th>\" + sortHeader( SORT_SIZE, _(\"Size\"), sessionObject.imgPath, curSort, curOrder ) + \"<\/th><\/tr>\" );\r\n\t\tint bg = 0;\r\n\t\tint i = 0;\r\n\t\tfor( Iterator<String> it = sessionObject.folder.currentPageIterator(); it != null && it.hasNext(); ) {\r\n\t\t\tString uidl = it.next();\r\n\t\t\tMail mail = sessionObject.mailCache.getMail( uidl, MailCache.FETCH_HEADER );\r\n\t\t\tif (mail == null) {\r\n\t\t\t\ti++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tString type;\r\n\t\t\tif (mail.isSpam())\r\n\t\t\t\ttype = \"linkspam\";\r\n\t\t\telse if (mail.isNew())\r\n\t\t\t\ttype = \"linknew\";\r\n\t\t\telse\r\n\t\t\t\ttype = \"linkold\";\r\n\t\t\tString link = \"<a href=\\\"\" + myself + \"?\" + SHOW + \"=\" + i + \"\\\" class=\\\"\" + type + \"\\\">\";\r\n\t\t\tString jslink = \" onclick=\\\"document.location='\" + myself + '?' + SHOW + '=' + i + \"';\\\" \";\r\n\t\t\t\r\n\t\t\tboolean idChecked = false;\r\n\t\t\tString checkId = sessionObject.pageChanged ? null : request.getParameter( \"check\" + i );\r\n\t\t\t\r\n\t\t\tif( checkId != null && checkId.equals(\"1\"))\r\n\t\t\t\tidChecked = true;\r\n\t\t\t\r\n\t\t\tif( sessionObject.markAll )\r\n\t\t\t\tidChecked = true;\r\n\t\t\tif( sessionObject.invert )\r\n\t\t\t\tidChecked = !idChecked;\r\n\t\t\tif( sessionObject.clear )\r\n\t\t\t\tidChecked = false;\r\n\r\n\t\t\t//Debug.debug( Debug.DEBUG, \"check\" + i + \": checkId=\" + checkId + \", idChecked=\" + idChecked + \", pageChanged=\" + sessionObject.pageChanged +\r\n\t\t\t//\t\t\", markAll=\" + sessionObject.markAll +\r\n\t\t\t//\t\t\", invert=\" + sessionObject.invert +\r\n\t\t\t//\t\t\", clear=\" + sessionObject.clear );\r\n\t\t\tout.println( \"<tr class=\\\"list\" + bg + \"\\\">\" +\r\n\t\t\t\t\t\"<td><input type=\\\"checkbox\\\" class=\\\"optbox\\\" name=\\\"check\" + i + \"\\\" value=\\\"1\\\"\" + \r\n\t\t\t\t\t( idChecked ? \"checked\" : \"\" ) + \">\" + \"<\/td><td \" + jslink + \">\" +\r\n\t\t\t\t\t(mail.isNew() ? \"<img src=\\\"/susimail/icons/flag_green.png\\\" alt=\\\"\\\" title=\\\"\" + _(\"Message is new\") + \"\\\">\" : \"&nbsp;\") + \"<\/td><td \" + jslink + \">\" +\r\n\t\t\t\t\tlink + mail.shortSender + \"<\/a><\/td><td \" + jslink + \">\" +\r\n\t\t\t\t\t(mail.hasAttachment() ? \"<img src=\\\"/susimail/icons/attach.png\\\" alt=\\\"\\\" title=\\\"\" + _(\"Message has an attachment\") + \"\\\">\" : \"&nbsp;\") + \"<\/td><td \" + jslink + \">\" +\r\n\t\t\t\t\tlink + mail.shortSubject + \"<\/a><\/td><td \" + jslink + \">\" +\r\n\t\t\t\t\t(mail.isSpam() ? \"<img src=\\\"/susimail/icons/flag_red.png\\\" alt=\\\"\\\" title=\\\"\" + _(\"Message is spam\") + \"\\\">\" : \"&nbsp;\") + \"<\/td><td \" + jslink + \">\" +\r\n\t\t\t\t\t// don't let date get split across lines\r\n\t\t\t\t\tmail.localFormattedDate.replace(\" \", \"&nbsp;\") + \"<\/td><td \" + jslink + \">&nbsp;<\/td><td align=\\\"right\\\" \" + jslink + \">\" +\r\n\t\t\t\t\t((mail.getSize() > 0) ? (DataHelper.formatSize2(mail.getSize()) + 'B') : \"???\") + \"<\/td><\/tr>\" );\r\n\t\t\tbg = 1 - bg;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tif (i == 0)\r\n\t\t\tout.println(\"<tr><td colspan=\\\"9\\\" align=\\\"center\\\"><i>\" + _(\"No messages\") + \"<\/i><\/td><\/tr>\\n<\/table>\");\r\n\t\tif (i > 0) {\r\n\t\t\tout.println( \"<tr><td colspan=\\\"9\\\"><hr><\/td><\/tr>\");\r\n\t\t\tif (sessionObject.folder.getPages() > 1 && i > 30) {\r\n\t\t\t\t// show the buttons again if page is big\r\n\t\t\t\tout.println(\"<tr><td colspan=\\\"9\\\" align=\\\"center\\\">\");\r\n\t\t\t\tshowPageButtons(out, sessionObject.folder);\r\n\t\t\t\tout.println(\"<\/td><\/tr>\");\r\n\t\t\t}\r\n\t\t\tout.println(\"<tr><td colspan=\\\"5\\\" align=\\\"left\\\">\");\r\n\t\t\tif( sessionObject.reallyDelete ) {\r\n\t\t\t\t// TODO ngettext\r\n\t\t\t\tout.println(\"<p class=\\\"error\\\">\" + _(\"Really delete the marked messages?\") +\r\n\t\t\t\t\t\t\"<\/p>\" + button( REALLYDELETE, _(\"Yes, really delete them!\") ) +\r\n\t\t\t\t\t\t\"<br>\" + button( CLEAR, _(\"Cancel\")));\r\n\t\t\t} else {\r\n\t\t\t\t// TODO js\r\n\t\t\t\tout.println(button( DELETE, _(\"Delete Selected\") ) + \"<br>\");\r\n\t\t\t\tout.print(\r\n\t\t\t\t\tbutton( MARKALL, _(\"Mark All\") ) +\r\n\t\t\t\t\t\"&nbsp;\" +\r\n\t\t\t\t\tbutton( CLEAR, _(\"Clear All\") ));\r\n\t\t\t\t\t//\"<br>\" + \r\n\t\t\t\t\t//button( INVERT, _(\"Invert Selection\") ) +\r\n\t\t\t\t\t//\"<br>\");\r\n\t\t\t}\r\n\t\t\tout.print(\"<\/td>\\n<td colspan=\\\"4\\\" align=\\\"right\\\">\");\r\n\t\t\t// moved to config page\r\n\t\t\t//out.print(\r\n\t\t\t//\t_(\"Page Size\") + \":&nbsp;<input type=\\\"text\\\" style=\\\"text-align: right;\\\" name=\\\"\" + PAGESIZE + \"\\\" size=\\\"4\\\" value=\\\"\" +  sessionObject.folder.getPageSize() + \"\\\">\" +\r\n\t\t\t//\t\"&nbsp;\" + \r\n\t\t\t//\tbutton( SETPAGESIZE, _(\"Set\") ) );\r\n\t\t\tout.print(\"<br>\");\r\n\t\t\tout.print(button(CONFIGURE, _(\"Settings\")));\r\n\t\t\tout.println(\"<\/td>\");\r\n\t\t}\r\n\t\tout.println( \"<\/table>\");\r\n\t}","commit_id":"91d7a0ab98cab07f17058bc57f777e8b460012df","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\r\n\t * \r\n\t * @param httpRequest\r\n\t * @param response\r\n\t * @throws IOException\r\n\t * @throws ServletException\r\n\t */\r\n\tprivate void processRequest( HttpServletRequest httpRequest, HttpServletResponse response )\r\n\tthrows IOException, ServletException\r\n\t{\r\n\t\tString theme = Config.getProperty(CONFIG_THEME, DEFAULT_THEME);\r\n\t\tI2PAppContext ctx = I2PAppContext.getGlobalContext();\r\n\t\tboolean universalTheming = ctx.getBooleanProperty(RC_PROP_UNIVERSAL_THEMING);\r\n\t\tif (universalTheming) {\r\n\t\t\t// Fetch routerconsole theme (or use our default if it doesn't exist)\r\n\t\t\ttheme = ctx.getProperty(RC_PROP_THEME, DEFAULT_THEME);\r\n\t\t\t// Ensure that theme exists\r\n\t\t\tString[] themes = getThemes();\r\n\t\t\tboolean themeExists = false;\r\n\t\t\tfor (int i = 0; i < themes.length; i++) {\r\n\t\t\t\tif (themes[i].equals(theme))\r\n\t\t\t\t\tthemeExists = true;\r\n\t\t\t}\r\n\t\t\tif (!themeExists) {\r\n\t\t\t\ttheme = DEFAULT_THEME;\r\n\t\t\t}\r\n\t\t}\r\n\t\tboolean forceMobileConsole = ctx.getBooleanProperty(RC_PROP_FORCE_MOBILE_CONSOLE);\r\n\t\tboolean isMobile = (forceMobileConsole || isMobile(httpRequest.getHeader(\"User-Agent\")));\r\n\r\n\t\thttpRequest.setCharacterEncoding(\"UTF-8\");\r\n\t\tresponse.setCharacterEncoding(\"UTF-8\");\r\n                response.setHeader(\"X-Frame-Options\", \"SAMEORIGIN\");\r\n\t\tRequestWrapper request = new RequestWrapper( httpRequest );\r\n\t\t\r\n\t\tSessionObject sessionObject = null;\r\n\t\t\r\n\t\tString subtitle = \"\";\r\n\t\t\r\n\t\tHttpSession httpSession = request.getSession( true );\r\n\t\t\r\n\t\tsessionObject = getSessionObject( httpSession );\r\n\r\n\t\tsynchronized( sessionObject ) {\r\n\t\t\t\r\n\t\t\tsessionObject.error = \"\";\r\n\t\t\tsessionObject.info = \"\";\r\n\t\t\tsessionObject.pageChanged = false;\r\n\t\t\tsessionObject.showAttachment = null;\r\n\t\t\tsessionObject.themePath = \"/themes/susimail/\" + theme + '/';\r\n\t\t\tsessionObject.imgPath = sessionObject.themePath + \"images/\";\r\n\t\t\tsessionObject.isMobile = isMobile;\r\n\t\t\t\r\n\t\t\tint oldState = sessionObject.state;\r\n\t\t\tprocessStateChangeButtons( sessionObject, request );\r\n\t\t\tint newState = sessionObject.state;\r\n\t\t\tif (oldState != newState)\r\n\t\t\t\tDebug.debug(Debug.DEBUG, \"STATE CHANGE from \" + oldState + \" to \" + newState);\r\n\t\t\t// Set in web.xml\r\n\t\t\t//if (oldState == STATE_AUTH && newState != STATE_AUTH) {\r\n\t\t\t//\tint oldIdle = httpSession.getMaxInactiveInterval();\r\n\t\t\t//\thttpSession.setMaxInactiveInterval(60*60*24);  // seconds\r\n\t\t\t//\tint newIdle = httpSession.getMaxInactiveInterval();\r\n\t\t\t//\tDebug.debug(Debug.DEBUG, \"Changed idle from \" + oldIdle + \" to \" + newIdle);\r\n\t\t\t//}\r\n\t\t\t\r\n\t\t\tif( sessionObject.state != STATE_AUTH )\r\n\t\t\t\tprocessGenericButtons( sessionObject, request );\r\n\t\t\t\r\n\t\t\tif( sessionObject.state == STATE_LIST ) {\r\n\t\t\t\tprocessFolderButtons( sessionObject, request );\r\n\t\t\t\tfor( Iterator<String> it = sessionObject.folder.currentPageIterator(); it != null && it.hasNext(); ) {\r\n\t\t\t\t\tString uidl = it.next();\r\n\t\t\t\t\tMail mail = sessionObject.mailCache.getMail( uidl, MailCache.FETCH_HEADER );\r\n\t\t\t\t\tif( mail != null && mail.error.length() > 0 ) {\r\n\t\t\t\t\t\tsessionObject.error += mail.error;\r\n\t\t\t\t\t\tmail.error = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif( sessionObject.state == STATE_SHOW ) {\r\n\t\t\t\tprocessMessageButtons( sessionObject, request );\r\n\t\t\t\t// If the last message has just been deleted then\r\n\t\t\t\t// sessionObject.state = STATE_LIST and\r\n\t\t\t\t// sessionObject.showUIDL = null\r\n\t\t\t\tif ( sessionObject.showUIDL != null ) {\r\n\t\t\t\t\tMail mail = sessionObject.mailCache.getMail( sessionObject.showUIDL, MailCache.FETCH_ALL );\r\n\t\t\t\t\tif( mail != null && mail.error.length() > 0 ) {\r\n\t\t\t\t\t\tsessionObject.error += mail.error;\r\n\t\t\t\t\t\tmail.error = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif( sessionObject.state == STATE_NEW )\r\n\t\t\t\tprocessComposeButtons( sessionObject, request );\r\n\t\t\r\n\t\t\t/*\r\n\t\t\t * update folder content\r\n\t\t\t */\r\n\t\t\tif( sessionObject.state != STATE_AUTH )\r\n\t\t\t\tsessionObject.folder.setElements( sessionObject.mailbox.getUIDLs() );\r\n\r\n\t\t\tif( ! sendAttachment( sessionObject, response ) ) { \r\n\t\t\t\tPrintWriter out = response.getWriter();\r\n\t\t\t\t\r\n\t\t\t\t/*\r\n\t\t\t\t * build subtitle\r\n\t\t\t\t */\r\n\t\t\t\tif( sessionObject.state == STATE_AUTH )\r\n\t\t\t\t\tsubtitle = _(\"Login\");\r\n\t\t\t\telse if( sessionObject.state == STATE_LIST ) {\r\n\t\t\t\t\t// mailbox.getNumMails() forces a connection, don't use it\r\n\t\t\t\t\t// Not only does it slow things down, but a failure causes all our messages to \"vanish\"\r\n\t\t\t\t\t//subtitle = ngettext(\"1 Message\", \"{0} Messages\", sessionObject.mailbox.getNumMails());\r\n\t\t\t\t\tsubtitle = ngettext(\"1 Message\", \"{0} Messages\", sessionObject.folder.getSize());\r\n\t\t\t\t} else if( sessionObject.state == STATE_SHOW )\r\n\t\t\t\t\tsubtitle = _(\"Show Message\");\r\n\r\n\t\t\t\tresponse.setContentType( \"text/html\" );\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * write header\r\n\t\t\t\t */\r\n\t\t\t\tout.println( \"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\">\\n<html>\\n\" +\r\n\t\t\t\t\t\"<head>\\n\" +\r\n\t\t\t\t\t\"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=UTF-8\\\">\\n\" +\r\n\t\t\t\t\t\"<title>\" + _(\"SusiMail\") + \" - \" + subtitle + \"<\/title>\\n\" +\r\n\t\t\t\t\t\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\" + sessionObject.themePath + \"susimail.css\\\">\\n\" );\r\n\t\t\t\tif (sessionObject.isMobile ) {\r\n\t\t\t\t\tout.println( \"<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes\\\" />\\n\" +\r\n\t\t\t\t\t\t\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\" + sessionObject.themePath + \"mobile.css\\\" />\\n\" );\r\n\t\t\t\t}\r\n\t\t\t\tif (sessionObject.state == STATE_NEW) {\r\n\t\t\t\t\t// TODO cancel if to and body are empty\r\n\t\t\t\t\tout.println(\r\n\t\t\t\t\t\t\"<script type = \\\"text/javascript\\\">\" +\r\n\t\t\t\t\t\t\t\"window.onbeforeunload = function () {\" +\r\n\t\t\t\t\t\t\t\t\"return \\\"\" + _(\"Message has not been sent. Do you want to discard it?\") + \"\\\";\" +\r\n\t\t\t\t\t\t\t\"};\" +\r\n\t\t\t\t\t\t\t\"function cancelPopup() {\" +\r\n\t\t\t\t\t\t\t\t\"window.onbeforeunload = null;\" +\r\n\t\t\t\t\t\t\t\"};\" +\r\n\t\t\t\t\t\t\"<\/script>\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tout.println( \"<\/head>\\n<body>\\n\" +\r\n\t\t\t\t\t\"<div class=\\\"page\\\"><p><img src=\\\"\" + sessionObject.imgPath + \"susimail.png\\\" alt=\\\"Susimail\\\"><br>&nbsp;<\/p>\\n\" +\r\n\t\t\t\t\t\"<form method=\\\"POST\\\" enctype=\\\"multipart/form-data\\\" action=\\\"\" + myself + \"\\\" accept-charset=\\\"UTF-8\\\">\" );\r\n\r\n\t\t\t\tif( sessionObject.error != null && sessionObject.error.length() > 0 ) {\r\n\t\t\t\t\tout.println( \"<p class=\\\"error\\\">\" + sessionObject.error + \"<\/p>\" );\r\n\t\t\t\t}\r\n\t\t\t\tif( sessionObject.info != null && sessionObject.info.length() > 0 ) {\r\n\t\t\t\t\tout.println( \"<p class=\\\"info\\\">\" + sessionObject.info + \"<\/p>\" );\r\n\t\t\t\t}\r\n\t\t\t\t/*\r\n\t\t\t\t * now write body\r\n\t\t\t\t */\r\n\t\t\t\tif( sessionObject.state == STATE_AUTH )\r\n\t\t\t\t\tshowLogin( out );\r\n\t\t\t\t\r\n\t\t\t\telse if( sessionObject.state == STATE_LIST )\r\n\t\t\t\t\tshowFolder( out, sessionObject, request );\r\n\t\t\t\t\r\n\t\t\t\telse if( sessionObject.state == STATE_SHOW )\r\n\t\t\t\t\tshowMessage( out, sessionObject );\r\n\t\t\t\t\r\n\t\t\t\telse if( sessionObject.state == STATE_NEW )\r\n\t\t\t\t\tshowCompose( out, sessionObject, request );\r\n\t\t\t\t\r\n\t\t\t\t//out.println( \"<\/form><div id=\\\"footer\\\"><hr><p class=\\\"footer\\\">susimail v0.\" + version +\" \" + ( RELEASE ? \"release\" : \"development\" ) + \" &copy; 2004-2005 <a href=\\\"mailto:susi23@mail.i2p\\\">susi<\/a><\/div><\/div><\/body>\\n<\/html>\");\t\t\t\t\r\n\t\t\t\tout.println( \"<\/form><div id=\\\"footer\\\"><hr><p class=\\\"footer\\\">susimail &copy; 2004-2005 susi<\/div><\/div><\/body>\\n<\/html>\");\t\t\t\t\r\n\t\t\t\tout.flush();\r\n\t\t\t}\r\n\t\t}\r\n\t}","id":48493,"modified_method":"/**\r\n\t * \r\n\t * @param httpRequest\r\n\t * @param response\r\n\t * @throws IOException\r\n\t * @throws ServletException\r\n\t */\r\n\tprivate void processRequest( HttpServletRequest httpRequest, HttpServletResponse response )\r\n\tthrows IOException, ServletException\r\n\t{\r\n\t\tString theme = Config.getProperty(CONFIG_THEME, DEFAULT_THEME);\r\n\t\tI2PAppContext ctx = I2PAppContext.getGlobalContext();\r\n\t\tboolean universalTheming = ctx.getBooleanProperty(RC_PROP_UNIVERSAL_THEMING);\r\n\t\tif (universalTheming) {\r\n\t\t\t// Fetch routerconsole theme (or use our default if it doesn't exist)\r\n\t\t\ttheme = ctx.getProperty(RC_PROP_THEME, DEFAULT_THEME);\r\n\t\t\t// Ensure that theme exists\r\n\t\t\tString[] themes = getThemes();\r\n\t\t\tboolean themeExists = false;\r\n\t\t\tfor (int i = 0; i < themes.length; i++) {\r\n\t\t\t\tif (themes[i].equals(theme))\r\n\t\t\t\t\tthemeExists = true;\r\n\t\t\t}\r\n\t\t\tif (!themeExists) {\r\n\t\t\t\ttheme = DEFAULT_THEME;\r\n\t\t\t}\r\n\t\t}\r\n\t\tboolean forceMobileConsole = ctx.getBooleanProperty(RC_PROP_FORCE_MOBILE_CONSOLE);\r\n\t\tboolean isMobile = (forceMobileConsole || isMobile(httpRequest.getHeader(\"User-Agent\")));\r\n\r\n\t\thttpRequest.setCharacterEncoding(\"UTF-8\");\r\n\t\tresponse.setCharacterEncoding(\"UTF-8\");\r\n                response.setHeader(\"X-Frame-Options\", \"SAMEORIGIN\");\r\n\t\tRequestWrapper request = new RequestWrapper( httpRequest );\r\n\t\t\r\n\t\tSessionObject sessionObject = null;\r\n\t\t\r\n\t\tString subtitle = \"\";\r\n\t\t\r\n\t\tHttpSession httpSession = request.getSession( true );\r\n\t\t\r\n\t\tsessionObject = getSessionObject( httpSession );\r\n\r\n\t\tsynchronized( sessionObject ) {\r\n\t\t\t\r\n\t\t\tsessionObject.error = \"\";\r\n\t\t\tsessionObject.info = \"\";\r\n\t\t\tsessionObject.pageChanged = false;\r\n\t\t\tsessionObject.showAttachment = null;\r\n\t\t\tsessionObject.themePath = \"/themes/susimail/\" + theme + '/';\r\n\t\t\tsessionObject.imgPath = sessionObject.themePath + \"images/\";\r\n\t\t\tsessionObject.isMobile = isMobile;\r\n\t\t\t\r\n\t\t\t// This must be called to add the attachment before\r\n\t\t\t// processStateChangeButtons() sends the message\r\n\t\t\tif( sessionObject.state == STATE_NEW )\r\n\t\t\t\tprocessComposeButtons( sessionObject, request );\r\n\t\t\r\n\t\t\tint oldState = sessionObject.state;\r\n\t\t\tprocessStateChangeButtons( sessionObject, request );\r\n\t\t\tint newState = sessionObject.state;\r\n\t\t\tif (oldState != newState)\r\n\t\t\t\tDebug.debug(Debug.DEBUG, \"STATE CHANGE from \" + oldState + \" to \" + newState);\r\n\t\t\t// Set in web.xml\r\n\t\t\t//if (oldState == STATE_AUTH && newState != STATE_AUTH) {\r\n\t\t\t//\tint oldIdle = httpSession.getMaxInactiveInterval();\r\n\t\t\t//\thttpSession.setMaxInactiveInterval(60*60*24);  // seconds\r\n\t\t\t//\tint newIdle = httpSession.getMaxInactiveInterval();\r\n\t\t\t//\tDebug.debug(Debug.DEBUG, \"Changed idle from \" + oldIdle + \" to \" + newIdle);\r\n\t\t\t//}\r\n\t\t\t\r\n\t\t\tif( sessionObject.state != STATE_AUTH )\r\n\t\t\t\tprocessGenericButtons( sessionObject, request );\r\n\t\t\t\r\n\t\t\tif( sessionObject.state == STATE_LIST ) {\r\n\t\t\t\tprocessFolderButtons( sessionObject, request );\r\n\t\t\t\tfor( Iterator<String> it = sessionObject.folder.currentPageIterator(); it != null && it.hasNext(); ) {\r\n\t\t\t\t\tString uidl = it.next();\r\n\t\t\t\t\tMail mail = sessionObject.mailCache.getMail( uidl, MailCache.FETCH_HEADER );\r\n\t\t\t\t\tif( mail != null && mail.error.length() > 0 ) {\r\n\t\t\t\t\t\tsessionObject.error += mail.error;\r\n\t\t\t\t\t\tmail.error = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif( sessionObject.state == STATE_SHOW ) {\r\n\t\t\t\tprocessMessageButtons( sessionObject, request );\r\n\t\t\t\t// If the last message has just been deleted then\r\n\t\t\t\t// sessionObject.state = STATE_LIST and\r\n\t\t\t\t// sessionObject.showUIDL = null\r\n\t\t\t\tif ( sessionObject.showUIDL != null ) {\r\n\t\t\t\t\tMail mail = sessionObject.mailCache.getMail( sessionObject.showUIDL, MailCache.FETCH_ALL );\r\n\t\t\t\t\tif( mail != null && mail.error.length() > 0 ) {\r\n\t\t\t\t\t\tsessionObject.error += mail.error;\r\n\t\t\t\t\t\tmail.error = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\t * update folder content\r\n\t\t\t */\r\n\t\t\tif( sessionObject.state != STATE_AUTH )\r\n\t\t\t\tsessionObject.folder.setElements( sessionObject.mailbox.getUIDLs() );\r\n\r\n\t\t\tif( ! sendAttachment( sessionObject, response ) ) { \r\n\t\t\t\tPrintWriter out = response.getWriter();\r\n\t\t\t\t\r\n\t\t\t\t/*\r\n\t\t\t\t * build subtitle\r\n\t\t\t\t */\r\n\t\t\t\tif( sessionObject.state == STATE_AUTH )\r\n\t\t\t\t\tsubtitle = _(\"Login\");\r\n\t\t\t\telse if( sessionObject.state == STATE_LIST ) {\r\n\t\t\t\t\t// mailbox.getNumMails() forces a connection, don't use it\r\n\t\t\t\t\t// Not only does it slow things down, but a failure causes all our messages to \"vanish\"\r\n\t\t\t\t\t//subtitle = ngettext(\"1 Message\", \"{0} Messages\", sessionObject.mailbox.getNumMails());\r\n\t\t\t\t\tsubtitle = ngettext(\"1 Message\", \"{0} Messages\", sessionObject.folder.getSize());\r\n\t\t\t\t} else if( sessionObject.state == STATE_SHOW )\r\n\t\t\t\t\tsubtitle = _(\"Show Message\");\r\n\r\n\t\t\t\tresponse.setContentType( \"text/html\" );\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * write header\r\n\t\t\t\t */\r\n\t\t\t\tout.println( \"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\">\\n<html>\\n\" +\r\n\t\t\t\t\t\"<head>\\n\" +\r\n\t\t\t\t\t\"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=UTF-8\\\">\\n\" +\r\n\t\t\t\t\t\"<title>\" + _(\"SusiMail\") + \" - \" + subtitle + \"<\/title>\\n\" +\r\n\t\t\t\t\t\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\" + sessionObject.themePath + \"susimail.css\\\">\\n\" );\r\n\t\t\t\tif (sessionObject.isMobile ) {\r\n\t\t\t\t\tout.println( \"<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes\\\" />\\n\" +\r\n\t\t\t\t\t\t\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\" + sessionObject.themePath + \"mobile.css\\\" />\\n\" );\r\n\t\t\t\t}\r\n\t\t\t\tif (sessionObject.state == STATE_NEW) {\r\n\t\t\t\t\t// TODO cancel if to and body are empty\r\n\t\t\t\t\tout.println(\r\n\t\t\t\t\t\t\"<script type = \\\"text/javascript\\\">\" +\r\n\t\t\t\t\t\t\t\"window.onbeforeunload = function () {\" +\r\n\t\t\t\t\t\t\t\t\"return \\\"\" + _(\"Message has not been sent. Do you want to discard it?\") + \"\\\";\" +\r\n\t\t\t\t\t\t\t\"};\" +\r\n\t\t\t\t\t\t\t\"function cancelPopup() {\" +\r\n\t\t\t\t\t\t\t\t\"window.onbeforeunload = null;\" +\r\n\t\t\t\t\t\t\t\"};\" +\r\n\t\t\t\t\t\t\"<\/script>\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tout.println( \"<\/head>\\n<body>\\n\" +\r\n\t\t\t\t\t\"<div class=\\\"page\\\"><p><img src=\\\"\" + sessionObject.imgPath + \"susimail.png\\\" alt=\\\"Susimail\\\"><br>&nbsp;<\/p>\\n\" +\r\n\t\t\t\t\t\"<form method=\\\"POST\\\" enctype=\\\"multipart/form-data\\\" action=\\\"\" + myself + \"\\\" accept-charset=\\\"UTF-8\\\">\" );\r\n\r\n\t\t\t\tif( sessionObject.error != null && sessionObject.error.length() > 0 ) {\r\n\t\t\t\t\tout.println( \"<p class=\\\"error\\\">\" + sessionObject.error + \"<\/p>\" );\r\n\t\t\t\t}\r\n\t\t\t\tif( sessionObject.info != null && sessionObject.info.length() > 0 ) {\r\n\t\t\t\t\tout.println( \"<p class=\\\"info\\\">\" + sessionObject.info + \"<\/p>\" );\r\n\t\t\t\t}\r\n\t\t\t\t/*\r\n\t\t\t\t * now write body\r\n\t\t\t\t */\r\n\t\t\t\tif( sessionObject.state == STATE_AUTH )\r\n\t\t\t\t\tshowLogin( out );\r\n\t\t\t\t\r\n\t\t\t\telse if( sessionObject.state == STATE_LIST )\r\n\t\t\t\t\tshowFolder( out, sessionObject, request );\r\n\t\t\t\t\r\n\t\t\t\telse if( sessionObject.state == STATE_SHOW )\r\n\t\t\t\t\tshowMessage( out, sessionObject );\r\n\t\t\t\t\r\n\t\t\t\telse if( sessionObject.state == STATE_NEW )\r\n\t\t\t\t\tshowCompose( out, sessionObject, request );\r\n\t\t\t\t\r\n\t\t\t\t//out.println( \"<\/form><div id=\\\"footer\\\"><hr><p class=\\\"footer\\\">susimail v0.\" + version +\" \" + ( RELEASE ? \"release\" : \"development\" ) + \" &copy; 2004-2005 <a href=\\\"mailto:susi23@mail.i2p\\\">susi<\/a><\/div><\/div><\/body>\\n<\/html>\");\t\t\t\t\r\n\t\t\t\tout.println( \"<\/form><div id=\\\"footer\\\"><hr><p class=\\\"footer\\\">susimail &copy; 2004-2005 susi<\/div><\/div><\/body>\\n<\/html>\");\t\t\t\t\r\n\t\t\t\tout.flush();\r\n\t\t\t}\r\n\t\t}\r\n\t}","commit_id":"b4a0ffdbbd01868c6b3198505f5839d593917513","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\r\n\t * returns html string of a form button with name and label\r\n\t * \r\n\t * @param name\r\n\t * @param label\r\n\t * @return html string\r\n\t */\r\n\tprivate static String button( String name, String label )\r\n\t{\r\n\t\tStringBuilder buf = new StringBuilder(128);\r\n\t\tbuf.append(\"<input type=\\\"submit\\\" class=\\\"\").append(name).append(\"\\\" name=\\\"\")\r\n\t\t   .append(name).append(\"\\\" value=\\\"\").append(label).append('\"');\r\n\t\tif (name.equals(SEND) || name.equals(CANCEL) || name.equals(DELETE_ATTACHMENT))\r\n\t\t\tbuf.append(\" onclick=\\\"cancelPopup()\\\"\");\r\n\t\tbuf.append('>');\r\n\t\treturn buf.toString();\r\n\t}","id":48494,"modified_method":"/**\r\n\t * returns html string of a form button with name and label\r\n\t * \r\n\t * @param name\r\n\t * @param label\r\n\t * @return html string\r\n\t */\r\n\tprivate static String button( String name, String label )\r\n\t{\r\n\t\tStringBuilder buf = new StringBuilder(128);\r\n\t\tbuf.append(\"<input type=\\\"submit\\\" class=\\\"\").append(name).append(\"\\\" name=\\\"\")\r\n\t\t   .append(name).append(\"\\\" value=\\\"\").append(label).append('\"');\r\n\t\tif (name.equals(SEND) || name.equals(CANCEL) || name.equals(DELETE_ATTACHMENT) || name.equals(NEW_UPLOAD))\r\n\t\t\tbuf.append(\" onclick=\\\"cancelPopup()\\\"\");\r\n\t\tbuf.append('>');\r\n\t\treturn buf.toString();\r\n\t}","commit_id":"b4a0ffdbbd01868c6b3198505f5839d593917513","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\r\n\t * process buttons of compose message dialog\r\n\t * @param sessionObject\r\n\t * @param request\r\n\t */\r\n\tprivate static void processComposeButtons(SessionObject sessionObject, RequestWrapper request)\r\n\t{\r\n\t\tif( buttonPressed( request, NEW_UPLOAD ) ) {\r\n\t\t\tString filename = request.getFilename( NEW_FILENAME );\r\n\t\t\tint i = filename.lastIndexOf( \"/\" );\r\n\t\t\tif( i != - 1 )\r\n\t\t\t\tfilename = filename.substring( i + 1 );\r\n\t\t\ti = filename.lastIndexOf( \"\\\\\" );\r\n\t\t\tif( i != -1 )\r\n\t\t\t\tfilename = filename.substring( i + 1 );\r\n\t\t\tif( filename != null && filename.length() > 0 ) {\r\n\t\t\t\tInputStream in = request.getInputStream( NEW_FILENAME );\r\n\t\t\t\tint l;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tl = in.available();\r\n\t\t\t\t\tif( l > 0 ) {\r\n\t\t\t\t\t\tbyte buf[] = new byte[l];\r\n\t\t\t\t\t\tin.read( buf );\r\n\t\t\t\t\t\tAttachment attachment = new Attachment();\r\n\t\t\t\t\t\tattachment.setFileName( filename );\r\n\t\t\t\t\t\tString contentType = request.getContentType( NEW_FILENAME );\r\n\t\t\t\t\t\tEncoding encoding;\r\n\t\t\t\t\t\tString encodeTo;\r\n\t\t\t\t\t\tif( contentType.toLowerCase(Locale.US).startsWith( \"text/\" ) )\r\n\t\t\t\t\t\t\tencodeTo = \"quoted-printable\";\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tencodeTo = \"base64\";\r\n\t\t\t\t\t\tencoding = EncodingFactory.getEncoding( encodeTo );\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tif( encoding != null ) {\r\n\t\t\t\t\t\t\t\tattachment.setData( encoding.encode( buf ) );\r\n\t\t\t\t\t\t\t\tattachment.setTransferEncoding( encodeTo );\r\n\t\t\t\t\t\t\t\tattachment.setContentType( contentType );\r\n\t\t\t\t\t\t\t\tif( sessionObject.attachments == null )\r\n\t\t\t\t\t\t\t\t\tsessionObject.attachments = new ArrayList<Attachment>();\r\n\t\t\t\t\t\t\t\tsessionObject.attachments.add( attachment );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tsessionObject.error += _(\"No Encoding found for {0}\", encodeTo) + \"<br>\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (EncodingException e1) {\r\n\t\t\t\t\t\t\tsessionObject.error += _(\"Could not encode data: {0}\", e1.getMessage());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch (IOException e) {\r\n\t\t\t\t\tsessionObject.error += _(\"Error reading uploaded file: {0}\", e.getMessage()) + \"<br>\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if( sessionObject.attachments != null && buttonPressed( request, DELETE_ATTACHMENT ) ) {\r\n\t\t\tfor( Enumeration<String> e = request.getParameterNames(); e.hasMoreElements(); ) {\r\n\t\t\t\tString parameter = e.nextElement();\r\n\t\t\t\tif( parameter.startsWith( \"check\" ) && request.getParameter( parameter ).equals(\"1\")) {\r\n\t\t\t\t\tString number = parameter.substring( 5 );\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tint n = Integer.parseInt( number );\r\n\t\t\t\t\t\tfor( int i = 0; i < sessionObject.attachments.size(); i++ ) {\r\n\t\t\t\t\t\t\tAttachment attachment = (Attachment)sessionObject.attachments.get( i );\r\n\t\t\t\t\t\t\tif( attachment.hashCode() == n ) {\r\n\t\t\t\t\t\t\t\tsessionObject.attachments.remove( i );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch( NumberFormatException nfe ) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t}","id":48495,"modified_method":"/**\r\n\t * process buttons of compose message dialog\r\n\t * This must be called BEFORE processStateChangeButtons so we can add the attachment before SEND\r\n\t *\r\n\t * @param sessionObject\r\n\t * @param request\r\n\t */\r\n\tprivate static void processComposeButtons(SessionObject sessionObject, RequestWrapper request)\r\n\t{\r\n\t\tString filename = request.getFilename( NEW_FILENAME );\r\n\t\t// We handle an attachment whether sending or uploading\r\n\t\tif (filename != null &&\r\n\t\t    (buttonPressed(request, NEW_UPLOAD) || buttonPressed(request, SEND))) {\r\n\t\t\tDebug.debug(Debug.DEBUG, \"Got filename in compose form: \" + filename);\r\n\t\t\tint i = filename.lastIndexOf( \"/\" );\r\n\t\t\tif( i != - 1 )\r\n\t\t\t\tfilename = filename.substring( i + 1 );\r\n\t\t\ti = filename.lastIndexOf( \"\\\\\" );\r\n\t\t\tif( i != -1 )\r\n\t\t\t\tfilename = filename.substring( i + 1 );\r\n\t\t\tif( filename != null && filename.length() > 0 ) {\r\n\t\t\t\tInputStream in = request.getInputStream( NEW_FILENAME );\r\n\t\t\t\tint l;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tl = in.available();\r\n\t\t\t\t\tif( l > 0 ) {\r\n\t\t\t\t\t\tbyte buf[] = new byte[l];\r\n\t\t\t\t\t\tin.read( buf );\r\n\t\t\t\t\t\tAttachment attachment = new Attachment();\r\n\t\t\t\t\t\tattachment.setFileName( filename );\r\n\t\t\t\t\t\tString contentType = request.getContentType( NEW_FILENAME );\r\n\t\t\t\t\t\tEncoding encoding;\r\n\t\t\t\t\t\tString encodeTo;\r\n\t\t\t\t\t\tif( contentType.toLowerCase(Locale.US).startsWith( \"text/\" ) )\r\n\t\t\t\t\t\t\tencodeTo = \"quoted-printable\";\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tencodeTo = \"base64\";\r\n\t\t\t\t\t\tencoding = EncodingFactory.getEncoding( encodeTo );\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tif( encoding != null ) {\r\n\t\t\t\t\t\t\t\tattachment.setData( encoding.encode( buf ) );\r\n\t\t\t\t\t\t\t\tattachment.setTransferEncoding( encodeTo );\r\n\t\t\t\t\t\t\t\tattachment.setContentType( contentType );\r\n\t\t\t\t\t\t\t\tif( sessionObject.attachments == null )\r\n\t\t\t\t\t\t\t\t\tsessionObject.attachments = new ArrayList<Attachment>();\r\n\t\t\t\t\t\t\t\tsessionObject.attachments.add( attachment );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tsessionObject.error += _(\"No Encoding found for {0}\", encodeTo) + \"<br>\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (EncodingException e1) {\r\n\t\t\t\t\t\t\tsessionObject.error += _(\"Could not encode data: {0}\", e1.getMessage());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch (IOException e) {\r\n\t\t\t\t\tsessionObject.error += _(\"Error reading uploaded file: {0}\", e.getMessage()) + \"<br>\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if( sessionObject.attachments != null && buttonPressed( request, DELETE_ATTACHMENT ) ) {\r\n\t\t\tfor( Enumeration<String> e = request.getParameterNames(); e.hasMoreElements(); ) {\r\n\t\t\t\tString parameter = e.nextElement();\r\n\t\t\t\tif( parameter.startsWith( \"check\" ) && request.getParameter( parameter ).equals(\"1\")) {\r\n\t\t\t\t\tString number = parameter.substring( 5 );\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tint n = Integer.parseInt( number );\r\n\t\t\t\t\t\tfor( int i = 0; i < sessionObject.attachments.size(); i++ ) {\r\n\t\t\t\t\t\t\tAttachment attachment = (Attachment)sessionObject.attachments.get( i );\r\n\t\t\t\t\t\t\tif( attachment.hashCode() == n ) {\r\n\t\t\t\t\t\t\t\tsessionObject.attachments.remove( i );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch( NumberFormatException nfe ) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t}","commit_id":"b4a0ffdbbd01868c6b3198505f5839d593917513","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\r\n\t * \r\n\t * @param out\r\n\t * @param sessionObject\r\n\t * @param request\r\n\t */\r\n\tprivate static void showCompose( PrintWriter out, SessionObject sessionObject, RequestWrapper request )\r\n\t{\r\n\t\tout.println( button( SEND, _(\"Send\") ) + spacer +\r\n\t\t\t\tbutton( CANCEL, _(\"Cancel\") ) + spacer +\r\n\t\t\t\t(sessionObject.attachments != null && (!sessionObject.attachments.isEmpty()) ? button( DELETE_ATTACHMENT, _(\"Delete Attachment\") ) : button2( DELETE_ATTACHMENT, _(\"Delete Attachment\") ) ) + spacer);\r\n\t\t//if (Config.hasConfigFile())\r\n\t\t//\tout.println(button( RELOAD, _(\"Reload Config\") ) + spacer);\r\n\t\t//out.println(button( LOGOUT, _(\"Logout\") ) );\r\n\r\n\t\tString from = request.getParameter( NEW_FROM );\r\n\t\tString fixed = Config.getProperty( CONFIG_SENDER_FIXED, \"true\" );\r\n\t\t\r\n\t\tif( from == null || !fixed.equalsIgnoreCase(\"false\")) {\r\n\t\t\t\tString domain = Config.getProperty( CONFIG_SENDER_DOMAIN, \"mail.i2p\" );\r\n\t\t\t\tfrom = \"<\" + sessionObject.user + \"@\" + domain + \">\";\r\n\t\t}\r\n\t\t\r\n\t\tString to = request.getParameter( NEW_TO, sessionObject.replyTo != null ? sessionObject.replyTo : \"\" );\r\n\t\tString cc = request.getParameter( NEW_CC, sessionObject.replyCC != null ? sessionObject.replyCC : \"\" );\r\n\t\tString bcc = request.getParameter( NEW_BCC, \"\" );\r\n\t\tString subject = request.getParameter( NEW_SUBJECT, sessionObject.subject != null ? sessionObject.subject : \"\" );\r\n\t\tString text = request.getParameter( NEW_TEXT, sessionObject.body != null ? sessionObject.body : \"\" );\r\n\t\tsessionObject.replyTo = null;\r\n\t\tsessionObject.replyCC = null;\r\n\t\tsessionObject.subject = null;\r\n\t\tsessionObject.body = null;\r\n\t\t\r\n\t\tout.println( \"<table cellspacing=\\\"0\\\" cellpadding=\\\"5\\\">\\n\" +\r\n\t\t\t\t\"<tr><td colspan=\\\"2\\\" align=\\\"center\\\"><hr><\/td><\/tr>\\n\" +\r\n\t\t\t\t\"<tr><td align=\\\"right\\\">\" + _(\"From:\") + \"<\/td><td align=\\\"left\\\"><input type=\\\"text\\\" size=\\\"80\\\" name=\\\"\" + NEW_FROM + \"\\\" value=\\\"\" + from + \"\\\" \" + ( !fixed.equalsIgnoreCase(\"false\") ? \"disabled\" : \"\" ) +\"><\/td><\/tr>\\n\" +\r\n\t\t\t\t\"<tr><td align=\\\"right\\\">\" + _(\"To:\") + \"<\/td><td align=\\\"left\\\"><input type=\\\"text\\\" size=\\\"80\\\" name=\\\"\" + NEW_TO + \"\\\" value=\\\"\" + to + \"\\\"><\/td><\/tr>\\n\" +\r\n\t\t\t\t\"<tr><td align=\\\"right\\\">\" + _(\"Cc:\") + \"<\/td><td align=\\\"left\\\"><input type=\\\"text\\\" size=\\\"80\\\" name=\\\"\" + NEW_CC + \"\\\" value=\\\"\" + cc + \"\\\"><\/td><\/tr>\\n\" +\r\n\t\t\t\t\"<tr><td align=\\\"right\\\">\" + _(\"Bcc:\") + \"<\/td><td align=\\\"left\\\"><input type=\\\"text\\\" size=\\\"80\\\" name=\\\"\" + NEW_BCC + \"\\\" value=\\\"\" + bcc + \"\\\"><\/td><\/tr>\\n\" +\r\n\t\t\t\t\"<tr><td align=\\\"right\\\">\" + _(\"Bcc to self\") + \": <\/td><td align=\\\"left\\\"><input type=\\\"checkbox\\\" class=\\\"optbox\\\" name=\\\"\" + NEW_BCC_TO_SELF + \"\\\" value=\\\"1\\\"\" + (sessionObject.bccToSelf ? \"checked\" : \"\" ) + \"><\/td><\/tr>\\n\" +\r\n\t\t\t\t\"<tr><td align=\\\"right\\\">\" + _(\"Subject:\") + \"<\/td><td align=\\\"left\\\"><input type=\\\"text\\\" size=\\\"80\\\" name=\\\"\" + NEW_SUBJECT + \"\\\" value=\\\"\" + subject + \"\\\"><\/td><\/tr>\\n\" +\r\n\t\t\t\t\"<tr><td colspan=\\\"2\\\" align=\\\"center\\\"><textarea cols=\\\"\" + Config.getProperty( CONFIG_COMPOSER_COLS, 80 )+ \"\\\" rows=\\\"\" + Config.getProperty( CONFIG_COMPOSER_ROWS, 10 )+ \"\\\" name=\\\"\" + NEW_TEXT + \"\\\">\" + text + \"<\/textarea>\" +\r\n\t\t\t\t\"<tr><td colspan=\\\"2\\\" align=\\\"center\\\"><hr><\/td><\/tr>\\n\" +\r\n\t\t\t\t\"<tr><td align=\\\"right\\\">\" + _(\"New Attachment:\") + \"<\/td><td align=\\\"left\\\"><input type=\\\"file\\\" size=\\\"50%\\\" name=\\\"\" + NEW_FILENAME + \"\\\" value=\\\"\\\">\" +\r\n\t\t\t\t\"<input type=\\\"submit\\\" name=\\\"\" + NEW_UPLOAD + \"\\\" value=\\\"\" + _(\"Upload File\") + \"\\\" onclick=\\\"cancelPopup()\\\"><\/td><\/tr>\" );\r\n\t\t\r\n\t\tif( sessionObject.attachments != null && !sessionObject.attachments.isEmpty() ) {\r\n\t\t\tboolean wroteHeader = false;\r\n\t\t\tfor( Attachment attachment : sessionObject.attachments ) {\r\n\t\t\t\tif( !wroteHeader ) {\r\n\t\t\t\t\tout.println(\"<tr><td align=\\\"right\\\">\" + _(\"Attachments:\") + \"<\/td>\");\r\n\t\t\t\t\twroteHeader = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tout.println(\"<tr><td align=\\\"right\\\">&nbsp;<\/td>\");\r\n\t\t\t\t}\r\n\t\t\t\tout.println(\"<td align=\\\"left\\\"><input type=\\\"checkbox\\\" class=\\\"optbox\\\" name=\\\"check\" + attachment.hashCode() + \"\\\" value=\\\"1\\\">&nbsp;\" + attachment.getFileName() + \"<\/td><\/tr>\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tout.println( \"<\/table>\" );\r\n\t}","id":48496,"modified_method":"/**\r\n\t * \r\n\t * @param out\r\n\t * @param sessionObject\r\n\t * @param request\r\n\t */\r\n\tprivate static void showCompose( PrintWriter out, SessionObject sessionObject, RequestWrapper request )\r\n\t{\r\n\t\tout.println( button( SEND, _(\"Send\") ) + spacer +\r\n\t\t\t\tbutton( CANCEL, _(\"Cancel\") ));\r\n\t\t//if (Config.hasConfigFile())\r\n\t\t//\tout.println(button( RELOAD, _(\"Reload Config\") ) + spacer);\r\n\t\t//out.println(button( LOGOUT, _(\"Logout\") ) );\r\n\r\n\t\tString from = request.getParameter( NEW_FROM );\r\n\t\tString fixed = Config.getProperty( CONFIG_SENDER_FIXED, \"true\" );\r\n\t\t\r\n\t\tif( from == null || !fixed.equalsIgnoreCase(\"false\")) {\r\n\t\t\t\tString domain = Config.getProperty( CONFIG_SENDER_DOMAIN, \"mail.i2p\" );\r\n\t\t\t\tfrom = \"<\" + sessionObject.user + \"@\" + domain + \">\";\r\n\t\t}\r\n\t\t\r\n\t\tString to = request.getParameter( NEW_TO, sessionObject.replyTo != null ? sessionObject.replyTo : \"\" );\r\n\t\tString cc = request.getParameter( NEW_CC, sessionObject.replyCC != null ? sessionObject.replyCC : \"\" );\r\n\t\tString bcc = request.getParameter( NEW_BCC, \"\" );\r\n\t\tString subject = request.getParameter( NEW_SUBJECT, sessionObject.subject != null ? sessionObject.subject : \"\" );\r\n\t\tString text = request.getParameter( NEW_TEXT, sessionObject.body != null ? sessionObject.body : \"\" );\r\n\t\tsessionObject.replyTo = null;\r\n\t\tsessionObject.replyCC = null;\r\n\t\tsessionObject.subject = null;\r\n\t\tsessionObject.body = null;\r\n\t\t\r\n\t\tout.println( \"<table cellspacing=\\\"0\\\" cellpadding=\\\"5\\\">\\n\" +\r\n\t\t\t\t\"<tr><td colspan=\\\"2\\\" align=\\\"center\\\"><hr><\/td><\/tr>\\n\" +\r\n\t\t\t\t\"<tr><td align=\\\"right\\\">\" + _(\"From:\") + \"<\/td><td align=\\\"left\\\"><input type=\\\"text\\\" size=\\\"80\\\" name=\\\"\" + NEW_FROM + \"\\\" value=\\\"\" + from + \"\\\" \" + ( !fixed.equalsIgnoreCase(\"false\") ? \"disabled\" : \"\" ) +\"><\/td><\/tr>\\n\" +\r\n\t\t\t\t\"<tr><td align=\\\"right\\\">\" + _(\"To:\") + \"<\/td><td align=\\\"left\\\"><input type=\\\"text\\\" size=\\\"80\\\" name=\\\"\" + NEW_TO + \"\\\" value=\\\"\" + to + \"\\\"><\/td><\/tr>\\n\" +\r\n\t\t\t\t\"<tr><td align=\\\"right\\\">\" + _(\"Cc:\") + \"<\/td><td align=\\\"left\\\"><input type=\\\"text\\\" size=\\\"80\\\" name=\\\"\" + NEW_CC + \"\\\" value=\\\"\" + cc + \"\\\"><\/td><\/tr>\\n\" +\r\n\t\t\t\t\"<tr><td align=\\\"right\\\">\" + _(\"Bcc:\") + \"<\/td><td align=\\\"left\\\"><input type=\\\"text\\\" size=\\\"80\\\" name=\\\"\" + NEW_BCC + \"\\\" value=\\\"\" + bcc + \"\\\"><\/td><\/tr>\\n\" +\r\n\t\t\t\t\"<tr><td align=\\\"right\\\">\" + _(\"Bcc to self\") + \": <\/td><td align=\\\"left\\\"><input type=\\\"checkbox\\\" class=\\\"optbox\\\" name=\\\"\" + NEW_BCC_TO_SELF + \"\\\" value=\\\"1\\\" \" + (sessionObject.bccToSelf ? \"checked\" : \"\" ) + \"><\/td><\/tr>\\n\" +\r\n\t\t\t\t\"<tr><td align=\\\"right\\\">\" + _(\"Subject:\") + \"<\/td><td align=\\\"left\\\"><input type=\\\"text\\\" size=\\\"80\\\" name=\\\"\" + NEW_SUBJECT + \"\\\" value=\\\"\" + subject + \"\\\"><\/td><\/tr>\\n\" +\r\n\t\t\t\t\"<tr><td colspan=\\\"2\\\" align=\\\"center\\\"><textarea cols=\\\"\" + Config.getProperty( CONFIG_COMPOSER_COLS, 80 )+ \"\\\" rows=\\\"\" + Config.getProperty( CONFIG_COMPOSER_ROWS, 10 )+ \"\\\" name=\\\"\" + NEW_TEXT + \"\\\">\" + text + \"<\/textarea>\" +\r\n\t\t\t\t\"<tr><td colspan=\\\"2\\\" align=\\\"center\\\"><hr><\/td><\/tr>\\n\" +\r\n\t\t\t\t\"<tr><td align=\\\"right\\\">\" + _(\"Add Attachment:\") + \"<\/td><td align=\\\"left\\\"><input type=\\\"file\\\" size=\\\"50%\\\" name=\\\"\" + NEW_FILENAME + \"\\\" value=\\\"\\\"><\/td><\/tr>\" +\r\n\t\t\t\t// TODO disable/hide in JS if no file selected\r\n\t\t\t\t\"<tr><td>&nbsp;<\/td><td align=\\\"left\\\">\" + button(NEW_UPLOAD, _(\"Add another attachment\")) + \"<\/td><\/tr>\");\r\n\t\t\r\n\t\tif( sessionObject.attachments != null && !sessionObject.attachments.isEmpty() ) {\r\n\t\t\tboolean wroteHeader = false;\r\n\t\t\tfor( Attachment attachment : sessionObject.attachments ) {\r\n\t\t\t\tif( !wroteHeader ) {\r\n\t\t\t\t\tout.println(\"<tr><td align=\\\"right\\\">\" + _(\"Attachments:\") + \"<\/td>\");\r\n\t\t\t\t\twroteHeader = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tout.println(\"<tr><td align=\\\"right\\\">&nbsp;<\/td>\");\r\n\t\t\t\t}\r\n\t\t\t\tout.println(\"<td align=\\\"left\\\"><input type=\\\"checkbox\\\" class=\\\"optbox\\\" name=\\\"check\" + attachment.hashCode() + \"\\\" value=\\\"1\\\">&nbsp;\" + attachment.getFileName() + \"<\/td><\/tr>\");\r\n\t\t\t}\r\n\t\t\t// TODO disable in JS if none selected\r\n\t\t\tout.println(\"<tr><td>&nbsp;<\/td><td align=\\\"left\\\">\" +\r\n\t\t\t            button( DELETE_ATTACHMENT, _(\"Delete selected attachments\") ) +\r\n\t\t\t\t    \"<\/td><\/tr>\");\r\n\t\t}\r\n\t\tout.println( \"<\/table>\" );\r\n\t}","commit_id":"b4a0ffdbbd01868c6b3198505f5839d593917513","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"@Override public void visitVariable(@NotNull PsiVariable variable)\n        {\n            super.visitVariable(variable);\n            if (!(variable instanceof PsiLocalVariable))\n            {\n                return;\n            }\n            final PsiExpression initializer = variable.getInitializer();\n            if (!isMoveable(initializer))\n            {\n                return;\n            }\n            final PsiElement variableScope =\n                    PsiTreeUtil.getParentOfType(variable,\n                            PsiCodeBlock.class, PsiForStatement.class);\n            if (variableScope == null)\n            {\n                return;\n            }\n            final Query<PsiReference> query =\n                    ReferencesSearch.search(variable, variable.getUseScope());\n            final Collection<PsiReference> referencesCollection =\n                    query.findAll();\n            final int size = referencesCollection.size();\n            if (size == 0)\n            {\n                return;\n            }\n            final PsiElement[] referenceElements =\n                    new PsiElement[referencesCollection.size()];\n            int index = 0;\n            for (PsiReference reference : referencesCollection)\n            {\n                final PsiElement referenceElement = reference.getElement();\n                referenceElements[index] = referenceElement;\n                index++;\n            }\n            PsiElement commonParent =\n                    ScopeUtils.getCommonParent(referenceElements);\n            if (commonParent == null)\n            {\n                return;\n            }\n            if (initializer != null)\n            {\n                commonParent =\n                        ScopeUtils.moveOutOfLoops(commonParent, variableScope);\n                if (commonParent == null)\n                {\n                    return;\n                }\n            }\n            if (PsiTreeUtil.isAncestor(commonParent, variableScope, true))\n            {\n                return;\n            }\n            if (PsiTreeUtil.isAncestor(variableScope, commonParent, true))\n            {\n                registerVariableError(variable, variable);\n                return;\n            }\n            if (m_onlyLookAtBlocks)\n            {\n                return;\n            }\n            if (commonParent instanceof PsiForStatement)\n            {\n                return;\n            }\n            final PsiElement referenceElement = referenceElements[0];\n            final PsiElement blockChild =\n                    ScopeUtils.getChildWhichContainsElement(variableScope,\n                                                            referenceElement);\n            if (blockChild == null)\n            {\n                return;\n            }\n            final PsiElement insertionPoint =\n                    ScopeUtils.findTighterDeclarationLocation(\n                            blockChild, variable);\n            if (insertionPoint == null)\n            {\n                if (!(blockChild instanceof PsiExpressionStatement))\n                {\n                    return;\n                }\n                final PsiExpressionStatement expressionStatement =\n                        (PsiExpressionStatement)blockChild;\n                final PsiExpression expression =\n                        expressionStatement.getExpression();\n                if (!(expression instanceof PsiAssignmentExpression))\n                {\n                    return;\n                }\n                final PsiAssignmentExpression assignmentExpression =\n                        (PsiAssignmentExpression)expression;\n                final IElementType tokenType =\n                        assignmentExpression.getOperationTokenType();\n                if (tokenType != JavaTokenType.EQ)\n                {\n                    return;\n                }\n                final PsiExpression lhs =\n                        assignmentExpression.getLExpression();\n                if (!lhs.equals(referenceElement))\n                {\n                    return;\n                }\n                final PsiExpression rhs = assignmentExpression.getRExpression();\n                if (VariableAccessUtils.variableIsUsed(variable, rhs))\n                {\n                    return;\n                }\n            }\n            if (insertionPoint != null && PsiUtil.isInJspFile(insertionPoint))\n            {\n                PsiElement elementBefore = insertionPoint.getPrevSibling();\n                elementBefore = PsiTreeUtil.skipSiblingsBackward(elementBefore,\n                        PsiWhiteSpace.class);\n                if (elementBefore instanceof PsiDeclarationStatement)\n                {\n                    final PsiElement variableParent = variable.getParent();\n                    if (elementBefore.equals(variableParent))\n                    {\n                        return;\n                    }\n                }\n            }\n            registerVariableError(variable, variable);\n        }","id":48497,"modified_method":"@Override public void visitVariable(@NotNull PsiVariable variable)\n        {\n            super.visitVariable(variable);\n            if (!(variable instanceof PsiLocalVariable))\n            {\n                return;\n            }\n            final PsiExpression initializer = variable.getInitializer();\n            if (!isMoveable(initializer))\n            {\n                return;\n            }\n            final PsiElement variableScope =\n                    PsiTreeUtil.getParentOfType(variable,\n                            PsiCodeBlock.class, PsiForStatement.class);\n            if (variableScope == null)\n            {\n                return;\n            }\n            final Query<PsiReference> query =\n                    ReferencesSearch.search(variable, variable.getUseScope());\n            final Collection<PsiReference> referencesCollection =\n                    query.findAll();\n            final int size = referencesCollection.size();\n            if (size == 0)\n            {\n                return;\n            }\n            final PsiElement[] referenceElements =\n                    new PsiElement[referencesCollection.size()];\n            int index = 0;\n            for (PsiReference reference : referencesCollection)\n            {\n                final PsiElement referenceElement = reference.getElement();\n                referenceElements[index] = referenceElement;\n                index++;\n            }\n            PsiElement commonParent =\n                    ScopeUtils.getCommonParent(referenceElements);\n            if (commonParent == null)\n            {\n                return;\n            }\n            if (initializer != null)\n            {\n                commonParent =\n                        ScopeUtils.moveOutOfLoops(commonParent, variableScope);\n                if (commonParent == null)\n                {\n                    return;\n                }\n            }\n            if (PsiTreeUtil.isAncestor(commonParent, variableScope, true))\n            {\n                return;\n            }\n            if (PsiTreeUtil.isAncestor(variableScope, commonParent, true))\n            {\n                registerVariableError(variable, variable);\n                return;\n            }\n            if (m_onlyLookAtBlocks)\n            {\n                return;\n            }\n            if (commonParent instanceof PsiForStatement)\n            {\n                return;\n            }\n            final PsiElement referenceElement = referenceElements[0];\n            final PsiElement blockChild =\n                    ScopeUtils.getChildWhichContainsElement(variableScope,\n                                                            referenceElement);\n            if (blockChild == null)\n            {\n                return;\n            }\n            final PsiElement insertionPoint =\n                    ScopeUtils.findTighterDeclarationLocation(\n                            blockChild, variable);\n            if (insertionPoint == null)\n            {\n                if (!(blockChild instanceof PsiExpressionStatement))\n                {\n                    return;\n                }\n                final PsiExpressionStatement expressionStatement =\n                        (PsiExpressionStatement)blockChild;\n                final PsiExpression expression =\n                        expressionStatement.getExpression();\n                if (!(expression instanceof PsiAssignmentExpression))\n                {\n                    return;\n                }\n                final PsiAssignmentExpression assignmentExpression =\n                        (PsiAssignmentExpression)expression;\n                final IElementType tokenType =\n                        assignmentExpression.getOperationTokenType();\n                if (tokenType != JavaTokenType.EQ)\n                {\n                    return;\n                }\n                final PsiExpression lhs =\n                        assignmentExpression.getLExpression();\n                if (!lhs.equals(referenceElement))\n                {\n                    return;\n                }\n                final PsiExpression rhs = assignmentExpression.getRExpression();\n                if (rhs !=  null &&\n                        VariableAccessUtils.variableIsUsed(variable, rhs))\n                {\n                    return;\n                }\n            }\n            if (insertionPoint != null && PsiUtil.isInJspFile(insertionPoint))\n            {\n                PsiElement elementBefore = insertionPoint.getPrevSibling();\n                elementBefore = PsiTreeUtil.skipSiblingsBackward(elementBefore,\n                        PsiWhiteSpace.class);\n                if (elementBefore instanceof PsiDeclarationStatement)\n                {\n                    final PsiElement variableParent = variable.getParent();\n                    if (elementBefore.equals(variableParent))\n                    {\n                        return;\n                    }\n                }\n            }\n            registerVariableError(variable, variable);\n        }","commit_id":"4a83565eb83d0db64158791f27d51521cc1241ab","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void visitAssignmentExpression(\n                @NotNull PsiAssignmentExpression expression) {\n            super.visitAssignmentExpression(expression);\n            final PsiExpression lhs = expression.getLExpression();\n            final PsiParameter parameter = getMethodParameter(lhs);\n            if (parameter == null) {\n                return;\n            }\n            if (ignoreTransformationOfOriginalParameter) {\n                final PsiExpression rhs = expression.getRExpression();\n                if (VariableAccessUtils.variableIsUsed(parameter, rhs)) {\n                    return;\n                }\n            }\n            registerError(lhs);\n        }","id":48498,"modified_method":"public void visitAssignmentExpression(\n                @NotNull PsiAssignmentExpression expression) {\n            super.visitAssignmentExpression(expression);\n            final PsiExpression lhs = expression.getLExpression();\n            final PsiParameter parameter = getMethodParameter(lhs);\n            if (parameter == null) {\n                return;\n            }\n            if (ignoreTransformationOfOriginalParameter) {\n                final PsiExpression rhs = expression.getRExpression();\n                if (rhs != null && VariableAccessUtils.variableIsUsed(parameter, rhs)) {\n                    return;\n                }\n            }\n            registerError(lhs);\n        }","commit_id":"799b67d5bd5d571118a7740defd04e37b38b599e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void filesAndDirsRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filesAndDirsRadioButtonActionPerformed\n        setComponentsForSearchType();\n    }","id":48499,"modified_method":"private void mimeTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mimeTypeComboBoxActionPerformed\n        // TODO add your handling code here:\n    }","commit_id":"2280e1005a1df8cc3b427da56f9d277987f9fee3","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void mimeCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mimeCheckActionPerformed\n        if (!this.mimeCheck.isSelected()) {\n            this.mimeTypeComboBox.setEnabled(false);\n            this.mimeTypeComboBox.setSelectedIndex(0);\n        } else {\n            this.mimeTypeComboBox.setEnabled(true);\n        }\n    }","id":48500,"modified_method":"private void mimeCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mimeCheckActionPerformed\n        if (!this.mimeCheck.isSelected()) {\n            this.mimeTypeComboBox.setEnabled(false);\n            this.mimeTypeComboBox.setSelectedIndex(0);\n        } else {\n            this.mimeTypeComboBox.setEnabled(true);\n        }\n        this.setOkButton();\n    }","commit_id":"2280e1005a1df8cc3b427da56f9d277987f9fee3","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Populates the UI components with default values.\n     */\n    private void populateComponentsWithDefaultValues() {\n        this.filesRadioButton.setSelected(true);\n        this.fullNameRadioButton.setSelected(true);\n        this.equalitySymbolComboBox.setSelectedIndex(2);\n        this.fileSizeComboBox.setSelectedIndex(1);\n    }","id":48501,"modified_method":"/**\n     * Populates the UI components with default values.\n     */\n    private void populateComponentsWithDefaultValues() {\n        this.filesCheck.setSelected(true);\n        this.fullNameRadioButton.setSelected(true);\n        this.equalitySymbolComboBox.setSelectedIndex(2);\n        this.fileSizeComboBox.setSelectedIndex(1);\n    }","commit_id":"2280e1005a1df8cc3b427da56f9d277987f9fee3","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Populates the UI components that display the meta-type condition for a\n     * rule.\n     *\n     * @param rule The files set rule to be edited.\n     */\n    private void populateTypeConditionComponents(FilesSet.Rule rule) {\n        FilesSet.Rule.MetaTypeCondition typeCondition = rule.getMetaTypeCondition();\n        switch (typeCondition.getMetaType()) {\n            case FILES:\n                this.filesRadioButton.setSelected(true);\n                break;\n            case DIRECTORIES:\n                this.dirsRadioButton.setSelected(true);\n                break;\n            case FILES_AND_DIRECTORIES:\n                this.filesAndDirsRadioButton.setSelected(true);\n                break;\n        }\n    }","id":48502,"modified_method":"/**\n     * Populates the UI components that display the meta-type condition for a\n     * rule.\n     *\n     * @param rule The files set rule to be edited.\n     */\n    private void populateTypeConditionComponents(FilesSet.Rule rule) {\n        FilesSet.Rule.MetaTypeCondition typeCondition = rule.getMetaTypeCondition();\n        switch (typeCondition.getMetaType()) {\n            case FILES:\n                this.filesCheck.setSelected(true);\n                break;\n            case DIRECTORIES:\n                this.directoriesCheck.setSelected(true);\n                break;\n            case FILES_AND_DIRECTORIES:\n                this.filesCheck.setSelected(true);\n                this.directoriesCheck.setSelected(true);\n                break;\n        }\n    }","commit_id":"2280e1005a1df8cc3b427da56f9d277987f9fee3","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Gets the file meta-type condition for the rule that was created or\n     * edited.\n     *\n     * @return A type condition.\n     */\n    FilesSet.Rule.MetaTypeCondition getMetaTypeCondition() {\n        if (this.filesRadioButton.isSelected()) {\n            return new FilesSet.Rule.MetaTypeCondition(FilesSet.Rule.MetaTypeCondition.Type.FILES);\n        } else if (this.dirsRadioButton.isSelected()) {\n            return new FilesSet.Rule.MetaTypeCondition(FilesSet.Rule.MetaTypeCondition.Type.DIRECTORIES);\n        } else {\n            return new FilesSet.Rule.MetaTypeCondition(FilesSet.Rule.MetaTypeCondition.Type.FILES_AND_DIRECTORIES);\n        }\n    }","id":48503,"modified_method":"/**\n     * Gets the file meta-type condition for the rule that was created or\n     * edited.\n     *\n     * @return A type condition.\n     */\n    FilesSet.Rule.MetaTypeCondition getMetaTypeCondition() {\n        if (this.filesCheck.isSelected() && !this.directoriesCheck.isSelected()) {\n            return new FilesSet.Rule.MetaTypeCondition(FilesSet.Rule.MetaTypeCondition.Type.FILES);\n        } else if (this.directoriesCheck.isSelected() && !this.filesCheck.isSelected()) {\n            return new FilesSet.Rule.MetaTypeCondition(FilesSet.Rule.MetaTypeCondition.Type.DIRECTORIES);\n        } else {\n            return new FilesSet.Rule.MetaTypeCondition(FilesSet.Rule.MetaTypeCondition.Type.FILES_AND_DIRECTORIES);\n        }\n    }","commit_id":"2280e1005a1df8cc3b427da56f9d277987f9fee3","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        nameButtonGroup = new javax.swing.ButtonGroup();\n        typeButtonGroup = new javax.swing.ButtonGroup();\n        ruleNameLabel = new javax.swing.JLabel();\n        ruleNameTextField = new javax.swing.JTextField();\n        jLabel1 = new javax.swing.JLabel();\n        dirsRadioButton = new javax.swing.JRadioButton();\n        filesRadioButton = new javax.swing.JRadioButton();\n        filesAndDirsRadioButton = new javax.swing.JRadioButton();\n        nameTextField = new javax.swing.JTextField();\n        fullNameRadioButton = new javax.swing.JRadioButton();\n        extensionRadioButton = new javax.swing.JRadioButton();\n        nameRegexCheckbox = new javax.swing.JCheckBox();\n        pathTextField = new javax.swing.JTextField();\n        pathRegexCheckBox = new javax.swing.JCheckBox();\n        pathSeparatorInfoLabel = new javax.swing.JLabel();\n        jLabel5 = new javax.swing.JLabel();\n        mimeTypeComboBox = new javax.swing.JComboBox<String>();\n        equalitySymbolComboBox = new javax.swing.JComboBox<String>();\n        fileSizeComboBox = new javax.swing.JComboBox<String>();\n        fileSizeSpinner = new javax.swing.JSpinner();\n        nameCheck = new javax.swing.JCheckBox();\n        pathCheck = new javax.swing.JCheckBox();\n        mimeCheck = new javax.swing.JCheckBox();\n        fileCheck = new javax.swing.JCheckBox();\n\n        org.openide.awt.Mnemonics.setLocalizedText(ruleNameLabel, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.ruleNameLabel.text\")); // NOI18N\n\n        ruleNameTextField.setText(org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.ruleNameTextField.text\")); // NOI18N\n        ruleNameTextField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                ruleNameTextFieldActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.jLabel1.text\")); // NOI18N\n\n        typeButtonGroup.add(dirsRadioButton);\n        org.openide.awt.Mnemonics.setLocalizedText(dirsRadioButton, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.dirsRadioButton.text\")); // NOI18N\n        dirsRadioButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                dirsRadioButtonActionPerformed(evt);\n            }\n        });\n\n        typeButtonGroup.add(filesRadioButton);\n        org.openide.awt.Mnemonics.setLocalizedText(filesRadioButton, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.filesRadioButton.text\")); // NOI18N\n        filesRadioButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                filesRadioButtonActionPerformed(evt);\n            }\n        });\n\n        typeButtonGroup.add(filesAndDirsRadioButton);\n        org.openide.awt.Mnemonics.setLocalizedText(filesAndDirsRadioButton, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.filesAndDirsRadioButton.text\")); // NOI18N\n        filesAndDirsRadioButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                filesAndDirsRadioButtonActionPerformed(evt);\n            }\n        });\n\n        nameTextField.setText(org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.nameTextField.text\")); // NOI18N\n        nameTextField.setEnabled(false);\n\n        nameButtonGroup.add(fullNameRadioButton);\n        org.openide.awt.Mnemonics.setLocalizedText(fullNameRadioButton, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.fullNameRadioButton.text\")); // NOI18N\n        fullNameRadioButton.setEnabled(false);\n\n        nameButtonGroup.add(extensionRadioButton);\n        org.openide.awt.Mnemonics.setLocalizedText(extensionRadioButton, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.extensionRadioButton.text\")); // NOI18N\n        extensionRadioButton.setEnabled(false);\n\n        org.openide.awt.Mnemonics.setLocalizedText(nameRegexCheckbox, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.nameRegexCheckbox.text\")); // NOI18N\n        nameRegexCheckbox.setEnabled(false);\n\n        pathTextField.setText(org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.pathTextField.text\")); // NOI18N\n        pathTextField.setEnabled(false);\n\n        org.openide.awt.Mnemonics.setLocalizedText(pathRegexCheckBox, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.pathRegexCheckBox.text\")); // NOI18N\n        pathRegexCheckBox.setEnabled(false);\n\n        pathSeparatorInfoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/info-icon-16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(pathSeparatorInfoLabel, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.pathSeparatorInfoLabel.text\")); // NOI18N\n        pathSeparatorInfoLabel.setEnabled(false);\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.jLabel5.text\")); // NOI18N\n\n        mimeTypeComboBox.setEditable(true);\n        mimeTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] {\"\"}));\n        mimeTypeComboBox.setEnabled(false);\n\n        equalitySymbolComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { \"=\", \">\", \"≥\", \"<\", \"≤\" }));\n        equalitySymbolComboBox.setEnabled(false);\n\n        fileSizeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { Bundle.FilesSetRulePanel_bytes(), Bundle.FilesSetRulePanel_kiloBytes(), Bundle.FilesSetRulePanel_megaBytes(), Bundle.FilesSetRulePanel_gigaBytes() }));\n        fileSizeComboBox.setEnabled(false);\n\n        fileSizeSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));\n        fileSizeSpinner.setEnabled(false);\n\n        org.openide.awt.Mnemonics.setLocalizedText(nameCheck, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.nameCheck.text\")); // NOI18N\n        nameCheck.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                nameCheckActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(pathCheck, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.pathCheck.text\")); // NOI18N\n        pathCheck.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                pathCheckActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(mimeCheck, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.mimeCheck.text\")); // NOI18N\n        mimeCheck.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                mimeCheckActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(fileCheck, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.fileCheck.text\")); // NOI18N\n        fileCheck.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                fileCheckActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(8, 8, 8)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                                .addComponent(jLabel1)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                .addComponent(filesRadioButton)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(dirsRadioButton)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(filesAndDirsRadioButton))\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(jLabel5)\n                                .addGap(0, 0, Short.MAX_VALUE))\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(ruleNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(ruleNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))))\n                    .addGroup(layout.createSequentialGroup()\n                        .addContainerGap()\n                        .addComponent(nameCheck)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()\n                        .addContainerGap()\n                        .addComponent(pathCheck)\n                        .addGap(4, 4, 4)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(pathRegexCheckBox)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                .addComponent(pathSeparatorInfoLabel))\n                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                                .addGap(0, 0, Short.MAX_VALUE)\n                                .addComponent(pathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(fullNameRadioButton)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(extensionRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(nameRegexCheckbox)\n                                .addGap(0, 0, Short.MAX_VALUE))))\n                    .addGroup(layout.createSequentialGroup()\n                        .addContainerGap()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(mimeCheck)\n                            .addComponent(fileCheck))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(equalitySymbolComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addGap(18, 18, 18)\n                                .addComponent(fileSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addGap(18, 18, 18)\n                                .addComponent(fileSizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addComponent(mimeTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(jLabel5)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jLabel1)\n                    .addComponent(filesRadioButton)\n                    .addComponent(dirsRadioButton)\n                    .addComponent(filesAndDirsRadioButton))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(nameCheck))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(fullNameRadioButton)\n                    .addComponent(extensionRadioButton)\n                    .addComponent(nameRegexCheckbox))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(pathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(pathCheck))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(pathRegexCheckBox)\n                    .addComponent(pathSeparatorInfoLabel))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(mimeTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(mimeCheck))\n                .addGap(11, 11, 11)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(equalitySymbolComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(fileSizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(fileSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(fileCheck))\n                .addGap(15, 15, 15)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(ruleNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(ruleNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                .addContainerGap())\n        );\n    }","id":48504,"modified_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        nameButtonGroup = new javax.swing.ButtonGroup();\n        typeButtonGroup = new javax.swing.ButtonGroup();\n        ruleNameLabel = new javax.swing.JLabel();\n        ruleNameTextField = new javax.swing.JTextField();\n        jLabel1 = new javax.swing.JLabel();\n        nameTextField = new javax.swing.JTextField();\n        fullNameRadioButton = new javax.swing.JRadioButton();\n        extensionRadioButton = new javax.swing.JRadioButton();\n        nameRegexCheckbox = new javax.swing.JCheckBox();\n        pathTextField = new javax.swing.JTextField();\n        pathRegexCheckBox = new javax.swing.JCheckBox();\n        pathSeparatorInfoLabel = new javax.swing.JLabel();\n        jLabel5 = new javax.swing.JLabel();\n        mimeTypeComboBox = new javax.swing.JComboBox<String>();\n        equalitySymbolComboBox = new javax.swing.JComboBox<String>();\n        fileSizeComboBox = new javax.swing.JComboBox<String>();\n        fileSizeSpinner = new javax.swing.JSpinner();\n        nameCheck = new javax.swing.JCheckBox();\n        pathCheck = new javax.swing.JCheckBox();\n        mimeCheck = new javax.swing.JCheckBox();\n        fileSizeCheck = new javax.swing.JCheckBox();\n        filesCheck = new javax.swing.JCheckBox();\n        directoriesCheck = new javax.swing.JCheckBox();\n\n        org.openide.awt.Mnemonics.setLocalizedText(ruleNameLabel, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.ruleNameLabel.text\")); // NOI18N\n\n        ruleNameTextField.setText(org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.ruleNameTextField.text\")); // NOI18N\n        ruleNameTextField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                ruleNameTextFieldActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.jLabel1.text\")); // NOI18N\n\n        nameTextField.setText(org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.nameTextField.text\")); // NOI18N\n        nameTextField.setEnabled(false);\n\n        nameButtonGroup.add(fullNameRadioButton);\n        org.openide.awt.Mnemonics.setLocalizedText(fullNameRadioButton, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.fullNameRadioButton.text\")); // NOI18N\n        fullNameRadioButton.setEnabled(false);\n\n        nameButtonGroup.add(extensionRadioButton);\n        org.openide.awt.Mnemonics.setLocalizedText(extensionRadioButton, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.extensionRadioButton.text\")); // NOI18N\n        extensionRadioButton.setEnabled(false);\n\n        org.openide.awt.Mnemonics.setLocalizedText(nameRegexCheckbox, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.nameRegexCheckbox.text\")); // NOI18N\n        nameRegexCheckbox.setEnabled(false);\n\n        pathTextField.setText(org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.pathTextField.text\")); // NOI18N\n        pathTextField.setEnabled(false);\n\n        org.openide.awt.Mnemonics.setLocalizedText(pathRegexCheckBox, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.pathRegexCheckBox.text\")); // NOI18N\n        pathRegexCheckBox.setEnabled(false);\n\n        pathSeparatorInfoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/info-icon-16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(pathSeparatorInfoLabel, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.pathSeparatorInfoLabel.text\")); // NOI18N\n        pathSeparatorInfoLabel.setEnabled(false);\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.jLabel5.text\")); // NOI18N\n\n        mimeTypeComboBox.setEditable(true);\n        mimeTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] {\"\"}));\n        mimeTypeComboBox.setEnabled(false);\n        mimeTypeComboBox.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                mimeTypeComboBoxActionPerformed(evt);\n            }\n        });\n\n        equalitySymbolComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { \"=\", \">\", \"≥\", \"<\", \"≤\" }));\n        equalitySymbolComboBox.setEnabled(false);\n\n        fileSizeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { Bundle.FilesSetRulePanel_bytes(), Bundle.FilesSetRulePanel_kiloBytes(), Bundle.FilesSetRulePanel_megaBytes(), Bundle.FilesSetRulePanel_gigaBytes() }));\n        fileSizeComboBox.setEnabled(false);\n\n        fileSizeSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));\n        fileSizeSpinner.setEnabled(false);\n\n        org.openide.awt.Mnemonics.setLocalizedText(nameCheck, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.nameCheck.text\")); // NOI18N\n        nameCheck.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                nameCheckActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(pathCheck, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.pathCheck.text\")); // NOI18N\n        pathCheck.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                pathCheckActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(mimeCheck, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.mimeCheck.text\")); // NOI18N\n        mimeCheck.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                mimeCheckActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(fileSizeCheck, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.fileSizeCheck.text\")); // NOI18N\n        fileSizeCheck.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                fileSizeCheckActionPerformed(evt);\n            }\n        });\n\n        filesCheck.setSelected(true);\n        org.openide.awt.Mnemonics.setLocalizedText(filesCheck, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.filesCheck.text\")); // NOI18N\n        filesCheck.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                filesCheckActionPerformed(evt);\n            }\n        });\n\n        org.openide.awt.Mnemonics.setLocalizedText(directoriesCheck, org.openide.util.NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.directoriesCheck.text\")); // NOI18N\n        directoriesCheck.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                directoriesCheckActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(8, 8, 8)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(ruleNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(ruleNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addGroup(layout.createSequentialGroup()\n                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addGroup(layout.createSequentialGroup()\n                                        .addComponent(jLabel1)\n                                        .addGap(64, 64, 64)\n                                        .addComponent(filesCheck)\n                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                        .addComponent(directoriesCheck))\n                                    .addComponent(jLabel5))\n                                .addGap(0, 0, Short.MAX_VALUE))))\n                    .addGroup(layout.createSequentialGroup()\n                        .addContainerGap()\n                        .addComponent(nameCheck)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()\n                        .addContainerGap()\n                        .addComponent(pathCheck)\n                        .addGap(4, 4, 4)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(pathRegexCheckBox)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                .addComponent(pathSeparatorInfoLabel))\n                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                                .addGap(0, 0, Short.MAX_VALUE)\n                                .addComponent(pathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(fullNameRadioButton)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(extensionRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(nameRegexCheckbox)\n                                .addGap(0, 0, Short.MAX_VALUE))))\n                    .addGroup(layout.createSequentialGroup()\n                        .addContainerGap()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(mimeCheck)\n                            .addComponent(fileSizeCheck))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(equalitySymbolComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addGap(18, 18, 18)\n                                .addComponent(fileSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addGap(18, 18, 18)\n                                .addComponent(fileSizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addComponent(mimeTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(jLabel5)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jLabel1)\n                    .addComponent(filesCheck)\n                    .addComponent(directoriesCheck))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(nameCheck))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(fullNameRadioButton)\n                    .addComponent(extensionRadioButton)\n                    .addComponent(nameRegexCheckbox))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(pathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(pathCheck))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(pathRegexCheckBox)\n                    .addComponent(pathSeparatorInfoLabel))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(mimeTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(mimeCheck))\n                .addGap(11, 11, 11)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(equalitySymbolComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(fileSizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(fileSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(fileSizeCheck))\n                .addGap(15, 15, 15)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(ruleNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(ruleNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                .addContainerGap())\n        );\n    }","commit_id":"2280e1005a1df8cc3b427da56f9d277987f9fee3","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void dirsRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dirsRadioButtonActionPerformed\n        setComponentsForSearchType();\n    }","id":48505,"modified_method":"private void directoriesCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directoriesCheckActionPerformed\n        this.setComponentsForSearchType();\n        this.setOkButton();\n    }","commit_id":"2280e1005a1df8cc3b427da56f9d277987f9fee3","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void nameCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameCheckActionPerformed\n        if (!this.nameCheck.isSelected()) {\n            this.nameTextField.setEnabled(false);\n            this.nameTextField.setText(\"\");\n            this.fullNameRadioButton.setEnabled(false);\n            this.extensionRadioButton.setEnabled(false);\n            this.nameRegexCheckbox.setEnabled(false);\n        } else {\n            this.nameTextField.setEnabled(true);\n            this.fullNameRadioButton.setEnabled(true);\n            this.extensionRadioButton.setEnabled(true);\n            this.nameRegexCheckbox.setEnabled(true);\n        }\n    }","id":48506,"modified_method":"private void nameCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameCheckActionPerformed\n        if (!this.nameCheck.isSelected()) {\n            this.nameTextField.setEnabled(false);\n            this.nameTextField.setText(\"\");\n            this.fullNameRadioButton.setEnabled(false);\n            this.extensionRadioButton.setEnabled(false);\n            this.nameRegexCheckbox.setEnabled(false);\n        } else {\n            this.nameTextField.setEnabled(true);\n            this.fullNameRadioButton.setEnabled(true);\n            this.extensionRadioButton.setEnabled(true);\n            this.nameRegexCheckbox.setEnabled(true);\n        }\n        this.setOkButton();\n    }","commit_id":"2280e1005a1df8cc3b427da56f9d277987f9fee3","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void filesRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filesRadioButtonActionPerformed\n        setComponentsForSearchType();\n    }","id":48507,"modified_method":"private void fileSizeCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileSizeCheckActionPerformed\n        if (!this.fileSizeCheck.isSelected()) {\n            this.fileSizeComboBox.setEnabled(false);\n            this.fileSizeSpinner.setEnabled(false);\n            this.fileSizeSpinner.setValue(0);\n            this.equalitySymbolComboBox.setEnabled(false);\n        } else {\n            this.fileSizeComboBox.setEnabled(true);\n            this.fileSizeSpinner.setEnabled(true);\n            this.equalitySymbolComboBox.setEnabled(true);\n        }\n        this.setOkButton();\n    }","commit_id":"2280e1005a1df8cc3b427da56f9d277987f9fee3","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void customInit() {\n        Set<String> fileTypesCollated = new HashSet<>();\n        for (MediaType mediaType : mediaTypes) {\n            fileTypesCollated.add(mediaType.toString());\n        }\n\n        FileTypeDetector fileTypeDetector;\n        try {\n            fileTypeDetector = new FileTypeDetector();\n            List<String> userDefinedFileTypes = fileTypeDetector.getUserDefinedTypes();\n            fileTypesCollated.addAll(userDefinedFileTypes);\n\n        } catch (FileTypeDetector.FileTypeDetectorInitException ex) {\n            logger.log(Level.SEVERE, \"Unable to get user defined file types\", ex);\n        }\n\n        List<String> toSort = new ArrayList<>(fileTypesCollated);\n        toSort.sort((String string1, String string2) -> {\n            int result = String.CASE_INSENSITIVE_ORDER.compare(string1, string2);\n            if (result == 0) {\n                result = string1.compareTo(string2);\n            }\n            return result;\n        });\n\n        for (String file : toSort) {\n            mimeTypeComboBox.addItem(file);\n        }\n    }","id":48508,"modified_method":"private void customInit() {\n        Set<String> fileTypesCollated = new HashSet<>();\n        for (MediaType mediaType : mediaTypes) {\n            fileTypesCollated.add(mediaType.toString());\n        }\n\n        FileTypeDetector fileTypeDetector;\n        try {\n            fileTypeDetector = new FileTypeDetector();\n            List<String> userDefinedFileTypes = fileTypeDetector.getUserDefinedTypes();\n            fileTypesCollated.addAll(userDefinedFileTypes);\n\n        } catch (FileTypeDetector.FileTypeDetectorInitException ex) {\n            logger.log(Level.SEVERE, \"Unable to get user defined file types\", ex);\n        }\n\n        List<String> toSort = new ArrayList<>(fileTypesCollated);\n        toSort.sort((String string1, String string2) -> {\n            int result = String.CASE_INSENSITIVE_ORDER.compare(string1, string2);\n            if (result == 0) {\n                result = string1.compareTo(string2);\n            }\n            return result;\n        });\n\n        for (String file : toSort) {\n            mimeTypeComboBox.addItem(file);\n        }\n        this.setOkButton();\n    }","commit_id":"2280e1005a1df8cc3b427da56f9d277987f9fee3","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void fileCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileCheckActionPerformed\n        if (!this.fileCheck.isSelected()) {\n            this.fileSizeComboBox.setEnabled(false);\n            this.fileSizeSpinner.setEnabled(false);\n            this.fileSizeSpinner.setValue(0);\n            this.equalitySymbolComboBox.setEnabled(false);\n        } else {\n            this.fileSizeComboBox.setEnabled(true);\n            this.fileSizeSpinner.setEnabled(true);\n            this.equalitySymbolComboBox.setEnabled(true);\n        }\n    }","id":48509,"modified_method":"private void filesCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filesCheckActionPerformed\n        this.setComponentsForSearchType();\n        this.setOkButton();\n    }","commit_id":"2280e1005a1df8cc3b427da56f9d277987f9fee3","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Sets the state of the name condition UI components consistent with the\n     * state of the UI components in the type button group.\n     */\n    private void setComponentsForSearchType() {\n        if (!this.filesRadioButton.isSelected()) {\n            this.fullNameRadioButton.setSelected(true);\n            this.extensionRadioButton.setEnabled(false);\n            this.mimeTypeComboBox.setEnabled(false);\n            this.mimeTypeComboBox.setSelectedIndex(0);\n            this.equalitySymbolComboBox.setEnabled(false);\n            this.fileSizeComboBox.setEnabled(false);\n            this.fileSizeSpinner.setEnabled(false);\n            this.fileSizeSpinner.setValue(0);\n            this.fileCheck.setEnabled(false);\n            this.fileCheck.setSelected(false);\n            this.mimeCheck.setEnabled(false);\n            this.mimeCheck.setSelected(false);\n\n        } else {\n            this.extensionRadioButton.setEnabled(true);\n            this.fileCheck.setEnabled(true);\n            this.mimeCheck.setEnabled(true);\n        }\n    }","id":48510,"modified_method":"/**\n     * Sets the state of the name condition UI components consistent with the\n     * state of the UI components in the type button group.\n     */\n    private void setComponentsForSearchType() {\n        if (this.directoriesCheck.isSelected()) {\n            this.fullNameRadioButton.setSelected(true);\n            this.extensionRadioButton.setEnabled(false);\n            this.mimeTypeComboBox.setEnabled(false);\n            this.mimeTypeComboBox.setSelectedIndex(0);\n            this.equalitySymbolComboBox.setEnabled(false);\n            this.fileSizeComboBox.setEnabled(false);\n            this.fileSizeSpinner.setEnabled(false);\n            this.fileSizeSpinner.setValue(0);\n            this.fileSizeCheck.setEnabled(false);\n            this.fileSizeCheck.setSelected(false);\n            this.mimeCheck.setEnabled(false);\n            this.mimeCheck.setSelected(false);\n\n        } else {\n            this.extensionRadioButton.setEnabled(true);\n            this.fileSizeCheck.setEnabled(true);\n            this.mimeCheck.setEnabled(true);\n        }\n    }","commit_id":"2280e1005a1df8cc3b427da56f9d277987f9fee3","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void pathCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathCheckActionPerformed\n        if (!this.pathCheck.isSelected()) {\n            this.pathTextField.setEnabled(false);\n            this.pathTextField.setText(\"\");\n            this.pathRegexCheckBox.setEnabled(false);\n            this.pathSeparatorInfoLabel.setEnabled(false);\n        } else {\n            this.pathTextField.setEnabled(true);\n            this.pathRegexCheckBox.setEnabled(true);\n            this.pathSeparatorInfoLabel.setEnabled(true);\n        }\n    }","id":48511,"modified_method":"private void pathCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathCheckActionPerformed\n        if (!this.pathCheck.isSelected()) {\n            this.pathTextField.setEnabled(false);\n            this.pathTextField.setText(\"\");\n            this.pathRegexCheckBox.setEnabled(false);\n            this.pathSeparatorInfoLabel.setEnabled(false);\n        } else {\n            this.pathTextField.setEnabled(true);\n            this.pathRegexCheckBox.setEnabled(true);\n            this.pathSeparatorInfoLabel.setEnabled(true);\n        }\n        this.setOkButton();\n    }","commit_id":"2280e1005a1df8cc3b427da56f9d277987f9fee3","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        fileNameButtonGroup = new javax.swing.ButtonGroup();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        jPanel1 = new javax.swing.JPanel();\n        jLabel6 = new javax.swing.JLabel();\n        newRuleButton = new javax.swing.JButton();\n        filesRadioButton = new javax.swing.JRadioButton();\n        editRuleButton = new javax.swing.JButton();\n        rulesListLabel = new javax.swing.JLabel();\n        rulesListScrollPane = new javax.swing.JScrollPane();\n        rulesList = new javax.swing.JList<FilesSet.Rule>();\n        setDescScrollPanel = new javax.swing.JScrollPane();\n        setDescriptionTextArea = new javax.swing.JTextArea();\n        editSetButton = new javax.swing.JButton();\n        setsListScrollPane = new javax.swing.JScrollPane();\n        setsList = new javax.swing.JList<FilesSet>();\n        fileNameExtensionRadioButton = new javax.swing.JRadioButton();\n        jLabel3 = new javax.swing.JLabel();\n        fileNameTextField = new javax.swing.JTextField();\n        jLabel5 = new javax.swing.JLabel();\n        fileNameRadioButton = new javax.swing.JRadioButton();\n        rulePathConditionTextField = new javax.swing.JTextField();\n        ignoreKnownFilesCheckbox = new javax.swing.JCheckBox();\n        fileNameRegexCheckbox = new javax.swing.JCheckBox();\n        separator = new javax.swing.JSeparator();\n        setsListLabel = new javax.swing.JLabel();\n        bothRadioButton = new javax.swing.JRadioButton();\n        deleteSetButton = new javax.swing.JButton();\n        deleteRuleButton = new javax.swing.JButton();\n        newSetButton = new javax.swing.JButton();\n        jLabel2 = new javax.swing.JLabel();\n        dirsRadioButton = new javax.swing.JRadioButton();\n        jLabel1 = new javax.swing.JLabel();\n        jLabel4 = new javax.swing.JLabel();\n        rulePathConditionRegexCheckBox = new javax.swing.JCheckBox();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        jTextArea1 = new javax.swing.JTextArea();\n        jLabel7 = new javax.swing.JLabel();\n        mimeTypeComboBox = new javax.swing.JComboBox();\n        jLabel8 = new javax.swing.JLabel();\n        equalitySignComboBox = new javax.swing.JComboBox<String>();\n        jSpinner1 = new javax.swing.JSpinner();\n        fileSizeUnitComboBox = new javax.swing.JComboBox<String>();\n\n        setFont(getFont().deriveFont(getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        jScrollPane1.setFont(jScrollPane1.getFont().deriveFont(jScrollPane1.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        jPanel1.setFont(jPanel1.getFont().deriveFont(jPanel1.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        jLabel6.setFont(jLabel6.getFont().deriveFont(jLabel6.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel6.text\")); // NOI18N\n\n        newRuleButton.setFont(newRuleButton.getFont().deriveFont(newRuleButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        newRuleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(newRuleButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.newRuleButton.text\")); // NOI18N\n        newRuleButton.setEnabled(false);\n        newRuleButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newRuleButtonActionPerformed(evt);\n            }\n        });\n\n        filesRadioButton.setFont(filesRadioButton.getFont().deriveFont(filesRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        filesRadioButton.setSelected(true);\n        org.openide.awt.Mnemonics.setLocalizedText(filesRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.filesRadioButton.text\")); // NOI18N\n        filesRadioButton.setEnabled(false);\n\n        editRuleButton.setFont(editRuleButton.getFont().deriveFont(editRuleButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        editRuleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/edit16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(editRuleButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.editRuleButton.text\")); // NOI18N\n        editRuleButton.setEnabled(false);\n        editRuleButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                editRuleButtonActionPerformed(evt);\n            }\n        });\n\n        rulesListLabel.setFont(rulesListLabel.getFont().deriveFont(rulesListLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(rulesListLabel, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.rulesListLabel.text\")); // NOI18N\n\n        rulesListScrollPane.setFont(rulesListScrollPane.getFont().deriveFont(rulesListScrollPane.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        rulesList.setFont(rulesList.getFont().deriveFont(rulesList.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        rulesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);\n        rulesListScrollPane.setViewportView(rulesList);\n\n        setDescScrollPanel.setFont(setDescScrollPanel.getFont().deriveFont(setDescScrollPanel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        setDescriptionTextArea.setEditable(false);\n        setDescriptionTextArea.setBackground(new java.awt.Color(240, 240, 240));\n        setDescriptionTextArea.setColumns(20);\n        setDescriptionTextArea.setFont(setDescriptionTextArea.getFont().deriveFont(setDescriptionTextArea.getFont().getStyle() & ~java.awt.Font.BOLD, 13));\n        setDescriptionTextArea.setLineWrap(true);\n        setDescriptionTextArea.setRows(2);\n        setDescScrollPanel.setViewportView(setDescriptionTextArea);\n\n        editSetButton.setFont(editSetButton.getFont().deriveFont(editSetButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        editSetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/edit16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(editSetButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.editSetButton.text\")); // NOI18N\n        editSetButton.setEnabled(false);\n        editSetButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                editSetButtonActionPerformed(evt);\n            }\n        });\n\n        setsListScrollPane.setFont(setsListScrollPane.getFont().deriveFont(setsListScrollPane.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        setsList.setFont(setsList.getFont().deriveFont(setsList.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        setsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);\n        setsListScrollPane.setViewportView(setsList);\n\n        fileNameButtonGroup.add(fileNameExtensionRadioButton);\n        fileNameExtensionRadioButton.setFont(fileNameExtensionRadioButton.getFont().deriveFont(fileNameExtensionRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(fileNameExtensionRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.fileNameExtensionRadioButton.text\")); // NOI18N\n        fileNameExtensionRadioButton.setEnabled(false);\n\n        jLabel3.setFont(jLabel3.getFont().deriveFont(jLabel3.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel3.text\")); // NOI18N\n\n        fileNameTextField.setEditable(false);\n        fileNameTextField.setFont(fileNameTextField.getFont().deriveFont(fileNameTextField.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        fileNameTextField.setText(org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.fileNameTextField.text\")); // NOI18N\n        fileNameTextField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                fileNameTextFieldActionPerformed(evt);\n            }\n        });\n\n        jLabel5.setFont(jLabel5.getFont().deriveFont(jLabel5.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel5.text\")); // NOI18N\n\n        fileNameButtonGroup.add(fileNameRadioButton);\n        fileNameRadioButton.setFont(fileNameRadioButton.getFont().deriveFont(fileNameRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(fileNameRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.fileNameRadioButton.text\")); // NOI18N\n        fileNameRadioButton.setEnabled(false);\n\n        rulePathConditionTextField.setEditable(false);\n        rulePathConditionTextField.setFont(rulePathConditionTextField.getFont().deriveFont(rulePathConditionTextField.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        rulePathConditionTextField.setText(org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.rulePathConditionTextField.text\")); // NOI18N\n\n        ignoreKnownFilesCheckbox.setFont(ignoreKnownFilesCheckbox.getFont().deriveFont(ignoreKnownFilesCheckbox.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(ignoreKnownFilesCheckbox, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.ignoreKnownFilesCheckbox.text\")); // NOI18N\n        ignoreKnownFilesCheckbox.setEnabled(false);\n        ignoreKnownFilesCheckbox.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                ignoreKnownFilesCheckboxActionPerformed(evt);\n            }\n        });\n\n        fileNameRegexCheckbox.setFont(fileNameRegexCheckbox.getFont().deriveFont(fileNameRegexCheckbox.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(fileNameRegexCheckbox, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.fileNameRegexCheckbox.text\")); // NOI18N\n        fileNameRegexCheckbox.setEnabled(false);\n\n        separator.setOrientation(javax.swing.SwingConstants.VERTICAL);\n\n        setsListLabel.setFont(setsListLabel.getFont().deriveFont(setsListLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(setsListLabel, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.setsListLabel.text\")); // NOI18N\n\n        bothRadioButton.setFont(bothRadioButton.getFont().deriveFont(bothRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(bothRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.bothRadioButton.text\")); // NOI18N\n        bothRadioButton.setEnabled(false);\n\n        deleteSetButton.setFont(deleteSetButton.getFont().deriveFont(deleteSetButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        deleteSetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(deleteSetButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.deleteSetButton.text\")); // NOI18N\n        deleteSetButton.setEnabled(false);\n        deleteSetButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                deleteSetButtonActionPerformed(evt);\n            }\n        });\n\n        deleteRuleButton.setFont(deleteRuleButton.getFont().deriveFont(deleteRuleButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        deleteRuleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(deleteRuleButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.deleteRuleButton.text\")); // NOI18N\n        deleteRuleButton.setEnabled(false);\n        deleteRuleButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                deleteRuleButtonActionPerformed(evt);\n            }\n        });\n\n        newSetButton.setFont(newSetButton.getFont().deriveFont(newSetButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        newSetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(newSetButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.newSetButton.text\")); // NOI18N\n        newSetButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newSetButtonActionPerformed(evt);\n            }\n        });\n\n        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel2.text\")); // NOI18N\n\n        dirsRadioButton.setFont(dirsRadioButton.getFont().deriveFont(dirsRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(dirsRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.dirsRadioButton.text\")); // NOI18N\n        dirsRadioButton.setEnabled(false);\n        dirsRadioButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                dirsRadioButtonActionPerformed(evt);\n            }\n        });\n\n        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel1.text\")); // NOI18N\n\n        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel4.text\")); // NOI18N\n\n        rulePathConditionRegexCheckBox.setFont(rulePathConditionRegexCheckBox.getFont().deriveFont(rulePathConditionRegexCheckBox.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(rulePathConditionRegexCheckBox, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.rulePathConditionRegexCheckBox.text\")); // NOI18N\n        rulePathConditionRegexCheckBox.setEnabled(false);\n\n        jScrollPane2.setFont(jScrollPane2.getFont().deriveFont(jScrollPane2.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        jTextArea1.setEditable(false);\n        jTextArea1.setBackground(new java.awt.Color(240, 240, 240));\n        jTextArea1.setColumns(20);\n        jTextArea1.setFont(jTextArea1.getFont().deriveFont(jTextArea1.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        jTextArea1.setLineWrap(true);\n        jTextArea1.setRows(3);\n        jTextArea1.setText(org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jTextArea1.text\")); // NOI18N\n        jTextArea1.setWrapStyleWord(true);\n        jScrollPane2.setViewportView(jTextArea1);\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel7.text\")); // NOI18N\n\n        mimeTypeComboBox.setEditable(true);\n        mimeTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] {\"\"}));\n        mimeTypeComboBox.setEnabled(false);\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel8.text\")); // NOI18N\n\n        equalitySignComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { \"=\", \">\", \"≥\", \"<\", \"≤\" }));\n        equalitySignComboBox.setEnabled(false);\n\n        jSpinner1.setEnabled(false);\n\n        fileSizeUnitComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { Bundle.InterestingItemDefsPanel_bytes(), Bundle.InterestingItemDefsPanel_kiloBytes(), Bundle.InterestingItemDefsPanel_megaBytes(), Bundle.InterestingItemDefsPanel_gigaBytes() }));\n        fileSizeUnitComboBox.setEnabled(false);\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(setsListLabel)\n                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)\n                        .addComponent(setsListScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)\n                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addComponent(newSetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(editSetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(deleteSetButton)))\n                .addGap(18, 18, 18)\n                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(12, 12, 12)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addComponent(jLabel1)\n                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addComponent(jLabel2)\n                        .addGap(27, 27, 27)\n                        .addComponent(filesRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(dirsRadioButton)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(bothRadioButton)\n                        .addGap(27, 27, 27))))\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(380, 380, 380)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addComponent(jLabel3)\n                                    .addComponent(jLabel7)\n                                    .addComponent(jLabel8))\n                                .addGap(6, 6, 6))\n                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()\n                                .addComponent(jLabel4)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)\n                            .addComponent(rulePathConditionTextField, javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()\n                                .addComponent(equalitySignComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(fileSizeUnitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addComponent(mimeTypeComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 245, Short.MAX_VALUE)\n                            .addComponent(fileNameTextField)))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(rulesListLabel))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(jLabel5))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(ignoreKnownFilesCheckbox))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(setDescScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(jLabel6))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(rulesListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(newRuleButton)\n                        .addGap(18, 18, 18)\n                        .addComponent(editRuleButton)\n                        .addGap(18, 18, 18)\n                        .addComponent(deleteRuleButton))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(456, 456, 456)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addComponent(fileNameRadioButton)\n                                .addGap(4, 4, 4)\n                                .addComponent(fileNameExtensionRadioButton)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(fileNameRegexCheckbox))\n                            .addComponent(rulePathConditionRegexCheckBox))))\n                .addGap(20, 20, 20))\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(separator)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addGap(18, 18, 18)\n                                .addComponent(setsListLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(setsListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(newSetButton)\n                                    .addComponent(editSetButton)\n                                    .addComponent(deleteSetButton)))\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addComponent(jLabel6)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jLabel5)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(setDescScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(ignoreKnownFilesCheckbox)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(rulesListLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(rulesListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(newRuleButton)\n                                    .addComponent(editRuleButton)\n                                    .addComponent(deleteRuleButton))\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jLabel1)\n                                .addGap(2, 2, 2)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(jLabel2)\n                                    .addComponent(filesRadioButton)\n                                    .addComponent(dirsRadioButton)\n                                    .addComponent(bothRadioButton))\n                                .addGap(16, 16, 16)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(jLabel3)\n                                    .addComponent(fileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(fileNameRadioButton)\n                                    .addComponent(fileNameExtensionRadioButton)\n                                    .addComponent(fileNameRegexCheckbox))))\n                        .addGap(14, 14, 14)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(jLabel4)\n                            .addComponent(rulePathConditionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(rulePathConditionRegexCheckBox)\n                        .addGap(10, 10, 10)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(jLabel7)\n                            .addComponent(mimeTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addGap(16, 16, 16)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(jLabel8)\n                            .addComponent(equalitySignComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                            .addComponent(fileSizeUnitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))\n                .addContainerGap())\n        );\n\n        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {deleteRuleButton, deleteSetButton, editRuleButton, editSetButton, newRuleButton, newSetButton});\n\n        jScrollPane1.setViewportView(jPanel1);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(0, 34, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)\n        );\n    }","id":48512,"modified_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        fileNameButtonGroup = new javax.swing.ButtonGroup();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        jPanel1 = new javax.swing.JPanel();\n        jLabel6 = new javax.swing.JLabel();\n        newRuleButton = new javax.swing.JButton();\n        filesRadioButton = new javax.swing.JRadioButton();\n        editRuleButton = new javax.swing.JButton();\n        rulesListLabel = new javax.swing.JLabel();\n        rulesListScrollPane = new javax.swing.JScrollPane();\n        rulesList = new javax.swing.JList<FilesSet.Rule>();\n        setDescScrollPanel = new javax.swing.JScrollPane();\n        setDescriptionTextArea = new javax.swing.JTextArea();\n        editSetButton = new javax.swing.JButton();\n        setsListScrollPane = new javax.swing.JScrollPane();\n        setsList = new javax.swing.JList<FilesSet>();\n        fileNameExtensionRadioButton = new javax.swing.JRadioButton();\n        jLabel3 = new javax.swing.JLabel();\n        fileNameTextField = new javax.swing.JTextField();\n        jLabel5 = new javax.swing.JLabel();\n        fileNameRadioButton = new javax.swing.JRadioButton();\n        rulePathConditionTextField = new javax.swing.JTextField();\n        ignoreKnownFilesCheckbox = new javax.swing.JCheckBox();\n        fileNameRegexCheckbox = new javax.swing.JCheckBox();\n        separator = new javax.swing.JSeparator();\n        setsListLabel = new javax.swing.JLabel();\n        bothRadioButton = new javax.swing.JRadioButton();\n        deleteSetButton = new javax.swing.JButton();\n        deleteRuleButton = new javax.swing.JButton();\n        newSetButton = new javax.swing.JButton();\n        jLabel2 = new javax.swing.JLabel();\n        dirsRadioButton = new javax.swing.JRadioButton();\n        jLabel1 = new javax.swing.JLabel();\n        jLabel4 = new javax.swing.JLabel();\n        rulePathConditionRegexCheckBox = new javax.swing.JCheckBox();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        jTextArea1 = new javax.swing.JTextArea();\n        jLabel7 = new javax.swing.JLabel();\n        mimeTypeComboBox = new javax.swing.JComboBox();\n        jLabel8 = new javax.swing.JLabel();\n        equalitySignComboBox = new javax.swing.JComboBox<String>();\n        jSpinner1 = new javax.swing.JSpinner();\n        fileSizeUnitComboBox = new javax.swing.JComboBox<String>();\n\n        setFont(getFont().deriveFont(getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        jScrollPane1.setFont(jScrollPane1.getFont().deriveFont(jScrollPane1.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        jPanel1.setFont(jPanel1.getFont().deriveFont(jPanel1.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        jLabel6.setFont(jLabel6.getFont().deriveFont(jLabel6.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel6.text\")); // NOI18N\n\n        newRuleButton.setFont(newRuleButton.getFont().deriveFont(newRuleButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        newRuleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(newRuleButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.newRuleButton.text\")); // NOI18N\n        newRuleButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newRuleButtonActionPerformed(evt);\n            }\n        });\n\n        filesRadioButton.setFont(filesRadioButton.getFont().deriveFont(filesRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        filesRadioButton.setSelected(true);\n        org.openide.awt.Mnemonics.setLocalizedText(filesRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.filesRadioButton.text\")); // NOI18N\n        filesRadioButton.setEnabled(false);\n\n        editRuleButton.setFont(editRuleButton.getFont().deriveFont(editRuleButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        editRuleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/edit16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(editRuleButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.editRuleButton.text\")); // NOI18N\n        editRuleButton.setEnabled(false);\n        editRuleButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                editRuleButtonActionPerformed(evt);\n            }\n        });\n\n        rulesListLabel.setFont(rulesListLabel.getFont().deriveFont(rulesListLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(rulesListLabel, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.rulesListLabel.text\")); // NOI18N\n\n        rulesListScrollPane.setFont(rulesListScrollPane.getFont().deriveFont(rulesListScrollPane.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        rulesList.setFont(rulesList.getFont().deriveFont(rulesList.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        rulesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);\n        rulesListScrollPane.setViewportView(rulesList);\n\n        setDescScrollPanel.setFont(setDescScrollPanel.getFont().deriveFont(setDescScrollPanel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        setDescriptionTextArea.setEditable(false);\n        setDescriptionTextArea.setBackground(new java.awt.Color(240, 240, 240));\n        setDescriptionTextArea.setColumns(20);\n        setDescriptionTextArea.setFont(setDescriptionTextArea.getFont().deriveFont(setDescriptionTextArea.getFont().getStyle() & ~java.awt.Font.BOLD, 13));\n        setDescriptionTextArea.setLineWrap(true);\n        setDescriptionTextArea.setRows(2);\n        setDescScrollPanel.setViewportView(setDescriptionTextArea);\n\n        editSetButton.setFont(editSetButton.getFont().deriveFont(editSetButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        editSetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/edit16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(editSetButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.editSetButton.text\")); // NOI18N\n        editSetButton.setEnabled(false);\n        editSetButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                editSetButtonActionPerformed(evt);\n            }\n        });\n\n        setsListScrollPane.setFont(setsListScrollPane.getFont().deriveFont(setsListScrollPane.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        setsList.setFont(setsList.getFont().deriveFont(setsList.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        setsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);\n        setsListScrollPane.setViewportView(setsList);\n\n        fileNameButtonGroup.add(fileNameExtensionRadioButton);\n        fileNameExtensionRadioButton.setFont(fileNameExtensionRadioButton.getFont().deriveFont(fileNameExtensionRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(fileNameExtensionRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.fileNameExtensionRadioButton.text\")); // NOI18N\n        fileNameExtensionRadioButton.setEnabled(false);\n\n        jLabel3.setFont(jLabel3.getFont().deriveFont(jLabel3.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel3.text\")); // NOI18N\n\n        fileNameTextField.setEditable(false);\n        fileNameTextField.setFont(fileNameTextField.getFont().deriveFont(fileNameTextField.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        fileNameTextField.setText(org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.fileNameTextField.text\")); // NOI18N\n        fileNameTextField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                fileNameTextFieldActionPerformed(evt);\n            }\n        });\n\n        jLabel5.setFont(jLabel5.getFont().deriveFont(jLabel5.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel5.text\")); // NOI18N\n\n        fileNameButtonGroup.add(fileNameRadioButton);\n        fileNameRadioButton.setFont(fileNameRadioButton.getFont().deriveFont(fileNameRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(fileNameRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.fileNameRadioButton.text\")); // NOI18N\n        fileNameRadioButton.setEnabled(false);\n\n        rulePathConditionTextField.setEditable(false);\n        rulePathConditionTextField.setFont(rulePathConditionTextField.getFont().deriveFont(rulePathConditionTextField.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        rulePathConditionTextField.setText(org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.rulePathConditionTextField.text\")); // NOI18N\n\n        ignoreKnownFilesCheckbox.setFont(ignoreKnownFilesCheckbox.getFont().deriveFont(ignoreKnownFilesCheckbox.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(ignoreKnownFilesCheckbox, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.ignoreKnownFilesCheckbox.text\")); // NOI18N\n        ignoreKnownFilesCheckbox.setEnabled(false);\n        ignoreKnownFilesCheckbox.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                ignoreKnownFilesCheckboxActionPerformed(evt);\n            }\n        });\n\n        fileNameRegexCheckbox.setFont(fileNameRegexCheckbox.getFont().deriveFont(fileNameRegexCheckbox.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(fileNameRegexCheckbox, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.fileNameRegexCheckbox.text\")); // NOI18N\n        fileNameRegexCheckbox.setEnabled(false);\n\n        separator.setOrientation(javax.swing.SwingConstants.VERTICAL);\n\n        setsListLabel.setFont(setsListLabel.getFont().deriveFont(setsListLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(setsListLabel, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.setsListLabel.text\")); // NOI18N\n\n        bothRadioButton.setFont(bothRadioButton.getFont().deriveFont(bothRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(bothRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.bothRadioButton.text\")); // NOI18N\n        bothRadioButton.setEnabled(false);\n\n        deleteSetButton.setFont(deleteSetButton.getFont().deriveFont(deleteSetButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        deleteSetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(deleteSetButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.deleteSetButton.text\")); // NOI18N\n        deleteSetButton.setEnabled(false);\n        deleteSetButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                deleteSetButtonActionPerformed(evt);\n            }\n        });\n\n        deleteRuleButton.setFont(deleteRuleButton.getFont().deriveFont(deleteRuleButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        deleteRuleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(deleteRuleButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.deleteRuleButton.text\")); // NOI18N\n        deleteRuleButton.setEnabled(false);\n        deleteRuleButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                deleteRuleButtonActionPerformed(evt);\n            }\n        });\n\n        newSetButton.setFont(newSetButton.getFont().deriveFont(newSetButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        newSetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(newSetButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.newSetButton.text\")); // NOI18N\n        newSetButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newSetButtonActionPerformed(evt);\n            }\n        });\n\n        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel2.text\")); // NOI18N\n\n        dirsRadioButton.setFont(dirsRadioButton.getFont().deriveFont(dirsRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(dirsRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.dirsRadioButton.text\")); // NOI18N\n        dirsRadioButton.setEnabled(false);\n        dirsRadioButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                dirsRadioButtonActionPerformed(evt);\n            }\n        });\n\n        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel1.text\")); // NOI18N\n\n        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel4.text\")); // NOI18N\n\n        rulePathConditionRegexCheckBox.setFont(rulePathConditionRegexCheckBox.getFont().deriveFont(rulePathConditionRegexCheckBox.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(rulePathConditionRegexCheckBox, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.rulePathConditionRegexCheckBox.text\")); // NOI18N\n        rulePathConditionRegexCheckBox.setEnabled(false);\n\n        jScrollPane2.setFont(jScrollPane2.getFont().deriveFont(jScrollPane2.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        jTextArea1.setEditable(false);\n        jTextArea1.setBackground(new java.awt.Color(240, 240, 240));\n        jTextArea1.setColumns(20);\n        jTextArea1.setFont(jTextArea1.getFont().deriveFont(jTextArea1.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        jTextArea1.setLineWrap(true);\n        jTextArea1.setRows(3);\n        jTextArea1.setText(org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jTextArea1.text\")); // NOI18N\n        jTextArea1.setWrapStyleWord(true);\n        jScrollPane2.setViewportView(jTextArea1);\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel7.text\")); // NOI18N\n\n        mimeTypeComboBox.setEditable(true);\n        mimeTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] {\"\"}));\n        mimeTypeComboBox.setEnabled(false);\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel8.text\")); // NOI18N\n\n        equalitySignComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { \"=\", \">\", \"≥\", \"<\", \"≤\" }));\n        equalitySignComboBox.setEnabled(false);\n\n        jSpinner1.setEnabled(false);\n\n        fileSizeUnitComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { Bundle.InterestingItemDefsPanel_bytes(), Bundle.InterestingItemDefsPanel_kiloBytes(), Bundle.InterestingItemDefsPanel_megaBytes(), Bundle.InterestingItemDefsPanel_gigaBytes() }));\n        fileSizeUnitComboBox.setEnabled(false);\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(setsListLabel)\n                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)\n                        .addComponent(setsListScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)\n                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addComponent(newSetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(editSetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(deleteSetButton)))\n                .addGap(18, 18, 18)\n                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(12, 12, 12)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addComponent(jLabel1)\n                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addComponent(jLabel2)\n                        .addGap(27, 27, 27)\n                        .addComponent(filesRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(dirsRadioButton)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(bothRadioButton)\n                        .addGap(27, 27, 27))))\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(380, 380, 380)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addComponent(jLabel3)\n                                    .addComponent(jLabel7)\n                                    .addComponent(jLabel8))\n                                .addGap(6, 6, 6))\n                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()\n                                .addComponent(jLabel4)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)\n                            .addComponent(rulePathConditionTextField, javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()\n                                .addComponent(equalitySignComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(fileSizeUnitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addComponent(mimeTypeComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 245, Short.MAX_VALUE)\n                            .addComponent(fileNameTextField)))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(rulesListLabel))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(jLabel5))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(ignoreKnownFilesCheckbox))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(setDescScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(jLabel6))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(rulesListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(newRuleButton)\n                        .addGap(18, 18, 18)\n                        .addComponent(editRuleButton)\n                        .addGap(18, 18, 18)\n                        .addComponent(deleteRuleButton))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(456, 456, 456)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addComponent(fileNameRadioButton)\n                                .addGap(4, 4, 4)\n                                .addComponent(fileNameExtensionRadioButton)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(fileNameRegexCheckbox))\n                            .addComponent(rulePathConditionRegexCheckBox))))\n                .addGap(20, 20, 20))\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(separator)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addGap(18, 18, 18)\n                                .addComponent(setsListLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(setsListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(newSetButton)\n                                    .addComponent(editSetButton)\n                                    .addComponent(deleteSetButton)))\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addComponent(jLabel6)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jLabel5)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(setDescScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(ignoreKnownFilesCheckbox)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(rulesListLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(rulesListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(newRuleButton)\n                                    .addComponent(editRuleButton)\n                                    .addComponent(deleteRuleButton))\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jLabel1)\n                                .addGap(2, 2, 2)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(jLabel2)\n                                    .addComponent(filesRadioButton)\n                                    .addComponent(dirsRadioButton)\n                                    .addComponent(bothRadioButton))\n                                .addGap(16, 16, 16)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(jLabel3)\n                                    .addComponent(fileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(fileNameRadioButton)\n                                    .addComponent(fileNameExtensionRadioButton)\n                                    .addComponent(fileNameRegexCheckbox))))\n                        .addGap(14, 14, 14)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(jLabel4)\n                            .addComponent(rulePathConditionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(rulePathConditionRegexCheckBox)\n                        .addGap(10, 10, 10)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(jLabel7)\n                            .addComponent(mimeTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addGap(16, 16, 16)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(jLabel8)\n                            .addComponent(equalitySignComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                            .addComponent(fileSizeUnitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))\n                .addContainerGap())\n        );\n\n        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {deleteRuleButton, deleteSetButton, editRuleButton, editSetButton, newRuleButton, newSetButton});\n\n        jScrollPane1.setViewportView(jPanel1);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(0, 34, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)\n        );\n    }","commit_id":"2280e1005a1df8cc3b427da56f9d277987f9fee3","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Display an interesting files set membership rule definition panel in a\n     * dialog box and respond to user interactions with the dialog.\n     *\n     * @param selectedRule The currently selected rule, may be null to indicate\n     *                     a new rule definition is to be created.\n     */\n    private void doFilesSetRuleDialog(FilesSet.Rule selectedRule) {\n        // Create a files set rule panel.\n        FilesSetRulePanel panel;\n        if (selectedRule != null) {\n            // Editing an existing rule definition.\n            panel = new FilesSetRulePanel(selectedRule);\n        } else {\n            // Creating a new rule definition.\n            panel = new FilesSetRulePanel();\n        }\n\n        // Do a dialog box with the files set panel until the user either enters \n        // a valid definition or cancels. Note that the panel gives the user\n        // feedback when isValidDefinition() is called.\n        int option = JOptionPane.OK_OPTION;\n        do {\n            option = JOptionPane.showConfirmDialog(null, panel, NbBundle.getMessage(FilesSetRulePanel.class, \"FilesSetRulePanel.title\"), JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);\n        } while (option == JOptionPane.OK_OPTION && !panel.isValidRuleDefinition());\n\n        if (option == JOptionPane.OK_OPTION) {\n            // Interesting file sets are immutable for thread safety,\n            // so editing a files set rule definition is a replacement \n            // operation. Preserve the existing rules from the set being edited.\n            FilesSet selectedSet = this.setsList.getSelectedValue();\n            Map<String, FilesSet.Rule> rules = new HashMap<>(selectedSet.getRules());\n\n            // Remove the \"old\" rule definition and add the new/edited \n            // definition.\n            if (selectedRule != null) {\n                rules.remove(selectedRule.getUuid());\n            }\n            FilesSet.Rule newRule = new FilesSet.Rule(panel.getRuleName(), panel.getFileNameCondition(), panel.getMetaTypeCondition(), panel.getPathCondition(), panel.getMimeTypeCondition(), panel.getFileSizeCondition());\n            rules.put(newRule.getUuid(), newRule);\n\n            // Add the new/edited files set definition, replacing any previous \n            // definition with the same name and refreshing the display.\n            this.replaceFilesSet(selectedSet, selectedSet.getName(), selectedSet.getDescription(), selectedSet.ignoresKnownFiles(), rules);\n\n            // Select the new/edited rule. Queue it up so it happens after the \n            // selection listeners react to the selection of the \"new\" files \n            // set.\n            EventQueue.invokeLater(() -> {\n                this.rulesList.setSelectedValue(newRule, true);\n            });\n        }\n    }","id":48513,"modified_method":"/**\n     * Display an interesting files set membership rule definition panel in a\n     * dialog box and respond to user interactions with the dialog.\n     *\n     * @param selectedRule The currently selected rule, may be null to indicate\n     * a new rule definition is to be created.\n     */\n    private void doFilesSetRuleDialog(FilesSet.Rule selectedRule) {\n        // Create a files set rule panel.\n        FilesSetRulePanel panel;\n        if (selectedRule != null) {\n            // Editing an existing rule definition.\n            panel = new FilesSetRulePanel(selectedRule);\n        } else {\n            // Creating a new rule definition.\n            panel = new FilesSetRulePanel();\n        }\n        panel.setButtons(okButton, cancelButton);\n        // Do a dialog box with the files set panel until the user either enters \n        // a valid definition or cancels. Note that the panel gives the user\n        // feedback when isValidDefinition() is called.\n        int option = JOptionPane.OK_OPTION;\n        do {\n            option = JOptionPane.showOptionDialog(null, panel, NbBundle.getMessage(FilesSetPanel.class, \"FilesSetPanel.title\"), JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null, new Object[]{okButton, cancelButton}, okButton);\n        } while (option == JOptionPane.OK_OPTION && !panel.isValidRuleDefinition());\n\n        if (option == JOptionPane.OK_OPTION) {\n            // Interesting file sets are immutable for thread safety,\n            // so editing a files set rule definition is a replacement \n            // operation. Preserve the existing rules from the set being edited.\n            FilesSet selectedSet = this.setsList.getSelectedValue();\n            Map<String, FilesSet.Rule> rules = new HashMap<>(selectedSet.getRules());\n\n            // Remove the \"old\" rule definition and add the new/edited \n            // definition.\n            if (selectedRule != null) {\n                rules.remove(selectedRule.getUuid());\n            }\n            FilesSet.Rule newRule = new FilesSet.Rule(panel.getRuleName(), panel.getFileNameCondition(), panel.getMetaTypeCondition(), panel.getPathCondition(), panel.getMimeTypeCondition(), panel.getFileSizeCondition());\n            rules.put(newRule.getUuid(), newRule);\n\n            // Add the new/edited files set definition, replacing any previous \n            // definition with the same name and refreshing the display.\n            this.replaceFilesSet(selectedSet, selectedSet.getName(), selectedSet.getDescription(), selectedSet.ignoresKnownFiles(), rules);\n\n            // Select the new/edited rule. Queue it up so it happens after the \n            // selection listeners react to the selection of the \"new\" files \n            // set.\n            EventQueue.invokeLater(() -> {\n                this.rulesList.setSelectedValue(newRule, true);\n            });\n        }\n    }","commit_id":"2280e1005a1df8cc3b427da56f9d277987f9fee3","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n    public void propertyChange(PropertyChangeEvent evt) {\n        if (evt.getPropertyName().equals(HashDb.EVENT.INDEXING_DONE.name())) {\n            if (currentcount == length) {\n                this.INDEXING_PROGBAR.setValue(100);\n                this.setModal(false);\n                this.setVisible(false);\n            } else {\n                currentcount++;\n                this.INDEXING_LABEL.setText(\"Indexing \" + currentcount + \" of \" + length);\n            }\n        }\n    }","id":48514,"modified_method":"@Override\n    public void propertyChange(PropertyChangeEvent evt) {\n        if (evt.getPropertyName().equals(HashDb.EVENT.INDEXING_DONE.name())) {\n            if (currentcount == length) {\n                this.INDEXING_PROGBAR.setValue(100);\n                this.setModal(false);\n                this.setVisible(false);\n            } else {\n                currentcount++;\n                this.CURRENTLYON_LABEL.setText(\"Currently indexing \" + currentcount + \" of \" + length);\n                \n            }\n        }\n    }","commit_id":"24ba7509d8e8d51e1b718fbe31ef0dbdbde4c3c0","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"void indexThese(List<HashDb> unindexedd) {\n        length = unindexedd.size();\n        this.INDEXING_LABEL.setText(\"Indexing \" + currentcount + \" of \" + length);\n        this.INDEXING_PROGBAR.setIndeterminate(true);\n        for (HashDb db : unindexedd) {\n            this.CURRENTDB_LABEL.setText(currentDb);\n            db.addPropertyChangeListener(this);\n            currentDb = db.getName();\n            try {\n                db.createIndex();\n            } catch (TskException e) {\n                Logger.getLogger(ModalNoButtons.class.getName()).log(Level.WARNING, \"Error making TSK index\", e);\n            }\n        }\n    }","id":48515,"modified_method":"void indexThese(List<HashDb> unindexedd) {\n        length = unindexedd.size();\n        this.INDEXING_PROGBAR.setIndeterminate(true);\n        for (HashDb db : unindexedd) {\n            currentDb = db.getName();\n            this.CURRENTDB_LABEL.setText(\"(\" + currentDb + \")\");\n            db.addPropertyChangeListener(this);\n            try {\n                db.createIndex();\n            } catch (TskException e) {\n                Logger.getLogger(ModalNoButtons.class.getName()).log(Level.WARNING, \"Error making TSK index\", e);\n            }\n        }\n    }","commit_id":"24ba7509d8e8d51e1b718fbe31ef0dbdbde4c3c0","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        INDEXING_LABEL = new javax.swing.JLabel();\n        INDEXING_PROGBAR = new javax.swing.JProgressBar();\n        GO_GET_COFFEE_LABEL = new javax.swing.JLabel();\n        CURRENTDB_LABEL = new javax.swing.JLabel();\n        CURRENTLYON_LABEL = new javax.swing.JLabel();\n\n        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);\n        setModal(true);\n        setResizable(false);\n\n        INDEXING_LABEL.setFont(new java.awt.Font(\"Tahoma\", 0, 24)); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(INDEXING_LABEL, org.openide.util.NbBundle.getMessage(ModalNoButtons.class, \"ModalNoButtons.INDEXING_LABEL.text\")); // NOI18N\n\n        GO_GET_COFFEE_LABEL.setDisplayedMnemonic('H');\n        org.openide.awt.Mnemonics.setLocalizedText(GO_GET_COFFEE_LABEL, org.openide.util.NbBundle.getMessage(ModalNoButtons.class, \"ModalNoButtons.GO_GET_COFFEE_LABEL.text\")); // NOI18N\n\n        CURRENTDB_LABEL.setFont(new java.awt.Font(\"Tahoma\", 0, 14)); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(CURRENTDB_LABEL, org.openide.util.NbBundle.getMessage(ModalNoButtons.class, \"ModalNoButtons.CURRENTDB_LABEL.text\")); // NOI18N\n\n        CURRENTLYON_LABEL.setFont(new java.awt.Font(\"Tahoma\", 0, 14)); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(CURRENTLYON_LABEL, org.openide.util.NbBundle.getMessage(ModalNoButtons.class, \"ModalNoButtons.CURRENTLYON_LABEL.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                .addGap(0, 28, Short.MAX_VALUE)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(GO_GET_COFFEE_LABEL, javax.swing.GroupLayout.Alignment.TRAILING)\n                            .addGroup(layout.createSequentialGroup()\n                                .addGap(70, 70, 70)\n                                .addComponent(INDEXING_LABEL, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addGroup(layout.createSequentialGroup()\n                                .addGap(24, 24, 24)\n                                .addComponent(INDEXING_PROGBAR, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                        .addGap(23, 23, 23))\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(CURRENTLYON_LABEL)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(CURRENTDB_LABEL, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(INDEXING_LABEL)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(CURRENTLYON_LABEL)\n                    .addComponent(CURRENTDB_LABEL, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(GO_GET_COFFEE_LABEL)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(INDEXING_PROGBAR, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(16, 16, 16))\n        );\n\n        pack();\n    }","id":48516,"modified_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        INDEXING_PROGBAR = new javax.swing.JProgressBar();\n        GO_GET_COFFEE_LABEL = new javax.swing.JLabel();\n        CURRENTLYON_LABEL = new javax.swing.JLabel();\n        CURRENTDB_LABEL = new javax.swing.JLabel();\n\n        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);\n        setMaximumSize(new java.awt.Dimension(519, 100));\n        setMinimumSize(new java.awt.Dimension(519, 100));\n        setModal(true);\n        setPreferredSize(new java.awt.Dimension(519, 100));\n        setResizable(false);\n\n        GO_GET_COFFEE_LABEL.setDisplayedMnemonic('H');\n        org.openide.awt.Mnemonics.setLocalizedText(GO_GET_COFFEE_LABEL, org.openide.util.NbBundle.getMessage(ModalNoButtons.class, \"ModalNoButtons.GO_GET_COFFEE_LABEL.text\")); // NOI18N\n\n        CURRENTLYON_LABEL.setFont(new java.awt.Font(\"Tahoma\", 0, 14)); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(CURRENTLYON_LABEL, org.openide.util.NbBundle.getMessage(ModalNoButtons.class, \"ModalNoButtons.CURRENTLYON_LABEL.text\")); // NOI18N\n\n        CURRENTDB_LABEL.setFont(new java.awt.Font(\"Tahoma\", 0, 14)); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(CURRENTDB_LABEL, org.openide.util.NbBundle.getMessage(ModalNoButtons.class, \"ModalNoButtons.CURRENTDB_LABEL.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(INDEXING_PROGBAR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(GO_GET_COFFEE_LABEL)\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(CURRENTLYON_LABEL)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(CURRENTDB_LABEL)))\n                        .addGap(0, 161, Short.MAX_VALUE)))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(GO_GET_COFFEE_LABEL)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(CURRENTLYON_LABEL)\n                    .addComponent(CURRENTDB_LABEL))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(INDEXING_PROGBAR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(70, 70, 70))\n        );\n\n        pack();\n    }","commit_id":"24ba7509d8e8d51e1b718fbe31ef0dbdbde4c3c0","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public boolean processNonCodeMethods(PsiType type, final PsiScopeProcessor processor, final PsiElement place, boolean forCompletion) {\n    if (type instanceof PsiClassType) {\n      final PsiClassType classType = (PsiClassType)type;\n      final PsiClass psiClass = classType.resolve();\n      if (psiClass != null) {\n        final String qname = psiClass.getQualifiedName();\n        if (qname != null) {\n          return GroovyDslFileIndex.processExecutors(place, new PairProcessor<GroovyFile, GroovyDslExecutor>() {\n            public boolean process(GroovyFile groovyFile, GroovyDslExecutor executor) {\n              final StringBuilder classText = new StringBuilder();\n\n              executor.processVariants(new GroovyClassDescriptor(psiClass), new GroovyEnhancerConsumer() {\n                public void property(String name, String type) {\n                  classText.append(\"def \").append(type).append(\" \").append(name).append(\"\\n\");\n                }\n\n                public void method(String name, String type, final LinkedHashMap<String, String> parameters) {\n                  classText.append(\"def \").append(type).append(\" \").append(name).append(\"(\");\n                  classText.append(StringUtil.join(parameters.keySet(), new Function<String, String>() {\n                    public String fun(String s) {\n                      return parameters.get(s) + \" \" + s;\n                    }\n                  }, \", \"));\n\n                  classText.append(\") {}\\n\");\n                }\n\n              });\n\n              if (classText.length() > 0) {\n                final PsiClass psiClass =\n                  GroovyPsiElementFactory.getInstance(place.getProject()).createGroovyFile(\"class GroovyEnhanced {\\n\" + classText + \"}\", false, place)\n                    .getClasses()[0];\n\n                final NameHint nameHint = processor.getHint(NameHint.KEY);\n                final String expectedName = nameHint == null ? null : nameHint.getName(ResolveState.initial());\n\n                for (PsiMethod method : psiClass.getMethods()) {\n                  if ((expectedName == null || expectedName.equals(method.getName())) && !processor.execute(method, ResolveState.initial())) return false;\n                }\n                for (final PsiField field : psiClass.getFields()) {\n                  if ((expectedName == null || expectedName.equals(field.getName())) && !processor.execute(field, ResolveState.initial())) return false;\n                }\n              }\n              return true;\n            }\n          });\n\n        }\n      }\n    }\n    return true;\n  }","id":48517,"modified_method":"public boolean processNonCodeMethods(PsiType type, final PsiScopeProcessor processor, final PsiElement place, boolean forCompletion) {\n    if (type instanceof PsiClassType) {\n      final PsiClassType classType = (PsiClassType)type;\n      final PsiClass psiClass = classType.resolve();\n      if (psiClass != null) {\n        final String qname = psiClass.getQualifiedName();\n        if (qname != null) {\n          final NonCodeMembersGenerator generator = new NonCodeMembersGenerator(place.getProject());\n          GroovyDslFileIndex.processExecutors(place, new GroovyClassDescriptor(psiClass), generator);\n          return generator.processGeneratedMembers(processor);\n        }\n      }\n    }\n    return true;\n  }","commit_id":"c9ae7ba8f3a318867e8e3b2a04389a55b2300b96","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean processScriptEnhancements(final PsiElement place, final PsiScopeProcessor processor) {\n    final GroovyScriptClass scriptClass = getScriptClass();\n    if (scriptClass == null) {\n      return true;\n    }\n\n    return GroovyDslFileIndex.processExecutors(this, new PairProcessor<GroovyFile, GroovyDslExecutor>() {\n      public boolean process(GroovyFile groovyFile, GroovyDslExecutor executor) {\n        final StringBuilder classText = new StringBuilder();\n\n        \n        executor.processVariants(new GroovyScriptDescriptor(GroovyFileImpl.this, scriptClass), new GroovyEnhancerConsumer() {\n          public void property(String name, String type) {\n            classText.append(\"def \").append(type).append(\" \").append(name).append(\"\\n\");\n          }\n\n          public void method(String name, String type, final LinkedHashMap<String, String> parameters) {\n            classText.append(\"def \").append(type).append(\" \").append(name).append(\"(\");\n            classText.append(StringUtil.join(parameters.keySet(), new Function<String, String>() {\n              public String fun(String s) {\n                return parameters.get(s) + \" \" + s;\n              }\n            }, \", \"));\n\n            classText.append(\") {}\\n\");\n          }\n        });\n\n      if (classText.length() > 0) {\n        final PsiClass psiClass =\n          GroovyPsiElementFactory.getInstance(getProject()).createGroovyFile(\"class GroovyEnhanced {\\n\" + classText + \"}\", false, place)\n            .getClasses()[0];\n\n        final NameHint nameHint = processor.getHint(NameHint.KEY);\n        final String expectedName = nameHint == null ? null : nameHint.getName(ResolveState.initial());\n\n        for (PsiMethod method : psiClass.getMethods()) {\n          if ((expectedName == null || expectedName.equals(method.getName())) && !processor.execute(method, ResolveState.initial())) return false;\n        }\n        for (final PsiField field : psiClass.getFields()) {\n          if ((expectedName == null || expectedName.equals(field.getName())) && !processor.execute(field, ResolveState.initial())) return false;\n        }\n      }\n        return true;\n      }\n    });\n  }","id":48518,"modified_method":"private boolean processScriptEnhancements(final PsiElement place, final PsiScopeProcessor processor) {\n    final GroovyScriptClass scriptClass = getScriptClass();\n    if (scriptClass == null) {\n      return true;\n    }\n\n    final NonCodeMembersGenerator generator = new NonCodeMembersGenerator(getProject());\n    GroovyDslFileIndex.processExecutors(place, new GroovyScriptDescriptor(this, scriptClass), generator);\n    return generator.processGeneratedMembers(processor);\n  }","commit_id":"c9ae7ba8f3a318867e8e3b2a04389a55b2300b96","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean processNonCodeMethods(PsiType type, final PsiScopeProcessor processor, final PsiElement place, boolean forCompletion) {\n    if (type instanceof PsiClassType) {\n      final PsiClassType classType = (PsiClassType)type;\n      final PsiClass psiClass = classType.resolve();\n      if (psiClass != null) {\n        final String qname = psiClass.getQualifiedName();\n        if (qname != null) {\n          final NonCodeMembersGenerator generator = new NonCodeMembersGenerator(place.getProject());\n          GroovyDslFileIndex.processExecutors(place, new GroovyClassDescriptor(psiClass), generator);\n          return generator.processGeneratedMembers(processor);\n        }\n      }\n    }\n    return true;\n  }","id":48519,"modified_method":"public boolean processNonCodeMethods(PsiType type, final PsiScopeProcessor processor, final PsiElement place, boolean forCompletion) {\n    if (type instanceof PsiClassType) {\n      final PsiClass psiClass = ((PsiClassType)type).resolve();\n      if (psiClass != null && !(psiClass instanceof GroovyScriptClass)) {\n        final String qname = psiClass.getQualifiedName();\n        if (qname != null) {\n          return GroovyDslFileIndex.processExecutors(place, new GroovyClassDescriptor(psiClass), processor);\n        }\n      }\n    }\n    return true;\n  }","commit_id":"909c05290de7be37621d84a5eadd808421200e3f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void processExecutors(PsiElement place, ClassDescriptor descriptor, GroovyEnhancerConsumer consumer) {\n    final PsiFile placeFile = place.getContainingFile().getOriginalFile();\n    final VirtualFile placeVFfile = placeFile.getVirtualFile();\n    if (placeVFfile == null) {\n      return;\n    }\n\n    int count = 0;\n    final LinkedBlockingQueue<Pair<GroovyFile, GroovyDslExecutor>> queue = new LinkedBlockingQueue<Pair<GroovyFile, GroovyDslExecutor>>();\n\n    final Set<String> unusedPaths = new THashSet<String>(ourMapping.keySet());\n    for (final GroovyFile file : getDslFiles(place.getResolveScope())) {\n      final VirtualFile vfile = file.getVirtualFile();\n      if (vfile == null) {\n        continue;\n      }\n      unusedPaths.remove(vfile.getUrl());\n      if (vfile.equals(placeVFfile)) {\n        continue;\n      }\n\n      final long stamp = file.getModificationStamp();\n      final GroovyDslExecutor cached = getCachedExecutor(vfile, stamp);\n      if (cached == null) {\n        final String text = file.getText();\n        count++;\n        scheduleParsing(queue, file, vfile, stamp, text);\n      } else {\n        cached.processVariants(descriptor, consumer);\n      }\n    }\n\n    for (final String unusedPath : unusedPaths) {\n      final VirtualFile file = VirtualFileManager.getInstance().findFileByUrl(unusedPath);\n      if (file != null) {\n        ourMapping.remove(unusedPath);\n      }\n    }\n\n    try {\n      while (count > 0) {\n        ProgressManager.getInstance().checkCanceled();\n        final Pair<GroovyFile, GroovyDslExecutor> pair = queue.poll(20, TimeUnit.MILLISECONDS);\n        if (pair != null) {\n          final GroovyDslExecutor executor = pair.second;\n          if (executor != null) {\n            executor.processVariants(descriptor, consumer);\n          }\n\n          count--;\n        }\n      }\n    }\n    catch (InterruptedException e) {\n      LOG.error(e);\n    }\n  }","id":48520,"modified_method":"public static boolean processExecutors(PsiElement place, ClassDescriptor descriptor, PsiScopeProcessor processor) {\n    final PsiFile placeFile = place.getContainingFile().getOriginalFile();\n    final VirtualFile placeVFile = placeFile.getVirtualFile();\n    if (placeVFile == null) {\n      return true;\n    }\n\n    int count = 0;\n    final LinkedBlockingQueue<Pair<GroovyFile, GroovyDslExecutor>> queue = new LinkedBlockingQueue<Pair<GroovyFile, GroovyDslExecutor>>();\n\n    final Set<String> unusedPaths = new THashSet<String>(ourMapping.keySet());\n    for (final GroovyFile file : getDslFiles(place.getResolveScope())) {\n      final VirtualFile vfile = file.getVirtualFile();\n      if (vfile == null) {\n        continue;\n      }\n      unusedPaths.remove(vfile.getUrl());\n      if (vfile.equals(placeVFile)) {\n        continue;\n      }\n\n      final long stamp = file.getModificationStamp();\n      final GroovyDslExecutor cached = getCachedExecutor(vfile, stamp);\n      if (cached == null) {\n        final String text = file.getText();\n        count++;\n        scheduleParsing(queue, file, vfile, stamp, text);\n      } else {\n        if (!processExecutor(cached, descriptor, processor, file)) {\n          return false;\n        }\n      }\n    }\n\n    for (final String unusedPath : unusedPaths) {\n      final VirtualFile file = VirtualFileManager.getInstance().findFileByUrl(unusedPath);\n      if (file != null) {\n        ourMapping.remove(unusedPath);\n      }\n    }\n\n    try {\n      while (count > 0) {\n        ProgressManager.getInstance().checkCanceled();\n        final Pair<GroovyFile, GroovyDslExecutor> pair = queue.poll(20, TimeUnit.MILLISECONDS);\n        if (pair != null) {\n          final GroovyDslExecutor executor = pair.second;\n          final GroovyFile dslFile = pair.first;\n          dslFile.putUserData(CACHED_ENHANCEMENTS, null); //otherwise an old executor instance will be executed inside cachedValue\n          if (executor != null && !processExecutor(executor, descriptor, processor, dslFile)) {\n            return false;\n          }\n\n          count--;\n        }\n      }\n    }\n    catch (InterruptedException e) {\n      LOG.error(e);\n    }\n\n    return true;\n  }","commit_id":"909c05290de7be37621d84a5eadd808421200e3f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean processScriptEnhancements(final PsiElement place, final PsiScopeProcessor processor) {\n    final GroovyScriptClass scriptClass = getScriptClass();\n    if (scriptClass == null) {\n      return true;\n    }\n\n    final NonCodeMembersGenerator generator = new NonCodeMembersGenerator(getProject());\n    GroovyDslFileIndex.processExecutors(place, new GroovyScriptDescriptor(this, scriptClass), generator);\n    return generator.processGeneratedMembers(processor);\n  }","id":48521,"modified_method":"private boolean processScriptEnhancements(final PsiElement place, final PsiScopeProcessor processor) {\n    final GroovyScriptClass scriptClass = getScriptClass();\n    if (scriptClass == null) {\n      return true;\n    }\n\n    return GroovyDslFileIndex.processExecutors(place, new GroovyScriptDescriptor(this, scriptClass), processor);\n  }","commit_id":"909c05290de7be37621d84a5eadd808421200e3f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void keyPressed(final KeyEvent e) {\n    // handle search operations\n    if(search != null) {\n      if(ESCAPE.is(e)) {\n        search.deactivate(true);\n        return;\n      }\n      if(FIND.is(e)) {\n        search.activate(text.copy());\n        return;\n      }\n      if(FINDNEXT.is(e) || FINDNEXT2.is(e) || FINDPREV.is(e) || FINDPREV2.is(e)) {\n        final boolean vis = search.isVisible();\n        search.activate(text.copy());\n        jump(vis ? FINDNEXT.is(e) || FINDNEXT2.is(e) ?\n          SearchDir.FORWARD : SearchDir.BACKWARD : SearchDir.CURRENT, true);\n        return;\n      }\n    }\n\n    // ignore modifier keys\n    if(modifier(e)) return;\n\n    // operations that change the focus are put first..\n    if(PREVTAB.is(e)) {\n      transferFocusBackward();\n      return;\n    }\n    if(NEXTTAB.is(e)) {\n      transferFocus();\n      return;\n    }\n\n    // re-animate cursor\n    cursor(true);\n\n    // operations without cursor movement...\n    final int fh = rend.fontH();\n    if(SCROLLDOWN.is(e)) {\n      scroll.pos(scroll.pos() + fh);\n      return;\n    }\n    if(SCROLLUP.is(e)) {\n      scroll.pos(scroll.pos() - fh);\n      return;\n    }\n    if(COPY1.is(e) || COPY2.is(e)) {\n      copy();\n      return;\n    }\n\n    // set cursor position and reset last column\n    final int pc = text.getCaret();\n    text.pos(pc);\n    if(!PREVLINE.is(e) && !NEXTLINE.is(e)) lastCol = -1;\n\n    if(SELECTALL.is(e)) {\n      selectAll();\n      return;\n    }\n\n    // necessary on Macs as the shift button is pressed for REDO\n    final boolean marking = e.isShiftDown() &&\n      !DELNEXT.is(e) && !DELPREV.is(e) && !PASTE2.is(e) && !COMMENT.is(e) &&\n      !DELLINE.is(e) && !REDOSTEP.is(e) && !PREVPAGE_RO.is(e);\n    final boolean nomark = !text.selecting();\n    if(marking && nomark) text.startSelect();\n    boolean down = true;\n    boolean consumed = true;\n\n    // operations that consider the last text mark..\n    final byte[] txt = text.text();\n    if(NEXTWORD.is(e)) {\n      text.nextToken(marking);\n    } else if(PREVWORD.is(e)) {\n      text.prevToken(marking);\n      down = false;\n    } else if(TEXTSTART.is(e)) {\n      if(!marking) text.noSelect();\n      text.pos(0);\n      down = false;\n    } else if(TEXTEND.is(e)) {\n      if(!marking) text.noSelect();\n      text.pos(text.size());\n    } else if(LINESTART.is(e)) {\n      text.home(marking);\n      down = false;\n    } else if(LINEEND.is(e)) {\n      text.eol(marking);\n    } else if(PREVPAGE.is(e) || !hist.active() && PREVPAGE_RO.is(e)) {\n      up(getHeight() / fh, marking);\n      down = false;\n    } else if(NEXTPAGE.is(e) || !hist.active() && NEXTPAGE_RO.is(e)) {\n      down(getHeight() / fh, marking);\n    } else if(NEXT.is(e)) {\n      text.next(marking);\n    } else if(PREV.is(e)) {\n      text.prev(marking);\n      down = false;\n    } else if(PREVLINE.is(e)) {\n      up(1, marking);\n      down = false;\n    } else if(NEXTLINE.is(e)) {\n      down(1, marking);\n    } else {\n      consumed = false;\n    }\n\n    if(marking) {\n      // refresh scroll position\n      text.finishSelect();\n    } else if(hist.active()) {\n      // edit operations...\n      if(CUT1.is(e) || CUT2.is(e)) {\n        if(copy()) text.delete();\n      } else if(PASTE1.is(e) || PASTE2.is(e)) {\n        final String clip = clip();\n        if(clip != null) {\n          if(text.selected()) text.delete();\n          text.add(clip);\n        }\n      } else if(UNDOSTEP.is(e)) {\n        final byte[] t = hist.prev();\n        if(t != null) {\n          text.text(t);\n          text.pos(hist.cursor());\n        }\n      } else if(REDOSTEP.is(e)) {\n        final byte[] t = hist.next();\n        if(t != null) {\n          text.text(t);\n          text.pos(hist.cursor());\n        }\n      } else if(COMMENT.is(e)) {\n        text.comment(rend.getSyntax());\n      } else if(DELLINE.is(e)) {\n        text.deleteLine();\n      } else if(DELLINEEND.is(e) || DELNEXTWORD.is(e) || DELNEXT.is(e)) {\n        if(nomark) {\n          if(text.pos() == text.size()) return;\n          text.startSelect();\n          if(DELNEXTWORD.is(e)) {\n            text.nextToken(true);\n          } else if(DELLINEEND.is(e)) {\n            text.eol(true);\n          } else {\n            text.next(true);\n          }\n          text.finishSelect();\n        }\n        text.delete();\n      } else if(DELLINESTART.is(e) || DELPREVWORD.is(e) || DELPREV.is(e)) {\n        if(nomark) {\n          if(text.pos() == 0) return;\n          text.startSelect();\n          if(DELPREVWORD.is(e)) {\n            text.prevToken(true);\n          } else if(DELLINESTART.is(e)) {\n            text.bol(true);\n          } else {\n            text.prev();\n          }\n          text.finishSelect();\n        }\n        text.delete();\n        down = false;\n      } else {\n        consumed = false;\n      }\n    }\n    if(consumed) e.consume();\n\n    text.setCaret();\n    final byte[] tmp = text.text();\n    if(txt != tmp) {\n      hist.store(tmp, pc, text.getCaret());\n      calcCode.invokeLater(down);\n    } else {\n      showCursor(down ? 2 : 0);\n    }\n  }","id":48522,"modified_method":"@Override\n  public void keyPressed(final KeyEvent e) {\n    // handle search operations\n    if(search != null) {\n      if(ESCAPE.is(e)) {\n        search.deactivate(true);\n        return;\n      }\n      if(FIND.is(e)) {\n        search.activate(text.copy(), true);\n        return;\n      }\n      if(FINDNEXT.is(e) || FINDNEXT2.is(e) || FINDPREV.is(e) || FINDPREV2.is(e)) {\n        final boolean vis = search.isVisible();\n        search.activate(text.copy(), false);\n        jump(vis ? FINDNEXT.is(e) || FINDNEXT2.is(e) ?\n          SearchDir.FORWARD : SearchDir.BACKWARD : SearchDir.CURRENT, true);\n        return;\n      }\n    }\n\n    // ignore modifier keys\n    if(modifier(e)) return;\n\n    // operations that change the focus are put first..\n    if(PREVTAB.is(e)) {\n      transferFocusBackward();\n      return;\n    }\n    if(NEXTTAB.is(e)) {\n      transferFocus();\n      return;\n    }\n\n    // re-animate cursor\n    cursor(true);\n\n    // operations without cursor movement...\n    final int fh = rend.fontH();\n    if(SCROLLDOWN.is(e)) {\n      scroll.pos(scroll.pos() + fh);\n      return;\n    }\n    if(SCROLLUP.is(e)) {\n      scroll.pos(scroll.pos() - fh);\n      return;\n    }\n    if(COPY1.is(e) || COPY2.is(e)) {\n      copy();\n      return;\n    }\n\n    // set cursor position and reset last column\n    final int pc = text.getCaret();\n    text.pos(pc);\n    if(!PREVLINE.is(e) && !NEXTLINE.is(e)) lastCol = -1;\n\n    if(SELECTALL.is(e)) {\n      selectAll();\n      return;\n    }\n\n    // necessary on Macs as the shift button is pressed for REDO\n    final boolean marking = e.isShiftDown() &&\n      !DELNEXT.is(e) && !DELPREV.is(e) && !PASTE2.is(e) && !COMMENT.is(e) &&\n      !DELLINE.is(e) && !REDOSTEP.is(e) && !PREVPAGE_RO.is(e);\n    final boolean nomark = !text.selecting();\n    if(marking && nomark) text.startSelect();\n    boolean down = true;\n    boolean consumed = true;\n\n    // operations that consider the last text mark..\n    final byte[] txt = text.text();\n    if(NEXTWORD.is(e)) {\n      text.nextToken(marking);\n    } else if(PREVWORD.is(e)) {\n      text.prevToken(marking);\n      down = false;\n    } else if(TEXTSTART.is(e)) {\n      if(!marking) text.noSelect();\n      text.pos(0);\n      down = false;\n    } else if(TEXTEND.is(e)) {\n      if(!marking) text.noSelect();\n      text.pos(text.size());\n    } else if(LINESTART.is(e)) {\n      text.home(marking);\n      down = false;\n    } else if(LINEEND.is(e)) {\n      text.eol(marking);\n    } else if(PREVPAGE.is(e) || !hist.active() && PREVPAGE_RO.is(e)) {\n      up(getHeight() / fh, marking);\n      down = false;\n    } else if(NEXTPAGE.is(e) || !hist.active() && NEXTPAGE_RO.is(e)) {\n      down(getHeight() / fh, marking);\n    } else if(NEXT.is(e)) {\n      text.next(marking);\n    } else if(PREV.is(e)) {\n      text.prev(marking);\n      down = false;\n    } else if(PREVLINE.is(e)) {\n      up(1, marking);\n      down = false;\n    } else if(NEXTLINE.is(e)) {\n      down(1, marking);\n    } else {\n      consumed = false;\n    }\n\n    if(marking) {\n      // refresh scroll position\n      text.finishSelect();\n    } else if(hist.active()) {\n      // edit operations...\n      if(CUT1.is(e) || CUT2.is(e)) {\n        if(copy()) text.delete();\n      } else if(PASTE1.is(e) || PASTE2.is(e)) {\n        final String clip = clip();\n        if(clip != null) {\n          if(text.selected()) text.delete();\n          text.add(clip);\n        }\n      } else if(UNDOSTEP.is(e)) {\n        final byte[] t = hist.prev();\n        if(t != null) {\n          text.text(t);\n          text.pos(hist.cursor());\n        }\n      } else if(REDOSTEP.is(e)) {\n        final byte[] t = hist.next();\n        if(t != null) {\n          text.text(t);\n          text.pos(hist.cursor());\n        }\n      } else if(COMMENT.is(e)) {\n        text.comment(rend.getSyntax());\n      } else if(DELLINE.is(e)) {\n        text.deleteLine();\n      } else if(DELLINEEND.is(e) || DELNEXTWORD.is(e) || DELNEXT.is(e)) {\n        if(nomark) {\n          if(text.pos() == text.size()) return;\n          text.startSelect();\n          if(DELNEXTWORD.is(e)) {\n            text.nextToken(true);\n          } else if(DELLINEEND.is(e)) {\n            text.eol(true);\n          } else {\n            text.next(true);\n          }\n          text.finishSelect();\n        }\n        text.delete();\n      } else if(DELLINESTART.is(e) || DELPREVWORD.is(e) || DELPREV.is(e)) {\n        if(nomark) {\n          if(text.pos() == 0) return;\n          text.startSelect();\n          if(DELPREVWORD.is(e)) {\n            text.prevToken(true);\n          } else if(DELLINESTART.is(e)) {\n            text.bol(true);\n          } else {\n            text.prev();\n          }\n          text.finishSelect();\n        }\n        text.delete();\n        down = false;\n      } else {\n        consumed = false;\n      }\n    }\n    if(consumed) e.consume();\n\n    text.setCaret();\n    final byte[] tmp = text.text();\n    if(txt != tmp) {\n      hist.store(tmp, pc, text.getCaret());\n      calcCode.invokeLater(down);\n    } else {\n      showCursor(down ? 2 : 0);\n    }\n  }","commit_id":"7e8b66c5f6a195bd5da7b53986405cda912c8896","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Activates the search panel.\n   * @param string search string; triggers new search if it differs from old string\n   */\n  public void activate(final String string) {\n    boolean action = !isVisible();\n    if(action) {\n      setVisible(true);\n      if(button != null) button.setSelected(true);\n    }\n    if(string == null) {\n      search.requestFocusInWindow();\n    } else if(!new SearchContext(this, search.getText()).matches(string)) {\n      // set new, different search string\n      search.setText(string);\n      regex.setSelected(false);\n      action = true;\n    }\n    // search if string has changed, or if panel was hidden\n    if(action) search();\n  }","id":48523,"modified_method":"/**\n   * Activates the search panel.\n   * @param string search string; triggers a new search if it differs from old string.\n   * Will be ignored if set to {@code null}\n   * @param focus indicates if text field should be focused\n   */\n  public void activate(final String string, final boolean focus) {\n    boolean action = !isVisible();\n    if(action) {\n      setVisible(true);\n      if(button != null) button.setSelected(true);\n    }\n    if(focus) search.requestFocusInWindow();\n\n    // set new, different search string\n    if(string != null && !new SearchContext(this, search.getText()).matches(string)) {\n      search.setText(string);\n      regex.setSelected(false);\n      action = true;\n    }\n    // search if string has changed, or if panel was hidden\n    if(action) search();\n  }","commit_id":"7e8b66c5f6a195bd5da7b53986405cda912c8896","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Sets the search button.\n   * @param b button\n   */\n  public void setButton(final BaseXButton b) {\n    button = b;\n    button.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(final ActionEvent e) {\n        if(isVisible()) deactivate(true);\n        else activate(null);\n      }\n    });\n  }","id":48524,"modified_method":"/**\n   * Sets the search button.\n   * @param b button\n   */\n  public void setButton(final BaseXButton b) {\n    button = b;\n    button.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(final ActionEvent e) {\n        if(isVisible()) deactivate(true);\n        else activate(null, true);\n      }\n    });\n  }","commit_id":"7e8b66c5f6a195bd5da7b53986405cda912c8896","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Sets proportional panel size (sum must be 1.0).\n   * @param sz sizes\n   * @return old sizes\n   */\n  public double[] sizes(final double[] sz) {\n    final double[] old = propSize;\n    propSize = sz;\n    revalidate();\n    return old;\n  }","id":48525,"modified_method":"/**\n   * Sets initial panel sizes (sum must be 1.0).\n   * @param vis visible sizes\n   * @param hidden hidden sizes\n   */\n  public void init(final double[] vis, final double[] hidden) {\n    propSize = vis;\n    hiddenSize = hidden;\n  }","commit_id":"9c6fb5b41193a5a983c5bbd4e284029e182d92f4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Closes an editor.\n   * @param edit editor to be closed. {@code null} closes the currently opened editor.\n   * @return {@code true} if editor was closed\n   */\n  public boolean close(final EditorArea edit) {\n    final EditorArea ea = edit != null ? edit : getEditor();\n    if(!confirm(ea)) return false;\n\n    // remove reference to last executed file\n    if(execFile != null && ea.file.path().equals(execFile.path())) execFile = null;\n    tabs.remove(ea);\n    final int t = tabs.getTabCount();\n    final int i = tabs.getSelectedIndex();\n    if(t == 1) {\n      // no panels left: close search bar\n      search.deactivate(true);\n      // reopen single tab and focus project listener\n      addTab();\n      SwingUtilities.invokeLater(new Runnable() {\n        @Override\n        public void run() { project.focus(); }\n      });\n    } else if(i + 1 == t) {\n      // if necessary, activate last editor tab\n      tabs.setSelectedIndex(i - 1);\n      SwingUtilities.invokeLater(new Runnable() {\n        @Override\n        public void run() { getEditor().requestFocusInWindow(); }\n      });\n    }\n    return true;\n  }","id":48526,"modified_method":"/**\n   * Closes an editor.\n   * @param edit editor to be closed. {@code null} closes the currently opened editor.\n   * @return {@code true} if editor was closed\n   */\n  public boolean close(final EditorArea edit) {\n    final EditorArea ea = edit != null ? edit : getEditor();\n    if(!confirm(ea)) return false;\n\n    // remove reference to last executed file\n    if(execFile != null && ea.file.path().equals(execFile.path())) execFile = null;\n    tabs.remove(ea);\n    final int t = tabs.getTabCount();\n    final int i = tabs.getSelectedIndex();\n    if(t == 1) {\n      // no panels left: close search bar\n      search.deactivate(true);\n      // reopen single tab and focus project listener\n      addTab();\n      SwingUtilities.invokeLater(new Runnable() {\n        @Override\n        public void run() { project.focus(false); }\n      });\n    } else if(i + 1 == t) {\n      // if necessary, activate last editor tab\n      tabs.setSelectedIndex(i - 1);\n      SwingUtilities.invokeLater(new Runnable() {\n        @Override\n        public void run() { getEditor().requestFocusInWindow(); }\n      });\n    }\n    return true;\n  }","commit_id":"9c6fb5b41193a5a983c5bbd4e284029e182d92f4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Toggles the project view.\n   */\n  public void project() {\n    if(gui.gopts.get(GUIOptions.SHOWPROJECT)) {\n      split.sizes(sizes);\n      project.focus();\n    } else {\n      sizes = split.sizes(new double[] { 0, 1 });\n      getEditor().requestFocusInWindow();\n    }\n  }","id":48527,"modified_method":"/**\n   * Toggles the project view.\n   */\n  public void project() {\n    final boolean show = gui.gopts.get(GUIOptions.SHOWPROJECT);\n    split.visible(show);\n    if(show) {\n      project.focus(false);\n    } else {\n      getEditor().requestFocusInWindow();\n    }\n  }","commit_id":"9c6fb5b41193a5a983c5bbd4e284029e182d92f4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Default constructor.\n   * @param man view manager\n   */\n  public EditorView(final ViewNotifier man) {\n    super(EDITORVIEW, man);\n    layout(new BorderLayout());\n\n    label = new BaseXLabel(EDITOR, true, false);\n    label.setForeground(GRAY);\n\n    tabs = new BaseXTabs(gui);\n    tabs.setFocusable(Prop.MAC);\n    tabs.addDragDrop(false);\n    addCreateTab();\n\n    final SearchEditor center = new SearchEditor(gui, tabs, null);\n    search = center.bar();\n\n    final AbstractButton openB = BaseXButton.command(GUIMenuCmd.C_EDITOPEN, gui);\n    final AbstractButton saveB = BaseXButton.get(\"c_save\", false, H_SAVE, gui);\n    final AbstractButton find = search.button(H_REPLACE);\n    hist = BaseXButton.get(\"c_hist\", false, H_RECENTLY_OPEN, gui);\n\n    stop = BaseXButton.get(\"c_stop\", false, H_STOP_PROCESS, gui);\n    stop.addKeyListener(this);\n    stop.setEnabled(false);\n\n    go = BaseXButton.get(\"c_go\", false,\n        BaseXLayout.addShortcut(H_EXECUTE_QUERY, BaseXKeys.EXEC1.toString()), gui);\n    go.addKeyListener(this);\n\n    filter = BaseXButton.command(GUIMenuCmd.C_FILTER, gui);\n    filter.addKeyListener(this);\n    filter.setEnabled(false);\n\n    final BaseXBack buttons = new BaseXBack(Fill.NONE);\n    buttons.layout(new TableLayout(1, 8, 1, 0)).border(0, 0, 8, 0);\n    buttons.add(openB);\n    buttons.add(saveB);\n    buttons.add(hist);\n    buttons.add(find);\n    buttons.add(Box.createHorizontalStrut(6));\n    buttons.add(stop);\n    buttons.add(go);\n    buttons.add(filter);\n\n    final BaseXBack north = new BaseXBack(Fill.NONE).layout(new BorderLayout());\n    north.add(buttons, BorderLayout.WEST);\n    north.add(label, BorderLayout.EAST);\n\n    // status and query pane\n    search.editor(addTab(), false);\n\n    info = new BaseXLabel().setText(OK, Msg.SUCCESS);\n    pos = new BaseXLabel(\" \");\n    posCode.invokeLater();\n\n    final BaseXBack south = new BaseXBack(Fill.NONE).border(10, 0, 2, 0);\n    south.layout(new BorderLayout(4, 0));\n    south.add(info, BorderLayout.CENTER);\n    south.add(pos, BorderLayout.EAST);\n\n    final BaseXBack main = new BaseXBack().border(5).mode(Fill.NONE);\n    main.layout(new BorderLayout());\n    main.add(north, BorderLayout.NORTH);\n    main.add(center, BorderLayout.CENTER);\n    main.add(south, BorderLayout.SOUTH);\n\n    project = new ProjectView(this);\n    split = new BaseXSplit(true);\n    split.mode(Fill.NONE);\n    split.add(project);\n    split.add(main);\n    split.sizes(sizes);\n    project();\n    add(split, BorderLayout.CENTER);\n\n    refreshLayout();\n\n    // add listeners\n    saveB.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(final ActionEvent e) {\n        final JPopupMenu pop = new JPopupMenu();\n        final StringBuilder mnem = new StringBuilder();\n        final JMenuItem sa = GUIMenu.newItem(GUIMenuCmd.C_EDITSAVE, gui, mnem);\n        final JMenuItem sas = GUIMenu.newItem(GUIMenuCmd.C_EDITSAVEAS, gui, mnem);\n        sa.setEnabled(GUIMenuCmd.C_EDITSAVE.enabled(gui));\n        sas.setEnabled(GUIMenuCmd.C_EDITSAVEAS.enabled(gui));\n        pop.add(sa);\n        pop.add(sas);\n        pop.show(saveB, 0, saveB.getHeight());\n      }\n    });\n    hist.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(final ActionEvent e) {\n        final JPopupMenu pm = new JPopupMenu();\n        ActionListener al = new ActionListener() {\n          @Override\n          public void actionPerformed(final ActionEvent ac) {\n            // rewrite and open chosen file\n            open(new IOFile(ac.getActionCommand().replaceAll(\"(.*) \\\\[(.*)\\\\]\", \"$2/$1\")));\n          }\n        };\n\n        // create popup menu with of recently opened files\n        final StringList opened = new StringList();\n        for(final EditorArea ea : editors()) opened.add(ea.file.path());\n\n        final StringList hst = new StringList(HISTORY);\n        final StringList all = new StringList(gui.gopts.get(GUIOptions.EDITOR));\n        final int fl = Math.min(all.size(), e == null ? HISTORY : HISTCOMP);\n        for(int f = 0; f < fl; f++) hst.add(all.get(f));\n\n        Font f = null;\n        for(final String en : hst.sort(Prop.CASE)) {\n          // disable opened files\n          final JMenuItem it = new JMenuItem(en.replaceAll(\"(.*)[/\\\\\\\\](.*)\", \"$2 [$1]\"));\n          if(opened.contains(en)) {\n            if(f == null) f = it.getFont().deriveFont(Font.BOLD);\n            it.setFont(f);\n          }\n          pm.add(it).addActionListener(al);\n        }\n\n        al = new ActionListener() {\n          @Override\n          public void actionPerformed(final ActionEvent ac) {\n            hist.getActionListeners()[0].actionPerformed(null);\n          }\n        };\n        if(e != null && pm.getComponentCount() == HISTCOMP) {\n          pm.add(new JMenuItem(\"...\")).addActionListener(al);\n        }\n\n        pm.show(hist, 0, hist.getHeight());\n      }\n    });\n    refreshHistory(null);\n    info.addMouseListener(new MouseAdapter() {\n      @Override\n      public void mouseClicked(final MouseEvent e) {\n        jumpToError();\n      }\n    });\n    stop.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(final ActionEvent e) {\n        stop.setEnabled(false);\n        go.setEnabled(false);\n        gui.stop();\n      }\n    });\n    go.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(final ActionEvent e) {\n        run(getEditor(), Action.EXECUTE);\n      }\n    });\n    tabs.addChangeListener(new ChangeListener() {\n      @Override\n      public void stateChanged(final ChangeEvent e) {\n        final EditorArea ea = getEditor();\n        if(ea == null) return;\n        search.editor(ea, true);\n        gui.refreshControls();\n        posCode.invokeLater();\n        run(ea, Action.PARSE);\n      }\n    });\n\n    BaseXLayout.addDrop(this, new DropHandler() {\n      @Override\n      public void drop(final Object file) {\n        if(file instanceof File) open(new IOFile((File) file));\n      }\n    });\n\n    SwingUtilities.invokeLater(new Runnable() {\n      @Override\n      public void run() {\n        // remember opened files; don't complain about missing files\n        for(final String file : gui.gopts.get(GUIOptions.OPEN)) {\n          open(new IOFile(file), false, false);\n        }\n      }\n    });\n  }","id":48528,"modified_method":"/**\n   * Default constructor.\n   * @param man view manager\n   */\n  public EditorView(final ViewNotifier man) {\n    super(EDITORVIEW, man);\n    layout(new BorderLayout());\n\n    label = new BaseXLabel(EDITOR, true, false);\n    label.setForeground(GRAY);\n\n    tabs = new BaseXTabs(gui);\n    tabs.setFocusable(Prop.MAC);\n    tabs.addDragDrop(false);\n    addCreateTab();\n\n    final SearchEditor center = new SearchEditor(gui, tabs, null);\n    search = center.bar();\n\n    final AbstractButton openB = BaseXButton.command(GUIMenuCmd.C_EDITOPEN, gui);\n    final AbstractButton saveB = BaseXButton.get(\"c_save\", false, H_SAVE, gui);\n    final AbstractButton find = search.button(H_REPLACE);\n    hist = BaseXButton.get(\"c_hist\", false, H_RECENTLY_OPEN, gui);\n\n    stop = BaseXButton.get(\"c_stop\", false, H_STOP_PROCESS, gui);\n    stop.addKeyListener(this);\n    stop.setEnabled(false);\n\n    go = BaseXButton.get(\"c_go\", false,\n        BaseXLayout.addShortcut(H_EXECUTE_QUERY, BaseXKeys.EXEC1.toString()), gui);\n    go.addKeyListener(this);\n\n    filter = BaseXButton.command(GUIMenuCmd.C_FILTER, gui);\n    filter.addKeyListener(this);\n    filter.setEnabled(false);\n\n    final BaseXBack buttons = new BaseXBack(Fill.NONE);\n    buttons.layout(new TableLayout(1, 8, 1, 0)).border(0, 0, 8, 0);\n    buttons.add(openB);\n    buttons.add(saveB);\n    buttons.add(hist);\n    buttons.add(find);\n    buttons.add(Box.createHorizontalStrut(6));\n    buttons.add(stop);\n    buttons.add(go);\n    buttons.add(filter);\n\n    final BaseXBack north = new BaseXBack(Fill.NONE).layout(new BorderLayout());\n    north.add(buttons, BorderLayout.WEST);\n    north.add(label, BorderLayout.EAST);\n\n    // status and query pane\n    search.editor(addTab(), false);\n\n    info = new BaseXLabel().setText(OK, Msg.SUCCESS);\n    pos = new BaseXLabel(\" \");\n    posCode.invokeLater();\n\n    final BaseXBack south = new BaseXBack(Fill.NONE).border(10, 0, 2, 0);\n    south.layout(new BorderLayout(4, 0));\n    south.add(info, BorderLayout.CENTER);\n    south.add(pos, BorderLayout.EAST);\n\n    final BaseXBack main = new BaseXBack().border(5).mode(Fill.NONE);\n    main.layout(new BorderLayout());\n    main.add(north, BorderLayout.NORTH);\n    main.add(center, BorderLayout.CENTER);\n    main.add(south, BorderLayout.SOUTH);\n\n    project = new ProjectView(this);\n    split = new BaseXSplit(true);\n    split.mode(Fill.NONE);\n    split.add(project);\n    split.add(main);\n    split.init(new double[] { 0.3, 0.7 }, new double[] { 0, 1 });\n    project();\n    add(split, BorderLayout.CENTER);\n\n    refreshLayout();\n\n    // add listeners\n    saveB.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(final ActionEvent e) {\n        final JPopupMenu pop = new JPopupMenu();\n        final StringBuilder mnem = new StringBuilder();\n        final JMenuItem sa = GUIMenu.newItem(GUIMenuCmd.C_EDITSAVE, gui, mnem);\n        final JMenuItem sas = GUIMenu.newItem(GUIMenuCmd.C_EDITSAVEAS, gui, mnem);\n        sa.setEnabled(GUIMenuCmd.C_EDITSAVE.enabled(gui));\n        sas.setEnabled(GUIMenuCmd.C_EDITSAVEAS.enabled(gui));\n        pop.add(sa);\n        pop.add(sas);\n        pop.show(saveB, 0, saveB.getHeight());\n      }\n    });\n    hist.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(final ActionEvent e) {\n        final JPopupMenu pm = new JPopupMenu();\n        ActionListener al = new ActionListener() {\n          @Override\n          public void actionPerformed(final ActionEvent ac) {\n            // rewrite and open chosen file\n            open(new IOFile(ac.getActionCommand().replaceAll(\"(.*) \\\\[(.*)\\\\]\", \"$2/$1\")));\n          }\n        };\n\n        // create popup menu with of recently opened files\n        final StringList opened = new StringList();\n        for(final EditorArea ea : editors()) opened.add(ea.file.path());\n\n        final StringList hst = new StringList(HISTORY);\n        final StringList all = new StringList(gui.gopts.get(GUIOptions.EDITOR));\n        final int fl = Math.min(all.size(), e == null ? HISTORY : HISTCOMP);\n        for(int f = 0; f < fl; f++) hst.add(all.get(f));\n\n        Font f = null;\n        for(final String en : hst.sort(Prop.CASE)) {\n          // disable opened files\n          final JMenuItem it = new JMenuItem(en.replaceAll(\"(.*)[/\\\\\\\\](.*)\", \"$2 [$1]\"));\n          if(opened.contains(en)) {\n            if(f == null) f = it.getFont().deriveFont(Font.BOLD);\n            it.setFont(f);\n          }\n          pm.add(it).addActionListener(al);\n        }\n\n        al = new ActionListener() {\n          @Override\n          public void actionPerformed(final ActionEvent ac) {\n            hist.getActionListeners()[0].actionPerformed(null);\n          }\n        };\n        if(e != null && pm.getComponentCount() == HISTCOMP) {\n          pm.add(new JMenuItem(\"...\")).addActionListener(al);\n        }\n\n        pm.show(hist, 0, hist.getHeight());\n      }\n    });\n    refreshHistory(null);\n    info.addMouseListener(new MouseAdapter() {\n      @Override\n      public void mouseClicked(final MouseEvent e) {\n        jumpToError();\n      }\n    });\n    stop.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(final ActionEvent e) {\n        stop.setEnabled(false);\n        go.setEnabled(false);\n        gui.stop();\n      }\n    });\n    go.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(final ActionEvent e) {\n        run(getEditor(), Action.EXECUTE);\n      }\n    });\n    tabs.addChangeListener(new ChangeListener() {\n      @Override\n      public void stateChanged(final ChangeEvent e) {\n        final EditorArea ea = getEditor();\n        if(ea == null) return;\n        search.editor(ea, true);\n        gui.refreshControls();\n        posCode.invokeLater();\n        run(ea, Action.PARSE);\n      }\n    });\n\n    BaseXLayout.addDrop(this, new DropHandler() {\n      @Override\n      public void drop(final Object file) {\n        if(file instanceof File) open(new IOFile((File) file));\n      }\n    });\n\n    SwingUtilities.invokeLater(new Runnable() {\n      @Override\n      public void run() {\n        // remember opened files; don't complain about missing files\n        for(final String file : gui.gopts.get(GUIOptions.OPEN)) {\n          open(new IOFile(file), false, false);\n        }\n      }\n    });\n  }","commit_id":"9c6fb5b41193a5a983c5bbd4e284029e182d92f4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Makes the list (in)visible.\n   * @param vis visibility flag\n   */\n  public void showList(final boolean vis) {\n    if(vis) {\n      split.sizes(sizes);\n    } else {\n      sizes = split.sizes(new double[] { 0, 1 });\n    }\n  }","id":48529,"modified_method":"/**\n   * Makes the list (in)visible.\n   * @param vis visibility flag\n   */\n  public void showList(final boolean vis) {\n    split.visible(vis);\n  }","commit_id":"9c6fb5b41193a5a983c5bbd4e284029e182d92f4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Constructor.\n   * @param ev editor view\n   */\n  public ProjectView(final EditorView ev) {\n    super(ev.gui);\n    editor = ev;\n    setLayout(new BorderLayout());\n\n    tree = new ProjectTree(this);\n    root = new ProjectDir(new IOFile(root()), this);\n    tree.init(root);\n\n    filter = new ProjectFilter(this);\n    list = new ProjectList(this);\n    BaseXLayout.addInteraction(list, gui);\n\n    final BaseXBack back = new BaseXBack().layout(new BorderLayout(2, 2));\n    back.setBorder(new CompoundBorder(new MatteBorder(0, 0, 1, 0, GUIConstants.GRAY),\n        new EmptyBorder(3, 1, 3, 2)));\n\n    path = new BaseXTextField(gui);\n    path.setText(root.file.path());\n    path.setEnabled(false);\n\n    final BaseXButton browse = new BaseXButton(DOTS, gui);\n    browse.setMargin(new Insets(0, 2, 0, 2));\n    browse.setToolTipText(CHOOSE_DIR);\n    browse.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(final ActionEvent e) { change(); }\n    });\n\n    back.add(path, BorderLayout.CENTER);\n    back.add(browse, BorderLayout.EAST);\n    back.add(filter, BorderLayout.SOUTH);\n\n    // add scroll bars\n    final JScrollPane lscroll = new JScrollPane(list);\n    lscroll.setBorder(new EmptyBorder(0, 0, 0, 0));\n    final JScrollPane tscroll = new JScrollPane(tree);\n    tscroll.setBorder(new EmptyBorder(0, 0, 0, 0));\n\n    split = new BaseXSplit(false);\n    split.mode(Fill.NONE);\n    split.add(lscroll);\n    split.add(tscroll);\n    split.sizes(sizes);\n    showList(false);\n\n    add(back, BorderLayout.NORTH);\n    add(split, BorderLayout.CENTER);\n  }","id":48530,"modified_method":"/**\n   * Constructor.\n   * @param ev editor view\n   */\n  public ProjectView(final EditorView ev) {\n    super(ev.gui);\n    editor = ev;\n    setLayout(new BorderLayout());\n\n    tree = new ProjectTree(this);\n    root = new ProjectDir(new IOFile(root()), this);\n    tree.init(root);\n\n    filter = new ProjectFilter(this);\n    list = new ProjectList(this);\n    BaseXLayout.addInteraction(list, gui);\n\n    final BaseXBack back = new BaseXBack().layout(new BorderLayout(2, 2));\n    back.setBorder(new CompoundBorder(new MatteBorder(0, 0, 1, 0, GUIConstants.GRAY),\n        new EmptyBorder(3, 1, 3, 2)));\n\n    path = new BaseXTextField(gui);\n    path.setText(root.file.path());\n    path.setEnabled(false);\n\n    final BaseXButton browse = new BaseXButton(DOTS, gui);\n    browse.setMargin(new Insets(0, 2, 0, 2));\n    browse.setToolTipText(CHOOSE_DIR);\n    browse.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(final ActionEvent e) { change(); }\n    });\n\n    back.add(path, BorderLayout.CENTER);\n    back.add(browse, BorderLayout.EAST);\n    back.add(filter, BorderLayout.SOUTH);\n\n    // add scroll bars\n    final JScrollPane lscroll = new JScrollPane(list);\n    lscroll.setBorder(new EmptyBorder(0, 0, 0, 0));\n    final JScrollPane tscroll = new JScrollPane(tree);\n    tscroll.setBorder(new EmptyBorder(0, 0, 0, 0));\n\n    split = new BaseXSplit(false);\n    split.mode(Fill.NONE);\n    split.add(lscroll);\n    split.add(tscroll);\n    split.init(new double[] { 0.2, 0.8 }, new double[] { 0, 1 });\n    split.visible(false);\n    showList(false);\n\n    add(back, BorderLayout.NORTH);\n    add(split, BorderLayout.CENTER);\n  }","commit_id":"9c6fb5b41193a5a983c5bbd4e284029e182d92f4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Jumps to the specified string.\n   * @param string search string\n   */\n  public void jump(final String string) {\n    if(string.isEmpty()) {\n      search.deactivate(true);\n    } else {\n      search.reset();\n      search.activate(string, false);\n      jump(SearchDir.CURRENT, true);\n    }\n    requestFocusInWindow();\n  }","id":48531,"modified_method":"/**\n   * Jumps to the specified string.\n   * @param string search string (ignored if empty)\n   */\n  public void jump(final String string) {\n    if(string.isEmpty()) {\n      search.deactivate(true);\n    } else {\n      search.reset();\n      search.activate(string, false);\n      jump(SearchDir.CURRENT, true);\n    }\n  }","commit_id":"cb5fe6e45b49a11cac3e067e807460c10854848f","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Jumps to the current error.\n   * @param jump jump to error position (if necessary, open file)\n   */\n  public void markError(final boolean jump) {\n    InputInfo ii = inputInfo;\n    final String path;\n    final boolean error = ii == null;\n    if(error) {\n      final TreeMap<String, InputInfo> errors = project.errors();\n      if(errors.isEmpty()) return;\n      path = errors.get(errors.keySet().iterator().next()).path();\n    } else {\n      path = ii.path();\n    }\n    if(path == null) return;\n\n    final IOFile file = new IOFile(path);\n    EditorArea edit = find(file, false);\n    if(jump) {\n      // no input info: parse opened file\n      if(edit == null) {\n        edit = open(file, error, true);\n        if(error) ii = inputInfo;\n      }\n      if(edit != null) tabs.setSelectedComponent(edit);\n    }\n    if(edit == null || ii == null) return;\n\n    // mark and jump to error position\n    final int ep = pos(edit.last, ii.line(), ii.column());\n    edit.error(ep);\n    if(jump) {\n      edit.setCaret(ep);\n      posCode.invokeLater();\n    }\n  }","id":48532,"modified_method":"/**\n   * Jumps to the current error.\n   * @param jump jump to error position (if necessary, open file)\n   */\n  public void markError(final boolean jump) {\n    InputInfo ii = inputInfo;\n    final String path;\n    final boolean error = ii == null;\n    if(error) {\n      final TreeMap<String, InputInfo> errors = project.errors();\n      if(errors.isEmpty()) return;\n      path = errors.get(errors.keySet().iterator().next()).path();\n    } else {\n      path = ii.path();\n    }\n    if(path == null) return;\n\n    final IOFile file = new IOFile(path);\n    EditorArea ea = find(file);\n    final EditorArea edit;\n    if(jump) {\n      edit = open(file, error, true);\n      // only update error information if file was not already opened\n      if(ea == null && error) ii = inputInfo;\n    } else {\n      edit = ea;\n    }\n    // no editor available, no input info\n    if(edit == null || ii == null) return;\n\n    // mark error, jump to error position\n    final int ep = pos(edit.last, ii.line(), ii.column());\n    edit.error(ep);\n    if(jump) {\n      edit.setCaret(ep);\n      posCode.invokeLater();\n      // open file in project view if it's visible and if new file was opened\n      if(ea == null && project.getWidth() != 0) project.jumpTo(edit.file(), false);\n    }\n  }","commit_id":"cb5fe6e45b49a11cac3e067e807460c10854848f","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Deletes a file.\n   * @param file file to be deleted\n   * @return success flag\n   */\n  public boolean delete(final IOFile file) {\n    final EditorArea edit = find(file, true);\n    if(edit != null) close(edit);\n    return file.delete();\n  }","id":48533,"modified_method":"/**\n   * Deletes a file.\n   * @param file file to be deleted\n   * @return success flag\n   */\n  public boolean delete(final IOFile file) {\n    final EditorArea edit = find(file);\n    if(edit != null) close(edit);\n    return file.delete();\n  }","commit_id":"cb5fe6e45b49a11cac3e067e807460c10854848f","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Focuses the currently edited file in the project view.\n   */\n  public void jumpToFile() {\n    final EditorArea editor = getEditor();\n    if(editor.opened()) project.jumpTo(editor.file());\n  }","id":48534,"modified_method":"/**\n   * Focuses the currently edited file in the project view.\n   */\n  public void jumpToFile() {\n    final EditorArea editor = getEditor();\n    if(editor.opened()) project.jumpTo(editor.file(), true);\n  }","commit_id":"cb5fe6e45b49a11cac3e067e807460c10854848f","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Opens the specified query file.\n   * @param file query file\n   * @param parse parse contents\n   * @param error display error if file does not exist\n   * @return opened editor or {@code null} if file could not be opened\n   */\n  private EditorArea open(final IOFile file, final boolean parse, final boolean error) {\n    if(!visible()) GUIMenuCmd.C_SHOWEDITOR.execute(gui);\n\n    EditorArea edit = find(file, true);\n    if(edit != null) {\n      // display open file\n      tabs.setSelectedComponent(edit);\n    } else {\n      try {\n        // check and retrieve content\n        final byte[] text = read(file);\n        if(text == null) return null;\n\n        // get current editor\n        edit = getEditor();\n        // create new tab if text in current tab is stored on disk or has been modified\n        if(edit.opened() || edit.modified()) edit = addTab();\n        edit.initText(text);\n        edit.file(file);\n        if(parse) run(edit, Action.PARSE);\n      } catch(final IOException ex) {\n        refreshHistory(null);\n        Util.debug(ex);\n        if(error) BaseXDialog.error(gui, Util.info(FILE_NOT_OPENED_X, file));\n        return null;\n      }\n    }\n    return edit;\n  }","id":48535,"modified_method":"/**\n   * Opens and focuses the specified query file.\n   * @param file query file\n   * @param parse parse contents\n   * @param error display error if file does not exist\n   * @return opened editor or {@code null} if file could not be opened\n   */\n  private EditorArea open(final IOFile file, final boolean parse, final boolean error) {\n    if(!visible()) GUIMenuCmd.C_SHOWEDITOR.execute(gui);\n\n    EditorArea edit = find(file);\n    if(edit != null) {\n      // display open file\n      tabs.setSelectedComponent(edit);\n    } else {\n      try {\n        // check and retrieve content\n        final byte[] text = read(file);\n        if(text == null) return null;\n\n        // get current editor\n        edit = getEditor();\n        // create new tab if text in current tab is stored on disk or has been modified\n        if(edit.opened() || edit.modified()) edit = addTab();\n        edit.initText(text);\n        edit.file(file);\n        if(parse) run(edit, Action.PARSE);\n      } catch(final IOException ex) {\n        refreshHistory(null);\n        Util.debug(ex);\n        if(error) BaseXDialog.error(gui, Util.info(FILE_NOT_OPENED_X, file));\n        return null;\n      }\n    }\n    edit.requestFocusInWindow();\n    return edit;\n  }","commit_id":"cb5fe6e45b49a11cac3e067e807460c10854848f","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Opens the selected file.\n   * @param file file to be opened\n   * @param search search string\n   */\n  void open(final IOFile file, final String search) {\n    final EditorArea ea = gui.editor.open(file);\n    if(ea == null) return;\n    SwingUtilities.invokeLater(new Runnable() {\n      @Override\n      public void run() {\n        ea.jump(search);\n      }\n    });\n  }","id":48536,"modified_method":"/**\n   * Opens the selected file.\n   * @param file file to be opened\n   * @param search search string\n   */\n  void open(final IOFile file, final String search) {\n    final EditorArea ea = gui.editor.open(file);\n    if(ea != null) ea.jump(search);\n  }","commit_id":"cb5fe6e45b49a11cac3e067e807460c10854848f","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Jumps to the specified file.\n   * @param file file to be focused\n   */\n  public void jumpTo(final IOFile file) {\n    final IOFile fl = file.normalize();\n    if(fl.path().startsWith(root.file.path())) tree.expand(root, fl.path());\n    tree.requestFocusInWindow();\n  }","id":48537,"modified_method":"/**\n   * Jumps to the specified file.\n   * @param file file to be focused\n   * @param focus focus tree\n   */\n  public void jumpTo(final IOFile file, final boolean focus) {\n    final IOFile fl = file.normalize();\n    if(fl.path().startsWith(root.file.path())) tree.expand(root, fl.path());\n    if(focus) tree.requestFocusInWindow();\n  }","commit_id":"cb5fe6e45b49a11cac3e067e807460c10854848f","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Inject\n    public DiskJournalCache(final Configuration config, final MessageToJsonSerializer serializer, final MetricRegistry metricRegistry) throws IOException {\n        // Ensure the spool directory exists.\n        Files.createDirectories(new File(config.getMessageCacheSpoolDir()).toPath());\n\n        this.metricRegistry = metricRegistry;\n        this.db = DBMaker.newFileDB(getDbFile(config)).mmapFileEnable().checksumEnable().closeOnJvmShutdown().make();\n        this.store = Store.forDB(this.db);\n        this.queue = db.getQueue(\"messages\");\n        this.counter = db.getAtomicLong(\"counter\");\n        this.commitService = Executors.newSingleThreadScheduledExecutor(\n                new ThreadFactoryBuilder().setNameFormat(\"disk-journal-\" + getDbFileName() + \"-%d\").build()\n        );\n        this.serializer = serializer;\n        this.addTimer = metricRegistry.timer(MetricRegistry.name(getClass(), getDbFileName(), \"add\", \"executionTime\"));\n        this.popTimer = metricRegistry.timer(MetricRegistry.name(getClass(), getDbFileName(), \"pop\", \"executionTime\"));\n        this.commitTimer = metricRegistry.timer(MetricRegistry.name(getClass(), getDbFileName(), \"commit\", \"executionTime\"));\n\n        /* Commit and compact the database to flush existing data in the transaction log and to reduce the file\n         * size of the database.\n         */\n        commit();\n        LOG.info(\"Compacting off-heap message cache database files ({})\", getDbFileName());\n        compact();\n\n        /* I have seen the counter getting out of sync with the actual entries in the queue. */\n        if (queue.isEmpty() && counter.get() != 0) {\n            LOG.warn(\"Setting counter from {} to 0 because the queue is empty!\", counter.get());\n            counter.set(0);\n            commit();\n        }\n\n        this.commitService.scheduleWithFixedDelay(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    commit();\n                } catch (Exception e) {\n                    LOG.error(\"Commit thread error\", e);\n                }\n            }\n        }, 0, config.getMessageCacheCommitInterval(), TimeUnit.MILLISECONDS);\n    }","id":48538,"modified_method":"@Inject\n    public DiskJournalCache(final Configuration config, final MessageToJsonSerializer serializer, final MetricRegistry metricRegistry) throws IOException, DiskJournalCacheCorruptSpoolException {\n        // Ensure the spool directory exists.\n        Files.createDirectories(new File(config.getMessageCacheSpoolDir()).toPath());\n\n        this.metricRegistry = metricRegistry;\n        try {\n            this.db = DBMaker.newFileDB(getDbFile(config)).mmapFileEnable().checksumEnable().closeOnJvmShutdown().make();\n        } catch (ArrayIndexOutOfBoundsException e) {\n            LOG.error(\"Caught exception during disk journal initialization: \", e);\n            throw new DiskJournalCacheCorruptSpoolException();\n        }\n        this.store = Store.forDB(this.db);\n        this.queue = db.getQueue(\"messages\");\n        this.counter = db.getAtomicLong(\"counter\");\n        this.commitService = Executors.newSingleThreadScheduledExecutor(\n                new ThreadFactoryBuilder().setNameFormat(\"disk-journal-\" + getDbFileName() + \"-%d\").build()\n        );\n        this.serializer = serializer;\n        this.addTimer = metricRegistry.timer(MetricRegistry.name(getClass(), getDbFileName(), \"add\", \"executionTime\"));\n        this.popTimer = metricRegistry.timer(MetricRegistry.name(getClass(), getDbFileName(), \"pop\", \"executionTime\"));\n        this.commitTimer = metricRegistry.timer(MetricRegistry.name(getClass(), getDbFileName(), \"commit\", \"executionTime\"));\n\n        /* Commit and compact the database to flush existing data in the transaction log and to reduce the file\n         * size of the database.\n         */\n        commit();\n        LOG.info(\"Compacting off-heap message cache database files ({})\", getDbFileName());\n        compact();\n\n        /* I have seen the counter getting out of sync with the actual entries in the queue. */\n        if (queue.isEmpty() && counter.get() != 0) {\n            LOG.warn(\"Setting counter from {} to 0 because the queue is empty!\", counter.get());\n            counter.set(0);\n            commit();\n        }\n\n        this.commitService.scheduleWithFixedDelay(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    commit();\n                } catch (Exception e) {\n                    LOG.error(\"Commit thread error\", e);\n                }\n            }\n        }, 0, config.getMessageCacheCommitInterval(), TimeUnit.MILLISECONDS);\n    }","commit_id":"24048043198494ee8fb897e76e6a1efc1e6792ba","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"private void bindSingletons() {\n        bind(Configuration.class).toInstance(configuration);\n        bind(BaseConfiguration.class).toInstance(configuration);\n\n        bind(MongoConnection.class).toProvider(MongoConnectionProvider.class);\n\n        Multibinder<ServerStatus.Capability> capabilityBinder =\n                Multibinder.newSetBinder(binder(), ServerStatus.Capability.class);\n        capabilityBinder.addBinding().toInstance(ServerStatus.Capability.SERVER);\n        if (configuration.isMaster())\n            capabilityBinder.addBinding().toInstance(ServerStatus.Capability.MASTER);\n        bind(ServerStatus.class).in(Scopes.SINGLETON);\n\n        bind(OutputBufferWatermark.class).toInstance(new OutputBufferWatermark());\n        bind(Indexer.class).toProvider(IndexerProvider.class);\n        bind(SystemJobManager.class).toProvider(SystemJobManagerProvider.class);\n        bind(InputRegistry.class).toProvider(ServerInputRegistryProvider.class);\n        bind(RulesEngine.class).toProvider(RulesEngineProvider.class);\n        bind(LdapConnector.class).toProvider(LdapConnectorProvider.class);\n        bind(LdapUserAuthenticator.class).toProvider(LdapUserAuthenticatorProvider.class);\n        bind(DefaultSecurityManager.class).toProvider(DefaultSecurityManagerProvider.class);\n        bind(SystemJobFactory.class).toProvider(SystemJobFactoryProvider.class);\n        bind(AsyncHttpClient.class).toProvider(AsyncHttpClientProvider.class);\n        bind(GracefulShutdown.class).in(Scopes.SINGLETON);\n\n        if (configuration.isMessageCacheOffHeap()) {\n            bind(InputCache.class).to(DiskJournalCache.Input.class).in(Scopes.SINGLETON);\n            bind(OutputCache.class).to(DiskJournalCache.Output.class).in(Scopes.SINGLETON);\n        } else {\n            bind(InputCache.class).to(BasicCache.class).in(Scopes.SINGLETON);\n            bind(OutputCache.class).to(BasicCache.class).in(Scopes.SINGLETON);\n        }\n    }","id":48539,"modified_method":"private void bindSingletons() {\n        bind(Configuration.class).toInstance(configuration);\n        bind(BaseConfiguration.class).toInstance(configuration);\n\n        bind(MongoConnection.class).toProvider(MongoConnectionProvider.class);\n\n        Multibinder<ServerStatus.Capability> capabilityBinder =\n                Multibinder.newSetBinder(binder(), ServerStatus.Capability.class);\n        capabilityBinder.addBinding().toInstance(ServerStatus.Capability.SERVER);\n        if (configuration.isMaster())\n            capabilityBinder.addBinding().toInstance(ServerStatus.Capability.MASTER);\n        bind(ServerStatus.class).in(Scopes.SINGLETON);\n\n        bind(OutputBufferWatermark.class).toInstance(new OutputBufferWatermark());\n        bind(Indexer.class).toProvider(IndexerProvider.class);\n        bind(SystemJobManager.class).toProvider(SystemJobManagerProvider.class);\n        bind(InputRegistry.class).toProvider(ServerInputRegistryProvider.class);\n        bind(RulesEngine.class).toProvider(RulesEngineProvider.class);\n        bind(LdapConnector.class).toProvider(LdapConnectorProvider.class);\n        bind(LdapUserAuthenticator.class).toProvider(LdapUserAuthenticatorProvider.class);\n        bind(DefaultSecurityManager.class).toProvider(DefaultSecurityManagerProvider.class);\n        bind(SystemJobFactory.class).toProvider(SystemJobFactoryProvider.class);\n        bind(AsyncHttpClient.class).toProvider(AsyncHttpClientProvider.class);\n        bind(GracefulShutdown.class).in(Scopes.SINGLETON);\n\n        if (configuration.isMessageCacheOffHeap()) {\n            bind(InputCache.class).toProvider(InputCacheProvider.class).asEagerSingleton();\n            bind(OutputCache.class).toProvider(OutputCacheProvider.class).asEagerSingleton();\n        } else {\n            bind(InputCache.class).to(BasicCache.class).in(Scopes.SINGLETON);\n            bind(OutputCache.class).to(BasicCache.class).in(Scopes.SINGLETON);\n        }\n    }","commit_id":"24048043198494ee8fb897e76e6a1efc1e6792ba","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"@Override\n  protected void configure() {\n    if (!exploreEnabled) {\n      bind(HiveClient.class).to(NoOpHiveClient.class);\n    } else {\n      bind(HiveClient.class).to(HiveCommandExecutor.class);\n    }\n  }","id":48540,"modified_method":"@Override\n  protected void configure() {\n    bind(HiveClient.class).annotatedWith(Names.named(\"runtime-client\")).to(HiveCommandExecutor.class);\n    bind(HiveClient.class).toProvider(HiveClientProvider.class);\n  }","commit_id":"ef52b643d7abb72257e8aef8dd992ccaee992e9a","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public HiveMetastore get() {\n      boolean exploreEnabled = cConf.getBoolean(Constants.Hive.EXPLORE_ENABLED);\n      return exploreEnabled ?\n        injector.getInstance(Key.get(HiveMetastore.class, Names.named(\"hive\"))) :\n        injector.getInstance(MockHiveMetastore.class);\n    }","id":48541,"modified_method":"@Override\n    public HiveMetastore get() {\n      boolean exploreEnabled = cConf.getBoolean(Constants.Hive.EXPLORE_ENABLED);\n      if (exploreEnabled) {\n        // This will throw exceptions if the checks don't pass\n        HiveServer.checkHiveVersion();\n      }\n      return exploreEnabled ?\n        injector.getInstance(Key.get(HiveMetastore.class, Names.named(\"hive\"))) :\n        injector.getInstance(MockHiveMetastore.class);\n    }","commit_id":"ef52b643d7abb72257e8aef8dd992ccaee992e9a","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    protected void configure() {\n      System.setProperty(HiveConf.ConfVars.PREEXECHOOKS.toString(), TransactionPreHook.class.getCanonicalName());\n      LOG.debug(\"Setting {} to {}\", HiveConf.ConfVars.PREEXECHOOKS.toString(),\n                System.getProperty(HiveConf.ConfVars.PREEXECHOOKS.toString()));\n\n      System.setProperty(HiveConf.ConfVars.POSTEXECHOOKS.toString(), TransactionPostHook.class.getCanonicalName());\n      LOG.debug(\"Setting {} to {}\", HiveConf.ConfVars.POSTEXECHOOKS.toString(),\n                System.getProperty(HiveConf.ConfVars.POSTEXECHOOKS.toString()));\n\n\n      bind(HiveServer.class).annotatedWith(Names.named(\"hive\")).to(RuntimeHiveServer.class).in(Scopes.SINGLETON);\n      bind(HiveServer.class).toProvider(HiveServerProvider.class).in(Scopes.SINGLETON);\n      expose(HiveServer.class);\n    }","id":48542,"modified_method":"@Override\n    protected void configure() {\n      System.setProperty(HiveConf.ConfVars.PREEXECHOOKS.toString(), TransactionPreHook.class.getCanonicalName());\n      LOG.debug(\"Setting {} to {}\", HiveConf.ConfVars.PREEXECHOOKS.toString(),\n                System.getProperty(HiveConf.ConfVars.PREEXECHOOKS.toString()));\n\n      System.setProperty(HiveConf.ConfVars.POSTEXECHOOKS.toString(), TransactionPostHook.class.getCanonicalName());\n      LOG.debug(\"Setting {} to {}\", HiveConf.ConfVars.POSTEXECHOOKS.toString(),\n                System.getProperty(HiveConf.ConfVars.POSTEXECHOOKS.toString()));\n\n\n      bind(HiveServer.class).annotatedWith(Names.named(\"hive\")).to(RuntimeHiveServer.class).in(Scopes.SINGLETON);\n      bind(HiveServer.class).toProvider(HiveServerProvider.class).in(Scopes.SINGLETON);\n    }","commit_id":"ef52b643d7abb72257e8aef8dd992ccaee992e9a","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Sets up modules for running hive in singlenode or in-memory mode.\n   */\n  private Module getLocalModule() {\n    return Modules.combine(new HiveServerModule(),\n        new PrivateModule() {\n          @Override\n          protected void configure() {\n            bind(HiveMetastore.class).annotatedWith(Names.named(\"hive\")).\n              to(InMemoryHiveMetastore.class).in(Scopes.SINGLETON);\n            bind(HiveMetastore.class).toProvider(HiveMetastoreProvider.class).in(Scopes.SINGLETON);\n            expose(HiveMetastore.class);\n          }\n\n          @Provides\n          @Named(Constants.Hive.METASTORE_PORT)\n          private int providesHiveMetastorePort(CConfiguration cConf) {\n            // Would be better to do it in a local specific HiveServerProvider rather than using this little hack.\n            File warehouseDir = new File(new File(cConf.get(Constants.CFG_LOCAL_DATA_DIR), \"hive\"), \"warehouse\");\n            File databaseDir = new File(new File(cConf.get(Constants.CFG_LOCAL_DATA_DIR), \"hive\"), \"database\");\n\n            LOG.debug(\"Setting {} to {}\",\n                      HiveConf.ConfVars.METASTOREWAREHOUSE.toString(), warehouseDir.getAbsoluteFile());\n            System.setProperty(HiveConf.ConfVars.METASTOREWAREHOUSE.toString(), warehouseDir.getAbsolutePath());\n\n            String connectUrl = String.format(\"jdbc:derby:;databaseName=%s;create=true\", databaseDir.getAbsoluteFile());\n            LOG.debug(\"Setting {} to {}\", HiveConf.ConfVars.METASTORECONNECTURLKEY.toString(), connectUrl);\n            System.setProperty(HiveConf.ConfVars.METASTORECONNECTURLKEY.toString(), connectUrl);\n\n            // Some more local mode settings\n            System.setProperty(HiveConf.ConfVars.LOCALMODEAUTO.toString(), \"true\");\n            System.setProperty(HiveConf.ConfVars.SUBMITVIACHILD.toString(), \"false\");\n            System.setProperty(MRConfig.FRAMEWORK_NAME, \"local\");\n\n            // Disable security\n            // TODO: verify if auth=NOSASL is really needed\n            System.setProperty(HiveConf.ConfVars.HIVE_SERVER2_AUTHENTICATION.toString(), \"NOSASL\");\n            System.setProperty(HiveConf.ConfVars.HIVE_SERVER2_ENABLE_DOAS.toString(), \"false\");\n            System.setProperty(HiveConf.ConfVars.METASTORE_USE_THRIFT_SASL.toString(), \"false\");\n\n            // Select a random free port for hive metastore to run\n            final int hiveMetaStorePort = Networks.getRandomPort();\n            if (hiveMetaStorePort < 0) {\n              throw new IllegalStateException(\"Unable to find free port to run Hive MetaStore.\");\n            }\n\n            System.setProperty(HiveConf.ConfVars.METASTOREURIS.toString(), \"thrift://localhost:\" + hiveMetaStorePort);\n            return hiveMetaStorePort;\n          }\n        }\n    );\n  }","id":48543,"modified_method":"/**\n   * Sets up modules for running hive in singlenode or in-memory mode.\n   */\n  private Module getLocalModule() {\n    return Modules.combine(new HiveServerModule(),\n        new AbstractModule() {\n          @Override\n          protected void configure() {\n            bind(HiveMetastore.class).annotatedWith(Names.named(\"hive\")).\n              to(InMemoryHiveMetastore.class).in(Scopes.SINGLETON);\n            bind(HiveMetastore.class).toProvider(HiveMetastoreProvider.class).in(Scopes.SINGLETON);\n          }\n\n          @Provides\n          @Named(Constants.Hive.METASTORE_PORT)\n          private int providesHiveMetastorePort(CConfiguration cConf) {\n            // Would be better to do it in a local specific HiveServerProvider rather than using this little hack.\n            File warehouseDir = new File(cConf.get(Constants.Hive.CFG_LOCAL_DATA_DIR), \"warehouse\");\n            File databaseDir = new File(cConf.get(Constants.Hive.CFG_LOCAL_DATA_DIR), \"database\");\n\n            LOG.debug(\"Setting {} to {}\",\n                      HiveConf.ConfVars.METASTOREWAREHOUSE.toString(), warehouseDir.getAbsoluteFile());\n            System.setProperty(HiveConf.ConfVars.METASTOREWAREHOUSE.toString(), warehouseDir.getAbsolutePath());\n\n            String connectUrl = String.format(\"jdbc:derby:;databaseName=%s;create=true\", databaseDir.getAbsoluteFile());\n            LOG.debug(\"Setting {} to {}\", HiveConf.ConfVars.METASTORECONNECTURLKEY.toString(), connectUrl);\n            System.setProperty(HiveConf.ConfVars.METASTORECONNECTURLKEY.toString(), connectUrl);\n\n            // Some more local mode settings\n            System.setProperty(HiveConf.ConfVars.LOCALMODEAUTO.toString(), \"true\");\n            System.setProperty(HiveConf.ConfVars.SUBMITVIACHILD.toString(), \"false\");\n            System.setProperty(MRConfig.FRAMEWORK_NAME, \"local\");\n\n            // Disable security\n            // TODO: verify if auth=NOSASL is really needed\n            System.setProperty(HiveConf.ConfVars.HIVE_SERVER2_AUTHENTICATION.toString(), \"NOSASL\");\n            System.setProperty(HiveConf.ConfVars.HIVE_SERVER2_ENABLE_DOAS.toString(), \"false\");\n            System.setProperty(HiveConf.ConfVars.METASTORE_USE_THRIFT_SASL.toString(), \"false\");\n\n            // Select a random free port for hive metastore to run\n            final int hiveMetaStorePort = Networks.getRandomPort();\n            if (hiveMetaStorePort < 0) {\n              throw new IllegalStateException(\"Unable to find free port to run Hive MetaStore.\");\n            }\n\n            System.setProperty(HiveConf.ConfVars.METASTOREURIS.toString(), \"thrift://localhost:\" + hiveMetaStorePort);\n            return hiveMetaStorePort;\n          }\n        }\n    );\n  }","commit_id":"ef52b643d7abb72257e8aef8dd992ccaee992e9a","url":"https://github.com/caskdata/cdap"},{"original_method":"private static List<Module> createInMemoryModules(CConfiguration configuration, Configuration hConf) {\n    configuration.set(Constants.CFG_DATA_INMEMORY_PERSISTENCE, Constants.InMemoryPersistenceType.MEMORY.name());\n\n    return ImmutableList.of(\n      new ConfigModule(configuration, hConf),\n      new IOModule(),\n      new DiscoveryRuntimeModule().getInMemoryModules(),\n      new LocationRuntimeModule().getInMemoryModules(),\n      new DataSetServiceModules().getInMemoryModule(),\n      new DataFabricModules().getInMemoryModules(),\n      new MetricsClientRuntimeModule().getInMemoryModules(),\n      new AuthModule(),\n      new HiveRuntimeModule().getInMemoryModules(),\n      new HiveClientModule(configuration)\n    );\n  }","id":48544,"modified_method":"private static List<Module> createInMemoryModules(CConfiguration configuration, Configuration hConf) {\n    configuration.set(Constants.CFG_DATA_INMEMORY_PERSISTENCE, Constants.InMemoryPersistenceType.MEMORY.name());\n\n    return ImmutableList.of(\n      new ConfigModule(configuration, hConf),\n      new IOModule(),\n      new DiscoveryRuntimeModule().getInMemoryModules(),\n      new LocationRuntimeModule().getInMemoryModules(),\n      new DataSetServiceModules().getInMemoryModule(),\n      new DataFabricModules().getInMemoryModules(),\n      new MetricsClientRuntimeModule().getInMemoryModules(),\n      new AuthModule(),\n      new HiveRuntimeModule().getInMemoryModules(),\n      new HiveClientModule()\n    );\n  }","commit_id":"ef52b643d7abb72257e8aef8dd992ccaee992e9a","url":"https://github.com/caskdata/cdap"},{"original_method":"@BeforeClass\n  public static void setup() throws Exception {\n    CConfiguration cConf = CConfiguration.create();\n    cConf.setBoolean(Constants.Hive.EXPLORE_ENABLED, true);\n    Injector injector = Guice.createInjector(createInMemoryModules(cConf, new Configuration()));\n    transactionManager = injector.getInstance(InMemoryTransactionManager.class);\n    inMemoryHiveMetastore = injector.getInstance(HiveMetastore.class);\n    hiveServer = injector.getInstance(HiveServer.class);\n    hiveClient = injector.getInstance(HiveClient.class);\n\n    transactionManager.startAndWait();\n    inMemoryHiveMetastore.startAndWait();\n    hiveServer.startAndWait();\n\n    datasetService = injector.getInstance(DatasetService.class);\n    datasetService.startAndWait();\n\n    datasetFramework = injector.getInstance(DatasetFramework.class);\n    String moduleName = \"inMemory\";\n    datasetFramework.register(moduleName, InMemoryTableModule.class);\n    datasetFramework.register(\"keyValue\", KeyValueTableDefinition.KeyValueTableModule.class);\n\n    // Performing admin operations to create dataset instance\n    datasetFramework.addInstance(\"keyValueTable\", \"my_table\", DatasetInstanceProperties.EMPTY);\n    DatasetAdmin admin = datasetFramework.getAdmin(\"my_table\", null);\n    Assert.assertNotNull(admin);\n    admin.create();\n\n    Transaction tx1 = transactionManager.startShort(100);\n\n    // Accessing dataset instance to perform data operations\n    KeyValueTableDefinition.KeyValueTable table = datasetFramework.getDataset(\"my_table\", null);\n    Assert.assertNotNull(table);\n    table.startTx(tx1);\n    table.put(\"1\", \"first\");\n    table.put(\"2\", \"two\");\n    Assert.assertEquals(\"first\", table.get(\"1\"));\n\n    Assert.assertTrue(table.commitTx());\n\n    transactionManager.canCommit(tx1, table.getTxChanges());\n    transactionManager.commit(tx1);\n\n    table.postTxCommit();\n\n    Transaction tx2 = transactionManager.startShort(100);\n    table.startTx(tx2);\n\n    Assert.assertEquals(\"first\", table.get(\"1\"));\n  }","id":48545,"modified_method":"@BeforeClass\n  public static void setup() throws Exception {\n    CConfiguration cConf = CConfiguration.create();\n    cConf.set(Constants.Hive.CFG_LOCAL_DATA_DIR, System.getProperty(\"java.io.tmpdir\"));\n    cConf.setBoolean(Constants.Hive.EXPLORE_ENABLED, true);\n    Injector injector = Guice.createInjector(createInMemoryModules(cConf, new Configuration()));\n    transactionManager = injector.getInstance(InMemoryTransactionManager.class);\n    inMemoryHiveMetastore = injector.getInstance(HiveMetastore.class);\n    hiveServer = injector.getInstance(HiveServer.class);\n    hiveClient = injector.getInstance(HiveClient.class);\n\n    transactionManager.startAndWait();\n    inMemoryHiveMetastore.startAndWait();\n    hiveServer.startAndWait();\n\n    datasetService = injector.getInstance(DatasetService.class);\n    datasetService.startAndWait();\n\n    datasetFramework = injector.getInstance(DatasetFramework.class);\n    String moduleName = \"inMemory\";\n    datasetFramework.register(moduleName, InMemoryTableModule.class);\n    datasetFramework.register(\"keyValue\", KeyValueTableDefinition.KeyValueTableModule.class);\n\n    // Performing admin operations to create dataset instance\n    datasetFramework.addInstance(\"keyValueTable\", \"my_table\", DatasetInstanceProperties.EMPTY);\n    DatasetAdmin admin = datasetFramework.getAdmin(\"my_table\", null);\n    Assert.assertNotNull(admin);\n    admin.create();\n\n    Transaction tx1 = transactionManager.startShort(100);\n\n    // Accessing dataset instance to perform data operations\n    KeyValueTableDefinition.KeyValueTable table = datasetFramework.getDataset(\"my_table\", null);\n    Assert.assertNotNull(table);\n    table.startTx(tx1);\n    table.put(\"1\", \"first\");\n    table.put(\"2\", \"two\");\n    Assert.assertEquals(\"first\", table.get(\"1\"));\n\n    Assert.assertTrue(table.commitTx());\n\n    transactionManager.canCommit(tx1, table.getTxChanges());\n    transactionManager.commit(tx1);\n\n    table.postTxCommit();\n\n    Transaction tx2 = transactionManager.startShort(100);\n    table.startTx(tx2);\n\n    Assert.assertEquals(\"first\", table.get(\"1\"));\n  }","commit_id":"ef52b643d7abb72257e8aef8dd992ccaee992e9a","url":"https://github.com/caskdata/cdap"},{"original_method":"public LocalHiveServerTest() {\n    CConfiguration conf = CConfiguration.create();\n    conf.setBoolean(Constants.Hive.EXPLORE_ENABLED, true);\n    conf.set(Constants.Hive.SERVER_ADDRESS, \"localhost\");\n    Configuration hConf = new Configuration();\n\n    Injector injector = Guice.createInjector(\n        new DataFabricInMemoryModule(),\n        new LocationRuntimeModule().getInMemoryModules(),\n        new ConfigModule(conf, hConf),\n        new HiveRuntimeModule().getInMemoryModules(),\n        new DiscoveryRuntimeModule().getInMemoryModules(),\n        new MetricsClientRuntimeModule().getInMemoryModules(),\n        new DataSetServiceModules().getInMemoryModule(),\n        new AuthModule(),\n        new HiveClientModule(conf));\n    hiveServer = injector.getInstance(HiveServer.class);\n    hiveMetastore = injector.getInstance(HiveMetastore.class);\n    hiveClient = injector.getInstance(HiveClient.class);\n    transactionManager = injector.getInstance(InMemoryTransactionManager.class);\n  }","id":48546,"modified_method":"public LocalHiveServerTest() {\n    CConfiguration conf = CConfiguration.create();\n    conf.setBoolean(Constants.Hive.EXPLORE_ENABLED, true);\n    conf.set(Constants.Hive.SERVER_ADDRESS, \"localhost\");\n    conf.set(Constants.Hive.CFG_LOCAL_DATA_DIR, System.getProperty(\"java.io.tmpdir\"));\n    Configuration hConf = new Configuration();\n\n    Injector injector = Guice.createInjector(\n        new DataFabricInMemoryModule(),\n        new LocationRuntimeModule().getInMemoryModules(),\n        new ConfigModule(conf, hConf),\n        new HiveRuntimeModule().getInMemoryModules(),\n        new DiscoveryRuntimeModule().getInMemoryModules(),\n        new MetricsClientRuntimeModule().getInMemoryModules(),\n        new DataSetServiceModules().getInMemoryModule(),\n        new AuthModule(),\n        new HiveClientModule());\n    hiveServer = injector.getInstance(HiveServer.class);\n    hiveMetastore = injector.getInstance(HiveMetastore.class);\n    hiveClient = injector.getInstance(HiveClient.class);\n    transactionManager = injector.getInstance(InMemoryTransactionManager.class);\n  }","commit_id":"ef52b643d7abb72257e8aef8dd992ccaee992e9a","url":"https://github.com/caskdata/cdap"},{"original_method":"@BeforeClass\n  public static void init() throws Exception {\n    testAppDir = tmpFolder.newFolder();\n\n    File appDir = new File(testAppDir, \"app\");\n    File datasetDir = new File(testAppDir, \"dataset\");\n    File tmpDir = new File(testAppDir, \"tmp\");\n\n    appDir.mkdirs();\n    datasetDir.mkdirs();\n    tmpDir.mkdirs();\n\n    CConfiguration configuration = CConfiguration.create();\n\n    configuration.set(Constants.AppFabric.OUTPUT_DIR, appDir.getAbsolutePath());\n    configuration.set(Constants.AppFabric.TEMP_DIR, tmpDir.getAbsolutePath());\n    configuration.set(Constants.Dataset.Manager.OUTPUT_DIR, datasetDir.getAbsolutePath());\n    configuration.set(Constants.Dataset.Manager.ADDRESS, \"localhost\");\n    configuration.setInt(Constants.Dataset.Manager.PORT, Networks.getRandomPort());\n    configuration.set(MetricsConstants.ConfigKeys.SERVER_PORT, Integer.toString(Networks.getRandomPort()));\n    configuration.set(Constants.CFG_LOCAL_DATA_DIR, tmpFolder.newFolder(\"data\").getAbsolutePath());\n    configuration.setBoolean(Constants.Dangerous.UNRECOVERABLE_RESET, true);\n    configuration.setBoolean(Constants.Hive.EXPLORE_ENABLED, true);\n\n    // Windows specific requirements\n    if (System.getProperty(\"os.name\").startsWith(\"Windows\")) {\n\n      File binDir = new File(tmpDir, \"bin\");\n      binDir.mkdir();\n\n      copyTempFile(\"hadoop.dll\", tmpDir);\n      copyTempFile(\"winutils.exe\", binDir);\n      System.setProperty(\"hadoop.home.dir\", tmpDir.getAbsolutePath());\n      System.load(new File(tmpDir, \"hadoop.dll\").getAbsolutePath());\n    }\n\n    injector = Guice.createInjector(createDataFabricModule(configuration),\n                                    new DataSetServiceModules().getInMemoryModule(),\n                                    new ConfigModule(configuration),\n                                    new IOModule(),\n                                    new AuthModule(),\n                                    new LocationRuntimeModule().getInMemoryModules(),\n                                    new DiscoveryRuntimeModule().getInMemoryModules(),\n                                    new AppFabricServiceRuntimeModule().getInMemoryModules(),\n                                    new ProgramRunnerRuntimeModule().getInMemoryModules(),\n                                    new StreamServiceModule() {\n                                      @Override\n                                      protected void configure() {\n                                        super.configure();\n                                        bind(StreamHandler.class).in(Scopes.SINGLETON);\n                                        expose(StreamHandler.class);\n                                      }\n                                    },\n                                    new HiveRuntimeModule().getInMemoryModules(),\n                                    new TestMetricsClientModule(),\n                                    new MetricsHandlerModule(),\n                                    new LoggingModules().getInMemoryModules(),\n                                    new AbstractModule() {\n                                      @Override\n                                      protected void configure() {\n                                        install(new FactoryModuleBuilder()\n                                                  .implement(ApplicationManager.class, DefaultApplicationManager.class)\n                                                  .build(ApplicationManagerFactory.class));\n                                        install(new FactoryModuleBuilder()\n                                                  .implement(StreamWriter.class, DefaultStreamWriter.class)\n                                                  .build(StreamWriterFactory.class));\n                                        install(new FactoryModuleBuilder()\n                                                  .implement(ProcedureClient.class, DefaultProcedureClient.class)\n                                                  .build(ProcedureClientFactory.class));\n                                      }\n                                    }\n                                    );\n    injector.getInstance(InMemoryTransactionManager.class).startAndWait();\n    locationFactory = injector.getInstance(LocationFactory.class);\n    metricsQueryService = injector.getInstance(MetricsQueryService.class);\n    metricsQueryService.startAndWait();\n    metricsCollectionService = injector.getInstance(MetricsCollectionService.class);\n    metricsCollectionService.startAndWait();\n    logAppenderInitializer = injector.getInstance(LogAppenderInitializer.class);\n    logAppenderInitializer.initialize();\n    httpHandler = injector.getInstance(AppFabricHttpHandler.class);\n    datasetService = injector.getInstance(DatasetService.class);\n    datasetService.startAndWait();\n    datasetFramework = injector.getInstance(DatasetFramework.class);\n    schedulerService = injector.getInstance(SchedulerService.class);\n    schedulerService.startAndWait();\n    discoveryClient = injector.getInstance(DiscoveryServiceClient.class);\n    hiveMetastore = injector.getInstance(HiveMetastore.class);\n    hiveServer = injector.getInstance(HiveServer.class);\n\n    // it is important to respect that order: metastore, then HiveServer\n    hiveMetastore.startAndWait();\n    hiveServer.startAndWait();\n  }","id":48547,"modified_method":"@BeforeClass\n  public static void init() throws Exception {\n    testAppDir = tmpFolder.newFolder();\n\n    File appDir = new File(testAppDir, \"app\");\n    File datasetDir = new File(testAppDir, \"dataset\");\n    File tmpDir = new File(testAppDir, \"tmp\");\n\n    appDir.mkdirs();\n    datasetDir.mkdirs();\n    tmpDir.mkdirs();\n\n    CConfiguration configuration = CConfiguration.create();\n\n    configuration.set(Constants.AppFabric.OUTPUT_DIR, appDir.getAbsolutePath());\n    configuration.set(Constants.AppFabric.TEMP_DIR, tmpDir.getAbsolutePath());\n    configuration.set(Constants.Dataset.Manager.OUTPUT_DIR, datasetDir.getAbsolutePath());\n    configuration.set(Constants.Dataset.Manager.ADDRESS, \"localhost\");\n    configuration.setInt(Constants.Dataset.Manager.PORT, Networks.getRandomPort());\n    configuration.set(MetricsConstants.ConfigKeys.SERVER_PORT, Integer.toString(Networks.getRandomPort()));\n    configuration.set(Constants.CFG_LOCAL_DATA_DIR, tmpFolder.newFolder(\"data\").getAbsolutePath());\n    configuration.setBoolean(Constants.Dangerous.UNRECOVERABLE_RESET, true);\n    configuration.set(Constants.Hive.CFG_LOCAL_DATA_DIR, System.getProperty(\"java.io.tmpdir\"));\n    configuration.setBoolean(Constants.Hive.EXPLORE_ENABLED, true);\n\n    // Windows specific requirements\n    if (System.getProperty(\"os.name\").startsWith(\"Windows\")) {\n\n      File binDir = new File(tmpDir, \"bin\");\n      binDir.mkdir();\n\n      copyTempFile(\"hadoop.dll\", tmpDir);\n      copyTempFile(\"winutils.exe\", binDir);\n      System.setProperty(\"hadoop.home.dir\", tmpDir.getAbsolutePath());\n      System.load(new File(tmpDir, \"hadoop.dll\").getAbsolutePath());\n    }\n\n    injector = Guice.createInjector(createDataFabricModule(configuration),\n                                    new DataSetServiceModules().getInMemoryModule(),\n                                    new ConfigModule(configuration),\n                                    new IOModule(),\n                                    new AuthModule(),\n                                    new LocationRuntimeModule().getInMemoryModules(),\n                                    new DiscoveryRuntimeModule().getInMemoryModules(),\n                                    new AppFabricServiceRuntimeModule().getInMemoryModules(),\n                                    new ProgramRunnerRuntimeModule().getInMemoryModules(),\n                                    new StreamServiceModule() {\n                                      @Override\n                                      protected void configure() {\n                                        super.configure();\n                                        bind(StreamHandler.class).in(Scopes.SINGLETON);\n                                        expose(StreamHandler.class);\n                                      }\n                                    },\n                                    new HiveRuntimeModule().getInMemoryModules(),\n                                    new TestMetricsClientModule(),\n                                    new MetricsHandlerModule(),\n                                    new LoggingModules().getInMemoryModules(),\n                                    new AbstractModule() {\n                                      @Override\n                                      protected void configure() {\n                                        install(new FactoryModuleBuilder()\n                                                  .implement(ApplicationManager.class, DefaultApplicationManager.class)\n                                                  .build(ApplicationManagerFactory.class));\n                                        install(new FactoryModuleBuilder()\n                                                  .implement(StreamWriter.class, DefaultStreamWriter.class)\n                                                  .build(StreamWriterFactory.class));\n                                        install(new FactoryModuleBuilder()\n                                                  .implement(ProcedureClient.class, DefaultProcedureClient.class)\n                                                  .build(ProcedureClientFactory.class));\n                                      }\n                                    }\n                                    );\n    injector.getInstance(InMemoryTransactionManager.class).startAndWait();\n    locationFactory = injector.getInstance(LocationFactory.class);\n    metricsQueryService = injector.getInstance(MetricsQueryService.class);\n    metricsQueryService.startAndWait();\n    metricsCollectionService = injector.getInstance(MetricsCollectionService.class);\n    metricsCollectionService.startAndWait();\n    logAppenderInitializer = injector.getInstance(LogAppenderInitializer.class);\n    logAppenderInitializer.initialize();\n    httpHandler = injector.getInstance(AppFabricHttpHandler.class);\n    datasetService = injector.getInstance(DatasetService.class);\n    datasetService.startAndWait();\n    datasetFramework = injector.getInstance(DatasetFramework.class);\n    schedulerService = injector.getInstance(SchedulerService.class);\n    schedulerService.startAndWait();\n    discoveryClient = injector.getInstance(DiscoveryServiceClient.class);\n    hiveMetastore = injector.getInstance(HiveMetastore.class);\n    hiveServer = injector.getInstance(HiveServer.class);\n\n    // it is important to respect that order: metastore, then HiveServer\n    hiveMetastore.startAndWait();\n    hiveServer.startAndWait();\n  }","commit_id":"ef52b643d7abb72257e8aef8dd992ccaee992e9a","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n\tpublic FileShortcut getFileShortcut(long fileShortcutId)\n\t\tthrows PortalException {\n\n\t\treturn _documentRepository.getFileShortcut(fileShortcutId);\n\t}","id":48548,"modified_method":"@Override\n\tpublic FileShortcut getFileShortcut(long fileShortcutId)\n\t\tthrows PortalException {\n\n\t\t_checkDocumentRepository();\n\n\t\treturn _documentRepository.getFileShortcut(fileShortcutId);\n\t}","commit_id":"53db37d08c788f3bab7eecba59e0e2164ede1c74","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic FileShortcut updateFileShortcut(\n\t\t\tlong userId, long fileShortcutId, long folderId, long toFileEntryId,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\treturn _documentRepository.updateFileShortcut(\n\t\t\tuserId, fileShortcutId, folderId, toFileEntryId, serviceContext);\n\t}","id":48549,"modified_method":"@Override\n\tpublic FileShortcut updateFileShortcut(\n\t\t\tlong userId, long fileShortcutId, long folderId, long toFileEntryId,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\t_checkDocumentRepository();\n\n\t\treturn _documentRepository.updateFileShortcut(\n\t\t\tuserId, fileShortcutId, folderId, toFileEntryId, serviceContext);\n\t}","commit_id":"53db37d08c788f3bab7eecba59e0e2164ede1c74","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public List<RepositoryEntry> toFileEntriesAndFolders(\n\t\tList<Object> dlFileEntriesAndDLFolders) {\n\n\t\treturn (List)RepositoryModelUtil.toFileEntriesFileShortcutsAndFolders(\n\t\t\tdlFileEntriesAndDLFolders);\n\t}","id":48550,"modified_method":"public List<RepositoryEntry> toFileEntriesAndFolders(\n\t\tList<Object> dlFileEntriesAndDLFolders) {\n\n\t\treturn RepositoryModelUtil.toFileEntriesFileShortcutsAndFolders(\n\t\t\tdlFileEntriesAndDLFolders);\n\t}","commit_id":"53db37d08c788f3bab7eecba59e0e2164ede1c74","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void deleteFileShortcuts(long toFileEntryId) {\n\t}","id":48551,"modified_method":"@Override\n\tpublic void deleteFileShortcuts(long toFileEntryId) throws PortalException {\n\t\t_localRepository.deleteFileShortcuts(toFileEntryId);\n\t}","commit_id":"53db37d08c788f3bab7eecba59e0e2164ede1c74","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic List<Object> getFoldersAndFileEntriesAndFileShortcuts(\n\t\t\tlong folderId, int status, boolean includeMountFolders, int start,\n\t\t\tint end, OrderByComparator<?> obc)\n\t\tthrows PortalException {\n\n\t\tList<Object> dlFoldersAndFileEntriesAndFileShortcuts =\n\t\t\tdlFolderService.getFoldersAndFileEntriesAndFileShortcuts(\n\t\t\t\tgetGroupId(), toFolderId(folderId), status, includeMountFolders,\n\t\t\t\tstart, end, obc);\n\n\t\treturn (List)RepositoryModelUtil.toFileEntriesFileShortcutsAndFolders(\n\t\t\tdlFoldersAndFileEntriesAndFileShortcuts);\n\t}","id":48552,"modified_method":"@Override\n\tpublic List<RepositoryEntry> getFoldersAndFileEntriesAndFileShortcuts(\n\t\t\tlong folderId, int status, boolean includeMountFolders, int start,\n\t\t\tint end, OrderByComparator<?> obc)\n\t\tthrows PortalException {\n\n\t\tList<Object> dlFoldersAndFileEntriesAndFileShortcuts =\n\t\t\tdlFolderService.getFoldersAndFileEntriesAndFileShortcuts(\n\t\t\t\tgetGroupId(), toFolderId(folderId), status, includeMountFolders,\n\t\t\t\tstart, end, obc);\n\n\t\treturn RepositoryModelUtil.toFileEntriesFileShortcutsAndFolders(\n\t\t\tdlFoldersAndFileEntriesAndFileShortcuts);\n\t}","commit_id":"d53c60318228128f68a1bfa9015af8c21b60b306","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic List<Object> getFoldersAndFileEntriesAndFileShortcuts(\n\t\t\tlong folderId, int status, String[] mimeTypes,\n\t\t\tboolean includeMountFolders, int start, int end,\n\t\t\tOrderByComparator<?> obc)\n\t\tthrows PortalException {\n\n\t\tList<Object> dlFoldersAndFileEntriesAndFileShortcuts =\n\t\t\tdlFolderService.getFoldersAndFileEntriesAndFileShortcuts(\n\t\t\t\tgetGroupId(), toFolderId(folderId), status, mimeTypes,\n\t\t\t\tincludeMountFolders, start, end, obc);\n\n\t\treturn (List)RepositoryModelUtil.toFileEntriesFileShortcutsAndFolders(\n\t\t\tdlFoldersAndFileEntriesAndFileShortcuts);\n\t}","id":48553,"modified_method":"@Override\n\tpublic List<RepositoryEntry> getFoldersAndFileEntriesAndFileShortcuts(\n\t\t\tlong folderId, int status, String[] mimeTypes,\n\t\t\tboolean includeMountFolders, int start, int end,\n\t\t\tOrderByComparator<?> obc)\n\t\tthrows PortalException {\n\n\t\tList<Object> dlFoldersAndFileEntriesAndFileShortcuts =\n\t\t\tdlFolderService.getFoldersAndFileEntriesAndFileShortcuts(\n\t\t\t\tgetGroupId(), toFolderId(folderId), status, mimeTypes,\n\t\t\t\tincludeMountFolders, start, end, obc);\n\n\t\treturn RepositoryModelUtil.toFileEntriesFileShortcutsAndFolders(\n\t\t\tdlFoldersAndFileEntriesAndFileShortcuts);\n\t}","commit_id":"d53c60318228128f68a1bfa9015af8c21b60b306","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic List<Object> getFileEntriesAndFileShortcuts(\n\t\t\tlong folderId, int status, int start, int end)\n\t\tthrows PortalException {\n\n\t\tList<Object> dlFileEntriesAndFileShortcuts =\n\t\t\tdlFolderService.getFileEntriesAndFileShortcuts(\n\t\t\t\tgetGroupId(), toFolderId(folderId), status, start, end);\n\n\t\treturn (List)RepositoryModelUtil.toFileEntriesFileShortcutsAndFolders(\n\t\t\tdlFileEntriesAndFileShortcuts);\n\t}","id":48554,"modified_method":"@Override\n\tpublic List<RepositoryEntry> getFileEntriesAndFileShortcuts(\n\t\t\tlong folderId, int status, int start, int end)\n\t\tthrows PortalException {\n\n\t\tList<Object> dlFileEntriesAndFileShortcuts =\n\t\t\tdlFolderService.getFileEntriesAndFileShortcuts(\n\t\t\t\tgetGroupId(), toFolderId(folderId), status, start, end);\n\n\t\treturn RepositoryModelUtil.toFileEntriesFileShortcutsAndFolders(\n\t\t\tdlFileEntriesAndFileShortcuts);\n\t}","commit_id":"d53c60318228128f68a1bfa9015af8c21b60b306","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n    public void testConvert() throws IOException {\n        RestRequest request = new FakeRestRequest();\n        request.params().put(\"pretty\", \"true\");\n        RestChannel channel = new DetailedExceptionRestChannel(request);\n        ShardSearchFailure failure = new ShardSearchFailure(new QueryParsingException(new Index(\"foo\"), \"foobar\"), new SearchShardTarget(\"node_1\", \"foo\", 1));\n        ShardSearchFailure failure1 = new ShardSearchFailure(new QueryParsingException(new Index(\"foo\"), \"foobar\"), new SearchShardTarget(\"node_1\", \"foo\", 2));\n        SearchPhaseExecutionException ex = new SearchPhaseExecutionException(\"search\", \"all shards failed\",  new ShardSearchFailure[] {failure, failure1});\n        BytesRestResponse response = new BytesRestResponse(channel, new RemoteTransportException(\"foo\", ex));\n        String text = response.content().toUtf8();\n        String expected = \"{\\n\" +\n                \"  \\\"error\\\" : {\\n\" +\n                \"    \\\"root_cause\\\" : [ {\\n\" +\n                \"      \\\"type\\\" : \\\"query_parsing_exception\\\",\\n\" +\n                \"      \\\"reason\\\" : \\\"foobar\\\",\\n\" +\n                \"      \\\"index\\\" : \\\"foo\\\"\\n\" +\n                \"    } ],\\n\" +\n                \"    \\\"type\\\" : \\\"search_phase_execution_exception\\\",\\n\" +\n                \"    \\\"reason\\\" : \\\"all shards failed\\\",\\n\" +\n                \"    \\\"phase\\\" : \\\"search\\\",\\n\" +\n                \"    \\\"grouped\\\" : true,\\n\" +\n                \"    \\\"failed_shards\\\" : [ {\\n\" +\n                \"      \\\"shard\\\" : 1,\\n\" +\n                \"      \\\"index\\\" : \\\"foo\\\",\\n\" +\n                \"      \\\"node\\\" : \\\"node_1\\\",\\n\" +\n                \"      \\\"reason\\\" : {\\n\" +\n                \"        \\\"type\\\" : \\\"query_parsing_exception\\\",\\n\" +\n                \"        \\\"reason\\\" : \\\"foobar\\\",\\n\" +\n                \"        \\\"index\\\" : \\\"foo\\\"\\n\" +\n                \"      }\\n\" +\n                \"    } ]\\n\" +\n                \"  },\\n\" +\n                \"  \\\"status\\\" : 400\\n\" +\n                \"}\";\n        assertEquals(expected.trim(), text.trim());\n    }","id":48555,"modified_method":"@Test\n    public void testConvert() throws IOException {\n        RestRequest request = new FakeRestRequest();\n        RestChannel channel = new DetailedExceptionRestChannel(request);\n        ShardSearchFailure failure = new ShardSearchFailure(new QueryParsingException(new Index(\"foo\"), \"foobar\"), new SearchShardTarget(\"node_1\", \"foo\", 1));\n        ShardSearchFailure failure1 = new ShardSearchFailure(new QueryParsingException(new Index(\"foo\"), \"foobar\"), new SearchShardTarget(\"node_1\", \"foo\", 2));\n        SearchPhaseExecutionException ex = new SearchPhaseExecutionException(\"search\", \"all shards failed\",  new ShardSearchFailure[] {failure, failure1});\n        BytesRestResponse response = new BytesRestResponse(channel, new RemoteTransportException(\"foo\", ex));\n        String text = response.content().toUtf8();\n        String expected = \"{\\\"error\\\":{\\\"root_cause\\\":[{\\\"type\\\":\\\"query_parsing_exception\\\",\\\"reason\\\":\\\"foobar\\\",\\\"index\\\":\\\"foo\\\"}],\\\"type\\\":\\\"search_phase_execution_exception\\\",\\\"reason\\\":\\\"all shards failed\\\",\\\"phase\\\":\\\"search\\\",\\\"grouped\\\":true,\\\"failed_shards\\\":[{\\\"shard\\\":1,\\\"index\\\":\\\"foo\\\",\\\"node\\\":\\\"node_1\\\",\\\"reason\\\":{\\\"type\\\":\\\"query_parsing_exception\\\",\\\"reason\\\":\\\"foobar\\\",\\\"index\\\":\\\"foo\\\"}}]},\\\"status\\\":400}\";\n        assertEquals(expected.trim(), text.trim());\n    }","commit_id":"cb615ffecfbc7849bcd83386d5f7cb7bd57ea4ba","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testToXContent() throws IOException {\n        {\n            ElasticsearchException ex = new ElasticsearchException(\"foo\", new ElasticsearchException(\"bar\", new ElasticsearchIllegalArgumentException(\"index is closed\", new RuntimeException(\"foobar\"))));\n            XContentBuilder builder = XContentFactory.jsonBuilder().prettyPrint();\n            builder.startObject();\n            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);\n            builder.endObject();\n\n            String expected = \"{\\n\" +\n                    \"  \\\"type\\\" : \\\"exception\\\",\\n\" +\n                    \"  \\\"reason\\\" : \\\"foo\\\",\\n\" +\n                    \"  \\\"caused_by\\\" : {\\n\" +\n                    \"    \\\"type\\\" : \\\"exception\\\",\\n\" +\n                    \"    \\\"reason\\\" : \\\"bar\\\",\\n\" +\n                    \"    \\\"caused_by\\\" : {\\n\" +\n                    \"      \\\"type\\\" : \\\"illegal_argument_exception\\\",\\n\" +\n                    \"      \\\"reason\\\" : \\\"index is closed\\\",\\n\" +\n                    \"      \\\"caused_by\\\" : {\\n\" +\n                    \"        \\\"type\\\" : \\\"runtime_exception\\\",\\n\" +\n                    \"        \\\"reason\\\" : \\\"foobar\\\"\\n\" +\n                    \"      }\\n\" +\n                    \"    }\\n\" +\n                    \"  }\\n\" +\n                    \"}\";\n            assertEquals(expected, builder.string());\n        }\n\n        {\n            Exception ex = new FileNotFoundException(\"foo not found\");\n            if (randomBoolean()) {\n                // just a wrapper which is omitted\n                ex = new RemoteTransportException(\"foobar\", ex);\n            }\n            XContentBuilder builder = XContentFactory.jsonBuilder().prettyPrint();\n            builder.startObject();\n            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);\n            builder.endObject();\n\n            String expected = \"{\\n\" +\n                    \"  \\\"type\\\" : \\\"file_not_found_exception\\\",\\n\" +\n                    \"  \\\"reason\\\" : \\\"foo not found\\\"\\n\" +\n                    \"}\";\n            assertEquals(expected, builder.string());\n        }\n\n        { // test equivalence\n            ElasticsearchException ex =  new RemoteTransportException(\"foobar\", new FileNotFoundException(\"foo not found\"));\n            XContentBuilder builder = XContentFactory.jsonBuilder().prettyPrint();\n            builder.startObject();\n            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);\n            builder.endObject();\n\n            XContentBuilder otherBuilder = XContentFactory.jsonBuilder().prettyPrint();\n\n            otherBuilder.startObject();\n            ex.toXContent(otherBuilder, ToXContent.EMPTY_PARAMS);\n            otherBuilder.endObject();\n            assertEquals(otherBuilder.string(), builder.string());\n        }\n    }","id":48556,"modified_method":"public void testToXContent() throws IOException {\n        {\n            ElasticsearchException ex = new ElasticsearchException(\"foo\", new ElasticsearchException(\"bar\", new ElasticsearchIllegalArgumentException(\"index is closed\", new RuntimeException(\"foobar\"))));\n            XContentBuilder builder = XContentFactory.jsonBuilder();\n            builder.startObject();\n            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);\n            builder.endObject();\n\n            String expected = \"{\\\"type\\\":\\\"exception\\\",\\\"reason\\\":\\\"foo\\\",\\\"caused_by\\\":{\\\"type\\\":\\\"exception\\\",\\\"reason\\\":\\\"bar\\\",\\\"caused_by\\\":{\\\"type\\\":\\\"illegal_argument_exception\\\",\\\"reason\\\":\\\"index is closed\\\",\\\"caused_by\\\":{\\\"type\\\":\\\"runtime_exception\\\",\\\"reason\\\":\\\"foobar\\\"}}}}\";\n            assertEquals(expected, builder.string());\n        }\n\n        {\n            Exception ex = new FileNotFoundException(\"foo not found\");\n            if (randomBoolean()) {\n                // just a wrapper which is omitted\n                ex = new RemoteTransportException(\"foobar\", ex);\n            }\n            XContentBuilder builder = XContentFactory.jsonBuilder();\n            builder.startObject();\n            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);\n            builder.endObject();\n\n            String expected = \"{\\\"type\\\":\\\"file_not_found_exception\\\",\\\"reason\\\":\\\"foo not found\\\"}\";\n            assertEquals(expected, builder.string());\n        }\n\n        { // test equivalence\n            ElasticsearchException ex =  new RemoteTransportException(\"foobar\", new FileNotFoundException(\"foo not found\"));\n            XContentBuilder builder = XContentFactory.jsonBuilder();\n            builder.startObject();\n            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);\n            builder.endObject();\n\n            XContentBuilder otherBuilder = XContentFactory.jsonBuilder();\n\n            otherBuilder.startObject();\n            ex.toXContent(otherBuilder, ToXContent.EMPTY_PARAMS);\n            otherBuilder.endObject();\n            assertEquals(otherBuilder.string(), builder.string());\n        }\n    }","commit_id":"cb615ffecfbc7849bcd83386d5f7cb7bd57ea4ba","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testDeduplicate() throws IOException {\n        {\n            ShardSearchFailure failure = new ShardSearchFailure(new QueryParsingException(new Index(\"foo\"), \"foobar\"), new SearchShardTarget(\"node_1\", \"foo\", 1));\n            ShardSearchFailure failure1 = new ShardSearchFailure(new QueryParsingException(new Index(\"foo\"), \"foobar\"), new SearchShardTarget(\"node_1\", \"foo\", 2));\n            SearchPhaseExecutionException ex = new SearchPhaseExecutionException(\"search\", \"all shards failed\", new ShardSearchFailure[]{failure, failure1});\n            XContentBuilder builder = XContentFactory.jsonBuilder().prettyPrint();\n            builder.startObject();\n            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);\n            builder.endObject();\n            String expected = \"{\\n\" +\n                    \"  \\\"type\\\" : \\\"search_phase_execution_exception\\\",\\n\" +\n                    \"  \\\"reason\\\" : \\\"all shards failed\\\",\\n\" +\n                    \"  \\\"phase\\\" : \\\"search\\\",\\n\" +\n                    \"  \\\"grouped\\\" : true,\\n\" +\n                    \"  \\\"failed_shards\\\" : [ {\\n\" +\n                    \"    \\\"shard\\\" : 1,\\n\" +\n                    \"    \\\"index\\\" : \\\"foo\\\",\\n\" +\n                    \"    \\\"node\\\" : \\\"node_1\\\",\\n\" +\n                    \"    \\\"reason\\\" : {\\n\" +\n                    \"      \\\"type\\\" : \\\"query_parsing_exception\\\",\\n\" +\n                    \"      \\\"reason\\\" : \\\"foobar\\\",\\n\" +\n                    \"      \\\"index\\\" : \\\"foo\\\"\\n\" +\n                    \"    }\\n\" +\n                    \"  } ]\\n\" +\n                    \"}\";\n            assertEquals(expected, builder.string());\n        }\n        {\n            ShardSearchFailure failure = new ShardSearchFailure(new QueryParsingException(new Index(\"foo\"), \"foobar\"), new SearchShardTarget(\"node_1\", \"foo\", 1));\n            ShardSearchFailure failure1 = new ShardSearchFailure(new QueryParsingException(new Index(\"foo1\"), \"foobar\"), new SearchShardTarget(\"node_1\", \"foo1\", 1));\n            ShardSearchFailure failure2 = new ShardSearchFailure(new QueryParsingException(new Index(\"foo1\"), \"foobar\"), new SearchShardTarget(\"node_1\", \"foo1\", 2));\n            SearchPhaseExecutionException ex = new SearchPhaseExecutionException(\"search\", \"all shards failed\", new ShardSearchFailure[]{failure, failure1, failure2});\n            XContentBuilder builder = XContentFactory.jsonBuilder().prettyPrint();\n            builder.startObject();\n            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);\n            builder.endObject();\n            String expected = \"{\\n\" +\n                    \"  \\\"type\\\" : \\\"search_phase_execution_exception\\\",\\n\" +\n                    \"  \\\"reason\\\" : \\\"all shards failed\\\",\\n\" +\n                    \"  \\\"phase\\\" : \\\"search\\\",\\n\" +\n                    \"  \\\"grouped\\\" : true,\\n\" +\n                    \"  \\\"failed_shards\\\" : [ {\\n\" +\n                    \"    \\\"shard\\\" : 1,\\n\" +\n                    \"    \\\"index\\\" : \\\"foo\\\",\\n\" +\n                    \"    \\\"node\\\" : \\\"node_1\\\",\\n\" +\n                    \"    \\\"reason\\\" : {\\n\" +\n                    \"      \\\"type\\\" : \\\"query_parsing_exception\\\",\\n\" +\n                    \"      \\\"reason\\\" : \\\"foobar\\\",\\n\" +\n                    \"      \\\"index\\\" : \\\"foo\\\"\\n\" +\n                    \"    }\\n\" +\n                    \"  }, {\\n\" +\n                    \"    \\\"shard\\\" : 1,\\n\" +\n                    \"    \\\"index\\\" : \\\"foo1\\\",\\n\" +\n                    \"    \\\"node\\\" : \\\"node_1\\\",\\n\" +\n                    \"    \\\"reason\\\" : {\\n\" +\n                    \"      \\\"type\\\" : \\\"query_parsing_exception\\\",\\n\" +\n                    \"      \\\"reason\\\" : \\\"foobar\\\",\\n\" +\n                    \"      \\\"index\\\" : \\\"foo1\\\"\\n\" +\n                    \"    }\\n\" +\n                    \"  } ]\\n\" +\n                    \"}\";\n            assertEquals(expected, builder.string());\n        }\n    }","id":48557,"modified_method":"public void testDeduplicate() throws IOException {\n        {\n            ShardSearchFailure failure = new ShardSearchFailure(new QueryParsingException(new Index(\"foo\"), \"foobar\"), new SearchShardTarget(\"node_1\", \"foo\", 1));\n            ShardSearchFailure failure1 = new ShardSearchFailure(new QueryParsingException(new Index(\"foo\"), \"foobar\"), new SearchShardTarget(\"node_1\", \"foo\", 2));\n            SearchPhaseExecutionException ex = new SearchPhaseExecutionException(\"search\", \"all shards failed\", new ShardSearchFailure[]{failure, failure1});\n            XContentBuilder builder = XContentFactory.jsonBuilder();\n            builder.startObject();\n            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);\n            builder.endObject();\n            String expected = \"{\\\"type\\\":\\\"search_phase_execution_exception\\\",\\\"reason\\\":\\\"all shards failed\\\",\\\"phase\\\":\\\"search\\\",\\\"grouped\\\":true,\\\"failed_shards\\\":[{\\\"shard\\\":1,\\\"index\\\":\\\"foo\\\",\\\"node\\\":\\\"node_1\\\",\\\"reason\\\":{\\\"type\\\":\\\"query_parsing_exception\\\",\\\"reason\\\":\\\"foobar\\\",\\\"index\\\":\\\"foo\\\"}}]}\";\n            assertEquals(expected, builder.string());\n        }\n        {\n            ShardSearchFailure failure = new ShardSearchFailure(new QueryParsingException(new Index(\"foo\"), \"foobar\"), new SearchShardTarget(\"node_1\", \"foo\", 1));\n            ShardSearchFailure failure1 = new ShardSearchFailure(new QueryParsingException(new Index(\"foo1\"), \"foobar\"), new SearchShardTarget(\"node_1\", \"foo1\", 1));\n            ShardSearchFailure failure2 = new ShardSearchFailure(new QueryParsingException(new Index(\"foo1\"), \"foobar\"), new SearchShardTarget(\"node_1\", \"foo1\", 2));\n            SearchPhaseExecutionException ex = new SearchPhaseExecutionException(\"search\", \"all shards failed\", new ShardSearchFailure[]{failure, failure1, failure2});\n            XContentBuilder builder = XContentFactory.jsonBuilder();\n            builder.startObject();\n            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);\n            builder.endObject();\n            String expected = \"{\\\"type\\\":\\\"search_phase_execution_exception\\\",\\\"reason\\\":\\\"all shards failed\\\",\\\"phase\\\":\\\"search\\\",\\\"grouped\\\":true,\\\"failed_shards\\\":[{\\\"shard\\\":1,\\\"index\\\":\\\"foo\\\",\\\"node\\\":\\\"node_1\\\",\\\"reason\\\":{\\\"type\\\":\\\"query_parsing_exception\\\",\\\"reason\\\":\\\"foobar\\\",\\\"index\\\":\\\"foo\\\"}},{\\\"shard\\\":1,\\\"index\\\":\\\"foo1\\\",\\\"node\\\":\\\"node_1\\\",\\\"reason\\\":{\\\"type\\\":\\\"query_parsing_exception\\\",\\\"reason\\\":\\\"foobar\\\",\\\"index\\\":\\\"foo1\\\"}}]}\";\n            assertEquals(expected, builder.string());\n        }\n    }","commit_id":"cb615ffecfbc7849bcd83386d5f7cb7bd57ea4ba","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n\tpublic void publishToLive(PortletRequest portletRequest, Portlet portlet)\n\t\tthrows Exception {\n\n\t\tlong plid = ParamUtil.getLong(portletRequest, \"plid\");\n\n\t\tLayout sourceLayout = LayoutLocalServiceUtil.getLayout(plid);\n\n\t\tGroup stagingGroup = null;\n\t\tGroup liveGroup = null;\n\n\t\tLayout targetLayout = null;\n\n\t\tlong scopeGroupId = PortalUtil.getScopeGroupId(portletRequest);\n\n\t\tif (sourceLayout.hasScopeGroup() &&\n\t\t\t(sourceLayout.getScopeGroup().getGroupId() == scopeGroupId)) {\n\n\t\t\tstagingGroup = sourceLayout.getScopeGroup();\n\t\t\tliveGroup = stagingGroup.getLiveGroup();\n\n\t\t\ttargetLayout = LayoutLocalServiceUtil.getLayout(\n\t\t\t\tliveGroup.getClassPK());\n\t\t}\n\t\telse {\n\t\t\tstagingGroup = sourceLayout.getGroup();\n\t\t\tliveGroup = stagingGroup.getLiveGroup();\n\n\t\t\ttargetLayout = LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(\n\t\t\t\tsourceLayout.getUuid(), liveGroup.getGroupId(),\n\t\t\t\tsourceLayout.isPrivateLayout());\n\t\t}\n\n\t\tlong sourcePlid = sourceLayout.getPlid();\n\n\t\tlong targetPlid = LayoutConstants.DEFAULT_PLID;\n\n\t\tif (targetLayout != null) {\n\t\t\ttargetPlid = targetLayout.getPlid();\n\t\t}\n\t\telse if ((targetLayout == null) && sourceLayout.isTypeControlPanel()) {\n\t\t\ttargetPlid = sourcePlid;\n\t\t}\n\n\t\tcopyPortlet(\n\t\t\tportletRequest, stagingGroup.getGroupId(), liveGroup.getGroupId(),\n\t\t\tsourcePlid, targetPlid, portlet.getPortletId());\n\t}","id":48558,"modified_method":"@Override\n\tpublic void publishToLive(PortletRequest portletRequest, Portlet portlet)\n\t\tthrows Exception {\n\n\t\tlong plid = ParamUtil.getLong(portletRequest, \"plid\");\n\n\t\tLayout sourceLayout = LayoutLocalServiceUtil.getLayout(plid);\n\n\t\tGroup stagingGroup = null;\n\t\tGroup liveGroup = null;\n\n\t\tLayout targetLayout = null;\n\n\t\tlong scopeGroupId = PortalUtil.getScopeGroupId(portletRequest);\n\n\t\tif (sourceLayout.isTypeControlPanel()) {\n\t\t\tstagingGroup = GroupLocalServiceUtil.fetchGroup(scopeGroupId);\n\t\t\tliveGroup = stagingGroup.getLiveGroup();\n\n\t\t\ttargetLayout = sourceLayout;\n\t\t}\n\t\telse if (sourceLayout.hasScopeGroup() &&\n\t\t\t\t (sourceLayout.getScopeGroup().getGroupId() == scopeGroupId)) {\n\n\t\t\tstagingGroup = sourceLayout.getScopeGroup();\n\t\t\tliveGroup = stagingGroup.getLiveGroup();\n\n\t\t\ttargetLayout = LayoutLocalServiceUtil.getLayout(\n\t\t\t\tliveGroup.getClassPK());\n\t\t}\n\t\telse {\n\t\t\tstagingGroup = sourceLayout.getGroup();\n\t\t\tliveGroup = stagingGroup.getLiveGroup();\n\n\t\t\ttargetLayout = LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(\n\t\t\t\tsourceLayout.getUuid(), liveGroup.getGroupId(),\n\t\t\t\tsourceLayout.isPrivateLayout());\n\t\t}\n\n\t\tcopyPortlet(\n\t\t\tportletRequest, stagingGroup.getGroupId(), liveGroup.getGroupId(),\n\t\t\tsourceLayout.getPlid(), targetLayout.getPlid(),\n\t\t\tportlet.getPortletId());\n\t}","commit_id":"f66e5e80ab1dbba61e7c001074faf907f4d773b4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void doTag(\n\t\t\tString portletName, String instanceId, String queryString,\n\t\t\tString settingsScope, String defaultPreferences,\n\t\t\tPageContext pageContext, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\tif (pageContext != null) {\n\t\t\tresponse = new PipingServletResponse(\n\t\t\t\tresponse, pageContext.getOut());\n\t\t}\n\n\t\tPortletInstance portletInstance =\n\t\t\tPortletInstance.fromPortletInstanceKey(portletName);\n\n\t\tif (Validator.isNotNull(instanceId)) {\n\t\t\tportletInstance = new PortletInstance(\n\t\t\t\tportletInstance.getPortletName(), portletInstance.getUserId(),\n\t\t\t\tinstanceId);\n\t\t}\n\n\t\tRestrictPortletServletRequest restrictPortletServletRequest =\n\t\t\tnew RestrictPortletServletRequest(\n\t\t\t\tPortalUtil.getOriginalServletRequest(request));\n\n\t\tqueryString = PortletParameterUtil.addNamespace(\n\t\t\tportletInstance.getPortletInstanceKey(), queryString);\n\n\t\tMap<String, String[]> parameterMap = request.getParameterMap();\n\n\t\tif (!Validator.equals(\n\t\t\t\tportletInstance.getPortletInstanceKey(),\n\t\t\t\trequest.getParameter(\"p_p_id\"))) {\n\n\t\t\tparameterMap = MapUtil.filterByKeys(\n\t\t\t\tparameterMap, new PrefixPredicateFilter(\"p_p_\"));\n\t\t}\n\n\t\trequest = DynamicServletRequest.addQueryString(\n\t\t\trestrictPortletServletRequest, parameterMap, queryString, false);\n\n\t\ttry {\n\t\t\trequest.setAttribute(WebKeys.RENDER_PORTLET_RESOURCE, Boolean.TRUE);\n\n\t\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t\tif (themeDisplay.isStateMaximized()) {\n\t\t\t\tLayoutTypePortlet layoutTypePortlet =\n\t\t\t\t\tthemeDisplay.getLayoutTypePortlet();\n\n\t\t\t\tif (layoutTypePortlet.hasStateMaxPortletId(\n\t\t\t\t\t\tportletInstance.getPortletInstanceKey())) {\n\n\t\t\t\t\t// A portlet in the maximized state has already been\n\t\t\t\t\t// processed\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tLayout layout = themeDisplay.getLayout();\n\n\t\t\tPortlet portlet = getPortlet(\n\t\t\t\tthemeDisplay.getCompanyId(),\n\t\t\t\tportletInstance.getPortletInstanceKey());\n\n\t\t\trequest.setAttribute(WebKeys.SETTINGS_SCOPE, settingsScope);\n\n\t\t\tJSONObject jsonObject = null;\n\n\t\t\tif ((PortletPreferencesLocalServiceUtil.getPortletPreferencesCount(\n\t\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_LAYOUT, themeDisplay.getPlid(),\n\t\t\t\t\tportletInstance.getPortletInstanceKey()) < 1) ||\n\t\t\t\tlayout.isTypeControlPanel() || layout.isTypePanel()) {\n\n\t\t\t\tPortletPreferencesFactoryUtil.getLayoutPortletSetup(\n\t\t\t\t\tlayout, portletInstance.getPortletInstanceKey(),\n\t\t\t\t\tdefaultPreferences);\n\t\t\t\tPortletPreferencesFactoryUtil.getPortletSetup(\n\t\t\t\t\trequest, portletInstance.getPortletInstanceKey(),\n\t\t\t\t\tdefaultPreferences);\n\n\t\t\t\tPortletLayoutListener portletLayoutListener =\n\t\t\t\t\tportlet.getPortletLayoutListenerInstance();\n\n\t\t\t\tif (portletLayoutListener != null) {\n\t\t\t\t\tportletLayoutListener.onAddToLayout(\n\t\t\t\t\t\tportletInstance.getPortletInstanceKey(),\n\t\t\t\t\t\tthemeDisplay.getPlid());\n\t\t\t\t}\n\n\t\t\t\tjsonObject = JSONFactoryUtil.createJSONObject();\n\n\t\t\t\tPortletJSONUtil.populatePortletJSONObject(\n\t\t\t\t\trequest, StringPool.BLANK, portlet, jsonObject);\n\t\t\t}\n\n\t\t\tif (jsonObject != null) {\n\t\t\t\tPortletJSONUtil.writeHeaderPaths(response, jsonObject);\n\t\t\t}\n\n\t\t\tPortletContainerUtil.render(request, response, portlet);\n\n\t\t\tif (jsonObject != null) {\n\t\t\t\tPortletJSONUtil.writeFooterPaths(response, jsonObject);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\trestrictPortletServletRequest.mergeSharedAttributes();\n\t\t}\n\t}","id":48559,"modified_method":"public static void doTag(\n\t\t\tString portletName, String instanceId, String queryString,\n\t\t\tString settingsScope, String defaultPreferences,\n\t\t\tPageContext pageContext, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\tif (pageContext != null) {\n\t\t\tresponse = new PipingServletResponse(\n\t\t\t\tresponse, pageContext.getOut());\n\t\t}\n\n\t\tPortletInstance portletInstance =\n\t\t\tPortletInstance.fromPortletInstanceKey(portletName);\n\n\t\tif (Validator.isNotNull(instanceId)) {\n\t\t\tportletInstance = new PortletInstance(\n\t\t\t\tportletInstance.getPortletName(), portletInstance.getUserId(),\n\t\t\t\tinstanceId);\n\t\t}\n\n\t\tRestrictPortletServletRequest restrictPortletServletRequest =\n\t\t\tnew RestrictPortletServletRequest(\n\t\t\t\tPortalUtil.getOriginalServletRequest(request));\n\n\t\tqueryString = PortletParameterUtil.addNamespace(\n\t\t\tportletInstance.getPortletInstanceKey(), queryString);\n\n\t\tMap<String, String[]> parameterMap = request.getParameterMap();\n\n\t\tif (!Validator.equals(\n\t\t\t\tportletInstance.getPortletInstanceKey(),\n\t\t\t\trequest.getParameter(\"p_p_id\"))) {\n\n\t\t\tparameterMap = MapUtil.filterByKeys(\n\t\t\t\tparameterMap, new PrefixPredicateFilter(\"p_p_\"));\n\t\t}\n\n\t\trequest = DynamicServletRequest.addQueryString(\n\t\t\trestrictPortletServletRequest, parameterMap, queryString, false);\n\n\t\ttry {\n\t\t\trequest.setAttribute(WebKeys.RENDER_PORTLET_RESOURCE, Boolean.TRUE);\n\n\t\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t\tif (themeDisplay.isStateMaximized()) {\n\t\t\t\tLayoutTypePortlet layoutTypePortlet =\n\t\t\t\t\tthemeDisplay.getLayoutTypePortlet();\n\n\t\t\t\tif (layoutTypePortlet.hasStateMaxPortletId(\n\t\t\t\t\t\tportletInstance.getPortletInstanceKey())) {\n\n\t\t\t\t\t// A portlet in the maximized state has already been\n\t\t\t\t\t// processed\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tLayout layout = themeDisplay.getLayout();\n\n\t\t\tPortlet portlet = getPortlet(\n\t\t\t\tthemeDisplay.getCompanyId(),\n\t\t\t\tportletInstance.getPortletInstanceKey());\n\n\t\t\trequest.setAttribute(WebKeys.SETTINGS_SCOPE, settingsScope);\n\n\t\t\tJSONObject jsonObject = null;\n\n\t\t\tif ((PortletPreferencesLocalServiceUtil.getPortletPreferencesCount(\n\t\t\t\t\tthemeDisplay.getScopeGroupId(),\n\t\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_LAYOUT,\n\t\t\t\t\tPortletKeys.PREFS_PLID_SHARED, portlet, false) < 1) &&\n\t\t\t\t!(layout.isTypeControlPanel() || layout.isTypePanel())) {\n\n\t\t\t\tPortletPreferencesFactoryUtil.getLayoutPortletSetup(\n\t\t\t\t\tthemeDisplay.getCompanyId(), themeDisplay.getScopeGroupId(),\n\t\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_LAYOUT,\n\t\t\t\t\tPortletKeys.PREFS_PLID_SHARED,\n\t\t\t\t\tportletInstance.getPortletInstanceKey(),\n\t\t\t\t\tdefaultPreferences);\n\t\t\t}\n\n\t\t\tif ((PortletPreferencesLocalServiceUtil.getPortletPreferencesCount(\n\t\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_LAYOUT, themeDisplay.getPlid(),\n\t\t\t\t\tportletInstance.getPortletInstanceKey()) < 1) &&\n\t\t\t\t!(layout.isTypeControlPanel() || layout.isTypePanel())) {\n\n\t\t\t\tPortletPreferencesFactoryUtil.getLayoutPortletSetup(\n\t\t\t\t\tlayout, portletInstance.getPortletInstanceKey(),\n\t\t\t\t\tdefaultPreferences);\n\t\t\t\tPortletPreferencesFactoryUtil.getPortletSetup(\n\t\t\t\t\trequest, portletInstance.getPortletInstanceKey(),\n\t\t\t\t\tdefaultPreferences);\n\n\t\t\t\tPortletLayoutListener portletLayoutListener =\n\t\t\t\t\tportlet.getPortletLayoutListenerInstance();\n\n\t\t\t\tif (portletLayoutListener != null) {\n\t\t\t\t\tportletLayoutListener.onAddToLayout(\n\t\t\t\t\t\tportletInstance.getPortletInstanceKey(),\n\t\t\t\t\t\tthemeDisplay.getPlid());\n\t\t\t\t}\n\n\t\t\t\tjsonObject = JSONFactoryUtil.createJSONObject();\n\n\t\t\t\tPortletJSONUtil.populatePortletJSONObject(\n\t\t\t\t\trequest, StringPool.BLANK, portlet, jsonObject);\n\t\t\t}\n\n\t\t\tif (jsonObject != null) {\n\t\t\t\tPortletJSONUtil.writeHeaderPaths(response, jsonObject);\n\t\t\t}\n\n\t\t\tPortletContainerUtil.render(request, response, portlet);\n\n\t\t\tif (jsonObject != null) {\n\t\t\t\tPortletJSONUtil.writeFooterPaths(response, jsonObject);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\trestrictPortletServletRequest.mergeSharedAttributes();\n\t\t}\n\t}","commit_id":"01236e5570ae7127e9af9add78f9669014524280","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ThemeDisplay initThemeDisplay(\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\tthrows Exception {\n\n\t\tHttpSession session = request.getSession();\n\n\t\t// Company\n\n\t\tCompany company = PortalUtil.getCompany(request);\n\n\t\tlong companyId = company.getCompanyId();\n\n\t\t// CDN host\n\n\t\tString cdnHost = PortalUtil.getCDNHost(request);\n\n\t\tString dynamicResourcesCDNHost = StringPool.BLANK;\n\n\t\tboolean cdnDynamicResourceEnabled =\n\t\t\tPortalUtil.isCDNDynamicResourcesEnabled(request);\n\n\t\tif (cdnDynamicResourceEnabled) {\n\t\t\tdynamicResourcesCDNHost = cdnHost;\n\t\t}\n\n\t\t// Portal URL\n\n\t\tString portalURL = PortalUtil.getPortalURL(request);\n\n\t\t// Paths\n\n\t\tString contextPath = PortalUtil.getPathContext();\n\t\tString friendlyURLPrivateGroupPath =\n\t\t\tPortalUtil.getPathFriendlyURLPrivateGroup();\n\t\tString friendlyURLPrivateUserPath =\n\t\t\tPortalUtil.getPathFriendlyURLPrivateUser();\n\t\tString friendlyURLPublicPath = PortalUtil.getPathFriendlyURLPublic();\n\t\tString imagePath = dynamicResourcesCDNHost.concat(\n\t\t\tPortalUtil.getPathImage());\n\t\tString mainPath = PortalUtil.getPathMain();\n\n\t\tString i18nPath = (String)request.getAttribute(WebKeys.I18N_PATH);\n\n\t\tif (Validator.isNotNull(i18nPath)) {\n\t\t\tif (Validator.isNotNull(contextPath)) {\n\t\t\t\tString i18nContextPath = contextPath.concat(i18nPath);\n\n\t\t\t\tfriendlyURLPrivateGroupPath = StringUtil.replaceFirst(\n\t\t\t\t\tfriendlyURLPrivateGroupPath, contextPath, i18nContextPath);\n\t\t\t\tfriendlyURLPrivateUserPath = StringUtil.replaceFirst(\n\t\t\t\t\tfriendlyURLPrivateUserPath, contextPath, i18nContextPath);\n\t\t\t\tfriendlyURLPublicPath = StringUtil.replaceFirst(\n\t\t\t\t\tfriendlyURLPublicPath, contextPath, i18nContextPath);\n\t\t\t\tmainPath = StringUtil.replaceFirst(\n\t\t\t\t\tmainPath, contextPath, i18nContextPath);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfriendlyURLPrivateGroupPath = i18nPath.concat(\n\t\t\t\t\tfriendlyURLPrivateGroupPath);\n\t\t\t\tfriendlyURLPrivateUserPath = i18nPath.concat(\n\t\t\t\t\tfriendlyURLPrivateUserPath);\n\t\t\t\tfriendlyURLPublicPath = i18nPath.concat(friendlyURLPublicPath);\n\t\t\t\tmainPath = i18nPath.concat(mainPath);\n\t\t\t}\n\t\t}\n\n\t\t// Company logo\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(imagePath);\n\t\tsb.append(\"/company_logo?img_id=\");\n\t\tsb.append(company.getLogoId());\n\t\tsb.append(\"&t=\");\n\t\tsb.append(WebServerServletTokenUtil.getToken(company.getLogoId()));\n\n\t\tString companyLogo = sb.toString();\n\n\t\tint companyLogoHeight = 0;\n\t\tint companyLogoWidth = 0;\n\n\t\tImage companyLogoImage = null;\n\n\t\tif (company.getLogoId() > 0) {\n\t\t\tcompanyLogoImage = ImageLocalServiceUtil.getCompanyLogo(\n\t\t\t\tcompany.getLogoId());\n\t\t}\n\t\telse {\n\t\t\tcompanyLogoImage = ImageToolUtil.getDefaultCompanyLogo();\n\t\t}\n\n\t\tif (companyLogoImage != null) {\n\t\t\tcompanyLogoHeight = companyLogoImage.getHeight();\n\t\t\tcompanyLogoWidth = companyLogoImage.getWidth();\n\t\t}\n\n\t\tString realCompanyLogo = companyLogo;\n\t\tint realCompanyLogoHeight = companyLogoHeight;\n\t\tint realCompanyLogoWidth = companyLogoWidth;\n\n\t\t// User\n\n\t\tUser user = null;\n\n\t\ttry {\n\t\t\tuser = PortalUtil.initUser(request);\n\t\t}\n\t\tcatch (NoSuchUserException nsue) {\n\t\t\treturn null;\n\t\t}\n\n\t\tboolean signedIn = !user.isDefaultUser();\n\n\t\tif (PropsValues.BROWSER_CACHE_DISABLED ||\n\t\t\t(PropsValues.BROWSER_CACHE_SIGNED_IN_DISABLED && signedIn)) {\n\n\t\t\tresponse.setDateHeader(HttpHeaders.EXPIRES, 0);\n\t\t\tresponse.setHeader(\n\t\t\t\tHttpHeaders.CACHE_CONTROL,\n\t\t\t\tHttpHeaders.CACHE_CONTROL_NO_CACHE_VALUE);\n\t\t\tresponse.setHeader(\n\t\t\t\tHttpHeaders.PRAGMA, HttpHeaders.PRAGMA_NO_CACHE_VALUE);\n\t\t}\n\n\t\tUser realUser = user;\n\n\t\tLong realUserId = (Long)session.getAttribute(WebKeys.USER_ID);\n\n\t\tif (realUserId != null) {\n\t\t\tif (user.getUserId() != realUserId.longValue()) {\n\t\t\t\trealUser = UserLocalServiceUtil.getUserById(\n\t\t\t\t\trealUserId.longValue());\n\t\t\t}\n\t\t}\n\n\t\tString doAsUserId = ParamUtil.getString(request, \"doAsUserId\");\n\t\tString doAsUserLanguageId = ParamUtil.getString(\n\t\t\trequest, \"doAsUserLanguageId\");\n\t\tlong doAsGroupId = ParamUtil.getLong(request, \"doAsGroupId\");\n\n\t\tlong refererGroupId = ParamUtil.getLong(request, \"refererGroupId\");\n\n\t\tlong refererPlid = ParamUtil.getLong(request, \"refererPlid\");\n\n\t\tif (LayoutLocalServiceUtil.fetchLayout(refererPlid) == null) {\n\t\t\trefererPlid = 0;\n\t\t}\n\n\t\tString controlPanelCategory = ParamUtil.getString(\n\t\t\trequest, \"controlPanelCategory\");\n\n\t\t// Permission checker\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tPermissionCheckerFactoryUtil.create(user);\n\n\t\tPermissionThreadLocal.setPermissionChecker(permissionChecker);\n\n\t\t// Cookie support\n\n\t\ttry {\n\n\t\t\t// LEP-4069\n\n\t\t\tCookieKeys.validateSupportCookie(request);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tCookieKeys.addSupportCookie(request, response);\n\t\t}\n\n\t\t// Time zone\n\n\t\tTimeZone timeZone = user.getTimeZone();\n\n\t\tif (timeZone == null) {\n\t\t\ttimeZone = company.getTimeZone();\n\t\t}\n\n\t\t// Layouts\n\n\t\tif (signedIn) {\n\t\t\tupdateUserLayouts(user);\n\t\t}\n\n\t\tLayout layout = null;\n\t\tList<Layout> layouts = null;\n\n\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\n\t\tboolean viewableSourceGroup = true;\n\n\t\tif (plid > 0) {\n\t\t\tlayout = LayoutLocalServiceUtil.getLayout(plid);\n\t\t}\n\t\telse {\n\t\t\tlong groupId = ParamUtil.getLong(request, \"groupId\");\n\t\t\tboolean privateLayout = ParamUtil.getBoolean(\n\t\t\t\trequest, \"privateLayout\");\n\t\t\tlong layoutId = ParamUtil.getLong(request, \"layoutId\");\n\n\t\t\tif ((groupId > 0) && (layoutId > 0)) {\n\t\t\t\tlayout = LayoutLocalServiceUtil.getLayout(\n\t\t\t\t\tgroupId, privateLayout, layoutId);\n\t\t\t}\n\t\t}\n\n\t\tif (layout != null) {\n\t\t\tlong sourceGroupId = ParamUtil.getLong(request, \"p_v_l_s_g_id\");\n\n\t\t\tif ((sourceGroupId > 0) && (sourceGroupId != layout.getGroupId())) {\n\t\t\t\tGroup sourceGroup = GroupLocalServiceUtil.getGroup(\n\t\t\t\t\tsourceGroupId);\n\n\t\t\t\tif (layout.isPublicLayout() ||\n\t\t\t\t\tSitesUtil.isUserGroupLayoutSetViewable(\n\t\t\t\t\t\tpermissionChecker, layout.getGroup())) {\n\n\t\t\t\t\tlayout = new VirtualLayout(layout, sourceGroup);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tviewableSourceGroup = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tString ppid = ParamUtil.getString(request, \"p_p_id\");\n\n\t\tBoolean redirectToDefaultLayout = (Boolean)request.getAttribute(\n\t\t\tWebKeys.REDIRECT_TO_DEFAULT_LAYOUT);\n\n\t\tif (redirectToDefaultLayout == null) {\n\t\t\tredirectToDefaultLayout = Boolean.FALSE;\n\t\t}\n\n\t\tif (layout != null) {\n\t\t\tGroup group = layout.getGroup();\n\n\t\t\tif (!signedIn && PropsValues.AUTH_FORWARD_BY_REDIRECT) {\n\t\t\t\trequest.setAttribute(WebKeys.REQUESTED_LAYOUT, layout);\n\t\t\t}\n\n\t\t\tif ((Validator.isNull(controlPanelCategory) ||\n\t\t\t\t controlPanelCategory.equals(PortletCategoryKeys.MY) ||\n\t\t\t\t controlPanelCategory.equals(PortletCategoryKeys.PORTLET)) &&\n\t\t\t\tValidator.isNotNull(ppid) &&\n\t\t\t\t(LiferayWindowState.isPopUp(request) ||\n\t\t\t\t LiferayWindowState.isExclusive(request))) {\n\n\t\t\t\tcontrolPanelCategory = PortletCategoryKeys.PORTLET;\n\t\t\t}\n\t\t\telse if (Validator.isNotNull(ppid)) {\n\t\t\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\t\t\tcompanyId, ppid);\n\n\t\t\t\tString portletControlPanelEntryCategory =\n\t\t\t\t\tportlet.getControlPanelEntryCategory();\n\n\t\t\t\tif (!controlPanelCategory.startsWith(\n\t\t\t\t\t\tPortletCategoryKeys.CURRENT_SITE) &&\n\t\t\t\t\tportletControlPanelEntryCategory.startsWith(\n\t\t\t\t\t\tPortletCategoryKeys.SITE_ADMINISTRATION)) {\n\n\t\t\t\t\tportletControlPanelEntryCategory =\n\t\t\t\t\t\tPortletCategoryKeys.SITES;\n\t\t\t\t}\n\n\t\t\t\tif (!controlPanelCategory.startsWith(\n\t\t\t\t\t\tPortletCategoryKeys.CURRENT_SITE) &&\n\t\t\t\t\tValidator.isNotNull(portletControlPanelEntryCategory)) {\n\n\t\t\t\t\tcontrolPanelCategory = portletControlPanelEntryCategory;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tboolean viewableGroup = hasAccessPermission(\n\t\t\t\tpermissionChecker, layout, doAsGroupId, controlPanelCategory,\n\t\t\t\ttrue);\n\t\t\tboolean viewableStaging =\n\t\t\t\t!group.isControlPanel() &&\n\t\t\t\tGroupPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, group, ActionKeys.VIEW_STAGING);\n\n\t\t\tif (viewableStaging) {\n\t\t\t\tlayouts = LayoutLocalServiceUtil.getLayouts(\n\t\t\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\t\t\tLayoutConstants.DEFAULT_PARENT_LAYOUT_ID);\n\t\t\t}\n\t\t\telse if ((!viewableGroup || !viewableSourceGroup) &&\n\t\t\t\t\t group.isStagingGroup()) {\n\n\t\t\t\tlayout = null;\n\t\t\t}\n\t\t\telse if (!isLoginRequest(request) &&\n\t\t\t\t\t (!viewableGroup || !viewableSourceGroup ||\n\t\t\t\t\t  (!redirectToDefaultLayout &&\n\t\t\t\t\t   !hasAccessPermission(\n\t\t\t\t\t\t   permissionChecker, layout, doAsGroupId,\n\t\t\t\t\t\t   controlPanelCategory, false)))) {\n\n\t\t\t\tif (user.isDefaultUser() &&\n\t\t\t\t\tPropsValues.AUTH_LOGIN_PROMPT_ENABLED) {\n\n\t\t\t\t\tthrow new PrincipalException(\"User is not authenticated\");\n\t\t\t\t}\n\n\t\t\t\tsb = new StringBundler(6);\n\n\t\t\t\tsb.append(\"User \");\n\t\t\t\tsb.append(user.getUserId());\n\t\t\t\tsb.append(\" is not allowed to access the \");\n\t\t\t\tsb.append(layout.isPrivateLayout() ? \"private\": \"public\");\n\t\t\t\tsb.append(\" pages of group \");\n\t\t\t\tsb.append(layout.getGroupId());\n\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(sb.toString());\n\t\t\t\t}\n\n\t\t\t\tthrow new NoSuchLayoutException(sb.toString());\n\t\t\t}\n\t\t\telse if (isLoginRequest(request) && !viewableGroup) {\n\t\t\t\tlayout = null;\n\t\t\t}\n\t\t\telse if (group.isLayoutPrototype()) {\n\t\t\t\tlayouts = new ArrayList<>();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlayouts = LayoutLocalServiceUtil.getLayouts(\n\t\t\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\t\t\tLayoutConstants.DEFAULT_PARENT_LAYOUT_ID);\n\n\t\t\t\tif (!group.isControlPanel()) {\n\t\t\t\t\tdoAsGroupId = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tList<Layout> unfilteredLayouts = layouts;\n\n\t\tif (layout == null) {\n\t\t\tObject[] defaultLayout = getDefaultLayout(request, user, signedIn);\n\n\t\t\tlayout = (Layout)defaultLayout[0];\n\t\t\tlayouts = (List<Layout>)defaultLayout[1];\n\n\t\t\trequest.setAttribute(WebKeys.LAYOUT_DEFAULT, Boolean.TRUE);\n\t\t}\n\n\t\tObject[] viewableLayouts = getViewableLayouts(\n\t\t\trequest, user, permissionChecker, layout, layouts, doAsGroupId,\n\t\t\tcontrolPanelCategory);\n\n\t\tString layoutSetLogo = null;\n\n\t\tlayout = (Layout)viewableLayouts[0];\n\t\tlayouts = (List<Layout>)viewableLayouts[1];\n\n\t\tGroup group = null;\n\n\t\tif (layout != null) {\n\t\t\tgroup = layout.getGroup();\n\n\t\t\tif (!group.isControlPanel()) {\n\t\t\t\trememberVisitedGroupIds(request, group.getGroupId());\n\t\t\t}\n\t\t}\n\n\t\tLayoutTypePortlet layoutTypePortlet = null;\n\n\t\tlayouts = mergeAdditionalLayouts(\n\t\t\trequest, user, permissionChecker, layout, layouts, doAsGroupId,\n\t\t\tcontrolPanelCategory);\n\n\t\tLayoutSet layoutSet = null;\n\n\t\tboolean hasAddLayoutLayoutPermission = false;\n\t\tboolean hasCustomizeLayoutPermission = false;\n\t\tboolean hasDeleteLayoutPermission = false;\n\t\tboolean hasUpdateLayoutPermission = false;\n\n\t\tboolean customizedView = SessionParamUtil.getBoolean(\n\t\t\trequest, \"customized_view\", true);\n\n\t\tif (layout != null) {\n\t\t\tLayoutType layoutType = layout.getLayoutType();\n\n\t\t\tLayoutTypeAccessPolicy layoutTypeAccessPolicy =\n\t\t\t\tlayoutType.getLayoutTypeAccessPolicy();\n\n\t\t\thasAddLayoutLayoutPermission =\n\t\t\t\tlayoutTypeAccessPolicy.isAddLayoutAllowed(\n\t\t\t\t\tpermissionChecker, layout);\n\t\t\thasCustomizeLayoutPermission =\n\t\t\t\tlayoutTypeAccessPolicy.isCustomizeLayoutAllowed(\n\t\t\t\t\tpermissionChecker, layout);\n\t\t\thasDeleteLayoutPermission =\n\t\t\t\tlayoutTypeAccessPolicy.isDeleteLayoutAllowed(\n\t\t\t\t\tpermissionChecker, layout);\n\t\t\thasUpdateLayoutPermission =\n\t\t\t\tlayoutTypeAccessPolicy.isUpdateLayoutAllowed(\n\t\t\t\t\tpermissionChecker, layout);\n\n\t\t\tlayoutSet = layout.getLayoutSet();\n\n\t\t\tif (company.isSiteLogo()) {\n\t\t\t\tlong logoId = 0;\n\n\t\t\t\tif (layoutSet.isLogo()) {\n\t\t\t\t\tlogoId = layoutSet.getLogoId();\n\n\t\t\t\t\tif (logoId == 0) {\n\t\t\t\t\t\tlogoId = layoutSet.getLiveLogoId();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tLayoutSet siblingLayoutSet =\n\t\t\t\t\t\tLayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\t\t\t\t\tlayout.getGroupId(), !layout.isPrivateLayout());\n\n\t\t\t\t\tif (siblingLayoutSet.isLogo()) {\n\t\t\t\t\t\tlogoId = siblingLayoutSet.getLogoId();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (logoId > 0) {\n\t\t\t\t\tsb = new StringBundler(5);\n\n\t\t\t\t\tsb.append(imagePath);\n\t\t\t\t\tsb.append(\"/layout_set_logo?img_id=\");\n\t\t\t\t\tsb.append(logoId);\n\t\t\t\t\tsb.append(\"&t=\");\n\t\t\t\t\tsb.append(WebServerServletTokenUtil.getToken(logoId));\n\n\t\t\t\t\tlayoutSetLogo = sb.toString();\n\n\t\t\t\t\tImage layoutSetLogoImage =\n\t\t\t\t\t\tImageLocalServiceUtil.getCompanyLogo(logoId);\n\n\t\t\t\t\tcompanyLogo = layoutSetLogo;\n\t\t\t\t\tcompanyLogoHeight = layoutSetLogoImage.getHeight();\n\t\t\t\t\tcompanyLogoWidth = layoutSetLogoImage.getWidth();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplid = layout.getPlid();\n\n\t\t\t// Updates to shared layouts are not reflected until the next time\n\t\t\t// the user logs in because group layouts are cached in the session\n\n\t\t\tlayout = (Layout)layout.clone();\n\n\t\t\tlayoutTypePortlet = (LayoutTypePortlet)layout.getLayoutType();\n\n\t\t\tboolean customizable = layoutTypePortlet.isCustomizable();\n\n\t\t\tif (!customizable ||\n\t\t\t\tgroup.isLayoutPrototype() || group.isLayoutSetPrototype() ||\n\t\t\t\tgroup.isStagingGroup()) {\n\n\t\t\t\tcustomizedView = false;\n\t\t\t}\n\n\t\t\tlayoutTypePortlet.setCustomizedView(customizedView);\n\t\t\tlayoutTypePortlet.setUpdatePermission(hasUpdateLayoutPermission);\n\n\t\t\tif (signedIn && customizable && customizedView &&\n\t\t\t\thasCustomizeLayoutPermission) {\n\n\t\t\t\tPortalPreferences portalPreferences =\n\t\t\t\t\tPortletPreferencesFactoryUtil.getPortalPreferences(\n\t\t\t\t\t\tuser.getUserId(), true);\n\n\t\t\t\tlayoutTypePortlet.setPortalPreferences(portalPreferences);\n\t\t\t}\n\n\t\t\tLayoutClone layoutClone = LayoutCloneFactory.getInstance();\n\n\t\t\tif (layoutClone != null) {\n\t\t\t\tString typeSettings = layoutClone.get(request, plid);\n\n\t\t\t\tif (typeSettings != null) {\n\t\t\t\t\tUnicodeProperties typeSettingsProperties =\n\t\t\t\t\t\tnew UnicodeProperties(true);\n\n\t\t\t\t\ttypeSettingsProperties.load(typeSettings);\n\n\t\t\t\t\tString stateMax = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.STATE_MAX);\n\t\t\t\t\tString stateMin = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.STATE_MIN);\n\t\t\t\t\tString modeAbout = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_ABOUT);\n\t\t\t\t\tString modeConfig = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_CONFIG);\n\t\t\t\t\tString modeEdit = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_EDIT);\n\t\t\t\t\tString modeEditDefaults =\n\t\t\t\t\t\ttypeSettingsProperties.getProperty(\n\t\t\t\t\t\t\tLayoutTypePortletConstants.MODE_EDIT_DEFAULTS);\n\t\t\t\t\tString modeEditGuest = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_EDIT_GUEST);\n\t\t\t\t\tString modeHelp = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_HELP);\n\t\t\t\t\tString modePreview = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_PREVIEW);\n\t\t\t\t\tString modePrint = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_PRINT);\n\n\t\t\t\t\tlayoutTypePortlet.setStateMax(stateMax);\n\t\t\t\t\tlayoutTypePortlet.setStateMin(stateMin);\n\t\t\t\t\tlayoutTypePortlet.setModeAbout(modeAbout);\n\t\t\t\t\tlayoutTypePortlet.setModeConfig(modeConfig);\n\t\t\t\t\tlayoutTypePortlet.setModeEdit(modeEdit);\n\t\t\t\t\tlayoutTypePortlet.setModeEditDefaults(modeEditDefaults);\n\t\t\t\t\tlayoutTypePortlet.setModeEditGuest(modeEditGuest);\n\t\t\t\t\tlayoutTypePortlet.setModeHelp(modeHelp);\n\t\t\t\t\tlayoutTypePortlet.setModePreview(modePreview);\n\t\t\t\t\tlayoutTypePortlet.setModePrint(modePrint);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trequest.setAttribute(WebKeys.LAYOUT, layout);\n\t\t\trequest.setAttribute(WebKeys.LAYOUTS, layouts);\n\t\t}\n\n\t\t// Locale\n\n\t\tString i18nLanguageId = (String)request.getAttribute(\n\t\t\tWebKeys.I18N_LANGUAGE_ID);\n\n\t\tLocale locale = PortalUtil.getLocale(request, response, true);\n\n\t\t// Scope\n\n\t\tlong scopeGroupId = PortalUtil.getScopeGroupId(request);\n\n\t\tif (group.isInheritContent()) {\n\t\t\tscopeGroupId = group.getParentGroupId();\n\t\t}\n\n\t\tif ((scopeGroupId <= 0) && (doAsGroupId > 0)) {\n\t\t\tscopeGroupId = doAsGroupId;\n\t\t}\n\n\t\tlong siteGroupId = 0;\n\n\t\tif (layout != null) {\n\t\t\tif (layout.isTypeControlPanel()) {\n\t\t\t\tsiteGroupId = PortalUtil.getSiteGroupId(scopeGroupId);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsiteGroupId = PortalUtil.getSiteGroupId(layout.getGroupId());\n\t\t\t}\n\t\t}\n\n\t\t// Theme and color scheme\n\n\t\tTheme theme = null;\n\t\tColorScheme colorScheme = null;\n\n\t\tboolean wapTheme = BrowserSnifferUtil.isWap(request);\n\n\t\tif ((layout != null) &&\n\t\t\t(group.isControlPanel() || group.isUserPersonalPanel())) {\n\n\t\t\tString themeId = PrefsPropsUtil.getString(\n\t\t\t\tcompanyId, PropsKeys.CONTROL_PANEL_LAYOUT_REGULAR_THEME_ID);\n\t\t\tString colorSchemeId =\n\t\t\t\tColorSchemeFactoryUtil.getDefaultRegularColorSchemeId();\n\n\t\t\ttheme = ThemeLocalServiceUtil.getTheme(\n\t\t\t\tcompanyId, themeId, wapTheme);\n\t\t\tcolorScheme = ThemeLocalServiceUtil.getColorScheme(\n\t\t\t\tcompanyId, theme.getThemeId(), colorSchemeId, wapTheme);\n\n\t\t\tif (!wapTheme && theme.isWapTheme()) {\n\t\t\t\ttheme = ThemeLocalServiceUtil.getTheme(\n\t\t\t\t\tcompanyId,\n\t\t\t\t\tPropsValues.CONTROL_PANEL_LAYOUT_REGULAR_THEME_ID, false);\n\t\t\t\tcolorScheme = ThemeLocalServiceUtil.getColorScheme(\n\t\t\t\t\tcompanyId, theme.getThemeId(), colorSchemeId, false);\n\t\t\t}\n\n\t\t\trequest.setAttribute(WebKeys.THEME, theme);\n\t\t\trequest.setAttribute(WebKeys.COLOR_SCHEME, colorScheme);\n\t\t}\n\n\t\tboolean themeCssFastLoad = PropsValues.THEME_CSS_FAST_LOAD;\n\n\t\tif (PropsValues.THEME_CSS_FAST_LOAD_CHECK_REQUEST_PARAMETER) {\n\t\t\tthemeCssFastLoad = SessionParamUtil.getBoolean(\n\t\t\t\trequest, \"css_fast_load\", PropsValues.THEME_CSS_FAST_LOAD);\n\t\t}\n\n\t\tboolean themeImagesFastLoad = PropsValues.THEME_IMAGES_FAST_LOAD;\n\n\t\tif (PropsValues.THEME_IMAGES_FAST_LOAD_CHECK_REQUEST_PARAMETER) {\n\t\t\tSessionParamUtil.getBoolean(\n\t\t\t\trequest, \"images_fast_load\",\n\t\t\t\tPropsValues.THEME_IMAGES_FAST_LOAD);\n\t\t}\n\n\t\tboolean themeJsBarebone = PropsValues.JAVASCRIPT_BAREBONE_ENABLED;\n\n\t\tif (themeJsBarebone) {\n\t\t\tif (signedIn) {\n\t\t\t\tthemeJsBarebone = false;\n\t\t\t}\n\t\t}\n\n\t\tboolean themeJsFastLoad = SessionParamUtil.getBoolean(\n\t\t\trequest, \"js_fast_load\", PropsValues.JAVASCRIPT_FAST_LOAD);\n\n\t\tString lifecycle = ParamUtil.getString(request, \"p_p_lifecycle\", \"0\");\n\n\t\tlifecycle = ParamUtil.getString(request, \"p_t_lifecycle\", lifecycle);\n\n\t\tboolean isolated = ParamUtil.getBoolean(request, \"p_p_isolated\");\n\n\t\tString facebookCanvasPageURL = (String)request.getAttribute(\n\t\t\tWebKeys.FACEBOOK_CANVAS_PAGE_URL);\n\n\t\tboolean widget = false;\n\n\t\tBoolean widgetObj = (Boolean)request.getAttribute(WebKeys.WIDGET);\n\n\t\tif (widgetObj != null) {\n\t\t\twidget = widgetObj.booleanValue();\n\t\t}\n\n\t\t// Theme display\n\n\t\tThemeDisplay themeDisplay = ThemeDisplayFactory.create();\n\n\t\tthemeDisplay.setRequest(request);\n\n\t\t// Set attributes first that other methods (getCDNBaseURL and\n\t\t// setLookAndFeel) depend on\n\n\t\tthemeDisplay.setCDNHost(cdnHost);\n\t\tthemeDisplay.setCDNDynamicResourcesHost(dynamicResourcesCDNHost);\n\t\tthemeDisplay.setFacebookCanvasPageURL(facebookCanvasPageURL);\n\t\tthemeDisplay.setPortalURL(portalURL);\n\t\tthemeDisplay.setRefererPlid(refererPlid);\n\t\tthemeDisplay.setSecure(request.isSecure());\n\t\tthemeDisplay.setServerName(request.getServerName());\n\t\tthemeDisplay.setServerPort(request.getServerPort());\n\t\tthemeDisplay.setWidget(widget);\n\n\t\tthemeDisplay.setCompany(company);\n\t\tthemeDisplay.setCompanyLogo(companyLogo);\n\t\tthemeDisplay.setCompanyLogoHeight(companyLogoHeight);\n\t\tthemeDisplay.setCompanyLogoWidth(companyLogoWidth);\n\t\tthemeDisplay.setControlPanelCategory(controlPanelCategory);\n\t\tthemeDisplay.setDoAsGroupId(doAsGroupId);\n\t\tthemeDisplay.setDoAsUserId(doAsUserId);\n\t\tthemeDisplay.setDoAsUserLanguageId(doAsUserLanguageId);\n\t\tthemeDisplay.setI18nLanguageId(i18nLanguageId);\n\t\tthemeDisplay.setI18nPath(i18nPath);\n\t\tthemeDisplay.setIsolated(isolated);\n\t\tthemeDisplay.setLanguageId(LocaleUtil.toLanguageId(locale));\n\t\tthemeDisplay.setLayout(layout);\n\t\tthemeDisplay.setLayouts(layouts);\n\t\tthemeDisplay.setLayoutSet(layoutSet);\n\t\tthemeDisplay.setLayoutSetLogo(layoutSetLogo);\n\t\tthemeDisplay.setLayoutTypePortlet(layoutTypePortlet);\n\t\tthemeDisplay.setLifecycle(lifecycle);\n\t\tthemeDisplay.setLifecycleAction(lifecycle.equals(\"1\"));\n\t\tthemeDisplay.setLifecycleEvent(lifecycle.equals(\"3\"));\n\t\tthemeDisplay.setLifecycleRender(lifecycle.equals(\"0\"));\n\t\tthemeDisplay.setLifecycleResource(lifecycle.equals(\"2\"));\n\t\tthemeDisplay.setLocale(locale);\n\t\tthemeDisplay.setLookAndFeel(theme, colorScheme);\n\t\tthemeDisplay.setPathApplet(contextPath.concat(\"/applets\"));\n\t\tthemeDisplay.setPathCms(contextPath.concat(\"/cms\"));\n\t\tthemeDisplay.setPathContext(contextPath);\n\t\tthemeDisplay.setPathFlash(contextPath.concat(\"/flash\"));\n\t\tthemeDisplay.setPathFriendlyURLPrivateGroup(\n\t\t\tfriendlyURLPrivateGroupPath);\n\t\tthemeDisplay.setPathFriendlyURLPrivateUser(friendlyURLPrivateUserPath);\n\t\tthemeDisplay.setPathFriendlyURLPublic(friendlyURLPublicPath);\n\t\tthemeDisplay.setPathImage(imagePath);\n\t\tthemeDisplay.setPathJavaScript(\n\t\t\tPortalWebResourcesUtil.getContextPath().concat(\"/html/js\"));\n\t\tthemeDisplay.setPathMain(mainPath);\n\t\tthemeDisplay.setPathSound(contextPath.concat(\"/html/sound\"));\n\t\tthemeDisplay.setPermissionChecker(permissionChecker);\n\t\tthemeDisplay.setPlid(plid);\n\t\tthemeDisplay.setPpid(ppid);\n\t\tthemeDisplay.setRealCompanyLogo(realCompanyLogo);\n\t\tthemeDisplay.setRealCompanyLogoHeight(realCompanyLogoHeight);\n\t\tthemeDisplay.setRealCompanyLogoWidth(realCompanyLogoWidth);\n\t\tthemeDisplay.setRealUser(realUser);\n\t\tthemeDisplay.setRefererGroupId(refererGroupId);\n\t\tthemeDisplay.setScopeGroupId(scopeGroupId);\n\t\tthemeDisplay.setSignedIn(signedIn);\n\t\tthemeDisplay.setSiteDefaultLocale(\n\t\t\tPortalUtil.getSiteDefaultLocale(siteGroupId));\n\t\tthemeDisplay.setSiteGroupId(siteGroupId);\n\t\tthemeDisplay.setStateExclusive(LiferayWindowState.isExclusive(request));\n\t\tthemeDisplay.setStateMaximized(LiferayWindowState.isMaximized(request));\n\t\tthemeDisplay.setStatePopUp(LiferayWindowState.isPopUp(request));\n\t\tthemeDisplay.setThemeCssFastLoad(themeCssFastLoad);\n\t\tthemeDisplay.setThemeImagesFastLoad(themeImagesFastLoad);\n\t\tthemeDisplay.setThemeJsBarebone(themeJsBarebone);\n\t\tthemeDisplay.setThemeJsFastLoad(themeJsFastLoad);\n\t\tthemeDisplay.setTimeZone(timeZone);\n\t\tthemeDisplay.setUnfilteredLayouts(unfilteredLayouts);\n\t\tthemeDisplay.setUser(user);\n\n\t\t// Icons\n\n\t\tthemeDisplay.setShowAddContentIcon(false);\n\n\t\tboolean showControlPanelIcon = false;\n\n\t\tif (signedIn &&\n\t\t\tPortalPermissionUtil.contains(\n\t\t\t\tpermissionChecker, ActionKeys.VIEW_CONTROL_PANEL)) {\n\n\t\t\tshowControlPanelIcon = true;\n\t\t}\n\n\t\tthemeDisplay.setShowControlPanelIcon(showControlPanelIcon);\n\n\t\tthemeDisplay.setShowHomeIcon(true);\n\t\tthemeDisplay.setShowMyAccountIcon(signedIn);\n\t\tthemeDisplay.setShowPageSettingsIcon(hasDeleteLayoutPermission);\n\t\tthemeDisplay.setShowPortalIcon(true);\n\t\tthemeDisplay.setShowSignInIcon(!signedIn);\n\n\t\tboolean showSignOutIcon = signedIn;\n\n\t\tif (themeDisplay.isImpersonated()) {\n\t\t\tshowSignOutIcon = false;\n\t\t}\n\n\t\tthemeDisplay.setShowSignOutIcon(showSignOutIcon);\n\n\t\tthemeDisplay.setShowStagingIcon(false);\n\n\t\tboolean showSiteAdministrationIcon = false;\n\n\t\tif (signedIn &&\n\t\t\tGroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, group,\n\t\t\t\tActionKeys.VIEW_SITE_ADMINISTRATION)) {\n\n\t\t\tshowSiteAdministrationIcon = true;\n\t\t}\n\n\t\tthemeDisplay.setShowSiteAdministrationIcon(showSiteAdministrationIcon);\n\n\t\t// Session\n\n\t\tif (PropsValues.SESSION_ENABLE_URL_WITH_SESSION_ID &&\n\t\t\t!CookieKeys.hasSessionId(request)) {\n\n\t\t\tthemeDisplay.setAddSessionIdToURL(true);\n\t\t\tthemeDisplay.setSessionId(session.getId());\n\t\t}\n\n\t\t// URLs\n\n\t\tString urlControlPanel = friendlyURLPrivateGroupPath.concat(\n\t\t\tGroupConstants.CONTROL_PANEL_FRIENDLY_URL);\n\n\t\tif (Validator.isNotNull(doAsUserId)) {\n\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\turlControlPanel, \"doAsUserId\", doAsUserId);\n\t\t}\n\n\t\tif (refererGroupId > 0) {\n\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\turlControlPanel, \"refererGroupId\", refererGroupId);\n\t\t}\n\t\telse if (scopeGroupId > 0) {\n\t\t\tLayout refererLayout = LayoutLocalServiceUtil.fetchLayout(plid);\n\n\t\t\tif (refererLayout != null) {\n\t\t\t\tGroup refererLayoutGroup = refererLayout.getGroup();\n\n\t\t\t\tif (refererLayoutGroup.isUserGroup()) {\n\t\t\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\t\t\turlControlPanel, \"refererGroupId\", scopeGroupId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (refererPlid > 0) {\n\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\turlControlPanel, \"refererPlid\", refererPlid);\n\t\t}\n\t\telse if (plid > 0) {\n\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\turlControlPanel, \"refererPlid\", plid);\n\t\t}\n\n\t\tif (themeDisplay.isAddSessionIdToURL()) {\n\t\t\turlControlPanel = PortalUtil.getURLWithSessionId(\n\t\t\t\turlControlPanel, session.getId());\n\t\t}\n\n\t\tthemeDisplay.setURLControlPanel(urlControlPanel);\n\n\t\tString currentURL = PortalUtil.getCurrentURL(request);\n\n\t\tthemeDisplay.setURLCurrent(currentURL);\n\n\t\tString urlHome = PortalUtil.getHomeURL(request);\n\n\t\tthemeDisplay.setURLHome(urlHome);\n\n\t\tString siteAdministrationURL = urlControlPanel;\n\n\t\tsiteAdministrationURL = HttpUtil.addParameter(\n\t\t\tsiteAdministrationURL, \"controlPanelCategory\",\n\t\t\tPortletCategoryKeys.CURRENT_SITE);\n\t\tsiteAdministrationURL = HttpUtil.addParameter(\n\t\t\tsiteAdministrationURL, \"doAsGroupId\", siteGroupId);\n\n\t\tthemeDisplay.setURLSiteAdministration(siteAdministrationURL);\n\n\t\tlong controlPanelPlid = PortalUtil.getControlPanelPlid(companyId);\n\n\t\tif (layout != null) {\n\t\t\tif (layout.isTypePortlet()) {\n\t\t\t\tboolean freeformLayout =\n\t\t\t\t\tlayoutTypePortlet.getLayoutTemplateId().equals(\"freeform\");\n\n\t\t\t\tthemeDisplay.setFreeformLayout(freeformLayout);\n\n\t\t\t\tif (hasUpdateLayoutPermission) {\n\t\t\t\t\tthemeDisplay.setShowAddContentIconPermission(true);\n\n\t\t\t\t\tif (!LiferayWindowState.isMaximized(request)) {\n\t\t\t\t\t\tthemeDisplay.setShowAddContentIcon(true);\n\t\t\t\t\t}\n\n\t\t\t\t\tthemeDisplay.setShowLayoutTemplatesIcon(true);\n\n\t\t\t\t\tif (!group.isUser()) {\n\t\t\t\t\t\tthemeDisplay.setShowPageCustomizationIcon(true);\n\t\t\t\t\t}\n\n\t\t\t\t\tthemeDisplay.setURLAddContent(\n\t\t\t\t\t\t\"Liferay.Dockbar.loadAddPanel();\");\n\t\t\t\t}\n\n\t\t\t\tif (hasCustomizeLayoutPermission && customizedView) {\n\t\t\t\t\tthemeDisplay.setShowAddContentIconPermission(true);\n\n\t\t\t\t\tif (!LiferayWindowState.isMaximized(request)) {\n\t\t\t\t\t\tthemeDisplay.setShowAddContentIcon(true);\n\t\t\t\t\t}\n\n\t\t\t\t\tthemeDisplay.setURLAddContent(\n\t\t\t\t\t\t\"Liferay.Dockbar.loadAddPanel();\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasUpdateLayoutPermission) {\n\t\t\t\tthemeDisplay.setShowPageSettingsIcon(true);\n\n\t\t\t\tLiferayPortletURL pageSettingsURL = new PortletURLImpl(\n\t\t\t\t\trequest, PortletKeys.GROUP_PAGES, controlPanelPlid,\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tpageSettingsURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\tpageSettingsURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/group_pages/edit_layouts\");\n\n\t\t\t\tif (layout.isPrivateLayout()) {\n\t\t\t\t\tpageSettingsURL.setParameter(\"tabs1\", \"private-pages\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpageSettingsURL.setParameter(\"tabs1\", \"public-pages\");\n\t\t\t\t}\n\n\t\t\t\tpageSettingsURL.setParameter(\n\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\tpageSettingsURL.setParameter(\"selPlid\", String.valueOf(plid));\n\t\t\t\tpageSettingsURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\t\tif (PropsValues.DOCKBAR_ADMINISTRATIVE_LINKS_SHOW_IN_POP_UP) {\n\t\t\t\t\tpageSettingsURL.setControlPanelCategory(\n\t\t\t\t\t\tPortletCategoryKeys.PORTLET);\n\t\t\t\t\tpageSettingsURL.setWindowState(LiferayWindowState.POP_UP);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpageSettingsURL.setParameter(\n\t\t\t\t\t\t\"redirect\", themeDisplay.getURLHome());\n\t\t\t\t\tpageSettingsURL.setPlid(plid);\n\t\t\t\t\tpageSettingsURL.setWindowState(WindowState.MAXIMIZED);\n\t\t\t\t}\n\n\t\t\t\tthemeDisplay.setURLPageSettings(pageSettingsURL);\n\n\t\t\t\tboolean site = group.isSite();\n\n\t\t\t\tif (!site && group.isStagingGroup()) {\n\t\t\t\t\tGroup liveGroup = group.getLiveGroup();\n\n\t\t\t\t\tsite = liveGroup.isSite();\n\t\t\t\t}\n\n\t\t\t\tif (site &&\n\t\t\t\t\tGroupPermissionUtil.contains(\n\t\t\t\t\t\tpermissionChecker, scopeGroupId,\n\t\t\t\t\t\tActionKeys.ASSIGN_MEMBERS)) {\n\n\t\t\t\t\tthemeDisplay.setShowManageSiteMembershipsIcon(true);\n\n\t\t\t\t\tLiferayPortletURL manageSiteMembershipsURL =\n\t\t\t\t\t\tnew PortletURLImpl(\n\t\t\t\t\t\t\trequest, PortletKeys.SITE_MEMBERSHIPS_ADMIN,\n\t\t\t\t\t\t\tcontrolPanelPlid, PortletRequest.RENDER_PHASE);\n\n\t\t\t\t\tmanageSiteMembershipsURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\"struts_action\", \"/sites_admin/edit_site_assignments\");\n\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\"selPlid\", String.valueOf(plid));\n\t\t\t\t\tmanageSiteMembershipsURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\t\t\tif (PropsValues.\n\t\t\t\t\t\t\tDOCKBAR_ADMINISTRATIVE_LINKS_SHOW_IN_POP_UP) {\n\n\t\t\t\t\t\tmanageSiteMembershipsURL.setControlPanelCategory(\n\t\t\t\t\t\t\tPortletCategoryKeys.PORTLET);\n\t\t\t\t\t\tmanageSiteMembershipsURL.setWindowState(\n\t\t\t\t\t\t\tLiferayWindowState.POP_UP);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\t\"redirect\", themeDisplay.getURLHome());\n\t\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\t\"showBackURL\", Boolean.FALSE.toString());\n\t\t\t\t\t\tmanageSiteMembershipsURL.setPlid(plid);\n\t\t\t\t\t\tmanageSiteMembershipsURL.setWindowState(\n\t\t\t\t\t\t\tWindowState.MAXIMIZED);\n\t\t\t\t\t}\n\n\t\t\t\t\tthemeDisplay.setURLManageSiteMemberships(\n\t\t\t\t\t\tmanageSiteMembershipsURL);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthemeDisplay.setShowManageSiteMembershipsIcon(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tGroup scopeGroup = GroupLocalServiceUtil.getGroup(scopeGroupId);\n\n\t\t\tboolean hasAddLayoutGroupPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.ADD_LAYOUT);\n\t\t\tboolean hasManageLayoutsGroupPermission =\n\t\t\t\tGroupPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.MANAGE_LAYOUTS);\n\t\t\tboolean hasManageStagingPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.MANAGE_STAGING);\n\t\t\tboolean hasPublishStagingPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.PUBLISH_STAGING);\n\t\t\tboolean hasUpdateGroupPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.UPDATE);\n\t\t\tboolean hasViewStagingPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.VIEW_STAGING);\n\n\t\t\tif (!group.isControlPanel() && !group.isUserPersonalPanel() &&\n\t\t\t\t!group.isUser() &&\n\t\t\t\t!group.isUserGroup() && hasUpdateGroupPermission) {\n\n\t\t\t\tthemeDisplay.setShowSiteSettingsIcon(true);\n\n\t\t\t\tLiferayPortletURL siteSettingsURL = new PortletURLImpl(\n\t\t\t\t\trequest, PortletKeys.SITE_SETTINGS, controlPanelPlid,\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tsiteSettingsURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\tsiteSettingsURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/sites_admin/edit_site\");\n\t\t\t\tsiteSettingsURL.setParameter(\n\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\tsiteSettingsURL.setParameter(\n\t\t\t\t\t\"showBackURL\", Boolean.FALSE.toString());\n\t\t\t\tsiteSettingsURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\t\tif (PropsValues.DOCKBAR_ADMINISTRATIVE_LINKS_SHOW_IN_POP_UP) {\n\t\t\t\t\tsiteSettingsURL.setControlPanelCategory(\n\t\t\t\t\t\tPortletCategoryKeys.PORTLET);\n\t\t\t\t\tsiteSettingsURL.setParameter(\"closeRedirect\", currentURL);\n\t\t\t\t\tsiteSettingsURL.setWindowState(LiferayWindowState.POP_UP);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsiteSettingsURL.setParameter(\n\t\t\t\t\t\t\"redirect\", themeDisplay.getURLHome());\n\t\t\t\t\tsiteSettingsURL.setPlid(plid);\n\t\t\t\t\tsiteSettingsURL.setWindowState(\n\t\t\t\t\t\tLiferayWindowState.MAXIMIZED);\n\t\t\t\t}\n\n\t\t\t\tthemeDisplay.setURLSiteSettings(siteSettingsURL);\n\t\t\t}\n\n\t\t\tif (!group.isLayoutPrototype() &&\n\t\t\t\t(hasAddLayoutGroupPermission || hasAddLayoutLayoutPermission ||\n\t\t\t\t hasManageLayoutsGroupPermission || hasUpdateGroupPermission)) {\n\n\t\t\t\tthemeDisplay.setShowSiteMapSettingsIcon(true);\n\n\t\t\t\tLiferayPortletURL siteMapSettingsURL = new PortletURLImpl(\n\t\t\t\t\trequest, PortletKeys.GROUP_PAGES, controlPanelPlid,\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tsiteMapSettingsURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\tsiteMapSettingsURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/group_pages/edit_layouts\");\n\n\t\t\t\tif (layout.isPrivateLayout()) {\n\t\t\t\t\tsiteMapSettingsURL.setParameter(\"tabs1\", \"private-pages\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsiteMapSettingsURL.setParameter(\"tabs1\", \"public-pages\");\n\t\t\t\t}\n\n\t\t\t\tsiteMapSettingsURL.setParameter(\n\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\tsiteMapSettingsURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\t\tif (PropsValues.DOCKBAR_ADMINISTRATIVE_LINKS_SHOW_IN_POP_UP) {\n\t\t\t\t\tsiteMapSettingsURL.setControlPanelCategory(\n\t\t\t\t\t\tPortletCategoryKeys.PORTLET);\n\t\t\t\t\tsiteMapSettingsURL.setParameter(\n\t\t\t\t\t\t\"closeRedirect\", currentURL);\n\t\t\t\t\tsiteMapSettingsURL.setWindowState(\n\t\t\t\t\t\tLiferayWindowState.POP_UP);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsiteMapSettingsURL.setParameter(\n\t\t\t\t\t\t\"redirect\", themeDisplay.getURLHome());\n\t\t\t\t\tsiteMapSettingsURL.setPlid(plid);\n\t\t\t\t\tsiteMapSettingsURL.setWindowState(\n\t\t\t\t\t\tLiferayWindowState.MAXIMIZED);\n\t\t\t\t}\n\n\t\t\t\tthemeDisplay.setURLSiteMapSettings(siteMapSettingsURL);\n\t\t\t}\n\n\t\t\tif (group.hasStagingGroup() && !group.isStagingGroup()) {\n\t\t\t\tthemeDisplay.setShowAddContentIcon(false);\n\t\t\t\tthemeDisplay.setShowLayoutTemplatesIcon(false);\n\t\t\t\tthemeDisplay.setURLPublishToLive(null);\n\t\t\t}\n\n\t\t\tif (group.isControlPanel() || group.isUserPersonalPanel()) {\n\t\t\t\tthemeDisplay.setShowPageSettingsIcon(false);\n\t\t\t\tthemeDisplay.setURLPublishToLive(null);\n\t\t\t}\n\n\t\t\t// LEP-4987\n\n\t\t\tif (group.isStaged() || group.isStagingGroup()) {\n\t\t\t\tif (hasManageStagingPermission || hasPublishStagingPermission ||\n\t\t\t\t\thasUpdateLayoutPermission || hasViewStagingPermission) {\n\n\t\t\t\t\tthemeDisplay.setShowStagingIcon(true);\n\t\t\t\t}\n\n\t\t\t\tif (hasPublishStagingPermission) {\n\t\t\t\t\tPortletURL publishToLiveURL = new PortletURLImpl(\n\t\t\t\t\t\trequest, PortletKeys.LAYOUTS_ADMIN, plid,\n\t\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\t\tpublishToLiveURL.setParameter(\n\t\t\t\t\t\t\"struts_action\", \"/layouts_admin/publish_layouts\");\n\n\t\t\t\t\tif (layout.isPrivateLayout()) {\n\t\t\t\t\t\tpublishToLiveURL.setParameter(\"tabs1\", \"private-pages\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpublishToLiveURL.setParameter(\"tabs1\", \"public-pages\");\n\t\t\t\t\t}\n\n\t\t\t\t\tpublishToLiveURL.setParameter(\n\t\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\t\tpublishToLiveURL.setParameter(\n\t\t\t\t\t\t\"selPlid\", String.valueOf(plid));\n\t\t\t\t\tpublishToLiveURL.setPortletMode(PortletMode.VIEW);\n\t\t\t\t\tpublishToLiveURL.setWindowState(\n\t\t\t\t\t\tLiferayWindowState.EXCLUSIVE);\n\n\t\t\t\t\tthemeDisplay.setURLPublishToLive(publishToLiveURL);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tPortlet myAccountPortlet = PortalUtil.getFirstMyAccountPortlet(\n\t\t\t\tthemeDisplay);\n\n\t\t\tif (myAccountPortlet != null) {\n\t\t\t\tPortletURLImpl myAccountURL = new PortletURLImpl(\n\t\t\t\t\trequest, myAccountPortlet.getPortletId(), controlPanelPlid,\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tif (signedIn) {\n\t\t\t\t\tmyAccountURL.setDoAsGroupId(user.getGroupId());\n\t\t\t\t}\n\t\t\t\telse if (scopeGroupId > 0) {\n\t\t\t\t\tmyAccountURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\t}\n\n\t\t\t\tif (refererPlid > 0) {\n\t\t\t\t\tmyAccountURL.setRefererPlid(refererPlid);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmyAccountURL.setRefererPlid(plid);\n\t\t\t\t}\n\n\t\t\t\tmyAccountURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\t\t\tthemeDisplay.setURLMyAccount(myAccountURL);\n\t\t\t}\n\t\t}\n\n\t\tif (!user.isActive() ||\n\t\t\t(PrefsPropsUtil.getBoolean(\n\t\t\t\tcompanyId, PropsKeys.TERMS_OF_USE_REQUIRED) &&\n\t\t\t !user.isAgreedToTermsOfUse())) {\n\n\t\t\tthemeDisplay.setShowAddContentIcon(false);\n\t\t\tthemeDisplay.setShowMyAccountIcon(false);\n\t\t\tthemeDisplay.setShowPageSettingsIcon(false);\n\t\t}\n\n\t\tif ((layout != null) && layout.isLayoutPrototypeLinkActive()) {\n\t\t\tthemeDisplay.setShowPageCustomizationIcon(false);\n\t\t}\n\n\t\tif (group.isLayoutPrototype()) {\n\t\t\tthemeDisplay.setShowHomeIcon(false);\n\t\t\tthemeDisplay.setShowManageSiteMembershipsIcon(false);\n\t\t\tthemeDisplay.setShowMyAccountIcon(false);\n\t\t\tthemeDisplay.setShowPageCustomizationIcon(false);\n\t\t\tthemeDisplay.setShowPageSettingsIcon(true);\n\t\t\tthemeDisplay.setShowPortalIcon(false);\n\t\t\tthemeDisplay.setShowSignInIcon(false);\n\t\t\tthemeDisplay.setShowSignOutIcon(false);\n\t\t\tthemeDisplay.setShowSiteAdministrationIcon(false);\n\t\t\tthemeDisplay.setShowSiteSettingsIcon(false);\n\t\t\tthemeDisplay.setShowStagingIcon(false);\n\t\t}\n\n\t\tif (group.isLayoutSetPrototype()) {\n\t\t\tthemeDisplay.setShowPageCustomizationIcon(false);\n\t\t\tthemeDisplay.setShowSiteSettingsIcon(false);\n\t\t}\n\n\t\tif (group.hasStagingGroup() && !group.isStagingGroup()) {\n\t\t\tthemeDisplay.setShowLayoutTemplatesIcon(false);\n\t\t\tthemeDisplay.setShowPageCustomizationIcon(false);\n\t\t\tthemeDisplay.setShowSiteMapSettingsIcon(false);\n\t\t\tthemeDisplay.setShowSiteSettingsIcon(false);\n\t\t}\n\n\t\tthemeDisplay.setURLPortal(portalURL.concat(contextPath));\n\n\t\tboolean secure = false;\n\n\t\tif (PropsValues.COMPANY_SECURITY_AUTH_REQUIRES_HTTPS ||\n\t\t\trequest.isSecure()) {\n\n\t\t\tsecure = true;\n\t\t}\n\n\t\tString securePortalURL = PortalUtil.getPortalURL(request, secure);\n\n\t\tString urlSignIn = securePortalURL.concat(mainPath).concat(\n\t\t\t_PATH_PORTAL_LOGIN);\n\n\t\tif (layout != null) {\n\t\t\turlSignIn = HttpUtil.addParameter(\n\t\t\t\turlSignIn, \"p_l_id\", layout.getPlid());\n\t\t}\n\n\t\tthemeDisplay.setURLSignIn(urlSignIn);\n\n\t\tthemeDisplay.setURLSignOut(mainPath.concat(_PATH_PORTAL_LOGOUT));\n\n\t\tPortletURL updateManagerURL = new PortletURLImpl(\n\t\t\trequest, PortletKeys.MARKETPLACE_STORE, controlPanelPlid,\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tthemeDisplay.setURLUpdateManager(updateManagerURL);\n\n\t\treturn themeDisplay;\n\t}","id":48560,"modified_method":"public ThemeDisplay initThemeDisplay(\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\tthrows Exception {\n\n\t\tHttpSession session = request.getSession();\n\n\t\t// Company\n\n\t\tCompany company = PortalUtil.getCompany(request);\n\n\t\tlong companyId = company.getCompanyId();\n\n\t\t// CDN host\n\n\t\tString cdnHost = PortalUtil.getCDNHost(request);\n\n\t\tString dynamicResourcesCDNHost = StringPool.BLANK;\n\n\t\tboolean cdnDynamicResourceEnabled =\n\t\t\tPortalUtil.isCDNDynamicResourcesEnabled(request);\n\n\t\tif (cdnDynamicResourceEnabled) {\n\t\t\tdynamicResourcesCDNHost = cdnHost;\n\t\t}\n\n\t\t// Portal URL\n\n\t\tString portalURL = PortalUtil.getPortalURL(request);\n\n\t\t// Paths\n\n\t\tString contextPath = PortalUtil.getPathContext();\n\t\tString friendlyURLPrivateGroupPath =\n\t\t\tPortalUtil.getPathFriendlyURLPrivateGroup();\n\t\tString friendlyURLPrivateUserPath =\n\t\t\tPortalUtil.getPathFriendlyURLPrivateUser();\n\t\tString friendlyURLPublicPath = PortalUtil.getPathFriendlyURLPublic();\n\t\tString imagePath = dynamicResourcesCDNHost.concat(\n\t\t\tPortalUtil.getPathImage());\n\t\tString mainPath = PortalUtil.getPathMain();\n\n\t\tString i18nPath = (String)request.getAttribute(WebKeys.I18N_PATH);\n\n\t\tif (Validator.isNotNull(i18nPath)) {\n\t\t\tif (Validator.isNotNull(contextPath)) {\n\t\t\t\tString i18nContextPath = contextPath.concat(i18nPath);\n\n\t\t\t\tfriendlyURLPrivateGroupPath = StringUtil.replaceFirst(\n\t\t\t\t\tfriendlyURLPrivateGroupPath, contextPath, i18nContextPath);\n\t\t\t\tfriendlyURLPrivateUserPath = StringUtil.replaceFirst(\n\t\t\t\t\tfriendlyURLPrivateUserPath, contextPath, i18nContextPath);\n\t\t\t\tfriendlyURLPublicPath = StringUtil.replaceFirst(\n\t\t\t\t\tfriendlyURLPublicPath, contextPath, i18nContextPath);\n\t\t\t\tmainPath = StringUtil.replaceFirst(\n\t\t\t\t\tmainPath, contextPath, i18nContextPath);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfriendlyURLPrivateGroupPath = i18nPath.concat(\n\t\t\t\t\tfriendlyURLPrivateGroupPath);\n\t\t\t\tfriendlyURLPrivateUserPath = i18nPath.concat(\n\t\t\t\t\tfriendlyURLPrivateUserPath);\n\t\t\t\tfriendlyURLPublicPath = i18nPath.concat(friendlyURLPublicPath);\n\t\t\t\tmainPath = i18nPath.concat(mainPath);\n\t\t\t}\n\t\t}\n\n\t\t// Company logo\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(imagePath);\n\t\tsb.append(\"/company_logo?img_id=\");\n\t\tsb.append(company.getLogoId());\n\t\tsb.append(\"&t=\");\n\t\tsb.append(WebServerServletTokenUtil.getToken(company.getLogoId()));\n\n\t\tString companyLogo = sb.toString();\n\n\t\tint companyLogoHeight = 0;\n\t\tint companyLogoWidth = 0;\n\n\t\tImage companyLogoImage = null;\n\n\t\tif (company.getLogoId() > 0) {\n\t\t\tcompanyLogoImage = ImageLocalServiceUtil.getCompanyLogo(\n\t\t\t\tcompany.getLogoId());\n\t\t}\n\t\telse {\n\t\t\tcompanyLogoImage = ImageToolUtil.getDefaultCompanyLogo();\n\t\t}\n\n\t\tif (companyLogoImage != null) {\n\t\t\tcompanyLogoHeight = companyLogoImage.getHeight();\n\t\t\tcompanyLogoWidth = companyLogoImage.getWidth();\n\t\t}\n\n\t\tString realCompanyLogo = companyLogo;\n\t\tint realCompanyLogoHeight = companyLogoHeight;\n\t\tint realCompanyLogoWidth = companyLogoWidth;\n\n\t\t// User\n\n\t\tUser user = null;\n\n\t\ttry {\n\t\t\tuser = PortalUtil.initUser(request);\n\t\t}\n\t\tcatch (NoSuchUserException nsue) {\n\t\t\treturn null;\n\t\t}\n\n\t\tboolean signedIn = !user.isDefaultUser();\n\n\t\tif (PropsValues.BROWSER_CACHE_DISABLED ||\n\t\t\t(PropsValues.BROWSER_CACHE_SIGNED_IN_DISABLED && signedIn)) {\n\n\t\t\tresponse.setDateHeader(HttpHeaders.EXPIRES, 0);\n\t\t\tresponse.setHeader(\n\t\t\t\tHttpHeaders.CACHE_CONTROL,\n\t\t\t\tHttpHeaders.CACHE_CONTROL_NO_CACHE_VALUE);\n\t\t\tresponse.setHeader(\n\t\t\t\tHttpHeaders.PRAGMA, HttpHeaders.PRAGMA_NO_CACHE_VALUE);\n\t\t}\n\n\t\tUser realUser = user;\n\n\t\tLong realUserId = (Long)session.getAttribute(WebKeys.USER_ID);\n\n\t\tif (realUserId != null) {\n\t\t\tif (user.getUserId() != realUserId.longValue()) {\n\t\t\t\trealUser = UserLocalServiceUtil.getUserById(\n\t\t\t\t\trealUserId.longValue());\n\t\t\t}\n\t\t}\n\n\t\tString doAsUserId = ParamUtil.getString(request, \"doAsUserId\");\n\t\tString doAsUserLanguageId = ParamUtil.getString(\n\t\t\trequest, \"doAsUserLanguageId\");\n\t\tlong doAsGroupId = ParamUtil.getLong(request, \"doAsGroupId\");\n\n\t\tlong refererGroupId = ParamUtil.getLong(request, \"refererGroupId\");\n\n\t\tlong refererPlid = ParamUtil.getLong(request, \"refererPlid\");\n\n\t\tif (LayoutLocalServiceUtil.fetchLayout(refererPlid) == null) {\n\t\t\trefererPlid = 0;\n\t\t}\n\n\t\tString controlPanelCategory = ParamUtil.getString(\n\t\t\trequest, \"controlPanelCategory\");\n\n\t\t// Permission checker\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tPermissionCheckerFactoryUtil.create(user);\n\n\t\tPermissionThreadLocal.setPermissionChecker(permissionChecker);\n\n\t\t// Cookie support\n\n\t\ttry {\n\n\t\t\t// LEP-4069\n\n\t\t\tCookieKeys.validateSupportCookie(request);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tCookieKeys.addSupportCookie(request, response);\n\t\t}\n\n\t\t// Time zone\n\n\t\tTimeZone timeZone = user.getTimeZone();\n\n\t\tif (timeZone == null) {\n\t\t\ttimeZone = company.getTimeZone();\n\t\t}\n\n\t\t// Layouts\n\n\t\tif (signedIn) {\n\t\t\tupdateUserLayouts(user);\n\t\t}\n\n\t\tLayout layout = null;\n\t\tList<Layout> layouts = null;\n\n\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\n\t\tboolean viewableSourceGroup = true;\n\n\t\tif (plid > 0) {\n\t\t\tlayout = LayoutLocalServiceUtil.getLayout(plid);\n\t\t}\n\t\telse {\n\t\t\tlong groupId = ParamUtil.getLong(request, \"groupId\");\n\t\t\tboolean privateLayout = ParamUtil.getBoolean(\n\t\t\t\trequest, \"privateLayout\");\n\t\t\tlong layoutId = ParamUtil.getLong(request, \"layoutId\");\n\n\t\t\tif ((groupId > 0) && (layoutId > 0)) {\n\t\t\t\tlayout = LayoutLocalServiceUtil.getLayout(\n\t\t\t\t\tgroupId, privateLayout, layoutId);\n\t\t\t}\n\t\t}\n\n\t\tif (layout != null) {\n\t\t\tlong sourceGroupId = ParamUtil.getLong(request, \"p_v_l_s_g_id\");\n\n\t\t\tif ((sourceGroupId > 0) && (sourceGroupId != layout.getGroupId())) {\n\t\t\t\tGroup sourceGroup = GroupLocalServiceUtil.getGroup(\n\t\t\t\t\tsourceGroupId);\n\n\t\t\t\tif (layout.isPublicLayout() ||\n\t\t\t\t\tSitesUtil.isUserGroupLayoutSetViewable(\n\t\t\t\t\t\tpermissionChecker, layout.getGroup())) {\n\n\t\t\t\t\tlayout = new VirtualLayout(layout, sourceGroup);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tviewableSourceGroup = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tString ppid = ParamUtil.getString(request, \"p_p_id\");\n\n\t\tBoolean redirectToDefaultLayout = (Boolean)request.getAttribute(\n\t\t\tWebKeys.REDIRECT_TO_DEFAULT_LAYOUT);\n\n\t\tif (redirectToDefaultLayout == null) {\n\t\t\tredirectToDefaultLayout = Boolean.FALSE;\n\t\t}\n\n\t\tif (layout != null) {\n\t\t\tGroup group = layout.getGroup();\n\n\t\t\tif (!signedIn && PropsValues.AUTH_FORWARD_BY_REDIRECT) {\n\t\t\t\trequest.setAttribute(WebKeys.REQUESTED_LAYOUT, layout);\n\t\t\t}\n\n\t\t\tif ((Validator.isNull(controlPanelCategory) ||\n\t\t\t\t controlPanelCategory.equals(PortletCategoryKeys.MY) ||\n\t\t\t\t controlPanelCategory.equals(PortletCategoryKeys.PORTLET)) &&\n\t\t\t\tValidator.isNotNull(ppid) &&\n\t\t\t\t(LiferayWindowState.isPopUp(request) ||\n\t\t\t\t LiferayWindowState.isExclusive(request))) {\n\n\t\t\t\tcontrolPanelCategory = PortletCategoryKeys.PORTLET;\n\t\t\t}\n\t\t\telse if (Validator.isNotNull(ppid)) {\n\t\t\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\t\t\tcompanyId, ppid);\n\n\t\t\t\tString portletControlPanelEntryCategory =\n\t\t\t\t\tportlet.getControlPanelEntryCategory();\n\n\t\t\t\tif (!controlPanelCategory.startsWith(\n\t\t\t\t\t\tPortletCategoryKeys.CURRENT_SITE) &&\n\t\t\t\t\tportletControlPanelEntryCategory.startsWith(\n\t\t\t\t\t\tPortletCategoryKeys.SITE_ADMINISTRATION)) {\n\n\t\t\t\t\tportletControlPanelEntryCategory =\n\t\t\t\t\t\tPortletCategoryKeys.SITES;\n\t\t\t\t}\n\n\t\t\t\tif (!controlPanelCategory.startsWith(\n\t\t\t\t\t\tPortletCategoryKeys.CURRENT_SITE) &&\n\t\t\t\t\tValidator.isNotNull(portletControlPanelEntryCategory)) {\n\n\t\t\t\t\tcontrolPanelCategory = portletControlPanelEntryCategory;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tboolean viewableGroup = hasAccessPermission(\n\t\t\t\tpermissionChecker, layout, doAsGroupId, controlPanelCategory,\n\t\t\t\ttrue);\n\t\t\tboolean viewableStaging =\n\t\t\t\t!group.isControlPanel() &&\n\t\t\t\tGroupPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, group, ActionKeys.VIEW_STAGING);\n\n\t\t\tif (viewableStaging) {\n\t\t\t\tlayouts = LayoutLocalServiceUtil.getLayouts(\n\t\t\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\t\t\tLayoutConstants.DEFAULT_PARENT_LAYOUT_ID);\n\t\t\t}\n\t\t\telse if ((!viewableGroup || !viewableSourceGroup) &&\n\t\t\t\t\t group.isStagingGroup()) {\n\n\t\t\t\tlayout = null;\n\t\t\t}\n\t\t\telse if (!isLoginRequest(request) &&\n\t\t\t\t\t (!viewableGroup || !viewableSourceGroup ||\n\t\t\t\t\t  (!redirectToDefaultLayout &&\n\t\t\t\t\t   !hasAccessPermission(\n\t\t\t\t\t\t   permissionChecker, layout, doAsGroupId,\n\t\t\t\t\t\t   controlPanelCategory, false)))) {\n\n\t\t\t\tif (user.isDefaultUser() &&\n\t\t\t\t\tPropsValues.AUTH_LOGIN_PROMPT_ENABLED) {\n\n\t\t\t\t\tthrow new PrincipalException(\"User is not authenticated\");\n\t\t\t\t}\n\n\t\t\t\tsb = new StringBundler(6);\n\n\t\t\t\tsb.append(\"User \");\n\t\t\t\tsb.append(user.getUserId());\n\t\t\t\tsb.append(\" is not allowed to access the \");\n\t\t\t\tsb.append(layout.isPrivateLayout() ? \"private\": \"public\");\n\t\t\t\tsb.append(\" pages of group \");\n\t\t\t\tsb.append(layout.getGroupId());\n\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(sb.toString());\n\t\t\t\t}\n\n\t\t\t\tthrow new NoSuchLayoutException(sb.toString());\n\t\t\t}\n\t\t\telse if (isLoginRequest(request) && !viewableGroup) {\n\t\t\t\tlayout = null;\n\t\t\t}\n\t\t\telse if (group.isLayoutPrototype()) {\n\t\t\t\tlayouts = new ArrayList<>();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlayouts = LayoutLocalServiceUtil.getLayouts(\n\t\t\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\t\t\tLayoutConstants.DEFAULT_PARENT_LAYOUT_ID);\n\n\t\t\t\tif (!group.isControlPanel() && !group.isUserPersonalPanel()) {\n\t\t\t\t\tdoAsGroupId = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tList<Layout> unfilteredLayouts = layouts;\n\n\t\tif (layout == null) {\n\t\t\tObject[] defaultLayout = getDefaultLayout(request, user, signedIn);\n\n\t\t\tlayout = (Layout)defaultLayout[0];\n\t\t\tlayouts = (List<Layout>)defaultLayout[1];\n\n\t\t\trequest.setAttribute(WebKeys.LAYOUT_DEFAULT, Boolean.TRUE);\n\t\t}\n\n\t\tObject[] viewableLayouts = getViewableLayouts(\n\t\t\trequest, user, permissionChecker, layout, layouts, doAsGroupId,\n\t\t\tcontrolPanelCategory);\n\n\t\tString layoutSetLogo = null;\n\n\t\tlayout = (Layout)viewableLayouts[0];\n\t\tlayouts = (List<Layout>)viewableLayouts[1];\n\n\t\tGroup group = null;\n\n\t\tif (layout != null) {\n\t\t\tgroup = layout.getGroup();\n\n\t\t\tif (!group.isControlPanel()) {\n\t\t\t\trememberVisitedGroupIds(request, group.getGroupId());\n\t\t\t}\n\t\t}\n\n\t\tLayoutTypePortlet layoutTypePortlet = null;\n\n\t\tlayouts = mergeAdditionalLayouts(\n\t\t\trequest, user, permissionChecker, layout, layouts, doAsGroupId,\n\t\t\tcontrolPanelCategory);\n\n\t\tLayoutSet layoutSet = null;\n\n\t\tboolean hasAddLayoutLayoutPermission = false;\n\t\tboolean hasCustomizeLayoutPermission = false;\n\t\tboolean hasDeleteLayoutPermission = false;\n\t\tboolean hasUpdateLayoutPermission = false;\n\n\t\tboolean customizedView = SessionParamUtil.getBoolean(\n\t\t\trequest, \"customized_view\", true);\n\n\t\tif (layout != null) {\n\t\t\tLayoutType layoutType = layout.getLayoutType();\n\n\t\t\tLayoutTypeAccessPolicy layoutTypeAccessPolicy =\n\t\t\t\tlayoutType.getLayoutTypeAccessPolicy();\n\n\t\t\thasAddLayoutLayoutPermission =\n\t\t\t\tlayoutTypeAccessPolicy.isAddLayoutAllowed(\n\t\t\t\t\tpermissionChecker, layout);\n\t\t\thasCustomizeLayoutPermission =\n\t\t\t\tlayoutTypeAccessPolicy.isCustomizeLayoutAllowed(\n\t\t\t\t\tpermissionChecker, layout);\n\t\t\thasDeleteLayoutPermission =\n\t\t\t\tlayoutTypeAccessPolicy.isDeleteLayoutAllowed(\n\t\t\t\t\tpermissionChecker, layout);\n\t\t\thasUpdateLayoutPermission =\n\t\t\t\tlayoutTypeAccessPolicy.isUpdateLayoutAllowed(\n\t\t\t\t\tpermissionChecker, layout);\n\n\t\t\tlayoutSet = layout.getLayoutSet();\n\n\t\t\tif (company.isSiteLogo()) {\n\t\t\t\tlong logoId = 0;\n\n\t\t\t\tif (layoutSet.isLogo()) {\n\t\t\t\t\tlogoId = layoutSet.getLogoId();\n\n\t\t\t\t\tif (logoId == 0) {\n\t\t\t\t\t\tlogoId = layoutSet.getLiveLogoId();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tLayoutSet siblingLayoutSet =\n\t\t\t\t\t\tLayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\t\t\t\t\tlayout.getGroupId(), !layout.isPrivateLayout());\n\n\t\t\t\t\tif (siblingLayoutSet.isLogo()) {\n\t\t\t\t\t\tlogoId = siblingLayoutSet.getLogoId();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (logoId > 0) {\n\t\t\t\t\tsb = new StringBundler(5);\n\n\t\t\t\t\tsb.append(imagePath);\n\t\t\t\t\tsb.append(\"/layout_set_logo?img_id=\");\n\t\t\t\t\tsb.append(logoId);\n\t\t\t\t\tsb.append(\"&t=\");\n\t\t\t\t\tsb.append(WebServerServletTokenUtil.getToken(logoId));\n\n\t\t\t\t\tlayoutSetLogo = sb.toString();\n\n\t\t\t\t\tImage layoutSetLogoImage =\n\t\t\t\t\t\tImageLocalServiceUtil.getCompanyLogo(logoId);\n\n\t\t\t\t\tcompanyLogo = layoutSetLogo;\n\t\t\t\t\tcompanyLogoHeight = layoutSetLogoImage.getHeight();\n\t\t\t\t\tcompanyLogoWidth = layoutSetLogoImage.getWidth();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplid = layout.getPlid();\n\n\t\t\t// Updates to shared layouts are not reflected until the next time\n\t\t\t// the user logs in because group layouts are cached in the session\n\n\t\t\tlayout = (Layout)layout.clone();\n\n\t\t\tlayoutTypePortlet = (LayoutTypePortlet)layout.getLayoutType();\n\n\t\t\tboolean customizable = layoutTypePortlet.isCustomizable();\n\n\t\t\tif (!customizable ||\n\t\t\t\tgroup.isLayoutPrototype() || group.isLayoutSetPrototype() ||\n\t\t\t\tgroup.isStagingGroup()) {\n\n\t\t\t\tcustomizedView = false;\n\t\t\t}\n\n\t\t\tlayoutTypePortlet.setCustomizedView(customizedView);\n\t\t\tlayoutTypePortlet.setUpdatePermission(hasUpdateLayoutPermission);\n\n\t\t\tif (signedIn && customizable && customizedView &&\n\t\t\t\thasCustomizeLayoutPermission) {\n\n\t\t\t\tPortalPreferences portalPreferences =\n\t\t\t\t\tPortletPreferencesFactoryUtil.getPortalPreferences(\n\t\t\t\t\t\tuser.getUserId(), true);\n\n\t\t\t\tlayoutTypePortlet.setPortalPreferences(portalPreferences);\n\t\t\t}\n\n\t\t\tLayoutClone layoutClone = LayoutCloneFactory.getInstance();\n\n\t\t\tif (layoutClone != null) {\n\t\t\t\tString typeSettings = layoutClone.get(request, plid);\n\n\t\t\t\tif (typeSettings != null) {\n\t\t\t\t\tUnicodeProperties typeSettingsProperties =\n\t\t\t\t\t\tnew UnicodeProperties(true);\n\n\t\t\t\t\ttypeSettingsProperties.load(typeSettings);\n\n\t\t\t\t\tString stateMax = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.STATE_MAX);\n\t\t\t\t\tString stateMin = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.STATE_MIN);\n\t\t\t\t\tString modeAbout = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_ABOUT);\n\t\t\t\t\tString modeConfig = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_CONFIG);\n\t\t\t\t\tString modeEdit = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_EDIT);\n\t\t\t\t\tString modeEditDefaults =\n\t\t\t\t\t\ttypeSettingsProperties.getProperty(\n\t\t\t\t\t\t\tLayoutTypePortletConstants.MODE_EDIT_DEFAULTS);\n\t\t\t\t\tString modeEditGuest = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_EDIT_GUEST);\n\t\t\t\t\tString modeHelp = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_HELP);\n\t\t\t\t\tString modePreview = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_PREVIEW);\n\t\t\t\t\tString modePrint = typeSettingsProperties.getProperty(\n\t\t\t\t\t\tLayoutTypePortletConstants.MODE_PRINT);\n\n\t\t\t\t\tlayoutTypePortlet.setStateMax(stateMax);\n\t\t\t\t\tlayoutTypePortlet.setStateMin(stateMin);\n\t\t\t\t\tlayoutTypePortlet.setModeAbout(modeAbout);\n\t\t\t\t\tlayoutTypePortlet.setModeConfig(modeConfig);\n\t\t\t\t\tlayoutTypePortlet.setModeEdit(modeEdit);\n\t\t\t\t\tlayoutTypePortlet.setModeEditDefaults(modeEditDefaults);\n\t\t\t\t\tlayoutTypePortlet.setModeEditGuest(modeEditGuest);\n\t\t\t\t\tlayoutTypePortlet.setModeHelp(modeHelp);\n\t\t\t\t\tlayoutTypePortlet.setModePreview(modePreview);\n\t\t\t\t\tlayoutTypePortlet.setModePrint(modePrint);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trequest.setAttribute(WebKeys.LAYOUT, layout);\n\t\t\trequest.setAttribute(WebKeys.LAYOUTS, layouts);\n\t\t}\n\n\t\t// Locale\n\n\t\tString i18nLanguageId = (String)request.getAttribute(\n\t\t\tWebKeys.I18N_LANGUAGE_ID);\n\n\t\tLocale locale = PortalUtil.getLocale(request, response, true);\n\n\t\t// Scope\n\n\t\tlong scopeGroupId = PortalUtil.getScopeGroupId(request);\n\n\t\tif (group.isInheritContent()) {\n\t\t\tscopeGroupId = group.getParentGroupId();\n\t\t}\n\n\t\tif ((scopeGroupId <= 0) && (doAsGroupId > 0)) {\n\t\t\tscopeGroupId = doAsGroupId;\n\t\t}\n\n\t\tlong siteGroupId = 0;\n\n\t\tif (layout != null) {\n\t\t\tif (layout.isTypeControlPanel() ||\n\t\t\t\tlayout.isTypeUserPersonalPanel()) {\n\n\t\t\t\tsiteGroupId = PortalUtil.getSiteGroupId(scopeGroupId);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsiteGroupId = PortalUtil.getSiteGroupId(layout.getGroupId());\n\t\t\t}\n\t\t}\n\n\t\t// Theme and color scheme\n\n\t\tTheme theme = null;\n\t\tColorScheme colorScheme = null;\n\n\t\tboolean wapTheme = BrowserSnifferUtil.isWap(request);\n\n\t\tif ((layout != null) &&\n\t\t\t(group.isControlPanel() || group.isUserPersonalPanel())) {\n\n\t\t\tString themeId = PrefsPropsUtil.getString(\n\t\t\t\tcompanyId, PropsKeys.CONTROL_PANEL_LAYOUT_REGULAR_THEME_ID);\n\t\t\tString colorSchemeId =\n\t\t\t\tColorSchemeFactoryUtil.getDefaultRegularColorSchemeId();\n\n\t\t\ttheme = ThemeLocalServiceUtil.getTheme(\n\t\t\t\tcompanyId, themeId, wapTheme);\n\t\t\tcolorScheme = ThemeLocalServiceUtil.getColorScheme(\n\t\t\t\tcompanyId, theme.getThemeId(), colorSchemeId, wapTheme);\n\n\t\t\tif (!wapTheme && theme.isWapTheme()) {\n\t\t\t\ttheme = ThemeLocalServiceUtil.getTheme(\n\t\t\t\t\tcompanyId,\n\t\t\t\t\tPropsValues.CONTROL_PANEL_LAYOUT_REGULAR_THEME_ID, false);\n\t\t\t\tcolorScheme = ThemeLocalServiceUtil.getColorScheme(\n\t\t\t\t\tcompanyId, theme.getThemeId(), colorSchemeId, false);\n\t\t\t}\n\n\t\t\trequest.setAttribute(WebKeys.THEME, theme);\n\t\t\trequest.setAttribute(WebKeys.COLOR_SCHEME, colorScheme);\n\t\t}\n\n\t\tboolean themeCssFastLoad = PropsValues.THEME_CSS_FAST_LOAD;\n\n\t\tif (PropsValues.THEME_CSS_FAST_LOAD_CHECK_REQUEST_PARAMETER) {\n\t\t\tthemeCssFastLoad = SessionParamUtil.getBoolean(\n\t\t\t\trequest, \"css_fast_load\", PropsValues.THEME_CSS_FAST_LOAD);\n\t\t}\n\n\t\tboolean themeImagesFastLoad = PropsValues.THEME_IMAGES_FAST_LOAD;\n\n\t\tif (PropsValues.THEME_IMAGES_FAST_LOAD_CHECK_REQUEST_PARAMETER) {\n\t\t\tSessionParamUtil.getBoolean(\n\t\t\t\trequest, \"images_fast_load\",\n\t\t\t\tPropsValues.THEME_IMAGES_FAST_LOAD);\n\t\t}\n\n\t\tboolean themeJsBarebone = PropsValues.JAVASCRIPT_BAREBONE_ENABLED;\n\n\t\tif (themeJsBarebone) {\n\t\t\tif (signedIn) {\n\t\t\t\tthemeJsBarebone = false;\n\t\t\t}\n\t\t}\n\n\t\tboolean themeJsFastLoad = SessionParamUtil.getBoolean(\n\t\t\trequest, \"js_fast_load\", PropsValues.JAVASCRIPT_FAST_LOAD);\n\n\t\tString lifecycle = ParamUtil.getString(request, \"p_p_lifecycle\", \"0\");\n\n\t\tlifecycle = ParamUtil.getString(request, \"p_t_lifecycle\", lifecycle);\n\n\t\tboolean isolated = ParamUtil.getBoolean(request, \"p_p_isolated\");\n\n\t\tString facebookCanvasPageURL = (String)request.getAttribute(\n\t\t\tWebKeys.FACEBOOK_CANVAS_PAGE_URL);\n\n\t\tboolean widget = false;\n\n\t\tBoolean widgetObj = (Boolean)request.getAttribute(WebKeys.WIDGET);\n\n\t\tif (widgetObj != null) {\n\t\t\twidget = widgetObj.booleanValue();\n\t\t}\n\n\t\t// Theme display\n\n\t\tThemeDisplay themeDisplay = ThemeDisplayFactory.create();\n\n\t\tthemeDisplay.setRequest(request);\n\n\t\t// Set attributes first that other methods (getCDNBaseURL and\n\t\t// setLookAndFeel) depend on\n\n\t\tthemeDisplay.setCDNHost(cdnHost);\n\t\tthemeDisplay.setCDNDynamicResourcesHost(dynamicResourcesCDNHost);\n\t\tthemeDisplay.setFacebookCanvasPageURL(facebookCanvasPageURL);\n\t\tthemeDisplay.setPortalURL(portalURL);\n\t\tthemeDisplay.setRefererPlid(refererPlid);\n\t\tthemeDisplay.setSecure(request.isSecure());\n\t\tthemeDisplay.setServerName(request.getServerName());\n\t\tthemeDisplay.setServerPort(request.getServerPort());\n\t\tthemeDisplay.setWidget(widget);\n\n\t\tthemeDisplay.setCompany(company);\n\t\tthemeDisplay.setCompanyLogo(companyLogo);\n\t\tthemeDisplay.setCompanyLogoHeight(companyLogoHeight);\n\t\tthemeDisplay.setCompanyLogoWidth(companyLogoWidth);\n\t\tthemeDisplay.setControlPanelCategory(controlPanelCategory);\n\t\tthemeDisplay.setDoAsGroupId(doAsGroupId);\n\t\tthemeDisplay.setDoAsUserId(doAsUserId);\n\t\tthemeDisplay.setDoAsUserLanguageId(doAsUserLanguageId);\n\t\tthemeDisplay.setI18nLanguageId(i18nLanguageId);\n\t\tthemeDisplay.setI18nPath(i18nPath);\n\t\tthemeDisplay.setIsolated(isolated);\n\t\tthemeDisplay.setLanguageId(LocaleUtil.toLanguageId(locale));\n\t\tthemeDisplay.setLayout(layout);\n\t\tthemeDisplay.setLayouts(layouts);\n\t\tthemeDisplay.setLayoutSet(layoutSet);\n\t\tthemeDisplay.setLayoutSetLogo(layoutSetLogo);\n\t\tthemeDisplay.setLayoutTypePortlet(layoutTypePortlet);\n\t\tthemeDisplay.setLifecycle(lifecycle);\n\t\tthemeDisplay.setLifecycleAction(lifecycle.equals(\"1\"));\n\t\tthemeDisplay.setLifecycleEvent(lifecycle.equals(\"3\"));\n\t\tthemeDisplay.setLifecycleRender(lifecycle.equals(\"0\"));\n\t\tthemeDisplay.setLifecycleResource(lifecycle.equals(\"2\"));\n\t\tthemeDisplay.setLocale(locale);\n\t\tthemeDisplay.setLookAndFeel(theme, colorScheme);\n\t\tthemeDisplay.setPathApplet(contextPath.concat(\"/applets\"));\n\t\tthemeDisplay.setPathCms(contextPath.concat(\"/cms\"));\n\t\tthemeDisplay.setPathContext(contextPath);\n\t\tthemeDisplay.setPathFlash(contextPath.concat(\"/flash\"));\n\t\tthemeDisplay.setPathFriendlyURLPrivateGroup(\n\t\t\tfriendlyURLPrivateGroupPath);\n\t\tthemeDisplay.setPathFriendlyURLPrivateUser(friendlyURLPrivateUserPath);\n\t\tthemeDisplay.setPathFriendlyURLPublic(friendlyURLPublicPath);\n\t\tthemeDisplay.setPathImage(imagePath);\n\t\tthemeDisplay.setPathJavaScript(\n\t\t\tPortalWebResourcesUtil.getContextPath().concat(\"/html/js\"));\n\t\tthemeDisplay.setPathMain(mainPath);\n\t\tthemeDisplay.setPathSound(contextPath.concat(\"/html/sound\"));\n\t\tthemeDisplay.setPermissionChecker(permissionChecker);\n\t\tthemeDisplay.setPlid(plid);\n\t\tthemeDisplay.setPpid(ppid);\n\t\tthemeDisplay.setRealCompanyLogo(realCompanyLogo);\n\t\tthemeDisplay.setRealCompanyLogoHeight(realCompanyLogoHeight);\n\t\tthemeDisplay.setRealCompanyLogoWidth(realCompanyLogoWidth);\n\t\tthemeDisplay.setRealUser(realUser);\n\t\tthemeDisplay.setRefererGroupId(refererGroupId);\n\t\tthemeDisplay.setScopeGroupId(scopeGroupId);\n\t\tthemeDisplay.setSignedIn(signedIn);\n\t\tthemeDisplay.setSiteDefaultLocale(\n\t\t\tPortalUtil.getSiteDefaultLocale(siteGroupId));\n\t\tthemeDisplay.setSiteGroupId(siteGroupId);\n\t\tthemeDisplay.setStateExclusive(LiferayWindowState.isExclusive(request));\n\t\tthemeDisplay.setStateMaximized(LiferayWindowState.isMaximized(request));\n\t\tthemeDisplay.setStatePopUp(LiferayWindowState.isPopUp(request));\n\t\tthemeDisplay.setThemeCssFastLoad(themeCssFastLoad);\n\t\tthemeDisplay.setThemeImagesFastLoad(themeImagesFastLoad);\n\t\tthemeDisplay.setThemeJsBarebone(themeJsBarebone);\n\t\tthemeDisplay.setThemeJsFastLoad(themeJsFastLoad);\n\t\tthemeDisplay.setTimeZone(timeZone);\n\t\tthemeDisplay.setUnfilteredLayouts(unfilteredLayouts);\n\t\tthemeDisplay.setUser(user);\n\n\t\t// Icons\n\n\t\tthemeDisplay.setShowAddContentIcon(false);\n\n\t\tboolean showControlPanelIcon = false;\n\n\t\tif (signedIn &&\n\t\t\tPortalPermissionUtil.contains(\n\t\t\t\tpermissionChecker, ActionKeys.VIEW_CONTROL_PANEL)) {\n\n\t\t\tshowControlPanelIcon = true;\n\t\t}\n\n\t\tthemeDisplay.setShowControlPanelIcon(showControlPanelIcon);\n\n\t\tthemeDisplay.setShowHomeIcon(true);\n\t\tthemeDisplay.setShowMyAccountIcon(signedIn);\n\t\tthemeDisplay.setShowPageSettingsIcon(hasDeleteLayoutPermission);\n\t\tthemeDisplay.setShowPortalIcon(true);\n\t\tthemeDisplay.setShowSignInIcon(!signedIn);\n\n\t\tboolean showSignOutIcon = signedIn;\n\n\t\tif (themeDisplay.isImpersonated()) {\n\t\t\tshowSignOutIcon = false;\n\t\t}\n\n\t\tthemeDisplay.setShowSignOutIcon(showSignOutIcon);\n\n\t\tthemeDisplay.setShowStagingIcon(false);\n\n\t\tboolean showSiteAdministrationIcon = false;\n\n\t\tif (signedIn &&\n\t\t\tGroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, group,\n\t\t\t\tActionKeys.VIEW_SITE_ADMINISTRATION)) {\n\n\t\t\tshowSiteAdministrationIcon = true;\n\t\t}\n\n\t\tthemeDisplay.setShowSiteAdministrationIcon(showSiteAdministrationIcon);\n\n\t\t// Session\n\n\t\tif (PropsValues.SESSION_ENABLE_URL_WITH_SESSION_ID &&\n\t\t\t!CookieKeys.hasSessionId(request)) {\n\n\t\t\tthemeDisplay.setAddSessionIdToURL(true);\n\t\t\tthemeDisplay.setSessionId(session.getId());\n\t\t}\n\n\t\t// URLs\n\n\t\tString urlControlPanel = friendlyURLPrivateGroupPath.concat(\n\t\t\tGroupConstants.CONTROL_PANEL_FRIENDLY_URL);\n\n\t\tif (Validator.isNotNull(doAsUserId)) {\n\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\turlControlPanel, \"doAsUserId\", doAsUserId);\n\t\t}\n\n\t\tif (refererGroupId > 0) {\n\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\turlControlPanel, \"refererGroupId\", refererGroupId);\n\t\t}\n\t\telse if (scopeGroupId > 0) {\n\t\t\tLayout refererLayout = LayoutLocalServiceUtil.fetchLayout(plid);\n\n\t\t\tif (refererLayout != null) {\n\t\t\t\tGroup refererLayoutGroup = refererLayout.getGroup();\n\n\t\t\t\tif (refererLayoutGroup.isUserGroup()) {\n\t\t\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\t\t\turlControlPanel, \"refererGroupId\", scopeGroupId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (refererPlid > 0) {\n\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\turlControlPanel, \"refererPlid\", refererPlid);\n\t\t}\n\t\telse if (plid > 0) {\n\t\t\turlControlPanel = HttpUtil.addParameter(\n\t\t\t\turlControlPanel, \"refererPlid\", plid);\n\t\t}\n\n\t\tif (themeDisplay.isAddSessionIdToURL()) {\n\t\t\turlControlPanel = PortalUtil.getURLWithSessionId(\n\t\t\t\turlControlPanel, session.getId());\n\t\t}\n\n\t\tthemeDisplay.setURLControlPanel(urlControlPanel);\n\n\t\tString currentURL = PortalUtil.getCurrentURL(request);\n\n\t\tthemeDisplay.setURLCurrent(currentURL);\n\n\t\tString urlHome = PortalUtil.getHomeURL(request);\n\n\t\tthemeDisplay.setURLHome(urlHome);\n\n\t\tString siteAdministrationURL = urlControlPanel;\n\n\t\tsiteAdministrationURL = HttpUtil.addParameter(\n\t\t\tsiteAdministrationURL, \"controlPanelCategory\",\n\t\t\tPortletCategoryKeys.CURRENT_SITE);\n\t\tsiteAdministrationURL = HttpUtil.addParameter(\n\t\t\tsiteAdministrationURL, \"doAsGroupId\", siteGroupId);\n\n\t\tthemeDisplay.setURLSiteAdministration(siteAdministrationURL);\n\n\t\tlong controlPanelPlid = PortalUtil.getControlPanelPlid(companyId);\n\n\t\tif (layout != null) {\n\t\t\tif (layout.isTypePortlet()) {\n\t\t\t\tboolean freeformLayout =\n\t\t\t\t\tlayoutTypePortlet.getLayoutTemplateId().equals(\"freeform\");\n\n\t\t\t\tthemeDisplay.setFreeformLayout(freeformLayout);\n\n\t\t\t\tif (hasUpdateLayoutPermission) {\n\t\t\t\t\tthemeDisplay.setShowAddContentIconPermission(true);\n\n\t\t\t\t\tif (!LiferayWindowState.isMaximized(request)) {\n\t\t\t\t\t\tthemeDisplay.setShowAddContentIcon(true);\n\t\t\t\t\t}\n\n\t\t\t\t\tthemeDisplay.setShowLayoutTemplatesIcon(true);\n\n\t\t\t\t\tif (!group.isUser()) {\n\t\t\t\t\t\tthemeDisplay.setShowPageCustomizationIcon(true);\n\t\t\t\t\t}\n\n\t\t\t\t\tthemeDisplay.setURLAddContent(\n\t\t\t\t\t\t\"Liferay.Dockbar.loadAddPanel();\");\n\t\t\t\t}\n\n\t\t\t\tif (hasCustomizeLayoutPermission && customizedView) {\n\t\t\t\t\tthemeDisplay.setShowAddContentIconPermission(true);\n\n\t\t\t\t\tif (!LiferayWindowState.isMaximized(request)) {\n\t\t\t\t\t\tthemeDisplay.setShowAddContentIcon(true);\n\t\t\t\t\t}\n\n\t\t\t\t\tthemeDisplay.setURLAddContent(\n\t\t\t\t\t\t\"Liferay.Dockbar.loadAddPanel();\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasUpdateLayoutPermission) {\n\t\t\t\tthemeDisplay.setShowPageSettingsIcon(true);\n\n\t\t\t\tLiferayPortletURL pageSettingsURL = new PortletURLImpl(\n\t\t\t\t\trequest, PortletKeys.GROUP_PAGES, controlPanelPlid,\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tpageSettingsURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\tpageSettingsURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/group_pages/edit_layouts\");\n\n\t\t\t\tif (layout.isPrivateLayout()) {\n\t\t\t\t\tpageSettingsURL.setParameter(\"tabs1\", \"private-pages\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpageSettingsURL.setParameter(\"tabs1\", \"public-pages\");\n\t\t\t\t}\n\n\t\t\t\tpageSettingsURL.setParameter(\n\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\tpageSettingsURL.setParameter(\"selPlid\", String.valueOf(plid));\n\t\t\t\tpageSettingsURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\t\tif (PropsValues.DOCKBAR_ADMINISTRATIVE_LINKS_SHOW_IN_POP_UP) {\n\t\t\t\t\tpageSettingsURL.setControlPanelCategory(\n\t\t\t\t\t\tPortletCategoryKeys.PORTLET);\n\t\t\t\t\tpageSettingsURL.setWindowState(LiferayWindowState.POP_UP);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpageSettingsURL.setParameter(\n\t\t\t\t\t\t\"redirect\", themeDisplay.getURLHome());\n\t\t\t\t\tpageSettingsURL.setPlid(plid);\n\t\t\t\t\tpageSettingsURL.setWindowState(WindowState.MAXIMIZED);\n\t\t\t\t}\n\n\t\t\t\tthemeDisplay.setURLPageSettings(pageSettingsURL);\n\n\t\t\t\tboolean site = group.isSite();\n\n\t\t\t\tif (!site && group.isStagingGroup()) {\n\t\t\t\t\tGroup liveGroup = group.getLiveGroup();\n\n\t\t\t\t\tsite = liveGroup.isSite();\n\t\t\t\t}\n\n\t\t\t\tif (site &&\n\t\t\t\t\tGroupPermissionUtil.contains(\n\t\t\t\t\t\tpermissionChecker, scopeGroupId,\n\t\t\t\t\t\tActionKeys.ASSIGN_MEMBERS)) {\n\n\t\t\t\t\tthemeDisplay.setShowManageSiteMembershipsIcon(true);\n\n\t\t\t\t\tLiferayPortletURL manageSiteMembershipsURL =\n\t\t\t\t\t\tnew PortletURLImpl(\n\t\t\t\t\t\t\trequest, PortletKeys.SITE_MEMBERSHIPS_ADMIN,\n\t\t\t\t\t\t\tcontrolPanelPlid, PortletRequest.RENDER_PHASE);\n\n\t\t\t\t\tmanageSiteMembershipsURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\"struts_action\", \"/sites_admin/edit_site_assignments\");\n\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\"selPlid\", String.valueOf(plid));\n\t\t\t\t\tmanageSiteMembershipsURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\t\t\tif (PropsValues.\n\t\t\t\t\t\t\tDOCKBAR_ADMINISTRATIVE_LINKS_SHOW_IN_POP_UP) {\n\n\t\t\t\t\t\tmanageSiteMembershipsURL.setControlPanelCategory(\n\t\t\t\t\t\t\tPortletCategoryKeys.PORTLET);\n\t\t\t\t\t\tmanageSiteMembershipsURL.setWindowState(\n\t\t\t\t\t\t\tLiferayWindowState.POP_UP);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\t\"redirect\", themeDisplay.getURLHome());\n\t\t\t\t\t\tmanageSiteMembershipsURL.setParameter(\n\t\t\t\t\t\t\t\"showBackURL\", Boolean.FALSE.toString());\n\t\t\t\t\t\tmanageSiteMembershipsURL.setPlid(plid);\n\t\t\t\t\t\tmanageSiteMembershipsURL.setWindowState(\n\t\t\t\t\t\t\tWindowState.MAXIMIZED);\n\t\t\t\t\t}\n\n\t\t\t\t\tthemeDisplay.setURLManageSiteMemberships(\n\t\t\t\t\t\tmanageSiteMembershipsURL);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthemeDisplay.setShowManageSiteMembershipsIcon(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tGroup scopeGroup = GroupLocalServiceUtil.getGroup(scopeGroupId);\n\n\t\t\tboolean hasAddLayoutGroupPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.ADD_LAYOUT);\n\t\t\tboolean hasManageLayoutsGroupPermission =\n\t\t\t\tGroupPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.MANAGE_LAYOUTS);\n\t\t\tboolean hasManageStagingPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.MANAGE_STAGING);\n\t\t\tboolean hasPublishStagingPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.PUBLISH_STAGING);\n\t\t\tboolean hasUpdateGroupPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.UPDATE);\n\t\t\tboolean hasViewStagingPermission = GroupPermissionUtil.contains(\n\t\t\t\tpermissionChecker, scopeGroup, ActionKeys.VIEW_STAGING);\n\n\t\t\tif (!group.isControlPanel() && !group.isUserPersonalPanel() &&\n\t\t\t\t!group.isUser() &&\n\t\t\t\t!group.isUserGroup() && hasUpdateGroupPermission) {\n\n\t\t\t\tthemeDisplay.setShowSiteSettingsIcon(true);\n\n\t\t\t\tLiferayPortletURL siteSettingsURL = new PortletURLImpl(\n\t\t\t\t\trequest, PortletKeys.SITE_SETTINGS, controlPanelPlid,\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tsiteSettingsURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\tsiteSettingsURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/sites_admin/edit_site\");\n\t\t\t\tsiteSettingsURL.setParameter(\n\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\tsiteSettingsURL.setParameter(\n\t\t\t\t\t\"showBackURL\", Boolean.FALSE.toString());\n\t\t\t\tsiteSettingsURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\t\tif (PropsValues.DOCKBAR_ADMINISTRATIVE_LINKS_SHOW_IN_POP_UP) {\n\t\t\t\t\tsiteSettingsURL.setControlPanelCategory(\n\t\t\t\t\t\tPortletCategoryKeys.PORTLET);\n\t\t\t\t\tsiteSettingsURL.setParameter(\"closeRedirect\", currentURL);\n\t\t\t\t\tsiteSettingsURL.setWindowState(LiferayWindowState.POP_UP);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsiteSettingsURL.setParameter(\n\t\t\t\t\t\t\"redirect\", themeDisplay.getURLHome());\n\t\t\t\t\tsiteSettingsURL.setPlid(plid);\n\t\t\t\t\tsiteSettingsURL.setWindowState(\n\t\t\t\t\t\tLiferayWindowState.MAXIMIZED);\n\t\t\t\t}\n\n\t\t\t\tthemeDisplay.setURLSiteSettings(siteSettingsURL);\n\t\t\t}\n\n\t\t\tif (!group.isLayoutPrototype() &&\n\t\t\t\t(hasAddLayoutGroupPermission || hasAddLayoutLayoutPermission ||\n\t\t\t\t hasManageLayoutsGroupPermission || hasUpdateGroupPermission)) {\n\n\t\t\t\tthemeDisplay.setShowSiteMapSettingsIcon(true);\n\n\t\t\t\tLiferayPortletURL siteMapSettingsURL = new PortletURLImpl(\n\t\t\t\t\trequest, PortletKeys.GROUP_PAGES, controlPanelPlid,\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tsiteMapSettingsURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\tsiteMapSettingsURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/group_pages/edit_layouts\");\n\n\t\t\t\tif (layout.isPrivateLayout()) {\n\t\t\t\t\tsiteMapSettingsURL.setParameter(\"tabs1\", \"private-pages\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsiteMapSettingsURL.setParameter(\"tabs1\", \"public-pages\");\n\t\t\t\t}\n\n\t\t\t\tsiteMapSettingsURL.setParameter(\n\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\tsiteMapSettingsURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\t\tif (PropsValues.DOCKBAR_ADMINISTRATIVE_LINKS_SHOW_IN_POP_UP) {\n\t\t\t\t\tsiteMapSettingsURL.setControlPanelCategory(\n\t\t\t\t\t\tPortletCategoryKeys.PORTLET);\n\t\t\t\t\tsiteMapSettingsURL.setParameter(\n\t\t\t\t\t\t\"closeRedirect\", currentURL);\n\t\t\t\t\tsiteMapSettingsURL.setWindowState(\n\t\t\t\t\t\tLiferayWindowState.POP_UP);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsiteMapSettingsURL.setParameter(\n\t\t\t\t\t\t\"redirect\", themeDisplay.getURLHome());\n\t\t\t\t\tsiteMapSettingsURL.setPlid(plid);\n\t\t\t\t\tsiteMapSettingsURL.setWindowState(\n\t\t\t\t\t\tLiferayWindowState.MAXIMIZED);\n\t\t\t\t}\n\n\t\t\t\tthemeDisplay.setURLSiteMapSettings(siteMapSettingsURL);\n\t\t\t}\n\n\t\t\tif (group.hasStagingGroup() && !group.isStagingGroup()) {\n\t\t\t\tthemeDisplay.setShowAddContentIcon(false);\n\t\t\t\tthemeDisplay.setShowLayoutTemplatesIcon(false);\n\t\t\t\tthemeDisplay.setURLPublishToLive(null);\n\t\t\t}\n\n\t\t\tif (group.isControlPanel() || group.isUserPersonalPanel()) {\n\t\t\t\tthemeDisplay.setShowPageSettingsIcon(false);\n\t\t\t\tthemeDisplay.setURLPublishToLive(null);\n\t\t\t}\n\n\t\t\t// LEP-4987\n\n\t\t\tif (group.isStaged() || group.isStagingGroup()) {\n\t\t\t\tif (hasManageStagingPermission || hasPublishStagingPermission ||\n\t\t\t\t\thasUpdateLayoutPermission || hasViewStagingPermission) {\n\n\t\t\t\t\tthemeDisplay.setShowStagingIcon(true);\n\t\t\t\t}\n\n\t\t\t\tif (hasPublishStagingPermission) {\n\t\t\t\t\tPortletURL publishToLiveURL = new PortletURLImpl(\n\t\t\t\t\t\trequest, PortletKeys.LAYOUTS_ADMIN, plid,\n\t\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\t\tpublishToLiveURL.setParameter(\n\t\t\t\t\t\t\"struts_action\", \"/layouts_admin/publish_layouts\");\n\n\t\t\t\t\tif (layout.isPrivateLayout()) {\n\t\t\t\t\t\tpublishToLiveURL.setParameter(\"tabs1\", \"private-pages\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpublishToLiveURL.setParameter(\"tabs1\", \"public-pages\");\n\t\t\t\t\t}\n\n\t\t\t\t\tpublishToLiveURL.setParameter(\n\t\t\t\t\t\t\"groupId\", String.valueOf(scopeGroupId));\n\t\t\t\t\tpublishToLiveURL.setParameter(\n\t\t\t\t\t\t\"selPlid\", String.valueOf(plid));\n\t\t\t\t\tpublishToLiveURL.setPortletMode(PortletMode.VIEW);\n\t\t\t\t\tpublishToLiveURL.setWindowState(\n\t\t\t\t\t\tLiferayWindowState.EXCLUSIVE);\n\n\t\t\t\t\tthemeDisplay.setURLPublishToLive(publishToLiveURL);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tPortlet myAccountPortlet = PortalUtil.getFirstMyAccountPortlet(\n\t\t\t\tthemeDisplay);\n\n\t\t\tif (myAccountPortlet != null) {\n\t\t\t\tPortletURLImpl myAccountURL = new PortletURLImpl(\n\t\t\t\t\trequest, myAccountPortlet.getPortletId(), controlPanelPlid,\n\t\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\t\tif (signedIn) {\n\t\t\t\t\tmyAccountURL.setDoAsGroupId(user.getGroupId());\n\t\t\t\t}\n\t\t\t\telse if (scopeGroupId > 0) {\n\t\t\t\t\tmyAccountURL.setDoAsGroupId(scopeGroupId);\n\t\t\t\t}\n\n\t\t\t\tif (refererPlid > 0) {\n\t\t\t\t\tmyAccountURL.setRefererPlid(refererPlid);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmyAccountURL.setRefererPlid(plid);\n\t\t\t\t}\n\n\t\t\t\tmyAccountURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\t\t\tthemeDisplay.setURLMyAccount(myAccountURL);\n\t\t\t}\n\t\t}\n\n\t\tif (!user.isActive() ||\n\t\t\t(PrefsPropsUtil.getBoolean(\n\t\t\t\tcompanyId, PropsKeys.TERMS_OF_USE_REQUIRED) &&\n\t\t\t !user.isAgreedToTermsOfUse())) {\n\n\t\t\tthemeDisplay.setShowAddContentIcon(false);\n\t\t\tthemeDisplay.setShowMyAccountIcon(false);\n\t\t\tthemeDisplay.setShowPageSettingsIcon(false);\n\t\t}\n\n\t\tif ((layout != null) && layout.isLayoutPrototypeLinkActive()) {\n\t\t\tthemeDisplay.setShowPageCustomizationIcon(false);\n\t\t}\n\n\t\tif (group.isLayoutPrototype()) {\n\t\t\tthemeDisplay.setShowHomeIcon(false);\n\t\t\tthemeDisplay.setShowManageSiteMembershipsIcon(false);\n\t\t\tthemeDisplay.setShowMyAccountIcon(false);\n\t\t\tthemeDisplay.setShowPageCustomizationIcon(false);\n\t\t\tthemeDisplay.setShowPageSettingsIcon(true);\n\t\t\tthemeDisplay.setShowPortalIcon(false);\n\t\t\tthemeDisplay.setShowSignInIcon(false);\n\t\t\tthemeDisplay.setShowSignOutIcon(false);\n\t\t\tthemeDisplay.setShowSiteAdministrationIcon(false);\n\t\t\tthemeDisplay.setShowSiteSettingsIcon(false);\n\t\t\tthemeDisplay.setShowStagingIcon(false);\n\t\t}\n\n\t\tif (group.isLayoutSetPrototype()) {\n\t\t\tthemeDisplay.setShowPageCustomizationIcon(false);\n\t\t\tthemeDisplay.setShowSiteSettingsIcon(false);\n\t\t}\n\n\t\tif (group.hasStagingGroup() && !group.isStagingGroup()) {\n\t\t\tthemeDisplay.setShowLayoutTemplatesIcon(false);\n\t\t\tthemeDisplay.setShowPageCustomizationIcon(false);\n\t\t\tthemeDisplay.setShowSiteMapSettingsIcon(false);\n\t\t\tthemeDisplay.setShowSiteSettingsIcon(false);\n\t\t}\n\n\t\tthemeDisplay.setURLPortal(portalURL.concat(contextPath));\n\n\t\tboolean secure = false;\n\n\t\tif (PropsValues.COMPANY_SECURITY_AUTH_REQUIRES_HTTPS ||\n\t\t\trequest.isSecure()) {\n\n\t\t\tsecure = true;\n\t\t}\n\n\t\tString securePortalURL = PortalUtil.getPortalURL(request, secure);\n\n\t\tString urlSignIn = securePortalURL.concat(mainPath).concat(\n\t\t\t_PATH_PORTAL_LOGIN);\n\n\t\tif (layout != null) {\n\t\t\turlSignIn = HttpUtil.addParameter(\n\t\t\t\turlSignIn, \"p_l_id\", layout.getPlid());\n\t\t}\n\n\t\tthemeDisplay.setURLSignIn(urlSignIn);\n\n\t\tthemeDisplay.setURLSignOut(mainPath.concat(_PATH_PORTAL_LOGOUT));\n\n\t\tPortletURL updateManagerURL = new PortletURLImpl(\n\t\t\trequest, PortletKeys.MARKETPLACE_STORE, controlPanelPlid,\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tthemeDisplay.setURLUpdateManager(updateManagerURL);\n\n\t\treturn themeDisplay;\n\t}","commit_id":"c95e380ff2b7a0b648eac6843d3f8c7b5e3dd467","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void buildTextAndTree(Project project, VirtualFile file) {\n        StringBuilder builder = new StringBuilder();\n\n        BindingTraceContext trace = new BindingTraceContext();\n        JavaSemanticServices jss = new JavaSemanticServices(\n                project,\n                JetSemanticServices.createSemanticServices(project),\n                trace);\n        PsiManager psiManager = PsiManager.getInstance(project);\n        ClsFileImpl clsFile = (ClsFileImpl) psiManager.findFile(file);\n        assert clsFile != null;\n        builder.append(PsiBundle.message(\"psi.decompiled.text.header\"));\n        builder.append(\"\\n\\n\");\n\n        String packageName = clsFile.getPackageName();\n        if (packageName.length() > 0) {\n            builder.append(\"package \").append(packageName).append(\"\\n\\n\");\n        }\n\n        PsiClass psiClass = clsFile.getClasses()[0];\n        JavaDescriptorResolver jdr = jss.getDescriptorResolver();\n\n        Map<PsiElement, TextRange> clsMembersToRanges = new HashMap<PsiElement, TextRange>();\n\n        if (isKotlinNamespaceClass(psiClass)) {\n            NamespaceDescriptor nd = jdr.resolveNamespace(packageName);\n\n            if (nd != null) {\n                for (DeclarationDescriptor member : nd.getMemberScope().getAllDescriptors()) {\n                    if (member instanceof ClassDescriptor || member instanceof NamespaceDescriptor) {\n                        continue;\n                    }\n                    PsiElement clsElement = trace.getBindingContext().get(BindingContext.DESCRIPTOR_TO_DECLARATION, member);\n                    clsMembersToRanges.put(clsElement, appendMemberDescriptor(builder, member));\n                }\n            }\n        } else {\n            ClassDescriptor cd = jdr.resolveClass(psiClass);\n            if (cd != null) {\n                int classStart = builder.length();\n\n                builder.append(DescriptorRenderer.COMPACT.render(cd));\n\n                builder.append(\" {\\n\");\n\n                for (DeclarationDescriptor member : cd.getDefaultType().getMemberScope().getAllDescriptors()) {\n                    if (member.getContainingDeclaration() == cd) {\n                        builder.append(\"    \");\n                        PsiElement clsElement = trace.getBindingContext().get(BindingContext.DESCRIPTOR_TO_DECLARATION, member);\n                        clsMembersToRanges.put(clsElement, appendMemberDescriptor(builder, member));\n                    }\n                }\n\n                builder.append(\"}\");\n\n                PsiElement clsClass = trace.getBindingContext().get(BindingContext.DESCRIPTOR_TO_DECLARATION, cd);\n                clsMembersToRanges.put(clsClass, new TextRange(classStart, builder.length()));\n            }\n        }\n\n        myText = builder.toString();\n        myJetFile = JetDummyClassFileViewProvider.createJetFile(psiManager, file, myText);\n        for (Map.Entry<PsiElement, TextRange> clsMemberToRange : clsMembersToRanges.entrySet()) {\n            PsiElement clsMember = clsMemberToRange.getKey();\n            assert clsMember instanceof ClsElementImpl;\n\n            TextRange range = clsMemberToRange.getValue();\n            JetDeclaration jetDeclaration = PsiTreeUtil.findElementOfClassAtRange(myJetFile, range.getStartOffset(), range.getEndOffset(), JetDeclaration.class);\n            assert jetDeclaration != null;\n            myClsElementsToJetElements.put((ClsElementImpl) clsMember, jetDeclaration);\n        }\n    }","id":48561,"modified_method":"private void buildTextAndTree(Project project, VirtualFile file) {\n        StringBuilder builder = new StringBuilder();\n\n        BindingTraceContext trace = new BindingTraceContext();\n        JavaSemanticServices jss = new JavaSemanticServices(\n                project,\n                JetSemanticServices.createSemanticServices(project),\n                trace);\n        PsiManager psiManager = PsiManager.getInstance(project);\n        ClsFileImpl clsFile = (ClsFileImpl) psiManager.findFile(file);\n        assert clsFile != null;\n        builder.append(PsiBundle.message(\"psi.decompiled.text.header\"));\n        builder.append(\"\\n\\n\");\n\n        String packageName = clsFile.getPackageName();\n        if (packageName.length() > 0) {\n            builder.append(\"package \").append(packageName).append(\"\\n\\n\");\n        }\n\n        PsiClass psiClass = clsFile.getClasses()[0];\n        JavaDescriptorResolver jdr = jss.getDescriptorResolver();\n\n        if (isKotlinNamespaceClass(psiClass)) {\n            NamespaceDescriptor nd = jdr.resolveNamespace(packageName);\n\n            if (nd != null) {\n                for (DeclarationDescriptor member : nd.getMemberScope().getAllDescriptors()) {\n                    if (member instanceof ClassDescriptor || member instanceof NamespaceDescriptor) {\n                        continue;\n                    }\n                    appendDescriptor(builder, member, trace.getBindingContext(), \"\");\n                    builder.append(\"\\n\");\n                }\n            }\n        } else {\n            ClassDescriptor cd = jdr.resolveClass(psiClass);\n            if (cd != null) {\n                appendDescriptor(builder, cd, trace.getBindingContext(), \"\");\n            }\n        }\n\n        myText = builder.toString();\n        myJetFile = JetDummyClassFileViewProvider.createJetFile(psiManager, file, myText);\n        for (Map.Entry<PsiElement, TextRange> clsMemberToRange : myClsMembersToRanges.entrySet()) {\n            PsiElement clsMember = clsMemberToRange.getKey();\n            assert clsMember instanceof ClsElementImpl;\n\n            TextRange range = clsMemberToRange.getValue();\n            JetDeclaration jetDeclaration = PsiTreeUtil.findElementOfClassAtRange(myJetFile, range.getStartOffset(), range.getEndOffset(), JetDeclaration.class);\n            assert jetDeclaration != null;\n            myClsElementsToJetElements.put((ClsElementImpl) clsMember, jetDeclaration);\n        }\n    }","commit_id":"6ac94758e24008c84d24d13b4e5b7127d27d518c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private JetDecompiledData() {\n    }","id":48562,"modified_method":"private JetDecompiledData() {\n        myClsMembersToRanges = new HashMap<PsiElement, TextRange>();\n    }","commit_id":"6ac94758e24008c84d24d13b4e5b7127d27d518c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private static TextRange appendMemberDescriptor(StringBuilder builder, DeclarationDescriptor member) {\n        String decompiledComment = \"/* \" + PsiBundle.message(\"psi.decompiled.method.body\") + \" */\";\n        int startOffset = builder.length();\n        builder.append(DescriptorRenderer.COMPACT.render(member));\n        int endOffset = builder.length();\n        if (member instanceof FunctionDescriptor) {\n            builder.append(\" { \").append(decompiledComment).append(\" }\");\n            endOffset = builder.length();\n        } else if (member instanceof PropertyDescriptor) {\n            builder.append(\" \").append(decompiledComment);\n        }\n        builder.append(\"\\n\\n\");\n        return new TextRange(startOffset, endOffset);\n    }","id":48563,"modified_method":"private void appendDescriptor(StringBuilder builder, DeclarationDescriptor descriptor, BindingContext bindingContext, String indent) {\n        String decompiledComment = \"/* \" + PsiBundle.message(\"psi.decompiled.method.body\") + \" */\";\n\n        builder.append(indent);\n\n        int startOffset = builder.length();\n        builder.append(DescriptorRenderer.COMPACT.render(descriptor));\n        int endOffset = builder.length();\n\n        if (descriptor instanceof FunctionDescriptor) {\n            builder.append(\" { \").append(decompiledComment).append(\" }\");\n            endOffset = builder.length();\n        } else if (descriptor instanceof PropertyDescriptor) {\n            builder.append(\" \").append(decompiledComment);\n        } else if (descriptor instanceof ClassDescriptor) {\n            builder.append(\" {\\n\");\n            boolean firstPassed = false;\n            for (DeclarationDescriptor member : ((ClassDescriptor) descriptor).getDefaultType().getMemberScope().getAllDescriptors()) {\n                if (member.getContainingDeclaration() == descriptor) {\n                    if (firstPassed) {\n                        builder.append(\"\\n\");\n                    } else {\n                        firstPassed = true;\n                    }\n                    appendDescriptor(builder, member, bindingContext, indent + \"    \");\n                }\n            }\n            builder.append(indent).append(\"}\");\n            endOffset = builder.length();\n        }\n\n        builder.append(\"\\n\");\n        PsiElement clsMember = bindingContext.get(BindingContext.DESCRIPTOR_TO_DECLARATION, descriptor);\n        myClsMembersToRanges.put(clsMember, new TextRange(startOffset, endOffset));\n    }","commit_id":"6ac94758e24008c84d24d13b4e5b7127d27d518c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private static BindingContext processInlinedDeclarations(\n            @NotNull Project project,\n            @NotNull ResolutionFacade resolutionFacade,\n            @NotNull BindingContext bindingContext,\n            @NotNull Set<JetElement> originalElements,\n            int deep,\n            @NotNull Ref<Set<JetElement>> resultElements\n    ) {\n        if (deep >= 10) {\n            resultElements.set(originalElements);\n            return bindingContext;\n        }\n\n        Set<JetElement> collectedElements = new HashSet<JetElement>();\n        collectedElements.addAll(originalElements);\n        Map<Call, ResolvedCall<?>> contents = bindingContext.getSliceContents(BindingContext.RESOLVED_CALL);\n        for (ResolvedCall call : contents.values()) {\n            CallableDescriptor descriptor = call.getResultingDescriptor();\n            if (!(descriptor instanceof DeserializedSimpleFunctionDescriptor) && InlineUtil.isInline(descriptor)) {\n                PsiElement declaration = DescriptorToSourceUtilsIde.INSTANCE$.getAnyDeclaration(project, descriptor);\n                if (declaration != null && declaration instanceof JetElement) {\n                    collectedElements.add((JetElement) declaration);\n                }\n            }\n        }\n\n        if (collectedElements.size() != originalElements.size()) {\n            AnalysisResult newResult = resolutionFacade.analyzeFullyAndGetResult(collectedElements);\n            if (newResult.isError()) {\n                resultElements.set(collectedElements);\n                return newResult.getBindingContext();\n            }\n\n            return processInlinedDeclarations(project, resolutionFacade, newResult.getBindingContext(), collectedElements, deep + 1, resultElements);\n        }\n\n        resultElements.set(collectedElements);\n        return bindingContext;\n    }","id":48564,"modified_method":"private static BindingContext processInlinedDeclarations(\n            @NotNull Project project,\n            @NotNull ResolutionFacade resolutionFacade,\n            @NotNull Set<JetElement> originalElements,\n            int deep,\n            @NotNull Ref<Set<JetElement>> resultElements,\n            boolean processOnlyReifiedInline\n    ) {\n        AnalysisResult newResult = resolutionFacade.analyzeFullyAndGetResult(originalElements);\n        BindingContext bindingContext = newResult.getBindingContext();\n\n        Set<JetElement> collectedElements = new HashSet<JetElement>();\n        collectedElements.addAll(originalElements);\n        Map<Call, ResolvedCall<?>> contents = bindingContext.getSliceContents(BindingContext.RESOLVED_CALL);\n        for (ResolvedCall call : contents.values()) {\n            CallableDescriptor descriptor = call.getResultingDescriptor();\n            if (!(descriptor instanceof DeserializedSimpleFunctionDescriptor) && InlineUtil.isInline(descriptor)) {\n                if (!processOnlyReifiedInline || hasReifiedTypeParameters(descriptor)) {\n                    PsiElement declaration = DescriptorToSourceUtilsIde.INSTANCE$.getAnyDeclaration(project, descriptor);\n                    if (declaration != null && declaration instanceof JetElement) {\n                        collectedElements.add((JetElement) declaration);\n                    }\n                }\n            }\n        }\n\n        if (collectedElements.size() != originalElements.size()) {\n            if (newResult.isError() || deep >= 10) {\n                resultElements.set(collectedElements);\n                return bindingContext;\n            }\n\n            return processInlinedDeclarations(project, resolutionFacade, collectedElements, deep + 1, resultElements, processOnlyReifiedInline);\n        }\n\n        resultElements.set(collectedElements);\n        return bindingContext;\n    }","commit_id":"4775858e1c7d5c31b0e2d678d8033ecde1c86dac","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    private static String getBytecodeForFile(\n            final JetFile jetFile,\n            boolean enableInline,\n            boolean enableAssertions,\n            boolean enableOptimization\n    ) {\n        GenerationState state;\n        try {\n            ResolutionFacade resolutionFacade = ResolvePackage.getResolutionFacade(jetFile);\n            BindingContext bindingContext = resolutionFacade.analyzeFullyAndGetResult(Collections.singletonList(jetFile)).getBindingContext();\n            Ref<Set<JetElement>> ref = Ref.create();\n            if (enableInline) {\n                bindingContext = processInlinedDeclarations(jetFile.getProject(), resolutionFacade, bindingContext, Collections.<JetElement>singleton(jetFile), 1, ref);\n            }\n\n            Set<JetFile> toProcess = new LinkedHashSet<JetFile>();\n            toProcess.add(jetFile);\n            if (ref.get() != null) {\n                for (JetElement element: ref.get()) {\n                    JetFile file = element.getContainingJetFile();\n                    toProcess.add(file);\n                }\n            }\n\n            GenerationState.GenerateClassFilter generateClassFilter = new GenerationState.GenerateClassFilter() {\n\n                @Override\n                public boolean shouldGeneratePackagePart(JetFile file) {\n                    return file == jetFile;\n                }\n\n                @Override\n                public boolean shouldAnnotateClass(JetClassOrObject classOrObject) {\n                    return true;\n                }\n\n                @Override\n                public boolean shouldGenerateClass(JetClassOrObject classOrObject) {\n                    return classOrObject.getContainingJetFile() == jetFile;\n                }\n\n                @Override\n                public boolean shouldGenerateScript(JetScript script) {\n                    return script.getContainingJetFile() == jetFile;\n                }\n            };\n\n            ModuleDescriptor moduleDescriptor = resolutionFacade.findModuleDescriptor(jetFile);\n            state = new GenerationState(jetFile.getProject(), ClassBuilderFactories.TEST, Progress.DEAF,\n                                        moduleDescriptor, bindingContext,\n                                        new ArrayList<JetFile>(toProcess), !enableAssertions, !enableAssertions,\n                                        generateClassFilter,\n                                        !enableInline, !enableOptimization, null, null,\n                                        DiagnosticSink.DO_NOTHING, null);\n            KotlinCodegenFacade.compileCorrectFiles(state, CompilationErrorHandler.THROW_EXCEPTION);\n        }\n        catch (ProcessCanceledException e) {\n            throw e;\n        }\n        catch (Exception e) {\n            return printStackTraceToString(e);\n        }\n\n        StringBuilder answer = new StringBuilder();\n\n        OutputFileCollection outputFiles = state.getFactory();\n        for (OutputFile outputFile : outputFiles.asList()) {\n            answer.append(\"// ================\");\n            answer.append(outputFile.getRelativePath());\n            answer.append(\" =================\\n\");\n            answer.append(outputFile.asText()).append(\"\\n\\n\");\n        }\n\n        return answer.toString();\n    }","id":48565,"modified_method":"@NotNull\n    private static String getBytecodeForFile(\n            final JetFile jetFile,\n            boolean enableInline,\n            boolean enableAssertions,\n            boolean enableOptimization\n    ) {\n        GenerationState state;\n        try {\n            ResolutionFacade resolutionFacade = ResolvePackage.getResolutionFacade(jetFile);\n\n            Ref<Set<JetElement>> ref = Ref.create();\n            BindingContext bindingContext = processInlinedDeclarations(\n                    jetFile.getProject(),\n                    resolutionFacade,\n                    Collections.<JetElement>singleton(jetFile),\n                    1,\n                    ref,\n                    !enableInline\n            );\n\n\n            //We processing another files just to annotate anonymous classes within their inline functions\n            //Bytecode not produced for them cause of filtering via generateClassFilter\n            Set<JetFile> toProcess = new LinkedHashSet<JetFile>();\n            toProcess.add(jetFile);\n            if (ref.get() != null) {\n                for (JetElement element: ref.get()) {\n                    JetFile file = element.getContainingJetFile();\n                    toProcess.add(file);\n                }\n            }\n\n            GenerationState.GenerateClassFilter generateClassFilter = new GenerationState.GenerateClassFilter() {\n\n                @Override\n                public boolean shouldGeneratePackagePart(JetFile file) {\n                    return file == jetFile;\n                }\n\n                @Override\n                public boolean shouldAnnotateClass(JetClassOrObject classOrObject) {\n                    return true;\n                }\n\n                @Override\n                public boolean shouldGenerateClass(JetClassOrObject classOrObject) {\n                    return classOrObject.getContainingJetFile() == jetFile;\n                }\n\n                @Override\n                public boolean shouldGenerateScript(JetScript script) {\n                    return script.getContainingJetFile() == jetFile;\n                }\n            };\n\n            ModuleDescriptor moduleDescriptor = resolutionFacade.findModuleDescriptor(jetFile);\n            state = new GenerationState(jetFile.getProject(), ClassBuilderFactories.TEST, Progress.DEAF,\n                                        moduleDescriptor, bindingContext,\n                                        new ArrayList<JetFile>(toProcess), !enableAssertions, !enableAssertions,\n                                        generateClassFilter,\n                                        !enableInline, !enableOptimization, null, null,\n                                        DiagnosticSink.DO_NOTHING, null);\n            KotlinCodegenFacade.compileCorrectFiles(state, CompilationErrorHandler.THROW_EXCEPTION);\n        }\n        catch (ProcessCanceledException e) {\n            throw e;\n        }\n        catch (Exception e) {\n            return printStackTraceToString(e);\n        }\n\n        StringBuilder answer = new StringBuilder();\n\n        OutputFileCollection outputFiles = state.getFactory();\n        for (OutputFile outputFile : outputFiles.asList()) {\n            answer.append(\"// ================\");\n            answer.append(outputFile.getRelativePath());\n            answer.append(\" =================\\n\");\n            answer.append(outputFile.asText()).append(\"\\n\\n\");\n        }\n\n        return answer.toString();\n    }","commit_id":"4775858e1c7d5c31b0e2d678d8033ecde1c86dac","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private Library createLibraryFromRoots(List<OrderRoot> roots, final LibraryType libraryType) {\n    final Library library = ((LibraryTableBase.ModifiableModelEx)myModuleLibrariesModel).createLibrary(null, libraryType.getKind());\n    final LibraryEx.ModifiableModelEx libModel = (LibraryEx.ModifiableModelEx)library.getModifiableModel();\n    if (myDefaultPropertiesFactory != null) {\n      libModel.setProperties(myDefaultPropertiesFactory.fun(libraryType));\n    }\n    for (OrderRoot root : roots) {\n      if (root.isJarDirectory()) {\n        libModel.addJarDirectory(root.getFile(), false, root.getType());\n      }\n      else {\n        libModel.addRoot(root.getFile(), root.getType());\n      }\n    }\n    libModel.commit();\n    return library;\n  }","id":48566,"modified_method":"private Library createLibraryFromRoots(List<OrderRoot> roots, @Nullable final LibraryType libraryType) {\n    final PersistentLibraryKind kind = libraryType == null ? null : libraryType.getKind();\n    final Library library = ((LibraryTableBase.ModifiableModelEx)myModuleLibrariesModel).createLibrary(null, kind);\n    final LibraryEx.ModifiableModelEx libModel = (LibraryEx.ModifiableModelEx)library.getModifiableModel();\n    if (myDefaultPropertiesFactory != null) {\n      libModel.setProperties(myDefaultPropertiesFactory.fun(libraryType));\n    }\n    for (OrderRoot root : roots) {\n      if (root.isJarDirectory()) {\n        libModel.addJarDirectory(root.getFile(), false, root.getType());\n      }\n      else {\n        libModel.addRoot(root.getFile(), root.getType());\n      }\n    }\n    libModel.commit();\n    return library;\n  }","commit_id":"522e58cbb10cbb006c6c1583d1c96cf68eb07c6c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static List<PsiElement> callableDescriptorToDeclarations(@NotNull BindingContext context, @NotNull CallableMemberDescriptor callable) {\n        if (callable.getKind() != CallableMemberDescriptor.Kind.DECLARATION) {\n            List<PsiElement> r = new ArrayList<PsiElement>();\n            Set<? extends CallableMemberDescriptor> overriddenDescriptors = callable.getOverriddenDescriptors();\n            for (CallableMemberDescriptor overridden : overriddenDescriptors) {\n                r.addAll(callableDescriptorToDeclarations(context, overridden));\n            }\n            return r;\n        }\n        PsiElement psiElement = doGetDescriptorToDeclaration(context, callable);\n        return psiElement != null ? Lists.newArrayList(psiElement) : Lists.<PsiElement>newArrayList();\n    }","id":48567,"modified_method":"@NotNull\n    private static List<PsiElement> callableDescriptorToDeclarations(@NotNull BindingContext context, @NotNull CallableMemberDescriptor callable) {\n        if (callable.getKind() == CallableMemberDescriptor.Kind.SYNTHESIZED) {\n            return Collections.emptyList();\n        }\n\n        if (callable.getKind() == CallableMemberDescriptor.Kind.DECLARATION) {\n            PsiElement psiElement = doGetDescriptorToDeclaration(context, callable);\n            return psiElement != null ? Lists.newArrayList(psiElement) : Lists.<PsiElement>newArrayList();\n        }\n\n        List<PsiElement> r = new ArrayList<PsiElement>();\n        Set<? extends CallableMemberDescriptor> overriddenDescriptors = callable.getOverriddenDescriptors();\n        for (CallableMemberDescriptor overridden : overriddenDescriptors) {\n            r.addAll(callableDescriptorToDeclarations(context, overridden));\n        }\n        return r;\n    }","commit_id":"410922c58d486cf526a481b8a841a258eb986b4c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Nullable\n    public static PsiElement callableDescriptorToDeclaration(@NotNull BindingContext context, @NotNull CallableMemberDescriptor callable) {\n        if (callable.getKind() != CallableMemberDescriptor.Kind.DECLARATION) {\n            Set<? extends CallableMemberDescriptor> overriddenDescriptors = callable.getOverriddenDescriptors();\n            if (overriddenDescriptors.size() != 1) {\n                // TODO evil code\n                throw new IllegalStateException(\n                        \"cannot find declaration: fake descriptor\" +\n                                \" has more then one overridden descriptor: \" + callable);\n            }\n\n            return callableDescriptorToDeclaration(context, overriddenDescriptors.iterator().next());\n        }\n\n        return doGetDescriptorToDeclaration(context, callable.getOriginal());\n    }","id":48568,"modified_method":"@Nullable\n    public static PsiElement callableDescriptorToDeclaration(@NotNull BindingContext context, @NotNull CallableMemberDescriptor callable) {\n        if (callable.getKind() == CallableMemberDescriptor.Kind.SYNTHESIZED) {\n            return null;\n        }\n\n        if (callable.getKind() == CallableMemberDescriptor.Kind.DECLARATION) {\n            return doGetDescriptorToDeclaration(context, callable.getOriginal());\n        }\n\n        Set<? extends CallableMemberDescriptor> overriddenDescriptors = callable.getOverriddenDescriptors();\n        if (overriddenDescriptors.size() != 1) {\n            throw new IllegalStateException(\n                    \"cannot find declaration: fake descriptor has more than one overridden descriptor: \" + callable);\n        }\n\n        return callableDescriptorToDeclaration(context, overriddenDescriptors.iterator().next());\n    }","commit_id":"410922c58d486cf526a481b8a841a258eb986b4c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private void generatedMethod(\n            JetExpression bodyExpressions,\n            JvmMethodSignature jvmSignature,\n            boolean needJetAnnotations, @Nullable String propertyTypeSignature,\n            MethodContext context,\n            FunctionDescriptor functionDescriptor,\n            JetDeclarationWithBody fun\n    ) {\n        if (functionDescriptor.getKind() == CallableMemberDescriptor.Kind.FAKE_OVERRIDE) {\n            throw new IllegalStateException(\"must not generate code for fake overrides\");\n        }\n\n        List<ValueParameterDescriptor> paramDescrs = functionDescriptor.getValueParameters();\n\n        int flags = getVisibilityAccessFlag(functionDescriptor);\n\n        if (!functionDescriptor.getValueParameters().isEmpty()\n            && functionDescriptor.getValueParameters().get(functionDescriptor.getValueParameters().size() - 1)\n                       .getVarargElementType() != null) {\n            flags |= ACC_VARARGS;\n        }\n\n        Modality modality = functionDescriptor.getModality();\n        if (modality == Modality.FINAL) {\n            DeclarationDescriptor containingDeclaration = functionDescriptor.getContainingDeclaration();\n            if (!(containingDeclaration instanceof ClassDescriptor) ||\n                ((ClassDescriptor) containingDeclaration).getKind() != ClassKind.TRAIT) {\n                flags |= ACC_FINAL;\n            }\n        }\n\n        OwnerKind kind = context.getContextKind();\n\n        if (kind == OwnerKind.TRAIT_IMPL) {\n            needJetAnnotations = false;\n        }\n\n        ReceiverDescriptor expectedThisObject = functionDescriptor.getExpectedThisObject();\n        ReceiverDescriptor receiverParameter = functionDescriptor.getReceiverParameter();\n\n        if (kind != OwnerKind.TRAIT_IMPL || bodyExpressions != null) {\n            boolean isStatic = kind == OwnerKind.NAMESPACE || kind instanceof OwnerKind.StaticDelegateKind;\n            if (isStatic || kind == OwnerKind.TRAIT_IMPL) {\n                flags |= ACC_STATIC;\n            }\n\n            boolean isAbstract = (\n                                         modality == Modality.ABSTRACT\n                                         || isInterface(functionDescriptor.getContainingDeclaration())\n                                 ) && !isStatic && kind != OwnerKind.TRAIT_IMPL;\n            if (isAbstract) flags |= ACC_ABSTRACT;\n\n            final MethodVisitor mv =\n                    v.newMethod(fun, flags, jvmSignature.getAsmMethod().getName(), jvmSignature.getAsmMethod().getDescriptor(),\n                                jvmSignature.getGenericsSignature(), null);\n            AnnotationCodegen.forMethod(mv, state.getTypeMapper()).genAnnotations(functionDescriptor);\n            if (state.getClassBuilderMode() != ClassBuilderMode.SIGNATURES) {\n                int start = 0;\n                if (needJetAnnotations) {\n                    if (functionDescriptor instanceof PropertyAccessorDescriptor) {\n                        PropertyCodegen.generateJetPropertyAnnotation(mv, propertyTypeSignature, jvmSignature.getKotlinTypeParameter(),\n                                                                      ((PropertyAccessorDescriptor) functionDescriptor)\n                                                                              .getCorrespondingProperty(),\n                                                                      functionDescriptor.getVisibility());\n                    }\n                    else if (functionDescriptor instanceof SimpleFunctionDescriptor) {\n                        if (propertyTypeSignature != null) {\n                            throw new IllegalStateException();\n                        }\n                        JetMethodAnnotationWriter aw = JetMethodAnnotationWriter.visitAnnotation(mv);\n                        BitSet kotlinFlags = getFlagsForVisibility(functionDescriptor.getVisibility());\n                        if (isInterface(functionDescriptor.getContainingDeclaration()) && modality != Modality.ABSTRACT) {\n                            kotlinFlags.set(modality == Modality.FINAL\n                                            ? JvmStdlibNames.FLAG_FORCE_FINAL_BIT\n                                            : JvmStdlibNames.FLAG_FORCE_OPEN_BIT);\n                        }\n                        aw.writeFlags(kotlinFlags);\n                        aw.writeNullableReturnType(functionDescriptor.getReturnType().isNullable());\n                        aw.writeTypeParameters(jvmSignature.getKotlinTypeParameter());\n                        aw.writeReturnType(jvmSignature.getKotlinReturnType());\n                        aw.visitEnd();\n                    }\n                    else {\n                        throw new IllegalStateException();\n                    }\n\n                    if (receiverParameter.exists()) {\n                        JetValueParameterAnnotationWriter av = JetValueParameterAnnotationWriter.visitParameterAnnotation(mv, start++);\n                        av.writeName(\"this$receiver\");\n                        av.writeNullable(receiverParameter.getType().isNullable());\n                        av.writeReceiver();\n                        if (jvmSignature.getKotlinParameterTypes() != null && jvmSignature.getKotlinParameterTypes().get(0) != null) {\n                            av.writeType(jvmSignature.getKotlinParameterTypes().get(0).getKotlinSignature());\n                        }\n                        av.visitEnd();\n                    }\n                    for (int i = 0; i != paramDescrs.size(); ++i) {\n                        ValueParameterDescriptor parameterDescriptor = paramDescrs.get(i);\n                        AnnotationCodegen.forParameter(i, mv, state.getTypeMapper()).genAnnotations(parameterDescriptor);\n                        JetValueParameterAnnotationWriter av = JetValueParameterAnnotationWriter.visitParameterAnnotation(mv, i + start);\n                        av.writeName(parameterDescriptor.getName().getName());\n                        av.writeHasDefaultValue(parameterDescriptor.declaresDefaultValue());\n                        av.writeNullable(parameterDescriptor.getType().isNullable());\n                        if (jvmSignature.getKotlinParameterTypes() != null && jvmSignature.getKotlinParameterTypes().get(i) != null) {\n                            av.writeType(jvmSignature.getKotlinParameterTypes().get(i + start).getKotlinSignature());\n                        }\n                        av.visitEnd();\n                    }\n                }\n            }\n\n            if (!isAbstract && state.getClassBuilderMode() == ClassBuilderMode.STUBS) {\n                StubCodegen.generateStubCode(mv);\n            }\n\n\n            if (!isAbstract && state.getClassBuilderMode() == ClassBuilderMode.FULL) {\n                mv.visitCode();\n\n                Label methodBegin = new Label();\n                mv.visitLabel(methodBegin);\n\n                FrameMap frameMap = context.prepareFrame(state.getTypeMapper());\n\n                ExpressionCodegen codegen =\n                        new ExpressionCodegen(mv, frameMap, jvmSignature.getAsmMethod().getReturnType(), context, state);\n\n                Type[] argTypes = jvmSignature.getAsmMethod().getArgumentTypes();\n                int add = 0;\n\n                if (kind == OwnerKind.TRAIT_IMPL) {\n                    add++;\n                }\n\n                if (receiverParameter.exists()) {\n                    add++;\n                }\n\n                for (int i = 0; i < paramDescrs.size(); i++) {\n                    ValueParameterDescriptor parameter = paramDescrs.get(i);\n                    frameMap.enter(parameter, argTypes[i + add]);\n                }\n\n                if (!isStatic &&\n                    (kind instanceof OwnerKind.DelegateKind) != (functionDescriptor.getKind() == FunctionDescriptor.Kind.DELEGATION)) {\n                    throw new IllegalStateException(\"mismatching kind in \" + functionDescriptor);\n                }\n\n                Map<Name, Label> mapLabelsToDivideLocalVarVisibilityForSharedVar = new HashMap<Name, Label>();\n\n                if (kind instanceof OwnerKind.StaticDelegateKind) {\n                    OwnerKind.StaticDelegateKind dk = (OwnerKind.StaticDelegateKind) kind;\n                    InstructionAdapter iv = new InstructionAdapter(mv);\n                    for (int i = 0, k = 0; i < argTypes.length; i++) {\n                        Type argType = argTypes[i];\n                        iv.load(k, argType);\n                        //noinspection AssignmentToForLoopParameter\n                        k += argType.getSize();\n                    }\n                    iv.invokestatic(dk.getOwnerClass(), jvmSignature.getAsmMethod().getName(), jvmSignature.getAsmMethod().getDescriptor());\n                    iv.areturn(jvmSignature.getAsmMethod().getReturnType());\n                }\n                else if (kind instanceof OwnerKind.DelegateKind) {\n                    OwnerKind.DelegateKind dk = (OwnerKind.DelegateKind) kind;\n                    InstructionAdapter iv = new InstructionAdapter(mv);\n                    iv.load(0, OBJECT_TYPE);\n                    dk.getDelegate().put(OBJECT_TYPE, iv);\n                    for (int i = 0; i < argTypes.length; i++) {\n                        Type argType = argTypes[i];\n                        iv.load(i + 1, argType);\n                    }\n                    iv.invokeinterface(dk.getOwnerClass(), jvmSignature.getAsmMethod().getName(),\n                                       jvmSignature.getAsmMethod().getDescriptor());\n                    iv.areturn(jvmSignature.getAsmMethod().getReturnType());\n                }\n                else {\n                    for (ValueParameterDescriptor parameter : paramDescrs) {\n                        Type sharedVarType = state.getTypeMapper().getSharedVarType(parameter);\n                        if (sharedVarType != null) {\n                            Type localVarType = state.getTypeMapper().mapType(parameter.getType(), JetTypeMapperMode.VALUE);\n                            int index = frameMap.getIndex(parameter);\n                            mv.visitTypeInsn(NEW, sharedVarType.getInternalName());\n                            mv.visitInsn(DUP);\n                            mv.visitInsn(DUP);\n                            mv.visitMethodInsn(INVOKESPECIAL, sharedVarType.getInternalName(), \"<init>\", \"()V\");\n                            mv.visitVarInsn(localVarType.getOpcode(ILOAD), index);\n                            mv.visitFieldInsn(PUTFIELD, sharedVarType.getInternalName(), \"ref\",\n                                              StackValue.refType(localVarType).getDescriptor());\n\n                            Label labelToDivideLocalVarForSharedVarVisibility = new Label();\n                            mv.visitLabel(labelToDivideLocalVarForSharedVarVisibility);\n                            mapLabelsToDivideLocalVarVisibilityForSharedVar\n                                    .put(parameter.getName(), labelToDivideLocalVarForSharedVarVisibility);\n\n                            mv.visitVarInsn(sharedVarType.getOpcode(ISTORE), index);\n                        }\n                    }\n\n                    codegen.returnExpression(bodyExpressions);\n                }\n\n                Label methodEnd = new Label();\n                mv.visitLabel(methodEnd);\n\n                Collection<String> localVariableNames = new HashSet<String>();\n                localVariableNames.addAll(codegen.getLocalVariableNamesForExpression());\n                for (ValueParameterDescriptor parameterDescriptor : paramDescrs) {\n                    localVariableNames.add(parameterDescriptor.getName().getName());\n                }\n\n                int k = 0;\n\n                if (expectedThisObject.exists()) {\n                    Type type = state.getTypeMapper().mapType(expectedThisObject.getType(), JetTypeMapperMode.VALUE);\n                    // TODO: specify signature\n                    mv.visitLocalVariable(\"this\", type.getDescriptor(), null, methodBegin, methodEnd, k++);\n                }\n                else if (fun instanceof JetFunctionLiteralExpression ||\n                         isLocalFun(bindingContext, functionDescriptor)) {\n                    Type type = state.getTypeMapper().mapType(\n                            context.getThisDescriptor().getDefaultType(), JetTypeMapperMode.VALUE);\n                    mv.visitLocalVariable(\"this\", type.getDescriptor(), null, methodBegin, methodEnd, k++);\n                }\n\n                if (receiverParameter.exists()) {\n                    Type type = state.getTypeMapper().mapType(receiverParameter.getType(), JetTypeMapperMode.VALUE);\n                    // TODO: specify signature\n                    mv.visitLocalVariable(\"this$receiver\", type.getDescriptor(), null, methodBegin, methodEnd, k);\n                    k += type.getSize();\n                }\n\n                for (ValueParameterDescriptor parameter : paramDescrs) {\n                    Type type = state.getTypeMapper().mapType(parameter.getType(), JetTypeMapperMode.VALUE);\n                    // TODO: specify signature\n\n                    Label divideLabel = mapLabelsToDivideLocalVarVisibilityForSharedVar.get(parameter.getName());\n                    String parameterName = parameter.getName().getName();\n                    if (divideLabel != null) {\n                        Type sharedVarType = state.getTypeMapper().getSharedVarType(parameter);\n                        mv.visitLocalVariable(parameterName, type.getDescriptor(), null, methodBegin, divideLabel, k);\n\n                        String nameForSharedVar = generateTmpVariableName(localVariableNames);\n                        localVariableNames.add(nameForSharedVar);\n\n                        mv.visitLocalVariable(nameForSharedVar, sharedVarType.getDescriptor(), null, divideLabel, methodEnd, k);\n                        k += Math.max(type.getSize(), sharedVarType.getSize());\n                    }\n                    else {\n                        mv.visitLocalVariable(parameter.getName().getName(), type.getDescriptor(), null, methodBegin, methodEnd, k);\n                        k += type.getSize();\n                    }\n                }\n\n                endVisit(mv, null, fun);\n\n                generateBridgeIfNeeded(owner, state, v, jvmSignature.getAsmMethod(), functionDescriptor, kind);\n            }\n        }\n\n        generateDefaultIfNeeded(context, state, v, jvmSignature.getAsmMethod(), functionDescriptor, kind);\n    }","id":48569,"modified_method":"private void generatedMethod(\n            JetExpression bodyExpressions,\n            JvmMethodSignature jvmSignature,\n            boolean needJetAnnotations, @Nullable String propertyTypeSignature,\n            MethodContext context,\n            FunctionDescriptor functionDescriptor,\n            JetDeclarationWithBody fun\n    ) {\n        checkMustGenerateCode(functionDescriptor);\n\n        List<ValueParameterDescriptor> paramDescrs = functionDescriptor.getValueParameters();\n\n        int flags = getVisibilityAccessFlag(functionDescriptor);\n\n        if (!functionDescriptor.getValueParameters().isEmpty()\n            && functionDescriptor.getValueParameters().get(functionDescriptor.getValueParameters().size() - 1)\n                       .getVarargElementType() != null) {\n            flags |= ACC_VARARGS;\n        }\n\n        Modality modality = functionDescriptor.getModality();\n        if (modality == Modality.FINAL) {\n            DeclarationDescriptor containingDeclaration = functionDescriptor.getContainingDeclaration();\n            if (!(containingDeclaration instanceof ClassDescriptor) ||\n                ((ClassDescriptor) containingDeclaration).getKind() != ClassKind.TRAIT) {\n                flags |= ACC_FINAL;\n            }\n        }\n\n        OwnerKind kind = context.getContextKind();\n\n        if (kind == OwnerKind.TRAIT_IMPL) {\n            needJetAnnotations = false;\n        }\n\n        ReceiverDescriptor expectedThisObject = functionDescriptor.getExpectedThisObject();\n        ReceiverDescriptor receiverParameter = functionDescriptor.getReceiverParameter();\n\n        if (kind != OwnerKind.TRAIT_IMPL || bodyExpressions != null) {\n            boolean isStatic = kind == OwnerKind.NAMESPACE || kind instanceof OwnerKind.StaticDelegateKind;\n            if (isStatic || kind == OwnerKind.TRAIT_IMPL) {\n                flags |= ACC_STATIC;\n            }\n\n            boolean isAbstract = (\n                                         modality == Modality.ABSTRACT\n                                         || isInterface(functionDescriptor.getContainingDeclaration())\n                                 ) && !isStatic && kind != OwnerKind.TRAIT_IMPL;\n            if (isAbstract) flags |= ACC_ABSTRACT;\n\n            final MethodVisitor mv =\n                    v.newMethod(fun, flags, jvmSignature.getAsmMethod().getName(), jvmSignature.getAsmMethod().getDescriptor(),\n                                jvmSignature.getGenericsSignature(), null);\n            AnnotationCodegen.forMethod(mv, state.getTypeMapper()).genAnnotations(functionDescriptor);\n            if (state.getClassBuilderMode() != ClassBuilderMode.SIGNATURES) {\n                int start = 0;\n                if (needJetAnnotations) {\n                    if (functionDescriptor instanceof PropertyAccessorDescriptor) {\n                        PropertyCodegen.generateJetPropertyAnnotation(mv, propertyTypeSignature, jvmSignature.getKotlinTypeParameter(),\n                                                                      ((PropertyAccessorDescriptor) functionDescriptor)\n                                                                              .getCorrespondingProperty(),\n                                                                      functionDescriptor.getVisibility());\n                    }\n                    else if (functionDescriptor instanceof SimpleFunctionDescriptor) {\n                        if (propertyTypeSignature != null) {\n                            throw new IllegalStateException();\n                        }\n                        JetMethodAnnotationWriter aw = JetMethodAnnotationWriter.visitAnnotation(mv);\n                        BitSet kotlinFlags = getFlagsForVisibility(functionDescriptor.getVisibility());\n                        if (isInterface(functionDescriptor.getContainingDeclaration()) && modality != Modality.ABSTRACT) {\n                            kotlinFlags.set(modality == Modality.FINAL\n                                            ? JvmStdlibNames.FLAG_FORCE_FINAL_BIT\n                                            : JvmStdlibNames.FLAG_FORCE_OPEN_BIT);\n                        }\n                        aw.writeFlags(kotlinFlags);\n                        aw.writeNullableReturnType(functionDescriptor.getReturnType().isNullable());\n                        aw.writeTypeParameters(jvmSignature.getKotlinTypeParameter());\n                        aw.writeReturnType(jvmSignature.getKotlinReturnType());\n                        aw.visitEnd();\n                    }\n                    else {\n                        throw new IllegalStateException();\n                    }\n\n                    if (receiverParameter.exists()) {\n                        JetValueParameterAnnotationWriter av = JetValueParameterAnnotationWriter.visitParameterAnnotation(mv, start++);\n                        av.writeName(\"this$receiver\");\n                        av.writeNullable(receiverParameter.getType().isNullable());\n                        av.writeReceiver();\n                        if (jvmSignature.getKotlinParameterTypes() != null && jvmSignature.getKotlinParameterTypes().get(0) != null) {\n                            av.writeType(jvmSignature.getKotlinParameterTypes().get(0).getKotlinSignature());\n                        }\n                        av.visitEnd();\n                    }\n                    for (int i = 0; i != paramDescrs.size(); ++i) {\n                        ValueParameterDescriptor parameterDescriptor = paramDescrs.get(i);\n                        AnnotationCodegen.forParameter(i, mv, state.getTypeMapper()).genAnnotations(parameterDescriptor);\n                        JetValueParameterAnnotationWriter av = JetValueParameterAnnotationWriter.visitParameterAnnotation(mv, i + start);\n                        av.writeName(parameterDescriptor.getName().getName());\n                        av.writeHasDefaultValue(parameterDescriptor.declaresDefaultValue());\n                        av.writeNullable(parameterDescriptor.getType().isNullable());\n                        if (jvmSignature.getKotlinParameterTypes() != null && jvmSignature.getKotlinParameterTypes().get(i) != null) {\n                            av.writeType(jvmSignature.getKotlinParameterTypes().get(i + start).getKotlinSignature());\n                        }\n                        av.visitEnd();\n                    }\n                }\n            }\n\n            if (!isAbstract && state.getClassBuilderMode() == ClassBuilderMode.STUBS) {\n                StubCodegen.generateStubCode(mv);\n            }\n\n\n            if (!isAbstract && state.getClassBuilderMode() == ClassBuilderMode.FULL) {\n                mv.visitCode();\n\n                Label methodBegin = new Label();\n                mv.visitLabel(methodBegin);\n\n                FrameMap frameMap = context.prepareFrame(state.getTypeMapper());\n\n                ExpressionCodegen codegen =\n                        new ExpressionCodegen(mv, frameMap, jvmSignature.getAsmMethod().getReturnType(), context, state);\n\n                Type[] argTypes = jvmSignature.getAsmMethod().getArgumentTypes();\n                int add = 0;\n\n                if (kind == OwnerKind.TRAIT_IMPL) {\n                    add++;\n                }\n\n                if (receiverParameter.exists()) {\n                    add++;\n                }\n\n                for (int i = 0; i < paramDescrs.size(); i++) {\n                    ValueParameterDescriptor parameter = paramDescrs.get(i);\n                    frameMap.enter(parameter, argTypes[i + add]);\n                }\n\n                if (!isStatic &&\n                    (kind instanceof OwnerKind.DelegateKind) != (functionDescriptor.getKind() == FunctionDescriptor.Kind.DELEGATION)) {\n                    throw new IllegalStateException(\"mismatching kind in \" + functionDescriptor);\n                }\n\n                Map<Name, Label> mapLabelsToDivideLocalVarVisibilityForSharedVar = new HashMap<Name, Label>();\n\n                if (kind instanceof OwnerKind.StaticDelegateKind) {\n                    OwnerKind.StaticDelegateKind dk = (OwnerKind.StaticDelegateKind) kind;\n                    InstructionAdapter iv = new InstructionAdapter(mv);\n                    for (int i = 0, k = 0; i < argTypes.length; i++) {\n                        Type argType = argTypes[i];\n                        iv.load(k, argType);\n                        //noinspection AssignmentToForLoopParameter\n                        k += argType.getSize();\n                    }\n                    iv.invokestatic(dk.getOwnerClass(), jvmSignature.getAsmMethod().getName(), jvmSignature.getAsmMethod().getDescriptor());\n                    iv.areturn(jvmSignature.getAsmMethod().getReturnType());\n                }\n                else if (kind instanceof OwnerKind.DelegateKind) {\n                    OwnerKind.DelegateKind dk = (OwnerKind.DelegateKind) kind;\n                    InstructionAdapter iv = new InstructionAdapter(mv);\n                    iv.load(0, OBJECT_TYPE);\n                    dk.getDelegate().put(OBJECT_TYPE, iv);\n                    for (int i = 0; i < argTypes.length; i++) {\n                        Type argType = argTypes[i];\n                        iv.load(i + 1, argType);\n                    }\n                    iv.invokeinterface(dk.getOwnerClass(), jvmSignature.getAsmMethod().getName(),\n                                       jvmSignature.getAsmMethod().getDescriptor());\n                    iv.areturn(jvmSignature.getAsmMethod().getReturnType());\n                }\n                else {\n                    for (ValueParameterDescriptor parameter : paramDescrs) {\n                        Type sharedVarType = state.getTypeMapper().getSharedVarType(parameter);\n                        if (sharedVarType != null) {\n                            Type localVarType = state.getTypeMapper().mapType(parameter.getType(), JetTypeMapperMode.VALUE);\n                            int index = frameMap.getIndex(parameter);\n                            mv.visitTypeInsn(NEW, sharedVarType.getInternalName());\n                            mv.visitInsn(DUP);\n                            mv.visitInsn(DUP);\n                            mv.visitMethodInsn(INVOKESPECIAL, sharedVarType.getInternalName(), \"<init>\", \"()V\");\n                            mv.visitVarInsn(localVarType.getOpcode(ILOAD), index);\n                            mv.visitFieldInsn(PUTFIELD, sharedVarType.getInternalName(), \"ref\",\n                                              StackValue.refType(localVarType).getDescriptor());\n\n                            Label labelToDivideLocalVarForSharedVarVisibility = new Label();\n                            mv.visitLabel(labelToDivideLocalVarForSharedVarVisibility);\n                            mapLabelsToDivideLocalVarVisibilityForSharedVar\n                                    .put(parameter.getName(), labelToDivideLocalVarForSharedVarVisibility);\n\n                            mv.visitVarInsn(sharedVarType.getOpcode(ISTORE), index);\n                        }\n                    }\n\n                    codegen.returnExpression(bodyExpressions);\n                }\n\n                Label methodEnd = new Label();\n                mv.visitLabel(methodEnd);\n\n                Collection<String> localVariableNames = new HashSet<String>();\n                localVariableNames.addAll(codegen.getLocalVariableNamesForExpression());\n                for (ValueParameterDescriptor parameterDescriptor : paramDescrs) {\n                    localVariableNames.add(parameterDescriptor.getName().getName());\n                }\n\n                int k = 0;\n\n                if (expectedThisObject.exists()) {\n                    Type type = state.getTypeMapper().mapType(expectedThisObject.getType(), JetTypeMapperMode.VALUE);\n                    // TODO: specify signature\n                    mv.visitLocalVariable(\"this\", type.getDescriptor(), null, methodBegin, methodEnd, k++);\n                }\n                else if (fun instanceof JetFunctionLiteralExpression ||\n                         isLocalFun(bindingContext, functionDescriptor)) {\n                    Type type = state.getTypeMapper().mapType(\n                            context.getThisDescriptor().getDefaultType(), JetTypeMapperMode.VALUE);\n                    mv.visitLocalVariable(\"this\", type.getDescriptor(), null, methodBegin, methodEnd, k++);\n                }\n\n                if (receiverParameter.exists()) {\n                    Type type = state.getTypeMapper().mapType(receiverParameter.getType(), JetTypeMapperMode.VALUE);\n                    // TODO: specify signature\n                    mv.visitLocalVariable(\"this$receiver\", type.getDescriptor(), null, methodBegin, methodEnd, k);\n                    k += type.getSize();\n                }\n\n                for (ValueParameterDescriptor parameter : paramDescrs) {\n                    Type type = state.getTypeMapper().mapType(parameter.getType(), JetTypeMapperMode.VALUE);\n                    // TODO: specify signature\n\n                    Label divideLabel = mapLabelsToDivideLocalVarVisibilityForSharedVar.get(parameter.getName());\n                    String parameterName = parameter.getName().getName();\n                    if (divideLabel != null) {\n                        Type sharedVarType = state.getTypeMapper().getSharedVarType(parameter);\n                        mv.visitLocalVariable(parameterName, type.getDescriptor(), null, methodBegin, divideLabel, k);\n\n                        String nameForSharedVar = generateTmpVariableName(localVariableNames);\n                        localVariableNames.add(nameForSharedVar);\n\n                        mv.visitLocalVariable(nameForSharedVar, sharedVarType.getDescriptor(), null, divideLabel, methodEnd, k);\n                        k += Math.max(type.getSize(), sharedVarType.getSize());\n                    }\n                    else {\n                        mv.visitLocalVariable(parameter.getName().getName(), type.getDescriptor(), null, methodBegin, methodEnd, k);\n                        k += type.getSize();\n                    }\n                }\n\n                endVisit(mv, null, fun);\n\n                generateBridgeIfNeeded(owner, state, v, jvmSignature.getAsmMethod(), functionDescriptor, kind);\n            }\n        }\n\n        generateDefaultIfNeeded(context, state, v, jvmSignature.getAsmMethod(), functionDescriptor, kind);\n    }","commit_id":"410922c58d486cf526a481b8a841a258eb986b4c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public NamespaceLikeBuilder getBuilder() {\n        if (builder == null) {\n            final NamespaceLikeBuilder superBuilder = super.getBuilder();\n            builder = new NamespaceLikeBuilderDummy() {\n                @NotNull\n                @Override\n                public DeclarationDescriptor getOwnerForChildren() {\n                    return superBuilder.getOwnerForChildren();\n                }\n\n                @Override\n                public void addObjectDescriptor(@NotNull MutableClassDescriptorLite objectDescriptor) {\n                    superBuilder.addObjectDescriptor(objectDescriptor);\n                }\n\n                @Override\n                public void addClassifierDescriptor(@NotNull MutableClassDescriptorLite classDescriptor) {\n                    superBuilder.addClassifierDescriptor(classDescriptor);\n                    scopeForMemberResolution.addClassifierDescriptor(classDescriptor);\n                }\n\n                @Override\n                public void addFunctionDescriptor(@NotNull SimpleFunctionDescriptor functionDescriptor) {\n                    superBuilder.addFunctionDescriptor(functionDescriptor);\n                    functions.add(functionDescriptor);\n                    if (functionDescriptor.getKind() != CallableMemberDescriptor.Kind.FAKE_OVERRIDE) {\n                        declaredCallableMembers.add(functionDescriptor);\n                    }\n                    allCallableMembers.add(functionDescriptor);\n                    scopeForMemberResolution.addFunctionDescriptor(functionDescriptor);\n                }\n\n                @Override\n                public ClassObjectStatus setClassObjectDescriptor(@NotNull final MutableClassDescriptorLite classObjectDescriptor) {\n                    ClassObjectStatus r = superBuilder.setClassObjectDescriptor(classObjectDescriptor);\n                    if (r != ClassObjectStatus.OK) {\n                        return r;\n                    }\n\n                    // Members of the class object are accessible from the class\n                    // The scope must be lazy, because classObjectDescriptor may not by fully built yet\n                    scopeForMemberResolution.importScope(new AbstractScopeAdapter() {\n                        @NotNull\n                        @Override\n                        protected JetScope getWorkerScope() {\n                            return classObjectDescriptor.getDefaultType().getMemberScope();\n                        }\n\n                        @NotNull\n                        @Override\n                        public ReceiverDescriptor getImplicitReceiver() {\n                            return classObjectDescriptor.getImplicitReceiver();\n                        }\n                    }\n                    );\n\n                    return ClassObjectStatus.OK;\n                }\n\n                @Override\n                public void addPropertyDescriptor(@NotNull PropertyDescriptor propertyDescriptor) {\n                    superBuilder.addPropertyDescriptor(propertyDescriptor);\n                    properties.add(propertyDescriptor);\n                    if (propertyDescriptor.getKind() != CallableMemberDescriptor.Kind.FAKE_OVERRIDE) {\n                        declaredCallableMembers.add(propertyDescriptor);\n                    }\n                    allCallableMembers.add(propertyDescriptor);\n                    scopeForMemberResolution.addPropertyDescriptor(propertyDescriptor);\n                }\n            };\n        }\n\n        return builder;\n    }","id":48570,"modified_method":"@Override\n    public NamespaceLikeBuilder getBuilder() {\n        if (builder == null) {\n            final NamespaceLikeBuilder superBuilder = super.getBuilder();\n            builder = new NamespaceLikeBuilderDummy() {\n                @NotNull\n                @Override\n                public DeclarationDescriptor getOwnerForChildren() {\n                    return superBuilder.getOwnerForChildren();\n                }\n\n                @Override\n                public void addObjectDescriptor(@NotNull MutableClassDescriptorLite objectDescriptor) {\n                    superBuilder.addObjectDescriptor(objectDescriptor);\n                }\n\n                @Override\n                public void addClassifierDescriptor(@NotNull MutableClassDescriptorLite classDescriptor) {\n                    superBuilder.addClassifierDescriptor(classDescriptor);\n                    scopeForMemberResolution.addClassifierDescriptor(classDescriptor);\n                }\n\n                @Override\n                public void addFunctionDescriptor(@NotNull SimpleFunctionDescriptor functionDescriptor) {\n                    superBuilder.addFunctionDescriptor(functionDescriptor);\n                    functions.add(functionDescriptor);\n                    if (functionDescriptor.getKind().isReal()) {\n                        declaredCallableMembers.add(functionDescriptor);\n                    }\n                    allCallableMembers.add(functionDescriptor);\n                    scopeForMemberResolution.addFunctionDescriptor(functionDescriptor);\n                }\n\n                @Override\n                public ClassObjectStatus setClassObjectDescriptor(@NotNull final MutableClassDescriptorLite classObjectDescriptor) {\n                    ClassObjectStatus r = superBuilder.setClassObjectDescriptor(classObjectDescriptor);\n                    if (r != ClassObjectStatus.OK) {\n                        return r;\n                    }\n\n                    // Members of the class object are accessible from the class\n                    // The scope must be lazy, because classObjectDescriptor may not by fully built yet\n                    scopeForMemberResolution.importScope(new AbstractScopeAdapter() {\n                        @NotNull\n                        @Override\n                        protected JetScope getWorkerScope() {\n                            return classObjectDescriptor.getDefaultType().getMemberScope();\n                        }\n\n                        @NotNull\n                        @Override\n                        public ReceiverDescriptor getImplicitReceiver() {\n                            return classObjectDescriptor.getImplicitReceiver();\n                        }\n                    }\n                    );\n\n                    return ClassObjectStatus.OK;\n                }\n\n                @Override\n                public void addPropertyDescriptor(@NotNull PropertyDescriptor propertyDescriptor) {\n                    superBuilder.addPropertyDescriptor(propertyDescriptor);\n                    properties.add(propertyDescriptor);\n                    if (propertyDescriptor.getKind().isReal()) {\n                        declaredCallableMembers.add(propertyDescriptor);\n                    }\n                    allCallableMembers.add(propertyDescriptor);\n                    scopeForMemberResolution.addPropertyDescriptor(propertyDescriptor);\n                }\n            };\n        }\n\n        return builder;\n    }","commit_id":"410922c58d486cf526a481b8a841a258eb986b4c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void generateDefaultSetter(PropertyDescriptor propertyDescriptor, int flags, PsiElement origin) {\n        if (propertyDescriptor.getKind() == CallableMemberDescriptor.Kind.FAKE_OVERRIDE) {\n            throw new IllegalStateException(\"must not generate code for fake overrides\");\n        }\n\n        if (kind == OwnerKind.TRAIT_IMPL) {\n            return;\n        }\n\n        if (kind == OwnerKind.NAMESPACE) {\n            flags |= ACC_STATIC;\n        }\n\n        PsiElement psiElement = descriptorToDeclaration(state.getBindingContext(), propertyDescriptor.getContainingDeclaration());\n        boolean isTrait = psiElement instanceof JetClass && ((JetClass) psiElement).isTrait();\n        if (isTrait && !(kind instanceof OwnerKind.DelegateKind)) {\n            flags |= ACC_ABSTRACT;\n        }\n\n        if (propertyDescriptor.getModality() == Modality.FINAL) {\n            flags |= ACC_FINAL;\n        }\n\n        JvmPropertyAccessorSignature signature = state.getTypeMapper().mapSetterSignature(propertyDescriptor, kind);\n        assert true;\n        final String descriptor = signature.getJvmMethodSignature().getAsmMethod().getDescriptor();\n        MethodVisitor mv = v.newMethod(origin, flags, setterName(propertyDescriptor.getName()), descriptor, null, null);\n        PropertySetterDescriptor setter = propertyDescriptor.getSetter();\n        assert setter != null;\n        generateJetPropertyAnnotation(mv, signature.getPropertyTypeKotlinSignature(),\n                                      signature.getJvmMethodSignature().getKotlinTypeParameter(), propertyDescriptor,\n                                      setter.getVisibility());\n\n        assert !setter.hasBody();\n        AnnotationCodegen.forMethod(mv, state.getTypeMapper()).genAnnotations(setter);\n\n        if (state.getClassBuilderMode() != ClassBuilderMode.SIGNATURES && (!isTrait || kind instanceof OwnerKind.DelegateKind)) {\n            if (propertyDescriptor.getModality() != Modality.ABSTRACT) {\n                mv.visitCode();\n                if (state.getClassBuilderMode() == ClassBuilderMode.STUBS) {\n                    StubCodegen.generateStubThrow(mv);\n                }\n                else {\n                    InstructionAdapter iv = new InstructionAdapter(mv);\n                    final Type type = state.getTypeMapper().mapType(propertyDescriptor.getType(), JetTypeMapperMode.VALUE);\n                    int paramCode = 0;\n                    if (kind != OwnerKind.NAMESPACE) {\n                        iv.load(0, OBJECT_TYPE);\n                        paramCode = 1;\n                    }\n\n                    if ((kind instanceof OwnerKind.DelegateKind) != (propertyDescriptor.getKind() == FunctionDescriptor.Kind.DELEGATION)) {\n                        throw new IllegalStateException(\"mismatching kind in \" + propertyDescriptor);\n                    }\n\n                    if (kind instanceof OwnerKind.DelegateKind) {\n                        OwnerKind.DelegateKind dk = (OwnerKind.DelegateKind) kind;\n                        iv.load(0, OBJECT_TYPE);\n                        dk.getDelegate().put(OBJECT_TYPE, iv);\n\n                        iv.load(paramCode, type);\n                        iv.invokeinterface(dk.getOwnerClass(), setterName(propertyDescriptor.getName()), descriptor);\n                    }\n                    else {\n                        iv.load(paramCode, type);\n                        iv.visitFieldInsn(kind == OwnerKind.NAMESPACE ? PUTSTATIC : PUTFIELD,\n                                          state.getTypeMapper().getOwner(propertyDescriptor, kind).getInternalName(),\n                                          propertyDescriptor.getName().getName(),\n                                          type.getDescriptor());\n                    }\n\n                    iv.visitInsn(RETURN);\n                }\n            }\n            FunctionCodegen.endVisit(mv, \"setter\", origin);\n        }\n    }","id":48571,"modified_method":"public void generateDefaultSetter(PropertyDescriptor propertyDescriptor, int flags, PsiElement origin) {\n        checkMustGenerateCode(propertyDescriptor);\n\n        if (kind == OwnerKind.TRAIT_IMPL) {\n            return;\n        }\n\n        if (kind == OwnerKind.NAMESPACE) {\n            flags |= ACC_STATIC;\n        }\n\n        PsiElement psiElement = descriptorToDeclaration(state.getBindingContext(), propertyDescriptor.getContainingDeclaration());\n        boolean isTrait = psiElement instanceof JetClass && ((JetClass) psiElement).isTrait();\n        if (isTrait && !(kind instanceof OwnerKind.DelegateKind)) {\n            flags |= ACC_ABSTRACT;\n        }\n\n        if (propertyDescriptor.getModality() == Modality.FINAL) {\n            flags |= ACC_FINAL;\n        }\n\n        JvmPropertyAccessorSignature signature = state.getTypeMapper().mapSetterSignature(propertyDescriptor, kind);\n        assert true;\n        final String descriptor = signature.getJvmMethodSignature().getAsmMethod().getDescriptor();\n        MethodVisitor mv = v.newMethod(origin, flags, setterName(propertyDescriptor.getName()), descriptor, null, null);\n        PropertySetterDescriptor setter = propertyDescriptor.getSetter();\n        assert setter != null;\n        generateJetPropertyAnnotation(mv, signature.getPropertyTypeKotlinSignature(),\n                                      signature.getJvmMethodSignature().getKotlinTypeParameter(), propertyDescriptor,\n                                      setter.getVisibility());\n\n        assert !setter.hasBody();\n        AnnotationCodegen.forMethod(mv, state.getTypeMapper()).genAnnotations(setter);\n\n        if (state.getClassBuilderMode() != ClassBuilderMode.SIGNATURES && (!isTrait || kind instanceof OwnerKind.DelegateKind)) {\n            if (propertyDescriptor.getModality() != Modality.ABSTRACT) {\n                mv.visitCode();\n                if (state.getClassBuilderMode() == ClassBuilderMode.STUBS) {\n                    StubCodegen.generateStubThrow(mv);\n                }\n                else {\n                    InstructionAdapter iv = new InstructionAdapter(mv);\n                    final Type type = state.getTypeMapper().mapType(propertyDescriptor.getType(), JetTypeMapperMode.VALUE);\n                    int paramCode = 0;\n                    if (kind != OwnerKind.NAMESPACE) {\n                        iv.load(0, OBJECT_TYPE);\n                        paramCode = 1;\n                    }\n\n                    if ((kind instanceof OwnerKind.DelegateKind) != (propertyDescriptor.getKind() == FunctionDescriptor.Kind.DELEGATION)) {\n                        throw new IllegalStateException(\"mismatching kind in \" + propertyDescriptor);\n                    }\n\n                    if (kind instanceof OwnerKind.DelegateKind) {\n                        OwnerKind.DelegateKind dk = (OwnerKind.DelegateKind) kind;\n                        iv.load(0, OBJECT_TYPE);\n                        dk.getDelegate().put(OBJECT_TYPE, iv);\n\n                        iv.load(paramCode, type);\n                        iv.invokeinterface(dk.getOwnerClass(), setterName(propertyDescriptor.getName()), descriptor);\n                    }\n                    else {\n                        iv.load(paramCode, type);\n                        iv.visitFieldInsn(kind == OwnerKind.NAMESPACE ? PUTSTATIC : PUTFIELD,\n                                          state.getTypeMapper().getOwner(propertyDescriptor, kind).getInternalName(),\n                                          propertyDescriptor.getName().getName(),\n                                          type.getDescriptor());\n                    }\n\n                    iv.visitInsn(RETURN);\n                }\n            }\n            FunctionCodegen.endVisit(mv, \"setter\", origin);\n        }\n    }","commit_id":"410922c58d486cf526a481b8a841a258eb986b4c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void generateDefaultGetter(PropertyDescriptor propertyDescriptor, int flags, PsiElement origin) {\n        if (propertyDescriptor.getKind() == CallableMemberDescriptor.Kind.FAKE_OVERRIDE) {\n            throw new IllegalStateException(\"must not generate code for fake overrides\");\n        }\n\n        if (kind == OwnerKind.TRAIT_IMPL) {\n            return;\n        }\n\n        if (kind == OwnerKind.NAMESPACE) {\n            flags |= ACC_STATIC;\n        }\n\n        PsiElement psiElement = descriptorToDeclaration(state.getBindingContext(), propertyDescriptor.getContainingDeclaration());\n        boolean isTrait = psiElement instanceof JetClass && ((JetClass) psiElement).isTrait();\n        if (isTrait && !(kind instanceof OwnerKind.DelegateKind)) {\n            flags |= ACC_ABSTRACT;\n        }\n\n        if (propertyDescriptor.getModality() == Modality.FINAL) {\n            flags |= ACC_FINAL;\n        }\n\n        JvmPropertyAccessorSignature signature = state.getTypeMapper().mapGetterSignature(propertyDescriptor, kind);\n        final String descriptor = signature.getJvmMethodSignature().getAsmMethod().getDescriptor();\n        String getterName = getterName(propertyDescriptor.getName());\n        MethodVisitor mv = v.newMethod(origin, flags, getterName, descriptor, null, null);\n        PropertyGetterDescriptor getter = propertyDescriptor.getGetter();\n        generateJetPropertyAnnotation(mv, signature.getPropertyTypeKotlinSignature(),\n                                      signature.getJvmMethodSignature().getKotlinTypeParameter(), propertyDescriptor,\n                                      getter == null\n                                      ? propertyDescriptor.getVisibility()\n                                      : getter.getVisibility());\n\n        if (getter != null) {\n            //noinspection ConstantConditions\n            assert !getter.hasBody();\n            AnnotationCodegen.forMethod(mv, state.getTypeMapper()).genAnnotations(getter);\n        }\n\n        if (state.getClassBuilderMode() != ClassBuilderMode.SIGNATURES && (!isTrait || kind instanceof OwnerKind.DelegateKind)) {\n            if (propertyDescriptor.getModality() != Modality.ABSTRACT) {\n                mv.visitCode();\n                if (state.getClassBuilderMode() == ClassBuilderMode.STUBS) {\n                    StubCodegen.generateStubThrow(mv);\n                }\n                else {\n                    InstructionAdapter iv = new InstructionAdapter(mv);\n                    if (kind != OwnerKind.NAMESPACE) {\n                        iv.load(0, OBJECT_TYPE);\n                    }\n                    final Type type = state.getTypeMapper().mapType(propertyDescriptor.getType(), JetTypeMapperMode.VALUE);\n\n                    if ((kind instanceof OwnerKind.DelegateKind) != (propertyDescriptor.getKind() == FunctionDescriptor.Kind.DELEGATION)) {\n                        throw new IllegalStateException(\"mismatching kind in \" + propertyDescriptor);\n                    }\n\n                    if (kind instanceof OwnerKind.DelegateKind) {\n                        OwnerKind.DelegateKind dk = (OwnerKind.DelegateKind) kind;\n                        dk.getDelegate().put(OBJECT_TYPE, iv);\n                        iv.invokeinterface(dk.getOwnerClass(), getterName, descriptor);\n                    }\n                    else {\n                        iv.visitFieldInsn(\n                                kind == OwnerKind.NAMESPACE ? GETSTATIC : GETFIELD,\n                                state.getTypeMapper().getOwner(propertyDescriptor, kind).getInternalName(),\n                                propertyDescriptor.getName().getName(),\n                                type.getDescriptor());\n                    }\n                    iv.areturn(type);\n                }\n            }\n        }\n        FunctionCodegen.endVisit(mv, \"getter\", origin);\n    }","id":48572,"modified_method":"public void generateDefaultGetter(PropertyDescriptor propertyDescriptor, int flags, PsiElement origin) {\n        checkMustGenerateCode(propertyDescriptor);\n\n        if (kind == OwnerKind.TRAIT_IMPL) {\n            return;\n        }\n\n        if (kind == OwnerKind.NAMESPACE) {\n            flags |= ACC_STATIC;\n        }\n\n        PsiElement psiElement = descriptorToDeclaration(state.getBindingContext(), propertyDescriptor.getContainingDeclaration());\n        boolean isTrait = psiElement instanceof JetClass && ((JetClass) psiElement).isTrait();\n        if (isTrait && !(kind instanceof OwnerKind.DelegateKind)) {\n            flags |= ACC_ABSTRACT;\n        }\n\n        if (propertyDescriptor.getModality() == Modality.FINAL) {\n            flags |= ACC_FINAL;\n        }\n\n        JvmPropertyAccessorSignature signature = state.getTypeMapper().mapGetterSignature(propertyDescriptor, kind);\n        final String descriptor = signature.getJvmMethodSignature().getAsmMethod().getDescriptor();\n        String getterName = getterName(propertyDescriptor.getName());\n        MethodVisitor mv = v.newMethod(origin, flags, getterName, descriptor, null, null);\n        PropertyGetterDescriptor getter = propertyDescriptor.getGetter();\n        generateJetPropertyAnnotation(mv, signature.getPropertyTypeKotlinSignature(),\n                                      signature.getJvmMethodSignature().getKotlinTypeParameter(), propertyDescriptor,\n                                      getter == null\n                                      ? propertyDescriptor.getVisibility()\n                                      : getter.getVisibility());\n\n        if (getter != null) {\n            //noinspection ConstantConditions\n            assert !getter.hasBody();\n            AnnotationCodegen.forMethod(mv, state.getTypeMapper()).genAnnotations(getter);\n        }\n\n        if (state.getClassBuilderMode() != ClassBuilderMode.SIGNATURES && (!isTrait || kind instanceof OwnerKind.DelegateKind)) {\n            if (propertyDescriptor.getModality() != Modality.ABSTRACT) {\n                mv.visitCode();\n                if (state.getClassBuilderMode() == ClassBuilderMode.STUBS) {\n                    StubCodegen.generateStubThrow(mv);\n                }\n                else {\n                    InstructionAdapter iv = new InstructionAdapter(mv);\n                    if (kind != OwnerKind.NAMESPACE) {\n                        iv.load(0, OBJECT_TYPE);\n                    }\n                    final Type type = state.getTypeMapper().mapType(propertyDescriptor.getType(), JetTypeMapperMode.VALUE);\n\n                    if ((kind instanceof OwnerKind.DelegateKind) != (propertyDescriptor.getKind() == FunctionDescriptor.Kind.DELEGATION)) {\n                        throw new IllegalStateException(\"mismatching kind in \" + propertyDescriptor);\n                    }\n\n                    if (kind instanceof OwnerKind.DelegateKind) {\n                        OwnerKind.DelegateKind dk = (OwnerKind.DelegateKind) kind;\n                        dk.getDelegate().put(OBJECT_TYPE, iv);\n                        iv.invokeinterface(dk.getOwnerClass(), getterName, descriptor);\n                    }\n                    else {\n                        iv.visitFieldInsn(\n                                kind == OwnerKind.NAMESPACE ? GETSTATIC : GETFIELD,\n                                state.getTypeMapper().getOwner(propertyDescriptor, kind).getInternalName(),\n                                propertyDescriptor.getName().getName(),\n                                type.getDescriptor());\n                    }\n                    iv.areturn(type);\n                }\n            }\n        }\n        FunctionCodegen.endVisit(mv, \"getter\", origin);\n    }","commit_id":"410922c58d486cf526a481b8a841a258eb986b4c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Test\n    public void testMdlMultipleVersions(){\n        // Compile module A/1\n        Boolean result = getCompilerTask(Arrays.asList(\"-src\", path+\"/module/multiversion/a1\"),\n                \"module/multiversion/a1/a/module.ceylon\", \"module/multiversion/a1/a/package.ceylon\", \"module/multiversion/a1/a/A.ceylon\").call();\n        Assert.assertEquals(Boolean.TRUE, result);\n        \n        ErrorCollector collector = new ErrorCollector();\n        // Compile module A/2 with B importing A/1\n        result = getCompilerTask(Arrays.asList(\"-src\", path+\"/module/multiversion/a2:\"+path+\"/module/multiversion/b\"),\n                collector,\n                \"module/multiversion/a2/a/module.ceylon\", \"module/multiversion/a2/a/package.ceylon\", \"module/multiversion/a2/a/A.ceylon\",\n                \"module/multiversion/b/b/module.ceylon\", \"module/multiversion/b/b/B.ceylon\").call();\n        Assert.assertEquals(Boolean.FALSE, result);\n        \n        compareErrors(collector.actualErrors, new CompilerError(-1, \"Trying to import or compile two different versions of the same module: a (1 and 2)\"));\n    }","id":48573,"modified_method":"@Test\n    public void testMdlMultipleVersions(){\n        // Compile module A/1\n        Boolean result = getCompilerTask(Arrays.asList(\"-src\", path+\"/module/multiversion/a1\"),\n                \"module/multiversion/a1/a/module.ceylon\", \"module/multiversion/a1/a/package.ceylon\", \"module/multiversion/a1/a/A.ceylon\").call();\n        Assert.assertEquals(Boolean.TRUE, result);\n        \n        ErrorCollector collector = new ErrorCollector();\n        // Compile module A/2 with B importing A/1\n        result = getCompilerTask(Arrays.asList(\"-src\", path+\"/module/multiversion/a2:\"+path+\"/module/multiversion/b\"),\n                collector,\n                \"module/multiversion/a2/a/module.ceylon\", \"module/multiversion/a2/a/package.ceylon\", \"module/multiversion/a2/a/A.ceylon\",\n                \"module/multiversion/b/b/module.ceylon\", \"module/multiversion/b/b/B.ceylon\").call();\n        Assert.assertEquals(Boolean.FALSE, result);\n        \n        compareErrors(collector.get(Diagnostic.Kind.ERROR), new CompilerError(-1, \"Trying to import or compile two different versions of the same module: a (1 and 2)\"));\n    }","commit_id":"31910dfb0275c4d001fe920c9c397a5bad0be277","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"public CompilerError(long lineNumber, String message) {\n            this.lineNumber = lineNumber;\n            this.message = message;\n        }","id":48574,"modified_method":"public CompilerError(long lineNumber, String message) {\n            this(Diagnostic.Kind.ERROR, lineNumber, message);\n        }","commit_id":"31910dfb0275c4d001fe920c9c397a5bad0be277","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"@Override\n        public void report(Diagnostic diagnostic) {\n            if (diagnostic.getKind() == Diagnostic.Kind.ERROR) {\n                actualErrors.add(new CompilerError(diagnostic.getLineNumber(),\n                        diagnostic.getMessage(Locale.getDefault())));\n            }\n        }","id":48575,"modified_method":"public TreeSet<CompilerError> get(Diagnostic.Kind kind) {\n            TreeSet<CompilerError> result = new TreeSet<CompilerError>();\n            for (CompilerError diagnostic : actualErrors) {\n                if (diagnostic.kind == kind) {\n                    result.add(diagnostic);\n                }\n            }\n            return result;\n        }","commit_id":"31910dfb0275c4d001fe920c9c397a5bad0be277","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"@Override\n        public boolean equals(Object obj) {\n            if (this == obj)\n                return true;\n            if (obj == null)\n                return false;\n            if (getClass() != obj.getClass())\n                return false;\n            CompilerError other = (CompilerError) obj;\n            if (lineNumber != other.lineNumber)\n                return false;\n            if (message == null) {\n                if (other.message != null)\n                    return false;\n            } else if (!message.equals(other.message))\n                return false;\n            return true;\n        }","id":48576,"modified_method":"@Override\n        public boolean equals(Object obj) {\n            if (this == obj)\n                return true;\n            if (obj == null)\n                return false;\n            if (getClass() != obj.getClass())\n                return false;\n            CompilerError other = (CompilerError) obj;\n            if (kind != other.kind)\n                return false;\n            if (lineNumber != other.lineNumber)\n                return false;\n            if (message == null) {\n                if (other.message != null)\n                    return false;\n            } else if (!message.equals(other.message))\n                return false;\n            return true;\n        }","commit_id":"31910dfb0275c4d001fe920c9c397a5bad0be277","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"@Override\n        public int hashCode() {\n            final int prime = 31;\n            int result = 1;\n            result = prime * result + (int) (lineNumber ^ (lineNumber >>> 32));\n            result = prime * result\n                    + ((message == null) ? 0 : message.hashCode());\n            return result;\n        }","id":48577,"modified_method":"@Override\n        public int hashCode() {\n            final int prime = 31;\n            int result = 1;\n            result = prime * result + ((kind == null) ? 0 : kind.hashCode());\n            result = prime * result + (int) (lineNumber ^ (lineNumber >>> 32));\n            result = prime * result\n                    + ((message == null) ? 0 : message.hashCode());\n            return result;\n        }","commit_id":"31910dfb0275c4d001fe920c9c397a5bad0be277","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"protected void assertErrors(String ceylon, CompilerError... expectedErrors) {\n        // make a compiler task\n        // FIXME: runFileManager.setSourcePath(dir);\n        ErrorCollector collector = new ErrorCollector();\n        \n        CeyloncTaskImpl task = getCompilerTask(defaultOptions, collector, new String[] {ceylon+\".ceylon\"});\n\n        // now compile it all the way\n        Boolean success = task.call();\n\n        Assert.assertFalse(\"Compilation succeeded\", success);\n        \n        TreeSet<CompilerError> actualErrors = collector.actualErrors;\n        compareErrors(actualErrors, expectedErrors);\n    }","id":48578,"modified_method":"protected void assertErrors(String ceylon, CompilerError... expectedErrors) {\n        // make a compiler task\n        // FIXME: runFileManager.setSourcePath(dir);\n        ErrorCollector collector = new ErrorCollector();\n        \n        CeyloncTaskImpl task = getCompilerTask(defaultOptions, collector, new String[] {ceylon+\".ceylon\"});\n\n        // now compile it all the way\n        Boolean success = task.call();\n\n        Assert.assertFalse(\"Compilation succeeded\", success);\n        \n        TreeSet<CompilerError> actualErrors = collector.get(Diagnostic.Kind.ERROR);\n        compareErrors(actualErrors, expectedErrors);\n    }","commit_id":"31910dfb0275c4d001fe920c9c397a5bad0be277","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"@Override\n        public int compareTo(CompilerError o) {\n            long cmp = this.lineNumber - o.lineNumber;\n            if (cmp == 0) {\n                cmp = this.message.compareTo(o.message);\n            }\n            return cmp > 0 ? 1 : cmp < 0 ? -1 : 0;\n        }","id":48579,"modified_method":"@Override\n        public int compareTo(CompilerError o) {\n            long cmp = this.kind.compareTo(o.kind);\n            if (cmp == 0) {\n                cmp = this.lineNumber - o.lineNumber;\n            }\n            if (cmp == 0) {\n                cmp = this.message.compareTo(o.message);\n            }\n            return Long.signum(cmp);\n        }","commit_id":"31910dfb0275c4d001fe920c9c397a5bad0be277","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"/**\n     * Redirects to the specified file or shows backup resource.<p>\n     * \n     * @throws Exception if redirection fails\n     */\n    public void actionShow() throws Exception {\n\n        // try to load the backup resource\n        if (CmsStringUtil.isNotEmpty(getParamVersionid())) {\n            byte[] result = getBackupResourceContent(getCms(), getParamResource(), getParamVersionid());\n            if (result != null) {\n                // get the top level response to change the content type\n                m_controller.getTopResponse().setContentType(\n                    OpenCms.getResourceManager().getMimeType(\n                        getParamResource(),\n                        getCms().getRequestContext().getEncoding()));\n                m_controller.getTopResponse().setContentLength(result.length);\n\n                try {\n                    getJsp().getResponse().getOutputStream().write(result);\n                    getJsp().getResponse().getOutputStream().flush();\n                } catch (IOException e) {\n                    // can usually be ignored\n                    if (LOG.isInfoEnabled()) {\n                        LOG.info(e.getLocalizedMessage());\n                    }\n                    return;\n                }\n            }\n        } else {\n            if (getCms().existsResource(getParamResource(), CmsResourceFilter.DEFAULT)) {\n                String url = getJsp().link(getParamResource());\n                // if in online project\n                if (url.indexOf(\"//:\")<0 && getCms().getRequestContext().currentProject().isOnlineProject()) {\n                    String site = getCms().getRequestContext().getSiteRoot();\n                    if (CmsStringUtil.isEmptyOrWhitespaceOnly(site)) {\n                        site = OpenCms.getSiteManager().getDefaultUri();\n                        if (CmsStringUtil.isEmptyOrWhitespaceOnly(site)) {\n                            url = OpenCms.getSiteManager().getWorkplaceServer() + url;\n                        } else if (CmsSiteManager.getSite(site) == null) {\n                            url = OpenCms.getSiteManager().getWorkplaceServer() + url;\n                        } else {\n                            url = CmsSiteManager.getSite(site).getUrl() + url;\n                        }\n                    } else {\n                        url = CmsSiteManager.getSite(site).getUrl() + url;\n                    }\n                    try {\n                        CmsStaticExportManager manager = OpenCms.getStaticExportManager();\n                        HttpURLConnection.setFollowRedirects(false);\n                        // try to export it\n                        URL exportUrl = new URL(manager.getExportUrl() + manager.getRfsName(getCms(), getParamResource()));\n                        HttpURLConnection urlcon = (HttpURLConnection)exportUrl.openConnection();\n                        // setup the connection and request the resource\n                        urlcon.setRequestMethod(\"GET\");\n                        urlcon.setRequestProperty(CmsRequestUtil.HEADER_OPENCMS_EXPORT, \"true\");\n                        if (manager.getAcceptLanguageHeader() != null) {\n                            urlcon.setRequestProperty(CmsRequestUtil.HEADER_ACCEPT_LANGUAGE, manager.getAcceptLanguageHeader());\n                        } else {\n                            urlcon.setRequestProperty(\n                                CmsRequestUtil.HEADER_ACCEPT_LANGUAGE,\n                                manager.getDefaultAcceptLanguageHeader());\n                        }\n                        if (manager.getAcceptCharsetHeader() != null) {\n                            urlcon.setRequestProperty(CmsRequestUtil.HEADER_ACCEPT_CHARSET, manager.getAcceptCharsetHeader());\n                        } else {\n                            urlcon.setRequestProperty(\n                                CmsRequestUtil.HEADER_ACCEPT_CHARSET,\n                                manager.getDefaultAcceptCharsetHeader());\n                        }\n                        // now perform the request to export\n                        urlcon.connect();\n                        urlcon.getResponseCode();\n                        urlcon.disconnect();\n\n                    } catch (Exception e) {\n                        // ignore\n                    }\n                }\n                getJsp().getResponse().sendRedirect(url);\n            } else {\n                // resource is outside time window, show error message\n                throw new CmsVfsResourceNotFoundException(Messages.get().container(\n                    Messages.ERR_RESOURCE_OUTSIDE_TIMEWINDOW_1,\n                    getParamResource()));\n            }\n        }\n    }","id":48580,"modified_method":"/**\n     * Redirects to the specified file or shows backup resource.<p>\n     * \n     * @throws Exception if redirection fails\n     */\n    public void actionShow() throws Exception {\n\n        // try to load the backup resource\n        if (CmsStringUtil.isNotEmpty(getParamVersionid())) {\n            byte[] result = getBackupResourceContent(getCms(), getParamResource(), getParamVersionid());\n            if (result != null) {\n                // get the top level response to change the content type\n                String contentType = OpenCms.getResourceManager().getMimeType(\n                    getParamResource(),\n                    getCms().getRequestContext().getEncoding());\n               \n                m_controller.getTopResponse().setContentType(contentType);\n                \n                m_controller.getTopResponse().setContentLength(result.length);\n               \n                m_controller.getTopResponse().setHeader(\"Pragma\", \"no-pragma\");\n                m_controller.getTopResponse().setHeader(\"Content-Disposition\", \"attachment; filename=\" + getParamResource());\n                \n                try {\n                    getJsp().getResponse().getOutputStream().write(result);\n                    getJsp().getResponse().getOutputStream().flush();\n                } catch (IOException e) {\n                    // can usually be ignored\n                    if (LOG.isInfoEnabled()) {\n                        LOG.info(e.getLocalizedMessage());\n                    }\n                    return;\n                }\n            }\n        } else {\n            if (getCms().existsResource(getParamResource(), CmsResourceFilter.DEFAULT)) {\n                String url = getJsp().link(getParamResource());\n                // if in online project\n                if (url.indexOf(\"//:\")<0 && getCms().getRequestContext().currentProject().isOnlineProject()) {\n                    String site = getCms().getRequestContext().getSiteRoot();\n                    if (CmsStringUtil.isEmptyOrWhitespaceOnly(site)) {\n                        site = OpenCms.getSiteManager().getDefaultUri();\n                        if (CmsStringUtil.isEmptyOrWhitespaceOnly(site)) {\n                            url = OpenCms.getSiteManager().getWorkplaceServer() + url;\n                        } else if (CmsSiteManager.getSite(site) == null) {\n                            url = OpenCms.getSiteManager().getWorkplaceServer() + url;\n                        } else {\n                            url = CmsSiteManager.getSite(site).getUrl() + url;\n                        }\n                    } else {\n                        url = CmsSiteManager.getSite(site).getUrl() + url;\n                    }\n                    try {\n                        CmsStaticExportManager manager = OpenCms.getStaticExportManager();\n                        HttpURLConnection.setFollowRedirects(false);\n                        // try to export it\n                        URL exportUrl = new URL(manager.getExportUrl() + manager.getRfsName(getCms(), getParamResource()));\n                        HttpURLConnection urlcon = (HttpURLConnection)exportUrl.openConnection();\n                        // setup the connection and request the resource\n                        urlcon.setRequestMethod(\"GET\");\n                        urlcon.setRequestProperty(CmsRequestUtil.HEADER_OPENCMS_EXPORT, \"true\");\n                        if (manager.getAcceptLanguageHeader() != null) {\n                            urlcon.setRequestProperty(CmsRequestUtil.HEADER_ACCEPT_LANGUAGE, manager.getAcceptLanguageHeader());\n                        } else {\n                            urlcon.setRequestProperty(\n                                CmsRequestUtil.HEADER_ACCEPT_LANGUAGE,\n                                manager.getDefaultAcceptLanguageHeader());\n                        }\n                        if (manager.getAcceptCharsetHeader() != null) {\n                            urlcon.setRequestProperty(CmsRequestUtil.HEADER_ACCEPT_CHARSET, manager.getAcceptCharsetHeader());\n                        } else {\n                            urlcon.setRequestProperty(\n                                CmsRequestUtil.HEADER_ACCEPT_CHARSET,\n                                manager.getDefaultAcceptCharsetHeader());\n                        }\n                        // now perform the request to export\n                        urlcon.connect();\n                        urlcon.getResponseCode();\n                        urlcon.disconnect();\n\n                    } catch (Exception e) {\n                        // ignore\n                    }\n                }\n                getJsp().getResponse().sendRedirect(url);\n            } else {\n                // resource is outside time window, show error message\n                throw new CmsVfsResourceNotFoundException(Messages.get().container(\n                    Messages.ERR_RESOURCE_OUTSIDE_TIMEWINDOW_1,\n                    getParamResource()));\n            }\n        }\n    }","commit_id":"d951a35de2a9db7eff84881d86c23247c5ea88f7","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Generates the CSV file for the given users.<p>\n     * \n     * @return CSV file\n     */\n    public String generateCsv() {\n\n        Map objects = getData();\n\n        // get the data object from session\n        List groups = (List)objects.get(\"groups\");\n        List roles = (List)objects.get(\"roles\");\n\n        Map exportUsers = new HashMap();\n        try {\n            if (((groups == null) || (groups.size() < 1)) && ((roles == null) || (roles.size() < 1))) {\n                exportUsers = getExportAllUsers(exportUsers);\n            } else {\n                exportUsers = getExportUsersFromGroups(groups, exportUsers);\n                exportUsers = getExportUsersFromRoles(roles, exportUsers);\n            }\n        } catch (CmsException e) {\n            throw new CmsRuntimeException(Messages.get().container(Messages.ERR_GET_EXPORT_USERS_0), e);\n        }\n\n        StringBuffer buffer = new StringBuffer();\n        CmsUserExportSettings settings = OpenCms.getImportExportManager().getUserExportSettings();\n\n        String separator = CmsStringUtil.substitute(settings.getSeparator(), \"\\\\t\", \"\\t\");\n        List values = settings.getColumns();\n\n        buffer.append(\"name\");\n        Iterator itValues = values.iterator();\n        while (itValues.hasNext()) {\n            buffer.append(separator);\n            buffer.append(itValues.next());\n        }\n        buffer.append(\"\\n\");\n\n        Object[] users = exportUsers.values().toArray();\n\n        for (int i = 0; i < users.length; i++) {\n            CmsUser exportUser = (CmsUser)users[i];\n            if (!exportUser.getOuFqn().equals(getParamOufqn())) {\n                // skip users of others ous\n                continue;\n            }\n            if (!isExportable(exportUser)) {\n                continue;\n            }\n            buffer.append(exportUser.getSimpleName());\n            itValues = values.iterator();\n            while (itValues.hasNext()) {\n                buffer.append(separator);\n                String curValue = (String)itValues.next();\n                try {\n                    Method method = CmsUser.class.getMethod(\"get\"\n                        + curValue.substring(0, 1).toUpperCase()\n                        + curValue.substring(1), null);\n                    String curOutput = (String)method.invoke(exportUser, null);\n                    if (CmsStringUtil.isEmptyOrWhitespaceOnly(curOutput) || curOutput.equals(\"null\")) {\n                        curOutput = (String)exportUser.getAdditionalInfo(curValue);\n                    }\n\n                    if (curValue.equals(\"password\")) {\n                        curOutput = OpenCms.getPasswordHandler().getDigestType() + \"_\" + curOutput;\n                    }\n\n                    if (!CmsStringUtil.isEmptyOrWhitespaceOnly(curOutput) && !curOutput.equals(\"null\")) {\n                        buffer.append(curOutput);\n                    }\n                } catch (NoSuchMethodException e) {\n                    String curOutput = (String)exportUser.getAdditionalInfo(curValue);\n                    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(curOutput)) {\n                        buffer.append(curOutput);\n                    }\n                } catch (IllegalAccessException e) {\n                    throw new CmsRuntimeException(Messages.get().container(Messages.ERR_ILLEGAL_ACCESS_0), e);\n                } catch (InvocationTargetException e) {\n                    throw new CmsRuntimeException(Messages.get().container(Messages.ERR_INVOCATION_TARGET_0), e);\n                }\n            }\n            buffer.append(\"\\n\");\n        }\n        CmsFlexController.getController(getJsp().getRequest()).getTopResponse().setContentType(\n            \"text/comma-separated-values\");\n\n        return buffer.toString();\n    }","id":48581,"modified_method":"/**\n     * Generates the CSV file for the given users.<p>\n     * \n     * @return CSV file\n     */\n    public String generateCsv() {\n\n        Map objects = getData();\n\n        // get the data object from session\n        List groups = (List)objects.get(\"groups\");\n        List roles = (List)objects.get(\"roles\");\n\n        Map exportUsers = new HashMap();\n        try {\n            if (((groups == null) || (groups.size() < 1)) && ((roles == null) || (roles.size() < 1))) {\n                exportUsers = getExportAllUsers(exportUsers);\n            } else {\n                exportUsers = getExportUsersFromGroups(groups, exportUsers);\n                exportUsers = getExportUsersFromRoles(roles, exportUsers);\n            }\n        } catch (CmsException e) {\n            throw new CmsRuntimeException(Messages.get().container(Messages.ERR_GET_EXPORT_USERS_0), e);\n        }\n\n        StringBuffer buffer = new StringBuffer();\n        CmsUserExportSettings settings = OpenCms.getImportExportManager().getUserExportSettings();\n\n        String separator = CmsStringUtil.substitute(settings.getSeparator(), \"\\\\t\", \"\\t\");\n        List values = settings.getColumns();\n\n        buffer.append(\"name\");\n        Iterator itValues = values.iterator();\n        while (itValues.hasNext()) {\n            buffer.append(separator);\n            buffer.append(itValues.next());\n        }\n        buffer.append(\"\\n\");\n\n        Object[] users = exportUsers.values().toArray();\n\n        for (int i = 0; i < users.length; i++) {\n            CmsUser exportUser = (CmsUser)users[i];\n            if (!exportUser.getOuFqn().equals(getParamOufqn())) {\n                // skip users of others ous\n                continue;\n            }\n            if (!isExportable(exportUser)) {\n                continue;\n            }\n            buffer.append(exportUser.getSimpleName());\n            itValues = values.iterator();\n            while (itValues.hasNext()) {\n                buffer.append(separator);\n                String curValue = (String)itValues.next();\n                try {\n                    Method method = CmsUser.class.getMethod(\"get\"\n                        + curValue.substring(0, 1).toUpperCase()\n                        + curValue.substring(1), null);\n                    String curOutput = (String)method.invoke(exportUser, null);\n                    if (CmsStringUtil.isEmptyOrWhitespaceOnly(curOutput) || curOutput.equals(\"null\")) {\n                        curOutput = (String)exportUser.getAdditionalInfo(curValue);\n                    }\n\n                    if (curValue.equals(\"password\")) {\n                        curOutput = OpenCms.getPasswordHandler().getDigestType() + \"_\" + curOutput;\n                    }\n\n                    if (!CmsStringUtil.isEmptyOrWhitespaceOnly(curOutput) && !curOutput.equals(\"null\")) {\n                        buffer.append(curOutput);\n                    }\n                } catch (NoSuchMethodException e) {\n                    String curOutput = (String)exportUser.getAdditionalInfo(curValue);\n                    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(curOutput)) {\n                        buffer.append(curOutput);\n                    }\n                } catch (IllegalAccessException e) {\n                    throw new CmsRuntimeException(Messages.get().container(Messages.ERR_ILLEGAL_ACCESS_0), e);\n                } catch (InvocationTargetException e) {\n                    throw new CmsRuntimeException(Messages.get().container(Messages.ERR_INVOCATION_TARGET_0), e);\n                }\n            }\n            buffer.append(\"\\n\");\n        }\n        HttpServletResponse res = CmsFlexController.getController(getJsp().getRequest()).getTopResponse();\n        res.setContentType(\"text/comma-separated-values\");\n        String filename = \"export_users\" + new Random().nextInt(1024) + \".csv\";\n        res.setHeader(\n            \"Content-Disposition\",\n            new StringBuffer(\"attachment; filename=\\\"\").append(filename).append(\"\\\"\").toString());\n        res.setContentLength(buffer.length());\n\n        return buffer.toString();\n    }","commit_id":"40346dc3a0240d3b2f5d46238efa578e6c6f4d77","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the HTML for a button that triggers a file download with \n     * <code>{@link CmsRfsFileDownloadServlet}<\/code> and a button for the chancel action.<p>\n     *  \n     * @see org.opencms.workplace.CmsDialog#dialogButtonsOkCancel()\n     * @return the HTML for a button that triggers a file download with \n     *         <code>{@link CmsRfsFileDownloadServlet}<\/code> and a button for the chancel action. \n     */\n    public String dialogButtonsOkCancel() {\n\n        StringBuffer result = new StringBuffer();\n        result.append(\"<!-- button row start -->\\r\\n\");\n        result.append(\"<div class=\\\"dialogbuttons\\\" unselectable=\\\"on\\\">\\r\\n\");\n        result.append(\"<a name=\\\"ok\\\" class=\\\"inputButton\\\" target=\\\"_self\\\" href=\\\"\");\n        result.append(getJsp().link(\"/system/workplace/admin/workplace/logfileview/downloadTrigger.jsp?filePath=\")).append(\n            m_downloadFile.getAbsolutePath().replace('\\\\', '/')).append(\"\\\">\");\n        result.append(org.opencms.workplace.Messages.get().key(\n            getLocale(),\n            org.opencms.workplace.Messages.GUI_DIALOG_BUTTON_DOWNLOAD_0,\n            null));\n        result.append(\"<\/a>\\r\\n\");\n        result.append(\"<input name=\\\"cancel\\\" type=\\\"button\\\" value=\\\"\");\n        result.append(org.opencms.workplace.Messages.get().key(\n            getLocale(),\n            org.opencms.workplace.Messages.GUI_DIALOG_BUTTON_BACK_0,\n            null));\n        result.append(\"\\\" onclick=\\\"submitAction(\\'\");\n        result.append(CmsDialog.DIALOG_CANCEL);\n        result.append(\"\\', null, 'main');\\\" class=\\\"dialogbutton\\\">\\r\\n\");\n        result.append(\"<\/div>\\r\\n\");\n        result.append(\"<!-- button row end -->\");\n\n        return result.toString();\n    }","id":48582,"modified_method":"/**\n     * Returns the HTML for a button that triggers a file download with \n     * <code>{@link CmsRfsFileDownloadServlet}<\/code> and a button for the chancel action.<p>\n     *  \n     * @see org.opencms.workplace.CmsDialog#dialogButtonsOkCancel()\n     * @return the HTML for a button that triggers a file download with \n     *         <code>{@link CmsRfsFileDownloadServlet}<\/code> and a button for the chancel action. \n     */\n    public String dialogButtonsOkCancel() {\n\n        StringBuffer result = new StringBuffer();\n        result.append(\"<!-- button row start -->\\r\\n\");\n        result.append(\"<div class=\\\"dialogbuttons\\\" unselectable=\\\"on\\\">\\r\\n\");\n        result.append(\"  <p>\\r\\n    \");\n        result.append(Messages.get().key(\n            getLocale(),\n            Messages.GUI_WORKPLACE_LOGVIEW_DOWNLOAD_INSTRUCTION_1,\n            new Object[] {m_downloadFile.getName()}));\n        result.append(\"  <\/p>\\r\\n\");\n\n        result.append(\"<input name=\\\"back\\\" type=\\\"button\\\" value=\\\"\");\n        result.append(org.opencms.workplace.Messages.get().key(\n            getLocale(),\n            org.opencms.workplace.Messages.GUI_DIALOG_BUTTON_BACK_0,\n            null));\n        result.append(\"\\\" onclick=\\\"submitAction(\\'\");\n        result.append(CmsDialog.DIALOG_CANCEL);\n        result.append(\"\\', null, 'main');\\\" class=\\\"dialogbutton\\\">\\r\\n\");\n        result.append(\"<\/div>\\r\\n\");\n        result.append(\"<!-- button row end -->\");\n\n        return result.toString();\n    }","commit_id":"96d2aec386a7568ef4bbfca8450dd3a9097e4cb3","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the HTML for the history settings input form.<p>\n     * \n     * @return the HTML code for the history settings input form\n     */\n    public String buildDownloadFileView() {\n\n        StringBuffer result = new StringBuffer(512);\n\n        result.append(dialogBlock(HTML_START, Messages.get().key(\n            getLocale(),\n            Messages.GUI_WORKPLACE_LOGVIEW_DOWNLOAD_START_MSG_0,\n            null), false));\n\n        result.append(\"\\r\\n\");\n        result.append(\"<!-- start buildDownloadFileView -->\\r\\n\");\n        result.append(\"<table border=\\\"0\\\" style=\\\"padding:10px;\\\"}>\\r\\n\");\n\n        result.append(\"  <tr>\\r\\n\");\n        result.append(\"    <td>\");\n        result.append(Messages.get().key(Messages.GUI_WORKPLACE_LOGVIEW_DOWNLOAD_START_FNAME_0));\n        result.append(\":<\/td>\\n\");\n        result.append(\"    <td class=\\\"dialogerror\\\"><b>\");\n        result.append(m_downloadFile.getName());\n        result.append(\"<\/b><\/td>\\r\\n\");\n        result.append(\"  <\/tr>\\r\\n\");\n\n        result.append(\"  <tr>\\r\\n\");\n        result.append(\"    <td>\");\n        result.append(Messages.get().key(Messages.GUI_WORKPLACE_LOGVIEW_DOWNLOAD_START_FSIZE_0));\n        result.append(\":<\/td>\\n\");\n        result.append(\"    <td>\");\n        result.append(CmsFileUtil.formatFilesize(m_downloadFile.length(), getLocale()));\n        result.append(\"<\/td>\\r\\n\");\n        result.append(\"  <\/tr>\\r\\n\");\n\n        result.append(\"  <tr>\\r\\n\");\n        result.append(\"    <td>\");\n        result.append(Messages.get().key(Messages.GUI_WORKPLACE_LOGVIEW_DOWNLOAD_START_FPATH_0));\n        result.append(\":<\/td>\\n\");\n        result.append(\"    <td>\");\n        result.append(m_downloadFile.getAbsolutePath());\n        result.append(\"<\/td>\\r\\n\");\n        result.append(\"  <\/tr>\\r\\n\");\n\n        result.append(\"  <tr>\\r\\n\");\n        result.append(\"    <td>\");\n        result.append(Messages.get().key(Messages.GUI_WORKPLACE_LOGVIEW_DOWNLOAD_START_FLMOD_0));\n        result.append(\":<\/td>\\n\");\n        result.append(\"    <td>\");\n        result.append(CmsDateUtil.getDateTime(new Date(m_downloadFile.lastModified()), DateFormat.MEDIUM, getLocale()));\n        result.append(\"<\/td>\\r\\n\");\n        result.append(\"  <\/tr>\\r\\n\");\n        result.append(\"<\/table>\\r\\n\");\n        result.append(\"<!-- end buildDownloadFileView -->\\r\\n\");\n        result.append(\"\\r\\n\");\n\n        result.append(dialogBlock(HTML_END, m_downloadFile.getName(), true));\n        return result.toString();\n    }","id":48583,"modified_method":"/**\n     * Returns the HTML for the history settings input form.<p>\n     * \n     * @return the HTML code for the history settings input form\n     */\n    public String buildDownloadFileView() {\n\n        StringBuffer result = new StringBuffer(512);\n\n        result.append(dialogBlock(HTML_START, Messages.get().key(\n            getLocale(),\n            Messages.GUI_WORKPLACE_LOGVIEW_DOWNLOAD_START_MSG_0,\n            null), false));\n\n        result.append(\"\\r\\n\");\n        result.append(\"<!-- start buildDownloadFileView -->\\r\\n\");\n        result.append(\"<table border=\\\"0\\\" style=\\\"padding:10px;\\\"}>\\r\\n\");\n\n        result.append(\"  <tr>\\r\\n\");\n        result.append(\"    <td>\");\n        result.append(Messages.get().key(Messages.GUI_WORKPLACE_LOGVIEW_DOWNLOAD_START_FNAME_0));\n        result.append(\":<\/td>\\n\");\n        result.append(\"    <td ><b>\");\n\n        result.append(\"      <a name=\\\"ok\\\" target=\\\"_self\\\" class=\\\"dialogerror\\\" href=\\\"\");\n        result.append(getJsp().link(\"/system/workplace/admin/workplace/logfileview/downloadTrigger.jsp?filePath=\")).append(\n            m_downloadFile.getAbsolutePath().replace('\\\\', '/')).append(\"\\\">\");\n        result.append(org.opencms.workplace.Messages.get().key(\n            getLocale(),\n            org.opencms.workplace.Messages.GUI_DIALOG_BUTTON_DOWNLOAD_0,\n            null));\n        result.append(\" \").append(m_downloadFile.getName());\n        result.append(\"      <\/a>\\r\\n\");\n\n        result.append(\"<\/b><\/td>\\r\\n\");\n        result.append(\"  <\/tr>\\r\\n\");\n\n        result.append(\"  <tr>\\r\\n\");\n        result.append(\"    <td>\");\n        result.append(Messages.get().key(Messages.GUI_WORKPLACE_LOGVIEW_DOWNLOAD_START_FSIZE_0));\n        result.append(\":<\/td>\\n\");\n        result.append(\"    <td>\");\n        result.append(CmsFileUtil.formatFilesize(m_downloadFile.length(), getLocale()));\n        result.append(\"<\/td>\\r\\n\");\n        result.append(\"  <\/tr>\\r\\n\");\n\n        result.append(\"  <tr>\\r\\n\");\n        result.append(\"    <td>\");\n        result.append(Messages.get().key(Messages.GUI_WORKPLACE_LOGVIEW_DOWNLOAD_START_FPATH_0));\n        result.append(\":<\/td>\\n\");\n        result.append(\"    <td>\");\n        result.append(m_downloadFile.getAbsolutePath());\n        result.append(\"<\/td>\\r\\n\");\n        result.append(\"  <\/tr>\\r\\n\");\n\n        result.append(\"  <tr>\\r\\n\");\n        result.append(\"    <td>\");\n        result.append(Messages.get().key(Messages.GUI_WORKPLACE_LOGVIEW_DOWNLOAD_START_FLMOD_0));\n        result.append(\":<\/td>\\n\");\n        result.append(\"    <td>\");\n        result.append(CmsDateUtil.getDateTime(new Date(m_downloadFile.lastModified()), DateFormat.MEDIUM, getLocale()));\n        result.append(\"<\/td>\\r\\n\");\n        result.append(\"  <\/tr>\\r\\n\");\n        result.append(\"<\/table>\\r\\n\");\n        result.append(\"<!-- end buildDownloadFileView -->\\r\\n\");\n        result.append(\"\\r\\n\");\n\n        result.append(dialogBlock(HTML_END, m_downloadFile.getName(), true));\n        return result.toString();\n    }","commit_id":"96d2aec386a7568ef4bbfca8450dd3a9097e4cb3","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Pushes a file that has been specified by request parameter \n     * <em>\"filePath\"<\/em> to the client browser.<p> \n     * \n     * The browser will open a popup menu that offers a donwload even if the \n     * file type is known to the client's OS.<p>\n     * \n     * Note that the <b>parameter \"filePath\"<\/b> is read from the \n     * given <code>{@link HttpServletRequest}<\/code> for the file name to serve.<p>\n     * \n     * @param req Provided by the servlet container if this servlet is directly used from the container's servlet-mappings or \n     *                by the implicit jsp variable \"request\"\n     * \n     * @param res Provided by the servlet container if this servlet is directly used from the container's servlet-mappings or \n     *                 by the implicit jsp variable \"response\"\n     * \n     * @see javax.servlet.http.HttpServlet#doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     * \n     * @throws ServletException if the needed parameter 'filePath' cannot be found\n     * @throws IOException if work related to the download process fails\n     */\n    public void doPost(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n\n        // find the file: \n        String fileToFind = req.getParameter(\"filePath\");\n        if (CmsStringUtil.isEmpty(fileToFind)) {\n            throw new ServletException(Messages.get().key(Messages.ERR_DOWNLOAD_SERVLET_FILE_ARG_0));\n        } else {\n\n            File downloadFile = new File(fileToFind);\n            res.setHeader(\"Content-Disposition\", new StringBuffer(\"attachment; filename=\\\"\").append(\n                downloadFile.getName()).append(\"\\\"\").toString());\n            res.setContentLength((int)downloadFile.length());\n\n            CmsFlexController controller = CmsFlexController.getController(req);\n            controller.getTopResponse().setContentType(\"application/download\");\n\n            InputStream in = null;\n            ServletOutputStream outStream = null;\n\n            // push the file:\n            outStream = res.getOutputStream();\n            in = new BufferedInputStream(new FileInputStream(downloadFile));\n\n            try {\n                // don't write the last '-1'\n                int bit = in.read();\n                while ((bit) >= 0) {\n                    outStream.write(bit);\n                    bit = in.read();\n                }\n            } catch (IOException ioe) {\n                ioe.printStackTrace(System.out);\n            }\n            outStream.flush();\n            outStream.close();\n            in.close();\n        }\n    }","id":48584,"modified_method":"/**\n     * Pushes a file that has been specified by request parameter \n     * <em>\"filePath\"<\/em> to the client browser.<p> \n     * \n     * The browser will open a popup menu that offers a donwload even if the \n     * file type is known to the client's OS.<p>\n     * \n     * Note that the <b>parameter \"filePath\"<\/b> is read from the \n     * given <code>{@link HttpServletRequest}<\/code> for the file name to serve.<p>\n     * \n     * @param req Provided by the servlet container if this servlet is directly used from the container's servlet-mappings or \n     *                by the implicit jsp variable \"request\"\n     * \n     * @param res Provided by the servlet container if this servlet is directly used from the container's servlet-mappings or \n     *                 by the implicit jsp variable \"response\"\n     * \n     * @see javax.servlet.http.HttpServlet#doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     * \n     * @throws ServletException if the needed parameter 'filePath' cannot be found\n     * @throws IOException if work related to the download process fails\n     */\n    public void doPost(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n\n        // find the file: \n        String fileToFind = req.getParameter(\"filePath\");\n        if (CmsStringUtil.isEmpty(fileToFind)) {\n            throw new ServletException(Messages.get().key(Messages.ERR_DOWNLOAD_SERVLET_FILE_ARG_0));\n        } else {\n\n            File downloadFile = new File(fileToFind);\n            res.setHeader(\"Content-Disposition\", new StringBuffer(\"attachment; filename=\\\"\").append(\n                downloadFile.getName()).append(\"\\\"\").toString());\n            res.setContentLength((int)downloadFile.length());\n\n            CmsFlexController controller = CmsFlexController.getController(req);\n            res = controller.getTopResponse();\n            res.setContentType(\"application/download\");\n\n            InputStream in = null;\n\n            // push the file:\n            ServletOutputStream outStream = null;\n\n            // getOutputStream() throws IllegalStateException if this servlet \n            // is triggered from jsp if the jsp directive buffer=\"none\" is set. \n            // In that case the tomcat jsp-compiler accesses getWriter() before \n            // this call!!!\n            outStream = res.getOutputStream();\n            in = new BufferedInputStream(new FileInputStream(downloadFile));\n\n            try {\n                // don't write the last '-1'\n                int bit = in.read();\n                while ((bit) >= 0) {\n                    outStream.write(bit);\n                    bit = in.read();\n                }\n            } catch (IOException ioe) {\n                ioe.printStackTrace(System.out);\n            }\n            outStream.flush();\n            outStream.close();\n            in.close();\n        }\n    }","commit_id":"96d2aec386a7568ef4bbfca8450dd3a9097e4cb3","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public Object theCurrentValue() {\n        // handle the case where it's the - none - string\n        Object currentValue;\n        if (theCurrentItem==NO_SELECTION_STRING) {\n            currentValue = noneString();\n        } else {\n            currentValue = NSKeyValueCodingAdditions.Utility.valueForKeyPath(theCurrentItem, destinationDisplayKey());\n        }\n        if(localizeDisplayKeys() && currentValue != null && theCurrentItem!=NO_SELECTION_STRING) {\n            currentValue = localizer().localizedStringForKeyWithDefault(currentValue.toString());\n        }\n        if(includeUnmatchedValues() && theCurrentItem!=NO_SELECTION_STRING && unmatchedValues().containsObject(theCurrentItem)) {\n        \tcurrentValue = \"[\" + currentValue + \"]\";\n        }\n        return currentValue;\n    }","id":48585,"modified_method":"public Object theCurrentValue() {\n        // handle the case where it's the - none - string\n        Object currentValue;\n        if (theCurrentItem==NO_SELECTION_STRING) {\n            currentValue = noneString();\n        } else if (hasBinding(\"displayString\")) {\n            currentValue = valueForBinding(\"displayString\");\n        }\n        else {\n            currentValue = NSKeyValueCodingAdditions.Utility.valueForKeyPath(theCurrentItem, destinationDisplayKey());\n        }\n        if(localizeDisplayKeys() && currentValue != null && theCurrentItem!=NO_SELECTION_STRING) {\n            currentValue = localizer().localizedStringForKeyWithDefault(currentValue.toString());\n        }\n        if(includeUnmatchedValues() && theCurrentItem!=NO_SELECTION_STRING && unmatchedValues().containsObject(theCurrentItem)) {\n        \tcurrentValue = \"[\" + currentValue + \"]\";\n        }\n        return currentValue;\n    }","commit_id":"8d01a69c834425bf420416c874202f28198bcee6","url":"https://github.com/wocommunity/wonder"},{"original_method":"protected NSArray destinationSortKeys() {\n        String s = destinationSortKey();\n        NSArray a = NSArray.componentsSeparatedByString(s, \",\");\n        return a;\n    }","id":48586,"modified_method":"protected NSArray destinationSortKeys() {\n        String destinationSortKey = destinationSortKey();\n        NSArray destinationSortKeys;\n        if (destinationSortKey != null) {\n        \tdestinationSortKeys = NSArray.componentsSeparatedByString(destinationSortKey, \",\");\n        }\n        else {\n        \tdestinationSortKeys = NSArray.EmptyArray;\n        }\n        return destinationSortKeys;\n    }","commit_id":"8d01a69c834425bf420416c874202f28198bcee6","url":"https://github.com/wocommunity/wonder"},{"original_method":"public String destinationDisplayKey() {\n        if(_destinationDisplayKey == null) {\n            _destinationDisplayKey = (String)valueForBinding(\"destinationDisplayKey\");\n            if(_destinationDisplayKey == null) {\n                _destinationDisplayKey = \"userPresentableDescription\";\n            }\n        }\n        return _destinationDisplayKey;\n    }","id":48587,"modified_method":"public String destinationDisplayKey() {\n        if(_destinationDisplayKey == null) {\n            _destinationDisplayKey = (String)valueForBinding(\"destinationDisplayKey\");\n            if(_destinationDisplayKey == null) {\n            \tif (_destinationEntityName(false) != null) {\n            \t\t_destinationDisplayKey = \"userPresentableDescription\";\n            \t}\n            }\n        }\n        return _destinationDisplayKey;\n    }","commit_id":"8d01a69c834425bf420416c874202f28198bcee6","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void setTheCurrentItem(Object aValue) {\n        theCurrentItem = aValue;\n    }","id":48588,"modified_method":"public void setTheCurrentItem(Object aValue) {\n        theCurrentItem = aValue;\n        if (hasBinding(\"item\")) {\n        \tsetValueForBinding(theCurrentItem, \"item\");\n        }\n    }","commit_id":"8d01a69c834425bf420416c874202f28198bcee6","url":"https://github.com/wocommunity/wonder"},{"original_method":"public String destinationEntityName() {\n        if(_destinationEntityName == null) {\n            _destinationEntityName = (String)valueForBinding(\"destinationEntityName\");\n            if(_destinationEntityName == null) {\n                Object _source = sourceObject();\n                EOEditingContext ec = editingContext();\n                EOEntity destinationEntity = null;\n                \n                if(_source instanceof EOEnterpriseObject) {\n                    EORelationship relationship = ERXUtilities.relationshipWithObjectAndKeyPath((EOEnterpriseObject)_source, relationshipKey());\n                    \n                    destinationEntity = relationship != null ? relationship.destinationEntity() : null;\n                } else {\n                    String anEntityName = sourceEntityName();\n                    if(anEntityName != null) {\n                        EOEntity anEntity = ERXEOAccessUtilities.entityNamed(ec, anEntityName);\n                        if (anEntity == null) {\n                            throw new IllegalStateException(\"<\" + getClass().getName() + \" could not find entity named \" + anEntityName + \">\");\n                        }\n                        destinationEntity = ERXEOAccessUtilities.destinationEntityForKeyPath(anEntity, relationshipKey());\n                    } else {\n                        destinationEntity = ERXEOAccessUtilities.entityNamed(ec, anEntityName);\n                    }\n                }\n                if(destinationEntity == null) {\n                    throw new IllegalStateException(\"Destination entity could not be retrieved from EO of bindings. Either set the \\\"sourceObject\\\" to an EO, provide the \\\"sourceEntityName\\\" and \\\"relationshipKey\\\", the \\\"destinationEntityName\\\" or the \\\"list\\\" binding.\");\n                }\n                \n                _destinationEntityName = destinationEntity.name();\n            }\n        }\n        return _destinationEntityName;\n    }","id":48589,"modified_method":"public String destinationEntityName() {\n    \treturn _destinationEntityName(true);\n    }","commit_id":"8d01a69c834425bf420416c874202f28198bcee6","url":"https://github.com/wocommunity/wonder"},{"original_method":"public NSArray theList() {\n        if (_list==null) {\n            if(hasBinding(\"possibleChoices\")) {\n                _list = (NSArray)valueForBinding(\"possibleChoices\");\n                if(_list != null && _list.lastObject() instanceof EOEnterpriseObject) {\n                    _list = ERXEOControlUtilities.localInstancesOfObjects(editingContext(), _list);\n                }\n            }\n            if(_list == null) {\n            \tEODataSource ds = dataSource();\n            \tif(ds.editingContext()!=null) {\n            \t\t_list = ds.fetchObjects();\n            \t\tif(ds.editingContext() != editingContext()) {\n            \t\t\t_list = ERXEOControlUtilities.localInstancesOfObjects(editingContext(), _list);\n            \t\t}\n            \t} else {\n            \t\tlog.error(\"EC of datasource is null, possible resubmit: \" + ERXApplication.erxApplication().extraInformationForExceptionInContext(null, context()));\n            \t\t_list = NSArray.EmptyArray;\n            \t}\n            }\n            NSSelector sorting = (sortCaseInsensitive() ? EOSortOrdering.CompareAscending : EOSortOrdering.CompareCaseInsensitiveAscending);\n            _list = ERXArrayUtilities.sortedArraySortedWithKeys(_list, destinationSortKeys(), sorting);\n            if(includeUnmatchedValues()) {\n            \tNSArray currentValues = currentValues();\n            \tif(currentValues.count() > 0) {\n            \t\t_unmatchedValues = ERXArrayUtilities.arrayMinusArray(currentValues(), _list);\n            \t\t\n            \t\tif(_unmatchedValues.count() > 0) {\n            \t\t\t_unmatchedValues = ERXArrayUtilities.arrayMinusArray(_unmatchedValues, new NSArray(NO_SELECTION_STRING));\n                \t\tif(_unmatchedValues.lastObject() instanceof EOEnterpriseObject) {\n            \t\t\t\t_unmatchedValues = ERXEOControlUtilities.localInstancesOfObjects(editingContext(), _unmatchedValues);\n            \t\t\t}\n            \t\t\t_unmatchedValues = ERXArrayUtilities.sortedArraySortedWithKeys(_unmatchedValues, destinationSortKeys(), sorting);\n            \t\t\t_list = _list.arrayByAddingObjectsFromArray(_unmatchedValues);\n            \t\t}\n            \t} else {\n            \t\t_unmatchedValues = NSArray.EmptyArray;\n            \t}\n            }\n        }\n        return _list;\n    }","id":48590,"modified_method":"public NSArray theList() {\n        if (_list==null) {\n            if(hasBinding(\"possibleChoices\")) {\n                _list = (NSArray)valueForBinding(\"possibleChoices\");\n                if(_list != null && _list.lastObject() instanceof EOEnterpriseObject) {\n                    _list = ERXEOControlUtilities.localInstancesOfObjects(editingContext(), _list);\n                }\n            }\n            if(_list == null) {\n            \tEODataSource ds = dataSource();\n            \tif(ds.editingContext()!=null) {\n            \t\t_list = ds.fetchObjects();\n            \t\tif(ds.editingContext() != editingContext()) {\n            \t\t\t_list = ERXEOControlUtilities.localInstancesOfObjects(editingContext(), _list);\n            \t\t}\n            \t} else {\n            \t\tlog.error(\"EC of datasource is null, possible resubmit: \" + ERXApplication.erxApplication().extraInformationForExceptionInContext(null, context()));\n            \t\t_list = NSArray.EmptyArray;\n            \t}\n            }\n            NSArray destinationSortKeys = destinationSortKeys();\n            NSSelector sorting = (sortCaseInsensitive() ? EOSortOrdering.CompareAscending : EOSortOrdering.CompareCaseInsensitiveAscending);\n            if (destinationSortKeys != null && destinationSortKeys.count() > 0) {\n\t            _list = ERXArrayUtilities.sortedArraySortedWithKeys(_list, destinationSortKeys, sorting);\n            }\n            if(includeUnmatchedValues()) {\n            \tNSArray currentValues = currentValues();\n            \tif(currentValues.count() > 0) {\n            \t\t_unmatchedValues = ERXArrayUtilities.arrayMinusArray(currentValues(), _list);\n            \t\t\n            \t\tif(_unmatchedValues.count() > 0) {\n            \t\t\t_unmatchedValues = ERXArrayUtilities.arrayMinusArray(_unmatchedValues, new NSArray(NO_SELECTION_STRING));\n                \t\tif(_unmatchedValues.lastObject() instanceof EOEnterpriseObject) {\n            \t\t\t\t_unmatchedValues = ERXEOControlUtilities.localInstancesOfObjects(editingContext(), _unmatchedValues);\n            \t\t\t}\n                        if (destinationSortKeys != null && destinationSortKeys.count() > 0) {\n                        \t_unmatchedValues = ERXArrayUtilities.sortedArraySortedWithKeys(_unmatchedValues, destinationSortKeys, sorting);\n                        }\n            \t\t\t_list = _list.arrayByAddingObjectsFromArray(_unmatchedValues);\n            \t\t}\n            \t} else {\n            \t\t_unmatchedValues = NSArray.EmptyArray;\n            \t}\n            }\n        }\n        return _list;\n    }","commit_id":"8d01a69c834425bf420416c874202f28198bcee6","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void setSelection(Object value) {\n        if ((value!=null) && (value instanceof NSArray)) {\n            log.warn(\"We were passed an array but expected an EO. Compensating by choosing first element\");\n            NSArray array = (NSArray)value;\n            if (array.count() == 0) {\n                value = null;\n            } else {\n                value = array.objectAtIndex(0);\n            }\n        }\n        \n        _selection = value;\n        \n        if (value==NO_SELECTION_STRING) {\n            value = null;\n        }\n        \n        updateSourceObject(value);\n    }","id":48591,"modified_method":"public void setSelection(Object value) {\n        if ((value!=null) && (value instanceof NSArray)) {\n            log.warn(\"We were passed an array but expected an EO. Compensating by choosing first element\");\n            NSArray array = (NSArray)value;\n            if (array.count() == 0) {\n                value = null;\n            } else {\n                value = array.objectAtIndex(0);\n            }\n        }\n        \n        _selection = value;\n        \n        if (value==NO_SELECTION_STRING) {\n            value = null;\n        }\n        \n        updateSourceObject(value);\n        if (hasBinding(\"selection\") && !(sourceObject() instanceof EOEnterpriseObject)) {\n        \tsetValueForBinding(value, \"selection\");\n        }\n    }","commit_id":"8d01a69c834425bf420416c874202f28198bcee6","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Calculates the set of keys used in a given template\n     * for a given delimiter.\n     * @param template to check for keys\n     * @param delimiter for finding keys\n     * @return array of keys\n     */\n    public NSArray keysInTemplate(String template, String delimiter) {\n        NSMutableSet keys = new NSMutableSet();\n        if (delimiter == null)\n            delimiter = \"@\";\n        boolean deriveElement = false; // if the template starts with delim, the first component will be a zero-length string\n        log.debug(\"Components: \" + NSArray.componentsSeparatedByString(template, delimiter));\n        for (Enumeration e = NSArray.componentsSeparatedByString(template, delimiter).objectEnumerator(); e.hasMoreElements();) {\n            String element = (String)e.nextElement();\n            if (deriveElement) {\n                if (element.length() == 0)\n                    throw new RuntimeException(\"\\\"\\\" is not a valid keypath\");\n                keys.addObject(element);\n                deriveElement = false;\n            } else {\n                deriveElement = true;\n            }\n        }\n        return keys.allObjects();\n    }","id":48592,"modified_method":"/**\n     * Calculates the set of keys used in a given template\n     * for a given delimiter.\n     * \n     * @param template to check for keys\n     * @param delimiter for finding keys\n     * @return array of keys\n     */\n    public NSArray keysInTemplate(String template, String delimiter) {\n        NSMutableSet keys = new NSMutableSet();\n        if (delimiter == null)\n            delimiter = \"@\";\n        boolean deriveElement = false; // if the template starts with delim, the first component will be a zero-length string\n        NSArray components = NSArray.componentsSeparatedByString(template, delimiter);\n        if (! isLoggingDisabled  &&  log.isDebugEnabled()) \n            log.debug(\"Components: \" + components);\n        for (Enumeration e = components.objectEnumerator(); e.hasMoreElements();) {\n            String element = (String)e.nextElement();\n            if (deriveElement) {\n                if (element.length() == 0)\n                    throw new RuntimeException(\"\\\"\\\" is not a valid keypath\");\n                keys.addObject(element);\n                deriveElement = false;\n            } else {\n                deriveElement = true;\n            }\n        }\n        return keys.allObjects();\n    }","commit_id":"181cbfc8128c7a367be8e6327232c1eb73d0cf9c","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Convience method to return the shared instance\n     * of the template parser.\n     * @return shared instance of the parser\n     */\n    public static ERXSimpleTemplateParser sharedInstance() {\n        if (_sharedInstance == null)\n            _sharedInstance = new ERXSimpleTemplateParser();\n        return _sharedInstance;\n    }","id":48593,"modified_method":"/**\n     * Convience method to return the shared instance\n     * of the template parser.\n     * \n     * @return shared instance of the parser\n     * @see setSharedInstance\n     */\n    public static ERXSimpleTemplateParser sharedInstance() {\n        if (_sharedInstance == null) \n            setSharedInstance(new ERXSimpleTemplateParser());\n        return _sharedInstance;\n    }","commit_id":"181cbfc8128c7a367be8e6327232c1eb73d0cf9c","url":"https://github.com/wocommunity/wonder"},{"original_method":"public String parseTemplateWithObject(String template, String delimiter, Object object, Object otherObject) {\n        if (template == null)\n            throw new RuntimeException(\"Attempting to parse null template!\");\n        if (object == null)\n            throw new RuntimeException(\"Attempting to parse template with null object!\");\n        if (log.isDebugEnabled())\n            log.debug(\"Parsing template: \" + template + \" with delimiter: \" + delimiter + \" object: \" + object);\n        if(delimiter == null) delimiter = \"@\";\n        log.debug(\"Template: \" + template);\n        log.debug(\"Delim: \" + delimiter);\n        log.debug(\"otherObject: \" + otherObject);\n        StringBuffer buffer = new StringBuffer();\n        boolean deriveElement = false; // if the template starts with delim, the first component will be a zero-length string\n        log.debug(\"Components: \" + NSArray.componentsSeparatedByString(template, delimiter));\n        for (Enumeration e = NSArray.componentsSeparatedByString(template, delimiter).objectEnumerator(); e.hasMoreElements();) {\n            String element = (String)e.nextElement();\n            log.debug(\"Processing Element: \" + element);\n            if (deriveElement) {\n                log.debug(\"Deriving value ...\");\n                if(element.length() == 0)\n                    throw new RuntimeException(\"\\\"\\\" is not a valid keypath\");\n                Object obj;\n                try {\n                    obj = NSKeyValueCodingAdditions.Utility.valueForKeyPath(object, element);\n                } catch (Throwable t) {\n                    try {\n                        if (otherObject != null) {\n                            obj = NSKeyValueCodingAdditions.Utility.valueForKeyPath(otherObject, element);\n                        } else {\n                            throw new RuntimeException(\"Could not find a value for \\\"\" + element + \"\\\" of a template in either the object or extra data\");\n                        }\n                    } catch (Throwable t1) {\n                        throw new RuntimeException(\"An exception occured while parsing element, \" + element + \", of template, \" + template + \": \" + t1.getMessage());\n                    }\n                }\n                buffer.append(obj == null ? \"null\" : obj.toString());                \n                deriveElement = false;\n            } else {\n                if (element.length() > 0)\n                    buffer.append(element);\n                deriveElement = true;\n            }\n            log.debug(\"Buffer: \" + buffer);\n        }\n        return buffer.toString();\n    }","id":48594,"modified_method":"/**\n     * This method replaces the keys enclosed between the\n     * delimeter with the values found in object and otherObject.\n     * It first looks for a value in object, and then in otherObject\n     * if the key is not found in object. Therefore, otherObject is\n     * a good place to store default values while other object is a\n     * good place to override default values. \n     * <p>\n     * When the value is not found in both object and otherObject, \n     * it will replace the key with the undefined key label which \n     * defaults to \"?\". You can set the label via the constructor \n     * {@link #ERXSimpleTemplateParser(String)}. \n     * \n     * @param template to use to parse\n     * @param delimiter to use to check for keys\n     * @param object to resolve keys off of\n     * @param otherObject object used to resolve default keys\n     * @return parsed template with keys replaced\n     */\n    public String parseTemplateWithObject(String template, String delimiter, Object object, Object otherObject) {\n        if (template == null)\n            throw new RuntimeException(\"Attempting to parse null template!\");\n        if (object == null)\n            throw new RuntimeException(\"Attempting to parse template with null object!\");\n        if(delimiter == null) delimiter = \"@\";\n        if (! isLoggingDisabled  &&  log.isDebugEnabled()) {\n            log.debug(\"Parsing template: \" + template + \" with delimiter: \" + delimiter + \" object: \" + object);\n            log.debug(\"Template: \" + template);\n            log.debug(\"Delim: \" + delimiter);\n            log.debug(\"otherObject: \" + otherObject);\n        }\n        StringBuffer buffer = new StringBuffer();\n        boolean deriveElement = false; // if the template starts with delim, the first component will be a zero-length string\n        NSArray components = NSArray.componentsSeparatedByString(template, delimiter);\n        if (! isLoggingDisabled  &&  log.isDebugEnabled())\n            log.debug(\"Components: \" + components);\n        for (Enumeration e = components.objectEnumerator(); e.hasMoreElements();) {\n            String element = (String)e.nextElement();\n            if (! isLoggingDisabled)  log.debug(\"Processing Element: \" + element);\n            if (deriveElement) {\n                if (! isLoggingDisabled)  log.debug(\"Deriving value ...\");\n                if (element.length() == 0)\n                    throw new RuntimeException(\"\\\"\\\" is not a valid keypath\");\n                Object obj;\n                try {\n                    obj = NSKeyValueCodingAdditions.Utility.valueForKeyPath(object, element); \n                    // For just in case the above doesn't throw an exception when the \n                    // key is not defined. (NSDictionary doesn't seem to throw the exception.)\n                    if (obj == null  &&  otherObject != null)\n                        throw new NSKeyValueCoding.UnknownKeyException(\"The key is not defined in the object.\", null, element);\n               } catch (Throwable t) {\n                    try {\n                        if (otherObject != null) {\n                            obj = NSKeyValueCodingAdditions.Utility.valueForKeyPath(otherObject, element);\n                        } else {\n                            throw new RuntimeException(\"Could not find a value for \\\"\" + element + \"\\\" of a template in either the object or extra data\");\n                        }\n                    } catch (Throwable t1) {\n                        throw new RuntimeException(\"An exception occured while parsing element, \" + element + \", of template, \" + template + \": \" + t1.getMessage());\n                    }\n                }\n                buffer.append(obj == null ? _undefinedKeyLabel : obj.toString());                \n                deriveElement = false;\n            } else {\n                if (element.length() > 0)\n                    buffer.append(element);\n                deriveElement = true;\n            }\n            if (! isLoggingDisabled  && log.isDebugEnabled())\n                log.debug(\"Buffer: \" + buffer);\n        }\n        return buffer.toString();\n    }","commit_id":"181cbfc8128c7a367be8e6327232c1eb73d0cf9c","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Updates the current title area with the account display name\n     * and its status.\n     */\n    private void updateTitleArea()\n    {\n        if(!SwingUtilities.isEventDispatchThread())\n        {\n            SwingUtilities.invokeLater(new Runnable()\n            {\n                @Override\n                public void run()\n                {\n                    updateTitleArea();\n                }\n            });\n\n            return;\n        }\n\n        StringBuilder txt = new StringBuilder();\n        txt.append(\"<html>\").append(\"<b>\");\n        txt.append(protocolProvider.getAccountID().getDisplayName())\n            .append(\"<\/b>\");\n\n        String statusMessage = statusMessageMenu.getCurrentMessage();\n        if(!StringUtils.isNullOrEmpty(statusMessage))\n        {\n            txt.append(\"<br/>\").append(statusMessage);\n        }\n        txt.append(\"<\/html>\");\n        titleArea.setText(txt.toString());\n    }","id":48595,"modified_method":"/**\n     * Updates the current title area with the account display name\n     * and its status.\n     */\n    private void updateTitleArea()\n    {\n        if(!SwingUtilities.isEventDispatchThread())\n        {\n            SwingUtilities.invokeLater(new Runnable()\n            {\n                @Override\n                public void run()\n                {\n                    updateTitleArea();\n                }\n            });\n\n            return;\n        }\n\n        titleArea.setText(protocolProvider.getAccountID().getDisplayName());\n        final String statusMessage = statusMessageMenu.getCurrentMessage();\n        if (StringUtils.isNullOrEmpty(statusMessage))\n        {\n            this.messageArea.setText(\"\");\n            this.messageArea.setVisible(false);\n        }\n        else\n        {\n            this.messageArea.setText(statusMessage);\n            this.messageArea.setVisible(true);\n        }\n    }","commit_id":"fa685fadde88e3f5de5f61d752e0c59d89949e1e","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Initializes a new <tt>PresenceStatusMenu<\/tt> instance which is to\n     * depict and change the presence status of a specific\n     * <tt>ProtocolProviderService<\/tt>.\n     *\n     * @param protocolProvider the <tt>ProtocolProviderService<\/tt> which is to\n     * have its presence status depicted and changed by the new instance\n     */\n    public PresenceStatusMenu(ProtocolProviderService protocolProvider)\n    {\n        super(protocolProvider.getAccountID().getDisplayName(),\n            ImageLoader.getAccountStatusImage(protocolProvider),\n            protocolProvider);\n\n        this.presence\n                = protocolProvider.getOperationSet(OperationSetPresence.class);\n\n        Iterator<PresenceStatus> statusIterator\n            = this.presence.getSupportedStatusSet();\n\n        String tooltip =\n            \"<html><b>\" + protocolProvider.getAccountID().getDisplayName()\n                + \"<\/b><br>Connecting<\/html>\";\n\n        this.setToolTipText(tooltip);\n\n        titleArea = new JEditorPane();\n        titleArea.setContentType(\"text/html\");\n        Constants.loadSimpleStyle(((HTMLDocument)titleArea.getDocument())\n                                        .getStyleSheet(),\n                                   titleArea.getFont());\n        titleArea.setBorder(BorderFactory.createEmptyBorder(0, 5, 0, 0));\n        titleArea.setOpaque(false);\n        titleArea.setEditable(false);\n        titleArea.setAlignmentX(Component.RIGHT_ALIGNMENT);\n\n        statusMessageMenu = new StatusMessageMenu(protocolProvider, true);\n        statusMessageMenu.addPropertyChangeListener(this);\n        updateTitleArea();\n\n        this.add(titleArea);\n        this.addSeparator();\n\n        while (statusIterator.hasNext())\n        {\n            PresenceStatus status = statusIterator.next();\n            byte[] statusIcon = status.getStatusIcon();\n\n            addItem(\n                    status.getStatusName(),\n                    (statusIcon == null) ? null : new ImageIcon(statusIcon),\n                    this);\n        }\n\n        this.addSeparator();\n\n        this.add((JMenu)statusMessageMenu.getMenu());\n\n        this.setSelectedStatus(getOfflineStatus());\n        updateStatus(getOfflineStatus());\n    }","id":48596,"modified_method":"/**\n     * Initializes a new <tt>PresenceStatusMenu<\/tt> instance which is to\n     * depict and change the presence status of a specific\n     * <tt>ProtocolProviderService<\/tt>.\n     *\n     * @param protocolProvider the <tt>ProtocolProviderService<\/tt> which is to\n     * have its presence status depicted and changed by the new instance\n     */\n    public PresenceStatusMenu(ProtocolProviderService protocolProvider)\n    {\n        super(protocolProvider.getAccountID().getDisplayName(),\n            ImageLoader.getAccountStatusImage(protocolProvider),\n            protocolProvider);\n\n        this.presence\n                = protocolProvider.getOperationSet(OperationSetPresence.class);\n\n        Iterator<PresenceStatus> statusIterator\n            = this.presence.getSupportedStatusSet();\n\n        String tooltip =\n            \"<html><b>\" + protocolProvider.getAccountID().getDisplayName()\n                + \"<\/b><br>Connecting<\/html>\";\n\n        this.setToolTipText(tooltip);\n\n        titleArea = new JLabel();\n        titleArea.setBorder(BorderFactory.createEmptyBorder(0, 5, 0, 0));\n        titleArea.setOpaque(false);\n        titleArea.setFont(titleArea.getFont().deriveFont(Font.BOLD));\n\n        messageArea = new JLabel();\n        messageArea.setBorder(BorderFactory.createEmptyBorder(0, 5, 0, 0));\n        messageArea.setOpaque(false);\n        messageArea.setVisible(false);\n        messageArea.setFont(messageArea.getFont().deriveFont(Font.PLAIN));\n\n        statusMessageMenu = new StatusMessageMenu(protocolProvider, true);\n        statusMessageMenu.addPropertyChangeListener(this);\n        updateTitleArea();\n\n        this.add(titleArea);\n        this.add(messageArea);\n        this.addSeparator();\n\n        while (statusIterator.hasNext())\n        {\n            PresenceStatus status = statusIterator.next();\n            byte[] statusIcon = status.getStatusIcon();\n\n            addItem(\n                    status.getStatusName(),\n                    (statusIcon == null) ? null : new ImageIcon(statusIcon),\n                    this);\n        }\n\n        this.addSeparator();\n\n        this.add((JMenu)statusMessageMenu.getMenu());\n\n        this.setSelectedStatus(getOfflineStatus());\n        updateStatus(getOfflineStatus());\n    }","commit_id":"fa685fadde88e3f5de5f61d752e0c59d89949e1e","url":"https://github.com/jitsi/jitsi"},{"original_method":"private Tag randomTag() {\n\t\treturn (Tag) randomObject(tags);\n\t}","id":48597,"modified_method":"private Tag randomTag() {\n\t\treturn randomObject(tags);\n\t}","commit_id":"81247ed436e5d6278fa8eb5ebe2b352671f34ed9","url":"https://github.com/wocommunity/wonder"},{"original_method":"private AssetGroup randomAssetGroup() {\n\t\treturn (AssetGroup) randomObject(groups);\n\t}","id":48598,"modified_method":"private AssetGroup randomAssetGroup() {\n\t\treturn randomObject(groups);\n\t}","commit_id":"81247ed436e5d6278fa8eb5ebe2b352671f34ed9","url":"https://github.com/wocommunity/wonder"},{"original_method":"private String randomWord() {\n\t\treturn (String) randomObject(words);\n\t}","id":48599,"modified_method":"private String randomWord() {\n\t\treturn randomObject(words);\n\t}","commit_id":"81247ed436e5d6278fa8eb5ebe2b352671f34ed9","url":"https://github.com/wocommunity/wonder"},{"original_method":"private Object randomObject(NSArray array) {\n\t\treturn array.objectAtIndex(randomInt(array.count()));\n\t}","id":48600,"modified_method":"private <T> T randomObject(NSArray<T> array) {\n\t\treturn array.objectAtIndex(randomInt(array.count()));\n\t}","commit_id":"81247ed436e5d6278fa8eb5ebe2b352671f34ed9","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Execute given sql query on h2 database and on ignite cache and compare results. \n     * Expected that results are not ordered.\n     *\n     * @param cache Ignite cache.\n     * @param sql SQL query.\n     * @param args SQL arguments.\n     * then results will compare as ordered queries.\n     * @throws SQLException If exception.\n     */\n    private void compareQueryRes0(IgniteCache cache, String sql, Object... args) throws SQLException {\n        compareQueryRes0(cache, sql, args, Order.RANDOM);\n    }","id":48601,"modified_method":"/**\n     * Execute given sql query on h2 database and on ignite cache and compare results. \n     * Expected that results are not ordered.\n     *\n     * @param cache Ignite cache.\n     * @param sql SQL query.\n     * @param args SQL arguments.\n     * then results will compare as ordered queries.\n     * @return Result set after SQL query execution. \n     * @throws SQLException If exception.\n     */\n    private List<List<?>> compareQueryRes0(IgniteCache cache, String sql, @Nullable Object... args) throws SQLException {\n        return compareQueryRes0(cache, sql, args, Order.RANDOM);\n    }","commit_id":"94c3a90d8f971fa5a3a7013dacf15905d6075c9a","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Execute given sql query on h2 database and on partitioned ignite cache and compare results.\n     * Expected that results are ordered.\n     *\n     * @param sql SQL query.\n     * @param args SQL arguments.\n     * then results will compare as ordered queries.\n     * @throws SQLException If exception.\n     */\n    private void compareOrderedQueryRes0(String sql, Object... args) throws SQLException {\n        compareQueryRes0(pCache, sql, args, Order.ORDERED);\n    }","id":48602,"modified_method":"/**\n     * Execute given sql query on h2 database and on partitioned ignite cache and compare results.\n     * Expected that results are ordered.\n     *\n     * @param sql SQL query.\n     * @param args SQL arguments.\n     * then results will compare as ordered queries.\n     * @return Result set after SQL query execution.\n     * @throws SQLException If exception.\n     */\n    private List<List<?>> compareOrderedQueryRes0(String sql, @Nullable Object... args) throws SQLException {\n        return compareQueryRes0(pCache, sql, args, Order.ORDERED);\n    }","commit_id":"94c3a90d8f971fa5a3a7013dacf15905d6075c9a","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Execute given sql query on h2 database and on ignite cache and compare results.\n     *\n     * @param cache Ignite cache.\n     * @param sql SQL query.\n     * @param args SQL arguments.\n     * @param order Expected ordering of SQL results. If {@link Order#ORDERED} \n     * then results will compare as ordered queries.\n     * @throws SQLException If exception.\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void compareQueryRes0(IgniteCache cache, String sql, Object[] args, Order order) throws SQLException {\n        log.info(\"Sql=\\\"\" + sql + \"\\\", args=\" + Arrays.toString(args));\n\n        List<List<?>> h2Res = executeH2Query(sql, args);\n\n        List<List<?>> cacheRes = cache.queryFields(new SqlFieldsQuery(sql).setArgs(args)).getAll();\n\n        assertRsEquals(h2Res, cacheRes, order);\n    }","id":48603,"modified_method":"/**\n     * Execute given sql query on h2 database and on ignite cache and compare results.\n     *\n     * @param cache Ignite cache.\n     * @param sql SQL query.\n     * @param args SQL arguments.\n     * @param order Expected ordering of SQL results. If {@link Order#ORDERED} \n     * then results will compare as ordered queries.\n     * @return Result set after SQL query execution.\n     * @throws SQLException If exception.\n     */    \n    @SuppressWarnings(\"unchecked\")\n    private List<List<?>> compareQueryRes0(IgniteCache cache, String sql, @Nullable Object[] args, Order order) throws SQLException {\n        if (args == null)\n            args = new Object[] {null};\n        \n        log.info(\"Sql=\\\"\" + sql + \"\\\", args=\" + Arrays.toString(args));\n\n        List<List<?>> h2Res = executeH2Query(sql, args);\n\n        List<List<?>> cacheRes = cache.queryFields(new SqlFieldsQuery(sql).setArgs(args)).getAll();\n\n        assertRsEquals(h2Res, cacheRes, order);\n        \n        return cacheRes;\n    }","commit_id":"94c3a90d8f971fa5a3a7013dacf15905d6075c9a","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Insert {@link Person} at h2 database.\n     *\n     * @param p Person.\n     * @throws SQLException If exception.\n     */\n    private void insertInDb(Person p) throws SQLException {\n        try(PreparedStatement st = conn.prepareStatement(\"insert into \\\"part\\\".PERSON \" +\n            \"(_key, _val, id, firstName, lastName, orgId, salary) values(?, ?, ?, ?, ?, ?, ?)\")) {\n            st.setObject(1, p.key());\n            st.setObject(2, p);\n            st.setObject(3, p.id);\n            st.setObject(4, p.firstName);\n            st.setObject(5, p.lastName);\n            st.setObject(6, p.orgId);\n            st.setObject(7, p.salary);\n\n            st.executeUpdate();\n        }\n    }","id":48604,"modified_method":"/**\n     * Insert {@link Person} at h2 database.\n     *\n     * @param p Person.\n     * @throws SQLException If exception.\n     */\n    private void insertInDb(Person p) throws SQLException {\n        try(PreparedStatement st = conn.prepareStatement(\"insert into \\\"part\\\".PERSON \" +\n            \"(_key, _val, id, firstName, lastName, orgId, salary) values(?, ?, ?, ?, ?, ?, ?)\")) {\n            setObjectSmart(st, 1, p.key());\n            setObjectSmart(st, 2, p);\n            setObjectSmart(st, 3, p.id);\n            setObjectSmart(st, 4, p.firstName);\n            setObjectSmart(st, 5, p.lastName);\n            setObjectSmart(st, 6, p.orgId);\n            setObjectSmart(st, 7, p.salary);\n\n            st.executeUpdate();\n        }\n    }","commit_id":"94c3a90d8f971fa5a3a7013dacf15905d6075c9a","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Insert {@link Organization} at h2 database.\n     *  \n     * @param org Organization.\n     * @throws SQLException If exception.\n     */\n    private void insertInDb(Organization org) throws SQLException {\n        try(PreparedStatement st = conn.prepareStatement(\n            \"insert into \\\"part\\\".ORGANIZATION (_key, _val, id, name) values(?, ?, ?, ?)\")) {\n            st.setObject(1, org.id);\n            st.setObject(2, org);\n            st.setObject(3, org.id);\n            st.setObject(4, org.name);\n\n            st.executeUpdate();\n        }\n    }","id":48605,"modified_method":"/**\n     * Insert {@link Organization} at h2 database.\n     *  \n     * @param org Organization.\n     * @throws SQLException If exception.\n     */\n    private void insertInDb(Organization org) throws SQLException {\n        try(PreparedStatement st = conn.prepareStatement(\n            \"insert into \\\"part\\\".ORGANIZATION (_key, _val, id, name) values(?, ?, ?, ?)\")) {\n            setObjectSmart(st, 1, org.id);\n            setObjectSmart(st, 2, org);\n            setObjectSmart(st, 3, org.id);\n            setObjectSmart(st, 4, org.name);\n\n            st.executeUpdate();\n        }\n    }","commit_id":"94c3a90d8f971fa5a3a7013dacf15905d6075c9a","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Insert {@link Product} at h2 database.\n     *\n     * @param p Product.\n     * @throws SQLException If exception.\n     */\n    private void insertInDb(Product p) throws SQLException {\n        try(PreparedStatement st = conn.prepareStatement(\n            \"insert into \\\"repl\\\".PRODUCT (_key, _val, id, name, price) values(?, ?, ?, ?, ?)\")) {\n            st.setObject(1, p.id);\n            st.setObject(2, p);\n            st.setObject(3, p.id);\n            st.setObject(4, p.name);\n            st.setObject(5, p.price);\n\n            st.executeUpdate();\n        }\n    }","id":48606,"modified_method":"/**\n     * Insert {@link Product} at h2 database.\n     *\n     * @param p Product.\n     * @throws SQLException If exception.\n     */\n    private void insertInDb(Product p) throws SQLException {\n        try(PreparedStatement st = conn.prepareStatement(\n            \"insert into \\\"repl\\\".PRODUCT (_key, _val, id, name, price) values(?, ?, ?, ?, ?)\")) {\n            setObjectSmart(st, 1, p.id);\n            setObjectSmart(st, 2, p);\n            setObjectSmart(st, 3, p.id);\n            setObjectSmart(st, 4, p.name);\n            setObjectSmart(st, 5, p.price);\n\n            st.executeUpdate();\n        }\n    }","commit_id":"94c3a90d8f971fa5a3a7013dacf15905d6075c9a","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Execute given sql query on h2 database and on partitioned ignite cache and compare results.\n     *\n     * @param sql SQL query.\n     * @param args SQL arguments.\n     * then results will compare as ordered queries.\n     * @throws SQLException If exception.\n     */\n    private void compareQueryRes0(String sql, Object... args) throws SQLException {\n        compareQueryRes0(pCache, sql, args, Order.RANDOM);\n    }","id":48607,"modified_method":"/**\n     * Execute given sql query on h2 database and on partitioned ignite cache and compare results.\n     *\n     * @param sql SQL query.\n     * @param args SQL arguments.\n     * then results will compare as ordered queries.\n     * @return Result set after SQL query execution. \n     * @throws SQLException If exception.\n     */\n    private List<List<?>> compareQueryRes0(String sql, @Nullable Object... args) throws SQLException {\n        return compareQueryRes0(pCache, sql, args, Order.RANDOM);\n    }","commit_id":"94c3a90d8f971fa5a3a7013dacf15905d6075c9a","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Execute SQL query on h2 database.\n     *\n     * @param sql SQL query.\n     * @param args SQL arguments.\n     * @return Result of SQL query on h2 database.\n     * @throws SQLException If exception.\n     */\n    private List<List<?>> executeH2Query(String sql, Object[] args) throws SQLException {\n        List<List<?>> res = new ArrayList<>();\n        ResultSet rs = null;\n\n        try(PreparedStatement st = conn.prepareStatement(sql)) {\n            for (int idx = 0; idx < args.length; idx++)\n                st.setObject(idx + 1, args[idx]);\n\n            rs = st.executeQuery();\n\n            int colCnt = rs.getMetaData().getColumnCount();\n\n            while (rs.next()) {\n                List<Object> row = new ArrayList<>(colCnt);\n                \n                for (int i = 1; i <= colCnt; i++)\n                    row.add(rs.getObject(i));\n                \n                res.add(row);\n            }\n        }\n        finally {\n            U.closeQuiet(rs);\n        }\n\n        return res;\n    }","id":48608,"modified_method":"/**\n     * Execute SQL query on h2 database.\n     *\n     * @param sql SQL query.\n     * @param args SQL arguments.\n     * @return Result of SQL query on h2 database.\n     * @throws SQLException If exception.\n     */\n    private List<List<?>> executeH2Query(String sql, Object[] args) throws SQLException {\n        List<List<?>> res = new ArrayList<>();\n        ResultSet rs = null;\n\n        try(PreparedStatement st = conn.prepareStatement(sql)) {\n            for (int idx = 0; idx < args.length; idx++)\n                setObjectSmart(st, idx + 1, args[idx]);\n\n            rs = st.executeQuery();\n\n            int colCnt = rs.getMetaData().getColumnCount();\n\n            while (rs.next()) {\n                List<Object> row = new ArrayList<>(colCnt);\n                \n                for (int i = 1; i <= colCnt; i++)\n                    row.add(rs.getObject(i));\n                \n                res.add(row);\n            }\n        }\n        finally {\n            U.closeQuiet(rs);\n        }\n\n        return res;\n    }","commit_id":"94c3a90d8f971fa5a3a7013dacf15905d6075c9a","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Populate cache and h2 database with test data.\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void initCacheAndDbData() throws SQLException {\n        int idGen = 0;\n        \n        // Organizations.\n        List<Organization> organizations = new ArrayList<>();\n\n        for (int i = 0; i < 3; i++) {\n            int id = idGen++;\n            \n            Organization org = new Organization(id, \"Org\" + id);\n            \n            organizations.add(org);\n            \n            pCache.put(org.id, org);\n            \n            insertInDb(org);\n        }\n\n        // Persons.\n        List<Person> persons = new ArrayList<>();\n        \n        for (int i = 0; i < 5; i++) {\n            int id = idGen++;\n\n            Person person = new Person(id, organizations.get(i % organizations.size()), \n                \"name\" + id, \"lastName\" + id, id * 100.0);\n\n            persons.add(person);\n\n            pCache.put(person.key(), person);\n            \n            insertInDb(person);\n        }\n\n        // Products.\n        List<Product> products = new ArrayList<>();\n\n        for (int i = 0; i < 10; i++) {\n            int id = idGen++;\n            \n            Product product = new Product(id, \"Product\" + id, id*1000);\n            \n            products.add(product);\n            \n            rCache.put(product.id, product);\n            \n            insertInDb(product);\n        }\n\n        // Purchases.\n        for (int i = 0; i < products.size() * 2; i++) {\n            int id = idGen++;\n\n            Purchase purchase = new Purchase(id, products.get(i % products.size()), persons.get(i % persons.size()));\n\n            pCache.put(purchase.key(), purchase);\n            \n            insertInDb(purchase);\n        }\n    }","id":48609,"modified_method":"/**\n     * Populate cache and h2 database with test data.\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void initCacheAndDbData() throws SQLException {\n        int idGen = 0;\n        \n        // Organizations.\n        List<Organization> organizations = new ArrayList<>();\n\n        for (int i = 0; i < 3; i++) {\n            int id = idGen++;\n            \n            Organization org = new Organization(id, \"Org\" + id);\n            \n            organizations.add(org);\n            \n            pCache.put(org.id, org);\n            \n            insertInDb(org);\n        }\n\n        // Persons.\n        List<Person> persons = new ArrayList<>();\n        \n        for (int i = 0; i < 5; i++) {\n            int id = idGen++;\n\n            Person person = new Person(id, organizations.get(i % organizations.size()), \n                \"name\" + id, \"lastName\" + id, id * 100.0);\n            \n            // Add a Person without lastname.\n            if (id == organizations.size() + 1)\n                person.lastName = null;\n\n            persons.add(person);\n\n            pCache.put(person.key(), person);\n            \n            insertInDb(person);\n        }\n\n        // Products.\n        List<Product> products = new ArrayList<>();\n\n        for (int i = 0; i < 10; i++) {\n            int id = idGen++;\n            \n            Product product = new Product(id, \"Product\" + id, id*1000);\n            \n            products.add(product);\n            \n            rCache.put(product.id, product);\n            \n            insertInDb(product);\n        }\n\n        // Purchases.\n        for (int i = 0; i < products.size() * 2; i++) {\n            int id = idGen++;\n\n            Purchase purchase = new Purchase(id, products.get(i % products.size()), persons.get(i % persons.size()));\n\n            pCache.put(purchase.key(), purchase);\n            \n            insertInDb(purchase);\n        }\n    }","commit_id":"94c3a90d8f971fa5a3a7013dacf15905d6075c9a","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Insert {@link Purchase} at h2 database.\n     *\n     * @param p Purchase.\n     * @throws SQLException If exception.\n     */\n    private void insertInDb(Purchase p) throws SQLException {\n        try(PreparedStatement st = conn.prepareStatement(\n            \"insert into \\\"part\\\".PURCHASE (_key, _val, id, personId, productId) values(?, ?, ?, ?, ?)\")) {\n            st.setObject(1, p.key());\n            st.setObject(2, p);\n            st.setObject(3, p.id);\n            st.setObject(4, p.personId);\n            st.setObject(5, p.productId);\n\n            st.executeUpdate();\n        }\n    }","id":48610,"modified_method":"/**\n     * Insert {@link Purchase} at h2 database.\n     *\n     * @param p Purchase.\n     * @throws SQLException If exception.\n     */\n    private void insertInDb(Purchase p) throws SQLException {\n        try(PreparedStatement st = conn.prepareStatement(\n            \"insert into \\\"part\\\".PURCHASE (_key, _val, id, personId, productId) values(?, ?, ?, ?, ?)\")) {\n            setObjectSmart(st, 1, p.key());\n            setObjectSmart(st, 2, p);\n            setObjectSmart(st, 3, p.id);\n            setObjectSmart(st, 4, p.personId);\n            setObjectSmart(st, 5, p.productId);\n\n            st.executeUpdate();\n        }\n    }","commit_id":"94c3a90d8f971fa5a3a7013dacf15905d6075c9a","url":"https://github.com/apache/ignite"},{"original_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with()\n      .setName(\"CountAndFilterWords\")\n      .setDescription(\"Example word filter and count application\")\n      .withStreams()\n        .add(new Stream(\"text\"))\n      .withDataSets()\n        .add(new KeyValueTable(TABLE_NAME))\n      .withFlows()\n        .add(new CountAndFilterWordsFlow())\n      .noProcedure()\n      .noBatch()\n      .build();\n  }","id":48611,"modified_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with()\n      .setName(\"CountAndFilterWords\")\n      .setDescription(\"Example word filter and count application\")\n      .withStreams()\n        .add(new Stream(\"text\"))\n      .withDataSets()\n        .add(new KeyValueTable(TABLE_NAME))\n      .withFlows()\n        .add(new CountAndFilterWordsFlow())\n      .noProcedure()\n      .noBatch()\n      .noWorkflow()\n      .build();\n  }","commit_id":"1a3aff62ce666ccd3daa38a00cb547ecf605cc39","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with()\n      .setName(\"CountCounts\")\n      .setDescription(\"Application for counting counts of words\")\n      .withStreams()\n        .add(new Stream(\"text\"))\n      .withDataSets()\n        .add(new CountCounterTable(TABLE_NAME))\n      .withFlows()\n        .add(new CountCountsFlow())\n      .withProcedures()\n        .add(new CountCountsProcedure())\n      .noBatch()\n      .build();\n  }","id":48612,"modified_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with()\n      .setName(\"CountCounts\")\n      .setDescription(\"Application for counting counts of words\")\n      .withStreams()\n        .add(new Stream(\"text\"))\n      .withDataSets()\n        .add(new CountCounterTable(TABLE_NAME))\n      .withFlows()\n        .add(new CountCountsFlow())\n      .withProcedures()\n        .add(new CountCountsProcedure())\n      .noBatch()\n      .noWorkflow()\n      .build();\n  }","commit_id":"1a3aff62ce666ccd3daa38a00cb547ecf605cc39","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with()\n      .setName(\"CountOddAndEven\")\n      .setDescription(\"Example application that counts odd and even random numbers\")\n      .noStream()\n      .noDataSet()\n      .withFlows()\n      .add(new CountOddAndEvenFlow())\n      .noProcedure()\n      .noBatch()\n      .build();\n  }","id":48613,"modified_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with()\n      .setName(\"CountOddAndEven\")\n      .setDescription(\"Example application that counts odd and even random numbers\")\n      .noStream()\n      .noDataSet()\n      .withFlows()\n      .add(new CountOddAndEvenFlow())\n      .noProcedure()\n      .noBatch()\n      .noWorkflow()\n      .build();\n  }","commit_id":"1a3aff62ce666ccd3daa38a00cb547ecf605cc39","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with()\n      .setName(\"CountRandom\")\n      .setDescription(\"Example random count application\")\n      .noStream()\n      .withDataSets()\n        .add(new KeyValueTable(TABLE_NAME))\n      .withFlows()\n        .add(new CountRandomFlow())\n      .noProcedure()\n      .noBatch()\n      .build();\n  }","id":48614,"modified_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with()\n      .setName(\"CountRandom\")\n      .setDescription(\"Example random count application\")\n      .noStream()\n      .withDataSets()\n        .add(new KeyValueTable(TABLE_NAME))\n      .withFlows()\n        .add(new CountRandomFlow())\n      .noProcedure()\n      .noBatch()\n      .noWorkflow()\n      .build();\n  }","commit_id":"1a3aff62ce666ccd3daa38a00cb547ecf605cc39","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with()\n      .setName(\"CountTokens\")\n      .setDescription(\"Example applicaiton that counts tokens\")\n      .withStreams()\n        .add(new Stream(\"text\"))\n      .withDataSets()\n        .add(new KeyValueTable(TABLE_NAME))\n      .withFlows()\n        .add(new CountTokensFlow())\n      .noProcedure()\n      .noBatch()\n      .build();\n  }","id":48615,"modified_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with()\n      .setName(\"CountTokens\")\n      .setDescription(\"Example applicaiton that counts tokens\")\n      .withStreams()\n        .add(new Stream(\"text\"))\n      .withDataSets()\n        .add(new KeyValueTable(TABLE_NAME))\n      .withFlows()\n        .add(new CountTokensFlow())\n      .noProcedure()\n      .noBatch()\n      .noWorkflow()\n      .build();\n  }","commit_id":"1a3aff62ce666ccd3daa38a00cb547ecf605cc39","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with().\n      setName(\"HelloWorld\").\n      setDescription(\"A Hello World program for the Continuuity Reactor\").\n      withStreams().add(new Stream(\"who\")).\n      withDataSets().add(new KeyValueTable(\"whom\")).\n      withFlows().add(new WhoFlow()).\n      withProcedures().add(new Greeting()).\n      noBatch().\n      build();\n  }","id":48616,"modified_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with()\n      .setName(\"HelloWorld\")\n      .setDescription(\"A Hello World program for the Continuuity Reactor\")\n      .withStreams()\n        .add(new Stream(\"who\"))\n      .withDataSets()\n        .add(new KeyValueTable(\"whom\"))\n      .withFlows()\n        .add(new WhoFlow())\n      .withProcedures()\n        .add(new Greeting())\n      .noBatch()\n      .noWorkflow()\n      .build();\n  }","commit_id":"1a3aff62ce666ccd3daa38a00cb547ecf605cc39","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public ApplicationSpecification configure() {\n    try {\n      return ApplicationSpecification.Builder.with()\n        .setName(\"PurchaseHistory\")\n        .setDescription(\"Purchase history application\")\n        .withStreams()\n          .add(new Stream(\"purchaseStream\"))\n        .withDataSets()\n          .add(new ObjectStore<PurchaseHistory>(\"history\", PurchaseHistory.class))\n          .add(new ObjectStore<Purchase>(\"purchases\", Purchase.class))\n        .withFlows()\n          .add(new PurchaseFlow())\n        .withProcedures()\n          .add(new PurchaseQuery())\n        .withBatch()\n          .add(new PurchaseHistoryBuilder())\n        .build();\n    } catch (UnsupportedTypeException e) {\n      // this exception is thrown by ObjectStore if its parameter type cannot be (de)serialized (for example, if it is\n      // an interface and not a class, then there is no auto-magic way deserialize an object. In this case that\n      // cannot happen because PurchaseHistory is an actual class.\n      throw new RuntimeException(e);\n    }\n  }","id":48617,"modified_method":"@Override\n  public ApplicationSpecification configure() {\n    try {\n      return ApplicationSpecification.Builder.with()\n        .setName(\"PurchaseHistory\")\n        .setDescription(\"Purchase history application\")\n        .withStreams()\n          .add(new Stream(\"purchaseStream\"))\n        .withDataSets()\n          .add(new ObjectStore<PurchaseHistory>(\"history\", PurchaseHistory.class))\n          .add(new ObjectStore<Purchase>(\"purchases\", Purchase.class))\n        .withFlows()\n          .add(new PurchaseFlow())\n        .withProcedures()\n          .add(new PurchaseQuery())\n        .withBatch()\n          .add(new PurchaseHistoryBuilder())\n        .noWorkflow()\n        .build();\n    } catch (UnsupportedTypeException e) {\n      // this exception is thrown by ObjectStore if its parameter type cannot be (de)serialized (for example, if it is\n      // an interface and not a class, then there is no auto-magic way deserialize an object. In this case that\n      // cannot happen because PurchaseHistory is an actual class.\n      throw new RuntimeException(e);\n    }\n  }","commit_id":"1a3aff62ce666ccd3daa38a00cb547ecf605cc39","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with()\n      .setName(\"ResourceSpammerApp\")\n      .setDescription(\"Application that uses lots of system resources\")\n      .noStream()\n      .withDataSets()\n        .add(new KeyValueTable(\"input\"))\n        .add(new KeyValueTable(\"output\"))\n      .withFlows()\n        .add(new CPUSpammerFlow())\n      .withProcedures()\n        .add(new CPUSpamProcedure())\n      .noBatch()\n      .build();\n  }","id":48618,"modified_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with()\n      .setName(\"ResourceSpammerApp\")\n      .setDescription(\"Application that uses lots of system resources\")\n      .noStream()\n      .withDataSets()\n        .add(new KeyValueTable(\"input\"))\n        .add(new KeyValueTable(\"output\"))\n      .withFlows()\n        .add(new CPUSpammerFlow())\n      .withProcedures()\n        .add(new CPUSpamProcedure())\n      .noBatch()\n      .noWorkflow()\n      .build();\n  }","commit_id":"1a3aff62ce666ccd3daa38a00cb547ecf605cc39","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with()\n      .setName(\"SimpleWriteAndRead\")\n      .setDescription(\"Flow that writes key=value then reads back the key\")\n      .withStreams()\n        .add(new Stream(\"keyValues\"))\n      .withDataSets()\n        .add(new KeyValueTable(TABLE_NAME))\n      .withFlows()\n        .add(new SimpleWriteAndReadFlow())\n      .noProcedure()\n      .noBatch()\n      .build();\n  }","id":48619,"modified_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with()\n      .setName(\"SimpleWriteAndRead\")\n      .setDescription(\"Flow that writes key=value then reads back the key\")\n      .withStreams()\n        .add(new Stream(\"keyValues\"))\n      .withDataSets()\n        .add(new KeyValueTable(TABLE_NAME))\n      .withFlows()\n        .add(new SimpleWriteAndReadFlow())\n      .noProcedure()\n      .noBatch()\n      .noWorkflow()\n      .build();\n  }","commit_id":"1a3aff62ce666ccd3daa38a00cb547ecf605cc39","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with()\n      .setName(\"WordCount\")\n      .setDescription(\"Example Word Count Application\")\n      .withStreams()\n        .add(new Stream(\"wordStream\"))\n      .withDataSets()\n        .add(new Table(\"wordStats\"))\n        .add(new KeyValueTable(\"wordCounts\"))\n        .add(new UniqueCountTable(\"uniqueCount\"))\n        .add(new AssociationTable(\"wordAssocs\"))\n      .withFlows()\n        .add(new WordCounter())\n      .withProcedures()\n        .add(new RetrieveCounts())\n      .noBatch()\n      .build();\n  }","id":48620,"modified_method":"@Override\n  public ApplicationSpecification configure() {\n    return ApplicationSpecification.Builder.with()\n      .setName(\"WordCount\")\n      .setDescription(\"Example Word Count Application\")\n      .withStreams()\n        .add(new Stream(\"wordStream\"))\n      .withDataSets()\n        .add(new Table(\"wordStats\"))\n        .add(new KeyValueTable(\"wordCounts\"))\n        .add(new UniqueCountTable(\"uniqueCount\"))\n        .add(new AssociationTable(\"wordAssocs\"))\n      .withFlows()\n        .add(new WordCounter())\n      .withProcedures()\n        .add(new RetrieveCounts())\n      .noBatch()\n      .noWorkflow()\n      .build();\n  }","commit_id":"1a3aff62ce666ccd3daa38a00cb547ecf605cc39","url":"https://github.com/caskdata/cdap"},{"original_method":"public List<Article> getGroupArticles(\n\t\t\tlong groupId, long parentResourcePrimKey, int start, int end,\n\t\t\tOrderByComparator orderByComparator)\n\t\tthrows SystemException {\n\n\t\tMap<String, Long> params = new HashMap<String, Long>();\n\n\t\tparams.put(\"groupId\", new Long(groupId));\n\t\tparams.put(\"parentResourcePrimKey\", new Long(parentResourcePrimKey));\n\n\t\tList<Object> results = dynamicQuery(\n\t\t\tgetDynamicQuery(params), start, end, orderByComparator);\n\n\t\treturn toArticles(results);\n\t}","id":48621,"modified_method":"public List<Article> getGroupArticles(\n\t\t\tlong groupId, long parentResourcePrimKey, int start, int end,\n\t\t\tOrderByComparator orderByComparator)\n\t\tthrows SystemException {\n\n\t\tMap<String, Long> params = new HashMap<String, Long>();\n\n\t\tparams.put(\"groupId\", new Long(groupId));\n\t\tparams.put(\"parentResourcePrimKey\", new Long(parentResourcePrimKey));\n\n\t\treturn dynamicQuery(\n\t\t\tgetDynamicQuery(params), start, end, orderByComparator);\n\t}","commit_id":"46dd550ecbd196800f690c18aade56ae9467b166","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public List<Article> getCompanyArticles(\n\t\t\tlong companyId, int start, int end,\n\t\t\tOrderByComparator orderByComparator)\n\t\tthrows SystemException {\n\n\t\tMap<String, Long> params = new HashMap<String, Long>();\n\n\t\tparams.put(\"companyId\", new Long(companyId));\n\n\t\tList<Object> results = dynamicQuery(\n\t\t\tgetDynamicQuery(params), start, end, orderByComparator);\n\n\t\treturn toArticles(results);\n\t}","id":48622,"modified_method":"public List<Article> getCompanyArticles(\n\t\t\tlong companyId, int start, int end,\n\t\t\tOrderByComparator orderByComparator)\n\t\tthrows SystemException {\n\n\t\tMap<String, Long> params = new HashMap<String, Long>();\n\n\t\tparams.put(\"companyId\", new Long(companyId));\n\n\t\treturn dynamicQuery(\n\t\t\tgetDynamicQuery(params), start, end, orderByComparator);\n\t}","commit_id":"46dd550ecbd196800f690c18aade56ae9467b166","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public int getGroupArticlesCount(long groupId, long parentResourcePrimKey)\n\t\tthrows SystemException {\n\n\t\tMap<String, Long> params = new HashMap<String, Long>();\n\n\t\tparams.put(\"groupId\", new Long(groupId));\n\t\tparams.put(\"parentResourcePrimKey\", new Long(parentResourcePrimKey));\n\n\t\treturn dynamicQueryCount(getDynamicQuery(params));\n\t}","id":48623,"modified_method":"public int getGroupArticlesCount(long groupId, long parentResourcePrimKey)\n\t\tthrows SystemException {\n\n\t\tMap<String, Long> params = new HashMap<String, Long>();\n\n\t\tparams.put(\"groupId\", new Long(groupId));\n\t\tparams.put(\"parentResourcePrimKey\", new Long(parentResourcePrimKey));\n\n\t\treturn (int)dynamicQueryCount(getDynamicQuery(params));\n\t}","commit_id":"46dd550ecbd196800f690c18aade56ae9467b166","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void checkAttachments() throws PortalException, SystemException {\n\t\tfor (long companyId : PortalUtil.getCompanyIds()) {\n\t\t\tlong folderId = counterLocalService.increment();\n\t\t\tString dirName = \"knowledgebase/cache/attachments/\" + folderId;\n\n\t\t\tDLServiceUtil.addDirectory(\n\t\t\t\tcompanyId, CompanyConstants.SYSTEM, dirName);\n\n\t\t\tString[] fileNames = DLServiceUtil.getFileNames(\n\t\t\t\tcompanyId, CompanyConstants.SYSTEM,\n\t\t\t\t\"knowledgebase/cache/attachments\");\n\n\t\t\tArrays.sort(fileNames);\n\n\t\t\tfor (int i = 0; i < fileNames.length - 50; i++) {\n\t\t\t\tDLServiceUtil.deleteDirectory(\n\t\t\t\t\tcompanyId, CompanyConstants.SYSTEM_STRING,\n\t\t\t\t\tCompanyConstants.SYSTEM, fileNames[i]);\n\t\t\t}\n\n\t\t\tDLServiceUtil.deleteDirectory(\n\t\t\t\tcompanyId, CompanyConstants.SYSTEM_STRING,\n\t\t\t\tCompanyConstants.SYSTEM, dirName);\n\t\t}\n\t}","id":48624,"modified_method":"public void checkAttachments() throws PortalException, SystemException {\n\t\tfor (long companyId : PortalUtil.getCompanyIds()) {\n\t\t\tcheckAttachments(companyId);\n\t\t}\n\t}","commit_id":"46dd550ecbd196800f690c18aade56ae9467b166","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public String updateAttachments(long companyId, long resourcePrimKey)\n\t\tthrows PortalException, SystemException {\n\n\t\tlong folderId = counterLocalService.increment();\n\t\tString dirName = \"knowledgebase/cache/attachments/\" + folderId;\n\n\t\tDLServiceUtil.addDirectory(companyId, CompanyConstants.SYSTEM, dirName);\n\n\t\tif (resourcePrimKey > 0) {\n\t\t\tArticle article = articlePersistence.findByResourcePrimKey_First(\n\t\t\t\tresourcePrimKey, new ArticleVersionComparator());\n\t\t\tDate now = new Date();\n\n\t\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\t\tfor (String fileName : article.getAttachmentsFileNames()) {\n\t\t\t\tString shortFileName = FileUtil.getShortFileName(fileName);\n\t\t\t\tbyte[] bytes = DLServiceUtil.getFile(\n\t\t\t\t\tarticle.getCompanyId(), CompanyConstants.SYSTEM, fileName);\n\n\t\t\t\tDLServiceUtil.addFile(\n\t\t\t\t\tcompanyId, CompanyConstants.SYSTEM_STRING,\n\t\t\t\t\tGroupConstants.DEFAULT_PARENT_GROUP_ID,\n\t\t\t\t\tCompanyConstants.SYSTEM,\n\t\t\t\t\tdirName + StringPool.SLASH + shortFileName, 0,\n\t\t\t\t\tStringPool.BLANK, now, serviceContext, bytes);\n\t\t\t}\n\t\t}\n\n\t\treturn dirName;\n\t}","id":48625,"modified_method":"public String updateAttachments(long companyId, long resourcePrimKey)\n\t\tthrows PortalException, SystemException {\n\n\t\tString dirName =\n\t\t\t\"knowledgebase/cache/attachments/\" +\n\t\t\t\tcounterLocalService.increment();\n\n\t\tDLServiceUtil.addDirectory(companyId, CompanyConstants.SYSTEM, dirName);\n\n\t\tif (resourcePrimKey <= 0) {\n\t\t\treturn dirName;\n\t\t}\n\n\t\tArticle article = getLatestArticle(resourcePrimKey);\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tfor (String fileName : article.getAttachmentsFileNames()) {\n\t\t\tString shortFileName = FileUtil.getShortFileName(fileName);\n\t\t\tbyte[] bytes = DLServiceUtil.getFile(\n\t\t\t\tarticle.getCompanyId(), CompanyConstants.SYSTEM, fileName);\n\n\t\t\tDLServiceUtil.addFile(\n\t\t\t\tcompanyId, CompanyConstants.SYSTEM_STRING,\n\t\t\t\tGroupConstants.DEFAULT_PARENT_GROUP_ID,\n\t\t\t\tCompanyConstants.SYSTEM,\n\t\t\t\tdirName + StringPool.SLASH + shortFileName, 0,\n\t\t\t\tStringPool.BLANK, article.getModifiedDate(), serviceContext,\n\t\t\t\tbytes);\n\t\t}\n\n\t\treturn dirName;\n\t}","commit_id":"46dd550ecbd196800f690c18aade56ae9467b166","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public int getCompanyArticlesCount(long companyId) throws SystemException {\n\t\tMap<String, Long> params = new HashMap<String, Long>();\n\n\t\tparams.put(\"companyId\", new Long(companyId));\n\n\t\treturn dynamicQueryCount(getDynamicQuery(params));\n\t}","id":48626,"modified_method":"public int getCompanyArticlesCount(long companyId) throws SystemException {\n\t\tMap<String, Long> params = new HashMap<String, Long>();\n\n\t\tparams.put(\"companyId\", new Long(companyId));\n\n\t\treturn (int)dynamicQueryCount(getDynamicQuery(params));\n\t}","commit_id":"46dd550ecbd196800f690c18aade56ae9467b166","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public List<Article> getGroupArticles(\n\t\t\tlong groupId, int start, int end,\n\t\t\tOrderByComparator orderByComparator)\n\t\tthrows SystemException {\n\n\t\tMap<String, Long> params = new HashMap<String, Long>();\n\n\t\tparams.put(\"groupId\", new Long(groupId));\n\n\t\tList<Object> results = dynamicQuery(\n\t\t\tgetDynamicQuery(params), start, end, orderByComparator);\n\n\t\treturn toArticles(results);\n\t}","id":48627,"modified_method":"public List<Article> getGroupArticles(\n\t\t\tlong groupId, int start, int end,\n\t\t\tOrderByComparator orderByComparator)\n\t\tthrows SystemException {\n\n\t\tMap<String, Long> params = new HashMap<String, Long>();\n\n\t\tparams.put(\"groupId\", new Long(groupId));\n\n\t\treturn dynamicQuery(\n\t\t\tgetDynamicQuery(params), start, end, orderByComparator);\n\t}","commit_id":"46dd550ecbd196800f690c18aade56ae9467b166","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public int getGroupArticlesCount(long groupId) throws SystemException {\n\t\tMap<String, Long> params = new HashMap<String, Long>();\n\n\t\tparams.put(\"groupId\", new Long(groupId));\n\n\t\treturn dynamicQueryCount(getDynamicQuery(params));\n\t}","id":48628,"modified_method":"public int getGroupArticlesCount(long groupId) throws SystemException {\n\t\tMap<String, Long> params = new HashMap<String, Long>();\n\n\t\tparams.put(\"groupId\", new Long(groupId));\n\n\t\treturn (int)dynamicQueryCount(getDynamicQuery(params));\n\t}","commit_id":"46dd550ecbd196800f690c18aade56ae9467b166","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public Account updateAccountFolders(\n\t\t\tlong accountId, long inboxFolderId, long draftFolderId,\n\t\t\tlong sentFolderId, long trashFolderId)\n\t\tthrows PortalException, SystemException {\n\n\t\tAccount account = accountPersistence.findByPrimaryKey(accountId);\n\n\t\taccount.setModifiedDate(new Date());\n\n\t\taccount.setInboxFolderId(inboxFolderId);\n\t\taccount.setDraftFolderId(draftFolderId);\n\t\taccount.setSentFolderId(sentFolderId);\n\t\taccount.setTrashFolderId(trashFolderId);\n\n\t\taccountPersistence.update(account, false);\n\n\t\treturn account;\n\t}","id":48629,"modified_method":"public Account updateFolders(\n\t\t\tlong accountId, long inboxFolderId, long draftFolderId,\n\t\t\tlong sentFolderId, long trashFolderId)\n\t\tthrows PortalException, SystemException {\n\n\t\tAccount account = accountPersistence.findByPrimaryKey(accountId);\n\n\t\taccount.setModifiedDate(new Date());\n\n\t\taccount.setInboxFolderId(inboxFolderId);\n\t\taccount.setDraftFolderId(draftFolderId);\n\t\taccount.setSentFolderId(sentFolderId);\n\t\taccount.setTrashFolderId(trashFolderId);\n\n\t\taccountPersistence.update(account, false);\n\n\t\treturn account;\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public Account addAccount(\n\t\t\tString address, String personalName, String protocol,\n\t\t\tString incomingHostName, int incomingPort, boolean incomingSecure,\n\t\t\tString outgoingHostName, int outgoingPort, boolean outgoingSecure,\n\t\t\tString login, String password, boolean savePassword,\n\t\t\tString signature, boolean useSignature, String folderPrefix,\n\t\t\tboolean defaultSender)\n\t\tthrows PortalException, SystemException {\n\n\t\tvalidateAccount(\n\t\t\tincomingHostName, incomingPort, incomingSecure, outgoingHostName,\n\t\t\toutgoingPort, outgoingSecure, login, password);\n\n\t\ttry {\n\t\t\tAccountLocalServiceUtil.getAccount(user.getUserId(), address);\n\n\t\t\tthrow new MailException(\"Address already exists\");\n\t\t}\n\t\tcatch (NoSuchAccountException nsae) {\n\t\t\tlong inboxFolderId = 0;\n\t\t\tlong draftFolderId = 0;\n\t\t\tlong sentFolderId = 0;\n\t\t\tlong trashFolderId = 0;\n\n\t\t\tAccount account = AccountLocalServiceUtil.addAccount(\n\t\t\t\tuser.getUserId(), address, personalName, protocol,\n\t\t\t\tincomingHostName, incomingPort, incomingSecure,\n\t\t\t\toutgoingHostName, outgoingPort, outgoingSecure, login,\n\t\t\t\tpassword, savePassword, signature, useSignature, folderPrefix,\n\t\t\t\tinboxFolderId, draftFolderId, sentFolderId, trashFolderId,\n\t\t\t\tdefaultSender);\n\n\t\t\tsetAccount(account);\n\n\t\t\tsynchronize();\n\n\t\t\treturn account;\n\t\t}\n\t}","id":48630,"modified_method":"public Account addAccount(\n\t\t\tString address, String personalName, String protocol,\n\t\t\tString incomingHostName, int incomingPort, boolean incomingSecure,\n\t\t\tString outgoingHostName, int outgoingPort, boolean outgoingSecure,\n\t\t\tString login, String password, boolean savePassword,\n\t\t\tString signature, boolean useSignature, String folderPrefix,\n\t\t\tboolean defaultSender)\n\t\tthrows PortalException, SystemException {\n\n\t\tvalidateAccount(\n\t\t\tincomingHostName, incomingPort, incomingSecure, outgoingHostName,\n\t\t\toutgoingPort, outgoingSecure, login, password);\n\n\t\ttry {\n\t\t\tAccountLocalServiceUtil.getAccount(user.getUserId(), address);\n\n\t\t\tthrow new MailException(MailException.ACCOUNT_ALREADY_EXISTS);\n\t\t}\n\t\tcatch (NoSuchAccountException nsae) {\n\t\t\tlong inboxFolderId = 0;\n\t\t\tlong draftFolderId = 0;\n\t\t\tlong sentFolderId = 0;\n\t\t\tlong trashFolderId = 0;\n\n\t\t\tAccount account = AccountLocalServiceUtil.addAccount(\n\t\t\t\tuser.getUserId(), address, personalName, protocol,\n\t\t\t\tincomingHostName, incomingPort, incomingSecure,\n\t\t\t\toutgoingHostName, outgoingPort, outgoingSecure, login,\n\t\t\t\tpassword, savePassword, signature, useSignature, folderPrefix,\n\t\t\t\tinboxFolderId, draftFolderId, sentFolderId, trashFolderId,\n\t\t\t\tdefaultSender);\n\n\t\t\tsetAccount(account);\n\n\t\t\tsynchronize();\n\n\t\t\treturn account;\n\t\t}\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void synchronizeFolder(long folderId)\n\t\tthrows PortalException, SystemException {\n\n\t\t_log.debug(\"downloading new messages for folder \" + folderId);\n\n\t\tIMAPUtil imapUtil = getIMAPUtil();\n\n\t\timapUtil.storeEnvelopes(folderId);\n\t}","id":48631,"modified_method":"public void synchronizeFolder(long folderId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Synchronizing folder \" + folderId);\n\t\t}\n\n\t\t_imapUtil.storeEnvelopes(folderId);\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public Folder addFolder(String displayName)\n\t\tthrows PortalException, SystemException {\n\n\t\tIMAPUtil imapUtil = getIMAPUtil();\n\n\t\tString[] folderData = imapUtil.addFolder(displayName);\n\n\t\treturn FolderLocalServiceUtil.addFolder(\n\t\t\tuser.getUserId(), account.getAccountId(), folderData[0],\n\t\t\tfolderData[1], 0);\n\t}","id":48632,"modified_method":"public Folder addFolder(String displayName)\n\t\tthrows PortalException, SystemException {\n\n\t\tString[] names = _imapUtil.addFolder(displayName);\n\n\t\treturn FolderLocalServiceUtil.addFolder(\n\t\t\tuser.getUserId(), account.getAccountId(), names[0], names[1], 0);\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void updateFlags(\n\t\t\tlong folderId, long[] messageIds, int flag, boolean value)\n\t\tthrows PortalException, SystemException {\n\n\t\tFolder folder = FolderLocalServiceUtil.getFolder(folderId);\n\n\t\tAccount account = AccountLocalServiceUtil.getAccount(\n\t\t\tfolder.getAccountId());\n\n\t\tIMAPUtil imapUtil = getIMAPUtil();\n\n\t\tif (account.getDraftFolderId() == folder.getFolderId()) {\n\t\t\timapUtil.updateFlags(\n\t\t\t\tfolder.getFolderId(), messageIds, flag, value, false);\n\t\t}\n\t\telse {\n\t\t\timapUtil.updateFlags(\n\t\t\t\tfolder.getFolderId(), messageIds, flag, value, true);\n\t\t}\n\t}","id":48633,"modified_method":"public void updateFlags(\n\t\t\tlong folderId, long[] messageIds, int flag, boolean value)\n\t\tthrows PortalException, SystemException {\n\n\t\tFolder folder = FolderLocalServiceUtil.getFolder(folderId);\n\n\t\tAccount account = AccountLocalServiceUtil.getAccount(\n\t\t\tfolder.getAccountId());\n\n\t\tif (account.getDraftFolderId() == folder.getFolderId()) {\n\t\t\t_imapUtil.updateFlags(\n\t\t\t\tfolder.getFolderId(), messageIds, flag, value, false);\n\t\t}\n\t\telse {\n\t\t\t_imapUtil.updateFlags(\n\t\t\t\tfolder.getFolderId(), messageIds, flag, value, true);\n\t\t}\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void sendMessage(long accountId, long messageId)\n\t\tthrows PortalException, SystemException {\n\n\t\tList<Attachment> attachments =\n\t\t\tAttachmentLocalServiceUtil.getAttachments(messageId);\n\n\t\tList<MailFile> mailFiles = new ArrayList<MailFile>();\n\n\t\tfor (Attachment attachment : attachments) {\n\t\t\tFile file = AttachmentLocalServiceUtil.getFile(\n\t\t\t\tattachment.getAttachmentId());\n\n\t\t\tMailFile mailFile = new MailFile(\n\t\t\t\tfile, attachment.getFileName(), attachment.getSize());\n\n\t\t\tmailFiles.add(mailFile);\n\t\t}\n\n\t\tIMAPUtil imapUtil = getIMAPUtil();\n\n\t\tMessage message = MessageLocalServiceUtil.getMessage(messageId);\n\n\t\tAddress[] to = parseAddresses(message.getTo());\n\t\tAddress[] cc = parseAddresses(message.getCc());\n\t\tAddress[] bcc = parseAddresses(message.getBcc());\n\n\t\tAccount account = AccountLocalServiceUtil.getAccount(accountId);\n\n\t\timapUtil.sendMessage(\n\t\t\taccount.getPersonalName(), account.getAddress(), to, cc, bcc,\n\t\t\tmessage.getSubject(), message.getBody(), mailFiles);\n\t}","id":48634,"modified_method":"public void sendMessage(long accountId, long messageId)\n\t\tthrows PortalException, SystemException {\n\n\t\tAccount account = AccountLocalServiceUtil.getAccount(accountId);\n\n\t\tMessage message = MessageLocalServiceUtil.getMessage(messageId);\n\n\t\tAddress[] toAddresses = parseAddresses(message.getTo());\n\t\tAddress[] ccAddresses = parseAddresses(message.getCc());\n\t\tAddress[] bccAddresses = parseAddresses(message.getBcc());\n\n\t\tif ((toAddresses.length == 0) && (ccAddresses.length == 0) &&\n\t\t\t(bccAddresses.length == 0)) {\n\n\t\t\tthrow new MailException(MailException.MESSAGE_HAS_NO_RECIPIENTS);\n\t\t}\n\n\t\tList<Attachment> attachments =\n\t\t\tAttachmentLocalServiceUtil.getAttachments(messageId);\n\n\t\tList<MailFile> mailFiles = new ArrayList<MailFile>();\n\n\t\tfor (Attachment attachment : attachments) {\n\t\t\tFile file = AttachmentLocalServiceUtil.getFile(\n\t\t\t\tattachment.getAttachmentId());\n\n\t\t\tMailFile mailFile = new MailFile(\n\t\t\t\tfile, attachment.getFileName(), attachment.getSize());\n\n\t\t\tmailFiles.add(mailFile);\n\t\t}\n\n\t\t_imapUtil.sendMessage(\n\t\t\taccount.getPersonalName(), account.getAddress(), toAddresses,\n\t\t\tccAddresses, bccAddresses, message.getSubject(), message.getBody(),\n\t\t\tmailFiles);\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void deleteMessages(long folderId, long[] messageIds)\n\t\tthrows PortalException, SystemException {\n\n\t\tIMAPUtil imapUtil = getIMAPUtil();\n\n\t\tFolder folder = FolderLocalServiceUtil.getFolder(folderId);\n\n\t\tif ((account.getDraftFolderId() != folderId) &&\n\t\t\t\t(account.getTrashFolderId() != folderId)) {\n\n\t\t\tFolder trashFolder = FolderLocalServiceUtil.getFolder(\n\t\t\t\taccount.getTrashFolderId());\n\n\t\t\timapUtil.moveMessages(\n\t\t\t\tfolder.getFolderId(), trashFolder.getFolderId(),\n\t\t\t\tmessageIds, true);\n\t\t}\n\t\telse {\n\t\t\timapUtil.deleteMessages(folderId, messageIds);\n\t\t}\n\t}","id":48635,"modified_method":"public void deleteMessages(long folderId, long[] messageIds)\n\t\tthrows PortalException, SystemException {\n\n\t\tif ((account.getDraftFolderId() != folderId) &&\n\t\t\t(account.getTrashFolderId() != folderId)) {\n\n\t\t\tFolder trashFolder = FolderLocalServiceUtil.getFolder(\n\t\t\t\taccount.getTrashFolderId());\n\n\t\t\t_imapUtil.moveMessages(\n\t\t\t\tfolderId, trashFolder.getFolderId(), messageIds, true);\n\t\t}\n\t\telse {\n\t\t\t_imapUtil.deleteMessages(folderId, messageIds);\n\t\t}\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void moveMessages(long folderId, long[] messageIds)\n\t\tthrows PortalException, SystemException {\n\n\t\tIMAPUtil imapUtil = getIMAPUtil();\n\n\t\tfor (long messageId : messageIds) {\n\t\t\tMessage message = MessageLocalServiceUtil.getMessage(messageId);\n\n\t\t\tAccount account = AccountLocalServiceUtil.getAccount(\n\t\t\t\tmessage.getAccountId());\n\n\t\t\tlong sourceFolderId = message.getFolderId();\n\n\t\t\tif ((account.getDraftFolderId() == sourceFolderId)\n\t\t\t\t\t|| (account.getSentFolderId() == sourceFolderId)) {\n\n\t\t\t\tthrow new MailException(\n\t\t\t\t\tMailException.FOLDER_INVALID_DESTINATION);\n\t\t\t}\n\n\t\t\timapUtil.moveMessages(\n\t\t\t\tsourceFolderId, folderId, new long[] { messageId }, true);\n\t\t}\n\t}","id":48636,"modified_method":"public void moveMessages(long folderId, long[] messageIds)\n\t\tthrows PortalException, SystemException {\n\n\t\tfor (long messageId : messageIds) {\n\t\t\tMessage message = MessageLocalServiceUtil.getMessage(messageId);\n\n\t\t\tAccount account = AccountLocalServiceUtil.getAccount(\n\t\t\t\tmessage.getAccountId());\n\n\t\t\tlong sourceFolderId = message.getFolderId();\n\n\t\t\tif ((account.getDraftFolderId() == sourceFolderId) ||\n\t\t\t\t(account.getSentFolderId() == sourceFolderId)) {\n\n\t\t\t\tthrow new MailException(\n\t\t\t\t\tMailException.FOLDER_INVALID_DESTINATION);\n\t\t\t}\n\n\t\t\t_imapUtil.moveMessages(\n\t\t\t\tsourceFolderId, folderId, new long[] {messageId}, true);\n\t\t}\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public MessagesDisplay getMessagesDisplay(\n\t\t\tlong folderId, String keywords, int pageNumber, int messagesPerPage,\n\t\t\tString orderByField, String orderByType)\n\t\tthrows PortalException, SystemException {\n\n\t\tFolder folder = FolderLocalServiceUtil.getFolder(folderId);\n\n\t\tif (orderByField.equals(MailConstants.ORDER_BY_ADDRESS)) {\n\t\t\tif (account.getSentFolderId() == folderId) {\n\t\t\t\torderByField = \"to\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\torderByField = \"sender\";\n\t\t\t}\n\t\t}\n\t\telse if (!orderByField.equals(MailConstants.ORDER_BY_SENT_DATE) &&\n\t\t\t\t!orderByField.equals(MailConstants.ORDER_BY_SIZE) &&\n\t\t\t\t!orderByField.equals(MailConstants.ORDER_BY_SUBJECT)) {\n\n\t\t\t_log.error(\"unknown orderbyfield \" + orderByField);\n\n\t\t\torderByField = MailConstants.ORDER_BY_SENT_DATE;\n\t\t}\n\n\t\tkeywords = keywords.trim();\n\n\t\tList<Message> messages = new ArrayList<Message>();\n\n\t\tint messageCount = MessageLocalServiceUtil.populateMessages(\n\t\t\tmessages, folderId, keywords, pageNumber, messagesPerPage,\n\t\t\torderByField, orderByType);\n\n\t\tif (Validator.isNotNull(keywords)) {\n\t\t\treturn new MessagesDisplay(\n\t\t\t\tmessages, pageNumber, messagesPerPage, messageCount);\n\t\t}\n\t\telse {\n\t\t\treturn new MessagesDisplay(\n\t\t\t\tmessages, pageNumber, messagesPerPage,\n\t\t\t\tfolder.getRemoteMessageCount());\n\t\t}\n\t}","id":48637,"modified_method":"public MessagesDisplay getMessagesDisplay(\n\t\t\tlong folderId, String keywords, int pageNumber, int messagesPerPage,\n\t\t\tString orderByField, String orderByType)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (orderByField.equals(MailConstants.ORDER_BY_ADDRESS)) {\n\t\t\tif (account.getSentFolderId() == folderId) {\n\t\t\t\torderByField = \"to\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\torderByField = \"sender\";\n\t\t\t}\n\t\t}\n\t\telse if (!orderByField.equals(MailConstants.ORDER_BY_SENT_DATE) &&\n\t\t\t\t !orderByField.equals(MailConstants.ORDER_BY_SIZE) &&\n\t\t\t\t !orderByField.equals(MailConstants.ORDER_BY_SUBJECT)) {\n\n\t\t\torderByField = MailConstants.ORDER_BY_SENT_DATE;\n\t\t}\n\n\t\tList<Message> messages = new ArrayList<Message>();\n\n\t\tint messageCount = MessageLocalServiceUtil.populateMessages(\n\t\t\tmessages, folderId, keywords, pageNumber, messagesPerPage,\n\t\t\torderByField, orderByType);\n\n\t\tif (Validator.isNotNull(keywords)) {\n\t\t\treturn new MessagesDisplay(\n\t\t\t\tmessages, pageNumber, messagesPerPage, messageCount);\n\t\t}\n\t\telse {\n\t\t\tFolder folder = FolderLocalServiceUtil.getFolder(folderId);\n\n\t\t\treturn new MessagesDisplay(\n\t\t\t\tmessages, pageNumber, messagesPerPage,\n\t\t\t\tfolder.getRemoteMessageCount());\n\t\t}\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void synchronize() throws PortalException, SystemException {\n\t\tIMAPUtil imapUtil = getIMAPUtil();\n\n\t\t_log.debug(\"Synchronizing account, updating folders\");\n\n\t\tList<javax.mail.Folder> imapFolders = imapUtil.getFolders();\n\n\t\tlong draftFolderId = account.getDraftFolderId();\n\t\tlong inboxFolderId = account.getInboxFolderId();\n\t\tlong sentFolderId = account.getSentFolderId();\n\t\tlong trashFolderId = account.getTrashFolderId();\n\n\t\tfor (javax.mail.Folder imapFolder : imapFolders) {\n\t\t\tFolder folder;\n\n\t\t\ttry {\n\t\t\t\tfolder = FolderLocalServiceUtil.getFolder(\n\t\t\t\t\taccount.getAccountId(), imapFolder.getFullName());\n\t\t\t}\n\t\t\tcatch (NoSuchFolderException fe) {\n\t\t\t\tfolder = FolderLocalServiceUtil.addFolder(\n\t\t\t\t\tuser.getUserId(), account.getAccountId(),\n\t\t\t\t\timapFolder.getFullName(), imapFolder.getName(), 0);\n\t\t\t}\n\n\t\t\t// Check for special account folders\n\n\t\t\tString folderName = imapFolder.getName().toLowerCase();\n\n\t\t\tif ((inboxFolderId == 0) && (folderName.indexOf(\"inbox\") != -1)) {\n\t\t\t\tinboxFolderId = folder.getFolderId();\n\t\t\t}\n\t\t\telse if ((draftFolderId == 0) &&\n\t\t\t\t\t(folderName.indexOf(\"draft\") != -1)) {\n\n\t\t\t\tdraftFolderId = folder.getFolderId();\n\t\t\t}\n\t\t\telse if ((sentFolderId == 0) &&\n\t\t\t\t\t(folderName.indexOf(\"sent\") != -1)) {\n\n\t\t\t\tsentFolderId = folder.getFolderId();\n\t\t\t}\n\t\t\telse if ((trashFolderId == 0) &&\n\t\t\t\t\t(folderName.indexOf(\"trash\") != -1)) {\n\n\t\t\t\ttrashFolderId = folder.getFolderId();\n\t\t\t}\n\t\t}\n\n\t\tAccountLocalServiceUtil.updateAccountFolders(\n\t\t\taccount.getAccountId(), inboxFolderId, draftFolderId, sentFolderId,\n\t\t\ttrashFolderId);\n\n\t\t_log.debug(\"Synchronizing account, downloading new messages\");\n\n\t\tList<Folder> folders = FolderLocalServiceUtil.getFolders(\n\t\t\taccount.getAccountId());\n\n\t\tfor (Folder folder : folders) {\n\t\t\tsynchronizeFolder(folder.getFolderId());\n\t\t}\n\t}","id":48638,"modified_method":"public void synchronize() throws PortalException, SystemException {\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Synchronizing account\");\n\t\t}\n\n\t\tList<javax.mail.Folder> imapFolders = _imapUtil.getFolders();\n\n\t\tlong draftFolderId = account.getDraftFolderId();\n\t\tlong inboxFolderId = account.getInboxFolderId();\n\t\tlong sentFolderId = account.getSentFolderId();\n\t\tlong trashFolderId = account.getTrashFolderId();\n\n\t\tfor (javax.mail.Folder imapFolder : imapFolders) {\n\t\t\tFolder folder = null;\n\n\t\t\ttry {\n\t\t\t\tfolder = FolderLocalServiceUtil.getFolder(\n\t\t\t\t\taccount.getAccountId(), imapFolder.getFullName());\n\t\t\t}\n\t\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t\tfolder = FolderLocalServiceUtil.addFolder(\n\t\t\t\t\tuser.getUserId(), account.getAccountId(),\n\t\t\t\t\timapFolder.getFullName(), imapFolder.getName(), 0);\n\t\t\t}\n\n\t\t\tString folderName = imapFolder.getName().toLowerCase();\n\n\t\t\tif ((draftFolderId == 0) && folderName.contains(\"draft\")) {\n\t\t\t\tdraftFolderId = folder.getFolderId();\n\t\t\t}\n\t\t\telse if ((inboxFolderId == 0) && folderName.contains(\"inbox\")) {\n\t\t\t\tinboxFolderId = folder.getFolderId();\n\t\t\t}\n\t\t\telse if ((sentFolderId == 0) && folderName.contains(\"sent\")) {\n\t\t\t\tsentFolderId = folder.getFolderId();\n\t\t\t}\n\t\t\telse if ((trashFolderId == 0) && folderName.contains(\"trash\")) {\n\t\t\t\ttrashFolderId = folder.getFolderId();\n\t\t\t}\n\t\t}\n\n\t\tAccountLocalServiceUtil.updateFolders(\n\t\t\taccount.getAccountId(), inboxFolderId, draftFolderId, sentFolderId,\n\t\t\ttrashFolderId);\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Downloading new messages\");\n\t\t}\n\n\t\tList<Folder> folders = FolderLocalServiceUtil.getFolders(\n\t\t\taccount.getAccountId());\n\n\t\tfor (Folder folder : folders) {\n\t\t\tsynchronizeFolder(folder.getFolderId());\n\t\t}\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public Message saveDraft(\n\t\t\tlong accountId, long messageId, String to, String cc, String bcc,\n\t\t\tString subject, String body, List<MailFile> mailFiles)\n\t\tthrows PortalException, SystemException {\n\n\t\tAccount account = AccountLocalServiceUtil.getAccount(accountId);\n\n\t\tString sender = user.getFullName().concat(\" <\").concat(\n\t\t\taccount.getAddress()).concat(\">\");\n\n\t\tString flags = MailConstants.FLAG_DRAFT + StringPool.COMMA;\n\t\tlong remoteMessageId = 0;\n\t\tDate sentDate = null;\n\n\t\tInternetAddress[] parsedTo = parseAddresses(to);\n\t\tInternetAddress[] parsedCc = parseAddresses(cc);\n\t\tInternetAddress[] parsedBcc = parseAddresses(bcc);\n\n\t\tif (parsedTo.length + parsedCc.length + parsedBcc.length == 0) {\n\t\t\tthrow new MailException(MailException.MESSAGE_HAS_NO_RECIPIENTS);\n\t\t}\n\n\t\tif (messageId != 0) {\n\t\t\treturn MessageLocalServiceUtil.updateMessage(\n\t\t\t\tmessageId, account.getDraftFolderId(), sender,\n\t\t\t\tInternetAddressUtil.toString(parsedTo),\n\t\t\t\tInternetAddressUtil.toString(parsedCc),\n\t\t\t\tInternetAddressUtil.toString(parsedBcc), sentDate, subject,\n\t\t\t\tbody, flags, remoteMessageId);\n\t\t}\n\t\telse {\n\t\t\treturn MessageLocalServiceUtil.addMessage(\n\t\t\t\tuser.getUserId(), account.getDraftFolderId(), sender, to, cc,\n\t\t\t\tbcc, sentDate, subject, body, flags, remoteMessageId);\n\t\t}\n\t}","id":48639,"modified_method":"public Message saveDraft(\n\t\t\tlong accountId, long messageId, String to, String cc, String bcc,\n\t\t\tString subject, String body, List<MailFile> mailFiles)\n\t\tthrows PortalException, SystemException {\n\n\t\tAccount account = AccountLocalServiceUtil.getAccount(accountId);\n\n\t\tStringBundler sb = new StringBundler();\n\n\t\tsb.append(user.getFullName());\n\t\tsb.append(\" <\");\n\t\tsb.append(account.getAddress());\n\t\tsb.append(StringPool.GREATER_THAN);\n\n\t\tString sender = sb.toString();\n\n\t\tAddress[] toAddresses = parseAddresses(to);\n\t\tAddress[] ccAddresses = parseAddresses(cc);\n\t\tAddress[] bccAddresses = parseAddresses(bcc);\n\n\t\tif ((toAddresses.length == 0) && (ccAddresses.length == 0) &&\n\t\t\t(bccAddresses.length == 0)) {\n\n\t\t\tthrow new MailException(MailException.MESSAGE_HAS_NO_RECIPIENTS);\n\t\t}\n\n\t\tif (messageId != 0) {\n\t\t\treturn MessageLocalServiceUtil.updateMessage(\n\t\t\t\tmessageId, account.getDraftFolderId(), sender,\n\t\t\t\tInternetAddressUtil.toString(toAddresses),\n\t\t\t\tInternetAddressUtil.toString(ccAddresses),\n\t\t\t\tInternetAddressUtil.toString(bccAddresses), null,\n\t\t\t\tsubject, body, String.valueOf(MailConstants.FLAG_DRAFT), 0);\n\t\t}\n\t\telse {\n\t\t\treturn MessageLocalServiceUtil.addMessage(\n\t\t\t\tuser.getUserId(), account.getDraftFolderId(), sender, to, cc,\n\t\t\t\tbcc, null, subject, body,\n\t\t\t\tString.valueOf(MailConstants.FLAG_DRAFT), 0);\n\t\t}\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void synchronizePage(\n\t\t\tlong folderId, int pageNumber, int messagesPerPage)\n\t\tthrows PortalException, SystemException {\n\n\t\tIMAPUtil imapUtil = getIMAPUtil();\n\n\t\tlong[] remoteMessageIds = imapUtil.getMessageUIDs(\n\t\t\tfolderId, pageNumber, messagesPerPage);\n\n\t\tList<Long> missingRemoteMessageIds = new ArrayList<Long>();\n\n\t\tfor (long remoteMessageId : remoteMessageIds) {\n\t\t\ttry {\n\t\t\t\tMessageLocalServiceUtil.getMessage(\n\t\t\t\t\tfolderId, remoteMessageId);\n\t\t\t}\n\t\t\tcatch (NoSuchMessageException nsme) {\n\t\t\t\t_log.debug(\"remoteMessageId not cached \" + remoteMessageId);\n\n\t\t\t\tmissingRemoteMessageIds.add(new Long(remoteMessageId));\n\t\t\t}\n\t\t}\n\n\t\tif (!missingRemoteMessageIds.isEmpty()) {\n\t\t\t// add to download queue\n\t\t\t//\timapUtil.storeEnvelopes(folderId, remoteMessageIds);\n\t\t}\n\t}","id":48640,"modified_method":"public void synchronizePage(\n\t\t\tlong folderId, int pageNumber, int messagesPerPage)\n\t\tthrows PortalException, SystemException {\n\n\t\tlong[] remoteMessageIds = _imapUtil.getMessageUIDs(\n\t\t\tfolderId, pageNumber, messagesPerPage);\n\n\t\tList<Long> missingRemoteMessageIds = new ArrayList<Long>();\n\n\t\tfor (long remoteMessageId : remoteMessageIds) {\n\t\t\ttry {\n\t\t\t\tMessageLocalServiceUtil.getMessage(folderId, remoteMessageId);\n\t\t\t}\n\t\t\tcatch (NoSuchMessageException nsme) {\n\t\t\t\tmissingRemoteMessageIds.add(remoteMessageId);\n\t\t\t}\n\t\t}\n\n\t\tif (!missingRemoteMessageIds.isEmpty()) {\n\t\t\t//_imapUtil.storeEnvelopes(folderId, remoteMessageIds);\n\t\t}\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void renameFolder(long folderId, String displayName)\n\t\tthrows PortalException, SystemException {\n\n\t\tFolder folder = FolderLocalServiceUtil.getFolder(folderId);\n\n\t\tIMAPUtil imapUtil = getIMAPUtil();\n\n\t\tString[] folderData = imapUtil.renameFolder(\n\t\t\tfolder.getFolderId(), displayName);\n\n\t\tFolderLocalServiceUtil.updateFolder(\n\t\t\tfolderId, folderData[0], folderData[1],\n\t\t\tfolder.getRemoteMessageCount());\n\t}","id":48641,"modified_method":"public void renameFolder(long folderId, String displayName)\n\t\tthrows PortalException, SystemException {\n\n\t\tFolder folder = FolderLocalServiceUtil.getFolder(folderId);\n\n\t\tString[] names = _imapUtil.renameFolder(folderId, displayName);\n\n\t\tFolderLocalServiceUtil.updateFolder(\n\t\t\tfolderId, names[0], names[1], folder.getRemoteMessageCount());\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public InputStream getAttachment(long attachmentId)\n\t\tthrows IOException, PortalException, SystemException {\n\n\t\tAttachment attachment = AttachmentLocalServiceUtil.getAttachment(\n\t\t\tattachmentId);\n\n\t\tMessage message = MessageLocalServiceUtil.getMessage(\n\t\t\tattachment.getMessageId());\n\n\t\tif (account.getDraftFolderId() == attachment.getFolderId()) {\n\t\t\treturn AttachmentLocalServiceUtil.getInputStream(\n\t\t\t\tattachmentId);\n\t\t}\n\t\telse {\n\t\t\tIMAPUtil imapUtil = getIMAPUtil();\n\n\t\t\tFolder folder = FolderLocalServiceUtil.getFolder(\n\t\t\t\tattachment.getFolderId());\n\n\t\t\treturn imapUtil.getAttachment(\n\t\t\t\tfolder.getFolderId(), message.getRemoteMessageId(),\n\t\t\t\tattachment.getContentPath());\n\t\t}\n\t}","id":48642,"modified_method":"public InputStream getAttachment(long attachmentId)\n\t\tthrows IOException, PortalException, SystemException {\n\n\t\tAttachment attachment = AttachmentLocalServiceUtil.getAttachment(\n\t\t\tattachmentId);\n\n\t\tMessage message = MessageLocalServiceUtil.getMessage(\n\t\t\tattachment.getMessageId());\n\n\t\tif (account.getDraftFolderId() == attachment.getFolderId()) {\n\t\t\treturn AttachmentLocalServiceUtil.getInputStream(\n\t\t\t\tattachmentId);\n\t\t}\n\t\telse {\n\t\t\treturn _imapUtil.getAttachment(\n\t\t\t\tattachment.getFolderId(), message.getRemoteMessageId(),\n\t\t\t\tattachment.getContentPath());\n\t\t}\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public InternetAddress[] parseAddresses(String addresses)\n\t\tthrows PortalException, SystemException {\n\n\t\tInternetAddress[] internetAddresses = new InternetAddress[0];\n\n\t\ttry {\n\t\t\tinternetAddresses = InternetAddress.parse(addresses, true);\n\n\t\t\tfor (int i = 0; i < internetAddresses.length; i++) {\n\t\t\t\tInternetAddress internetAddress = internetAddresses[i];\n\n\t\t\t\tif (!Validator.isEmailAddress(internetAddress.getAddress())) {\n\t\t\t\t\tthrow new MailException(\n\t\t\t\t\t\tMailException.MESSAGE_INVALID_ADDRESS,\n\t\t\t\t\t\tinternetAddress.getPersonal().concat(\"<\").concat(\n\t\t\t\t\t\t\tinternetAddress.getAddress()).concat(\">\"));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (AddressException ae) {\n\t\t\tthrow new MailException(\n\t\t\t\tMailException.MESSAGE_INVALID_ADDRESS, ae, addresses);\n\t\t}\n\n\t\treturn internetAddresses;\n\t}","id":48643,"modified_method":"public InternetAddress[] parseAddresses(String addresses)\n\t\tthrows PortalException {\n\n\t\tInternetAddress[] internetAddresses = new InternetAddress[0];\n\n\t\ttry {\n\t\t\tinternetAddresses = InternetAddress.parse(addresses, true);\n\n\t\t\tfor (int i = 0; i < internetAddresses.length; i++) {\n\t\t\t\tInternetAddress internetAddress = internetAddresses[i];\n\n\t\t\t\tif (!Validator.isEmailAddress(internetAddress.getAddress())) {\n\t\t\t\t\tStringBundler sb = new StringBundler(4);\n\n\t\t\t\t\tsb.append(internetAddress.getPersonal());\n\t\t\t\t\tsb.append(StringPool.LESS_THAN);\n\t\t\t\t\tsb.append(internetAddress.getAddress());\n\t\t\t\t\tsb.append(StringPool.GREATER_THAN);\n\n\t\t\t\t\tthrow new MailException(\n\t\t\t\t\t\tMailException.MESSAGE_INVALID_ADDRESS, sb.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (AddressException ae) {\n\t\t\tthrow new MailException(\n\t\t\t\tMailException.MESSAGE_INVALID_ADDRESS, ae, addresses);\n\t\t}\n\n\t\treturn internetAddresses;\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public Message getMessage(\n\t\t\tlong folderId, String keywords, int messageNumber,\n\t\t\tString orderByField, String orderByType)\n\t\tthrows PortalException, SystemException {\n\n\t\tMessagesDisplay messagesDisplay = getMessagesDisplay(\n\t\t\tfolderId, keywords, messageNumber, 1, orderByField, orderByType);\n\n\t\treturn messagesDisplay.getMessages().get(0);\n\t}","id":48644,"modified_method":"public Message getMessage(\n\t\t\tlong folderId, String keywords, int messageNumber,\n\t\t\tString orderByField, String orderByType)\n\t\tthrows PortalException, SystemException {\n\n\t\tMessagesDisplay messagesDisplay = getMessagesDisplay(\n\t\t\tfolderId, keywords, messageNumber, 1, orderByField, orderByType);\n\n\t\tList<Message> messages = messagesDisplay.getMessages();\n\n\t\treturn messages.get(0);\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void synchronizeMessage(long messageId)\n\t\tthrows PortalException, SystemException {\n\n\t\tMessage message = MessageLocalServiceUtil.getMessage(messageId);\n\n\t\tIMAPUtil imapUtil = getIMAPUtil();\n\n\t\tlong remoteMessageId = message.getRemoteMessageId();\n\n\t\tif (remoteMessageId != 0) {\n\t\t\ttry {\n\t\t\t\timapUtil.storeMessages(\n\t\t\t\t\tmessage.getFolderId(),\n\t\t\t\t\tnew long[] { message.getRemoteMessageId() });\n\t\t\t}\n\t\t\tcatch (IOException ioe) {\n\t\t\t\tthrow new MailException(ioe);\n\t\t\t}\n\t\t}\n\t}","id":48645,"modified_method":"public void synchronizeMessage(long messageId)\n\t\tthrows PortalException, SystemException {\n\n\t\tMessage message = MessageLocalServiceUtil.getMessage(messageId);\n\n\t\tlong remoteMessageId = message.getRemoteMessageId();\n\n\t\tif (remoteMessageId == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\t_imapUtil.storeMessages(\n\t\t\t\tmessage.getFolderId(),\n\t\t\t\tnew long[] {message.getRemoteMessageId()});\n\t\t}\n\t\tcatch (IOException ioe) {\n\t\t\tthrow new MailException(ioe);\n\t\t}\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void deleteFolder(long folderId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif ((account.getDraftFolderId() == folderId)\n\t\t\t\t|| (account.getInboxFolderId() == folderId)\n\t\t\t\t|| (account.getSentFolderId() == folderId)\n\t\t\t\t|| (account.getTrashFolderId() == folderId)) {\n\n\t\t\tthrow new MailException(MailException.FOLDER_REQUIRED);\n\t\t}\n\n\t\tIMAPUtil imapUtil = getIMAPUtil();\n\n\t\tFolder folder = FolderLocalServiceUtil.getFolder(folderId);\n\n\t\timapUtil.deleteFolder(folder.getFolderId());\n\n\t\tFolderLocalServiceUtil.deleteFolder(folderId);\n\t}","id":48646,"modified_method":"public void deleteFolder(long folderId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif ((account.getDraftFolderId() == folderId) ||\n\t\t\t(account.getInboxFolderId() == folderId) ||\n\t\t\t(account.getSentFolderId() == folderId) ||\n\t\t\t(account.getTrashFolderId() == folderId)) {\n\n\t\t\tthrow new MailException(MailException.FOLDER_REQUIRED);\n\t\t}\n\n\t\t_imapUtil.deleteFolder(folderId);\n\n\t\tFolderLocalServiceUtil.deleteFolder(folderId);\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public Mailbox getMailbox(User user, Account account) {\n\t\tMailbox mailbox = new IMAPMailbox();\n\n\t\tmailbox.setAccount(account);\n\t\tmailbox.setUser(user);\n\n\t\treturn mailbox;\n\t}","id":48647,"modified_method":"public Mailbox getMailbox(User user, Account account) {\n\t\tMailbox mailbox = new IMAPMailbox();\n\n\t\tmailbox.setAccount(account);\n\t\tmailbox.setUser(user);\n\n\t\tmailbox.afterPropertiesSet();\n\n\t\treturn mailbox;\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected Message getMessage(\n\t\t\tlong storedFolderId, IMAPFolder imapFolder, boolean oldest)\n\t\tthrows MessagingException, PortalException, SystemException {\n\n\t\tcom.liferay.mail.model.Message storedMessage = null;\n\n\t\tstoredMessage = MessageLocalServiceUtil.getRemoteMessage(\n\t\t\tstoredFolderId, oldest);\n\n\t\tif (storedMessage == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlong messageId = storedMessage.getRemoteMessageId();\n\n\t\tMessage message = getMessage(imapFolder, messageId);\n\n\t\tif (message == null) {\n\t\t\tMessageLocalServiceUtil.deleteMessage(storedMessage);\n\n\t\t\treturn getMessage(storedFolderId, imapFolder, oldest);\n\t\t}\n\t\telse {\n\t\t\treturn message;\n\t\t}\n\t}","id":48648,"modified_method":"protected Message getMessage(\n\t\t\tlong storedFolderId, IMAPFolder imapFolder, boolean oldest)\n\t\tthrows MessagingException, PortalException, SystemException {\n\n\t\tcom.liferay.mail.model.Message storedMessage = null;\n\n\t\ttry {\n\t\t\tstoredMessage = MessageLocalServiceUtil.getRemoteMessage(\n\t\t\t\tstoredFolderId, oldest);\n\t\t}\n\t\tcatch (NoSuchMessageException nsme) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlong messageId = storedMessage.getRemoteMessageId();\n\n\t\tMessage message = getMessage(imapFolder, messageId);\n\n\t\tif (message == null) {\n\t\t\tMessageLocalServiceUtil.deleteMessage(storedMessage);\n\n\t\t\treturn getMessage(storedFolderId, imapFolder, oldest);\n\t\t}\n\t\telse {\n\t\t\treturn message;\n\t\t}\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void storeMessages(long storedFolderId, long[] messageIds)\n\t\tthrows IOException, PortalException, SystemException {\n\n\t\tIMAPFolder imapFolder = null;\n\n\t\ttry {\n\t\t\timapFolder = openFolder(storedFolderId);\n\n\t\t\tMessage[] messages = imapFolder.getMessagesByUID(messageIds);\n\n\t\t\tFetchProfile fetchProfile = new FetchProfile();\n\n\t\t\tfetchProfile.add(UIDFolder.FetchProfileItem.UID);\n\t\t\tfetchProfile.add(UIDFolder.FetchProfileItem.CONTENT_INFO);\n\n\t\t\timapFolder.fetch(messages, fetchProfile);\n\n\t\t\tfor (Message message : messages) {\n\t\t\t\tString flags = getFlags(message);\n\n\t\t\t\tlong messageId = imapFolder.getUID(message);\n\n\t\t\t\tcom.liferay.mail.model.Message storedMessage =\n\t\t\t\t\tMessageLocalServiceUtil.getMessage(\n\t\t\t\t\t\tstoredFolderId, messageId);\n\n\t\t\t\tStringBundler bodyPlain = new StringBundler();\n\t\t\t\tStringBundler bodyHtml = new StringBundler();\n\t\t\t\tList<MailFile> mailFiles = new ArrayList<MailFile>();\n\n\t\t\t\tgetParts(\n\t\t\t\t\t_user.getUserId(), bodyPlain, bodyHtml, StringPool.BLANK,\n\t\t\t\t\tmessage, mailFiles);\n\n\t\t\t\tif (bodyHtml.length() == 0) {\n\t\t\t\t\tbodyHtml = bodyPlain;\n\t\t\t\t}\n\n\t\t\t\tif (flags.indexOf(MailConstants.FLAG_SEEN) == -1) {\n\t\t\t\t\tmessage.setFlag(Flags.Flag.SEEN, false);\n\t\t\t\t}\n\n\t\t\t\tfor (MailFile mailFile : mailFiles) {\n\t\t\t\t\tAttachmentLocalServiceUtil.addAttachment(\n\t\t\t\t\t\t_user.getUserId(), storedMessage.getMessageId(),\n\t\t\t\t\t\tmailFile.getContentPath(), mailFile.getFileName(),\n\t\t\t\t\t\tmailFile.getSize(), mailFile.getFile());\n\t\t\t\t}\n\n\t\t\t\tMessageLocalServiceUtil.updateMessageContent(\n\t\t\t\t\tstoredMessage.getMessageId(), bodyHtml.toString(), flags);\n\t\t\t}\n\t\t}\n\t\tcatch (MessagingException me) {\n\t\t\tthrow new MailException(me);\n\t\t}\n\t\tfinally {\n\t\t\tcloseFolder(imapFolder, false);\n\t\t}\n\t}","id":48649,"modified_method":"public void storeMessages(long storedFolderId, long[] messageIds)\n\t\tthrows IOException, PortalException, SystemException {\n\n\t\tIMAPFolder imapFolder = null;\n\n\t\ttry {\n\t\t\timapFolder = openFolder(storedFolderId);\n\n\t\t\tMessage[] messages = imapFolder.getMessagesByUID(messageIds);\n\n\t\t\tFetchProfile fetchProfile = new FetchProfile();\n\n\t\t\tfetchProfile.add(UIDFolder.FetchProfileItem.UID);\n\t\t\tfetchProfile.add(UIDFolder.FetchProfileItem.CONTENT_INFO);\n\n\t\t\timapFolder.fetch(messages, fetchProfile);\n\n\t\t\tfor (Message message : messages) {\n\t\t\t\tString flags = getFlags(message);\n\n\t\t\t\tlong messageId = imapFolder.getUID(message);\n\n\t\t\t\tcom.liferay.mail.model.Message storedMessage =\n\t\t\t\t\tMessageLocalServiceUtil.getMessage(\n\t\t\t\t\t\tstoredFolderId, messageId);\n\n\t\t\t\tStringBundler bodyPlain = new StringBundler();\n\t\t\t\tStringBundler bodyHtml = new StringBundler();\n\t\t\t\tList<MailFile> mailFiles = new ArrayList<MailFile>();\n\n\t\t\t\tgetParts(\n\t\t\t\t\t_user.getUserId(), bodyPlain, bodyHtml, StringPool.BLANK,\n\t\t\t\t\tmessage, mailFiles);\n\n\t\t\t\tif (bodyHtml.length() == 0) {\n\t\t\t\t\tbodyHtml = bodyPlain;\n\t\t\t\t}\n\n\t\t\t\tif (flags.indexOf(MailConstants.FLAG_SEEN) == -1) {\n\t\t\t\t\tmessage.setFlag(Flags.Flag.SEEN, false);\n\t\t\t\t}\n\n\t\t\t\tfor (MailFile mailFile : mailFiles) {\n\t\t\t\t\tAttachmentLocalServiceUtil.addAttachment(\n\t\t\t\t\t\t_user.getUserId(), storedMessage.getMessageId(),\n\t\t\t\t\t\tmailFile.getContentPath(), mailFile.getFileName(),\n\t\t\t\t\t\tmailFile.getSize(), mailFile.getFile());\n\t\t\t\t}\n\n\t\t\t\tMessageLocalServiceUtil.updateContent(\n\t\t\t\t\tstoredMessage.getMessageId(), bodyHtml.toString(), flags);\n\t\t\t}\n\t\t}\n\t\tcatch (MessagingException me) {\n\t\t\tthrow new MailException(me);\n\t\t}\n\t\tfinally {\n\t\t\tcloseFolder(imapFolder, false);\n\t\t}\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public Message addMessage(\n\t\t\tlong userId, long folderId, String sender, String to, String cc,\n\t\t\tString bcc, Date sentDate, String subject, String body,\n\t\t\tString flags, long remoteMessageId)\n\t\tthrows PortalException, SystemException {\n\n\t\t// Message\n\n\t\tUser user = userPersistence.findByPrimaryKey(userId);\n\t\tFolder folder = folderPersistence.findByPrimaryKey(folderId);\n\t\tDate now = new Date();\n\n\t\tlong messageId = counterLocalService.increment();\n\n\t\tMessage message = messagePersistence.create(messageId);\n\n\t\tmessage.setCompanyId(user.getCompanyId());\n\t\tmessage.setUserId(user.getUserId());\n\t\tmessage.setUserName(user.getFullName());\n\t\tmessage.setCreateDate(now);\n\t\tmessage.setModifiedDate(now);\n\t\tmessage.setAccountId(folder.getAccountId());\n\t\tmessage.setFolderId(folderId);\n\t\tmessage.setSender(sender);\n\t\tmessage.setTo(to);\n\t\tmessage.setCc(cc);\n\t\tmessage.setBcc(bcc);\n\t\tmessage.setSentDate(sentDate);\n\t\tmessage.setSubject(subject);\n\t\tmessage.setPreview(getPreview(body));\n\t\tmessage.setBody(getBody(body));\n\t\tmessage.setFlags(flags);\n\t\tmessage.setSize(getMessageSize(messageId, body));\n\t\tmessage.setRemoteMessageId(remoteMessageId);\n\n\t\tmessagePersistence.update(message, false);\n\n\t\t// Indexer\n\n\t\tIndexer indexer = IndexerRegistryUtil.getIndexer(Message.class);\n\n\t\tindexer.reindex(message);\n\n\t\treturn message;\n\t}","id":48650,"modified_method":"public Message addMessage(\n\t\t\tlong userId, long folderId, String sender, String to, String cc,\n\t\t\tString bcc, Date sentDate, String subject, String body,\n\t\t\tString flags, long remoteMessageId)\n\t\tthrows PortalException, SystemException {\n\n\t\t// Message\n\n\t\tUser user = userPersistence.findByPrimaryKey(userId);\n\t\tFolder folder = folderPersistence.findByPrimaryKey(folderId);\n\t\tDate now = new Date();\n\n\t\tlong messageId = counterLocalService.increment();\n\n\t\tMessage message = messagePersistence.create(messageId);\n\n\t\tmessage.setCompanyId(user.getCompanyId());\n\t\tmessage.setUserId(user.getUserId());\n\t\tmessage.setUserName(user.getFullName());\n\t\tmessage.setCreateDate(now);\n\t\tmessage.setModifiedDate(now);\n\t\tmessage.setAccountId(folder.getAccountId());\n\t\tmessage.setFolderId(folderId);\n\t\tmessage.setSender(sender);\n\t\tmessage.setTo(to);\n\t\tmessage.setCc(cc);\n\t\tmessage.setBcc(bcc);\n\t\tmessage.setSentDate(sentDate);\n\t\tmessage.setSubject(subject);\n\t\tmessage.setPreview(getPreview(body));\n\t\tmessage.setBody(getBody(body));\n\t\tmessage.setFlags(flags);\n\t\tmessage.setSize(getSize(messageId, body));\n\t\tmessage.setRemoteMessageId(remoteMessageId);\n\n\t\tmessagePersistence.update(message, false);\n\n\t\t// Indexer\n\n\t\tIndexer indexer = IndexerRegistryUtil.getIndexer(Message.class);\n\n\t\tindexer.reindex(message);\n\n\t\treturn message;\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public Message updateMessage(\n\t\t\tlong messageId, long folderId, String sender, String to, String cc,\n\t\t\tString bcc, Date sentDate, String subject, String body,\n\t\t\tString flags, long remoteMessageId)\n\t\tthrows PortalException, SystemException {\n\n\t\t// Message\n\n\t\tMessage message = messagePersistence.findByPrimaryKey(messageId);\n\n\t\tmessage.setModifiedDate(new Date());\n\t\tmessage.setFolderId(folderId);\n\t\tmessage.setSender(sender);\n\t\tmessage.setTo(to);\n\t\tmessage.setCc(cc);\n\t\tmessage.setBcc(bcc);\n\t\tmessage.setSentDate(sentDate);\n\t\tmessage.setSubject(subject);\n\t\tmessage.setPreview(getPreview(body));\n\t\tmessage.setBody(getBody(body));\n\t\tmessage.setFlags(flags);\n\t\tmessage.setSize(getMessageSize(messageId, body));\n\t\tmessage.setRemoteMessageId(remoteMessageId);\n\n\t\tmessagePersistence.update(message, false);\n\n\t\t// Indexer\n\n\t\tIndexer indexer = IndexerRegistryUtil.getIndexer(Message.class);\n\n\t\tindexer.reindex(message);\n\n\t\treturn message;\n\t}","id":48651,"modified_method":"public Message updateMessage(\n\t\t\tlong messageId, long folderId, String sender, String to, String cc,\n\t\t\tString bcc, Date sentDate, String subject, String body,\n\t\t\tString flags, long remoteMessageId)\n\t\tthrows PortalException, SystemException {\n\n\t\t// Message\n\n\t\tMessage message = messagePersistence.findByPrimaryKey(messageId);\n\n\t\tmessage.setModifiedDate(new Date());\n\t\tmessage.setFolderId(folderId);\n\t\tmessage.setSender(sender);\n\t\tmessage.setTo(to);\n\t\tmessage.setCc(cc);\n\t\tmessage.setBcc(bcc);\n\t\tmessage.setSentDate(sentDate);\n\t\tmessage.setSubject(subject);\n\t\tmessage.setPreview(getPreview(body));\n\t\tmessage.setBody(getBody(body));\n\t\tmessage.setFlags(flags);\n\t\tmessage.setSize(getSize(messageId, body));\n\t\tmessage.setRemoteMessageId(remoteMessageId);\n\n\t\tmessagePersistence.update(message, false);\n\n\t\t// Indexer\n\n\t\tIndexer indexer = IndexerRegistryUtil.getIndexer(Message.class);\n\n\t\tindexer.reindex(message);\n\n\t\treturn message;\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public int getFolderUnreadMessagesCount(long folderId)\n\t\tthrows SystemException {\n\n\t\tDynamicQuery dynamicQuery = DynamicQueryFactoryUtil.forClass(\n\t\t\tMessage.class, PortletClassLoaderUtil.getClassLoader());\n\n\t\tdynamicQuery.add(RestrictionsFactoryUtil.eq(\"folderId\", folderId));\n\t\tdynamicQuery.add(\n\t\t\tRestrictionsFactoryUtil.not(\n\t\t\t\tRestrictionsFactoryUtil.like(\n\t\t\t\t\t\"flags\", \"%\" + MailConstants.FLAG_SEEN + \",%\")));\n\n\t\treturn dynamicQueryCount(dynamicQuery);\n\t}","id":48652,"modified_method":"public int getFolderUnreadMessagesCount(long folderId)\n\t\tthrows SystemException {\n\n\t\tDynamicQuery dynamicQuery = DynamicQueryFactoryUtil.forClass(\n\t\t\tMessage.class, PortletClassLoaderUtil.getClassLoader());\n\n\t\tdynamicQuery.add(RestrictionsFactoryUtil.eq(\"folderId\", folderId));\n\t\tdynamicQuery.add(\n\t\t\tRestrictionsFactoryUtil.not(\n\t\t\t\tRestrictionsFactoryUtil.like(\n\t\t\t\t\t\"flags\", \"%\" + MailConstants.FLAG_SEEN + \",%\")));\n\n\t\treturn (int)dynamicQueryCount(dynamicQuery);\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected long getMessageSize(long messageId, String body)\n\t\tthrows SystemException {\n\n\t\tif (Validator.isNull(body)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlong size = body.getBytes().length;\n\n\t\tList<Attachment> attachments = attachmentPersistence.findByMessageId(\n\t\t\tmessageId);\n\n\t\tfor (Attachment attachment : attachments) {\n\t\t\tsize += attachment.getSize();\n\t\t}\n\n\t\treturn size;\n\t}","id":48653,"modified_method":"protected long getSize(long messageId, String body)\n\t\tthrows SystemException {\n\n\t\tif (Validator.isNull(body)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlong size = body.getBytes().length;\n\n\t\tList<Attachment> attachments = attachmentPersistence.findByMessageId(\n\t\t\tmessageId);\n\n\t\tfor (Attachment attachment : attachments) {\n\t\t\tsize += attachment.getSize();\n\t\t}\n\n\t\treturn size;\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public Message getRemoteMessage(long folderId, boolean oldest)\n\t\tthrows SystemException {\n\n\t\tDynamicQuery dynamicQuery = DynamicQueryFactoryUtil.forClass(\n\t\t\tMessage.class, PortletClassLoaderUtil.getClassLoader());\n\n\t\tdynamicQuery.add(RestrictionsFactoryUtil.eq(\"folderId\", folderId));\n\t\tdynamicQuery.add(\n\t\t\tRestrictionsFactoryUtil.gt(\"remoteMessageId\", new Long(0)));\n\n\t\tif (oldest) {\n\t\t\tdynamicQuery.addOrder(OrderFactoryUtil.asc(\"remoteMessageId\"));\n\t\t}\n\t\telse {\n\t\t\tdynamicQuery.addOrder(OrderFactoryUtil.desc(\"remoteMessageId\"));\n\t\t}\n\n\t\tList<Object> results = messagePersistence.findWithDynamicQuery(\n\t\t\tdynamicQuery, 0, 1);\n\n\t\tif (results.size() > 0) {\n\t\t\tList<Message> messages = toMessages(results);\n\n\t\t\treturn messages.get(0);\n\t\t}\n\n\t\treturn null;\n\t}","id":48654,"modified_method":"public Message getRemoteMessage(long folderId, boolean oldest)\n\t\tthrows PortalException, SystemException {\n\n\t\tDynamicQuery dynamicQuery = DynamicQueryFactoryUtil.forClass(\n\t\t\tMessage.class, PortletClassLoaderUtil.getClassLoader());\n\n\t\tdynamicQuery.add(RestrictionsFactoryUtil.eq(\"folderId\", folderId));\n\t\tdynamicQuery.add(\n\t\t\tRestrictionsFactoryUtil.gt(\"remoteMessageId\", new Long(0)));\n\n\t\tif (oldest) {\n\t\t\tdynamicQuery.addOrder(OrderFactoryUtil.asc(\"remoteMessageId\"));\n\t\t}\n\t\telse {\n\t\t\tdynamicQuery.addOrder(OrderFactoryUtil.desc(\"remoteMessageId\"));\n\t\t}\n\n\t\tList<Message> messages = messagePersistence.findWithDynamicQuery(\n\t\t\tdynamicQuery, 0, 1);\n\n\t\tif (messages.isEmpty()) {\n\t\t\tthrow new NoSuchMessageException();\n\t\t}\n\n\t\treturn messages.get(0);\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public int populateMessages(\n\t\t\tList<Message> messages, long folderId, String keywords,\n\t\t\tint pageNumber, int messagesPerPage, String orderByField,\n\t\t\tString orderByType)\n\t\tthrows SystemException {\n\n\t\tDynamicQuery dynamicQuery = DynamicQueryFactoryUtil.forClass(\n\t\t\tMessage.class, PortletClassLoaderUtil.getClassLoader());\n\n\t\tdynamicQuery.add(RestrictionsFactoryUtil.eq(\"folderId\", folderId));\n\n\t\tif (orderByType.equals(\"desc\")) {\n\t\t\tdynamicQuery.addOrder(OrderFactoryUtil.desc(orderByField));\n\t\t}\n\t\telse {\n\t\t\tdynamicQuery.addOrder(OrderFactoryUtil.asc(orderByField));\n\t\t}\n\n\t\tif (Validator.isNotNull(keywords)) {\n\t\t\tString value = \"%\" + keywords + \"%\";\n\n\t\t\tConjunction conjunction = RestrictionsFactoryUtil.conjunction();\n\n\t\t\tconjunction.add(RestrictionsFactoryUtil.ilike(\"subject\", value));\n\t\t\tconjunction.add(RestrictionsFactoryUtil.ilike(\"body\", value));\n\n\t\t\tdynamicQuery.add(conjunction);\n\t\t}\n\n\t\tint start = messagesPerPage * (pageNumber - 1);\n\t\tint end = messagesPerPage * pageNumber;\n\n\t\tList<Object> results = messagePersistence.findWithDynamicQuery(\n\t\t\tdynamicQuery, start, end);\n\n\t\tfor (Object result : results) {\n\t\t\tmessages.add((Message)result);\n\t\t}\n\n\t\treturn dynamicQueryCount(dynamicQuery);\n\t}","id":48655,"modified_method":"public int populateMessages(\n\t\t\tList<Message> messages, long folderId, String keywords,\n\t\t\tint pageNumber, int messagesPerPage, String orderByField,\n\t\t\tString orderByType)\n\t\tthrows SystemException {\n\n\t\tDynamicQuery dynamicQuery = DynamicQueryFactoryUtil.forClass(\n\t\t\tMessage.class, PortletClassLoaderUtil.getClassLoader());\n\n\t\tdynamicQuery.add(RestrictionsFactoryUtil.eq(\"folderId\", folderId));\n\n\t\tif (orderByType.equals(\"desc\")) {\n\t\t\tdynamicQuery.addOrder(OrderFactoryUtil.desc(orderByField));\n\t\t}\n\t\telse {\n\t\t\tdynamicQuery.addOrder(OrderFactoryUtil.asc(orderByField));\n\t\t}\n\n\t\tif (Validator.isNotNull(keywords)) {\n\t\t\tString value = \"%\" + keywords + \"%\";\n\n\t\t\tConjunction conjunction = RestrictionsFactoryUtil.conjunction();\n\n\t\t\tconjunction.add(RestrictionsFactoryUtil.ilike(\"subject\", value));\n\t\t\tconjunction.add(RestrictionsFactoryUtil.ilike(\"body\", value));\n\n\t\t\tdynamicQuery.add(conjunction);\n\t\t}\n\n\t\tint start = messagesPerPage * (pageNumber - 1);\n\t\tint end = messagesPerPage * pageNumber;\n\n\t\tmessages.addAll(\n\t\t\tmessagePersistence.findWithDynamicQuery(dynamicQuery, start, end));\n\n\t\treturn (int)dynamicQueryCount(dynamicQuery);\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public int getAccountUnreadMessagesCount(long accountId)\n\t\tthrows SystemException {\n\n\t\tDynamicQuery dynamicQuery = DynamicQueryFactoryUtil.forClass(\n\t\t\tMessage.class, PortletClassLoaderUtil.getClassLoader());\n\n\t\tdynamicQuery.add(RestrictionsFactoryUtil.eq(\"accountId\", accountId));\n\t\tdynamicQuery.add(\n\t\t\tRestrictionsFactoryUtil.not(\n\t\t\t\tRestrictionsFactoryUtil.like(\n\t\t\t\t\t\"flags\", \"%\" + MailConstants.FLAG_SEEN + \",%\")));\n\n\t\treturn dynamicQueryCount(dynamicQuery);\n\t}","id":48656,"modified_method":"public int getAccountUnreadMessagesCount(long accountId)\n\t\tthrows SystemException {\n\n\t\tDynamicQuery dynamicQuery = DynamicQueryFactoryUtil.forClass(\n\t\t\tMessage.class, PortletClassLoaderUtil.getClassLoader());\n\n\t\tdynamicQuery.add(RestrictionsFactoryUtil.eq(\"accountId\", accountId));\n\t\tdynamicQuery.add(\n\t\t\tRestrictionsFactoryUtil.not(\n\t\t\t\tRestrictionsFactoryUtil.like(\n\t\t\t\t\t\"flags\", \"%\" + MailConstants.FLAG_SEEN + \",%\")));\n\n\t\treturn (int)dynamicQueryCount(dynamicQuery);\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public Message updateMessageContent(\n\t\t\tlong messageId, String body, String flags)\n\t\tthrows PortalException, SystemException {\n\n\t\tMessage message = messagePersistence.findByPrimaryKey(messageId);\n\n\t\tmessage.setModifiedDate(new Date());\n\t\tmessage.setPreview(getPreview(body));\n\t\tmessage.setBody(getBody(body));\n\t\tmessage.setFlags(flags);\n\t\tmessage.setSize(getMessageSize(messageId, body));\n\n\t\tmessagePersistence.update(message, false);\n\n\t\treturn message;\n\t}","id":48657,"modified_method":"public Message updateContent(\n\t\t\tlong messageId, String body, String flags)\n\t\tthrows PortalException, SystemException {\n\n\t\tMessage message = messagePersistence.findByPrimaryKey(messageId);\n\n\t\tmessage.setModifiedDate(new Date());\n\t\tmessage.setPreview(getPreview(body));\n\t\tmessage.setBody(getBody(body));\n\t\tmessage.setFlags(flags);\n\t\tmessage.setSize(getSize(messageId, body));\n\n\t\tmessagePersistence.update(message, false);\n\n\t\treturn message;\n\t}","commit_id":"a9b1b8e752ed738f661b6de5e7967284b959b3ca","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n    public IpnbCellRaw deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\n      throws JsonParseException {\n      final JsonObject object = json.getAsJsonObject();\n      final IpnbCellRaw cellRaw = new IpnbCellRaw();\n      final JsonElement cell_type = object.get(\"cell_type\");\n      if (cell_type != null) {\n        cellRaw.cell_type = cell_type.getAsString();\n      }\n      final JsonElement count = object.get(\"execution_count\");\n      if (count != null) {\n        cellRaw.execution_count = count.getAsInt();\n      }\n      final JsonElement metadata = object.get(\"metadata\");\n      if (metadata != null) {\n        cellRaw.metadata = gson.fromJson(metadata, Map.class);\n      }\n      final JsonElement level = object.get(\"level\");\n      if (level != null) {\n        cellRaw.level = level.getAsInt();\n      }\n\n      final JsonElement outputsElement = object.get(\"outputs\");\n      if (outputsElement != null) {\n        final JsonArray outputs = outputsElement.getAsJsonArray();\n        cellRaw.outputs = Lists.newArrayList();\n        for (JsonElement output : outputs) {\n          cellRaw.outputs.add(gson.fromJson(output, CellOutputRaw.class));\n        }\n      }\n      cellRaw.source = getStringOrArray(\"source\", object);\n      cellRaw.input = getStringOrArray(\"input\", object);\n      final JsonElement language = object.get(\"language\");\n      if (language != null) {\n        cellRaw.language = language.getAsString();\n      }\n      final JsonElement number = object.get(\"prompt_number\");\n      if (number != null) {\n        cellRaw.prompt_number = number.getAsInt();\n      }\n      return cellRaw;\n    }","id":48658,"modified_method":"@Override\n    public IpnbCellRaw deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\n      throws JsonParseException {\n      final JsonObject object = json.getAsJsonObject();\n      final IpnbCellRaw cellRaw = new IpnbCellRaw();\n      final JsonElement cell_type = object.get(\"cell_type\");\n      if (cell_type != null) {\n        cellRaw.cell_type = cell_type.getAsString();\n      }\n      final JsonElement count = object.get(\"execution_count\");\n      if (count != null) {\n        cellRaw.execution_count = count.isJsonNull() ? null : count.getAsInt();\n      }\n      final JsonElement metadata = object.get(\"metadata\");\n      if (metadata != null) {\n        cellRaw.metadata = gson.fromJson(metadata, Map.class);\n      }\n      final JsonElement level = object.get(\"level\");\n      if (level != null) {\n        cellRaw.level = level.getAsInt();\n      }\n\n      final JsonElement outputsElement = object.get(\"outputs\");\n      if (outputsElement != null) {\n        final JsonArray outputs = outputsElement.getAsJsonArray();\n        cellRaw.outputs = Lists.newArrayList();\n        for (JsonElement output : outputs) {\n          cellRaw.outputs.add(gson.fromJson(output, CellOutputRaw.class));\n        }\n      }\n      cellRaw.source = getStringOrArray(\"source\", object);\n      cellRaw.input = getStringOrArray(\"input\", object);\n      final JsonElement language = object.get(\"language\");\n      if (language != null) {\n        cellRaw.language = language.getAsString();\n      }\n      final JsonElement number = object.get(\"prompt_number\");\n      if (number != null) {\n        cellRaw.prompt_number = number.getAsInt();\n      }\n      return cellRaw;\n    }","commit_id":"27c590084769a91fb511f743b1c173f128629099","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Executor build(String name, String defaultType, @Nullable Settings settings, Settings defaultSettings) {\n        if (settings == null) {\n            settings = ImmutableSettings.Builder.EMPTY_SETTINGS;\n        }\n        String type = settings.get(\"type\", defaultType);\n        ThreadFactory threadFactory = EsExecutors.daemonThreadFactory(settings, \"[\" + name + \"]\");\n        if (\"same\".equals(type)) {\n            logger.debug(\"creating thread_pool [{}], type [{}]\", name, type);\n            return MoreExecutors.sameThreadExecutor();\n        } else if (\"cached\".equals(type)) {\n            TimeValue keepAlive = settings.getAsTime(\"keep_alive\", defaultSettings.getAsTime(\"keep_alive\", timeValueMinutes(5)));\n            logger.debug(\"creating thread_pool [{}], type [{}], keep_alive [{}]\", name, type, keepAlive);\n            return new ThreadPoolExecutor(0, Integer.MAX_VALUE,\n                    keepAlive.millis(), TimeUnit.MILLISECONDS,\n                    new SynchronousQueue<Runnable>(),\n                    threadFactory);\n        } else if (\"fixed\".equals(type)) {\n            int size = settings.getAsInt(\"size\", defaultSettings.getAsInt(\"size\", Runtime.getRuntime().availableProcessors() * 5));\n            int queueSize = settings.getAsInt(\"queue_size\", defaultSettings.getAsInt(\"queue_size\", -1));\n            RejectedExecutionHandler rejectedExecutionHandler;\n            String rejectSetting = settings.get(\"reject_policy\", defaultSettings.get(\"reject_policy\", \"abort\"));\n            if (\"abort\".equals(rejectSetting)) {\n                rejectedExecutionHandler = new ThreadPoolExecutor.AbortPolicy();\n            } else if (\"caller\".equals(rejectSetting)) {\n                rejectedExecutionHandler = new ThreadPoolExecutor.CallerRunsPolicy();\n            } else {\n                throw new ElasticSearchIllegalArgumentException(\"reject_policy [\" + rejectSetting + \"] not valid for [\" + name + \"] thread pool\");\n            }\n            logger.debug(\"creating thread_pool [{}], type [{}], size [{}], queue_size [{}], reject_policy [{}]\", name, type, size, queueSize, rejectSetting);\n            return new ThreadPoolExecutor(size, size,\n                    0L, TimeUnit.MILLISECONDS,\n                    queueSize <= 0 ? new LinkedTransferQueue<Runnable>() : new ArrayBlockingQueue<Runnable>(queueSize),\n                    threadFactory, rejectedExecutionHandler);\n        } else if (\"scaling\".equals(type)) {\n            TimeValue keepAlive = settings.getAsTime(\"keep_alive\", defaultSettings.getAsTime(\"keep_alive\", timeValueMinutes(5)));\n            int min = settings.getAsInt(\"min\", defaultSettings.getAsInt(\"min\", 1));\n            int size = settings.getAsInt(\"size\", defaultSettings.getAsInt(\"size\", Runtime.getRuntime().availableProcessors() * 5));\n            logger.debug(\"creating thread_pool [{}], type [{}], min [{}], size [{}], keep_alive [{}]\", name, type, min, size, keepAlive);\n            return EsExecutors.newScalingExecutorService(min, size, keepAlive.millis(), TimeUnit.MILLISECONDS, threadFactory);\n        } else if (\"blocking\".equals(type)) {\n            TimeValue keepAlive = settings.getAsTime(\"keep_alive\", defaultSettings.getAsTime(\"keep_alive\", timeValueMinutes(5)));\n            int min = settings.getAsInt(\"min\", defaultSettings.getAsInt(\"min\", 1));\n            int size = settings.getAsInt(\"size\", defaultSettings.getAsInt(\"size\", Runtime.getRuntime().availableProcessors() * 5));\n            SizeValue capacity = settings.getAsSize(\"queue_size\", defaultSettings.getAsSize(\"queue_size\", new SizeValue(1000)));\n            TimeValue waitTime = settings.getAsTime(\"wait_time\", defaultSettings.getAsTime(\"wait_time\", timeValueSeconds(60)));\n            logger.debug(\"creating thread_pool [{}], type [{}], min [{}], size [{}], queue_size [{}], keep_alive [{}], wait_time [{}]\", name, type, min, size, capacity.singles(), keepAlive, waitTime);\n            return EsExecutors.newBlockingExecutorService(min, size, keepAlive.millis(), TimeUnit.MILLISECONDS, threadFactory, (int) capacity.singles(), waitTime.millis(), TimeUnit.MILLISECONDS);\n        }\n        throw new ElasticSearchIllegalArgumentException(\"No type found [\" + type + \"], for [\" + name + \"]\");\n    }","id":48659,"modified_method":"private Executor build(String name, String defaultType, @Nullable Settings settings, Settings defaultSettings) {\n        if (settings == null) {\n            settings = ImmutableSettings.Builder.EMPTY_SETTINGS;\n        }\n        String type = settings.get(\"type\", defaultType);\n        ThreadFactory threadFactory = EsExecutors.daemonThreadFactory(settings, \"[\" + name + \"]\");\n        if (\"same\".equals(type)) {\n            logger.debug(\"creating thread_pool [{}], type [{}]\", name, type);\n            return MoreExecutors.sameThreadExecutor();\n        } else if (\"cached\".equals(type)) {\n            TimeValue keepAlive = settings.getAsTime(\"keep_alive\", defaultSettings.getAsTime(\"keep_alive\", timeValueMinutes(5)));\n            logger.debug(\"creating thread_pool [{}], type [{}], keep_alive [{}]\", name, type, keepAlive);\n            return new ThreadPoolExecutor(0, Integer.MAX_VALUE,\n                    keepAlive.millis(), TimeUnit.MILLISECONDS,\n                    new SynchronousQueue<Runnable>(),\n                    threadFactory);\n        } else if (\"fixed\".equals(type)) {\n            int size = settings.getAsInt(\"size\", defaultSettings.getAsInt(\"size\", Runtime.getRuntime().availableProcessors() * 5));\n            int queueSize = settings.getAsInt(\"queue_size\", defaultSettings.getAsInt(\"queue_size\", -1));\n            RejectedExecutionHandler rejectedExecutionHandler;\n            String rejectSetting = settings.get(\"reject_policy\", defaultSettings.get(\"reject_policy\", \"abort\"));\n            if (\"abort\".equals(rejectSetting)) {\n                rejectedExecutionHandler = new ThreadPoolExecutor.AbortPolicy();\n            } else if (\"caller\".equals(rejectSetting)) {\n                rejectedExecutionHandler = new ThreadPoolExecutor.CallerRunsPolicy();\n            } else {\n                throw new ElasticSearchIllegalArgumentException(\"reject_policy [\" + rejectSetting + \"] not valid for [\" + name + \"] thread pool\");\n            }\n            logger.debug(\"creating thread_pool [{}], type [{}], size [{}], queue_size [{}], reject_policy [{}]\", name, type, size, queueSize, rejectSetting);\n            return new ThreadPoolExecutor(size, size,\n                    0L, TimeUnit.MILLISECONDS,\n                    queueSize <= 0 ? new LinkedTransferQueue<Runnable>() : new ArrayBlockingQueue<Runnable>(queueSize),\n                    threadFactory, rejectedExecutionHandler);\n        } else if (\"scaling\".equals(type)) {\n            TimeValue keepAlive = settings.getAsTime(\"keep_alive\", defaultSettings.getAsTime(\"keep_alive\", timeValueMinutes(5)));\n            int min = settings.getAsInt(\"min\", defaultSettings.getAsInt(\"min\", 1));\n            int size = settings.getAsInt(\"max\", settings.getAsInt(\"size\", defaultSettings.getAsInt(\"size\", Runtime.getRuntime().availableProcessors() * 5)));\n            logger.debug(\"creating thread_pool [{}], type [{}], min [{}], size [{}], keep_alive [{}]\", name, type, min, size, keepAlive);\n            return EsExecutors.newScalingExecutorService(min, size, keepAlive.millis(), TimeUnit.MILLISECONDS, threadFactory);\n        } else if (\"blocking\".equals(type)) {\n            TimeValue keepAlive = settings.getAsTime(\"keep_alive\", defaultSettings.getAsTime(\"keep_alive\", timeValueMinutes(5)));\n            int min = settings.getAsInt(\"min\", defaultSettings.getAsInt(\"min\", 1));\n            int size = settings.getAsInt(\"max\", settings.getAsInt(\"size\", defaultSettings.getAsInt(\"size\", Runtime.getRuntime().availableProcessors() * 5)));\n            SizeValue capacity = settings.getAsSize(\"queue_size\", defaultSettings.getAsSize(\"queue_size\", new SizeValue(1000)));\n            TimeValue waitTime = settings.getAsTime(\"wait_time\", defaultSettings.getAsTime(\"wait_time\", timeValueSeconds(60)));\n            logger.debug(\"creating thread_pool [{}], type [{}], min [{}], size [{}], queue_size [{}], keep_alive [{}], wait_time [{}]\", name, type, min, size, capacity.singles(), keepAlive, waitTime);\n            return EsExecutors.newBlockingExecutorService(min, size, keepAlive.millis(), TimeUnit.MILLISECONDS, threadFactory, (int) capacity.singles(), waitTime.millis(), TimeUnit.MILLISECONDS);\n        }\n        throw new ElasticSearchIllegalArgumentException(\"No type found [\" + type + \"], for [\" + name + \"]\");\n    }","commit_id":"3b92962ddd7c24b6fda871251b522c9c023f2889","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void addToHistory(String commandText)\n   {\n      if (isBrowsePrompt())\n      {\n         if (!isInjectedBrowseCommand(commandText))\n            browseHistoryManager_.addToHistory(commandText);\n      }\n      else\n      {\n         historyManager_.addToHistory(commandText);\n      }\n   }","id":48660,"modified_method":"private void addToHistory(String commandText)\n   {\n      if (isBrowsePrompt())\n         browseHistoryManager_.addToHistory(commandText);\n      else\n         historyManager_.addToHistory(commandText);\n   }","commit_id":"c38c9827b315ef363e6073263cfa176fd5a5f341","url":"https://github.com/rstudio/rstudio"},{"original_method":"public void runExecuteAction(LanguageConsoleImpl languageConsole) {\n\n    // Process input and add to history\n    final Document document = languageConsole.getCurrentEditor().getDocument();\n    final String text = document.getText();\n    final TextRange range = new TextRange(0, document.getTextLength());\n\n    languageConsole.getCurrentEditor().getSelectionModel().setSelection(range.getStartOffset(), range.getEndOffset());\n    if (myAddCurrentToHistory) {\n      languageConsole.addCurrentToHistory(range, false, myPreserveMarkup);\n    }\n    languageConsole.setInputText(\"\");\n    if (!StringUtil.isEmptyOrSpaces(text)) {\n      myConsoleHistoryModel.addToHistory(text);\n    }\n    // Send to interpreter / server\n\n    processLine(text);\n  }","id":48661,"modified_method":"public void runExecuteAction(LanguageConsoleImpl languageConsole) {\n\n    // Process input and add to history\n    final Document document = languageConsole.getCurrentEditor().getDocument();\n    final String text = document.getText();\n    final TextRange range = new TextRange(0, document.getTextLength());\n\n    languageConsole.getCurrentEditor().getSelectionModel().setSelection(range.getStartOffset(), range.getEndOffset());\n    if (myAddCurrentToHistory) {\n      languageConsole.addCurrentToHistory(range, false, myPreserveMarkup);\n    }\n    languageConsole.setInputText(\"\");\n\n    myConsoleHistoryModel.addToHistory(text);\n    // Send to interpreter / server\n\n    processLine(text);\n  }","commit_id":"37d1a1e7231ad91c499868aa8e01aa3bd8c0786c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void addChangeListener(ChangeListener listener, Disposable parent) {\n    myPydevConsoleView.addChangeListener(listener, parent);\n    myTextConsole.addChangeListener(listener, parent);\n  }","id":48662,"modified_method":"@Override\n  public void addChangeListener(ChangeListener listener, Disposable parent) {\n    myPydevConsoleView.addChangeListener(listener, parent);\n    if (myTextConsole instanceof ObservableConsoleView)\n      ((ObservableConsoleView)myTextConsole).addChangeListener(listener, parent);\n  }","commit_id":"e0847c0cf1ba75264c950ca6dedcbcfbc9e8d42e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public PythonDebugLanguageConsoleView(final Project project, Sdk sdk) {\n    super(new CardLayout());\n    myPydevConsoleView = createConsoleView(project, sdk);\n    myTextConsole = (ConsoleViewImpl)TextConsoleBuilderFactory.getInstance().createBuilder(project).getConsole();\n\n    add(myTextConsole.getComponent(), TEXT_CONSOLE_PANEL);\n    add(myPydevConsoleView.getComponent(), PYDEV_CONSOLE_PANEL);\n    showDebugConsole(false);\n  }","id":48663,"modified_method":"public PythonDebugLanguageConsoleView(final Project project, Sdk sdk) {\n    this(project, sdk, TextConsoleBuilderFactory.getInstance().createBuilder(project).getConsole());\n  }","commit_id":"e0847c0cf1ba75264c950ca6dedcbcfbc9e8d42e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ConsoleViewImpl getTextConsole() {\n    return myTextConsole;\n  }","id":48664,"modified_method":"public ConsoleViewImpl getTextConsole() {\n    if (myTextConsole instanceof ConsoleViewImpl)\n      return (ConsoleViewImpl)myTextConsole;\n    return null;\n  }","commit_id":"e0847c0cf1ba75264c950ca6dedcbcfbc9e8d42e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  protected ConsoleView createAndAttachConsole(Project project, ProcessHandler processHandler, Executor executor)\n    throws ExecutionException {\n\n    final PythonTRunnerConsoleProperties consoleProperties = new PythonTRunnerConsoleProperties(myConfiguration, executor);\n    final ConsoleView consoleView = SMTestRunnerConnectionUtil.createAndAttachConsole(PythonTRunnerConsoleProperties.FRAMEWORK_NAME,\n                                                                                      processHandler,\n                                                                                      consoleProperties,\n                                                                                      getRunnerSettings(),\n                                                                                      getConfigurationSettings());\n\n    consoleView.addMessageFilter(new PythonTracebackFilter(project, myConfiguration.getWorkingDirectory()));\n    return consoleView;\n  }","id":48665,"modified_method":"@NotNull\n  protected ConsoleView createAndAttachConsole(Project project, ProcessHandler processHandler, Executor executor)\n    throws ExecutionException {\n\n    final PythonTRunnerConsoleProperties consoleProperties = new PythonTRunnerConsoleProperties(myConfiguration, executor);\n\n    if (isDebug()) {\n      final ConsoleView testsOutputConsoleView = SMTestRunnerConnectionUtil.createConsole(PythonTRunnerConsoleProperties.FRAMEWORK_NAME,\n                                                                                      consoleProperties,\n                                                                                      getRunnerSettings(),\n                                                                                      getConfigurationSettings());\n      final ConsoleView consoleView = new PythonDebugLanguageConsoleView(project, PythonSdkType.findSdkByPath(myConfiguration.getSdkHome()), testsOutputConsoleView);\n      consoleView.addMessageFilter(new PythonTracebackFilter(project, myConfiguration.getWorkingDirectory()));\n      consoleView.attachToProcess(processHandler);\n      return consoleView;\n    }\n    final ConsoleView consoleView = SMTestRunnerConnectionUtil.createAndAttachConsole(PythonTRunnerConsoleProperties.FRAMEWORK_NAME,\n                                                                                      processHandler,\n                                                                                      consoleProperties,\n                                                                                      getRunnerSettings(),\n                                                                                      getConfigurationSettings());\n    consoleView.addMessageFilter(new PythonTracebackFilter(project, myConfiguration.getWorkingDirectory()));\n    return consoleView;\n  }","commit_id":"e0847c0cf1ba75264c950ca6dedcbcfbc9e8d42e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public TestsOutputConsolePrinter(@NotNull BaseTestsOutputConsoleView testsOutputConsoleView, final TestConsoleProperties properties, final AbstractTestProxy unboundOutputRoot) {\n    myConsole = testsOutputConsoleView.getConsole();\n    myProperties = properties;\n    myUnboundOutputRoot = unboundOutputRoot;\n    myProperties.addListener(TestConsoleProperties.SCROLL_TO_STACK_TRACE, myPropertyListener);\n  }","id":48666,"modified_method":"public TestsOutputConsolePrinter(@NotNull BaseTestsOutputConsoleView testsOutputConsoleView, final TestConsoleProperties properties, final AbstractTestProxy unboundOutputRoot) {\n    this(testsOutputConsoleView.getConsole(), properties, unboundOutputRoot);\n  }","commit_id":"901502545815e4d1f59b3369a7d637ce4d85261d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected static void createConsoleCommunicationAndSetupActions(@NotNull final Project project,\n                                                                @NotNull final ExecutionResult result,\n                                                                @NotNull PyDebugProcess debugProcess) {\n    ExecutionConsole console = result.getExecutionConsole();\n    ProcessHandler processHandler = result.getProcessHandler();\n\n    if (console instanceof PythonDebugLanguageConsoleView) {\n      PythonDebugConsoleView pythonDebugConsoleView = ((PythonDebugLanguageConsoleView)console).getPydevConsoleView();\n\n\n      ConsoleCommunication consoleCommunication =\n        new PythonDebugConsoleCommunication(project, debugProcess, ((PythonDebugLanguageConsoleView)console).getTextConsole());\n      pythonDebugConsoleView.setConsoleCommunication(consoleCommunication);\n\n\n      PydevDebugConsoleExecuteActionHandler consoleExecuteActionHandler = new PydevDebugConsoleExecuteActionHandler(pythonDebugConsoleView,\n                                                                                                                    processHandler,\n                                                                                                                    consoleCommunication);\n\n      pythonDebugConsoleView.setExecutionHandler(consoleExecuteActionHandler);\n\n      debugProcess.getSession().addSessionListener(consoleExecuteActionHandler);\n\n      List<AnAction> actions = AbstractConsoleRunnerWithHistory\n        .createConsoleActions(\n          pythonDebugConsoleView.getConsole(), processHandler, consoleExecuteActionHandler).getActionsAsList();\n\n\n      AbstractConsoleRunnerWithHistory\n        .registerActionShortcuts(actions.toArray(new AnAction[actions.size()]), pythonDebugConsoleView.getComponent());\n    }\n  }","id":48667,"modified_method":"protected static void createConsoleCommunicationAndSetupActions(@NotNull final Project project,\n                                                                @NotNull final ExecutionResult result,\n                                                                @NotNull PyDebugProcess debugProcess) {\n    ExecutionConsole console = result.getExecutionConsole();\n    ProcessHandler processHandler = result.getProcessHandler();\n\n    if (console instanceof PythonDebugLanguageConsoleView) {\n      PythonDebugConsoleView pythonDebugConsoleView = ((PythonDebugLanguageConsoleView)console).getPydevConsoleView();\n\n\n      ConsoleCommunication consoleCommunication =\n        new PythonDebugConsoleCommunication(project, debugProcess, ((PythonDebugLanguageConsoleView)console).getTextConsole());\n      pythonDebugConsoleView.setConsoleCommunication(consoleCommunication);\n\n\n      PydevDebugConsoleExecuteActionHandler consoleExecuteActionHandler = new PydevDebugConsoleExecuteActionHandler(pythonDebugConsoleView,\n                                                                                                                    processHandler,\n                                                                                                                    consoleCommunication);\n\n      pythonDebugConsoleView.setExecutionHandler(consoleExecuteActionHandler);\n\n      debugProcess.getSession().addSessionListener(consoleExecuteActionHandler);\n      new ConsoleHistoryController(\"py\", \"\", pythonDebugConsoleView.getConsole(), consoleExecuteActionHandler.getConsoleHistoryModel()).install();\n      final AnAction execAction = AbstractConsoleRunnerWithHistory\n        .createConsoleExecAction(pythonDebugConsoleView.getConsole(), processHandler, consoleExecuteActionHandler);\n      execAction.registerCustomShortcutSet(execAction.getShortcutSet(), pythonDebugConsoleView.getComponent());\n    }\n  }","commit_id":"500f97989aa02ccf814af5790c8149924f597ce8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  @Override\n  protected ConsoleExecuteActionHandler createConsoleExecuteActionHandler() {\n    myConsoleExecuteActionHandler =\n      new PydevConsoleExecuteActionHandler(getConsoleView(), getProcessHandler(), myPydevConsoleCommunication);\n    myConsoleExecuteActionHandler.setEnabled(false);\n    return myConsoleExecuteActionHandler;\n  }","id":48668,"modified_method":"@NotNull\n  @Override\n  protected ConsoleExecuteActionHandler createConsoleExecuteActionHandler() {\n    myConsoleExecuteActionHandler =\n      new PydevConsoleExecuteActionHandler(getConsoleView(), getProcessHandler(), myPydevConsoleCommunication);\n    myConsoleExecuteActionHandler.setEnabled(false);\n    new ConsoleHistoryController(\"py\", \"\", getLanguageConsole(), myConsoleExecuteActionHandler.getConsoleHistoryModel()).install();\n    return myConsoleExecuteActionHandler;\n  }","commit_id":"500f97989aa02ccf814af5790c8149924f597ce8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public AddLanguagePage inputLanguage(String language) {\n        languageInput.sendKeys(language);\n        defocus();\n        return this;\n    }","id":48669,"modified_method":"public AddLanguagePage inputLanguage(String language) {\n        languageInput.sendKeys(language);\n        defocus();\n        waitForPageSilence();\n        return this;\n    }","commit_id":"dcf9bec8dbd48da6fbfcf20e45b2fc692d28caa2","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test(timeout = ZanataTestCase.MAX_SHORT_TEST_DURATION)\n    public void addLanguageAsDisabled() {\n        String language = \"Klingon\";\n        String languageDisplayName = \"klingon[Klingon]\";\n        ManageLanguagePage manageLanguagePage =\n                new LoginWorkFlow().signIn(\"admin\", \"admin\").goToHomePage()\n                        .goToAdministration().goToManageLanguagePage();\n\n        assertThat(\"The language is not listed\",\n                manageLanguagePage.getLanguageLocales(),\n                Matchers.not(Matchers.hasItem(language)));\n\n        manageLanguagePage =\n                manageLanguagePage.addNewLanguage().inputLanguage(language)\n                        .disableLanguageByDefault().saveLanguage();\n\n        assertThat(\"The language is listed\",\n                manageLanguagePage.getLanguageLocales(),\n                Matchers.hasItem(language));\n        assertThat(\"The language is disabled by default\",\n                !manageLanguagePage.languageIsEnabled(language));\n\n        List<String> enabledLocaleList = manageLanguagePage.goToHomePage()\n                .goToProjects()\n                .goToProject(\"about fedora\").gotoVersion(\"master\")\n                .gotoSettingsTab().gotoSettingsLanguagesTab()\n                .clickInheritCheckbox()\n                .waitForLocaleListVisible()\n                .getEnabledLocaleList();\n\n        assertThat(\"The language is disabled by default\", enabledLocaleList,\n                Matchers.not(Matchers.hasItem(languageDisplayName)));\n    }","id":48670,"modified_method":"@Feature(summary = \"The administrator can add a disabled language to Zanata\",\n            tcmsTestPlanIds = 5316, tcmsTestCaseIds = 181709)\n    @Test(timeout = ZanataTestCase.MAX_SHORT_TEST_DURATION)\n    public void addLanguageAsDisabled() throws Exception {\n        String language = \"Klingon\";\n        String languageDisplayName = \"klingon[Klingon]\";\n        ManageLanguagePage manageLanguagePage = new LoginWorkFlow()\n                .signIn(\"admin\", \"admin\")\n                .goToHomePage()\n                .goToAdministration()\n                .goToManageLanguagePage();\n\n        assertThat(manageLanguagePage.getLanguageLocales())\n                .doesNotContain(language)\n                .as(\"The language is not listed\");\n\n        manageLanguagePage = manageLanguagePage\n                .addNewLanguage()\n                .inputLanguage(language)\n                .disableLanguageByDefault()\n                .saveLanguage();\n\n        assertThat(manageLanguagePage.getLanguageLocales())\n                .contains(language)\n                .as(\"The language is listed\");\n        assertThat(manageLanguagePage.languageIsEnabled(language))\n                .isFalse()\n                .as(\"The language is disabled by default\");\n\n        List<String> enabledLocaleList = manageLanguagePage.goToHomePage()\n                .goToProjects()\n                .goToProject(\"about fedora\")\n                .gotoSettingsTab()\n                .gotoSettingsLanguagesTab()\n                .waitForLocaleListVisible()\n                .getEnabledLocaleList();\n\n        assertThat(enabledLocaleList)\n                .doesNotContain(languageDisplayName)\n                .as(\"The language is disabled by default\");\n    }","commit_id":"dcf9bec8dbd48da6fbfcf20e45b2fc692d28caa2","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test(timeout = ZanataTestCase.MAX_SHORT_TEST_DURATION)\n    public void addKnownLanguage() {\n        String language = \"ru-RU\";\n        ManageLanguagePage manageLanguagePage =\n                new LoginWorkFlow().signIn(\"admin\", \"admin\").goToHomePage()\n                        .goToAdministration().goToManageLanguagePage();\n\n        assertThat(\"The language is not listed\",\n                manageLanguagePage.getLanguageLocales(),\n                Matchers.not(Matchers.hasItem(language)));\n\n        AddLanguagePage addLanguagePage =\n                manageLanguagePage.addNewLanguage().inputLanguage(\"ru-RU\");\n\n        Map<String, String> languageInfo = addLanguagePage.getLanguageDetails();\n\n        assertThat(\"The name is correct\", languageInfo.get(\"Name\"),\n                Matchers.equalTo(\"Russian (Russia)\"));\n        assertThat(\"The native name is correct\",\n                languageInfo.get(\"Native Name\"),\n                Matchers.equalTo(\"русский (Россия)\"));\n        assertThat(\"The language is correct\",\n                languageInfo.get(\"Language Code\"), Matchers.equalTo(\"ru\"));\n        assertThat(\"The country code is correct\",\n                languageInfo.get(\"Country Code\"), Matchers.equalTo(\"RU\"));\n    }","id":48671,"modified_method":"@Feature(summary = \"The administrator can add a known language to Zanata\",\n            tcmsTestPlanIds = 5316, tcmsTestCaseIds = 181709)\n    @Test(timeout = ZanataTestCase.MAX_SHORT_TEST_DURATION)\n    public void addKnownLanguage() throws Exception {\n        String language = \"ru-RU\";\n        ManageLanguagePage manageLanguagePage = new LoginWorkFlow()\n                .signIn(\"admin\", \"admin\")\n                .goToHomePage()\n                .goToAdministration()\n                .goToManageLanguagePage();\n\n        assertThat(manageLanguagePage.getLanguageLocales())\n                .doesNotContain(language)\n                .as(\"The language is not listed\");\n\n        AddLanguagePage addLanguagePage = manageLanguagePage\n                .addNewLanguage()\n                .inputLanguage(\"ru-RU\");\n\n        Map<String, String> languageInfo = addLanguagePage.getLanguageDetails();\n\n        assertThat(languageInfo.get(\"Name\"))\n                .isEqualTo(\"Russian (Russia)\")\n                .as(\"The name is correct\");\n        assertThat(languageInfo.get(\"Native Name\"))\n                .isEqualTo(\"русский (Россия)\")\n                .as(\"The native name is correct\");\n        assertThat(languageInfo.get(\"Language Code\"))\n                .isEqualTo(\"ru\")\n                .as(\"The language is correct\");\n        assertThat(languageInfo.get(\"Country Code\"))\n                .isEqualTo(\"RU\")\n                .as(\"The country code is correct\");\n    }","commit_id":"dcf9bec8dbd48da6fbfcf20e45b2fc692d28caa2","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test(timeout = ZanataTestCase.MAX_SHORT_TEST_DURATION)\n    @Ignore(\"RHBZ-1086036\")\n    public void addLanguageAsEnabled() {\n        String language = \"Goa'uld\";\n        String languageDisplayName = \"goa'uld[Goa'uld]\";\n        ManageLanguagePage manageLanguagePage = new LoginWorkFlow()\n                .signIn(\"admin\", \"admin\")\n                .goToHomePage()\n                .goToAdministration()\n                .goToManageLanguagePage();\n\n        assertThat(\"The language is not listed\",\n                manageLanguagePage.getLanguageLocales(),\n                Matchers.not(Matchers.hasItem(language)));\n\n        manageLanguagePage =\n                manageLanguagePage.addNewLanguage().inputLanguage(language)\n                        .saveLanguage();\n\n        assertThat(\"The language is listed\",\n                manageLanguagePage.getLanguageLocales(),\n                Matchers.hasItem(language));\n\n        assertThat(\"The language is enabled by default\",\n                manageLanguagePage.languageIsEnabled(language));\n\n        List<String> enabledLocaleList = manageLanguagePage.goToHomePage()\n                        .goToProjects()\n                        .goToProject(\"about fedora\")\n                        .gotoVersion(\"master\")\n                        .gotoSettingsTab()\n                        .gotoSettingsLanguagesTab()\n                        .clickInheritCheckbox()\n                        .waitForLocaleListVisible()\n                        .getEnabledLocaleList();\n\n        assertThat(\"The language is enabled by default\", enabledLocaleList,\n                Matchers.hasItem(languageDisplayName));\n    }","id":48672,"modified_method":"@Feature(summary = \"The administrator can add a language to Zanata\",\n            tcmsTestPlanIds = 5316, tcmsTestCaseIds = 181709)\n    @Test(timeout = ZanataTestCase.MAX_SHORT_TEST_DURATION)\n    public void addLanguageAsEnabled() throws Exception {\n        String language = \"Goa'uld\";\n        String languageDisplayName = \"goa'uld[Goa'uld]\";\n        ManageLanguagePage manageLanguagePage = new LoginWorkFlow()\n                .signIn(\"admin\", \"admin\")\n                .goToHomePage()\n                .goToAdministration()\n                .goToManageLanguagePage();\n\n        assertThat(manageLanguagePage.getLanguageLocales())\n                .doesNotContain(language)\n                .as(\"The language is not listed\");\n\n        manageLanguagePage = manageLanguagePage\n                .addNewLanguage()\n                .inputLanguage(language)\n                .saveLanguage();\n\n        assertThat(manageLanguagePage.getLanguageLocales())\n                .contains(language)\n                .as(\"The language is listed\");\n\n        assertThat(manageLanguagePage.languageIsEnabled(language))\n                .isTrue()\n                .as(\"The language is enabled by default\");\n\n        List<String> enabledLocaleList = manageLanguagePage\n                .goToHomePage()\n                .goToProjects()\n                .goToProject(\"about fedora\")\n                .gotoSettingsTab()\n                .gotoSettingsLanguagesTab()\n                .waitForLocaleListVisible()\n                .getEnabledLocaleList();\n\n        assertThat(enabledLocaleList)\n                .contains(languageDisplayName)\n                .as(\"The language is enabled by default\");\n    }","commit_id":"dcf9bec8dbd48da6fbfcf20e45b2fc692d28caa2","url":"https://github.com/zanata/zanata-server"},{"original_method":"private List<WebElement> getEnabledLocaleListElement() {\n        return getDriver().findElement(By.id(\"settings-languages-form\"))\n                .findElements(By.xpath(\".//ul/li[@class='reveal--list-item']\"));\n    }","id":48673,"modified_method":"private List<WebElement> getEnabledLocaleListElement() {\n        return getDriver().findElement(By.id(\"settings-languages-form\"))\n                .findElement(By.className(\"list--slat\"))\n                .findElements(By.className(\"reveal--list-item\"));\n    }","commit_id":"dcf9bec8dbd48da6fbfcf20e45b2fc692d28caa2","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Feature(summary = \"The administrator can add a language to Zanata\",\n            tcmsTestPlanIds = 5316, tcmsTestCaseIds = 181709)\n    @Test(timeout = ZanataTestCase.MAX_SHORT_TEST_DURATION)\n    public void addLanguageAsEnabledByDefault() throws Exception {\n        String language = \"Goa'uld\";\n        String languageDisplayName = \"goa'uld[Goa'uld]\";\n        LanguagesPage languagesPage = new BasicWorkFlow()\n            .goToHome()\n            .goToLanguages();\n\n        assertThat(languagesPage.getLanguageLocales())\n                .doesNotContain(language)\n                .as(\"The language is not listed\");\n\n        languagesPage = languagesPage\n                .clickMoreActions()\n                .addNewLanguage()\n                .enterSearchLanguage(language)\n                .waitForPluralsWarning()\n                .saveLanguage();\n\n        assertThat(languagesPage.getLanguageLocales())\n                .contains(language)\n                .as(\"The language is listed\");\n\n        assertThat(languagesPage.languageIsEnabledByDefault(language))\n                .isTrue()\n                .as(\"The language is enabled by default\");\n\n        List<String> enabledLocaleList = languagesPage\n                .goToHomePage()\n                .goToProjects()\n                .goToProject(\"about fedora\")\n                .gotoSettingsTab()\n                .gotoSettingsLanguagesTab()\n                .waitForLocaleListVisible()\n                .getEnabledLocaleList();\n\n        assertThat(enabledLocaleList)\n                .contains(languageDisplayName)\n                .as(\"The language is enabled by default\");\n    }","id":48674,"modified_method":"@Feature(summary = \"The administrator can add a language to Zanata\",\n            tcmsTestPlanIds = 5316, tcmsTestCaseIds = 181709)\n    @Test(timeout = ZanataTestCase.MAX_SHORT_TEST_DURATION)\n    public void addLanguageAsEnabledByDefault() throws Exception {\n        String language = \"Goa'uld\";\n        String languageDisplayName = \"goa'uld[Goa'uld]\";\n        LanguagesPage languagesPage = new BasicWorkFlow()\n            .goToHome()\n            .goToLanguages();\n\n        assertThat(languagesPage.getLanguageLocales())\n                .doesNotContain(language)\n                .as(\"The language is not listed\");\n\n        languagesPage = languagesPage\n                .clickMoreActions()\n                .addNewLanguage()\n                .enterSearchLanguage(language)\n                .waitForPluralsWarning()\n                .saveLanguage();\n\n        assertThat(languagesPage.getLanguageLocales())\n                .contains(language)\n                .as(\"The language is listed\");\n\n        assertThat(languagesPage.languageIsEnabledByDefault(language))\n                .isTrue()\n                .as(\"The language is enabled by default\");\n\n        List<String> enabledLocaleList = languagesPage\n                .goToHomePage()\n                .goToProjects()\n                .goToProject(\"about fedora\")\n                .gotoSettingsTab()\n                .gotoSettingsLanguagesTab()\n                .waitForLocaleListVisible()\n                .getEnabledLocaleList();\n\n        assertThat(enabledLocaleList)\n                .contains(language)\n                .as(\"The language is enabled by default\");\n    }","commit_id":"c2d1a43810c0923a94a80ef478464e0b2cbe325c","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Feature(summary = \"The administrator can add a disabled language to Zanata\",\n            tcmsTestPlanIds = 5316, tcmsTestCaseIds = 181709)\n    @Test(timeout = ZanataTestCase.MAX_SHORT_TEST_DURATION)\n    public void addLanguageAsDisabledByDefault() throws Exception {\n        String language = \"Klingon\";\n        String languageDisplayName = \"klingon[Klingon]\";\n        LanguagesPage languagesPage = new BasicWorkFlow()\n                .goToHome()\n                .goToHomePage()\n                .goToLanguages();\n\n        assertThat(languagesPage.getLanguageLocales())\n                .doesNotContain(language)\n                .as(\"The language is not listed\");\n\n        languagesPage = languagesPage\n                .clickMoreActions()\n                .addNewLanguage()\n                .enterSearchLanguage(language)\n                .waitForPluralsWarning()\n                .enableLanguageByDefault(false)\n                .saveLanguage();\n\n        assertThat(languagesPage.getLanguageLocales())\n                .contains(language)\n                .as(\"The language is listed\");\n        assertThat(languagesPage.languageIsEnabledByDefault(language))\n                .isFalse()\n                .as(\"The language is disabled by default\");\n\n        List<String> enabledLocaleList = languagesPage.goToHomePage()\n                .goToProjects()\n                .goToProject(\"about fedora\")\n                .gotoSettingsTab()\n                .gotoSettingsLanguagesTab()\n                .waitForLocaleListVisible()\n                .getEnabledLocaleList();\n\n        assertThat(enabledLocaleList)\n                .doesNotContain(languageDisplayName)\n                .as(\"The language is disabled by default\");\n    }","id":48675,"modified_method":"@Feature(summary = \"The administrator can add a disabled language to Zanata\",\n            tcmsTestPlanIds = 5316, tcmsTestCaseIds = 181709)\n    @Test(timeout = ZanataTestCase.MAX_SHORT_TEST_DURATION)\n    public void addLanguageAsDisabledByDefault() throws Exception {\n        String language = \"Klingon\";\n        String languageDisplayName = \"klingon[Klingon]\";\n        LanguagesPage languagesPage = new BasicWorkFlow()\n                .goToHome()\n                .goToHomePage()\n                .goToLanguages();\n\n        assertThat(languagesPage.getLanguageLocales())\n                .doesNotContain(language)\n                .as(\"The language is not listed\");\n\n        languagesPage = languagesPage\n                .clickMoreActions()\n                .addNewLanguage()\n                .enterSearchLanguage(language)\n                .waitForPluralsWarning()\n                .enableLanguageByDefault(false)\n                .saveLanguage();\n\n        assertThat(languagesPage.getLanguageLocales())\n                .contains(language)\n                .as(\"The language is listed\");\n        assertThat(languagesPage.languageIsEnabledByDefault(language))\n                .isFalse()\n                .as(\"The language is disabled by default\");\n\n        ProjectLanguagesTab projectLanguagesTab = languagesPage.goToHomePage()\n                .goToProjects()\n                .goToProject(\"about fedora\")\n                .gotoSettingsTab()\n                .gotoSettingsLanguagesTab()\n                .waitForLocaleListVisible();\n        List<String> enabledLocaleList = projectLanguagesTab.getEnabledLocaleList();\n        List<String> disabledLocaleList = projectLanguagesTab.getDisabledLocaleList();\n\n        assertThat(enabledLocaleList)\n                .doesNotContain(language)\n                .as(\"The language is disabled by default\");\n        assertThat(disabledLocaleList)\n                .contains(language)\n                .as(\"The language is disabled by default\");\n    }","commit_id":"c2d1a43810c0923a94a80ef478464e0b2cbe325c","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Feature(summary = \"The administrator can change a project about content\",\n            tcmsTestPlanIds = 5316, tcmsTestCaseIds = 0)\n    @Test(timeout = ZanataTestCase.MAX_SHORT_TEST_DURATION)\n    public void addAboutPageDetails() throws Exception {\n        new ZanataRestCaller().createProjectAndVersion(\n                \"aboutpagetest\", \"aboutpagetest\", \"file\");\n\n        String aboutText = \"This is my about text for AF\";\n        assertThat(new LoginWorkFlow()\n                .signIn(\"admin\", \"admin\")\n                .loggedInAs())\n                .isEqualTo(\"admin\")\n                .as(\"Admin is logged in\");\n\n        ProjectAboutTab projectAboutTab = new ProjectWorkFlow()\n                .goToProjectByName(\"aboutpagetest\")\n                .gotoSettingsTab()\n                .gotoSettingsAboutTab();\n\n        assertThat(projectAboutTab.getAboutText())\n                .as(\"The text is empty\")\n                .isNullOrEmpty();\n\n        projectAboutTab = projectAboutTab\n                .clearAboutText()\n                .enterAboutText(aboutText)\n                .pressSave();\n\n        projectAboutTab.expectNotification(\"Successfully updated\");\n        ProjectAboutPage projectAboutPage = projectAboutTab.gotoAboutTab();\n\n        assertThat(projectAboutPage.getAboutText())\n                .isEqualTo(aboutText)\n                .as(\"The text in the About tab is correct\");\n    }","id":48676,"modified_method":"@Feature(summary = \"The administrator can change a project about content\",\n            tcmsTestPlanIds = 5316, tcmsTestCaseIds = 0)\n    @Test(timeout = ZanataTestCase.MAX_SHORT_TEST_DURATION)\n    public void addAboutPageDetails() throws Exception {\n        new ZanataRestCaller().createProjectAndVersion(\n                \"aboutpagetest\", \"aboutpagetest\", \"file\");\n\n        String aboutText = \"This is my about text for AF\";\n        assertThat(new LoginWorkFlow()\n                .signIn(\"admin\", \"admin\")\n                .loggedInAs())\n                .isEqualTo(\"admin\")\n                .as(\"Admin is logged in\");\n\n        ProjectAboutTab projectAboutTab = new ProjectWorkFlow()\n                .goToProjectByName(\"aboutpagetest\")\n                .gotoSettingsTab()\n                .gotoSettingsAboutTab();\n\n        assertThat(projectAboutTab.getAboutText())\n                .as(\"The text is empty\")\n                .isNullOrEmpty();\n\n        projectAboutTab = projectAboutTab\n                .clearAboutText()\n                .enterAboutText(aboutText)\n                .pressSave();\n\n        projectAboutTab.expectNotification(\"About page updated.\");\n        ProjectAboutPage projectAboutPage = projectAboutTab.gotoAboutTab();\n\n        assertThat(projectAboutPage.getAboutText())\n                .isEqualTo(aboutText)\n                .as(\"The text in the About tab is correct\");\n    }","commit_id":"c2d1a43810c0923a94a80ef478464e0b2cbe325c","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Feature(summary = \"The administrator can edit the project languages\",\n            tcmsTestPlanIds = 5316, tcmsTestCaseIds = 0)\n    @Test(timeout = ZanataTestCase.MAX_SHORT_TEST_DURATION)\n    public void editProjectLanguages() throws Exception {\n        ProjectLanguagesTab projectLanguagesTab = new ProjectWorkFlow()\n                .goToProjectByName(\"about fedora\")\n                .gotoSettingsTab()\n                .gotoSettingsLanguagesTab()\n                .expectEnabledLocaleListCount(3);\n\n        List<String> enabledLocaleList = projectLanguagesTab\n                .getEnabledLocaleList();\n\n        assertThat(enabledLocaleList)\n                .contains(\"French[fr]\", \"Hindi[hi]\", \"Polish[pl]\")\n                .as(\"The enabled list contains three languages\");\n\n        assertThat(enabledLocaleList)\n                .doesNotContain(\"English (United States)[en-US]\")\n                .as(\"The enabled list does not contain \" +\n                        \"'English (United States)[en-US]'\");\n\n        projectLanguagesTab = projectLanguagesTab\n                .gotoSettingsTab()\n                .gotoSettingsLanguagesTab()\n                .removeLocale(\"pl\")\n                .expectEnabledLocaleListCount(2);\n\n        enabledLocaleList = projectLanguagesTab\n                .getEnabledLocaleList();\n\n        assertThat(enabledLocaleList)\n                .doesNotContain(\"English (United States)[en-US]\")\n                .doesNotContain(\"Polish[pl]\")\n                .as(\"The enabled list does not contain 'US English' or Polish\");\n\n        enabledLocaleList = projectLanguagesTab\n                .gotoSettingsTab()\n                .gotoSettingsLanguagesTab()\n                .enterSearchLanguage(\"en-US\")\n                .addLanguage(\"English (United States)[en-US]\")\n                .expectEnabledLocaleListCount(3)\n                .getEnabledLocaleList();\n\n        Assertions.assertThat(enabledLocaleList)\n                .contains(\"English (United States)[en-US]\",\n                        \"French[fr]\",\n                        \"Hindi[hi]\")\n                .as(\"The enabled language list contains en-US, fr and hi\");\n    }","id":48677,"modified_method":"@Feature(summary = \"The administrator can edit the project languages\",\n            tcmsTestPlanIds = 5316, tcmsTestCaseIds = 0)\n    @Test(timeout = ZanataTestCase.MAX_SHORT_TEST_DURATION)\n    public void editProjectLanguages() throws Exception {\n        ProjectLanguagesTab projectLanguagesTab = new ProjectWorkFlow()\n                .goToProjectByName(\"about fedora\")\n                .gotoSettingsTab()\n                .gotoSettingsLanguagesTab()\n                .expectEnabledLocaleListCount(3);\n\n        List<String> enabledLocaleList = projectLanguagesTab\n                .getEnabledLocaleList();\n\n        assertThat(enabledLocaleList)\n                .contains(\"fr\", \"hi\", \"pl\")\n                .as(\"The enabled list contains three languages\");\n\n        assertThat(enabledLocaleList)\n                .doesNotContain(\"en-US\")\n                .as(\"The enabled list does not contain \" +\n                        \"'English (United States)[en-US]'\");\n\n        projectLanguagesTab = projectLanguagesTab\n                .gotoSettingsTab()\n                .gotoSettingsLanguagesTab()\n                .removeLocale(\"pl\")\n                .expectEnabledLocaleListCount(2);\n\n        enabledLocaleList = projectLanguagesTab\n                .getEnabledLocaleList();\n\n        assertThat(enabledLocaleList)\n                .doesNotContain(\"en-US\")\n                .doesNotContain(\"pl\")\n                .as(\"The enabled list does not contain 'US English' or Polish\");\n\n        enabledLocaleList = projectLanguagesTab\n                .gotoSettingsTab()\n                .gotoSettingsLanguagesTab()\n                .enterSearchLanguage(\"en-US\")\n                .addLanguage(\"en-US\")\n                .expectEnabledLocaleListCount(3)\n                .getEnabledLocaleList();\n\n        Assertions.assertThat(enabledLocaleList)\n                .contains(\"en-US\", \"fr\", \"hi\")\n                .as(\"The enabled language list contains en-US, fr and hi\");\n    }","commit_id":"c2d1a43810c0923a94a80ef478464e0b2cbe325c","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Feature(summary = \"The maintainer can override the available languages \" +\n            \"for a project version\",\n            tcmsTestPlanIds = 5316, tcmsTestCaseIds = 0)\n    @Test(timeout = ZanataTestCase.MAX_SHORT_TEST_DURATION)\n    public void changeVersionLanguages() throws Exception {\n        assertThat(new LoginWorkFlow()\n                .signIn(\"admin\", \"admin\")\n                .loggedInAs())\n                .isEqualTo(\"admin\")\n                .as(\"Admin user has logged in\");\n\n        VersionLanguagesTab versionLanguagesTab = new ProjectWorkFlow()\n                .goToProjectByName(\"langoverride\")\n                .gotoVersion(\"overridelangtest\")\n                .gotoSettingsTab()\n                .gotoSettingsLanguagesTab()\n                .clickInheritCheckbox()\n                .waitForLocaleListVisible();\n\n        List<String> enabledLocaleList = versionLanguagesTab\n                .getEnabledLocaleList();\n\n        assertThat(enabledLocaleList.isEmpty())\n                .as(\"The enabled list contains no languages\");\n\n        versionLanguagesTab = versionLanguagesTab\n                .gotoSettingsTab()\n                .gotoSettingsLanguagesTab()\n                .enterSearchLanguage(\"en-US\")\n                .addLocale(\"English (United States)[en-US]\");\n        versionLanguagesTab.expectNotification(\"Language \\\"English \" +\n                \"(United States)\\\" has been added to version.\");\n        versionLanguagesTab = versionLanguagesTab\n                .waitForLanguagesContains(\"English (United States)[en-US]\");\n\n        versionLanguagesTab = versionLanguagesTab\n                .enterSearchLanguage(\"fr\")\n                .addLocale(\"French[fr]\");\n        versionLanguagesTab.expectNotification(\"Language \\\"French\\\" has \" +\n                \"been added to version.\");\n        versionLanguagesTab = versionLanguagesTab\n                .waitForLanguagesContains(\"French[fr]\");\n\n        enabledLocaleList = versionLanguagesTab.getEnabledLocaleList();\n\n        assertThat(enabledLocaleList)\n                .contains(\"English (United States)[en-US]\", \"French[fr]\")\n                .as(\"Two languages are available to translate\");\n    }","id":48678,"modified_method":"@Feature(summary = \"The maintainer can override the available languages \" +\n            \"for a project version\",\n            tcmsTestPlanIds = 5316, tcmsTestCaseIds = 0)\n    @Test(timeout = ZanataTestCase.MAX_SHORT_TEST_DURATION)\n    public void changeVersionLanguages() throws Exception {\n        assertThat(new LoginWorkFlow()\n                .signIn(\"admin\", \"admin\")\n                .loggedInAs())\n                .isEqualTo(\"admin\")\n                .as(\"Admin user has logged in\");\n\n        VersionLanguagesTab versionLanguagesTab = new ProjectWorkFlow()\n                .goToProjectByName(\"langoverride\")\n                .gotoVersion(\"overridelangtest\")\n                .gotoSettingsTab()\n                .gotoSettingsLanguagesTab()\n                .waitForLocaleListVisible();\n\n        List<String> enabledLocaleList = versionLanguagesTab\n                .getEnabledLocaleList();\n\n        assertThat(enabledLocaleList)\n                .contains(\"fr\", \"hi\", \"pl\")\n                .as(\"The enabled list contains no languages\");\n\n        versionLanguagesTab = versionLanguagesTab\n                .gotoSettingsTab()\n                .gotoSettingsLanguagesTab()\n                .enterSearchLanguage(\"en-US\")\n                .addLocale(\"en-US\");\n        versionLanguagesTab.expectNotification(\"Language \\\"en-US\\\" has been \" +\n                \"enabled.\");\n        versionLanguagesTab = versionLanguagesTab\n                .waitForLanguagesContains(\"en-US\");\n\n        assertThat(versionLanguagesTab.getEnabledLocaleList())\n                .contains(\"en-US\", \"fr\")\n                .as(\"Two languages are available to translate\");\n    }","commit_id":"c2d1a43810c0923a94a80ef478464e0b2cbe325c","url":"https://github.com/zanata/zanata-server"},{"original_method":"private List<WebElement> getEnabledLocaleListElement() {\n        return waitForWebElement(settingsLanguagesForm)\n                .findElement(By.className(\"list--slat\"))\n                .findElements(By.className(\"reveal--list-item\"));\n    }","id":48679,"modified_method":"private List<WebElement> getDisabledLocaleListElement() {\n        return waitForWebElement(inactiveLocales)\n                .findElements(By.className(\"reveal\"));\n    }","commit_id":"c2d1a43810c0923a94a80ef478464e0b2cbe325c","url":"https://github.com/zanata/zanata-server"},{"original_method":"/**\n     * Click the removal link for a language.\n     *\n     * @param localeId language to remove\n     * @return new language settings tab\n     */\n    public ProjectLanguagesTab removeLocale(final String localeId) {\n        log.info(\"Click Remove on {}\", localeId);\n        boolean removedLocale = false;\n        for (WebElement localeLi : getEnabledLocaleListElement()) {\n            String displayedLocaleId =\n                    localeLi.findElement(By.xpath(\".//span\")).getText()\n                            .replace(\"[\", \"\").replace(\"]\", \"\");\n            if (displayedLocaleId.equals(localeId)) {\n                localeLi.findElement(By.tagName(\"a\")).click();\n                removedLocale = true;\n                break;\n            }\n        }\n        Preconditions.checkState(removedLocale, \"can not remove locale: %s\",\n                localeId);\n\n        refreshPageUntil(this, new Predicate<WebDriver>() {\n            @Override\n            public boolean apply(WebDriver driver) {\n                return !getEnabledLocaleList().contains(localeId);\n            }\n        });\n\n        return new ProjectLanguagesTab(getDriver());\n    }","id":48680,"modified_method":"/**\n     * Click the removal link for a language.\n     *\n     * @param searchLocaleId language to remove\n     * @return new language settings tab\n     */\n    public ProjectLanguagesTab removeLocale(final String searchLocaleId) {\n        log.info(\"Click Disable on {}\", searchLocaleId);\n        String message = \"can not find locale - \" + searchLocaleId;\n        waitForAMoment().withMessage(message).until(new Predicate<WebDriver>() {\n            @Override\n            public boolean apply(WebDriver driver) {\n                return LanguageList.toggleLanguageInList(\n                        getDriver().findElement(activeLocales),\n                        searchLocaleId);\n            }\n        });\n        refreshPageUntil(this, new Predicate<WebDriver>() {\n            @Override\n            public boolean apply(WebDriver driver) {\n                return !getEnabledLocaleList().contains(searchLocaleId);\n            }\n        });\n\n        return new ProjectLanguagesTab(getDriver());\n    }","commit_id":"c2d1a43810c0923a94a80ef478464e0b2cbe325c","url":"https://github.com/zanata/zanata-server"},{"original_method":"/**\n     * Get a list of locales enabled in this project\n     *\n     * @return String list of language/locale names\n     */\n    public List<String> getEnabledLocaleList() {\n        log.info(\"Query enabled locales\");\n        return Lists.transform(getEnabledLocaleListElement(),\n                new Function<WebElement, String>() {\n                        @Override\n                        public String apply(WebElement li) {\n                            return li.getText();\n                        }\n                });\n    }","id":48681,"modified_method":"/**\n     * Get a list of locales enabled in this project\n     *\n     * @return String list of language/locale names\n     */\n    public List<String> getEnabledLocaleList() {\n        log.info(\"Query enabled locales\");\n        return LanguageList.getListedLocales(waitForWebElement(activeLocales));\n    }","commit_id":"c2d1a43810c0923a94a80ef478464e0b2cbe325c","url":"https://github.com/zanata/zanata-server"},{"original_method":"public ProjectLanguagesTab waitForLocaleListVisible() {\n        log.info(\"Wait for locale list visible\");\n        waitForAMoment().until(new Predicate<WebDriver>() {\n            @Override\n            public boolean apply(WebDriver driver) {\n                return driver.findElement(settingsLanguagesForm)\n                        .findElement(By.className(\"list--slat\"))\n                        .isDisplayed();\n            }\n        });\n        return new ProjectLanguagesTab(getDriver());\n    }","id":48682,"modified_method":"public ProjectLanguagesTab waitForLocaleListVisible() {\n        log.info(\"Wait for locale list visible\");\n        waitForAMoment().until(new Predicate<WebDriver>() {\n            @Override\n            public boolean apply(WebDriver driver) {\n                return waitForWebElement(activeLocales).isDisplayed();\n            }\n        });\n        return new ProjectLanguagesTab(getDriver());\n    }","commit_id":"c2d1a43810c0923a94a80ef478464e0b2cbe325c","url":"https://github.com/zanata/zanata-server"},{"original_method":"/**\n     * Enter text into the language search field\n     * @param languageQuery text to search for\n     * @return new language settings tab\n     */\n    public ProjectLanguagesTab enterSearchLanguage(String languageQuery) {\n        log.info(\"Enter language search {}\", languageQuery);\n        WebElementUtil.searchAutocomplete(getDriver(), \"languageAutocomplete\",\n                languageQuery);\n        return new ProjectLanguagesTab(getDriver());\n    }","id":48683,"modified_method":"/**\n     * Enter text into the language search field\n     * @param languageQuery text to search for\n     * @return new language settings tab\n     */\n    public ProjectLanguagesTab enterSearchLanguage(String languageQuery) {\n        log.info(\"Enter language search {}\", languageQuery);\n        waitForWebElement(disabledLocalesFilter).sendKeys(languageQuery);\n        return new ProjectLanguagesTab(getDriver());\n    }","commit_id":"c2d1a43810c0923a94a80ef478464e0b2cbe325c","url":"https://github.com/zanata/zanata-server"},{"original_method":"/**\n     * Add a language to the languages list.\n     * Assumes that the search string has already been entered.\n     *\n     * @param localeId language to select\n     * @return new language settings, anticipating the language has been added.\n     */\n    public ProjectLanguagesTab addLanguage(final String localeId) {\n        log.info(\"Click Add language on {}\", localeId);\n        waitForAMoment().until(new Predicate<WebDriver>() {\n            @Override\n            public boolean apply(WebDriver driver) {\n                List<WebElement> searchResults =\n                        WebElementUtil.getSearchAutocompleteResults(\n                                getDriver(),\n                                \"settings-languages-form\",\n                                \"languageAutocomplete\");\n\n                boolean clickedLocale = false;\n                for (WebElement searchResult : searchResults) {\n                    if (searchResult.getText().contains(localeId)) {\n                        searchResult.click();\n                        clickedLocale = true;\n                        break;\n                    }\n                }\n                return clickedLocale;\n            }\n        });\n\n\n        refreshPageUntil(this, new Predicate<WebDriver>() {\n            @Override\n            public boolean apply(WebDriver driver) {\n                return getEnabledLocaleList().contains(localeId);\n            }\n        });\n\n        return new ProjectLanguagesTab(getDriver());\n    }","id":48684,"modified_method":"/**\n     * Add a language to the languages list.\n     *\n     * @param searchLocaleId language to select\n     * @return new language settings, anticipating the language has been added.\n     */\n    public ProjectLanguagesTab addLanguage(final String searchLocaleId) {\n        log.info(\"Click Enable on {}\", searchLocaleId);\n        String message = \"can not find locale - \" + searchLocaleId;\n        waitForAMoment().withMessage(message).until(new Predicate<WebDriver>() {\n            @Override\n            public boolean apply(WebDriver driver) {\n                return LanguageList.toggleLanguageInList(\n                        getDriver().findElement(inactiveLocales),\n                        searchLocaleId);\n            }\n        });\n        refreshPageUntil(this, new Predicate<WebDriver>() {\n            @Override\n            public boolean apply(WebDriver driver) {\n                return getEnabledLocaleList().contains(searchLocaleId);\n            }\n        });\n\n        return new ProjectLanguagesTab(getDriver());\n    }","commit_id":"c2d1a43810c0923a94a80ef478464e0b2cbe325c","url":"https://github.com/zanata/zanata-server"},{"original_method":"public VersionLanguagesTab addLocale(final String localeId) {\n        log.info(\"Click to add {}\", localeId);\n        String message = \"can not find locale - \" + localeId;\n        waitForAMoment().withMessage(message).until(new Predicate<WebDriver>() {\n            @Override\n            public boolean apply(WebDriver driver) {\n                List<WebElement> searchResults =\n                        WebElementUtil.getSearchAutocompleteResults(driver,\n                                \"settings-languages-form\",\n                                \"languageAutocomplete\");\n\n                for (WebElement searchResult : searchResults) {\n                    if (searchResult.getText().contains(localeId)) {\n                        slightPause();\n                        searchResult.click();\n                        return true;\n                    }\n                }\n                return false;\n            }\n        });\n\n        refreshPageUntil(this, new Predicate<WebDriver>() {\n            @Override\n            public boolean apply(WebDriver driver) {\n                return getEnabledLocaleList().contains(localeId);\n            }\n        });\n\n        return new VersionLanguagesTab(getDriver());\n    }","id":48685,"modified_method":"public VersionLanguagesTab addLocale(final String localeId) {\n        log.info(\"Click Enable on {}\", localeId);\n        String message = \"can not find locale - \" + localeId;\n        waitForAMoment().withMessage(message).until(new Predicate<WebDriver>() {\n            @Override\n            public boolean apply(WebDriver driver) {\n                return LanguageList.toggleLanguageInList(\n                        getDriver().findElement(inactiveLocales), localeId);\n            }\n        });\n\n        refreshPageUntil(this, new Predicate<WebDriver>() {\n            @Override\n            public boolean apply(WebDriver driver) {\n                return getEnabledLocaleList().contains(localeId);\n            }\n        });\n\n        return new VersionLanguagesTab(getDriver());\n    }","commit_id":"c2d1a43810c0923a94a80ef478464e0b2cbe325c","url":"https://github.com/zanata/zanata-server"},{"original_method":"/**\n     * Get a list of locales enabled in this version\n     *\n     * @return String list of language/locale names\n     */\n    public List<String> getEnabledLocaleList() {\n        log.info(\"Query enabled locales list\");\n        return Lists.transform(getEnabledLocaleListElement(),\n                new Function<WebElement, String>() {\n                    @Override\n                    public String apply(WebElement li) {\n                        return li.getText();\n                    }\n                });\n    }","id":48686,"modified_method":"/**\n     * Get a list of locales enabled in this version\n     *\n     * @return String list of language/locale names\n     */\n    public List<String> getEnabledLocaleList() {\n        log.info(\"Query enabled locales list\");\n        return LanguageList.getListedLocales(waitForWebElement(activeLocales));\n    }","commit_id":"c2d1a43810c0923a94a80ef478464e0b2cbe325c","url":"https://github.com/zanata/zanata-server"},{"original_method":"public VersionLanguagesTab removeLocale(final String localeId) {\n        log.info(\"Click Remove on {}\", localeId);\n        boolean removedLocale = false;\n        for (WebElement localeLi : getEnabledLocaleListElement()) {\n            String displayedLocaleId =\n                    localeLi.findElement(By.xpath(\".//span\")).getText()\n                            .replace(\"[\", \"\").replace(\"]\", \"\");\n            if (displayedLocaleId.equals(localeId)) {\n                localeLi.findElement(By.tagName(\"a\")).click();\n                removedLocale = true;\n                break;\n            }\n        }\n        Preconditions.checkState(removedLocale, \"can not remove locale: %s\",\n                localeId);\n\n        refreshPageUntil(this, new Predicate<WebDriver>() {\n            @Override\n            public boolean apply(WebDriver driver) {\n                return !getEnabledLocaleList().contains(localeId);\n            }\n        });\n\n        return new VersionLanguagesTab(getDriver());\n    }","id":48687,"modified_method":"public VersionLanguagesTab removeLocale(final String localeId) {\n        log.info(\"Click Disable on {}\", localeId);\n        String message = \"can not find locale - \" + localeId;\n        waitForAMoment().withMessage(message).until(new Predicate<WebDriver>() {\n            @Override\n            public boolean apply(WebDriver driver) {\n                return LanguageList.toggleLanguageInList(\n                        getDriver().findElement(activeLocales), localeId);\n            }\n        });\n\n        refreshPageUntil(this, new Predicate<WebDriver>() {\n            @Override\n            public boolean apply(WebDriver driver) {\n                return !getEnabledLocaleList().contains(localeId);\n            }\n        });\n\n        return new VersionLanguagesTab(getDriver());\n    }","commit_id":"c2d1a43810c0923a94a80ef478464e0b2cbe325c","url":"https://github.com/zanata/zanata-server"},{"original_method":"public VersionLanguagesTab enterSearchLanguage(String localeQuery) {\n        log.info(\"Enter search language {}\", localeQuery);\n        WebElementUtil.searchAutocomplete(getDriver(), \"languageAutocomplete\",\n                localeQuery);\n        return new VersionLanguagesTab(getDriver());\n    }","id":48688,"modified_method":"public VersionLanguagesTab enterSearchLanguage(String localeQuery) {\n        log.info(\"Enter language search {}\", localeQuery);\n        waitForWebElement(disabledLocalesFilter).sendKeys(localeQuery);\n        return new VersionLanguagesTab(getDriver());\n    }","commit_id":"c2d1a43810c0923a94a80ef478464e0b2cbe325c","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n        public void sendResponse(Object obj) {\n            long callId = operation.getCallId();\n            Connection conn = operation.getConnection();\n            if (!sent.compareAndSet(false, true) && !(obj instanceof Throwable)) {\n                throw new ResponseAlreadySentException(\"NormalResponse already sent for call: \" + callId\n                        + \" to \" + conn.getEndPoint() + \", current-response: \" + obj);\n            }\n\n            Response response;\n            if (!(obj instanceof Response)) {\n                response = new NormalResponse(obj, operation.getCallId(), 0, operation.isUrgent());\n            } else {\n                response = (Response) obj;\n            }\n\n            OperationService operationService = nodeEngine.getOperationService();\n            if (!operationService.send(response, operation.getCallerAddress())) {\n                throw new HazelcastException(\"Cannot send response: \" + obj + \" to \" + conn.getEndPoint());\n            }\n        }","id":48689,"modified_method":"@Override\n        public void sendResponse(Object obj) {\n            long callId = operation.getCallId();\n            Connection conn = operation.getConnection();\n            if (!sent.compareAndSet(false, true) && !(obj instanceof Throwable)) {\n                throw new ResponseAlreadySentException(\"NormalResponse already sent for call: \" + callId\n                        + \" to \" + conn.getEndPoint() + \", current-response: \" + obj);\n            }\n\n            Response response;\n            if (!(obj instanceof Response)) {\n                response = new NormalResponse(obj, operation.getCallId(), 0, operation.isUrgent());\n            } else {\n                response = (Response) obj;\n            }\n\n            InternalOperationService operationService = (InternalOperationService) nodeEngine.getOperationService();\n            if (!operationService.send(response, operation.getCallerAddress())) {\n                throw new HazelcastException(\"Cannot send response: \" + obj + \" to \" + conn.getEndPoint());\n            }\n        }","commit_id":"b06c762aefa87aba709b99f8ed64286fa605bb0c","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public ClientEngineImpl(Node node) {\n        this.node = node;\n        this.serializationService = node.getSerializationService();\n        this.nodeEngine = node.nodeEngine;\n        this.endpointManager = new ClientEndpointManagerImpl(this, nodeEngine);\n        int coreSize = Runtime.getRuntime().availableProcessors();\n        this.executor = nodeEngine.getExecutionService().register(ExecutionService.CLIENT_EXECUTOR,\n                coreSize * THREADS_PER_CORE, coreSize * EXECUTOR_QUEUE_CAPACITY_PER_CORE,\n                ExecutorType.CONCRETE);\n        this.logger = node.getLogger(ClientEngine.class);\n        long heartbeatNoHeartBeatsSeconds = node.groupProperties.CLIENT_MAX_NO_HEARTBEAT_SECONDS.getInteger();\n\n        ClientHeartbeatMonitor heartBeatMonitor =\n                new ClientHeartbeatMonitor(heartbeatNoHeartBeatsSeconds, endpointManager, this);\n        final ExecutionService executionService = nodeEngine.getExecutionService();\n        executionService.scheduleWithFixedDelay(heartBeatMonitor, HEART_BEAT_CHECK_INTERVAL_SECONDS,\n                HEART_BEAT_CHECK_INTERVAL_SECONDS, TimeUnit.SECONDS);\n    }","id":48690,"modified_method":"public ClientEngineImpl(Node node) {\n        this.logger = node.getLogger(ClientEngine.class);\n        this.node = node;\n        this.serializationService = node.getSerializationService();\n        this.nodeEngine = node.nodeEngine;\n        this.endpointManager = new ClientEndpointManagerImpl(this, nodeEngine);\n        this.executor = newExecutor();\n\n        ClientHeartbeatMonitor heartBeatMonitor = new ClientHeartbeatMonitor(\n                endpointManager, this, nodeEngine.getExecutionService(), node.groupProperties);\n        heartBeatMonitor.start();\n    }","commit_id":"45fcd4f75eebdc44be5fa0b57136bd8274ac8a59","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public void handlePacket(Packet packet) {\n        int partitionId = packet.getPartitionId();\n        if (partitionId < 0) {\n            executor.execute(new ClientPacketProcessor(packet));\n        } else {\n            OperationService operationService =  nodeEngine.getOperationService();\n            operationService.execute(new ClientPacketProcessor(packet), packet.getPartitionId());\n        }\n    }","id":48691,"modified_method":"public void handlePacket(Packet packet) {\n        int partitionId = packet.getPartitionId();\n        if (partitionId < 0) {\n            executor.execute(new ClientPacketProcessor(packet));\n        } else {\n            InternalOperationService operationService = (InternalOperationService) nodeEngine.getOperationService();\n            operationService.execute(new ClientPacketProcessor(packet), packet.getPartitionId());\n        }\n    }","commit_id":"45fcd4f75eebdc44be5fa0b57136bd8274ac8a59","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public ClientHeartbeatMonitor(long heartbeatTimeoutSeconds,\n                                  ClientEndpointManagerImpl endpointManager,\n                                  ClientEngine clientEngine) {\n\n        this.clientEndpointManager = endpointManager;\n        this.clientEngine = clientEngine;\n        this.heartbeatTimeoutSeconds = heartbeatTimeoutSeconds <= 0 ? defaultHeartbeatTimeout : heartbeatTimeoutSeconds;\n    }","id":48692,"modified_method":"public ClientHeartbeatMonitor(ClientEndpointManagerImpl endpointManager,\n                                  ClientEngine clientEngine,\n                                  ExecutionService executionService,\n                                  GroupProperties groupProperties) {\n        this.clientEndpointManager = endpointManager;\n        this.clientEngine = clientEngine;\n        this.executionService = executionService;\n        this.heartbeatTimeoutSeconds = getHeartBeatTimeout(groupProperties);\n    }","commit_id":"45fcd4f75eebdc44be5fa0b57136bd8274ac8a59","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"/**\n     * @param config\n     */\n    public GroupProperties(Config config) {\n        HEALTH_MONITORING_LEVEL\n                = new GroupProperty(config, PROP_HEALTH_MONITORING_LEVEL, HealthMonitorLevel.SILENT.toString());\n        HEALTH_MONITORING_DELAY_SECONDS = new GroupProperty(config, PROP_HEALTH_MONITORING_DELAY_SECONDS, \"30\");\n        VERSION_CHECK_ENABLED = new GroupProperty(config, PROP_VERSION_CHECK_ENABLED, \"true\");\n        PREFER_IPv4_STACK = new GroupProperty(config, PROP_PREFER_IPv4_STACK, \"true\");\n        IO_THREAD_COUNT = new GroupProperty(config, PROP_IO_THREAD_COUNT, \"3\");\n        //-1 means that the value is worked out dynamically.\n        PARTITION_OPERATION_THREAD_COUNT = new GroupProperty(config, PROP_PARTITION_OPERATION_THREAD_COUNT, \"-1\");\n        GENERIC_OPERATION_THREAD_COUNT = new GroupProperty(config, PROP_GENERIC_OPERATION_THREAD_COUNT, \"-1\");\n        EVENT_THREAD_COUNT = new GroupProperty(config, PROP_EVENT_THREAD_COUNT, \"5\");\n        EVENT_QUEUE_CAPACITY = new GroupProperty(config, PROP_EVENT_QUEUE_CAPACITY, \"1000000\");\n        EVENT_QUEUE_TIMEOUT_MILLIS = new GroupProperty(config, PROP_EVENT_QUEUE_TIMEOUT_MILLIS, \"250\");\n        CONNECT_ALL_WAIT_SECONDS = new GroupProperty(config, PROP_CONNECT_ALL_WAIT_SECONDS, \"120\");\n        MEMCACHE_ENABLED = new GroupProperty(config, PROP_MEMCACHE_ENABLED, \"true\");\n        REST_ENABLED = new GroupProperty(config, PROP_REST_ENABLED, \"true\");\n        MAP_LOAD_CHUNK_SIZE = new GroupProperty(config, PROP_MAP_LOAD_CHUNK_SIZE, \"1000\");\n        MERGE_FIRST_RUN_DELAY_SECONDS = new GroupProperty(config, PROP_MERGE_FIRST_RUN_DELAY_SECONDS, \"300\");\n        MERGE_NEXT_RUN_DELAY_SECONDS = new GroupProperty(config, PROP_MERGE_NEXT_RUN_DELAY_SECONDS, \"120\");\n        OPERATION_CALL_TIMEOUT_MILLIS = new GroupProperty(config, PROP_OPERATION_CALL_TIMEOUT_MILLIS, \"60000\");\n        final GroupProperty SOCKET_BIND_ANY = new GroupProperty(config, PROP_SOCKET_BIND_ANY, \"true\");\n        SOCKET_SERVER_BIND_ANY = new GroupProperty(config, PROP_SOCKET_SERVER_BIND_ANY, SOCKET_BIND_ANY);\n        SOCKET_CLIENT_BIND_ANY = new GroupProperty(config, PROP_SOCKET_CLIENT_BIND_ANY, SOCKET_BIND_ANY);\n        SOCKET_CLIENT_BIND = new GroupProperty(config, PROP_SOCKET_CLIENT_BIND, \"true\");\n        SOCKET_RECEIVE_BUFFER_SIZE = new GroupProperty(config, PROP_SOCKET_RECEIVE_BUFFER_SIZE, \"32\");\n        SOCKET_SEND_BUFFER_SIZE = new GroupProperty(config, PROP_SOCKET_SEND_BUFFER_SIZE, \"32\");\n        SOCKET_LINGER_SECONDS = new GroupProperty(config, PROP_SOCKET_LINGER_SECONDS, \"0\");\n        SOCKET_KEEP_ALIVE = new GroupProperty(config, PROP_SOCKET_KEEP_ALIVE, \"true\");\n        SOCKET_NO_DELAY = new GroupProperty(config, PROP_SOCKET_NO_DELAY, \"true\");\n        SHUTDOWNHOOK_ENABLED = new GroupProperty(config, PROP_SHUTDOWNHOOK_ENABLED, \"true\");\n        WAIT_SECONDS_BEFORE_JOIN = new GroupProperty(config, PROP_WAIT_SECONDS_BEFORE_JOIN, \"5\");\n        MAX_WAIT_SECONDS_BEFORE_JOIN = new GroupProperty(config, PROP_MAX_WAIT_SECONDS_BEFORE_JOIN, \"20\");\n        MAX_JOIN_SECONDS = new GroupProperty(config, PROP_MAX_JOIN_SECONDS, \"300\");\n        MAX_JOIN_MERGE_TARGET_SECONDS = new GroupProperty(config, PROP_MAX_JOIN_MERGE_TARGET_SECONDS, \"20\");\n        HEARTBEAT_INTERVAL_SECONDS = new GroupProperty(config, PROP_HEARTBEAT_INTERVAL_SECONDS, \"1\");\n        MAX_NO_HEARTBEAT_SECONDS = new GroupProperty(config, PROP_MAX_NO_HEARTBEAT_SECONDS, \"300\");\n        MASTER_CONFIRMATION_INTERVAL_SECONDS\n                = new GroupProperty(config, PROP_MASTER_CONFIRMATION_INTERVAL_SECONDS, \"30\");\n        MAX_NO_MASTER_CONFIRMATION_SECONDS = new GroupProperty(config, PROP_MAX_NO_MASTER_CONFIRMATION_SECONDS, \"300\");\n        MEMBER_LIST_PUBLISH_INTERVAL_SECONDS\n                = new GroupProperty(config, PROP_MEMBER_LIST_PUBLISH_INTERVAL_SECONDS, \"300\");\n        ICMP_ENABLED = new GroupProperty(config, PROP_ICMP_ENABLED, \"false\");\n        ICMP_TIMEOUT = new GroupProperty(config, PROP_ICMP_TIMEOUT, \"1000\");\n        ICMP_TTL = new GroupProperty(config, PROP_ICMP_TTL, \"0\");\n        INITIAL_MIN_CLUSTER_SIZE = new GroupProperty(config, PROP_INITIAL_MIN_CLUSTER_SIZE, \"0\");\n        INITIAL_WAIT_SECONDS = new GroupProperty(config, PROP_INITIAL_WAIT_SECONDS, \"0\");\n        MAP_REPLICA_SCHEDULED_TASK_DELAY_SECONDS\n                = new GroupProperty(config, PROP_MAP_REPLICA_SCHEDULED_TASK_DELAY_SECONDS, \"10\");\n        PARTITION_COUNT = new GroupProperty(config, PROP_PARTITION_COUNT, \"271\");\n        LOGGING_TYPE = new GroupProperty(config, PROP_LOGGING_TYPE, \"jdk\");\n        ENABLE_JMX = new GroupProperty(config, PROP_ENABLE_JMX, \"false\");\n        ENABLE_JMX_DETAILED = new GroupProperty(config, PROP_ENABLE_JMX_DETAILED, \"false\");\n        MC_MAX_INSTANCE_COUNT = new GroupProperty(config, PROP_MC_MAX_VISIBLE_INSTANCE_COUNT, \"100\");\n        MC_URL_CHANGE_ENABLED = new GroupProperty(config, PROP_MC_URL_CHANGE_ENABLED, \"true\");\n        CONNECTION_MONITOR_INTERVAL = new GroupProperty(config, PROP_CONNECTION_MONITOR_INTERVAL, \"100\");\n        CONNECTION_MONITOR_MAX_FAULTS = new GroupProperty(config, PROP_CONNECTION_MONITOR_MAX_FAULTS, \"3\");\n        PARTITION_MIGRATION_INTERVAL = new GroupProperty(config, PROP_PARTITION_MIGRATION_INTERVAL, \"0\");\n        PARTITION_MIGRATION_TIMEOUT = new GroupProperty(config, PROP_PARTITION_MIGRATION_TIMEOUT, \"300\");\n        PARTITION_MIGRATION_ZIP_ENABLED = new GroupProperty(config, PROP_PARTITION_MIGRATION_ZIP_ENABLED, \"true\");\n        PARTITION_TABLE_SEND_INTERVAL = new GroupProperty(config, PROP_PARTITION_TABLE_SEND_INTERVAL, \"15\");\n        PARTITION_BACKUP_SYNC_INTERVAL = new GroupProperty(config, PROP_PARTITION_BACKUP_SYNC_INTERVAL, \"30\");\n        PARTITIONING_STRATEGY_CLASS = new GroupProperty(config, PROP_PARTITIONING_STRATEGY_CLASS, \"\");\n        GRACEFUL_SHUTDOWN_MAX_WAIT = new GroupProperty(config, PROP_GRACEFUL_SHUTDOWN_MAX_WAIT, \"600\");\n        SYSTEM_LOG_ENABLED = new GroupProperty(config, PROP_SYSTEM_LOG_ENABLED, \"true\");\n        ELASTIC_MEMORY_ENABLED = new GroupProperty(config, PROP_ELASTIC_MEMORY_ENABLED, \"false\");\n        ELASTIC_MEMORY_TOTAL_SIZE = new GroupProperty(config, PROP_ELASTIC_MEMORY_TOTAL_SIZE, \"128M\");\n        ELASTIC_MEMORY_CHUNK_SIZE = new GroupProperty(config, PROP_ELASTIC_MEMORY_CHUNK_SIZE, \"1K\");\n        ELASTIC_MEMORY_SHARED_STORAGE = new GroupProperty(config, PROP_ELASTIC_MEMORY_SHARED_STORAGE, \"false\");\n        ELASTIC_MEMORY_UNSAFE_ENABLED = new GroupProperty(config, PROP_ELASTIC_MEMORY_UNSAFE_ENABLED, \"false\");\n        ENTERPRISE_LICENSE_KEY = new GroupProperty(config, PROP_ENTERPRISE_LICENSE_KEY);\n        MAP_WRITE_BEHIND_QUEUE_CAPACITY\n                = new GroupProperty(config, PROP_MAP_WRITE_BEHIND_QUEUE_CAPACITY, \"50000\");\n        ENTERPRISE_WAN_REP_QUEUESIZE = new GroupProperty(config, PROP_ENTERPRISE_WAN_REP_QUEUESIZE, \"100000\");\n        CLIENT_MAX_NO_HEARTBEAT_SECONDS = new GroupProperty(config, PROP_CLIENT_MAX_NO_HEARTBEAT_SECONDS, \"60\");\n    }","id":48693,"modified_method":"/**\n     * @param config\n     */\n    public GroupProperties(Config config) {\n        HEALTH_MONITORING_LEVEL\n                = new GroupProperty(config, PROP_HEALTH_MONITORING_LEVEL, HealthMonitorLevel.SILENT.toString());\n        HEALTH_MONITORING_DELAY_SECONDS = new GroupProperty(config, PROP_HEALTH_MONITORING_DELAY_SECONDS, \"30\");\n        VERSION_CHECK_ENABLED = new GroupProperty(config, PROP_VERSION_CHECK_ENABLED, \"true\");\n        PREFER_IPv4_STACK = new GroupProperty(config, PROP_PREFER_IPv4_STACK, \"true\");\n        IO_THREAD_COUNT = new GroupProperty(config, PROP_IO_THREAD_COUNT, \"3\");\n        //-1 means that the value is worked out dynamically.\n        PARTITION_OPERATION_THREAD_COUNT = new GroupProperty(config, PROP_PARTITION_OPERATION_THREAD_COUNT, \"-1\");\n        GENERIC_OPERATION_THREAD_COUNT = new GroupProperty(config, PROP_GENERIC_OPERATION_THREAD_COUNT, \"-1\");\n        EVENT_THREAD_COUNT = new GroupProperty(config, PROP_EVENT_THREAD_COUNT, \"5\");\n        EVENT_QUEUE_CAPACITY = new GroupProperty(config, PROP_EVENT_QUEUE_CAPACITY, \"1000000\");\n        EVENT_QUEUE_TIMEOUT_MILLIS = new GroupProperty(config, PROP_EVENT_QUEUE_TIMEOUT_MILLIS, \"250\");\n        CLIENT_ENGINE_THREAD_COUNT = new GroupProperty(config, PROP_CLIENT_ENGINE_THREAD_COUNT, \"-1\");\n\n        CONNECT_ALL_WAIT_SECONDS = new GroupProperty(config, PROP_CONNECT_ALL_WAIT_SECONDS, \"120\");\n        MEMCACHE_ENABLED = new GroupProperty(config, PROP_MEMCACHE_ENABLED, \"true\");\n        REST_ENABLED = new GroupProperty(config, PROP_REST_ENABLED, \"true\");\n        MAP_LOAD_CHUNK_SIZE = new GroupProperty(config, PROP_MAP_LOAD_CHUNK_SIZE, \"1000\");\n        MERGE_FIRST_RUN_DELAY_SECONDS = new GroupProperty(config, PROP_MERGE_FIRST_RUN_DELAY_SECONDS, \"300\");\n        MERGE_NEXT_RUN_DELAY_SECONDS = new GroupProperty(config, PROP_MERGE_NEXT_RUN_DELAY_SECONDS, \"120\");\n        OPERATION_CALL_TIMEOUT_MILLIS = new GroupProperty(config, PROP_OPERATION_CALL_TIMEOUT_MILLIS, \"60000\");\n        final GroupProperty SOCKET_BIND_ANY = new GroupProperty(config, PROP_SOCKET_BIND_ANY, \"true\");\n        SOCKET_SERVER_BIND_ANY = new GroupProperty(config, PROP_SOCKET_SERVER_BIND_ANY, SOCKET_BIND_ANY);\n        SOCKET_CLIENT_BIND_ANY = new GroupProperty(config, PROP_SOCKET_CLIENT_BIND_ANY, SOCKET_BIND_ANY);\n        SOCKET_CLIENT_BIND = new GroupProperty(config, PROP_SOCKET_CLIENT_BIND, \"true\");\n        SOCKET_RECEIVE_BUFFER_SIZE = new GroupProperty(config, PROP_SOCKET_RECEIVE_BUFFER_SIZE, \"32\");\n        SOCKET_SEND_BUFFER_SIZE = new GroupProperty(config, PROP_SOCKET_SEND_BUFFER_SIZE, \"32\");\n        SOCKET_LINGER_SECONDS = new GroupProperty(config, PROP_SOCKET_LINGER_SECONDS, \"0\");\n        SOCKET_KEEP_ALIVE = new GroupProperty(config, PROP_SOCKET_KEEP_ALIVE, \"true\");\n        SOCKET_NO_DELAY = new GroupProperty(config, PROP_SOCKET_NO_DELAY, \"true\");\n        SHUTDOWNHOOK_ENABLED = new GroupProperty(config, PROP_SHUTDOWNHOOK_ENABLED, \"true\");\n        WAIT_SECONDS_BEFORE_JOIN = new GroupProperty(config, PROP_WAIT_SECONDS_BEFORE_JOIN, \"5\");\n        MAX_WAIT_SECONDS_BEFORE_JOIN = new GroupProperty(config, PROP_MAX_WAIT_SECONDS_BEFORE_JOIN, \"20\");\n        MAX_JOIN_SECONDS = new GroupProperty(config, PROP_MAX_JOIN_SECONDS, \"300\");\n        MAX_JOIN_MERGE_TARGET_SECONDS = new GroupProperty(config, PROP_MAX_JOIN_MERGE_TARGET_SECONDS, \"20\");\n        HEARTBEAT_INTERVAL_SECONDS = new GroupProperty(config, PROP_HEARTBEAT_INTERVAL_SECONDS, \"1\");\n        MAX_NO_HEARTBEAT_SECONDS = new GroupProperty(config, PROP_MAX_NO_HEARTBEAT_SECONDS, \"300\");\n        MASTER_CONFIRMATION_INTERVAL_SECONDS\n                = new GroupProperty(config, PROP_MASTER_CONFIRMATION_INTERVAL_SECONDS, \"30\");\n        MAX_NO_MASTER_CONFIRMATION_SECONDS = new GroupProperty(config, PROP_MAX_NO_MASTER_CONFIRMATION_SECONDS, \"300\");\n        MEMBER_LIST_PUBLISH_INTERVAL_SECONDS\n                = new GroupProperty(config, PROP_MEMBER_LIST_PUBLISH_INTERVAL_SECONDS, \"300\");\n        ICMP_ENABLED = new GroupProperty(config, PROP_ICMP_ENABLED, \"false\");\n        ICMP_TIMEOUT = new GroupProperty(config, PROP_ICMP_TIMEOUT, \"1000\");\n        ICMP_TTL = new GroupProperty(config, PROP_ICMP_TTL, \"0\");\n        INITIAL_MIN_CLUSTER_SIZE = new GroupProperty(config, PROP_INITIAL_MIN_CLUSTER_SIZE, \"0\");\n        INITIAL_WAIT_SECONDS = new GroupProperty(config, PROP_INITIAL_WAIT_SECONDS, \"0\");\n        MAP_REPLICA_SCHEDULED_TASK_DELAY_SECONDS\n                = new GroupProperty(config, PROP_MAP_REPLICA_SCHEDULED_TASK_DELAY_SECONDS, \"10\");\n        PARTITION_COUNT = new GroupProperty(config, PROP_PARTITION_COUNT, \"271\");\n        LOGGING_TYPE = new GroupProperty(config, PROP_LOGGING_TYPE, \"jdk\");\n        ENABLE_JMX = new GroupProperty(config, PROP_ENABLE_JMX, \"false\");\n        ENABLE_JMX_DETAILED = new GroupProperty(config, PROP_ENABLE_JMX_DETAILED, \"false\");\n        MC_MAX_INSTANCE_COUNT = new GroupProperty(config, PROP_MC_MAX_VISIBLE_INSTANCE_COUNT, \"100\");\n        MC_URL_CHANGE_ENABLED = new GroupProperty(config, PROP_MC_URL_CHANGE_ENABLED, \"true\");\n        CONNECTION_MONITOR_INTERVAL = new GroupProperty(config, PROP_CONNECTION_MONITOR_INTERVAL, \"100\");\n        CONNECTION_MONITOR_MAX_FAULTS = new GroupProperty(config, PROP_CONNECTION_MONITOR_MAX_FAULTS, \"3\");\n        PARTITION_MIGRATION_INTERVAL = new GroupProperty(config, PROP_PARTITION_MIGRATION_INTERVAL, \"0\");\n        PARTITION_MIGRATION_TIMEOUT = new GroupProperty(config, PROP_PARTITION_MIGRATION_TIMEOUT, \"300\");\n        PARTITION_MIGRATION_ZIP_ENABLED = new GroupProperty(config, PROP_PARTITION_MIGRATION_ZIP_ENABLED, \"true\");\n        PARTITION_TABLE_SEND_INTERVAL = new GroupProperty(config, PROP_PARTITION_TABLE_SEND_INTERVAL, \"15\");\n        PARTITION_BACKUP_SYNC_INTERVAL = new GroupProperty(config, PROP_PARTITION_BACKUP_SYNC_INTERVAL, \"30\");\n        PARTITIONING_STRATEGY_CLASS = new GroupProperty(config, PROP_PARTITIONING_STRATEGY_CLASS, \"\");\n        GRACEFUL_SHUTDOWN_MAX_WAIT = new GroupProperty(config, PROP_GRACEFUL_SHUTDOWN_MAX_WAIT, \"600\");\n        SYSTEM_LOG_ENABLED = new GroupProperty(config, PROP_SYSTEM_LOG_ENABLED, \"true\");\n        ELASTIC_MEMORY_ENABLED = new GroupProperty(config, PROP_ELASTIC_MEMORY_ENABLED, \"false\");\n        ELASTIC_MEMORY_TOTAL_SIZE = new GroupProperty(config, PROP_ELASTIC_MEMORY_TOTAL_SIZE, \"128M\");\n        ELASTIC_MEMORY_CHUNK_SIZE = new GroupProperty(config, PROP_ELASTIC_MEMORY_CHUNK_SIZE, \"1K\");\n        ELASTIC_MEMORY_SHARED_STORAGE = new GroupProperty(config, PROP_ELASTIC_MEMORY_SHARED_STORAGE, \"false\");\n        ELASTIC_MEMORY_UNSAFE_ENABLED = new GroupProperty(config, PROP_ELASTIC_MEMORY_UNSAFE_ENABLED, \"false\");\n        ENTERPRISE_LICENSE_KEY = new GroupProperty(config, PROP_ENTERPRISE_LICENSE_KEY);\n        MAP_WRITE_BEHIND_QUEUE_CAPACITY\n                = new GroupProperty(config, PROP_MAP_WRITE_BEHIND_QUEUE_CAPACITY, \"50000\");\n        ENTERPRISE_WAN_REP_QUEUESIZE = new GroupProperty(config, PROP_ENTERPRISE_WAN_REP_QUEUESIZE, \"100000\");\n        CLIENT_HEARTBEAT_TIMEOUT_SECONDS = new GroupProperty(config, PROP_CLIENT_MAX_NO_HEARTBEAT_SECONDS, \"60\");\n    }","commit_id":"45fcd4f75eebdc44be5fa0b57136bd8274ac8a59","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private int getMaxCleanupOperationCountInOneRound() {\n            final int times = 3;\n            return times * ExpirationManager.this.nodeEngine.getOperationService().getPartitionOperationThreadCount();\n        }","id":48694,"modified_method":"private int getMaxCleanupOperationCountInOneRound() {\n            final int times = 3;\n            InternalOperationService opService\n                    = (InternalOperationService) ExpirationManager.this.nodeEngine.getOperationService();\n            return times * opService.getPartitionOperationThreadCount();\n        }","commit_id":"46c0a6dd194de36007bef0af4bb2ae9b033d2085","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected InstanceMBean(HazelcastInstanceImpl hazelcastInstance, ManagementService managementService) {\n        super(hazelcastInstance, managementService);\n        createProperties(hazelcastInstance);\n        config = hazelcastInstance.getConfig();\n        cluster = hazelcastInstance.getCluster();\n        Node node = hazelcastInstance.node;\n        ExecutionService executionService = node.nodeEngine.getExecutionService();\n        OperationService operationService = node.nodeEngine.getOperationService();\n        createMBeans(hazelcastInstance, managementService, node, executionService, operationService);\n        registerMBeans();\n    }","id":48695,"modified_method":"protected InstanceMBean(HazelcastInstanceImpl hazelcastInstance, ManagementService managementService) {\n        super(hazelcastInstance, managementService);\n        createProperties(hazelcastInstance);\n        config = hazelcastInstance.getConfig();\n        cluster = hazelcastInstance.getCluster();\n        Node node = hazelcastInstance.node;\n        ExecutionService executionService = node.nodeEngine.getExecutionService();\n        InternalOperationService operationService = node.nodeEngine.getOperationService();\n        createMBeans(hazelcastInstance, managementService, node, executionService, operationService);\n        registerMBeans();\n    }","commit_id":"46c0a6dd194de36007bef0af4bb2ae9b033d2085","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private void createMBeans(HazelcastInstanceImpl hazelcastInstance, ManagementService managementService, Node node,\n                              ExecutionService executionService, OperationService operationService) {\n        nodeMBean = new NodeMBean(hazelcastInstance, node, managementService);\n        connectionManagerMBean = new ConnectionManagerMBean(hazelcastInstance, node.connectionManager, service);\n        eventServiceMBean = new EventServiceMBean(hazelcastInstance, node.nodeEngine.getEventService(), service);\n        operationServiceMBean = new OperationServiceMBean(hazelcastInstance, operationService, service);\n        proxyServiceMBean = new ProxyServiceMBean(hazelcastInstance, node.nodeEngine.getProxyService(), service);\n        partitionServiceMBean = new PartitionServiceMBean(hazelcastInstance, node.partitionService, service);\n        clientEngineMBean = new ClientEngineMBean(hazelcastInstance, node.clientEngine, service);\n        systemExecutorMBean = new ManagedExecutorServiceMBean(\n                hazelcastInstance, executionService.getExecutor(ExecutionService.SYSTEM_EXECUTOR), service);\n        asyncExecutorMBean = new ManagedExecutorServiceMBean(\n                hazelcastInstance, executionService.getExecutor(ExecutionService.ASYNC_EXECUTOR), service);\n        scheduledExecutorMBean = new ManagedExecutorServiceMBean(\n                hazelcastInstance, executionService.getExecutor(ExecutionService.SCHEDULED_EXECUTOR), service);\n        clientExecutorMBean = new ManagedExecutorServiceMBean(\n                hazelcastInstance, executionService.getExecutor(ExecutionService.CLIENT_EXECUTOR), service);\n        queryExecutorMBean = new ManagedExecutorServiceMBean(\n                hazelcastInstance, executionService.getExecutor(ExecutionService.QUERY_EXECUTOR), service);\n        ioExecutorMBean = new ManagedExecutorServiceMBean(\n                hazelcastInstance, executionService.getExecutor(ExecutionService.IO_EXECUTOR), service);\n    }","id":48696,"modified_method":"private void createMBeans(HazelcastInstanceImpl hazelcastInstance, ManagementService managementService, Node node,\n                              ExecutionService executionService, InternalOperationService operationService) {\n        nodeMBean = new NodeMBean(hazelcastInstance, node, managementService);\n        connectionManagerMBean = new ConnectionManagerMBean(hazelcastInstance, node.connectionManager, service);\n        eventServiceMBean = new EventServiceMBean(hazelcastInstance, node.nodeEngine.getEventService(), service);\n        operationServiceMBean = new OperationServiceMBean(hazelcastInstance, operationService, service);\n        proxyServiceMBean = new ProxyServiceMBean(hazelcastInstance, node.nodeEngine.getProxyService(), service);\n        partitionServiceMBean = new PartitionServiceMBean(hazelcastInstance, node.partitionService, service);\n        clientEngineMBean = new ClientEngineMBean(hazelcastInstance, node.clientEngine, service);\n        systemExecutorMBean = new ManagedExecutorServiceMBean(\n                hazelcastInstance, executionService.getExecutor(ExecutionService.SYSTEM_EXECUTOR), service);\n        asyncExecutorMBean = new ManagedExecutorServiceMBean(\n                hazelcastInstance, executionService.getExecutor(ExecutionService.ASYNC_EXECUTOR), service);\n        scheduledExecutorMBean = new ManagedExecutorServiceMBean(\n                hazelcastInstance, executionService.getExecutor(ExecutionService.SCHEDULED_EXECUTOR), service);\n        clientExecutorMBean = new ManagedExecutorServiceMBean(\n                hazelcastInstance, executionService.getExecutor(ExecutionService.CLIENT_EXECUTOR), service);\n        queryExecutorMBean = new ManagedExecutorServiceMBean(\n                hazelcastInstance, executionService.getExecutor(ExecutionService.QUERY_EXECUTOR), service);\n        ioExecutorMBean = new ManagedExecutorServiceMBean(\n                hazelcastInstance, executionService.getExecutor(ExecutionService.IO_EXECUTOR), service);\n    }","commit_id":"46c0a6dd194de36007bef0af4bb2ae9b033d2085","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public OperationServiceDTO(OperationService os) {\n        responseQueueSize = os.getResponseQueueSize();\n        operationExecutorQueueSize = os.getOperationExecutorQueueSize();\n        runningOperationsCount = os.getRunningOperationsCount();\n        remoteOperationCount = os.getRemoteOperationsCount();\n        executedOperationCount = os.getExecutedOperationCount();\n        operationThreadCount = os.getPartitionOperationThreadCount();\n    }","id":48697,"modified_method":"public OperationServiceDTO(InternalOperationService os) {\n        responseQueueSize = os.getResponseQueueSize();\n        operationExecutorQueueSize = os.getOperationExecutorQueueSize();\n        runningOperationsCount = os.getRunningOperationsCount();\n        remoteOperationCount = os.getRemoteOperationsCount();\n        executedOperationCount = os.getExecutedOperationCount();\n        operationThreadCount = os.getPartitionOperationThreadCount();\n    }","commit_id":"46c0a6dd194de36007bef0af4bb2ae9b033d2085","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public OperationServiceMBean(HazelcastInstance hazelcastInstance, OperationService operationService,\n                                 ManagementService service) {\n        super(operationService, service);\n\n        Hashtable<String, String> properties = new Hashtable<String, String>(INITIAL_CAPACITY);\n        properties.put(\"type\", quote(\"HazelcastInstance.OperationService\"));\n        properties.put(\"name\", quote(\"operationService\" + hazelcastInstance.getName()));\n        properties.put(\"instance\", quote(hazelcastInstance.getName()));\n\n        setObjectName(properties);\n    }","id":48698,"modified_method":"public OperationServiceMBean(HazelcastInstance hazelcastInstance, InternalOperationService operationService,\n                                 ManagementService service) {\n        super(operationService, service);\n\n        Hashtable<String, String> properties = new Hashtable<String, String>(INITIAL_CAPACITY);\n        properties.put(\"type\", quote(\"HazelcastInstance.OperationService\"));\n        properties.put(\"name\", quote(\"operationService\" + hazelcastInstance.getName()));\n        properties.put(\"instance\", quote(hazelcastInstance.getName()));\n\n        setObjectName(properties);\n    }","commit_id":"46c0a6dd194de36007bef0af4bb2ae9b033d2085","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"static void registerJMXBeans(HazelcastInstanceImpl instance, MemberStateImpl memberState) {\n        final EventService es = instance.node.nodeEngine.getEventService();\n        final OperationService os = instance.node.nodeEngine.getOperationService();\n        final ConnectionManager cm = instance.node.connectionManager;\n        final InternalPartitionService ps = instance.node.partitionService;\n        final ProxyService proxyService = instance.node.nodeEngine.getProxyService();\n        final ExecutionService executionService = instance.node.nodeEngine.getExecutionService();\n\n        final MXBeansDTO beans = new MXBeansDTO();\n        final EventServiceDTO esBean = new EventServiceDTO(es);\n        beans.setEventServiceBean(esBean);\n        final OperationServiceDTO osBean = new OperationServiceDTO(os);\n        beans.setOperationServiceBean(osBean);\n        final ConnectionManagerDTO cmBean = new ConnectionManagerDTO(cm);\n        beans.setConnectionManagerBean(cmBean);\n        final PartitionServiceBeanDTO psBean = new PartitionServiceBeanDTO(ps, instance);\n        beans.setPartitionServiceBean(psBean);\n        final ProxyServiceDTO proxyServiceBean = new ProxyServiceDTO(proxyService);\n        beans.setProxyServiceBean(proxyServiceBean);\n\n        final ManagedExecutorService systemExecutor = executionService.getExecutor(ExecutionService.SYSTEM_EXECUTOR);\n        final ManagedExecutorService asyncExecutor = executionService.getExecutor(ExecutionService.ASYNC_EXECUTOR);\n        final ManagedExecutorService scheduledExecutor = executionService.getExecutor(ExecutionService.SCHEDULED_EXECUTOR);\n        final ManagedExecutorService clientExecutor = executionService.getExecutor(ExecutionService.CLIENT_EXECUTOR);\n        final ManagedExecutorService queryExecutor = executionService.getExecutor(ExecutionService.QUERY_EXECUTOR);\n        final ManagedExecutorService ioExecutor = executionService.getExecutor(ExecutionService.IO_EXECUTOR);\n\n        final ManagedExecutorDTO systemExecutorDTO = new ManagedExecutorDTO(systemExecutor);\n        final ManagedExecutorDTO asyncExecutorDTO = new ManagedExecutorDTO(asyncExecutor);\n        final ManagedExecutorDTO scheduledExecutorDTO = new ManagedExecutorDTO(scheduledExecutor);\n        final ManagedExecutorDTO clientExecutorDTO = new ManagedExecutorDTO(clientExecutor);\n        final ManagedExecutorDTO queryExecutorDTO = new ManagedExecutorDTO(queryExecutor);\n        final ManagedExecutorDTO ioExecutorDTO = new ManagedExecutorDTO(ioExecutor);\n\n        beans.putManagedExecutor(ExecutionService.SYSTEM_EXECUTOR, systemExecutorDTO);\n        beans.putManagedExecutor(ExecutionService.ASYNC_EXECUTOR, asyncExecutorDTO);\n        beans.putManagedExecutor(ExecutionService.SCHEDULED_EXECUTOR, scheduledExecutorDTO);\n        beans.putManagedExecutor(ExecutionService.CLIENT_EXECUTOR, clientExecutorDTO);\n        beans.putManagedExecutor(ExecutionService.QUERY_EXECUTOR, queryExecutorDTO);\n        beans.putManagedExecutor(ExecutionService.IO_EXECUTOR, ioExecutorDTO);\n        memberState.setBeans(beans);\n    }","id":48699,"modified_method":"static void registerJMXBeans(HazelcastInstanceImpl instance, MemberStateImpl memberState) {\n        final EventService es = instance.node.nodeEngine.getEventService();\n        final InternalOperationService os = instance.node.nodeEngine.getOperationService();\n        final ConnectionManager cm = instance.node.connectionManager;\n        final InternalPartitionService ps = instance.node.partitionService;\n        final ProxyService proxyService = instance.node.nodeEngine.getProxyService();\n        final ExecutionService executionService = instance.node.nodeEngine.getExecutionService();\n\n        final MXBeansDTO beans = new MXBeansDTO();\n        final EventServiceDTO esBean = new EventServiceDTO(es);\n        beans.setEventServiceBean(esBean);\n        final OperationServiceDTO osBean = new OperationServiceDTO(os);\n        beans.setOperationServiceBean(osBean);\n        final ConnectionManagerDTO cmBean = new ConnectionManagerDTO(cm);\n        beans.setConnectionManagerBean(cmBean);\n        final PartitionServiceBeanDTO psBean = new PartitionServiceBeanDTO(ps, instance);\n        beans.setPartitionServiceBean(psBean);\n        final ProxyServiceDTO proxyServiceBean = new ProxyServiceDTO(proxyService);\n        beans.setProxyServiceBean(proxyServiceBean);\n\n        final ManagedExecutorService systemExecutor = executionService.getExecutor(ExecutionService.SYSTEM_EXECUTOR);\n        final ManagedExecutorService asyncExecutor = executionService.getExecutor(ExecutionService.ASYNC_EXECUTOR);\n        final ManagedExecutorService scheduledExecutor = executionService.getExecutor(ExecutionService.SCHEDULED_EXECUTOR);\n        final ManagedExecutorService clientExecutor = executionService.getExecutor(ExecutionService.CLIENT_EXECUTOR);\n        final ManagedExecutorService queryExecutor = executionService.getExecutor(ExecutionService.QUERY_EXECUTOR);\n        final ManagedExecutorService ioExecutor = executionService.getExecutor(ExecutionService.IO_EXECUTOR);\n\n        final ManagedExecutorDTO systemExecutorDTO = new ManagedExecutorDTO(systemExecutor);\n        final ManagedExecutorDTO asyncExecutorDTO = new ManagedExecutorDTO(asyncExecutor);\n        final ManagedExecutorDTO scheduledExecutorDTO = new ManagedExecutorDTO(scheduledExecutor);\n        final ManagedExecutorDTO clientExecutorDTO = new ManagedExecutorDTO(clientExecutor);\n        final ManagedExecutorDTO queryExecutorDTO = new ManagedExecutorDTO(queryExecutor);\n        final ManagedExecutorDTO ioExecutorDTO = new ManagedExecutorDTO(ioExecutor);\n\n        beans.putManagedExecutor(ExecutionService.SYSTEM_EXECUTOR, systemExecutorDTO);\n        beans.putManagedExecutor(ExecutionService.ASYNC_EXECUTOR, asyncExecutorDTO);\n        beans.putManagedExecutor(ExecutionService.SCHEDULED_EXECUTOR, scheduledExecutorDTO);\n        beans.putManagedExecutor(ExecutionService.CLIENT_EXECUTOR, clientExecutorDTO);\n        beans.putManagedExecutor(ExecutionService.QUERY_EXECUTOR, queryExecutorDTO);\n        beans.putManagedExecutor(ExecutionService.IO_EXECUTOR, ioExecutorDTO);\n        memberState.setBeans(beans);\n    }","commit_id":"46c0a6dd194de36007bef0af4bb2ae9b033d2085","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void afterRun() throws Exception {\n        if (!valid || !sync || getCallId() == 0 || originalCaller == null) {\n            return;\n        }\n\n        NodeEngineImpl nodeEngine = (NodeEngineImpl) getNodeEngine();\n        long callId = getCallId();\n        InternalOperationService operationService = nodeEngine.getOperationService();\n\n        if (nodeEngine.getThisAddress().equals(originalCaller)) {\n            operationService.notifyBackupCall(callId);\n        } else {\n            BackupResponse backupResponse = new BackupResponse(callId, backupOp.isUrgent());\n            operationService.send(backupResponse, originalCaller);\n        }\n    }","id":48700,"modified_method":"@Override\n    public void afterRun() throws Exception {\n        if (!valid || !sync || getCallId() == 0 || originalCaller == null) {\n            return;\n        }\n\n        NodeEngineImpl nodeEngine = (NodeEngineImpl) getNodeEngine();\n        long callId = getCallId();\n        OperationServiceImpl operationService = (OperationServiceImpl) nodeEngine.getOperationService();\n\n        if (nodeEngine.getThisAddress().equals(originalCaller)) {\n            operationService.notifyBackupCall(callId);\n        } else {\n            BackupResponse backupResponse = new BackupResponse(callId, backupOp.isUrgent());\n            operationService.send(backupResponse, originalCaller);\n        }\n    }","commit_id":"1545873828058a174dd7026030e654c2a6a3fd0f","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void run() throws Exception {\n        NodeEngineImpl nodeEngine = (NodeEngineImpl) getNodeEngine();\n        InternalOperationService operationService = nodeEngine.getOperationService();\n        boolean executing = operationService.isOperationExecuting(getCallerAddress(), getPartitionId(), operationCallId);\n        getResponseHandler().sendResponse(executing);\n    }","id":48701,"modified_method":"@Override\n    public void run() throws Exception {\n        NodeEngineImpl nodeEngine = (NodeEngineImpl) getNodeEngine();\n        OperationServiceImpl operationService = (OperationServiceImpl) nodeEngine.getOperationService();\n        boolean executing = operationService.isOperationExecuting(getCallerAddress(), getPartitionId(), operationCallId);\n        getResponseHandler().sendResponse(executing);\n    }","commit_id":"1545873828058a174dd7026030e654c2a6a3fd0f","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public NodeEngineImpl(Node node) {\n        this.node = node;\n        this.logger = node.getLogger(NodeEngine.class.getName());\n        this.proxyService = new ProxyServiceImpl(this);\n        this.serviceManager = new ServiceManager(this);\n        this.executionService = new ExecutionServiceImpl(this);\n        this.operationService = new BasicOperationService(this);\n        this.eventService = new EventServiceImpl(this);\n        this.waitNotifyService = new WaitNotifyServiceImpl(this);\n        this.transactionManagerService = new TransactionManagerServiceImpl(this);\n        this.wanReplicationService = node.getNodeExtension().createService(WanReplicationService.class);\n        this.packetTransceiver = new PacketTransceiverImpl(\n                node, logger, operationService, eventService, wanReplicationService, executionService);\n    }","id":48702,"modified_method":"public NodeEngineImpl(Node node) {\n        this.node = node;\n        this.logger = node.getLogger(NodeEngine.class.getName());\n        this.proxyService = new ProxyServiceImpl(this);\n        this.serviceManager = new ServiceManager(this);\n        this.executionService = new ExecutionServiceImpl(this);\n        this.operationService = new OperationServiceImpl(this);\n        this.eventService = new EventServiceImpl(this);\n        this.waitNotifyService = new WaitNotifyServiceImpl(this);\n        this.transactionManagerService = new TransactionManagerServiceImpl(this);\n        this.wanReplicationService = node.getNodeExtension().createService(WanReplicationService.class);\n        this.packetTransceiver = new PacketTransceiverImpl(\n                node, logger, operationService, eventService, wanReplicationService, executionService);\n    }","commit_id":"1545873828058a174dd7026030e654c2a6a3fd0f","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public void run() throws Exception {\n        final NodeEngine nodeEngine = getNodeEngine();\n        results = new HashMap<Integer, Object>(partitions.size());\n        try {\n            Map<Integer, ResponseQueue> responses = new HashMap<Integer, ResponseQueue>(partitions.size());\n            for (final int partitionId : partitions) {\n                ResponseQueue responseQueue = new ResponseQueue();\n                final Operation op = operationFactory.createOperation();\n                op.setNodeEngine(nodeEngine)\n                        .setPartitionId(partitionId)\n                        .setReplicaIndex(getReplicaIndex())\n                        .setResponseHandler(responseQueue)\n                        .setServiceName(getServiceName())\n                        .setService(getService())\n                        .setCallerUuid(getCallerUuid());\n                OperationAccessor.setCallerAddress(op, getCallerAddress());\n                responses.put(partitionId, responseQueue);\n                nodeEngine.getOperationService().executeOperation(op);\n            }\n            for (Map.Entry<Integer, ResponseQueue> responseQueueEntry : responses.entrySet()) {\n                final ResponseQueue queue = responseQueueEntry.getValue();\n                final Integer key = responseQueueEntry.getKey();\n                final Object result = queue.get();\n                if (result instanceof NormalResponse) {\n                    results.put(key, ((NormalResponse) result).getValue());\n                } else {\n                    results.put(key, result);\n                }\n            }\n        } catch (Exception e) {\n            getLogger(nodeEngine).severe(e);\n        }\n    }","id":48703,"modified_method":"@Override\n    public void run() throws Exception {\n        results = new HashMap<Integer, Object>(partitions.size());\n        try {\n            Map<Integer, ResponseQueue> responses = executeOperations();\n            getResults(responses);\n        } catch (Exception e) {\n            getLogger(getNodeEngine()).severe(e);\n        }\n    }","commit_id":"1545873828058a174dd7026030e654c2a6a3fd0f","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Test\n    public void testPurging_SlowOperationLog() {\n        Config config = new Config();\n        config.setProperty(GroupProperties.PROP_SLOW_OPERATION_DETECTOR_THRESHOLD_MILLIS, \"1000\");\n        config.setProperty(GroupProperties.PROP_SLOW_OPERATION_DETECTOR_LOG_RETENTION_SECONDS, \"2\");\n        config.setProperty(GroupProperties.PROP_SLOW_OPERATION_DETECTOR_LOG_PURGE_INTERVAL_SECONDS, \"1\");\n\n        HazelcastInstance instance = getSingleNodeCluster(config);\n        IMap<String, String> map = getMapWithSingleElement(instance);\n\n        // all of these entry processors are executed after each other, not in parallel\n        // so none of them will survive the purging\n        for (int i = 0; i < 2; i++) {\n            map.executeOnEntries(new SlowEntryProcessor(2));\n        }\n        sleepSeconds(3);\n\n        BasicOperationService operationService = (BasicOperationService) getInternalOperationService(instance);\n        operationService.shutdown();\n\n        Collection<SlowOperationLog> logs = getSlowOperationLogs(instance);\n        assertNumberOfSlowOperationLogs(logs, 0);\n    }","id":48704,"modified_method":"@Test\n    public void testPurging_SlowOperationLog() {\n        Config config = new Config();\n        config.setProperty(GroupProperties.PROP_SLOW_OPERATION_DETECTOR_THRESHOLD_MILLIS, \"1000\");\n        config.setProperty(GroupProperties.PROP_SLOW_OPERATION_DETECTOR_LOG_RETENTION_SECONDS, \"2\");\n        config.setProperty(GroupProperties.PROP_SLOW_OPERATION_DETECTOR_LOG_PURGE_INTERVAL_SECONDS, \"1\");\n\n        HazelcastInstance instance = getSingleNodeCluster(config);\n        IMap<String, String> map = getMapWithSingleElement(instance);\n\n        // all of these entry processors are executed after each other, not in parallel\n        // so none of them will survive the purging\n        for (int i = 0; i < 2; i++) {\n            map.executeOnEntries(new SlowEntryProcessor(2));\n        }\n        sleepSeconds(3);\n\n        OperationServiceImpl operationService = (OperationServiceImpl) getInternalOperationService(instance);\n        operationService.shutdown();\n\n        Collection<SlowOperationLog> logs = getSlowOperationLogs(instance);\n        assertNumberOfSlowOperationLogs(logs, 0);\n    }","commit_id":"1545873828058a174dd7026030e654c2a6a3fd0f","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Test\n    public void testPurging_Invocation() {\n        Config config = new Config();\n        config.setProperty(GroupProperties.PROP_SLOW_OPERATION_DETECTOR_THRESHOLD_MILLIS, \"1000\");\n        config.setProperty(GroupProperties.PROP_SLOW_OPERATION_DETECTOR_LOG_RETENTION_SECONDS, \"3\");\n        config.setProperty(GroupProperties.PROP_SLOW_OPERATION_DETECTOR_LOG_PURGE_INTERVAL_SECONDS, \"1\");\n\n        HazelcastInstance instance = getSingleNodeCluster(config);\n        IMap<String, String> map = getMapWithSingleElement(instance);\n\n        // all of these entry processors are executed after each other, not in parallel\n        // so only the last one will survive the purging\n        for (int i = 0; i < 2; i++) {\n            map.executeOnEntries(new SlowEntryProcessor(2));\n        }\n        map.executeOnEntries(new SlowEntryProcessor(3));\n        map.executeOnEntries(new SlowEntryProcessor(2));\n\n        BasicOperationService operationService = (BasicOperationService) getInternalOperationService(instance);\n        operationService.shutdown();\n\n        Collection<SlowOperationLog> logs = getSlowOperationLogs(instance);\n        assertNumberOfSlowOperationLogs(logs, 1);\n\n        SlowOperationLog firstLog = logs.iterator().next();\n        assertTotalInvocations(firstLog, 4);\n        assertEntryProcessorOperation(firstLog);\n        assertStackTraceContainsClassName(firstLog, \"SlowEntryProcessor\");\n\n        Collection<SlowOperationLog.Invocation> invocations = getInvocations(firstLog);\n        assertEqualsStringFormat(\"Expected %d invocations, but was %d\", 2, invocations.size());\n        for (SlowOperationLog.Invocation invocation : invocations) {\n            assertInvocationDurationBetween(invocation, 1000, 3500);\n        }\n    }","id":48705,"modified_method":"@Test\n    public void testPurging_Invocation() {\n        Config config = new Config();\n        config.setProperty(GroupProperties.PROP_SLOW_OPERATION_DETECTOR_THRESHOLD_MILLIS, \"1000\");\n        config.setProperty(GroupProperties.PROP_SLOW_OPERATION_DETECTOR_LOG_RETENTION_SECONDS, \"3\");\n        config.setProperty(GroupProperties.PROP_SLOW_OPERATION_DETECTOR_LOG_PURGE_INTERVAL_SECONDS, \"1\");\n\n        HazelcastInstance instance = getSingleNodeCluster(config);\n        IMap<String, String> map = getMapWithSingleElement(instance);\n\n        // all of these entry processors are executed after each other, not in parallel\n        // so only the last one will survive the purging\n        for (int i = 0; i < 2; i++) {\n            map.executeOnEntries(new SlowEntryProcessor(2));\n        }\n        map.executeOnEntries(new SlowEntryProcessor(3));\n        map.executeOnEntries(new SlowEntryProcessor(2));\n\n        OperationServiceImpl operationService = (OperationServiceImpl) getInternalOperationService(instance);\n        operationService.shutdown();\n\n        Collection<SlowOperationLog> logs = getSlowOperationLogs(instance);\n        assertNumberOfSlowOperationLogs(logs, 1);\n\n        SlowOperationLog firstLog = logs.iterator().next();\n        assertTotalInvocations(firstLog, 4);\n        assertEntryProcessorOperation(firstLog);\n        assertStackTraceContainsClassName(firstLog, \"SlowEntryProcessor\");\n\n        Collection<SlowOperationLog.Invocation> invocations = getInvocations(firstLog);\n        assertEqualsStringFormat(\"Expected %d invocations, but was %d\", 2, invocations.size());\n        for (SlowOperationLog.Invocation invocation : invocations) {\n            assertInvocationDurationBetween(invocation, 1000, 3500);\n        }\n    }","commit_id":"1545873828058a174dd7026030e654c2a6a3fd0f","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void run() throws Exception {\n        NodeEngineImpl nodeEngine = (NodeEngineImpl) getNodeEngine();\n        InternalOperationService operationService =  nodeEngine.getOperationService();\n        boolean executing = operationService.isOperationExecuting(getCallerAddress(), getCallerUuid(),\n                serviceName, identifier);\n        getResponseHandler().sendResponse(executing);\n    }","id":48706,"modified_method":"@Override\n    public void run() throws Exception {\n        NodeEngineImpl nodeEngine = (NodeEngineImpl) getNodeEngine();\n        OperationServiceImpl operationService = (OperationServiceImpl) nodeEngine.getOperationService();\n        boolean executing = operationService.isOperationExecuting(getCallerAddress(), getCallerUuid(),\n                serviceName, identifier);\n        getResponseHandler().sendResponse(executing);\n    }","commit_id":"1545873828058a174dd7026030e654c2a6a3fd0f","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"void writeTrainingData() {\n        PrintStream dinuc_out = null;\n        PrintStream table_out = null;\n        try {\n            dinuc_out = new PrintStream( OUTPUT_FILEROOT+\".covariate_counts.csv\");\n            dinuc_out.println(\"rg,dn,logitQ,pos,indicator,count\");\n            for (SAMReadGroupRecord readGroup : this.getToolkit().getEngine().getSAMHeader().getReadGroups()) {\n                for ( int dinuc_index=0; dinuc_index<NDINUCS; dinuc_index++) {\n                    for ( RecalData datum: getRecalData(readGroup.getReadGroupId()) ) {\n                        if ( RecalData.string2dinucIndex(datum.dinuc) == dinuc_index ) {\n                            if ((datum.N - datum.B) > 0)\n                                dinuc_out.format(\"%s,%s,%d,%d,%d,%d%n\", readGroup.getReadGroupId(), RecalData.dinucIndex2bases(dinuc_index), datum.qual, datum.pos, 0, datum.N - datum.B);\n                            if (datum.B > 0)\n                                dinuc_out.format(\"%s,%s,%d,%d,%d,%d%n\", readGroup.getReadGroupId(), RecalData.dinucIndex2bases(dinuc_index), datum.qual, datum.pos, 1, datum.B);\n                        }\n                    }\n                }\n            }\n\n            if ( outputRawData ) {\n                table_out = new PrintStream( OUTPUT_FILEROOT+\".raw_data.csv\");\n                printInfo(table_out);\n                table_out.println(\"rg,dn,Qrep,pos,NBases,MMismatches\");\n                for (SAMReadGroupRecord readGroup : this.getToolkit().getEngine().getSAMHeader().getReadGroups()) {\n                    for ( RecalData datum: getRecalData(readGroup.getReadGroupId()) ) {\n                        if ( datum.N > 0 )\n                            table_out.format(\"%s%n\", datum.toCSVString(collapsePos));\n                    }\n                }\n            }\n        }\n        catch (FileNotFoundException e) {\n            System.err.println(\"FileNotFoundException: \" + e.getMessage());\n            return;\n        }\n        finally {\n            if (dinuc_out != null) dinuc_out.close();\n            if (table_out != null) table_out.close();\n        }\n\n    }","id":48707,"modified_method":"private void writeTrainingData() {\n        PrintStream dinuc_out = null;\n        PrintStream table_out = null;\n        try {\n            dinuc_out = new PrintStream( OUTPUT_FILEROOT+\".covariate_counts.csv\");\n            dinuc_out.println(\"rg,dn,logitQ,pos,indicator,count\");\n            for (SAMReadGroupRecord readGroup : this.getToolkit().getEngine().getSAMHeader().getReadGroups()) {\n                for ( int dinuc_index=0; dinuc_index<RecalData.NDINUCS; dinuc_index++) {\n                    for ( RecalData datum: getRecalData(readGroup.getReadGroupId()) ) {\n                        if ( RecalData.dinucIndex(datum.dinuc) == dinuc_index ) {\n                            if ((datum.N - datum.B) > 0)\n                                dinuc_out.format(\"%s,%s,%d,%d,%d,%d%n\", readGroup.getReadGroupId(), RecalData.dinucIndex2bases(dinuc_index), datum.qual, datum.pos, 0, datum.N - datum.B);\n                            if (datum.B > 0)\n                                dinuc_out.format(\"%s,%s,%d,%d,%d,%d%n\", readGroup.getReadGroupId(), RecalData.dinucIndex2bases(dinuc_index), datum.qual, datum.pos, 1, datum.B);\n                        }\n                    }\n                }\n            }\n\n            if ( outputRawData ) {\n                table_out = new PrintStream( OUTPUT_FILEROOT+\".raw_data.csv\");\n                printInfo(table_out);\n                table_out.println(\"rg,dn,Qrep,pos,NBases,MMismatches,Qemp\");\n                for (SAMReadGroupRecord readGroup : this.getToolkit().getEngine().getSAMHeader().getReadGroups()) {\n                    for ( RecalData datum: getRecalData(readGroup.getReadGroupId()) ) {\n                        if ( datum.N > 0 )\n                            table_out.format(\"%s%n\", datum.toCSVString(collapsePos));\n                    }\n                }\n            }\n        }\n        catch (FileNotFoundException e) {\n            System.err.println(\"FileNotFoundException: \" + e.getMessage());\n            return;\n        }\n        finally {\n            if (dinuc_out != null) dinuc_out.close();\n            if (table_out != null) table_out.close();\n        }\n\n    }","commit_id":"ca8a3bd85ed960a1b62d03fcbb8712301c6372d0","url":"https://github.com/broadgsa/gatk"},{"original_method":"public void qualityDiffVsDinucleotide() {\n        for (SAMReadGroupRecord readGroup : this.getToolkit().getEngine().getSAMHeader().getReadGroups()) {\n            PrintStream ByDinucFile = null;\n            try {\n                ByDinucFile = new PrintStream(OUTPUT_FILEROOT+\".RG_\"+readGroup.getReadGroupId()+\".quality_difference_v_dinucleotide.csv\");\n            } catch (FileNotFoundException e){\n                System.out.println(\"Could not open output files based on OUTPUT_FILEROOT option: \" + OUTPUT_FILEROOT);\n                System.exit(1);\n            }\n            ArrayList<RecalData> ByCycle = new ArrayList<RecalData>();\n            ArrayList<MeanReportedQuality> ByCycleReportedQ = new ArrayList<MeanReportedQuality>();\n            ByDinucFile.printf(\"dinuc,Qemp-obs,Qemp,Qobs,B,N%n\");\n            RecalData All = new RecalData(0,0,readGroup.getReadGroupId(),\"\");\n            MeanReportedQuality AllReported = new MeanReportedQuality();\n            for (int c=0; c < NDINUCS; c++) {\n                ByCycle.add(new RecalData(-1, -1,readGroup.getReadGroupId(),RecalData.dinucIndex2bases(c)));\n                ByCycleReportedQ.add(new MeanReportedQuality());\n            }\n\n            for ( RecalData datum: getRecalData(readGroup.getReadGroupId()) ) {\n                int dinucIndex = RecalData.string2dinucIndex(datum.dinuc); //bases2dinucIndex(datum.dinuc.charAt(0), datum.dinuc.charAt(1), false);\n                ByCycle.get(dinucIndex).inc(datum.N, datum.B);\n                ByCycleReportedQ.get(dinucIndex).inc(datum.qual, datum.N);\n                All.inc(datum.N, datum.B);\n                AllReported.inc(datum.qual, datum.N);\n            }\n\n            for (int c=0; c < NDINUCS; c++) {\n                double empiricalQual = -10 * Math.log10((double)ByCycle.get(c).B / ByCycle.get(c).N);\n                double reportedQual = ByCycleReportedQ.get(c).result();\n                ByDinucFile.printf(\"%s, %f, %f, %f, %d, %d%n\", ByCycle.get(c).dinuc, empiricalQual-reportedQual, empiricalQual, reportedQual, ByCycle.get(c).B, ByCycle.get(c).N);\n            }\n        }\n        //System.out.printf(\"Dinuc: N=%d, B=%d, Qemp=%.1f, \", All.N, All.B, -10 * Math.log10((double)All.B/All.N));\n        //System.out.printf(\"Qrep=%.1f%n\", AllReported.result());\n    }","id":48708,"modified_method":"public void qualityDiffVsDinucleotide() {\n        for (SAMReadGroupRecord readGroup : this.getToolkit().getEngine().getSAMHeader().getReadGroups()) {\n            PrintStream ByDinucFile = null;\n            try {\n                ByDinucFile = new PrintStream(OUTPUT_FILEROOT+\".RG_\"+readGroup.getReadGroupId()+\".quality_difference_v_dinucleotide.csv\");\n            } catch (FileNotFoundException e){\n                System.out.println(\"Could not open output files based on OUTPUT_FILEROOT option: \" + OUTPUT_FILEROOT);\n                System.exit(1);\n            }\n            ArrayList<RecalData> ByCycle = new ArrayList<RecalData>();\n            ArrayList<MeanReportedQuality> ByCycleReportedQ = new ArrayList<MeanReportedQuality>();\n            ByDinucFile.printf(\"dinuc,Qemp-obs,Qemp,Qobs,B,N%n\");\n            RecalData All = new RecalData(0,0,readGroup.getReadGroupId(),\"\");\n            MeanReportedQuality AllReported = new MeanReportedQuality();\n            for (int c=0; c < RecalData.NDINUCS; c++) {\n                ByCycle.add(new RecalData(-1, -1,readGroup.getReadGroupId(),RecalData.dinucIndex2bases(c)));\n                ByCycleReportedQ.add(new MeanReportedQuality());\n            }\n\n            for ( RecalData datum: getRecalData(readGroup.getReadGroupId()) ) {\n                int dinucIndex = RecalData.dinucIndex(datum.dinuc); //bases2dinucIndex(datum.dinuc.charAt(0), datum.dinuc.charAt(1), false);\n                ByCycle.get(dinucIndex).inc(datum.N, datum.B);\n                ByCycleReportedQ.get(dinucIndex).inc(datum.qual, datum.N);\n                All.inc(datum.N, datum.B);\n                AllReported.inc(datum.qual, datum.N);\n            }\n\n            for (int c=0; c < RecalData.NDINUCS; c++) {\n                double empiricalQual = -10 * Math.log10((double)ByCycle.get(c).B / ByCycle.get(c).N);\n                double reportedQual = ByCycleReportedQ.get(c).result();\n                ByDinucFile.printf(\"%s, %f, %f, %f, %d, %d%n\", ByCycle.get(c).dinuc, empiricalQual-reportedQual, empiricalQual, reportedQual, ByCycle.get(c).B, ByCycle.get(c).N);\n            }\n        }\n        //System.out.printf(\"Dinuc: N=%d, B=%d, Qemp=%.1f, \", All.N, All.B, -10 * Math.log10((double)All.B/All.N));\n        //System.out.printf(\"Qrep=%.1f%n\", AllReported.result());\n    }","commit_id":"ca8a3bd85ed960a1b62d03fcbb8712301c6372d0","url":"https://github.com/broadgsa/gatk"},{"original_method":"public void initialize() {\n        if( getToolkit().getEngine().getSAMHeader().getReadGroups().size() > MAX_READ_GROUPS )\n            Utils.scareUser(\"Number of read groups in the specified file exceeds the number that can be processed in a reasonable amount of memory.\" +\n                            \"To override this limit, use the --MAX_READ_GROUPS (-mrg) parameter\");\n\n        for (SAMReadGroupRecord readGroup : this.getToolkit().getEngine().getSAMHeader().getReadGroups()) {\n            if( readGroup.getAttribute(\"PL\") == null )\n                Utils.warnUser(String.format(\"PL attribute for read group %s is unset; assuming all reads are supported\",readGroup.getReadGroupId()));\n            if( !isSupportedReadGroup(readGroup) )\n                continue;\n            String rg = readGroup.getReadGroupId();\n            RecalDataManager manager = new RecalDataManager(rg, maxReadLen, QualityUtils.MAX_QUAL_SCORE+1, NDINUCS, ! collapsePos, ! collapseDinuc );\n            data.put(rg, manager);\n        }\n    }","id":48709,"modified_method":"public void initialize() {\n        if( getToolkit().getEngine().getSAMHeader().getReadGroups().size() > MAX_READ_GROUPS )\n            Utils.scareUser(\"Number of read groups in the specified file exceeds the number that can be processed in a reasonable amount of memory.\" +\n                            \"To override this limit, use the --MAX_READ_GROUPS (-mrg) parameter\");\n\n        for (SAMReadGroupRecord readGroup : this.getToolkit().getEngine().getSAMHeader().getReadGroups()) {\n            if( readGroup.getAttribute(\"PL\") == null )\n                Utils.warnUser(String.format(\"PL attribute for read group %s is unset; assuming all reads are supported\",readGroup.getReadGroupId()));\n            if( !isSupportedReadGroup(readGroup) )\n                continue;\n            String rg = readGroup.getReadGroupId();\n            RecalDataManager manager = new RecalDataManager(rg, maxReadLen, QualityUtils.MAX_QUAL_SCORE+1, RecalData.NDINUCS, ! collapsePos, ! collapseDinuc );\n            data.put(rg, manager);\n        }\n    }","commit_id":"ca8a3bd85ed960a1b62d03fcbb8712301c6372d0","url":"https://github.com/broadgsa/gatk"},{"original_method":"void printInfo(PrintStream out) {\n        out.printf(\"# date          %s%n\", new Date());\n        out.printf(\"# collapsed_pos %b%n\", collapsePos);\n        out.printf(\"# collapsed_dinuc %b%n\", collapseDinuc);\n        out.printf(\"# counted_sites %d%n\", counted_sites);\n        out.printf(\"# counted_bases %d%n\", counted_bases);\n        out.printf(\"# skipped_sites %d%n\", skipped_sites);\n        out.printf(\"# fraction_skipped 1/%.0f%n\", (double)counted_sites / skipped_sites);\n    }","id":48710,"modified_method":"private void printInfo(PrintStream out) {\n        out.printf(\"# date          %s%n\", new Date());\n        out.printf(\"# collapsed_pos %b%n\", collapsePos);\n        out.printf(\"# collapsed_dinuc %b%n\", collapseDinuc);\n        out.printf(\"# counted_sites %d%n\", counted_sites);\n        out.printf(\"# counted_bases %d%n\", counted_bases);\n        out.printf(\"# skipped_sites %d%n\", skipped_sites);\n        out.printf(\"# fraction_skipped 1/%.0f%n\", (double)counted_sites / skipped_sites);\n    }","commit_id":"ca8a3bd85ed960a1b62d03fcbb8712301c6372d0","url":"https://github.com/broadgsa/gatk"},{"original_method":"public void qualityEmpiricalObserved() {\n        for (SAMReadGroupRecord readGroup : this.getToolkit().getEngine().getSAMHeader().getReadGroups()) {\n            PrintStream ByQualFile  = null;\n            try {\n                ByQualFile = new PrintStream(OUTPUT_FILEROOT+\".RG_\"+readGroup.getReadGroupId()+\".empirical_v_reported_quality.csv\");\n            } catch (FileNotFoundException e){\n                System.out.println(\"Could not open output files based on OUTPUT_FILEROOT option: \" + OUTPUT_FILEROOT);\n                System.exit(1);\n            }\n            ArrayList<RecalData> ByQ = new ArrayList<RecalData>();\n            ArrayList<MeanReportedQuality> ByQReportedQ = new ArrayList<MeanReportedQuality>();\n            ByQualFile.printf(\"Qrep,Qemp,Qrep_avg,B,N%n\");\n            RecalData All = new RecalData(0,0,readGroup.getReadGroupId(),\"\");\n            MeanReportedQuality AllReported = new MeanReportedQuality();\n            for (int q=0; q<QualityUtils.MAX_QUAL_SCORE+1; q++) {\n                ByQ.add(new RecalData(-1,q,readGroup.getReadGroupId(),\"-\"));\n                ByQReportedQ.add(new MeanReportedQuality());\n            }\n\n            for ( RecalData datum: getRecalData(readGroup.getReadGroupId()) ){\n                ByQ.get(datum.qual).inc(datum.N, datum.B);\n                ByQReportedQ.get(datum.qual).inc(datum.qual, datum.N);\n                All.inc(datum.N, datum.B);\n                AllReported.inc(datum.qual, datum.N);\n                //out.printf(\"%2d%6d%3d %2d %s%n\", datum.qual, datum.N, datum.pos, datum.qual, datum.dinuc);\n            }\n\n            for (int q=0; q<QualityUtils.MAX_QUAL_SCORE; q++) {\n                double empiricalQual = -10 * Math.log10((double)ByQ.get(q).B / ByQ.get(q).N);\n                ByQualFile.printf(\"%d, %f, %.0f, %d, %d%n\", q, empiricalQual, ByQReportedQ.get(q).result(), ByQ.get(q).B, ByQ.get(q).N);\n                //out.printf(\"%3d,%s,%3d,%5.1f,%5.1f,%6d,%6d\", pos, dinuc, qual, empiricalQual, qual-empiricalQual, N, B);                                                                                      n\n            }\n        }\n        //System.out.printf(\"Emp-Obs: N=%d, B=%d, Qemp=%.1f, \", All.N, All.B, -10 * Math.log10((double)All.B/All.N));\n        //System.out.printf(\"Qrep=%.1f%n\", AllReported.result());\n    }","id":48711,"modified_method":"public void qualityEmpiricalObserved() {\n        for (SAMReadGroupRecord readGroup : this.getToolkit().getEngine().getSAMHeader().getReadGroups()) {\n            PrintStream ByQualFile  = null;\n            try {\n                ByQualFile = new PrintStream(OUTPUT_FILEROOT+\".RG_\"+readGroup.getReadGroupId()+\".empirical_v_reported_quality.csv\");\n            } catch (FileNotFoundException e){\n                System.out.println(\"Could not open output files based on OUTPUT_FILEROOT option: \" + OUTPUT_FILEROOT);\n                System.exit(1);\n            }\n            ArrayList<RecalData> ByQ = new ArrayList<RecalData>();\n            ArrayList<MeanReportedQuality> ByQReportedQ = new ArrayList<MeanReportedQuality>();\n            ByQualFile.printf(\"Qrep,Qemp,Qrep_avg,B,N%n\");\n            RecalData All = new RecalData(0,0,readGroup.getReadGroupId(),\"\");\n            MeanReportedQuality AllReported = new MeanReportedQuality();\n            for (int q=0; q<QualityUtils.MAX_QUAL_SCORE+1; q++) {\n                ByQ.add(new RecalData(-1,q,readGroup.getReadGroupId(),\"-\"));\n                ByQReportedQ.add(new MeanReportedQuality());\n            }\n\n            for ( RecalData datum: getRecalData(readGroup.getReadGroupId()) ){\n                ByQ.get(datum.qual).inc(datum.N, datum.B);\n                ByQReportedQ.get(datum.qual).inc(datum.qual, datum.N);\n                All.inc(datum.N, datum.B);\n                AllReported.inc(datum.qual, datum.N);\n                //out.printf(\"%2d%6d%3d %2d %s%n\", datum.qual, datum.N, datum.pos, datum.qual, datum.dinuc);\n            }\n\n            for (int q=0; q<QualityUtils.MAX_QUAL_SCORE; q++) {\n                double empiricalQual = -10 * Math.log10((double)ByQ.get(q).B / ByQ.get(q).N);\n                ByQualFile.printf(\"%3d, %2.2f, %2.2f, %12d, %12d%n\", q, empiricalQual, ByQReportedQ.get(q).result(), ByQ.get(q).B, ByQ.get(q).N);\n                //out.printf(\"%3d,%s,%3d,%5.1f,%5.1f,%6d,%6d\", pos, dinuc, qual, empiricalQual, qual-empiricalQual, N, B);                                                                                      n\n            }\n        }\n        //System.out.printf(\"Emp-Obs: N=%d, B=%d, Qemp=%.1f, \", All.N, All.B, -10 * Math.log10((double)All.B/All.N));\n        //System.out.printf(\"Qrep=%.1f%n\", AllReported.result());\n    }","commit_id":"ca8a3bd85ed960a1b62d03fcbb8712301c6372d0","url":"https://github.com/broadgsa/gatk"},{"original_method":"public SAMRecord mapCached(char[] ref, SAMRecord read) {\n        if ( read.getReadLength() > maxReadLen ) {\n            throw new RuntimeException(\"Expectedly long read, please increase maxium read len with maxReadLen parameter: \" + read.format());\n        }\n\n        SAMRecord recalRead = read;\n        byte[] bases = read.getReadBases();\n        byte[] quals = read.getBaseQualities();\n        byte[] recalQuals = new byte[quals.length];\n\n        // Since we want machine direction reads not corrected positive strand reads, rev comp any negative strand reads\n        if (read.getReadNegativeStrandFlag()) {\n            bases = BaseUtils.simpleReverseComplement(bases);\n            quals = BaseUtils.reverse(quals);\n        }\n\n        String readGroup = read.getAttribute(\"RG\").toString();\n\n        HashMap<String, byte[][]> RGcache = cache.get(readGroup);\n\n        int numBases = read.getReadLength();\n        recalQuals[0] = quals[0];   // can't change the first -- no dinuc\n\n        for ( int cycle = 1; cycle < numBases; cycle++ ) { // skip first and last base, qual already set because no dinuc\n            // Take into account that previous base is the next base in terms of machine chemistry if\n            // this is a negative strand\n            byte qual = quals[cycle];\n            //LogisticRegressor regressor = getLogisticRegressor(readGroup, bases[cycle - 1], bases[cycle]);\n            LogisticRegressor regressor = null;            \n            byte newQual = cache2newQual(readGroup, RGcache, bases[cycle - 1], bases[cycle], regressor, cycle, qual);\n            recalQuals[cycle] = newQual;\n        }\n\n        if (read.getReadNegativeStrandFlag())\n            recalQuals = BaseUtils.reverse(quals);\n        //System.out.printf(\"OLD: %s%n\", read.format());\n        read.setBaseQualities(recalQuals);\n        //System.out.printf(\"NEW: %s%n\", read.format());\n        return recalRead;\n    }","id":48712,"modified_method":"public SAMRecord mapCached(char[] ref, SAMRecord read) {\n        if ( read.getReadLength() > maxReadLen ) {\n            throw new RuntimeException(\"Expectedly long read, please increase maxium read len with maxReadLen parameter: \" + read.format());\n        }\n\n        SAMRecord recalRead = read;\n        byte[] bases = read.getReadBases();\n        byte[] quals = read.getBaseQualities();\n        byte[] recalQuals = new byte[quals.length];\n\n        // Since we want machine direction reads not corrected positive strand reads, rev comp any negative strand reads\n        if (read.getReadNegativeStrandFlag()) {\n            bases = BaseUtils.simpleReverseComplement(bases);\n            quals = BaseUtils.reverse(quals);\n        }\n\n        String readGroup = read.getAttribute(\"RG\").toString();\n\n        HashMap<String, byte[][]> RGcache = cache.get(readGroup);\n\n        int numBases = read.getReadLength();\n        recalQuals[0] = quals[0];   // can't change the first -- no dinuc\n\n        for ( int cycle = 1; cycle < numBases; cycle++ ) { // skip first and last base, qual already set because no dinuc\n            // Take into account that previous base is the next base in terms of machine chemistry if\n            // this is a negative strand\n            byte qual = quals[cycle];\n            //LogisticRegressor regressor = getLogisticRegressor(readGroup, bases[cycle - 1], bases[cycle]);\n            LogisticRegressor regressor = null;            \n            byte newQual = cache2newQual(readGroup, RGcache, bases[cycle - 1], bases[cycle], regressor, cycle, qual);\n            recalQuals[cycle] = newQual;\n        }\n\n        if (read.getReadNegativeStrandFlag())\n            recalQuals = BaseUtils.reverse(recalQuals);\n        //System.out.printf(\"OLD: %s%n\", read.format());\n        read.setBaseQualities(recalQuals);\n        //System.out.printf(\"NEW: %s%n\", read.format());\n        return recalRead;\n    }","commit_id":"ca8a3bd85ed960a1b62d03fcbb8712301c6372d0","url":"https://github.com/broadgsa/gatk"},{"original_method":"public String toCSVString(boolean collapsedPos) {\n        return String.format(\"%s,%s,%d,%s,%d,%d\", readGroup, dinuc, qual, collapsedPos ? \"*\" : pos, N, B);\n    }","id":48713,"modified_method":"public String toCSVString(boolean collapsedPos) {\n        return String.format(\"%s,%s,%d,%s,%d,%d,%d\", readGroup, dinuc, qual, collapsedPos ? \"*\" : pos, N, B, empiricalQualByte());\n    }","commit_id":"ca8a3bd85ed960a1b62d03fcbb8712301c6372d0","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static int bases2dinucIndex(char prevBase, char base, boolean Complement) {\n        if ( BaseUtils.simpleBaseToBaseIndex(prevBase) == -1 || BaseUtils.simpleBaseToBaseIndex(base) == -1 )\n            return -1;\n\n        if (!Complement) {\n            return BaseUtils.simpleBaseToBaseIndex(prevBase) * 4 + BaseUtils.simpleBaseToBaseIndex(base);\n        }else {\n           return (3 - BaseUtils.simpleBaseToBaseIndex(prevBase)) * 4 + (3 - BaseUtils.simpleBaseToBaseIndex(base));\n        }\n    }","id":48714,"modified_method":"public static int bases2dinucIndex(char prevBase, char base) {\n        int pbI = BaseUtils.simpleBaseToBaseIndex(prevBase);\n        int bI = BaseUtils.simpleBaseToBaseIndex(base);\n        return (pbI == -1 || bI == -1) ? -1 : pbI * 4 + bI;\n    }","commit_id":"ca8a3bd85ed960a1b62d03fcbb8712301c6372d0","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static int string2dinucIndex(String s) {\n        return bases2dinucIndex(s.charAt(0), s.charAt(1), false);\n    }","id":48715,"modified_method":"public static int dinucIndex(String s) {\n        return bases2dinucIndex(s.charAt(0), s.charAt(1));\n    }","commit_id":"ca8a3bd85ed960a1b62d03fcbb8712301c6372d0","url":"https://github.com/broadgsa/gatk"},{"original_method":"public int getDinucIndex(String dinuc) {\n        if ( trackDinuc ) {\n            return RecalData.string2dinucIndex(dinuc);\n        } else {\n            return 0;\n        }\n    }","id":48716,"modified_method":"public int getDinucIndex(String dinuc) {\n        return trackDinuc ? RecalData.dinucIndex(dinuc) : 0;\n    }","commit_id":"ca8a3bd85ed960a1b62d03fcbb8712301c6372d0","url":"https://github.com/broadgsa/gatk"},{"original_method":"public CombinatorialRecalMapping(RecalDataManager manager, Set<String> dinucs, int maxPos, int maxQReported ) {\n        // initialize the data structure\n        for ( String dinuc : dinucs ) {\n            byte[][] table = new byte[maxPos+1][maxQReported+1];\n            cache.put(dinuc, table);\n        }\n\n        for ( RecalData datum : manager.getAll() ) {\n            //System.out.printf(\"Adding datum %s%n\", datum);\n            byte [][] table = cache.get(datum.dinuc);\n            if ( table[datum.pos][datum.qual] != 0 )\n                throw new RuntimeException(String.format(\"Duplicate entry discovered: %s\", datum));\n            //table[datum.pos][datum.qual] = (byte)(1 + datum.empiricalQualByte());\n            table[datum.pos][datum.qual] = datum.empiricalQualByte();\n        }\n    }","id":48717,"modified_method":"public CombinatorialRecalMapping(RecalDataManager manager, Set<String> dinucs, int maxPos, int maxQReported ) {\n        this.manager = manager;\n\n        // initialize the data structure\n        cache = new ArrayList<byte[][]>(RecalData.NDINUCS);\n        for ( String dinuc : dinucs ) {\n            cache.add(new byte[maxPos+1][maxQReported+1]);\n        }\n\n        for ( RecalData datum : manager.getAll() ) {\n            //System.out.printf(\"Adding datum %s%n\", datum);\n            byte [][] table = cache.get(this.manager.getDinucIndex(datum.dinuc));\n            if ( table[datum.pos][datum.qual] != 0 )\n                throw new RuntimeException(String.format(\"Duplicate entry discovered: %s\", datum));\n            //table[datum.pos][datum.qual] = (byte)(1 + datum.empiricalQualByte());\n            table[datum.pos][datum.qual] = datum.empiricalQualByte();\n            // System.out.printf(\"Binding %d %d => %d%n\", datum.pos, datum.qual, datum.empiricalQualByte());\n        }\n    }","commit_id":"ca8a3bd85ed960a1b62d03fcbb8712301c6372d0","url":"https://github.com/broadgsa/gatk"},{"original_method":"public byte getNewQual(final String readGroup, byte prevBase, byte base, int cycle, byte qual) {\n        //System.out.printf(\"Lookup RG=%s prevBase=%c base=%c cycle=%d qual=%d%n\", readGroup, prevBase, base, cycle, qual);\n        //String dinuc = String.format(\"%c%c\", (char)prevBase, (char)base);\n        byte[] bp = {prevBase, base};\n        String dinuc = new String(bp);\n        byte[][] dataTable = cache.get(dinuc);\n\n        if ( dataTable == null && prevBase != 'N' && base != 'N' )\n            throw new RuntimeException(String.format(\"Unmapped data table at %s %s\", readGroup, dinuc));\n\n        return dataTable != null && cycle < dataTable.length ? dataTable[cycle][qual] : qual;\n    }","id":48718,"modified_method":"public byte getNewQual(final String readGroup, byte prevBase, byte base, int cycle, byte qual) {\n        //String dinuc = String.format(\"%c%c\", (char)prevBase, (char)base);\n        //if ( qual == 2 )\n        //    System.out.printf(\"Qual = 2%n\");\n\n        int pos = manager.canonicalPos(cycle);\n        int index = this.manager.getDinucIndex(prevBase, base);\n        byte[][] dataTable = index == -1 ? null : cache.get(index);\n\n        if ( dataTable == null && prevBase != 'N' && base != 'N' )\n            throw new RuntimeException(String.format(\"Unmapped data table at %s %c%c\", readGroup, prevBase, base));\n\n        byte result = dataTable != null && pos < dataTable.length ? dataTable[pos][qual] : qual;\n\n        //if ( result == 2 )\n        //    System.out.printf(\"Lookup RG=%s dinuc=%s cycle=%d pos=%d qual=%d datatable=%s / %d => %d%n\",\n        //            readGroup, dinuc, cycle, pos, qual, dataTable, dataTable.length, result);\n\n        return result;        \n    }","commit_id":"ca8a3bd85ed960a1b62d03fcbb8712301c6372d0","url":"https://github.com/broadgsa/gatk"},{"original_method":"private void initializeCache(List<RecalData> data) {\n        Set<String> readGroups = new HashSet<String>();\n        Set<String> dinucs = new HashSet<String>();\n        int maxPos = -1;\n        int maxQReported = -1;\n\n        logger.info(String.format(\"No. params       : %d\", data.size()));\n        // get the maximum data from the file\n        for ( RecalData datum : data ) {\n            readGroups.add(datum.readGroup);\n            dinucs.add(datum.dinuc);\n            maxPos = Math.max(maxPos, datum.pos);\n            maxQReported = Math.max(maxQReported, datum.qual);\n        }\n        logger.info(String.format(\"Read groups      : %d %s\", readGroups.size(), readGroups.toString()));\n        logger.info(String.format(\"Dinucs           : %d %s\", dinucs.size(), dinucs.toString()));\n        logger.info(String.format(\"Max pos          : %d\", maxPos));\n        logger.info(String.format(\"Max Q reported   : %d\", maxQReported));\n\n        // initialize the data structure\n        HashMap<String, RecalDataManager> managers = new HashMap<String, RecalDataManager>();\n        for ( String readGroup : readGroups ) {\n            RecalDataManager manager = new RecalDataManager(readGroup,  maxPos, maxQReported, dinucs.size(), true, true);\n            managers.put(readGroup, manager);\n        }\n\n        // fill in the manager structure\n        for ( RecalData datum : data ) {\n            managers.get(datum.readGroup).addDatum(datum);\n        }\n\n        // fill in the table with mapping objects\n        for ( String readGroup : readGroups ) {\n            RecalDataManager manager = managers.get(readGroup);\n            RecalMapping mapper = null;\n            if ( serialRecalibration )\n                mapper = new SerialRecalMapping(manager, dinucs, maxPos, maxQReported);\n            else\n                mapper = new CombinatorialRecalMapping(manager, dinucs, maxPos, maxQReported);\n            cache.put(readGroup, mapper);\n        }\n    }","id":48719,"modified_method":"private void initializeCache(List<RecalData> data, boolean collapsedPos, boolean collapsedDinuc ) {\n        Set<String> readGroups = new HashSet<String>();\n        Set<String> dinucs = new HashSet<String>();\n        int maxPos = -1;\n        int maxQReported = -1;\n\n        logger.info(String.format(\"No. params       : %d\", data.size()));\n        // get the maximum data from the file\n        for ( RecalData datum : data ) {\n            readGroups.add(datum.readGroup);\n            dinucs.add(datum.dinuc);\n            maxPos = Math.max(maxPos, datum.pos);\n            maxQReported = Math.max(maxQReported, datum.qual);\n        }\n        logger.info(String.format(\"Read groups      : %d %s\", readGroups.size(), readGroups.toString()));\n        logger.info(String.format(\"Dinucs           : %d %s\", dinucs.size(), dinucs.toString()));\n        logger.info(String.format(\"Max pos          : %d\", maxPos));\n        logger.info(String.format(\"Max Q reported   : %d\", maxQReported));\n\n        // initialize the data structure\n        HashMap<String, RecalDataManager> managers = new HashMap<String, RecalDataManager>();\n        for ( String readGroup : readGroups ) {\n            RecalDataManager manager = new RecalDataManager(readGroup,  maxPos, maxQReported, dinucs.size(), ! collapsedPos, ! collapsedDinuc);\n            managers.put(readGroup, manager);\n        }\n\n        // fill in the manager structure\n        for ( RecalData datum : data ) {\n            managers.get(datum.readGroup).addDatum(datum);\n        }\n\n        // fill in the table with mapping objects\n        for ( String readGroup : readGroups ) {\n            RecalDataManager manager = managers.get(readGroup);\n            RecalMapping mapper = null;\n            if ( serialRecalibration )\n                mapper = new SerialRecalMapping(manager, dinucs, maxPos, maxQReported);\n            else\n                mapper = new CombinatorialRecalMapping(manager, dinucs, maxPos, maxQReported);\n            cache.put(readGroup, mapper);\n        }\n    }","commit_id":"ca8a3bd85ed960a1b62d03fcbb8712301c6372d0","url":"https://github.com/broadgsa/gatk"},{"original_method":"public SAMRecord map(char[] ref, SAMRecord read) {\n        //if ( read.getReadLength() > maxReadLen ) {\n        //    throw new RuntimeException(\"Expectedly long read, please increase maxium read len with maxReadLen parameter: \" + read.format());\n        //}\n\n        byte[] bases = read.getReadBases();\n        byte[] quals = read.getBaseQualities();\n        byte[] recalQuals = new byte[quals.length];\n\n        // Since we want machine direction reads not corrected positive strand reads, rev comp any negative strand reads\n        if (read.getReadNegativeStrandFlag()) {\n            bases = BaseUtils.simpleReverseComplement(bases);\n            quals = BaseUtils.reverse(quals);\n        }\n\n        String readGroup = read.getAttribute(\"RG\").toString();\n\n        RecalMapping mapper = cache.get(readGroup);\n\n        int numBases = read.getReadLength();\n        recalQuals[0] = quals[0];   // can't change the first -- no dinuc\n\n        for ( int cycle = 1; cycle < numBases; cycle++ ) { // skip first and last base, qual already set because no dinuc\n            // Take into account that previous base is the next base in terms of machine chemistry if\n            // this is a negative strand\n            byte qual = quals[cycle];\n            byte newQual = mapper.getNewQual(readGroup, bases[cycle - 1], bases[cycle], cycle, qual);\n            recalQuals[cycle] = newQual;\n            //System.out.printf(\"Mapping %d => %d%n\", qual, newQual);\n        }\n\n        if (read.getReadNegativeStrandFlag())\n            recalQuals = BaseUtils.reverse(quals);\n        //System.out.printf(\"OLD: %s%n\", read.format());\n        read.setBaseQualities(recalQuals);\n        //System.out.printf(\"NEW: %s%n\", read.format());\n        return read;\n    }","id":48720,"modified_method":"public SAMRecord map(char[] ref, SAMRecord read) {\n        byte[] bases = read.getReadBases();\n        byte[] quals = read.getBaseQualities();\n\n        // Since we want machine direction reads not corrected positive strand reads, rev comp any negative strand reads\n        if (read.getReadNegativeStrandFlag()) {\n            bases = BaseUtils.simpleReverseComplement(bases);\n            quals = BaseUtils.reverse(quals);\n        }\n\n        byte[] recalQuals = recalibrateBasesAndQuals(read.getAttribute(\"RG\").toString(), bases, quals);\n\n        if (read.getReadNegativeStrandFlag())\n            recalQuals = BaseUtils.reverse(recalQuals);\n        //if ( read.getReadName().equals(\"30PTAAAXX090126:5:14:132:764#0\") )\n        //    System.out.printf(\"OLD: %s%n\", read.format());\n        read.setBaseQualities(recalQuals);\n        //if ( read.getReadName().equals(\"30PTAAAXX090126:5:14:132:764#0\") )\n        //    System.out.printf(\"NEW: %s%n\", read.format());\n        return read;\n    }","commit_id":"ca8a3bd85ed960a1b62d03fcbb8712301c6372d0","url":"https://github.com/broadgsa/gatk"},{"original_method":"public void initialize() {\n        try {\n            System.out.printf(\"Reading data...%n\");\n            List<RecalData> data = new ArrayList<RecalData>();\n            List<String> lines = new xReadLines(new File(paramsFile)).readLines();\n            for ( String line : lines ) {\n                // rg,dn,logitQ,pos,indicator,count\n                // SRR007069,AA,28,1,0,2\n                data.add(RecalData.fromCSVString(line));\n            }\n            initializeCache(data);\n        } catch ( FileNotFoundException e ) {\n            Utils.scareUser(\"Cannot read/find parameters file \" + paramsFile);\n        }\n    }","id":48721,"modified_method":"public void initialize() {\n        try {\n            System.out.printf(\"Reading data...%n\");\n            List<RecalData> data = new ArrayList<RecalData>();\n            boolean collapsedPos = false;\n            boolean collapsedDinuc = false;\n\n            List<String> lines = new xReadLines(new File(paramsFile)).readLines();\n            for ( String line : lines ) {\n                //System.out.printf(\"Reading line %s%n\", line);\n                if ( HEADER_PATTERN.matcher(line).matches() )\n                    continue;\n                if ( COMMENT_PATTERN.matcher(line).matches() ) {\n                    collapsedPos = parseCommentLine(COLLAPSED_POS_PATTERN, line, collapsedPos);\n                    collapsedDinuc = parseCommentLine(COLLAPSED_DINUC_PATTERN, line, collapsedDinuc);\n                    //System.out.printf(\"Collapsed %b %b%n\", collapsedPos, collapsedDinuc);\n                }\n                else {\n                    data.add(RecalData.fromCSVString(line));\n                }\n            }\n            initializeCache(data, collapsedPos, collapsedDinuc);\n        } catch ( FileNotFoundException e ) {\n            Utils.scareUser(\"Cannot read/find parameters file \" + paramsFile);\n        }\n    }","commit_id":"ca8a3bd85ed960a1b62d03fcbb8712301c6372d0","url":"https://github.com/broadgsa/gatk"},{"original_method":"protected void calculatelog10PofDgivenAFforAllF(char ref, char alt, int nChromosomes, Map<String, StratifiedAlignmentContext> contexts, StratifiedAlignmentContext.StratifiedContextType contextType) {\n\n        StratifiedAlignmentContext context = contexts.get(POOL_SAMPLE_NAME);\n        ReadBackedPileup pileup = context.getContext(contextType).getPileup();\n\n        int refIndex = BaseUtils.simpleBaseToBaseIndex(ref);\n        int altIndex = BaseUtils.simpleBaseToBaseIndex(alt);\n\n        for (int i = 0; i < pileup.getReads().size(); i++) {\n            int offset = pileup.getOffsets().get(i);\n\n            // ignore deletions\n            if ( offset == -1 )\n                continue;\n\n            SAMRecord read = pileup.getReads().get(i);\n            char base = (char)read.getReadBases()[offset];\n            int bIndex = BaseUtils.simpleBaseToBaseIndex(base);\n            byte qual = read.getBaseQualities()[offset];\n\n            if ( qual > 0 && bIndex != -1 ) {\n\n                // for each minor allele frequency, calculate log10PofDgivenAFi\n                for (int frequency = 0; frequency <= nChromosomes; frequency++)\n                    log10PofDgivenAFi[altIndex][frequency] += calcPBGivenH(refIndex, altIndex, frequency, nChromosomes, base, qual, read, offset);\n            }\n        }\n    }","id":48722,"modified_method":"protected void calculatelog10PofDgivenAFforAllF(char ref, char alt, int nChromosomes, Map<String, StratifiedAlignmentContext> contexts, StratifiedAlignmentContext.StratifiedContextType contextType) {\n\n        StratifiedAlignmentContext context = contexts.get(POOL_SAMPLE_NAME);\n        ReadBackedPileup pileup = context.getContext(contextType).getPileup();\n\n        int refIndex = BaseUtils.simpleBaseToBaseIndex(ref);\n        int altIndex = BaseUtils.simpleBaseToBaseIndex(alt);\n\n        double maxLikelihoodSeen = -1.0 * Double.MAX_VALUE;\n\n        // for each minor allele frequency, calculate log10PofDgivenAFi\n        for (int frequency = 0; frequency <= nChromosomes; frequency++) {\n\n            for ( PileupElement p : pileup ) {\n                // ignore deletions\n                if ( p.isDeletion() )\n                    continue;\n\n                char base = (char)p.getBase();\n                byte qual = p.getQual();\n\n                if ( qual > 0 && BaseUtils.simpleBaseToBaseIndex(base) != -1 )\n                    log10PofDgivenAFi[altIndex][frequency] += calcPBGivenH(refIndex, altIndex, frequency, nChromosomes, base, qual, p.getRead(), p.getOffset());\n            }\n\n            // an optimization to speed up the calculation: if we are beyond the local maximum such\n            //  that subsequent likelihoods won't factor into the confidence score, just quit\n            if ( frequency > 0 && maxLikelihoodSeen - log10PofDgivenAFi[altIndex][frequency] > LOG10_OPTIMIZATION_EPSILON ) {\n                while ( ++frequency <= nChromosomes )\n                    log10PofDgivenAFi[altIndex][frequency] = -1.0 * Double.MAX_VALUE;\n                return;\n            }\n\n            if ( log10PofDgivenAFi[altIndex][frequency] > maxLikelihoodSeen )\n                maxLikelihoodSeen = log10PofDgivenAFi[altIndex][frequency];\n        }\n    }","commit_id":"c8d0e6e004d1db136ce2b05797549b198f8fdd4c","url":"https://github.com/broadgsa/gatk"},{"original_method":"private void createLists() {\n    try {\n      myRepository = myVcs.createRepository(myRepositoryRoot);\n    }\n    catch (SVNException e) {\n      LOG.error(e);\n    }\n\n    myChanges = new ArrayList<Change>();\n    // key: copied-from\n    final Map<String, ExternallyRenamedChange> copiedAddedChanges = new HashMap<String, ExternallyRenamedChange>();\n\n    for(String path: myAddedPaths) {\n      final ExternallyRenamedChange addedChange = new ExternallyRenamedChange(null, createRevisionLazily(path, false));\n      if (myCopiedAddedPaths.containsKey(path)) {\n        copiedAddedChanges.put(myCopiedAddedPaths.get(path), addedChange);\n      }\n      myChanges.add(addedChange);\n    }\n    for(String path: myDeletedPaths) {\n      final ExternallyRenamedChange deletedChange = new ExternallyRenamedChange(createRevisionLazily(path, true), null);\n      if (copiedAddedChanges.containsKey(path)) {\n        final ExternallyRenamedChange addedChange = copiedAddedChanges.get(path);\n        //noinspection ConstantConditions\n        // display only 'moved to'\n        //addedChange.setRenamedOrMovedTarget(deletedChange.getBeforeRevision().getFile());\n        //noinspection ConstantConditions\n        deletedChange.setRenamedOrMovedTarget(addedChange.getAfterRevision().getFile());\n      }\n      myChanges.add(deletedChange);\n    }\n    for(String path: myChangedPaths) {\n      boolean moveAndChange = false;\n      for (String addedPath : myAddedPaths) {\n        final String copyFromPath = myCopiedAddedPaths.get(addedPath);\n        if ((copyFromPath != null) && (SVNPathUtil.isAncestor(addedPath, path))) {\n          moveAndChange = true;\n          final Change renamedChange =\n              new Change(createRevisionLazily(copyFromPath, true), createRevisionLazily(path, false));\n          renamedChange.getMoveRelativePath(myVcs.getProject());\n          myChanges.add(renamedChange);\n          break;\n        }\n      }\n      if (! moveAndChange) {\n        myChanges.add(new ExternallyRenamedChange(createRevisionLazily(path, true), createRevisionLazily(path, false)));\n      }\n    }\n  }","id":48723,"modified_method":"private void createLists() {\n    myListsHolder = new ChangesListCreationHelper();\n    \n    // key: copied-from\n    final Map<String, ExternallyRenamedChange> copiedAddedChanges = new HashMap<String, ExternallyRenamedChange>();\n\n    for(String path: myAddedPaths) {\n      final ExternallyRenamedChange addedChange = new ExternallyRenamedChange(null, myListsHolder.createRevisionLazily(path, false));\n      if (myCopiedAddedPaths.containsKey(path)) {\n        copiedAddedChanges.put(myCopiedAddedPaths.get(path), addedChange);\n      }\n      myListsHolder.add(addedChange);\n    }\n    for(String path: myDeletedPaths) {\n      final ExternallyRenamedChange deletedChange = new ExternallyRenamedChange(myListsHolder.createRevisionLazily(path, true), null);\n      if (copiedAddedChanges.containsKey(path)) {\n        final ExternallyRenamedChange addedChange = copiedAddedChanges.get(path);\n        //noinspection ConstantConditions\n        // display only 'moved to'\n        //addedChange.setRenamedOrMovedTarget(deletedChange.getBeforeRevision().getFile());\n        //noinspection ConstantConditions\n        deletedChange.setRenamedOrMovedTarget(addedChange.getAfterRevision().getFile());\n      }\n      myListsHolder.add(deletedChange);\n    }\n    for(String path: myChangedPaths) {\n      boolean moveAndChange = false;\n      for (String addedPath : myAddedPaths) {\n        final String copyFromPath = myCopiedAddedPaths.get(addedPath);\n        if ((copyFromPath != null) && (SVNPathUtil.isAncestor(addedPath, path))) {\n          moveAndChange = true;\n          final Change renamedChange =\n              new Change(myListsHolder.createRevisionLazily(copyFromPath, true), myListsHolder.createRevisionLazily(path, false));\n          renamedChange.getMoveRelativePath(myVcs.getProject());\n          myListsHolder.add(renamedChange);\n          break;\n        }\n      }\n      if (! moveAndChange) {\n        myListsHolder.add(new ExternallyRenamedChange(myListsHolder.createRevisionLazily(path, true), myListsHolder.createRevisionLazily(path, false)));\n      }\n    }\n  }","commit_id":"0eb7f4d9a9af3726552f7156d86eaab729dea6c8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Collection<Change> getChanges() {\n    if (myChanges == null) {\n      createLists();\n    }\n    return myChanges;\n  }","id":48724,"modified_method":"public Collection<Change> getChanges() {\n    if (myListsHolder == null) {\n      createLists();\n    }\n    return myListsHolder.getList();\n  }","commit_id":"0eb7f4d9a9af3726552f7156d86eaab729dea6c8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Collection<Change> getChangesWithMovedTrees() {\n    final List<Change> result = new ArrayList<Change>(myChanges);\n    uploadDeletedRenamedChildren(result);\n    return result;\n  }","id":48725,"modified_method":"public Collection<Change> getChangesWithMovedTrees() {\n    if (myListsHolder == null) {\n      createLists();\n    }\n\n    return myListsHolder.getDetailedList();\n  }","commit_id":"0eb7f4d9a9af3726552f7156d86eaab729dea6c8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void getCSV() {\n    TextFileInputMeta meta = new TextFileInputMeta();\n    getInfo( meta );\n    TextFileInputMeta previousMeta = (TextFileInputMeta) meta.clone();\n    FileInputList textFileList = meta.getTextFileList( transMeta );\n    InputStream fileInputStream;\n    CompressionInputStream inputStream = null;\n    StringBuilder lineStringBuilder = new StringBuilder( 256 );\n    int fileFormatType = meta.getFileFormatTypeNr();\n\n    String delimiter = transMeta.environmentSubstitute( meta.content.separator );\n    String enclosure = transMeta.environmentSubstitute( meta.content.enclosure );\n    String escapeCharacter = transMeta.environmentSubstitute( meta.content.escapeCharacter );\n\n    if ( textFileList.nrOfFiles() > 0 ) {\n      int clearFields = meta.content.header ? SWT.YES : SWT.NO;\n      int nrInputFields = meta.inputFiles.inputFields.length;\n\n      if ( meta.content.header && nrInputFields > 0 ) {\n        MessageBox mb = new MessageBox( shell, SWT.YES | SWT.NO | SWT.CANCEL | SWT.ICON_QUESTION );\n        mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.ClearFieldList.DialogMessage\" ) );\n        mb.setText( BaseMessages.getString( PKG, \"TextFileInputDialog.ClearFieldList.DialogTitle\" ) );\n        clearFields = mb.open();\n        if ( clearFields == SWT.CANCEL ) {\n          return;\n        }\n      }\n\n      try {\n        wFields.table.removeAll();\n\n        FileObject fileObject = textFileList.getFile( 0 );\n        fileInputStream = KettleVFS.getInputStream( fileObject );\n        Table table = wFields.table;\n\n        CompressionProvider provider =\n            CompressionProviderFactory.getInstance().createCompressionProviderInstance( meta.content.fileCompression );\n        inputStream = provider.createInputStream( fileInputStream );\n\n        InputStreamReader reader;\n        if ( meta.getEncoding() != null && meta.getEncoding().length() > 0 ) {\n          reader = new InputStreamReader( inputStream, meta.getEncoding() );\n        } else {\n          reader = new InputStreamReader( inputStream );\n        }\n\n        EncodingType encodingType = EncodingType.guessEncodingType( reader.getEncoding() );\n\n        if ( clearFields == SWT.YES || !meta.content.header || nrInputFields > 0 ) {\n          // Scan the header-line, determine fields...\n          String line;\n\n          if ( meta.content.header || meta.inputFiles.inputFields.length == 0 ) {\n            line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineStringBuilder );\n            if ( line != null ) {\n              // Estimate the number of input fields...\n              // Chop up the line using the delimiter\n              String[] fields =\n                  TextFileInputUtils.guessStringsFromLine( transMeta, log, line, meta, delimiter, enclosure,\n                      escapeCharacter );\n\n              for ( int i = 0; i < fields.length; i++ ) {\n                String field = fields[i];\n                if ( field == null || field.length() == 0 || ( nrInputFields == 0 && !meta.content.header ) ) {\n                  field = \"Field\" + ( i + 1 );\n                } else {\n                  // Trim the field\n                  field = Const.trim( field );\n                  // Replace all spaces & - with underscore _\n                  field = Const.replace( field, \" \", \"_\" );\n                  field = Const.replace( field, \"-\", \"_\" );\n                }\n\n                TableItem item = new TableItem( table, SWT.NONE );\n                item.setText( 1, field );\n                item.setText( 2, \"String\" ); // The default type is String...\n              }\n\n              wFields.setRowNums();\n              wFields.optWidth( true );\n\n              // Copy it...\n              getInfo( meta );\n            }\n          }\n\n          // Sample a few lines to determine the correct type of the fields...\n          String shellText = BaseMessages.getString( PKG, \"TextFileInputDialog.LinesToSample.DialogTitle\" );\n          String lineText = BaseMessages.getString( PKG, \"TextFileInputDialog.LinesToSample.DialogMessage\" );\n          EnterNumberDialog end = new EnterNumberDialog( shell, 100, shellText, lineText );\n          int samples = end.open();\n          if ( samples >= 0 ) {\n            getInfo( meta );\n\n            TextFileCSVImportProgressDialog pd =\n                new TextFileCSVImportProgressDialog( shell, meta, transMeta, reader, samples, clearFields == SWT.YES );\n            String message = pd.open();\n            if ( message != null ) {\n              wFields.removeAll();\n\n              // OK, what's the result of our search?\n              getData( meta );\n\n              // If we didn't want the list to be cleared, we need to re-inject the previous values...\n              //\n              if ( clearFields == SWT.NO ) {\n                getFieldsData( previousMeta, true );\n                wFields.table.setSelection( previousMeta.inputFiles.inputFields.length, wFields.table.getItemCount()\n                    - 1 );\n              }\n\n              wFields.removeEmptyRows();\n              wFields.setRowNums();\n              wFields.optWidth( true );\n\n              EnterTextDialog etd =\n                  new EnterTextDialog( shell, BaseMessages.getString( PKG,\n                      \"TextFileInputDialog.ScanResults.DialogTitle\" ), BaseMessages.getString( PKG,\n                          \"TextFileInputDialog.ScanResults.DialogMessage\" ), message, true );\n              etd.setReadOnly();\n              etd.open();\n            }\n          }\n        } else {\n          MessageBox mb = new MessageBox( shell, SWT.OK | SWT.ICON_ERROR );\n          mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.UnableToReadHeaderLine.DialogMessage\" ) );\n          mb.setText( BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ) );\n          mb.open();\n        }\n      } catch ( IOException e ) {\n        new ErrorDialog( shell, BaseMessages.getString( PKG, \"TextFileInputDialog.IOError.DialogTitle\" ), BaseMessages\n            .getString( PKG, \"TextFileInputDialog.IOError.DialogMessage\" ), e );\n      } catch ( KettleException e ) {\n        new ErrorDialog( shell, BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ), BaseMessages.getString( PKG,\n            \"TextFileInputDialog.ErrorGettingFileDesc.DialogMessage\" ), e );\n      } finally {\n        try {\n          if ( inputStream != null ) {\n            inputStream.close();\n          }\n        } catch ( Exception e ) {\n          // Ignore errors\n        }\n      }\n    } else {\n      MessageBox mb = new MessageBox( shell, SWT.OK | SWT.ICON_ERROR );\n      mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.NoValidFileFound.DialogMessage\" ) );\n      mb.setText( BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ) );\n      mb.open();\n    }\n  }","id":48726,"modified_method":"private void getCSV() {\n    TextFileInputMeta meta = new TextFileInputMeta();\n    getInfo( meta );\n    TextFileInputMeta previousMeta = (TextFileInputMeta) meta.clone();\n    FileInputList textFileList = meta.getTextFileList( transMeta );\n    InputStream fileInputStream;\n    CompressionInputStream inputStream = null;\n    StringBuilder lineStringBuilder = new StringBuilder( 256 );\n    int fileFormatType = meta.getFileFormatTypeNr();\n\n    String delimiter = transMeta.environmentSubstitute( meta.content.separator );\n    String enclosure = transMeta.environmentSubstitute( meta.content.enclosure );\n    String escapeCharacter = transMeta.environmentSubstitute( meta.content.escapeCharacter );\n\n    if ( textFileList.nrOfFiles() > 0 ) {\n      int clearFields = meta.content.header ? SWT.YES : SWT.NO;\n      int nrInputFields = meta.inputFiles.inputFields.length;\n\n      if ( nrInputFields > 0 ) {\n        MessageBox mb = new MessageBox( shell, SWT.YES | SWT.NO | SWT.CANCEL | SWT.ICON_QUESTION );\n        mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.ClearFieldList.DialogMessage\" ) );\n        mb.setText( BaseMessages.getString( PKG, \"TextFileInputDialog.ClearFieldList.DialogTitle\" ) );\n        clearFields = mb.open();\n        if ( clearFields == SWT.CANCEL ) {\n          return;\n        }\n      }\n\n      try {\n        wFields.table.removeAll();\n\n        FileObject fileObject = textFileList.getFile( 0 );\n        fileInputStream = KettleVFS.getInputStream( fileObject );\n        Table table = wFields.table;\n\n        CompressionProvider provider =\n            CompressionProviderFactory.getInstance().createCompressionProviderInstance( meta.content.fileCompression );\n        inputStream = provider.createInputStream( fileInputStream );\n\n        InputStreamReader reader;\n        if ( meta.getEncoding() != null && meta.getEncoding().length() > 0 ) {\n          reader = new InputStreamReader( inputStream, meta.getEncoding() );\n        } else {\n          reader = new InputStreamReader( inputStream );\n        }\n\n        EncodingType encodingType = EncodingType.guessEncodingType( reader.getEncoding() );\n\n          // Scan the header-line, determine fields...\n          String line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineStringBuilder );\n            if ( line != null ) {\n              // Estimate the number of input fields...\n              // Chop up the line using the delimiter\n              String[] fields =\n                  TextFileInputUtils.guessStringsFromLine( transMeta, log, line, meta, delimiter, enclosure,\n                      escapeCharacter );\n\n              for ( int i = 0; i < fields.length; i++ ) {\n                String field = fields[i];\n                if ( field == null || field.length() == 0 || !meta.content.header ) {\n                  field = \"Field\" + ( i + 1 );\n                } else {\n                  // Trim the field\n                  field = Const.trim( field );\n                  // Replace all spaces & - with underscore _\n                  field = Const.replace( field, \" \", \"_\" );\n                  field = Const.replace( field, \"-\", \"_\" );\n                }\n\n                TableItem item = new TableItem( table, SWT.NONE );\n                item.setText( 1, field );\n                item.setText( 2, \"String\" ); // The default type is String...\n              }\n\n              wFields.setRowNums();\n              wFields.optWidth( true );\n\n              // Copy it...\n              getInfo( meta );\n\n          // Sample a few lines to determine the correct type of the fields...\n          String shellText = BaseMessages.getString( PKG, \"TextFileInputDialog.LinesToSample.DialogTitle\" );\n          String lineText = BaseMessages.getString( PKG, \"TextFileInputDialog.LinesToSample.DialogMessage\" );\n          EnterNumberDialog end = new EnterNumberDialog( shell, 100, shellText, lineText );\n          int samples = end.open();\n          if ( samples >= 0 ) {\n            getInfo( meta );\n\n            TextFileCSVImportProgressDialog pd =\n                new TextFileCSVImportProgressDialog( shell, meta, transMeta, reader, samples, clearFields == SWT.YES );\n            String message = pd.open();\n            if ( message != null ) {\n              wFields.removeAll();\n\n              // OK, what's the result of our search?\n              getData( meta );\n\n              // If we didn't want the list to be cleared, we need to re-inject the previous values...\n              //\n              if ( clearFields == SWT.NO ) {\n                getFieldsData( previousMeta, true );\n                wFields.table.setSelection( previousMeta.inputFiles.inputFields.length, wFields.table.getItemCount()\n                    - 1 );\n              }\n\n              wFields.removeEmptyRows();\n              wFields.setRowNums();\n              wFields.optWidth( true );\n\n              EnterTextDialog etd =\n                  new EnterTextDialog( shell, BaseMessages.getString( PKG,\n                      \"TextFileInputDialog.ScanResults.DialogTitle\" ), BaseMessages.getString( PKG,\n                          \"TextFileInputDialog.ScanResults.DialogMessage\" ), message, true );\n              etd.setReadOnly();\n              etd.open();\n            }\n          }\n        } else {\n          MessageBox mb = new MessageBox( shell, SWT.OK | SWT.ICON_ERROR );\n          mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.UnableToReadHeaderLine.DialogMessage\" ) );\n          mb.setText( BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ) );\n          mb.open();\n        }\n      } catch ( IOException e ) {\n        new ErrorDialog( shell, BaseMessages.getString( PKG, \"TextFileInputDialog.IOError.DialogTitle\" ), BaseMessages\n            .getString( PKG, \"TextFileInputDialog.IOError.DialogMessage\" ), e );\n      } catch ( KettleException e ) {\n        new ErrorDialog( shell, BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ), BaseMessages.getString( PKG,\n            \"TextFileInputDialog.ErrorGettingFileDesc.DialogMessage\" ), e );\n      } finally {\n        try {\n          if ( inputStream != null ) {\n            inputStream.close();\n          }\n        } catch ( Exception e ) {\n          // Ignore errors\n        }\n      }\n    } else {\n      MessageBox mb = new MessageBox( shell, SWT.OK | SWT.ICON_ERROR );\n      mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.NoValidFileFound.DialogMessage\" ) );\n      mb.setText( BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ) );\n      mb.open();\n    }\n  }","commit_id":"8cc67c3be2f1425f53d90a1faa61bed21d25316a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void getCSV() {\n    TextFileInputMeta meta = new TextFileInputMeta();\n    getInfo( meta );\n    TextFileInputMeta previousMeta = (TextFileInputMeta) meta.clone();\n    FileInputList textFileList = meta.getTextFileList( transMeta );\n    InputStream fileInputStream;\n    CompressionInputStream inputStream = null;\n    StringBuilder lineStringBuilder = new StringBuilder( 256 );\n    int fileFormatType = meta.getFileFormatTypeNr();\n\n    String delimiter = transMeta.environmentSubstitute( meta.content.separator );\n    String enclosure = transMeta.environmentSubstitute( meta.content.enclosure );\n    String escapeCharacter = transMeta.environmentSubstitute( meta.content.escapeCharacter );\n\n    if ( textFileList.nrOfFiles() > 0 ) {\n      int clearFields = meta.content.header ? SWT.YES : SWT.NO;\n      int nrInputFields = meta.inputFiles.inputFields.length;\n\n      if ( meta.content.header && nrInputFields > 0 ) {\n        MessageBox mb = new MessageBox( shell, SWT.YES | SWT.NO | SWT.CANCEL | SWT.ICON_QUESTION );\n        mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.ClearFieldList.DialogMessage\" ) );\n        mb.setText( BaseMessages.getString( PKG, \"TextFileInputDialog.ClearFieldList.DialogTitle\" ) );\n        clearFields = mb.open();\n        if ( clearFields == SWT.CANCEL ) {\n          return;\n        }\n      }\n\n      try {\n        wFields.table.removeAll();\n\n        FileObject fileObject = textFileList.getFile( 0 );\n        fileInputStream = KettleVFS.getInputStream( fileObject );\n        Table table = wFields.table;\n\n        CompressionProvider provider =\n            CompressionProviderFactory.getInstance().createCompressionProviderInstance( meta.content.fileCompression );\n        inputStream = provider.createInputStream( fileInputStream );\n\n        InputStreamReader reader;\n        if ( meta.getEncoding() != null && meta.getEncoding().length() > 0 ) {\n          reader = new InputStreamReader( inputStream, meta.getEncoding() );\n        } else {\n          reader = new InputStreamReader( inputStream );\n        }\n\n        EncodingType encodingType = EncodingType.guessEncodingType( reader.getEncoding() );\n\n        if ( clearFields == SWT.YES || !meta.content.header || nrInputFields > 0 ) {\n          // Scan the header-line, determine fields...\n          String line;\n\n          if ( meta.content.header || meta.inputFiles.inputFields.length == 0 ) {\n            line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineStringBuilder );\n            if ( line != null ) {\n              // Estimate the number of input fields...\n              // Chop up the line using the delimiter\n              String[] fields =\n                  TextFileInputUtils\n                      .guessStringsFromLine( transMeta, log, line, meta, delimiter, enclosure, escapeCharacter );\n\n              for ( int i = 0; i < fields.length; i++ ) {\n                String field = fields[i];\n                if ( field == null || field.length() == 0 || ( nrInputFields == 0 && !meta.content.header ) ) {\n                  field = \"Field\" + ( i + 1 );\n                } else {\n                  // Trim the field\n                  field = Const.trim( field );\n                  // Replace all spaces & - with underscore _\n                  field = Const.replace( field, \" \", \"_\" );\n                  field = Const.replace( field, \"-\", \"_\" );\n                }\n\n                TableItem item = new TableItem( table, SWT.NONE );\n                item.setText( 1, field );\n                item.setText( 2, \"String\" ); // The default type is String...\n              }\n\n              wFields.setRowNums();\n              wFields.optWidth( true );\n\n              // Copy it...\n              getInfo( meta );\n            }\n          }\n\n          // Sample a few lines to determine the correct type of the fields...\n          String shellText = BaseMessages.getString( PKG, \"TextFileInputDialog.LinesToSample.DialogTitle\" );\n          String lineText = BaseMessages.getString( PKG, \"TextFileInputDialog.LinesToSample.DialogMessage\" );\n          EnterNumberDialog end = new EnterNumberDialog( shell, 100, shellText, lineText );\n          int samples = end.open();\n          if ( samples >= 0 ) {\n            getInfo( meta );\n\n            TextFileCSVImportProgressDialog pd =\n                new TextFileCSVImportProgressDialog( shell, meta, transMeta, reader, samples, clearFields == SWT.YES );\n            String message = pd.open();\n            if ( message != null ) {\n              wFields.removeAll();\n\n              // OK, what's the result of our search?\n              getData( meta );\n\n              // If we didn't want the list to be cleared, we need to re-inject the previous values...\n              //\n              if ( clearFields == SWT.NO ) {\n                getFieldsData( previousMeta, true );\n                wFields.table.setSelection( previousMeta.inputFiles.inputFields.length, wFields.table.getItemCount() - 1 );\n              }\n\n              wFields.removeEmptyRows();\n              wFields.setRowNums();\n              wFields.optWidth( true );\n\n              EnterTextDialog etd =\n                  new EnterTextDialog( shell, BaseMessages.getString( PKG,\n                      \"TextFileInputDialog.ScanResults.DialogTitle\" ), BaseMessages.getString( PKG,\n                      \"TextFileInputDialog.ScanResults.DialogMessage\" ), message, true );\n              etd.setReadOnly();\n              etd.open();\n            }\n          }\n        } else {\n          MessageBox mb = new MessageBox( shell, SWT.OK | SWT.ICON_ERROR );\n          mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.UnableToReadHeaderLine.DialogMessage\" ) );\n          mb.setText( BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ) );\n          mb.open();\n        }\n      } catch ( IOException e ) {\n        new ErrorDialog( shell, BaseMessages.getString( PKG, \"TextFileInputDialog.IOError.DialogTitle\" ), BaseMessages\n            .getString( PKG, \"TextFileInputDialog.IOError.DialogMessage\" ), e );\n      } catch ( KettleException e ) {\n        new ErrorDialog( shell, BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ), BaseMessages.getString(\n            PKG, \"TextFileInputDialog.ErrorGettingFileDesc.DialogMessage\" ), e );\n      } finally {\n        try {\n          if ( inputStream != null ) {\n            inputStream.close();\n          }\n        } catch ( Exception e ) {\n          // Ignore errors\n        }\n      }\n    } else {\n      MessageBox mb = new MessageBox( shell, SWT.OK | SWT.ICON_ERROR );\n      mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.NoValidFileFound.DialogMessage\" ) );\n      mb.setText( BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ) );\n      mb.open();\n    }\n  }","id":48727,"modified_method":"private void getCSV() {\n    TextFileInputMeta meta = new TextFileInputMeta();\n    getInfo( meta );\n    TextFileInputMeta previousMeta = (TextFileInputMeta) meta.clone();\n    FileInputList textFileList = meta.getTextFileList( transMeta );\n    InputStream fileInputStream;\n    CompressionInputStream inputStream = null;\n    StringBuilder lineStringBuilder = new StringBuilder( 256 );\n    int fileFormatType = meta.getFileFormatTypeNr();\n\n    String delimiter = transMeta.environmentSubstitute( meta.content.separator );\n    String enclosure = transMeta.environmentSubstitute( meta.content.enclosure );\n    String escapeCharacter = transMeta.environmentSubstitute( meta.content.escapeCharacter );\n\n    if ( textFileList.nrOfFiles() > 0 ) {\n      int clearFields = meta.content.header ? SWT.YES : SWT.NO;\n      int nrInputFields = meta.inputFiles.inputFields.length;\n\n      if ( nrInputFields > 0 ) {\n        MessageBox mb = new MessageBox( shell, SWT.YES | SWT.NO | SWT.CANCEL | SWT.ICON_QUESTION );\n        mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.ClearFieldList.DialogMessage\" ) );\n        mb.setText( BaseMessages.getString( PKG, \"TextFileInputDialog.ClearFieldList.DialogTitle\" ) );\n        clearFields = mb.open();\n        if ( clearFields == SWT.CANCEL ) {\n          return;\n        }\n      }\n\n      try {\n        wFields.table.removeAll();\n\n        FileObject fileObject = textFileList.getFile( 0 );\n        fileInputStream = KettleVFS.getInputStream( fileObject );\n        Table table = wFields.table;\n\n        CompressionProvider provider =\n            CompressionProviderFactory.getInstance().createCompressionProviderInstance( meta.content.fileCompression );\n        inputStream = provider.createInputStream( fileInputStream );\n\n        InputStreamReader reader;\n        if ( meta.getEncoding() != null && meta.getEncoding().length() > 0 ) {\n          reader = new InputStreamReader( inputStream, meta.getEncoding() );\n        } else {\n          reader = new InputStreamReader( inputStream );\n        }\n\n        EncodingType encodingType = EncodingType.guessEncodingType( reader.getEncoding() );\n\n          // Scan the header-line, determine fields...\n          String line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineStringBuilder );\n            if ( line != null ) {\n              // Estimate the number of input fields...\n              // Chop up the line using the delimiter\n              String[] fields =\n                  TextFileInputUtils\n                      .guessStringsFromLine( transMeta, log, line, meta, delimiter, enclosure, escapeCharacter );\n\n              for ( int i = 0; i < fields.length; i++ ) {\n                String field = fields[i];\n                if ( field == null || field.length() == 0 || !meta.content.header ) {\n                  field = \"Field\" + ( i + 1 );\n                } else {\n                  // Trim the field\n                  field = Const.trim( field );\n                  // Replace all spaces & - with underscore _\n                  field = Const.replace( field, \" \", \"_\" );\n                  field = Const.replace( field, \"-\", \"_\" );\n                }\n\n                TableItem item = new TableItem( table, SWT.NONE );\n                item.setText( 1, field );\n                item.setText( 2, \"String\" ); // The default type is String...\n              }\n\n              wFields.setRowNums();\n              wFields.optWidth( true );\n\n              // Copy it...\n              getInfo( meta );\n\n          // Sample a few lines to determine the correct type of the fields...\n          String shellText = BaseMessages.getString( PKG, \"TextFileInputDialog.LinesToSample.DialogTitle\" );\n          String lineText = BaseMessages.getString( PKG, \"TextFileInputDialog.LinesToSample.DialogMessage\" );\n          EnterNumberDialog end = new EnterNumberDialog( shell, 100, shellText, lineText );\n          int samples = end.open();\n          if ( samples >= 0 ) {\n            getInfo( meta );\n\n            TextFileCSVImportProgressDialog pd =\n                new TextFileCSVImportProgressDialog( shell, meta, transMeta, reader, samples, clearFields == SWT.YES );\n            String message = pd.open();\n            if ( message != null ) {\n              wFields.removeAll();\n\n              // OK, what's the result of our search?\n              getData( meta );\n\n              // If we didn't want the list to be cleared, we need to re-inject the previous values...\n              //\n              if ( clearFields == SWT.NO ) {\n                getFieldsData( previousMeta, true );\n                wFields.table.setSelection( previousMeta.inputFiles.inputFields.length, wFields.table.getItemCount() - 1 );\n              }\n\n              wFields.removeEmptyRows();\n              wFields.setRowNums();\n              wFields.optWidth( true );\n\n              EnterTextDialog etd =\n                  new EnterTextDialog( shell, BaseMessages.getString( PKG,\n                      \"TextFileInputDialog.ScanResults.DialogTitle\" ), BaseMessages.getString( PKG,\n                      \"TextFileInputDialog.ScanResults.DialogMessage\" ), message, true );\n              etd.setReadOnly();\n              etd.open();\n            }\n          }\n        } else {\n          MessageBox mb = new MessageBox( shell, SWT.OK | SWT.ICON_ERROR );\n          mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.UnableToReadHeaderLine.DialogMessage\" ) );\n          mb.setText( BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ) );\n          mb.open();\n        }\n      } catch ( IOException e ) {\n        new ErrorDialog( shell, BaseMessages.getString( PKG, \"TextFileInputDialog.IOError.DialogTitle\" ), BaseMessages\n            .getString( PKG, \"TextFileInputDialog.IOError.DialogMessage\" ), e );\n      } catch ( KettleException e ) {\n        new ErrorDialog( shell, BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ), BaseMessages.getString(\n            PKG, \"TextFileInputDialog.ErrorGettingFileDesc.DialogMessage\" ), e );\n      } finally {\n        try {\n          if ( inputStream != null ) {\n            inputStream.close();\n          }\n        } catch ( Exception e ) {\n          // Ignore errors\n        }\n      }\n    } else {\n      MessageBox mb = new MessageBox( shell, SWT.OK | SWT.ICON_ERROR );\n      mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.NoValidFileFound.DialogMessage\" ) );\n      mb.setText( BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ) );\n      mb.open();\n    }\n  }","commit_id":"fafad7375798a48be2e41bbbf5ac3c326c5df3cf","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void getCSV() {\n    TextFileInputMeta meta = new TextFileInputMeta();\n    getInfo( meta );\n    TextFileInputMeta previousMeta = (TextFileInputMeta) meta.clone();\n    FileInputList textFileList = meta.getTextFileList( transMeta );\n    InputStream fileInputStream;\n    CompressionInputStream inputStream = null;\n    StringBuilder lineStringBuilder = new StringBuilder( 256 );\n    int fileFormatType = meta.getFileFormatTypeNr();\n\n    String delimiter = transMeta.environmentSubstitute( meta.content.separator );\n    String enclosure = transMeta.environmentSubstitute( meta.content.enclosure );\n    String escapeCharacter = transMeta.environmentSubstitute( meta.content.escapeCharacter );\n\n    if ( textFileList.nrOfFiles() > 0 ) {\n      int clearFields = meta.content.header ? SWT.YES : SWT.NO;\n      int nrInputFields = meta.inputFiles.inputFields.length;\n\n      if ( meta.content.header && nrInputFields > 0 ) {\n        MessageBox mb = new MessageBox( shell, SWT.YES | SWT.NO | SWT.CANCEL | SWT.ICON_QUESTION );\n        mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.ClearFieldList.DialogMessage\" ) );\n        mb.setText( BaseMessages.getString( PKG, \"TextFileInputDialog.ClearFieldList.DialogTitle\" ) );\n        clearFields = mb.open();\n        if ( clearFields == SWT.CANCEL ) {\n          return;\n        }\n      }\n\n      try {\n        wFields.table.removeAll();\n\n        FileObject fileObject = textFileList.getFile( 0 );\n        fileInputStream = KettleVFS.getInputStream( fileObject );\n        Table table = wFields.table;\n\n        // TODO move to step's reader\n\n        CompressionProvider provider =\n            CompressionProviderFactory.getInstance().createCompressionProviderInstance( meta.content.fileCompression );\n        inputStream = provider.createInputStream( fileInputStream );\n\n        InputStreamReader reader;\n        if ( meta.getEncoding() != null && meta.getEncoding().length() > 0 ) {\n          reader = new InputStreamReader( inputStream, meta.getEncoding() );\n        } else {\n          reader = new InputStreamReader( inputStream );\n        }\n\n        EncodingType encodingType = EncodingType.guessEncodingType( reader.getEncoding() );\n\n        if ( clearFields == SWT.YES || !meta.content.header || nrInputFields > 0 ) {\n          // Scan the header-line, determine fields...\n          String line;\n\n          if ( meta.content.header || meta.inputFiles.inputFields.length == 0 ) {\n            line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineStringBuilder );\n            if ( line != null ) {\n              // Estimate the number of input fields...\n              // Chop up the line using the delimiter\n              String[] fields =\n                  TextFileInputUtils\n                      .guessStringsFromLine( transMeta, log, line, meta, delimiter, enclosure, escapeCharacter );\n\n              for ( int i = 0; i < fields.length; i++ ) {\n                String field = fields[i];\n                if ( field == null || field.length() == 0 || ( nrInputFields == 0 && !meta.content.header ) ) {\n                  field = \"Field\" + ( i + 1 );\n                } else {\n                  // Trim the field\n                  field = Const.trim( field );\n                  // Replace all spaces & - with underscore _\n                  field = Const.replace( field, \" \", \"_\" );\n                  field = Const.replace( field, \"-\", \"_\" );\n                }\n\n                TableItem item = new TableItem( table, SWT.NONE );\n                item.setText( 1, field );\n                item.setText( 2, \"String\" ); // The default type is String...\n              }\n\n              wFields.setRowNums();\n              wFields.optWidth( true );\n\n              // Copy it...\n              getInfo( meta );\n            }\n          }\n\n          // Sample a few lines to determine the correct type of the fields...\n          String shellText = BaseMessages.getString( PKG, \"TextFileInputDialog.LinesToSample.DialogTitle\" );\n          String lineText = BaseMessages.getString( PKG, \"TextFileInputDialog.LinesToSample.DialogMessage\" );\n          EnterNumberDialog end = new EnterNumberDialog( shell, 100, shellText, lineText );\n          int samples = end.open();\n          if ( samples >= 0 ) {\n            getInfo( meta );\n\n            TextFileCSVImportProgressDialog pd =\n                new TextFileCSVImportProgressDialog( shell, meta, transMeta, reader, samples, clearFields == SWT.YES );\n            String message = pd.open();\n            if ( message != null ) {\n              wFields.removeAll();\n\n              // OK, what's the result of our search?\n              getData( meta );\n\n              // If we didn't want the list to be cleared, we need to re-inject the previous values...\n              //\n              if ( clearFields == SWT.NO ) {\n                getFieldsData( previousMeta, true );\n                wFields.table.setSelection( previousMeta.inputFiles.inputFields.length, wFields.table.getItemCount() - 1 );\n              }\n\n              wFields.removeEmptyRows();\n              wFields.setRowNums();\n              wFields.optWidth( true );\n\n              EnterTextDialog etd =\n                  new EnterTextDialog( shell, BaseMessages.getString( PKG,\n                      \"TextFileInputDialog.ScanResults.DialogTitle\" ), BaseMessages.getString( PKG,\n                      \"TextFileInputDialog.ScanResults.DialogMessage\" ), message, true );\n              etd.setReadOnly();\n              etd.open();\n            }\n          }\n        } else {\n          MessageBox mb = new MessageBox( shell, SWT.OK | SWT.ICON_ERROR );\n          mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.UnableToReadHeaderLine.DialogMessage\" ) );\n          mb.setText( BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ) );\n          mb.open();\n        }\n      } catch ( IOException e ) {\n        new ErrorDialog( shell, BaseMessages.getString( PKG, \"TextFileInputDialog.IOError.DialogTitle\" ), BaseMessages\n            .getString( PKG, \"TextFileInputDialog.IOError.DialogMessage\" ), e );\n      } catch ( KettleException e ) {\n        new ErrorDialog( shell, BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ), BaseMessages.getString(\n            PKG, \"TextFileInputDialog.ErrorGettingFileDesc.DialogMessage\" ), e );\n      } finally {\n        try {\n          if ( inputStream != null ) {\n            inputStream.close();\n          }\n        } catch ( Exception e ) {\n          // Ignore errors\n        }\n      }\n    } else {\n      MessageBox mb = new MessageBox( shell, SWT.OK | SWT.ICON_ERROR );\n      mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.NoValidFileFound.DialogMessage\" ) );\n      mb.setText( BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ) );\n      mb.open();\n    }\n  }","id":48728,"modified_method":"private void getCSV() {\n    TextFileInputMeta meta = new TextFileInputMeta();\n    getInfo( meta );\n    TextFileInputMeta previousMeta = (TextFileInputMeta) meta.clone();\n    FileInputList textFileList = meta.getTextFileList( transMeta );\n    InputStream fileInputStream;\n    CompressionInputStream inputStream = null;\n    StringBuilder lineStringBuilder = new StringBuilder( 256 );\n    int fileFormatType = meta.getFileFormatTypeNr();\n\n    String delimiter = transMeta.environmentSubstitute( meta.content.separator );\n    String enclosure = transMeta.environmentSubstitute( meta.content.enclosure );\n    String escapeCharacter = transMeta.environmentSubstitute( meta.content.escapeCharacter );\n\n    if ( textFileList.nrOfFiles() > 0 ) {\n      int clearFields = meta.content.header ? SWT.YES : SWT.NO;\n      int nrInputFields = meta.inputFiles.inputFields.length;\n\n      if ( nrInputFields > 0 ) {\n        MessageBox mb = new MessageBox( shell, SWT.YES | SWT.NO | SWT.CANCEL | SWT.ICON_QUESTION );\n        mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.ClearFieldList.DialogMessage\" ) );\n        mb.setText( BaseMessages.getString( PKG, \"TextFileInputDialog.ClearFieldList.DialogTitle\" ) );\n        clearFields = mb.open();\n        if ( clearFields == SWT.CANCEL ) {\n          return;\n        }\n      }\n\n      try {\n        wFields.table.removeAll();\n\n        FileObject fileObject = textFileList.getFile( 0 );\n        fileInputStream = KettleVFS.getInputStream( fileObject );\n        Table table = wFields.table;\n\n        // TODO move to step's reader\n\n        CompressionProvider provider =\n            CompressionProviderFactory.getInstance().createCompressionProviderInstance( meta.content.fileCompression );\n        inputStream = provider.createInputStream( fileInputStream );\n\n        InputStreamReader reader;\n        if ( meta.getEncoding() != null && meta.getEncoding().length() > 0 ) {\n          reader = new InputStreamReader( inputStream, meta.getEncoding() );\n        } else {\n          reader = new InputStreamReader( inputStream );\n        }\n\n        EncodingType encodingType = EncodingType.guessEncodingType( reader.getEncoding() );\n\n          // Scan the header-line, determine fields...\n          String line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineStringBuilder );\n            if ( line != null ) {\n              // Estimate the number of input fields...\n              // Chop up the line using the delimiter\n              String[] fields =\n                  TextFileInputUtils\n                      .guessStringsFromLine( transMeta, log, line, meta, delimiter, enclosure, escapeCharacter );\n\n              for ( int i = 0; i < fields.length; i++ ) {\n                String field = fields[i];\n                if ( field == null || field.length() == 0 || !meta.content.header ) {\n                  field = \"Field\" + ( i + 1 );\n                } else {\n                  // Trim the field\n                  field = Const.trim( field );\n                  // Replace all spaces & - with underscore _\n                  field = Const.replace( field, \" \", \"_\" );\n                  field = Const.replace( field, \"-\", \"_\" );\n                }\n\n                TableItem item = new TableItem( table, SWT.NONE );\n                item.setText( 1, field );\n                item.setText( 2, \"String\" ); // The default type is String...\n              }\n\n              wFields.setRowNums();\n              wFields.optWidth( true );\n\n              // Copy it...\n              getInfo( meta );\n\n          // Sample a few lines to determine the correct type of the fields...\n          String shellText = BaseMessages.getString( PKG, \"TextFileInputDialog.LinesToSample.DialogTitle\" );\n          String lineText = BaseMessages.getString( PKG, \"TextFileInputDialog.LinesToSample.DialogMessage\" );\n          EnterNumberDialog end = new EnterNumberDialog( shell, 100, shellText, lineText );\n          int samples = end.open();\n          if ( samples >= 0 ) {\n            getInfo( meta );\n\n            TextFileCSVImportProgressDialog pd =\n                new TextFileCSVImportProgressDialog( shell, meta, transMeta, reader, samples, clearFields == SWT.YES );\n            String message = pd.open();\n            if ( message != null ) {\n              wFields.removeAll();\n\n              // OK, what's the result of our search?\n              getData( meta );\n\n              // If we didn't want the list to be cleared, we need to re-inject the previous values...\n              //\n              if ( clearFields == SWT.NO ) {\n                getFieldsData( previousMeta, true );\n                wFields.table.setSelection( previousMeta.inputFiles.inputFields.length, wFields.table.getItemCount() - 1 );\n              }\n\n              wFields.removeEmptyRows();\n              wFields.setRowNums();\n              wFields.optWidth( true );\n\n              EnterTextDialog etd =\n                  new EnterTextDialog( shell, BaseMessages.getString( PKG,\n                      \"TextFileInputDialog.ScanResults.DialogTitle\" ), BaseMessages.getString( PKG,\n                      \"TextFileInputDialog.ScanResults.DialogMessage\" ), message, true );\n              etd.setReadOnly();\n              etd.open();\n            }\n          }\n        } else {\n          MessageBox mb = new MessageBox( shell, SWT.OK | SWT.ICON_ERROR );\n          mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.UnableToReadHeaderLine.DialogMessage\" ) );\n          mb.setText( BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ) );\n          mb.open();\n        }\n      } catch ( IOException e ) {\n        new ErrorDialog( shell, BaseMessages.getString( PKG, \"TextFileInputDialog.IOError.DialogTitle\" ), BaseMessages\n            .getString( PKG, \"TextFileInputDialog.IOError.DialogMessage\" ), e );\n      } catch ( KettleException e ) {\n        new ErrorDialog( shell, BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ), BaseMessages.getString(\n            PKG, \"TextFileInputDialog.ErrorGettingFileDesc.DialogMessage\" ), e );\n      } finally {\n        try {\n          if ( inputStream != null ) {\n            inputStream.close();\n          }\n        } catch ( Exception e ) {\n          // Ignore errors\n        }\n      }\n    } else {\n      MessageBox mb = new MessageBox( shell, SWT.OK | SWT.ICON_ERROR );\n      mb.setMessage( BaseMessages.getString( PKG, \"TextFileInputDialog.NoValidFileFound.DialogMessage\" ) );\n      mb.setText( BaseMessages.getString( PKG, \"System.Dialog.Error.Title\" ) );\n      mb.open();\n    }\n  }","commit_id":"f4b158fbb64281ec1396f96c65f214c4704456bd","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private static Res reResolveStubRefs(MPSProject p) {\n    Res res = new Res();\n    Map<String, SModelReference> cache = new HashMap<String, SModelReference>();\n    for (SModelDescriptor d : p.getProject().getComponent(ProjectScope.class).getModelDescriptors()) {\n      if (!(d instanceof EditableSModelDescriptor)) continue;\n      if (!(SModelStereotype.isUserModel(d))) continue;\n      if (d == null) continue;\n\n      IModule module = d.getModule();\n      if (module == null) continue;\n\n      Set<SModelReference> toRemove = new HashSet<SModelReference>();\n      for (SNode node : d.getSModel().nodes()) {\n        for (SReference ref : node.getReferences()) {\n          SModelId modelId = ref.getTargetSModelReference().getSModelId();\n          SNodeId nodeId = ref.getTargetNodeId();\n\n          if (modelId instanceof SModelId.RegularSModelId) continue;\n          if (ref.getTargetNode() != null) continue;\n\n          String oldId = ((SModelId.ForeignSModelId) modelId).getId();\n          SModelReference replacement = null;\n\n          SModelReference cachedReplacement = cache.get(oldId);\n          if (cachedReplacement != null && module.getScope().getModelDescriptor(cachedReplacement) != null) {\n            replacement = cachedReplacement;\n          } else {\n            for (SModelDescriptor md : module.getScope().getModelDescriptors()) {\n              SModelReference mdRef = md.getSModelReference();\n              SModelId mdId = mdRef.getSModelId();\n              if (mdId instanceof SModelId.RegularSModelId) continue;\n              if (!(matches(oldId, ((SModelId.ForeignSModelId) mdId).getId()))) continue;\n              if (md.getSModel().getNodeById(nodeId) == null) continue;\n\n              replacement = md.getSModelReference();\n              cache.put(oldId, replacement);\n              break;\n            }\n          }\n\n          if (replacement != null) {\n            toRemove.add(ref.getTargetSModelReference());\n\n            SModelReference mr = replacement;\n            d.getSModel().addModelImport(mr, false);\n            ref.setTargetSModelReference(mr);\n\n            res.fixed++;\n          } else {\n            res.failed++;\n          }\n        }\n      }\n      for (SModelReference ref : toRemove) {\n        d.getSModel().deleteModelImport(ref);\n      }\n    }\n    return res;\n  }","id":48729,"modified_method":"private static Res reResolveStubRefs(MPSProject p) {\n    Res res = new Res();\n    boolean reloadNeeded = false;\n    Map<String, SModelReference> globalCache = new HashMap<String, SModelReference>();\n\n    for (IModule module : collectModulesWithGenerators(p)) {\n      Map<String, SModelReference> moduleCache = new HashMap<String, SModelReference>();\n\n      for (SModelDescriptor d : module.getOwnModelDescriptors()) {\n        if (!(d instanceof EditableSModelDescriptor)) continue;\n        if (!(SModelStereotype.isUserModel(d))) continue;\n\n        Set<SModelReference> toRemove = new HashSet<SModelReference>();\n        for (SNode node : d.getSModel().nodes()) {\n          for (SReference ref : node.getReferences()) {\n            SModelReference targetModel = ref.getTargetSModelReference();\n            if (targetModel == null) continue;\n\n            SModelId modelId = targetModel.getSModelId();\n            SNodeId nodeId = ref.getTargetNodeId();\n\n            if (modelId instanceof SModelId.RegularSModelId) continue;\n            if (ref.getTargetNode() != null) continue;\n\n            String oldId = ((SModelId.ForeignSModelId) modelId).getId();\n            ModelResolveRes replacement = getModelRefReplacement(module, oldId, nodeId, moduleCache, globalCache);\n            if (replacement.needReload) {\n              SModelDescriptor model = SModelRepository.getInstance().getModelDescriptor(replacement.replacement);\n              ModuleReference moduleRef = model.getModule().getModuleReference();\n              module.addDependency(moduleRef, false);\n              reloadNeeded = true;\n            }\n\n            if (replacement.replacement != null) {\n              toRemove.add(targetModel);\n\n              d.getSModel().addModelImport(replacement.replacement, false);\n              ref.setTargetSModelReference(replacement.replacement);\n\n              res.fixed++;\n            } else {\n              res.failed++;\n            }\n          }\n        }\n        for (SModelReference ref : toRemove) {\n          d.getSModel().deleteModelImport(ref);\n        }\n      }\n    }\n    if (reloadNeeded) {\n      ClassLoaderManager.getInstance().reloadAll(new EmptyProgressIndicator());\n    }\n    return res;\n  }","commit_id":"9bdc8cacebc80711bd6eb52f27f8a0c090d92280","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static Res reResolveStubRefs(MPSProject p) {\n    Res res = new Res();\n    boolean reloadNeeded = false;\n    Map<String, SModelReference> globalCache = new HashMap<String, SModelReference>();\n    for (IModule module : p.getModules()) {\n      Map<String, SModelReference> moduleCache = new HashMap<String, SModelReference>();\n\n      for (SModelDescriptor d : module.getOwnModelDescriptors()) {\n        if (!(d instanceof EditableSModelDescriptor)) continue;\n        if (!(SModelStereotype.isUserModel(d))) continue;\n\n        Set<SModelReference> toRemove = new HashSet<SModelReference>();\n        for (SNode node : d.getSModel().nodes()) {\n          for (SReference ref : node.getReferences()) {\n            SModelReference targetModel = ref.getTargetSModelReference();\n            if (targetModel == null) continue;\n\n            SModelId modelId = targetModel.getSModelId();\n            SNodeId nodeId = ref.getTargetNodeId();\n\n            if (modelId instanceof SModelId.RegularSModelId) continue;\n            if (ref.getTargetNode() != null) continue;\n\n            String oldId = ((SModelId.ForeignSModelId) modelId).getId();\n            ModelResolveRes replacement = getModelRefReplacement(module, oldId, nodeId, moduleCache, globalCache);\n            if (replacement.needReload) {\n              SModelDescriptor model = SModelRepository.getInstance().getModelDescriptor(replacement.replacement);\n              ModuleReference moduleRef = model.getModule().getModuleReference();\n              module.addDependency(moduleRef, false);\n              reloadNeeded = true;\n            }\n\n            if (replacement.replacement != null) {\n              toRemove.add(targetModel);\n\n              d.getSModel().addModelImport(replacement.replacement, false);\n              ref.setTargetSModelReference(replacement.replacement);\n\n              res.fixed++;\n            } else {\n              res.failed++;\n            }\n          }\n        }\n        for (SModelReference ref : toRemove) {\n          d.getSModel().deleteModelImport(ref);\n        }\n      }\n    }\n    if (reloadNeeded) {\n      ClassLoaderManager.getInstance().reloadAll(new EmptyProgressIndicator());\n    }\n    return res;\n  }","id":48730,"modified_method":"private static Res reResolveStubRefs(MPSProject p) {\n    Res res = new Res();\n    Map<String, SModelReference> cache = new HashMap<String, SModelReference>();\n    for (SModelDescriptor d : p.getProject().getComponent(ProjectScope.class).getModelDescriptors()) {\n      if (!(d instanceof EditableSModelDescriptor)) continue;\n      if (!(SModelStereotype.isUserModel(d))) continue;\n      if (d == null) continue;\n\n      IModule module = d.getModule();\n      if (module == null) continue;\n\n      Set<SModelReference> toRemove = new HashSet<SModelReference>();\n      for (SNode node : d.getSModel().nodes()) {\n        for (SReference ref : node.getReferences()) {\n          SModelId modelId = ref.getTargetSModelReference().getSModelId();\n          SNodeId nodeId = ref.getTargetNodeId();\n\n          if (modelId instanceof SModelId.RegularSModelId) continue;\n          if (ref.getTargetNode() != null) continue;\n\n          String oldId = ((SModelId.ForeignSModelId) modelId).getId();\n          SModelReference replacement = null;\n\n          SModelReference cachedReplacement = cache.get(oldId);\n          if (cachedReplacement != null && module.getScope().getModelDescriptor(cachedReplacement) != null) {\n            replacement = cachedReplacement;\n          } else {\n            for (SModelDescriptor md : module.getScope().getModelDescriptors()) {\n              SModelReference mdRef = md.getSModelReference();\n              SModelId mdId = mdRef.getSModelId();\n              if (mdId instanceof SModelId.RegularSModelId) continue;\n              if (!(matches(oldId, ((SModelId.ForeignSModelId) mdId).getId()))) continue;\n              if (md.getSModel().getNodeById(nodeId) == null) continue;\n\n              replacement = md.getSModelReference();\n              cache.put(oldId, replacement);\n              break;\n            }\n          }\n\n          if (replacement != null) {\n            toRemove.add(ref.getTargetSModelReference());\n\n            SModelReference mr = replacement;\n            d.getSModel().addModelImport(mr, false);\n            ref.setTargetSModelReference(mr);\n\n            res.fixed++;\n          } else {\n            res.failed++;\n          }\n        }\n      }\n      for (SModelReference ref : toRemove) {\n        d.getSModel().deleteModelImport(ref);\n      }\n    }\n    return res;\n  }","commit_id":"291991db9b7edfebdba04a61c9f6208c8790b23f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String messageAfter() {\n    return \"Dependencies problems fixed\";\n  }","id":48731,"modified_method":"public String messageAfter() {\n    return null;\n  }","commit_id":"d0bdf02e79aa6f37bfd28ae1c6fa14d72640c2ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void execute(MPSProject p) {\n    for (Language lang : p.getProjectModules(Language.class)) {\n      lang.addUsedDevkit(LanguageDesign_DevKit.MODULE_REFERENCE);\n      lang.save();\n    }\n    for (Language l : p.getProjectModules(Language.class)) {\n      for (SModelDescriptor aspect : l.getAspectModelDescriptors()) {\n        aspect.getSModel().addDevKit(GeneralPurpose_DevKit.MODULE_REFERENCE);\n      }\n    }\n    for (Language l : p.getProjectModules(Language.class)) {\n      for (SModelDescriptor aspect : l.getAspectModelDescriptors()) {\n        aspect.getSModel().deleteDevKit(LanguageDesign_DevKit.MODULE_REFERENCE);\n      }\n    }\n    for (Language l : p.getProjectModules(Language.class)) {\n      for (SModelDescriptor aspect : l.getAspectModelDescriptors()) {\n        SModel sModel = aspect.getSModel();\n        if (sModel.importedDevkits().contains(BootstrapLanguages_DevKit.MODULE_REFERENCE)) {\n          sModel.deleteDevKit(BootstrapLanguages_DevKit.MODULE_REFERENCE);\n        }\n      }\n    }\n    for (SModelDescriptor model : p.getProjectModels()) {\n      if (!(model instanceof EditableSModelDescriptor)) continue;\n      if (model.getModule() == null) continue;\n      new MissingDependenciesFixer(ProjectOperationContext.get(p.getProject()), model).fix(false);\n    }\n    SModelRepository.getInstance().saveAll();\n    ClassLoaderManager.getInstance().reloadAll(new EmptyProgressIndicator());\n  }","id":48732,"modified_method":"public void execute(MPSProject p) {\n    for (Language lang : p.getProjectModules(Language.class)) {\n      lang.addUsedDevkit(LanguageDesign_DevKit.MODULE_REFERENCE);\n      lang.save();\n    }\n    for (Language l : p.getProjectModules(Language.class)) {\n      for (SModelDescriptor aspect : l.getAspectModelDescriptors()) {\n        SModel sModel = aspect.getSModel();\n        sModel.addDevKit(GeneralPurpose_DevKit.MODULE_REFERENCE);\n        sModel.deleteDevKit(LanguageDesign_DevKit.MODULE_REFERENCE);\n        if (sModel.importedDevkits().contains(BootstrapLanguages_DevKit.MODULE_REFERENCE)) {\n          sModel.deleteDevKit(BootstrapLanguages_DevKit.MODULE_REFERENCE);\n        }\n      }\n    }\n    for (SModelDescriptor model : p.getProjectModels()) {\n      if (!(model instanceof EditableSModelDescriptor)) continue;\n      if (model.getModule() == null) continue;\n      new MissingDependenciesFixer(ProjectOperationContext.get(p.getProject()), model).fix(false);\n    }\n    SModelRepository.getInstance().saveAll();\n    ClassLoaderManager.getInstance().reloadAll(new EmptyProgressIndicator());\n  }","commit_id":"d0bdf02e79aa6f37bfd28ae1c6fa14d72640c2ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String messageAfter() {\n    return \"Language migrations applied\";\n  }","id":48733,"modified_method":"public String messageAfter() {\n    return null;\n  }","commit_id":"d0bdf02e79aa6f37bfd28ae1c6fa14d72640c2ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"private boolean showMessageBefore(MigrationStage stage) {\n    String mb = stage.messageBefore();\n    if (mb != null) {\n      int res = Messages.showDialog(mb, stage.title(), new String[]{\"Proceed\", \"Stop\"}, 0, Messages.getInformationIcon());\n      if (res != 0) {\n        Messages.showMessageDialog(\"You can continue migration later by executing MainMenu->Tools->Continue Migration to MPS 2.0\", \"Migration stopped\", Messages.getInformationIcon());\n        return true;\n      }\n    }\n    return false;\n  }","id":48734,"modified_method":"private boolean showMessageBefore(MigrationStage stage) {\n    String mb = stage.messageBefore();\n    if (mb == null) return true;\n\n    int res = Messages.showDialog(mb, stage.title(), new String[]{\"Proceed\", \"Stop\"}, 0, Messages.getInformationIcon());\n    return res == 0;\n  }","commit_id":"d0bdf02e79aa6f37bfd28ae1c6fa14d72640c2ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void migrate() {\n    final MigrationState msComponent = myProject.getComponent(MigrationState.class);\n    final MPSProject mpsProject = myProject.getComponent(MPSProject.class);\n\n    for (MState state : MState.values()) {\n      if (state == MState.DONE) break;\n      if (msComponent.getMigrationState() == state) {\n        final MState next = MState.values()[state.ordinal() + 1];\n        final MigrationStage stage = next.getStage();\n\n        if (stage == null) {\n          msComponent.setMigrationState(next);\n          continue;\n        }\n\n        if (showMessageBefore(stage)) return;\n\n        final Runnable stageRunnable = new StageExecutor(stage, mpsProject);\n        if (stage.needsCommand()) {\n          ModelAccess.instance().runWriteActionInCommand(stageRunnable);\n        } else {\n          stageRunnable.run();\n        }\n        msComponent.setMigrationState(next);\n\n        if (showMessageAfter(stage)) return;\n      }\n    }\n  }","id":48735,"modified_method":"public void migrate() {\n    final MigrationState msComponent = myProject.getComponent(MigrationState.class);\n    final MPSProject mpsProject = myProject.getComponent(MPSProject.class);\n\n    for (MState state : MState.values()) {\n      if (state == MState.DONE) break;\n      if (msComponent.getMigrationState() == state) {\n        final MState next = MState.values()[state.ordinal() + 1];\n        final MigrationStage stage = next.getStage();\n\n        if (stage == null) {\n          msComponent.setMigrationState(next);\n          continue;\n        }\n\n        if (!showMessageBefore(stage)) return;\n\n        final Runnable stageRunnable = new StageExecutor(stage, mpsProject);\n        if (stage.needsCommand()) {\n          ModelAccess.instance().runWriteActionInCommand(stageRunnable);\n        } else {\n          stageRunnable.run();\n        }\n\n        if (!showMessageAfter(stage)) return;\n\n        msComponent.setMigrationState(next);\n      }\n    }\n  }","commit_id":"d0bdf02e79aa6f37bfd28ae1c6fa14d72640c2ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"private boolean showMessageAfter(MigrationStage stage) {\n    String ma = stage.messageAfter();\n    if (ma != null) {\n      int res = Messages.showDialog(ma, stage.title() + \" finished\", new String[]{\"Next\", \"Stop\"}, 0, Messages.getInformationIcon());\n      if (res != 0) {\n        Messages.showMessageDialog(\"You can continue migration later by executing MainMenu->Tools->Continue Migration to MPS 2.0\", \"Migration stopped\", Messages.getInformationIcon());\n        return true;\n      }\n    }\n    return false;\n  }","id":48736,"modified_method":"private boolean showMessageAfter(MigrationStage stage) {\n    String ma = stage.messageAfter();\n    if (ma == null) return true;\n\n    int res = Messages.showDialog(ma, stage.title() + \" finished\", new String[]{\"Force next step\", \"Stop\"}, 0, Messages.getInformationIcon());\n    return res == 0;\n  }","commit_id":"d0bdf02e79aa6f37bfd28ae1c6fa14d72640c2ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String messageAfter() {\n    return \"Imports optimized\";\n  }","id":48737,"modified_method":"public String messageAfter() {\n    return null;\n  }","commit_id":"d0bdf02e79aa6f37bfd28ae1c6fa14d72640c2ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String messageAfter() {\n    return \"Persistence format changed\";\n  }","id":48738,"modified_method":"public String messageAfter() {\n    return null;\n  }","commit_id":"d0bdf02e79aa6f37bfd28ae1c6fa14d72640c2ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String messageAfter() {\n    Project ideaProject = myProject.getProject();\n    ModelCheckerTool_Tool tool = ideaProject.getComponent(ProjectPluginManager.class).getTool(ModelCheckerTool_Tool.class);\n    if (tool == null) {\n      if (myRes.failed == 0) return FINISHED + ALL_FIXED;\n      return FINISHED + myRes.fixed + \" references were fixed, \" + myRes.failed + \" not fixed. We recommend stopping migration and fixing broken references by hand.\";\n    }\n\n    ModelCheckerSettings mcSettings = ApplicationManager.getApplication().getComponent(ModelCheckerSettings.class);\n    try {\n      mcSettings.setMigrationMode(true);\n      ModelCheckerViewer res = tool.checkProject(ideaProject, ProjectOperationContext.get(ideaProject), true);\n      Set<ModelCheckerIssue> problems = res.getSearchResults().getResultObjects();\n      if (problems.isEmpty()) return FINISHED + ALL_FIXED;\n      return FINISHED + \"There are \" + problems.size() + \" unresolved references left. \\n\"+\n        \"Most probably this means that the module with a reference doesn't import the module with referenced object. \"+\n        \"We recommend to pause the migration now and correct module dependencies by hand. \"+\n        \"You can also use the \\\"Fix Missing imports\\\" action from Logical View's context menu to add these dependencies automatically and Ctrl-R shortcut to add imports one-by-one\\n\"+\n        \"After fixing module dependency, you can use Tools->Migrations 2.0->Migrate Stub Models action to search and re-resolve old stub references again.\"+\n        \"To check for broken references again, select \\\"Check Project\\\" from project's context menu in project tree.\";\n    } finally {\n      mcSettings.setMigrationMode(false);\n    }\n  }","id":48739,"modified_method":"public String messageAfter() {\n    Project ideaProject = myProject.getProject();\n    ModelCheckerTool_Tool tool = ideaProject.getComponent(ProjectPluginManager.class).getTool(ModelCheckerTool_Tool.class);\n    if (tool == null) {\n      if (myRes.failed == 0) return null;\n      return FINISHED + myRes.fixed + \" references were fixed, \" + myRes.failed + \" not fixed. We recommend stopping migration and fixing broken references by hand.\";\n    }\n\n    ModelCheckerSettings mcSettings = ApplicationManager.getApplication().getComponent(ModelCheckerSettings.class);\n    try {\n      mcSettings.setMigrationMode(true);\n      ModelCheckerViewer res = tool.checkProject(ideaProject, ProjectOperationContext.get(ideaProject), true);\n      Set<ModelCheckerIssue> problems = res.getSearchResults().getResultObjects();\n      if (problems.isEmpty()) return null;\n      return FINISHED + \"There are \" + problems.size() + \" unresolved references left. \\n\" +\n        \"Most probably this means that the module with a reference doesn't import the module with referenced object. \" +\n        \"We recommend to pause the migration now and correct module dependencies by hand. \" +\n        \"You can also use the \\\"Fix Missing imports\\\" action from Logical View's context menu to add these dependencies automatically and Ctrl-R shortcut to add imports one-by-one\\n\" +\n        \"After fixing module dependency, you can use Tools->Migrations 2.0->Migrate Stub Models action to search and re-resolve old stub references again.\" +\n        \"To check for broken references again, select \\\"Check Project\\\" from project's context menu in project tree.\";\n    } finally {\n      mcSettings.setMigrationMode(false);\n    }\n  }","commit_id":"d0bdf02e79aa6f37bfd28ae1c6fa14d72640c2ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static Res reResolveStubRefs(MPSProject p) {\n    Res res = new Res();\n    Map<String, SModelReference> cache = new HashMap<String, SModelReference>();\n    for (SModelDescriptor d : p.getProject().getComponent(ProjectScope.class).getModelDescriptors()) {\n      if (!(d instanceof EditableSModelDescriptor)) continue;\n      if (!(SModelStereotype.isUserModel(d))) continue;\n      if (d == null) continue;\n\n      IModule module = d.getModule();\n      if (module == null) continue;\n\n      Set<SModelReference> toRemove = new HashSet<SModelReference>();\n      for (SNode node : d.getSModel().nodes()) {\n        for (SReference ref : node.getReferences()) {\n          SModelId modelId = ref.getTargetSModelReference().getSModelId();\n          SNodeId nodeId = ref.getTargetNodeId();\n\n          if (modelId instanceof SModelId.RegularSModelId) continue;\n          if (ref.getTargetNode() != null) continue;\n\n          String oldId = ((SModelId.ForeignSModelId) modelId).getId();\n          SModelReference replacement = null;\n\n          SModelReference cachedReplacement = cache.get(oldId);\n          if (cachedReplacement != null && module.getScope().getModelDescriptor(cachedReplacement) != null) {\n            replacement = cachedReplacement;\n          } else {\n            for (SModelDescriptor md : module.getScope().getModelDescriptors()) {\n              SModelReference mdRef = md.getSModelReference();\n              SModelId mdId = mdRef.getSModelId();\n              if (mdId instanceof SModelId.RegularSModelId) continue;\n              if (!(matches(oldId, ((SModelId.ForeignSModelId) mdId).getId()))) continue;\n              if (md.getSModel().getNodeById(nodeId) == null) continue;\n\n              replacement = md.getSModelReference();\n              cache.put(oldId, replacement);\n              break;\n            }\n          }\n\n          if (replacement != null) {\n            toRemove.add(ref.getTargetSModelReference());\n\n            SModelReference mr = replacement;\n            d.getSModel().addModelImport(mr, false);\n            ref.setTargetSModelReference(mr);\n\n            res.fixed++;\n          } else {\n            res.failed++;\n          }\n        }\n      }\n      for (SModelReference ref : toRemove) {\n        d.getSModel().deleteModelImport(ref);\n      }\n    }\n    return res;\n  }","id":48740,"modified_method":"private static Res reResolveStubRefs(MPSProject p) {\n    Res res = new Res();\n    boolean reloadNeeded = false;\n    Map<String, SModelReference> globalCache = new HashMap<String, SModelReference>();\n    for (IModule module : p.getModules()) {\n      Map<String, SModelReference> moduleCache = new HashMap<String, SModelReference>();\n\n      for (SModelDescriptor d : module.getOwnModelDescriptors()) {\n        if (!(d instanceof EditableSModelDescriptor)) continue;\n        if (!(SModelStereotype.isUserModel(d))) continue;\n\n        Set<SModelReference> toRemove = new HashSet<SModelReference>();\n        for (SNode node : d.getSModel().nodes()) {\n          for (SReference ref : node.getReferences()) {\n            SModelReference targetModel = ref.getTargetSModelReference();\n            if (targetModel == null) continue;\n\n            SModelId modelId = targetModel.getSModelId();\n            SNodeId nodeId = ref.getTargetNodeId();\n\n            if (modelId instanceof SModelId.RegularSModelId) continue;\n            if (ref.getTargetNode() != null) continue;\n\n            String oldId = ((SModelId.ForeignSModelId) modelId).getId();\n            ModelResolveRes replacement = getModelRefReplacement(module, oldId, nodeId, moduleCache, globalCache);\n            if (replacement.needReload) {\n              SModelDescriptor model = SModelRepository.getInstance().getModelDescriptor(replacement.replacement);\n              ModuleReference moduleRef = model.getModule().getModuleReference();\n              module.addDependency(moduleRef, false);\n              reloadNeeded = true;\n            }\n\n            if (replacement.replacement != null) {\n              toRemove.add(targetModel);\n\n              d.getSModel().addModelImport(replacement.replacement, false);\n              ref.setTargetSModelReference(replacement.replacement);\n\n              res.fixed++;\n            } else {\n              res.failed++;\n            }\n          }\n        }\n        for (SModelReference ref : toRemove) {\n          d.getSModel().deleteModelImport(ref);\n        }\n      }\n    }\n    if (reloadNeeded) {\n      ClassLoaderManager.getInstance().reloadAll(new EmptyProgressIndicator());\n    }\n    return res;\n  }","commit_id":"d0bdf02e79aa6f37bfd28ae1c6fa14d72640c2ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String messageAfter() {\n    return null;\n  }","id":48741,"modified_method":"public String messageAfter() {\n    return \"Dependencies problems fixed\";\n  }","commit_id":"5d08932f93a63e7cba7128d2f66e20534777d98c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void execute(MPSProject p) {\n    for (Language lang : p.getProjectModules(Language.class)) {\n      lang.addUsedDevkit(LanguageDesign_DevKit.MODULE_REFERENCE);\n      lang.save();\n    }\n    for (Language l : p.getProjectModules(Language.class)) {\n      for (SModelDescriptor aspect : l.getAspectModelDescriptors()) {\n        SModel sModel = aspect.getSModel();\n        sModel.addDevKit(GeneralPurpose_DevKit.MODULE_REFERENCE);\n        sModel.deleteDevKit(LanguageDesign_DevKit.MODULE_REFERENCE);\n        if (sModel.importedDevkits().contains(BootstrapLanguages_DevKit.MODULE_REFERENCE)) {\n          sModel.deleteDevKit(BootstrapLanguages_DevKit.MODULE_REFERENCE);\n        }\n      }\n    }\n    for (SModelDescriptor model : p.getProjectModels()) {\n      if (!(model instanceof EditableSModelDescriptor)) continue;\n      if (model.getModule() == null) continue;\n      new MissingDependenciesFixer(ProjectOperationContext.get(p.getProject()), model).fix(false);\n    }\n    SModelRepository.getInstance().saveAll();\n    ClassLoaderManager.getInstance().reloadAll(new EmptyProgressIndicator());\n  }","id":48742,"modified_method":"public void execute(MPSProject p) {\n    for (Language lang : p.getProjectModules(Language.class)) {\n      lang.addUsedDevkit(LanguageDesign_DevKit.MODULE_REFERENCE);\n      lang.save();\n    }\n    for (Language l : p.getProjectModules(Language.class)) {\n      for (SModelDescriptor aspect : l.getAspectModelDescriptors()) {\n        aspect.getSModel().addDevKit(GeneralPurpose_DevKit.MODULE_REFERENCE);\n      }\n    }\n    for (Language l : p.getProjectModules(Language.class)) {\n      for (SModelDescriptor aspect : l.getAspectModelDescriptors()) {\n        aspect.getSModel().deleteDevKit(LanguageDesign_DevKit.MODULE_REFERENCE);\n      }\n    }\n    for (Language l : p.getProjectModules(Language.class)) {\n      for (SModelDescriptor aspect : l.getAspectModelDescriptors()) {\n        SModel sModel = aspect.getSModel();\n        if (sModel.importedDevkits().contains(BootstrapLanguages_DevKit.MODULE_REFERENCE)) {\n          sModel.deleteDevKit(BootstrapLanguages_DevKit.MODULE_REFERENCE);\n        }\n      }\n    }\n    for (SModelDescriptor model : p.getProjectModels()) {\n      if (!(model instanceof EditableSModelDescriptor)) continue;\n      if (model.getModule() == null) continue;\n      new MissingDependenciesFixer(ProjectOperationContext.get(p.getProject()), model).fix(false);\n    }\n    SModelRepository.getInstance().saveAll();\n    ClassLoaderManager.getInstance().reloadAll(new EmptyProgressIndicator());\n  }","commit_id":"5d08932f93a63e7cba7128d2f66e20534777d98c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String messageAfter() {\n    return null;\n  }","id":48743,"modified_method":"public String messageAfter() {\n    return \"Language migrations applied\";\n  }","commit_id":"5d08932f93a63e7cba7128d2f66e20534777d98c","url":"https://github.com/JetBrains/MPS"},{"original_method":"private boolean showMessageBefore(MigrationStage stage) {\n    String mb = stage.messageBefore();\n    if (mb == null) return true;\n\n    int res = Messages.showDialog(mb, stage.title(), new String[]{\"Proceed\", \"Stop\"}, 0, Messages.getInformationIcon());\n    return res == 0;\n  }","id":48744,"modified_method":"private boolean showMessageBefore(MigrationStage stage) {\n    String mb = stage.messageBefore();\n    if (mb != null) {\n      int res = Messages.showDialog(mb, stage.title(), new String[]{\"Proceed\", \"Stop\"}, 0, Messages.getInformationIcon());\n      if (res != 0) {\n        Messages.showMessageDialog(\"You can continue migration later by executing MainMenu->Tools->Continue Migration to MPS 2.0\", \"Migration stopped\", Messages.getInformationIcon());\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"5d08932f93a63e7cba7128d2f66e20534777d98c","url":"https://github.com/JetBrains/MPS"},{"original_method":"private boolean showMessageAfter(MigrationStage stage) {\n    String ma = stage.messageAfter();\n    if (ma == null) return true;\n\n    int res = Messages.showDialog(ma, stage.title() + \" finished\", new String[]{\"Force next step\", \"Stop\"}, 0, Messages.getInformationIcon());\n    return res == 0;\n  }","id":48745,"modified_method":"private boolean showMessageAfter(MigrationStage stage) {\n    String ma = stage.messageAfter();\n    if (ma != null) {\n      int res = Messages.showDialog(ma, stage.title() + \" finished\", new String[]{\"Next\", \"Stop\"}, 0, Messages.getInformationIcon());\n      if (res != 0) {\n        Messages.showMessageDialog(\"You can continue migration later by executing MainMenu->Tools->Continue Migration to MPS 2.0\", \"Migration stopped\", Messages.getInformationIcon());\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"5d08932f93a63e7cba7128d2f66e20534777d98c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void migrate() {\n    final MigrationState msComponent = myProject.getComponent(MigrationState.class);\n    final MPSProject mpsProject = myProject.getComponent(MPSProject.class);\n\n    for (MState state : MState.values()) {\n      if (state == MState.DONE) break;\n      if (msComponent.getMigrationState() == state) {\n        final MState next = MState.values()[state.ordinal() + 1];\n        final MigrationStage stage = next.getStage();\n\n        if (stage == null) {\n          msComponent.setMigrationState(next);\n          continue;\n        }\n\n        if (!showMessageBefore(stage)) return;\n\n        final Runnable stageRunnable = new StageExecutor(stage, mpsProject);\n        if (stage.needsCommand()) {\n          ModelAccess.instance().runWriteActionInCommand(stageRunnable);\n        } else {\n          stageRunnable.run();\n        }\n\n        if (!showMessageAfter(stage)) return;\n\n        msComponent.setMigrationState(next);\n      }\n    }\n  }","id":48746,"modified_method":"public void migrate() {\n    final MigrationState msComponent = myProject.getComponent(MigrationState.class);\n    final MPSProject mpsProject = myProject.getComponent(MPSProject.class);\n\n    for (MState state : MState.values()) {\n      if (state == MState.DONE) break;\n      if (msComponent.getMigrationState() == state) {\n        final MState next = MState.values()[state.ordinal() + 1];\n        final MigrationStage stage = next.getStage();\n\n        if (stage == null) {\n          msComponent.setMigrationState(next);\n          continue;\n        }\n\n        if (showMessageBefore(stage)) return;\n\n        final Runnable stageRunnable = new StageExecutor(stage, mpsProject);\n        if (stage.needsCommand()) {\n          ModelAccess.instance().runWriteActionInCommand(stageRunnable);\n        } else {\n          stageRunnable.run();\n        }\n        msComponent.setMigrationState(next);\n\n        if (showMessageAfter(stage)) return;\n      }\n    }\n  }","commit_id":"5d08932f93a63e7cba7128d2f66e20534777d98c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String messageAfter() {\n    return null;\n  }","id":48747,"modified_method":"public String messageAfter() {\n    return \"Imports optimized\";\n  }","commit_id":"5d08932f93a63e7cba7128d2f66e20534777d98c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String messageAfter() {\n    return null;\n  }","id":48748,"modified_method":"public String messageAfter() {\n    return \"Persistence format changed\";\n  }","commit_id":"5d08932f93a63e7cba7128d2f66e20534777d98c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String messageAfter() {\n    Project ideaProject = myProject.getProject();\n    ModelCheckerTool_Tool tool = ideaProject.getComponent(ProjectPluginManager.class).getTool(ModelCheckerTool_Tool.class);\n    if (tool == null) {\n      if (myRes.failed == 0) return null;\n      return FINISHED + myRes.fixed + \" references were fixed, \" + myRes.failed + \" not fixed. We recommend stopping migration and fixing broken references by hand.\";\n    }\n\n    ModelCheckerSettings mcSettings = ApplicationManager.getApplication().getComponent(ModelCheckerSettings.class);\n    try {\n      mcSettings.setMigrationMode(true);\n      ModelCheckerViewer res = tool.checkProject(ideaProject, ProjectOperationContext.get(ideaProject), true);\n      Set<ModelCheckerIssue> problems = res.getSearchResults().getResultObjects();\n      if (problems.isEmpty()) return null;\n      return FINISHED + \"There are \" + problems.size() + \" unresolved references left. \\n\" +\n        \"Most probably this means that the module with a reference doesn't import the module with referenced object. \" +\n        \"We recommend to pause the migration now and correct module dependencies by hand. \" +\n        \"You can also use the \\\"Fix Missing imports\\\" action from Logical View's context menu to add these dependencies automatically and Ctrl-R shortcut to add imports one-by-one\\n\" +\n        \"After fixing module dependency, you can use Tools->Migrations 2.0->Migrate Stub Models action to search and re-resolve old stub references again.\" +\n        \"To check for broken references again, select \\\"Check Project\\\" from project's context menu in project tree.\";\n    } finally {\n      mcSettings.setMigrationMode(false);\n    }\n  }","id":48749,"modified_method":"public String messageAfter() {\n    Project ideaProject = myProject.getProject();\n    ModelCheckerTool_Tool tool = ideaProject.getComponent(ProjectPluginManager.class).getTool(ModelCheckerTool_Tool.class);\n    if (tool == null) {\n      if (myRes.failed == 0) return FINISHED + ALL_FIXED;\n      return FINISHED + myRes.fixed + \" references were fixed, \" + myRes.failed + \" not fixed. We recommend stopping migration and fixing broken references by hand.\";\n    }\n\n    ModelCheckerSettings mcSettings = ApplicationManager.getApplication().getComponent(ModelCheckerSettings.class);\n    try {\n      mcSettings.setMigrationMode(true);\n      ModelCheckerViewer res = tool.checkProject(ideaProject, ProjectOperationContext.get(ideaProject), true);\n      Set<ModelCheckerIssue> problems = res.getSearchResults().getResultObjects();\n      if (problems.isEmpty()) return FINISHED + ALL_FIXED;\n      return FINISHED + \"There are \" + problems.size() + \" unresolved references left. \\n\"+\n        \"Most probably this means that the module with a reference doesn't import the module with referenced object. \"+\n        \"We recommend to pause the migration now and correct module dependencies by hand. \"+\n        \"You can also use the \\\"Fix Missing imports\\\" action from Logical View's context menu to add these dependencies automatically and Ctrl-R shortcut to add imports one-by-one\\n\"+\n        \"After fixing module dependency, you can use Tools->Migrations 2.0->Migrate Stub Models action to search and re-resolve old stub references again.\"+\n        \"To check for broken references again, select \\\"Check Project\\\" from project's context menu in project tree.\";\n    } finally {\n      mcSettings.setMigrationMode(false);\n    }\n  }","commit_id":"5d08932f93a63e7cba7128d2f66e20534777d98c","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static Res reResolveStubRefs(MPSProject p) {\n    Res res = new Res();\n    boolean reloadNeeded = false;\n    Map<String, SModelReference> globalCache = new HashMap<String, SModelReference>();\n    for (IModule module : p.getModules()) {\n      Map<String, SModelReference> moduleCache = new HashMap<String, SModelReference>();\n\n      for (SModelDescriptor d : module.getOwnModelDescriptors()) {\n        if (!(d instanceof EditableSModelDescriptor)) continue;\n        if (!(SModelStereotype.isUserModel(d))) continue;\n\n        Set<SModelReference> toRemove = new HashSet<SModelReference>();\n        for (SNode node : d.getSModel().nodes()) {\n          for (SReference ref : node.getReferences()) {\n            SModelReference targetModel = ref.getTargetSModelReference();\n            if (targetModel == null) continue;\n\n            SModelId modelId = targetModel.getSModelId();\n            SNodeId nodeId = ref.getTargetNodeId();\n\n            if (modelId instanceof SModelId.RegularSModelId) continue;\n            if (ref.getTargetNode() != null) continue;\n\n            String oldId = ((SModelId.ForeignSModelId) modelId).getId();\n            ModelResolveRes replacement = getModelRefReplacement(module, oldId, nodeId, moduleCache, globalCache);\n            if (replacement.needReload) {\n              SModelDescriptor model = SModelRepository.getInstance().getModelDescriptor(replacement.replacement);\n              ModuleReference moduleRef = model.getModule().getModuleReference();\n              module.addDependency(moduleRef, false);\n              reloadNeeded = true;\n            }\n\n            if (replacement.replacement != null) {\n              toRemove.add(targetModel);\n\n              d.getSModel().addModelImport(replacement.replacement, false);\n              ref.setTargetSModelReference(replacement.replacement);\n\n              res.fixed++;\n            } else {\n              res.failed++;\n            }\n          }\n        }\n        for (SModelReference ref : toRemove) {\n          d.getSModel().deleteModelImport(ref);\n        }\n      }\n    }\n    if (reloadNeeded) {\n      ClassLoaderManager.getInstance().reloadAll(new EmptyProgressIndicator());\n    }\n    return res;\n  }","id":48750,"modified_method":"private static Res reResolveStubRefs(MPSProject p) {\n    Res res = new Res();\n    Map<String, SModelReference> cache = new HashMap<String, SModelReference>();\n    for (SModelDescriptor d : p.getProject().getComponent(ProjectScope.class).getModelDescriptors()) {\n      if (!(d instanceof EditableSModelDescriptor)) continue;\n      if (!(SModelStereotype.isUserModel(d))) continue;\n      if (d == null) continue;\n\n      IModule module = d.getModule();\n      if (module == null) continue;\n\n      Set<SModelReference> toRemove = new HashSet<SModelReference>();\n      for (SNode node : d.getSModel().nodes()) {\n        for (SReference ref : node.getReferences()) {\n          SModelId modelId = ref.getTargetSModelReference().getSModelId();\n          SNodeId nodeId = ref.getTargetNodeId();\n\n          if (modelId instanceof SModelId.RegularSModelId) continue;\n          if (ref.getTargetNode() != null) continue;\n\n          String oldId = ((SModelId.ForeignSModelId) modelId).getId();\n          SModelReference replacement = null;\n\n          SModelReference cachedReplacement = cache.get(oldId);\n          if (cachedReplacement != null && module.getScope().getModelDescriptor(cachedReplacement) != null) {\n            replacement = cachedReplacement;\n          } else {\n            for (SModelDescriptor md : module.getScope().getModelDescriptors()) {\n              SModelReference mdRef = md.getSModelReference();\n              SModelId mdId = mdRef.getSModelId();\n              if (mdId instanceof SModelId.RegularSModelId) continue;\n              if (!(matches(oldId, ((SModelId.ForeignSModelId) mdId).getId()))) continue;\n              if (md.getSModel().getNodeById(nodeId) == null) continue;\n\n              replacement = md.getSModelReference();\n              cache.put(oldId, replacement);\n              break;\n            }\n          }\n\n          if (replacement != null) {\n            toRemove.add(ref.getTargetSModelReference());\n\n            SModelReference mr = replacement;\n            d.getSModel().addModelImport(mr, false);\n            ref.setTargetSModelReference(mr);\n\n            res.fixed++;\n          } else {\n            res.failed++;\n          }\n        }\n      }\n      for (SModelReference ref : toRemove) {\n        d.getSModel().deleteModelImport(ref);\n      }\n    }\n    return res;\n  }","commit_id":"5d08932f93a63e7cba7128d2f66e20534777d98c","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected void sendEmail(\n\t\t\tlong userId, long groupId, long resourcePrimKey, String portalURL,\n\t\t\tString fromName, String fromAddress, String subject, String body,\n\t\t\tList<Subscription> subscriptions, Set<Long> sent,\n\t\t\tString replyToAddress, String mailId, boolean htmlFormat)\n\t\tthrows Exception {\n\n\t\tArticle article = ArticleLocalServiceUtil.getLatestArticle(\n\t\t\tresourcePrimKey, WorkflowConstants.STATUS_APPROVED);\n\n\t\tfor (Subscription subscription : subscriptions) {\n\t\t\tlong subscribedUserId = subscription.getUserId();\n\n\t\t\tif (sent.contains(subscribedUserId)) {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(\n\t\t\t\t\t\t\"Do not send a duplicate email to user \" +\n\t\t\t\t\t\t\tsubscribedUserId);\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(\n\t\t\t\t\t\t\"Add user \" + subscribedUserId +\n\t\t\t\t\t\t\t\" to the list of users who have received an email\");\n\t\t\t\t}\n\n\t\t\t\tsent.add(subscribedUserId);\n\t\t\t}\n\n\t\t\tUser user = null;\n\n\t\t\ttry {\n\t\t\t\tuser = UserLocalServiceUtil.getUserById(subscribedUserId);\n\t\t\t}\n\t\t\tcatch (NoSuchUserException nsue) {\n\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t_log.info(\n\t\t\t\t\t\t\"Subscription \" + subscription.getSubscriptionId() +\n\t\t\t\t\t\t\t\" is stale and will be deleted\");\n\t\t\t\t}\n\n\t\t\t\tArticleLocalServiceUtil.unsubscribeAllPortlets(\n\t\t\t\t\tsubscription.getCompanyId(),\n\t\t\t\t\tsubscription.getSubscriptionId());\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!user.isActive()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\t\tint type = group.getType();\n\n\t\t\tif (!GroupLocalServiceUtil.hasUserGroup(\n\t\t\t\t\tsubscribedUserId, groupId) &&\n\t\t\t\t(type != GroupConstants.TYPE_COMMUNITY_OPEN)) {\n\n\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t_log.info(\n\t\t\t\t\t\t\"Subscription \" + subscription.getSubscriptionId() +\n\t\t\t\t\t\t\t\" is stale and will be deleted\");\n\t\t\t\t}\n\n\t\t\t\tArticleLocalServiceUtil.unsubscribeAllPortlets(\n\t\t\t\t\tsubscription.getCompanyId(),\n\t\t\t\t\tsubscription.getSubscriptionId());\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tPrincipalThreadLocal.setName(user.getUserId());\n\n\t\t\tPermissionChecker permissionChecker =\n\t\t\t\tPermissionCheckerFactoryUtil.create(user, true);\n\n\t\t\tPermissionThreadLocal.setPermissionChecker(permissionChecker);\n\n\t\t\ttry {\n\t\t\t\tif (!ArticlePermission.contains(\n\t\t\t\t\t\tpermissionChecker, resourcePrimKey, ActionKeys.VIEW)) {\n\n\t\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t\t_log.info(\n\t\t\t\t\t\t\t\"User \" + user.getUserId() +\n\t\t\t\t\t\t\t\t\" does not have view permission\");\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tPrincipalThreadLocal.setName(null);\n\t\t\t\tPermissionThreadLocal.setPermissionChecker(null);\n\t\t\t}\n\n\t\t\tString[] portletIds = ExpandoValueLocalServiceUtil.getData(\n\t\t\t\tuser.getCompanyId(), Subscription.class.getName(), \"KB\",\n\t\t\t\t\"portletIds\", subscription.getSubscriptionId(), new String[0]);\n\n\t\t\tString articleURL = null;\n\n\t\t\tfor (String portletId : portletIds) {\n\t\t\t\tarticleURL = KnowledgeBaseUtil.getArticleURL(\n\t\t\t\t\tportletId, resourcePrimKey, portalURL);\n\n\t\t\t\tif (Validator.isNotNull(articleURL)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t_log.info(\n\t\t\t\t\t\t\"Portlet \" + portletId + \" does not exist or does \" +\n\t\t\t\t\t\t\t\"not contain article \" + resourcePrimKey);\n\n\t\t\t\t\tArticleLocalServiceUtil.unsubscribe(\n\t\t\t\t\t\tsubscription.getCompanyId(), userId, portletId,\n\t\t\t\t\t\tsubscription.getClassPK());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Validator.isNull(articleURL)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString categoryTitle = LanguageUtil.get(\n\t\t\t\tuser.getLocale(), \"category.kb\");\n\t\t\tString portletName = PortalUtil.getPortletTitle(\n\t\t\t\tPortletKeys.KNOWLEDGE_BASE_ADMIN, user.getLocale());\n\n\t\t\tString curFromName = StringUtil.replace(\n\t\t\t\tfromName,\n\t\t\t\tnew String[] {\n\t\t\t\t\t\"[$CATEGORY_TITLE$]\",\n\t\t\t\t\t\"[$PORTLET_NAME$]\"\n\t\t\t\t},\n\t\t\t\tnew String[] {\n\t\t\t\t\tcategoryTitle,\n\t\t\t\t\tportletName\n\t\t\t\t});\n\n\t\t\tString curFromAddress = StringUtil.replace(\n\t\t\t\tfromAddress,\n\t\t\t\tnew String[] {\n\t\t\t\t\t\"[$CATEGORY_TITLE$]\",\n\t\t\t\t\t\"[$PORTLET_NAME$]\"\n\t\t\t\t},\n\t\t\t\tnew String[] {\n\t\t\t\t\tcategoryTitle,\n\t\t\t\t\tportletName\n\t\t\t\t});\n\n\t\t\tString articleAttachments = getEmailArticleAttachments(\n\t\t\t\tuser, article);\n\t\t\tString articleVersion = LanguageUtil.format(\n\t\t\t\tuser.getLocale(), \"version-x\",\n\t\t\t\tString.valueOf(article.getVersion()), false);\n\n\t\t\tString curSubject = StringUtil.replace(\n\t\t\t\tsubject,\n\t\t\t\tnew String[] {\n\t\t\t\t\t\"[$ARTICLE_ATTACHMENTS$]\",\n\t\t\t\t\t\"[$ARTICLE_URL$]\",\n\t\t\t\t\t\"[$ARTICLE_VERSION$]\",\n\t\t\t\t\t\"[$CATEGORY_TITLE$]\",\n\t\t\t\t\t\"[$PORTLET_NAME$]\",\n\t\t\t\t\t\"[$TO_ADDRESS$]\",\n\t\t\t\t\t\"[$TO_NAME$]\"\n\t\t\t\t},\n\t\t\t\tnew String[] {\n\t\t\t\t\tarticleAttachments,\n\t\t\t\t\tarticleURL,\n\t\t\t\t\tarticleVersion,\n\t\t\t\t\tcategoryTitle,\n\t\t\t\t\tportletName,\n\t\t\t\t\tuser.getEmailAddress(),\n\t\t\t\t\tuser.getFullName()\n\t\t\t\t});\n\n\t\t\tString curBody = StringUtil.replace(\n\t\t\t\tbody,\n\t\t\t\tnew String[] {\n\t\t\t\t\t\"[$ARTICLE_ATTACHMENTS$]\",\n\t\t\t\t\t\"[$ARTICLE_URL$]\",\n\t\t\t\t\t\"[$ARTICLE_VERSION$]\",\n\t\t\t\t\t\"[$CATEGORY_TITLE$]\",\n\t\t\t\t\t\"[$PORTLET_NAME$]\",\n\t\t\t\t\t\"[$TO_ADDRESS$]\",\n\t\t\t\t\t\"[$TO_NAME$]\"\n\t\t\t\t},\n\t\t\t\tnew String[] {\n\t\t\t\t\tarticleAttachments,\n\t\t\t\t\tarticleURL,\n\t\t\t\t\tarticleVersion,\n\t\t\t\t\tcategoryTitle,\n\t\t\t\t\tportletName,\n\t\t\t\t\tuser.getEmailAddress(),\n\t\t\t\t\tuser.getFullName()\n\t\t\t\t});\n\n\t\t\ttry {\n\t\t\t\tInternetAddress from = new InternetAddress(\n\t\t\t\t\tcurFromAddress, curFromName);\n\n\t\t\t\tInternetAddress to = new InternetAddress(\n\t\t\t\t\tuser.getEmailAddress(), user.getFullName());\n\n\t\t\t\tInternetAddress replyTo = new InternetAddress(\n\t\t\t\t\treplyToAddress, replyToAddress);\n\n\t\t\t\tMailMessage message = new MailMessage(\n\t\t\t\t\tfrom, to, curSubject, curBody, htmlFormat);\n\n\t\t\t\tmessage.setReplyTo(new InternetAddress[] {replyTo});\n\t\t\t\tmessage.setMessageId(mailId);\n\n\t\t\t\tMailServiceUtil.sendEmail(message);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e);\n\t\t\t}\n\t\t}\n\t}","id":48751,"modified_method":"protected void sendEmail(\n\t\t\tlong userId, long groupId, long resourcePrimKey, String portalURL,\n\t\t\tString fromName, String fromAddress, String subject, String body,\n\t\t\tList<Subscription> subscriptions, Set<Long> sent,\n\t\t\tString replyToAddress, String mailId, boolean htmlFormat)\n\t\tthrows Exception {\n\n\t\tArticle article = ArticleLocalServiceUtil.getLatestArticle(\n\t\t\tresourcePrimKey, WorkflowConstants.STATUS_APPROVED);\n\n\t\tfor (Subscription subscription : subscriptions) {\n\t\t\tlong subscribedUserId = subscription.getUserId();\n\n\t\t\tif (sent.contains(subscribedUserId)) {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(\n\t\t\t\t\t\t\"Do not send a duplicate email to user \" +\n\t\t\t\t\t\t\tsubscribedUserId);\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(\n\t\t\t\t\t\t\"Add user \" + subscribedUserId +\n\t\t\t\t\t\t\t\" to the list of users who have received an email\");\n\t\t\t\t}\n\n\t\t\t\tsent.add(subscribedUserId);\n\t\t\t}\n\n\t\t\tUser user = null;\n\n\t\t\ttry {\n\t\t\t\tuser = UserLocalServiceUtil.getUserById(subscribedUserId);\n\t\t\t}\n\t\t\tcatch (NoSuchUserException nsue) {\n\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t_log.info(\n\t\t\t\t\t\t\"Subscription \" + subscription.getSubscriptionId() +\n\t\t\t\t\t\t\t\" is stale and will be deleted\");\n\t\t\t\t}\n\n\t\t\t\tArticleLocalServiceUtil.unsubscribeAllPortlets(\n\t\t\t\t\tsubscription.getCompanyId(),\n\t\t\t\t\tsubscription.getSubscriptionId());\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!user.isActive()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\t\tint type = group.getType();\n\n\t\t\tif (!GroupLocalServiceUtil.hasUserGroup(\n\t\t\t\t\tsubscribedUserId, groupId) &&\n\t\t\t\t(type != GroupConstants.TYPE_COMMUNITY_OPEN)) {\n\n\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t_log.info(\n\t\t\t\t\t\t\"Subscription \" + subscription.getSubscriptionId() +\n\t\t\t\t\t\t\t\" is stale and will be deleted\");\n\t\t\t\t}\n\n\t\t\t\tArticleLocalServiceUtil.unsubscribeAllPortlets(\n\t\t\t\t\tsubscription.getCompanyId(),\n\t\t\t\t\tsubscription.getSubscriptionId());\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tPrincipalThreadLocal.setName(user.getUserId());\n\n\t\t\tPermissionChecker permissionChecker =\n\t\t\t\tPermissionCheckerFactoryUtil.create(user, true);\n\n\t\t\tPermissionThreadLocal.setPermissionChecker(permissionChecker);\n\n\t\t\ttry {\n\t\t\t\tif (!ArticlePermission.contains(\n\t\t\t\t\t\tpermissionChecker, resourcePrimKey, ActionKeys.VIEW)) {\n\n\t\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t\t_log.info(\n\t\t\t\t\t\t\t\"User \" + user.getUserId() +\n\t\t\t\t\t\t\t\t\" does not have view permission\");\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tPrincipalThreadLocal.setName(null);\n\t\t\t\tPermissionThreadLocal.setPermissionChecker(null);\n\t\t\t}\n\n\t\t\tString[] portletIds = ExpandoValueLocalServiceUtil.getData(\n\t\t\t\tuser.getCompanyId(), Subscription.class.getName(), \"KB\",\n\t\t\t\t\"portletIds\", subscription.getSubscriptionId(), new String[0]);\n\n\t\t\tString articleURL = null;\n\n\t\t\tfor (String portletId : portletIds) {\n\t\t\t\tarticleURL = KnowledgeBaseUtil.getArticleURL(\n\t\t\t\t\tportletId, resourcePrimKey, portalURL);\n\n\t\t\t\tif (Validator.isNotNull(articleURL)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t_log.info(\n\t\t\t\t\t\t\"Portlet \" + portletId + \" does not exist or does \" +\n\t\t\t\t\t\t\t\"not contain article \" + resourcePrimKey);\n\n\t\t\t\t\tArticleLocalServiceUtil.unsubscribe(\n\t\t\t\t\t\tsubscription.getCompanyId(), userId, portletId,\n\t\t\t\t\t\tsubscription.getClassPK());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Validator.isNull(articleURL)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString categoryTitle = LanguageUtil.get(\n\t\t\t\tuser.getLocale(), \"category.kb\");\n\t\t\tString portletName = PortalUtil.getPortletTitle(\n\t\t\t\tPortletKeys.KNOWLEDGE_BASE_ADMIN, user.getLocale());\n\n\t\t\tString curFromName = StringUtil.replace(\n\t\t\t\tfromName,\n\t\t\t\tnew String[] {\n\t\t\t\t\t\"[$CATEGORY_TITLE$]\",\n\t\t\t\t\t\"[$PORTLET_NAME$]\"\n\t\t\t\t},\n\t\t\t\tnew String[] {\n\t\t\t\t\tcategoryTitle,\n\t\t\t\t\tportletName\n\t\t\t\t});\n\n\t\t\tString curFromAddress = StringUtil.replace(\n\t\t\t\tfromAddress,\n\t\t\t\tnew String[] {\n\t\t\t\t\t\"[$CATEGORY_TITLE$]\",\n\t\t\t\t\t\"[$PORTLET_NAME$]\"\n\t\t\t\t},\n\t\t\t\tnew String[] {\n\t\t\t\t\tcategoryTitle,\n\t\t\t\t\tportletName\n\t\t\t\t});\n\n\t\t\tString articleAttachments = getEmailArticleAttachments(\n\t\t\t\tarticle, user.getLocale());\n\t\t\tString articleVersion = LanguageUtil.format(\n\t\t\t\tuser.getLocale(), \"version-x\",\n\t\t\t\tString.valueOf(article.getVersion()), false);\n\n\t\t\tString curSubject = StringUtil.replace(\n\t\t\t\tsubject,\n\t\t\t\tnew String[] {\n\t\t\t\t\t\"[$ARTICLE_ATTACHMENTS$]\",\n\t\t\t\t\t\"[$ARTICLE_URL$]\",\n\t\t\t\t\t\"[$ARTICLE_VERSION$]\",\n\t\t\t\t\t\"[$CATEGORY_TITLE$]\",\n\t\t\t\t\t\"[$PORTLET_NAME$]\",\n\t\t\t\t\t\"[$TO_ADDRESS$]\",\n\t\t\t\t\t\"[$TO_NAME$]\"\n\t\t\t\t},\n\t\t\t\tnew String[] {\n\t\t\t\t\tarticleAttachments,\n\t\t\t\t\tarticleURL,\n\t\t\t\t\tarticleVersion,\n\t\t\t\t\tcategoryTitle,\n\t\t\t\t\tportletName,\n\t\t\t\t\tuser.getEmailAddress(),\n\t\t\t\t\tuser.getFullName()\n\t\t\t\t});\n\n\t\t\tString curBody = StringUtil.replace(\n\t\t\t\tbody,\n\t\t\t\tnew String[] {\n\t\t\t\t\t\"[$ARTICLE_ATTACHMENTS$]\",\n\t\t\t\t\t\"[$ARTICLE_URL$]\",\n\t\t\t\t\t\"[$ARTICLE_VERSION$]\",\n\t\t\t\t\t\"[$CATEGORY_TITLE$]\",\n\t\t\t\t\t\"[$PORTLET_NAME$]\",\n\t\t\t\t\t\"[$TO_ADDRESS$]\",\n\t\t\t\t\t\"[$TO_NAME$]\"\n\t\t\t\t},\n\t\t\t\tnew String[] {\n\t\t\t\t\tarticleAttachments,\n\t\t\t\t\tarticleURL,\n\t\t\t\t\tarticleVersion,\n\t\t\t\t\tcategoryTitle,\n\t\t\t\t\tportletName,\n\t\t\t\t\tuser.getEmailAddress(),\n\t\t\t\t\tuser.getFullName()\n\t\t\t\t});\n\n\t\t\ttry {\n\t\t\t\tInternetAddress from = new InternetAddress(\n\t\t\t\t\tcurFromAddress, curFromName);\n\n\t\t\t\tInternetAddress to = new InternetAddress(\n\t\t\t\t\tuser.getEmailAddress(), user.getFullName());\n\n\t\t\t\tInternetAddress replyTo = new InternetAddress(\n\t\t\t\t\treplyToAddress, replyToAddress);\n\n\t\t\t\tMailMessage message = new MailMessage(\n\t\t\t\t\tfrom, to, curSubject, curBody, htmlFormat);\n\n\t\t\t\tmessage.setReplyTo(new InternetAddress[] {replyTo});\n\t\t\t\tmessage.setMessageId(mailId);\n\n\t\t\t\tMailServiceUtil.sendEmail(message);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e);\n\t\t\t}\n\t\t}\n\t}","commit_id":"aa3d5ec09b9d7f1e5f33b3844627f81c658b066e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected String getEmailArticleAttachments(User user, Article article)\n\t\tthrows Exception {\n\n\t\tString[] fileNames = article.getAttachmentsFileNames();\n\n\t\tif (fileNames.length <= 0) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tStringBundler sb = new StringBundler(fileNames.length * 5);\n\n\t\tfor (String fileName : fileNames) {\n\t\t\tlong kb = DLLocalServiceUtil.getFileSize(\n\t\t\t\tarticle.getCompanyId(), CompanyConstants.SYSTEM, fileName);\n\n\t\t\tsb.append(FileUtil.getShortFileName(fileName));\n\t\t\tsb.append(\" (\");\n\t\t\tsb.append(TextFormatter.formatKB(kb, user.getLocale()));\n\t\t\tsb.append(\"k)\");\n\t\t\tsb.append(\"<br />\");\n\t\t}\n\n\t\treturn sb.toString();\n\t}","id":48752,"modified_method":"protected String getEmailArticleAttachments(Article article, Locale locale)\n\t\tthrows Exception {\n\n\t\tString[] fileNames = article.getAttachmentsFileNames();\n\n\t\tif (fileNames.length <= 0) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tStringBundler sb = new StringBundler(fileNames.length * 5);\n\n\t\tfor (String fileName : fileNames) {\n\t\t\tlong kb = DLLocalServiceUtil.getFileSize(\n\t\t\t\tarticle.getCompanyId(), CompanyConstants.SYSTEM, fileName);\n\n\t\t\tsb.append(FileUtil.getShortFileName(fileName));\n\t\t\tsb.append(\" (\");\n\t\t\tsb.append(TextFormatter.formatKB(kb, locale));\n\t\t\tsb.append(\"k)\");\n\t\t\tsb.append(\"<br />\");\n\t\t}\n\n\t\treturn sb.toString();\n\t}","commit_id":"aa3d5ec09b9d7f1e5f33b3844627f81c658b066e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void doReceive(Message message) throws Exception {\n\t\tlong companyId = message.getLong(\"companyId\");\n\t\tlong groupId = message.getLong(\"groupId\");\n\t\tlong userId = message.getLong(\"userId\");\n\t\tlong resourcePrimKey = message.getLong(\"resourcePrimKey\");\n\t\tString portalURL = message.getString(\"portalURL\");\n\t\tString fromName = message.getString(\"fromName\");\n\t\tString fromAddress = message.getString(\"fromAddress\");\n\t\tString subject = message.getString(\"subject\");\n\t\tString body = message.getString(\"body\");\n\t\tString replyToAddress = message.getString(\"replyToAddress\");\n\t\tString mailId = message.getString(\"mailId\");\n\t\tboolean htmlFormat = message.getBoolean(\"htmlFormat\");\n\n\t\tSet<Long> sent = new HashSet<Long>();\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\n\t\t\t\t\"Sending notifications for {mailId=\" + mailId +\n\t\t\t\t\t\", resourcePrimKey=\" + resourcePrimKey + \"}\");\n\t\t}\n\n\t\t// Article\n\n\t\tList<Subscription> subscriptions =\n\t\t\tSubscriptionLocalServiceUtil.getSubscriptions(\n\t\t\t\tcompanyId, Article.class.getName(), resourcePrimKey);\n\n\t\tsendEmail(\n\t\t\tuserId, groupId, resourcePrimKey, portalURL, fromName, fromAddress,\n\t\t\tsubject, body, subscriptions, sent, replyToAddress, mailId,\n\t\t\thtmlFormat);\n\n\t\tArticle article = ArticleLocalServiceUtil.getLatestArticle(\n\t\t\tresourcePrimKey, WorkflowConstants.STATUS_APPROVED);\n\n\t\twhile (article.getParentResourcePrimKey() !=\n\t\t\t\t\tArticleConstants.DEFAULT_PARENT_RESOURCE_PRIM_KEY) {\n\n\t\t\tarticle = ArticleLocalServiceUtil.getLatestArticle(\n\t\t\t\tarticle.getParentResourcePrimKey(),\n\t\t\t\tWorkflowConstants.STATUS_APPROVED);\n\n\t\t\tsubscriptions = SubscriptionLocalServiceUtil.getSubscriptions(\n\t\t\t\tcompanyId, Article.class.getName(),\n\t\t\t\tarticle.getResourcePrimKey());\n\n\t\t\tsendEmail(\n\t\t\t\tuserId, groupId, resourcePrimKey, portalURL, fromName,\n\t\t\t\tfromAddress, subject, body, subscriptions, sent, replyToAddress,\n\t\t\t\tmailId, htmlFormat);\n\t\t}\n\n\t\t// Articles\n\n\t\tsubscriptions = SubscriptionLocalServiceUtil.getSubscriptions(\n\t\t\tcompanyId, Article.class.getName(), groupId);\n\n\t\tsendEmail(\n\t\t\tuserId, groupId, resourcePrimKey, portalURL, fromName, fromAddress,\n\t\t\tsubject, body, subscriptions, sent, replyToAddress, mailId,\n\t\t\thtmlFormat);\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Finished sending notifications\");\n\t\t}\n\t}","id":48753,"modified_method":"public void doReceive(Message message) throws Exception {\n\t\tlong companyId = message.getLong(\"companyId\");\n\t\tlong groupId = message.getLong(\"groupId\");\n\t\tlong userId = message.getLong(\"userId\");\n\t\tlong resourcePrimKey = message.getLong(\"resourcePrimKey\");\n\t\tString portalURL = message.getString(\"portalURL\");\n\t\tString fromName = message.getString(\"fromName\");\n\t\tString fromAddress = message.getString(\"fromAddress\");\n\t\tString subject = message.getString(\"subject\");\n\t\tString body = message.getString(\"body\");\n\t\tString replyToAddress = message.getString(\"replyToAddress\");\n\t\tString mailId = message.getString(\"mailId\");\n\t\tboolean htmlFormat = message.getBoolean(\"htmlFormat\");\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\n\t\t\t\t\"Sending notifications for {mailId=\" + mailId +\n\t\t\t\t\t\", resourcePrimKey=\" + resourcePrimKey + \"}\");\n\t\t}\n\n\t\tArticle article = ArticleLocalServiceUtil.getLatestArticle(\n\t\t\tresourcePrimKey, WorkflowConstants.STATUS_APPROVED);\n\n\t\tSubscriptionSender subscriptionSender = new AdminSubscriptionSender(\n\t\t\tarticle, portalURL);\n\n\t\tsubscriptionSender.setCompanyId(companyId);\n\t\tsubscriptionSender.setUserId(userId);\n\t\tsubscriptionSender.setGroupId(groupId);\n\t\tsubscriptionSender.setFrom(fromName, fromAddress);\n\t\tsubscriptionSender.setSubject(subject);\n\t\tsubscriptionSender.setBody(body);\n\t\tsubscriptionSender.setReplyToAddress(replyToAddress);\n\t\tsubscriptionSender.setMailId(mailId);\n\t\tsubscriptionSender.setHtmlFormat(htmlFormat);\n\n\t\tsubscriptionSender.notifyPersistedSubscribers(\n\t\t\tArticle.class.getName(), groupId);\n\t\tsubscriptionSender.notifyPersistedSubscribers(\n\t\t\tArticle.class.getName(), resourcePrimKey);\n\n\t\twhile (article.getParentResourcePrimKey() !=\n\t\t\t\t\tArticleConstants.DEFAULT_PARENT_RESOURCE_PRIM_KEY) {\n\n\t\t\tarticle = ArticleLocalServiceUtil.getLatestArticle(\n\t\t\t\tarticle.getParentResourcePrimKey(),\n\t\t\t\tWorkflowConstants.STATUS_APPROVED);\n\n\t\t\tsubscriptionSender.notifyPersistedSubscribers(\n\t\t\t\tArticle.class.getName(), article.getResourcePrimKey());\n\t\t}\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Finished sending notifications\");\n\t\t}\n\t}","commit_id":"aa3d5ec09b9d7f1e5f33b3844627f81c658b066e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public AbstractFileActions_ActionGroup() {\n    super(\"AbstractFileActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      AbstractFileActions_ActionGroup.this.addAnchor(AbstractFileActions_ActionGroup.LABEL_ID_new);\n      AbstractFileActions_ActionGroup.this.addSeparator();\n      AbstractFileActions_ActionGroup.this.addAnchor(AbstractFileActions_ActionGroup.LABEL_ID_ideaActions);\n      {\n        GeneratedAction newAction = new RenameFileOrDirectory_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        AbstractFileActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new MoveFileOrDirectory_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        AbstractFileActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new FileDelete_Action(new FileDeleteActionFixed());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        AbstractFileActions_ActionGroup.this.addAction(oldAction);\n      }\n      AbstractFileActions_ActionGroup.this.addSeparator();\n      AbstractFileActions_ActionGroup.this.addAnchor(AbstractFileActions_ActionGroup.LABEL_ID_vcs);\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48754,"modified_method":"public AbstractFileActions_ActionGroup() {\n    super(\"AbstractFileActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(AbstractFileActions_ActionGroup.LABEL_ID_new);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        AbstractFileActions_ActionGroup.this.addAction(action);\n      }\n      AbstractFileActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(AbstractFileActions_ActionGroup.LABEL_ID_ideaActions);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        AbstractFileActions_ActionGroup.this.addAction(action);\n      }\n      {\n        GeneratedAction newAction = new RenameFileOrDirectory_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        AbstractFileActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new MoveFileOrDirectory_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        AbstractFileActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new FileDelete_Action(new FileDeleteActionFixed());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        AbstractFileActions_ActionGroup.this.addAction(oldAction);\n      }\n      AbstractFileActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(AbstractFileActions_ActionGroup.LABEL_ID_vcs);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        AbstractFileActions_ActionGroup.this.addAction(action);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Code_ActionGroup() {\n    super(\"Code\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      Code_ActionGroup.this.addAnchor(Code_ActionGroup.LABEL_ID_overrideImplement);\n      Code_ActionGroup.this.addSeparator();\n      Code_ActionGroup.this.addAnchor(Code_ActionGroup.LABEL_ID_comments);\n      Code_ActionGroup.this.addSeparator();\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48755,"modified_method":"public Code_ActionGroup() {\n    super(\"Code\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(Code_ActionGroup.LABEL_ID_overrideImplement);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        Code_ActionGroup.this.addAction(action);\n      }\n      Code_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(Code_ActionGroup.LABEL_ID_comments);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        Code_ActionGroup.this.addAction(action);\n      }\n      Code_ActionGroup.this.addSeparator();\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public DebugTool_ActionGroup() {\n    super(\"DebugTool\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      DebugTool_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new Resume_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DebugTool_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new Pause_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DebugTool_ActionGroup.this.addAction(oldAction);\n      }\n      DebugTool_ActionGroup.this.addAnchor(DebugTool_ActionGroup.LABEL_ID_StopAction);\n      DebugTool_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new EvaluateExpression_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DebugTool_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ExportThreads_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DebugTool_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ViewBreakpoints_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DebugTool_ActionGroup.this.addAction(oldAction);\n      }\n      DebugTool_ActionGroup.this.addAnchor(DebugTool_ActionGroup.LABEL_ID_MuteAction);\n      DebugTool_ActionGroup.this.addSeparator();\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48756,"modified_method":"public DebugTool_ActionGroup() {\n    super(\"DebugTool\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      DebugTool_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new Resume_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DebugTool_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new Pause_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DebugTool_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(DebugTool_ActionGroup.LABEL_ID_StopAction);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        DebugTool_ActionGroup.this.addAction(action);\n      }\n      DebugTool_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new EvaluateExpression_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DebugTool_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ExportThreads_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DebugTool_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ViewBreakpoints_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DebugTool_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(DebugTool_ActionGroup.LABEL_ID_MuteAction);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        DebugTool_ActionGroup.this.addAction(action);\n      }\n      DebugTool_ActionGroup.this.addSeparator();\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public DevkitActions_ActionGroup() {\n    super(\"DevkitActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        GeneratedAction newAction = new SetModuleFolder_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DevkitActions_ActionGroup.this.addAction(oldAction);\n      }\n      DevkitActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new AddModuleToProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DevkitActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new RemoveModuleFromProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DevkitActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new DeleteModules_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DevkitActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new AnalyzeClasspath_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DevkitActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CopyModuleName_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DevkitActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new UpgradeModelPersistenceInModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DevkitActions_ActionGroup.this.addAction(oldAction);\n      }\n      DevkitActions_ActionGroup.this.addSeparator();\n      DevkitActions_ActionGroup.this.addAnchor(DevkitActions_ActionGroup.LABEL_ID_favorites);\n      DevkitActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new DevkitProperties_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DevkitActions_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48757,"modified_method":"public DevkitActions_ActionGroup() {\n    super(\"DevkitActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        GeneratedAction newAction = new SetModuleFolder_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DevkitActions_ActionGroup.this.addAction(oldAction);\n      }\n      DevkitActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new AddModuleToProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DevkitActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new RemoveModuleFromProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DevkitActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new DeleteModules_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DevkitActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new AnalyzeClasspath_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DevkitActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CopyModuleName_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DevkitActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new UpgradeModelPersistenceInModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DevkitActions_ActionGroup.this.addAction(oldAction);\n      }\n      DevkitActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(DevkitActions_ActionGroup.LABEL_ID_favorites);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        DevkitActions_ActionGroup.this.addAction(action);\n      }\n      DevkitActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new DevkitProperties_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        DevkitActions_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Edit_ActionGroup() {\n    super(\"Edit\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      Edit_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new QuickCreate_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Edit_ActionGroup.this.addAction(oldAction);\n      }\n      Edit_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new CopyNodeReference_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Edit_ActionGroup.this.addAction(oldAction);\n      }\n      Edit_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new AddModelImport_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Edit_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new AddModelImportByRoot_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Edit_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new AddLanguageImport_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Edit_ActionGroup.this.addAction(oldAction);\n      }\n      Edit_ActionGroup.this.addSeparator();\n      Edit_ActionGroup.this.addAnchor(Edit_ActionGroup.LABEL_ID_custom);\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48758,"modified_method":"public Edit_ActionGroup() {\n    super(\"Edit\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      Edit_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new QuickCreate_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Edit_ActionGroup.this.addAction(oldAction);\n      }\n      Edit_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new CopyNodeReference_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Edit_ActionGroup.this.addAction(oldAction);\n      }\n      Edit_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new AddModelImport_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Edit_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new AddModelImportByRoot_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Edit_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new AddLanguageImport_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Edit_ActionGroup.this.addAction(oldAction);\n      }\n      Edit_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(Edit_ActionGroup.LABEL_ID_custom);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        Edit_ActionGroup.this.addAction(action);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public EditorInternal_ActionGroup() {\n    super(\"Internal\", ID);\n    this.setIsInternal(true);\n    this.setPopup(true);\n    try {\n      {\n        GeneratedAction newAction = new TestNodePath_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorInternal_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CellProperties_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorInternal_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GenerationIntentions_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorInternal_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new SurroundWithIntentions_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorInternal_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowCellInExplorer_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorInternal_ActionGroup.this.addAction(oldAction);\n      }\n      EditorInternal_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new PrintNodeID_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorInternal_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new HighlightCellDependencies_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorInternal_ActionGroup.this.addAction(oldAction);\n      }\n      EditorInternal_ActionGroup.this.addAnchor(EditorInternal_ActionGroup.LABEL_ID_VCS);\n      EditorInternal_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new LanguagePaths_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorInternal_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48759,"modified_method":"public EditorInternal_ActionGroup() {\n    super(\"Internal\", ID);\n    this.setIsInternal(true);\n    this.setPopup(true);\n    try {\n      {\n        GeneratedAction newAction = new TestNodePath_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorInternal_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CellProperties_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorInternal_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GenerationIntentions_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorInternal_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new SurroundWithIntentions_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorInternal_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowCellInExplorer_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorInternal_ActionGroup.this.addAction(oldAction);\n      }\n      EditorInternal_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new PrintNodeID_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorInternal_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new HighlightCellDependencies_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorInternal_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(EditorInternal_ActionGroup.LABEL_ID_VCS);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        EditorInternal_ActionGroup.this.addAction(action);\n      }\n      EditorInternal_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new LanguagePaths_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorInternal_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public EditorPopup_ActionGroup() {\n    super(\"EditorPopup\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      EditorPopup_ActionGroup.this.addAnchor(EditorPopup_ActionGroup.LABEL_ID_goByRef);\n      {\n        GeneratedAction newAction = new GoByCurrentReference_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      EditorPopup_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new SelectInActionAdapter_Action(new SelectInAction());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowInProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowNodeInExplorer_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowNodeInInspector_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowClassInHierarchy_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowConceptInHierarchy_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowImplementations_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      EditorPopup_ActionGroup.this.addAnchor(EditorPopup_ActionGroup.LABEL_ID_structure);\n      EditorPopup_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new PasteAsJavaStatements_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new PasteAsJavaMethods_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      EditorPopup_ActionGroup.this.addSeparator();\n      EditorPopup_ActionGroup.this.addAnchor(EditorPopup_ActionGroup.LABEL_ID_folding);\n      EditorPopup_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GoToConceptDeclaration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToEditorDeclaration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToRules_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      EditorPopup_ActionGroup.this.addSeparator();\n      EditorPopup_ActionGroup.this.addAnchor(EditorPopup_ActionGroup.LABEL_ID_generateModel);\n      {\n        GeneratedAction newAction = new GoToUsageInMappingConfig_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      EditorPopup_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ShowGenerationTrace_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowGenerationTraceback_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      EditorPopup_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new FindSpecificNodeUsages_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new FastFindNodeUsages_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      EditorPopup_ActionGroup.this.addAnchor(EditorPopup_ActionGroup.LABEL_ID_find_instances);\n      EditorPopup_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new CloneRoot_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowParameters_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowNodeInfo_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ModelPropertiesWOShortcut_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      EditorPopup_ActionGroup.this.addSeparator();\n      EditorPopup_ActionGroup.this.addAnchor(EditorPopup_ActionGroup.LABEL_ID_vcs);\n      EditorPopup_ActionGroup.this.addSeparator();\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48760,"modified_method":"public EditorPopup_ActionGroup() {\n    super(\"EditorPopup\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(EditorPopup_ActionGroup.LABEL_ID_goByRef);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        EditorPopup_ActionGroup.this.addAction(action);\n      }\n      {\n        GeneratedAction newAction = new GoByCurrentReference_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      EditorPopup_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new SelectInActionAdapter_Action(new SelectInAction());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowInProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowNodeInExplorer_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowNodeInInspector_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowClassInHierarchy_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowConceptInHierarchy_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowImplementations_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(EditorPopup_ActionGroup.LABEL_ID_structure);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        EditorPopup_ActionGroup.this.addAction(action);\n      }\n      EditorPopup_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new PasteAsJavaStatements_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new PasteAsJavaMethods_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      EditorPopup_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(EditorPopup_ActionGroup.LABEL_ID_folding);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        EditorPopup_ActionGroup.this.addAction(action);\n      }\n      EditorPopup_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GoToConceptDeclaration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToEditorDeclaration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToRules_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      EditorPopup_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(EditorPopup_ActionGroup.LABEL_ID_generateModel);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        EditorPopup_ActionGroup.this.addAction(action);\n      }\n      {\n        GeneratedAction newAction = new GoToUsageInMappingConfig_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      EditorPopup_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ShowGenerationTrace_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowGenerationTraceback_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      EditorPopup_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new FindSpecificNodeUsages_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new FastFindNodeUsages_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(EditorPopup_ActionGroup.LABEL_ID_find_instances);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        EditorPopup_ActionGroup.this.addAction(action);\n      }\n      EditorPopup_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new CloneRoot_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowParameters_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowNodeInfo_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ModelPropertiesWOShortcut_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorPopup_ActionGroup.this.addAction(oldAction);\n      }\n      EditorPopup_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(EditorPopup_ActionGroup.LABEL_ID_vcs);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        EditorPopup_ActionGroup.this.addAction(action);\n      }\n      EditorPopup_ActionGroup.this.addSeparator();\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public EditorTabActions_ActionGroup() {\n    super(\"EditorTabActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        GeneratedAction newAction = new DeleteNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n      EditorTabActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GoToConceptDeclaration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToEditorDeclaration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToRules_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowNodeInExplorer_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n      EditorTabActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new FindSpecificNodeUsages_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new FastFindNodeUsages_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n      EditorTabActions_ActionGroup.this.addAnchor(EditorTabActions_ActionGroup.LABEL_ID_find_instances);\n      EditorTabActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ShowConceptInHierarchy_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n      EditorTabActions_ActionGroup.this.addAnchor(EditorTabActions_ActionGroup.LABEL_ID_structure);\n      EditorTabActions_ActionGroup.this.addAnchor(EditorTabActions_ActionGroup.LABEL_ID_diff);\n      EditorTabActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ShowErrorMessage_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48761,"modified_method":"public EditorTabActions_ActionGroup() {\n    super(\"EditorTabActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        GeneratedAction newAction = new DeleteNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n      EditorTabActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GoToConceptDeclaration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToEditorDeclaration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToRules_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowNodeInExplorer_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n      EditorTabActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new FindSpecificNodeUsages_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new FastFindNodeUsages_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(EditorTabActions_ActionGroup.LABEL_ID_find_instances);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        EditorTabActions_ActionGroup.this.addAction(action);\n      }\n      EditorTabActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ShowConceptInHierarchy_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(EditorTabActions_ActionGroup.LABEL_ID_structure);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        EditorTabActions_ActionGroup.this.addAction(action);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(EditorTabActions_ActionGroup.LABEL_ID_diff);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        EditorTabActions_ActionGroup.this.addAction(action);\n      }\n      EditorTabActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ShowErrorMessage_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        EditorTabActions_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public FavoritesPopup_ActionGroup() {\n    super(\"Add to Favorites\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      FavoritesPopup_ActionGroup.this.addAnchor(FavoritesPopup_ActionGroup.LABEL_ID_addToFavorites);\n      FavoritesPopup_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new AddToNewFavoritesList_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        FavoritesPopup_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48762,"modified_method":"public FavoritesPopup_ActionGroup() {\n    super(\"Add to Favorites\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(FavoritesPopup_ActionGroup.LABEL_ID_addToFavorites);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        FavoritesPopup_ActionGroup.this.addAction(action);\n      }\n      FavoritesPopup_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new AddToNewFavoritesList_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        FavoritesPopup_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Favorites_ActionGroup() {\n    super(\"Favorites\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      Favorites_ActionGroup.this.addAnchor(Favorites_ActionGroup.LABEL_ID_generate);\n      Favorites_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new RenameFavoritesList_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Favorites_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new RemoveFromFavorites_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Favorites_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new DeleteFavoritesList_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Favorites_ActionGroup.this.addAction(oldAction);\n      }\n      Favorites_ActionGroup.this.addAnchor(Favorites_ActionGroup.LABEL_ID_popup);\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48763,"modified_method":"public Favorites_ActionGroup() {\n    super(\"Favorites\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(Favorites_ActionGroup.LABEL_ID_generate);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        Favorites_ActionGroup.this.addAction(action);\n      }\n      Favorites_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new RenameFavoritesList_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Favorites_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new RemoveFromFavorites_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Favorites_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new DeleteFavoritesList_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Favorites_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(Favorites_ActionGroup.LABEL_ID_popup);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        Favorites_ActionGroup.this.addAction(action);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public FileActions_ActionGroup() {\n    super(\"FileActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      FileActions_ActionGroup.this.addAnchor(FileActions_ActionGroup.LABEL_ID_abstractFileActions);\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48764,"modified_method":"public FileActions_ActionGroup() {\n    super(\"FileActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(FileActions_ActionGroup.LABEL_ID_abstractFileActions);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        FileActions_ActionGroup.this.addAction(action);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public FolderActions_ActionGroup() {\n    super(\"FolderActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      FolderActions_ActionGroup.this.addAnchor(FolderActions_ActionGroup.LABEL_ID_abstractFileActions);\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48765,"modified_method":"public FolderActions_ActionGroup() {\n    super(\"FolderActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(FolderActions_ActionGroup.LABEL_ID_abstractFileActions);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        FolderActions_ActionGroup.this.addAction(action);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Generate_ActionGroup() {\n    super(\"Generate\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      Generate_ActionGroup.this.addAnchor(Generate_ActionGroup.LABEL_ID_saveTransientModels);\n      {\n        GeneratedAction newAction = new CheckModelsBeforeGeneration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Generate_ActionGroup.this.addAction(oldAction);\n      }\n      Generate_ActionGroup.this.addSeparator();\n      Generate_ActionGroup.this.addAnchor(Generate_ActionGroup.LABEL_ID_generateModule);\n      Generate_ActionGroup.this.addSeparator();\n      Generate_ActionGroup.this.addAnchor(Generate_ActionGroup.LABEL_ID_generateModel);\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48766,"modified_method":"public Generate_ActionGroup() {\n    super(\"Generate\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(Generate_ActionGroup.LABEL_ID_saveTransientModels);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        Generate_ActionGroup.this.addAction(action);\n      }\n      {\n        GeneratedAction newAction = new CheckModelsBeforeGeneration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Generate_ActionGroup.this.addAction(oldAction);\n      }\n      Generate_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(Generate_ActionGroup.LABEL_ID_generateModule);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        Generate_ActionGroup.this.addAction(action);\n      }\n      Generate_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(Generate_ActionGroup.LABEL_ID_generateModel);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        Generate_ActionGroup.this.addAction(action);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public GeneratorActions_ActionGroup() {\n    super(\"GeneratorActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      GeneratorActions_ActionGroup.this.addAnchor(GeneratorActions_ActionGroup.LABEL_ID_generatorNew);\n      {\n        GeneratedAction newAction = new GenerateTemplateQueries_Action(true);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        GeneratorActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GenerateTemplateQueries_Action(false);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        GeneratorActions_ActionGroup.this.addAction(oldAction);\n      }\n      GeneratorActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ShowModuleDependencies_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        GeneratorActions_ActionGroup.this.addAction(oldAction);\n      }\n      GeneratorActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new DeleteGenerator_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        GeneratorActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CopyModuleName_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        GeneratorActions_ActionGroup.this.addAction(oldAction);\n      }\n      GeneratorActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new CheckModule_Action(\"Generator\");\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        GeneratorActions_ActionGroup.this.addAction(oldAction);\n      }\n      GeneratorActions_ActionGroup.this.addSeparator();\n      GeneratorActions_ActionGroup.this.addAnchor(GeneratorActions_ActionGroup.LABEL_ID_favorites);\n      GeneratorActions_ActionGroup.this.addSeparator();\n      GeneratorActions_ActionGroup.this.addAnchor(GeneratorActions_ActionGroup.LABEL_ID_scripts);\n      GeneratorActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GeneratorProperties_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        GeneratorActions_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48767,"modified_method":"public GeneratorActions_ActionGroup() {\n    super(\"GeneratorActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(GeneratorActions_ActionGroup.LABEL_ID_generatorNew);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        GeneratorActions_ActionGroup.this.addAction(action);\n      }\n      {\n        GeneratedAction newAction = new GenerateTemplateQueries_Action(true);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        GeneratorActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GenerateTemplateQueries_Action(false);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        GeneratorActions_ActionGroup.this.addAction(oldAction);\n      }\n      GeneratorActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ShowModuleDependencies_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        GeneratorActions_ActionGroup.this.addAction(oldAction);\n      }\n      GeneratorActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new DeleteGenerator_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        GeneratorActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CopyModuleName_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        GeneratorActions_ActionGroup.this.addAction(oldAction);\n      }\n      GeneratorActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new CheckModule_Action(\"Generator\");\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        GeneratorActions_ActionGroup.this.addAction(oldAction);\n      }\n      GeneratorActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(GeneratorActions_ActionGroup.LABEL_ID_favorites);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        GeneratorActions_ActionGroup.this.addAction(action);\n      }\n      GeneratorActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(GeneratorActions_ActionGroup.LABEL_ID_scripts);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        GeneratorActions_ActionGroup.this.addAction(action);\n      }\n      GeneratorActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GeneratorProperties_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        GeneratorActions_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Goto_ActionGroup() {\n    super(\"Go To\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        GeneratedAction newAction = new GoToAction_Action(new GotoActionAction());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      Goto_ActionGroup.this.addAnchor(Goto_ActionGroup.LABEL_ID_gotoVCS);\n      Goto_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GoToFile_Action(new GotoFileAction());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToRootNode_Action(new GoToRootNodeAction());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToNodeById_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      Goto_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GoToConceptDeclaration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToEditorDeclaration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToRules_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      Goto_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GoToModel_Action(new GoToModelAction());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToLanguage_Action(new GoToLanguageAction());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToSolution_Action(new GoToSolutionAction());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToDevkit_Action(new GoToDevkitAction());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48768,"modified_method":"public Goto_ActionGroup() {\n    super(\"Go To\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        GeneratedAction newAction = new GoToAction_Action(new GotoActionAction());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(Goto_ActionGroup.LABEL_ID_gotoVCS);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        Goto_ActionGroup.this.addAction(action);\n      }\n      Goto_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GoToFile_Action(new GotoFileAction());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToRootNode_Action(new GoToRootNodeAction());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToNodeById_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      Goto_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GoToConceptDeclaration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToEditorDeclaration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToRules_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      Goto_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GoToModel_Action(new GoToModelAction());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToLanguage_Action(new GoToLanguageAction());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToSolution_Action(new GoToSolutionAction());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToDevkit_Action(new GoToDevkitAction());\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Goto_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public LanguageActions_ActionGroup() {\n    super(\"LanguageActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      LanguageActions_ActionGroup.this.addAnchor(LanguageActions_ActionGroup.LABEL_ID_newGroup);\n      LanguageActions_ActionGroup.this.addSeparator();\n      LanguageActions_ActionGroup.this.addAnchor(LanguageActions_ActionGroup.LABEL_ID_generateModule);\n      {\n        GeneratedAction newAction = new CheckModule_Action(\"Language\");\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new OptimizeModuleImports_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new FixVirtualPackges_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new AnalyzeClasspath_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowModuleDependencies_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new AddModuleToProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new RemoveModuleFromProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new DeleteModules_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CopyModuleName_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new MakeModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new RebuildModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CleanModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new SetModuleFolder_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n      LanguageActions_ActionGroup.this.addAnchor(LanguageActions_ActionGroup.LABEL_ID_find_usages);\n      LanguageActions_ActionGroup.this.addAnchor(LanguageActions_ActionGroup.LABEL_ID_find_instances);\n      LanguageActions_ActionGroup.this.addSeparator();\n      LanguageActions_ActionGroup.this.addAnchor(LanguageActions_ActionGroup.LABEL_ID_refactoring);\n      {\n        GeneratedAction newAction = new UpgradeModelPersistenceInModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n      LanguageActions_ActionGroup.this.addAnchor(LanguageActions_ActionGroup.LABEL_ID_favorites);\n      LanguageActions_ActionGroup.this.addSeparator();\n      LanguageActions_ActionGroup.this.addAnchor(LanguageActions_ActionGroup.LABEL_ID_vcs);\n      LanguageActions_ActionGroup.this.addSeparator();\n      LanguageActions_ActionGroup.this.addAnchor(LanguageActions_ActionGroup.LABEL_ID_scripts);\n      LanguageActions_ActionGroup.this.addSeparator();\n      LanguageActions_ActionGroup.this.addAnchor(LanguageActions_ActionGroup.LABEL_ID_find_javastub_usages);\n      LanguageActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new LanguageHierarchy_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new LanguageProperties_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48769,"modified_method":"public LanguageActions_ActionGroup() {\n    super(\"LanguageActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_newGroup);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        LanguageActions_ActionGroup.this.addAction(action);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_generateModule);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        LanguageActions_ActionGroup.this.addAction(action);\n      }\n      {\n        GeneratedAction newAction = new CheckModule_Action(\"Language\");\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new OptimizeModuleImports_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new FixVirtualPackges_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new AnalyzeClasspath_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowModuleDependencies_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new AddModuleToProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new RemoveModuleFromProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new DeleteModules_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CopyModuleName_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new MakeModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new RebuildModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CleanModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new SetModuleFolder_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_find_usages);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        LanguageActions_ActionGroup.this.addAction(action);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_find_instances);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        LanguageActions_ActionGroup.this.addAction(action);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_refactoring);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        LanguageActions_ActionGroup.this.addAction(action);\n      }\n      {\n        GeneratedAction newAction = new UpgradeModelPersistenceInModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_favorites);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        LanguageActions_ActionGroup.this.addAction(action);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_vcs);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        LanguageActions_ActionGroup.this.addAction(action);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_scripts);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        LanguageActions_ActionGroup.this.addAction(action);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_find_javastub_usages);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        LanguageActions_ActionGroup.this.addAction(action);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new LanguageHierarchy_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new LanguageProperties_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageActions_ActionGroup.this.addAction(oldAction);\n      }\n      LanguageActions_ActionGroup.this.addSeparator();\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public LanguageNewActions_ActionGroup() {\n    super(\"New\", ID);\n    this.setIsInternal(false);\n    this.setPopup(true);\n    try {\n      {\n        GeneratedAction newAction = new NewGenerator_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageNewActions_ActionGroup.this.addAction(oldAction);\n      }\n      LanguageNewActions_ActionGroup.this.addSeparator();\n      LanguageNewActions_ActionGroup.this.addAnchor(LanguageNewActions_ActionGroup.LABEL_ID_newAspect);\n      LanguageNewActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new NewModel_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageNewActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new NewModelFromSource_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageNewActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new NewAccessoryModel_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageNewActions_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48770,"modified_method":"public LanguageNewActions_ActionGroup() {\n    super(\"New\", ID);\n    this.setIsInternal(false);\n    this.setPopup(true);\n    try {\n      {\n        GeneratedAction newAction = new NewGenerator_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageNewActions_ActionGroup.this.addAction(oldAction);\n      }\n      LanguageNewActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(LanguageNewActions_ActionGroup.LABEL_ID_newAspect);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        LanguageNewActions_ActionGroup.this.addAction(action);\n      }\n      LanguageNewActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new NewModel_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageNewActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new NewModelFromSource_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageNewActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new NewAccessoryModel_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        LanguageNewActions_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ModelActions_ActionGroup() {\n    super(\"ModelActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_newActions);\n      {\n        GeneratedAction newAction = new PasteNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new PasteAsJavaClass_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new DeleteModels_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CloneModel_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CopyModelName_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GetModelContentsFromSource_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new OptimizeModelImports_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new AddMissingImports_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowReferencesToMissingStuff_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_showHelp);\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new CheckModel_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_modelUsages);\n      ModelActions_ActionGroup.this.addSeparator();\n      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_generateActions);\n      {\n        GeneratedAction newAction = new GenerateModel_Action(GeneratorFacade.getInstance().getDefaultGenerationHandler(), false);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GenerateModel_Action(GeneratorFacade.getInstance().getDefaultGenerationHandler(), true);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GenerateModel_Action(new OutputViewGenerationHandler(), false);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowMappingsPartitioning_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new RevertMemoryChanges_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new SaveModel_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_refactoring);\n      {\n        GeneratedAction newAction = new UpgradeModelPersistenceInModel_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_favorites);\n      ModelActions_ActionGroup.this.addSeparator();\n      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_mpsvcs);\n      ModelActions_ActionGroup.this.addSeparator();\n      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_ideavcs);\n      ModelActions_ActionGroup.this.addSeparator();\n      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_scripts);\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ModelProperties_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48771,"modified_method":"public ModelActions_ActionGroup() {\n    super(\"ModelActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(ModelActions_ActionGroup.LABEL_ID_newActions);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ModelActions_ActionGroup.this.addAction(action);\n      }\n      {\n        GeneratedAction newAction = new PasteNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new PasteAsJavaClass_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new DeleteModels_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CloneModel_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CopyModelName_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GetModelContentsFromSource_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new OptimizeModelImports_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new AddMissingImports_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowReferencesToMissingStuff_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(ModelActions_ActionGroup.LABEL_ID_showHelp);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ModelActions_ActionGroup.this.addAction(action);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new CheckModel_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(ModelActions_ActionGroup.LABEL_ID_modelUsages);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ModelActions_ActionGroup.this.addAction(action);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(ModelActions_ActionGroup.LABEL_ID_generateActions);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ModelActions_ActionGroup.this.addAction(action);\n      }\n      {\n        GeneratedAction newAction = new GenerateModel_Action(GeneratorFacade.getInstance().getDefaultGenerationHandler(), false);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GenerateModel_Action(GeneratorFacade.getInstance().getDefaultGenerationHandler(), true);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GenerateModel_Action(new OutputViewGenerationHandler(), false);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowMappingsPartitioning_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new RevertMemoryChanges_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new SaveModel_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(ModelActions_ActionGroup.LABEL_ID_refactoring);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ModelActions_ActionGroup.this.addAction(action);\n      }\n      {\n        GeneratedAction newAction = new UpgradeModelPersistenceInModel_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(ModelActions_ActionGroup.LABEL_ID_favorites);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ModelActions_ActionGroup.this.addAction(action);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(ModelActions_ActionGroup.LABEL_ID_mpsvcs);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ModelActions_ActionGroup.this.addAction(action);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(ModelActions_ActionGroup.LABEL_ID_ideavcs);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ModelActions_ActionGroup.this.addAction(action);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(ModelActions_ActionGroup.LABEL_ID_scripts);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ModelActions_ActionGroup.this.addAction(action);\n      }\n      ModelActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ModelProperties_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelActions_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ModelNewActions_ActionGroup() {\n    super(\"New\", ID);\n    this.setIsInternal(false);\n    this.setPopup(true);\n    try {\n      ModelNewActions_ActionGroup.this.addAnchor(ModelNewActions_ActionGroup.LABEL_ID_newRoot);\n      ModelNewActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new NewSubModel_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelNewActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new NewSubTestModel_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelNewActions_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48772,"modified_method":"public ModelNewActions_ActionGroup() {\n    super(\"New\", ID);\n    this.setIsInternal(false);\n    this.setPopup(true);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(ModelNewActions_ActionGroup.LABEL_ID_newRoot);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ModelNewActions_ActionGroup.this.addAction(action);\n      }\n      ModelNewActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new NewSubModel_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelNewActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new NewSubTestModel_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ModelNewActions_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ModuleActions_ActionGroup() {\n    super(\"ModuleActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      ModuleActions_ActionGroup.this.addAnchor(ModuleActions_ActionGroup.LABEL_ID_abstractFileActions);\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48773,"modified_method":"public ModuleActions_ActionGroup() {\n    super(\"ModuleActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(ModuleActions_ActionGroup.LABEL_ID_abstractFileActions);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ModuleActions_ActionGroup.this.addAction(action);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public NamespaceActions_ActionGroup() {\n    super(\"NamespaceActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      NamespaceActions_ActionGroup.this.addAnchor(NamespaceActions_ActionGroup.LABEL_ID_namespaceInternal);\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48774,"modified_method":"public NamespaceActions_ActionGroup() {\n    super(\"NamespaceActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(NamespaceActions_ActionGroup.LABEL_ID_namespaceInternal);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        NamespaceActions_ActionGroup.this.addAction(action);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public NodeActions_ActionGroup() {\n    super(\"NodeActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        GeneratedAction newAction = new EditNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new EditNodeExplicit_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new SetNodePackage_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ExpandNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new CopyNodeReference_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CopyNodeName_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CopyNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new PasteNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CutNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CloneRoot_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new DeleteNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GoToConceptDeclaration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToEditorDeclaration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToRules_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowNodeInExplorer_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ShowGenerationTrace_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowGenerationTraceback_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new FindSpecificNodeUsages_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new FastFindNodeUsages_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addAnchor(NodeActions_ActionGroup.LABEL_ID_find_instances);\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ShowConceptInHierarchy_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addAnchor(NodeActions_ActionGroup.LABEL_ID_structure);\n      {\n        GeneratedAction newAction = new ShowClassInHierarchy_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addAnchor(NodeActions_ActionGroup.LABEL_ID_diff);\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ShowErrorMessage_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      NodeActions_ActionGroup.this.addAnchor(NodeActions_ActionGroup.LABEL_ID_favorites);\n      NodeActions_ActionGroup.this.addSeparator();\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48775,"modified_method":"public NodeActions_ActionGroup() {\n    super(\"NodeActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        GeneratedAction newAction = new EditNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new EditNodeExplicit_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new SetNodePackage_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ExpandNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new CopyNodeReference_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CopyNodeName_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CopyNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new PasteNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CutNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CloneRoot_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new DeleteNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GoToConceptDeclaration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToEditorDeclaration_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GoToRules_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowNodeInExplorer_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ShowGenerationTrace_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowGenerationTraceback_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new FindSpecificNodeUsages_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new FastFindNodeUsages_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(NodeActions_ActionGroup.LABEL_ID_find_instances);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        NodeActions_ActionGroup.this.addAction(action);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ShowConceptInHierarchy_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(NodeActions_ActionGroup.LABEL_ID_structure);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        NodeActions_ActionGroup.this.addAction(action);\n      }\n      {\n        GeneratedAction newAction = new ShowClassInHierarchy_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(NodeActions_ActionGroup.LABEL_ID_diff);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        NodeActions_ActionGroup.this.addAction(action);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ShowErrorMessage_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        NodeActions_ActionGroup.this.addAction(oldAction);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(NodeActions_ActionGroup.LABEL_ID_favorites);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        NodeActions_ActionGroup.this.addAction(action);\n      }\n      NodeActions_ActionGroup.this.addSeparator();\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public PackageActions_ActionGroup() {\n    super(\"PackageActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      PackageActions_ActionGroup.this.addAnchor(PackageActions_ActionGroup.LABEL_ID_newActions);\n      PackageActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new PasteNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        PackageActions_ActionGroup.this.addAction(oldAction);\n      }\n      PackageActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new RenamePackage_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        PackageActions_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48776,"modified_method":"public PackageActions_ActionGroup() {\n    super(\"PackageActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(PackageActions_ActionGroup.LABEL_ID_newActions);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        PackageActions_ActionGroup.this.addAction(action);\n      }\n      PackageActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new PasteNode_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        PackageActions_ActionGroup.this.addAction(oldAction);\n      }\n      PackageActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new RenamePackage_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        PackageActions_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ProjectActions_ActionGroup() {\n    super(\"ProjectActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      ProjectActions_ActionGroup.this.addAnchor(ProjectActions_ActionGroup.LABEL_ID_projectNew);\n      ProjectActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new RegenerateProject_Action(new GenerateAllModulesInProjectAction(true));\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GenerateProject_Action(new GenerateAllModulesInProjectAction(false));\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CheckProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new MakeProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new RebuildProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CleanProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n      ProjectActions_ActionGroup.this.addAnchor(ProjectActions_ActionGroup.LABEL_ID_runConfig);\n      ProjectActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new UpgradeModelPersistenceInProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new OptimizeProjectImports_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new MPSProjectPaths_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48777,"modified_method":"public ProjectActions_ActionGroup() {\n    super(\"ProjectActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(ProjectActions_ActionGroup.LABEL_ID_projectNew);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ProjectActions_ActionGroup.this.addAction(action);\n      }\n      ProjectActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new RegenerateProject_Action(new GenerateAllModulesInProjectAction(true));\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new GenerateProject_Action(new GenerateAllModulesInProjectAction(false));\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CheckProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new MakeProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new RebuildProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CleanProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(ProjectActions_ActionGroup.LABEL_ID_runConfig);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ProjectActions_ActionGroup.this.addAction(action);\n      }\n      ProjectActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new UpgradeModelPersistenceInProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new OptimizeProjectImports_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new MPSProjectPaths_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        ProjectActions_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SolutionActions_ActionGroup() {\n    super(\"SolutionActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      SolutionActions_ActionGroup.this.addAnchor(SolutionActions_ActionGroup.LABEL_ID_solutionNew);\n      SolutionActions_ActionGroup.this.addSeparator();\n      SolutionActions_ActionGroup.this.addAnchor(SolutionActions_ActionGroup.LABEL_ID_generateModule);\n      {\n        GeneratedAction newAction = new GenerateTextFromSolution_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CheckModule_Action(\"Solution\");\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new OptimizeModuleImports_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new AnalyzeClasspath_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowModuleDependencies_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new AddModuleToProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new RemoveModuleFromProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new DeleteModules_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CopyModuleName_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GetModuleContentsFromSource_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new MakeModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new RebuildModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CleanModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new SetModuleFolder_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n      SolutionActions_ActionGroup.this.addAnchor(SolutionActions_ActionGroup.LABEL_ID_refactoring);\n      {\n        GeneratedAction newAction = new UpgradeModelPersistenceInModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n      SolutionActions_ActionGroup.this.addAnchor(SolutionActions_ActionGroup.LABEL_ID_favorites);\n      SolutionActions_ActionGroup.this.addSeparator();\n      SolutionActions_ActionGroup.this.addAnchor(SolutionActions_ActionGroup.LABEL_ID_vcs);\n      SolutionActions_ActionGroup.this.addSeparator();\n      SolutionActions_ActionGroup.this.addAnchor(SolutionActions_ActionGroup.LABEL_ID_scripts);\n      SolutionActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new SolutionProperties_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48778,"modified_method":"public SolutionActions_ActionGroup() {\n    super(\"SolutionActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(SolutionActions_ActionGroup.LABEL_ID_solutionNew);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        SolutionActions_ActionGroup.this.addAction(action);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(SolutionActions_ActionGroup.LABEL_ID_generateModule);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        SolutionActions_ActionGroup.this.addAction(action);\n      }\n      {\n        GeneratedAction newAction = new GenerateTextFromSolution_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CheckModule_Action(\"Solution\");\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new OptimizeModuleImports_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new AnalyzeClasspath_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowModuleDependencies_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new AddModuleToProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new RemoveModuleFromProject_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new DeleteModules_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CopyModuleName_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new GetModuleContentsFromSource_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new MakeModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new RebuildModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new CleanModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new SetModuleFolder_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(SolutionActions_ActionGroup.LABEL_ID_refactoring);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        SolutionActions_ActionGroup.this.addAction(action);\n      }\n      {\n        GeneratedAction newAction = new UpgradeModelPersistenceInModule_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(SolutionActions_ActionGroup.LABEL_ID_favorites);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        SolutionActions_ActionGroup.this.addAction(action);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(SolutionActions_ActionGroup.LABEL_ID_vcs);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        SolutionActions_ActionGroup.this.addAction(action);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(SolutionActions_ActionGroup.LABEL_ID_scripts);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        SolutionActions_ActionGroup.this.addAction(action);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new SolutionProperties_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        SolutionActions_ActionGroup.this.addAction(oldAction);\n      }\n      SolutionActions_ActionGroup.this.addSeparator();\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Structure_ActionGroup() {\n    super(\"Structure\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        GeneratedAction newAction = new ShowConceptStructure_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.lang.structure\"));\n          oldAction = newAction;\n        }\n        Structure_ActionGroup.this.addAction(oldAction);\n      }\n      Structure_ActionGroup.this.addAnchor(Structure_ActionGroup.LABEL_ID_showHelp);\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48779,"modified_method":"public Structure_ActionGroup() {\n    super(\"Structure\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        GeneratedAction newAction = new ShowConceptStructure_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.lang.structure\"));\n          oldAction = newAction;\n        }\n        Structure_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(Structure_ActionGroup.LABEL_ID_showHelp);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.lang.structure\"));\n        Structure_ActionGroup.this.addAction(action);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Tools_ActionGroup() {\n    super(\"Tools\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        GeneratedAction newAction = new ShowModuleRepository_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowModelRepository_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowBookmarks_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowModelChecker_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      Tools_ActionGroup.this.addAnchor(Tools_ActionGroup.LABEL_ID_customTools);\n      Tools_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ReloadAll_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ReloadStubs_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      Tools_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new InstallIDEAPlugin_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new RenameAspects_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      Tools_ActionGroup.this.addSeparator();\n      {\n        GeneratedActionGroup newAction = new ToolsUpgrade_ActionGroup();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedActionGroup newAction = new ToolsInternal_ActionGroup();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":48780,"modified_method":"public Tools_ActionGroup() {\n    super(\"Tools\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        GeneratedAction newAction = new ShowModuleRepository_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowModelRepository_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowBookmarks_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ShowModelChecker_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(Tools_ActionGroup.LABEL_ID_customTools);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        Tools_ActionGroup.this.addAction(action);\n      }\n      Tools_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new ReloadAll_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new ReloadStubs_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      Tools_ActionGroup.this.addSeparator();\n      {\n        GeneratedAction newAction = new InstallIDEAPlugin_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedAction newAction = new RenameAspects_Action();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getActionId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      Tools_ActionGroup.this.addSeparator();\n      {\n        GeneratedActionGroup newAction = new ToolsUpgrade_ActionGroup();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        GeneratedActionGroup newAction = new ToolsInternal_ActionGroup();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"79672583f9bd16ed71fef6e692bb5809ea9f8bc2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void main(String[] args) {\n    Properties props = StringUtils.argsToProperties(args);\n    System.err.println(props.toString());\n    MaxMatchSegmenter seg = new MaxMatchSegmenter();\n    String lexiconFile = props.getProperty(\"lexicon\");\n    if(lexiconFile != null) {\n      seg.addLexicon(lexiconFile);\n    } else {\n      System.err.println(\"Error: no lexicon file!\");\n      System.exit(1);\n    }\n\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    int lineNb = 0;\n    for(;;) {\n      ++lineNb;\n      System.err.println(\"line: \"+lineNb);\n      try {\n        String line = br.readLine();\n        if(line == null)\n          break;\n        if(props.getProperty(\"greedy\") != null) {\n          ArrayList<Word> sentence = seg.greedilySegmentWords(line);\n          System.out.println(Sentence.listToString(sentence));\n        } else if(props.getProperty(\"maxwords\") != null) {\n          seg.buildSegmentationLattice(line);\n          System.out.println\n            (Sentence.listToString(seg.segmentWords(MatchHeuristic.MAXWORDS)));\n        } else {\n          seg.buildSegmentationLattice(line);\n          System.out.println(Sentence.listToString(seg.maxMatchSegmentation()));\n        }\n      }\n      catch (IOException e) {\n        break;\n      }\n    }\n  }","id":48781,"modified_method":"public static void main(String[] args) {\n    Properties props = StringUtils.argsToProperties(args);\n    // System.err.println(props.toString());\n    SeqClassifierFlags flags = new SeqClassifierFlags(props);\n    MaxMatchSegmenter seg = new MaxMatchSegmenter();\n    String lexiconFile = props.getProperty(\"lexicon\");\n    if(lexiconFile != null) {\n      seg.addLexicon(lexiconFile);\n    } else {\n      System.err.println(\"Error: no lexicon file!\");\n      System.exit(1);\n    }\n\n    Sighan2005DocumentReaderAndWriter sighanRW = new Sighan2005DocumentReaderAndWriter();\n    sighanRW.init(flags);\n\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    StringReader strR = null;\n    PrintWriter stdoutW = new PrintWriter(System.out);\n    int lineNb = 0;\n    for(;;) {\n      ++lineNb;\n      System.err.println(\"line: \"+lineNb);\n      try {\n        String line = br.readLine();\n        if(line == null)\n          break;\n        String outputLine = null;\n        if(props.getProperty(\"greedy\") != null) {\n          ArrayList<Word> sentence = seg.greedilySegmentWords(line);\n          outputLine = Sentence.listToString(sentence);\n        } else if(props.getProperty(\"maxwords\") != null) {\n          seg.buildSegmentationLattice(line);\n          outputLine = Sentence.listToString(seg.segmentWords(MatchHeuristic.MAXWORDS));\n        } else {\n          seg.buildSegmentationLattice(line);\n          outputLine = Sentence.listToString(seg.maxMatchSegmentation());\n        }\n        strR = new StringReader(outputLine);\n        Iterator<List<CoreLabel>> itr = sighanRW.getIterator(strR);\n        while(itr.hasNext()) {\n          sighanRW.printAnswers(itr.next(), stdoutW);\n        }\n        // System.out.println(outputLine);\n      }\n      catch (IOException e) {\n        break;\n      }\n    }\n    stdoutW.flush();\n  }","commit_id":"3e09a6d7f07c96aecac18fc0c94d4c5b645344c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Add a word to the lexicon, unless it contains some non-Chinese character.\n   */\n  public void addStringToLexicon(String str) {\n    if(str.equals(\"\")) {\n      System.err.println(\"WARNING: blank line in lexicon\");\n    } else if(str.contains(\" \")) {\n      System.err.println(\"WARNING: word with space in lexicon\");\n    } else {\n      if(excludeChar(str)) {\n        printlnErr(\"skipping word: \"+str);\n        return;\n      }\n      printlnErr(\"adding word: \"+str);\n      words.add(str);\n    }\n  }","id":48782,"modified_method":"/**\n   * Add a word to the lexicon, unless it contains some non-Chinese character.\n   */\n  public void addStringToLexicon(String str) {\n    if(str.equals(\"\")) {\n      System.err.println(\"WARNING: blank line in lexicon\");\n    } else if(str.contains(\" \")) {\n      System.err.println(\"WARNING: word with space in lexicon\");\n    } else {\n      if(excludeChar(str)) {\n        printlnErr(\"skipping word: \"+str);\n        return;\n      }\n      // printlnErr(\"adding word: \"+str);\n      words.add(str);\n    }\n  }","commit_id":"3e09a6d7f07c96aecac18fc0c94d4c5b645344c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Post-processes the extracted mentions. Here we set the Mention fields required for coref and order mentions by tree-traversal order.\n   * @param words List of words in each sentence, in textual order\n   * @param trees List of trees, one per sentence\n   * @param unorderedMentions List of unordered, unprocessed mentions\n   *                 Each mention MUST have startIndex and endIndex set!\n   *                 Optionally, if scoring is desired, mentions must have mentionID and originalRef set.\n   *                 All the other Mention fields are set here.\n   * @return List of mentions ordered according to the tree traversal\n   * @throws Exception\n   */\n  public List<List<Mention>> arrange(\n      Annotation anno,\n      List<List<CoreLabel>> words,\n      List<Tree> trees,\n      List<List<Mention>> unorderedMentions,\n      boolean doMergeLabels) throws Exception {\n\n    List<List<Mention>> orderedMentionsBySentence = new ArrayList<List<Mention>>();\n\n    //\n    // traverse all sentences and process each individual one\n    //\n    for(int sent = 0; sent < words.size(); sent ++){\n      List<CoreLabel> sentence = words.get(sent);\n      Tree tree = trees.get(sent);\n      List<Mention> mentions = unorderedMentions.get(sent);\n      Map<String, List<Mention>> mentionsToTrees = Generics.newHashMap();\n\n      // merge the parse tree of the entire sentence with the sentence words\n      if(doMergeLabels) mergeLabels(tree, sentence);\n\n      //\n      // set the surface information and the syntactic info in each mention\n      // startIndex and endIndex MUST be set before!\n      //\n      for(Mention mention: mentions){\n        mention.contextParseTree = tree;\n        mention.sentenceWords = sentence;\n        mention.originalSpan = new ArrayList<CoreLabel>(mention.sentenceWords.subList(mention.startIndex, mention.endIndex));\n        if(!((CoreLabel)tree.label()).has(CoreAnnotations.BeginIndexAnnotation.class)) tree.indexSpans(0);\n        if(mention.headWord==null) {\n          Tree headTree = ((RuleBasedCorefMentionFinder) mentionFinder).findSyntacticHead(mention, tree, sentence);\n          mention.headWord = (CoreLabel)headTree.label();\n          mention.headIndex = mention.headWord.get(CoreAnnotations.IndexAnnotation.class) - 1;\n        }\n        if(mention.mentionSubTree==null) {\n          // mentionSubTree = highest NP that has the same head\n          Tree headTree = tree.getLeaves().get(mention.headIndex);\n          if (headTree == null) { throw new RuntimeException(\"Missing head tree for a mention!\"); }\n          Tree t = headTree;\n          while ((t = t.parent(tree)) != null) {\n            if (t.headTerminal(headFinder) == headTree && t.value().equals(\"NP\")) {\n              mention.mentionSubTree = t;\n            } else if(mention.mentionSubTree != null){\n              break;\n            }\n          }\n          if (mention.mentionSubTree == null) {\n            mention.mentionSubTree = headTree;\n          }\n        }\n\n        List<Mention> mentionsForTree = mentionsToTrees.get(treeToKey(mention.mentionSubTree));\n        if(mentionsForTree == null){\n          mentionsForTree = new ArrayList<Mention>();\n          mentionsToTrees.put(treeToKey(mention.mentionSubTree), mentionsForTree);\n        }\n        mentionsForTree.add(mention);\n\n        // generates all fields required for coref, such as gender, number, etc.\n        mention.process(dictionaries, semantics, this, singletonPredictor);\n      }\n\n      //\n      // Order all mentions in tree-traversal order\n      //\n      List<Mention> orderedMentions = new ArrayList<Mention>();\n      orderedMentionsBySentence.add(orderedMentions);\n\n      // extract all mentions in tree traversal order (alternative: tree.postOrderNodeList())\n      for (Tree t : tree.preOrderNodeList()) {\n        List<Mention> lm = mentionsToTrees.get(treeToKey(t));\n        if(lm != null){\n          for(Mention m: lm){\n            orderedMentions.add(m);\n          }\n        }\n      }\n\n      //\n      // find appositions, predicate nominatives, relative pronouns in this sentence\n      //\n      findSyntacticRelations(tree, orderedMentions);\n      assert(mentions.size() == orderedMentions.size());\n    }\n    return orderedMentionsBySentence;\n  }","id":48783,"modified_method":"/**\n   * Post-processes the extracted mentions. Here we set the Mention fields required for coref and order mentions by tree-traversal order.\n   * @param words List of words in each sentence, in textual order\n   * @param trees List of trees, one per sentence\n   * @param unorderedMentions List of unordered, unprocessed mentions\n   *                 Each mention MUST have startIndex and endIndex set!\n   *                 Optionally, if scoring is desired, mentions must have mentionID and originalRef set.\n   *                 All the other Mention fields are set here.\n   * @return List of mentions ordered according to the tree traversal\n   * @throws Exception\n   */\n  public List<List<Mention>> arrange(\n      Annotation anno,\n      List<List<CoreLabel>> words,\n      List<Tree> trees,\n      List<List<Mention>> unorderedMentions,\n      boolean doMergeLabels) throws Exception {\n\n    List<List<Mention>> orderedMentionsBySentence = new ArrayList<List<Mention>>();\n\n    //\n    // traverse all sentences and process each individual one\n    //\n    for (int sent = 0, sz = words.size(); sent < sz; sent ++) {\n      List<CoreLabel> sentence = words.get(sent);\n      Tree tree = trees.get(sent);\n      List<Mention> mentions = unorderedMentions.get(sent);\n      Map<String, List<Mention>> mentionsToTrees = Generics.newHashMap();\n\n      // merge the parse tree of the entire sentence with the sentence words\n      if(doMergeLabels) mergeLabels(tree, sentence);\n\n      //\n      // set the surface information and the syntactic info in each mention\n      // startIndex and endIndex MUST be set before!\n      //\n      for (Mention mention: mentions) {\n        mention.contextParseTree = tree;\n        mention.sentenceWords = sentence;\n        mention.originalSpan = new ArrayList<CoreLabel>(mention.sentenceWords.subList(mention.startIndex, mention.endIndex));\n        if(!((CoreLabel)tree.label()).has(CoreAnnotations.BeginIndexAnnotation.class)) tree.indexSpans(0);\n        if(mention.headWord==null) {\n          Tree headTree = ((RuleBasedCorefMentionFinder) mentionFinder).findSyntacticHead(mention, tree, sentence);\n          mention.headWord = (CoreLabel)headTree.label();\n          mention.headIndex = mention.headWord.get(CoreAnnotations.IndexAnnotation.class) - 1;\n        }\n        if(mention.mentionSubTree==null) {\n          // mentionSubTree = highest NP that has the same head\n          Tree headTree = tree.getLeaves().get(mention.headIndex);\n          if (headTree == null) { throw new RuntimeException(\"Missing head tree for a mention!\"); }\n          Tree t = headTree;\n          while ((t = t.parent(tree)) != null) {\n            if (t.headTerminal(headFinder) == headTree && t.value().equals(\"NP\")) {\n              mention.mentionSubTree = t;\n            } else if(mention.mentionSubTree != null){\n              break;\n            }\n          }\n          if (mention.mentionSubTree == null) {\n            mention.mentionSubTree = headTree;\n          }\n        }\n\n        List<Mention> mentionsForTree = mentionsToTrees.get(treeToKey(mention.mentionSubTree));\n        if(mentionsForTree == null){\n          mentionsForTree = new ArrayList<Mention>();\n          mentionsToTrees.put(treeToKey(mention.mentionSubTree), mentionsForTree);\n        }\n        mentionsForTree.add(mention);\n\n        // generates all fields required for coref, such as gender, number, etc.\n        mention.process(dictionaries, semantics, this, singletonPredictor);\n      }\n\n      //\n      // Order all mentions in tree-traversal order\n      //\n      List<Mention> orderedMentions = new ArrayList<Mention>();\n      orderedMentionsBySentence.add(orderedMentions);\n\n      // extract all mentions in tree traversal order (alternative: tree.postOrderNodeList())\n      for (Tree t : tree.preOrderNodeList()) {\n        List<Mention> lm = mentionsToTrees.get(treeToKey(t));\n        if(lm != null){\n          for(Mention m: lm){\n            orderedMentions.add(m);\n          }\n        }\n      }\n\n      //\n      // find appositions, predicate nominatives, relative pronouns in this sentence\n      //\n      findSyntacticRelations(tree, orderedMentions);\n      assert(mentions.size() == orderedMentions.size());\n    }\n    return orderedMentionsBySentence;\n  }","commit_id":"3e09a6d7f07c96aecac18fc0c94d4c5b645344c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private String treeToKey(Tree t){\n    int idx = getHeadIndex(t);\n    String key = Integer.toString(idx) + \":\" + t.toString();\n    return key;\n  }","id":48784,"modified_method":"private String treeToKey(Tree t) {\n    int idx = getHeadIndex(t);\n    String key = Integer.toString(idx) + ':' + t.toString();\n    return key;\n  }","commit_id":"3e09a6d7f07c96aecac18fc0c94d4c5b645344c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected int getHeadIndex(Tree t) {\n    Tree ht = t.headTerminal(headFinder);\n    if(ht==null) return -1;  // temporary: a key which is matched to nothing\n    CoreLabel l = (CoreLabel) ht.label();\n    return (int) l.get(CoreAnnotations.IndexAnnotation.class);\n  }","id":48785,"modified_method":"protected int getHeadIndex(Tree t) {\n    Tree ht = t.headTerminal(headFinder);\n    if(ht==null) return -1;  // temporary: a key which is matched to nothing\n    CoreLabel l = (CoreLabel) ht.label();\n    return l.get(CoreAnnotations.IndexAnnotation.class);\n  }","commit_id":"3e09a6d7f07c96aecac18fc0c94d4c5b645344c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/** Load Stanford Processor: skip unnecessary annotator */\n  protected static StanfordCoreNLP loadStanfordProcessor(Properties props) {\n    boolean replicateCoNLL = Boolean.parseBoolean(props.getProperty(Constants.REPLICATECONLL_PROP, \"false\"));\n\n    Properties pipelineProps = new Properties(props);\n    StringBuilder annoSb = new StringBuilder(\"\");\n    if (!Constants.USE_GOLD_POS && !replicateCoNLL)  {\n      annoSb.append(\"pos, lemma\");\n    } else {\n      annoSb.append(\"lemma\");\n    }\n    if(Constants.USE_TRUECASE) {\n      annoSb.append(\", truecase\");\n    }\n    if (!Constants.USE_GOLD_NE && !replicateCoNLL)  {\n      annoSb.append(\", ner\");\n    }\n    if (!Constants.USE_GOLD_PARSES && !replicateCoNLL)  {\n      annoSb.append(\", parse\");\n    }\n    String annoStr = annoSb.toString();\n    SieveCoreferenceSystem.logger.info(\"Ignoring specified annotators, using annotators=\" + annoStr);\n    pipelineProps.put(\"annotators\", annoStr);\n    return new StanfordCoreNLP(pipelineProps, false);\n  }","id":48786,"modified_method":"/** Load Stanford Processor: skip unnecessary annotator */\n  protected static StanfordCoreNLP loadStanfordProcessor(Properties props) {\n    boolean replicateCoNLL = Boolean.parseBoolean(props.getProperty(Constants.REPLICATECONLL_PROP, \"false\"));\n\n    Properties pipelineProps = new Properties(props);\n    StringBuilder annoSb = new StringBuilder(\"\");\n    if (!Constants.USE_GOLD_POS && !replicateCoNLL)  {\n      annoSb.append(\"pos, lemma\");\n    } else {\n      annoSb.append(\"lemma\");\n    }\n    if(Constants.USE_TRUECASE) {\n      annoSb.append(\", truecase\");\n    }\n    if (!Constants.USE_GOLD_NE && !replicateCoNLL)  {\n      annoSb.append(\", ner\");\n    }\n    if (!Constants.USE_GOLD_PARSES && !replicateCoNLL)  {\n      annoSb.append(\", parse\");\n    }\n    String annoStr = annoSb.toString();\n    SieveCoreferenceSystem.logger.info(\"MentionExtractor ignores specified annotators, using annotators=\" + annoStr);\n    pipelineProps.put(\"annotators\", annoStr);\n    return new StanfordCoreNLP(pipelineProps, false);\n  }","commit_id":"3e09a6d7f07c96aecac18fc0c94d4c5b645344c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"static boolean inside(int i, Mention m) {\n    return i >= m.startIndex && i < m.endIndex;\n  }","id":48787,"modified_method":"private static boolean inside(int i, Mention m) {\n    return i >= m.startIndex && i < m.endIndex;\n  }","commit_id":"3e09a6d7f07c96aecac18fc0c94d4c5b645344c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected Tree findSyntacticHead(Mention m, Tree root, List<CoreLabel> tokens) {\n    // mention ends with 's\n    int endIdx = m.endIndex;\n    String lastWord = m.originalSpan.get(m.originalSpan.size()-1).get(CoreAnnotations.TextAnnotation.class);\n    if((lastWord.equals(\"'s\") || lastWord.equals(\"'\"))\n        && m.originalSpan.size() != 1 ) endIdx--;\n\n    Tree exactMatch = findTreeWithSpan(root, m.startIndex, endIdx);\n    //\n    // found an exact match\n    //\n    if (exactMatch != null) {\n      return safeHead(exactMatch);\n    }\n\n    // no exact match found\n    // in this case, we parse the actual extent of the mention, embedded in a sentence\n    // context, so as to make the parser work better :-)\n\n    int approximateness = 0;\n    List<CoreLabel> extentTokens = new ArrayList<CoreLabel>();\n    extentTokens.add(initCoreLabel(\"It\"));\n    extentTokens.add(initCoreLabel(\"was\"));\n    final int ADDED_WORDS = 2;\n    for (int i = m.startIndex; i < endIdx; i++) {\n      // Add everything except separated dashes! The separated dashes mess with the parser too badly.\n      CoreLabel label = tokens.get(i);\n      if ( ! \"-\".equals(label.word())) {\n        extentTokens.add(tokens.get(i));\n      } else {\n        approximateness++;\n      }\n    }\n    extentTokens.add(initCoreLabel(\".\"));\n\n    // constrain the parse to the part we're interested in.\n    // Starting from ADDED_WORDS comes from skipping \"It was\".\n    // -1 to exclude the period.\n    // We now let it be any kind of nominal constituent, since there\n    // are VP and S ones\n    ParserConstraint constraint = new ParserConstraint(ADDED_WORDS, extentTokens.size() - 1, Pattern.compile(\".*\"));\n    List<ParserConstraint> constraints = Collections.singletonList(constraint);\n    Tree tree = parse(extentTokens, constraints);\n    convertToCoreLabels(tree);\n    tree.indexSpans(m.startIndex - ADDED_WORDS);  // remember it has ADDED_WORDS extra words at the beginning\n    Tree subtree = findPartialSpan(tree, m.startIndex);\n    Tree extentHead = safeHead(subtree);\n    assert(extentHead != null);\n    // extentHead is a child in the local extent parse tree. we need to find the corresponding node in the main tree\n    // Because we deleted dashes, it's index will be >= the index in the extent parse tree\n    CoreLabel l = (CoreLabel) extentHead.label();\n    Tree realHead = funkyFindLeafWithApproximateSpan(root, l.value(), l.get(CoreAnnotations.BeginIndexAnnotation.class), approximateness);\n    assert(realHead != null);\n    return realHead;\n  }","id":48788,"modified_method":"protected Tree findSyntacticHead(Mention m, Tree root, List<CoreLabel> tokens) {\n    // mention ends with 's\n    int endIdx = m.endIndex;\n    String lastWord = m.originalSpan.get(m.originalSpan.size()-1).get(CoreAnnotations.TextAnnotation.class);\n    if((lastWord.equals(\"'s\") || lastWord.equals(\"'\"))\n        && m.originalSpan.size() != 1 ) endIdx--;\n\n    Tree exactMatch = findTreeWithSpan(root, m.startIndex, endIdx);\n    //\n    // found an exact match\n    //\n    if (exactMatch != null) {\n      return safeHead(exactMatch, endIdx);\n    }\n\n    // no exact match found\n    // in this case, we parse the actual extent of the mention, embedded in a sentence\n    // context, so as to make the parser work better :-)\n\n    int approximateness = 0;\n    List<CoreLabel> extentTokens = new ArrayList<CoreLabel>();\n    extentTokens.add(initCoreLabel(\"It\"));\n    extentTokens.add(initCoreLabel(\"was\"));\n    final int ADDED_WORDS = 2;\n    for (int i = m.startIndex; i < endIdx; i++) {\n      // Add everything except separated dashes! The separated dashes mess with the parser too badly.\n      CoreLabel label = tokens.get(i);\n      if ( ! \"-\".equals(label.word())) {\n        extentTokens.add(tokens.get(i));\n      } else {\n        approximateness++;\n      }\n    }\n    extentTokens.add(initCoreLabel(\".\"));\n\n    // constrain the parse to the part we're interested in.\n    // Starting from ADDED_WORDS comes from skipping \"It was\".\n    // -1 to exclude the period.\n    // We now let it be any kind of nominal constituent, since there\n    // are VP and S ones\n    ParserConstraint constraint = new ParserConstraint(ADDED_WORDS, extentTokens.size() - 1, Pattern.compile(\".*\"));\n    List<ParserConstraint> constraints = Collections.singletonList(constraint);\n    Tree tree = parse(extentTokens, constraints);\n    convertToCoreLabels(tree);  // now unnecessary, as parser uses CoreLabels?\n    tree.indexSpans(m.startIndex - ADDED_WORDS);  // remember it has ADDED_WORDS extra words at the beginning\n    Tree subtree = findPartialSpan(tree, m.startIndex);\n    // There was a possible problem that with a crazy parse, extentHead could be one of the added words, not a real word!\n    // Now we make sure in findPartialSpan that it can't be before the real start, and in safeHead, we disallow something\n    // passed the right end (that is, just that final period).\n    Tree extentHead = safeHead(subtree, endIdx);\n    assert(extentHead != null);\n    // extentHead is a child in the local extent parse tree. we need to find the corresponding node in the main tree\n    // Because we deleted dashes, it's index will be >= the index in the extent parse tree\n    CoreLabel l = (CoreLabel) extentHead.label();\n    Tree realHead = funkyFindLeafWithApproximateSpan(root, l.value(), l.get(CoreAnnotations.BeginIndexAnnotation.class), approximateness);\n    assert(realHead != null);\n    return realHead;\n  }","commit_id":"3e09a6d7f07c96aecac18fc0c94d4c5b645344c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Tree findPartialSpan(final Tree root, final int start) {\n    CoreLabel label = (CoreLabel) root.label();\n    int startIndex = label.get(CoreAnnotations.BeginIndexAnnotation.class);\n    if (startIndex == start) {\n      return root;\n    }\n    for (Tree kid : root.children()) {\n      CoreLabel kidLabel = (CoreLabel) kid.label();\n      int kidStart = kidLabel.get(CoreAnnotations.BeginIndexAnnotation.class);\n      int kidEnd = kidLabel.get(CoreAnnotations.EndIndexAnnotation.class);\n      if (kidStart <= start && kidEnd > start) {\n        return findPartialSpan(kid, start);\n      }\n    }\n    throw new RuntimeException(\"Shouldn't happen: \" + start + \" \" + root);\n  }","id":48789,"modified_method":"/** Find the tree that covers the portion of interest. */\n  private static Tree findPartialSpan(final Tree root, final int start) {\n    CoreLabel label = (CoreLabel) root.label();\n    int startIndex = label.get(CoreAnnotations.BeginIndexAnnotation.class);\n    if (startIndex == start) {\n      return root;\n    }\n    for (Tree kid : root.children()) {\n      CoreLabel kidLabel = (CoreLabel) kid.label();\n      int kidStart = kidLabel.get(CoreAnnotations.BeginIndexAnnotation.class);\n      int kidEnd = kidLabel.get(CoreAnnotations.EndIndexAnnotation.class);\n      if (kidStart <= start && kidEnd > start) {\n        return findPartialSpan(kid, start);\n      }\n    }\n    throw new RuntimeException(\"Shouldn't happen: \" + start + \" \" + root);\n  }","commit_id":"3e09a6d7f07c96aecac18fc0c94d4c5b645344c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Tree funkyFindLeafWithApproximateSpan(Tree root, String token, int index, int approximateness) {\n    List<Tree> leaves = root.getLeaves();\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      int ind = label.get(CoreAnnotations.IndexAnnotation.class) - 1;\n      if (token.equals(leaf.value()) && ind >= index && ind <= index + approximateness) {\n        return leaf;\n      }\n    }\n    // this shouldn't happen\n    //    throw new RuntimeException(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    System.err.println(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    return leaves.get(leaves.size() - 1);\n  }","id":48790,"modified_method":"private static Tree funkyFindLeafWithApproximateSpan(Tree root, String token, int index, int approximateness) {\n    // System.err.println(\"Searching \" + root + \"\\n  for \" + token + \" at position \" + index + \" (plus up to \" + approximateness + \")\");\n    List<Tree> leaves = root.getLeaves();\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      Integer indexInteger = label.get(CoreAnnotations.IndexAnnotation.class);\n      if (indexInteger == null) continue;\n      int ind = indexInteger - 1;\n      if (token.equals(leaf.value()) && ind >= index && ind <= index + approximateness) {\n        return leaf;\n      }\n    }\n    // this shouldn't happen\n    //    throw new RuntimeException(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    SieveCoreferenceSystem.logger.warning(\"RuleBasedCorefMentionFinder: Failed to find head token:\\n\" +\n                       \"Tree is: \" + root + \"\\n\" + \n                       \"token = |\" + token + \"|\" + index + \"|, approx=\" + approximateness);\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      Integer indexInteger = label.get(CoreAnnotations.IndexAnnotation.class);\n      if (indexInteger == null) continue; // not a word from the original tree\n      int ind = indexInteger - 1;\n      if (token.equals(leaf.value())) {\n        // System.err.println(\"Found it at position \" + ind + \"; returning \" + leaf);\n        return leaf;\n      }\n    }\n    SieveCoreferenceSystem.logger.warning(\"RuleBasedCorefMentionFinder: Last resort: returning as head: \" + leaves.get(leaves.size() - 2));\n    return leaves.get(leaves.size() - 2); // last except for the added period.\n  }","commit_id":"3e09a6d7f07c96aecac18fc0c94d4c5b645344c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private Tree safeHead(Tree top) {\n    Tree head = top.headTerminal(headFinder);\n    if (head != null) return head;\n    // if no head found return the right-most leaf\n    List<Tree> leaves = top.getLeaves();\n    if(leaves.size() > 0) return leaves.get(leaves.size() - 1);\n    // fallback: return top\n    return top;\n  }","id":48791,"modified_method":"private Tree safeHead(Tree top, int endIndex) {\n    Tree head = top.headTerminal(headFinder);\n    // One obscure failure case is that the added period becomes the head. Disallow this.\n    if (head != null) {\n      Integer headIndexInteger = ((CoreLabel) head.label()).get(CoreAnnotations.IndexAnnotation.class);\n      if (headIndexInteger != null) {\n        int headIndex = headIndexInteger - 1;\n        if (headIndex < endIndex) {\n          return head;\n        }\n      }\n    }\n    // if no head found return the right-most leaf\n    List<Tree> leaves = top.getLeaves();\n    int candidate = leaves.size() - 1;\n    while (candidate >= 0) {\n      head = leaves.get(candidate);\n      Integer headIndexInteger = ((CoreLabel) head.label()).get(CoreAnnotations.IndexAnnotation.class);\n      if (headIndexInteger != null) {\n        int headIndex = headIndexInteger - 1;\n        if (headIndex < endIndex) {\n          return head;\n        }\n      }\n      candidate--;\n    }\n    // fallback: return top\n    return top;\n  }","commit_id":"3e09a6d7f07c96aecac18fc0c94d4c5b645344c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    Properties props = StringUtils.argsToProperties(args);\n    System.err.println(props.toString());\n    MaxMatchSegmenter seg = new MaxMatchSegmenter();\n    String lexiconFile = props.getProperty(\"lexicon\");\n    if(lexiconFile != null) {\n      seg.addLexicon(lexiconFile);\n    } else {\n      System.err.println(\"Error: no lexicon file!\");\n      System.exit(1);\n    }\n\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    int lineNb = 0;\n    for(;;) {\n      ++lineNb;\n      System.err.println(\"line: \"+lineNb);\n      try {\n        String line = br.readLine();\n        if(line == null)\n          break;\n        if(props.getProperty(\"greedy\") != null) {\n          ArrayList<Word> sentence = seg.greedilySegmentWords(line);\n          System.out.println(Sentence.listToString(sentence));\n        } else if(props.getProperty(\"maxwords\") != null) {\n          seg.buildSegmentationLattice(line);\n          System.out.println\n            (Sentence.listToString(seg.segmentWords(MatchHeuristic.MAXWORDS)));\n        } else {\n          seg.buildSegmentationLattice(line);\n          System.out.println(Sentence.listToString(seg.maxMatchSegmentation()));\n        }\n      }\n      catch (IOException e) {\n        break;\n      }\n    }\n  }","id":48792,"modified_method":"public static void main(String[] args) {\n    Properties props = StringUtils.argsToProperties(args);\n    // System.err.println(props.toString());\n    SeqClassifierFlags flags = new SeqClassifierFlags(props);\n    MaxMatchSegmenter seg = new MaxMatchSegmenter();\n    String lexiconFile = props.getProperty(\"lexicon\");\n    if(lexiconFile != null) {\n      seg.addLexicon(lexiconFile);\n    } else {\n      System.err.println(\"Error: no lexicon file!\");\n      System.exit(1);\n    }\n\n    Sighan2005DocumentReaderAndWriter sighanRW = new Sighan2005DocumentReaderAndWriter();\n    sighanRW.init(flags);\n\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    StringReader strR = null;\n    PrintWriter stdoutW = new PrintWriter(System.out);\n    int lineNb = 0;\n    for(;;) {\n      ++lineNb;\n      System.err.println(\"line: \"+lineNb);\n      try {\n        String line = br.readLine();\n        if(line == null)\n          break;\n        String outputLine = null;\n        if(props.getProperty(\"greedy\") != null) {\n          ArrayList<Word> sentence = seg.greedilySegmentWords(line);\n          outputLine = Sentence.listToString(sentence);\n        } else if(props.getProperty(\"maxwords\") != null) {\n          seg.buildSegmentationLattice(line);\n          outputLine = Sentence.listToString(seg.segmentWords(MatchHeuristic.MAXWORDS));\n        } else {\n          seg.buildSegmentationLattice(line);\n          outputLine = Sentence.listToString(seg.maxMatchSegmentation());\n        }\n        strR = new StringReader(outputLine);\n        Iterator<List<CoreLabel>> itr = sighanRW.getIterator(strR);\n        while(itr.hasNext()) {\n          sighanRW.printAnswers(itr.next(), stdoutW);\n        }\n        // System.out.println(outputLine);\n      }\n      catch (IOException e) {\n        break;\n      }\n    }\n    stdoutW.flush();\n  }","commit_id":"6c50dcd73e502a4bd8fd306e7f4a507b089586c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Add a word to the lexicon, unless it contains some non-Chinese character.\n   */\n  public void addStringToLexicon(String str) {\n    if(str.equals(\"\")) {\n      System.err.println(\"WARNING: blank line in lexicon\");\n    } else if(str.contains(\" \")) {\n      System.err.println(\"WARNING: word with space in lexicon\");\n    } else {\n      if(excludeChar(str)) {\n        printlnErr(\"skipping word: \"+str);\n        return;\n      }\n      printlnErr(\"adding word: \"+str);\n      words.add(str);\n    }\n  }","id":48793,"modified_method":"/**\n   * Add a word to the lexicon, unless it contains some non-Chinese character.\n   */\n  public void addStringToLexicon(String str) {\n    if(str.equals(\"\")) {\n      System.err.println(\"WARNING: blank line in lexicon\");\n    } else if(str.contains(\" \")) {\n      System.err.println(\"WARNING: word with space in lexicon\");\n    } else {\n      if(excludeChar(str)) {\n        printlnErr(\"skipping word: \"+str);\n        return;\n      }\n      // printlnErr(\"adding word: \"+str);\n      words.add(str);\n    }\n  }","commit_id":"6c50dcd73e502a4bd8fd306e7f4a507b089586c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected Tree findSyntacticHead(Mention m, Tree root, List<CoreLabel> tokens) {\n    // mention ends with 's\n    int endIdx = m.endIndex;\n    String lastWord = m.originalSpan.get(m.originalSpan.size()-1).get(CoreAnnotations.TextAnnotation.class);\n    if((lastWord.equals(\"'s\") || lastWord.equals(\"'\"))\n        && m.originalSpan.size() != 1 ) endIdx--;\n\n    Tree exactMatch = findTreeWithSpan(root, m.startIndex, endIdx);\n    //\n    // found an exact match\n    //\n    if (exactMatch != null) {\n      return safeHead(exactMatch);\n    }\n\n    // no exact match found\n    // in this case, we parse the actual extent of the mention, embedded in a sentence\n    // context, so as to make the parser work better :-)\n\n    int approximateness = 0;\n    List<CoreLabel> extentTokens = new ArrayList<CoreLabel>();\n    extentTokens.add(initCoreLabel(\"It\"));\n    extentTokens.add(initCoreLabel(\"was\"));\n    final int ADDED_WORDS = 2;\n    for (int i = m.startIndex; i < endIdx; i++) {\n      // Add everything except separated dashes! The separated dashes mess with the parser too badly.\n      CoreLabel label = tokens.get(i);\n      if ( ! \"-\".equals(label.word())) {\n        extentTokens.add(tokens.get(i));\n      } else {\n        approximateness++;\n      }\n    }\n    extentTokens.add(initCoreLabel(\".\"));\n\n    // constrain the parse to the part we're interested in.\n    // Starting from ADDED_WORDS comes from skipping \"It was\".\n    // -1 to exclude the period.\n    // We now let it be any kind of nominal constituent, since there\n    // are VP and S ones\n    ParserConstraint constraint = new ParserConstraint(ADDED_WORDS, extentTokens.size() - 1, Pattern.compile(\".*\"));\n    List<ParserConstraint> constraints = Collections.singletonList(constraint);\n    Tree tree = parse(extentTokens, constraints);\n    convertToCoreLabels(tree);\n    tree.indexSpans(m.startIndex - ADDED_WORDS);  // remember it has ADDED_WORDS extra words at the beginning\n    Tree subtree = findPartialSpan(tree, m.startIndex);\n    Tree extentHead = safeHead(subtree);\n    assert(extentHead != null);\n    // extentHead is a child in the local extent parse tree. we need to find the corresponding node in the main tree\n    // Because we deleted dashes, it's index will be >= the index in the extent parse tree\n    CoreLabel l = (CoreLabel) extentHead.label();\n    Tree realHead = funkyFindLeafWithApproximateSpan(root, l.value(), l.get(CoreAnnotations.BeginIndexAnnotation.class), approximateness);\n    assert(realHead != null);\n    return realHead;\n  }","id":48794,"modified_method":"protected Tree findSyntacticHead(Mention m, Tree root, List<CoreLabel> tokens) {\n    // mention ends with 's\n    int endIdx = m.endIndex;\n    String lastWord = m.originalSpan.get(m.originalSpan.size()-1).get(CoreAnnotations.TextAnnotation.class);\n    if((lastWord.equals(\"'s\") || lastWord.equals(\"'\"))\n        && m.originalSpan.size() != 1 ) endIdx--;\n\n    Tree exactMatch = findTreeWithSpan(root, m.startIndex, endIdx);\n    //\n    // found an exact match\n    //\n    if (exactMatch != null) {\n      return safeHead(exactMatch, endIdx);\n    }\n\n    // no exact match found\n    // in this case, we parse the actual extent of the mention, embedded in a sentence\n    // context, so as to make the parser work better :-)\n\n    int approximateness = 0;\n    List<CoreLabel> extentTokens = new ArrayList<CoreLabel>();\n    extentTokens.add(initCoreLabel(\"It\"));\n    extentTokens.add(initCoreLabel(\"was\"));\n    final int ADDED_WORDS = 2;\n    for (int i = m.startIndex; i < endIdx; i++) {\n      // Add everything except separated dashes! The separated dashes mess with the parser too badly.\n      CoreLabel label = tokens.get(i);\n      if ( ! \"-\".equals(label.word())) {\n        extentTokens.add(tokens.get(i));\n      } else {\n        approximateness++;\n      }\n    }\n    extentTokens.add(initCoreLabel(\".\"));\n\n    // constrain the parse to the part we're interested in.\n    // Starting from ADDED_WORDS comes from skipping \"It was\".\n    // -1 to exclude the period.\n    // We now let it be any kind of nominal constituent, since there\n    // are VP and S ones\n    ParserConstraint constraint = new ParserConstraint(ADDED_WORDS, extentTokens.size() - 1, Pattern.compile(\".*\"));\n    List<ParserConstraint> constraints = Collections.singletonList(constraint);\n    Tree tree = parse(extentTokens, constraints);\n    convertToCoreLabels(tree);  // now unnecessary, as parser uses CoreLabels?\n    tree.indexSpans(m.startIndex - ADDED_WORDS);  // remember it has ADDED_WORDS extra words at the beginning\n    Tree subtree = findPartialSpan(tree, m.startIndex);\n    // There was a possible problem that with a crazy parse, extentHead could be one of the added words, not a real word!\n    // Now we make sure in findPartialSpan that it can't be before the real start, and in safeHead, we disallow something\n    // passed the right end (that is, just that final period).\n    Tree extentHead = safeHead(subtree, endIdx);\n    assert(extentHead != null);\n    // extentHead is a child in the local extent parse tree. we need to find the corresponding node in the main tree\n    // Because we deleted dashes, it's index will be >= the index in the extent parse tree\n    CoreLabel l = (CoreLabel) extentHead.label();\n    Tree realHead = funkyFindLeafWithApproximateSpan(root, l.value(), l.get(CoreAnnotations.BeginIndexAnnotation.class), approximateness);\n    assert(realHead != null);\n    return realHead;\n  }","commit_id":"6c50dcd73e502a4bd8fd306e7f4a507b089586c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Tree findPartialSpan(final Tree root, final int start) {\n    CoreLabel label = (CoreLabel) root.label();\n    int startIndex = label.get(CoreAnnotations.BeginIndexAnnotation.class);\n    if (startIndex == start) {\n      return root;\n    }\n    for (Tree kid : root.children()) {\n      CoreLabel kidLabel = (CoreLabel) kid.label();\n      int kidStart = kidLabel.get(CoreAnnotations.BeginIndexAnnotation.class);\n      int kidEnd = kidLabel.get(CoreAnnotations.EndIndexAnnotation.class);\n      if (kidStart <= start && kidEnd > start) {\n        return findPartialSpan(kid, start);\n      }\n    }\n    throw new RuntimeException(\"Shouldn't happen: \" + start + \" \" + root);\n  }","id":48795,"modified_method":"/** Find the tree that covers the portion of interest. */\n  private static Tree findPartialSpan(final Tree root, final int start) {\n    CoreLabel label = (CoreLabel) root.label();\n    int startIndex = label.get(CoreAnnotations.BeginIndexAnnotation.class);\n    if (startIndex == start) {\n      return root;\n    }\n    for (Tree kid : root.children()) {\n      CoreLabel kidLabel = (CoreLabel) kid.label();\n      int kidStart = kidLabel.get(CoreAnnotations.BeginIndexAnnotation.class);\n      int kidEnd = kidLabel.get(CoreAnnotations.EndIndexAnnotation.class);\n      if (kidStart <= start && kidEnd > start) {\n        return findPartialSpan(kid, start);\n      }\n    }\n    throw new RuntimeException(\"Shouldn't happen: \" + start + \" \" + root);\n  }","commit_id":"6c50dcd73e502a4bd8fd306e7f4a507b089586c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Tree funkyFindLeafWithApproximateSpan(Tree root, String token, int index, int approximateness) {\n    List<Tree> leaves = root.getLeaves();\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      int ind = label.get(CoreAnnotations.IndexAnnotation.class) - 1;\n      if (token.equals(leaf.value()) && ind >= index && ind <= index + approximateness) {\n        return leaf;\n      }\n    }\n    // this shouldn't happen\n    //    throw new RuntimeException(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    System.err.println(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    return leaves.get(leaves.size() - 1);\n  }","id":48796,"modified_method":"private static Tree funkyFindLeafWithApproximateSpan(Tree root, String token, int index, int approximateness) {\n    // System.err.println(\"Searching \" + root + \"\\n  for \" + token + \" at position \" + index + \" (plus up to \" + approximateness + \")\");\n    List<Tree> leaves = root.getLeaves();\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      Integer indexInteger = label.get(CoreAnnotations.IndexAnnotation.class);\n      if (indexInteger == null) continue;\n      int ind = indexInteger - 1;\n      if (token.equals(leaf.value()) && ind >= index && ind <= index + approximateness) {\n        return leaf;\n      }\n    }\n    // this shouldn't happen\n    //    throw new RuntimeException(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    SieveCoreferenceSystem.logger.warning(\"RuleBasedCorefMentionFinder: Failed to find head token:\\n\" +\n                       \"Tree is: \" + root + \"\\n\" + \n                       \"token = |\" + token + \"|\" + index + \"|, approx=\" + approximateness);\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      Integer indexInteger = label.get(CoreAnnotations.IndexAnnotation.class);\n      if (indexInteger == null) continue; // not a word from the original tree\n      int ind = indexInteger - 1;\n      if (token.equals(leaf.value())) {\n        // System.err.println(\"Found it at position \" + ind + \"; returning \" + leaf);\n        return leaf;\n      }\n    }\n    SieveCoreferenceSystem.logger.warning(\"RuleBasedCorefMentionFinder: Last resort: returning as head: \" + leaves.get(leaves.size() - 2));\n    return leaves.get(leaves.size() - 2); // last except for the added period.\n  }","commit_id":"6c50dcd73e502a4bd8fd306e7f4a507b089586c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private Tree safeHead(Tree top) {\n    Tree head = top.headTerminal(headFinder);\n    if (head != null) return head;\n    // if no head found return the right-most leaf\n    List<Tree> leaves = top.getLeaves();\n    if(leaves.size() > 0) return leaves.get(leaves.size() - 1);\n    // fallback: return top\n    return top;\n  }","id":48797,"modified_method":"private Tree safeHead(Tree top, int endIndex) {\n    Tree head = top.headTerminal(headFinder);\n    // One obscure failure case is that the added period becomes the head. Disallow this.\n    if (head != null) {\n      Integer headIndexInteger = ((CoreLabel) head.label()).get(CoreAnnotations.IndexAnnotation.class);\n      if (headIndexInteger != null) {\n        int headIndex = headIndexInteger - 1;\n        if (headIndex < endIndex) {\n          return head;\n        }\n      }\n    }\n    // if no head found return the right-most leaf\n    List<Tree> leaves = top.getLeaves();\n    int candidate = leaves.size() - 1;\n    while (candidate >= 0) {\n      head = leaves.get(candidate);\n      Integer headIndexInteger = ((CoreLabel) head.label()).get(CoreAnnotations.IndexAnnotation.class);\n      if (headIndexInteger != null) {\n        int headIndex = headIndexInteger - 1;\n        if (headIndex < endIndex) {\n          return head;\n        }\n      }\n      candidate--;\n    }\n    // fallback: return top\n    return top;\n  }","commit_id":"6c50dcd73e502a4bd8fd306e7f4a507b089586c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    Properties props = StringUtils.argsToProperties(args);\n    System.err.println(props.toString());\n    MaxMatchSegmenter seg = new MaxMatchSegmenter();\n    String lexiconFile = props.getProperty(\"lexicon\");\n    if(lexiconFile != null) {\n      seg.addLexicon(lexiconFile);\n    } else {\n      System.err.println(\"Error: no lexicon file!\");\n      System.exit(1);\n    }\n\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    int lineNb = 0;\n    for(;;) {\n      ++lineNb;\n      System.err.println(\"line: \"+lineNb);\n      try {\n        String line = br.readLine();\n        if(line == null)\n          break;\n        if(props.getProperty(\"greedy\") != null) {\n          ArrayList<Word> sentence = seg.greedilySegmentWords(line);\n          System.out.println(Sentence.listToString(sentence));\n        } else if(props.getProperty(\"maxwords\") != null) {\n          seg.buildSegmentationLattice(line);\n          System.out.println\n            (Sentence.listToString(seg.segmentWords(MatchHeuristic.MAXWORDS)));\n        } else {\n          seg.buildSegmentationLattice(line);\n          System.out.println(Sentence.listToString(seg.maxMatchSegmentation()));\n        }\n      }\n      catch (IOException e) {\n        break;\n      }\n    }\n  }","id":48798,"modified_method":"public static void main(String[] args) {\n    Properties props = StringUtils.argsToProperties(args);\n    // System.err.println(props.toString());\n    SeqClassifierFlags flags = new SeqClassifierFlags(props);\n    MaxMatchSegmenter seg = new MaxMatchSegmenter();\n    String lexiconFile = props.getProperty(\"lexicon\");\n    if(lexiconFile != null) {\n      seg.addLexicon(lexiconFile);\n    } else {\n      System.err.println(\"Error: no lexicon file!\");\n      System.exit(1);\n    }\n\n    Sighan2005DocumentReaderAndWriter sighanRW = new Sighan2005DocumentReaderAndWriter();\n    sighanRW.init(flags);\n\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    StringReader strR = null;\n    PrintWriter stdoutW = new PrintWriter(System.out);\n    int lineNb = 0;\n    for(;;) {\n      ++lineNb;\n      System.err.println(\"line: \"+lineNb);\n      try {\n        String line = br.readLine();\n        if(line == null)\n          break;\n        String outputLine = null;\n        if(props.getProperty(\"greedy\") != null) {\n          ArrayList<Word> sentence = seg.greedilySegmentWords(line);\n          outputLine = Sentence.listToString(sentence);\n        } else if(props.getProperty(\"maxwords\") != null) {\n          seg.buildSegmentationLattice(line);\n          outputLine = Sentence.listToString(seg.segmentWords(MatchHeuristic.MAXWORDS));\n        } else {\n          seg.buildSegmentationLattice(line);\n          outputLine = Sentence.listToString(seg.maxMatchSegmentation());\n        }\n        strR = new StringReader(outputLine);\n        Iterator<List<CoreLabel>> itr = sighanRW.getIterator(strR);\n        while(itr.hasNext()) {\n          sighanRW.printAnswers(itr.next(), stdoutW);\n        }\n        // System.out.println(outputLine);\n      }\n      catch (IOException e) {\n        break;\n      }\n    }\n    stdoutW.flush();\n  }","commit_id":"833986dac5d4a1bd68f46cfc4d0c014a78fa6139","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Add a word to the lexicon, unless it contains some non-Chinese character.\n   */\n  public void addStringToLexicon(String str) {\n    if(str.equals(\"\")) {\n      System.err.println(\"WARNING: blank line in lexicon\");\n    } else if(str.contains(\" \")) {\n      System.err.println(\"WARNING: word with space in lexicon\");\n    } else {\n      if(excludeChar(str)) {\n        printlnErr(\"skipping word: \"+str);\n        return;\n      }\n      printlnErr(\"adding word: \"+str);\n      words.add(str);\n    }\n  }","id":48799,"modified_method":"/**\n   * Add a word to the lexicon, unless it contains some non-Chinese character.\n   */\n  public void addStringToLexicon(String str) {\n    if(str.equals(\"\")) {\n      System.err.println(\"WARNING: blank line in lexicon\");\n    } else if(str.contains(\" \")) {\n      System.err.println(\"WARNING: word with space in lexicon\");\n    } else {\n      if(excludeChar(str)) {\n        printlnErr(\"skipping word: \"+str);\n        return;\n      }\n      // printlnErr(\"adding word: \"+str);\n      words.add(str);\n    }\n  }","commit_id":"833986dac5d4a1bd68f46cfc4d0c014a78fa6139","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"static boolean inside(int i, Mention m) {\n    return i >= m.startIndex && i < m.endIndex;\n  }","id":48800,"modified_method":"private static boolean inside(int i, Mention m) {\n    return i >= m.startIndex && i < m.endIndex;\n  }","commit_id":"833986dac5d4a1bd68f46cfc4d0c014a78fa6139","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Post-processes the extracted mentions. Here we set the Mention fields required for coref and order mentions by tree-traversal order.\n   * @param words List of words in each sentence, in textual order\n   * @param trees List of trees, one per sentence\n   * @param unorderedMentions List of unordered, unprocessed mentions\n   *                 Each mention MUST have startIndex and endIndex set!\n   *                 Optionally, if scoring is desired, mentions must have mentionID and originalRef set.\n   *                 All the other Mention fields are set here.\n   * @return List of mentions ordered according to the tree traversal\n   * @throws Exception\n   */\n  public List<List<Mention>> arrange(\n      Annotation anno,\n      List<List<CoreLabel>> words,\n      List<Tree> trees,\n      List<List<Mention>> unorderedMentions,\n      boolean doMergeLabels) throws Exception {\n\n    List<List<Mention>> orderedMentionsBySentence = new ArrayList<List<Mention>>();\n\n    //\n    // traverse all sentences and process each individual one\n    //\n    for(int sent = 0; sent < words.size(); sent ++){\n      List<CoreLabel> sentence = words.get(sent);\n      Tree tree = trees.get(sent);\n      List<Mention> mentions = unorderedMentions.get(sent);\n      Map<String, List<Mention>> mentionsToTrees = Generics.newHashMap();\n\n      // merge the parse tree of the entire sentence with the sentence words\n      if(doMergeLabels) mergeLabels(tree, sentence);\n\n      //\n      // set the surface information and the syntactic info in each mention\n      // startIndex and endIndex MUST be set before!\n      //\n      for(Mention mention: mentions){\n        mention.contextParseTree = tree;\n        mention.sentenceWords = sentence;\n        mention.originalSpan = new ArrayList<CoreLabel>(mention.sentenceWords.subList(mention.startIndex, mention.endIndex));\n        if(!((CoreLabel)tree.label()).has(CoreAnnotations.BeginIndexAnnotation.class)) tree.indexSpans(0);\n        if(mention.headWord==null) {\n          Tree headTree = ((RuleBasedCorefMentionFinder) mentionFinder).findSyntacticHead(mention, tree, sentence);\n          mention.headWord = (CoreLabel)headTree.label();\n          mention.headIndex = mention.headWord.get(CoreAnnotations.IndexAnnotation.class) - 1;\n        }\n        if(mention.mentionSubTree==null) {\n          // mentionSubTree = highest NP that has the same head\n          Tree headTree = tree.getLeaves().get(mention.headIndex);\n          if (headTree == null) { throw new RuntimeException(\"Missing head tree for a mention!\"); }\n          Tree t = headTree;\n          while ((t = t.parent(tree)) != null) {\n            if (t.headTerminal(headFinder) == headTree && t.value().equals(\"NP\")) {\n              mention.mentionSubTree = t;\n            } else if(mention.mentionSubTree != null){\n              break;\n            }\n          }\n          if (mention.mentionSubTree == null) {\n            mention.mentionSubTree = headTree;\n          }\n        }\n\n        List<Mention> mentionsForTree = mentionsToTrees.get(treeToKey(mention.mentionSubTree));\n        if(mentionsForTree == null){\n          mentionsForTree = new ArrayList<Mention>();\n          mentionsToTrees.put(treeToKey(mention.mentionSubTree), mentionsForTree);\n        }\n        mentionsForTree.add(mention);\n\n        // generates all fields required for coref, such as gender, number, etc.\n        mention.process(dictionaries, semantics, this, singletonPredictor);\n      }\n\n      //\n      // Order all mentions in tree-traversal order\n      //\n      List<Mention> orderedMentions = new ArrayList<Mention>();\n      orderedMentionsBySentence.add(orderedMentions);\n\n      // extract all mentions in tree traversal order (alternative: tree.postOrderNodeList())\n      for (Tree t : tree.preOrderNodeList()) {\n        List<Mention> lm = mentionsToTrees.get(treeToKey(t));\n        if(lm != null){\n          for(Mention m: lm){\n            orderedMentions.add(m);\n          }\n        }\n      }\n\n      //\n      // find appositions, predicate nominatives, relative pronouns in this sentence\n      //\n      findSyntacticRelations(tree, orderedMentions);\n      assert(mentions.size() == orderedMentions.size());\n    }\n    return orderedMentionsBySentence;\n  }","id":48801,"modified_method":"/**\n   * Post-processes the extracted mentions. Here we set the Mention fields required for coref and order mentions by tree-traversal order.\n   * @param words List of words in each sentence, in textual order\n   * @param trees List of trees, one per sentence\n   * @param unorderedMentions List of unordered, unprocessed mentions\n   *                 Each mention MUST have startIndex and endIndex set!\n   *                 Optionally, if scoring is desired, mentions must have mentionID and originalRef set.\n   *                 All the other Mention fields are set here.\n   * @return List of mentions ordered according to the tree traversal\n   * @throws Exception\n   */\n  public List<List<Mention>> arrange(\n      Annotation anno,\n      List<List<CoreLabel>> words,\n      List<Tree> trees,\n      List<List<Mention>> unorderedMentions,\n      boolean doMergeLabels) throws Exception {\n\n    List<List<Mention>> orderedMentionsBySentence = new ArrayList<List<Mention>>();\n\n    //\n    // traverse all sentences and process each individual one\n    //\n    for (int sent = 0, sz = words.size(); sent < sz; sent ++) {\n      List<CoreLabel> sentence = words.get(sent);\n      Tree tree = trees.get(sent);\n      List<Mention> mentions = unorderedMentions.get(sent);\n      Map<String, List<Mention>> mentionsToTrees = Generics.newHashMap();\n\n      // merge the parse tree of the entire sentence with the sentence words\n      if(doMergeLabels) mergeLabels(tree, sentence);\n\n      //\n      // set the surface information and the syntactic info in each mention\n      // startIndex and endIndex MUST be set before!\n      //\n      for (Mention mention: mentions) {\n        mention.contextParseTree = tree;\n        mention.sentenceWords = sentence;\n        mention.originalSpan = new ArrayList<CoreLabel>(mention.sentenceWords.subList(mention.startIndex, mention.endIndex));\n        if(!((CoreLabel)tree.label()).has(CoreAnnotations.BeginIndexAnnotation.class)) tree.indexSpans(0);\n        if(mention.headWord==null) {\n          Tree headTree = ((RuleBasedCorefMentionFinder) mentionFinder).findSyntacticHead(mention, tree, sentence);\n          mention.headWord = (CoreLabel)headTree.label();\n          mention.headIndex = mention.headWord.get(CoreAnnotations.IndexAnnotation.class) - 1;\n        }\n        if(mention.mentionSubTree==null) {\n          // mentionSubTree = highest NP that has the same head\n          Tree headTree = tree.getLeaves().get(mention.headIndex);\n          if (headTree == null) { throw new RuntimeException(\"Missing head tree for a mention!\"); }\n          Tree t = headTree;\n          while ((t = t.parent(tree)) != null) {\n            if (t.headTerminal(headFinder) == headTree && t.value().equals(\"NP\")) {\n              mention.mentionSubTree = t;\n            } else if(mention.mentionSubTree != null){\n              break;\n            }\n          }\n          if (mention.mentionSubTree == null) {\n            mention.mentionSubTree = headTree;\n          }\n        }\n\n        List<Mention> mentionsForTree = mentionsToTrees.get(treeToKey(mention.mentionSubTree));\n        if(mentionsForTree == null){\n          mentionsForTree = new ArrayList<Mention>();\n          mentionsToTrees.put(treeToKey(mention.mentionSubTree), mentionsForTree);\n        }\n        mentionsForTree.add(mention);\n\n        // generates all fields required for coref, such as gender, number, etc.\n        mention.process(dictionaries, semantics, this, singletonPredictor);\n      }\n\n      //\n      // Order all mentions in tree-traversal order\n      //\n      List<Mention> orderedMentions = new ArrayList<Mention>();\n      orderedMentionsBySentence.add(orderedMentions);\n\n      // extract all mentions in tree traversal order (alternative: tree.postOrderNodeList())\n      for (Tree t : tree.preOrderNodeList()) {\n        List<Mention> lm = mentionsToTrees.get(treeToKey(t));\n        if(lm != null){\n          for(Mention m: lm){\n            orderedMentions.add(m);\n          }\n        }\n      }\n\n      //\n      // find appositions, predicate nominatives, relative pronouns in this sentence\n      //\n      findSyntacticRelations(tree, orderedMentions);\n      assert(mentions.size() == orderedMentions.size());\n    }\n    return orderedMentionsBySentence;\n  }","commit_id":"833986dac5d4a1bd68f46cfc4d0c014a78fa6139","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/** Load Stanford Processor: skip unnecessary annotator */\n  protected static StanfordCoreNLP loadStanfordProcessor(Properties props) {\n    boolean replicateCoNLL = Boolean.parseBoolean(props.getProperty(Constants.REPLICATECONLL_PROP, \"false\"));\n\n    Properties pipelineProps = new Properties(props);\n    StringBuilder annoSb = new StringBuilder(\"\");\n    if (!Constants.USE_GOLD_POS && !replicateCoNLL)  {\n      annoSb.append(\"pos, lemma\");\n    } else {\n      annoSb.append(\"lemma\");\n    }\n    if(Constants.USE_TRUECASE) {\n      annoSb.append(\", truecase\");\n    }\n    if (!Constants.USE_GOLD_NE && !replicateCoNLL)  {\n      annoSb.append(\", ner\");\n    }\n    if (!Constants.USE_GOLD_PARSES && !replicateCoNLL)  {\n      annoSb.append(\", parse\");\n    }\n    String annoStr = annoSb.toString();\n    SieveCoreferenceSystem.logger.info(\"Ignoring specified annotators, using annotators=\" + annoStr);\n    pipelineProps.put(\"annotators\", annoStr);\n    return new StanfordCoreNLP(pipelineProps, false);\n  }","id":48802,"modified_method":"/** Load Stanford Processor: skip unnecessary annotator */\n  protected static StanfordCoreNLP loadStanfordProcessor(Properties props) {\n    boolean replicateCoNLL = Boolean.parseBoolean(props.getProperty(Constants.REPLICATECONLL_PROP, \"false\"));\n\n    Properties pipelineProps = new Properties(props);\n    StringBuilder annoSb = new StringBuilder(\"\");\n    if (!Constants.USE_GOLD_POS && !replicateCoNLL)  {\n      annoSb.append(\"pos, lemma\");\n    } else {\n      annoSb.append(\"lemma\");\n    }\n    if(Constants.USE_TRUECASE) {\n      annoSb.append(\", truecase\");\n    }\n    if (!Constants.USE_GOLD_NE && !replicateCoNLL)  {\n      annoSb.append(\", ner\");\n    }\n    if (!Constants.USE_GOLD_PARSES && !replicateCoNLL)  {\n      annoSb.append(\", parse\");\n    }\n    String annoStr = annoSb.toString();\n    SieveCoreferenceSystem.logger.info(\"MentionExtractor ignores specified annotators, using annotators=\" + annoStr);\n    pipelineProps.put(\"annotators\", annoStr);\n    return new StanfordCoreNLP(pipelineProps, false);\n  }","commit_id":"833986dac5d4a1bd68f46cfc4d0c014a78fa6139","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private String treeToKey(Tree t){\n    int idx = getHeadIndex(t);\n    String key = Integer.toString(idx) + \":\" + t.toString();\n    return key;\n  }","id":48803,"modified_method":"private String treeToKey(Tree t) {\n    int idx = getHeadIndex(t);\n    String key = Integer.toString(idx) + ':' + t.toString();\n    return key;\n  }","commit_id":"833986dac5d4a1bd68f46cfc4d0c014a78fa6139","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected int getHeadIndex(Tree t) {\n    Tree ht = t.headTerminal(headFinder);\n    if(ht==null) return -1;  // temporary: a key which is matched to nothing\n    CoreLabel l = (CoreLabel) ht.label();\n    return (int) l.get(CoreAnnotations.IndexAnnotation.class);\n  }","id":48804,"modified_method":"protected int getHeadIndex(Tree t) {\n    Tree ht = t.headTerminal(headFinder);\n    if(ht==null) return -1;  // temporary: a key which is matched to nothing\n    CoreLabel l = (CoreLabel) ht.label();\n    return l.get(CoreAnnotations.IndexAnnotation.class);\n  }","commit_id":"833986dac5d4a1bd68f46cfc4d0c014a78fa6139","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Tree findPartialSpan(final Tree root, final int start) {\n    CoreLabel label = (CoreLabel) root.label();\n    int startIndex = label.get(CoreAnnotations.BeginIndexAnnotation.class);\n    if (startIndex == start) {\n      return root;\n    }\n    for (Tree kid : root.children()) {\n      CoreLabel kidLabel = (CoreLabel) kid.label();\n      int kidStart = kidLabel.get(CoreAnnotations.BeginIndexAnnotation.class);\n      int kidEnd = kidLabel.get(CoreAnnotations.EndIndexAnnotation.class);\n      if (kidStart <= start && kidEnd > start) {\n        return findPartialSpan(kid, start);\n      }\n    }\n    throw new RuntimeException(\"Shouldn't happen: \" + start + \" \" + root);\n  }","id":48805,"modified_method":"/** Find the tree that covers the portion of interest. */\n  private static Tree findPartialSpan(final Tree root, final int start) {\n    CoreLabel label = (CoreLabel) root.label();\n    int startIndex = label.get(CoreAnnotations.BeginIndexAnnotation.class);\n    if (startIndex == start) {\n      return root;\n    }\n    for (Tree kid : root.children()) {\n      CoreLabel kidLabel = (CoreLabel) kid.label();\n      int kidStart = kidLabel.get(CoreAnnotations.BeginIndexAnnotation.class);\n      int kidEnd = kidLabel.get(CoreAnnotations.EndIndexAnnotation.class);\n      if (kidStart <= start && kidEnd > start) {\n        return findPartialSpan(kid, start);\n      }\n    }\n    throw new RuntimeException(\"Shouldn't happen: \" + start + \" \" + root);\n  }","commit_id":"833986dac5d4a1bd68f46cfc4d0c014a78fa6139","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private Tree safeHead(Tree top) {\n    Tree head = top.headTerminal(headFinder);\n    if (head != null) return head;\n    // if no head found return the right-most leaf\n    List<Tree> leaves = top.getLeaves();\n    if(leaves.size() > 0) return leaves.get(leaves.size() - 1);\n    // fallback: return top\n    return top;\n  }","id":48806,"modified_method":"private Tree safeHead(Tree top, int endIndex) {\n    Tree head = top.headTerminal(headFinder);\n    // One obscure failure case is that the added period becomes the head. Disallow this.\n    if (head != null) {\n      Integer headIndexInteger = ((CoreLabel) head.label()).get(CoreAnnotations.IndexAnnotation.class);\n      if (headIndexInteger != null) {\n        int headIndex = headIndexInteger - 1;\n        if (headIndex < endIndex) {\n          return head;\n        }\n      }\n    }\n    // if no head found return the right-most leaf\n    List<Tree> leaves = top.getLeaves();\n    int candidate = leaves.size() - 1;\n    while (candidate >= 0) {\n      head = leaves.get(candidate);\n      Integer headIndexInteger = ((CoreLabel) head.label()).get(CoreAnnotations.IndexAnnotation.class);\n      if (headIndexInteger != null) {\n        int headIndex = headIndexInteger - 1;\n        if (headIndex < endIndex) {\n          return head;\n        }\n      }\n      candidate--;\n    }\n    // fallback: return top\n    return top;\n  }","commit_id":"833986dac5d4a1bd68f46cfc4d0c014a78fa6139","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected Tree findSyntacticHead(Mention m, Tree root, List<CoreLabel> tokens) {\n    // mention ends with 's\n    int endIdx = m.endIndex;\n    String lastWord = m.originalSpan.get(m.originalSpan.size()-1).get(CoreAnnotations.TextAnnotation.class);\n    if((lastWord.equals(\"'s\") || lastWord.equals(\"'\"))\n        && m.originalSpan.size() != 1 ) endIdx--;\n\n    Tree exactMatch = findTreeWithSpan(root, m.startIndex, endIdx);\n    //\n    // found an exact match\n    //\n    if (exactMatch != null) {\n      return safeHead(exactMatch);\n    }\n\n    // no exact match found\n    // in this case, we parse the actual extent of the mention, embedded in a sentence\n    // context, so as to make the parser work better :-)\n\n    int approximateness = 0;\n    List<CoreLabel> extentTokens = new ArrayList<CoreLabel>();\n    extentTokens.add(initCoreLabel(\"It\"));\n    extentTokens.add(initCoreLabel(\"was\"));\n    final int ADDED_WORDS = 2;\n    for (int i = m.startIndex; i < endIdx; i++) {\n      // Add everything except separated dashes! The separated dashes mess with the parser too badly.\n      CoreLabel label = tokens.get(i);\n      if ( ! \"-\".equals(label.word())) {\n        extentTokens.add(tokens.get(i));\n      } else {\n        approximateness++;\n      }\n    }\n    extentTokens.add(initCoreLabel(\".\"));\n\n    // constrain the parse to the part we're interested in.\n    // Starting from ADDED_WORDS comes from skipping \"It was\".\n    // -1 to exclude the period.\n    // We now let it be any kind of nominal constituent, since there\n    // are VP and S ones\n    ParserConstraint constraint = new ParserConstraint(ADDED_WORDS, extentTokens.size() - 1, Pattern.compile(\".*\"));\n    List<ParserConstraint> constraints = Collections.singletonList(constraint);\n    Tree tree = parse(extentTokens, constraints);\n    convertToCoreLabels(tree);\n    tree.indexSpans(m.startIndex - ADDED_WORDS);  // remember it has ADDED_WORDS extra words at the beginning\n    Tree subtree = findPartialSpan(tree, m.startIndex);\n    Tree extentHead = safeHead(subtree);\n    assert(extentHead != null);\n    // extentHead is a child in the local extent parse tree. we need to find the corresponding node in the main tree\n    // Because we deleted dashes, it's index will be >= the index in the extent parse tree\n    CoreLabel l = (CoreLabel) extentHead.label();\n    Tree realHead = funkyFindLeafWithApproximateSpan(root, l.value(), l.get(CoreAnnotations.BeginIndexAnnotation.class), approximateness);\n    assert(realHead != null);\n    return realHead;\n  }","id":48807,"modified_method":"protected Tree findSyntacticHead(Mention m, Tree root, List<CoreLabel> tokens) {\n    // mention ends with 's\n    int endIdx = m.endIndex;\n    String lastWord = m.originalSpan.get(m.originalSpan.size()-1).get(CoreAnnotations.TextAnnotation.class);\n    if((lastWord.equals(\"'s\") || lastWord.equals(\"'\"))\n        && m.originalSpan.size() != 1 ) endIdx--;\n\n    Tree exactMatch = findTreeWithSpan(root, m.startIndex, endIdx);\n    //\n    // found an exact match\n    //\n    if (exactMatch != null) {\n      return safeHead(exactMatch, endIdx);\n    }\n\n    // no exact match found\n    // in this case, we parse the actual extent of the mention, embedded in a sentence\n    // context, so as to make the parser work better :-)\n\n    int approximateness = 0;\n    List<CoreLabel> extentTokens = new ArrayList<CoreLabel>();\n    extentTokens.add(initCoreLabel(\"It\"));\n    extentTokens.add(initCoreLabel(\"was\"));\n    final int ADDED_WORDS = 2;\n    for (int i = m.startIndex; i < endIdx; i++) {\n      // Add everything except separated dashes! The separated dashes mess with the parser too badly.\n      CoreLabel label = tokens.get(i);\n      if ( ! \"-\".equals(label.word())) {\n        extentTokens.add(tokens.get(i));\n      } else {\n        approximateness++;\n      }\n    }\n    extentTokens.add(initCoreLabel(\".\"));\n\n    // constrain the parse to the part we're interested in.\n    // Starting from ADDED_WORDS comes from skipping \"It was\".\n    // -1 to exclude the period.\n    // We now let it be any kind of nominal constituent, since there\n    // are VP and S ones\n    ParserConstraint constraint = new ParserConstraint(ADDED_WORDS, extentTokens.size() - 1, Pattern.compile(\".*\"));\n    List<ParserConstraint> constraints = Collections.singletonList(constraint);\n    Tree tree = parse(extentTokens, constraints);\n    convertToCoreLabels(tree);  // now unnecessary, as parser uses CoreLabels?\n    tree.indexSpans(m.startIndex - ADDED_WORDS);  // remember it has ADDED_WORDS extra words at the beginning\n    Tree subtree = findPartialSpan(tree, m.startIndex);\n    // There was a possible problem that with a crazy parse, extentHead could be one of the added words, not a real word!\n    // Now we make sure in findPartialSpan that it can't be before the real start, and in safeHead, we disallow something\n    // passed the right end (that is, just that final period).\n    Tree extentHead = safeHead(subtree, endIdx);\n    assert(extentHead != null);\n    // extentHead is a child in the local extent parse tree. we need to find the corresponding node in the main tree\n    // Because we deleted dashes, it's index will be >= the index in the extent parse tree\n    CoreLabel l = (CoreLabel) extentHead.label();\n    Tree realHead = funkyFindLeafWithApproximateSpan(root, l.value(), l.get(CoreAnnotations.BeginIndexAnnotation.class), approximateness);\n    assert(realHead != null);\n    return realHead;\n  }","commit_id":"833986dac5d4a1bd68f46cfc4d0c014a78fa6139","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Tree funkyFindLeafWithApproximateSpan(Tree root, String token, int index, int approximateness) {\n    List<Tree> leaves = root.getLeaves();\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      int ind = label.get(CoreAnnotations.IndexAnnotation.class) - 1;\n      if (token.equals(leaf.value()) && ind >= index && ind <= index + approximateness) {\n        return leaf;\n      }\n    }\n    // this shouldn't happen\n    //    throw new RuntimeException(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    System.err.println(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    return leaves.get(leaves.size() - 1);\n  }","id":48808,"modified_method":"private static Tree funkyFindLeafWithApproximateSpan(Tree root, String token, int index, int approximateness) {\n    // System.err.println(\"Searching \" + root + \"\\n  for \" + token + \" at position \" + index + \" (plus up to \" + approximateness + \")\");\n    List<Tree> leaves = root.getLeaves();\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      Integer indexInteger = label.get(CoreAnnotations.IndexAnnotation.class);\n      if (indexInteger == null) continue;\n      int ind = indexInteger - 1;\n      if (token.equals(leaf.value()) && ind >= index && ind <= index + approximateness) {\n        return leaf;\n      }\n    }\n    // this shouldn't happen\n    //    throw new RuntimeException(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    SieveCoreferenceSystem.logger.warning(\"RuleBasedCorefMentionFinder: Failed to find head token:\\n\" +\n                       \"Tree is: \" + root + \"\\n\" + \n                       \"token = |\" + token + \"|\" + index + \"|, approx=\" + approximateness);\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      Integer indexInteger = label.get(CoreAnnotations.IndexAnnotation.class);\n      if (indexInteger == null) continue; // not a word from the original tree\n      int ind = indexInteger - 1;\n      if (token.equals(leaf.value())) {\n        // System.err.println(\"Found it at position \" + ind + \"; returning \" + leaf);\n        return leaf;\n      }\n    }\n    SieveCoreferenceSystem.logger.warning(\"RuleBasedCorefMentionFinder: Last resort: returning as head: \" + leaves.get(leaves.size() - 2));\n    return leaves.get(leaves.size() - 2); // last except for the added period.\n  }","commit_id":"833986dac5d4a1bd68f46cfc4d0c014a78fa6139","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Add a word to the lexicon, unless it contains some non-Chinese character.\n   */\n  public void addStringToLexicon(String str) {\n    if(str.equals(\"\")) {\n      System.err.println(\"WARNING: blank line in lexicon\");\n    } else if(str.contains(\" \")) {\n      System.err.println(\"WARNING: word with space in lexicon\");\n    } else {\n      if(excludeChar(str)) {\n        printlnErr(\"skipping word: \"+str);\n        return;\n      }\n      printlnErr(\"adding word: \"+str);\n      words.add(str);\n    }\n  }","id":48809,"modified_method":"/**\n   * Add a word to the lexicon, unless it contains some non-Chinese character.\n   */\n  public void addStringToLexicon(String str) {\n    if(str.equals(\"\")) {\n      System.err.println(\"WARNING: blank line in lexicon\");\n    } else if(str.contains(\" \")) {\n      System.err.println(\"WARNING: word with space in lexicon\");\n    } else {\n      if(excludeChar(str)) {\n        printlnErr(\"skipping word: \"+str);\n        return;\n      }\n      // printlnErr(\"adding word: \"+str);\n      words.add(str);\n    }\n  }","commit_id":"d4d0f4bd8227dfc5ffb48dc420ac90c193030467","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    Properties props = StringUtils.argsToProperties(args);\n    System.err.println(props.toString());\n    MaxMatchSegmenter seg = new MaxMatchSegmenter();\n    String lexiconFile = props.getProperty(\"lexicon\");\n    if(lexiconFile != null) {\n      seg.addLexicon(lexiconFile);\n    } else {\n      System.err.println(\"Error: no lexicon file!\");\n      System.exit(1);\n    }\n\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    int lineNb = 0;\n    for(;;) {\n      ++lineNb;\n      System.err.println(\"line: \"+lineNb);\n      try {\n        String line = br.readLine();\n        if(line == null)\n          break;\n        if(props.getProperty(\"greedy\") != null) {\n          ArrayList<Word> sentence = seg.greedilySegmentWords(line);\n          System.out.println(Sentence.listToString(sentence));\n        } else if(props.getProperty(\"maxwords\") != null) {\n          seg.buildSegmentationLattice(line);\n          System.out.println\n            (Sentence.listToString(seg.segmentWords(MatchHeuristic.MAXWORDS)));\n        } else {\n          seg.buildSegmentationLattice(line);\n          System.out.println(Sentence.listToString(seg.maxMatchSegmentation()));\n        }\n      }\n      catch (IOException e) {\n        break;\n      }\n    }\n  }","id":48810,"modified_method":"public static void main(String[] args) {\n    Properties props = StringUtils.argsToProperties(args);\n    // System.err.println(props.toString());\n    SeqClassifierFlags flags = new SeqClassifierFlags(props);\n    MaxMatchSegmenter seg = new MaxMatchSegmenter();\n    String lexiconFile = props.getProperty(\"lexicon\");\n    if(lexiconFile != null) {\n      seg.addLexicon(lexiconFile);\n    } else {\n      System.err.println(\"Error: no lexicon file!\");\n      System.exit(1);\n    }\n\n    Sighan2005DocumentReaderAndWriter sighanRW = new Sighan2005DocumentReaderAndWriter();\n    sighanRW.init(flags);\n\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    StringReader strR = null;\n    PrintWriter stdoutW = new PrintWriter(System.out);\n    int lineNb = 0;\n    for(;;) {\n      ++lineNb;\n      System.err.println(\"line: \"+lineNb);\n      try {\n        String line = br.readLine();\n        if(line == null)\n          break;\n        String outputLine = null;\n        if(props.getProperty(\"greedy\") != null) {\n          ArrayList<Word> sentence = seg.greedilySegmentWords(line);\n          outputLine = Sentence.listToString(sentence);\n        } else if(props.getProperty(\"maxwords\") != null) {\n          seg.buildSegmentationLattice(line);\n          outputLine = Sentence.listToString(seg.segmentWords(MatchHeuristic.MAXWORDS));\n        } else {\n          seg.buildSegmentationLattice(line);\n          outputLine = Sentence.listToString(seg.maxMatchSegmentation());\n        }\n        strR = new StringReader(outputLine);\n        Iterator<List<CoreLabel>> itr = sighanRW.getIterator(strR);\n        while(itr.hasNext()) {\n          sighanRW.printAnswers(itr.next(), stdoutW);\n        }\n        // System.out.println(outputLine);\n      }\n      catch (IOException e) {\n        break;\n      }\n    }\n    stdoutW.flush();\n  }","commit_id":"d4d0f4bd8227dfc5ffb48dc420ac90c193030467","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Post-processes the extracted mentions. Here we set the Mention fields required for coref and order mentions by tree-traversal order.\n   * @param words List of words in each sentence, in textual order\n   * @param trees List of trees, one per sentence\n   * @param unorderedMentions List of unordered, unprocessed mentions\n   *                 Each mention MUST have startIndex and endIndex set!\n   *                 Optionally, if scoring is desired, mentions must have mentionID and originalRef set.\n   *                 All the other Mention fields are set here.\n   * @return List of mentions ordered according to the tree traversal\n   * @throws Exception\n   */\n  public List<List<Mention>> arrange(\n      Annotation anno,\n      List<List<CoreLabel>> words,\n      List<Tree> trees,\n      List<List<Mention>> unorderedMentions,\n      boolean doMergeLabels) throws Exception {\n\n    List<List<Mention>> orderedMentionsBySentence = new ArrayList<List<Mention>>();\n\n    //\n    // traverse all sentences and process each individual one\n    //\n    for(int sent = 0; sent < words.size(); sent ++){\n      List<CoreLabel> sentence = words.get(sent);\n      Tree tree = trees.get(sent);\n      List<Mention> mentions = unorderedMentions.get(sent);\n      Map<String, List<Mention>> mentionsToTrees = Generics.newHashMap();\n\n      // merge the parse tree of the entire sentence with the sentence words\n      if(doMergeLabels) mergeLabels(tree, sentence);\n\n      //\n      // set the surface information and the syntactic info in each mention\n      // startIndex and endIndex MUST be set before!\n      //\n      for(Mention mention: mentions){\n        mention.contextParseTree = tree;\n        mention.sentenceWords = sentence;\n        mention.originalSpan = new ArrayList<CoreLabel>(mention.sentenceWords.subList(mention.startIndex, mention.endIndex));\n        if(!((CoreLabel)tree.label()).has(CoreAnnotations.BeginIndexAnnotation.class)) tree.indexSpans(0);\n        if(mention.headWord==null) {\n          Tree headTree = ((RuleBasedCorefMentionFinder) mentionFinder).findSyntacticHead(mention, tree, sentence);\n          mention.headWord = (CoreLabel)headTree.label();\n          mention.headIndex = mention.headWord.get(CoreAnnotations.IndexAnnotation.class) - 1;\n        }\n        if(mention.mentionSubTree==null) {\n          // mentionSubTree = highest NP that has the same head\n          Tree headTree = tree.getLeaves().get(mention.headIndex);\n          if (headTree == null) { throw new RuntimeException(\"Missing head tree for a mention!\"); }\n          Tree t = headTree;\n          while ((t = t.parent(tree)) != null) {\n            if (t.headTerminal(headFinder) == headTree && t.value().equals(\"NP\")) {\n              mention.mentionSubTree = t;\n            } else if(mention.mentionSubTree != null){\n              break;\n            }\n          }\n          if (mention.mentionSubTree == null) {\n            mention.mentionSubTree = headTree;\n          }\n        }\n\n        List<Mention> mentionsForTree = mentionsToTrees.get(treeToKey(mention.mentionSubTree));\n        if(mentionsForTree == null){\n          mentionsForTree = new ArrayList<Mention>();\n          mentionsToTrees.put(treeToKey(mention.mentionSubTree), mentionsForTree);\n        }\n        mentionsForTree.add(mention);\n\n        // generates all fields required for coref, such as gender, number, etc.\n        mention.process(dictionaries, semantics, this, singletonPredictor);\n      }\n\n      //\n      // Order all mentions in tree-traversal order\n      //\n      List<Mention> orderedMentions = new ArrayList<Mention>();\n      orderedMentionsBySentence.add(orderedMentions);\n\n      // extract all mentions in tree traversal order (alternative: tree.postOrderNodeList())\n      for (Tree t : tree.preOrderNodeList()) {\n        List<Mention> lm = mentionsToTrees.get(treeToKey(t));\n        if(lm != null){\n          for(Mention m: lm){\n            orderedMentions.add(m);\n          }\n        }\n      }\n\n      //\n      // find appositions, predicate nominatives, relative pronouns in this sentence\n      //\n      findSyntacticRelations(tree, orderedMentions);\n      assert(mentions.size() == orderedMentions.size());\n    }\n    return orderedMentionsBySentence;\n  }","id":48811,"modified_method":"/**\n   * Post-processes the extracted mentions. Here we set the Mention fields required for coref and order mentions by tree-traversal order.\n   * @param words List of words in each sentence, in textual order\n   * @param trees List of trees, one per sentence\n   * @param unorderedMentions List of unordered, unprocessed mentions\n   *                 Each mention MUST have startIndex and endIndex set!\n   *                 Optionally, if scoring is desired, mentions must have mentionID and originalRef set.\n   *                 All the other Mention fields are set here.\n   * @return List of mentions ordered according to the tree traversal\n   * @throws Exception\n   */\n  public List<List<Mention>> arrange(\n      Annotation anno,\n      List<List<CoreLabel>> words,\n      List<Tree> trees,\n      List<List<Mention>> unorderedMentions,\n      boolean doMergeLabels) throws Exception {\n\n    List<List<Mention>> orderedMentionsBySentence = new ArrayList<List<Mention>>();\n\n    //\n    // traverse all sentences and process each individual one\n    //\n    for (int sent = 0, sz = words.size(); sent < sz; sent ++) {\n      List<CoreLabel> sentence = words.get(sent);\n      Tree tree = trees.get(sent);\n      List<Mention> mentions = unorderedMentions.get(sent);\n      Map<String, List<Mention>> mentionsToTrees = Generics.newHashMap();\n\n      // merge the parse tree of the entire sentence with the sentence words\n      if(doMergeLabels) mergeLabels(tree, sentence);\n\n      //\n      // set the surface information and the syntactic info in each mention\n      // startIndex and endIndex MUST be set before!\n      //\n      for (Mention mention: mentions) {\n        mention.contextParseTree = tree;\n        mention.sentenceWords = sentence;\n        mention.originalSpan = new ArrayList<CoreLabel>(mention.sentenceWords.subList(mention.startIndex, mention.endIndex));\n        if(!((CoreLabel)tree.label()).has(CoreAnnotations.BeginIndexAnnotation.class)) tree.indexSpans(0);\n        if(mention.headWord==null) {\n          Tree headTree = ((RuleBasedCorefMentionFinder) mentionFinder).findSyntacticHead(mention, tree, sentence);\n          mention.headWord = (CoreLabel)headTree.label();\n          mention.headIndex = mention.headWord.get(CoreAnnotations.IndexAnnotation.class) - 1;\n        }\n        if(mention.mentionSubTree==null) {\n          // mentionSubTree = highest NP that has the same head\n          Tree headTree = tree.getLeaves().get(mention.headIndex);\n          if (headTree == null) { throw new RuntimeException(\"Missing head tree for a mention!\"); }\n          Tree t = headTree;\n          while ((t = t.parent(tree)) != null) {\n            if (t.headTerminal(headFinder) == headTree && t.value().equals(\"NP\")) {\n              mention.mentionSubTree = t;\n            } else if(mention.mentionSubTree != null){\n              break;\n            }\n          }\n          if (mention.mentionSubTree == null) {\n            mention.mentionSubTree = headTree;\n          }\n        }\n\n        List<Mention> mentionsForTree = mentionsToTrees.get(treeToKey(mention.mentionSubTree));\n        if(mentionsForTree == null){\n          mentionsForTree = new ArrayList<Mention>();\n          mentionsToTrees.put(treeToKey(mention.mentionSubTree), mentionsForTree);\n        }\n        mentionsForTree.add(mention);\n\n        // generates all fields required for coref, such as gender, number, etc.\n        mention.process(dictionaries, semantics, this, singletonPredictor);\n      }\n\n      //\n      // Order all mentions in tree-traversal order\n      //\n      List<Mention> orderedMentions = new ArrayList<Mention>();\n      orderedMentionsBySentence.add(orderedMentions);\n\n      // extract all mentions in tree traversal order (alternative: tree.postOrderNodeList())\n      for (Tree t : tree.preOrderNodeList()) {\n        List<Mention> lm = mentionsToTrees.get(treeToKey(t));\n        if(lm != null){\n          for(Mention m: lm){\n            orderedMentions.add(m);\n          }\n        }\n      }\n\n      //\n      // find appositions, predicate nominatives, relative pronouns in this sentence\n      //\n      findSyntacticRelations(tree, orderedMentions);\n      assert(mentions.size() == orderedMentions.size());\n    }\n    return orderedMentionsBySentence;\n  }","commit_id":"d4d0f4bd8227dfc5ffb48dc420ac90c193030467","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"static boolean inside(int i, Mention m) {\n    return i >= m.startIndex && i < m.endIndex;\n  }","id":48812,"modified_method":"private static boolean inside(int i, Mention m) {\n    return i >= m.startIndex && i < m.endIndex;\n  }","commit_id":"d4d0f4bd8227dfc5ffb48dc420ac90c193030467","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected int getHeadIndex(Tree t) {\n    Tree ht = t.headTerminal(headFinder);\n    if(ht==null) return -1;  // temporary: a key which is matched to nothing\n    CoreLabel l = (CoreLabel) ht.label();\n    return (int) l.get(CoreAnnotations.IndexAnnotation.class);\n  }","id":48813,"modified_method":"protected int getHeadIndex(Tree t) {\n    Tree ht = t.headTerminal(headFinder);\n    if(ht==null) return -1;  // temporary: a key which is matched to nothing\n    CoreLabel l = (CoreLabel) ht.label();\n    return l.get(CoreAnnotations.IndexAnnotation.class);\n  }","commit_id":"d4d0f4bd8227dfc5ffb48dc420ac90c193030467","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private String treeToKey(Tree t){\n    int idx = getHeadIndex(t);\n    String key = Integer.toString(idx) + \":\" + t.toString();\n    return key;\n  }","id":48814,"modified_method":"private String treeToKey(Tree t) {\n    int idx = getHeadIndex(t);\n    String key = Integer.toString(idx) + ':' + t.toString();\n    return key;\n  }","commit_id":"d4d0f4bd8227dfc5ffb48dc420ac90c193030467","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/** Load Stanford Processor: skip unnecessary annotator */\n  protected static StanfordCoreNLP loadStanfordProcessor(Properties props) {\n    boolean replicateCoNLL = Boolean.parseBoolean(props.getProperty(Constants.REPLICATECONLL_PROP, \"false\"));\n\n    Properties pipelineProps = new Properties(props);\n    StringBuilder annoSb = new StringBuilder(\"\");\n    if (!Constants.USE_GOLD_POS && !replicateCoNLL)  {\n      annoSb.append(\"pos, lemma\");\n    } else {\n      annoSb.append(\"lemma\");\n    }\n    if(Constants.USE_TRUECASE) {\n      annoSb.append(\", truecase\");\n    }\n    if (!Constants.USE_GOLD_NE && !replicateCoNLL)  {\n      annoSb.append(\", ner\");\n    }\n    if (!Constants.USE_GOLD_PARSES && !replicateCoNLL)  {\n      annoSb.append(\", parse\");\n    }\n    String annoStr = annoSb.toString();\n    SieveCoreferenceSystem.logger.info(\"Ignoring specified annotators, using annotators=\" + annoStr);\n    pipelineProps.put(\"annotators\", annoStr);\n    return new StanfordCoreNLP(pipelineProps, false);\n  }","id":48815,"modified_method":"/** Load Stanford Processor: skip unnecessary annotator */\n  protected static StanfordCoreNLP loadStanfordProcessor(Properties props) {\n    boolean replicateCoNLL = Boolean.parseBoolean(props.getProperty(Constants.REPLICATECONLL_PROP, \"false\"));\n\n    Properties pipelineProps = new Properties(props);\n    StringBuilder annoSb = new StringBuilder(\"\");\n    if (!Constants.USE_GOLD_POS && !replicateCoNLL)  {\n      annoSb.append(\"pos, lemma\");\n    } else {\n      annoSb.append(\"lemma\");\n    }\n    if(Constants.USE_TRUECASE) {\n      annoSb.append(\", truecase\");\n    }\n    if (!Constants.USE_GOLD_NE && !replicateCoNLL)  {\n      annoSb.append(\", ner\");\n    }\n    if (!Constants.USE_GOLD_PARSES && !replicateCoNLL)  {\n      annoSb.append(\", parse\");\n    }\n    String annoStr = annoSb.toString();\n    SieveCoreferenceSystem.logger.info(\"MentionExtractor ignores specified annotators, using annotators=\" + annoStr);\n    pipelineProps.put(\"annotators\", annoStr);\n    return new StanfordCoreNLP(pipelineProps, false);\n  }","commit_id":"d4d0f4bd8227dfc5ffb48dc420ac90c193030467","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private Tree safeHead(Tree top) {\n    Tree head = top.headTerminal(headFinder);\n    if (head != null) return head;\n    // if no head found return the right-most leaf\n    List<Tree> leaves = top.getLeaves();\n    if(leaves.size() > 0) return leaves.get(leaves.size() - 1);\n    // fallback: return top\n    return top;\n  }","id":48816,"modified_method":"private Tree safeHead(Tree top, int endIndex) {\n    Tree head = top.headTerminal(headFinder);\n    // One obscure failure case is that the added period becomes the head. Disallow this.\n    if (head != null) {\n      Integer headIndexInteger = ((CoreLabel) head.label()).get(CoreAnnotations.IndexAnnotation.class);\n      if (headIndexInteger != null) {\n        int headIndex = headIndexInteger - 1;\n        if (headIndex < endIndex) {\n          return head;\n        }\n      }\n    }\n    // if no head found return the right-most leaf\n    List<Tree> leaves = top.getLeaves();\n    int candidate = leaves.size() - 1;\n    while (candidate >= 0) {\n      head = leaves.get(candidate);\n      Integer headIndexInteger = ((CoreLabel) head.label()).get(CoreAnnotations.IndexAnnotation.class);\n      if (headIndexInteger != null) {\n        int headIndex = headIndexInteger - 1;\n        if (headIndex < endIndex) {\n          return head;\n        }\n      }\n      candidate--;\n    }\n    // fallback: return top\n    return top;\n  }","commit_id":"d4d0f4bd8227dfc5ffb48dc420ac90c193030467","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Tree findPartialSpan(final Tree root, final int start) {\n    CoreLabel label = (CoreLabel) root.label();\n    int startIndex = label.get(CoreAnnotations.BeginIndexAnnotation.class);\n    if (startIndex == start) {\n      return root;\n    }\n    for (Tree kid : root.children()) {\n      CoreLabel kidLabel = (CoreLabel) kid.label();\n      int kidStart = kidLabel.get(CoreAnnotations.BeginIndexAnnotation.class);\n      int kidEnd = kidLabel.get(CoreAnnotations.EndIndexAnnotation.class);\n      if (kidStart <= start && kidEnd > start) {\n        return findPartialSpan(kid, start);\n      }\n    }\n    throw new RuntimeException(\"Shouldn't happen: \" + start + \" \" + root);\n  }","id":48817,"modified_method":"/** Find the tree that covers the portion of interest. */\n  private static Tree findPartialSpan(final Tree root, final int start) {\n    CoreLabel label = (CoreLabel) root.label();\n    int startIndex = label.get(CoreAnnotations.BeginIndexAnnotation.class);\n    if (startIndex == start) {\n      return root;\n    }\n    for (Tree kid : root.children()) {\n      CoreLabel kidLabel = (CoreLabel) kid.label();\n      int kidStart = kidLabel.get(CoreAnnotations.BeginIndexAnnotation.class);\n      int kidEnd = kidLabel.get(CoreAnnotations.EndIndexAnnotation.class);\n      if (kidStart <= start && kidEnd > start) {\n        return findPartialSpan(kid, start);\n      }\n    }\n    throw new RuntimeException(\"Shouldn't happen: \" + start + \" \" + root);\n  }","commit_id":"d4d0f4bd8227dfc5ffb48dc420ac90c193030467","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected Tree findSyntacticHead(Mention m, Tree root, List<CoreLabel> tokens) {\n    // mention ends with 's\n    int endIdx = m.endIndex;\n    String lastWord = m.originalSpan.get(m.originalSpan.size()-1).get(CoreAnnotations.TextAnnotation.class);\n    if((lastWord.equals(\"'s\") || lastWord.equals(\"'\"))\n        && m.originalSpan.size() != 1 ) endIdx--;\n\n    Tree exactMatch = findTreeWithSpan(root, m.startIndex, endIdx);\n    //\n    // found an exact match\n    //\n    if (exactMatch != null) {\n      return safeHead(exactMatch);\n    }\n\n    // no exact match found\n    // in this case, we parse the actual extent of the mention, embedded in a sentence\n    // context, so as to make the parser work better :-)\n\n    int approximateness = 0;\n    List<CoreLabel> extentTokens = new ArrayList<CoreLabel>();\n    extentTokens.add(initCoreLabel(\"It\"));\n    extentTokens.add(initCoreLabel(\"was\"));\n    final int ADDED_WORDS = 2;\n    for (int i = m.startIndex; i < endIdx; i++) {\n      // Add everything except separated dashes! The separated dashes mess with the parser too badly.\n      CoreLabel label = tokens.get(i);\n      if ( ! \"-\".equals(label.word())) {\n        extentTokens.add(tokens.get(i));\n      } else {\n        approximateness++;\n      }\n    }\n    extentTokens.add(initCoreLabel(\".\"));\n\n    // constrain the parse to the part we're interested in.\n    // Starting from ADDED_WORDS comes from skipping \"It was\".\n    // -1 to exclude the period.\n    // We now let it be any kind of nominal constituent, since there\n    // are VP and S ones\n    ParserConstraint constraint = new ParserConstraint(ADDED_WORDS, extentTokens.size() - 1, Pattern.compile(\".*\"));\n    List<ParserConstraint> constraints = Collections.singletonList(constraint);\n    Tree tree = parse(extentTokens, constraints);\n    convertToCoreLabels(tree);\n    tree.indexSpans(m.startIndex - ADDED_WORDS);  // remember it has ADDED_WORDS extra words at the beginning\n    Tree subtree = findPartialSpan(tree, m.startIndex);\n    Tree extentHead = safeHead(subtree);\n    assert(extentHead != null);\n    // extentHead is a child in the local extent parse tree. we need to find the corresponding node in the main tree\n    // Because we deleted dashes, it's index will be >= the index in the extent parse tree\n    CoreLabel l = (CoreLabel) extentHead.label();\n    Tree realHead = funkyFindLeafWithApproximateSpan(root, l.value(), l.get(CoreAnnotations.BeginIndexAnnotation.class), approximateness);\n    assert(realHead != null);\n    return realHead;\n  }","id":48818,"modified_method":"protected Tree findSyntacticHead(Mention m, Tree root, List<CoreLabel> tokens) {\n    // mention ends with 's\n    int endIdx = m.endIndex;\n    String lastWord = m.originalSpan.get(m.originalSpan.size()-1).get(CoreAnnotations.TextAnnotation.class);\n    if((lastWord.equals(\"'s\") || lastWord.equals(\"'\"))\n        && m.originalSpan.size() != 1 ) endIdx--;\n\n    Tree exactMatch = findTreeWithSpan(root, m.startIndex, endIdx);\n    //\n    // found an exact match\n    //\n    if (exactMatch != null) {\n      return safeHead(exactMatch, endIdx);\n    }\n\n    // no exact match found\n    // in this case, we parse the actual extent of the mention, embedded in a sentence\n    // context, so as to make the parser work better :-)\n\n    int approximateness = 0;\n    List<CoreLabel> extentTokens = new ArrayList<CoreLabel>();\n    extentTokens.add(initCoreLabel(\"It\"));\n    extentTokens.add(initCoreLabel(\"was\"));\n    final int ADDED_WORDS = 2;\n    for (int i = m.startIndex; i < endIdx; i++) {\n      // Add everything except separated dashes! The separated dashes mess with the parser too badly.\n      CoreLabel label = tokens.get(i);\n      if ( ! \"-\".equals(label.word())) {\n        extentTokens.add(tokens.get(i));\n      } else {\n        approximateness++;\n      }\n    }\n    extentTokens.add(initCoreLabel(\".\"));\n\n    // constrain the parse to the part we're interested in.\n    // Starting from ADDED_WORDS comes from skipping \"It was\".\n    // -1 to exclude the period.\n    // We now let it be any kind of nominal constituent, since there\n    // are VP and S ones\n    ParserConstraint constraint = new ParserConstraint(ADDED_WORDS, extentTokens.size() - 1, Pattern.compile(\".*\"));\n    List<ParserConstraint> constraints = Collections.singletonList(constraint);\n    Tree tree = parse(extentTokens, constraints);\n    convertToCoreLabels(tree);  // now unnecessary, as parser uses CoreLabels?\n    tree.indexSpans(m.startIndex - ADDED_WORDS);  // remember it has ADDED_WORDS extra words at the beginning\n    Tree subtree = findPartialSpan(tree, m.startIndex);\n    // There was a possible problem that with a crazy parse, extentHead could be one of the added words, not a real word!\n    // Now we make sure in findPartialSpan that it can't be before the real start, and in safeHead, we disallow something\n    // passed the right end (that is, just that final period).\n    Tree extentHead = safeHead(subtree, endIdx);\n    assert(extentHead != null);\n    // extentHead is a child in the local extent parse tree. we need to find the corresponding node in the main tree\n    // Because we deleted dashes, it's index will be >= the index in the extent parse tree\n    CoreLabel l = (CoreLabel) extentHead.label();\n    Tree realHead = funkyFindLeafWithApproximateSpan(root, l.value(), l.get(CoreAnnotations.BeginIndexAnnotation.class), approximateness);\n    assert(realHead != null);\n    return realHead;\n  }","commit_id":"d4d0f4bd8227dfc5ffb48dc420ac90c193030467","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Tree funkyFindLeafWithApproximateSpan(Tree root, String token, int index, int approximateness) {\n    List<Tree> leaves = root.getLeaves();\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      int ind = label.get(CoreAnnotations.IndexAnnotation.class) - 1;\n      if (token.equals(leaf.value()) && ind >= index && ind <= index + approximateness) {\n        return leaf;\n      }\n    }\n    // this shouldn't happen\n    //    throw new RuntimeException(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    System.err.println(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    return leaves.get(leaves.size() - 1);\n  }","id":48819,"modified_method":"private static Tree funkyFindLeafWithApproximateSpan(Tree root, String token, int index, int approximateness) {\n    // System.err.println(\"Searching \" + root + \"\\n  for \" + token + \" at position \" + index + \" (plus up to \" + approximateness + \")\");\n    List<Tree> leaves = root.getLeaves();\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      Integer indexInteger = label.get(CoreAnnotations.IndexAnnotation.class);\n      if (indexInteger == null) continue;\n      int ind = indexInteger - 1;\n      if (token.equals(leaf.value()) && ind >= index && ind <= index + approximateness) {\n        return leaf;\n      }\n    }\n    // this shouldn't happen\n    //    throw new RuntimeException(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    SieveCoreferenceSystem.logger.warning(\"RuleBasedCorefMentionFinder: Failed to find head token:\\n\" +\n                       \"Tree is: \" + root + \"\\n\" + \n                       \"token = |\" + token + \"|\" + index + \"|, approx=\" + approximateness);\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      Integer indexInteger = label.get(CoreAnnotations.IndexAnnotation.class);\n      if (indexInteger == null) continue; // not a word from the original tree\n      int ind = indexInteger - 1;\n      if (token.equals(leaf.value())) {\n        // System.err.println(\"Found it at position \" + ind + \"; returning \" + leaf);\n        return leaf;\n      }\n    }\n    SieveCoreferenceSystem.logger.warning(\"RuleBasedCorefMentionFinder: Last resort: returning as head: \" + leaves.get(leaves.size() - 2));\n    return leaves.get(leaves.size() - 2); // last except for the added period.\n  }","commit_id":"d4d0f4bd8227dfc5ffb48dc420ac90c193030467","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    Properties props = StringUtils.argsToProperties(args);\n    System.err.println(props.toString());\n    MaxMatchSegmenter seg = new MaxMatchSegmenter();\n    String lexiconFile = props.getProperty(\"lexicon\");\n    if(lexiconFile != null) {\n      seg.addLexicon(lexiconFile);\n    } else {\n      System.err.println(\"Error: no lexicon file!\");\n      System.exit(1);\n    }\n\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    int lineNb = 0;\n    for(;;) {\n      ++lineNb;\n      System.err.println(\"line: \"+lineNb);\n      try {\n        String line = br.readLine();\n        if(line == null)\n          break;\n        if(props.getProperty(\"greedy\") != null) {\n          ArrayList<Word> sentence = seg.greedilySegmentWords(line);\n          System.out.println(Sentence.listToString(sentence));\n        } else if(props.getProperty(\"maxwords\") != null) {\n          seg.buildSegmentationLattice(line);\n          System.out.println\n            (Sentence.listToString(seg.segmentWords(MatchHeuristic.MAXWORDS)));\n        } else {\n          seg.buildSegmentationLattice(line);\n          System.out.println(Sentence.listToString(seg.maxMatchSegmentation()));\n        }\n      }\n      catch (IOException e) {\n        break;\n      }\n    }\n  }","id":48820,"modified_method":"public static void main(String[] args) {\n    Properties props = StringUtils.argsToProperties(args);\n    // System.err.println(props.toString());\n    SeqClassifierFlags flags = new SeqClassifierFlags(props);\n    MaxMatchSegmenter seg = new MaxMatchSegmenter();\n    String lexiconFile = props.getProperty(\"lexicon\");\n    if(lexiconFile != null) {\n      seg.addLexicon(lexiconFile);\n    } else {\n      System.err.println(\"Error: no lexicon file!\");\n      System.exit(1);\n    }\n\n    Sighan2005DocumentReaderAndWriter sighanRW = new Sighan2005DocumentReaderAndWriter();\n    sighanRW.init(flags);\n\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    StringReader strR = null;\n    PrintWriter stdoutW = new PrintWriter(System.out);\n    int lineNb = 0;\n    for(;;) {\n      ++lineNb;\n      System.err.println(\"line: \"+lineNb);\n      try {\n        String line = br.readLine();\n        if(line == null)\n          break;\n        String outputLine = null;\n        if(props.getProperty(\"greedy\") != null) {\n          ArrayList<Word> sentence = seg.greedilySegmentWords(line);\n          outputLine = Sentence.listToString(sentence);\n        } else if(props.getProperty(\"maxwords\") != null) {\n          seg.buildSegmentationLattice(line);\n          outputLine = Sentence.listToString(seg.segmentWords(MatchHeuristic.MAXWORDS));\n        } else {\n          seg.buildSegmentationLattice(line);\n          outputLine = Sentence.listToString(seg.maxMatchSegmentation());\n        }\n        strR = new StringReader(outputLine);\n        Iterator<List<CoreLabel>> itr = sighanRW.getIterator(strR);\n        while(itr.hasNext()) {\n          sighanRW.printAnswers(itr.next(), stdoutW);\n        }\n        // System.out.println(outputLine);\n      }\n      catch (IOException e) {\n        break;\n      }\n    }\n    stdoutW.flush();\n  }","commit_id":"ea461d77ebfa1485496077a3fed7319274d9fc1b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Add a word to the lexicon, unless it contains some non-Chinese character.\n   */\n  public void addStringToLexicon(String str) {\n    if(str.equals(\"\")) {\n      System.err.println(\"WARNING: blank line in lexicon\");\n    } else if(str.contains(\" \")) {\n      System.err.println(\"WARNING: word with space in lexicon\");\n    } else {\n      if(excludeChar(str)) {\n        printlnErr(\"skipping word: \"+str);\n        return;\n      }\n      printlnErr(\"adding word: \"+str);\n      words.add(str);\n    }\n  }","id":48821,"modified_method":"/**\n   * Add a word to the lexicon, unless it contains some non-Chinese character.\n   */\n  public void addStringToLexicon(String str) {\n    if(str.equals(\"\")) {\n      System.err.println(\"WARNING: blank line in lexicon\");\n    } else if(str.contains(\" \")) {\n      System.err.println(\"WARNING: word with space in lexicon\");\n    } else {\n      if(excludeChar(str)) {\n        printlnErr(\"skipping word: \"+str);\n        return;\n      }\n      // printlnErr(\"adding word: \"+str);\n      words.add(str);\n    }\n  }","commit_id":"ea461d77ebfa1485496077a3fed7319274d9fc1b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected Tree findSyntacticHead(Mention m, Tree root, List<CoreLabel> tokens) {\n    // mention ends with 's\n    int endIdx = m.endIndex;\n    String lastWord = m.originalSpan.get(m.originalSpan.size()-1).get(CoreAnnotations.TextAnnotation.class);\n    if((lastWord.equals(\"'s\") || lastWord.equals(\"'\"))\n        && m.originalSpan.size() != 1 ) endIdx--;\n\n    Tree exactMatch = findTreeWithSpan(root, m.startIndex, endIdx);\n    //\n    // found an exact match\n    //\n    if (exactMatch != null) {\n      return safeHead(exactMatch, endIdx);\n    }\n\n    // no exact match found\n    // in this case, we parse the actual extent of the mention, embedded in a sentence\n    // context, so as to make the parser work better :-)\n\n    int approximateness = 0;\n    List<CoreLabel> extentTokens = new ArrayList<CoreLabel>();\n    extentTokens.add(initCoreLabel(\"It\"));\n    extentTokens.add(initCoreLabel(\"was\"));\n    final int ADDED_WORDS = 2;\n    for (int i = m.startIndex; i < endIdx; i++) {\n      // Add everything except separated dashes! The separated dashes mess with the parser too badly.\n      CoreLabel label = tokens.get(i);\n      if ( ! \"-\".equals(label.word())) {\n        extentTokens.add(tokens.get(i));\n      } else {\n        approximateness++;\n      }\n    }\n    extentTokens.add(initCoreLabel(\".\"));\n\n    // constrain the parse to the part we're interested in.\n    // Starting from ADDED_WORDS comes from skipping \"It was\".\n    // -1 to exclude the period.\n    // We now let it be any kind of nominal constituent, since there\n    // are VP and S ones\n    ParserConstraint constraint = new ParserConstraint(ADDED_WORDS, extentTokens.size() - 1, Pattern.compile(\".*\"));\n    List<ParserConstraint> constraints = Collections.singletonList(constraint);\n    Tree tree = parse(extentTokens, constraints);\n    convertToCoreLabels(tree);  // now unnecessary, as parser uses CoreLabels?\n    tree.indexSpans(m.startIndex - ADDED_WORDS);  // remember it has ADDED_WORDS extra words at the beginning\n    Tree subtree = findPartialSpan(tree, m.startIndex);\n    // There was a possible problem that with a crazy parse, extentHead could be one of the added words, not a real word!\n    // Now we make sure in findPartialSpan that it can't be before the real start, and in safeHead, we disallow something\n    // passed the right end (that is, just that final period).\n    Tree extentHead = safeHead(subtree, endIdx);\n    assert(extentHead != null);\n    // extentHead is a child in the local extent parse tree. we need to find the corresponding node in the main tree\n    // Because we deleted dashes, it's index will be >= the index in the extent parse tree\n    CoreLabel l = (CoreLabel) extentHead.label();\n    Tree realHead = funkyFindLeafWithApproximateSpan(root, l.value(), l.get(CoreAnnotations.BeginIndexAnnotation.class), approximateness);\n    assert(realHead != null);\n    return realHead;\n  }","id":48822,"modified_method":"protected Tree findSyntacticHead(Mention m, Tree root, List<CoreLabel> tokens) {\n    // mention ends with 's\n    int endIdx = m.endIndex;\n    String lastWord = m.originalSpan.get(m.originalSpan.size()-1).get(CoreAnnotations.TextAnnotation.class);\n    if((lastWord.equals(\"'s\") || lastWord.equals(\"'\"))\n        && m.originalSpan.size() != 1 ) endIdx--;\n\n    Tree exactMatch = findTreeWithSpan(root, m.startIndex, endIdx);\n    //\n    // found an exact match\n    //\n    if (exactMatch != null) {\n      return safeHead(exactMatch);\n    }\n\n    // no exact match found\n    // in this case, we parse the actual extent of the mention, embedded in a sentence\n    // context, so as to make the parser work better :-)\n\n    int approximateness = 0;\n    List<CoreLabel> extentTokens = new ArrayList<CoreLabel>();\n    extentTokens.add(initCoreLabel(\"It\"));\n    extentTokens.add(initCoreLabel(\"was\"));\n    final int ADDED_WORDS = 2;\n    for (int i = m.startIndex; i < endIdx; i++) {\n      // Add everything except separated dashes! The separated dashes mess with the parser too badly.\n      CoreLabel label = tokens.get(i);\n      if ( ! \"-\".equals(label.word())) {\n        extentTokens.add(tokens.get(i));\n      } else {\n        approximateness++;\n      }\n    }\n    extentTokens.add(initCoreLabel(\".\"));\n\n    // constrain the parse to the part we're interested in.\n    // Starting from ADDED_WORDS comes from skipping \"It was\".\n    // -1 to exclude the period.\n    // We now let it be any kind of nominal constituent, since there\n    // are VP and S ones\n    ParserConstraint constraint = new ParserConstraint(ADDED_WORDS, extentTokens.size() - 1, Pattern.compile(\".*\"));\n    List<ParserConstraint> constraints = Collections.singletonList(constraint);\n    Tree tree = parse(extentTokens, constraints);\n    convertToCoreLabels(tree);\n    tree.indexSpans(m.startIndex - ADDED_WORDS);  // remember it has ADDED_WORDS extra words at the beginning\n    Tree subtree = findPartialSpan(tree, m.startIndex);\n    Tree extentHead = safeHead(subtree);\n    assert(extentHead != null);\n    // extentHead is a child in the local extent parse tree. we need to find the corresponding node in the main tree\n    // Because we deleted dashes, it's index will be >= the index in the extent parse tree\n    CoreLabel l = (CoreLabel) extentHead.label();\n    Tree realHead = funkyFindLeafWithApproximateSpan(root, l.value(), l.get(CoreAnnotations.BeginIndexAnnotation.class), approximateness);\n    assert(realHead != null);\n    return realHead;\n  }","commit_id":"ea461d77ebfa1485496077a3fed7319274d9fc1b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/** Find the tree that covers the portion of interest. */\n  private static Tree findPartialSpan(final Tree root, final int start) {\n    CoreLabel label = (CoreLabel) root.label();\n    int startIndex = label.get(CoreAnnotations.BeginIndexAnnotation.class);\n    if (startIndex == start) {\n      return root;\n    }\n    for (Tree kid : root.children()) {\n      CoreLabel kidLabel = (CoreLabel) kid.label();\n      int kidStart = kidLabel.get(CoreAnnotations.BeginIndexAnnotation.class);\n      int kidEnd = kidLabel.get(CoreAnnotations.EndIndexAnnotation.class);\n      if (kidStart <= start && kidEnd > start) {\n        return findPartialSpan(kid, start);\n      }\n    }\n    throw new RuntimeException(\"Shouldn't happen: \" + start + \" \" + root);\n  }","id":48823,"modified_method":"private static Tree findPartialSpan(final Tree root, final int start) {\n    CoreLabel label = (CoreLabel) root.label();\n    int startIndex = label.get(CoreAnnotations.BeginIndexAnnotation.class);\n    if (startIndex == start) {\n      return root;\n    }\n    for (Tree kid : root.children()) {\n      CoreLabel kidLabel = (CoreLabel) kid.label();\n      int kidStart = kidLabel.get(CoreAnnotations.BeginIndexAnnotation.class);\n      int kidEnd = kidLabel.get(CoreAnnotations.EndIndexAnnotation.class);\n      if (kidStart <= start && kidEnd > start) {\n        return findPartialSpan(kid, start);\n      }\n    }\n    throw new RuntimeException(\"Shouldn't happen: \" + start + \" \" + root);\n  }","commit_id":"ea461d77ebfa1485496077a3fed7319274d9fc1b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private Tree safeHead(Tree top, int endIndex) {\n    Tree head = top.headTerminal(headFinder);\n    // One obscure failure case is that the added period becomes the head. Disallow this.\n    if (head != null) {\n      Integer headIndexInteger = ((CoreLabel) head.label()).get(CoreAnnotations.IndexAnnotation.class);\n      if (headIndexInteger != null) {\n        int headIndex = headIndexInteger - 1;\n        if (headIndex < endIndex) {\n          return head;\n        }\n      }\n    }\n    // if no head found return the right-most leaf\n    List<Tree> leaves = top.getLeaves();\n    int candidate = leaves.size() - 1;\n    while (candidate >= 0) {\n      head = leaves.get(candidate);\n      Integer headIndexInteger = ((CoreLabel) head.label()).get(CoreAnnotations.IndexAnnotation.class);\n      if (headIndexInteger != null) {\n        int headIndex = headIndexInteger - 1;\n        if (headIndex < endIndex) {\n          return head;\n        }\n      }\n      candidate--;\n    }\n    // fallback: return top\n    return top;\n  }","id":48824,"modified_method":"private Tree safeHead(Tree top) {\n    Tree head = top.headTerminal(headFinder);\n    if (head != null) return head;\n    // if no head found return the right-most leaf\n    List<Tree> leaves = top.getLeaves();\n    if(leaves.size() > 0) return leaves.get(leaves.size() - 1);\n    // fallback: return top\n    return top;\n  }","commit_id":"ea461d77ebfa1485496077a3fed7319274d9fc1b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Tree funkyFindLeafWithApproximateSpan(Tree root, String token, int index, int approximateness) {\n    // System.err.println(\"Searching \" + root + \"\\n  for \" + token + \" at position \" + index + \" (plus up to \" + approximateness + \")\");\n    List<Tree> leaves = root.getLeaves();\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      Integer indexInteger = label.get(CoreAnnotations.IndexAnnotation.class);\n      if (indexInteger == null) continue;\n      int ind = indexInteger - 1;\n      if (token.equals(leaf.value()) && ind >= index && ind <= index + approximateness) {\n        return leaf;\n      }\n    }\n    // this shouldn't happen\n    //    throw new RuntimeException(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    SieveCoreferenceSystem.logger.warning(\"RuleBasedCorefMentionFinder: Failed to find head token:\\n\" +\n                       \"Tree is: \" + root + \"\\n\" + \n                       \"token = |\" + token + \"|\" + index + \"|, approx=\" + approximateness);\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      Integer indexInteger = label.get(CoreAnnotations.IndexAnnotation.class);\n      if (indexInteger == null) continue; // not a word from the original tree\n      int ind = indexInteger - 1;\n      if (token.equals(leaf.value())) {\n        // System.err.println(\"Found it at position \" + ind + \"; returning \" + leaf);\n        return leaf;\n      }\n    }\n    SieveCoreferenceSystem.logger.warning(\"RuleBasedCorefMentionFinder: Last resort: returning as head: \" + leaves.get(leaves.size() - 2));\n    return leaves.get(leaves.size() - 2); // last except for the added period.\n  }","id":48825,"modified_method":"private static Tree funkyFindLeafWithApproximateSpan(Tree root, String token, int index, int approximateness) {\n    List<Tree> leaves = root.getLeaves();\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      int ind = label.get(CoreAnnotations.IndexAnnotation.class) - 1;\n      if (token.equals(leaf.value()) && ind >= index && ind <= index + approximateness) {\n        return leaf;\n      }\n    }\n    // this shouldn't happen\n    //    throw new RuntimeException(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    System.err.println(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    return leaves.get(leaves.size() - 1);\n  }","commit_id":"ea461d77ebfa1485496077a3fed7319274d9fc1b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Add a word to the lexicon, unless it contains some non-Chinese character.\n   */\n  public void addStringToLexicon(String str) {\n    if(str.equals(\"\")) {\n      System.err.println(\"WARNING: blank line in lexicon\");\n    } else if(str.contains(\" \")) {\n      System.err.println(\"WARNING: word with space in lexicon\");\n    } else {\n      if(excludeChar(str)) {\n        printlnErr(\"skipping word: \"+str);\n        return;\n      }\n      printlnErr(\"adding word: \"+str);\n      words.add(str);\n    }\n  }","id":48826,"modified_method":"/**\n   * Add a word to the lexicon, unless it contains some non-Chinese character.\n   */\n  public void addStringToLexicon(String str) {\n    if(str.equals(\"\")) {\n      System.err.println(\"WARNING: blank line in lexicon\");\n    } else if(str.contains(\" \")) {\n      System.err.println(\"WARNING: word with space in lexicon\");\n    } else {\n      if(excludeChar(str)) {\n        printlnErr(\"skipping word: \"+str);\n        return;\n      }\n      // printlnErr(\"adding word: \"+str);\n      words.add(str);\n    }\n  }","commit_id":"c98ed1449141ae0df088890ba9d573c234faf00f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    Properties props = StringUtils.argsToProperties(args);\n    System.err.println(props.toString());\n    MaxMatchSegmenter seg = new MaxMatchSegmenter();\n    String lexiconFile = props.getProperty(\"lexicon\");\n    if(lexiconFile != null) {\n      seg.addLexicon(lexiconFile);\n    } else {\n      System.err.println(\"Error: no lexicon file!\");\n      System.exit(1);\n    }\n\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    int lineNb = 0;\n    for(;;) {\n      ++lineNb;\n      System.err.println(\"line: \"+lineNb);\n      try {\n        String line = br.readLine();\n        if(line == null)\n          break;\n        if(props.getProperty(\"greedy\") != null) {\n          ArrayList<Word> sentence = seg.greedilySegmentWords(line);\n          System.out.println(Sentence.listToString(sentence));\n        } else if(props.getProperty(\"maxwords\") != null) {\n          seg.buildSegmentationLattice(line);\n          System.out.println\n            (Sentence.listToString(seg.segmentWords(MatchHeuristic.MAXWORDS)));\n        } else {\n          seg.buildSegmentationLattice(line);\n          System.out.println(Sentence.listToString(seg.maxMatchSegmentation()));\n        }\n      }\n      catch (IOException e) {\n        break;\n      }\n    }\n  }","id":48827,"modified_method":"public static void main(String[] args) {\n    Properties props = StringUtils.argsToProperties(args);\n    // System.err.println(props.toString());\n    SeqClassifierFlags flags = new SeqClassifierFlags(props);\n    MaxMatchSegmenter seg = new MaxMatchSegmenter();\n    String lexiconFile = props.getProperty(\"lexicon\");\n    if(lexiconFile != null) {\n      seg.addLexicon(lexiconFile);\n    } else {\n      System.err.println(\"Error: no lexicon file!\");\n      System.exit(1);\n    }\n\n    Sighan2005DocumentReaderAndWriter sighanRW = new Sighan2005DocumentReaderAndWriter();\n    sighanRW.init(flags);\n\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    StringReader strR = null;\n    PrintWriter stdoutW = new PrintWriter(System.out);\n    int lineNb = 0;\n    for(;;) {\n      ++lineNb;\n      System.err.println(\"line: \"+lineNb);\n      try {\n        String line = br.readLine();\n        if(line == null)\n          break;\n        String outputLine = null;\n        if(props.getProperty(\"greedy\") != null) {\n          ArrayList<Word> sentence = seg.greedilySegmentWords(line);\n          outputLine = Sentence.listToString(sentence);\n        } else if(props.getProperty(\"maxwords\") != null) {\n          seg.buildSegmentationLattice(line);\n          outputLine = Sentence.listToString(seg.segmentWords(MatchHeuristic.MAXWORDS));\n        } else {\n          seg.buildSegmentationLattice(line);\n          outputLine = Sentence.listToString(seg.maxMatchSegmentation());\n        }\n        strR = new StringReader(outputLine);\n        Iterator<List<CoreLabel>> itr = sighanRW.getIterator(strR);\n        while(itr.hasNext()) {\n          sighanRW.printAnswers(itr.next(), stdoutW);\n        }\n        // System.out.println(outputLine);\n      }\n      catch (IOException e) {\n        break;\n      }\n    }\n    stdoutW.flush();\n  }","commit_id":"c98ed1449141ae0df088890ba9d573c234faf00f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected Tree findSyntacticHead(Mention m, Tree root, List<CoreLabel> tokens) {\n    // mention ends with 's\n    int endIdx = m.endIndex;\n    String lastWord = m.originalSpan.get(m.originalSpan.size()-1).get(CoreAnnotations.TextAnnotation.class);\n    if((lastWord.equals(\"'s\") || lastWord.equals(\"'\"))\n        && m.originalSpan.size() != 1 ) endIdx--;\n\n    Tree exactMatch = findTreeWithSpan(root, m.startIndex, endIdx);\n    //\n    // found an exact match\n    //\n    if (exactMatch != null) {\n      return safeHead(exactMatch, endIdx);\n    }\n\n    // no exact match found\n    // in this case, we parse the actual extent of the mention, embedded in a sentence\n    // context, so as to make the parser work better :-)\n\n    int approximateness = 0;\n    List<CoreLabel> extentTokens = new ArrayList<CoreLabel>();\n    extentTokens.add(initCoreLabel(\"It\"));\n    extentTokens.add(initCoreLabel(\"was\"));\n    final int ADDED_WORDS = 2;\n    for (int i = m.startIndex; i < endIdx; i++) {\n      // Add everything except separated dashes! The separated dashes mess with the parser too badly.\n      CoreLabel label = tokens.get(i);\n      if ( ! \"-\".equals(label.word())) {\n        extentTokens.add(tokens.get(i));\n      } else {\n        approximateness++;\n      }\n    }\n    extentTokens.add(initCoreLabel(\".\"));\n\n    // constrain the parse to the part we're interested in.\n    // Starting from ADDED_WORDS comes from skipping \"It was\".\n    // -1 to exclude the period.\n    // We now let it be any kind of nominal constituent, since there\n    // are VP and S ones\n    ParserConstraint constraint = new ParserConstraint(ADDED_WORDS, extentTokens.size() - 1, Pattern.compile(\".*\"));\n    List<ParserConstraint> constraints = Collections.singletonList(constraint);\n    Tree tree = parse(extentTokens, constraints);\n    convertToCoreLabels(tree);  // now unnecessary, as parser uses CoreLabels?\n    tree.indexSpans(m.startIndex - ADDED_WORDS);  // remember it has ADDED_WORDS extra words at the beginning\n    Tree subtree = findPartialSpan(tree, m.startIndex);\n    // There was a possible problem that with a crazy parse, extentHead could be one of the added words, not a real word!\n    // Now we make sure in findPartialSpan that it can't be before the real start, and in safeHead, we disallow something\n    // passed the right end (that is, just that final period).\n    Tree extentHead = safeHead(subtree, endIdx);\n    assert(extentHead != null);\n    // extentHead is a child in the local extent parse tree. we need to find the corresponding node in the main tree\n    // Because we deleted dashes, it's index will be >= the index in the extent parse tree\n    CoreLabel l = (CoreLabel) extentHead.label();\n    Tree realHead = funkyFindLeafWithApproximateSpan(root, l.value(), l.get(CoreAnnotations.BeginIndexAnnotation.class), approximateness);\n    assert(realHead != null);\n    return realHead;\n  }","id":48828,"modified_method":"protected Tree findSyntacticHead(Mention m, Tree root, List<CoreLabel> tokens) {\n    // mention ends with 's\n    int endIdx = m.endIndex;\n    String lastWord = m.originalSpan.get(m.originalSpan.size()-1).get(CoreAnnotations.TextAnnotation.class);\n    if((lastWord.equals(\"'s\") || lastWord.equals(\"'\"))\n        && m.originalSpan.size() != 1 ) endIdx--;\n\n    Tree exactMatch = findTreeWithSpan(root, m.startIndex, endIdx);\n    //\n    // found an exact match\n    //\n    if (exactMatch != null) {\n      return safeHead(exactMatch);\n    }\n\n    // no exact match found\n    // in this case, we parse the actual extent of the mention, embedded in a sentence\n    // context, so as to make the parser work better :-)\n\n    int approximateness = 0;\n    List<CoreLabel> extentTokens = new ArrayList<CoreLabel>();\n    extentTokens.add(initCoreLabel(\"It\"));\n    extentTokens.add(initCoreLabel(\"was\"));\n    final int ADDED_WORDS = 2;\n    for (int i = m.startIndex; i < endIdx; i++) {\n      // Add everything except separated dashes! The separated dashes mess with the parser too badly.\n      CoreLabel label = tokens.get(i);\n      if ( ! \"-\".equals(label.word())) {\n        extentTokens.add(tokens.get(i));\n      } else {\n        approximateness++;\n      }\n    }\n    extentTokens.add(initCoreLabel(\".\"));\n\n    // constrain the parse to the part we're interested in.\n    // Starting from ADDED_WORDS comes from skipping \"It was\".\n    // -1 to exclude the period.\n    // We now let it be any kind of nominal constituent, since there\n    // are VP and S ones\n    ParserConstraint constraint = new ParserConstraint(ADDED_WORDS, extentTokens.size() - 1, Pattern.compile(\".*\"));\n    List<ParserConstraint> constraints = Collections.singletonList(constraint);\n    Tree tree = parse(extentTokens, constraints);\n    convertToCoreLabels(tree);\n    tree.indexSpans(m.startIndex - ADDED_WORDS);  // remember it has ADDED_WORDS extra words at the beginning\n    Tree subtree = findPartialSpan(tree, m.startIndex);\n    Tree extentHead = safeHead(subtree);\n    assert(extentHead != null);\n    // extentHead is a child in the local extent parse tree. we need to find the corresponding node in the main tree\n    // Because we deleted dashes, it's index will be >= the index in the extent parse tree\n    CoreLabel l = (CoreLabel) extentHead.label();\n    Tree realHead = funkyFindLeafWithApproximateSpan(root, l.value(), l.get(CoreAnnotations.BeginIndexAnnotation.class), approximateness);\n    assert(realHead != null);\n    return realHead;\n  }","commit_id":"c98ed1449141ae0df088890ba9d573c234faf00f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private Tree safeHead(Tree top, int endIndex) {\n    Tree head = top.headTerminal(headFinder);\n    // One obscure failure case is that the added period becomes the head. Disallow this.\n    if (head != null) {\n      Integer headIndexInteger = ((CoreLabel) head.label()).get(CoreAnnotations.IndexAnnotation.class);\n      if (headIndexInteger != null) {\n        int headIndex = headIndexInteger - 1;\n        if (headIndex < endIndex) {\n          return head;\n        }\n      }\n    }\n    // if no head found return the right-most leaf\n    List<Tree> leaves = top.getLeaves();\n    int candidate = leaves.size() - 1;\n    while (candidate >= 0) {\n      head = leaves.get(candidate);\n      Integer headIndexInteger = ((CoreLabel) head.label()).get(CoreAnnotations.IndexAnnotation.class);\n      if (headIndexInteger != null) {\n        int headIndex = headIndexInteger - 1;\n        if (headIndex < endIndex) {\n          return head;\n        }\n      }\n      candidate--;\n    }\n    // fallback: return top\n    return top;\n  }","id":48829,"modified_method":"private Tree safeHead(Tree top) {\n    Tree head = top.headTerminal(headFinder);\n    if (head != null) return head;\n    // if no head found return the right-most leaf\n    List<Tree> leaves = top.getLeaves();\n    if(leaves.size() > 0) return leaves.get(leaves.size() - 1);\n    // fallback: return top\n    return top;\n  }","commit_id":"c98ed1449141ae0df088890ba9d573c234faf00f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/** Find the tree that covers the portion of interest. */\n  private static Tree findPartialSpan(final Tree root, final int start) {\n    CoreLabel label = (CoreLabel) root.label();\n    int startIndex = label.get(CoreAnnotations.BeginIndexAnnotation.class);\n    if (startIndex == start) {\n      return root;\n    }\n    for (Tree kid : root.children()) {\n      CoreLabel kidLabel = (CoreLabel) kid.label();\n      int kidStart = kidLabel.get(CoreAnnotations.BeginIndexAnnotation.class);\n      int kidEnd = kidLabel.get(CoreAnnotations.EndIndexAnnotation.class);\n      if (kidStart <= start && kidEnd > start) {\n        return findPartialSpan(kid, start);\n      }\n    }\n    throw new RuntimeException(\"Shouldn't happen: \" + start + \" \" + root);\n  }","id":48830,"modified_method":"private static Tree findPartialSpan(final Tree root, final int start) {\n    CoreLabel label = (CoreLabel) root.label();\n    int startIndex = label.get(CoreAnnotations.BeginIndexAnnotation.class);\n    if (startIndex == start) {\n      return root;\n    }\n    for (Tree kid : root.children()) {\n      CoreLabel kidLabel = (CoreLabel) kid.label();\n      int kidStart = kidLabel.get(CoreAnnotations.BeginIndexAnnotation.class);\n      int kidEnd = kidLabel.get(CoreAnnotations.EndIndexAnnotation.class);\n      if (kidStart <= start && kidEnd > start) {\n        return findPartialSpan(kid, start);\n      }\n    }\n    throw new RuntimeException(\"Shouldn't happen: \" + start + \" \" + root);\n  }","commit_id":"c98ed1449141ae0df088890ba9d573c234faf00f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Tree funkyFindLeafWithApproximateSpan(Tree root, String token, int index, int approximateness) {\n    // System.err.println(\"Searching \" + root + \"\\n  for \" + token + \" at position \" + index + \" (plus up to \" + approximateness + \")\");\n    List<Tree> leaves = root.getLeaves();\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      Integer indexInteger = label.get(CoreAnnotations.IndexAnnotation.class);\n      if (indexInteger == null) continue;\n      int ind = indexInteger - 1;\n      if (token.equals(leaf.value()) && ind >= index && ind <= index + approximateness) {\n        return leaf;\n      }\n    }\n    // this shouldn't happen\n    //    throw new RuntimeException(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    SieveCoreferenceSystem.logger.warning(\"RuleBasedCorefMentionFinder: Failed to find head token:\\n\" +\n                       \"Tree is: \" + root + \"\\n\" + \n                       \"token = |\" + token + \"|\" + index + \"|, approx=\" + approximateness);\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      Integer indexInteger = label.get(CoreAnnotations.IndexAnnotation.class);\n      if (indexInteger == null) continue; // not a word from the original tree\n      int ind = indexInteger - 1;\n      if (token.equals(leaf.value())) {\n        // System.err.println(\"Found it at position \" + ind + \"; returning \" + leaf);\n        return leaf;\n      }\n    }\n    SieveCoreferenceSystem.logger.warning(\"RuleBasedCorefMentionFinder: Last resort: returning as head: \" + leaves.get(leaves.size() - 2));\n    return leaves.get(leaves.size() - 2); // last except for the added period.\n  }","id":48831,"modified_method":"private static Tree funkyFindLeafWithApproximateSpan(Tree root, String token, int index, int approximateness) {\n    List<Tree> leaves = root.getLeaves();\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      int ind = label.get(CoreAnnotations.IndexAnnotation.class) - 1;\n      if (token.equals(leaf.value()) && ind >= index && ind <= index + approximateness) {\n        return leaf;\n      }\n    }\n    // this shouldn't happen\n    //    throw new RuntimeException(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    System.err.println(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    return leaves.get(leaves.size() - 1);\n  }","commit_id":"c98ed1449141ae0df088890ba9d573c234faf00f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Add a word to the lexicon, unless it contains some non-Chinese character.\n   */\n  public void addStringToLexicon(String str) {\n    if(str.equals(\"\")) {\n      System.err.println(\"WARNING: blank line in lexicon\");\n    } else if(str.contains(\" \")) {\n      System.err.println(\"WARNING: word with space in lexicon\");\n    } else {\n      if(excludeChar(str)) {\n        printlnErr(\"skipping word: \"+str);\n        return;\n      }\n      printlnErr(\"adding word: \"+str);\n      words.add(str);\n    }\n  }","id":48832,"modified_method":"/**\n   * Add a word to the lexicon, unless it contains some non-Chinese character.\n   */\n  public void addStringToLexicon(String str) {\n    if(str.equals(\"\")) {\n      System.err.println(\"WARNING: blank line in lexicon\");\n    } else if(str.contains(\" \")) {\n      System.err.println(\"WARNING: word with space in lexicon\");\n    } else {\n      if(excludeChar(str)) {\n        printlnErr(\"skipping word: \"+str);\n        return;\n      }\n      // printlnErr(\"adding word: \"+str);\n      words.add(str);\n    }\n  }","commit_id":"6abd12e07b3523e1bcd8014cdaa1477e8c0d0296","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    Properties props = StringUtils.argsToProperties(args);\n    System.err.println(props.toString());\n    MaxMatchSegmenter seg = new MaxMatchSegmenter();\n    String lexiconFile = props.getProperty(\"lexicon\");\n    if(lexiconFile != null) {\n      seg.addLexicon(lexiconFile);\n    } else {\n      System.err.println(\"Error: no lexicon file!\");\n      System.exit(1);\n    }\n\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    int lineNb = 0;\n    for(;;) {\n      ++lineNb;\n      System.err.println(\"line: \"+lineNb);\n      try {\n        String line = br.readLine();\n        if(line == null)\n          break;\n        if(props.getProperty(\"greedy\") != null) {\n          ArrayList<Word> sentence = seg.greedilySegmentWords(line);\n          System.out.println(Sentence.listToString(sentence));\n        } else if(props.getProperty(\"maxwords\") != null) {\n          seg.buildSegmentationLattice(line);\n          System.out.println\n            (Sentence.listToString(seg.segmentWords(MatchHeuristic.MAXWORDS)));\n        } else {\n          seg.buildSegmentationLattice(line);\n          System.out.println(Sentence.listToString(seg.maxMatchSegmentation()));\n        }\n      }\n      catch (IOException e) {\n        break;\n      }\n    }\n  }","id":48833,"modified_method":"public static void main(String[] args) {\n    Properties props = StringUtils.argsToProperties(args);\n    // System.err.println(props.toString());\n    SeqClassifierFlags flags = new SeqClassifierFlags(props);\n    MaxMatchSegmenter seg = new MaxMatchSegmenter();\n    String lexiconFile = props.getProperty(\"lexicon\");\n    if(lexiconFile != null) {\n      seg.addLexicon(lexiconFile);\n    } else {\n      System.err.println(\"Error: no lexicon file!\");\n      System.exit(1);\n    }\n\n    Sighan2005DocumentReaderAndWriter sighanRW = new Sighan2005DocumentReaderAndWriter();\n    sighanRW.init(flags);\n\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    StringReader strR = null;\n    PrintWriter stdoutW = new PrintWriter(System.out);\n    int lineNb = 0;\n    for(;;) {\n      ++lineNb;\n      System.err.println(\"line: \"+lineNb);\n      try {\n        String line = br.readLine();\n        if(line == null)\n          break;\n        String outputLine = null;\n        if(props.getProperty(\"greedy\") != null) {\n          ArrayList<Word> sentence = seg.greedilySegmentWords(line);\n          outputLine = Sentence.listToString(sentence);\n        } else if(props.getProperty(\"maxwords\") != null) {\n          seg.buildSegmentationLattice(line);\n          outputLine = Sentence.listToString(seg.segmentWords(MatchHeuristic.MAXWORDS));\n        } else {\n          seg.buildSegmentationLattice(line);\n          outputLine = Sentence.listToString(seg.maxMatchSegmentation());\n        }\n        strR = new StringReader(outputLine);\n        Iterator<List<CoreLabel>> itr = sighanRW.getIterator(strR);\n        while(itr.hasNext()) {\n          sighanRW.printAnswers(itr.next(), stdoutW);\n        }\n        // System.out.println(outputLine);\n      }\n      catch (IOException e) {\n        break;\n      }\n    }\n    stdoutW.flush();\n  }","commit_id":"6abd12e07b3523e1bcd8014cdaa1477e8c0d0296","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Tree funkyFindLeafWithApproximateSpan(Tree root, String token, int index, int approximateness) {\n    List<Tree> leaves = root.getLeaves();\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      int ind = label.get(CoreAnnotations.IndexAnnotation.class) - 1;\n      if (token.equals(leaf.value()) && ind >= index && ind <= index + approximateness) {\n        return leaf;\n      }\n    }\n    // this shouldn't happen\n    //    throw new RuntimeException(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    System.err.println(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    return leaves.get(leaves.size() - 1);\n  }","id":48834,"modified_method":"private static Tree funkyFindLeafWithApproximateSpan(Tree root, String token, int index, int approximateness) {\n    // System.err.println(\"Searching \" + root + \"\\n  for \" + token + \" at position \" + index + \" (plus up to \" + approximateness + \")\");\n    List<Tree> leaves = root.getLeaves();\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      Integer indexInteger = label.get(CoreAnnotations.IndexAnnotation.class);\n      if (indexInteger == null) continue;\n      int ind = indexInteger - 1;\n      if (token.equals(leaf.value()) && ind >= index && ind <= index + approximateness) {\n        return leaf;\n      }\n    }\n    // this shouldn't happen\n    //    throw new RuntimeException(\"RuleBasedCorefMentionFinder: ERROR: Failed to find head token\");\n    SieveCoreferenceSystem.logger.warning(\"RuleBasedCorefMentionFinder: Failed to find head token:\\n\" +\n                       \"Tree is: \" + root + \"\\n\" + \n                       \"token = |\" + token + \"|\" + index + \"|, approx=\" + approximateness);\n    for (Tree leaf : leaves) {\n      CoreLabel label = CoreLabel.class.cast(leaf.label());\n      Integer indexInteger = label.get(CoreAnnotations.IndexAnnotation.class);\n      if (indexInteger == null) continue; // not a word from the original tree\n      int ind = indexInteger - 1;\n      if (token.equals(leaf.value())) {\n        // System.err.println(\"Found it at position \" + ind + \"; returning \" + leaf);\n        return leaf;\n      }\n    }\n    SieveCoreferenceSystem.logger.warning(\"RuleBasedCorefMentionFinder: Last resort: returning as head: \" + leaves.get(leaves.size() - 2));\n    return leaves.get(leaves.size() - 2); // last except for the added period.\n  }","commit_id":"6abd12e07b3523e1bcd8014cdaa1477e8c0d0296","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Tree findPartialSpan(final Tree root, final int start) {\n    CoreLabel label = (CoreLabel) root.label();\n    int startIndex = label.get(CoreAnnotations.BeginIndexAnnotation.class);\n    if (startIndex == start) {\n      return root;\n    }\n    for (Tree kid : root.children()) {\n      CoreLabel kidLabel = (CoreLabel) kid.label();\n      int kidStart = kidLabel.get(CoreAnnotations.BeginIndexAnnotation.class);\n      int kidEnd = kidLabel.get(CoreAnnotations.EndIndexAnnotation.class);\n      if (kidStart <= start && kidEnd > start) {\n        return findPartialSpan(kid, start);\n      }\n    }\n    throw new RuntimeException(\"Shouldn't happen: \" + start + \" \" + root);\n  }","id":48835,"modified_method":"/** Find the tree that covers the portion of interest. */\n  private static Tree findPartialSpan(final Tree root, final int start) {\n    CoreLabel label = (CoreLabel) root.label();\n    int startIndex = label.get(CoreAnnotations.BeginIndexAnnotation.class);\n    if (startIndex == start) {\n      return root;\n    }\n    for (Tree kid : root.children()) {\n      CoreLabel kidLabel = (CoreLabel) kid.label();\n      int kidStart = kidLabel.get(CoreAnnotations.BeginIndexAnnotation.class);\n      int kidEnd = kidLabel.get(CoreAnnotations.EndIndexAnnotation.class);\n      if (kidStart <= start && kidEnd > start) {\n        return findPartialSpan(kid, start);\n      }\n    }\n    throw new RuntimeException(\"Shouldn't happen: \" + start + \" \" + root);\n  }","commit_id":"6abd12e07b3523e1bcd8014cdaa1477e8c0d0296","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private Tree safeHead(Tree top) {\n    Tree head = top.headTerminal(headFinder);\n    if (head != null) return head;\n    // if no head found return the right-most leaf\n    List<Tree> leaves = top.getLeaves();\n    if(leaves.size() > 0) return leaves.get(leaves.size() - 1);\n    // fallback: return top\n    return top;\n  }","id":48836,"modified_method":"private Tree safeHead(Tree top, int endIndex) {\n    Tree head = top.headTerminal(headFinder);\n    // One obscure failure case is that the added period becomes the head. Disallow this.\n    if (head != null) {\n      Integer headIndexInteger = ((CoreLabel) head.label()).get(CoreAnnotations.IndexAnnotation.class);\n      if (headIndexInteger != null) {\n        int headIndex = headIndexInteger - 1;\n        if (headIndex < endIndex) {\n          return head;\n        }\n      }\n    }\n    // if no head found return the right-most leaf\n    List<Tree> leaves = top.getLeaves();\n    int candidate = leaves.size() - 1;\n    while (candidate >= 0) {\n      head = leaves.get(candidate);\n      Integer headIndexInteger = ((CoreLabel) head.label()).get(CoreAnnotations.IndexAnnotation.class);\n      if (headIndexInteger != null) {\n        int headIndex = headIndexInteger - 1;\n        if (headIndex < endIndex) {\n          return head;\n        }\n      }\n      candidate--;\n    }\n    // fallback: return top\n    return top;\n  }","commit_id":"6abd12e07b3523e1bcd8014cdaa1477e8c0d0296","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected Tree findSyntacticHead(Mention m, Tree root, List<CoreLabel> tokens) {\n    // mention ends with 's\n    int endIdx = m.endIndex;\n    String lastWord = m.originalSpan.get(m.originalSpan.size()-1).get(CoreAnnotations.TextAnnotation.class);\n    if((lastWord.equals(\"'s\") || lastWord.equals(\"'\"))\n        && m.originalSpan.size() != 1 ) endIdx--;\n\n    Tree exactMatch = findTreeWithSpan(root, m.startIndex, endIdx);\n    //\n    // found an exact match\n    //\n    if (exactMatch != null) {\n      return safeHead(exactMatch);\n    }\n\n    // no exact match found\n    // in this case, we parse the actual extent of the mention, embedded in a sentence\n    // context, so as to make the parser work better :-)\n\n    int approximateness = 0;\n    List<CoreLabel> extentTokens = new ArrayList<CoreLabel>();\n    extentTokens.add(initCoreLabel(\"It\"));\n    extentTokens.add(initCoreLabel(\"was\"));\n    final int ADDED_WORDS = 2;\n    for (int i = m.startIndex; i < endIdx; i++) {\n      // Add everything except separated dashes! The separated dashes mess with the parser too badly.\n      CoreLabel label = tokens.get(i);\n      if ( ! \"-\".equals(label.word())) {\n        extentTokens.add(tokens.get(i));\n      } else {\n        approximateness++;\n      }\n    }\n    extentTokens.add(initCoreLabel(\".\"));\n\n    // constrain the parse to the part we're interested in.\n    // Starting from ADDED_WORDS comes from skipping \"It was\".\n    // -1 to exclude the period.\n    // We now let it be any kind of nominal constituent, since there\n    // are VP and S ones\n    ParserConstraint constraint = new ParserConstraint(ADDED_WORDS, extentTokens.size() - 1, Pattern.compile(\".*\"));\n    List<ParserConstraint> constraints = Collections.singletonList(constraint);\n    Tree tree = parse(extentTokens, constraints);\n    convertToCoreLabels(tree);\n    tree.indexSpans(m.startIndex - ADDED_WORDS);  // remember it has ADDED_WORDS extra words at the beginning\n    Tree subtree = findPartialSpan(tree, m.startIndex);\n    Tree extentHead = safeHead(subtree);\n    assert(extentHead != null);\n    // extentHead is a child in the local extent parse tree. we need to find the corresponding node in the main tree\n    // Because we deleted dashes, it's index will be >= the index in the extent parse tree\n    CoreLabel l = (CoreLabel) extentHead.label();\n    Tree realHead = funkyFindLeafWithApproximateSpan(root, l.value(), l.get(CoreAnnotations.BeginIndexAnnotation.class), approximateness);\n    assert(realHead != null);\n    return realHead;\n  }","id":48837,"modified_method":"protected Tree findSyntacticHead(Mention m, Tree root, List<CoreLabel> tokens) {\n    // mention ends with 's\n    int endIdx = m.endIndex;\n    String lastWord = m.originalSpan.get(m.originalSpan.size()-1).get(CoreAnnotations.TextAnnotation.class);\n    if((lastWord.equals(\"'s\") || lastWord.equals(\"'\"))\n        && m.originalSpan.size() != 1 ) endIdx--;\n\n    Tree exactMatch = findTreeWithSpan(root, m.startIndex, endIdx);\n    //\n    // found an exact match\n    //\n    if (exactMatch != null) {\n      return safeHead(exactMatch, endIdx);\n    }\n\n    // no exact match found\n    // in this case, we parse the actual extent of the mention, embedded in a sentence\n    // context, so as to make the parser work better :-)\n\n    int approximateness = 0;\n    List<CoreLabel> extentTokens = new ArrayList<CoreLabel>();\n    extentTokens.add(initCoreLabel(\"It\"));\n    extentTokens.add(initCoreLabel(\"was\"));\n    final int ADDED_WORDS = 2;\n    for (int i = m.startIndex; i < endIdx; i++) {\n      // Add everything except separated dashes! The separated dashes mess with the parser too badly.\n      CoreLabel label = tokens.get(i);\n      if ( ! \"-\".equals(label.word())) {\n        extentTokens.add(tokens.get(i));\n      } else {\n        approximateness++;\n      }\n    }\n    extentTokens.add(initCoreLabel(\".\"));\n\n    // constrain the parse to the part we're interested in.\n    // Starting from ADDED_WORDS comes from skipping \"It was\".\n    // -1 to exclude the period.\n    // We now let it be any kind of nominal constituent, since there\n    // are VP and S ones\n    ParserConstraint constraint = new ParserConstraint(ADDED_WORDS, extentTokens.size() - 1, Pattern.compile(\".*\"));\n    List<ParserConstraint> constraints = Collections.singletonList(constraint);\n    Tree tree = parse(extentTokens, constraints);\n    convertToCoreLabels(tree);  // now unnecessary, as parser uses CoreLabels?\n    tree.indexSpans(m.startIndex - ADDED_WORDS);  // remember it has ADDED_WORDS extra words at the beginning\n    Tree subtree = findPartialSpan(tree, m.startIndex);\n    // There was a possible problem that with a crazy parse, extentHead could be one of the added words, not a real word!\n    // Now we make sure in findPartialSpan that it can't be before the real start, and in safeHead, we disallow something\n    // passed the right end (that is, just that final period).\n    Tree extentHead = safeHead(subtree, endIdx);\n    assert(extentHead != null);\n    // extentHead is a child in the local extent parse tree. we need to find the corresponding node in the main tree\n    // Because we deleted dashes, it's index will be >= the index in the extent parse tree\n    CoreLabel l = (CoreLabel) extentHead.label();\n    Tree realHead = funkyFindLeafWithApproximateSpan(root, l.value(), l.get(CoreAnnotations.BeginIndexAnnotation.class), approximateness);\n    assert(realHead != null);\n    return realHead;\n  }","commit_id":"6abd12e07b3523e1bcd8014cdaa1477e8c0d0296","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type AssetEntry title STRING null\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tAssetEntryTable.TABLE_NAME, AssetEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(AssetEntryTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(AssetEntryTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\tupdateAssetClassTypeId();\n\t\tupdateIGImageClassName();\n\t}","id":48838,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type AssetEntry title STRING null\");\n\t\t}\n\t\telse {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tAssetEntryTable.TABLE_NAME, AssetEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(AssetEntryTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(AssetEntryTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\tupdateAssetClassTypeId();\n\t\tupdateIGImageClassName();\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type BlogsEntry smallImageURL STRING null\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tBlogsEntryTable.TABLE_NAME, BlogsEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":48839,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type BlogsEntry smallImageURL STRING null\");\n\t\t}\n\t\telse {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tBlogsEntryTable.TABLE_NAME, BlogsEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"drop index IX_E0D90212 on BlogsEntry\");\n\t\t\trunSQL(\"drop index IX_DA53AFD4 on BlogsEntry\");\n\t\t\trunSQL(\"drop index IX_B88E740E on BlogsEntry\");\n\t\t\trunSQL(\"alter table BlogsEntry drop column draft\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type BlogsEntry smallImageURL STRING null\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tBlogsEntryTable.TABLE_NAME, BlogsEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":48840,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"drop index IX_E0D90212 on BlogsEntry\");\n\t\t\trunSQL(\"drop index IX_DA53AFD4 on BlogsEntry\");\n\t\t\trunSQL(\"drop index IX_B88E740E on BlogsEntry\");\n\t\t\trunSQL(\"alter table BlogsEntry drop column draft\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type BlogsEntry smallImageURL STRING null\");\n\t\t}\n\t\telse {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tBlogsEntryTable.TABLE_NAME, BlogsEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type BookmarksEntry name VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// BookmarksEntry\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tBookmarksEntryTable.TABLE_NAME,\n\t\t\t\tBookmarksEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(BookmarksEntryTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tBookmarksEntryTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\t// groupId\n\n\t\tupdateGroupId();\n\t}","id":48841,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type BookmarksEntry name VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// BookmarksEntry\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tBookmarksEntryTable.TABLE_NAME,\n\t\t\t\tBookmarksEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(BookmarksEntryTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tBookmarksEntryTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\t// groupId\n\n\t\tupdateGroupId();\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type CalEvent remindBy INTEGER\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// CalEvent\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tCalEventTable.TABLE_NAME, CalEventTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(CalEventTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(CalEventTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":48842,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type CalEvent remindBy INTEGER\");\n\t\t}\n\t\telse {\n\n\t\t\t// CalEvent\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tCalEventTable.TABLE_NAME, CalEventTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(CalEventTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(CalEventTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void updateFileVersions() throws Exception {\n\t\tConnection con = null;\n\t\tPreparedStatement ps = null;\n\t\tResultSet rs = null;\n\n\t\ttry {\n\t\t\tcon = DataAccess.getConnection();\n\n\t\t\tps = con.prepareStatement(\n\t\t\t\t\"select groupId, fileVersionId, folderId, name, extension \" +\n\t\t\t\t\t\"from DLFileVersion\");\n\n\t\t\trs = ps.executeQuery();\n\n\t\t\twhile (rs.next()) {\n\t\t\t\tlong groupId = rs.getLong(\"groupId\");\n\t\t\t\tlong fileVersionId = rs.getLong(\"fileVersionId\");\n\t\t\t\tlong folderId = rs.getLong(\"folderId\");\n\t\t\t\tString name = rs.getString(\"name\");\n\t\t\t\tString extension = rs.getString(\"extension\");\n\n\t\t\t\tString mimeType = MimeTypesUtil.getContentType(\n\t\t\t\t\t\"A.\" + extension);\n\n\t\t\t\tlong fileEntryId = getFileEntryId(groupId, folderId, name);\n\n\t\t\t\trunSQL(\n\t\t\t\t\t\"update DLFileVersion set fileEntryId = \" + fileEntryId +\n\t\t\t\t\t\t\", mimeType = '\" + mimeType +\n\t\t\t\t\t\t\t\"' where fileVersionId = \" + fileVersionId);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tDataAccess.cleanUp(con, ps, rs);\n\t\t}\n\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type DLFileVersion extraSettings TEXT null\");\n\t\t\trunSQL(\"alter_column_type DLFileVersion title VARCHAR(255) null\");\n\t\t\trunSQL(\"alter table DLFileVersion drop column name\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tDLFileVersionTable.TABLE_NAME,\n\t\t\t\tDLFileVersionTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileVersionTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tDLFileVersionTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":48843,"modified_method":"protected void updateFileVersions() throws Exception {\n\t\tConnection con = null;\n\t\tPreparedStatement ps = null;\n\t\tResultSet rs = null;\n\n\t\ttry {\n\t\t\tcon = DataAccess.getConnection();\n\n\t\t\tps = con.prepareStatement(\n\t\t\t\t\"select groupId, fileVersionId, folderId, name, extension \" +\n\t\t\t\t\t\"from DLFileVersion\");\n\n\t\t\trs = ps.executeQuery();\n\n\t\t\twhile (rs.next()) {\n\t\t\t\tlong groupId = rs.getLong(\"groupId\");\n\t\t\t\tlong fileVersionId = rs.getLong(\"fileVersionId\");\n\t\t\t\tlong folderId = rs.getLong(\"folderId\");\n\t\t\t\tString name = rs.getString(\"name\");\n\t\t\t\tString extension = rs.getString(\"extension\");\n\n\t\t\t\tString mimeType = MimeTypesUtil.getContentType(\n\t\t\t\t\t\"A.\" + extension);\n\n\t\t\t\tlong fileEntryId = getFileEntryId(groupId, folderId, name);\n\n\t\t\t\trunSQL(\n\t\t\t\t\t\"update DLFileVersion set fileEntryId = \" + fileEntryId +\n\t\t\t\t\t\t\", mimeType = '\" + mimeType +\n\t\t\t\t\t\t\t\"' where fileVersionId = \" + fileVersionId);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tDataAccess.cleanUp(con, ps, rs);\n\t\t}\n\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type DLFileVersion extraSettings TEXT null\");\n\t\t\trunSQL(\"alter_column_type DLFileVersion title VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tDLFileVersionTable.TABLE_NAME,\n\t\t\t\tDLFileVersionTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileVersionTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tDLFileVersionTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\trunSQL(\"alter table DLFileVersion drop column name\");\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type DLFileEntry name VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// DLFileEntry\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tDLFileEntryTable.TABLE_NAME, DLFileEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileEntryTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(DLFileEntryTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type DLFileRank name VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// DLFileRank\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tDLFileRankTable.TABLE_NAME, DLFileRankTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileRankTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(DLFileRankTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type DLFileShortcut toName VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// DLFileShortcut\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tDLFileShortcutTable.TABLE_NAME,\n\t\t\t\tDLFileShortcutTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileShortcutTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tDLFileShortcutTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type DLFileVersion name VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// DLFileVersion\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tDLFileVersionTable.TABLE_NAME,\n\t\t\t\tDLFileVersionTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileVersionTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tDLFileVersionTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\t// groupId\n\n\t\tupdateGroupId();\n\n\t\t// PortletPreferences\n\n\t\tupdatePortletPreferences();\n\t}","id":48844,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type DLFileEntry name VARCHAR(255) null\");\n\n\t\t\trunSQL(\"alter_column_type DLFileRank name VARCHAR(255) null\");\n\n\t\t\trunSQL(\"alter_column_type DLFileShortcut toName VARCHAR(255) null\");\n\n\t\t\trunSQL(\"alter_column_type DLFileVersion name VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// DLFileEntry\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tDLFileEntryTable.TABLE_NAME, DLFileEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileEntryTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(DLFileEntryTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\n\t\t\t// DLFileRank\n\n\t\t\tupgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tDLFileRankTable.TABLE_NAME, DLFileRankTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileRankTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(DLFileRankTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\n\t\t\t// DLFileShortcut\n\n\t\t\tupgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tDLFileShortcutTable.TABLE_NAME,\n\t\t\t\tDLFileShortcutTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileShortcutTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tDLFileShortcutTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\n\t\t\t// DLFileVersion\n\n\t\t\tupgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tDLFileVersionTable.TABLE_NAME,\n\t\t\t\tDLFileVersionTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileVersionTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tDLFileVersionTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\t// groupId\n\n\t\tupdateGroupId();\n\n\t\t// PortletPreferences\n\n\t\tupdatePortletPreferences();\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type DLFileEntry size_ LONG\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// DLFileEntry\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tDLFileEntryTable.TABLE_NAME, DLFileEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileEntryTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(DLFileEntryTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type DLFileVersion size_ LONG\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// DLFileVersion\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tDLFileVersionTable.TABLE_NAME,\n\t\t\t\tDLFileVersionTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileVersionTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tDLFileVersionTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":48845,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type DLFileEntry size_ LONG\");\n\n\t\t\trunSQL(\"alter_column_type DLFileVersion size_ LONG\");\n\t\t}\n\t\telse {\n\n\t\t\t// DLFileEntry\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tDLFileEntryTable.TABLE_NAME, DLFileEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileEntryTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(DLFileEntryTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\n\t\t\t// DLFileVersion\n\n\t\t\tupgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tDLFileVersionTable.TABLE_NAME,\n\t\t\t\tDLFileVersionTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileVersionTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tDLFileVersionTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type Group_ name VARCHAR(150) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tGroupTable.TABLE_NAME, GroupTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(GroupTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(GroupTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\tupdateName();\n\t\tupdateSite();\n\t}","id":48846,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type Group_ name VARCHAR(150) null\");\n\t\t}\n\t\telse {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tGroupTable.TABLE_NAME, GroupTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(GroupTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(GroupTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\tupdateName();\n\t\tupdateSite();\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type JournalArticle title STRING null\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tJournalArticleTable.TABLE_NAME,\n\t\t\t\tJournalArticleTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(JournalArticleTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tJournalArticleTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type JournalStructure name STRING null\");\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type JournalStructure description STRING null\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tJournalStructureTable.TABLE_NAME,\n\t\t\t\tJournalStructureTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(JournalStructureTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tJournalStructureTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type JournalTemplate name STRING null\");\n\t\t\trunSQL(\"alter_column_type JournalTemplate description STRING null\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tJournalTemplateTable.TABLE_NAME,\n\t\t\t\tJournalTemplateTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(JournalTemplateTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tJournalTemplateTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\tupdateStructureXsd();\n\t}","id":48847,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type JournalArticle title STRING null\");\n\n\t\t\trunSQL(\"alter_column_type JournalStructure name STRING null\");\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type JournalStructure description STRING null\");\n\n\t\t\trunSQL(\"alter_column_type JournalTemplate name STRING null\");\n\t\t\trunSQL(\"alter_column_type JournalTemplate description STRING null\");\n\t\t}\n\t\telse {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tJournalArticleTable.TABLE_NAME,\n\t\t\t\tJournalArticleTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(JournalArticleTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tJournalArticleTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\n\t\t\tupgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tJournalStructureTable.TABLE_NAME,\n\t\t\t\tJournalStructureTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(JournalStructureTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tJournalStructureTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\n\t\t\tupgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tJournalTemplateTable.TABLE_NAME,\n\t\t\t\tJournalTemplateTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(JournalTemplateTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tJournalTemplateTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\tupdateStructureXsd();\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type JournalArticle smallImageURL STRING null\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tJournalArticleTable.TABLE_NAME,\n\t\t\t\tJournalArticleTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(JournalArticleTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tJournalArticleTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\ttry {\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type JournalFeed targetLayoutFriendlyUrl \" +\n\t\t\t\t\t\"VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tJournalFeedTable.TABLE_NAME, JournalFeedTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(JournalFeedTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(JournalFeedTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\ttry {\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type JournalTemplate smallImageURL STRING null\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tJournalTemplateTable.TABLE_NAME,\n\t\t\t\tJournalTemplateTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(JournalTemplateTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tJournalTemplateTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":48848,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type JournalArticle smallImageURL STRING null\");\n\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type JournalFeed targetLayoutFriendlyUrl \" +\n\t\t\t\t\t\"VARCHAR(255) null\");\n\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type JournalTemplate smallImageURL STRING null\");\n\t\t}\n\t\telse {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tJournalArticleTable.TABLE_NAME,\n\t\t\t\tJournalArticleTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(JournalArticleTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tJournalArticleTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\n\t\t\tupgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tJournalFeedTable.TABLE_NAME, JournalFeedTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(JournalFeedTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(JournalFeedTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\n\t\t\tupgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tJournalTemplateTable.TABLE_NAME,\n\t\t\t\tJournalTemplateTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(JournalTemplateTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tJournalTemplateTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type JournalArticle title VARCHAR(300) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tJournalArticleTable.TABLE_NAME,\n\t\t\t\tJournalArticleTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(JournalArticleTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tJournalArticleTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":48849,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type JournalArticle title VARCHAR(300) null\");\n\t\t}\n\t\telse {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tJournalArticleTable.TABLE_NAME,\n\t\t\t\tJournalArticleTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(JournalArticleTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tJournalArticleTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type Layout friendlyURL VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// Layout\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tLayoutTable.TABLE_NAME, LayoutTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(LayoutTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(LayoutTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":48850,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type Layout friendlyURL VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// Layout\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tLayoutTable.TABLE_NAME, LayoutTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(LayoutTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(LayoutTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type Lock_ owner VARCHAR(300) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tLockTable.TABLE_NAME, LockTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(LockTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(LockTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":48851,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type Lock_ owner VARCHAR(300) null\");\n\t\t}\n\t\telse {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tLockTable.TABLE_NAME, LockTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(LockTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(LockTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type PollsChoice description STRING null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// PollsChoice\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tPollsChoiceTable.TABLE_NAME, PollsChoiceTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(PollsChoiceTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(PollsChoiceTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type PollsQuestion title STRING null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// PollsQuestion\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tPollsQuestionTable.TABLE_NAME,\n\t\t\t\tPollsQuestionTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(PollsQuestionTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tPollsQuestionTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t}","id":48852,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type PollsChoice description STRING null\");\n\n\t\t\trunSQL(\"alter_column_type PollsQuestion title STRING null\");\n\t\t}\n\t\telse {\n\n\t\t\t// PollsChoice\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tPollsChoiceTable.TABLE_NAME, PollsChoiceTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(PollsChoiceTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(PollsChoiceTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\n\t\t\t// PollsQuestion\n\n\t\t\tupgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tPollsQuestionTable.TABLE_NAME,\n\t\t\t\tPollsQuestionTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(PollsQuestionTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tPollsQuestionTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type Resource_ primKey VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// Resource\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tResourceTable.TABLE_NAME, ResourceTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(ResourceTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(ResourceTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":48853,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type Resource_ primKey VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// Resource\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tResourceTable.TABLE_NAME, ResourceTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(ResourceTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(ResourceTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type ResourceAction name VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// Resource\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tResourceActionTable.TABLE_NAME,\n\t\t\t\tResourceActionTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(ResourceActionTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tResourceActionTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":48854,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type ResourceAction name VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// Resource\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tResourceActionTable.TABLE_NAME,\n\t\t\t\tResourceActionTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(ResourceActionTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tResourceActionTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type ResourceCode name VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// ResourceCode\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tResourceCodeTable.TABLE_NAME, ResourceCodeTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(ResourceCodeTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(ResourceCodeTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":48855,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type ResourceCode name VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// ResourceCode\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tResourceCodeTable.TABLE_NAME, ResourceCodeTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(ResourceCodeTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(ResourceCodeTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tStringBundler sb = new StringBundler(3);\n\n\t\tsb.append(\"update ShoppingItem set groupId = (select groupId from \");\n\t\tsb.append(\"ShoppingCategory where ShoppingCategory.categoryId = \");\n\t\tsb.append(\"ShoppingItem.categoryId)\");\n\n\t\trunSQL(sb.toString());\n\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type ShoppingItem smallImageURL STRING null\");\n\t\t\trunSQL(\"alter_column_type ShoppingItem mediumImageURL STRING null\");\n\t\t\trunSQL(\"alter_column_type ShoppingItem largeImageURL STRING null\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tShoppingItemTable.TABLE_NAME, ShoppingItemTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(ShoppingItemTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(ShoppingItemTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":48856,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tStringBundler sb = new StringBundler(3);\n\n\t\tsb.append(\"update ShoppingItem set groupId = (select groupId from \");\n\t\tsb.append(\"ShoppingCategory where ShoppingCategory.categoryId = \");\n\t\tsb.append(\"ShoppingItem.categoryId)\");\n\n\t\trunSQL(sb.toString());\n\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type ShoppingItem smallImageURL STRING null\");\n\t\t\trunSQL(\"alter_column_type ShoppingItem mediumImageURL STRING null\");\n\t\t\trunSQL(\"alter_column_type ShoppingItem largeImageURL STRING null\");\n\t\t}\n\t\telse {\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tShoppingItemTable.TABLE_NAME, ShoppingItemTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(ShoppingItemTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(ShoppingItemTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type SCProductEntry tags VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// SCProductEntry\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tSCProductEntryTable.TABLE_NAME,\n\t\t\t\tSCProductEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(SCProductEntryTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tSCProductEntryTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":48857,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type SCProductEntry tags VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// SCProductEntry\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tSCProductEntryTable.TABLE_NAME,\n\t\t\t\tSCProductEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(SCProductEntryTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tSCProductEntryTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type TagsAsset title VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// TagsAsset\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tTagsAssetTable.TABLE_NAME, TagsAssetTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(TagsAssetTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(TagsAssetTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\tupdateAssetViewCount();\n\n\t\t// TagsProperty\n\n\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\tTagsPropertyTable.TABLE_NAME, TagsPropertyTable.TABLE_COLUMNS,\n\t\t\tnew TagsPropertyValueUpgradeColumnImpl(\"value\"));\n\n\t\tupgradeTable.setCreateSQL(TagsPropertyTable.TABLE_SQL_CREATE);\n\t\tupgradeTable.setIndexesSQL(TagsPropertyTable.TABLE_SQL_ADD_INDEXES);\n\n\t\tupgradeTable.updateTable();\n\t}","id":48858,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type TagsAsset title VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// TagsAsset\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tTagsAssetTable.TABLE_NAME, TagsAssetTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(TagsAssetTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(TagsAssetTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\tupdateAssetViewCount();\n\n\t\t// TagsProperty\n\n\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\tTagsPropertyTable.TABLE_NAME, TagsPropertyTable.TABLE_COLUMNS,\n\t\t\tnew TagsPropertyValueUpgradeColumnImpl(\"value\"));\n\n\t\tupgradeTable.setCreateSQL(TagsPropertyTable.TABLE_SQL_CREATE);\n\t\tupgradeTable.setIndexesSQL(TagsPropertyTable.TABLE_SQL_ADD_INDEXES);\n\n\t\tupgradeTable.updateTable();\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type User_ greeting VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// User_\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tUserTable.TABLE_NAME, UserTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(UserTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(UserTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\tStringBundler sb = new StringBundler(9);\n\n\t\tsb.append(\"update User_ set firstName = (select Contact_.firstName \");\n\t\tsb.append(\"from Contact_ where Contact_.contactId = \");\n\t\tsb.append(\"User_.contactId), middleName = (select \");\n\t\tsb.append(\"Contact_.middleName from Contact_ where \");\n\t\tsb.append(\"Contact_.contactId = User_.contactId), lastName = \");\n\t\tsb.append(\"(select Contact_.lastName from Contact_ where \");\n\t\tsb.append(\"Contact_.contactId = User_.contactId), jobTitle = (select \");\n\t\tsb.append(\"Contact_.jobTitle from Contact_ where \");\n\t\tsb.append(\"Contact_.contactId = User_.contactId)\");\n\n\t\trunSQL(sb.toString());\n\t}","id":48859,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type User_ greeting VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// User_\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tUserTable.TABLE_NAME, UserTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(UserTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(UserTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\tStringBundler sb = new StringBundler(9);\n\n\t\tsb.append(\"update User_ set firstName = (select Contact_.firstName \");\n\t\tsb.append(\"from Contact_ where Contact_.contactId = \");\n\t\tsb.append(\"User_.contactId), middleName = (select \");\n\t\tsb.append(\"Contact_.middleName from Contact_ where \");\n\t\tsb.append(\"Contact_.contactId = User_.contactId), lastName = \");\n\t\tsb.append(\"(select Contact_.lastName from Contact_ where \");\n\t\tsb.append(\"Contact_.contactId = User_.contactId), jobTitle = (select \");\n\t\tsb.append(\"Contact_.jobTitle from Contact_ where \");\n\t\tsb.append(\"Contact_.contactId = User_.contactId)\");\n\n\t\trunSQL(sb.toString());\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type WikiPage title VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// WikiPage\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tWikiPageTable.TABLE_NAME, WikiPageTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(WikiPageTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(WikiPageTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\t// groupId\n\n\t\tupdateGroupId();\n\t}","id":48860,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type WikiPage title VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// WikiPage\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tWikiPageTable.TABLE_NAME, WikiPageTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(WikiPageTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(WikiPageTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\t// groupId\n\n\t\tupdateGroupId();\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type WikiPage parentTitle varchar(255) null\");\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type WikiPage redirectTitle varchar(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// WikiPage\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tWikiPageTable.TABLE_NAME, WikiPageTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(WikiPageTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(WikiPageTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\ttry {\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type WikiPageResource title varchar(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// WikiPageResource\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tWikiPageResourceTable.TABLE_NAME,\n\t\t\t\tWikiPageResourceTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(WikiPageResourceTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tWikiPageResourceTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":48861,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type WikiPage parentTitle varchar(255) null\");\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type WikiPage redirectTitle varchar(255) null\");\n\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type WikiPageResource title varchar(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// WikiPage\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tWikiPageTable.TABLE_NAME, WikiPageTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(WikiPageTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(WikiPageTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\n\t\t\t// WikiPageResource\n\n\t\t\tupgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tWikiPageResourceTable.TABLE_NAME,\n\t\t\t\tWikiPageResourceTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(WikiPageResourceTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tWikiPageResourceTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type WikiPage parentTitle varchar(255) null\");\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type WikiPage redirectTitle varchar(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// WikiPage\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tWikiPageTable.TABLE_NAME, WikiPageTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(WikiPageTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(WikiPageTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\ttry {\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type WikiPageResource title varchar(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// WikiPageResource\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tWikiPageResourceTable.TABLE_NAME,\n\t\t\t\tWikiPageResourceTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(WikiPageResourceTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tWikiPageResourceTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":48862,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type WikiPage parentTitle varchar(255) null\");\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type WikiPage redirectTitle varchar(255) null\");\n\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type WikiPageResource title varchar(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// WikiPage\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tWikiPageTable.TABLE_NAME, WikiPageTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(WikiPageTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(WikiPageTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\n\t\t\t// WikiPageResource\n\n\t\t\tupgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\tWikiPageResourceTable.TABLE_NAME,\n\t\t\t\tWikiPageResourceTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(WikiPageResourceTable.TABLE_SQL_CREATE);\n\t\t\tupgradeTable.setIndexesSQL(\n\t\t\t\tWikiPageResourceTable.TABLE_SQL_ADD_INDEXES);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"145ce9ce65819ee14348bccbc376bb7f3c5e2b99","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n    public void reserve(NicProfile nic, Network network, VirtualMachineProfile<? extends VirtualMachine> vm, DeployDestination dest, ReservationContext context)\n            throws InsufficientVirtualNetworkCapcityException, InsufficientAddressCapacityException, ConcurrentOperationException {\n        if (nic.getIp4Address() == null) {\n            getIp(nic, dest.getPod(), vm, network);\n            nic.setStrategy(ReservationStrategy.Create);\n        }\n        \n        DataCenter dc = _dcDao.findById(network.getDataCenterId());\n        nic.setDns1(dc.getDns1());\n        nic.setDns2(dc.getDns2());\n    }","id":48863,"modified_method":"@Override\n    public void reserve(NicProfile nic, Network network, VirtualMachineProfile<? extends VirtualMachine> vm, DeployDestination dest, ReservationContext context)\n            throws InsufficientVirtualNetworkCapcityException, InsufficientAddressCapacityException, ConcurrentOperationException {\n        \n        String oldIp = nic.getIp4Address();\n        boolean getNewIp = false;\n        \n        if (oldIp == null) {\n            getNewIp = true;\n        } else {\n            // we need to get a new ip address if we try to deploy a vm in a different pod\n            IPAddressVO ipVO = _ipAddressDao.findByIpAndSourceNetworkId(network.getId(), oldIp);\n            if (ipVO != null) {\n                List<PodVlanMapVO> mapVO = _podVlanDao.listPodVlanMapsByVlan(ipVO.getVlanId());\n                if (mapVO.get(0).getPodId() != dest.getPod().getId()) {\n                    //release the old ip here\n                    _networkMgr.markIpAsUnavailable(ipVO.getId());\n                    _ipAddressDao.unassignIpAddress(ipVO.getId());\n                    \n                    nic.setIp4Address(null);\n                    getNewIp = true;\n                }\n            }\n        }\n        \n        if (getNewIp) {\n            //we don't set reservationStrategy to Create because we need this method to be called again for the case when vm fails to deploy in Pod1, and we try to redeploy it in Pod2 \n            getIp(nic, dest.getPod(), vm, network);\n        }\n        \n        DataCenter dc = _dcDao.findById(network.getDataCenterId());\n        nic.setDns1(dc.getDns1());\n        nic.setDns2(dc.getDns2());\n    }","commit_id":"527c3b024f4cc385917294a2a1650b6c74c92349","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public void release(VirtualMachineProfile<? extends VMInstanceVO> vmProfile, boolean forced) {\n        List<NicVO> nics = _nicDao.listByVmId(vmProfile.getId());\n        for (NicVO nic : nics) {\n            NetworkVO network = _networksDao.findById(nic.getNetworkId());\n            if (nic.getState() == Nic.State.Reserved || nic.getState() == Nic.State.Reserving) {\n                Nic.State originalState = nic.getState();\n                if (nic.getReservationStrategy() == Nic.ReservationStrategy.Start) {\n                    NetworkGuru guru = _networkGurus.get(network.getGuruName());\n                    nic.setState(Nic.State.Releasing);\n                    _nicDao.update(nic.getId(), nic);\n                    NicProfile profile = new NicProfile(nic, network, null, null, null);\n                    if (guru.release(profile, vmProfile, nic.getReservationId())) {\n                        applyProfileToNicForRelease(nic, profile);\n                        nic.setState(Nic.State.Allocated);\n                        if (originalState == Nic.State.Reserved) {\n                            updateNic(nic, network.getId(), -1);\n                        } else {\n                            _nicDao.update(nic.getId(), nic);\n                        }\n                    }\n                } else {\n                    nic.setState(Nic.State.Allocated);\n                    updateNic(nic, network.getId(), -1);\n                }\n            }\n        }\n    }","id":48864,"modified_method":"@Override\n    public void release(VirtualMachineProfile<? extends VMInstanceVO> vmProfile, boolean forced) {\n        List<NicVO> nics = _nicDao.listByVmId(vmProfile.getId());\n        for (NicVO nic : nics) {\n            NetworkVO network = _networksDao.findById(nic.getNetworkId());\n            if (nic.getState() == Nic.State.Reserved || nic.getState() == Nic.State.Reserving) {\n                Nic.State originalState = nic.getState();\n                if (nic.getReservationStrategy() == Nic.ReservationStrategy.Start) {\n                    NetworkGuru guru = _networkGurus.get(network.getGuruName());\n                    nic.setState(Nic.State.Releasing);\n                    _nicDao.update(nic.getId(), nic);\n                    NicProfile profile = new NicProfile(nic, network, nic.getBroadcastUri(), nic.getIsolationUri(), null);\n                    if (guru.release(profile, vmProfile, nic.getReservationId())) {\n                        applyProfileToNicForRelease(nic, profile);\n                        nic.setState(Nic.State.Allocated);\n                        if (originalState == Nic.State.Reserved) {\n                            updateNic(nic, network.getId(), -1);\n                        } else {\n                            _nicDao.update(nic.getId(), nic);\n                        }\n                    }\n                } else {\n                    nic.setState(Nic.State.Allocated);\n                    updateNic(nic, network.getId(), -1);\n                }\n            }\n        }\n    }","commit_id":"527c3b024f4cc385917294a2a1650b6c74c92349","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public void reserve(NicProfile nic, Network network, VirtualMachineProfile<? extends VirtualMachine> vm, DeployDestination dest, ReservationContext context)\n            throws InsufficientVirtualNetworkCapcityException, InsufficientAddressCapacityException, ConcurrentOperationException {\n        if (nic.getIp4Address() == null) {\n            getIp(nic, dest.getPod(), vm, network);\n            nic.setStrategy(ReservationStrategy.Create);\n        }\n        \n        DataCenter dc = _dcDao.findById(network.getDataCenterId());\n        nic.setDns1(dc.getDns1());\n        nic.setDns2(dc.getDns2());\n    }","id":48865,"modified_method":"@Override\n    public void reserve(NicProfile nic, Network network, VirtualMachineProfile<? extends VirtualMachine> vm, DeployDestination dest, ReservationContext context)\n            throws InsufficientVirtualNetworkCapcityException, InsufficientAddressCapacityException, ConcurrentOperationException {\n        \n        String oldIp = nic.getIp4Address();\n        boolean getNewIp = false;\n        \n        if (oldIp == null) {\n            getNewIp = true;\n        } else {\n            // we need to get a new ip address if we try to deploy a vm in a different pod\n            IPAddressVO ipVO = _ipAddressDao.findByIpAndSourceNetworkId(network.getId(), oldIp);\n            if (ipVO != null) {\n                List<PodVlanMapVO> mapVO = _podVlanDao.listPodVlanMapsByVlan(ipVO.getVlanId());\n                if (mapVO.get(0).getPodId() != dest.getPod().getId()) {\n                    //release the old ip here\n                    _networkMgr.markIpAsUnavailable(ipVO.getId());\n                    _ipAddressDao.unassignIpAddress(ipVO.getId());\n                    \n                    nic.setIp4Address(null);\n                    getNewIp = true;\n                }\n            }\n        }\n        \n        if (getNewIp) {\n            //we don't set reservationStrategy to Create because we need this method to be called again for the case when vm fails to deploy in Pod1, and we try to redeploy it in Pod2 \n            getIp(nic, dest.getPod(), vm, network);\n        }\n        \n        DataCenter dc = _dcDao.findById(network.getDataCenterId());\n        nic.setDns1(dc.getDns1());\n        nic.setDns2(dc.getDns2());\n    }","commit_id":"dfd0d7730e19c6f254edc002f2c40dd7accb2bf4","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public void release(VirtualMachineProfile<? extends VMInstanceVO> vmProfile, boolean forced) {\n        List<NicVO> nics = _nicDao.listByVmId(vmProfile.getId());\n        for (NicVO nic : nics) {\n            NetworkVO network = _networksDao.findById(nic.getNetworkId());\n            if (nic.getState() == Nic.State.Reserved || nic.getState() == Nic.State.Reserving) {\n                Nic.State originalState = nic.getState();\n                if (nic.getReservationStrategy() == Nic.ReservationStrategy.Start) {\n                    NetworkGuru guru = _networkGurus.get(network.getGuruName());\n                    nic.setState(Nic.State.Releasing);\n                    _nicDao.update(nic.getId(), nic);\n                    NicProfile profile = new NicProfile(nic, network, null, null, null);\n                    if (guru.release(profile, vmProfile, nic.getReservationId())) {\n                        applyProfileToNicForRelease(nic, profile);\n                        nic.setState(Nic.State.Allocated);\n                        if (originalState == Nic.State.Reserved) {\n                            updateNic(nic, network.getId(), -1);\n                        } else {\n                            _nicDao.update(nic.getId(), nic);\n                        }\n                    }\n                } else {\n                    nic.setState(Nic.State.Allocated);\n                    updateNic(nic, network.getId(), -1);\n                }\n            }\n        }\n    }","id":48866,"modified_method":"@Override\n    public void release(VirtualMachineProfile<? extends VMInstanceVO> vmProfile, boolean forced) {\n        List<NicVO> nics = _nicDao.listByVmId(vmProfile.getId());\n        for (NicVO nic : nics) {\n            NetworkVO network = _networksDao.findById(nic.getNetworkId());\n            if (nic.getState() == Nic.State.Reserved || nic.getState() == Nic.State.Reserving) {\n                Nic.State originalState = nic.getState();\n                if (nic.getReservationStrategy() == Nic.ReservationStrategy.Start) {\n                    NetworkGuru guru = _networkGurus.get(network.getGuruName());\n                    nic.setState(Nic.State.Releasing);\n                    _nicDao.update(nic.getId(), nic);\n                    NicProfile profile = new NicProfile(nic, network, nic.getBroadcastUri(), nic.getIsolationUri(), null);\n                    if (guru.release(profile, vmProfile, nic.getReservationId())) {\n                        applyProfileToNicForRelease(nic, profile);\n                        nic.setState(Nic.State.Allocated);\n                        if (originalState == Nic.State.Reserved) {\n                            updateNic(nic, network.getId(), -1);\n                        } else {\n                            _nicDao.update(nic.getId(), nic);\n                        }\n                    }\n                } else {\n                    nic.setState(Nic.State.Allocated);\n                    updateNic(nic, network.getId(), -1);\n                }\n            }\n        }\n    }","commit_id":"dfd0d7730e19c6f254edc002f2c40dd7accb2bf4","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public void reserve(NicProfile nic, Network network, VirtualMachineProfile<? extends VirtualMachine> vm, DeployDestination dest, ReservationContext context)\n            throws InsufficientVirtualNetworkCapcityException, InsufficientAddressCapacityException, ConcurrentOperationException {\n        if (nic.getIp4Address() == null) {\n            getIp(nic, dest.getPod(), vm, network);\n            nic.setStrategy(ReservationStrategy.Create);\n        }\n        \n        DataCenter dc = _dcDao.findById(network.getDataCenterId());\n        nic.setDns1(dc.getDns1());\n        nic.setDns2(dc.getDns2());\n    }","id":48867,"modified_method":"@Override\n    public void reserve(NicProfile nic, Network network, VirtualMachineProfile<? extends VirtualMachine> vm, DeployDestination dest, ReservationContext context)\n            throws InsufficientVirtualNetworkCapcityException, InsufficientAddressCapacityException, ConcurrentOperationException {\n        \n        String oldIp = nic.getIp4Address();\n        boolean getNewIp = false;\n        \n        if (oldIp == null) {\n            getNewIp = true;\n        } else {\n            // we need to get a new ip address if we try to deploy a vm in a different pod\n            IPAddressVO ipVO = _ipAddressDao.findByIpAndSourceNetworkId(network.getId(), oldIp);\n            if (ipVO != null) {\n                List<PodVlanMapVO> mapVO = _podVlanDao.listPodVlanMapsByVlan(ipVO.getVlanId());\n                if (mapVO.get(0).getPodId() != dest.getPod().getId()) {\n                    //release the old ip here\n                    _networkMgr.markIpAsUnavailable(ipVO.getId());\n                    _ipAddressDao.unassignIpAddress(ipVO.getId());\n                    \n                    nic.setIp4Address(null);\n                    getNewIp = true;\n                }\n            }\n        }\n        \n        if (getNewIp) {\n            //we don't set reservationStrategy to Create because we need this method to be called again for the case when vm fails to deploy in Pod1, and we try to redeploy it in Pod2 \n            getIp(nic, dest.getPod(), vm, network);\n        }\n        \n        DataCenter dc = _dcDao.findById(network.getDataCenterId());\n        nic.setDns1(dc.getDns1());\n        nic.setDns2(dc.getDns2());\n    }","commit_id":"3d0758691f4cc39084af42c8c7c5b164b1a9bfa2","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public void release(VirtualMachineProfile<? extends VMInstanceVO> vmProfile, boolean forced) {\n        List<NicVO> nics = _nicDao.listByVmId(vmProfile.getId());\n        for (NicVO nic : nics) {\n            NetworkVO network = _networksDao.findById(nic.getNetworkId());\n            if (nic.getState() == Nic.State.Reserved || nic.getState() == Nic.State.Reserving) {\n                Nic.State originalState = nic.getState();\n                if (nic.getReservationStrategy() == Nic.ReservationStrategy.Start) {\n                    NetworkGuru guru = _networkGurus.get(network.getGuruName());\n                    nic.setState(Nic.State.Releasing);\n                    _nicDao.update(nic.getId(), nic);\n                    NicProfile profile = new NicProfile(nic, network, null, null, null);\n                    if (guru.release(profile, vmProfile, nic.getReservationId())) {\n                        applyProfileToNicForRelease(nic, profile);\n                        nic.setState(Nic.State.Allocated);\n                        if (originalState == Nic.State.Reserved) {\n                            updateNic(nic, network.getId(), -1);\n                        } else {\n                            _nicDao.update(nic.getId(), nic);\n                        }\n                    }\n                } else {\n                    nic.setState(Nic.State.Allocated);\n                    updateNic(nic, network.getId(), -1);\n                }\n            }\n        }\n    }","id":48868,"modified_method":"@Override\n    public void release(VirtualMachineProfile<? extends VMInstanceVO> vmProfile, boolean forced) {\n        List<NicVO> nics = _nicDao.listByVmId(vmProfile.getId());\n        for (NicVO nic : nics) {\n            NetworkVO network = _networksDao.findById(nic.getNetworkId());\n            if (nic.getState() == Nic.State.Reserved || nic.getState() == Nic.State.Reserving) {\n                Nic.State originalState = nic.getState();\n                if (nic.getReservationStrategy() == Nic.ReservationStrategy.Start) {\n                    NetworkGuru guru = _networkGurus.get(network.getGuruName());\n                    nic.setState(Nic.State.Releasing);\n                    _nicDao.update(nic.getId(), nic);\n                    NicProfile profile = new NicProfile(nic, network, nic.getBroadcastUri(), nic.getIsolationUri(), null);\n                    if (guru.release(profile, vmProfile, nic.getReservationId())) {\n                        applyProfileToNicForRelease(nic, profile);\n                        nic.setState(Nic.State.Allocated);\n                        if (originalState == Nic.State.Reserved) {\n                            updateNic(nic, network.getId(), -1);\n                        } else {\n                            _nicDao.update(nic.getId(), nic);\n                        }\n                    }\n                } else {\n                    nic.setState(Nic.State.Allocated);\n                    updateNic(nic, network.getId(), -1);\n                }\n            }\n        }\n    }","commit_id":"3d0758691f4cc39084af42c8c7c5b164b1a9bfa2","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public RestrictedNode getSpecification()\n    {\n        return new Node()\n                //singleMP\n                .serial(prePost())\n\n                //processorChain\n                .serial(prePost()) //logger-1\n                .serial(prePost()) //logger-2\n\n                //custom-processor\n                .serial(prePost())\n                .serial(prePost())\n\n                //choice\n                .serial(pre()) //choice\n                .serial(prePost())    //otherwise-logger\n                .serial(post())\n\n                //all\n                .serial(pre())\n                .serial(prePost())\n                .serial(prePost())\n                .serial(post())\n                .serial(prePost())    //MP after the Scope\n\n                //foreach\n                .serial(pre()) //foreach\n                .serial(prePost())    //logger-loop-1\n                .serial(prePost())    //logger-loop-2\n                .serial(post())\n                .serial(prePost())    //MP after the Scope\n\n                //enricher\n                .serial(pre()) //append-string\n                .serial(prePost())\n                .serial(post())\n                .serial(pre()) //chain\n                .serial(prePost())\n                .serial(prePost())\n                .serial(post())\n\n                ////async             //This is unstable\n                //.serial(prePost())\n                //.serial(prePost())\n                //.serial(prePost())\n\n                //filter\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n\n                //idempotent-message-filter\n                .serial(pre())          //open message filter\n                .serial(prePost())      //message processor\n                .serial(post())         //close mf\n\n                //idempotent-secure-hash-message-filter\n                .serial(pre())          //open message filter\n                .serial(prePost())      //message processor\n                .serial(post())         //close mf\n\n                //subflow\n                .serial(prePost())\n                .serial(pre())\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n                .serial(post())\n\n                //catch-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //rollback-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //choice-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //request-reply\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n                .serial(prePost())\n\n                //composite-source\n                .serial(prePost()) //call throw cs1\n                .serial(prePost())\n                .serial(prePost())\n                .serial(prePost()) //call throw cs4\n\n                //first-successful\n                .serial(prePost())\n                .serial(prePost())\n\n                //round-robin\n                .serial(prePost())\n                .serial(prePost())\n\n                //recipient-list\n                .serial(prePost())  //send message to the requested endpoint\n                .serial(prePost())  //log message\n\n                //collection-aggregator\n                .serial(pre())      //open Splitter, unpacks three messages\n                .serial(prePost())  //1st message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //2nd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //3rd message on Logger\n                .serial(prePost())  //gets to Aggregator and packs the three messages, then close\n                .serial(post())     //close Splitter\n\n                //custom-aggregator\n                .serial(pre())      //open Splitter, unpacks three messages\n                .serial(prePost())  //1st message, open Aggregator\n                .serial(prePost())  //2nd message\n                .serial(pre())      //3rd message, packs the three messages\n                .serial(prePost())  //Logger process packed message\n                .serial(post())     //close Aggregator\n                .serial(post())     //close Splitter\n\n                //chunk-aggregator\n                .serial(pre())      //start Splitter\n                .serial(prePost())  //1st message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //2nd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //3rd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //4th message on Logger\n                .serial(pre())      //gets to Aggregator and packs four messages\n                .serial(prePost())  //packed message get to the second Logger\n                .serial(post())     //close Aggregator\n                .serial(post())     //close Splitter\n\n                //wire-tap\n                .serial(prePost())\n                .serial(prePost())\n\n                ;\n    }","id":48869,"modified_method":"@Override\n    public RestrictedNode getSpecification()\n    {\n        return new Node()\n                //singleMP\n                .serial(prePost())\n\n                //processorChain\n                .serial(pre()) //Message Processor Chain\n                .serial(prePost()) //logger-1\n                .serial(prePost()) //logger-2\n                .serial(post()) //Message Processor Chain\n\n                //custom-processor\n                .serial(prePost())\n                .serial(prePost())\n\n                //choice\n                .serial(pre()) //choice\n                .serial(prePost())    //otherwise-logger\n                .serial(post())\n\n                //all\n                .serial(pre())\n                .serial(prePost())\n                .serial(prePost())\n                .serial(post())\n                .serial(prePost())    //MP after the Scope\n\n                //foreach\n                .serial(pre()) //foreach\n                .serial(prePost())    //logger-loop-1\n                .serial(prePost())    //logger-loop-2\n                .serial(post())\n                .serial(prePost())    //MP after the Scope\n\n                //enricher\n                .serial(pre()) //append-string\n                .serial(prePost())\n                .serial(post())\n                .serial(pre()) //chain\n                .serial(prePost())\n                .serial(prePost())\n                .serial(post())\n\n                ////async             //This is unstable\n                //.serial(prePost())\n                //.serial(prePost())\n                //.serial(prePost())\n\n                //filter\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n\n                //idempotent-message-filter\n                .serial(pre())          //open message filter\n                .serial(prePost())      //message processor\n                .serial(post())         //close mf\n\n                //idempotent-secure-hash-message-filter\n                .serial(pre())          //open message filter\n                .serial(prePost())      //message processor\n                .serial(post())         //close mf\n\n                //subflow\n                .serial(prePost())\n                .serial(pre())\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n                .serial(post())\n\n                //catch-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //rollback-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //choice-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //request-reply\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n                .serial(prePost())\n\n                //composite-source\n                .serial(prePost()) //call throw cs1\n                .serial(prePost())\n                .serial(prePost())\n                .serial(prePost()) //call throw cs4\n\n                //first-successful\n                .serial(prePost())\n                .serial(prePost())\n\n                //round-robin\n                .serial(prePost())\n                .serial(prePost())\n\n                //recipient-list\n                .serial(prePost())  //send message to the requested endpoint\n                .serial(prePost())  //log message\n\n                //collection-aggregator\n                .serial(pre())      //open Splitter, unpacks three messages\n                .serial(prePost())  //1st message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //2nd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //3rd message on Logger\n                .serial(prePost())  //gets to Aggregator and packs the three messages, then close\n                .serial(post())     //close Splitter\n\n                //custom-aggregator\n                .serial(pre())      //open Splitter, unpacks three messages\n                .serial(prePost())  //1st message, open Aggregator\n                .serial(prePost())  //2nd message\n                .serial(pre())      //3rd message, packs the three messages\n                .serial(prePost())  //Logger process packed message\n                .serial(post())     //close Aggregator\n                .serial(post())     //close Splitter\n\n                //chunk-aggregator\n                .serial(pre())      //start Splitter\n                .serial(prePost())  //1st message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //2nd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //3rd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //4th message on Logger\n                .serial(pre())      //gets to Aggregator and packs four messages\n                .serial(prePost())  //packed message get to the second Logger\n                .serial(post())     //close Aggregator\n                .serial(post())     //close Splitter\n\n                //wire-tap\n                .serial(prePost())\n                .serial(prePost())\n\n                ;\n    }","commit_id":"c3c9ff9d3e047c8b6d83b73912505f1027fd39bf","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public RestrictedNode getSpecification()\n    {\n        return new Node()\n                //singleMP\n                .serial(prePost())\n\n                //processorChain\n                .serial(pre()) //Message Processor Chain\n                .serial(prePost()) //logger-1\n                .serial(prePost()) //logger-2\n                .serial(post()) //Message Processor Chain\n\n                //custom-processor\n                .serial(prePost())\n                .serial(prePost())\n\n                //choice\n                .serial(pre()) //choice\n                .serial(prePost())    //otherwise-logger\n                .serial(post())\n\n\n\n                //foreach\n                .serial(pre()) //foreach\n                .serial(prePost())    //logger-loop-1\n                .serial(prePost())    //logger-loop-2\n                .serial(post())\n                .serial(prePost())    //MP after the Scope\n\n                //enricher\n                .serial(pre()) //append-string\n                .serial(prePost())\n                .serial(post())\n                .serial(pre()) //chain\n                .serial(prePost())\n                .serial(prePost())\n                .serial(post())\n\n                ////async             //This is unstable\n                //.serial(prePost())\n                //.serial(prePost())\n                //.serial(prePost())\n\n                //filter\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n\n                //idempotent-message-filter\n                .serial(pre())          //open message filter\n                .serial(prePost())      //message processor\n                .serial(post())         //close mf\n\n                //idempotent-secure-hash-message-filter\n                .serial(pre())          //open message filter\n                .serial(prePost())      //message processor\n                .serial(post())         //close mf\n\n                //subflow\n                .serial(prePost())\n                .serial(pre())\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n                .serial(post())\n\n                //catch-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //rollback-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //choice-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //request-reply\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n                .serial(prePost())\n\n                //composite-source\n                .serial(prePost()) //call throw cs1\n                .serial(prePost())\n                .serial(prePost())\n                .serial(prePost()) //call throw cs4\n\n                //first-successful\n                .serial(prePost())\n                .serial(prePost())\n\n                //round-robin\n                .serial(prePost())\n                .serial(prePost())\n\n                //recipient-list\n                .serial(prePost())  //send message to the requested endpoint\n                .serial(prePost())  //log message\n\n                //collection-aggregator\n                .serial(pre())      //open Splitter, unpacks three messages\n                .serial(prePost())  //1st message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //2nd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //3rd message on Logger\n                .serial(prePost())  //gets to Aggregator and packs the three messages, then close\n                .serial(post())     //close Splitter\n\n                //custom-aggregator\n                .serial(pre())      //open Splitter, unpacks three messages\n                .serial(prePost())  //1st message, open Aggregator\n                .serial(prePost())  //2nd message\n                .serial(pre())      //3rd message, packs the three messages\n                .serial(prePost())  //Logger process packed message\n                .serial(post())     //close Aggregator\n                .serial(post())     //close Splitter\n\n                //chunk-aggregator\n                .serial(pre())      //start Splitter\n                .serial(prePost())  //1st message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //2nd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //3rd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //4th message on Logger\n                .serial(pre())      //gets to Aggregator and packs four messages\n                .serial(prePost())  //packed message get to the second Logger\n                .serial(post())     //close Aggregator\n                .serial(post())     //close Splitter\n\n                //wire-tap\n                .serial(prePost())\n                .serial(prePost())\n\n                ;\n    }","id":48870,"modified_method":"@Override\n    public RestrictedNode getSpecification()\n    {\n        return new Node()\n                //singleMP\n                .serial(prePost())\n\n                //processorChain\n                .serial(pre()) //Message Processor Chain\n                .serial(prePost()) //logger-1\n                .serial(prePost()) //logger-2\n                .serial(post()) //Message Processor Chain\n\n                //custom-processor\n                .serial(prePost())\n                .serial(prePost())\n\n                //choice\n                .serial(pre()) //choice\n                .serial(prePost())    //otherwise-logger\n                .serial(post())\n\n\n\n                //foreach\n                .serial(pre()) //foreach\n                .serial(prePost())    //logger-loop-1\n                .serial(prePost())    //logger-loop-2\n                .serial(prePost())    // ?\n                .serial(prePost())    // ?\n                .serial(post())\n                .serial(prePost())    //MP after the Scope\n\n                //enricher\n                .serial(pre()) //append-string\n                .serial(prePost())\n                .serial(post())\n                .serial(pre()) //chain\n                .serial(prePost())\n                .serial(prePost())\n                .serial(post())\n\n                ////async             //This is unstable\n                //.serial(prePost())\n                //.serial(prePost())\n                //.serial(prePost())\n\n                //filter\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n\n                //idempotent-message-filter\n                .serial(pre())          //open message filter\n                .serial(prePost())      //message processor\n                .serial(post())         //close mf\n\n                //idempotent-secure-hash-message-filter\n                .serial(pre())          //open message filter\n                .serial(prePost())      //message processor\n                .serial(post())         //close mf\n\n                //subflow\n                .serial(prePost())\n                .serial(pre())\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n                .serial(post())\n\n                //catch-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //rollback-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //choice-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //request-reply\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n                .serial(prePost())\n\n                //composite-source\n                .serial(prePost()) //call throw cs1\n                .serial(prePost())\n                .serial(prePost())\n                .serial(prePost()) //call throw cs4\n\n                //first-successful\n                .serial(prePost())\n                .serial(prePost())\n\n                //round-robin\n                .serial(prePost())\n                .serial(prePost())\n\n                //recipient-list\n                .serial(prePost())  //send message to the requested endpoint\n                .serial(prePost())  //log message\n\n                //collection-aggregator\n                .serial(pre())      //open Splitter, unpacks three messages\n                .serial(prePost())  //1st message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //2nd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //3rd message on Logger\n                .serial(prePost())  //gets to Aggregator and packs the three messages, then close\n                .serial(post())     //close Splitter\n\n                //custom-aggregator\n                .serial(pre())      //open Splitter, unpacks three messages\n                .serial(prePost())  //1st message, open Aggregator\n                .serial(prePost())  //2nd message\n                .serial(pre())      //3rd message, packs the three messages\n                .serial(prePost())  //Logger process packed message\n                .serial(post())     //close Aggregator\n                .serial(post())     //close Splitter\n\n                //chunk-aggregator\n                .serial(pre())      //start Splitter\n                .serial(prePost())  //1st message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //2nd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //3rd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //4th message on Logger\n                .serial(pre())      //gets to Aggregator and packs four messages\n                .serial(prePost())  //packed message get to the second Logger\n                .serial(post())     //close Aggregator\n                .serial(post())     //close Splitter\n\n                //wire-tap\n                .serial(prePost())\n                .serial(prePost())\n\n                ;\n    }","commit_id":"2c4f7eeb1cc2434d3db4defb4085a6da0eb18534","url":"https://github.com/mulesoft/mule"},{"original_method":"protected DefaultMessageProcessorChain(MessageProcessor... processors)\n    {\n        super(null, Arrays.asList(processors));\n    }","id":48871,"modified_method":"protected DefaultMessageProcessorChain(MessageProcessor... processors)\n    {\n        super(null, new ArrayList(Arrays.asList(processors)));\n    }","commit_id":"5b1ab7f03e1a09a09d16a43d00e76c3e4ad73470","url":"https://github.com/mulesoft/mule"},{"original_method":"protected ServerNotificationManager createNotificationManager()\n    {\n        ServerNotificationManager manager = new ServerNotificationManager();\n        manager.addInterfaceToType(MuleContextNotificationListener.class,\n                                   MuleContextNotification.class);\n        manager.addInterfaceToType(ModelNotificationListener.class, ModelNotification.class);\n        manager.addInterfaceToType(RoutingNotificationListener.class, RoutingNotification.class);\n        manager.addInterfaceToType(ServiceNotificationListener.class,\n                                   ServiceNotification.class);\n        manager.addInterfaceToType(SecurityNotificationListener.class,\n                                   SecurityNotification.class);\n        manager.addInterfaceToType(ManagementNotificationListener.class,\n                                   ManagementNotification.class);\n        manager.addInterfaceToType(CustomNotificationListener.class, CustomNotification.class);\n        manager.addInterfaceToType(ConnectionNotificationListener.class,\n                                   ConnectionNotification.class);\n        manager.addInterfaceToType(RegistryNotificationListener.class,\n                                   RegistryNotification.class);\n        manager.addInterfaceToType(ExceptionNotificationListener.class,\n                                   ExceptionNotification.class);\n        manager.addInterfaceToType(TransactionNotificationListener.class,\n                                   TransactionNotification.class);\n        manager.addInterfaceToType(PipelineMessageNotificationListener.class,\n                                   PipelineMessageNotification.class);\n        manager.addInterfaceToType(AsyncMessageNotificationListener.class, \n                                   AsyncMessageNotification.class);\n        manager.addInterfaceToType(ClusterNodeNotificationListener.class, ClusterNodeNotification.class);\n        return manager;\n    }","id":48872,"modified_method":"protected ServerNotificationManager createNotificationManager()\n    {\n        ServerNotificationManager manager = new ServerNotificationManager();\n        manager.addInterfaceToType(MuleContextNotificationListener.class,\n                                   MuleContextNotification.class);\n        manager.addInterfaceToType(ModelNotificationListener.class, ModelNotification.class);\n        manager.addInterfaceToType(RoutingNotificationListener.class, RoutingNotification.class);\n        manager.addInterfaceToType(ServiceNotificationListener.class,\n                                   ServiceNotification.class);\n        manager.addInterfaceToType(SecurityNotificationListener.class,\n                                   SecurityNotification.class);\n        manager.addInterfaceToType(ManagementNotificationListener.class,\n                                   ManagementNotification.class);\n        manager.addInterfaceToType(CustomNotificationListener.class, CustomNotification.class);\n        manager.addInterfaceToType(ConnectionNotificationListener.class,\n                                   ConnectionNotification.class);\n        manager.addInterfaceToType(RegistryNotificationListener.class,\n                                   RegistryNotification.class);\n        manager.addInterfaceToType(ExceptionNotificationListener.class,\n                                   ExceptionNotification.class);\n        manager.addInterfaceToType(ExceptionStrategyNotificationListener.class,\n                                   ExceptionStrategyNotification.class);\n        manager.addInterfaceToType(TransactionNotificationListener.class,\n                                   TransactionNotification.class);\n        manager.addInterfaceToType(PipelineMessageNotificationListener.class,\n                                   PipelineMessageNotification.class);\n        manager.addInterfaceToType(AsyncMessageNotificationListener.class, \n                                   AsyncMessageNotification.class);\n        manager.addInterfaceToType(ClusterNodeNotificationListener.class, ClusterNodeNotification.class);\n        return manager;\n    }","commit_id":"5b1ab7f03e1a09a09d16a43d00e76c3e4ad73470","url":"https://github.com/mulesoft/mule"},{"original_method":"public void setEnrichmentMessageProcessor(MessageProcessor enrichmentProcessor)\n    {\n        this.enrichmentProcessor = enrichmentProcessor;\n    }","id":48873,"modified_method":"public void setEnrichmentMessageProcessor(MessageProcessor enrichmentProcessor)\n    {\n        if (!(enrichmentProcessor instanceof MessageProcessorChain))\n        {\n            this.enrichmentProcessor = MessageProcessors.singletonChain(enrichmentProcessor);\n        }\n        else\n        {\n            this.enrichmentProcessor = enrichmentProcessor;\n        }\n    }","commit_id":"5b1ab7f03e1a09a09d16a43d00e76c3e4ad73470","url":"https://github.com/mulesoft/mule"},{"original_method":"/**\n     * For spring\n     */\n    public void setMessageProcessor(MessageProcessor enrichmentProcessor)\n    {\n        this.enrichmentProcessor = enrichmentProcessor;\n    }","id":48874,"modified_method":"/**\n     * For spring\n     */\n    public void setMessageProcessor(MessageProcessor enrichmentProcessor)\n    {\n        setEnrichmentMessageProcessor(enrichmentProcessor);\n    }","commit_id":"5b1ab7f03e1a09a09d16a43d00e76c3e4ad73470","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public RestrictedNode getSpecification()\n    {\n        return new Node()\n                //singleMP\n                .serial(prePost())\n\n                //processorChain\n                .serial(prePost()) //logger-1\n                .serial(prePost()) //logger-2\n\n                //custom-processor\n                .serial(prePost())\n                .serial(prePost())\n\n                //choice\n                .serial(pre()) //choice\n                .serial(prePost())    //otherwise-logger\n                .serial(post())\n\n                //all\n                .serial(pre())\n                .serial(prePost())\n                .serial(prePost())\n                .serial(post())\n                .serial(prePost())    //MP after the Scope\n\n                //foreach\n                .serial(pre()) //foreach\n                .serial(prePost())    //logger-loop-1\n                .serial(prePost())    //logger-loop-2\n                .serial(post())\n                .serial(prePost())    //MP after the Scope\n\n                //enricher\n                .serial(prePost()) //append-string\n                .serial(pre()) //chain\n                .serial(prePost())\n                .serial(prePost())\n                .serial(post())\n\n                ////async             //This is unstable\n                //.serial(prePost())\n                //.serial(prePost())\n                //.serial(prePost())\n\n                //filter\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n\n                //idempotent-message-filter\n                .serial(pre())          //open message filter\n                .serial(prePost())      //message processor\n                .serial(post())         //close mf\n\n                //idempotent-secure-hash-message-filter\n                .serial(pre())          //open message filter\n                .serial(prePost())      //message processor\n                .serial(post())         //close mf\n\n                //subflow\n                .serial(prePost())\n                .serial(pre())\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n                .serial(post())\n\n                //catch-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //rollback-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //choice-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //request-reply\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n                .serial(prePost())\n\n                //composite-source\n                .serial(prePost()) //call throw cs1\n                .serial(prePost())\n                .serial(prePost())\n                .serial(prePost()) //call throw cs4\n\n                //first-successful\n                .serial(prePost())\n                .serial(prePost())\n\n                //round-robin\n                .serial(prePost())\n                .serial(prePost())\n\n                //recipient-list\n                .serial(prePost())  //send message to the requested endpoint\n                .serial(prePost())  //log message\n\n                //collection-aggregator\n                .serial(pre())      //open Splitter, unpacks three messages\n                .serial(prePost())  //1st message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //2nd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //3rd message on Logger\n                .serial(prePost())  //gets to Aggregator and packs the three messages, then close\n                .serial(post())     //close Splitter\n\n                //custom-aggregator\n                .serial(pre())      //open Splitter, unpacks three messages\n                .serial(prePost())  //1st message, open Aggregator\n                .serial(prePost())  //2nd message\n                .serial(pre())      //3rd message, packs the three messages\n                .serial(prePost())  //Logger process packed message\n                .serial(post())     //close Aggregator\n                .serial(post())     //close Splitter\n\n                //chunk-aggregator\n                .serial(pre())      //start Splitter\n                .serial(prePost())  //1st message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //2nd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //3rd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //4th message on Logger\n                .serial(pre())      //gets to Aggregator and packs four messages\n                .serial(prePost())  //packed message get to the second Logger\n                .serial(post())     //close Aggregator\n                .serial(post())     //close Splitter\n\n                //wire-tap\n                .serial(prePost())\n                .serial(prePost())\n\n                ;\n    }","id":48875,"modified_method":"@Override\n    public RestrictedNode getSpecification()\n    {\n        return new Node()\n                //singleMP\n                .serial(prePost())\n\n                //processorChain\n                .serial(prePost()) //logger-1\n                .serial(prePost()) //logger-2\n\n                //custom-processor\n                .serial(prePost())\n                .serial(prePost())\n\n                //choice\n                .serial(pre()) //choice\n                .serial(prePost())    //otherwise-logger\n                .serial(post())\n\n                //all\n                .serial(pre())\n                .serial(prePost())\n                .serial(prePost())\n                .serial(post())\n                .serial(prePost())    //MP after the Scope\n\n                //foreach\n                .serial(pre()) //foreach\n                .serial(prePost())    //logger-loop-1\n                .serial(prePost())    //logger-loop-2\n                .serial(post())\n                .serial(prePost())    //MP after the Scope\n\n                //enricher\n                .serial(pre()) //append-string\n                .serial(prePost())\n                .serial(post())\n                .serial(pre()) //chain\n                .serial(prePost())\n                .serial(prePost())\n                .serial(post())\n\n                ////async             //This is unstable\n                //.serial(prePost())\n                //.serial(prePost())\n                //.serial(prePost())\n\n                //filter\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n\n                //idempotent-message-filter\n                .serial(pre())          //open message filter\n                .serial(prePost())      //message processor\n                .serial(post())         //close mf\n\n                //idempotent-secure-hash-message-filter\n                .serial(pre())          //open message filter\n                .serial(prePost())      //message processor\n                .serial(post())         //close mf\n\n                //subflow\n                .serial(prePost())\n                .serial(pre())\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n                .serial(post())\n\n                //catch-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //rollback-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //choice-es\n                .serial(prePost())\n                .serial(prePost())\n\n                //request-reply\n                .serial(pre())\n                .serial(prePost())\n                .serial(post())\n                .serial(prePost())\n\n                //composite-source\n                .serial(prePost()) //call throw cs1\n                .serial(prePost())\n                .serial(prePost())\n                .serial(prePost()) //call throw cs4\n\n                //first-successful\n                .serial(prePost())\n                .serial(prePost())\n\n                //round-robin\n                .serial(prePost())\n                .serial(prePost())\n\n                //recipient-list\n                .serial(prePost())  //send message to the requested endpoint\n                .serial(prePost())  //log message\n\n                //collection-aggregator\n                .serial(pre())      //open Splitter, unpacks three messages\n                .serial(prePost())  //1st message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //2nd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //3rd message on Logger\n                .serial(prePost())  //gets to Aggregator and packs the three messages, then close\n                .serial(post())     //close Splitter\n\n                //custom-aggregator\n                .serial(pre())      //open Splitter, unpacks three messages\n                .serial(prePost())  //1st message, open Aggregator\n                .serial(prePost())  //2nd message\n                .serial(pre())      //3rd message, packs the three messages\n                .serial(prePost())  //Logger process packed message\n                .serial(post())     //close Aggregator\n                .serial(post())     //close Splitter\n\n                //chunk-aggregator\n                .serial(pre())      //start Splitter\n                .serial(prePost())  //1st message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //2nd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //3rd message on Logger\n                .serial(prePost())  //gets to Aggregator\n                .serial(prePost())  //4th message on Logger\n                .serial(pre())      //gets to Aggregator and packs four messages\n                .serial(prePost())  //packed message get to the second Logger\n                .serial(post())     //close Aggregator\n                .serial(post())     //close Splitter\n\n                //wire-tap\n                .serial(prePost())\n                .serial(prePost())\n\n                ;\n    }","commit_id":"5b1ab7f03e1a09a09d16a43d00e76c3e4ad73470","url":"https://github.com/mulesoft/mule"},{"original_method":"public void run()\n    {\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBuffer.wrap(new byte[]{}),\n                                                                                      ByteBuffer.wrap(new byte[] {}),\n                                                                                      false, session.getColumnsPerKey()));\n\n        List<String> values = super.generateValues();\n        ColumnParent parent = new ColumnParent(\"Standard1\");\n        int expectedPerValue = session.getNumKeys() / values.size();\n\n        ByteBuffer columnName = ByteBuffer.wrap(\"C1\".getBytes());\n\n        for (int i = range.begins(); i < range.size(); i++)\n        {\n            int received = 0;\n\n            String startOffset = \"0\";\n            ByteBuffer value = ByteBuffer.wrap(values.get(i % values.size()).getBytes());\n\n            IndexExpression expression = new IndexExpression(columnName, IndexOperator.EQ, value);\n\n            while (received < expectedPerValue)\n            {\n                IndexClause clause = new IndexClause(Arrays.asList(expression), ByteBuffer.wrap(startOffset.getBytes()),\n                                                                                session.getKeysPerCall());\n\n                List<KeySlice> results = null;\n                long start = System.currentTimeMillis();\n\n                try\n                {\n                    results = client.get_indexed_slices(parent, clause, predicate, session.getConsistencyLevel());\n\n                    if (results.size() == 0)\n                    {\n                        System.err.printf(\"No indexed values from offset received: %s%n\", startOffset);\n\n                        if (!session.ignoreErrors())\n                            break;\n                    }\n                }\n                catch (Exception e)\n                {\n                    System.err.printf(\"Error on get_indexed_slices call for offset  %s - %s%n\", startOffset, getExceptionMessage(e));\n\n                    if (!session.ignoreErrors())\n                        return;\n                }\n\n                received += results.size();\n\n                // convert max key found back to an integer, and increment it\n                startOffset = String.format(format, (1 + getMaxKey(results)));\n\n                session.operationCount.getAndIncrement(index);\n                session.keyCount.getAndAdd(index, results.size());\n                session.latencies.getAndAdd(index, System.currentTimeMillis() - start);\n            }\n        }\n    }","id":48876,"modified_method":"public void run()\n    {\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBuffer.wrap(new byte[]{}),\n                                                                                      ByteBuffer.wrap(new byte[] {}),\n                                                                                      false, session.getColumnsPerKey()));\n\n        List<String> values = super.generateValues();\n        ColumnParent parent = new ColumnParent(\"Standard1\");\n        int expectedPerValue = session.getNumKeys() / values.size();\n\n        ByteBuffer columnName = ByteBuffer.wrap(\"C1\".getBytes());\n\n        for (int i = range.begins(); i < range.size(); i++)\n        {\n            int received = 0;\n\n            String startOffset = \"0\";\n            ByteBuffer value = ByteBuffer.wrap(values.get(i % values.size()).getBytes());\n\n            IndexExpression expression = new IndexExpression(columnName, IndexOperator.EQ, value);\n\n            while (received < expectedPerValue)\n            {\n                IndexClause clause = new IndexClause(Arrays.asList(expression), ByteBuffer.wrap(startOffset.getBytes()),\n                                                                                session.getKeysPerCall());\n\n                List<KeySlice> results = null;\n                long start = System.currentTimeMillis();\n\n                boolean success = false;\n                String exceptionMessage = null;\n\n                for (int t = 0; t < session.getRetryTimes(); t++)\n                {\n                    if (success)\n                        break;\n\n                    try\n                    {\n                        results = client.get_indexed_slices(parent, clause, predicate, session.getConsistencyLevel());\n                        success = (results.size() != 0);\n                    }\n                    catch (Exception e)\n                    {\n                        exceptionMessage = getExceptionMessage(e);\n                        success = false;\n                    }\n                }\n\n                if (!success)\n                {\n                    System.err.printf(\"Thread [%d] retried %d times - error on calling get_indexed_slices for offset %s %s%n\",\n                                                                                              index,\n                                                                                              session.getRetryTimes(),\n                                                                                              startOffset,\n                                                                                              (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\");\n\n                    if (!session.ignoreErrors())\n                        return;\n                }\n\n                received += results.size();\n\n                // convert max key found back to an integer, and increment it\n                startOffset = String.format(format, (1 + getMaxKey(results)));\n\n                session.operationCount.getAndIncrement(index);\n                session.keyCount.getAndAdd(index, results.size());\n                session.latencies.getAndAdd(index, System.currentTimeMillis() - start);\n            }\n        }\n    }","commit_id":"e06c26b7a3a0bb31273225f3c41004ba5992fa70","url":"https://github.com/apache/cassandra"},{"original_method":"public void run()\n    {\n        List<String> values  = generateValues();\n        List<Column> columns = new ArrayList<Column>();\n        List<SuperColumn> superColumns = new ArrayList<SuperColumn>();\n\n        // format used for keys\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n\n        // columns = [Column('C' + str(j), 'unset', time.time() * 1000000) for j in xrange(columns_per_key)]\n        for (int i = 0; i < session.getColumnsPerKey(); i++)\n        {\n            byte[] columnName = (\"C\" + Integer.toString(i)).getBytes();\n            columns.add(new Column(ByteBuffer.wrap(columnName), ByteBuffer.wrap(new byte[] {}), System.currentTimeMillis()));\n        }\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            // supers = [SuperColumn('S' + str(j), columns) for j in xrange(supers_per_key)]\n            for (int i = 0; i < session.getSuperColumns(); i++)\n            {\n                String superColumnName = \"S\" + Integer.toString(i);\n                superColumns.add(new SuperColumn(ByteBuffer.wrap(superColumnName.getBytes()), columns));\n            }\n        }\n\n        for (int i : range)\n        {\n            ByteBuffer key = ByteBuffer.wrap(String.format(format, i).getBytes());\n            Map<ByteBuffer, Map<String, List<Mutation>>> record = new HashMap<ByteBuffer, Map<String, List<Mutation>>>();\n\n            record.put(key, session.getColumnFamilyType() == ColumnFamilyType.Super\n                                                          ? getSuperColumnsMutationMap(superColumns)\n                                                          : getColumnsMutationMap(columns));\n\n            String value = values.get(i % values.size());\n\n            for (Column c : columns)\n                c.value = ByteBuffer.wrap(value.getBytes());\n\n            long start = System.currentTimeMillis();\n\n            try\n            {\n                client.batch_mutate(record, session.getConsistencyLevel());\n            }\n            catch (Exception e)\n            {\n                try\n                {\n                    System.err.printf(\"Error while inserting key %s - %s%n\", ByteBufferUtil.string(key), getExceptionMessage(e));\n                }\n                catch (CharacterCodingException e1)\n                {\n                    throw new AssertionError(e1); // keys are valid strings\n                }\n\n                if (!session.ignoreErrors())\n                    return;\n            }\n\n            session.operationCount.getAndIncrement(index);\n            session.keyCount.getAndIncrement(index);\n            session.latencies.getAndAdd(index, System.currentTimeMillis() - start);\n        }\n    }","id":48877,"modified_method":"public void run()\n    {\n        List<String> values  = generateValues();\n        List<Column> columns = new ArrayList<Column>();\n        List<SuperColumn> superColumns = new ArrayList<SuperColumn>();\n\n        // format used for keys\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n\n        // columns = [Column('C' + str(j), 'unset', time.time() * 1000000) for j in xrange(columns_per_key)]\n        for (int i = 0; i < session.getColumnsPerKey(); i++)\n        {\n            byte[] columnName = (\"C\" + Integer.toString(i)).getBytes();\n            columns.add(new Column(ByteBuffer.wrap(columnName), ByteBuffer.wrap(new byte[] {}), System.currentTimeMillis()));\n        }\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            // supers = [SuperColumn('S' + str(j), columns) for j in xrange(supers_per_key)]\n            for (int i = 0; i < session.getSuperColumns(); i++)\n            {\n                String superColumnName = \"S\" + Integer.toString(i);\n                superColumns.add(new SuperColumn(ByteBuffer.wrap(superColumnName.getBytes()), columns));\n            }\n        }\n\n        for (int i : range)\n        {\n            String rawKey = String.format(format, i);\n            ByteBuffer key = ByteBuffer.wrap(rawKey.getBytes());\n            Map<ByteBuffer, Map<String, List<Mutation>>> record = new HashMap<ByteBuffer, Map<String, List<Mutation>>>();\n\n            record.put(key, session.getColumnFamilyType() == ColumnFamilyType.Super\n                                                          ? getSuperColumnsMutationMap(superColumns)\n                                                          : getColumnsMutationMap(columns));\n\n            String value = values.get(i % values.size());\n\n            for (Column c : columns)\n                c.value = ByteBuffer.wrap(value.getBytes());\n\n            long start = System.currentTimeMillis();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    client.batch_mutate(record, session.getConsistencyLevel());\n                    success = true;\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                System.err.printf(\"Thread [%d] retried %d times - error inserting key %s %s%n\", index,\n                                                                                                session.getRetryTimes(),\n                                                                                                rawKey,\n                                                                                                (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\");\n\n                if (!session.ignoreErrors())\n                    break;\n            }\n\n            session.operationCount.getAndIncrement(index);\n            session.keyCount.getAndIncrement(index);\n            session.latencies.getAndAdd(index, System.currentTimeMillis() - start);\n        }\n    }","commit_id":"e06c26b7a3a0bb31273225f3c41004ba5992fa70","url":"https://github.com/apache/cassandra"},{"original_method":"public void run()\n    {\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBuffer.wrap(new byte[]{}),\n                                                                                      ByteBuffer.wrap(new byte[] {}),\n                                                                                      false, session.getColumnsPerKey()));\n\n        int offset = index * session.getKeysPerThread();\n        Map<ByteBuffer,List<ColumnOrSuperColumn>> results = null;\n        int count  = (((index + 1) * session.getKeysPerThread()) - offset) / session.getKeysPerCall();\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            for (int i = 0; i < count; i++)\n            {\n                List<ByteBuffer> keys = generateKeys(offset, offset + session.getKeysPerCall());\n\n                for (int j = 0; j < session.getSuperColumns(); j++)\n                {\n                    ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column((\"S\" + j).getBytes());\n\n                    long start = System.currentTimeMillis();\n\n                    try\n                    {\n                        results = client.multiget_slice(keys, parent, predicate, session.getConsistencyLevel());\n\n                        if (results.size() == 0)\n                        {\n                            System.err.printf(\"Keys %s were not found.%n\", keys);\n\n                            if (!session.ignoreErrors())\n                                break;\n                        }\n                    }\n                    catch (Exception e)\n                    {\n                        System.err.printf(\"Error on multiget_slice call - %s%n\", getExceptionMessage(e));\n\n                        if (!session.ignoreErrors())\n                            return;\n                    }\n\n                    session.operationCount.getAndIncrement(index);\n                    session.keyCount.getAndAdd(index, keys.size());\n                    session.latencies.getAndAdd(index, System.currentTimeMillis() - start);\n\n                    offset += session.getKeysPerCall();\n                }\n            }\n        }\n        else\n        {\n            ColumnParent parent = new ColumnParent(\"Standard1\");\n\n            for (int i = 0; i < count; i++)\n            {\n                List<ByteBuffer> keys = generateKeys(offset, offset + session.getKeysPerCall());\n\n                long start = System.currentTimeMillis();\n\n                try\n                {\n                    results = client.multiget_slice(keys, parent, predicate, session.getConsistencyLevel());\n\n                    if (results.size() == 0)\n                    {\n                        System.err.printf(\"Keys %s were not found.%n\", keys);\n\n                        if (!session.ignoreErrors())\n                            break;\n                    }\n                }\n                catch (Exception e)\n                {\n                    System.err.printf(\"Error on multiget_slice call - %s%n\", getExceptionMessage(e));\n\n                    if (!session.ignoreErrors())\n                        return;\n                }\n\n                session.operationCount.getAndIncrement(index);\n                session.keyCount.getAndAdd(index, keys.size());\n                session.latencies.getAndAdd(index, System.currentTimeMillis() - start);\n\n                offset += session.getKeysPerCall();\n            }\n        }\n    }","id":48878,"modified_method":"public void run()\n    {\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBuffer.wrap(new byte[]{}),\n                                                                                      ByteBuffer.wrap(new byte[] {}),\n                                                                                      false, session.getColumnsPerKey()));\n\n        int offset = index * session.getKeysPerThread();\n        Map<ByteBuffer,List<ColumnOrSuperColumn>> results = null;\n        int count  = (((index + 1) * session.getKeysPerThread()) - offset) / session.getKeysPerCall();\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            for (int i = 0; i < count; i++)\n            {\n                List<ByteBuffer> keys = generateKeys(offset, offset + session.getKeysPerCall());\n\n                for (int j = 0; j < session.getSuperColumns(); j++)\n                {\n                    ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column((\"S\" + j).getBytes());\n\n                    long start = System.currentTimeMillis();\n\n                    boolean success = false;\n                    String exceptionMessage = null;\n\n                    for (int t = 0; t < session.getRetryTimes(); t++)\n                    {\n                        if (success)\n                            break;\n\n                        try\n                        {\n                            results = client.multiget_slice(keys, parent, predicate, session.getConsistencyLevel());\n                            success = (results.size() != 0);\n                        }\n                        catch (Exception e)\n                        {\n                            exceptionMessage = getExceptionMessage(e);\n                        }\n                    }\n\n                    if (!success)\n                    {\n                        System.err.printf(\"Thread [%d] retried %d times - error on calling multiget_slice for keys %s %s%n\",\n                                                                                              index,\n                                                                                              session.getRetryTimes(),\n                                                                                              keys,\n                                                                                              (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\");\n\n                        if (!session.ignoreErrors())\n                            return;\n                    }\n\n                    session.operationCount.getAndIncrement(index);\n                    session.keyCount.getAndAdd(index, keys.size());\n                    session.latencies.getAndAdd(index, System.currentTimeMillis() - start);\n\n                    offset += session.getKeysPerCall();\n                }\n            }\n        }\n        else\n        {\n            ColumnParent parent = new ColumnParent(\"Standard1\");\n\n            for (int i = 0; i < count; i++)\n            {\n                List<ByteBuffer> keys = generateKeys(offset, offset + session.getKeysPerCall());\n\n                long start = System.currentTimeMillis();\n\n                boolean success = false;\n                String exceptionMessage = null;\n\n                for (int t = 0; t < session.getRetryTimes(); t++)\n                {\n                    if (success)\n                        break;\n\n                    try\n                    {\n                        results = client.multiget_slice(keys, parent, predicate, session.getConsistencyLevel());\n                        success = (results.size() != 0);\n                    }\n                    catch (Exception e)\n                    {\n                        exceptionMessage = getExceptionMessage(e);\n                        success = false;\n                    }\n                }\n\n                if (!success)\n                {\n                    System.err.printf(\"Thread [%d] retried %d times - error on calling multiget_slice for keys %s %s%n\",\n                                                                                        index,\n                                                                                        session.getRetryTimes(),\n                                                                                        keys,\n                                                                                        (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\");\n\n                    if (!session.ignoreErrors())\n                        return;\n                }\n\n                session.operationCount.getAndIncrement(index);\n                session.keyCount.getAndAdd(index, keys.size());\n                session.latencies.getAndAdd(index, System.currentTimeMillis() - start);\n\n                offset += session.getKeysPerCall();\n            }\n        }\n    }","commit_id":"e06c26b7a3a0bb31273225f3c41004ba5992fa70","url":"https://github.com/apache/cassandra"},{"original_method":"public void run()\n    {\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n\n        // initial values\n        int current = range.begins();\n        int limit   = range.limit();\n        int count   = session.getColumnsPerKey();\n        int last    = current + session.getKeysPerCall();\n\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBuffer.wrap(new byte[] {}),\n                                                                                      ByteBuffer.wrap(new byte[] {}),\n                                                                                      false, count));\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            while (current < limit)\n            {\n                byte[] start = String.format(format, current).getBytes();\n                byte[] end   = String.format(format, last).getBytes();\n\n                List<KeySlice> slices = new ArrayList<KeySlice>();\n                KeyRange range = new KeyRange(count).setStart_key(start).setEnd_key(end);\n\n                for (int i = 0; i < session.getSuperColumns(); i++)\n                {\n                    String superColumnName = \"S\" + Integer.toString(i);\n                    ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column(ByteBuffer.wrap(superColumnName.getBytes()));\n\n                    long startTime = System.currentTimeMillis();\n\n                    try\n                    {\n                        slices = client.get_range_slices(parent, predicate, range, session.getConsistencyLevel());\n\n                        if (slices.size() == 0)\n                        {\n                            System.err.printf(\"Range %s->%s not found in Super Column %s.%n\", new String(start), new String(end), superColumnName);\n\n                            if (!session.ignoreErrors())\n                                break;\n                        }\n                    }\n                    catch (Exception e)\n                    {\n                        System.err.printf(\"Error while reading Super Column %s - %s%n\", superColumnName, getExceptionMessage(e));\n\n                        if (!session.ignoreErrors())\n                            return;\n                    }\n\n                    session.operationCount.getAndIncrement(index);\n                    session.latencies.getAndAdd(index, System.currentTimeMillis() - startTime);\n                }\n\n                current += slices.size() + 1;\n                last = current + slices.size() + 1;\n                session.keyCount.getAndAdd(index, slices.size());\n            }\n        }\n        else\n        {\n            ColumnParent parent = new ColumnParent(\"Standard1\");\n\n            while (current < limit)\n            {\n                byte[] start = String.format(format, current).getBytes();\n                byte[] end   = String.format(format, last).getBytes();\n\n                List<KeySlice> slices = new ArrayList<KeySlice>();\n                KeyRange range = new KeyRange(count).setStart_key(start).setEnd_key(end);\n\n                long startTime = System.currentTimeMillis();\n\n                try\n                {\n                    slices = client.get_range_slices(parent, predicate, range, session.getConsistencyLevel());\n\n                    if (slices.size() == 0)\n                    {\n                        System.err.printf(\"Range %s->%s not found.%n\", String.format(format, current), String.format(format, last));\n\n                        if (!session.ignoreErrors())\n                            break;\n                    }\n                }\n                catch (Exception e)\n                {\n                    System.err.printf(\"Error while reading range %s->%s - %s%n\", String.format(format, current), String.format(format, last), getExceptionMessage(e));\n\n                    if (!session.ignoreErrors())\n                        return;\n                }\n\n                current += slices.size() + 1;\n                last = current + slices.size() + 1;\n\n                session.operationCount.getAndIncrement(index);\n                session.keyCount.getAndAdd(index, slices.size());\n                session.latencies.getAndAdd(index, System.currentTimeMillis() - startTime);\n            }\n        }\n    }","id":48879,"modified_method":"public void run()\n    {\n        String format = \"%0\" + session.getTotalKeysLength() + \"d\";\n\n        // initial values\n        int current = range.begins();\n        int limit   = range.limit();\n        int count   = session.getColumnsPerKey();\n        int last    = current + session.getKeysPerCall();\n\n        SlicePredicate predicate = new SlicePredicate().setSlice_range(new SliceRange(ByteBuffer.wrap(new byte[] {}),\n                                                                                      ByteBuffer.wrap(new byte[] {}),\n                                                                                      false, count));\n\n        if (session.getColumnFamilyType() == ColumnFamilyType.Super)\n        {\n            while (current < limit)\n            {\n                byte[] start = String.format(format, current).getBytes();\n                byte[] end   = String.format(format, last).getBytes();\n\n                List<KeySlice> slices = new ArrayList<KeySlice>();\n                KeyRange range = new KeyRange(count).setStart_key(start).setEnd_key(end);\n\n                for (int i = 0; i < session.getSuperColumns(); i++)\n                {\n                    String superColumnName = \"S\" + Integer.toString(i);\n                    ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column(ByteBuffer.wrap(superColumnName.getBytes()));\n\n                    long startTime = System.currentTimeMillis();\n\n                    boolean success = false;\n                    String exceptionMessage = null;\n\n                    for (int t = 0; t < session.getRetryTimes(); t++)\n                    {\n                        try\n                        {\n                            slices = client.get_range_slices(parent, predicate, range, session.getConsistencyLevel());\n                            success = (slices.size() != 0);\n                        }\n                        catch (Exception e)\n                        {\n                            exceptionMessage = getExceptionMessage(e);\n                            success = false;\n                        }\n                    }\n\n                    if (!success)\n                    {\n                        System.err.printf(\"Thread [%d] retried %d times - error on calling get_range_slices for range %s->%s %s%n\",\n                                                                                            index,\n                                                                                            session.getRetryTimes(),\n                                                                                            new String(start),\n                                                                                            new String(end),\n                                                                                            (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\");\n\n                        if (!session.ignoreErrors())\n                            return;\n                    }\n\n                    session.operationCount.getAndIncrement(index);\n                    session.latencies.getAndAdd(index, System.currentTimeMillis() - startTime);\n                }\n\n                current += slices.size() + 1;\n                last = current + slices.size() + 1;\n                session.keyCount.getAndAdd(index, slices.size());\n            }\n        }\n        else\n        {\n            ColumnParent parent = new ColumnParent(\"Standard1\");\n\n            while (current < limit)\n            {\n                byte[] start = String.format(format, current).getBytes();\n                byte[] end   = String.format(format, last).getBytes();\n\n                List<KeySlice> slices = new ArrayList<KeySlice>();\n                KeyRange range = new KeyRange(count).setStart_key(start).setEnd_key(end);\n\n                long startTime = System.currentTimeMillis();\n\n                boolean success = false;\n                String exceptionMessage = null;\n\n                for (int t = 0; t < session.getRetryTimes(); t++)\n                {\n                    if (success)\n                        break;\n\n                    try\n                    {\n                        slices = client.get_range_slices(parent, predicate, range, session.getConsistencyLevel());\n                        success = (slices.size() != 0);\n                    }\n                    catch (Exception e)\n                    {\n                        exceptionMessage = getExceptionMessage(e);\n                        success = false;\n                    }\n                }\n\n                if (!success)\n                {\n                    System.err.printf(\"Thread [%d] retried %d times - error on calling get_indexed_slices for range %s->%s %s%n\",\n                                                                                              index,\n                                                                                              session.getRetryTimes(),\n                                                                                              new String(start),\n                                                                                              new String(end),\n                                                                                              (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\");\n\n                    if (!session.ignoreErrors())\n                        return;\n                }\n\n                current += slices.size() + 1;\n                last = current + slices.size() + 1;\n\n                session.operationCount.getAndIncrement(index);\n                session.keyCount.getAndAdd(index, slices.size());\n                session.latencies.getAndAdd(index, System.currentTimeMillis() - startTime);\n            }\n        }\n    }","commit_id":"e06c26b7a3a0bb31273225f3c41004ba5992fa70","url":"https://github.com/apache/cassandra"},{"original_method":"private void runColumnReader(SlicePredicate predicate)\n    {\n        ColumnParent parent = new ColumnParent(\"Standard1\");\n\n        for (int i = 0; i < session.getKeysPerThread(); i++)\n        {\n            byte[] key = generateKey();\n            ByteBuffer keyBuffer = ByteBuffer.wrap(key);\n\n            long start = System.currentTimeMillis();\n\n            try\n            {\n                List<ColumnOrSuperColumn> columns;\n                columns = client.get_slice(keyBuffer, parent, predicate, session.getConsistencyLevel());\n\n                if (columns.size() == 0)\n                {\n                    System.err.println(String.format(\"Key %s not found.\", new String(key)));\n\n                    if (!session.ignoreErrors())\n                        break;\n                }\n            }\n            catch (Exception e)\n            {\n                System.err.printf(\"Error while reading key %s - %s%n\", new String(key), getExceptionMessage(e));\n\n                if (!session.ignoreErrors())\n                    break;\n            }\n\n            session.operationCount.getAndIncrement(index);\n            session.keyCount.getAndIncrement(index);\n            session.latencies.getAndAdd(index, System.currentTimeMillis() - start);\n        }\n    }","id":48880,"modified_method":"private void runColumnReader(SlicePredicate predicate)\n    {\n        ColumnParent parent = new ColumnParent(\"Standard1\");\n\n        for (int i = 0; i < session.getKeysPerThread(); i++)\n        {\n            byte[] key = generateKey();\n            ByteBuffer keyBuffer = ByteBuffer.wrap(key);\n\n            long start = System.currentTimeMillis();\n\n            boolean success = false;\n            String exceptionMessage = null;\n\n            for (int t = 0; t < session.getRetryTimes(); t++)\n            {\n                if (success)\n                    break;\n\n                try\n                {\n                    List<ColumnOrSuperColumn> columns;\n                    columns = client.get_slice(keyBuffer, parent, predicate, session.getConsistencyLevel());\n                    success = (columns.size() != 0);\n                }\n                catch (Exception e)\n                {\n                    exceptionMessage = getExceptionMessage(e);\n                    success = false;\n                }\n            }\n\n            if (!success)\n            {\n                System.err.printf(\"Thread [%d] retried %d times - error reading key %s %s%n\", index,\n                                                                                              session.getRetryTimes(),\n                                                                                              new String(key),\n                                                                                              (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\");\n\n                if (!session.ignoreErrors())\n                    return;\n            }\n\n            session.operationCount.getAndIncrement(index);\n            session.keyCount.getAndIncrement(index);\n            session.latencies.getAndAdd(index, System.currentTimeMillis() - start);\n        }\n    }","commit_id":"e06c26b7a3a0bb31273225f3c41004ba5992fa70","url":"https://github.com/apache/cassandra"},{"original_method":"private void runSuperColumnReader(SlicePredicate predicate)\n    {\n        for (int i = 0; i < session.getKeysPerThread(); i++)\n        {\n            ByteBuffer key = ByteBuffer.wrap(generateKey());\n\n            for (int j = 0; j < session.getSuperColumns(); j++)\n            {\n                String superColumn = 'S' + Integer.toString(j);\n                ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column(superColumn.getBytes());\n\n                long start = System.currentTimeMillis();\n\n                try\n                {\n                    List<ColumnOrSuperColumn> columns;\n                    columns = client.get_slice(key, parent, predicate, session.getConsistencyLevel());\n\n                    if (columns.size() == 0)\n                    {\n                        System.err.printf(\"Key %s not found in Super Column %s.%n\", ByteBufferUtil.string(key), superColumn);\n\n                        if (!session.ignoreErrors())\n                            break;\n                    }\n                }\n                catch (Exception e)\n                {\n                    try\n                    {\n                        System.err.printf(\"Error while reading Super Column %s key %s - %s%n\", superColumn, ByteBufferUtil.string(key), getExceptionMessage(e));\n                    }\n                    catch (CharacterCodingException e1)\n                    {\n                        throw new AssertionError(e1); // keys are valid string\n                    }\n\n                    if (!session.ignoreErrors())\n                        break;\n                }\n\n                session.operationCount.getAndIncrement(index);\n                session.keyCount.getAndIncrement(index);\n                session.latencies.getAndAdd(index, System.currentTimeMillis() - start);\n            }\n        }\n    }","id":48881,"modified_method":"private void runSuperColumnReader(SlicePredicate predicate)\n    {\n        for (int i = 0; i < session.getKeysPerThread(); i++)\n        {\n            byte[] rawKey = generateKey();\n            ByteBuffer key = ByteBuffer.wrap(rawKey);\n\n            for (int j = 0; j < session.getSuperColumns(); j++)\n            {\n                String superColumn = 'S' + Integer.toString(j);\n                ColumnParent parent = new ColumnParent(\"Super1\").setSuper_column(superColumn.getBytes());\n\n                long start = System.currentTimeMillis();\n\n                boolean success = false;\n                String exceptionMessage = null;\n\n                for (int t = 0; t < session.getRetryTimes(); t++)\n                {\n                    if (success)\n                        break;\n\n                    try\n                    {\n                        List<ColumnOrSuperColumn> columns;\n                        columns = client.get_slice(key, parent, predicate, session.getConsistencyLevel());\n                        success = (columns.size() != 0);\n                    }\n                    catch (Exception e)\n                    {\n                        exceptionMessage = getExceptionMessage(e);\n                        success = false;\n                    }\n                }\n\n                if (!success)\n                {\n                    System.err.printf(\"Thread [%d] retried %d times - error reading key %s %s%n\", index,\n                                                                                                  session.getRetryTimes(),\n                                                                                                  new String(rawKey),\n                                                                                                  (exceptionMessage == null) ? \"\" : \"(\" + exceptionMessage + \")\");\n\n                    if (!session.ignoreErrors())\n                        return;\n                }\n\n                session.operationCount.getAndIncrement(index);\n                session.keyCount.getAndIncrement(index);\n                session.latencies.getAndAdd(index, System.currentTimeMillis() - start);\n            }\n        }\n    }","commit_id":"e06c26b7a3a0bb31273225f3c41004ba5992fa70","url":"https://github.com/apache/cassandra"},{"original_method":"public Session(String[] arguments) throws IllegalArgumentException\n    {\n        float STDev = 0.1f;\n        CommandLineParser parser = new PosixParser();\n\n        try\n        {\n            CommandLine cmd = parser.parse(availableOptions, arguments);\n\n            if (cmd.hasOption(\"h\"))\n                throw new IllegalArgumentException(\"help\");\n\n            if (cmd.hasOption(\"n\"))\n                numKeys = Integer.parseInt(cmd.getOptionValue(\"n\"));\n\n            if (cmd.hasOption(\"N\"))\n                skipKeys = Float.parseFloat(cmd.getOptionValue(\"N\"));\n\n            if (cmd.hasOption(\"t\"))\n                threads = Integer.parseInt(cmd.getOptionValue(\"t\"));\n\n            if (cmd.hasOption(\"c\"))\n                columns = Integer.parseInt(cmd.getOptionValue(\"c\"));\n\n            if (cmd.hasOption(\"S\"))\n                columnSize = Integer.parseInt(cmd.getOptionValue(\"S\"));\n\n            if (cmd.hasOption(\"C\"))\n                cardinality = Integer.parseInt(cmd.getOptionValue(\"C\"));\n\n            if (cmd.hasOption(\"d\"))\n                nodes = cmd.getOptionValue(\"d\").split(\",\");\n\n            if (cmd.hasOption(\"D\"))\n            {\n                try\n                {\n                    String node = null;\n                    List<String> tmpNodes = new ArrayList<String>();\n                    BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(cmd.getOptionValue(\"D\"))));\n                    while ((node = in.readLine()) != null)\n                    {\n                        if (node.length() > 0)\n                            tmpNodes.add(node);\n                    }\n                    nodes = tmpNodes.toArray(new String[tmpNodes.size()]);\n                    in.close();\n                }\n                catch(IOException ioe)\n                {\n                    throw new RuntimeException(ioe);\n                }\n            }\n\n            if (cmd.hasOption(\"s\"))\n                STDev = Float.parseFloat(cmd.getOptionValue(\"s\"));\n\n            if (cmd.hasOption(\"r\"))\n                random = Boolean.parseBoolean(cmd.getOptionValue(\"r\"));\n\n            if (cmd.hasOption(\"f\"))\n            {\n                try\n                {\n                    out = new PrintStream(new FileOutputStream(cmd.getOptionValue(\"f\")));\n                }\n                catch (FileNotFoundException e)\n                {\n                    System.out.println(e.getMessage());\n                }\n            }\n\n            if (cmd.hasOption(\"p\"))\n                port = Integer.parseInt(cmd.getOptionValue(\"p\"));\n\n            if (cmd.hasOption(\"m\"))\n                unframed = Boolean.parseBoolean(cmd.getOptionValue(\"m\"));\n\n            if (cmd.hasOption(\"o\"))\n                operation = Stress.Operation.valueOf(cmd.getOptionValue(\"o\").toUpperCase());\n\n            if (cmd.hasOption(\"u\"))\n                superColumns = Integer.parseInt(cmd.getOptionValue(\"u\"));\n\n            if (cmd.hasOption(\"y\"))\n                columnFamilyType = ColumnFamilyType.valueOf(cmd.getOptionValue(\"y\"));\n\n            if (cmd.hasOption(\"k\"))\n                ignoreErrors = true;\n\n            if (cmd.hasOption(\"i\"))\n                progressInterval = Integer.parseInt(cmd.getOptionValue(\"i\"));\n\n            if (cmd.hasOption(\"g\"))\n                keysPerCall = Integer.parseInt(cmd.getOptionValue(\"g\"));\n\n            if (cmd.hasOption(\"l\"))\n                replicationFactor = Integer.parseInt(cmd.getOptionValue(\"l\"));\n\n            if (cmd.hasOption(\"e\"))\n                consistencyLevel = ConsistencyLevel.valueOf(cmd.getOptionValue(\"e\").toUpperCase());\n\n            if (cmd.hasOption(\"x\"))\n                indexType = IndexType.valueOf(cmd.getOptionValue(\"x\").toUpperCase());\n\n            if (cmd.hasOption(\"R\"))\n                replicationStrategy = cmd.getOptionValue(\"R\");\n\n            if (cmd.hasOption(\"O\"))\n            {\n                String[] pairs = StringUtils.split(cmd.getOptionValue(\"O\"), ',');\n\n                for (String pair : pairs)\n                {\n                    String[] keyAndValue = StringUtils.split(pair, ':');\n\n                    if (keyAndValue.length != 2)\n                        throw new RuntimeException(\"Invalid --strategy-properties value.\");\n\n                    replicationStrategyOptions.put(keyAndValue[0], keyAndValue[1]);\n                }\n            }\n        }\n        catch (ParseException e)\n        {\n            throw new IllegalArgumentException(e.getMessage(), e);\n        }\n\n        mean  = numKeys / 2;\n        sigma = numKeys * STDev;\n\n        operationCount = new AtomicIntegerArray(threads);\n        keyCount = new AtomicIntegerArray(threads);\n        latencies = new AtomicLongArray(threads);\n    }","id":48882,"modified_method":"public Session(String[] arguments) throws IllegalArgumentException\n    {\n        float STDev = 0.1f;\n        CommandLineParser parser = new PosixParser();\n\n        try\n        {\n            CommandLine cmd = parser.parse(availableOptions, arguments);\n\n            if (cmd.hasOption(\"h\"))\n                throw new IllegalArgumentException(\"help\");\n\n            if (cmd.hasOption(\"n\"))\n                numKeys = Integer.parseInt(cmd.getOptionValue(\"n\"));\n\n            if (cmd.hasOption(\"N\"))\n                skipKeys = Float.parseFloat(cmd.getOptionValue(\"N\"));\n\n            if (cmd.hasOption(\"t\"))\n                threads = Integer.parseInt(cmd.getOptionValue(\"t\"));\n\n            if (cmd.hasOption(\"c\"))\n                columns = Integer.parseInt(cmd.getOptionValue(\"c\"));\n\n            if (cmd.hasOption(\"S\"))\n                columnSize = Integer.parseInt(cmd.getOptionValue(\"S\"));\n\n            if (cmd.hasOption(\"C\"))\n                cardinality = Integer.parseInt(cmd.getOptionValue(\"C\"));\n\n            if (cmd.hasOption(\"d\"))\n                nodes = cmd.getOptionValue(\"d\").split(\",\");\n\n            if (cmd.hasOption(\"D\"))\n            {\n                try\n                {\n                    String node = null;\n                    List<String> tmpNodes = new ArrayList<String>();\n                    BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(cmd.getOptionValue(\"D\"))));\n                    while ((node = in.readLine()) != null)\n                    {\n                        if (node.length() > 0)\n                            tmpNodes.add(node);\n                    }\n                    nodes = tmpNodes.toArray(new String[tmpNodes.size()]);\n                    in.close();\n                }\n                catch(IOException ioe)\n                {\n                    throw new RuntimeException(ioe);\n                }\n            }\n\n            if (cmd.hasOption(\"s\"))\n                STDev = Float.parseFloat(cmd.getOptionValue(\"s\"));\n\n            if (cmd.hasOption(\"r\"))\n                random = Boolean.parseBoolean(cmd.getOptionValue(\"r\"));\n\n            if (cmd.hasOption(\"f\"))\n            {\n                try\n                {\n                    out = new PrintStream(new FileOutputStream(cmd.getOptionValue(\"f\")));\n                }\n                catch (FileNotFoundException e)\n                {\n                    System.out.println(e.getMessage());\n                }\n            }\n\n            if (cmd.hasOption(\"p\"))\n                port = Integer.parseInt(cmd.getOptionValue(\"p\"));\n\n            if (cmd.hasOption(\"m\"))\n                unframed = Boolean.parseBoolean(cmd.getOptionValue(\"m\"));\n\n            if (cmd.hasOption(\"o\"))\n                operation = Stress.Operation.valueOf(cmd.getOptionValue(\"o\").toUpperCase());\n\n            if (cmd.hasOption(\"u\"))\n                superColumns = Integer.parseInt(cmd.getOptionValue(\"u\"));\n\n            if (cmd.hasOption(\"y\"))\n                columnFamilyType = ColumnFamilyType.valueOf(cmd.getOptionValue(\"y\"));\n\n            if (cmd.hasOption(\"K\"))\n            {\n                retryTimes = Integer.valueOf(cmd.getOptionValue(\"K\"));\n\n                if (retryTimes <= 0)\n                {\n                    throw new RuntimeException(\"--keep-trying option value should be > 0\");\n                }\n            }\n\n            if (cmd.hasOption(\"k\"))\n            {\n                retryTimes = 1;\n                ignoreErrors = true;\n            }\n\n            if (cmd.hasOption(\"i\"))\n                progressInterval = Integer.parseInt(cmd.getOptionValue(\"i\"));\n\n            if (cmd.hasOption(\"g\"))\n                keysPerCall = Integer.parseInt(cmd.getOptionValue(\"g\"));\n\n            if (cmd.hasOption(\"l\"))\n                replicationFactor = Integer.parseInt(cmd.getOptionValue(\"l\"));\n\n            if (cmd.hasOption(\"e\"))\n                consistencyLevel = ConsistencyLevel.valueOf(cmd.getOptionValue(\"e\").toUpperCase());\n\n            if (cmd.hasOption(\"x\"))\n                indexType = IndexType.valueOf(cmd.getOptionValue(\"x\").toUpperCase());\n\n            if (cmd.hasOption(\"R\"))\n                replicationStrategy = cmd.getOptionValue(\"R\");\n\n            if (cmd.hasOption(\"O\"))\n            {\n                String[] pairs = StringUtils.split(cmd.getOptionValue(\"O\"), ',');\n\n                for (String pair : pairs)\n                {\n                    String[] keyAndValue = StringUtils.split(pair, ':');\n\n                    if (keyAndValue.length != 2)\n                        throw new RuntimeException(\"Invalid --strategy-properties value.\");\n\n                    replicationStrategyOptions.put(keyAndValue[0], keyAndValue[1]);\n                }\n            }\n        }\n        catch (ParseException e)\n        {\n            throw new IllegalArgumentException(e.getMessage(), e);\n        }\n\n        mean  = numKeys / 2;\n        sigma = numKeys * STDev;\n\n        operationCount = new AtomicIntegerArray(threads);\n        keyCount = new AtomicIntegerArray(threads);\n        latencies = new AtomicLongArray(threads);\n    }","commit_id":"e06c26b7a3a0bb31273225f3c41004ba5992fa70","url":"https://github.com/apache/cassandra"},{"original_method":"@Override\r\n\tpublic void bind (final ShaderProgram shader, final IntIntMap locations) {\r\n\t\tfinal GL20 gl = Gdx.gl20;\r\n\t\tfinal int numAttributes = attributes.size();\r\n\t\tbyteBuffer.limit(buffer.limit() * 4);\r\n\t\tfor (int i = 0; i < numAttributes; i++) {\r\n\t\t\tfinal VertexAttribute attribute = attributes.get(i);\r\n\t\t\tfinal int location = locations != null \r\n\t\t\t\t? locations.get(attribute.getKey(), -1)\r\n\t\t\t\t: shader.getAttributeLocation(attribute.alias);\r\n\t\t\tif (location < 0)\r\n\t\t\t\tcontinue;\r\n\t\t\tshader.enableVertexAttribute(location);\r\n\t\t\t\r\n\t\t\tbyteBuffer.position(attribute.offset);\r\n\t\t\tif (attribute.usage == Usage.ColorPacked)\r\n\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_UNSIGNED_BYTE, true, \r\n\t\t\t\t\tattributes.vertexSize, byteBuffer);\r\n\t\t\telse\r\n\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_FLOAT, false, \r\n\t\t\t\t\tattributes.vertexSize, byteBuffer);\r\n\t\t}\r\n\t\tisBound = true;\r\n\t}","id":48883,"modified_method":"@Override\r\n\tpublic void bind (final ShaderProgram shader, final IntIntMap locations) {\r\n\t\tfinal GL20 gl = Gdx.gl20;\r\n\t\tfinal int numAttributes = attributes.size();\r\n\t\tbyteBuffer.limit(buffer.limit() * 4);\r\n\t\tif (locations == null) {\r\n\t\t\tfor (int i = 0; i < numAttributes; i++) {\r\n\t\t\t\tfinal VertexAttribute attribute = attributes.get(i);\r\n\t\t\t\tfinal int location = shader.getAttributeLocation(attribute.alias);\r\n\t\t\t\tif (location < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tshader.enableVertexAttribute(location);\r\n\t\t\t\t\r\n\t\t\t\tbyteBuffer.position(attribute.offset);\r\n\t\t\t\tif (attribute.usage == Usage.ColorPacked)\r\n\t\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_UNSIGNED_BYTE, true, \r\n\t\t\t\t\t\tattributes.vertexSize, byteBuffer);\r\n\t\t\t\telse\r\n\t\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_FLOAT, false, \r\n\t\t\t\t\t\tattributes.vertexSize, byteBuffer);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (int i = 0; i < numAttributes; i++) {\r\n\t\t\t\tfinal VertexAttribute attribute = attributes.get(i);\r\n\t\t\t\tfinal int location = locations.get(attribute.getKey(), -1);\r\n\t\t\t\tif (location < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tshader.enableVertexAttribute(location);\r\n\t\t\t\t\r\n\t\t\t\tbyteBuffer.position(attribute.offset);\r\n\t\t\t\tif (attribute.usage == Usage.ColorPacked)\r\n\t\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_UNSIGNED_BYTE, true, \r\n\t\t\t\t\t\tattributes.vertexSize, byteBuffer);\r\n\t\t\t\telse\r\n\t\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_FLOAT, false, \r\n\t\t\t\t\t\tattributes.vertexSize, byteBuffer);\r\n\t\t\t}\r\n\t\t}\r\n\t\tisBound = true;\r\n\t}","commit_id":"634ce5fbff2e9bfad3f1be2d6fb977b68bc2c5e2","url":"https://github.com/libgdx/libgdx"},{"original_method":"public void bind (ShaderProgram shader, IntIntMap locations) {\r\n\t\tfinal GL20 gl = Gdx.gl20;\r\n\r\n\t\tgl.glBindBuffer(GL20.GL_ARRAY_BUFFER, bufferHandle);\r\n\t\tif (isDirty) {\r\n\t\t\tbyteBuffer.limit(buffer.limit() * 4);\r\n\t\t\tgl.glBufferData(GL20.GL_ARRAY_BUFFER, byteBuffer.limit(), byteBuffer, usage);\r\n\t\t\tisDirty = false;\r\n\t\t}\r\n\r\n\t\tfinal int numAttributes = attributes.size();\r\n\t\tfor (int i = 0; i < numAttributes; i++) {\r\n\t\t\tfinal VertexAttribute attribute = attributes.get(i);\r\n\t\t\tfinal int location = locations != null \r\n\t\t\t\t? locations.get(attribute.getKey(), -1)\r\n\t\t\t\t: shader.getAttributeLocation(attribute.alias);\r\n\t\t\tif (location < 0)\r\n\t\t\t\tcontinue;\r\n\t\t\tshader.enableVertexAttribute(location);\r\n\r\n\t\t\tif (attribute.usage == Usage.ColorPacked)\r\n\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_UNSIGNED_BYTE, true, attributes.vertexSize,\r\n\t\t\t\t\tattribute.offset);\r\n\t\t\telse\r\n\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_FLOAT, false, attributes.vertexSize,\r\n\t\t\t\t\tattribute.offset);\r\n\t\t}\r\n\t\tisBound = true;\r\n\t}","id":48884,"modified_method":"public void bind (ShaderProgram shader, IntIntMap locations) {\r\n\t\tfinal GL20 gl = Gdx.gl20;\r\n\r\n\t\tgl.glBindBuffer(GL20.GL_ARRAY_BUFFER, bufferHandle);\r\n\t\tif (isDirty) {\r\n\t\t\tbyteBuffer.limit(buffer.limit() * 4);\r\n\t\t\tgl.glBufferData(GL20.GL_ARRAY_BUFFER, byteBuffer.limit(), byteBuffer, usage);\r\n\t\t\tisDirty = false;\r\n\t\t}\r\n\r\n\t\tfinal int numAttributes = attributes.size();\r\n\t\tif (locations == null) {\r\n\t\t\tfor (int i = 0; i < numAttributes; i++) {\r\n\t\t\t\tfinal VertexAttribute attribute = attributes.get(i);\r\n\t\t\t\tfinal int location = shader.getAttributeLocation(attribute.alias);\r\n\t\t\t\tif (location < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tshader.enableVertexAttribute(location);\r\n\t\r\n\t\t\t\tif (attribute.usage == Usage.ColorPacked)\r\n\t\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_UNSIGNED_BYTE, true, attributes.vertexSize,\r\n\t\t\t\t\t\tattribute.offset);\r\n\t\t\t\telse\r\n\t\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_FLOAT, false, attributes.vertexSize,\r\n\t\t\t\t\t\tattribute.offset);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (int i = 0; i < numAttributes; i++) {\r\n\t\t\t\tfinal VertexAttribute attribute = attributes.get(i);\r\n\t\t\t\tfinal int location = locations.get(attribute.getKey(), -1);\r\n\t\t\t\tif (location < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tshader.enableVertexAttribute(location);\r\n\t\r\n\t\t\t\tif (attribute.usage == Usage.ColorPacked)\r\n\t\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_UNSIGNED_BYTE, true, attributes.vertexSize,\r\n\t\t\t\t\t\tattribute.offset);\r\n\t\t\t\telse\r\n\t\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_FLOAT, false, attributes.vertexSize,\r\n\t\t\t\t\t\tattribute.offset);\r\n\t\t\t}\r\n\t\t}\r\n\t\tisBound = true;\r\n\t}","commit_id":"634ce5fbff2e9bfad3f1be2d6fb977b68bc2c5e2","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\r\n\tpublic void bind (final ShaderProgram shader, final IntIntMap locations) {\r\n\t\tfinal GL20 gl = Gdx.gl20;\r\n\r\n\t\tgl.glBindBuffer(GL20.GL_ARRAY_BUFFER, bufferHandle);\r\n\t\tif (isDirty) {\r\n\t\t\tbyteBuffer.limit(buffer.limit() * 4);\r\n\t\t\tgl.glBufferData(GL20.GL_ARRAY_BUFFER, byteBuffer.limit(), byteBuffer, usage);\r\n\t\t\tisDirty = false;\r\n\t\t}\r\n\r\n\t\tfinal int numAttributes = attributes.size();\r\n\t\tfor (int i = 0; i < numAttributes; i++) {\r\n\t\t\tfinal VertexAttribute attribute = attributes.get(i);\r\n\t\t\tfinal int location = locations != null \r\n\t\t\t\t? locations.get(attribute.getKey(), -1)\r\n\t\t\t\t: shader.getAttributeLocation(attribute.alias);\r\n\t\t\tif (location < 0)\r\n\t\t\t\tcontinue;\r\n\t\t\tshader.enableVertexAttribute(location);\r\n\r\n\t\t\tif (attribute.usage == Usage.ColorPacked)\r\n\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_UNSIGNED_BYTE, true, attributes.vertexSize,\r\n\t\t\t\t\tattribute.offset);\r\n\t\t\telse\r\n\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_FLOAT, false, attributes.vertexSize,\r\n\t\t\t\t\tattribute.offset);\r\n\t\t}\r\n\t\tisBound = true;\r\n\t}","id":48885,"modified_method":"@Override\r\n\tpublic void bind (final ShaderProgram shader, final IntIntMap locations) {\r\n\t\tfinal GL20 gl = Gdx.gl20;\r\n\r\n\t\tgl.glBindBuffer(GL20.GL_ARRAY_BUFFER, bufferHandle);\r\n\t\tif (isDirty) {\r\n\t\t\tbyteBuffer.limit(buffer.limit() * 4);\r\n\t\t\tgl.glBufferData(GL20.GL_ARRAY_BUFFER, byteBuffer.limit(), byteBuffer, usage);\r\n\t\t\tisDirty = false;\r\n\t\t}\r\n\r\n\t\tfinal int numAttributes = attributes.size();\r\n\t\tif (locations == null) {\r\n\t\t\tfor (int i = 0; i < numAttributes; i++) {\r\n\t\t\t\tfinal VertexAttribute attribute = attributes.get(i);\r\n\t\t\t\tfinal int location = shader.getAttributeLocation(attribute.alias);\r\n\t\t\t\tif (location < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tshader.enableVertexAttribute(location);\r\n\t\r\n\t\t\t\tif (attribute.usage == Usage.ColorPacked)\r\n\t\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_UNSIGNED_BYTE, true, attributes.vertexSize,\r\n\t\t\t\t\t\tattribute.offset);\r\n\t\t\t\telse\r\n\t\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_FLOAT, false, attributes.vertexSize,\r\n\t\t\t\t\t\tattribute.offset);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (int i = 0; i < numAttributes; i++) {\r\n\t\t\t\tfinal VertexAttribute attribute = attributes.get(i);\r\n\t\t\t\tfinal int location = locations.get(attribute.getKey(), -1);\r\n\t\t\t\tif (location < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tshader.enableVertexAttribute(location);\r\n\t\r\n\t\t\t\tif (attribute.usage == Usage.ColorPacked)\r\n\t\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_UNSIGNED_BYTE, true, attributes.vertexSize,\r\n\t\t\t\t\t\tattribute.offset);\r\n\t\t\t\telse\r\n\t\t\t\t\tshader.setVertexAttribute(location, attribute.numComponents, GL20.GL_FLOAT, false, attributes.vertexSize,\r\n\t\t\t\t\t\tattribute.offset);\r\n\t\t\t}\r\n\t\t}\r\n\t\tisBound = true;\r\n\t}","commit_id":"634ce5fbff2e9bfad3f1be2d6fb977b68bc2c5e2","url":"https://github.com/libgdx/libgdx"},{"original_method":"public AssessmentFacade save(AssessmentSettingsBean assessmentSettings, boolean isFromConfirmPublishAssessmentListener)\n  {\n    // create an assessment based on the title entered and the assessment\n    // template selected\n    // #1 - set Assessment\n    Long assessmentId = assessmentSettings.getAssessmentId();\n    //log.info(\"**** save assessment assessmentId =\"+assessmentId.toString());\n    ItemAuthorBean iAuthor=new ItemAuthorBean();\n    //System.out.println(\"assessmentSettings.getFeedbackAuthoring: \"+assessmentSettings.getFeedbackAuthoring());\n    iAuthor.setShowFeedbackAuthoring(assessmentSettings.getFeedbackAuthoring());\n    //System.out.println(\"iAuthor.getShowFeedbackAuthoring :\"+iAuthor.getShowFeedbackAuthoring());\n    AssessmentService assessmentService = new AssessmentService();\n    AssessmentFacade assessment = assessmentService.getAssessment(\n        assessmentId.toString());\n    //log.info(\"** assessment = \"+assessment);\n    assessment.setTitle(TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getTitle()));\n    //assessment.setTitle(assessmentSettings.getTitle());\n    assessment.setDescription(assessmentSettings.getDescription());\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.AUTHORS, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getAuthors()));\n\n    // #2 - set AssessmentAccessControl\n    AssessmentAccessControl control = (AssessmentAccessControl)assessment.getAssessmentAccessControl();\n    if (control == null){\n      control = new AssessmentAccessControl();\n      // need to fix accessControl so it can take AssessmentFacade later\n      control.setAssessmentBase(assessment.getData());\n    }\n    // a. LATER set dueDate, retractDate, startDate, releaseTo\n    if (isFromConfirmPublishAssessmentListener) {\n    \tif (assessmentSettings.getStartDate() != null) {\n    \t\tcontrol.setStartDate(assessmentSettings.getStartDate());\n    \t}\n    \telse {\n    \t\tcontrol.setStartDate(new Date());\n    \t}\n    }\n    else {\n    \tcontrol.setStartDate(assessmentSettings.getStartDate());\n    }\n    control.setDueDate(assessmentSettings.getDueDate());\n    control.setRetractDate(assessmentSettings.getRetractDate());\n    control.setFeedbackDate(assessmentSettings.getFeedbackDate());\n    control.setReleaseTo(assessmentSettings.getReleaseTo());\n    //log.info(\"control RELEASETO =\"+control.getReleaseTo());\n    //log.info(\"settings RELEASETO =\"+assessmentSettings.getReleaseTo());\n\n    // b. set Timed Assessment\n    //log.info(\"** Time limit update to = \"+assessmentSettings.getTimeLimit().intValue());\n    control.setTimeLimit(assessmentSettings.getTimeLimit());\n    if (assessmentSettings.getTimedAssessment())\n      control.setTimedAssessment(AssessmentAccessControl.TIMED_ASSESSMENT);\n    else\n      control.setTimedAssessment(AssessmentAccessControl.DO_NOT_TIMED_ASSESSMENT);\n\n    // c. set Assessment Orgainzation\n    if (assessmentSettings.getItemNavigation()!=null ) {\n    \tString nav = assessmentSettings.getItemNavigation();\n    \tif (\"1\".equals(nav)) {\n    \t\tassessmentSettings.setAssessmentFormat(\"1\");\n    \t}\n    \tcontrol.setItemNavigation(Integer.valueOf(nav));\n    }\n    if (assessmentSettings.getItemNumbering()!=null)\n      control.setItemNumbering(new Integer(assessmentSettings.getItemNumbering()));\n    if (assessmentSettings.getAssessmentFormat()!=null )\n     control.setAssessmentFormat(new Integer(assessmentSettings.getAssessmentFormat()));\n\n    if (assessmentSettings.getIsMarkForReview())\n        control.setMarkForReview(AssessmentAccessControl.MARK_FOR_REVIEW);\n    else {\n    \tcontrol.setMarkForReview(AssessmentAccessControl.NOT_MARK_FOR_REVIEW);\n    }\n\n\n    // d. set Submissions\n    if (assessmentSettings.getUnlimitedSubmissions()!=null){\n    \tif (!assessmentSettings.getUnlimitedSubmissions().\n    \t\t\tequals(AssessmentAccessControlIfc.UNLIMITED_SUBMISSIONS.toString())) {\n    \t\tcontrol.setUnlimitedSubmissions(Boolean.FALSE);\n    \t\tif (assessmentSettings.getSubmissionsAllowed() != null)\n    \t\t\tcontrol.setSubmissionsAllowed(new Integer(assessmentSettings.\n    \t\t\t\t\tgetSubmissionsAllowed()));\n    \t\telse\n    \t\t\tcontrol.setSubmissionsAllowed(Integer.valueOf(\"1\"));\n    \t}\n    \telse {\n    \t\tcontrol.setUnlimitedSubmissions(Boolean.TRUE);\n    \t\tcontrol.setSubmissionsAllowed(null);\n    \t}\n    }\n\n    //log.info(\"**unlimited submission=\"+assessmentSettings.getUnlimitedSubmissions());\n    //log.info(\"**allowed=\"+control.getSubmissionsAllowed());\n\n    if (assessmentSettings.getLateHandling()!=null){\n      control.setLateHandling(new Integer(assessmentSettings.\n                                                getLateHandling()));\n    }\n    if (assessmentSettings.getSubmissionsSaved()!=null){\n      control.setSubmissionsSaved(new Integer(assessmentSettings.getSubmissionsSaved()));\n    }\n    \n    if (assessmentSettings.getAutoSubmit())\n        control.setAutoSubmit(AssessmentAccessControl.AUTO_SUBMIT);\n    else {\n    \tcontrol.setAutoSubmit(AssessmentAccessControl.DO_NOT_AUTO_SUBMIT);\n    }\n    assessment.setAssessmentAccessControl(control);\n\n    // e. set Submission Messages\n    control.setSubmissionMessage(assessmentSettings.getSubmissionMessage());\n    // f. set username\n    control.setUsername(TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getUsername()));\n    // g. set password\n    control.setPassword(TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getPassword()));\n    // h. set finalPageUrl\n\n    String finalPageUrl = \"\";\n    if (assessmentSettings.getFinalPageUrl() != null) {\n    \tfinalPageUrl = TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getFinalPageUrl().trim());\n    \tif (finalPageUrl.length() != 0 && !finalPageUrl.toLowerCase().startsWith(\"http\")) {\n    \t\tfinalPageUrl = \"http://\" + finalPageUrl;\n    \t}\n    }\n    control.setFinalPageUrl(finalPageUrl);\n\n    //#3 Feedback\n    AssessmentFeedback feedback = (AssessmentFeedback)assessment.getAssessmentFeedback();\n    if (feedback == null){\n      feedback = new AssessmentFeedback();\n      // need to fix feeback so it can take AssessmentFacade later\n      feedback.setAssessmentBase(assessment.getData());\n    }\n    if (assessmentSettings.getFeedbackDelivery()!=null)\n     feedback.setFeedbackDelivery(new Integer(assessmentSettings.getFeedbackDelivery()));\n    if (assessmentSettings.getFeedbackComponentOption()!=null)\n        feedback.setFeedbackComponentOption(new Integer(assessmentSettings.getFeedbackComponentOption()));\n    if (assessmentSettings.getFeedbackAuthoring()!=null)\n     feedback.setFeedbackAuthoring(new Integer(assessmentSettings.getFeedbackAuthoring()));\n    feedback.setShowQuestionText(Boolean.valueOf(assessmentSettings.getShowQuestionText()));\n    feedback.setShowStudentResponse(Boolean.valueOf(assessmentSettings.getShowStudentResponse()));\n    feedback.setShowCorrectResponse(Boolean.valueOf(assessmentSettings.getShowCorrectResponse()));\n    feedback.setShowStudentScore(Boolean.valueOf(assessmentSettings.getShowStudentScore()));\n    feedback.setShowStudentQuestionScore(Boolean.valueOf(assessmentSettings.getShowStudentQuestionScore()));\n    feedback.setShowQuestionLevelFeedback(Boolean.valueOf(assessmentSettings.getShowQuestionLevelFeedback()));\n    feedback.setShowSelectionLevelFeedback(Boolean.valueOf(assessmentSettings.getShowSelectionLevelFeedback()));\n    feedback.setShowGraderComments(Boolean.valueOf(assessmentSettings.getShowGraderComments()));\n    feedback.setShowStatistics(Boolean.valueOf(assessmentSettings.getShowStatistics()));\n    assessment.setAssessmentFeedback(feedback);\n\n    // g. set Grading\n    EvaluationModel evaluation = (EvaluationModel) assessment.getEvaluationModel();\n    if (evaluation == null){\n      evaluation = new EvaluationModel();\n      // need to fix evaluation so it can take AssessmentFacade later\n      evaluation.setAssessmentBase(assessment.getData());\n    }\n    \n    String firstTargetSelected = assessmentSettings.getFirstTargetSelected();\n\tif (\"Anonymous Users\".equals(firstTargetSelected)) {\n\t\tevaluation.setAnonymousGrading(Integer.valueOf(\"1\"));\n\t\tevaluation.setToGradeBook(\"2\");\n\t}\n\telse {\n\t\tif (assessmentSettings.getAnonymousGrading() != null)\n\t\t      evaluation.setAnonymousGrading(Integer.valueOf(assessmentSettings.getAnonymousGrading()));\n\t\tif (assessmentSettings.getToDefaultGradebook() != null)\n\t\t\tevaluation.setToGradeBook(assessmentSettings.getToDefaultGradebook());\n\t}\n    \n    if (assessmentSettings.getScoringType()!=null)\n      evaluation.setScoringType(new Integer(assessmentSettings.getScoringType()));\n    assessment.setEvaluationModel(evaluation);\n\n\n    // h. update ValueMap: it contains value for teh checkboxes in\n    // authorSettings.jsp for: hasAvailableDate, hasDueDate,\n    // hasRetractDate, hasAnonymous, hasAuthenticatedUser, hasIpAddress,\n    // hasUsernamePassword,\n    // hasTimeAssessment,hasAutoSubmit, hasPartMetaData, hasQuestionMetaData\n    HashMap h = assessmentSettings.getValueMap();\n    updateMetaWithValueMap(assessment, h);\n\n    // i. set Graphics\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.BGCOLOR, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getBgColor()));\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.BGIMAGE, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getBgImage()));\n\n    // j. set objectives,rubrics,keywords\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.KEYWORDS, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getKeywords()));\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.OBJECTIVES, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getObjectives()));\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.RUBRICS, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getRubrics()));\n\n    // jj. save assessment first, then deal with ip\n    assessmentService.saveAssessment(assessment);\n    assessmentService.deleteAllSecuredIP(assessment);\n\n    // k. set ipAddresses\n   \n    HashSet ipSet = new HashSet();\n    String ipAddresses = assessmentSettings.getIpAddresses();\n    if (ipAddresses == null)\n      ipAddresses = \"\";\n    \n    String[] ip = ipAddresses.split(\"\\\\n\");\n    for (int j=0; j<ip.length;j++){\n      if (ip[j]!=null && !ip[j].equals(\"\\r\")) {\n    \t  \n        ipSet.add(new SecuredIPAddress(assessment.getData(),null,ip[j]));\n      }\n    }\n    assessment.setSecuredIPAddressSet(ipSet);\n    \n    // kk. secure delivery settings\n    SecureDeliveryServiceAPI secureDeliveryService = SamigoApiFactory.getInstance().getSecureDeliveryServiceAPI();\n    assessment.updateAssessmentMetaData(SecureDeliveryServiceAPI.MODULE_KEY, assessmentSettings.getSecureDeliveryModule() );\n    String encryptedPassword = secureDeliveryService.encryptPassword( assessmentSettings.getSecureDeliveryModule(), assessmentSettings.getSecureDeliveryModuleExitPassword() );\n    assessment.updateAssessmentMetaData(SecureDeliveryServiceAPI.EXITPWD_KEY, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, encryptedPassword ));\n    \n    // kkk. remove the existing title decoration (if any) and then add the new one (if any)    \n    String titleDecoration = assessment.getAssessmentMetaDataByLabel( SecureDeliveryServiceAPI.TITLE_DECORATION );\n    String newTitle;\n    if ( titleDecoration != null )\n    \tnewTitle = assessment.getTitle().replace( titleDecoration, \"\");\n    else\n    \tnewTitle = assessment.getTitle();\n    \n    // getTitleDecoration() returns \"\" if null or NONE module is passed\n    titleDecoration = secureDeliveryService.getTitleDecoration( assessmentSettings.getSecureDeliveryModule(), new ResourceLoader().getLocale() );\n    if (titleDecoration != null && !titleDecoration.trim().equals(\"\")) {\n    \tnewTitle = newTitle + \" \" + titleDecoration;\n    }\n    \n    assessment.setTitle( newTitle );\n    assessment.updateAssessmentMetaData(SecureDeliveryServiceAPI.TITLE_DECORATION, titleDecoration );\n\n    // l. FINALLY: save the assessment\n    assessmentService.saveAssessment(assessment);\n\n    // added by daisyf, 10/10/06\n    updateAttachment(assessment.getAssessmentAttachmentList(), assessmentSettings.getAttachmentList(),(AssessmentIfc)assessment.getData(), true);\n    EventTrackingService.post(EventTrackingService.newEvent(\"sam.setting.edit\", \"siteId=\" + AgentFacade.getCurrentSiteId() + \", assessmentId=\" + assessmentSettings.getAssessmentId(), true));\n    \n    //added by gopalrc, 6 Nov 2007\n    AuthzQueriesFacadeAPI authz = PersistenceService.getInstance().getAuthzQueriesFacade();\n    if (assessmentSettings.getReleaseTo().equals(AssessmentAccessControl.RELEASE_TO_SELECTED_GROUPS)) {\n        authz.removeAuthorizationByQualifierAndFunction(assessmentId.toString(), \"TAKE_ASSESSMENT\");\n    \tString[] groupsAuthorized = assessmentSettings.getGroupsAuthorizedToSave();//getGroupsAuthorized();\n    \tif (groupsAuthorized != null && groupsAuthorized.length > 0) {\n    \t\tfor (int i=0; i<groupsAuthorized.length; i++){\n    \t\t\tauthz.createAuthorization(groupsAuthorized[i], \"TAKE_ASSESSMENT\", assessmentId.toString());\n    \t\t}\n    \t\t\n    \t\tPublishedAssessmentService publishedAssessmentService = new PublishedAssessmentService();\n    \t\tTreeMap groupsForSite = publishedAssessmentService.getGroupsForSite();\n    \t\tif (groupsForSite != null && groupsForSite.size() > 0) {\n    \t\t\tString releaseToGroups = getReleaseToGroupsAsString(groupsForSite, groupsAuthorized);\n    \t\t\tassessmentSettings.setReleaseToGroupsAsString(releaseToGroups);\n    \t\t}\n    \t}\n    }\n    else { // releaseTo is not \"Selected Groups\" - clean up old/orphaned group permissions if necessary\n    \tCollection groups = null;\n    \ttry {\n    \t\tSite site = SiteService.getSite(ToolManager.getCurrentPlacement().getContext());\n    \t\tgroups = site.getGroups();\n    \t}\n\t\tcatch (IdUnusedException ex) {\n\t\t\t// No site available\n\t\t}\n\t\tif (groups != null && groups.size() > 0) {\n\t\t\tIterator groupIter = groups.iterator();\n\t\t\twhile (groupIter.hasNext()) {\n\t\t\t\tGroup group = (Group) groupIter.next();\n\t\t\t\t//try {\n\t\t\t\t\tauthz.removeAuthorizationByAgentQualifierAndFunction(group.getId(), assessmentId.toString(), \"TAKE_ASSESSMENT\");\n\t\t\t\t//}\n\t\t\t\t//catch (Exception ex) {\n\t\t\t\t\t// No authz permission data for the group\n\t\t\t\t//}\n    \t\t}\n    \t}\n    }\n    \n    assessment = assessmentService.getAssessment(assessmentId.toString());\n    \n    return assessment;\n  }","id":48886,"modified_method":"public AssessmentFacade save(AssessmentSettingsBean assessmentSettings, boolean isFromConfirmPublishAssessmentListener)\n  {\n    // create an assessment based on the title entered and the assessment\n    // template selected\n    // #1 - set Assessment\n    Long assessmentId = assessmentSettings.getAssessmentId();\n    //log.info(\"**** save assessment assessmentId =\"+assessmentId.toString());\n    ItemAuthorBean iAuthor=new ItemAuthorBean();\n    //System.out.println(\"assessmentSettings.getFeedbackAuthoring: \"+assessmentSettings.getFeedbackAuthoring());\n    iAuthor.setShowFeedbackAuthoring(assessmentSettings.getFeedbackAuthoring());\n    //System.out.println(\"iAuthor.getShowFeedbackAuthoring :\"+iAuthor.getShowFeedbackAuthoring());\n    AssessmentService assessmentService = new AssessmentService();\n    AssessmentFacade assessment = assessmentService.getAssessment(\n        assessmentId.toString());\n    //log.info(\"** assessment = \"+assessment);\n    assessment.setTitle(TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getTitle()));\n    //assessment.setTitle(assessmentSettings.getTitle());\n    assessment.setDescription(assessmentSettings.getDescription());\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.AUTHORS, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getAuthors()));\n\n    // #2 - set AssessmentAccessControl\n    AssessmentAccessControl control = (AssessmentAccessControl)assessment.getAssessmentAccessControl();\n    if (control == null){\n      control = new AssessmentAccessControl();\n      // need to fix accessControl so it can take AssessmentFacade later\n      control.setAssessmentBase(assessment.getData());\n    }\n    // a. LATER set dueDate, retractDate, startDate, releaseTo\n    if (isFromConfirmPublishAssessmentListener) {\n    \tif (assessmentSettings.getStartDate() != null) {\n    \t\tcontrol.setStartDate(assessmentSettings.getStartDate());\n    \t}\n    \telse {\n    \t\tcontrol.setStartDate(new Date());\n    \t}\n    }\n    else {\n    \tcontrol.setStartDate(assessmentSettings.getStartDate());\n    }\n    control.setDueDate(assessmentSettings.getDueDate());\n    control.setRetractDate(assessmentSettings.getRetractDate());\n    control.setFeedbackDate(assessmentSettings.getFeedbackDate());\n    control.setReleaseTo(assessmentSettings.getReleaseTo());\n    //log.info(\"control RELEASETO =\"+control.getReleaseTo());\n    //log.info(\"settings RELEASETO =\"+assessmentSettings.getReleaseTo());\n\n    // b. set Timed Assessment\n    //log.info(\"** Time limit update to = \"+assessmentSettings.getTimeLimit().intValue());\n    control.setTimeLimit(assessmentSettings.getTimeLimit());\n    if (assessmentSettings.getTimedAssessment())\n      control.setTimedAssessment(AssessmentAccessControl.TIMED_ASSESSMENT);\n    else\n      control.setTimedAssessment(AssessmentAccessControl.DO_NOT_TIMED_ASSESSMENT);\n\n    // c. set Assessment Orgainzation\n    if (assessmentSettings.getItemNavigation()!=null ) {\n    \tString nav = assessmentSettings.getItemNavigation();\n    \tif (\"1\".equals(nav)) {\n    \t\tassessmentSettings.setAssessmentFormat(\"1\");\n    \t}\n    \tcontrol.setItemNavigation(Integer.valueOf(nav));\n    }\n    if (assessmentSettings.getItemNumbering()!=null)\n      control.setItemNumbering(new Integer(assessmentSettings.getItemNumbering()));\n    if (assessmentSettings.getAssessmentFormat()!=null )\n     control.setAssessmentFormat(new Integer(assessmentSettings.getAssessmentFormat()));\n\n    if (assessmentSettings.getIsMarkForReview())\n        control.setMarkForReview(AssessmentAccessControl.MARK_FOR_REVIEW);\n    else {\n    \tcontrol.setMarkForReview(AssessmentAccessControl.NOT_MARK_FOR_REVIEW);\n    }\n\n\n    // d. set Submissions\n    if (assessmentSettings.getUnlimitedSubmissions()!=null){\n    \tif (!assessmentSettings.getUnlimitedSubmissions().\n    \t\t\tequals(AssessmentAccessControlIfc.UNLIMITED_SUBMISSIONS.toString())) {\n    \t\tcontrol.setUnlimitedSubmissions(Boolean.FALSE);\n    \t\tif (assessmentSettings.getSubmissionsAllowed() != null)\n    \t\t\tcontrol.setSubmissionsAllowed(new Integer(assessmentSettings.\n    \t\t\t\t\tgetSubmissionsAllowed()));\n    \t\telse\n    \t\t\tcontrol.setSubmissionsAllowed(Integer.valueOf(\"1\"));\n    \t}\n    \telse {\n    \t\tcontrol.setUnlimitedSubmissions(Boolean.TRUE);\n    \t\tcontrol.setSubmissionsAllowed(null);\n    \t}\n    }\n\n    //log.info(\"**unlimited submission=\"+assessmentSettings.getUnlimitedSubmissions());\n    //log.info(\"**allowed=\"+control.getSubmissionsAllowed());\n\n    if (assessmentSettings.getLateHandling()!=null){\n      control.setLateHandling(new Integer(assessmentSettings.\n                                                getLateHandling()));\n    }\n    if (assessmentSettings.getSubmissionsSaved()!=null){\n      control.setSubmissionsSaved(new Integer(assessmentSettings.getSubmissionsSaved()));\n    }\n    \n    if (assessmentSettings.getAutoSubmit())\n        control.setAutoSubmit(AssessmentAccessControl.AUTO_SUBMIT);\n    else {\n    \tcontrol.setAutoSubmit(AssessmentAccessControl.DO_NOT_AUTO_SUBMIT);\n    }\n    assessment.setAssessmentAccessControl(control);\n\n    // e. set Submission Messages\n    control.setSubmissionMessage(assessmentSettings.getSubmissionMessage());\n    // f. set username\n    control.setUsername(TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getUsername()));\n    // g. set password\n    control.setPassword(TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getPassword()));\n    // h. set finalPageUrl\n\n    String finalPageUrl = \"\";\n    if (assessmentSettings.getFinalPageUrl() != null) {\n    \tfinalPageUrl = TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getFinalPageUrl().trim());\n    \tif (finalPageUrl.length() != 0 && !finalPageUrl.toLowerCase().startsWith(\"http\")) {\n    \t\tfinalPageUrl = \"http://\" + finalPageUrl;\n    \t}\n    }\n    control.setFinalPageUrl(finalPageUrl);\n\n    //#3 Feedback\n    AssessmentFeedback feedback = (AssessmentFeedback)assessment.getAssessmentFeedback();\n    if (feedback == null){\n      feedback = new AssessmentFeedback();\n      // need to fix feeback so it can take AssessmentFacade later\n      feedback.setAssessmentBase(assessment.getData());\n    }\n    if (assessmentSettings.getFeedbackDelivery()!=null)\n     feedback.setFeedbackDelivery(new Integer(assessmentSettings.getFeedbackDelivery()));\n    if (assessmentSettings.getFeedbackComponentOption()!=null)\n        feedback.setFeedbackComponentOption(new Integer(assessmentSettings.getFeedbackComponentOption()));\n    if (assessmentSettings.getFeedbackAuthoring()!=null)\n     feedback.setFeedbackAuthoring(new Integer(assessmentSettings.getFeedbackAuthoring()));\n    // if 'No feedback' (it corresponds to value 3) is selected, \n\t// all components are unchecked\n    if (feedback.getFeedbackDelivery().equals(new Integer(\"3\")))\n    {\n    \tfeedback.setShowQuestionText(false);\n\t\tfeedback.setShowStudentResponse(false);\n\t\tfeedback.setShowCorrectResponse(false);\n\t\tfeedback.setShowStudentScore(false);\n\t\tfeedback.setShowStudentQuestionScore(false);\n\t\tfeedback.setShowQuestionLevelFeedback(false);\n\t\tfeedback.setShowSelectionLevelFeedback(false);\n\t\tfeedback.setShowGraderComments(false);\n\t\tfeedback.setShowStatistics(false);\n    }\n    else {\n    \t\tfeedback.setShowQuestionText(Boolean.valueOf(assessmentSettings.getShowQuestionText()));\n    \t\tfeedback.setShowStudentResponse(Boolean.valueOf(assessmentSettings.getShowStudentResponse()));\n    \t\tfeedback.setShowCorrectResponse(Boolean.valueOf(assessmentSettings.getShowCorrectResponse()));\n    \t\tfeedback.setShowStudentScore(Boolean.valueOf(assessmentSettings.getShowStudentScore()));\n    \t\tfeedback.setShowStudentQuestionScore(Boolean.valueOf(assessmentSettings.getShowStudentQuestionScore()));\n    \t\tfeedback.setShowQuestionLevelFeedback(Boolean.valueOf(assessmentSettings.getShowQuestionLevelFeedback()));\n    \t\tfeedback.setShowSelectionLevelFeedback(Boolean.valueOf(assessmentSettings.getShowSelectionLevelFeedback()));\n    \t\tfeedback.setShowGraderComments(Boolean.valueOf(assessmentSettings.getShowGraderComments()));\n    \t\tfeedback.setShowStatistics(Boolean.valueOf(assessmentSettings.getShowStatistics()));\n    }\n    assessment.setAssessmentFeedback(feedback);\n\n    // g. set Grading\n    EvaluationModel evaluation = (EvaluationModel) assessment.getEvaluationModel();\n    if (evaluation == null){\n      evaluation = new EvaluationModel();\n      // need to fix evaluation so it can take AssessmentFacade later\n      evaluation.setAssessmentBase(assessment.getData());\n    }\n    \n    String firstTargetSelected = assessmentSettings.getFirstTargetSelected();\n\tif (\"Anonymous Users\".equals(firstTargetSelected)) {\n\t\tevaluation.setAnonymousGrading(Integer.valueOf(\"1\"));\n\t\tevaluation.setToGradeBook(\"2\");\n\t}\n\telse {\n\t\tif (assessmentSettings.getAnonymousGrading() != null)\n\t\t      evaluation.setAnonymousGrading(Integer.valueOf(assessmentSettings.getAnonymousGrading()));\n\t\tif (assessmentSettings.getToDefaultGradebook() != null)\n\t\t\tevaluation.setToGradeBook(assessmentSettings.getToDefaultGradebook());\n\t}\n    \n    if (assessmentSettings.getScoringType()!=null)\n      evaluation.setScoringType(new Integer(assessmentSettings.getScoringType()));\n    assessment.setEvaluationModel(evaluation);\n\n\n    // h. update ValueMap: it contains value for teh checkboxes in\n    // authorSettings.jsp for: hasAvailableDate, hasDueDate,\n    // hasRetractDate, hasAnonymous, hasAuthenticatedUser, hasIpAddress,\n    // hasUsernamePassword,\n    // hasTimeAssessment,hasAutoSubmit, hasPartMetaData, hasQuestionMetaData\n    HashMap h = assessmentSettings.getValueMap();\n    updateMetaWithValueMap(assessment, h);\n\n    // i. set Graphics\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.BGCOLOR, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getBgColor()));\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.BGIMAGE, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getBgImage()));\n\n    // j. set objectives,rubrics,keywords\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.KEYWORDS, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getKeywords()));\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.OBJECTIVES, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getObjectives()));\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.RUBRICS, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getRubrics()));\n\n    // jj. save assessment first, then deal with ip\n    assessmentService.saveAssessment(assessment);\n    assessmentService.deleteAllSecuredIP(assessment);\n\n    // k. set ipAddresses\n   \n    HashSet ipSet = new HashSet();\n    String ipAddresses = assessmentSettings.getIpAddresses();\n    if (ipAddresses == null)\n      ipAddresses = \"\";\n    \n    String[] ip = ipAddresses.split(\"\\\\n\");\n    for (int j=0; j<ip.length;j++){\n      if (ip[j]!=null && !ip[j].equals(\"\\r\")) {\n    \t  \n        ipSet.add(new SecuredIPAddress(assessment.getData(),null,ip[j]));\n      }\n    }\n    assessment.setSecuredIPAddressSet(ipSet);\n    \n    // kk. secure delivery settings\n    SecureDeliveryServiceAPI secureDeliveryService = SamigoApiFactory.getInstance().getSecureDeliveryServiceAPI();\n    assessment.updateAssessmentMetaData(SecureDeliveryServiceAPI.MODULE_KEY, assessmentSettings.getSecureDeliveryModule() );\n    String encryptedPassword = secureDeliveryService.encryptPassword( assessmentSettings.getSecureDeliveryModule(), assessmentSettings.getSecureDeliveryModuleExitPassword() );\n    assessment.updateAssessmentMetaData(SecureDeliveryServiceAPI.EXITPWD_KEY, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, encryptedPassword ));\n    \n    // kkk. remove the existing title decoration (if any) and then add the new one (if any)    \n    String titleDecoration = assessment.getAssessmentMetaDataByLabel( SecureDeliveryServiceAPI.TITLE_DECORATION );\n    String newTitle;\n    if ( titleDecoration != null )\n    \tnewTitle = assessment.getTitle().replace( titleDecoration, \"\");\n    else\n    \tnewTitle = assessment.getTitle();\n    \n    // getTitleDecoration() returns \"\" if null or NONE module is passed\n    titleDecoration = secureDeliveryService.getTitleDecoration( assessmentSettings.getSecureDeliveryModule(), new ResourceLoader().getLocale() );\n    if (titleDecoration != null && !titleDecoration.trim().equals(\"\")) {\n    \tnewTitle = newTitle + \" \" + titleDecoration;\n    }\n    \n    assessment.setTitle( newTitle );\n    assessment.updateAssessmentMetaData(SecureDeliveryServiceAPI.TITLE_DECORATION, titleDecoration );\n\n    // l. FINALLY: save the assessment\n    assessmentService.saveAssessment(assessment);\n\n    // added by daisyf, 10/10/06\n    updateAttachment(assessment.getAssessmentAttachmentList(), assessmentSettings.getAttachmentList(),(AssessmentIfc)assessment.getData(), true);\n    EventTrackingService.post(EventTrackingService.newEvent(\"sam.setting.edit\", \"siteId=\" + AgentFacade.getCurrentSiteId() + \", assessmentId=\" + assessmentSettings.getAssessmentId(), true));\n    \n    //added by gopalrc, 6 Nov 2007\n    AuthzQueriesFacadeAPI authz = PersistenceService.getInstance().getAuthzQueriesFacade();\n    if (assessmentSettings.getReleaseTo().equals(AssessmentAccessControl.RELEASE_TO_SELECTED_GROUPS)) {\n        authz.removeAuthorizationByQualifierAndFunction(assessmentId.toString(), \"TAKE_ASSESSMENT\");\n    \tString[] groupsAuthorized = assessmentSettings.getGroupsAuthorizedToSave();//getGroupsAuthorized();\n    \tif (groupsAuthorized != null && groupsAuthorized.length > 0) {\n    \t\tfor (int i=0; i<groupsAuthorized.length; i++){\n    \t\t\tauthz.createAuthorization(groupsAuthorized[i], \"TAKE_ASSESSMENT\", assessmentId.toString());\n    \t\t}\n    \t\t\n    \t\tPublishedAssessmentService publishedAssessmentService = new PublishedAssessmentService();\n    \t\tTreeMap groupsForSite = publishedAssessmentService.getGroupsForSite();\n    \t\tif (groupsForSite != null && groupsForSite.size() > 0) {\n    \t\t\tString releaseToGroups = getReleaseToGroupsAsString(groupsForSite, groupsAuthorized);\n    \t\t\tassessmentSettings.setReleaseToGroupsAsString(releaseToGroups);\n    \t\t}\n    \t}\n    }\n    else { // releaseTo is not \"Selected Groups\" - clean up old/orphaned group permissions if necessary\n    \tCollection groups = null;\n    \ttry {\n    \t\tSite site = SiteService.getSite(ToolManager.getCurrentPlacement().getContext());\n    \t\tgroups = site.getGroups();\n    \t}\n\t\tcatch (IdUnusedException ex) {\n\t\t\t// No site available\n\t\t}\n\t\tif (groups != null && groups.size() > 0) {\n\t\t\tIterator groupIter = groups.iterator();\n\t\t\twhile (groupIter.hasNext()) {\n\t\t\t\tGroup group = (Group) groupIter.next();\n\t\t\t\t//try {\n\t\t\t\t\tauthz.removeAuthorizationByAgentQualifierAndFunction(group.getId(), assessmentId.toString(), \"TAKE_ASSESSMENT\");\n\t\t\t\t//}\n\t\t\t\t//catch (Exception ex) {\n\t\t\t\t\t// No authz permission data for the group\n\t\t\t\t//}\n    \t\t}\n    \t}\n    }\n    \n    assessment = assessmentService.getAssessment(assessmentId.toString());\n    \n    return assessment;\n  }","commit_id":"e0cb48cfae7354dd3f6e2ad2c8b67c6058febf77","url":"https://github.com/sakaiproject/sakai"},{"original_method":"private void setPublishedSettings(PublishedAssessmentSettingsBean assessmentSettings, PublishedAssessmentFacade assessment, boolean retractNow, SaveAssessmentSettings saveAssessmentSettings) {\n\t\t// Title is set in isTitleChanged()\n\t\tassessment.setDescription(assessmentSettings.getDescription());\n\t    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.AUTHORS, assessmentSettings.getAuthors());\n\t    \n\t\tPublishedAccessControl control = (PublishedAccessControl)assessment.getAssessmentAccessControl();\n\t\tif (control == null){\n\t\t\tcontrol = new PublishedAccessControl();\n\t\t\t// need to fix accessControl so it can take AssessmentFacade later\n\t\t\tcontrol.setAssessmentBase(assessment.getData());\n\t\t}\n\t\t// set startDate, dueDate, retractDate \n\t\tcontrol.setStartDate(assessmentSettings.getStartDate());\n\t\tcontrol.setDueDate(assessmentSettings.getDueDate());\n\t\tif (retractNow)\n\t\t{\n\t\t\tcontrol.setRetractDate(new Date());\n\t\t}\n\t\telse {\n\t\t\tcontrol.setRetractDate(assessmentSettings.getRetractDate());\n\t\t}\n\n\t\t\n\t\t// set Assessment Orgainzation\n\t\tif (assessmentSettings.getItemNavigation()!=null ) {\n\t\t\tString nav = assessmentSettings.getItemNavigation();\n\t\t\tif (\"1\".equals(nav)) {\n\t\t\t\tassessmentSettings.setAssessmentFormat(\"1\");\n\t\t\t}\n\t\t\tcontrol.setItemNavigation(Integer.valueOf(nav));\n\t\t}\n\t\tif (assessmentSettings.getAssessmentFormat() != null ) {\n\t\t\tcontrol.setAssessmentFormat(new Integer(assessmentSettings.getAssessmentFormat()));\n\t\t}\t    \n\t\tif (assessmentSettings.getItemNumbering() != null) {\n\t\t\tcontrol.setItemNumbering(new Integer(assessmentSettings.getItemNumbering()));\n\t\t}\n\n\t\t// set Timed Assessment\n\t\tcontrol.setTimeLimit(assessmentSettings.getTimeLimit());\n\t\tif (assessmentSettings.getTimedAssessment()) {\n\t\t\tcontrol.setTimedAssessment(AssessmentAccessControl.TIMED_ASSESSMENT);\n\t\t}\n\t\telse {\n\t\t\tcontrol.setTimedAssessment(AssessmentAccessControl.DO_NOT_TIMED_ASSESSMENT);\n\t\t}\n\t\t\n\t\tif (assessmentSettings.getIsMarkForReview())\n\t        control.setMarkForReview(AssessmentAccessControl.MARK_FOR_REVIEW);\n\t    else {\n\t    \tcontrol.setMarkForReview(AssessmentAccessControl.NOT_MARK_FOR_REVIEW);\n\t    }\n\n\t\t// set Submissions\n\t\tif (assessmentSettings.getUnlimitedSubmissions()!=null){\n\t\t\tif (!assessmentSettings.getUnlimitedSubmissions().\n\t\t\t\t\tequals(AssessmentAccessControlIfc.UNLIMITED_SUBMISSIONS.toString())) {\n\t\t\t\tcontrol.setUnlimitedSubmissions(Boolean.FALSE);\n\t\t\t\tif (assessmentSettings.getSubmissionsAllowed() != null)\n\t\t\t\t\tcontrol.setSubmissionsAllowed(new Integer(assessmentSettings.\n\t\t\t\t\t\t\tgetSubmissionsAllowed()));\n\t\t\t\telse\n\t\t\t\t\tcontrol.setSubmissionsAllowed(Integer.valueOf(\"1\"));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcontrol.setUnlimitedSubmissions(Boolean.TRUE);\n\t\t\t\tcontrol.setSubmissionsAllowed(null);\n\t\t\t}\n\t\t}\n\n\t\tif (assessmentSettings.getLateHandling()!=null){\n\t\t\tcontrol.setLateHandling(new Integer(assessmentSettings.\n\t\t\t\t\tgetLateHandling()));\n\t\t}\n\t\tif (assessmentSettings.getSubmissionsSaved()!=null){\n\t\t\tcontrol.setSubmissionsSaved(new Integer(assessmentSettings.getSubmissionsSaved()));\n\t\t}\n\t\t\n\t\tif (assessmentSettings.getAutoSubmit())\n\t        control.setAutoSubmit(AssessmentAccessControl.AUTO_SUBMIT);\n\t    else {\n\t    \tcontrol.setAutoSubmit(AssessmentAccessControl.DO_NOT_AUTO_SUBMIT);\n\t    }\n\t\tassessment.setAssessmentAccessControl(control);\n\n\t\t// e. set Submission Messages\n\t    control.setSubmissionMessage(assessmentSettings.getSubmissionMessage());\n\t    // f. set username\n\t    control.setUsername(TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getUsername()));\n\t    // g. set password\n\t    control.setPassword(TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getPassword()));\n\t    // h. set finalPageUrl\n\t    String finalPageUrl = \"\";\n\t    if (assessmentSettings.getFinalPageUrl() != null) {\n\t    \tfinalPageUrl = TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getFinalPageUrl().trim());\n\t    \tif (finalPageUrl.length() != 0 && !finalPageUrl.toLowerCase().startsWith(\"http\")) {\n\t    \t\tfinalPageUrl = \"http://\" + finalPageUrl;\n\t    \t}\n\t    }\n\t    control.setFinalPageUrl(finalPageUrl);\n\n\t\t// set Feedback\n\t\tAssessmentFeedbackIfc feedback = (AssessmentFeedbackIfc) assessment.getAssessmentFeedback();\n\t\tif (feedback == null){\n\t\t\tfeedback = new AssessmentFeedback();\n\t\t\t// need to fix feeback so it can take AssessmentFacade later\n\t\t\tfeedback.setAssessmentBase(assessment.getData());\n\t\t}\n\t\t// Feedback authoring\n\t\tif (assessmentSettings.getFeedbackAuthoring()!=null)\n\t\t\tfeedback.setFeedbackAuthoring(new Integer(assessmentSettings.getFeedbackAuthoring()));\n\t\t// Feedback delivery\n\t\tif (assessmentSettings.getFeedbackDelivery()!=null)\n\t\t\tfeedback.setFeedbackDelivery(new Integer(assessmentSettings.getFeedbackDelivery()));\n\t\tif (assessmentSettings.getFeedbackComponentOption()!=null)\n\t\t    feedback.setFeedbackComponentOption(new Integer(assessmentSettings.getFeedbackComponentOption()));\n\n\t\tcontrol.setFeedbackDate(assessmentSettings.getFeedbackDate());\n\t\t// Feedback Components Students Can See\n\t\tfeedback.setShowStudentResponse(Boolean.valueOf(assessmentSettings.getShowStudentResponse()));\n\t\tfeedback.setShowCorrectResponse(Boolean.valueOf(assessmentSettings.getShowCorrectResponse()));\n\t\tfeedback.setShowStudentScore(Boolean.valueOf(assessmentSettings.getShowStudentScore()));\n\t\tfeedback.setShowStudentQuestionScore(Boolean.valueOf(assessmentSettings.getShowStudentQuestionScore()));\n\t\tfeedback.setShowQuestionLevelFeedback(Boolean.valueOf(assessmentSettings.getShowQuestionLevelFeedback()));\n\t\tfeedback.setShowSelectionLevelFeedback(Boolean.valueOf(assessmentSettings.getShowSelectionLevelFeedback()));\n\t\tfeedback.setShowGraderComments(Boolean.valueOf(assessmentSettings.getShowGraderComments()));\n\t\tfeedback.setShowStatistics(Boolean.valueOf(assessmentSettings.getShowStatistics()));\n\t\tassessment.setAssessmentFeedback(feedback);\n\n\t\t// set Grading\n\t\tEvaluationModelIfc evaluation = (EvaluationModelIfc) assessment.getEvaluationModel();\n\t\tif (evaluation == null){\n\t\t\tevaluation = new EvaluationModel();\n\t\t\tevaluation.setAssessmentBase(assessment.getData());\n\t\t}\n\t\tif (assessmentSettings.getAnonymousGrading() != null) {\n\t\t\tevaluation.setAnonymousGrading(new Integer(assessmentSettings.getAnonymousGrading()));\n\t\t}\t    \n\t\t// If there is value set for toDefaultGradebook, we reset it\n\t\t// Otherwise, do nothing\n\t\tif (assessmentSettings.getToDefaultGradebook() != null) {\n\t\t\tevaluation.setToGradeBook(assessmentSettings.getToDefaultGradebook());\n\t\t}\n\t\tif (assessmentSettings.getScoringType() != null) {\n\t\t\tevaluation.setScoringType(new Integer(assessmentSettings.getScoringType()));\n\t\t}\n\t\tassessment.setEvaluationModel(evaluation);\n\n\t\t// update ValueMap: it contains value for thh checkboxes in\n\t\t// publishedSettings.jsp for: hasAvailableDate, hasDueDate,\n\t\t// hasRetractDate, hasAnonymous, hasAuthenticatedUser, hasIpAddress,\n\t\t// hasUsernamePassword, hasTimeAssessment,hasAutoSubmit, hasPartMetaData, \n\t\t// hasQuestionMetaData\n\t\tHashMap h = assessmentSettings.getValueMap();\n\t\tsaveAssessmentSettings.updateMetaWithValueMap(assessment, h);\n\t\t\n\t\t// i. set Graphics\n\t\tassessment.updateAssessmentMetaData(AssessmentMetaDataIfc.BGCOLOR, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getBgColor()));\n\t\tassessment.updateAssessmentMetaData(AssessmentMetaDataIfc.BGIMAGE, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getBgImage()));\n\n\t    // j. set objectives,rubrics,keywords\n\t\tassessment.updateAssessmentMetaData(AssessmentMetaDataIfc.KEYWORDS, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getKeywords()));\n\t    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.OBJECTIVES, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getObjectives()));\n\t    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.RUBRICS, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getRubrics()));\n\t}","id":48887,"modified_method":"private void setPublishedSettings(PublishedAssessmentSettingsBean assessmentSettings, PublishedAssessmentFacade assessment, boolean retractNow, SaveAssessmentSettings saveAssessmentSettings) {\n\t\t// Title is set in isTitleChanged()\n\t\tassessment.setDescription(assessmentSettings.getDescription());\n\t    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.AUTHORS, assessmentSettings.getAuthors());\n\t    \n\t\tPublishedAccessControl control = (PublishedAccessControl)assessment.getAssessmentAccessControl();\n\t\tif (control == null){\n\t\t\tcontrol = new PublishedAccessControl();\n\t\t\t// need to fix accessControl so it can take AssessmentFacade later\n\t\t\tcontrol.setAssessmentBase(assessment.getData());\n\t\t}\n\t\t// set startDate, dueDate, retractDate \n\t\tcontrol.setStartDate(assessmentSettings.getStartDate());\n\t\tcontrol.setDueDate(assessmentSettings.getDueDate());\n\t\tif (retractNow)\n\t\t{\n\t\t\tcontrol.setRetractDate(new Date());\n\t\t}\n\t\telse {\n\t\t\tcontrol.setRetractDate(assessmentSettings.getRetractDate());\n\t\t}\n\n\t\t\n\t\t// set Assessment Orgainzation\n\t\tif (assessmentSettings.getItemNavigation()!=null ) {\n\t\t\tString nav = assessmentSettings.getItemNavigation();\n\t\t\tif (\"1\".equals(nav)) {\n\t\t\t\tassessmentSettings.setAssessmentFormat(\"1\");\n\t\t\t}\n\t\t\tcontrol.setItemNavigation(Integer.valueOf(nav));\n\t\t}\n\t\tif (assessmentSettings.getAssessmentFormat() != null ) {\n\t\t\tcontrol.setAssessmentFormat(new Integer(assessmentSettings.getAssessmentFormat()));\n\t\t}\t    \n\t\tif (assessmentSettings.getItemNumbering() != null) {\n\t\t\tcontrol.setItemNumbering(new Integer(assessmentSettings.getItemNumbering()));\n\t\t}\n\n\t\t// set Timed Assessment\n\t\tcontrol.setTimeLimit(assessmentSettings.getTimeLimit());\n\t\tif (assessmentSettings.getTimedAssessment()) {\n\t\t\tcontrol.setTimedAssessment(AssessmentAccessControl.TIMED_ASSESSMENT);\n\t\t}\n\t\telse {\n\t\t\tcontrol.setTimedAssessment(AssessmentAccessControl.DO_NOT_TIMED_ASSESSMENT);\n\t\t}\n\t\t\n\t\tif (assessmentSettings.getIsMarkForReview())\n\t        control.setMarkForReview(AssessmentAccessControl.MARK_FOR_REVIEW);\n\t    else {\n\t    \tcontrol.setMarkForReview(AssessmentAccessControl.NOT_MARK_FOR_REVIEW);\n\t    }\n\n\t\t// set Submissions\n\t\tif (assessmentSettings.getUnlimitedSubmissions()!=null){\n\t\t\tif (!assessmentSettings.getUnlimitedSubmissions().\n\t\t\t\t\tequals(AssessmentAccessControlIfc.UNLIMITED_SUBMISSIONS.toString())) {\n\t\t\t\tcontrol.setUnlimitedSubmissions(Boolean.FALSE);\n\t\t\t\tif (assessmentSettings.getSubmissionsAllowed() != null)\n\t\t\t\t\tcontrol.setSubmissionsAllowed(new Integer(assessmentSettings.\n\t\t\t\t\t\t\tgetSubmissionsAllowed()));\n\t\t\t\telse\n\t\t\t\t\tcontrol.setSubmissionsAllowed(Integer.valueOf(\"1\"));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcontrol.setUnlimitedSubmissions(Boolean.TRUE);\n\t\t\t\tcontrol.setSubmissionsAllowed(null);\n\t\t\t}\n\t\t}\n\n\t\tif (assessmentSettings.getLateHandling()!=null){\n\t\t\tcontrol.setLateHandling(new Integer(assessmentSettings.\n\t\t\t\t\tgetLateHandling()));\n\t\t}\n\t\tif (assessmentSettings.getSubmissionsSaved()!=null){\n\t\t\tcontrol.setSubmissionsSaved(new Integer(assessmentSettings.getSubmissionsSaved()));\n\t\t}\n\t\t\n\t\tif (assessmentSettings.getAutoSubmit())\n\t        control.setAutoSubmit(AssessmentAccessControl.AUTO_SUBMIT);\n\t    else {\n\t    \tcontrol.setAutoSubmit(AssessmentAccessControl.DO_NOT_AUTO_SUBMIT);\n\t    }\n\t\tassessment.setAssessmentAccessControl(control);\n\n\t\t// e. set Submission Messages\n\t    control.setSubmissionMessage(assessmentSettings.getSubmissionMessage());\n\t    // f. set username\n\t    control.setUsername(TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getUsername()));\n\t    // g. set password\n\t    control.setPassword(TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getPassword()));\n\t    // h. set finalPageUrl\n\t    String finalPageUrl = \"\";\n\t    if (assessmentSettings.getFinalPageUrl() != null) {\n\t    \tfinalPageUrl = TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getFinalPageUrl().trim());\n\t    \tif (finalPageUrl.length() != 0 && !finalPageUrl.toLowerCase().startsWith(\"http\")) {\n\t    \t\tfinalPageUrl = \"http://\" + finalPageUrl;\n\t    \t}\n\t    }\n\t    control.setFinalPageUrl(finalPageUrl);\n\n\t\t// set Feedback\n\t\tAssessmentFeedbackIfc feedback = (AssessmentFeedbackIfc) assessment.getAssessmentFeedback();\n\t\tif (feedback == null){\n\t\t\tfeedback = new AssessmentFeedback();\n\t\t\t// need to fix feeback so it can take AssessmentFacade later\n\t\t\tfeedback.setAssessmentBase(assessment.getData());\n\t\t}\n\t\t// Feedback authoring\n\t\tif (assessmentSettings.getFeedbackAuthoring()!=null)\n\t\t\tfeedback.setFeedbackAuthoring(new Integer(assessmentSettings.getFeedbackAuthoring()));\n\t\t// Feedback delivery\n\t\tif (assessmentSettings.getFeedbackDelivery()!=null)\n\t\t\tfeedback.setFeedbackDelivery(new Integer(assessmentSettings.getFeedbackDelivery()));\n\t\tif (assessmentSettings.getFeedbackComponentOption()!=null)\n\t\t    feedback.setFeedbackComponentOption(new Integer(assessmentSettings.getFeedbackComponentOption()));\n\n\t\tcontrol.setFeedbackDate(assessmentSettings.getFeedbackDate());\n\t\t// Feedback Components Students Can See\n\t\t// if 'No feedback' (it corresponds to value 3) is selected, \n\t\t// all components are unchecked\n\t\t if (feedback.getFeedbackDelivery().equals(new Integer(\"3\")))\n\t\t    {\n\t\t    \tfeedback.setShowQuestionText(false);\n\t\t\t\tfeedback.setShowStudentResponse(false);\n\t\t\t\tfeedback.setShowCorrectResponse(false);\n\t\t\t\tfeedback.setShowStudentScore(false);\n\t\t\t\tfeedback.setShowStudentQuestionScore(false);\n\t\t\t\tfeedback.setShowQuestionLevelFeedback(false);\n\t\t\t\tfeedback.setShowSelectionLevelFeedback(false);\n\t\t\t\tfeedback.setShowGraderComments(false);\n\t\t\t\tfeedback.setShowStatistics(false);\n\t\t    }\n\t\t    else {\n\t\t    \t\tfeedback.setShowQuestionText(Boolean.valueOf(assessmentSettings.getShowQuestionText()));\n\t\t    \t\tfeedback.setShowStudentResponse(Boolean.valueOf(assessmentSettings.getShowStudentResponse()));\n\t\t    \t\tfeedback.setShowCorrectResponse(Boolean.valueOf(assessmentSettings.getShowCorrectResponse()));\n\t\t    \t\tfeedback.setShowStudentScore(Boolean.valueOf(assessmentSettings.getShowStudentScore()));\n\t\t    \t\tfeedback.setShowStudentQuestionScore(Boolean.valueOf(assessmentSettings.getShowStudentQuestionScore()));\n\t\t    \t\tfeedback.setShowQuestionLevelFeedback(Boolean.valueOf(assessmentSettings.getShowQuestionLevelFeedback()));\n\t\t    \t\tfeedback.setShowSelectionLevelFeedback(Boolean.valueOf(assessmentSettings.getShowSelectionLevelFeedback()));\n\t\t    \t\tfeedback.setShowGraderComments(Boolean.valueOf(assessmentSettings.getShowGraderComments()));\n\t\t    \t\tfeedback.setShowStatistics(Boolean.valueOf(assessmentSettings.getShowStatistics()));\n\t\t    }\n\t\tassessment.setAssessmentFeedback(feedback);\n\n\t\t// set Grading\n\t\tEvaluationModelIfc evaluation = (EvaluationModelIfc) assessment.getEvaluationModel();\n\t\tif (evaluation == null){\n\t\t\tevaluation = new EvaluationModel();\n\t\t\tevaluation.setAssessmentBase(assessment.getData());\n\t\t}\n\t\tif (assessmentSettings.getAnonymousGrading() != null) {\n\t\t\tevaluation.setAnonymousGrading(new Integer(assessmentSettings.getAnonymousGrading()));\n\t\t}\t    \n\t\t// If there is value set for toDefaultGradebook, we reset it\n\t\t// Otherwise, do nothing\n\t\tif (assessmentSettings.getToDefaultGradebook() != null) {\n\t\t\tevaluation.setToGradeBook(assessmentSettings.getToDefaultGradebook());\n\t\t}\n\t\tif (assessmentSettings.getScoringType() != null) {\n\t\t\tevaluation.setScoringType(new Integer(assessmentSettings.getScoringType()));\n\t\t}\n\t\tassessment.setEvaluationModel(evaluation);\n\n\t\t// update ValueMap: it contains value for thh checkboxes in\n\t\t// publishedSettings.jsp for: hasAvailableDate, hasDueDate,\n\t\t// hasRetractDate, hasAnonymous, hasAuthenticatedUser, hasIpAddress,\n\t\t// hasUsernamePassword, hasTimeAssessment,hasAutoSubmit, hasPartMetaData, \n\t\t// hasQuestionMetaData\n\t\tHashMap h = assessmentSettings.getValueMap();\n\t\tsaveAssessmentSettings.updateMetaWithValueMap(assessment, h);\n\t\t\n\t\t// i. set Graphics\n\t\tassessment.updateAssessmentMetaData(AssessmentMetaDataIfc.BGCOLOR, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getBgColor()));\n\t\tassessment.updateAssessmentMetaData(AssessmentMetaDataIfc.BGIMAGE, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getBgImage()));\n\n\t    // j. set objectives,rubrics,keywords\n\t\tassessment.updateAssessmentMetaData(AssessmentMetaDataIfc.KEYWORDS, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getKeywords()));\n\t    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.OBJECTIVES, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getObjectives()));\n\t    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.RUBRICS, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getRubrics()));\n\t}","commit_id":"e0cb48cfae7354dd3f6e2ad2c8b67c6058febf77","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n   * @param templateBean\n   * @param templateId template id or \"0\" if create new\n   * @return true on success\n   * @throws java.lang.Exception\n   */\n  public boolean updateAssessment(TemplateBean templateBean)\n  {\n    try\n    {\n      String templateIdString =  templateBean.getIdString();\n      AssessmentService delegate = new AssessmentService();\n      AssessmentBaseIfc template = null;\n      if (\"0\".equals(templateIdString))\n      {\n        template = new AssessmentTemplateData();\n        template.setAssessmentBaseId(Long.valueOf(0));\n        AssessmentAccessControl aac = new AssessmentAccessControl();\n        template.setAssessmentAccessControl(aac);\n        aac.setAssessmentBase(template);\n        EvaluationModel em = new EvaluationModel();\n        template.setEvaluationModel(em);\n        em.setAssessmentBase(template);\n        AssessmentFeedback feedback = new AssessmentFeedback();\n        template.setAssessmentFeedback(feedback);\n        feedback.setAssessmentBase(template);\n        template.setTypeId(TypeFacade.TEMPLATE_HOMEWORK);\n\n        // Dunno what these are for, but it won't work without them.\n        template.setStatus(AssessmentTemplateIfc.ACTIVE_STATUS);\n        template.setParentId(Long.valueOf(0));\n        template.setComments(\"comments\");\n        template.setInstructorNotification(Integer.valueOf(1));\n        template.setTesteeNotification(Integer.valueOf(1));\n        template.setMultipartAllowed(Integer.valueOf(1));\n      }\n      else\n      {\n        template =\n          (delegate.getAssessmentTemplate(templateIdString)).getData();\n      }\n\n      template.setTitle(templateBean.getTemplateName());\n      if (templateBean.getTemplateAuthor() != null)\n        templateBean.getValueMap().put\n          (\"author\", TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, templateBean.getTemplateAuthor()));\n      template.setDescription(templateBean.getTemplateDescription());\n\n      // Assessment Access Control\n      AssessmentAccessControlIfc aac = template.getAssessmentAccessControl();\n      if (aac == null)\n      {\n        aac = new AssessmentAccessControl();\n        template.setAssessmentAccessControl(aac);\n        aac.setAssessmentBase(template);\n      }\n      aac.setItemNavigation(Integer.valueOf(templateBean.getItemAccessType()));\n      aac.setAssessmentFormat(Integer.valueOf(templateBean.getDisplayChunking()));\n      aac.setItemNumbering(Integer.valueOf(templateBean.getQuestionNumbering()));\n      if (templateBean.getMarkForReview() != null && templateBean.getMarkForReview().equals(Boolean.TRUE)) {\n    \t  aac.setMarkForReview(Integer.valueOf(1));\n      }\n      else {\n    \t  aac.setMarkForReview(Integer.valueOf(0));\n      }\n      aac.setSubmissionsSaved(Integer.valueOf(templateBean.getSubmissionModel()));\n      \n      if (templateBean.getValueMap().get(\"submissionModel_isInstructorEditable\") != null && ((Boolean) templateBean.getValueMap().get(\"submissionModel_isInstructorEditable\")).booleanValue()) {\n    \t  if (templateBean.getSubmissionModel().equals(AssessmentAccessControlIfc.UNLIMITED_SUBMISSIONS.toString()))\n    \t  {\n    \t\t  aac.setSubmissionsAllowed(null);\n    \t\t  aac.setUnlimitedSubmissions(Boolean.TRUE);\n    \t  }\n    \t  else{\n    \t\t  aac.setSubmissionsAllowed(Integer.valueOf(templateBean.getSubmissionNumber()));\n    \t\t  aac.setUnlimitedSubmissions(Boolean.FALSE);\n    \t  }\n      }\n      else { // if \"Number of Submissions Allowed\" is not editable, just default to unlimited\n\t\t  aac.setSubmissionsAllowed(null);\n\t\t  aac.setUnlimitedSubmissions(Boolean.TRUE);\n      }\n      aac.setLateHandling(Integer.valueOf(templateBean.getLateHandling()));\n      \n      if (templateBean.getValueMap().get(\"automaticSubmission_isInstructorEditable\") == null) {\n    \t  templateBean.setValue(\"automaticSubmission_isInstructorEditable\", \"false\");\n      }\n      \n      if (templateBean.getAutomaticSubmission()) {\n    \t  aac.setAutoSubmit(Integer.valueOf(\"1\"));\n      }\n      else {\n    \t  aac.setAutoSubmit(Integer.valueOf(\"0\"));\n      }\n      \n      // Evaluation Model\n      EvaluationModelIfc model = template.getEvaluationModel();\n      if (model == null)\n      {\n        model = new EvaluationModel();\n        model.setAssessmentBase(template);\n        template.setEvaluationModel(model);\n      }\n      model.setAssessmentBase(template);\n      model.setAnonymousGrading\n        (Integer.valueOf(templateBean.getAnonymousGrading()));\n      model.setToGradeBook(templateBean.getToGradebook());\n      model.setScoringType(Integer.valueOf(templateBean.getRecordedScore()));\n\n      // Assessment Feedback\n      AssessmentFeedbackIfc feedback = template.getAssessmentFeedback();\n      if (feedback == null)\n      {\n        feedback = new AssessmentFeedback();\n        feedback.setAssessmentBase(template);\n        template.setAssessmentFeedback(feedback);\n      }\n      feedback.setFeedbackDelivery(Integer.valueOf(templateBean.getFeedbackType()));\n      feedback.setFeedbackAuthoring(Integer.valueOf(templateBean.getFeedbackAuthoring()));\n\n      Boolean canEditFeedbackComponent=(Boolean)templateBean.getValue(\"feedbackComponents_isInstructorEditable\");\n      // SAK-3573: looks like at some point the \"feedbackComponents_isInstructorEditable\" were being used\n      // in place of \"EditComponent\" but \n      // 1) the changes was not done all the way (see TemplateBean, line 99 is missing) and \n      // 2) \"EditComponent\" was always set to 1 instead of being updated\n      // correctly to provide backward compatibility to old data. -daisyf\n      if (canEditFeedbackComponent.booleanValue())\n\t  feedback.setEditComponents(Integer.valueOf(\"1\"));\n      else\n\t  feedback.setEditComponents(Integer.valueOf(\"0\"));\n\n      feedback.setShowQuestionText\n        (templateBean.getFeedbackComponent_QuestionText());\n      feedback.setShowStudentResponse\n        (templateBean.getFeedbackComponent_StudentResp());\n      feedback.setShowCorrectResponse\n        (templateBean.getFeedbackComponent_CorrectResp());\n      feedback.setShowStudentScore\n        (templateBean.getFeedbackComponent_StudentScore());\n      feedback.setShowStudentQuestionScore\n        (templateBean.getFeedbackComponent_StudentQuestionScore());\n      feedback.setShowQuestionLevelFeedback\n        (templateBean.getFeedbackComponent_QuestionLevel());\n      feedback.setShowSelectionLevelFeedback\n        (templateBean.getFeedbackComponent_SelectionLevel());\n      feedback.setShowGraderComments\n        (templateBean.getFeedbackComponent_GraderComments());\n      feedback.setShowStatistics\n        (templateBean.getFeedbackComponent_Statistics());\n\n      //log.info(\"templateId = \" + templateIdString);\n      if (\"0\".equals(templateIdString)) // New template\n      {\n        template.setCreatedBy(AgentFacade.getAgentString());\n        template.setCreatedDate(new Date());\n      }\n      else\n      {\n        template.setCreatedBy(ContextUtil.lookupParam(\"createdBy\"));\n        SimpleDateFormat format = new SimpleDateFormat();\n        //log.info(\"Date is \" + templateBean.getCreatedDate());\n        template.setCreatedDate(format.parse\n          (ContextUtil.lookupParam(\"createdDate\")));\n      }\n      template.setLastModifiedBy(AgentFacade.getAgentString());\n      template.setLastModifiedDate(new Date());\n\n      //** save template before dealing with meta data set\n      delegate.save((AssessmentTemplateData)template);\n\n      delegate.deleteAllMetaData((AssessmentTemplateData)template);\n\n      log.debug(\"**** after deletion of meta data\");\n      HashSet set = new HashSet();\n      Iterator iter = templateBean.getValueMap().keySet().iterator();\n      while (iter.hasNext())\n      {\n        String label = (String) iter.next();\n        String value = (String) templateBean.getValueMap().get(label).toString();\n        //log.info(\"Label: \" + label + \", Value: \" + value);\n        AssessmentMetaData data =\n          new AssessmentMetaData(template, label, value);\n        set.add(data);\n      }\n      template.setAssessmentMetaDataSet(set);\n\n      delegate.save((AssessmentTemplateData)template);\n\n    }\n    catch (RuntimeException ex)\n    {\n      log.error(ex.getMessage(), ex);\n      return false;\n    } \n    catch (ParseException e) {\n    \tlog.error(e.getMessage(), e);\n        return false;\n\t}\n\n    return true;\n  }","id":48888,"modified_method":"/**\n   * @param templateBean\n   * @param templateId template id or \"0\" if create new\n   * @return true on success\n   * @throws java.lang.Exception\n   */\n  public boolean updateAssessment(TemplateBean templateBean)\n  {\n    try\n    {\n      String templateIdString =  templateBean.getIdString();\n      AssessmentService delegate = new AssessmentService();\n      AssessmentBaseIfc template = null;\n      if (\"0\".equals(templateIdString))\n      {\n        template = new AssessmentTemplateData();\n        template.setAssessmentBaseId(Long.valueOf(0));\n        AssessmentAccessControl aac = new AssessmentAccessControl();\n        template.setAssessmentAccessControl(aac);\n        aac.setAssessmentBase(template);\n        EvaluationModel em = new EvaluationModel();\n        template.setEvaluationModel(em);\n        em.setAssessmentBase(template);\n        AssessmentFeedback feedback = new AssessmentFeedback();\n        template.setAssessmentFeedback(feedback);\n        feedback.setAssessmentBase(template);\n        template.setTypeId(TypeFacade.TEMPLATE_HOMEWORK);\n\n        // Dunno what these are for, but it won't work without them.\n        template.setStatus(AssessmentTemplateIfc.ACTIVE_STATUS);\n        template.setParentId(Long.valueOf(0));\n        template.setComments(\"comments\");\n        template.setInstructorNotification(Integer.valueOf(1));\n        template.setTesteeNotification(Integer.valueOf(1));\n        template.setMultipartAllowed(Integer.valueOf(1));\n      }\n      else\n      {\n        template =\n          (delegate.getAssessmentTemplate(templateIdString)).getData();\n      }\n\n      template.setTitle(templateBean.getTemplateName());\n      if (templateBean.getTemplateAuthor() != null)\n        templateBean.getValueMap().put\n          (\"author\", TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, templateBean.getTemplateAuthor()));\n      template.setDescription(templateBean.getTemplateDescription());\n\n      // Assessment Access Control\n      AssessmentAccessControlIfc aac = template.getAssessmentAccessControl();\n      if (aac == null)\n      {\n        aac = new AssessmentAccessControl();\n        template.setAssessmentAccessControl(aac);\n        aac.setAssessmentBase(template);\n      }\n      aac.setItemNavigation(Integer.valueOf(templateBean.getItemAccessType()));\n      aac.setAssessmentFormat(Integer.valueOf(templateBean.getDisplayChunking()));\n      aac.setItemNumbering(Integer.valueOf(templateBean.getQuestionNumbering()));\n      if (templateBean.getMarkForReview() != null && templateBean.getMarkForReview().equals(Boolean.TRUE)) {\n    \t  aac.setMarkForReview(Integer.valueOf(1));\n      }\n      else {\n    \t  aac.setMarkForReview(Integer.valueOf(0));\n      }\n      aac.setSubmissionsSaved(Integer.valueOf(templateBean.getSubmissionModel()));\n      \n      if (templateBean.getValueMap().get(\"submissionModel_isInstructorEditable\") != null && ((Boolean) templateBean.getValueMap().get(\"submissionModel_isInstructorEditable\")).booleanValue()) {\n    \t  if (templateBean.getSubmissionModel().equals(AssessmentAccessControlIfc.UNLIMITED_SUBMISSIONS.toString()))\n    \t  {\n    \t\t  aac.setSubmissionsAllowed(null);\n    \t\t  aac.setUnlimitedSubmissions(Boolean.TRUE);\n    \t  }\n    \t  else{\n    \t\t  aac.setSubmissionsAllowed(Integer.valueOf(templateBean.getSubmissionNumber()));\n    \t\t  aac.setUnlimitedSubmissions(Boolean.FALSE);\n    \t  }\n      }\n      else { // if \"Number of Submissions Allowed\" is not editable, just default to unlimited\n\t\t  aac.setSubmissionsAllowed(null);\n\t\t  aac.setUnlimitedSubmissions(Boolean.TRUE);\n      }\n      aac.setLateHandling(Integer.valueOf(templateBean.getLateHandling()));\n      \n      if (templateBean.getValueMap().get(\"automaticSubmission_isInstructorEditable\") == null) {\n    \t  templateBean.setValue(\"automaticSubmission_isInstructorEditable\", \"false\");\n      }\n      \n      if (templateBean.getAutomaticSubmission()) {\n    \t  aac.setAutoSubmit(Integer.valueOf(\"1\"));\n      }\n      else {\n    \t  aac.setAutoSubmit(Integer.valueOf(\"0\"));\n      }\n      \n      // Evaluation Model\n      EvaluationModelIfc model = template.getEvaluationModel();\n      if (model == null)\n      {\n        model = new EvaluationModel();\n        model.setAssessmentBase(template);\n        template.setEvaluationModel(model);\n      }\n      model.setAssessmentBase(template);\n      model.setAnonymousGrading\n        (Integer.valueOf(templateBean.getAnonymousGrading()));\n      model.setToGradeBook(templateBean.getToGradebook());\n      model.setScoringType(Integer.valueOf(templateBean.getRecordedScore()));\n\n      // Assessment Feedback\n      AssessmentFeedbackIfc feedback = template.getAssessmentFeedback();\n      if (feedback == null)\n      {\n        feedback = new AssessmentFeedback();\n        feedback.setAssessmentBase(template);\n        template.setAssessmentFeedback(feedback);\n      }\n      feedback.setFeedbackDelivery(Integer.valueOf(templateBean.getFeedbackType()));\n      feedback.setFeedbackAuthoring(Integer.valueOf(templateBean.getFeedbackAuthoring()));\n\n      Boolean canEditFeedbackComponent=(Boolean)templateBean.getValue(\"feedbackComponents_isInstructorEditable\");\n      // SAK-3573: looks like at some point the \"feedbackComponents_isInstructorEditable\" were being used\n      // in place of \"EditComponent\" but \n      // 1) the changes was not done all the way (see TemplateBean, line 99 is missing) and \n      // 2) \"EditComponent\" was always set to 1 instead of being updated\n      // correctly to provide backward compatibility to old data. -daisyf\n      if (canEditFeedbackComponent.booleanValue())\n\t  feedback.setEditComponents(Integer.valueOf(\"1\"));\n      else\n\t  feedback.setEditComponents(Integer.valueOf(\"0\"));\n      // if 'No feedback' (it corresponds to value 3) is selected, \n      // all components are unchecked\n      if (feedback.getFeedbackDelivery().equals(new Integer(\"3\")))\n      {\n    \t  feedback.setShowQuestionText(false);\n    \t  feedback.setShowStudentResponse(false);\n    \t  feedback.setShowCorrectResponse(false);\n    \t  feedback.setShowStudentScore(false);\n    \t  feedback.setShowStudentQuestionScore(false);\n    \t  feedback.setShowQuestionLevelFeedback(false);\n    \t  feedback.setShowSelectionLevelFeedback(false);\n    \t  feedback.setShowGraderComments(false);\n    \t  feedback.setShowStatistics(false);\n      }\n      else {\n    \t  \tfeedback.setShowQuestionText\n    \t  \t\t(templateBean.getFeedbackComponent_QuestionText());\n    \t  \tfeedback.setShowStudentResponse\n    \t  \t\t(templateBean.getFeedbackComponent_StudentResp());\n    \t  \tfeedback.setShowCorrectResponse\n    \t  \t\t(templateBean.getFeedbackComponent_CorrectResp());\n    \t  \tfeedback.setShowStudentScore\n    \t  \t\t(templateBean.getFeedbackComponent_StudentScore());\n    \t  \tfeedback.setShowStudentQuestionScore\n    \t  \t\t(templateBean.getFeedbackComponent_StudentQuestionScore());\n    \t  \tfeedback.setShowQuestionLevelFeedback\n    \t  \t\t(templateBean.getFeedbackComponent_QuestionLevel());\n    \t  \tfeedback.setShowSelectionLevelFeedback\n    \t  \t\t(templateBean.getFeedbackComponent_SelectionLevel());\n    \t  \tfeedback.setShowGraderComments\n    \t  \t\t(templateBean.getFeedbackComponent_GraderComments());\n    \t  \tfeedback.setShowStatistics\n    \t  \t\t(templateBean.getFeedbackComponent_Statistics());\n      }\n\n      //log.info(\"templateId = \" + templateIdString);\n      if (\"0\".equals(templateIdString)) // New template\n      {\n        template.setCreatedBy(AgentFacade.getAgentString());\n        template.setCreatedDate(new Date());\n      }\n      else\n      {\n        template.setCreatedBy(ContextUtil.lookupParam(\"createdBy\"));\n        SimpleDateFormat format = new SimpleDateFormat();\n        //log.info(\"Date is \" + templateBean.getCreatedDate());\n        template.setCreatedDate(format.parse\n          (ContextUtil.lookupParam(\"createdDate\")));\n      }\n      template.setLastModifiedBy(AgentFacade.getAgentString());\n      template.setLastModifiedDate(new Date());\n\n      //** save template before dealing with meta data set\n      delegate.save((AssessmentTemplateData)template);\n\n      delegate.deleteAllMetaData((AssessmentTemplateData)template);\n\n      log.debug(\"**** after deletion of meta data\");\n      HashSet set = new HashSet();\n      Iterator iter = templateBean.getValueMap().keySet().iterator();\n      while (iter.hasNext())\n      {\n        String label = (String) iter.next();\n        String value = (String) templateBean.getValueMap().get(label).toString();\n        //log.info(\"Label: \" + label + \", Value: \" + value);\n        AssessmentMetaData data =\n          new AssessmentMetaData(template, label, value);\n        set.add(data);\n      }\n      template.setAssessmentMetaDataSet(set);\n\n      delegate.save((AssessmentTemplateData)template);\n\n    }\n    catch (RuntimeException ex)\n    {\n      log.error(ex.getMessage(), ex);\n      return false;\n    } \n    catch (ParseException e) {\n    \tlog.error(e.getMessage(), e);\n        return false;\n\t}\n\n    return true;\n  }","commit_id":"e0cb48cfae7354dd3f6e2ad2c8b67c6058febf77","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n     * gets the root folder.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param tagcontent Unused in this special case of a user method. Can be ignored.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param userObj Hashtable with parameters.\n     * @return byte[] with the content of this subelement.\n     * @exception CmsException\n     */\n    public Object getFolderRoot(CmsObject cms, String tagcontent, A_CmsXmlContent doc, Object userObject)\n            throws CmsException {\n\n        int level=0;\n        // tagcontent determines the folder starting from root folder.\n        // if tagcontent is null, then the navigation of root folder must be showed.\n        if (!tagcontent.equals(\"\")) {\n            try {\n                level=Integer.parseInt(tagcontent);\n            } catch(NumberFormatException e) {\n                throw new CmsException(e.getMessage());\n            }\n        }\n        String currentFolder=\"\";\n        if (level<=0) {\n            currentFolder=cms.rootFolder().getAbsolutePath();\n        } else {\n            currentFolder=extractFolder(cms,level);\n        }\n        String rootFolder=cms.getRequestContext().getRequest().getServletUrl() + currentFolder;\n        return rootFolder.getBytes();\n    }","id":48889,"modified_method":"/**\n     * gets the root folder.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param tagcontent Unused in this special case of a user method. Can be ignored.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param userObj Hashtable with parameters.\n     * @return byte[] with the content of this subelement.\n     * @exception CmsException\n     */\n    public Object getFolderRoot(CmsObject cms, String tagcontent, A_CmsXmlContent doc, Object userObject)\n            throws CmsException {\n\n        int level=1;\n        String exact=\"false\";\n        // tagcontent determines the folder starting from root folder.\n        // if tagcontent is null, then the navigation of root folder must be showed.\n        if (!tagcontent.equals(\"\")) {\n            try {\n                if (tagcontent.indexOf(\",\")!=-1) {\n                    level=Integer.parseInt(tagcontent.substring(0,tagcontent.indexOf(\",\")));\n                    exact=tagcontent.substring(tagcontent.indexOf(\",\")+1).toLowerCase();\n                } else {\n                    level=Integer.parseInt(tagcontent);\n                }\n            } catch(NumberFormatException e) {\n                level=1;\n                exact=tagcontent.toLowerCase();\n                if (!exact.equals(\"true\")) {\n                    exact=\"false\";\n                }\n            }\n        }\n        String currentFolder=extractFolder(cms,level,exact);\n        if (currentFolder.equals(\"\"))\n            return \"\".getBytes();\n        String rootFolder=cms.getRequestContext().getRequest().getServletUrl() + currentFolder;\n        return rootFolder.getBytes();\n    }","commit_id":"5028359191931e149730db75a59c6ca9fc6d68b4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Builds the tree of navigation.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param doc Reference to the CmsXmTemplateFile object of the initiating XML document.\n     * @param resources a vector that contains the elements of navigation.\n     * @param userObj Hashtable with parameters.\n     * @param requestedUri The absolute path of current requested file.\n     * @param currentFolder The currenet folder.\n     * @param servletPath The absolute path of servlet\n     * @param level The starting level.\n     * @param depth An Integer that shows how many folders must be displayed.\n     * @param depthIsNull a boolean that determines whether the depth is given in tagcontent\n     * @return String that contains the navigation.\n     */\n    protected String buildNavTree(CmsObject cms, CmsXmlTemplateFile template, Object userObject, Vector resources, String requestedUri, String currentFolder, String servletPath,int level,int depth,boolean depthIsNull,int[] count)\n        throws CmsException {\n\n        StringBuffer result = new StringBuffer();\n        LinkSubstitution ls = new LinkSubstitution();\n        // define some array for link,text and position of\n        // the elements of navigation\n        int size = resources.size();\n        String navLink[] = new String[size];\n        String navText[] = new String[size];\n        float navPos[] = new float[size];\n        // extract the navigation from the given resources, i.e. it will be showed\n        // if the elements of that resources must be showed in navigation, i.e.\n        // wheather navigation Text und navigation position are defined for an element\n        int max=extractNav(cms,resources,navLink,navText,navPos);\n        // check wheather there is some elements\n        if (max>0) {\n            result.append(template.getProcessedDataValue(\"navstart\", this, userObject));\n            for(int i=0; i<max; i++) {\n                // set the templates\n                count[0]++;\n                template.setData(\"navtext\", navText[i]);\n                template.setData(\"navcount\", new Integer(count[0]).toString());\n                // this part is to set the level starting from specified level given as tagcontent\n                // there it must be make a difference between extracted level and the given level\n                int extractedLevel=extractLevel(cms,navLink[i]);\n                int rightLevel=extractedLevel;\n                if (level!=0) {\n                    rightLevel=(extractedLevel-level);\n                    if (rightLevel>=0) {\n                        rightLevel++;\n                    }\n                }\n                template.setData(\"navlevel\", new Integer(rightLevel).toString());\n                String link=\"\";\n                // Check whether the link is a folder\n                if (navLink[i].endsWith(\"/\")) {\n                    // read the property of folder to find the link file.\n                    String navIndex=cms.readProperty(navLink[i],C_PROPERTY_NAVINDEX);\n                    // if there is not defined a property then take C_NAVINDEX constant\n                    if (navIndex==null || (navIndex!=null && navIndex.equals(\"\"))) {\n                        navIndex=C_NAVINDEX;\n                    }\n                    // check whether the file exist, if not then the link is current uri\n                    try {\n                        cms.readFile(navLink[i] + navIndex);\n                        link=navLink[i] + navIndex;\n                        template.setData(\"navlink\", ls.getLinkSubstitution(cms, navLink[i] + navIndex));\n                    } catch (CmsException e) {\n                        link=requestedUri;\n                        template.setData(\"navlink\", ls.getLinkSubstitution(cms, requestedUri));\n                    }\n                } else {\n                    // check whether the file exist, if not then the link is current uri\n                    try {\n                        cms.readFile(navLink[i]);\n                        link=navLink[i];\n                        template.setData(\"navlink\", ls.getLinkSubstitution(cms, navLink[i]));\n                    } catch (CmsException e) {\n                        link=requestedUri;\n                        template.setData(\"navlink\", ls.getLinkSubstitution(cms, requestedUri));\n                    }\n                }\n                // Check if nav is current nav\n                if (link.equals(requestedUri)) {\n                    result.append(template.getProcessedDataValue(\"navcurrent\", this, userObject));\n                } else {\n                    result.append(template.getProcessedDataValue(\"naventry\", this, userObject));\n                }\n                // redurce the depth and test if it is now zero or is the depth\n                // given as tagcontent or not.\n                // if the depth is not given in tagcontent then the depth variable must be ignored\n                // the user don't want to give depth otherwise the depth must be considered\n                // because it must not be exceeded the limit that user has defined.\n                depth--;\n                if (depthIsNull || (depthIsNull==false && depth>=0)) {\n                    if (navLink[i].endsWith(\"/\")) {\n                        Vector all=cms.getSubFolders(navLink[i]);\n                        Vector files=cms.getFilesInFolder(navLink[i]);\n                        // register this folder for changes\n                        Vector vfsDeps = new Vector();\n                        vfsDeps.add(cms.readFolder(navLink[i]));\n                        registerVariantDeps(cms, template.getAbsoluteFilename(), null, null,\n                                        (Hashtable)userObject, vfsDeps, null, null);\n                        all.ensureCapacity(all.size() + files.size());\n                        Enumeration e = files.elements();\n                        while (e.hasMoreElements()) {\n                            all.addElement(e.nextElement());\n                        }\n                        result.append(buildNavTree(cms,template,userObject,all,requestedUri,currentFolder,servletPath,level,depth,depthIsNull,count));\n                    }\n                }\n            }\n            result.append(template.getProcessedDataValue(\"navend\", this, userObject));\n        }\n        return result.toString();\n    }","id":48890,"modified_method":"/**\n     * Builds the tree of navigation.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param doc Reference to the CmsXmTemplateFile object of the initiating XML document.\n     * @param resources a vector that contains the elements of navigation.\n     * @param userObj Hashtable with parameters.\n     * @param requestedUri The absolute path of current requested file.\n     * @param currentFolder The currenet folder.\n     * @param servletPath The absolute path of servlet\n     * @param level The starting level.\n     * @param depth An Integer that shows how many folders must be displayed.\n     * @param depthIsNull a boolean that determines whether the depth is given in tagcontent\n     * @return String that contains the navigation.\n     */\n    protected String buildNavTree(CmsObject cms, CmsXmlTemplateFile template, Object userObject, Vector resources, String requestedUri, String currentFolder, String servletPath,int level,int depth,boolean depthIsNull,int[] count)\n        throws CmsException {\n\n        StringBuffer result = new StringBuffer();\n        LinkSubstitution ls = new LinkSubstitution();\n        // define some array for link,text and position of\n        // the elements of navigation\n        int size = resources.size();\n        String navLink[] = new String[size];\n        String navText[] = new String[size];\n        float navPos[] = new float[size];\n        // extract the navigation from the given resources, i.e. it will be showed\n        // if the elements of that resources must be showed in navigation, i.e.\n        // wheather navigation Text und navigation position are defined for an element\n        int max=extractNav(cms,resources,navLink,navText,navPos);\n        // check wheather there is some elements\n        if (max>0) {\n            result.append(template.getProcessedDataValue(\"navstart\", this, userObject));\n            for(int i=0; i<max; i++) {\n                // set the templates\n                count[0]++;\n                template.setData(\"navtext\", navText[i]);\n                template.setData(\"navcount\", new Integer(count[0]).toString());\n                // this part is to set the level starting from specified level given as tagcontent\n                // there it must be make a difference between extracted level and the given level\n                int extractedLevel=extractLevel(cms,navLink[i]);\n                template.setData(\"navlevel\", new Integer(extractedLevel).toString());\n                /*int rightLevel=extractedLevel;\n                if (level!=0) {\n                    rightLevel=(extractedLevel-level);\n                    if (rightLevel>=0) {\n                        rightLevel++;\n                    }\n                }\n                template.setData(\"navlevel\", new Integer(rightLevel).toString());*/\n                String link=\"\";\n                // Check whether the link is a folder\n                if (navLink[i].endsWith(\"/\")) {\n                    // read the property of folder to find the link file.\n                    String navIndex=cms.readProperty(navLink[i],C_PROPERTY_NAVINDEX);\n                    // if there is not defined a property then take C_NAVINDEX constant\n                    if (navIndex==null || (navIndex!=null && navIndex.equals(\"\"))) {\n                        navIndex=C_NAVINDEX;\n                    }\n                    // check whether the file exist, if not then the link is current uri\n                    try {\n                        cms.readFile(navLink[i] + navIndex);\n                        link=navLink[i] + navIndex;\n                        template.setData(\"navlink\", ls.getLinkSubstitution(cms, navLink[i] + navIndex));\n                    } catch (CmsException e) {\n                        link=requestedUri;\n                        template.setData(\"navlink\", ls.getLinkSubstitution(cms, requestedUri));\n                    }\n                } else {\n                    // check whether the file exist, if not then the link is current uri\n                    try {\n                        cms.readFile(navLink[i]);\n                        link=navLink[i];\n                        template.setData(\"navlink\", ls.getLinkSubstitution(cms, navLink[i]));\n                    } catch (CmsException e) {\n                        link=requestedUri;\n                        template.setData(\"navlink\", ls.getLinkSubstitution(cms, requestedUri));\n                    }\n                }\n                // Check if nav is current nav\n                if (link.equals(requestedUri)) {\n                    result.append(template.getProcessedDataValue(\"navcurrent\", this, userObject));\n                } else {\n                    result.append(template.getProcessedDataValue(\"naventry\", this, userObject));\n                }\n                // redurce the depth and test if it is now zero or is the depth\n                // given as tagcontent or not.\n                // if the depth is not given in tagcontent then the depth variable must be ignored\n                // the user don't want to give depth otherwise the depth must be considered\n                // because it must not be exceeded the limit that user has defined.\n                depth--;\n                if (depthIsNull || (depthIsNull==false && depth>=0)) {\n                    if (navLink[i].endsWith(\"/\")) {\n                        Vector all=cms.getSubFolders(navLink[i]);\n                        Vector files=cms.getFilesInFolder(navLink[i]);\n                        // register this folder for changes\n                        Vector vfsDeps = new Vector();\n                        vfsDeps.add(cms.readFolder(navLink[i]));\n                        registerVariantDeps(cms, template.getAbsoluteFilename(), null, null,\n                                        (Hashtable)userObject, vfsDeps, null, null);\n                        all.ensureCapacity(all.size() + files.size());\n                        Enumeration e = files.elements();\n                        while (e.hasMoreElements()) {\n                            all.addElement(e.nextElement());\n                        }\n                        result.append(buildNavTree(cms,template,userObject,all,requestedUri,currentFolder,servletPath,level,depth,depthIsNull,count));\n                    }\n                }\n            }\n            result.append(template.getProcessedDataValue(\"navend\", this, userObject));\n        }\n        return result.toString();\n    }","commit_id":"5028359191931e149730db75a59c6ca9fc6d68b4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * gets the parent folder.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param tagcontent Unused in this special case of a user method. Can be ignored.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param userObj Hashtable with parameters.\n     * @return byte[] with the content of this subelement.\n     * @exception CmsException\n     */\n    public Object getFolderParent(CmsObject cms, String tagcontent, A_CmsXmlContent doc, Object userObject)\n            throws CmsException {\n\n        int level=0;\n        // tagcontent determines the folder starting from parent folder.\n        // if tagcontent is null, zero or negative, then the navigation of current\n        // folder must be showed.\n        if (!tagcontent.equals(\"\")) {\n            try {\n                level=Integer.parseInt(tagcontent);\n            } catch(NumberFormatException e) {\n                throw new CmsException(e.getMessage());\n            }\n        }\n        String currentFolder=\"\";\n        if (level<=0) {\n            currentFolder=cms.getRequestContext().currentFolder().getAbsolutePath();\n        } else {\n            // level is converted to negative number, so I can use the method\n            // \"extractFolder\" for positive and negative numbers. Negative number\n            // determines the parent folder level starting from current folder and\n            // positive number determines the level starting ftom root folder.\n            currentFolder=extractFolder(cms,((-1)*level));\n        }\n        String parentFolder=cms.getRequestContext().getRequest().getServletUrl() + currentFolder;\n        return parentFolder.getBytes();\n    }","id":48891,"modified_method":"/**\n     * gets the parent folder.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param tagcontent Unused in this special case of a user method. Can be ignored.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param userObj Hashtable with parameters.\n     * @return byte[] with the content of this subelement.\n     * @exception CmsException\n     */\n    public Object getFolderParent(CmsObject cms, String tagcontent, A_CmsXmlContent doc, Object userObject)\n            throws CmsException {\n\n        int level=1;\n        // tagcontent determines the folder starting from parent folder.\n        // if tagcontent is null, zero or negative, then the navigation of current\n        // folder must be showed.\n        String exact=\"false\";\n        // tagcontent determines the folder starting from root folder.\n        // if tagcontent is null, then the navigation of root folder must be showed.\n        if (!tagcontent.equals(\"\")) {\n            try {\n                if (tagcontent.indexOf(\",\")!=-1) {\n                    level=Integer.parseInt(tagcontent.substring(0,tagcontent.indexOf(\",\")));\n                    exact=tagcontent.substring(tagcontent.indexOf(\",\")+1).toLowerCase();\n                } else {\n                    level=Integer.parseInt(tagcontent);\n                }\n            } catch(NumberFormatException e) {\n                level=1;\n                exact=tagcontent.toLowerCase();\n                if (!exact.equals(\"true\")) {\n                    exact=\"false\";\n                }\n            }\n        }\n        String currentFolder=extractFolder(cms,((-1)*level),exact);\n        if (currentFolder.equals(\"\"))\n            return \"\".getBytes();\n        String parentFolder=cms.getRequestContext().getRequest().getServletUrl() + currentFolder;\n        return parentFolder.getBytes();\n    }","commit_id":"5028359191931e149730db75a59c6ca9fc6d68b4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * gets the navigation of files and folders,\n     * by folders it is showed closed, if the folder is clicked then it is opened.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param tagcontent used in this special case of a user method. Can't be ignored.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param userObj Hashtable with parameters.\n     * @return byte[] with the content of this subelement.\n     * @exception CmsException\n     */\n    public Object getNavFold(CmsObject cms, String tagcontent, A_CmsXmlContent doc, Object userObject)\n            throws CmsException {\n        // template file\n        CmsXmlTemplateFile template=(CmsXmlTemplateFile)doc;\n        // check whether there exist entry datablock\n        if (!template.hasData(\"naventry\")) {\n            return \"\".getBytes();\n        }\n        int level=0;\n        int[] count={0};\n        // if level is zero or null or negative then all folders recursive must\n        // be showed starting from root folder unless all folders stating from\n        // specified level of parent folder.\n        if (!tagcontent.equals(\"\")) {\n            try {\n                level=Integer.parseInt(tagcontent);\n            } catch(NumberFormatException e) {\n                throw new CmsException(e.getMessage());\n            }\n        }\n        // extract the folder\n        String folder=\"\";\n        if (level<=0) {\n            folder=cms.rootFolder().getAbsolutePath();\n        } else {\n            folder=extractFolder(cms,level);\n        }\n        // get uri, current folder, servletpath\n        String requestedUri = cms.getRequestContext().getUri();\n        String currentFolder=cms.getRequestContext().currentFolder().getAbsolutePath();\n        String servletPath = cms.getRequestContext().getRequest().getServletUrl();\n        // register this folder for changes\n        Vector vfsDeps = new Vector();\n        vfsDeps.add(cms.readFolder(folder));\n        registerVariantDeps(cms, doc.getAbsoluteFilename(), null, null,\n                        (Hashtable)userObject, vfsDeps, null, null);\n        // get all resources\n        Vector resources=cms.getSubFolders(folder);\n        Vector allFile=cms.getFilesInFolder(folder);\n        resources.ensureCapacity(resources.size() + allFile.size());\n        Enumeration e = allFile.elements();\n        while (e.hasMoreElements()) {\n            resources.addElement(e.nextElement());\n        }\n\n        String result=\"\";\n        // check wheather xml data blocks are defined.\n        if (!template.hasData(\"navcurrent\")) {\n            template.setData(\"navcurrent\", template.getData(\"naventry\"));\n        }\n        if (!template.hasData(\"navstart\")) {\n            template.setData(\"navstart\", \"\");\n        }\n        if (!template.hasData(\"navend\")) {\n            template.setData(\"navend\", \"\");\n        }\n        result=buildNavFold(cms,template,userObject,resources,requestedUri,currentFolder,servletPath,level,count);\n\n        return result.getBytes();\n    }","id":48892,"modified_method":"/**\n     * gets the navigation of files and folders,\n     * by folders it is showed closed, if the folder is clicked then it is opened.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param tagcontent used in this special case of a user method. Can't be ignored.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param userObj Hashtable with parameters.\n     * @return byte[] with the content of this subelement.\n     * @exception CmsException\n     */\n    public Object getNavFold(CmsObject cms, String tagcontent, A_CmsXmlContent doc, Object userObject)\n            throws CmsException {\n        // template file\n        CmsXmlTemplateFile template=(CmsXmlTemplateFile)doc;\n        // check whether there exist entry datablock\n        if (!template.hasData(\"naventry\")) {\n            return \"\".getBytes();\n        }\n        int level=1;\n        int[] count={0};\n        String exact=\"false\";\n        // if level is zero or null or negative then all folders recursive must\n        // be showed starting from root folder unless all folders stating from\n        // specified level of parent folder.\n        if (!tagcontent.equals(\"\")) {\n            try {\n                if (tagcontent.indexOf(\",\")!=-1) {\n                    level=Integer.parseInt(tagcontent.substring(0,tagcontent.indexOf(\",\")));\n                    exact=tagcontent.substring(tagcontent.indexOf(\",\")+1).toLowerCase();\n                } else {\n                    level=Integer.parseInt(tagcontent);\n                }\n            } catch(NumberFormatException e) {\n                level=1;\n                exact=tagcontent.toLowerCase();\n                if (!exact.equals(\"true\")) {\n                    exact=\"false\";\n                }\n            }\n        }\n        // extract the folder\n        String folder=extractFolder(cms,level,exact);\n        if (folder.equals(\"\"))\n            return \"\".getBytes();\n        //}\n        // get uri, current folder, servletpath\n        String requestedUri = cms.getRequestContext().getUri();\n        String currentFolder=cms.getRequestContext().currentFolder().getAbsolutePath();\n        String servletPath = cms.getRequestContext().getRequest().getServletUrl();\n        // register this folder for changes\n        Vector vfsDeps = new Vector();\n        vfsDeps.add(cms.readFolder(folder));\n        registerVariantDeps(cms, doc.getAbsoluteFilename(), null, null,\n                        (Hashtable)userObject, vfsDeps, null, null);\n        // get all resources\n        Vector resources=cms.getSubFolders(folder);\n        Vector allFile=cms.getFilesInFolder(folder);\n        resources.ensureCapacity(resources.size() + allFile.size());\n        Enumeration e = allFile.elements();\n        while (e.hasMoreElements()) {\n            resources.addElement(e.nextElement());\n        }\n\n        String result=\"\";\n        // check wheather xml data blocks are defined.\n        if (!template.hasData(\"navcurrent\")) {\n            template.setData(\"navcurrent\", template.getData(\"naventry\"));\n        }\n        if (!template.hasData(\"navstart\")) {\n            template.setData(\"navstart\", \"\");\n        }\n        if (!template.hasData(\"navend\")) {\n            template.setData(\"navend\", \"\");\n        }\n        result=buildNavFold(cms,template,userObject,resources,requestedUri,currentFolder,servletPath,level,count);\n\n        return result.getBytes();\n    }","commit_id":"5028359191931e149730db75a59c6ca9fc6d68b4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * gets the navigation of folders recursive.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param tagcontent Unused in this special case of a user method. Can be ignored.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param userObj Hashtable with parameters.\n     * @return byte[] with the content of this subelement.\n     * @exception CmsException\n     */\n    public Object getNavTree(CmsObject cms, String tagcontent, A_CmsXmlContent doc, Object userObject)\n            throws CmsException {\n\n        // template file\n        CmsXmlTemplateFile template=(CmsXmlTemplateFile)doc;\n        // check whether there exist entry datablock\n        if (!template.hasData(\"naventry\")) {\n            return \"\".getBytes();\n        }\n        int level=0;\n        int depth=0;\n        int[] count={0};\n        // if there is not any depth then it must not be tested in a if condition\n        boolean depthIsNull=true;\n        // if level is zero or null or negative then all folders recursive must\n        // be showed starting from root folder unless all folders stating from\n        // specified level of parent folder.\n        if (!tagcontent.equals(\"\")) {\n            try {\n                // comma shows that there is two parameters: level,depth\n                // otherwise there is one parameter: level\n                if (tagcontent.indexOf(\",\")!=-1) {\n                    level=Integer.parseInt(tagcontent.substring(0,tagcontent.indexOf(\",\")));\n                    depth=Integer.parseInt(tagcontent.substring(tagcontent.indexOf(\",\")+1));\n                } else {\n                    level=Integer.parseInt(tagcontent);\n                }\n            } catch(NumberFormatException e) {\n                throw new CmsException(e.getMessage());\n            }\n        }\n        // if level is not entered or it is less than zero then folder is the root folder\n        // otherwise the folder must be extracted accordeing to the entered level.\n        String folder=\"\";\n        if (level<=0) {\n            folder=cms.rootFolder().getAbsolutePath();\n        } else {\n            folder=extractFolder(cms,level);\n        }\n        if (depth>0) {\n            depthIsNull=false;\n        }\n        // register this folder for changes\n        Vector vfsDeps = new Vector();\n        vfsDeps.add(cms.readFolder(folder));\n        registerVariantDeps(cms, doc.getAbsoluteFilename(), null, null,\n                        (Hashtable)userObject, vfsDeps, null, null);\n        // get all folders in specified folder\n        Vector resources=cms.getSubFolders(folder);\n        // get all files in specified folder\n        Vector allFile=cms.getFilesInFolder(folder);\n        // get a vector of all files und folders\n        resources.ensureCapacity(resources.size() + allFile.size());\n        Enumeration e = allFile.elements();\n        while (e.hasMoreElements()) {\n            resources.addElement(e.nextElement());\n        }\n        // get the uri,servletpath and current folder\n        String requestedUri = cms.getRequestContext().getUri();\n        String currentFolder=cms.getRequestContext().currentFolder().getAbsolutePath();\n        String servletPath = cms.getRequestContext().getRequest().getServletUrl();\n\n        String result=\"\";\n        // check whether xml data blocks are defined.\n        // The main datablock is entry, it must be defined, the others will get\n        // the same datablock if they don't exist.\n        if (!template.hasData(\"navcurrent\")) {\n            template.setData(\"navcurrent\", template.getData(\"naventry\"));\n        }\n        if (!template.hasData(\"navstart\")) {\n            template.setData(\"navstart\", \"\");\n        }\n        if (!template.hasData(\"navend\")) {\n            template.setData(\"navend\", \"\");\n        }\n        result=buildNavTree(cms,template,userObject,resources,requestedUri,currentFolder,servletPath,level,depth,depthIsNull,count);\n\n        return result.getBytes();\n    }","id":48893,"modified_method":"/**\n     * gets the navigation of folders recursive.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param tagcontent Unused in this special case of a user method. Can be ignored.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param userObj Hashtable with parameters.\n     * @return byte[] with the content of this subelement.\n     * @exception CmsException\n     */\n    public Object getNavTree(CmsObject cms, String tagcontent, A_CmsXmlContent doc, Object userObject)\n            throws CmsException {\n\n        // template file\n        CmsXmlTemplateFile template=(CmsXmlTemplateFile)doc;\n        // check whether there exist entry datablock\n        if (!template.hasData(\"naventry\")) {\n            return \"\".getBytes();\n        }\n        int level=1;\n        int depth=0;\n        int[] count={0};\n        String exact=\"false\";\n        // if there is not any depth then it must not be tested in a if condition\n        boolean depthIsNull=true;\n        // if level is zero or null or negative then all folders recursive must\n        // be showed starting from root folder unless all folders stating from\n        // specified level of parent folder.\n        if (!tagcontent.equals(\"\")) {\n            StringTokenizer st = new StringTokenizer(tagcontent,\",\");\n            String token1=\"\",token2=\"\",token3=\"\";\n            if (st.hasMoreTokens())\n                token1=st.nextToken();\n            if (st.hasMoreTokens())\n                token2=st.nextToken();\n            if (st.hasMoreTokens())\n                token3=st.nextToken();\n            // now assign tokens to real values\n            if (!token3.equals(\"\"))\n                exact=token3.toLowerCase();\n            if (!token2.equals(\"\")) {\n                try {\n                    depth=Integer.parseInt(token2);\n                } catch(NumberFormatException e) {\n                    depth=0;\n                    exact=token2.toLowerCase();\n                    if (!exact.equals(\"true\")) {\n                        exact=\"false\";\n                    }\n                }\n            }\n            if (!token1.equals(\"\")) {\n                try {\n                    level=Integer.parseInt(token1);\n                } catch(NumberFormatException e) {\n                    level=1;\n                    exact=token1.toLowerCase();\n                    if (!exact.equals(\"true\")) {\n                        exact=\"false\";\n                    }\n                }\n            }\n        }\n        // if level is not entered or it is less than zero then folder is the root folder\n        // otherwise the folder must be extracted accordeing to the entered level.\n        String folder=extractFolder(cms,level,exact);\n        if (folder.equals(\"\"))\n            return \"\".getBytes();\n        if (depth>0) {\n            depthIsNull=false;\n        }\n        // register this folder for changes\n        Vector vfsDeps = new Vector();\n        vfsDeps.add(cms.readFolder(folder));\n        registerVariantDeps(cms, doc.getAbsoluteFilename(), null, null,\n                        (Hashtable)userObject, vfsDeps, null, null);\n        // get all folders in specified folder\n        Vector resources=cms.getSubFolders(folder);\n        // get all files in specified folder\n        Vector allFile=cms.getFilesInFolder(folder);\n        // get a vector of all files und folders\n        resources.ensureCapacity(resources.size() + allFile.size());\n        Enumeration e = allFile.elements();\n        while (e.hasMoreElements()) {\n            resources.addElement(e.nextElement());\n        }\n        // get the uri,servletpath and current folder\n        String requestedUri = cms.getRequestContext().getUri();\n        String currentFolder=cms.getRequestContext().currentFolder().getAbsolutePath();\n        String servletPath = cms.getRequestContext().getRequest().getServletUrl();\n\n        String result=\"\";\n        // check whether xml data blocks are defined.\n        // The main datablock is entry, it must be defined, the others will get\n        // the same datablock if they don't exist.\n        if (!template.hasData(\"navcurrent\")) {\n            template.setData(\"navcurrent\", template.getData(\"naventry\"));\n        }\n        if (!template.hasData(\"navstart\")) {\n            template.setData(\"navstart\", \"\");\n        }\n        if (!template.hasData(\"navend\")) {\n            template.setData(\"navend\", \"\");\n        }\n        result=buildNavTree(cms,template,userObject,resources,requestedUri,currentFolder,servletPath,level,depth,depthIsNull,count);\n        return result.getBytes();\n    }","commit_id":"5028359191931e149730db75a59c6ca9fc6d68b4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * gets a specified property of specified folder starting from current folder.\n     *\n     * @param cms A_CmsObject Object for accessing system resources.\n     * @param tagcontent Unused in this special case of a user method. Can be ignored.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param userObj Hashtable with parameters.\n     * @return byte[] with the content of this subelement.\n     * @exception CmsException\n     */\n    public Object getPropertyParent(CmsObject cms, String tagcontent, A_CmsXmlContent doc, Object userObject)\n        throws CmsException {\n        int level=0;\n        String property=\"\";\n        // tagcontent determines the parent folder starting from current folder and\n        // the property definition name sparated by a comma.\n        if (!tagcontent.equals(\"\")) {\n            try {\n                level=Integer.parseInt(tagcontent.substring(0,tagcontent.indexOf(\",\")));\n            } catch(NumberFormatException e) {\n                throw new CmsException(e.getMessage());\n            }\n            String currentFolder=\"\";\n            if (level<=0) {\n                currentFolder=cms.getRequestContext().currentFolder().getAbsolutePath();\n            } else {\n                // level is converted to negative number, so I can use the method\n                // \"extractFolder\" for positive and negative numbers. Negative number\n                // determines the parent folder level starting from current folder and\n                // positive number determines the level starting ftom root folder.\n                currentFolder=extractFolder(cms,((-1)*level));\n            }\n            property=cms.readProperty(currentFolder, tagcontent.substring(tagcontent.indexOf(\",\")+1));\n            property=(property!=null?property:\"\");\n            // register this folder for changes\n            Vector vfsDeps = new Vector();\n            vfsDeps.add(cms.readFolder(currentFolder));\n            registerVariantDeps(cms, doc.getAbsoluteFilename(), null, null,\n                            (Hashtable)userObject, vfsDeps, null, null);\n        }\n        return (property.getBytes());\n    }","id":48894,"modified_method":"/**\n     * gets a specified property of specified folder starting from current folder.\n     *\n     * @param cms A_CmsObject Object for accessing system resources.\n     * @param tagcontent Unused in this special case of a user method. Can be ignored.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param userObj Hashtable with parameters.\n     * @return byte[] with the content of this subelement.\n     * @exception CmsException\n     */\n    public Object getPropertyParent(CmsObject cms, String tagcontent, A_CmsXmlContent doc, Object userObject)\n        throws CmsException {\n        int level=1;\n        String property=\"\";\n        // tagcontent determines the parent folder starting from current folder and\n        // the property definition name sparated by a comma.\n        String exact=\"false\";\n        // tagcontent determines the folder starting from root folder.\n        // if tagcontent is null, then the navigation of root folder must be showed.\n        if (!tagcontent.equals(\"\")) {\n            try {\n                if (tagcontent.indexOf(\",\")!=-1) {\n                    level=Integer.parseInt(tagcontent.substring(0,tagcontent.indexOf(\",\")));\n                    exact=tagcontent.substring(tagcontent.indexOf(\",\")+1).toLowerCase();\n                } else {\n                    level=Integer.parseInt(tagcontent);\n                }\n            } catch(NumberFormatException e) {\n                level=1;\n                exact=tagcontent.toLowerCase();\n                if (!exact.equals(\"true\")) {\n                    exact=\"false\";\n                }\n            }\n            // level is converted to negative number, so I can use the method\n            // \"extractFolder\" for positive and negative numbers. Negative number\n            // determines the parent folder level starting from current folder and\n            // positive number determines the level starting ftom root folder.\n            String currentFolder=extractFolder(cms,((-1)*level),exact);\n            if (currentFolder.equals(\"\"))\n                return \"\".getBytes();\n            property=cms.readProperty(currentFolder, tagcontent.substring(tagcontent.indexOf(\",\")+1));\n            property=(property!=null?property:\"\");\n            // register this folder for changes\n            Vector vfsDeps = new Vector();\n            vfsDeps.add(cms.readFolder(currentFolder));\n            registerVariantDeps(cms, doc.getAbsoluteFilename(), null, null,\n                            (Hashtable)userObject, vfsDeps, null, null);\n        }\n        return (property.getBytes());\n    }","commit_id":"5028359191931e149730db75a59c6ca9fc6d68b4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * extract the level of navigation.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @return int that contains the level.\n     */\n    protected int extractLevel(CmsObject cms, String folder)\n        throws CmsException {\n        StringTokenizer st = new StringTokenizer(folder,\"/\");\n        return (st.countTokens());\n    }","id":48895,"modified_method":"/**\n     * extract the level of navigation.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @return int that contains the level.\n     */\n    protected int extractLevel(CmsObject cms, String folder)\n        throws CmsException {\n        StringTokenizer st = new StringTokenizer(folder,\"/\");\n        int count=st.countTokens();\n        count=(count==0?1:count);\n        return count;\n    }","commit_id":"5028359191931e149730db75a59c6ca9fc6d68b4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Builds the link to folder determined by level.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param level The level of folder.\n     * @return String that contains the path of folder determind by level.\n     */\n    protected String extractFolder(CmsObject cms, int level)\n        throws CmsException {\n\n        String currentFolder=\"/\";\n        StringTokenizer st = new StringTokenizer(cms.getRequestContext().currentFolder().getAbsolutePath(),\"/\");\n        int count=st.countTokens();\n        // if the level is negative then take the folder starting from\n        // current folder otherwise take the folder starting from root\n        if (level<0) {\n            level=(-1)*level;\n            level=count-level;\n        }\n        while (st.hasMoreTokens()) {\n            if (level>1) {\n                currentFolder=currentFolder+st.nextToken()+\"/\";\n                level--;\n            } else {\n                break;\n            }\n        }\n        return currentFolder;\n    }","id":48896,"modified_method":"/**\n     * Builds the link to folder determined by level.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param level The level of folder.\n     * @param exact this parameter determines wheater exact level of folder must be exctracted.\n     * @return String that contains the path of folder determind by level.\n     */\n    protected String extractFolder(CmsObject cms, int level, String exact)\n        throws CmsException {\n\n        // get uri and requested uri\n        String navIndex=C_NAVINDEX;\n        try {\n            navIndex=cms.readProperty(cms.getRequestContext().currentFolder().getAbsolutePath(),C_PROPERTY_NAVINDEX);\n            navIndex=((navIndex==null || (navIndex!=null && navIndex.equals(\"\")))?C_NAVINDEX:navIndex);\n        } catch (Exception err) {\n            navIndex=C_NAVINDEX;\n        }\n        String uri=cms.getRequestContext().currentFolder().getAbsolutePath()+navIndex;\n        String requestedUri=cms.getRequestContext().getUri();\n        // get count of folder\n        String currentFolder=\"/\";\n        StringTokenizer st = new StringTokenizer(cms.getRequestContext().currentFolder().getAbsolutePath(),\"/\");\n        int count=st.countTokens()+1;\n        // if the level is negative then take the folder starting from\n        // current folder otherwise take the folder starting from root\n        if (level<0) {\n            level=(-1)*level;\n            level=count-level;\n        }\n        // increment count to get real level\n        if (exact.equals(\"true\") && (level<=0 || level>count || (level==count && requestedUri.equals(uri)))) {\n            return \"\";\n        }\n        if (level==count && requestedUri.equals(uri)) {\n            level--;\n        }\n        while (st.hasMoreTokens()) {\n            if (level>1) {\n                currentFolder=currentFolder+st.nextToken()+\"/\";\n                level--;\n            } else {\n                break;\n            }\n        }\n        return currentFolder;\n    }","commit_id":"5028359191931e149730db75a59c6ca9fc6d68b4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * gets a specified property of specified folder starting from root.\n     *\n     * @param cms A_CmsObject Object for accessing system resources.\n     * @param tagcontent Unused in this special case of a user method. Can be ignored.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param userObj Hashtable with parameters.\n     * @return byte[] with the content of this subelement.\n     * @exception CmsException\n     */\n    public Object getPropertyRoot(CmsObject cms, String tagcontent, A_CmsXmlContent doc, Object userObject)\n        throws CmsException {\n        int level=0;\n        String property=\"\";\n        // tagcontent determines the folder starting from root folder and\n        // the property definition name sparated by a comma.\n        if (!tagcontent.equals(\"\")) {\n            try {\n                level=Integer.parseInt(tagcontent.substring(0,tagcontent.indexOf(\",\")));\n            } catch(NumberFormatException e) {\n                throw new CmsException(e.getMessage());\n            }\n            String currentFolder=\"\";\n            if (level<=0) {\n                currentFolder=currentFolder=cms.rootFolder().getAbsolutePath();\n            } else {\n                currentFolder=extractFolder(cms,level);\n            }\n            property=cms.readProperty(currentFolder, tagcontent.substring(tagcontent.indexOf(\",\")+1));\n            property=(property!=null?property:\"\");\n            // register this folder for changes\n            Vector vfsDeps = new Vector();\n            vfsDeps.add(cms.readFolder(currentFolder));\n            registerVariantDeps(cms, doc.getAbsoluteFilename(), null, null,\n                            (Hashtable)userObject, vfsDeps, null, null);\n        }\n        return (property.getBytes());\n    }","id":48897,"modified_method":"/**\n     * gets a specified property of specified folder starting from root.\n     *\n     * @param cms A_CmsObject Object for accessing system resources.\n     * @param tagcontent Unused in this special case of a user method. Can be ignored.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param userObj Hashtable with parameters.\n     * @return byte[] with the content of this subelement.\n     * @exception CmsException\n     */\n    public Object getPropertyRoot(CmsObject cms, String tagcontent, A_CmsXmlContent doc, Object userObject)\n        throws CmsException {\n        int level=1;\n        String property=\"\";\n        String exact=\"false\";\n        // tagcontent determines the folder starting from root folder.\n        // if tagcontent is null, then the navigation of root folder must be showed.\n        if (!tagcontent.equals(\"\")) {\n            try {\n                if (tagcontent.indexOf(\",\")!=-1) {\n                    level=Integer.parseInt(tagcontent.substring(0,tagcontent.indexOf(\",\")));\n                    exact=tagcontent.substring(tagcontent.indexOf(\",\")+1).toLowerCase();\n                } else {\n                    level=Integer.parseInt(tagcontent);\n                }\n            } catch(NumberFormatException e) {\n                level=1;\n                exact=tagcontent.toLowerCase();\n                if (!exact.equals(\"true\")) {\n                    exact=\"false\";\n                }\n            }\n            String currentFolder=extractFolder(cms,level,exact);\n            if (currentFolder.equals(\"\"))\n                return \"\".getBytes();\n            property=cms.readProperty(currentFolder, tagcontent.substring(tagcontent.indexOf(\",\")+1));\n            property=(property!=null?property:\"\");\n            // register this folder for changes\n            Vector vfsDeps = new Vector();\n            vfsDeps.add(cms.readFolder(currentFolder));\n            registerVariantDeps(cms, doc.getAbsoluteFilename(), null, null,\n                            (Hashtable)userObject, vfsDeps, null, null);\n        }\n        return (property.getBytes());\n    }","commit_id":"5028359191931e149730db75a59c6ca9fc6d68b4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Builds the navigation.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param resources a vector that contains the elements of navigation.\n     * @param userObj Hashtable with parameters.\n     * @return String that contains the navigation.\n     */\n    protected String buildNav(CmsObject cms, A_CmsXmlContent doc,Object userObject, Vector resources)\n        throws CmsException {\n\n        // get uri, currentfolder,servletpath and template file\n        String requestedUri = cms.getRequestContext().getUri();\n        String currentFolder=cms.getRequestContext().currentFolder().getAbsolutePath();\n        String servletPath = cms.getRequestContext().getRequest().getServletUrl();\n        CmsXmlTemplateFile template=(CmsXmlTemplateFile)doc;\n        StringBuffer result = new StringBuffer();\n        LinkSubstitution ls = new LinkSubstitution();\n        int size = resources.size();\n\n        String navLink[] = new String[size];\n        String navText[] = new String[size];\n        float navPos[] = new float[size];\n        // extract the navigation according to navigation position and nav text\n        int max=extractNav(cms,resources,navLink,navText,navPos);\n        // The arrays folderNames and folderTitles now contain all folders\n        // that should appear in the nav.\n        // Loop through all folders and generate output\n        for(int i=0; i<max; i++) {\n            template.setData(\"navtext\", navText[i]);\n            template.setData(\"navcount\", new Integer(i+1).toString());\n            template.setData(\"navlevel\", new Integer(extractLevel(cms,navLink[i])).toString());\n            // check whether it is a folder or file\n            if (navLink[i].endsWith(\"/\")) {\n                // read the property of folder to find the link file.\n                String navIndex=cms.readProperty(navLink[i],C_PROPERTY_NAVINDEX);\n                // if there is not defined a property then take C_NAVINDEX constant\n                if (navIndex==null) {\n                    navIndex=C_NAVINDEX;\n                }\n                try {\n                    cms.readFile(navLink[i] + navIndex);\n                    template.setData(\"navlink\", ls.getLinkSubstitution(cms, navLink[i] + navIndex));\n                } catch (CmsException e) {\n                    template.setData(\"navlink\", ls.getLinkSubstitution(cms, requestedUri));\n                }\n            } else {\n                try {\n                    cms.readFile(navLink[i]);\n                    template.setData(\"navlink\", ls.getLinkSubstitution(cms, navLink[i]));\n                } catch (CmsException e) {\n                    template.setData(\"navlink\", ls.getLinkSubstitution(cms, requestedUri));\n                }\n            }\n            // Check if nav is current nav\n            if (navLink[i].equals(currentFolder) || navLink[i].equals(requestedUri)) {\n                result.append(template.getProcessedDataValue(\"navcurrent\", this, userObject));\n            } else {\n                result.append(template.getProcessedDataValue(\"naventry\", this, userObject));\n            }\n        }\n        return result.toString();\n    }","id":48898,"modified_method":"/**\n     * Builds the navigation.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param resources a vector that contains the elements of navigation.\n     * @param userObj Hashtable with parameters.\n     * @return String that contains the navigation.\n     */\n    protected String buildNav(CmsObject cms, A_CmsXmlContent doc,Object userObject, Vector resources)\n        throws CmsException {\n\n        // get uri, currentfolder,servletpath and template file\n        String requestedUri = cms.getRequestContext().getUri();\n        String currentFolder=cms.getRequestContext().currentFolder().getAbsolutePath();\n        String servletPath = cms.getRequestContext().getRequest().getServletUrl();\n        CmsXmlTemplateFile template=(CmsXmlTemplateFile)doc;\n        StringBuffer result = new StringBuffer();\n        LinkSubstitution ls = new LinkSubstitution();\n        int size = resources.size();\n\n        String navLink[] = new String[size];\n        String navText[] = new String[size];\n        float navPos[] = new float[size];\n        // extract the navigation according to navigation position and nav text\n        int max=extractNav(cms,resources,navLink,navText,navPos);\n        // The arrays folderNames and folderTitles now contain all folders\n        // that should appear in the nav.\n        // Loop through all folders and generate output\n        for(int i=0; i<max; i++) {\n            template.setData(\"navtext\", navText[i]);\n            template.setData(\"navcount\", new Integer(i+1).toString());\n            template.setData(\"navlevel\", new Integer(extractLevel(cms,navLink[i])).toString());\n            // check whether it is a folder or file\n            String link=\"\";\n            if (navLink[i].endsWith(\"/\")) {\n                // read the property of folder to find the link file.\n                String navIndex=cms.readProperty(navLink[i],C_PROPERTY_NAVINDEX);\n                // if there is not defined a property then take C_NAVINDEX constant\n                if (navIndex==null) {\n                    navIndex=C_NAVINDEX;\n                }\n                try {\n                    cms.readFile(navLink[i] + navIndex);\n                    link=navLink[i] + navIndex;\n                    template.setData(\"navlink\", ls.getLinkSubstitution(cms, navLink[i] + navIndex));\n                } catch (CmsException e) {\n                    template.setData(\"navlink\", ls.getLinkSubstitution(cms, requestedUri));\n                }\n            } else {\n                try {\n                    cms.readFile(navLink[i]);\n                    link=navLink[i];\n                    template.setData(\"navlink\", ls.getLinkSubstitution(cms, navLink[i]));\n                } catch (CmsException e) {\n                    template.setData(\"navlink\", ls.getLinkSubstitution(cms, requestedUri));\n                }\n            }\n            // Check if nav is current nav\n            //if (navLink[i].equals(currentFolder) || navLink[i].equals(requestedUri)) {\n            if (link.equals(requestedUri)) {\n                result.append(template.getProcessedDataValue(\"navcurrent\", this, userObject));\n            } else {\n                result.append(template.getProcessedDataValue(\"naventry\", this, userObject));\n            }\n        }\n        return result.toString();\n    }","commit_id":"5028359191931e149730db75a59c6ca9fc6d68b4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * gets the navigation of specified level of parent folder.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param tagcontent used in this special case of a user method. Can't be ignored.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param userObj Hashtable with parameters.\n     * @return byte[] with the content of this subelement.\n     * @exception CmsException\n     */\n    public Object getNavParent(CmsObject cms, String tagcontent, A_CmsXmlContent doc, Object userObject)\n            throws CmsException {\n\n        // template file\n        CmsXmlTemplateFile template=(CmsXmlTemplateFile)doc;\n        // check whether there exist entry datablock\n        if (!template.hasData(\"naventry\")) {\n            return \"\".getBytes();\n        }\n        int level=0;\n        // tagcontent determines the folder starting from parent folder.\n        // if tagcontent is null, zero or negative, then the navigation of current\n        // folder must be showed.\n        if (!tagcontent.equals(\"\")) {\n            try {\n                level=Integer.parseInt(tagcontent);\n            } catch(NumberFormatException e) {\n                throw new CmsException(e.getMessage());\n            }\n        }\n        String currentFolder=\"\";\n        if (level<=0) {\n            currentFolder=cms.getRequestContext().currentFolder().getAbsolutePath();\n        } else {\n            // level is converted to negative number, so I can use the method\n            // \"extractFolder\" for positive and negative numbers. Negative number\n            // determines the parent folder level starting from current folder and\n            // positive number determines the level starting ftom root folder.\n            currentFolder=extractFolder(cms,((-1)*level));\n        }\n        // register this folder for changes\n        Vector vfsDeps = new Vector();\n        vfsDeps.add(cms.readFolder(currentFolder));\n        registerVariantDeps(cms, doc.getAbsoluteFilename(), null, null,\n                        (Hashtable)userObject, vfsDeps, null, null);\n        Vector resources=cms.getSubFolders(currentFolder);\n        Vector allFile=cms.getFilesInFolder(currentFolder);\n\n        resources.ensureCapacity(resources.size() + allFile.size());\n        Enumeration e = allFile.elements();\n        while (e.hasMoreElements()) {\n            resources.addElement(e.nextElement());\n        }\n        // if there is not exist current datablock then take the entry datablock\n        if (!template.hasData(\"navcurrent\")) {\n            template.setData(\"navcurrent\", template.getData(\"naventry\"));\n        }\n        return buildNav(cms,doc,userObject,resources).getBytes();\n    }","id":48899,"modified_method":"/**\n     * gets the navigation of specified level of parent folder.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param tagcontent used in this special case of a user method. Can't be ignored.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param userObj Hashtable with parameters.\n     * @return byte[] with the content of this subelement.\n     * @exception CmsException\n     */\n    public Object getNavParent(CmsObject cms, String tagcontent, A_CmsXmlContent doc, Object userObject)\n            throws CmsException {\n\n        // template file\n        CmsXmlTemplateFile template=(CmsXmlTemplateFile)doc;\n        // check whether there exist entry datablock\n        if (!template.hasData(\"naventry\")) {\n            return \"\".getBytes();\n        }\n        int level=1;\n        String exact=\"\";\n        // tagcontent determines the folder starting from parent folder.\n        // if tagcontent is null, zero or negative, then the navigation of current\n        // folder must be showed.\n        if (!tagcontent.equals(\"\")) {\n            try {\n                if (tagcontent.indexOf(\",\")!=-1) {\n                    level=Integer.parseInt(tagcontent.substring(0,tagcontent.indexOf(\",\")));\n                    exact=tagcontent.substring(tagcontent.indexOf(\",\")+1).toLowerCase();\n                } else {\n                    level=Integer.parseInt(tagcontent);\n                }\n            } catch(NumberFormatException e) {\n                level=1;\n                exact=tagcontent.toLowerCase();\n                if (!exact.equals(\"true\")) {\n                    exact=\"false\";\n                }\n            }\n        }\n        // level is converted to negative number, so I can use the method\n        // \"extractFolder\" for positive and negative numbers. Negative number\n        // determines the parent folder level starting from current folder and\n        // positive number determines the level starting ftom root folder.\n        String currentFolder=extractFolder(cms,((-1)*level),exact);\n        if (currentFolder.equals(\"\"))\n            return \"\".getBytes();\n        // register this folder for changes\n        Vector vfsDeps = new Vector();\n        vfsDeps.add(cms.readFolder(currentFolder));\n        registerVariantDeps(cms, doc.getAbsoluteFilename(), null, null,\n                        (Hashtable)userObject, vfsDeps, null, null);\n        Vector resources=cms.getSubFolders(currentFolder);\n        Vector allFile=cms.getFilesInFolder(currentFolder);\n\n        resources.ensureCapacity(resources.size() + allFile.size());\n        Enumeration e = allFile.elements();\n        while (e.hasMoreElements()) {\n            resources.addElement(e.nextElement());\n        }\n        // if there is not exist current datablock then take the entry datablock\n        if (!template.hasData(\"navcurrent\")) {\n            template.setData(\"navcurrent\", template.getData(\"naventry\"));\n        }\n        return buildNav(cms,doc,userObject,resources).getBytes();\n    }","commit_id":"5028359191931e149730db75a59c6ca9fc6d68b4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * gets the navigation of root folder or parent folder starting from root folder.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param tagcontent Unused in this special case of a user method. Can be ignored.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param userObj Hashtable with parameters.\n     * @return byte[] with the content of this subelement.\n     * @exception CmsException\n     */\n    public Object getNavRoot(CmsObject cms, String tagcontent, A_CmsXmlContent doc, Object userObject)\n            throws CmsException {\n\n        // template file\n        CmsXmlTemplateFile template=(CmsXmlTemplateFile)doc;\n        // check whether there exist entry datablock\n        if (!template.hasData(\"naventry\")) {\n            return \"\".getBytes();\n        }\n        int level=0;\n        // tagcontent determines the folder starting from root folder.\n        // if tagcontent is null, then the navigation of root folder must be showed.\n        if (!tagcontent.equals(\"\")) {\n            try {\n                level=Integer.parseInt(tagcontent);\n            } catch(NumberFormatException e) {\n                throw new CmsException(e.getMessage());\n            }\n        }\n        String currentFolder=\"\";\n        if (level<=0) {\n            currentFolder=cms.rootFolder().getAbsolutePath();\n        } else {\n            currentFolder=extractFolder(cms,level);\n        }\n        // register this folder for changes\n        Vector vfsDeps = new Vector();\n        vfsDeps.add(cms.readFolder(currentFolder));\n        registerVariantDeps(cms, doc.getAbsoluteFilename(), null, null,\n                        (Hashtable)userObject, vfsDeps, null, null);\n        // get all resources, it means all files and folders.\n        Vector resources=cms.getSubFolders(currentFolder);\n        Vector allFile=cms.getFilesInFolder(currentFolder);\n        resources.ensureCapacity(resources.size() + allFile.size());\n        Enumeration e = allFile.elements();\n        while (e.hasMoreElements()) {\n            resources.addElement(e.nextElement());\n        }\n        // if there is not exist current datablock then take the entry datablock\n        if (!template.hasData(\"navcurrent\")) {\n            template.setData(\"navcurrent\", template.getData(\"naventry\"));\n        }\n        return buildNav(cms,doc,userObject,resources).getBytes();\n    }","id":48900,"modified_method":"/**\n     * gets the navigation of root folder or parent folder starting from root folder.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param tagcontent Unused in this special case of a user method. Can be ignored.\n     * @param doc Reference to the A_CmsXmlContent object of the initiating XLM document.\n     * @param userObj Hashtable with parameters.\n     * @return byte[] with the content of this subelement.\n     * @exception CmsException\n     */\n    public Object getNavRoot(CmsObject cms, String tagcontent, A_CmsXmlContent doc, Object userObject)\n            throws CmsException {\n\n        // template file\n        CmsXmlTemplateFile template=(CmsXmlTemplateFile)doc;\n        // check whether there exist entry datablock\n        if (!template.hasData(\"naventry\")) {\n            return \"\".getBytes();\n        }\n        int level=1;\n        String exact=\"false\";\n        // tagcontent determines the folder starting from root folder.\n        // if tagcontent is null, then the navigation of root folder must be showed.\n        if (!tagcontent.equals(\"\")) {\n            try {\n                if (tagcontent.indexOf(\",\")!=-1) {\n                    level=Integer.parseInt(tagcontent.substring(0,tagcontent.indexOf(\",\")));\n                    exact=tagcontent.substring(tagcontent.indexOf(\",\")+1).toLowerCase();\n                } else {\n                    level=Integer.parseInt(tagcontent);\n                }\n            } catch(NumberFormatException e) {\n                level=1;\n                exact=tagcontent.toLowerCase();\n                if (!exact.equals(\"true\")) {\n                    exact=\"false\";\n                }\n            }\n        }\n        String currentFolder=extractFolder(cms,level,exact);\n        if (currentFolder.equals(\"\"))\n            return \"\".getBytes();\n        // register this folder for changes\n        Vector vfsDeps = new Vector();\n        vfsDeps.add(cms.readFolder(currentFolder));\n        registerVariantDeps(cms, doc.getAbsoluteFilename(), null, null,\n                        (Hashtable)userObject, vfsDeps, null, null);\n        // get all resources, it means all files and folders.\n        Vector resources=cms.getSubFolders(currentFolder);\n        Vector allFile=cms.getFilesInFolder(currentFolder);\n        resources.ensureCapacity(resources.size() + allFile.size());\n        Enumeration e = allFile.elements();\n        while (e.hasMoreElements()) {\n            resources.addElement(e.nextElement());\n        }\n        // if there is not exist current datablock then take the entry datablock\n        if (!template.hasData(\"navcurrent\")) {\n            template.setData(\"navcurrent\", template.getData(\"naventry\"));\n        }\n        return buildNav(cms,doc,userObject,resources).getBytes();\n    }","commit_id":"5028359191931e149730db75a59c6ca9fc6d68b4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Builds the navigation that could be closed or opened.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param doc Reference to the CmsXmTemplateFile object of the initiating XLM document.\n     * @param resources a vector that contains the elements of navigation.\n     * @param userObj Hashtable with parameters.\n     * @param requestedUri The absolute path of current requested file.\n     * @param currentFolder The currenet folder.\n     * @param servletPath The absolute path of servlet\n     * @param depth An Integer that shows how many folders must be displayed.\n     * @return String that contains the navigation.\n     */\n    protected String buildNavFold(CmsObject cms, CmsXmlTemplateFile template, Object userObject, Vector resources, String requestedUri, String currentFolder, String servletPath,int level,int[] count)\n        throws CmsException {\n\n        StringBuffer result = new StringBuffer();\n        LinkSubstitution ls = new LinkSubstitution();\n        // arrays of navigation position, text and link\n        int size = resources.size();\n        String navLink[] = new String[size];\n        String navText[] = new String[size];\n        float navPos[] = new float[size];\n        // extract the navigation according\n        int max=extractNav(cms,resources,navLink,navText,navPos);\n        if (max>0) {\n            result.append(template.getProcessedDataValue(\"navstart\", this, userObject));\n            for(int i=0; i<max; i++) {\n                count[0]++;\n                template.setData(\"navtext\", navText[i]);\n                template.setData(\"navcount\", new Integer(count[0]).toString());\n                // this part is to set the level starting from specified level given as tagcontent\n                // there it must be make a difference between extracted level and the given level\n                int extractedLevel=extractLevel(cms,navLink[i]);\n                int rightLevel=extractedLevel;\n                if (level!=0) {\n                    rightLevel=(extractedLevel-level);\n                    if (rightLevel>=0) {\n                        rightLevel++;\n                    }\n                }\n                template.setData(\"navlevel\", new Integer(rightLevel).toString());\n                String link=\"\";\n                // check whether the link is folder\n                if (navLink[i].endsWith(\"/\")) {\n                    // read the property of link file\n                    String navIndex=cms.readProperty(navLink[i],C_PROPERTY_NAVINDEX);\n                    // if the property is not defined then take C_NAVINDEX constant\n                    if (navIndex==null) {\n                        navIndex=C_NAVINDEX;\n                    }\n                    // read the file, if the file does'nt exist then write the uri as a link\n                    try {\n                        cms.readFile(navLink[i] + navIndex);\n                        link=navLink[i] + navIndex;\n                        template.setData(\"navlink\", ls.getLinkSubstitution(cms, navLink[i] + navIndex));\n                    } catch (CmsException e) {\n                        link=requestedUri;\n                        template.setData(\"navlink\", ls.getLinkSubstitution(cms, requestedUri));\n                    }\n                } else {\n                    // read the file, if the file does'nt exist then write the uri as a link\n                    try {\n                        cms.readFile(navLink[i]);\n                        link=navLink[i];\n                        template.setData(\"navlink\", ls.getLinkSubstitution(cms, navLink[i]));\n                    } catch (CmsException e) {\n                        link=requestedUri;\n                        template.setData(\"navlink\", ls.getLinkSubstitution(cms, requestedUri));\n                    }\n                }\n                // Check if nav is current nav\n                if (link.equals(requestedUri)) {\n                    result.append(template.getProcessedDataValue(\"navcurrent\", this, userObject));\n                } else {\n                    result.append(template.getProcessedDataValue(\"naventry\", this, userObject));\n                }\n                // if the folder was clicked\n                if (requestedUri.indexOf(navLink[i])!=-1) {\n                    Vector all=cms.getSubFolders(navLink[i]);\n                    Vector files=cms.getFilesInFolder(navLink[i]);\n                    // register this folder for changes (if it is a folder!)\n                    if(navLink[i].endsWith(\"/\")){\n                        Vector vfsDeps = new Vector();\n                        vfsDeps.add(cms.readFolder(navLink[i]));\n                        registerVariantDeps(cms, template.getAbsoluteFilename(), null, null,\n                                        (Hashtable)userObject, vfsDeps, null, null);\n                    }\n                    all.ensureCapacity(all.size() + files.size());\n                    Enumeration e = files.elements();\n                    while (e.hasMoreElements()) {\n                        all.addElement(e.nextElement());\n                    }\n                    result.append(buildNavFold(cms,template,userObject,all,requestedUri,currentFolder,servletPath,level,count));\n                }\n            }\n            result.append(template.getProcessedDataValue(\"navend\", this, userObject));\n        }\n\n        return result.toString();\n\n    }","id":48901,"modified_method":"/**\n     * Builds the navigation that could be closed or opened.\n     *\n     * @param cms CmsObject Object for accessing system resources.\n     * @param doc Reference to the CmsXmTemplateFile object of the initiating XLM document.\n     * @param resources a vector that contains the elements of navigation.\n     * @param userObj Hashtable with parameters.\n     * @param requestedUri The absolute path of current requested file.\n     * @param currentFolder The currenet folder.\n     * @param servletPath The absolute path of servlet\n     * @param depth An Integer that shows how many folders must be displayed.\n     * @return String that contains the navigation.\n     */\n    protected String buildNavFold(CmsObject cms, CmsXmlTemplateFile template, Object userObject, Vector resources, String requestedUri, String currentFolder, String servletPath,int level,int[] count)\n        throws CmsException {\n\n        StringBuffer result = new StringBuffer();\n        LinkSubstitution ls = new LinkSubstitution();\n        // arrays of navigation position, text and link\n        int size = resources.size();\n        String navLink[] = new String[size];\n        String navText[] = new String[size];\n        float navPos[] = new float[size];\n        // extract the navigation according\n        int max=extractNav(cms,resources,navLink,navText,navPos);\n        if (max>0) {\n            result.append(template.getProcessedDataValue(\"navstart\", this, userObject));\n            for(int i=0; i<max; i++) {\n                count[0]++;\n                template.setData(\"navtext\", navText[i]);\n                template.setData(\"navcount\", new Integer(count[0]).toString());\n                // this part is to set the level starting from specified level given as tagcontent\n                // there it must be make a difference between extracted level and the given level\n                int extractedLevel=extractLevel(cms,navLink[i]);\n                template.setData(\"navlevel\", new Integer(extractedLevel).toString());\n                /*int rightLevel=extractedLevel;\n                if (level!=0) {\n                    rightLevel=(extractedLevel-level);\n                    if (rightLevel>=0) {\n                        rightLevel++;\n                    }\n                }\n                template.setData(\"navlevel\", new Integer(rightLevel).toString());*/\n                String link=\"\";\n                // check whether the link is folder\n                if (navLink[i].endsWith(\"/\")) {\n                    // read the property of link file\n                    String navIndex=cms.readProperty(navLink[i],C_PROPERTY_NAVINDEX);\n                    // if the property is not defined then take C_NAVINDEX constant\n                    if (navIndex==null) {\n                        navIndex=C_NAVINDEX;\n                    }\n                    // read the file, if the file does'nt exist then write the uri as a link\n                    try {\n                        cms.readFile(navLink[i] + navIndex);\n                        link=navLink[i] + navIndex;\n                        template.setData(\"navlink\", ls.getLinkSubstitution(cms, navLink[i] + navIndex));\n                    } catch (CmsException e) {\n                        link=requestedUri;\n                        template.setData(\"navlink\", ls.getLinkSubstitution(cms, requestedUri));\n                    }\n                } else {\n                    // read the file, if the file does'nt exist then write the uri as a link\n                    try {\n                        cms.readFile(navLink[i]);\n                        link=navLink[i];\n                        template.setData(\"navlink\", ls.getLinkSubstitution(cms, navLink[i]));\n                    } catch (CmsException e) {\n                        link=requestedUri;\n                        template.setData(\"navlink\", ls.getLinkSubstitution(cms, requestedUri));\n                    }\n                }\n                // Check if nav is current nav\n                if (link.equals(requestedUri)) {\n                    result.append(template.getProcessedDataValue(\"navcurrent\", this, userObject));\n                } else {\n                    result.append(template.getProcessedDataValue(\"naventry\", this, userObject));\n                }\n                // if the folder was clicked\n                if (requestedUri.indexOf(navLink[i])!=-1) {\n                    Vector all=cms.getSubFolders(navLink[i]);\n                    Vector files=cms.getFilesInFolder(navLink[i]);\n                    // register this folder for changes (if it is a folder!)\n                    if(navLink[i].endsWith(\"/\")){\n                        Vector vfsDeps = new Vector();\n                        vfsDeps.add(cms.readFolder(navLink[i]));\n                        registerVariantDeps(cms, template.getAbsoluteFilename(), null, null,\n                                        (Hashtable)userObject, vfsDeps, null, null);\n                    }\n                    all.ensureCapacity(all.size() + files.size());\n                    Enumeration e = files.elements();\n                    while (e.hasMoreElements()) {\n                        all.addElement(e.nextElement());\n                    }\n                    result.append(buildNavFold(cms,template,userObject,all,requestedUri,currentFolder,servletPath,level,count));\n                }\n            }\n            result.append(template.getProcessedDataValue(\"navend\", this, userObject));\n        }\n\n        return result.toString();\n\n    }","commit_id":"5028359191931e149730db75a59c6ca9fc6d68b4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Initialize servlet and JSP configuration on the first invocation of this\n     * method. All other invocations are ignored. This method is synchronized to\n     * ensure only the first invocation performs the initialization.\n     * \n     * <p>\n     * Call this method in the <code>init<\/code> method of your servlet or\n     * JSP. It will read the servlet initialization parameters from the\n     * <code>ServletConfig<\/code> and <code>ServletContext<\/code> and\n     * OpenNMS configuration files.\n     * <\/p>\n     * \n     * <p>\n     * If this method finds the property <code>opennms.db.poolman<\/code> in\n     * the <code>ServletContext<\/code>, it will create an instance of the\n     * classname specified there to use as the <code>DbConnectionManager<\/code>.\n     * <\/p>\n     * \n     * @param context\n     *            the <code>ServletContext<\/code> instance in which your\n     *            servlet is running\n     */\n    public synchronized static void init(ServletContext context) throws ServletException {\n        if (context == null) {\n            throw new IllegalArgumentException(\"Cannot take null parameters.\");\n        }\n\n        // all ThreadCategory instances in the WebUI should use this as their\n        // category prefix\n        ThreadCategory.setPrefix(\"OpenNMS.WEB\");\n\n        if (factory == null) {\n            try {\n                String propertiesResource = \"/WEB-INF/configuration.properties\";\n                // read the OpenNMS properties\n                Properties properties = new Properties(System.getProperties());\n                InputStream configurationStream = context.getResourceAsStream(propertiesResource);\n                if (configurationStream == null) {\n                    throw new ServletException(\"Could not load properties from resource \\'\" + propertiesResource + \"\\'\");\n                }\n                properties.load(configurationStream);\n                configurationStream.close();\n\n                Enumeration initParamNames = context.getInitParameterNames();\n                while (initParamNames.hasMoreElements()) {\n                    String name = (String) initParamNames.nextElement();\n                    properties.put(name, context.getInitParameter(name));\n                }\n\n                String homeDir = properties.getProperty(\"opennms.home\");\n\n                if (homeDir == null) {\n                    throw new ServletException(\"The opennms.home context parameter must be set.\");\n                }\n\n                Vault.setProperties(properties);\n                Vault.setHomeDir(homeDir);\n\n                // initialize Log4J for use inside the webapp\n//                org.apache.log4j.LogManager.resetConfiguration();\n//                PropertyConfigurator.configure(homeDir + \"/etc/log4j.properties\");\n\n                // get the database parameters\n                String dbUrl = properties.getProperty(\"opennms.db.url\");\n                String dbDriver = properties.getProperty(\"opennms.db.driver\");\n                String username = properties.getProperty(\"opennms.db.user\");\n                String password = properties.getProperty(\"opennms.db.password\");\n\n                // set the database connection pool manager (if one is set in\n                // the context)\n                String dbMgrClass = properties.getProperty(\"opennms.db.poolman\");\n\n                if (dbMgrClass != null) {\n                    Class clazz = Class.forName(dbMgrClass);\n                    factory = (DbConnectionFactory) clazz.newInstance();\n                    factory.init(dbUrl, dbDriver, username, password);\n                    Vault.setDbConnectionFactory(factory);\n                }\n            } catch (ClassNotFoundException e) {\n                throw new ServletException(\"Could not find the opennms.db.poolman class\", e);\n            } catch (InstantiationException e) {\n                throw new ServletException(\"Could not instantiate the opennms.db.poolman class\", e);\n            } catch (IllegalAccessException e) {\n                throw new ServletException(\"Could not instantiate the opennms.db.poolman class\", e);\n            } catch (SQLException e) {\n                throw new ServletException(\"Could not initialize a database connection pool\", e);\n            } catch (IOException e) {\n                throw new ServletException(\"Could not load configuration.properties\", e);\n            }\n        }\n    }","id":48902,"modified_method":"/**\n     * Initialize servlet and JSP configuration on the first invocation of this\n     * method. All other invocations are ignored. This method is synchronized to\n     * ensure only the first invocation performs the initialization.\n     * \n     * <p>\n     * Call this method in the <code>init<\/code> method of your servlet or\n     * JSP. It will read the servlet initialization parameters from the\n     * <code>ServletConfig<\/code> and <code>ServletContext<\/code> and\n     * OpenNMS configuration files.\n     * <\/p>\n     * \n     * <p>\n     * If this method finds the property <code>opennms.db.poolman<\/code> in\n     * the <code>ServletContext<\/code>, it will create an instance of the\n     * classname specified there to use as the <code>DbConnectionManager<\/code>.\n     * <\/p>\n     * \n     * @param context\n     *            the <code>ServletContext<\/code> instance in which your\n     *            servlet is running\n     */\n    public synchronized static void init(ServletContext context) throws ServletException {\n        if (context == null) {\n            throw new IllegalArgumentException(\"Cannot take null parameters.\");\n        }\n\n        // all ThreadCategory instances in the WebUI should use this as their\n        // category prefix\n        ThreadCategory.setPrefix(\"OpenNMS.WEB\");\n\n        if (factory == null) {\n            try {\n                Properties properties = new Properties(System.getProperties());\n\n                // first, check if opennms.home is set, if so, we already have properties\n                // because we're in Jetty\n                String homeDir = properties.getProperty(\"opennms.home\");\n                if (homeDir == null) {\n\n                    // If not, load properties from configuration.properties\n                    String propertiesResource = \"/WEB-INF/configuration.properties\";\n\n                    InputStream configurationStream = context.getResourceAsStream(propertiesResource);\n                    if (configurationStream == null) {\n                        throw new ServletException(\"Could not load properties from resource '\" + propertiesResource + \"'\");\n                    } else {\n                        properties.load(configurationStream);\n                        configurationStream.close();\n                    }\n                    \n                }\n                \n                homeDir = properties.getProperty(\"opennms.home\");\n                if (homeDir == null) {\n                    throw new ServletException(\"The opennms.home context parameter must be set.\");\n                }\n                String etcDir = homeDir + File.separator + \"etc\";\n\n                // now that we've got opennms.home, load $OPENNMS_HOME/etc/opennms.properties\n                // in case it isn't-- but if anything is already set, we don't override it.\n                \n                Properties opennmsProperties = new Properties();\n                InputStream configurationStream = new FileInputStream(etcDir + File.separator + \"opennms.properties\");\n                opennmsProperties.load(configurationStream);\n                configurationStream.close();\n\n                for (Enumeration<Object> opennmsKeys = opennmsProperties.keys(); opennmsKeys.hasMoreElements(); ) {\n                    Object key = opennmsKeys.nextElement();\n                    if (!properties.containsKey(key)) {\n                        properties.put(key, opennmsProperties.get(key));\n                    }\n                }\n                \n                Enumeration<?> initParamNames = context.getInitParameterNames();\n                while (initParamNames.hasMoreElements()) {\n                    String name = (String)initParamNames.nextElement();\n                    properties.put(name, context.getInitParameter(name));\n                }\n\n                Vault.setProperties(properties);\n                Vault.setHomeDir(homeDir);\n\n                // get the database parameters\n                String dbUrl = properties.getProperty(\"opennms.db.url\");\n                String dbDriver = properties.getProperty(\"opennms.db.driver\");\n                String username = properties.getProperty(\"opennms.db.user\");\n                String password = properties.getProperty(\"opennms.db.password\");\n\n                // set the database connection pool manager (if one is set in\n                // the context)\n                String dbMgrClass = properties.getProperty(\"opennms.db.poolman\");\n\n                if (dbMgrClass != null) {\n                    Class<?> clazz = Class.forName(dbMgrClass);\n                    factory = (DbConnectionFactory) clazz.newInstance();\n                    factory.init(dbUrl, dbDriver, username, password);\n                    Vault.setDbConnectionFactory(factory);\n                }\n            } catch (ClassNotFoundException e) {\n                throw new ServletException(\"Could not find the opennms.db.poolman class\", e);\n            } catch (InstantiationException e) {\n                throw new ServletException(\"Could not instantiate the opennms.db.poolman class\", e);\n            } catch (IllegalAccessException e) {\n                throw new ServletException(\"Could not instantiate the opennms.db.poolman class\", e);\n            } catch (SQLException e) {\n                throw new ServletException(\"Could not initialize a database connection pool\", e);\n            } catch (IOException e) {\n                throw new ServletException(\"Could not load configuration.properties\", e);\n            }\n        }\n    }","commit_id":"6e76d4e3a6c097325ac6719d5915b3fa6c463682","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Initialize servlet and JSP configuration on the first invocation of this\n     * method. All other invocations are ignored. This method is synchronized to\n     * ensure only the first invocation performs the initialization.\n     * \n     * <p>\n     * Call this method in the <code>init<\/code> method of your servlet or\n     * JSP. It will read the servlet initialization parameters from the\n     * <code>ServletConfig<\/code> and <code>ServletContext<\/code> and\n     * OpenNMS configuration files.\n     * <\/p>\n     * \n     * <p>\n     * If this method finds the property <code>opennms.db.poolman<\/code> in\n     * the <code>ServletContext<\/code>, it will create an instance of the\n     * classname specified there to use as the <code>DbConnectionManager<\/code>.\n     * <\/p>\n     * \n     * @param context\n     *            the <code>ServletContext<\/code> instance in which your\n     *            servlet is running\n     */\n    public synchronized static void init(ServletContext context) throws ServletException {\n        if (context == null) {\n            throw new IllegalArgumentException(\"Cannot take null parameters.\");\n        }\n\n        // all ThreadCategory instances in the WebUI should use this as their\n        // category prefix\n        ThreadCategory.setPrefix(\"OpenNMS.WEB\");\n\n        if (factory == null) {\n            try {\n                String propertiesResource = \"/WEB-INF/configuration.properties\";\n                // read the OpenNMS properties\n                Properties properties = new Properties(System.getProperties());\n                InputStream configurationStream = context.getResourceAsStream(propertiesResource);\n                if (configurationStream == null) {\n                    throw new ServletException(\"Could not load properties from resource \\'\" + propertiesResource + \"\\'\");\n                }\n                properties.load(configurationStream);\n                configurationStream.close();\n\n                Enumeration initParamNames = context.getInitParameterNames();\n                while (initParamNames.hasMoreElements()) {\n                    String name = (String) initParamNames.nextElement();\n                    properties.put(name, context.getInitParameter(name));\n                }\n\n                String homeDir = properties.getProperty(\"opennms.home\");\n\n                if (homeDir == null) {\n                    throw new ServletException(\"The opennms.home context parameter must be set.\");\n                }\n\n                Vault.setProperties(properties);\n                Vault.setHomeDir(homeDir);\n\n                // initialize Log4J for use inside the webapp\n//                org.apache.log4j.LogManager.resetConfiguration();\n//                PropertyConfigurator.configure(homeDir + \"/etc/log4j.properties\");\n\n                // get the database parameters\n                String dbUrl = properties.getProperty(\"opennms.db.url\");\n                String dbDriver = properties.getProperty(\"opennms.db.driver\");\n                String username = properties.getProperty(\"opennms.db.user\");\n                String password = properties.getProperty(\"opennms.db.password\");\n\n                // set the database connection pool manager (if one is set in\n                // the context)\n                String dbMgrClass = properties.getProperty(\"opennms.db.poolman\");\n\n                if (dbMgrClass != null) {\n                    Class clazz = Class.forName(dbMgrClass);\n                    factory = (DbConnectionFactory) clazz.newInstance();\n                    factory.init(dbUrl, dbDriver, username, password);\n                    Vault.setDbConnectionFactory(factory);\n                }\n            } catch (ClassNotFoundException e) {\n                throw new ServletException(\"Could not find the opennms.db.poolman class\", e);\n            } catch (InstantiationException e) {\n                throw new ServletException(\"Could not instantiate the opennms.db.poolman class\", e);\n            } catch (IllegalAccessException e) {\n                throw new ServletException(\"Could not instantiate the opennms.db.poolman class\", e);\n            } catch (SQLException e) {\n                throw new ServletException(\"Could not initialize a database connection pool\", e);\n            } catch (IOException e) {\n                throw new ServletException(\"Could not load configuration.properties\", e);\n            }\n        }\n    }","id":48903,"modified_method":"/**\n     * Initialize servlet and JSP configuration on the first invocation of this\n     * method. All other invocations are ignored. This method is synchronized to\n     * ensure only the first invocation performs the initialization.\n     * \n     * <p>\n     * Call this method in the <code>init<\/code> method of your servlet or\n     * JSP. It will read the servlet initialization parameters from the\n     * <code>ServletConfig<\/code> and <code>ServletContext<\/code> and\n     * OpenNMS configuration files.\n     * <\/p>\n     * \n     * <p>\n     * If this method finds the property <code>opennms.db.poolman<\/code> in\n     * the <code>ServletContext<\/code>, it will create an instance of the\n     * classname specified there to use as the <code>DbConnectionManager<\/code>.\n     * <\/p>\n     * \n     * @param context\n     *            the <code>ServletContext<\/code> instance in which your\n     *            servlet is running\n     */\n    public synchronized static void init(ServletContext context) throws ServletException {\n        if (context == null) {\n            throw new IllegalArgumentException(\"Cannot take null parameters.\");\n        }\n\n        // all ThreadCategory instances in the WebUI should use this as their\n        // category prefix\n        ThreadCategory.setPrefix(\"OpenNMS.WEB\");\n\n        if (factory == null) {\n            try {\n                Properties properties = new Properties(System.getProperties());\n\n                // first, check if opennms.home is set, if so, we already have properties\n                // because we're in Jetty\n                String homeDir = properties.getProperty(\"opennms.home\");\n                if (homeDir == null) {\n\n                    // If not, load properties from configuration.properties\n                    String propertiesResource = \"/WEB-INF/configuration.properties\";\n\n                    InputStream configurationStream = context.getResourceAsStream(propertiesResource);\n                    if (configurationStream == null) {\n                        throw new ServletException(\"Could not load properties from resource '\" + propertiesResource + \"'\");\n                    } else {\n                        properties.load(configurationStream);\n                        configurationStream.close();\n                    }\n                    \n                }\n                \n                homeDir = properties.getProperty(\"opennms.home\");\n                if (homeDir == null) {\n                    throw new ServletException(\"The opennms.home context parameter must be set.\");\n                }\n                String etcDir = homeDir + File.separator + \"etc\";\n\n                // now that we've got opennms.home, load $OPENNMS_HOME/etc/opennms.properties\n                // in case it isn't-- but if anything is already set, we don't override it.\n                \n                Properties opennmsProperties = new Properties();\n                InputStream configurationStream = new FileInputStream(etcDir + File.separator + \"opennms.properties\");\n                opennmsProperties.load(configurationStream);\n                configurationStream.close();\n\n                for (Enumeration<Object> opennmsKeys = opennmsProperties.keys(); opennmsKeys.hasMoreElements(); ) {\n                    Object key = opennmsKeys.nextElement();\n                    if (!properties.containsKey(key)) {\n                        properties.put(key, opennmsProperties.get(key));\n                    }\n                }\n                \n                Enumeration<?> initParamNames = context.getInitParameterNames();\n                while (initParamNames.hasMoreElements()) {\n                    String name = (String)initParamNames.nextElement();\n                    properties.put(name, context.getInitParameter(name));\n                }\n\n                Vault.setProperties(properties);\n                Vault.setHomeDir(homeDir);\n\n                // get the database parameters\n                String dbUrl = properties.getProperty(\"opennms.db.url\");\n                String dbDriver = properties.getProperty(\"opennms.db.driver\");\n                String username = properties.getProperty(\"opennms.db.user\");\n                String password = properties.getProperty(\"opennms.db.password\");\n\n                // set the database connection pool manager (if one is set in\n                // the context)\n                String dbMgrClass = properties.getProperty(\"opennms.db.poolman\");\n\n                if (dbMgrClass != null) {\n                    Class<?> clazz = Class.forName(dbMgrClass);\n                    factory = (DbConnectionFactory) clazz.newInstance();\n                    factory.init(dbUrl, dbDriver, username, password);\n                    Vault.setDbConnectionFactory(factory);\n                }\n            } catch (ClassNotFoundException e) {\n                throw new ServletException(\"Could not find the opennms.db.poolman class\", e);\n            } catch (InstantiationException e) {\n                throw new ServletException(\"Could not instantiate the opennms.db.poolman class\", e);\n            } catch (IllegalAccessException e) {\n                throw new ServletException(\"Could not instantiate the opennms.db.poolman class\", e);\n            } catch (SQLException e) {\n                throw new ServletException(\"Could not initialize a database connection pool\", e);\n            } catch (IOException e) {\n                throw new ServletException(\"Could not load configuration.properties\", e);\n            }\n        }\n    }","commit_id":"17147380e421181c33ed673830aad5d059d7c516","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Initialize servlet and JSP configuration on the first invocation of this\n     * method. All other invocations are ignored. This method is synchronized to\n     * ensure only the first invocation performs the initialization.\n     * \n     * <p>\n     * Call this method in the <code>init<\/code> method of your servlet or\n     * JSP. It will read the servlet initialization parameters from the\n     * <code>ServletConfig<\/code> and <code>ServletContext<\/code> and\n     * OpenNMS configuration files.\n     * <\/p>\n     * \n     * <p>\n     * If this method finds the property <code>opennms.db.poolman<\/code> in\n     * the <code>ServletContext<\/code>, it will create an instance of the\n     * classname specified there to use as the <code>DbConnectionManager<\/code>.\n     * <\/p>\n     * \n     * @param context\n     *            the <code>ServletContext<\/code> instance in which your\n     *            servlet is running\n     */\n    public synchronized static void init(ServletContext context) throws ServletException {\n        if (context == null) {\n            throw new IllegalArgumentException(\"Cannot take null parameters.\");\n        }\n\n        // all ThreadCategory instances in the WebUI should use this as their\n        // category prefix\n        ThreadCategory.setPrefix(\"OpenNMS.WEB\");\n\n        if (factory == null) {\n            try {\n                String propertiesResource = \"/WEB-INF/configuration.properties\";\n                // read the OpenNMS properties\n                Properties properties = new Properties(System.getProperties());\n                InputStream configurationStream = context.getResourceAsStream(propertiesResource);\n                if (configurationStream == null) {\n                    throw new ServletException(\"Could not load properties from resource \\'\" + propertiesResource + \"\\'\");\n                }\n                properties.load(configurationStream);\n                configurationStream.close();\n\n                Enumeration initParamNames = context.getInitParameterNames();\n                while (initParamNames.hasMoreElements()) {\n                    String name = (String) initParamNames.nextElement();\n                    properties.put(name, context.getInitParameter(name));\n                }\n\n                String homeDir = properties.getProperty(\"opennms.home\");\n\n                if (homeDir == null) {\n                    throw new ServletException(\"The opennms.home context parameter must be set.\");\n                }\n\n                Vault.setProperties(properties);\n                Vault.setHomeDir(homeDir);\n\n                // initialize Log4J for use inside the webapp\n//                org.apache.log4j.LogManager.resetConfiguration();\n//                PropertyConfigurator.configure(homeDir + \"/etc/log4j.properties\");\n\n                // get the database parameters\n                String dbUrl = properties.getProperty(\"opennms.db.url\");\n                String dbDriver = properties.getProperty(\"opennms.db.driver\");\n                String username = properties.getProperty(\"opennms.db.user\");\n                String password = properties.getProperty(\"opennms.db.password\");\n\n                // set the database connection pool manager (if one is set in\n                // the context)\n                String dbMgrClass = properties.getProperty(\"opennms.db.poolman\");\n\n                if (dbMgrClass != null) {\n                    Class clazz = Class.forName(dbMgrClass);\n                    factory = (DbConnectionFactory) clazz.newInstance();\n                    factory.init(dbUrl, dbDriver, username, password);\n                    Vault.setDbConnectionFactory(factory);\n                }\n            } catch (ClassNotFoundException e) {\n                throw new ServletException(\"Could not find the opennms.db.poolman class\", e);\n            } catch (InstantiationException e) {\n                throw new ServletException(\"Could not instantiate the opennms.db.poolman class\", e);\n            } catch (IllegalAccessException e) {\n                throw new ServletException(\"Could not instantiate the opennms.db.poolman class\", e);\n            } catch (SQLException e) {\n                throw new ServletException(\"Could not initialize a database connection pool\", e);\n            } catch (IOException e) {\n                throw new ServletException(\"Could not load configuration.properties\", e);\n            }\n        }\n    }","id":48904,"modified_method":"/**\n     * Initialize servlet and JSP configuration on the first invocation of this\n     * method. All other invocations are ignored. This method is synchronized to\n     * ensure only the first invocation performs the initialization.\n     * \n     * <p>\n     * Call this method in the <code>init<\/code> method of your servlet or\n     * JSP. It will read the servlet initialization parameters from the\n     * <code>ServletConfig<\/code> and <code>ServletContext<\/code> and\n     * OpenNMS configuration files.\n     * <\/p>\n     * \n     * <p>\n     * If this method finds the property <code>opennms.db.poolman<\/code> in\n     * the <code>ServletContext<\/code>, it will create an instance of the\n     * classname specified there to use as the <code>DbConnectionManager<\/code>.\n     * <\/p>\n     * \n     * @param context\n     *            the <code>ServletContext<\/code> instance in which your\n     *            servlet is running\n     */\n    public synchronized static void init(ServletContext context) throws ServletException {\n        if (context == null) {\n            throw new IllegalArgumentException(\"Cannot take null parameters.\");\n        }\n\n        // all ThreadCategory instances in the WebUI should use this as their\n        // category prefix\n        ThreadCategory.setPrefix(\"OpenNMS.WEB\");\n\n        if (factory == null) {\n            try {\n                Properties properties = new Properties(System.getProperties());\n\n                // first, check if opennms.home is set, if so, we already have properties\n                // because we're in Jetty\n                String homeDir = properties.getProperty(\"opennms.home\");\n                if (homeDir == null) {\n\n                    // If not, load properties from configuration.properties\n                    String propertiesResource = \"/WEB-INF/configuration.properties\";\n\n                    InputStream configurationStream = context.getResourceAsStream(propertiesResource);\n                    if (configurationStream == null) {\n                        throw new ServletException(\"Could not load properties from resource '\" + propertiesResource + \"'\");\n                    } else {\n                        properties.load(configurationStream);\n                        configurationStream.close();\n                    }\n                    \n                }\n                \n                homeDir = properties.getProperty(\"opennms.home\");\n                if (homeDir == null) {\n                    throw new ServletException(\"The opennms.home context parameter must be set.\");\n                }\n                String etcDir = homeDir + File.separator + \"etc\";\n\n                // now that we've got opennms.home, load $OPENNMS_HOME/etc/opennms.properties\n                // in case it isn't-- but if anything is already set, we don't override it.\n                \n                Properties opennmsProperties = new Properties();\n                InputStream configurationStream = new FileInputStream(etcDir + File.separator + \"opennms.properties\");\n                opennmsProperties.load(configurationStream);\n                configurationStream.close();\n\n                for (Enumeration<Object> opennmsKeys = opennmsProperties.keys(); opennmsKeys.hasMoreElements(); ) {\n                    Object key = opennmsKeys.nextElement();\n                    if (!properties.containsKey(key)) {\n                        properties.put(key, opennmsProperties.get(key));\n                    }\n                }\n                \n                Enumeration<?> initParamNames = context.getInitParameterNames();\n                while (initParamNames.hasMoreElements()) {\n                    String name = (String)initParamNames.nextElement();\n                    properties.put(name, context.getInitParameter(name));\n                }\n\n                Vault.setProperties(properties);\n                Vault.setHomeDir(homeDir);\n\n                // get the database parameters\n                String dbUrl = properties.getProperty(\"opennms.db.url\");\n                String dbDriver = properties.getProperty(\"opennms.db.driver\");\n                String username = properties.getProperty(\"opennms.db.user\");\n                String password = properties.getProperty(\"opennms.db.password\");\n\n                // set the database connection pool manager (if one is set in\n                // the context)\n                String dbMgrClass = properties.getProperty(\"opennms.db.poolman\");\n\n                if (dbMgrClass != null) {\n                    Class<?> clazz = Class.forName(dbMgrClass);\n                    factory = (DbConnectionFactory) clazz.newInstance();\n                    factory.init(dbUrl, dbDriver, username, password);\n                    Vault.setDbConnectionFactory(factory);\n                }\n            } catch (ClassNotFoundException e) {\n                throw new ServletException(\"Could not find the opennms.db.poolman class\", e);\n            } catch (InstantiationException e) {\n                throw new ServletException(\"Could not instantiate the opennms.db.poolman class\", e);\n            } catch (IllegalAccessException e) {\n                throw new ServletException(\"Could not instantiate the opennms.db.poolman class\", e);\n            } catch (SQLException e) {\n                throw new ServletException(\"Could not initialize a database connection pool\", e);\n            } catch (IOException e) {\n                throw new ServletException(\"Could not load configuration.properties\", e);\n            }\n        }\n    }","commit_id":"fcef73b992635eb86bbede866a9eb18502285151","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, long classPK, String actionId) {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, classPK, RESOURCE_NAME, classPK,\n\t\t\tPortletKeys.BLOGS, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\ttry {\n\t\t\tint count =\n\t\t\t\tResourcePermissionLocalServiceUtil.getResourcePermissionsCount(\n\t\t\t\t\tpermissionChecker.getCompanyId(), RESOURCE_NAME,\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL,\n\t\t\t\t\tString.valueOf(classPK));\n\n\t\t\tif (count == 0) {\n\t\t\t\tResourceLocalServiceUtil.addResources(\n\t\t\t\t\tpermissionChecker.getCompanyId(), classPK, 0, RESOURCE_NAME,\n\t\t\t\t\tclassPK, false, true, true);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(e, e);\n\t\t\t}\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tclassPK, RESOURCE_NAME, classPK, actionId);\n\t}","id":48905,"modified_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, long classPK, String actionId) {\n\n\t\treturn contains(\n\t\t\tpermissionChecker, RESOURCE_NAME, PortletKeys.BLOGS, classPK,\n\t\t\tactionId);\n\t}","commit_id":"3e74d0c85bfb4f1868bee753a71d87392863e899","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, long classPK, String actionId) {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, classPK, RESOURCE_NAME, classPK,\n\t\t\tBookmarksPortletKeys.BOOKMARKS, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\ttry {\n\t\t\tint count =\n\t\t\t\tResourcePermissionLocalServiceUtil.getResourcePermissionsCount(\n\t\t\t\t\tpermissionChecker.getCompanyId(), RESOURCE_NAME,\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL,\n\t\t\t\t\tString.valueOf(classPK));\n\n\t\t\tif (count == 0) {\n\t\t\t\tResourceLocalServiceUtil.addResources(\n\t\t\t\t\tpermissionChecker.getCompanyId(), classPK, 0, RESOURCE_NAME,\n\t\t\t\t\tclassPK, false, true, true);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(e, e);\n\t\t\t}\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tclassPK, RESOURCE_NAME, classPK, actionId);\n\t}","id":48906,"modified_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, long classPK, String actionId) {\n\n\t\treturn contains(\n\t\t\tpermissionChecker, RESOURCE_NAME, BookmarksPortletKeys.BOOKMARKS,\n\t\t\tclassPK, actionId);\n\t}","commit_id":"3e74d0c85bfb4f1868bee753a71d87392863e899","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, long classPK, String actionId) {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, classPK, RESOURCE_NAME, classPK,\n\t\t\tPortletKeys.DOCUMENT_LIBRARY, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\ttry {\n\t\t\tint count =\n\t\t\t\tResourcePermissionLocalServiceUtil.getResourcePermissionsCount(\n\t\t\t\t\tpermissionChecker.getCompanyId(), RESOURCE_NAME,\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL,\n\t\t\t\t\tString.valueOf(classPK));\n\n\t\t\tif (count == 0) {\n\t\t\t\tResourceLocalServiceUtil.addResources(\n\t\t\t\t\tpermissionChecker.getCompanyId(), classPK, 0, RESOURCE_NAME,\n\t\t\t\t\tclassPK, false, true, true);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(e, e);\n\t\t\t}\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tclassPK, RESOURCE_NAME, classPK, actionId);\n\t}","id":48907,"modified_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, long classPK, String actionId) {\n\n\t\treturn contains(\n\t\t\tpermissionChecker, RESOURCE_NAME, PortletKeys.DOCUMENT_LIBRARY,\n\t\t\tclassPK, actionId);\n\t}","commit_id":"3e74d0c85bfb4f1868bee753a71d87392863e899","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, long classPK, String actionId) {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, classPK, RESOURCE_NAME, classPK,\n\t\t\tPortletKeys.JOURNAL, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\ttry {\n\t\t\tint count =\n\t\t\t\tResourcePermissionLocalServiceUtil.getResourcePermissionsCount(\n\t\t\t\t\tpermissionChecker.getCompanyId(), RESOURCE_NAME,\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL,\n\t\t\t\t\tString.valueOf(classPK));\n\n\t\t\tif (count == 0) {\n\t\t\t\tResourceLocalServiceUtil.addResources(\n\t\t\t\t\tpermissionChecker.getCompanyId(), classPK, 0, RESOURCE_NAME,\n\t\t\t\t\tclassPK, false, true, true);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(e, e);\n\t\t\t}\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tclassPK, RESOURCE_NAME, classPK, actionId);\n\t}","id":48908,"modified_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, long classPK, String actionId) {\n\n\t\treturn contains(\n\t\t\tpermissionChecker, RESOURCE_NAME, PortletKeys.JOURNAL, classPK,\n\t\t\tactionId);\n\t}","commit_id":"3e74d0c85bfb4f1868bee753a71d87392863e899","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, long classPK, String actionId) {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, classPK, RESOURCE_NAME, classPK,\n\t\t\tPortletKeys.MESSAGE_BOARDS, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\ttry {\n\t\t\tint count =\n\t\t\t\tResourcePermissionLocalServiceUtil.getResourcePermissionsCount(\n\t\t\t\t\tpermissionChecker.getCompanyId(), RESOURCE_NAME,\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL,\n\t\t\t\t\tString.valueOf(classPK));\n\n\t\t\tif (count == 0) {\n\t\t\t\tResourceLocalServiceUtil.addResources(\n\t\t\t\t\tpermissionChecker.getCompanyId(), classPK, 0, RESOURCE_NAME,\n\t\t\t\t\tclassPK, false, true, true);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(e, e);\n\t\t\t}\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tclassPK, RESOURCE_NAME, classPK, actionId);\n\t}","id":48909,"modified_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, long classPK, String actionId) {\n\n\t\treturn contains(\n\t\t\tpermissionChecker, RESOURCE_NAME, PortletKeys.MESSAGE_BOARDS,\n\t\t\tclassPK, actionId);\n\t}","commit_id":"3e74d0c85bfb4f1868bee753a71d87392863e899","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void installHttpManagementServices(final ServiceTarget serviceTarget) {\n\n        String interfaceName = hostControllerInfo.getHttpManagementInterface();\n        int port = hostControllerInfo.getHttpManagementPort();\n        int securePort = hostControllerInfo.getHttpManagementSecurePort();\n        String securityRealm = hostControllerInfo.getHttpManagementSecurityRealm();\n\n        Logger.getLogger(\"org.jboss.as\").infof(\"creating http management service using network interface (%s) port (%s) securePort (%s)\", interfaceName, port, securePort);\n\n        final ThreadFactory httpMgmtThreads = new JBossThreadFactory(new ThreadGroup(\"HttpManagementService-threads\"),\n                Boolean.FALSE, null, \"%G - %t\", null, null, AccessController.getContext());\n        final HttpManagementService service = new HttpManagementService();\n        ServiceBuilder builder = serviceTarget.addService(HttpManagementService.SERVICE_NAME, service)\n                .addDependency(\n                        NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(interfaceName),\n                        NetworkInterfaceBinding.class, service.getInterfaceInjector())\n                .addDependency(SERVICE_NAME, ModelController.class, service.getModelControllerInjector())\n                .addInjection(service.getTempDirInjector(), environment.getDomainTempDir().getAbsolutePath())\n                .addInjection(service.getPortInjector(), port)\n                .addInjection(service.getSecurePortInjector(), securePort)\n                .addInjection(service.getExecutorServiceInjector(), Executors.newCachedThreadPool(httpMgmtThreads));\n\n        if (securityRealm != null) {\n            builder.addDependency(SecurityRealmService.BASE_SERVICE_NAME.append(securityRealm), SecurityRealmService.class, service.getSecurityRealmInjector());\n        }\n        builder.setInitialMode(ServiceController.Mode.ACTIVE)\n                .install();\n\n    }","id":48910,"modified_method":"private void installHttpManagementServices(final ServiceTarget serviceTarget) {\n\n        String interfaceName = hostControllerInfo.getHttpManagementInterface();\n        int port = hostControllerInfo.getHttpManagementPort();\n        int securePort = hostControllerInfo.getHttpManagementSecurePort();\n        String securityRealm = hostControllerInfo.getHttpManagementSecurityRealm();\n\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"creating http management service using network interface (\").append(interfaceName).append(\")\");\n        if (port > -1) {\n            sb.append(\" port (\").append(port).append(\")\");\n        }\n        if (securePort > -1) {\n            sb.append(\" securePort (\").append(securePort).append(\")\");\n        }\n        Logger.getLogger(\"org.jboss.as\").info(sb.toString());\n\n        final ThreadFactory httpMgmtThreads = new JBossThreadFactory(new ThreadGroup(\"HttpManagementService-threads\"),\n                Boolean.FALSE, null, \"%G - %t\", null, null, AccessController.getContext());\n        final HttpManagementService service = new HttpManagementService();\n        ServiceBuilder builder = serviceTarget.addService(HttpManagementService.SERVICE_NAME, service)\n                .addDependency(\n                        NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(interfaceName),\n                        NetworkInterfaceBinding.class, service.getInterfaceInjector())\n                .addDependency(SERVICE_NAME, ModelController.class, service.getModelControllerInjector())\n                .addInjection(service.getTempDirInjector(), environment.getDomainTempDir().getAbsolutePath())\n                .addInjection(service.getPortInjector(), port)\n                .addInjection(service.getSecurePortInjector(), securePort)\n                .addInjection(service.getExecutorServiceInjector(), Executors.newCachedThreadPool(httpMgmtThreads));\n\n        if (securityRealm != null) {\n            builder.addDependency(SecurityRealmService.BASE_SERVICE_NAME.append(securityRealm), SecurityRealmService.class, service.getSecurityRealmInjector());\n        } else {\n            Logger.getLogger(\"org.jboss.as\").warn(\"No security realm defined for http management service, all access will be unrestricted.\");\n        }\n        builder.setInitialMode(ServiceController.Mode.ACTIVE)\n                .install();\n\n    }","commit_id":"d765832a9d6668c04ffe28077db2ce5763f34d45","url":"https://github.com/wildfly/wildfly"},{"original_method":"protected void performRuntime(OperationContext context, ModelNode operation, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers) {\n        final String interfaceName = operation.require(ModelDescriptionConstants.INTERFACE).asString();\n        final int port = getIntValue(operation, ModelDescriptionConstants.PORT);\n        final int securePort = getIntValue(operation, ModelDescriptionConstants.SECURE_PORT);\n        final String securityRealm = operation.hasDefined(SECURITY_REALM) ? operation.get(SECURITY_REALM).asString() : null;\n\n        final ServiceTarget serviceTarget = context.getServiceTarget();\n\n        Logger.getLogger(\"org.jboss.as\").infof(\"creating http management service using network interface (%s) port (%s) securePort (%s)\", interfaceName, port, securePort);\n\n        final HttpManagementService service = new HttpManagementService();\n        ServiceBuilder builder = serviceTarget.addService(HttpManagementService.SERVICE_NAME, service)\n                .addDependency(\n                        NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(interfaceName),\n                        NetworkInterfaceBinding.class, service.getInterfaceInjector())\n                .addDependency(Services.JBOSS_SERVER_CONTROLLER, ModelController.class, service.getModelControllerInjector())\n                .addDependency(AbstractPathService.pathNameOf(ServerEnvironment.SERVER_TEMP_DIR), String.class, service.getTempDirInjector())\n                .addInjection(service.getPortInjector(), port)\n                .addInjection(service.getSecurePortInjector(), securePort)\n                .addInjection(service.getExecutorServiceInjector(), Executors.newCachedThreadPool(new JBossThreadFactory(new ThreadGroup(\"HttpManagementService-threads\"), Boolean.FALSE, null, \"%G - %t\", null, null, AccessController.getContext())));\n\n        if (securityRealm != null) {\n            builder.addDependency(SecurityRealmService.BASE_SERVICE_NAME.append(securityRealm), SecurityRealmService.class, service.getSecurityRealmInjector());\n        }\n\n        newControllers.add(builder.addListener(verificationHandler)\n                .setInitialMode(ServiceController.Mode.ACTIVE)\n                .install());\n\n    }","id":48911,"modified_method":"protected void performRuntime(OperationContext context, ModelNode operation, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers) {\n        final String interfaceName = operation.require(ModelDescriptionConstants.INTERFACE).asString();\n        final int port = getIntValue(operation, ModelDescriptionConstants.PORT);\n        final int securePort = getIntValue(operation, ModelDescriptionConstants.SECURE_PORT);\n        final String securityRealm = operation.hasDefined(SECURITY_REALM) ? operation.get(SECURITY_REALM).asString() : null;\n\n        final ServiceTarget serviceTarget = context.getServiceTarget();\n\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"creating http management service using network interface (\").append(interfaceName).append(\")\");\n        if (port > -1) {\n            sb.append(\" port (\").append(port).append(\")\");\n        }\n        if (securePort > -1) {\n            sb.append(\" securePort (\").append(securePort).append(\")\");\n        }\n        Logger.getLogger(\"org.jboss.as\").info(sb.toString());\n\n        final HttpManagementService service = new HttpManagementService();\n        ServiceBuilder builder = serviceTarget.addService(HttpManagementService.SERVICE_NAME, service)\n                .addDependency(\n                        NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(interfaceName),\n                        NetworkInterfaceBinding.class, service.getInterfaceInjector())\n                .addDependency(Services.JBOSS_SERVER_CONTROLLER, ModelController.class, service.getModelControllerInjector())\n                .addDependency(AbstractPathService.pathNameOf(ServerEnvironment.SERVER_TEMP_DIR), String.class, service.getTempDirInjector())\n                .addInjection(service.getPortInjector(), port)\n                .addInjection(service.getSecurePortInjector(), securePort)\n                .addInjection(service.getExecutorServiceInjector(), Executors.newCachedThreadPool(new JBossThreadFactory(new ThreadGroup(\"HttpManagementService-threads\"), Boolean.FALSE, null, \"%G - %t\", null, null, AccessController.getContext())));\n\n        if (securityRealm != null) {\n            builder.addDependency(SecurityRealmService.BASE_SERVICE_NAME.append(securityRealm), SecurityRealmService.class, service.getSecurityRealmInjector());\n        } else {\n            Logger.getLogger(\"org.jboss.as\").warn(\"No security realm defined for http management service, all access will be unrestricted.\");\n        }\n\n        newControllers.add(builder.addListener(verificationHandler)\n                .setInitialMode(ServiceController.Mode.ACTIVE)\n                .install());\n\n    }","commit_id":"d765832a9d6668c04ffe28077db2ce5763f34d45","url":"https://github.com/wildfly/wildfly"},{"original_method":"static void addService(final ServiceTarget serviceTarget, final ModelNode subModel, final ServiceVerificationHandler handler) {\n        final String interfaceName = subModel.require(ModelDescriptionConstants.INTERFACE).asString();\n        final int port = getIntValue(subModel, ModelDescriptionConstants.PORT);\n        final int securePort = getIntValue(subModel, ModelDescriptionConstants.SECURE_PORT);\n        final String securityRealm = subModel.hasDefined(SECURITY_REALM) ? subModel.get(SECURITY_REALM).asString() : null;\n\n        final HttpManagementService service = new HttpManagementService();\n        ServiceBuilder builder = serviceTarget.addService(HttpManagementService.SERVICE_NAME, service)\n                .addDependency(\n                        NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(interfaceName),\n                        NetworkInterfaceBinding.class, service.getInterfaceInjector())\n                .addListener(handler)\n                .addDependency(Services.JBOSS_SERVER_CONTROLLER, ModelController.class, service.getModelControllerInjector())\n                .addDependency(AbstractPathService.pathNameOf(ServerEnvironment.SERVER_TEMP_DIR), String.class, service.getTempDirInjector())\n                .addInjection(service.getPortInjector(), port)\n                .addInjection(service.getSecurePortInjector(), securePort)\n                .addInjection(service.getExecutorServiceInjector(), Executors.newCachedThreadPool(new JBossThreadFactory(new ThreadGroup(\"HttpManagementService-threads\"), Boolean.FALSE, null, \"%G - %t\", null, null, AccessController.getContext())));\n\n        if (securityRealm != null) {\n            builder.addDependency(SecurityRealmService.BASE_SERVICE_NAME.append(securityRealm), SecurityRealmService.class, service.getSecurityRealmInjector());\n        }\n        builder.setInitialMode(ServiceController.Mode.ACTIVE)\n               .install();\n    }","id":48912,"modified_method":"static void addService(final ServiceTarget serviceTarget, final ModelNode subModel, final ServiceVerificationHandler handler) {\n        final String interfaceName = subModel.require(ModelDescriptionConstants.INTERFACE).asString();\n        final int port = getIntValue(subModel, ModelDescriptionConstants.PORT);\n        final int securePort = getIntValue(subModel, ModelDescriptionConstants.SECURE_PORT);\n        final String securityRealm = subModel.hasDefined(SECURITY_REALM) ? subModel.get(SECURITY_REALM).asString() : null;\n\n        final HttpManagementService service = new HttpManagementService();\n        ServiceBuilder builder = serviceTarget.addService(HttpManagementService.SERVICE_NAME, service)\n                .addDependency(\n                        NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(interfaceName),\n                        NetworkInterfaceBinding.class, service.getInterfaceInjector())\n                .addListener(handler)\n                .addDependency(Services.JBOSS_SERVER_CONTROLLER, ModelController.class, service.getModelControllerInjector())\n                .addDependency(AbstractPathService.pathNameOf(ServerEnvironment.SERVER_TEMP_DIR), String.class, service.getTempDirInjector())\n                .addInjection(service.getPortInjector(), port)\n                .addInjection(service.getSecurePortInjector(), securePort)\n                .addInjection(service.getExecutorServiceInjector(), Executors.newCachedThreadPool(new JBossThreadFactory(new ThreadGroup(\"HttpManagementService-threads\"), Boolean.FALSE, null, \"%G - %t\", null, null, AccessController.getContext())));\n\n        if (securityRealm != null) {\n            builder.addDependency(SecurityRealmService.BASE_SERVICE_NAME.append(securityRealm), SecurityRealmService.class, service.getSecurityRealmInjector());\n        } else {\n            Logger.getLogger(\"org.jboss.as\").warn(\"No security realm defined for http management service, all access will be unrestricted.\");\n        }\n        builder.setInitialMode(ServiceController.Mode.ACTIVE)\n               .install();\n    }","commit_id":"d765832a9d6668c04ffe28077db2ce5763f34d45","url":"https://github.com/wildfly/wildfly"},{"original_method":"private static void installHttpManagementServices(final ServiceTarget serviceTarget,\n                                                      final LocalHostControllerInfo hostControllerInfo,\n                                                      final HostControllerEnvironment environment,\n                                                      final ServiceVerificationHandler verificationHandler) {\n\n        String interfaceName = hostControllerInfo.getHttpManagementInterface();\n        int port = hostControllerInfo.getHttpManagementPort();\n        int securePort = hostControllerInfo.getHttpManagementSecurePort();\n        String securityRealm = hostControllerInfo.getHttpManagementSecurityRealm();\n\n        Logger.getLogger(\"org.jboss.as\").infof(\"creating http management service using network interface (%s) port (%s) securePort (%s)\", interfaceName, port, securePort);\n\n        final ThreadFactory httpMgmtThreads = new JBossThreadFactory(new ThreadGroup(\"HttpManagementService-threads\"),\n                Boolean.FALSE, null, \"%G - %t\", null, null, AccessController.getContext());\n        final HttpManagementService service = new HttpManagementService();\n        ServiceBuilder builder = serviceTarget.addService(HttpManagementService.SERVICE_NAME, service)\n                .addDependency(\n                        NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(interfaceName),\n                        NetworkInterfaceBinding.class, service.getInterfaceInjector())\n                .addDependency(DomainModelControllerService.SERVICE_NAME, ModelController.class, service.getModelControllerInjector())\n                .addInjection(service.getTempDirInjector(), environment.getDomainTempDir().getAbsolutePath())\n                .addInjection(service.getPortInjector(), port)\n                .addInjection(service.getSecurePortInjector(), securePort)\n                .addInjection(service.getExecutorServiceInjector(), Executors.newCachedThreadPool(httpMgmtThreads))\n                .addListener(verificationHandler);\n\n        if (securityRealm != null) {\n            builder.addDependency(SecurityRealmService.BASE_SERVICE_NAME.append(securityRealm), SecurityRealmService.class, service.getSecurityRealmInjector());\n        }\n        builder.setInitialMode(ServiceController.Mode.ACTIVE)\n                .install();\n\n    }","id":48913,"modified_method":"private static void installHttpManagementServices(final ServiceTarget serviceTarget,\n                                                      final LocalHostControllerInfo hostControllerInfo,\n                                                      final HostControllerEnvironment environment,\n                                                      final ServiceVerificationHandler verificationHandler) {\n\n        String interfaceName = hostControllerInfo.getHttpManagementInterface();\n        int port = hostControllerInfo.getHttpManagementPort();\n        int securePort = hostControllerInfo.getHttpManagementSecurePort();\n        String securityRealm = hostControllerInfo.getHttpManagementSecurityRealm();\n\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"creating http management service using network interface (\").append(interfaceName).append(\")\");\n        if (port > -1) {\n            sb.append(\" port (\").append(port).append(\")\");\n        }\n        if (securePort > -1) {\n            sb.append(\" securePort (\").append(securePort).append(\")\");\n        }\n        Logger.getLogger(\"org.jboss.as\").info(sb.toString());\n\n        final ThreadFactory httpMgmtThreads = new JBossThreadFactory(new ThreadGroup(\"HttpManagementService-threads\"),\n                Boolean.FALSE, null, \"%G - %t\", null, null, AccessController.getContext());\n        final HttpManagementService service = new HttpManagementService();\n        ServiceBuilder builder = serviceTarget.addService(HttpManagementService.SERVICE_NAME, service)\n                .addDependency(\n                        NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(interfaceName),\n                        NetworkInterfaceBinding.class, service.getInterfaceInjector())\n                .addDependency(DomainModelControllerService.SERVICE_NAME, ModelController.class, service.getModelControllerInjector())\n                .addInjection(service.getTempDirInjector(), environment.getDomainTempDir().getAbsolutePath())\n                .addInjection(service.getPortInjector(), port)\n                .addInjection(service.getSecurePortInjector(), securePort)\n                .addInjection(service.getExecutorServiceInjector(), Executors.newCachedThreadPool(httpMgmtThreads))\n                .addListener(verificationHandler);\n\n        if (securityRealm != null) {\n            builder.addDependency(SecurityRealmService.BASE_SERVICE_NAME.append(securityRealm), SecurityRealmService.class, service.getSecurityRealmInjector());\n        } else {\n            Logger.getLogger(\"org.jboss.as\").warn(\"No security realm defined for http management service, all access will be unrestricted.\");\n        }\n        builder.setInitialMode(ServiceController.Mode.ACTIVE)\n                .install();\n\n    }","commit_id":"d765832a9d6668c04ffe28077db2ce5763f34d45","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void start(StartContext context) throws StartException {\n        String relativeTo = this.relativeTo.getOptionalValue();\n        String file = relativeTo == null ? path : relativeTo + \"/\" + path;\n\n        File propertiesFile = new File(file);\n        try {\n            users.load(propertiesFile.toURI().toURL().openStream());\n        } catch (MalformedURLException mue) {\n            throw new StartException(\"Unable to load properties\", mue);\n        } catch (IOException ioe) {\n            throw new StartException(\"Unable to load properties\", ioe);\n        }\n    }","id":48914,"modified_method":"public void start(StartContext context) throws StartException {\n        String relativeTo = this.relativeTo.getOptionalValue();\n        String file = relativeTo == null ? path : relativeTo + \"/\" + path;\n\n        File propertiesFile = new File(file);\n        try {\n            users.load(propertiesFile.toURI().toURL().openStream());\n\n            final String admin = \"admin\";\n            if (users.contains(admin) && admin.equals(users.get(admin))) {\n                Logger.getLogger(\"org.jboss.as.domain-management\")\n                        .warn(\"Properties file defined with default user and password, this will be easy to guess.\");\n            }\n        } catch (MalformedURLException mue) {\n            throw new StartException(\"Unable to load properties\", mue);\n        } catch (IOException ioe) {\n            throw new StartException(\"Unable to load properties\", ioe);\n        }\n    }","commit_id":"d765832a9d6668c04ffe28077db2ce5763f34d45","url":"https://github.com/wildfly/wildfly"},{"original_method":"private static void installConnectorServices(ServiceTarget serviceTarget,\n                                                 final ServiceName networkInterfaceBindingName,\n                                                 final NetworkInterfaceBinding networkInterfaceBinding,\n                                                 final int port,\n                                                 final ServiceName securityRealmName,\n                                                 final ServiceName serverCallbackService,\n                                                 final ServiceVerificationHandler verificationHandler,\n                                                 final List<ServiceController<?>> newControllers) {\n\n        RealmAuthenticationProviderService raps = new RealmAuthenticationProviderService();\n        ServiceBuilder<?> builder = serviceTarget.addService(AUTHENTICATION_PROVIDER, raps);\n        if (securityRealmName != null) {\n            builder.addDependency(securityRealmName, SecurityRealm.class, raps.getSecurityRealmInjectedValue());\n        }\n        if (serverCallbackService != null) {\n            builder.addDependency(serverCallbackService, CallbackHandler.class, raps.getServerCallbackValue());\n        }\n        builder.setInitialMode(ON_DEMAND)\n                .install();\n\n        RealmOptionMapService roms = new RealmOptionMapService();\n        serviceTarget.addService(OPTION_MAP, roms)\n                .addDependency(AUTHENTICATION_PROVIDER, RealmAuthenticationProvider.class, roms.getRealmAuthenticationProviderInjectedValue())\n                .setInitialMode(ON_DEMAND)\n                .install();\n\n        if (networkInterfaceBindingName != null) {\n            final InjectedNetworkBindingStreamServerService streamServerService = new InjectedNetworkBindingStreamServerService(port);\n            builder = serviceTarget.addService(RemotingServices.serverServiceName(MANAGEMENT_CHANNEL, port), streamServerService)\n                    .addDependency(AUTHENTICATION_PROVIDER, ServerAuthenticationProvider.class, streamServerService.getAuthenticationProviderInjector())\n                    .addDependency(OPTION_MAP, OptionMap.class, streamServerService.getOptionMapInjectedValue())\n                    .addDependency(RemotingServices.ENDPOINT, Endpoint.class, streamServerService.getEndpointInjector())\n                    .addDependency(networkInterfaceBindingName, NetworkInterfaceBinding.class, streamServerService.getInterfaceBindingInjector())\n                    .setInitialMode(ACTIVE);\n            addController(newControllers, verificationHandler, builder);\n        } else {\n            final NetworkBindingStreamServerService streamServerService = new NetworkBindingStreamServerService(networkInterfaceBinding, port);\n            builder = serviceTarget.addService(RemotingServices.serverServiceName(MANAGEMENT_CHANNEL, port), streamServerService)\n                    .addDependency(AUTHENTICATION_PROVIDER, ServerAuthenticationProvider.class, streamServerService.getAuthenticationProviderInjector())\n                    .addDependency(OPTION_MAP, OptionMap.class, streamServerService.getOptionMapInjectedValue())\n                    .addDependency(RemotingServices.ENDPOINT, Endpoint.class, streamServerService.getEndpointInjector())\n                    .setInitialMode(ACTIVE);\n            addController(newControllers, verificationHandler, builder);\n        }\n    }","id":48915,"modified_method":"private static void installConnectorServices(ServiceTarget serviceTarget,\n                                                 final ServiceName networkInterfaceBindingName,\n                                                 final NetworkInterfaceBinding networkInterfaceBinding,\n                                                 final int port,\n                                                 final ServiceName securityRealmName,\n                                                 final ServiceName serverCallbackService,\n                                                 final ServiceVerificationHandler verificationHandler,\n                                                 final List<ServiceController<?>> newControllers) {\n\n        RealmAuthenticationProviderService raps = new RealmAuthenticationProviderService();\n        ServiceBuilder<?> builder = serviceTarget.addService(AUTHENTICATION_PROVIDER, raps);\n        if (securityRealmName != null) {\n            builder.addDependency(securityRealmName, SecurityRealm.class, raps.getSecurityRealmInjectedValue());\n        } else {\n            Logger.getLogger(\"org.jboss.as\").warn(\"No security realm defined for native management service, all access will be unrestricted.\");\n        }\n        if (serverCallbackService != null) {\n            builder.addDependency(serverCallbackService, CallbackHandler.class, raps.getServerCallbackValue());\n        }\n        builder.setInitialMode(ON_DEMAND)\n                .install();\n\n        RealmOptionMapService roms = new RealmOptionMapService();\n        serviceTarget.addService(OPTION_MAP, roms)\n                .addDependency(AUTHENTICATION_PROVIDER, RealmAuthenticationProvider.class, roms.getRealmAuthenticationProviderInjectedValue())\n                .setInitialMode(ON_DEMAND)\n                .install();\n\n        if (networkInterfaceBindingName != null) {\n            final InjectedNetworkBindingStreamServerService streamServerService = new InjectedNetworkBindingStreamServerService(port);\n            builder = serviceTarget.addService(RemotingServices.serverServiceName(MANAGEMENT_CHANNEL, port), streamServerService)\n                    .addDependency(AUTHENTICATION_PROVIDER, ServerAuthenticationProvider.class, streamServerService.getAuthenticationProviderInjector())\n                    .addDependency(OPTION_MAP, OptionMap.class, streamServerService.getOptionMapInjectedValue())\n                    .addDependency(RemotingServices.ENDPOINT, Endpoint.class, streamServerService.getEndpointInjector())\n                    .addDependency(networkInterfaceBindingName, NetworkInterfaceBinding.class, streamServerService.getInterfaceBindingInjector())\n                    .setInitialMode(ACTIVE);\n            addController(newControllers, verificationHandler, builder);\n        } else {\n            final NetworkBindingStreamServerService streamServerService = new NetworkBindingStreamServerService(networkInterfaceBinding, port);\n            builder = serviceTarget.addService(RemotingServices.serverServiceName(MANAGEMENT_CHANNEL, port), streamServerService)\n                    .addDependency(AUTHENTICATION_PROVIDER, ServerAuthenticationProvider.class, streamServerService.getAuthenticationProviderInjector())\n                    .addDependency(OPTION_MAP, OptionMap.class, streamServerService.getOptionMapInjectedValue())\n                    .addDependency(RemotingServices.ENDPOINT, Endpoint.class, streamServerService.getEndpointInjector())\n                    .setInitialMode(ACTIVE);\n            addController(newControllers, verificationHandler, builder);\n        }\n    }","commit_id":"d765832a9d6668c04ffe28077db2ce5763f34d45","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tList<Long> paths = readPaths( session );\n\t\t\n\t\tNode currentNode = this.getCurrentNode( session );\n\t\tNode newNode = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnewNode = NodeManager.getManager().getReferenceNode();\n\t\t\tpaths.clear();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tString arg = parser.arguments().get( 0 );\n\t\t\tlong newId = currentNode.getId();\n\t\t\tif ( arg.equals( \"..\" )  )\n\t\t\t{\n\t\t\t\tif ( paths.size() > 0 )\n\t\t\t\t{\n\t\t\t\t\tnewId = paths.remove( paths.size() - 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( arg.equals( \".\" ) )\n\t\t\t{\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnewId = Long.parseLong( arg );\n\t\t\t\tif ( newId == currentNode.getId() )\n\t\t\t\t{\n\t\t\t\t\tthrow new ShellException( \"Can't cd to the current node\" );\n\t\t\t\t}\n\t\t\t\tboolean absolute = parser.options().containsKey( \"a\" );\n\t\t\t\tif ( !absolute && !this.nodeIsConnected( currentNode, newId ) )\n\t\t\t\t{\n\t\t\t\t\tthrow new ShellException( \"Node \" + newId +\n\t\t\t\t\t\t\" isn't connected to the current node\" );\n\t\t\t\t}\n\t\t\t\tpaths.add( currentNode.getId() );\n\t\t\t}\n\t\t\tnewNode = this.getNodeById( newId );\n\t\t}\n\t\t\n\t\tthis.setCurrentNode( session, newNode );\n\t\tsession.set( AbstractClient.PROMPT_KEY, \"neo-sh [\" + newNode.getId() + \n\t\t\t\"] $\" );\n\t\tsession.set( WORKING_DIR_KEY, this.makePath( paths ) );\n\t\treturn null;\n\t}","id":48916,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tList<Long> paths = readPaths( session );\n\t\t\n\t\tNode currentNode = this.getCurrentNode( session );\n\t\tNode newNode = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnewNode = NodeManager.getManager().getReferenceNode();\n\t\t\tpaths.clear();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tString arg = parser.arguments().get( 0 );\n\t\t\tlong newId = currentNode.getId();\n\t\t\tif ( arg.equals( \"..\" )  )\n\t\t\t{\n\t\t\t\tif ( paths.size() > 0 )\n\t\t\t\t{\n\t\t\t\t\tnewId = paths.remove( paths.size() - 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( arg.equals( \".\" ) )\n\t\t\t{\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnewId = Long.parseLong( arg );\n\t\t\t\tif ( newId == currentNode.getId() )\n\t\t\t\t{\n\t\t\t\t\tthrow new ShellException( \"Can't cd to the current node\" );\n\t\t\t\t}\n\t\t\t\tboolean absolute = parser.options().containsKey( \"a\" );\n\t\t\t\tif ( !absolute && !this.nodeIsConnected( currentNode, newId ) )\n\t\t\t\t{\n\t\t\t\t\tthrow new ShellException( \"Node \" + newId +\n\t\t\t\t\t\t\" isn't connected to the current node\" );\n\t\t\t\t}\n\t\t\t\tpaths.add( currentNode.getId() );\n\t\t\t}\n\t\t\tnewNode = this.getNodeById( newId );\n\t\t}\n\t\t\n\t\tthis.setCurrentNode( session, newNode );\n\t\tsession.set( AbstractClient.PROMPT_KEY, \"neo-sh [\" + newNode.getId() + \n\t\t\t\"] $ \" );\n\t\tsession.set( WORKING_DIR_KEY, this.makePath( paths ) );\n\t\treturn null;\n\t}","commit_id":"6810b1dfa1aecc5af671739f73fb771024d897d0","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tboolean verbose = parser.options().containsKey( \"v\" );\n\t\tboolean displayValues = verbose || !parser.options().containsKey( \"q\" );\n\t\tboolean displayProperties =\n\t\t\tverbose || parser.options().containsKey( \"p\" );\n\t\tboolean displayRelationships =\n\t\t\tverbose || parser.options().containsKey( \"r\" );\n\t\tString filter = parser.options().get( \"f\" );\n\t\tif ( !displayProperties && !displayRelationships )\n\t\t{\n\t\t\tdisplayProperties = true;\n\t\t\tdisplayRelationships = true;\n\t\t}\n\t\t\n\t\tNode node = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnode = this.getCurrentNode( session );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode = this.getNodeById(\n\t\t\t\tLong.parseLong( parser.arguments().get( 0 ) ) );\n\t\t}\n\t\t\n\t\tthis.displayProperties( node, out, displayProperties, displayValues,\n\t\t\tverbose, filter );\n\t\tthis.displayRelationships( parser, node, out, displayRelationships,\n\t\t\tfilter );\n\t\treturn null;\n\t}","id":48917,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tboolean verbose = parser.options().containsKey( \"v\" );\n\t\tboolean displayValues = verbose || !parser.options().containsKey( \"q\" );\n\t\tboolean displayProperties =\n\t\t\tverbose || parser.options().containsKey( \"p\" );\n\t\tboolean displayRelationships =\n\t\t\tverbose || parser.options().containsKey( \"r\" );\n\t\tString filter = parser.options().get( \"f\" );\n\t\tif ( !displayProperties && !displayRelationships )\n\t\t{\n\t\t\tdisplayProperties = true;\n\t\t\tdisplayRelationships = true;\n\t\t}\n\t\t\n\t\tNode node = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnode = this.getCurrentNode( session );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode = this.getNodeById(\n\t\t\t\tLong.parseLong( parser.arguments().get( 0 ) ) );\n\t\t}\n\t\t\n\t\tthis.displayProperties( node, out, displayProperties, displayValues,\n\t\t\tverbose, filter );\n\t\tthis.displayRelationships( parser, node, out, displayRelationships, \n\t\t\tverbose, filter );\n\t\treturn null;\n\t}","commit_id":"6810b1dfa1aecc5af671739f73fb771024d897d0","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void displayRelationships( AppCommandParser parser, Node node,\n\t\tOutput out, boolean displayRelationships, String filter )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tif ( !displayRelationships )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tString directionFilter = parser.options().get( \"d\" );\n\t\tDirection direction = this.getDirection( directionFilter );\n\t\tboolean displayOutgoing = directionFilter == null ||\n\t\t\tdirection == Direction.OUTGOING;\n\t\tboolean displayIncoming = directionFilter == null ||\n\t\t\tdirection == Direction.INCOMING;\n\t\tPattern filterPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tif ( displayOutgoing )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.OUTGOING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tout.println(\n\t\t\t\t\tgetDisplayNameForCurrentNode() +\n\t\t\t\t\t\" --[\" + rel.getType() + \", \" + rel.getId() + \"]--> \" +\n\t\t\t\t\tgetDisplayNameForNode( rel.getEndNode() ) );\n\t\t\t}\n\t\t}\n\t\tif ( displayIncoming )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.INCOMING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tout.println(\n\t\t\t\t\tgetDisplayNameForCurrentNode() +\n\t\t\t\t\t\" <--[\" + rel.getType() + \", \" + rel.getId() + \"]-- \" +\n\t\t\t\t\tgetDisplayNameForNode( rel.getStartNode() ) );\n\t\t\t}\n\t\t}\n\t}","id":48918,"modified_method":"private void displayRelationships( AppCommandParser parser, Node node,\n\t\tOutput out, boolean displayRelationships, boolean verbose, \n\t\tString filter ) throws ShellException, RemoteException\n\t{\n\t\tif ( !displayRelationships )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tString directionFilter = parser.options().get( \"d\" );\n\t\tDirection direction = this.getDirection( directionFilter );\n\t\tboolean displayOutgoing = directionFilter == null ||\n\t\t\tdirection == Direction.OUTGOING;\n\t\tboolean displayIncoming = directionFilter == null ||\n\t\t\tdirection == Direction.INCOMING;\n\t\tPattern filterPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tif ( displayOutgoing )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.OUTGOING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = new StringBuffer( \n\t\t\t\t\tgetDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" --[\" ).append( rel.getType() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append( \"]--> \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getEndNode() ) );\n\t\t\t\tout.println( buf );\n\t\t\t}\n\t\t}\n\t\tif ( displayIncoming )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.INCOMING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = \n\t\t\t\t\tnew StringBuffer( getDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" <--[\" ).append( rel.getType() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append(  \"]-- \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getStartNode() ) );\n\t\t\t}\n\t\t}\n\t}","commit_id":"6810b1dfa1aecc5af671739f73fb771024d897d0","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tList<Long> paths = readPaths( session );\n\t\t\n\t\tNode currentNode = this.getCurrentNode( session );\n\t\tNode newNode = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnewNode = NodeManager.getManager().getReferenceNode();\n\t\t\tpaths.clear();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tString arg = parser.arguments().get( 0 );\n\t\t\tlong newId = currentNode.getId();\n\t\t\tif ( arg.equals( \"..\" )  )\n\t\t\t{\n\t\t\t\tif ( paths.size() > 0 )\n\t\t\t\t{\n\t\t\t\t\tnewId = paths.remove( paths.size() - 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( arg.equals( \".\" ) )\n\t\t\t{\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnewId = Long.parseLong( arg );\n\t\t\t\tif ( newId == currentNode.getId() )\n\t\t\t\t{\n\t\t\t\t\tthrow new ShellException( \"Can't cd to the current node\" );\n\t\t\t\t}\n\t\t\t\tboolean absolute = parser.options().containsKey( \"a\" );\n\t\t\t\tif ( !absolute && !this.nodeIsConnected( currentNode, newId ) )\n\t\t\t\t{\n\t\t\t\t\tthrow new ShellException( \"Node \" + newId +\n\t\t\t\t\t\t\" isn't connected to the current node\" );\n\t\t\t\t}\n\t\t\t\tpaths.add( currentNode.getId() );\n\t\t\t}\n\t\t\tnewNode = this.getNodeById( newId );\n\t\t}\n\t\t\n\t\tthis.setCurrentNode( session, newNode );\n\t\tsession.set( AbstractClient.PROMPT_KEY, \"neo-sh [\" + newNode.getId() + \n\t\t\t\"] $\" );\n\t\tsession.set( WORKING_DIR_KEY, this.makePath( paths ) );\n\t\treturn null;\n\t}","id":48919,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tList<Long> paths = readPaths( session );\n\t\t\n\t\tNode currentNode = this.getCurrentNode( session );\n\t\tNode newNode = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnewNode = NodeManager.getManager().getReferenceNode();\n\t\t\tpaths.clear();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tString arg = parser.arguments().get( 0 );\n\t\t\tlong newId = currentNode.getId();\n\t\t\tif ( arg.equals( \"..\" )  )\n\t\t\t{\n\t\t\t\tif ( paths.size() > 0 )\n\t\t\t\t{\n\t\t\t\t\tnewId = paths.remove( paths.size() - 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( arg.equals( \".\" ) )\n\t\t\t{\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnewId = Long.parseLong( arg );\n\t\t\t\tif ( newId == currentNode.getId() )\n\t\t\t\t{\n\t\t\t\t\tthrow new ShellException( \"Can't cd to the current node\" );\n\t\t\t\t}\n\t\t\t\tboolean absolute = parser.options().containsKey( \"a\" );\n\t\t\t\tif ( !absolute && !this.nodeIsConnected( currentNode, newId ) )\n\t\t\t\t{\n\t\t\t\t\tthrow new ShellException( \"Node \" + newId +\n\t\t\t\t\t\t\" isn't connected to the current node\" );\n\t\t\t\t}\n\t\t\t\tpaths.add( currentNode.getId() );\n\t\t\t}\n\t\t\tnewNode = this.getNodeById( newId );\n\t\t}\n\t\t\n\t\tthis.setCurrentNode( session, newNode );\n\t\tsession.set( AbstractClient.PROMPT_KEY, \"neo-sh [\" + newNode.getId() + \n\t\t\t\"] $ \" );\n\t\tsession.set( WORKING_DIR_KEY, this.makePath( paths ) );\n\t\treturn null;\n\t}","commit_id":"c80a11fa27f9e0888df186c55c46609c7c3f4dc8","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tboolean verbose = parser.options().containsKey( \"v\" );\n\t\tboolean displayValues = verbose || !parser.options().containsKey( \"q\" );\n\t\tboolean displayProperties =\n\t\t\tverbose || parser.options().containsKey( \"p\" );\n\t\tboolean displayRelationships =\n\t\t\tverbose || parser.options().containsKey( \"r\" );\n\t\tString filter = parser.options().get( \"f\" );\n\t\tif ( !displayProperties && !displayRelationships )\n\t\t{\n\t\t\tdisplayProperties = true;\n\t\t\tdisplayRelationships = true;\n\t\t}\n\t\t\n\t\tNode node = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnode = this.getCurrentNode( session );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode = this.getNodeById(\n\t\t\t\tLong.parseLong( parser.arguments().get( 0 ) ) );\n\t\t}\n\t\t\n\t\tthis.displayProperties( node, out, displayProperties, displayValues,\n\t\t\tverbose, filter );\n\t\tthis.displayRelationships( parser, node, out, displayRelationships,\n\t\t\tfilter );\n\t\treturn null;\n\t}","id":48920,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tboolean verbose = parser.options().containsKey( \"v\" );\n\t\tboolean displayValues = verbose || !parser.options().containsKey( \"q\" );\n\t\tboolean displayProperties =\n\t\t\tverbose || parser.options().containsKey( \"p\" );\n\t\tboolean displayRelationships =\n\t\t\tverbose || parser.options().containsKey( \"r\" );\n\t\tString filter = parser.options().get( \"f\" );\n\t\tif ( !displayProperties && !displayRelationships )\n\t\t{\n\t\t\tdisplayProperties = true;\n\t\t\tdisplayRelationships = true;\n\t\t}\n\t\t\n\t\tNode node = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnode = this.getCurrentNode( session );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode = this.getNodeById(\n\t\t\t\tLong.parseLong( parser.arguments().get( 0 ) ) );\n\t\t}\n\t\t\n\t\tthis.displayProperties( node, out, displayProperties, displayValues,\n\t\t\tverbose, filter );\n\t\tthis.displayRelationships( parser, node, out, displayRelationships, \n\t\t\tverbose, filter );\n\t\treturn null;\n\t}","commit_id":"c80a11fa27f9e0888df186c55c46609c7c3f4dc8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void displayRelationships( AppCommandParser parser, Node node,\n\t\tOutput out, boolean displayRelationships, String filter )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tif ( !displayRelationships )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tString directionFilter = parser.options().get( \"d\" );\n\t\tDirection direction = this.getDirection( directionFilter );\n\t\tboolean displayOutgoing = directionFilter == null ||\n\t\t\tdirection == Direction.OUTGOING;\n\t\tboolean displayIncoming = directionFilter == null ||\n\t\t\tdirection == Direction.INCOMING;\n\t\tPattern filterPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tif ( displayOutgoing )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.OUTGOING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tout.println(\n\t\t\t\t\tgetDisplayNameForCurrentNode() +\n\t\t\t\t\t\" --[\" + rel.getType() + \", \" + rel.getId() + \"]--> \" +\n\t\t\t\t\tgetDisplayNameForNode( rel.getEndNode() ) );\n\t\t\t}\n\t\t}\n\t\tif ( displayIncoming )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.INCOMING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tout.println(\n\t\t\t\t\tgetDisplayNameForCurrentNode() +\n\t\t\t\t\t\" <--[\" + rel.getType() + \", \" + rel.getId() + \"]-- \" +\n\t\t\t\t\tgetDisplayNameForNode( rel.getStartNode() ) );\n\t\t\t}\n\t\t}\n\t}","id":48921,"modified_method":"private void displayRelationships( AppCommandParser parser, Node node,\n\t\tOutput out, boolean displayRelationships, boolean verbose, \n\t\tString filter ) throws ShellException, RemoteException\n\t{\n\t\tif ( !displayRelationships )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tString directionFilter = parser.options().get( \"d\" );\n\t\tDirection direction = this.getDirection( directionFilter );\n\t\tboolean displayOutgoing = directionFilter == null ||\n\t\t\tdirection == Direction.OUTGOING;\n\t\tboolean displayIncoming = directionFilter == null ||\n\t\t\tdirection == Direction.INCOMING;\n\t\tPattern filterPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tif ( displayOutgoing )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.OUTGOING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = new StringBuffer( \n\t\t\t\t\tgetDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" --[\" ).append( rel.getType() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append( \"]--> \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getEndNode() ) );\n\t\t\t\tout.println( buf );\n\t\t\t}\n\t\t}\n\t\tif ( displayIncoming )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.INCOMING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = \n\t\t\t\t\tnew StringBuffer( getDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" <--[\" ).append( rel.getType() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append(  \"]-- \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getStartNode() ) );\n\t\t\t}\n\t\t}\n\t}","commit_id":"c80a11fa27f9e0888df186c55c46609c7c3f4dc8","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tList<Long> paths = readPaths( session );\n\t\t\n\t\tNode currentNode = this.getCurrentNode( session );\n\t\tNode newNode = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnewNode = NodeManager.getManager().getReferenceNode();\n\t\t\tpaths.clear();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tString arg = parser.arguments().get( 0 );\n\t\t\tlong newId = currentNode.getId();\n\t\t\tif ( arg.equals( \"..\" )  )\n\t\t\t{\n\t\t\t\tif ( paths.size() > 0 )\n\t\t\t\t{\n\t\t\t\t\tnewId = paths.remove( paths.size() - 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( arg.equals( \".\" ) )\n\t\t\t{\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnewId = Long.parseLong( arg );\n\t\t\t\tif ( newId == currentNode.getId() )\n\t\t\t\t{\n\t\t\t\t\tthrow new ShellException( \"Can't cd to the current node\" );\n\t\t\t\t}\n\t\t\t\tboolean absolute = parser.options().containsKey( \"a\" );\n\t\t\t\tif ( !absolute && !this.nodeIsConnected( currentNode, newId ) )\n\t\t\t\t{\n\t\t\t\t\tthrow new ShellException( \"Node \" + newId +\n\t\t\t\t\t\t\" isn't connected to the current node\" );\n\t\t\t\t}\n\t\t\t\tpaths.add( currentNode.getId() );\n\t\t\t}\n\t\t\tnewNode = this.getNodeById( newId );\n\t\t}\n\t\t\n\t\tthis.setCurrentNode( session, newNode );\n\t\tsession.set( AbstractClient.PROMPT_KEY, \"neo-sh [\" + newNode.getId() + \n\t\t\t\"] $\" );\n\t\tsession.set( WORKING_DIR_KEY, this.makePath( paths ) );\n\t\treturn null;\n\t}","id":48922,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tList<Long> paths = readPaths( session );\n\t\t\n\t\tNode currentNode = this.getCurrentNode( session );\n\t\tNode newNode = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnewNode = NodeManager.getManager().getReferenceNode();\n\t\t\tpaths.clear();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tString arg = parser.arguments().get( 0 );\n\t\t\tlong newId = currentNode.getId();\n\t\t\tif ( arg.equals( \"..\" )  )\n\t\t\t{\n\t\t\t\tif ( paths.size() > 0 )\n\t\t\t\t{\n\t\t\t\t\tnewId = paths.remove( paths.size() - 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( arg.equals( \".\" ) )\n\t\t\t{\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnewId = Long.parseLong( arg );\n\t\t\t\tif ( newId == currentNode.getId() )\n\t\t\t\t{\n\t\t\t\t\tthrow new ShellException( \"Can't cd to the current node\" );\n\t\t\t\t}\n\t\t\t\tboolean absolute = parser.options().containsKey( \"a\" );\n\t\t\t\tif ( !absolute && !this.nodeIsConnected( currentNode, newId ) )\n\t\t\t\t{\n\t\t\t\t\tthrow new ShellException( \"Node \" + newId +\n\t\t\t\t\t\t\" isn't connected to the current node\" );\n\t\t\t\t}\n\t\t\t\tpaths.add( currentNode.getId() );\n\t\t\t}\n\t\t\tnewNode = this.getNodeById( newId );\n\t\t}\n\t\t\n\t\tthis.setCurrentNode( session, newNode );\n\t\tsession.set( AbstractClient.PROMPT_KEY, \"neo-sh [\" + newNode.getId() + \n\t\t\t\"] $ \" );\n\t\tsession.set( WORKING_DIR_KEY, this.makePath( paths ) );\n\t\treturn null;\n\t}","commit_id":"2d9aeb0fb108d38bf98a0170a8bcc5f09d736558","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tboolean verbose = parser.options().containsKey( \"v\" );\n\t\tboolean displayValues = verbose || !parser.options().containsKey( \"q\" );\n\t\tboolean displayProperties =\n\t\t\tverbose || parser.options().containsKey( \"p\" );\n\t\tboolean displayRelationships =\n\t\t\tverbose || parser.options().containsKey( \"r\" );\n\t\tString filter = parser.options().get( \"f\" );\n\t\tif ( !displayProperties && !displayRelationships )\n\t\t{\n\t\t\tdisplayProperties = true;\n\t\t\tdisplayRelationships = true;\n\t\t}\n\t\t\n\t\tNode node = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnode = this.getCurrentNode( session );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode = this.getNodeById(\n\t\t\t\tLong.parseLong( parser.arguments().get( 0 ) ) );\n\t\t}\n\t\t\n\t\tthis.displayProperties( node, out, displayProperties, displayValues,\n\t\t\tverbose, filter );\n\t\tthis.displayRelationships( parser, node, out, displayRelationships,\n\t\t\tfilter );\n\t\treturn null;\n\t}","id":48923,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tboolean verbose = parser.options().containsKey( \"v\" );\n\t\tboolean displayValues = verbose || !parser.options().containsKey( \"q\" );\n\t\tboolean displayProperties =\n\t\t\tverbose || parser.options().containsKey( \"p\" );\n\t\tboolean displayRelationships =\n\t\t\tverbose || parser.options().containsKey( \"r\" );\n\t\tString filter = parser.options().get( \"f\" );\n\t\tif ( !displayProperties && !displayRelationships )\n\t\t{\n\t\t\tdisplayProperties = true;\n\t\t\tdisplayRelationships = true;\n\t\t}\n\t\t\n\t\tNode node = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnode = this.getCurrentNode( session );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode = this.getNodeById(\n\t\t\t\tLong.parseLong( parser.arguments().get( 0 ) ) );\n\t\t}\n\t\t\n\t\tthis.displayProperties( node, out, displayProperties, displayValues,\n\t\t\tverbose, filter );\n\t\tthis.displayRelationships( parser, node, out, displayRelationships, \n\t\t\tverbose, filter );\n\t\treturn null;\n\t}","commit_id":"2d9aeb0fb108d38bf98a0170a8bcc5f09d736558","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void displayRelationships( AppCommandParser parser, Node node,\n\t\tOutput out, boolean displayRelationships, String filter )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tif ( !displayRelationships )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tString directionFilter = parser.options().get( \"d\" );\n\t\tDirection direction = this.getDirection( directionFilter );\n\t\tboolean displayOutgoing = directionFilter == null ||\n\t\t\tdirection == Direction.OUTGOING;\n\t\tboolean displayIncoming = directionFilter == null ||\n\t\t\tdirection == Direction.INCOMING;\n\t\tPattern filterPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tif ( displayOutgoing )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.OUTGOING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tout.println(\n\t\t\t\t\tgetDisplayNameForCurrentNode() +\n\t\t\t\t\t\" --[\" + rel.getType() + \", \" + rel.getId() + \"]--> \" +\n\t\t\t\t\tgetDisplayNameForNode( rel.getEndNode() ) );\n\t\t\t}\n\t\t}\n\t\tif ( displayIncoming )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.INCOMING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tout.println(\n\t\t\t\t\tgetDisplayNameForCurrentNode() +\n\t\t\t\t\t\" <--[\" + rel.getType() + \", \" + rel.getId() + \"]-- \" +\n\t\t\t\t\tgetDisplayNameForNode( rel.getStartNode() ) );\n\t\t\t}\n\t\t}\n\t}","id":48924,"modified_method":"private void displayRelationships( AppCommandParser parser, Node node,\n\t\tOutput out, boolean displayRelationships, boolean verbose, \n\t\tString filter ) throws ShellException, RemoteException\n\t{\n\t\tif ( !displayRelationships )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tString directionFilter = parser.options().get( \"d\" );\n\t\tDirection direction = this.getDirection( directionFilter );\n\t\tboolean displayOutgoing = directionFilter == null ||\n\t\t\tdirection == Direction.OUTGOING;\n\t\tboolean displayIncoming = directionFilter == null ||\n\t\t\tdirection == Direction.INCOMING;\n\t\tPattern filterPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tif ( displayOutgoing )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.OUTGOING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = new StringBuffer( \n\t\t\t\t\tgetDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" --[\" ).append( rel.getType() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append( \"]--> \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getEndNode() ) );\n\t\t\t\tout.println( buf );\n\t\t\t}\n\t\t}\n\t\tif ( displayIncoming )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.INCOMING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = \n\t\t\t\t\tnew StringBuffer( getDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" <--[\" ).append( rel.getType() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append(  \"]-- \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getStartNode() ) );\n\t\t\t}\n\t\t}\n\t}","commit_id":"2d9aeb0fb108d38bf98a0170a8bcc5f09d736558","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    Tree tx = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + tx);\n    }\n    if (tx == null) {\n      return tx;\n    }\n    Tree tt = UCPtransform(tx);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + tt);\n    }\n    Tree ttt = CCtransform(tt);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + ttt);\n    }\n    Tree tttt = qp.transformTree(ttt);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + tttt);\n    }\n    Tree flatSQ = SQflatten(tttt);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + flatSQ);\n    }\n    Tree fixedDates = dates.transformTree(flatSQ);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + fixedDates);\n    }\n    Tree removedXX = removeXOverX(fixedDates);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + removedXX);\n    }\n    Tree conjp = combineConjp(removedXX);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + conjp);\n    }\n    Tree movedRB = moveRB(conjp);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + movedRB);\n    }\n    Tree changedSbar = changeSbarToPP(movedRB);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + movedRB);\n    }\n    Tree nowThat = rearrangeNowThat(changedSbar);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + nowThat);\n    }\n    return nowThat;\n  }","id":48925,"modified_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    t = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + t);\n    }\n    if (t == null) {\n      return t;\n    }\n    t = UCPtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + t);\n    }\n    t = CCtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + t);\n    }\n    t = qp.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + t);\n    }\n    t = SQflatten(t);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + t);\n    }\n    t = dates.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + t);\n    }\n    t = removeXOverX(t);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + t);\n    }\n    t = combineConjp(t);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + t);\n    }\n    t = moveRB(t);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + t);\n    }\n    t = changeSbarToPP(t);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + t);\n    }\n    t = rearrangeNowThat(t);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + t);\n    }\n    return t;\n  }","commit_id":"45475dc1a18bf23269d4427d675c55b2c46986c9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    Tree tx = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + tx);\n    }\n    if (tx == null) {\n      return tx;\n    }\n    Tree tt = UCPtransform(tx);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + tt);\n    }\n    Tree ttt = CCtransform(tt);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + ttt);\n    }\n    Tree tttt = qp.transformTree(ttt);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + tttt);\n    }\n    Tree flatSQ = SQflatten(tttt);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + flatSQ);\n    }\n    Tree fixedDates = dates.transformTree(flatSQ);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + fixedDates);\n    }\n    Tree removedXX = removeXOverX(fixedDates);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + removedXX);\n    }\n    Tree conjp = combineConjp(removedXX);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + conjp);\n    }\n    Tree movedRB = moveRB(conjp);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + movedRB);\n    }\n    Tree changedSbar = changeSbarToPP(movedRB);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + movedRB);\n    }\n    Tree nowThat = rearrangeNowThat(changedSbar);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + nowThat);\n    }\n    return nowThat;\n  }","id":48926,"modified_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    t = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + t);\n    }\n    if (t == null) {\n      return t;\n    }\n    t = UCPtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + t);\n    }\n    t = CCtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + t);\n    }\n    t = qp.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + t);\n    }\n    t = SQflatten(t);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + t);\n    }\n    t = dates.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + t);\n    }\n    t = removeXOverX(t);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + t);\n    }\n    t = combineConjp(t);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + t);\n    }\n    t = moveRB(t);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + t);\n    }\n    t = changeSbarToPP(t);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + t);\n    }\n    t = rearrangeNowThat(t);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + t);\n    }\n    return t;\n  }","commit_id":"23f0a43a134eb81df23318a7bcd1503dc8871d35","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    Tree tx = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + tx);\n    }\n    if (tx == null) {\n      return tx;\n    }\n    Tree tt = UCPtransform(tx);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + tt);\n    }\n    Tree ttt = CCtransform(tt);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + ttt);\n    }\n    Tree tttt = qp.transformTree(ttt);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + tttt);\n    }\n    Tree flatSQ = SQflatten(tttt);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + flatSQ);\n    }\n    Tree fixedDates = dates.transformTree(flatSQ);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + fixedDates);\n    }\n    Tree removedXX = removeXOverX(fixedDates);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + removedXX);\n    }\n    Tree conjp = combineConjp(removedXX);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + conjp);\n    }\n    Tree movedRB = moveRB(conjp);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + movedRB);\n    }\n    Tree changedSbar = changeSbarToPP(movedRB);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + movedRB);\n    }\n    Tree nowThat = rearrangeNowThat(changedSbar);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + nowThat);\n    }\n    return nowThat;\n  }","id":48927,"modified_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    t = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + t);\n    }\n    if (t == null) {\n      return t;\n    }\n    t = UCPtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + t);\n    }\n    t = CCtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + t);\n    }\n    t = qp.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + t);\n    }\n    t = SQflatten(t);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + t);\n    }\n    t = dates.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + t);\n    }\n    t = removeXOverX(t);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + t);\n    }\n    t = combineConjp(t);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + t);\n    }\n    t = moveRB(t);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + t);\n    }\n    t = changeSbarToPP(t);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + t);\n    }\n    t = rearrangeNowThat(t);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + t);\n    }\n    return t;\n  }","commit_id":"a62e4a4a3fc37d9e29023e1e233dfc6c694f548e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    Tree tx = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + tx);\n    }\n    if (tx == null) {\n      return tx;\n    }\n    Tree tt = UCPtransform(tx);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + tt);\n    }\n    Tree ttt = CCtransform(tt);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + ttt);\n    }\n    Tree tttt = qp.transformTree(ttt);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + tttt);\n    }\n    Tree flatSQ = SQflatten(tttt);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + flatSQ);\n    }\n    Tree fixedDates = dates.transformTree(flatSQ);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + fixedDates);\n    }\n    Tree removedXX = removeXOverX(fixedDates);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + removedXX);\n    }\n    Tree conjp = combineConjp(removedXX);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + conjp);\n    }\n    Tree movedRB = moveRB(conjp);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + movedRB);\n    }\n    Tree changedSbar = changeSbarToPP(movedRB);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + movedRB);\n    }\n    Tree nowThat = rearrangeNowThat(changedSbar);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + nowThat);\n    }\n    return nowThat;\n  }","id":48928,"modified_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    t = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + t);\n    }\n    if (t == null) {\n      return t;\n    }\n    t = UCPtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + t);\n    }\n    t = CCtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + t);\n    }\n    t = qp.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + t);\n    }\n    t = SQflatten(t);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + t);\n    }\n    t = dates.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + t);\n    }\n    t = removeXOverX(t);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + t);\n    }\n    t = combineConjp(t);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + t);\n    }\n    t = moveRB(t);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + t);\n    }\n    t = changeSbarToPP(t);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + t);\n    }\n    t = rearrangeNowThat(t);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + t);\n    }\n    return t;\n  }","commit_id":"723d44ff83c8257a09f576f9a75a76dbe7abaeb9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Thread safety note: nothing special is done to ensure the thread\n   * safety of the GrammaticalStructureFactory.  However, both the\n   * EnglishGrammaticalStructureFactory and the\n   * ChineseGrammaticalStructureFactory are thread safe.\n   */\n  public static void fillInParseAnnotations(boolean verbose, boolean buildGraphs, GrammaticalStructureFactory gsf, CoreMap sentence, Tree tree) {\n    // make sure all tree nodes are CoreLabels\n    // TODO: why isn't this always true? something fishy is going on\n    Trees.convertToCoreLabels(tree);\n\n    // index nodes, i.e., add start and end token positions to all nodes\n    // this is needed by other annotators down stream, e.g., the NFLAnnotator\n    tree.indexSpans(0);\n\n    sentence.set(TreeCoreAnnotations.TreeAnnotation.class, tree);\n    if (verbose) {\n      System.err.println(\"Tree is:\");\n      tree.pennPrint(System.err);\n    }\n\n    if (buildGraphs) {\n      String docID = sentence.get(CoreAnnotations.DocIDAnnotation.class);\n      if (docID == null) {\n        docID = \"\";\n      }\n\n      Integer sentenceIndex = sentence.get(CoreAnnotations.SentenceIndexAnnotation.class);\n      int index = (sentenceIndex == null) ? 0 : sentenceIndex;\n\n      // generate the dependency graph\n      SemanticGraph deps = SemanticGraphFactory.generateCollapsedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      SemanticGraph uncollapsedDeps = SemanticGraphFactory.generateUncollapsedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      SemanticGraph ccDeps = SemanticGraphFactory.generateCCProcessedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      if (verbose) {\n        System.err.println(\"SDs:\");\n        System.err.println(deps.toString(\"plain\"));\n      }\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class, deps);\n      sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class, uncollapsedDeps);\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class, ccDeps);\n    }\n\n    setMissingTags(sentence, tree);\n  }","id":48929,"modified_method":"/**\n   * Thread safety note: nothing special is done to ensure the thread\n   * safety of the GrammaticalStructureFactory.  However, both the\n   * EnglishGrammaticalStructureFactory and the\n   * ChineseGrammaticalStructureFactory are thread safe.\n   */\n  public static void fillInParseAnnotations(boolean verbose, boolean buildGraphs, GrammaticalStructureFactory gsf, CoreMap sentence, Tree tree) {\n    // make sure all tree nodes are CoreLabels\n    // TODO: why isn't this always true? something fishy is going on\n    Trees.convertToCoreLabels(tree);\n\n    // index nodes, i.e., add start and end token positions to all nodes\n    // this is needed by other annotators down stream, e.g., the NFLAnnotator\n    tree.indexSpans(0);\n\n    sentence.set(TreeCoreAnnotations.TreeAnnotation.class, tree);\n    if (verbose) {\n      System.err.println(\"Tree is:\");\n      tree.pennPrint(System.err);\n    }\n\n    if (buildGraphs) {\n      String docID = sentence.get(CoreAnnotations.DocIDAnnotation.class);\n      if (docID == null) {\n        docID = \"\";\n      }\n\n      Integer sentenceIndex = sentence.get(CoreAnnotations.SentenceIndexAnnotation.class);\n      int index = (sentenceIndex == null) ? 0 : sentenceIndex;\n      \n      // TODO: get rid of the deepCopy() once we fix the GSF to not modify the input tree\n      Tree copy = tree.deepCopy();\n      GrammaticalStructure gs = gsf.newGrammaticalStructure(copy);\n\n      // generate the dependency graph\n      SemanticGraph deps = SemanticGraphFactory.generateCollapsedDependencies(gs, docID, index);\n      SemanticGraph uncollapsedDeps = SemanticGraphFactory.generateUncollapsedDependencies(gs, docID, index);\n      SemanticGraph ccDeps = SemanticGraphFactory.generateCCProcessedDependencies(gs, docID, index);\n      if (verbose) {\n        System.err.println(\"SDs:\");\n        System.err.println(deps.toString(\"plain\"));\n      }\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class, deps);\n      sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class, uncollapsedDeps);\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class, ccDeps);\n    }\n\n    setMissingTags(sentence, tree);\n  }","commit_id":"723d44ff83c8257a09f576f9a75a76dbe7abaeb9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    Tree tx = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + tx);\n    }\n    if (tx == null) {\n      return tx;\n    }\n    Tree tt = UCPtransform(tx);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + tt);\n    }\n    Tree ttt = CCtransform(tt);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + ttt);\n    }\n    Tree tttt = qp.transformTree(ttt);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + tttt);\n    }\n    Tree flatSQ = SQflatten(tttt);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + flatSQ);\n    }\n    Tree fixedDates = dates.transformTree(flatSQ);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + fixedDates);\n    }\n    Tree removedXX = removeXOverX(fixedDates);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + removedXX);\n    }\n    Tree conjp = combineConjp(removedXX);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + conjp);\n    }\n    Tree movedRB = moveRB(conjp);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + movedRB);\n    }\n    Tree changedSbar = changeSbarToPP(movedRB);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + movedRB);\n    }\n    Tree nowThat = rearrangeNowThat(changedSbar);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + nowThat);\n    }\n    return nowThat;\n  }","id":48930,"modified_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    t = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + t);\n    }\n    if (t == null) {\n      return t;\n    }\n    t = UCPtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + t);\n    }\n    t = CCtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + t);\n    }\n    t = qp.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + t);\n    }\n    t = SQflatten(t);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + t);\n    }\n    t = dates.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + t);\n    }\n    t = removeXOverX(t);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + t);\n    }\n    t = combineConjp(t);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + t);\n    }\n    t = moveRB(t);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + t);\n    }\n    t = changeSbarToPP(t);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + t);\n    }\n    t = rearrangeNowThat(t);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + t);\n    }\n    return t;\n  }","commit_id":"5d3c4445ba94277a28418c7da4696b1f86cc8bb6","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Thread safety note: nothing special is done to ensure the thread\n   * safety of the GrammaticalStructureFactory.  However, both the\n   * EnglishGrammaticalStructureFactory and the\n   * ChineseGrammaticalStructureFactory are thread safe.\n   */\n  public static void fillInParseAnnotations(boolean verbose, boolean buildGraphs, GrammaticalStructureFactory gsf, CoreMap sentence, Tree tree) {\n    // make sure all tree nodes are CoreLabels\n    // TODO: why isn't this always true? something fishy is going on\n    Trees.convertToCoreLabels(tree);\n\n    // index nodes, i.e., add start and end token positions to all nodes\n    // this is needed by other annotators down stream, e.g., the NFLAnnotator\n    tree.indexSpans(0);\n\n    sentence.set(TreeCoreAnnotations.TreeAnnotation.class, tree);\n    if (verbose) {\n      System.err.println(\"Tree is:\");\n      tree.pennPrint(System.err);\n    }\n\n    if (buildGraphs) {\n      String docID = sentence.get(CoreAnnotations.DocIDAnnotation.class);\n      if (docID == null) {\n        docID = \"\";\n      }\n\n      Integer sentenceIndex = sentence.get(CoreAnnotations.SentenceIndexAnnotation.class);\n      int index = (sentenceIndex == null) ? 0 : sentenceIndex;\n\n      // generate the dependency graph\n      SemanticGraph deps = SemanticGraphFactory.generateCollapsedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      SemanticGraph uncollapsedDeps = SemanticGraphFactory.generateUncollapsedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      SemanticGraph ccDeps = SemanticGraphFactory.generateCCProcessedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      if (verbose) {\n        System.err.println(\"SDs:\");\n        System.err.println(deps.toString(\"plain\"));\n      }\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class, deps);\n      sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class, uncollapsedDeps);\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class, ccDeps);\n    }\n\n    setMissingTags(sentence, tree);\n  }","id":48931,"modified_method":"/**\n   * Thread safety note: nothing special is done to ensure the thread\n   * safety of the GrammaticalStructureFactory.  However, both the\n   * EnglishGrammaticalStructureFactory and the\n   * ChineseGrammaticalStructureFactory are thread safe.\n   */\n  public static void fillInParseAnnotations(boolean verbose, boolean buildGraphs, GrammaticalStructureFactory gsf, CoreMap sentence, Tree tree) {\n    // make sure all tree nodes are CoreLabels\n    // TODO: why isn't this always true? something fishy is going on\n    Trees.convertToCoreLabels(tree);\n\n    // index nodes, i.e., add start and end token positions to all nodes\n    // this is needed by other annotators down stream, e.g., the NFLAnnotator\n    tree.indexSpans(0);\n\n    sentence.set(TreeCoreAnnotations.TreeAnnotation.class, tree);\n    if (verbose) {\n      System.err.println(\"Tree is:\");\n      tree.pennPrint(System.err);\n    }\n\n    if (buildGraphs) {\n      String docID = sentence.get(CoreAnnotations.DocIDAnnotation.class);\n      if (docID == null) {\n        docID = \"\";\n      }\n\n      Integer sentenceIndex = sentence.get(CoreAnnotations.SentenceIndexAnnotation.class);\n      int index = (sentenceIndex == null) ? 0 : sentenceIndex;\n      \n      // TODO: get rid of the deepCopy() once we fix the GSF to not modify the input tree\n      Tree copy = tree.deepCopy();\n      GrammaticalStructure gs = gsf.newGrammaticalStructure(copy);\n\n      // generate the dependency graph\n      SemanticGraph deps = SemanticGraphFactory.generateCollapsedDependencies(gs, docID, index);\n      SemanticGraph uncollapsedDeps = SemanticGraphFactory.generateUncollapsedDependencies(gs, docID, index);\n      SemanticGraph ccDeps = SemanticGraphFactory.generateCCProcessedDependencies(gs, docID, index);\n      if (verbose) {\n        System.err.println(\"SDs:\");\n        System.err.println(deps.toString(\"plain\"));\n      }\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class, deps);\n      sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class, uncollapsedDeps);\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class, ccDeps);\n    }\n\n    setMissingTags(sentence, tree);\n  }","commit_id":"5d3c4445ba94277a28418c7da4696b1f86cc8bb6","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    t = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + t);\n    }\n    if (t == null) {\n      return t;\n    }\n    t = UCPtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + t);\n    }\n    t = CCtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + t);\n    }\n    t = qp.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + t);\n    }\n    t = SQflatten(t);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + t);\n    }\n    t = dates.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + t);\n    }\n    t = removeXOverX(t);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + t);\n    }\n    t = combineConjp(t);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + t);\n    }\n    t = moveRB(t);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + t);\n    }\n    t = changeSbarToPP(t);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + t);\n    }\n    t = rearrangeNowThat(t);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + t);\n    }\n    return t;\n  }","id":48932,"modified_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    Tree tx = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + tx);\n    }\n    if (tx == null) {\n      return tx;\n    }\n    Tree tt = UCPtransform(tx);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + tt);\n    }\n    Tree ttt = CCtransform(tt);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + ttt);\n    }\n    Tree tttt = qp.transformTree(ttt);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + tttt);\n    }\n    Tree flatSQ = SQflatten(tttt);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + flatSQ);\n    }\n    Tree fixedDates = dates.transformTree(flatSQ);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + fixedDates);\n    }\n    Tree removedXX = removeXOverX(fixedDates);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + removedXX);\n    }\n    Tree conjp = combineConjp(removedXX);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + conjp);\n    }\n    Tree movedRB = moveRB(conjp);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + movedRB);\n    }\n    Tree changedSbar = changeSbarToPP(movedRB);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + movedRB);\n    }\n    Tree nowThat = rearrangeNowThat(changedSbar);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + nowThat);\n    }\n    return nowThat;\n  }","commit_id":"cc4194cafc540440e70d485d809aa5e7638ae3ab","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Thread safety note: nothing special is done to ensure the thread\n   * safety of the GrammaticalStructureFactory.  However, both the\n   * EnglishGrammaticalStructureFactory and the\n   * ChineseGrammaticalStructureFactory are thread safe.\n   */\n  public static void fillInParseAnnotations(boolean verbose, boolean buildGraphs, GrammaticalStructureFactory gsf, CoreMap sentence, Tree tree) {\n    // make sure all tree nodes are CoreLabels\n    // TODO: why isn't this always true? something fishy is going on\n    Trees.convertToCoreLabels(tree);\n\n    // index nodes, i.e., add start and end token positions to all nodes\n    // this is needed by other annotators down stream, e.g., the NFLAnnotator\n    tree.indexSpans(0);\n\n    sentence.set(TreeCoreAnnotations.TreeAnnotation.class, tree);\n    if (verbose) {\n      System.err.println(\"Tree is:\");\n      tree.pennPrint(System.err);\n    }\n\n    if (buildGraphs) {\n      String docID = sentence.get(CoreAnnotations.DocIDAnnotation.class);\n      if (docID == null) {\n        docID = \"\";\n      }\n\n      Integer sentenceIndex = sentence.get(CoreAnnotations.SentenceIndexAnnotation.class);\n      int index = (sentenceIndex == null) ? 0 : sentenceIndex;\n\n      // generate the dependency graph\n      SemanticGraph deps = SemanticGraphFactory.generateCollapsedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      SemanticGraph uncollapsedDeps = SemanticGraphFactory.generateUncollapsedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      SemanticGraph ccDeps = SemanticGraphFactory.generateCCProcessedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      if (verbose) {\n        System.err.println(\"SDs:\");\n        System.err.println(deps.toString(\"plain\"));\n      }\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class, deps);\n      sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class, uncollapsedDeps);\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class, ccDeps);\n    }\n\n    setMissingTags(sentence, tree);\n  }","id":48933,"modified_method":"/**\n   * Thread safety note: nothing special is done to ensure the thread\n   * safety of the GrammaticalStructureFactory.  However, both the\n   * EnglishGrammaticalStructureFactory and the\n   * ChineseGrammaticalStructureFactory are thread safe.\n   */\n  public static void fillInParseAnnotations(boolean verbose, boolean buildGraphs, GrammaticalStructureFactory gsf, CoreMap sentence, Tree tree) {\n    // make sure all tree nodes are CoreLabels\n    // TODO: why isn't this always true? something fishy is going on\n    Trees.convertToCoreLabels(tree);\n\n    // index nodes, i.e., add start and end token positions to all nodes\n    // this is needed by other annotators down stream, e.g., the NFLAnnotator\n    tree.indexSpans(0);\n\n    sentence.set(TreeCoreAnnotations.TreeAnnotation.class, tree);\n    if (verbose) {\n      System.err.println(\"Tree is:\");\n      tree.pennPrint(System.err);\n    }\n\n    if (buildGraphs) {\n      String docID = sentence.get(CoreAnnotations.DocIDAnnotation.class);\n      if (docID == null) {\n        docID = \"\";\n      }\n\n      Integer sentenceIndex = sentence.get(CoreAnnotations.SentenceIndexAnnotation.class);\n      int index = (sentenceIndex == null) ? 0 : sentenceIndex;\n      \n      // TODO: get rid of the deepCopy() once we fix the GSF to not modify the input tree\n      Tree copy = tree.deepCopy();\n      GrammaticalStructure gs = gsf.newGrammaticalStructure(copy);\n\n      // generate the dependency graph\n      SemanticGraph deps = SemanticGraphFactory.generateCollapsedDependencies(gs, docID, index);\n      SemanticGraph uncollapsedDeps = SemanticGraphFactory.generateUncollapsedDependencies(gs, docID, index);\n      SemanticGraph ccDeps = SemanticGraphFactory.generateCCProcessedDependencies(gs, docID, index);\n      if (verbose) {\n        System.err.println(\"SDs:\");\n        System.err.println(deps.toString(\"plain\"));\n      }\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class, deps);\n      sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class, uncollapsedDeps);\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class, ccDeps);\n    }\n\n    setMissingTags(sentence, tree);\n  }","commit_id":"cc4194cafc540440e70d485d809aa5e7638ae3ab","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    Tree tx = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + tx);\n    }\n    if (tx == null) {\n      return tx;\n    }\n    Tree tt = UCPtransform(tx);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + tt);\n    }\n    Tree ttt = CCtransform(tt);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + ttt);\n    }\n    Tree tttt = qp.transformTree(ttt);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + tttt);\n    }\n    Tree flatSQ = SQflatten(tttt);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + flatSQ);\n    }\n    Tree fixedDates = dates.transformTree(flatSQ);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + fixedDates);\n    }\n    Tree removedXX = removeXOverX(fixedDates);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + removedXX);\n    }\n    Tree conjp = combineConjp(removedXX);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + conjp);\n    }\n    Tree movedRB = moveRB(conjp);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + movedRB);\n    }\n    Tree changedSbar = changeSbarToPP(movedRB);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + movedRB);\n    }\n    Tree nowThat = rearrangeNowThat(changedSbar);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + nowThat);\n    }\n    return nowThat;\n  }","id":48934,"modified_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    t = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + t);\n    }\n    if (t == null) {\n      return t;\n    }\n    t = UCPtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + t);\n    }\n    t = CCtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + t);\n    }\n    t = qp.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + t);\n    }\n    t = SQflatten(t);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + t);\n    }\n    t = dates.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + t);\n    }\n    t = removeXOverX(t);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + t);\n    }\n    t = combineConjp(t);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + t);\n    }\n    t = moveRB(t);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + t);\n    }\n    t = changeSbarToPP(t);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + t);\n    }\n    t = rearrangeNowThat(t);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + t);\n    }\n    return t;\n  }","commit_id":"8e1be4a48e8bb0d5d36b2c7cea4e55feaca6bf37","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    Tree tx = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + tx);\n    }\n    if (tx == null) {\n      return tx;\n    }\n    Tree tt = UCPtransform(tx);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + tt);\n    }\n    Tree ttt = CCtransform(tt);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + ttt);\n    }\n    Tree tttt = qp.transformTree(ttt);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + tttt);\n    }\n    Tree flatSQ = SQflatten(tttt);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + flatSQ);\n    }\n    Tree fixedDates = dates.transformTree(flatSQ);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + fixedDates);\n    }\n    Tree removedXX = removeXOverX(fixedDates);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + removedXX);\n    }\n    Tree conjp = combineConjp(removedXX);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + conjp);\n    }\n    Tree movedRB = moveRB(conjp);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + movedRB);\n    }\n    Tree changedSbar = changeSbarToPP(movedRB);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + movedRB);\n    }\n    Tree nowThat = rearrangeNowThat(changedSbar);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + nowThat);\n    }\n    return nowThat;\n  }","id":48935,"modified_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    t = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + t);\n    }\n    if (t == null) {\n      return t;\n    }\n    t = UCPtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + t);\n    }\n    t = CCtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + t);\n    }\n    t = qp.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + t);\n    }\n    t = SQflatten(t);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + t);\n    }\n    t = dates.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + t);\n    }\n    t = removeXOverX(t);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + t);\n    }\n    t = combineConjp(t);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + t);\n    }\n    t = moveRB(t);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + t);\n    }\n    t = changeSbarToPP(t);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + t);\n    }\n    t = rearrangeNowThat(t);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + t);\n    }\n    return t;\n  }","commit_id":"1055ac9d08a2c1c7255bd2a22a611d1394022040","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Thread safety note: nothing special is done to ensure the thread\n   * safety of the GrammaticalStructureFactory.  However, both the\n   * EnglishGrammaticalStructureFactory and the\n   * ChineseGrammaticalStructureFactory are thread safe.\n   */\n  public static void fillInParseAnnotations(boolean verbose, boolean buildGraphs, GrammaticalStructureFactory gsf, CoreMap sentence, Tree tree) {\n    // make sure all tree nodes are CoreLabels\n    // TODO: why isn't this always true? something fishy is going on\n    Trees.convertToCoreLabels(tree);\n\n    // index nodes, i.e., add start and end token positions to all nodes\n    // this is needed by other annotators down stream, e.g., the NFLAnnotator\n    tree.indexSpans(0);\n\n    sentence.set(TreeCoreAnnotations.TreeAnnotation.class, tree);\n    if (verbose) {\n      System.err.println(\"Tree is:\");\n      tree.pennPrint(System.err);\n    }\n\n    if (buildGraphs) {\n      String docID = sentence.get(CoreAnnotations.DocIDAnnotation.class);\n      if (docID == null) {\n        docID = \"\";\n      }\n\n      Integer sentenceIndex = sentence.get(CoreAnnotations.SentenceIndexAnnotation.class);\n      int index = (sentenceIndex == null) ? 0 : sentenceIndex;\n\n      // generate the dependency graph\n      SemanticGraph deps = SemanticGraphFactory.generateCollapsedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      SemanticGraph uncollapsedDeps = SemanticGraphFactory.generateUncollapsedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      SemanticGraph ccDeps = SemanticGraphFactory.generateCCProcessedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      if (verbose) {\n        System.err.println(\"SDs:\");\n        System.err.println(deps.toString(\"plain\"));\n      }\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class, deps);\n      sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class, uncollapsedDeps);\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class, ccDeps);\n    }\n\n    setMissingTags(sentence, tree);\n  }","id":48936,"modified_method":"/**\n   * Thread safety note: nothing special is done to ensure the thread\n   * safety of the GrammaticalStructureFactory.  However, both the\n   * EnglishGrammaticalStructureFactory and the\n   * ChineseGrammaticalStructureFactory are thread safe.\n   */\n  public static void fillInParseAnnotations(boolean verbose, boolean buildGraphs, GrammaticalStructureFactory gsf, CoreMap sentence, Tree tree) {\n    // make sure all tree nodes are CoreLabels\n    // TODO: why isn't this always true? something fishy is going on\n    Trees.convertToCoreLabels(tree);\n\n    // index nodes, i.e., add start and end token positions to all nodes\n    // this is needed by other annotators down stream, e.g., the NFLAnnotator\n    tree.indexSpans(0);\n\n    sentence.set(TreeCoreAnnotations.TreeAnnotation.class, tree);\n    if (verbose) {\n      System.err.println(\"Tree is:\");\n      tree.pennPrint(System.err);\n    }\n\n    if (buildGraphs) {\n      String docID = sentence.get(CoreAnnotations.DocIDAnnotation.class);\n      if (docID == null) {\n        docID = \"\";\n      }\n\n      Integer sentenceIndex = sentence.get(CoreAnnotations.SentenceIndexAnnotation.class);\n      int index = (sentenceIndex == null) ? 0 : sentenceIndex;\n      \n      // TODO: get rid of the deepCopy() once we fix the GSF to not modify the input tree\n      Tree copy = tree.deepCopy();\n      GrammaticalStructure gs = gsf.newGrammaticalStructure(copy);\n\n      // generate the dependency graph\n      SemanticGraph deps = SemanticGraphFactory.generateCollapsedDependencies(gs, docID, index);\n      SemanticGraph uncollapsedDeps = SemanticGraphFactory.generateUncollapsedDependencies(gs, docID, index);\n      SemanticGraph ccDeps = SemanticGraphFactory.generateCCProcessedDependencies(gs, docID, index);\n      if (verbose) {\n        System.err.println(\"SDs:\");\n        System.err.println(deps.toString(\"plain\"));\n      }\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class, deps);\n      sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class, uncollapsedDeps);\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class, ccDeps);\n    }\n\n    setMissingTags(sentence, tree);\n  }","commit_id":"1055ac9d08a2c1c7255bd2a22a611d1394022040","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    Tree tx = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + tx);\n    }\n    if (tx == null) {\n      return tx;\n    }\n    Tree tt = UCPtransform(tx);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + tt);\n    }\n    Tree ttt = CCtransform(tt);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + ttt);\n    }\n    Tree tttt = qp.transformTree(ttt);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + tttt);\n    }\n    Tree flatSQ = SQflatten(tttt);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + flatSQ);\n    }\n    Tree fixedDates = dates.transformTree(flatSQ);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + fixedDates);\n    }\n    Tree removedXX = removeXOverX(fixedDates);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + removedXX);\n    }\n    Tree conjp = combineConjp(removedXX);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + conjp);\n    }\n    Tree movedRB = moveRB(conjp);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + movedRB);\n    }\n    Tree changedSbar = changeSbarToPP(movedRB);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + movedRB);\n    }\n    Tree nowThat = rearrangeNowThat(changedSbar);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + nowThat);\n    }\n    return nowThat;\n  }","id":48937,"modified_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    t = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + t);\n    }\n    if (t == null) {\n      return t;\n    }\n    t = UCPtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + t);\n    }\n    t = CCtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + t);\n    }\n    t = qp.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + t);\n    }\n    t = SQflatten(t);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + t);\n    }\n    t = dates.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + t);\n    }\n    t = removeXOverX(t);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + t);\n    }\n    t = combineConjp(t);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + t);\n    }\n    t = moveRB(t);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + t);\n    }\n    t = changeSbarToPP(t);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + t);\n    }\n    t = rearrangeNowThat(t);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + t);\n    }\n    return t;\n  }","commit_id":"baf9c2063138d4a625a890dde5dafb173f0b97ad","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Thread safety note: nothing special is done to ensure the thread\n   * safety of the GrammaticalStructureFactory.  However, both the\n   * EnglishGrammaticalStructureFactory and the\n   * ChineseGrammaticalStructureFactory are thread safe.\n   */\n  public static void fillInParseAnnotations(boolean verbose, boolean buildGraphs, GrammaticalStructureFactory gsf, CoreMap sentence, Tree tree) {\n    // make sure all tree nodes are CoreLabels\n    // TODO: why isn't this always true? something fishy is going on\n    Trees.convertToCoreLabels(tree);\n\n    // index nodes, i.e., add start and end token positions to all nodes\n    // this is needed by other annotators down stream, e.g., the NFLAnnotator\n    tree.indexSpans(0);\n\n    sentence.set(TreeCoreAnnotations.TreeAnnotation.class, tree);\n    if (verbose) {\n      System.err.println(\"Tree is:\");\n      tree.pennPrint(System.err);\n    }\n\n    if (buildGraphs) {\n      String docID = sentence.get(CoreAnnotations.DocIDAnnotation.class);\n      if (docID == null) {\n        docID = \"\";\n      }\n\n      Integer sentenceIndex = sentence.get(CoreAnnotations.SentenceIndexAnnotation.class);\n      int index = (sentenceIndex == null) ? 0 : sentenceIndex;\n\n      // generate the dependency graph\n      SemanticGraph deps = SemanticGraphFactory.generateCollapsedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      SemanticGraph uncollapsedDeps = SemanticGraphFactory.generateUncollapsedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      SemanticGraph ccDeps = SemanticGraphFactory.generateCCProcessedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      if (verbose) {\n        System.err.println(\"SDs:\");\n        System.err.println(deps.toString(\"plain\"));\n      }\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class, deps);\n      sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class, uncollapsedDeps);\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class, ccDeps);\n    }\n\n    setMissingTags(sentence, tree);\n  }","id":48938,"modified_method":"/**\n   * Thread safety note: nothing special is done to ensure the thread\n   * safety of the GrammaticalStructureFactory.  However, both the\n   * EnglishGrammaticalStructureFactory and the\n   * ChineseGrammaticalStructureFactory are thread safe.\n   */\n  public static void fillInParseAnnotations(boolean verbose, boolean buildGraphs, GrammaticalStructureFactory gsf, CoreMap sentence, Tree tree) {\n    // make sure all tree nodes are CoreLabels\n    // TODO: why isn't this always true? something fishy is going on\n    Trees.convertToCoreLabels(tree);\n\n    // index nodes, i.e., add start and end token positions to all nodes\n    // this is needed by other annotators down stream, e.g., the NFLAnnotator\n    tree.indexSpans(0);\n\n    sentence.set(TreeCoreAnnotations.TreeAnnotation.class, tree);\n    if (verbose) {\n      System.err.println(\"Tree is:\");\n      tree.pennPrint(System.err);\n    }\n\n    if (buildGraphs) {\n      String docID = sentence.get(CoreAnnotations.DocIDAnnotation.class);\n      if (docID == null) {\n        docID = \"\";\n      }\n\n      Integer sentenceIndex = sentence.get(CoreAnnotations.SentenceIndexAnnotation.class);\n      int index = (sentenceIndex == null) ? 0 : sentenceIndex;\n      \n      // TODO: get rid of the deepCopy() once we fix the GSF to not modify the input tree\n      Tree copy = tree.deepCopy();\n      GrammaticalStructure gs = gsf.newGrammaticalStructure(copy);\n\n      // generate the dependency graph\n      SemanticGraph deps = SemanticGraphFactory.generateCollapsedDependencies(gs, docID, index);\n      SemanticGraph uncollapsedDeps = SemanticGraphFactory.generateUncollapsedDependencies(gs, docID, index);\n      SemanticGraph ccDeps = SemanticGraphFactory.generateCCProcessedDependencies(gs, docID, index);\n      if (verbose) {\n        System.err.println(\"SDs:\");\n        System.err.println(deps.toString(\"plain\"));\n      }\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class, deps);\n      sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class, uncollapsedDeps);\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class, ccDeps);\n    }\n\n    setMissingTags(sentence, tree);\n  }","commit_id":"baf9c2063138d4a625a890dde5dafb173f0b97ad","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    t = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + t);\n    }\n    if (t == null) {\n      return t;\n    }\n    t = UCPtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + t);\n    }\n    t = CCtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + t);\n    }\n    t = qp.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + t);\n    }\n    t = SQflatten(t);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + t);\n    }\n    t = dates.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + t);\n    }\n    t = removeXOverX(t);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + t);\n    }\n    t = combineConjp(t);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + t);\n    }\n    t = moveRB(t);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + t);\n    }\n    t = changeSbarToPP(t);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + t);\n    }\n    t = rearrangeNowThat(t);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + t);\n    }\n    return t;\n  }","id":48939,"modified_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    Tree tx = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + tx);\n    }\n    if (tx == null) {\n      return tx;\n    }\n    Tree tt = UCPtransform(tx);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + tt);\n    }\n    Tree ttt = CCtransform(tt);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + ttt);\n    }\n    Tree tttt = qp.transformTree(ttt);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + tttt);\n    }\n    Tree flatSQ = SQflatten(tttt);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + flatSQ);\n    }\n    Tree fixedDates = dates.transformTree(flatSQ);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + fixedDates);\n    }\n    Tree removedXX = removeXOverX(fixedDates);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + removedXX);\n    }\n    Tree conjp = combineConjp(removedXX);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + conjp);\n    }\n    Tree movedRB = moveRB(conjp);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + movedRB);\n    }\n    Tree changedSbar = changeSbarToPP(movedRB);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + movedRB);\n    }\n    Tree nowThat = rearrangeNowThat(changedSbar);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + nowThat);\n    }\n    return nowThat;\n  }","commit_id":"6517ffe3c7f0377094484ada8bb2eff32e95b862","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Thread safety note: nothing special is done to ensure the thread\n   * safety of the GrammaticalStructureFactory.  However, both the\n   * EnglishGrammaticalStructureFactory and the\n   * ChineseGrammaticalStructureFactory are thread safe.\n   */\n  public static void fillInParseAnnotations(boolean verbose, boolean buildGraphs, GrammaticalStructureFactory gsf, CoreMap sentence, Tree tree) {\n    // make sure all tree nodes are CoreLabels\n    // TODO: why isn't this always true? something fishy is going on\n    Trees.convertToCoreLabels(tree);\n\n    // index nodes, i.e., add start and end token positions to all nodes\n    // this is needed by other annotators down stream, e.g., the NFLAnnotator\n    tree.indexSpans(0);\n\n    sentence.set(TreeCoreAnnotations.TreeAnnotation.class, tree);\n    if (verbose) {\n      System.err.println(\"Tree is:\");\n      tree.pennPrint(System.err);\n    }\n\n    if (buildGraphs) {\n      String docID = sentence.get(CoreAnnotations.DocIDAnnotation.class);\n      if (docID == null) {\n        docID = \"\";\n      }\n\n      Integer sentenceIndex = sentence.get(CoreAnnotations.SentenceIndexAnnotation.class);\n      int index = (sentenceIndex == null) ? 0 : sentenceIndex;\n      \n      // TODO: get rid of the deepCopy() once we fix the GSF to not modify the input tree\n      Tree copy = tree.deepCopy();\n      GrammaticalStructure gs = gsf.newGrammaticalStructure(copy);\n\n      // generate the dependency graph\n      SemanticGraph deps = SemanticGraphFactory.generateCollapsedDependencies(gs, docID, index);\n      SemanticGraph uncollapsedDeps = SemanticGraphFactory.generateUncollapsedDependencies(gs, docID, index);\n      SemanticGraph ccDeps = SemanticGraphFactory.generateCCProcessedDependencies(gs, docID, index);\n      if (verbose) {\n        System.err.println(\"SDs:\");\n        System.err.println(deps.toString(\"plain\"));\n      }\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class, deps);\n      sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class, uncollapsedDeps);\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class, ccDeps);\n    }\n\n    setMissingTags(sentence, tree);\n  }","id":48940,"modified_method":"/**\n   * Thread safety note: nothing special is done to ensure the thread\n   * safety of the GrammaticalStructureFactory.  However, both the\n   * EnglishGrammaticalStructureFactory and the\n   * ChineseGrammaticalStructureFactory are thread safe.\n   */\n  public static void fillInParseAnnotations(boolean verbose, boolean buildGraphs, GrammaticalStructureFactory gsf, CoreMap sentence, Tree tree) {\n    // make sure all tree nodes are CoreLabels\n    // TODO: why isn't this always true? something fishy is going on\n    Trees.convertToCoreLabels(tree);\n\n    // index nodes, i.e., add start and end token positions to all nodes\n    // this is needed by other annotators down stream, e.g., the NFLAnnotator\n    tree.indexSpans(0);\n\n    sentence.set(TreeCoreAnnotations.TreeAnnotation.class, tree);\n    if (verbose) {\n      System.err.println(\"Tree is:\");\n      tree.pennPrint(System.err);\n    }\n\n    if (buildGraphs) {\n      String docID = sentence.get(CoreAnnotations.DocIDAnnotation.class);\n      if (docID == null) {\n        docID = \"\";\n      }\n\n      Integer sentenceIndex = sentence.get(CoreAnnotations.SentenceIndexAnnotation.class);\n      int index = (sentenceIndex == null) ? 0 : sentenceIndex;\n\n      // generate the dependency graph\n      SemanticGraph deps = SemanticGraphFactory.generateCollapsedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      SemanticGraph uncollapsedDeps = SemanticGraphFactory.generateUncollapsedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      SemanticGraph ccDeps = SemanticGraphFactory.generateCCProcessedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      if (verbose) {\n        System.err.println(\"SDs:\");\n        System.err.println(deps.toString(\"plain\"));\n      }\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class, deps);\n      sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class, uncollapsedDeps);\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class, ccDeps);\n    }\n\n    setMissingTags(sentence, tree);\n  }","commit_id":"6517ffe3c7f0377094484ada8bb2eff32e95b862","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    t = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + t);\n    }\n    if (t == null) {\n      return t;\n    }\n    t = UCPtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + t);\n    }\n    t = CCtransform(t);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + t);\n    }\n    t = qp.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + t);\n    }\n    t = SQflatten(t);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + t);\n    }\n    t = dates.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + t);\n    }\n    t = removeXOverX(t);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + t);\n    }\n    t = combineConjp(t);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + t);\n    }\n    t = moveRB(t);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + t);\n    }\n    t = changeSbarToPP(t);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + t);\n    }\n    t = rearrangeNowThat(t);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + t);\n    }\n    return t;\n  }","id":48941,"modified_method":"/**\n   * Transforms t if it contains a coordination in a flat structure (CCtransform)\n   * and transforms UCP (UCPtransform).\n   *\n   * @param t a tree to be transformed\n   * @return t transformed\n   */\n  @Override\n  public Tree transformTree(Tree t) {\n    if (VERBOSE) {\n      System.err.println(\"Input to CoordinationTransformer: \" + t);\n    }\n    Tree tx = tn.transformTree(t);\n    if (VERBOSE) {\n      System.err.println(\"After DependencyTreeTransformer:  \" + tx);\n    }\n    if (tx == null) {\n      return tx;\n    }\n    Tree tt = UCPtransform(tx);\n    if (VERBOSE) {\n      System.err.println(\"After UCPTransformer:             \" + tt);\n    }\n    Tree ttt = CCtransform(tt);\n    if (VERBOSE) {\n      System.err.println(\"After CCTransformer:              \" + ttt);\n    }\n    Tree tttt = qp.transformTree(ttt);\n    if (VERBOSE) {\n      System.err.println(\"After QPTreeTransformer:          \" + tttt);\n    }\n    Tree flatSQ = SQflatten(tttt);\n    if (VERBOSE) {\n      System.err.println(\"After SQ flattening:              \" + flatSQ);\n    }\n    Tree fixedDates = dates.transformTree(flatSQ);\n    if (VERBOSE) {\n      System.err.println(\"After DateTreeTransformer:        \" + fixedDates);\n    }\n    Tree removedXX = removeXOverX(fixedDates);\n    if (VERBOSE) {\n      System.err.println(\"After removeXoverX:               \" + removedXX);\n    }\n    Tree conjp = combineConjp(removedXX);\n    if (VERBOSE) {\n      System.err.println(\"After combineConjp:               \" + conjp);\n    }\n    Tree movedRB = moveRB(conjp);\n    if (VERBOSE) {\n      System.err.println(\"After moveRB:                     \" + movedRB);\n    }\n    Tree changedSbar = changeSbarToPP(movedRB);\n    if (VERBOSE) {\n      System.err.println(\"After changeSbarToPP:             \" + movedRB);\n    }\n    Tree nowThat = rearrangeNowThat(changedSbar);\n    if (VERBOSE) {\n      System.err.println(\"After rearrangeNowThat:           \" + nowThat);\n    }\n    return nowThat;\n  }","commit_id":"8457fa7085ee810cf5f03e74dec5f93eb787d184","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Thread safety note: nothing special is done to ensure the thread\n   * safety of the GrammaticalStructureFactory.  However, both the\n   * EnglishGrammaticalStructureFactory and the\n   * ChineseGrammaticalStructureFactory are thread safe.\n   */\n  public static void fillInParseAnnotations(boolean verbose, boolean buildGraphs, GrammaticalStructureFactory gsf, CoreMap sentence, Tree tree) {\n    // make sure all tree nodes are CoreLabels\n    // TODO: why isn't this always true? something fishy is going on\n    Trees.convertToCoreLabels(tree);\n\n    // index nodes, i.e., add start and end token positions to all nodes\n    // this is needed by other annotators down stream, e.g., the NFLAnnotator\n    tree.indexSpans(0);\n\n    sentence.set(TreeCoreAnnotations.TreeAnnotation.class, tree);\n    if (verbose) {\n      System.err.println(\"Tree is:\");\n      tree.pennPrint(System.err);\n    }\n\n    if (buildGraphs) {\n      String docID = sentence.get(CoreAnnotations.DocIDAnnotation.class);\n      if (docID == null) {\n        docID = \"\";\n      }\n\n      Integer sentenceIndex = sentence.get(CoreAnnotations.SentenceIndexAnnotation.class);\n      int index = (sentenceIndex == null) ? 0 : sentenceIndex;\n\n      // generate the dependency graph\n      SemanticGraph deps = SemanticGraphFactory.generateCollapsedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      SemanticGraph uncollapsedDeps = SemanticGraphFactory.generateUncollapsedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      SemanticGraph ccDeps = SemanticGraphFactory.generateCCProcessedDependencies(gsf.newGrammaticalStructure(tree), docID, index);\n      if (verbose) {\n        System.err.println(\"SDs:\");\n        System.err.println(deps.toString(\"plain\"));\n      }\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class, deps);\n      sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class, uncollapsedDeps);\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class, ccDeps);\n    }\n\n    setMissingTags(sentence, tree);\n  }","id":48942,"modified_method":"/**\n   * Thread safety note: nothing special is done to ensure the thread\n   * safety of the GrammaticalStructureFactory.  However, both the\n   * EnglishGrammaticalStructureFactory and the\n   * ChineseGrammaticalStructureFactory are thread safe.\n   */\n  public static void fillInParseAnnotations(boolean verbose, boolean buildGraphs, GrammaticalStructureFactory gsf, CoreMap sentence, Tree tree) {\n    // make sure all tree nodes are CoreLabels\n    // TODO: why isn't this always true? something fishy is going on\n    Trees.convertToCoreLabels(tree);\n\n    // index nodes, i.e., add start and end token positions to all nodes\n    // this is needed by other annotators down stream, e.g., the NFLAnnotator\n    tree.indexSpans(0);\n\n    sentence.set(TreeCoreAnnotations.TreeAnnotation.class, tree);\n    if (verbose) {\n      System.err.println(\"Tree is:\");\n      tree.pennPrint(System.err);\n    }\n\n    if (buildGraphs) {\n      String docID = sentence.get(CoreAnnotations.DocIDAnnotation.class);\n      if (docID == null) {\n        docID = \"\";\n      }\n\n      Integer sentenceIndex = sentence.get(CoreAnnotations.SentenceIndexAnnotation.class);\n      int index = (sentenceIndex == null) ? 0 : sentenceIndex;\n      \n      // TODO: get rid of the deepCopy() once we fix the GSF to not modify the input tree\n      Tree copy = tree.deepCopy();\n      GrammaticalStructure gs = gsf.newGrammaticalStructure(copy);\n\n      // generate the dependency graph\n      SemanticGraph deps = SemanticGraphFactory.generateCollapsedDependencies(gs, docID, index);\n      SemanticGraph uncollapsedDeps = SemanticGraphFactory.generateUncollapsedDependencies(gs, docID, index);\n      SemanticGraph ccDeps = SemanticGraphFactory.generateCCProcessedDependencies(gs, docID, index);\n      if (verbose) {\n        System.err.println(\"SDs:\");\n        System.err.println(deps.toString(\"plain\"));\n      }\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class, deps);\n      sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class, uncollapsedDeps);\n      sentence.set(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class, ccDeps);\n    }\n\n    setMissingTags(sentence, tree);\n  }","commit_id":"8457fa7085ee810cf5f03e74dec5f93eb787d184","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n    public void testBug3193() throws Exception {\n        initFactories(\"/threshd-configuration.xml\",\"/test-thresholds-bug3193.xml\");\n        ThresholdingVisitor visitor = createVisitor();\n\n        CollectionAgent agent = createCollectionAgent();\n        NodeResourceType resourceType = createNodeResourceType(agent);\n        MibObject mibObject = createMibObject(\"counter\", \"myCounter\", \"0\");\n        SnmpAttributeType attributeType = new NumericAttributeType(resourceType, \"default\", mibObject, new AttributeGroupType(\"mibGroup\", \"ignore\"));\n\n        // Add Events (see note above)\n        if (System.getProperty(\"java.specification.version\").equals(\"1.6\")) {\n            addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n            addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n            addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);            \n            addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n        } else {\n            addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n            addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n            addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n            addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);\n        }\n        \n        // Collect Step 1 : First Data: Last should be NaN\n        SnmpCollectionResource resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(2000));\n        resource.visit(visitor);\n\n        // Collect Step 2 : First Value: (last-current)/step => (20000-2000)/300=60\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(20000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Second Value: (last-current)/step => (53000-20000)/300=110 => Trigger\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(53000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Third Value (last-current)/step => (65000-53000)/300=40 => Rearm\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(65000));\n        resource.visit(visitor);\n\n        EasyMock.verify(agent);\n        verifyEvents(0);\n    }","id":48943,"modified_method":"@Test\n    public void testBug3193() throws Exception {\n        initFactories(\"/threshd-configuration.xml\",\"/test-thresholds-bug3193.xml\");\n        ThresholdingVisitor visitor = createVisitor();\n\n        CollectionAgent agent = createCollectionAgent();\n        NodeResourceType resourceType = createNodeResourceType(agent);\n        MibObject mibObject = createMibObject(\"counter\", \"myCounter\", \"0\");\n        SnmpAttributeType attributeType = new NumericAttributeType(resourceType, \"default\", mibObject, new AttributeGroupType(\"mibGroup\", \"ignore\"));\n\n        // Add Events\n        addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n        addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n        addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n        addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);            \n\n        // Collect Step 1 : First Data: Last should be NaN\n        SnmpCollectionResource resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(2000));\n        resource.visit(visitor);\n\n        // Collect Step 2 : First Value: (last-current)/step => (20000-2000)/300=60\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(20000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Second Value: (last-current)/step => (53000-20000)/300=110 => Trigger\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(53000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Third Value (last-current)/step => (65000-53000)/300=40 => Rearm\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(65000));\n        resource.visit(visitor);\n\n        EasyMock.verify(agent);\n        verifyEvents(0);\n    }","commit_id":"c661f2c0994d3046f25f1ec7a6298fd49f502e13","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testBug3193() throws Exception {\n        initFactories(\"/threshd-configuration.xml\",\"/test-thresholds-bug3193.xml\");\n        ThresholdingVisitor visitor = createVisitor();\n\n        CollectionAgent agent = createCollectionAgent();\n        NodeResourceType resourceType = createNodeResourceType(agent);\n        MibObject mibObject = createMibObject(\"counter\", \"myCounter\", \"0\");\n        SnmpAttributeType attributeType = new NumericAttributeType(resourceType, \"default\", mibObject, new AttributeGroupType(\"mibGroup\", \"ignore\"));\n\n        // Add Events (see note above)\n        if (System.getProperty(\"java.specification.version\").equals(\"1.6\")) {\n            addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n            addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n            addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);            \n            addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n        } else {\n            addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n            addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n            addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n            addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);\n        }\n        \n        // Collect Step 1 : First Data: Last should be NaN\n        SnmpCollectionResource resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(2000));\n        resource.visit(visitor);\n\n        // Collect Step 2 : First Value: (last-current)/step => (20000-2000)/300=60\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(20000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Second Value: (last-current)/step => (53000-20000)/300=110 => Trigger\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(53000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Third Value (last-current)/step => (65000-53000)/300=40 => Rearm\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(65000));\n        resource.visit(visitor);\n\n        EasyMock.verify(agent);\n        verifyEvents(0);\n    }","id":48944,"modified_method":"@Test\n    public void testBug3193() throws Exception {\n        initFactories(\"/threshd-configuration.xml\",\"/test-thresholds-bug3193.xml\");\n        ThresholdingVisitor visitor = createVisitor();\n\n        CollectionAgent agent = createCollectionAgent();\n        NodeResourceType resourceType = createNodeResourceType(agent);\n        MibObject mibObject = createMibObject(\"counter\", \"myCounter\", \"0\");\n        SnmpAttributeType attributeType = new NumericAttributeType(resourceType, \"default\", mibObject, new AttributeGroupType(\"mibGroup\", \"ignore\"));\n\n        // Add Events\n        addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n        addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n        addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n        addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);            \n\n        // Collect Step 1 : First Data: Last should be NaN\n        SnmpCollectionResource resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(2000));\n        resource.visit(visitor);\n\n        // Collect Step 2 : First Value: (last-current)/step => (20000-2000)/300=60\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(20000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Second Value: (last-current)/step => (53000-20000)/300=110 => Trigger\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(53000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Third Value (last-current)/step => (65000-53000)/300=40 => Rearm\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(65000));\n        resource.visit(visitor);\n\n        EasyMock.verify(agent);\n        verifyEvents(0);\n    }","commit_id":"f986e718cbc3559511576a09969e5bc3b96707ba","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testBug3193() throws Exception {\n        initFactories(\"/threshd-configuration.xml\",\"/test-thresholds-bug3193.xml\");\n        ThresholdingVisitor visitor = createVisitor();\n\n        CollectionAgent agent = createCollectionAgent();\n        NodeResourceType resourceType = createNodeResourceType(agent);\n        MibObject mibObject = createMibObject(\"counter\", \"myCounter\", \"0\");\n        SnmpAttributeType attributeType = new NumericAttributeType(resourceType, \"default\", mibObject, new AttributeGroupType(\"mibGroup\", \"ignore\"));\n\n        // Add Events (see note above)\n        if (System.getProperty(\"java.specification.version\").equals(\"1.6\")) {\n            addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n            addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n            addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);            \n            addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n        } else {\n            addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n            addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n            addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n            addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);\n        }\n        \n        // Collect Step 1 : First Data: Last should be NaN\n        SnmpCollectionResource resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(2000));\n        resource.visit(visitor);\n\n        // Collect Step 2 : First Value: (last-current)/step => (20000-2000)/300=60\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(20000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Second Value: (last-current)/step => (53000-20000)/300=110 => Trigger\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(53000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Third Value (last-current)/step => (65000-53000)/300=40 => Rearm\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(65000));\n        resource.visit(visitor);\n\n        EasyMock.verify(agent);\n        verifyEvents(0);\n    }","id":48945,"modified_method":"@Test\n    public void testBug3193() throws Exception {\n        initFactories(\"/threshd-configuration.xml\",\"/test-thresholds-bug3193.xml\");\n        ThresholdingVisitor visitor = createVisitor();\n\n        CollectionAgent agent = createCollectionAgent();\n        NodeResourceType resourceType = createNodeResourceType(agent);\n        MibObject mibObject = createMibObject(\"counter\", \"myCounter\", \"0\");\n        SnmpAttributeType attributeType = new NumericAttributeType(resourceType, \"default\", mibObject, new AttributeGroupType(\"mibGroup\", \"ignore\"));\n\n        // Add Events\n        addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n        addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n        addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n        addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);            \n\n        // Collect Step 1 : First Data: Last should be NaN\n        SnmpCollectionResource resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(2000));\n        resource.visit(visitor);\n\n        // Collect Step 2 : First Value: (last-current)/step => (20000-2000)/300=60\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(20000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Second Value: (last-current)/step => (53000-20000)/300=110 => Trigger\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(53000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Third Value (last-current)/step => (65000-53000)/300=40 => Rearm\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(65000));\n        resource.visit(visitor);\n\n        EasyMock.verify(agent);\n        verifyEvents(0);\n    }","commit_id":"afa2f218bf5f3f9a3a011d2b638b3f69b84010ed","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void serverResponse(Brave brave, String serviceName, Exchange exchange) {\n        ServerSpan span = null;\n        ZipkinState state = exchange.getProperty(ZipkinState.KEY, ZipkinState.class);\n        if (state != null) {\n            // only process if it was a zipkin server event\n            span = state.popServerSpan();\n        }\n\n        if (span != null) {\n            ServerSpanThreadBinder serverBinder = brave.serverSpanThreadBinder();\n            serverBinder.setCurrentSpan(span);\n            brave.serverResponseInterceptor().handle(new ZipkinServerResponseAdapter(this, exchange));\n            // and reset binder\n            serverBinder.setCurrentSpan(null);\n\n            if (log.isDebugEnabled()) {\n                String traceId = \"<null>\";\n                if (span.getSpan() != null) {\n                    traceId = \"\" + span.getSpan().getTrace_id();\n                }\n                String spanId = \"<null>\";\n                if (span.getSpan() != null) {\n                    spanId = \"\" + span.getSpan().getId();\n                }\n                String parentId = \"<null>\";\n                if (span.getSpan() != null) {\n                    parentId = \"\" + span.getSpan().getParent_id();\n                }\n                log.debug(\"serverResponse[service={}, traceId={}, spanId={}, parentId={}]\", serviceName, traceId, spanId, parentId);\n            }\n        }\n    }","id":48946,"modified_method":"private void serverResponse(Brave brave, String serviceName, Exchange exchange) {\n        ServerSpan span = null;\n        ZipkinState state = exchange.getProperty(ZipkinState.KEY, ZipkinState.class);\n        if (state != null) {\n            // only process if it was a zipkin server event\n            span = state.popServerSpan();\n        }\n\n        if (span != null) {\n            ServerSpanThreadBinder serverBinder = brave.serverSpanThreadBinder();\n            serverBinder.setCurrentSpan(span);\n            brave.serverResponseInterceptor().handle(new ZipkinServerResponseAdapter(this, exchange));\n            // and reset binder\n            serverBinder.setCurrentSpan(null);\n\n            if (span.getSpan() != null && log.isDebugEnabled()) {\n                String traceId = \"\" + span.getSpan().getTrace_id();\n                String spanId = \"\" + span.getSpan().getId();\n                String parentId = span.getSpan().getParent_id() != null ? \"\" + span.getSpan().getParent_id() : null;\n                if (log.isDebugEnabled()) {\n                    if (parentId != null) {\n                        log.debug(String.format(\"serverResponse[service=%s, traceId=%20s, spanId=%20s, parentId=%20s]\", serviceName, traceId, spanId, parentId));\n                    } else {\n                        log.debug(String.format(\"serverResponse[service=%s, traceId=%20s, spanId=%20s]\", serviceName, traceId, spanId));\n                    }\n                }\n            }\n        }\n    }","commit_id":"4e13eae10a6fcb30846e786bc76b78f3f1fcbfb8","url":"https://github.com/apache/camel"},{"original_method":"private void clientResponse(Brave brave, String serviceName, ExchangeSentEvent event) {\n        Span span = null;\n        ZipkinState state = event.getExchange().getProperty(ZipkinState.KEY, ZipkinState.class);\n        if (state != null) {\n            // only process if it was a zipkin client event\n            span = state.popClientSpan();\n        }\n\n        if (span != null) {\n            ClientSpanThreadBinder clientBinder = brave.clientSpanThreadBinder();\n            clientBinder.setCurrentSpan(span);\n            brave.clientResponseInterceptor().handle(new ZipkinClientResponseAdaptor(this, event.getExchange(), event.getEndpoint()));\n            // and reset binder\n            clientBinder.setCurrentSpan(null);\n\n            if (log.isDebugEnabled()) {\n                String traceId = \"\" + span.getTrace_id();\n                String spanId = \"\" + span.getId();\n                String parentId = \"\" + span.getParent_id();\n                log.debug(\"clientResponse[service={}, traceId={}, spanId={}, parentId={}]\", serviceName, traceId, spanId, parentId);\n            }\n        }\n    }","id":48947,"modified_method":"private void clientResponse(Brave brave, String serviceName, ExchangeSentEvent event) {\n        Span span = null;\n        ZipkinState state = event.getExchange().getProperty(ZipkinState.KEY, ZipkinState.class);\n        if (state != null) {\n            // only process if it was a zipkin client event\n            span = state.popClientSpan();\n        }\n\n        if (span != null) {\n            ClientSpanThreadBinder clientBinder = brave.clientSpanThreadBinder();\n            clientBinder.setCurrentSpan(span);\n            brave.clientResponseInterceptor().handle(new ZipkinClientResponseAdaptor(this, event.getExchange(), event.getEndpoint()));\n            // and reset binder\n            clientBinder.setCurrentSpan(null);\n\n            if (log.isDebugEnabled()) {\n                String traceId = \"\" + span.getTrace_id();\n                String spanId = \"\" + span.getId();\n                String parentId = span.getParent_id() != null ? \"\" + span.getParent_id() : null;\n                if (log.isDebugEnabled()) {\n                    if (parentId != null) {\n                        log.debug(String.format(\"clientResponse[service=%s, traceId=%20s, spanId=%20s, parentId=%20s]\", serviceName, traceId, spanId, parentId));\n                    } else {\n                        log.debug(String.format(\"clientResponse[service=%s, traceId=%20s, spanId=%20s]\", serviceName, traceId, spanId));\n                    }\n                }\n            }\n        }\n    }","commit_id":"4e13eae10a6fcb30846e786bc76b78f3f1fcbfb8","url":"https://github.com/apache/camel"},{"original_method":"private void clientRequest(Brave brave, String serviceName, ExchangeSendingEvent event) {\n        ClientSpanThreadBinder clientBinder = brave.clientSpanThreadBinder();\n        ServerSpanThreadBinder serverBinder = brave.serverSpanThreadBinder();\n\n        // reuse existing span if we do multiple requests from the same\n        ZipkinState state = event.getExchange().getProperty(ZipkinState.KEY, ZipkinState.class);\n        if (state == null) {\n            state = new ZipkinState();\n            event.getExchange().setProperty(ZipkinState.KEY, state);\n        }\n        // if we started from a server span then lets reuse that when we call a downstream service\n        ServerSpan last = state.peekServerSpan();\n        if (last != null) {\n            serverBinder.setCurrentSpan(last);\n        }\n\n        brave.clientRequestInterceptor().handle(new ZipkinClientRequestAdapter(this, serviceName, event.getExchange(), event.getEndpoint()));\n\n        // store span after request\n        Span span = clientBinder.getCurrentClientSpan();\n        state.pushClientSpan(span);\n        // and reset binder\n        clientBinder.setCurrentSpan(null);\n        serverBinder.setCurrentSpan(null);\n\n        if (log.isDebugEnabled()) {\n            String traceId = \"<null>\";\n            if (span != null) {\n                traceId = \"\" + span.getTrace_id();\n            }\n            String spanId = \"<null>\";\n            if (span != null) {\n                spanId = \"\" + span.getId();\n            }\n            String parentId = \"<null>\";\n            if (span != null) {\n                parentId = \"\" + span.getParent_id();\n            }\n            log.debug(\"clientRequest [service={}, traceId={}, spanId={}, parentId={}]\", serviceName, traceId, spanId, parentId);\n        }\n    }","id":48948,"modified_method":"private void clientRequest(Brave brave, String serviceName, ExchangeSendingEvent event) {\n        ClientSpanThreadBinder clientBinder = brave.clientSpanThreadBinder();\n        ServerSpanThreadBinder serverBinder = brave.serverSpanThreadBinder();\n\n        // reuse existing span if we do multiple requests from the same\n        ZipkinState state = event.getExchange().getProperty(ZipkinState.KEY, ZipkinState.class);\n        if (state == null) {\n            state = new ZipkinState();\n            event.getExchange().setProperty(ZipkinState.KEY, state);\n        }\n        // if we started from a server span then lets reuse that when we call a downstream service\n        ServerSpan last = state.peekServerSpan();\n        if (last != null) {\n            serverBinder.setCurrentSpan(last);\n        }\n\n        brave.clientRequestInterceptor().handle(new ZipkinClientRequestAdapter(this, serviceName, event.getExchange(), event.getEndpoint()));\n\n        // store span after request\n        Span span = clientBinder.getCurrentClientSpan();\n        state.pushClientSpan(span);\n        // and reset binder\n        clientBinder.setCurrentSpan(null);\n        serverBinder.setCurrentSpan(null);\n\n        if (span != null && log.isDebugEnabled()) {\n            String traceId = \"\" + span.getTrace_id();\n            String spanId = \"\" + span.getId();\n            String parentId = span.getParent_id() != null ? \"\" + span.getParent_id() : null;\n            if (log.isDebugEnabled()) {\n                if (parentId != null) {\n                    log.debug(String.format(\"clientRequest [service=%s, traceId=%20s, spanId=%20s, parentId=%20s]\", serviceName, traceId, spanId, parentId));\n                } else {\n                    log.debug(String.format(\"clientRequest [service=%s, traceId=%20s, spanId=%20s]\", serviceName, traceId, spanId));\n                }\n            }\n        }\n    }","commit_id":"4e13eae10a6fcb30846e786bc76b78f3f1fcbfb8","url":"https://github.com/apache/camel"},{"original_method":"private ServerSpan serverRequest(Brave brave, String serviceName, Exchange exchange) {\n        ServerSpanThreadBinder serverBinder = brave.serverSpanThreadBinder();\n\n        // reuse existing span if we do multiple requests from the same\n        ZipkinState state = exchange.getProperty(ZipkinState.KEY, ZipkinState.class);\n        if (state == null) {\n            state = new ZipkinState();\n            exchange.setProperty(ZipkinState.KEY, state);\n        }\n        // if we started from a another server span then lets reuse that\n        ServerSpan last = state.peekServerSpan();\n        if (last != null) {\n            serverBinder.setCurrentSpan(last);\n        }\n\n        brave.serverRequestInterceptor().handle(new ZipkinServerRequestAdapter(this, exchange));\n\n        // store span after request\n        ServerSpan span = serverBinder.getCurrentServerSpan();\n        state.pushServerSpan(span);\n        // and reset binder\n        serverBinder.setCurrentSpan(null);\n\n        if (log.isDebugEnabled()) {\n            String traceId = \"<null>\";\n            if (span.getSpan() != null) {\n                traceId = \"\" + span.getSpan().getTrace_id();\n            }\n            String spanId = \"<null>\";\n            if (span.getSpan() != null) {\n                spanId = \"\" + span.getSpan().getId();\n            }\n            String parentId = \"<null>\";\n            if (span.getSpan() != null) {\n                parentId = \"\" + span.getSpan().getParent_id();\n            }\n            log.debug(\"serverRequest [service={}, traceId={}, spanId={}, parentId={}]\", serviceName, traceId, spanId, parentId);\n        }\n\n        return span;\n    }","id":48949,"modified_method":"private ServerSpan serverRequest(Brave brave, String serviceName, Exchange exchange) {\n        ServerSpanThreadBinder serverBinder = brave.serverSpanThreadBinder();\n\n        // reuse existing span if we do multiple requests from the same\n        ZipkinState state = exchange.getProperty(ZipkinState.KEY, ZipkinState.class);\n        if (state == null) {\n            state = new ZipkinState();\n            exchange.setProperty(ZipkinState.KEY, state);\n        }\n        // if we started from a another server span then lets reuse that\n        ServerSpan last = state.peekServerSpan();\n        if (last != null) {\n            serverBinder.setCurrentSpan(last);\n        }\n\n        brave.serverRequestInterceptor().handle(new ZipkinServerRequestAdapter(this, exchange));\n\n        // store span after request\n        ServerSpan span = serverBinder.getCurrentServerSpan();\n        state.pushServerSpan(span);\n        // and reset binder\n        serverBinder.setCurrentSpan(null);\n\n        if (span != null && span.getSpan() != null && log.isDebugEnabled()) {\n            String traceId = \"\" + span.getSpan().getTrace_id();\n            String spanId = \"\" + span.getSpan().getId();\n            String parentId = span.getSpan().getParent_id() != null ? \"\" + span.getSpan().getParent_id() : null;\n            if (log.isDebugEnabled()) {\n                if (parentId != null) {\n                    log.debug(String.format(\"serverRequest [service=%s, traceId=%20s, spanId=%20s, parentId=%20s]\", serviceName, traceId, spanId, parentId));\n                } else {\n                    log.debug(String.format(\"serverRequest [service=%s, traceId=%20s, spanId=%20s]\", serviceName, traceId, spanId));\n                }\n            }\n        }\n\n        return span;\n    }","commit_id":"4e13eae10a6fcb30846e786bc76b78f3f1fcbfb8","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    @Repeat(10000)\n    public void testNoServerPresent() throws Exception {\n        \n        m_detector.setPort(1999);\n        \n        DetectFuture future = m_detector.isServiceDetected(InetAddress.getLocalHost(), new NullDetectorMonitor());\n        future.addListener(new IoFutureListener<DetectFuture>() {\n\n            public void operationComplete(DetectFuture future) {\n                TcpDetector detector = m_detector;\n                m_detector = null;\n                detector.dispose();\n            }\n            \n        });\n        assertNotNull(future);\n        future.awaitUninterruptibly();\n        assertFalse(future.isServiceDetected());\n        \n        \n        \n        System.err.println(\"Finish test\");\n    }","id":48950,"modified_method":"@Test\n    @Repeat(10000)\n    public void testNoServerPresent() throws Exception {\n        \n        final TcpDetector detector = m_detector.get();\n        detector.setPort(1999);\n        \n        DetectFuture future = detector.isServiceDetected(InetAddress.getLocalHost(), new NullDetectorMonitor());\n        future.addListener(new IoFutureListener<DetectFuture>() {\n\n            public void operationComplete(DetectFuture future) {\n                detector.dispose();\n            }\n            \n        });\n        assertNotNull(future);\n        future.awaitUninterruptibly();\n        assertFalse(future.isServiceDetected());\n        \n        \n        m_detector.set(null);\n        System.err.println(\"Finish test\");\n    }","commit_id":"b83ada3bad5eceb34c74b4b6070cb02000f5ff92","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testSucessServer() throws Exception {\n        for (int i = 0; i < 10000; i++) {\n            setUp();\n            System.err.println(\"current loop: \" + i);\n            m_server = new SimpleServer() {\n                \n                public void onInit() {\n                   setBanner(\"Winner\");\n                }\n                \n            };\n            \n            m_server.init();\n            m_server.startServer();\n    \n            assertNotNull(m_detector);\n            assertNotNull(m_server.getLocalPort());\n            m_detector.setPort(m_server.getLocalPort());\n            \n            DetectFuture future = m_detector.isServiceDetected(m_server.getInetAddress(), new NullDetectorMonitor());\n            future.addListener(new IoFutureListener<DetectFuture>() {\n    \n                public void operationComplete(DetectFuture future) {\n                    TcpDetector detector = m_detector;\n                    m_detector = null;\n                    detector.dispose();\n                }\n                \n            });\n            \n            future.awaitUninterruptibly();\n            assertNotNull(future);\n            assertTrue(future.isServiceDetected());\n            \n            m_server.stopServer();\n            m_server = null;\n        }\n    }","id":48951,"modified_method":"@Test\n    public void testSucessServer() throws Throwable {\n        setUpServer();\n        int port = m_server.getLocalPort();\n        InetAddress address = m_server.getInetAddress();\n        for (int i = 0; i < 10000; i++) {\n            setUp();\n            System.err.println(\"current loop: \" + i);\n            assertNotNull(m_detector);\n            \n            final TcpDetector detector = m_detector.get();\n            \n            detector.setPort(port);\n            \n            DefaultDetectFuture future = (DefaultDetectFuture)detector.isServiceDetected(address, new NullDetectorMonitor());\n            future.addListener(new IoFutureListener<DetectFuture>() {\n    \n                public void operationComplete(DetectFuture future) {\n                    detector.dispose();\n                }\n                \n            });\n            \n            future.awaitUninterruptibly();\n            assertNotNull(future);\n            if (future.getException() != null) {\n                System.err.println(\"got future exception: \" + future.getException());\n                throw future.getException();\n            }\n            System.err.println(\"got value: \" + future.getObjectValue());\n            assertTrue(future.isServiceDetected());\n\n            m_detector.set(null);\n        }\n        tearDownServer();\n    }","commit_id":"b83ada3bad5eceb34c74b4b6070cb02000f5ff92","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Before\n    public void setUp() throws Exception {\n        m_detector = getDetector(TcpDetector.class);\n        m_detector.setServiceName(\"TCP\");\n        m_detector.setTimeout(1000);\n        m_detector.init();\n    }","id":48952,"modified_method":"@Before\n    public void setUp() throws Exception {\n        m_detector.set(getDetector(TcpDetector.class));\n        m_detector.get().setServiceName(\"TCP\");\n        m_detector.get().setTimeout(1000);\n        m_detector.get().init();\n    }","commit_id":"b83ada3bad5eceb34c74b4b6070cb02000f5ff92","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void stopServer() throws IOException {\n        getServerSocket().close();\n        if(getServerThread() != null && getServerThread().isAlive()) { \n            \n            if(getSocket() != null && !getSocket().isClosed()) {\n               getSocket().close();  \n            }\n            \n        }\n    }","id":48953,"modified_method":"public void stopServer() throws IOException {\n        m_stopped = true;\n//        getServerSocket().getSoTimeout();\n        getServerSocket().close();\n        if(getServerThread() != null && getServerThread().isAlive()) { \n            \n            if(getSocket() != null && !getSocket().isClosed()) {\n               getSocket().close();  \n            }\n            \n        }\n    }","commit_id":"b83ada3bad5eceb34c74b4b6070cb02000f5ff92","url":"https://github.com/OpenNMS/opennms"},{"original_method":"protected Runnable getRunnable() throws Exception {\n        return new Runnable(){\n            \n            public void run(){\n                try{\n                    getServerSocket().setSoTimeout(getTimeout());\n                    setSocket(getServerSocket().accept());\n                    if(m_threadSleepLength > 0) { Thread.sleep(m_threadSleepLength); }\n                    getSocket().setSoTimeout(getTimeout());\n                    \n                    OutputStream out = getSocket().getOutputStream();\n                    if(getBanner() != null){sendBanner(out);};\n                    \n                    \n                    BufferedReader in = new BufferedReader(new InputStreamReader(getSocket().getInputStream()));\n                    attemptConversation(in, out);\n                }catch(Exception e){\n                    info(e, \"SimpleServer Exception on conversation\");\n                } finally {\n                    try {\n                        stopServer();\n                    } catch (IOException e) {\n                        info(e, \"SimpleServer Exception on stopping server\");\n                    }\n                }\n            }\n            \n        };\n    }","id":48954,"modified_method":"protected Runnable getRunnable() throws Exception {\n        return new Runnable(){\n            \n            public void run(){\n                try{\n                    if (getTimeout() > 0) {\n                        getServerSocket().setSoTimeout(getTimeout());\n                    }\n                    while (!m_stopped) {\n                        setSocket(getServerSocket().accept());\n                        if (m_threadSleepLength > 0) {\n                            Thread.sleep(m_threadSleepLength);\n                        }\n                        if (getTimeout() > 0) {\n                            getSocket().setSoTimeout(getTimeout());\n                        }\n                        OutputStream out = getSocket().getOutputStream();\n                        if (getBanner() != null) {\n                            sendBanner(out);\n                        }\n                        ;\n                        BufferedReader in = new BufferedReader(new InputStreamReader(getSocket().getInputStream()));\n                        attemptConversation(in, out);\n                    }\n                } catch (Exception e){\n                    info(e, \"SimpleServer Exception on conversation\");\n                } finally {\n                    try {\n                        stopServer();\n                    } catch (IOException e) {\n                        info(e, \"SimpleServer Exception on stopping server\");\n                    }\n                }\n            }\n            \n        };\n    }","commit_id":"b83ada3bad5eceb34c74b4b6070cb02000f5ff92","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Before\n    public void setUp() throws Exception {\n        m_detector = getDetector(TcpDetector.class);\n        m_detector.setServiceName(\"TCP\");\n        m_detector.setTimeout(1000);\n        m_detector.init();\n    }","id":48955,"modified_method":"@Before\n    public void setUp() throws Exception {\n        m_detector.set(getDetector(TcpDetector.class));\n        m_detector.get().setServiceName(\"TCP\");\n        m_detector.get().setTimeout(1000);\n        m_detector.get().init();\n    }","commit_id":"5edc1b97d0dd951822e84cbce9a9d6a9c3402ef9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Repeat(10000)\n    public void testNoServerPresent() throws Exception {\n        \n        m_detector.setPort(1999);\n        \n        DetectFuture future = m_detector.isServiceDetected(InetAddress.getLocalHost(), new NullDetectorMonitor());\n        future.addListener(new IoFutureListener<DetectFuture>() {\n\n            public void operationComplete(DetectFuture future) {\n                TcpDetector detector = m_detector;\n                m_detector = null;\n                detector.dispose();\n            }\n            \n        });\n        assertNotNull(future);\n        future.awaitUninterruptibly();\n        assertFalse(future.isServiceDetected());\n        \n        \n        \n        System.err.println(\"Finish test\");\n    }","id":48956,"modified_method":"@Test\n    @Repeat(10000)\n    public void testNoServerPresent() throws Exception {\n        \n        final TcpDetector detector = m_detector.get();\n        detector.setPort(1999);\n        \n        DetectFuture future = detector.isServiceDetected(InetAddress.getLocalHost(), new NullDetectorMonitor());\n        future.addListener(new IoFutureListener<DetectFuture>() {\n\n            public void operationComplete(DetectFuture future) {\n                detector.dispose();\n            }\n            \n        });\n        assertNotNull(future);\n        future.awaitUninterruptibly();\n        assertFalse(future.isServiceDetected());\n        \n        \n        m_detector.set(null);\n        System.err.println(\"Finish test\");\n    }","commit_id":"5edc1b97d0dd951822e84cbce9a9d6a9c3402ef9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testSucessServer() throws Exception {\n        for (int i = 0; i < 10000; i++) {\n            setUp();\n            System.err.println(\"current loop: \" + i);\n            m_server = new SimpleServer() {\n                \n                public void onInit() {\n                   setBanner(\"Winner\");\n                }\n                \n            };\n            \n            m_server.init();\n            m_server.startServer();\n    \n            assertNotNull(m_detector);\n            assertNotNull(m_server.getLocalPort());\n            m_detector.setPort(m_server.getLocalPort());\n            \n            DetectFuture future = m_detector.isServiceDetected(m_server.getInetAddress(), new NullDetectorMonitor());\n            future.addListener(new IoFutureListener<DetectFuture>() {\n    \n                public void operationComplete(DetectFuture future) {\n                    TcpDetector detector = m_detector;\n                    m_detector = null;\n                    detector.dispose();\n                }\n                \n            });\n            \n            future.awaitUninterruptibly();\n            assertNotNull(future);\n            assertTrue(future.isServiceDetected());\n            \n            m_server.stopServer();\n            m_server = null;\n        }\n    }","id":48957,"modified_method":"@Test\n    public void testSucessServer() throws Throwable {\n        setUpServer();\n        int port = m_server.getLocalPort();\n        InetAddress address = m_server.getInetAddress();\n        for (int i = 0; i < 10000; i++) {\n            setUp();\n            System.err.println(\"current loop: \" + i);\n            assertNotNull(m_detector);\n            \n            final TcpDetector detector = m_detector.get();\n            \n            detector.setPort(port);\n            \n            DefaultDetectFuture future = (DefaultDetectFuture)detector.isServiceDetected(address, new NullDetectorMonitor());\n            future.addListener(new IoFutureListener<DetectFuture>() {\n    \n                public void operationComplete(DetectFuture future) {\n                    detector.dispose();\n                }\n                \n            });\n            \n            future.awaitUninterruptibly();\n            assertNotNull(future);\n            if (future.getException() != null) {\n                System.err.println(\"got future exception: \" + future.getException());\n                throw future.getException();\n            }\n            System.err.println(\"got value: \" + future.getObjectValue());\n            assertTrue(future.isServiceDetected());\n\n            m_detector.set(null);\n        }\n        tearDownServer();\n    }","commit_id":"5edc1b97d0dd951822e84cbce9a9d6a9c3402ef9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"protected Runnable getRunnable() throws Exception {\n        return new Runnable(){\n            \n            public void run(){\n                try{\n                    getServerSocket().setSoTimeout(getTimeout());\n                    setSocket(getServerSocket().accept());\n                    if(m_threadSleepLength > 0) { Thread.sleep(m_threadSleepLength); }\n                    getSocket().setSoTimeout(getTimeout());\n                    \n                    OutputStream out = getSocket().getOutputStream();\n                    if(getBanner() != null){sendBanner(out);};\n                    \n                    \n                    BufferedReader in = new BufferedReader(new InputStreamReader(getSocket().getInputStream()));\n                    attemptConversation(in, out);\n                }catch(Exception e){\n                    info(e, \"SimpleServer Exception on conversation\");\n                } finally {\n                    try {\n                        stopServer();\n                    } catch (IOException e) {\n                        info(e, \"SimpleServer Exception on stopping server\");\n                    }\n                }\n            }\n            \n        };\n    }","id":48958,"modified_method":"protected Runnable getRunnable() throws Exception {\n        return new Runnable(){\n            \n            public void run(){\n                try{\n                    if (getTimeout() > 0) {\n                        getServerSocket().setSoTimeout(getTimeout());\n                    }\n                    while (!m_stopped) {\n                        setSocket(getServerSocket().accept());\n                        if (m_threadSleepLength > 0) {\n                            Thread.sleep(m_threadSleepLength);\n                        }\n                        if (getTimeout() > 0) {\n                            getSocket().setSoTimeout(getTimeout());\n                        }\n                        OutputStream out = getSocket().getOutputStream();\n                        if (getBanner() != null) {\n                            sendBanner(out);\n                        }\n                        ;\n                        BufferedReader in = new BufferedReader(new InputStreamReader(getSocket().getInputStream()));\n                        attemptConversation(in, out);\n                    }\n                } catch (Exception e){\n                    info(e, \"SimpleServer Exception on conversation\");\n                } finally {\n                    try {\n                        stopServer();\n                    } catch (IOException e) {\n                        info(e, \"SimpleServer Exception on stopping server\");\n                    }\n                }\n            }\n            \n        };\n    }","commit_id":"5edc1b97d0dd951822e84cbce9a9d6a9c3402ef9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void stopServer() throws IOException {\n        getServerSocket().close();\n        if(getServerThread() != null && getServerThread().isAlive()) { \n            \n            if(getSocket() != null && !getSocket().isClosed()) {\n               getSocket().close();  \n            }\n            \n        }\n    }","id":48959,"modified_method":"public void stopServer() throws IOException {\n        m_stopped = true;\n//        getServerSocket().getSoTimeout();\n        getServerSocket().close();\n        if(getServerThread() != null && getServerThread().isAlive()) { \n            \n            if(getSocket() != null && !getSocket().isClosed()) {\n               getSocket().close();  \n            }\n            \n        }\n    }","commit_id":"5edc1b97d0dd951822e84cbce9a9d6a9c3402ef9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Repeat(10000)\n    public void testNoServerPresent() throws Exception {\n        \n        m_detector.setPort(1999);\n        \n        DetectFuture future = m_detector.isServiceDetected(InetAddress.getLocalHost(), new NullDetectorMonitor());\n        future.addListener(new IoFutureListener<DetectFuture>() {\n\n            public void operationComplete(DetectFuture future) {\n                TcpDetector detector = m_detector;\n                m_detector = null;\n                detector.dispose();\n            }\n            \n        });\n        assertNotNull(future);\n        future.awaitUninterruptibly();\n        assertFalse(future.isServiceDetected());\n        \n        \n        \n        System.err.println(\"Finish test\");\n    }","id":48960,"modified_method":"@Test\n    @Repeat(10000)\n    public void testNoServerPresent() throws Exception {\n        \n        final TcpDetector detector = m_detector.get();\n        detector.setPort(1999);\n        \n        DetectFuture future = detector.isServiceDetected(InetAddress.getLocalHost(), new NullDetectorMonitor());\n        future.addListener(new IoFutureListener<DetectFuture>() {\n\n            public void operationComplete(DetectFuture future) {\n                detector.dispose();\n            }\n            \n        });\n        assertNotNull(future);\n        future.awaitUninterruptibly();\n        assertFalse(future.isServiceDetected());\n        \n        \n        m_detector.set(null);\n        System.err.println(\"Finish test\");\n    }","commit_id":"c725ae32811fdb0bb59aa93c565dd98d8dee4407","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Before\n    public void setUp() throws Exception {\n        m_detector = getDetector(TcpDetector.class);\n        m_detector.setServiceName(\"TCP\");\n        m_detector.setTimeout(1000);\n        m_detector.init();\n    }","id":48961,"modified_method":"@Before\n    public void setUp() throws Exception {\n        m_detector.set(getDetector(TcpDetector.class));\n        m_detector.get().setServiceName(\"TCP\");\n        m_detector.get().setTimeout(1000);\n        m_detector.get().init();\n    }","commit_id":"c725ae32811fdb0bb59aa93c565dd98d8dee4407","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testSucessServer() throws Exception {\n        for (int i = 0; i < 10000; i++) {\n            setUp();\n            System.err.println(\"current loop: \" + i);\n            m_server = new SimpleServer() {\n                \n                public void onInit() {\n                   setBanner(\"Winner\");\n                }\n                \n            };\n            \n            m_server.init();\n            m_server.startServer();\n    \n            assertNotNull(m_detector);\n            assertNotNull(m_server.getLocalPort());\n            m_detector.setPort(m_server.getLocalPort());\n            \n            DetectFuture future = m_detector.isServiceDetected(m_server.getInetAddress(), new NullDetectorMonitor());\n            future.addListener(new IoFutureListener<DetectFuture>() {\n    \n                public void operationComplete(DetectFuture future) {\n                    TcpDetector detector = m_detector;\n                    m_detector = null;\n                    detector.dispose();\n                }\n                \n            });\n            \n            future.awaitUninterruptibly();\n            assertNotNull(future);\n            assertTrue(future.isServiceDetected());\n            \n            m_server.stopServer();\n            m_server = null;\n        }\n    }","id":48962,"modified_method":"@Test\n    public void testSucessServer() throws Throwable {\n        setUpServer();\n        int port = m_server.getLocalPort();\n        InetAddress address = m_server.getInetAddress();\n        for (int i = 0; i < 10000; i++) {\n            setUp();\n            System.err.println(\"current loop: \" + i);\n            assertNotNull(m_detector);\n            \n            final TcpDetector detector = m_detector.get();\n            \n            detector.setPort(port);\n            \n            DefaultDetectFuture future = (DefaultDetectFuture)detector.isServiceDetected(address, new NullDetectorMonitor());\n            future.addListener(new IoFutureListener<DetectFuture>() {\n    \n                public void operationComplete(DetectFuture future) {\n                    detector.dispose();\n                }\n                \n            });\n            \n            future.awaitUninterruptibly();\n            assertNotNull(future);\n            if (future.getException() != null) {\n                System.err.println(\"got future exception: \" + future.getException());\n                throw future.getException();\n            }\n            System.err.println(\"got value: \" + future.getObjectValue());\n            assertTrue(future.isServiceDetected());\n\n            m_detector.set(null);\n        }\n        tearDownServer();\n    }","commit_id":"c725ae32811fdb0bb59aa93c565dd98d8dee4407","url":"https://github.com/OpenNMS/opennms"},{"original_method":"protected Runnable getRunnable() throws Exception {\n        return new Runnable(){\n            \n            public void run(){\n                try{\n                    getServerSocket().setSoTimeout(getTimeout());\n                    setSocket(getServerSocket().accept());\n                    if(m_threadSleepLength > 0) { Thread.sleep(m_threadSleepLength); }\n                    getSocket().setSoTimeout(getTimeout());\n                    \n                    OutputStream out = getSocket().getOutputStream();\n                    if(getBanner() != null){sendBanner(out);};\n                    \n                    \n                    BufferedReader in = new BufferedReader(new InputStreamReader(getSocket().getInputStream()));\n                    attemptConversation(in, out);\n                }catch(Exception e){\n                    info(e, \"SimpleServer Exception on conversation\");\n                } finally {\n                    try {\n                        stopServer();\n                    } catch (IOException e) {\n                        info(e, \"SimpleServer Exception on stopping server\");\n                    }\n                }\n            }\n            \n        };\n    }","id":48963,"modified_method":"protected Runnable getRunnable() throws Exception {\n        return new Runnable(){\n            \n            public void run(){\n                try{\n                    if (getTimeout() > 0) {\n                        getServerSocket().setSoTimeout(getTimeout());\n                    }\n                    while (!m_stopped) {\n                        setSocket(getServerSocket().accept());\n                        if (m_threadSleepLength > 0) {\n                            Thread.sleep(m_threadSleepLength);\n                        }\n                        if (getTimeout() > 0) {\n                            getSocket().setSoTimeout(getTimeout());\n                        }\n                        OutputStream out = getSocket().getOutputStream();\n                        if (getBanner() != null) {\n                            sendBanner(out);\n                        }\n                        ;\n                        BufferedReader in = new BufferedReader(new InputStreamReader(getSocket().getInputStream()));\n                        attemptConversation(in, out);\n                    }\n                } catch (Exception e){\n                    info(e, \"SimpleServer Exception on conversation\");\n                } finally {\n                    try {\n                        stopServer();\n                    } catch (IOException e) {\n                        info(e, \"SimpleServer Exception on stopping server\");\n                    }\n                }\n            }\n            \n        };\n    }","commit_id":"c725ae32811fdb0bb59aa93c565dd98d8dee4407","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void stopServer() throws IOException {\n        getServerSocket().close();\n        if(getServerThread() != null && getServerThread().isAlive()) { \n            \n            if(getSocket() != null && !getSocket().isClosed()) {\n               getSocket().close();  \n            }\n            \n        }\n    }","id":48964,"modified_method":"public void stopServer() throws IOException {\n        m_stopped = true;\n//        getServerSocket().getSoTimeout();\n        getServerSocket().close();\n        if(getServerThread() != null && getServerThread().isAlive()) { \n            \n            if(getSocket() != null && !getSocket().isClosed()) {\n               getSocket().close();  \n            }\n            \n        }\n    }","commit_id":"c725ae32811fdb0bb59aa93c565dd98d8dee4407","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testBug3193() throws Exception {\n        initFactories(\"/threshd-configuration.xml\",\"/test-thresholds-bug3193.xml\");\n        ThresholdingVisitor visitor = createVisitor();\n\n        CollectionAgent agent = createCollectionAgent();\n        NodeResourceType resourceType = createNodeResourceType(agent);\n        MibObject mibObject = createMibObject(\"counter\", \"myCounter\", \"0\");\n        SnmpAttributeType attributeType = new NumericAttributeType(resourceType, \"default\", mibObject, new AttributeGroupType(\"mibGroup\", \"ignore\"));\n\n        /*\n         * Add Events\n         * FIXME Depending of Java Version used the event order is different.\n         * For Java5, first add 'myCounter - 30' then 'myCounter'\n         * For Java6, first add 'myCounter' then 'myCounter - 30'\n         * Is this related to thresholds.xml parsing ?\n         */\n        addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n        addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n        addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n        addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);\n        \n        // Collect Step 1 : First Data: Last should be NaN\n        SnmpCollectionResource resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(2000));\n        resource.visit(visitor);\n\n        // Collect Step 2 : First Value: (last-current)/step => (20000-2000)/300=60\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(20000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Second Value: (last-current)/step => (53000-20000)/300=110 => Trigger\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(53000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Third Value (last-current)/step => (65000-53000)/300=40 => Rearm\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(65000));\n        resource.visit(visitor);\n\n        EasyMock.verify(agent);\n        verifyEvents(0);\n    }","id":48965,"modified_method":"@Test\n    public void testBug3193() throws Exception {\n        initFactories(\"/threshd-configuration.xml\",\"/test-thresholds-bug3193.xml\");\n        ThresholdingVisitor visitor = createVisitor();\n\n        CollectionAgent agent = createCollectionAgent();\n        NodeResourceType resourceType = createNodeResourceType(agent);\n        MibObject mibObject = createMibObject(\"counter\", \"myCounter\", \"0\");\n        SnmpAttributeType attributeType = new NumericAttributeType(resourceType, \"default\", mibObject, new AttributeGroupType(\"mibGroup\", \"ignore\"));\n\n        // Add Events (see note above)\n        if (System.getProperty(\"java.specification.version\").equals(\"1.6\")) {\n            addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n            addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n            addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);            \n            addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n        } else {\n            addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n            addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n            addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n            addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);\n        }\n        \n        // Collect Step 1 : First Data: Last should be NaN\n        SnmpCollectionResource resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(2000));\n        resource.visit(visitor);\n\n        // Collect Step 2 : First Value: (last-current)/step => (20000-2000)/300=60\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(20000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Second Value: (last-current)/step => (53000-20000)/300=110 => Trigger\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(53000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Third Value (last-current)/step => (65000-53000)/300=40 => Rearm\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(65000));\n        resource.visit(visitor);\n\n        EasyMock.verify(agent);\n        verifyEvents(0);\n    }","commit_id":"c6bbfbf26621615e13627dd7cbf6c3dca49209ef","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testThresholsFilters() throws Exception {\n        ThresholdingVisitor visitor = createVisitor();\n        \n        String highExpression = \"(((hrStorageAllocUnits*hrStorageUsed)/(hrStorageAllocUnits*hrStorageSize))*100)\";\n        addHighThresholdEvent(1, 30, 25, 50, \"/opt\", \"1\", highExpression, null, null);\n        addHighThresholdEvent(1, 30, 25, 60, \"/opt01\", \"2\", highExpression, null, null);\n\n        runFileSystemDataTest(visitor, 1, \"/opt\", 50, 100);\n        runFileSystemDataTest(visitor, 2, \"/opt01\", 60, 100);\n        runFileSystemDataTest(visitor, 3, \"/home\", 70, 100);\n        \n        verifyEvents(0);\n    }","id":48966,"modified_method":"@Test\n    public void testThresholsFiltersOnNodeResource() throws Exception {\n        initFactories(\"/threshd-configuration.xml\",\"/test-thresholds-5.xml\");\n        ThresholdingVisitor visitor = createVisitor();\n        \n        // Adding Expected Thresholds\n        addHighThresholdEvent(1, 30, 25, 50, \"/home\", null, \"(hda1_hrStorageUsed/hda1_hrStorageSize)*100\", null, null);\n        addHighThresholdEvent(1, 50, 45, 60, \"/opt\", null, \"(hda2_hrStorageUsed/hda2_hrStorageSize)*100\", null, null);\n\n        // Creating Node ResourceType\n        CollectionAgent agent = createCollectionAgent();\n        MockDataCollectionConfig dataCollectionConfig = new MockDataCollectionConfig();        \n        OnmsSnmpCollection collection = new OnmsSnmpCollection(agent, new ServiceParameters(new HashMap<String, String>()), dataCollectionConfig);\n        NodeResourceType resourceType = new NodeResourceType(agent, collection);\n\n        // Creating strings.properties file\n        Properties p = new Properties();\n        p.put(\"hda1_hrStorageDescr\", \"/home\");\n        p.put(\"hda2_hrStorageDescr\", \"/opt\");\n        p.put(\"hda3_hrStorageDescr\", \"/usr\");\n        File f = new File(getRepository().getRrdBaseDir(), \"1/strings.properties\");\n        ResourceTypeUtils.saveUpdatedProperties(f, p);\n        \n        // Creating Resource\n        SnmpCollectionResource resource = new NodeInfo(resourceType, agent);\n        addAttributeToCollectionResource(resource, resourceType, \"hda1_hrStorageUsed\", \"gauge\", \"node\", 50);\n        addAttributeToCollectionResource(resource, resourceType, \"hda1_hrStorageSize\", \"gauge\", \"node\", 100);\n        addAttributeToCollectionResource(resource, resourceType, \"hda2_hrStorageUsed\", \"gauge\", \"node\", 60);\n        addAttributeToCollectionResource(resource, resourceType, \"hda2_hrStorageSize\", \"gauge\", \"node\", 100);\n        addAttributeToCollectionResource(resource, resourceType, \"hda3_hrStorageUsed\", \"gauge\", \"node\", 70);\n        addAttributeToCollectionResource(resource, resourceType, \"hda3_hrStorageSize\", \"gauge\", \"node\", 100);\n\n        // Run Visitor and Verify Events\n        resource.visit(visitor);\n        EasyMock.verify(agent);\n        f.delete();\n        verifyEvents(0);\n    }","commit_id":"c6bbfbf26621615e13627dd7cbf6c3dca49209ef","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testThresholsFilters() throws Exception {\n        ThresholdingVisitor visitor = createVisitor();\n        \n        String highExpression = \"(((hrStorageAllocUnits*hrStorageUsed)/(hrStorageAllocUnits*hrStorageSize))*100)\";\n        addHighThresholdEvent(1, 30, 25, 50, \"/opt\", \"1\", highExpression, null, null);\n        addHighThresholdEvent(1, 30, 25, 60, \"/opt01\", \"2\", highExpression, null, null);\n\n        runFileSystemDataTest(visitor, 1, \"/opt\", 50, 100);\n        runFileSystemDataTest(visitor, 2, \"/opt01\", 60, 100);\n        runFileSystemDataTest(visitor, 3, \"/home\", 70, 100);\n        \n        verifyEvents(0);\n    }","id":48967,"modified_method":"@Test\n    public void testThresholsFiltersOnNodeResource() throws Exception {\n        initFactories(\"/threshd-configuration.xml\",\"/test-thresholds-5.xml\");\n        ThresholdingVisitor visitor = createVisitor();\n        \n        // Adding Expected Thresholds\n        addHighThresholdEvent(1, 30, 25, 50, \"/home\", null, \"(hda1_hrStorageUsed/hda1_hrStorageSize)*100\", null, null);\n        addHighThresholdEvent(1, 50, 45, 60, \"/opt\", null, \"(hda2_hrStorageUsed/hda2_hrStorageSize)*100\", null, null);\n\n        // Creating Node ResourceType\n        CollectionAgent agent = createCollectionAgent();\n        MockDataCollectionConfig dataCollectionConfig = new MockDataCollectionConfig();        \n        OnmsSnmpCollection collection = new OnmsSnmpCollection(agent, new ServiceParameters(new HashMap<String, String>()), dataCollectionConfig);\n        NodeResourceType resourceType = new NodeResourceType(agent, collection);\n\n        // Creating strings.properties file\n        Properties p = new Properties();\n        p.put(\"hda1_hrStorageDescr\", \"/home\");\n        p.put(\"hda2_hrStorageDescr\", \"/opt\");\n        p.put(\"hda3_hrStorageDescr\", \"/usr\");\n        File f = new File(getRepository().getRrdBaseDir(), \"1/strings.properties\");\n        ResourceTypeUtils.saveUpdatedProperties(f, p);\n        \n        // Creating Resource\n        SnmpCollectionResource resource = new NodeInfo(resourceType, agent);\n        addAttributeToCollectionResource(resource, resourceType, \"hda1_hrStorageUsed\", \"gauge\", \"node\", 50);\n        addAttributeToCollectionResource(resource, resourceType, \"hda1_hrStorageSize\", \"gauge\", \"node\", 100);\n        addAttributeToCollectionResource(resource, resourceType, \"hda2_hrStorageUsed\", \"gauge\", \"node\", 60);\n        addAttributeToCollectionResource(resource, resourceType, \"hda2_hrStorageSize\", \"gauge\", \"node\", 100);\n        addAttributeToCollectionResource(resource, resourceType, \"hda3_hrStorageUsed\", \"gauge\", \"node\", 70);\n        addAttributeToCollectionResource(resource, resourceType, \"hda3_hrStorageSize\", \"gauge\", \"node\", 100);\n\n        // Run Visitor and Verify Events\n        resource.visit(visitor);\n        EasyMock.verify(agent);\n        f.delete();\n        verifyEvents(0);\n    }","commit_id":"c283084d65769eb76150292352bd5d4ce0974cf7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testBug3193() throws Exception {\n        initFactories(\"/threshd-configuration.xml\",\"/test-thresholds-bug3193.xml\");\n        ThresholdingVisitor visitor = createVisitor();\n\n        CollectionAgent agent = createCollectionAgent();\n        NodeResourceType resourceType = createNodeResourceType(agent);\n        MibObject mibObject = createMibObject(\"counter\", \"myCounter\", \"0\");\n        SnmpAttributeType attributeType = new NumericAttributeType(resourceType, \"default\", mibObject, new AttributeGroupType(\"mibGroup\", \"ignore\"));\n\n        /*\n         * Add Events\n         * FIXME Depending of Java Version used the event order is different.\n         * For Java5, first add 'myCounter - 30' then 'myCounter'\n         * For Java6, first add 'myCounter' then 'myCounter - 30'\n         * Is this related to thresholds.xml parsing ?\n         */\n        addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n        addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n        addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n        addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);\n        \n        // Collect Step 1 : First Data: Last should be NaN\n        SnmpCollectionResource resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(2000));\n        resource.visit(visitor);\n\n        // Collect Step 2 : First Value: (last-current)/step => (20000-2000)/300=60\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(20000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Second Value: (last-current)/step => (53000-20000)/300=110 => Trigger\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(53000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Third Value (last-current)/step => (65000-53000)/300=40 => Rearm\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(65000));\n        resource.visit(visitor);\n\n        EasyMock.verify(agent);\n        verifyEvents(0);\n    }","id":48968,"modified_method":"@Test\n    public void testBug3193() throws Exception {\n        initFactories(\"/threshd-configuration.xml\",\"/test-thresholds-bug3193.xml\");\n        ThresholdingVisitor visitor = createVisitor();\n\n        CollectionAgent agent = createCollectionAgent();\n        NodeResourceType resourceType = createNodeResourceType(agent);\n        MibObject mibObject = createMibObject(\"counter\", \"myCounter\", \"0\");\n        SnmpAttributeType attributeType = new NumericAttributeType(resourceType, \"default\", mibObject, new AttributeGroupType(\"mibGroup\", \"ignore\"));\n\n        // Add Events (see note above)\n        if (System.getProperty(\"java.specification.version\").equals(\"1.6\")) {\n            addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n            addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n            addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);            \n            addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n        } else {\n            addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n            addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n            addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n            addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);\n        }\n        \n        // Collect Step 1 : First Data: Last should be NaN\n        SnmpCollectionResource resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(2000));\n        resource.visit(visitor);\n\n        // Collect Step 2 : First Value: (last-current)/step => (20000-2000)/300=60\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(20000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Second Value: (last-current)/step => (53000-20000)/300=110 => Trigger\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(53000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Third Value (last-current)/step => (65000-53000)/300=40 => Rearm\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(65000));\n        resource.visit(visitor);\n\n        EasyMock.verify(agent);\n        verifyEvents(0);\n    }","commit_id":"c283084d65769eb76150292352bd5d4ce0974cf7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testThresholsFilters() throws Exception {\n        ThresholdingVisitor visitor = createVisitor();\n        \n        String highExpression = \"(((hrStorageAllocUnits*hrStorageUsed)/(hrStorageAllocUnits*hrStorageSize))*100)\";\n        addHighThresholdEvent(1, 30, 25, 50, \"/opt\", \"1\", highExpression, null, null);\n        addHighThresholdEvent(1, 30, 25, 60, \"/opt01\", \"2\", highExpression, null, null);\n\n        runFileSystemDataTest(visitor, 1, \"/opt\", 50, 100);\n        runFileSystemDataTest(visitor, 2, \"/opt01\", 60, 100);\n        runFileSystemDataTest(visitor, 3, \"/home\", 70, 100);\n        \n        verifyEvents(0);\n    }","id":48969,"modified_method":"@Test\n    public void testThresholsFiltersOnNodeResource() throws Exception {\n        initFactories(\"/threshd-configuration.xml\",\"/test-thresholds-5.xml\");\n        ThresholdingVisitor visitor = createVisitor();\n        \n        // Adding Expected Thresholds\n        addHighThresholdEvent(1, 30, 25, 50, \"/home\", null, \"(hda1_hrStorageUsed/hda1_hrStorageSize)*100\", null, null);\n        addHighThresholdEvent(1, 50, 45, 60, \"/opt\", null, \"(hda2_hrStorageUsed/hda2_hrStorageSize)*100\", null, null);\n\n        // Creating Node ResourceType\n        CollectionAgent agent = createCollectionAgent();\n        MockDataCollectionConfig dataCollectionConfig = new MockDataCollectionConfig();        \n        OnmsSnmpCollection collection = new OnmsSnmpCollection(agent, new ServiceParameters(new HashMap<String, String>()), dataCollectionConfig);\n        NodeResourceType resourceType = new NodeResourceType(agent, collection);\n\n        // Creating strings.properties file\n        Properties p = new Properties();\n        p.put(\"hda1_hrStorageDescr\", \"/home\");\n        p.put(\"hda2_hrStorageDescr\", \"/opt\");\n        p.put(\"hda3_hrStorageDescr\", \"/usr\");\n        File f = new File(getRepository().getRrdBaseDir(), \"1/strings.properties\");\n        ResourceTypeUtils.saveUpdatedProperties(f, p);\n        \n        // Creating Resource\n        SnmpCollectionResource resource = new NodeInfo(resourceType, agent);\n        addAttributeToCollectionResource(resource, resourceType, \"hda1_hrStorageUsed\", \"gauge\", \"node\", 50);\n        addAttributeToCollectionResource(resource, resourceType, \"hda1_hrStorageSize\", \"gauge\", \"node\", 100);\n        addAttributeToCollectionResource(resource, resourceType, \"hda2_hrStorageUsed\", \"gauge\", \"node\", 60);\n        addAttributeToCollectionResource(resource, resourceType, \"hda2_hrStorageSize\", \"gauge\", \"node\", 100);\n        addAttributeToCollectionResource(resource, resourceType, \"hda3_hrStorageUsed\", \"gauge\", \"node\", 70);\n        addAttributeToCollectionResource(resource, resourceType, \"hda3_hrStorageSize\", \"gauge\", \"node\", 100);\n\n        // Run Visitor and Verify Events\n        resource.visit(visitor);\n        EasyMock.verify(agent);\n        f.delete();\n        verifyEvents(0);\n    }","commit_id":"f7970cb084e9a1852587118c13d47b9e0889e359","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testBug3193() throws Exception {\n        initFactories(\"/threshd-configuration.xml\",\"/test-thresholds-bug3193.xml\");\n        ThresholdingVisitor visitor = createVisitor();\n\n        CollectionAgent agent = createCollectionAgent();\n        NodeResourceType resourceType = createNodeResourceType(agent);\n        MibObject mibObject = createMibObject(\"counter\", \"myCounter\", \"0\");\n        SnmpAttributeType attributeType = new NumericAttributeType(resourceType, \"default\", mibObject, new AttributeGroupType(\"mibGroup\", \"ignore\"));\n\n        /*\n         * Add Events\n         * FIXME Depending of Java Version used the event order is different.\n         * For Java5, first add 'myCounter - 30' then 'myCounter'\n         * For Java6, first add 'myCounter' then 'myCounter - 30'\n         * Is this related to thresholds.xml parsing ?\n         */\n        addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n        addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n        addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n        addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);\n        \n        // Collect Step 1 : First Data: Last should be NaN\n        SnmpCollectionResource resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(2000));\n        resource.visit(visitor);\n\n        // Collect Step 2 : First Value: (last-current)/step => (20000-2000)/300=60\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(20000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Second Value: (last-current)/step => (53000-20000)/300=110 => Trigger\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(53000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Third Value (last-current)/step => (65000-53000)/300=40 => Rearm\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(65000));\n        resource.visit(visitor);\n\n        EasyMock.verify(agent);\n        verifyEvents(0);\n    }","id":48970,"modified_method":"@Test\n    public void testBug3193() throws Exception {\n        initFactories(\"/threshd-configuration.xml\",\"/test-thresholds-bug3193.xml\");\n        ThresholdingVisitor visitor = createVisitor();\n\n        CollectionAgent agent = createCollectionAgent();\n        NodeResourceType resourceType = createNodeResourceType(agent);\n        MibObject mibObject = createMibObject(\"counter\", \"myCounter\", \"0\");\n        SnmpAttributeType attributeType = new NumericAttributeType(resourceType, \"default\", mibObject, new AttributeGroupType(\"mibGroup\", \"ignore\"));\n\n        // Add Events (see note above)\n        if (System.getProperty(\"java.specification.version\").equals(\"1.6\")) {\n            addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n            addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n            addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);            \n            addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n        } else {\n            addHighThresholdEvent(1, 100, 90, 110, \"Unknown\", null, \"myCounter\", null, null);\n            addHighThresholdEvent(1, 70, 60, 80, \"Unknown\", null, \"myCounter - 30\", null, null);\n            addHighRearmEvent(1, 100, 90, 40, \"Unknown\", null, \"myCounter\", null, null);\n            addHighRearmEvent(1, 70, 60, 10, \"Unknown\", null, \"myCounter - 30\", null, null);\n        }\n        \n        // Collect Step 1 : First Data: Last should be NaN\n        SnmpCollectionResource resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(2000));\n        resource.visit(visitor);\n\n        // Collect Step 2 : First Value: (last-current)/step => (20000-2000)/300=60\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(20000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Second Value: (last-current)/step => (53000-20000)/300=110 => Trigger\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(53000));\n        resource.visit(visitor);\n\n        // Collect Step 3 : Third Value (last-current)/step => (65000-53000)/300=40 => Rearm\n        resource = new NodeInfo(resourceType, agent);\n        resource.setAttributeValue(attributeType, SnmpUtils.getValueFactory().getCounter32(65000));\n        resource.visit(visitor);\n\n        EasyMock.verify(agent);\n        verifyEvents(0);\n    }","commit_id":"f7970cb084e9a1852587118c13d47b9e0889e359","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * cleared.\n     * \n     * @param file\n     *            The file to load.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @exception java.lang.IOException\n     *                Thrown if the file cannot be opened for reading.\n     */\n    public static void loadConfiguration(String file) throws IOException, MarshalException, ValidationException {\n        InputStream cfgIn = new FileInputStream(file);\n        if (cfgIn == null) {\n            throw new IOException(\"Failed to load/locate events conf file: \" + file);\n        }\n\n        Reader rdr = new InputStreamReader(cfgIn);\n        loadConfiguration(rdr);\n    }","id":48971,"modified_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * cleared.\n     * \n     * @param file\n     *            The file to load.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @exception java.lang.IOException\n     *                Thrown if the file cannot be opened for reading.\n     */\n    public static void loadConfiguration(String file) throws IOException, MarshalException, ValidationException {\n        InputStream cfgIn = new FileInputStream(file);\n        if (cfgIn == null) {\n            throw new IOException(\"Failed to load/locate events conf file: \" + file);\n        }\n\n        loadConfiguration(new InputStreamReader(cfgIn));\n    }","commit_id":"6beab551a2907ee401f557a1af2ace927c267015","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * overwritten by the new events in this configuration. This call will\n     * replace the current override settings.\n     * \n     * @param file\n     *            The configuration file name.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @exception java.lang.IOException\n     *                Thrown if the file cannot be opened for reading.\n     *                \n     * @deprecated this is currently unused and will be deleted. brozow - 23-Jan-07\n     */\n    public static void mergeConfiguration(String file) throws IOException, MarshalException, ValidationException {\n        Reader rdr = new FileReader(file);\n        mergeConfiguration(rdr);\n    }","id":48972,"modified_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * overwritten by the new events in this configuration. This call will\n     * replace the current override settings.\n     * \n     * @param file\n     *            The configuration file name.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @exception java.lang.IOException\n     *                Thrown if the file cannot be opened for reading.\n     *                \n     * @deprecated this is currently unused and will be deleted. brozow - 23-Jan-07\n     */\n    public static void mergeConfiguration(String file) throws IOException, MarshalException, ValidationException {\n        mergeConfiguration(new FileReader(file));\n    }","commit_id":"6beab551a2907ee401f557a1af2ace927c267015","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Returns true if the tag is marked as secure.\n     */\n    public static boolean isSecureTag(String name) {\n        for (int i = 0; i < m_secureTags.length; i++) {\n            if (m_secureTags[i].equals(name)) {\n                return true;\n            }\n        }\n\n        return false;\n    }","id":48973,"modified_method":"/**\n     * Returns true if the tag is marked as secure.\n     */\n    public static boolean isSecureTag(String name) {\n        for (String secureTag : m_secureTags) {\n            if (secureTag.equals(name)) {\n                return true;\n            }\n        }\n\n        return false;\n    }","commit_id":"6beab551a2907ee401f557a1af2ace927c267015","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static void init() throws MarshalException, ValidationException, IOException {\n    \tFile configFile = ConfigFileConstants.getFile(ConfigFileConstants.EVENT_CONF_FILE_NAME);\n    \tloadConfiguration(configFile.getPath());\n    }","id":48974,"modified_method":"public static void init() throws MarshalException, ValidationException, IOException {\n    \tloadConfiguration(ConfigFileConstants.getFile(ConfigFileConstants.EVENT_CONF_FILE_NAME).getPath());\n    }","commit_id":"6beab551a2907ee401f557a1af2ace927c267015","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * overwritten by the new events in this configuration. This call will\n     * replace the current override settings. After the contents of the reader\n     * stream is loaded, the reader is closed.\n     * \n     * @param rdr\n     *            The reader used to load the configuration.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * \n     * @deprecated this is currently unused and will be deleted. brozow - 23-Jan-07\n     */\n    public static void mergeConfiguration(Reader rdr) throws MarshalException, ValidationException {\n        synchronized (m_eventConf) {\n            Events toplevel = null;\n            toplevel = (Events) Unmarshaller.unmarshal(Events.class, rdr);\n\n            Enumeration e = toplevel.enumerateEvent();\n            while (e.hasMoreElements()) {\n                Event event = (Event) e.nextElement();\n                m_eventConf.put(event);\n            }\n\n            m_secureTags = toplevel.getGlobal().getSecurity().getDoNotOverride();\n\n            try {\n                rdr.close();\n            } catch (Throwable t) {\n            }\n        }\n        m_loaded = true;\n    }","id":48975,"modified_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * overwritten by the new events in this configuration. This call will\n     * replace the current override settings. After the contents of the reader\n     * stream is loaded, the reader is closed.\n     * \n     * @param rdr\n     *            The reader used to load the configuration.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * \n     * @deprecated this is currently unused and will be deleted. brozow - 23-Jan-07\n     */\n    public static void mergeConfiguration(Reader rdr) throws MarshalException, ValidationException {\n        synchronized (m_eventConf) {\n            Events toplevel = CastorUtils.unmarshal(Events.class, rdr);\n\n            for (Event event : toplevel.getEventCollection()) {\n                m_eventConf.put(event);\n            }\n\n            m_secureTags = toplevel.getGlobal().getSecurity().getDoNotOverride();\n\n            try {\n                rdr.close();\n            } catch (Throwable t) {\n            }\n        }\n        m_loaded = true;\n    }","commit_id":"6beab551a2907ee401f557a1af2ace927c267015","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * cleared. After the contents of the reader stream is loaded the stream is\n     * closed.\n     * \n     * @param rdr\n     *            The reader used to load the configuration.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     */\n    public static void loadConfiguration(Reader rdr) throws IOException, MarshalException, ValidationException {\n        Category log = ThreadCategory.getInstance();\n        synchronized (m_eventConf) {\n            Events toplevel = null;\n            toplevel = (Events) Unmarshaller.unmarshal(Events.class, rdr);\n\n            m_eventConf.clear();\n\n            Enumeration e = toplevel.enumerateEvent();\n            while (e.hasMoreElements()) {\n                Event event = (Event) e.nextElement();\n                m_eventConf.put(event);\n            }\n\n            m_secureTags = toplevel.getGlobal().getSecurity().getDoNotOverride();\n\n            Enumeration e2 = toplevel.enumerateEventFile();\n            while (e2.hasMoreElements()) {\n                String eventfile = (String) e2.nextElement();\n                InputStream fileIn = new FileInputStream(eventfile);\n                if (fileIn == null) {\n                    throw new IOException(\"Eventconf: Failed to load/locate events file: \" + eventfile);\n                }\n\n                if (log.isDebugEnabled()) {\n                    log.debug(\"Eventconf: Loading event file: \" + eventfile);\n                }\n\n                Reader filerdr = new InputStreamReader(fileIn);\n                Events filelevel = null;\n                filelevel = (Events) Unmarshaller.unmarshal(Events.class, filerdr);\n                if (filelevel.getGlobal() != null) {\n                    throw new ValidationException(\"The event file \" + eventfile + \" included from the top-level event configuration file cannot have a 'global' element\");\n                }\n                if (filelevel.getEventFileCollection().size() > 0) {\n                    throw new ValidationException(\"The event file \" + eventfile + \" included from the top-level event configuration file cannot include other configuration files: \" + StringUtils.collectionToCommaDelimitedString(filelevel.getEventFileCollection()));\n                }\n                Enumeration efile = filelevel.enumerateEvent();\n                while (efile.hasMoreElements()) {\n                    Event event = (Event) efile.nextElement();\n                    m_eventConf.put(event);\n                }\n            }\n\n            try {\n                rdr.close();\n            } catch (Throwable t) {\n            }\n        }\n        m_loaded = true;\n    }","id":48976,"modified_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * cleared. After the contents of the reader stream is loaded the stream is\n     * closed.\n     * \n     * @param rdr\n     *            The reader used to load the configuration.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     */\n    public static void loadConfiguration(Reader rdr) throws IOException, MarshalException, ValidationException {\n        synchronized (m_eventConf) {\n            Events toplevel = CastorUtils.unmarshal(Events.class, rdr);\n\n            m_eventConf.clear();\n\n            for (Event event : toplevel.getEventCollection()) {\n                m_eventConf.put(event);\n            }\n\n            m_secureTags = toplevel.getGlobal().getSecurity().getDoNotOverride();\n\n            for (String eventFilePath : toplevel.getEventFileCollection()) {\n                File eventFile = new File(eventFilePath);\n                InputStream fileIn = new FileInputStream(eventFile);\n                if (fileIn == null) {\n                    throw new IOException(\"Eventconf: Failed to load/locate events file: \" + eventFile);\n                }\n\n                if (log().isDebugEnabled()) {\n                    log().debug(\"Eventconf: Loading event file: \" + eventFile);\n                }\n\n                Reader filerdr = new InputStreamReader(fileIn);\n                Events filelevel = CastorUtils.unmarshal(Events.class, filerdr);\n                \n                if (filelevel.getGlobal() != null) {\n                    throw new ValidationException(\"The event file \" + eventFile + \" included from the top-level event configuration file cannot have a 'global' element\");\n                }\n                if (filelevel.getEventFileCollection().size() > 0) {\n                    throw new ValidationException(\"The event file \" + eventFile + \" included from the top-level event configuration file cannot include other configuration files: \" + StringUtils.collectionToCommaDelimitedString(filelevel.getEventFileCollection()));\n                }\n                \n                for (Event event : filelevel.getEventCollection()) {\n                    m_eventConf.put(event);\n                }\n            }\n\n            try {\n                rdr.close();\n            } catch (Throwable t) {\n            }\n        }\n        m_loaded = true;\n    }","commit_id":"6beab551a2907ee401f557a1af2ace927c267015","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Returns true if the tag is marked as secure.\n     */\n    public static boolean isSecureTag(String name) {\n        for (int i = 0; i < m_secureTags.length; i++) {\n            if (m_secureTags[i].equals(name)) {\n                return true;\n            }\n        }\n\n        return false;\n    }","id":48977,"modified_method":"/**\n     * Returns true if the tag is marked as secure.\n     */\n    public static boolean isSecureTag(String name) {\n        for (String secureTag : m_secureTags) {\n            if (secureTag.equals(name)) {\n                return true;\n            }\n        }\n\n        return false;\n    }","commit_id":"f4aedd5ef3719c33762dfd211f71e9cc0eabbf3a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * cleared.\n     * \n     * @param file\n     *            The file to load.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @exception java.lang.IOException\n     *                Thrown if the file cannot be opened for reading.\n     */\n    public static void loadConfiguration(String file) throws IOException, MarshalException, ValidationException {\n        InputStream cfgIn = new FileInputStream(file);\n        if (cfgIn == null) {\n            throw new IOException(\"Failed to load/locate events conf file: \" + file);\n        }\n\n        Reader rdr = new InputStreamReader(cfgIn);\n        loadConfiguration(rdr);\n    }","id":48978,"modified_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * cleared.\n     * \n     * @param file\n     *            The file to load.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @exception java.lang.IOException\n     *                Thrown if the file cannot be opened for reading.\n     */\n    public static void loadConfiguration(String file) throws IOException, MarshalException, ValidationException {\n        InputStream cfgIn = new FileInputStream(file);\n        if (cfgIn == null) {\n            throw new IOException(\"Failed to load/locate events conf file: \" + file);\n        }\n\n        loadConfiguration(new InputStreamReader(cfgIn));\n    }","commit_id":"f4aedd5ef3719c33762dfd211f71e9cc0eabbf3a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * cleared. After the contents of the reader stream is loaded the stream is\n     * closed.\n     * \n     * @param rdr\n     *            The reader used to load the configuration.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     */\n    public static void loadConfiguration(Reader rdr) throws IOException, MarshalException, ValidationException {\n        Category log = ThreadCategory.getInstance();\n        synchronized (m_eventConf) {\n            Events toplevel = null;\n            toplevel = (Events) Unmarshaller.unmarshal(Events.class, rdr);\n\n            m_eventConf.clear();\n\n            Enumeration e = toplevel.enumerateEvent();\n            while (e.hasMoreElements()) {\n                Event event = (Event) e.nextElement();\n                m_eventConf.put(event);\n            }\n\n            m_secureTags = toplevel.getGlobal().getSecurity().getDoNotOverride();\n\n            Enumeration e2 = toplevel.enumerateEventFile();\n            while (e2.hasMoreElements()) {\n                String eventfile = (String) e2.nextElement();\n                InputStream fileIn = new FileInputStream(eventfile);\n                if (fileIn == null) {\n                    throw new IOException(\"Eventconf: Failed to load/locate events file: \" + eventfile);\n                }\n\n                if (log.isDebugEnabled()) {\n                    log.debug(\"Eventconf: Loading event file: \" + eventfile);\n                }\n\n                Reader filerdr = new InputStreamReader(fileIn);\n                Events filelevel = null;\n                filelevel = (Events) Unmarshaller.unmarshal(Events.class, filerdr);\n                if (filelevel.getGlobal() != null) {\n                    throw new ValidationException(\"The event file \" + eventfile + \" included from the top-level event configuration file cannot have a 'global' element\");\n                }\n                if (filelevel.getEventFileCollection().size() > 0) {\n                    throw new ValidationException(\"The event file \" + eventfile + \" included from the top-level event configuration file cannot include other configuration files: \" + StringUtils.collectionToCommaDelimitedString(filelevel.getEventFileCollection()));\n                }\n                Enumeration efile = filelevel.enumerateEvent();\n                while (efile.hasMoreElements()) {\n                    Event event = (Event) efile.nextElement();\n                    m_eventConf.put(event);\n                }\n            }\n\n            try {\n                rdr.close();\n            } catch (Throwable t) {\n            }\n        }\n        m_loaded = true;\n    }","id":48979,"modified_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * cleared. After the contents of the reader stream is loaded the stream is\n     * closed.\n     * \n     * @param rdr\n     *            The reader used to load the configuration.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     */\n    public static void loadConfiguration(Reader rdr) throws IOException, MarshalException, ValidationException {\n        synchronized (m_eventConf) {\n            Events toplevel = CastorUtils.unmarshal(Events.class, rdr);\n\n            m_eventConf.clear();\n\n            for (Event event : toplevel.getEventCollection()) {\n                m_eventConf.put(event);\n            }\n\n            m_secureTags = toplevel.getGlobal().getSecurity().getDoNotOverride();\n\n            for (String eventFilePath : toplevel.getEventFileCollection()) {\n                File eventFile = new File(eventFilePath);\n                InputStream fileIn = new FileInputStream(eventFile);\n                if (fileIn == null) {\n                    throw new IOException(\"Eventconf: Failed to load/locate events file: \" + eventFile);\n                }\n\n                if (log().isDebugEnabled()) {\n                    log().debug(\"Eventconf: Loading event file: \" + eventFile);\n                }\n\n                Reader filerdr = new InputStreamReader(fileIn);\n                Events filelevel = CastorUtils.unmarshal(Events.class, filerdr);\n                \n                if (filelevel.getGlobal() != null) {\n                    throw new ValidationException(\"The event file \" + eventFile + \" included from the top-level event configuration file cannot have a 'global' element\");\n                }\n                if (filelevel.getEventFileCollection().size() > 0) {\n                    throw new ValidationException(\"The event file \" + eventFile + \" included from the top-level event configuration file cannot include other configuration files: \" + StringUtils.collectionToCommaDelimitedString(filelevel.getEventFileCollection()));\n                }\n                \n                for (Event event : filelevel.getEventCollection()) {\n                    m_eventConf.put(event);\n                }\n            }\n\n            try {\n                rdr.close();\n            } catch (Throwable t) {\n            }\n        }\n        m_loaded = true;\n    }","commit_id":"f4aedd5ef3719c33762dfd211f71e9cc0eabbf3a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * overwritten by the new events in this configuration. This call will\n     * replace the current override settings.\n     * \n     * @param file\n     *            The configuration file name.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @exception java.lang.IOException\n     *                Thrown if the file cannot be opened for reading.\n     *                \n     * @deprecated this is currently unused and will be deleted. brozow - 23-Jan-07\n     */\n    public static void mergeConfiguration(String file) throws IOException, MarshalException, ValidationException {\n        Reader rdr = new FileReader(file);\n        mergeConfiguration(rdr);\n    }","id":48980,"modified_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * overwritten by the new events in this configuration. This call will\n     * replace the current override settings.\n     * \n     * @param file\n     *            The configuration file name.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @exception java.lang.IOException\n     *                Thrown if the file cannot be opened for reading.\n     *                \n     * @deprecated this is currently unused and will be deleted. brozow - 23-Jan-07\n     */\n    public static void mergeConfiguration(String file) throws IOException, MarshalException, ValidationException {\n        mergeConfiguration(new FileReader(file));\n    }","commit_id":"f4aedd5ef3719c33762dfd211f71e9cc0eabbf3a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static void init() throws MarshalException, ValidationException, IOException {\n    \tFile configFile = ConfigFileConstants.getFile(ConfigFileConstants.EVENT_CONF_FILE_NAME);\n    \tloadConfiguration(configFile.getPath());\n    }","id":48981,"modified_method":"public static void init() throws MarshalException, ValidationException, IOException {\n    \tloadConfiguration(ConfigFileConstants.getFile(ConfigFileConstants.EVENT_CONF_FILE_NAME).getPath());\n    }","commit_id":"f4aedd5ef3719c33762dfd211f71e9cc0eabbf3a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * overwritten by the new events in this configuration. This call will\n     * replace the current override settings. After the contents of the reader\n     * stream is loaded, the reader is closed.\n     * \n     * @param rdr\n     *            The reader used to load the configuration.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * \n     * @deprecated this is currently unused and will be deleted. brozow - 23-Jan-07\n     */\n    public static void mergeConfiguration(Reader rdr) throws MarshalException, ValidationException {\n        synchronized (m_eventConf) {\n            Events toplevel = null;\n            toplevel = (Events) Unmarshaller.unmarshal(Events.class, rdr);\n\n            Enumeration e = toplevel.enumerateEvent();\n            while (e.hasMoreElements()) {\n                Event event = (Event) e.nextElement();\n                m_eventConf.put(event);\n            }\n\n            m_secureTags = toplevel.getGlobal().getSecurity().getDoNotOverride();\n\n            try {\n                rdr.close();\n            } catch (Throwable t) {\n            }\n        }\n        m_loaded = true;\n    }","id":48982,"modified_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * overwritten by the new events in this configuration. This call will\n     * replace the current override settings. After the contents of the reader\n     * stream is loaded, the reader is closed.\n     * \n     * @param rdr\n     *            The reader used to load the configuration.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * \n     * @deprecated this is currently unused and will be deleted. brozow - 23-Jan-07\n     */\n    public static void mergeConfiguration(Reader rdr) throws MarshalException, ValidationException {\n        synchronized (m_eventConf) {\n            Events toplevel = CastorUtils.unmarshal(Events.class, rdr);\n\n            for (Event event : toplevel.getEventCollection()) {\n                m_eventConf.put(event);\n            }\n\n            m_secureTags = toplevel.getGlobal().getSecurity().getDoNotOverride();\n\n            try {\n                rdr.close();\n            } catch (Throwable t) {\n            }\n        }\n        m_loaded = true;\n    }","commit_id":"f4aedd5ef3719c33762dfd211f71e9cc0eabbf3a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * cleared. After the contents of the reader stream is loaded the stream is\n     * closed.\n     * \n     * @param rdr\n     *            The reader used to load the configuration.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     */\n    public static void loadConfiguration(Reader rdr) throws IOException, MarshalException, ValidationException {\n        Category log = ThreadCategory.getInstance();\n        synchronized (m_eventConf) {\n            Events toplevel = null;\n            toplevel = (Events) Unmarshaller.unmarshal(Events.class, rdr);\n\n            m_eventConf.clear();\n\n            Enumeration e = toplevel.enumerateEvent();\n            while (e.hasMoreElements()) {\n                Event event = (Event) e.nextElement();\n                m_eventConf.put(event);\n            }\n\n            m_secureTags = toplevel.getGlobal().getSecurity().getDoNotOverride();\n\n            Enumeration e2 = toplevel.enumerateEventFile();\n            while (e2.hasMoreElements()) {\n                String eventfile = (String) e2.nextElement();\n                InputStream fileIn = new FileInputStream(eventfile);\n                if (fileIn == null) {\n                    throw new IOException(\"Eventconf: Failed to load/locate events file: \" + eventfile);\n                }\n\n                if (log.isDebugEnabled()) {\n                    log.debug(\"Eventconf: Loading event file: \" + eventfile);\n                }\n\n                Reader filerdr = new InputStreamReader(fileIn);\n                Events filelevel = null;\n                filelevel = (Events) Unmarshaller.unmarshal(Events.class, filerdr);\n                if (filelevel.getGlobal() != null) {\n                    throw new ValidationException(\"The event file \" + eventfile + \" included from the top-level event configuration file cannot have a 'global' element\");\n                }\n                if (filelevel.getEventFileCollection().size() > 0) {\n                    throw new ValidationException(\"The event file \" + eventfile + \" included from the top-level event configuration file cannot include other configuration files: \" + StringUtils.collectionToCommaDelimitedString(filelevel.getEventFileCollection()));\n                }\n                Enumeration efile = filelevel.enumerateEvent();\n                while (efile.hasMoreElements()) {\n                    Event event = (Event) efile.nextElement();\n                    m_eventConf.put(event);\n                }\n            }\n\n            try {\n                rdr.close();\n            } catch (Throwable t) {\n            }\n        }\n        m_loaded = true;\n    }","id":48983,"modified_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * cleared. After the contents of the reader stream is loaded the stream is\n     * closed.\n     * \n     * @param rdr\n     *            The reader used to load the configuration.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     */\n    public static void loadConfiguration(Reader rdr) throws IOException, MarshalException, ValidationException {\n        synchronized (m_eventConf) {\n            Events toplevel = CastorUtils.unmarshal(Events.class, rdr);\n\n            m_eventConf.clear();\n\n            for (Event event : toplevel.getEventCollection()) {\n                m_eventConf.put(event);\n            }\n\n            m_secureTags = toplevel.getGlobal().getSecurity().getDoNotOverride();\n\n            for (String eventFilePath : toplevel.getEventFileCollection()) {\n                File eventFile = new File(eventFilePath);\n                InputStream fileIn = new FileInputStream(eventFile);\n                if (fileIn == null) {\n                    throw new IOException(\"Eventconf: Failed to load/locate events file: \" + eventFile);\n                }\n\n                if (log().isDebugEnabled()) {\n                    log().debug(\"Eventconf: Loading event file: \" + eventFile);\n                }\n\n                Reader filerdr = new InputStreamReader(fileIn);\n                Events filelevel = CastorUtils.unmarshal(Events.class, filerdr);\n                \n                if (filelevel.getGlobal() != null) {\n                    throw new ValidationException(\"The event file \" + eventFile + \" included from the top-level event configuration file cannot have a 'global' element\");\n                }\n                if (filelevel.getEventFileCollection().size() > 0) {\n                    throw new ValidationException(\"The event file \" + eventFile + \" included from the top-level event configuration file cannot include other configuration files: \" + StringUtils.collectionToCommaDelimitedString(filelevel.getEventFileCollection()));\n                }\n                \n                for (Event event : filelevel.getEventCollection()) {\n                    m_eventConf.put(event);\n                }\n            }\n\n            try {\n                rdr.close();\n            } catch (Throwable t) {\n            }\n        }\n        m_loaded = true;\n    }","commit_id":"219a7d10e36b9c5a8c27889a9af97221bea421c2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static void init() throws MarshalException, ValidationException, IOException {\n    \tFile configFile = ConfigFileConstants.getFile(ConfigFileConstants.EVENT_CONF_FILE_NAME);\n    \tloadConfiguration(configFile.getPath());\n    }","id":48984,"modified_method":"public static void init() throws MarshalException, ValidationException, IOException {\n    \tloadConfiguration(ConfigFileConstants.getFile(ConfigFileConstants.EVENT_CONF_FILE_NAME).getPath());\n    }","commit_id":"219a7d10e36b9c5a8c27889a9af97221bea421c2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * overwritten by the new events in this configuration. This call will\n     * replace the current override settings. After the contents of the reader\n     * stream is loaded, the reader is closed.\n     * \n     * @param rdr\n     *            The reader used to load the configuration.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * \n     * @deprecated this is currently unused and will be deleted. brozow - 23-Jan-07\n     */\n    public static void mergeConfiguration(Reader rdr) throws MarshalException, ValidationException {\n        synchronized (m_eventConf) {\n            Events toplevel = null;\n            toplevel = (Events) Unmarshaller.unmarshal(Events.class, rdr);\n\n            Enumeration e = toplevel.enumerateEvent();\n            while (e.hasMoreElements()) {\n                Event event = (Event) e.nextElement();\n                m_eventConf.put(event);\n            }\n\n            m_secureTags = toplevel.getGlobal().getSecurity().getDoNotOverride();\n\n            try {\n                rdr.close();\n            } catch (Throwable t) {\n            }\n        }\n        m_loaded = true;\n    }","id":48985,"modified_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * overwritten by the new events in this configuration. This call will\n     * replace the current override settings. After the contents of the reader\n     * stream is loaded, the reader is closed.\n     * \n     * @param rdr\n     *            The reader used to load the configuration.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * \n     * @deprecated this is currently unused and will be deleted. brozow - 23-Jan-07\n     */\n    public static void mergeConfiguration(Reader rdr) throws MarshalException, ValidationException {\n        synchronized (m_eventConf) {\n            Events toplevel = CastorUtils.unmarshal(Events.class, rdr);\n\n            for (Event event : toplevel.getEventCollection()) {\n                m_eventConf.put(event);\n            }\n\n            m_secureTags = toplevel.getGlobal().getSecurity().getDoNotOverride();\n\n            try {\n                rdr.close();\n            } catch (Throwable t) {\n            }\n        }\n        m_loaded = true;\n    }","commit_id":"219a7d10e36b9c5a8c27889a9af97221bea421c2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Returns true if the tag is marked as secure.\n     */\n    public static boolean isSecureTag(String name) {\n        for (int i = 0; i < m_secureTags.length; i++) {\n            if (m_secureTags[i].equals(name)) {\n                return true;\n            }\n        }\n\n        return false;\n    }","id":48986,"modified_method":"/**\n     * Returns true if the tag is marked as secure.\n     */\n    public static boolean isSecureTag(String name) {\n        for (String secureTag : m_secureTags) {\n            if (secureTag.equals(name)) {\n                return true;\n            }\n        }\n\n        return false;\n    }","commit_id":"219a7d10e36b9c5a8c27889a9af97221bea421c2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * cleared.\n     * \n     * @param file\n     *            The file to load.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @exception java.lang.IOException\n     *                Thrown if the file cannot be opened for reading.\n     */\n    public static void loadConfiguration(String file) throws IOException, MarshalException, ValidationException {\n        InputStream cfgIn = new FileInputStream(file);\n        if (cfgIn == null) {\n            throw new IOException(\"Failed to load/locate events conf file: \" + file);\n        }\n\n        Reader rdr = new InputStreamReader(cfgIn);\n        loadConfiguration(rdr);\n    }","id":48987,"modified_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * cleared.\n     * \n     * @param file\n     *            The file to load.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @exception java.lang.IOException\n     *                Thrown if the file cannot be opened for reading.\n     */\n    public static void loadConfiguration(String file) throws IOException, MarshalException, ValidationException {\n        InputStream cfgIn = new FileInputStream(file);\n        if (cfgIn == null) {\n            throw new IOException(\"Failed to load/locate events conf file: \" + file);\n        }\n\n        loadConfiguration(new InputStreamReader(cfgIn));\n    }","commit_id":"219a7d10e36b9c5a8c27889a9af97221bea421c2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * overwritten by the new events in this configuration. This call will\n     * replace the current override settings.\n     * \n     * @param file\n     *            The configuration file name.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @exception java.lang.IOException\n     *                Thrown if the file cannot be opened for reading.\n     *                \n     * @deprecated this is currently unused and will be deleted. brozow - 23-Jan-07\n     */\n    public static void mergeConfiguration(String file) throws IOException, MarshalException, ValidationException {\n        Reader rdr = new FileReader(file);\n        mergeConfiguration(rdr);\n    }","id":48988,"modified_method":"/**\n     * This method is used to load the passed configuration into the currently\n     * managed configuration instance. Any events that previously existed are\n     * overwritten by the new events in this configuration. This call will\n     * replace the current override settings.\n     * \n     * @param file\n     *            The configuration file name.\n     * \n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @exception java.lang.IOException\n     *                Thrown if the file cannot be opened for reading.\n     *                \n     * @deprecated this is currently unused and will be deleted. brozow - 23-Jan-07\n     */\n    public static void mergeConfiguration(String file) throws IOException, MarshalException, ValidationException {\n        mergeConfiguration(new FileReader(file));\n    }","commit_id":"219a7d10e36b9c5a8c27889a9af97221bea421c2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Transactional\n    public boolean provisionNode(String foreignSource, String foreignId, String nodeLabel, String ipAddress,\n            String[] categories, String snmpCommunity, String snmpVersion,\n            String deviceUsername, String devicePassword, String enablePassword,\n            String accessMethod, String autoEnable) throws NodeProvisionException {\n\n        if (log().isDebugEnabled()) {\n            log().debug(String.format(\"adding SNMP community %s (%s)\", snmpCommunity, snmpVersion));\n        }\n        // Set the SNMP community name (if necessary)\n        if (snmpCommunity != null && snmpVersion != null) {\n            try {\n                SnmpEventInfo info = new SnmpEventInfo();\n                info.setCommunityString(snmpCommunity);\n                info.setFirstIPAddress(ipAddress);\n                info.setVersion(snmpVersion);\n                m_snmpPeerFactory.define(info);\n                SnmpPeerFactory.saveCurrent();\n            } catch (Exception e) {\n                throw new NodeProvisionException(\"unable to add SNMP community information\", e);\n            }\n        }\n\n        log().debug(\"creating requisition node\");\n        // Create a requisition node based on the form input\n        RequisitionInterface reqIface = new RequisitionInterface();\n        reqIface.setIpAddr(ipAddress);\n        reqIface.setManaged(true);\n        reqIface.setSnmpPrimary(\"P\");\n        reqIface.setStatus(1);\n\n        reqIface.putMonitoredService(new RequisitionMonitoredService(\"ICMP\"));\n        reqIface.putMonitoredService(new RequisitionMonitoredService(\"SNMP\"));\n        \n        RequisitionNode reqNode = new RequisitionNode();\n        reqNode.setNodeLabel(nodeLabel);\n        reqNode.setForeignId(foreignId);\n        reqNode.putInterface(reqIface);\n\n        for (String category : categories) {\n            reqNode.putCategory(new RequisitionCategory(category));\n        }\n\n        if (deviceUsername != null) {\n            reqNode.putAsset(new RequisitionAsset(\"username\", deviceUsername));\n        }\n        if (devicePassword != null) {\n            reqNode.putAsset(new RequisitionAsset(\"password\", devicePassword));\n        }\n        if (enablePassword != null) {\n            reqNode.putAsset(new RequisitionAsset(\"enable\", enablePassword));\n        }\n        if (accessMethod != null) {\n            reqNode.putAsset(new RequisitionAsset(\"connection\", accessMethod));\n        }\n        if (autoEnable != null) {\n            reqNode.putAsset(new RequisitionAsset(\"autoenable\", autoEnable));\n        }\n\n        // Now save it to the requisition\n        try {\n            Requisition req = m_foreignSourceRepository.getRequisition(foreignSource);\n            req.putNode(reqNode);\n            log().debug(\"saving requisition node\");\n            m_foreignSourceRepository.save(req);\n        } catch (ForeignSourceRepositoryException e) {\n            throw new RuntimeException(\"unable to retrieve foreign source '\" + foreignSource + \"'\", e);\n        }\n        \n        log().debug(\"creating database node\");\n        // Create the basic node\n        \n        OnmsDistPoller dp = m_distPollerDao.get(\"localhost\");\n        OnmsNode node = new OnmsNode();\n        node.setDistPoller(dp);\n        node.setType(\"A\");\n        node.setForeignSource(foreignSource);\n        node.setForeignId(foreignId);\n        node.setLabel(nodeLabel);\n        \n        OnmsIpInterface iface = new OnmsIpInterface();\n        iface.setNode(node);\n        iface.setIpAddress(ipAddress);\n        iface.setIsManaged(\"M\");\n        iface.setIsSnmpPrimary(new PrimaryType('P'));\n        node.addIpInterface(iface);\n        \n        Set<OnmsMonitoredService> services = new TreeSet<OnmsMonitoredService>();\n        services.add(new OnmsMonitoredService(iface, getServiceType(\"ICMP\")));\n        services.add(new OnmsMonitoredService(iface, getServiceType(\"SNMP\")));\n        iface.setMonitoredServices(services);\n        \n        OnmsAssetRecord asset = new OnmsAssetRecord();\n        asset.setAutoenable(autoEnable);\n        asset.setConnection(accessMethod);\n        asset.setEnable(enablePassword);\n        asset.setUsername(deviceUsername);\n        asset.setPassword(devicePassword);\n        node.setAssetRecord(asset);\n        \n        log().debug(\"saving database node\");\n        m_nodeDao.save(node);\n        \n        node = m_nodeDao.findByForeignId(foreignSource, foreignId);\n        \n        try {\n            log().debug(\"sending event for new node ID \" + node.getNodeId());\n            Event e = new Event();\n            e.setUei(EventConstants.NODE_ADDED_EVENT_UEI);\n            e.setNodeid(node.getId());\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n            \n            e = new Event();\n            e.setUei(EventConstants.NODE_GAINED_INTERFACE_EVENT_UEI);\n            e.setNodeid(node.getId());\n            e.setInterface(ipAddress);\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n\n            e = new Event();\n            e.setUei(EventConstants.NODE_GAINED_SERVICE_EVENT_UEI);\n            e.setNodeid(node.getId());\n            e.setInterface(ipAddress);\n            e.setService(\"ICMP\");\n            e.setService(\"SNMP\");\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n        } catch (EventProxyException ex) {\n            throw new NodeProvisionException(\"Unable to send node events\", ex);\n        }\n\n        return true;\n    }","id":48989,"modified_method":"@Transactional\n    public boolean provisionNode(String foreignSource, String foreignId, String nodeLabel, String ipAddress,\n            String[] categories, String snmpCommunity, String snmpVersion,\n            String deviceUsername, String devicePassword, String enablePassword,\n            String accessMethod, String autoEnable) throws NodeProvisionException {\n\n        if (log().isDebugEnabled()) {\n            log().debug(String.format(\"adding SNMP community %s (%s)\", snmpCommunity, snmpVersion));\n        }\n        // Set the SNMP community name (if necessary)\n        if (snmpCommunity != null && snmpVersion != null) {\n            try {\n                SnmpEventInfo info = new SnmpEventInfo();\n                info.setCommunityString(snmpCommunity);\n                info.setFirstIPAddress(ipAddress);\n                info.setVersion(snmpVersion);\n                m_snmpPeerFactory.define(info);\n                SnmpPeerFactory.saveCurrent();\n            } catch (Exception e) {\n                throw new NodeProvisionException(\"unable to add SNMP community information\", e);\n            }\n        }\n\n        log().debug(\"creating requisition node\");\n        // Create a requisition node based on the form input\n        RequisitionInterface reqIface = new RequisitionInterface();\n        reqIface.setIpAddr(ipAddress);\n        reqIface.setManaged(true);\n        reqIface.setSnmpPrimary(\"P\");\n        reqIface.setStatus(1);\n\n        reqIface.putMonitoredService(new RequisitionMonitoredService(\"ICMP\"));\n        reqIface.putMonitoredService(new RequisitionMonitoredService(\"SNMP\"));\n        \n        RequisitionNode reqNode = new RequisitionNode();\n        reqNode.setNodeLabel(nodeLabel);\n        reqNode.setForeignId(foreignId);\n        reqNode.putInterface(reqIface);\n\n        for (String category : categories) {\n            reqNode.putCategory(new RequisitionCategory(category));\n        }\n\n        if (deviceUsername != null) {\n            reqNode.putAsset(new RequisitionAsset(\"username\", deviceUsername));\n        }\n        if (devicePassword != null) {\n            reqNode.putAsset(new RequisitionAsset(\"password\", devicePassword));\n        }\n        if (enablePassword != null) {\n            reqNode.putAsset(new RequisitionAsset(\"enable\", enablePassword));\n        }\n        if (accessMethod != null) {\n            reqNode.putAsset(new RequisitionAsset(\"connection\", accessMethod));\n        }\n        if (autoEnable != null) {\n            reqNode.putAsset(new RequisitionAsset(\"autoenable\", autoEnable));\n        }\n\n        // Now save it to the requisition\n        try {\n            Requisition req = m_foreignSourceRepository.getRequisition(foreignSource);\n            req.putNode(reqNode);\n            log().debug(\"saving requisition node\");\n            m_foreignSourceRepository.save(req);\n        } catch (ForeignSourceRepositoryException e) {\n            throw new RuntimeException(\"unable to retrieve foreign source '\" + foreignSource + \"'\", e);\n        }\n        \n        log().debug(\"creating database node\");\n        // Create the basic node\n        \n        OnmsDistPoller dp = m_distPollerDao.get(\"localhost\");\n        OnmsNode node = new OnmsNode(dp);\n        node.setType(\"A\");\n        node.setForeignSource(foreignSource);\n        node.setForeignId(foreignId);\n        node.setLabel(nodeLabel);\n        \n        node.getAssetRecord().setAutoenable(autoEnable);\n        node.getAssetRecord().setConnection(accessMethod);\n        node.getAssetRecord().setEnable(enablePassword);\n        node.getAssetRecord().setUsername(deviceUsername);\n        node.getAssetRecord().setPassword(devicePassword);\n        \n        OnmsIpInterface iface = new OnmsIpInterface(ipAddress, node);\n        iface.setIsManaged(\"M\");\n        iface.setIsSnmpPrimary(new PrimaryType('P'));\n\n        // these are automatically added to the interface by the constructor\n        new OnmsMonitoredService(iface, getServiceType(\"ICMP\"));\n        new OnmsMonitoredService(iface, getServiceType(\"SNMP\"));\n        \n        log().debug(\"saving database node\");\n        m_nodeDao.save(node);\n        \n        OnmsNode savedNode = m_nodeDao.findByForeignId(foreignSource, foreignId);\n        \n        Assert.notNull(savedNode, \"Failed to save node to database\");\n        \n        try {\n            log().debug(\"sending event for new node ID \" + savedNode.getId());\n            Event e = new Event();\n            e.setUei(EventConstants.NODE_ADDED_EVENT_UEI);\n            e.setNodeid(savedNode.getId());\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n            \n            e = new Event();\n            e.setUei(EventConstants.NODE_GAINED_INTERFACE_EVENT_UEI);\n            e.setNodeid(savedNode.getId());\n            e.setInterface(ipAddress);\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n\n            e = new Event();\n            e.setUei(EventConstants.NODE_GAINED_SERVICE_EVENT_UEI);\n            e.setNodeid(savedNode.getId());\n            e.setInterface(ipAddress);\n            e.setService(\"ICMP\");\n            e.setService(\"SNMP\");\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n        } catch (EventProxyException ex) {\n            throw new NodeProvisionException(\"Unable to send node events\", ex);\n        }\n\n        return true;\n    }","commit_id":"16cd28cd8e445a2e422a1955f472396c24475460","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Transactional\n    public boolean provisionNode(String foreignSource, String foreignId, String nodeLabel, String ipAddress,\n            String[] categories, String snmpCommunity, String snmpVersion,\n            String deviceUsername, String devicePassword, String enablePassword,\n            String accessMethod, String autoEnable) throws NodeProvisionException {\n\n        if (log().isDebugEnabled()) {\n            log().debug(String.format(\"adding SNMP community %s (%s)\", snmpCommunity, snmpVersion));\n        }\n        // Set the SNMP community name (if necessary)\n        if (snmpCommunity != null && snmpVersion != null) {\n            try {\n                SnmpEventInfo info = new SnmpEventInfo();\n                info.setCommunityString(snmpCommunity);\n                info.setFirstIPAddress(ipAddress);\n                info.setVersion(snmpVersion);\n                m_snmpPeerFactory.define(info);\n                SnmpPeerFactory.saveCurrent();\n            } catch (Exception e) {\n                throw new NodeProvisionException(\"unable to add SNMP community information\", e);\n            }\n        }\n\n        log().debug(\"creating requisition node\");\n        // Create a requisition node based on the form input\n        RequisitionInterface reqIface = new RequisitionInterface();\n        reqIface.setIpAddr(ipAddress);\n        reqIface.setManaged(true);\n        reqIface.setSnmpPrimary(\"P\");\n        reqIface.setStatus(1);\n\n        reqIface.putMonitoredService(new RequisitionMonitoredService(\"ICMP\"));\n        reqIface.putMonitoredService(new RequisitionMonitoredService(\"SNMP\"));\n        \n        RequisitionNode reqNode = new RequisitionNode();\n        reqNode.setNodeLabel(nodeLabel);\n        reqNode.setForeignId(foreignId);\n        reqNode.putInterface(reqIface);\n\n        for (String category : categories) {\n            reqNode.putCategory(new RequisitionCategory(category));\n        }\n\n        if (deviceUsername != null) {\n            reqNode.putAsset(new RequisitionAsset(\"username\", deviceUsername));\n        }\n        if (devicePassword != null) {\n            reqNode.putAsset(new RequisitionAsset(\"password\", devicePassword));\n        }\n        if (enablePassword != null) {\n            reqNode.putAsset(new RequisitionAsset(\"enable\", enablePassword));\n        }\n        if (accessMethod != null) {\n            reqNode.putAsset(new RequisitionAsset(\"connection\", accessMethod));\n        }\n        if (autoEnable != null) {\n            reqNode.putAsset(new RequisitionAsset(\"autoenable\", autoEnable));\n        }\n\n        // Now save it to the requisition\n        try {\n            Requisition req = m_foreignSourceRepository.getRequisition(foreignSource);\n            req.putNode(reqNode);\n            log().debug(\"saving requisition node\");\n            m_foreignSourceRepository.save(req);\n        } catch (ForeignSourceRepositoryException e) {\n            throw new RuntimeException(\"unable to retrieve foreign source '\" + foreignSource + \"'\", e);\n        }\n        \n        log().debug(\"creating database node\");\n        // Create the basic node\n        \n        OnmsDistPoller dp = m_distPollerDao.get(\"localhost\");\n        OnmsNode node = new OnmsNode();\n        node.setDistPoller(dp);\n        node.setType(\"A\");\n        node.setForeignSource(foreignSource);\n        node.setForeignId(foreignId);\n        node.setLabel(nodeLabel);\n        \n        OnmsIpInterface iface = new OnmsIpInterface();\n        iface.setNode(node);\n        iface.setIpAddress(ipAddress);\n        iface.setIsManaged(\"M\");\n        iface.setIsSnmpPrimary(new PrimaryType('P'));\n        node.addIpInterface(iface);\n        \n        Set<OnmsMonitoredService> services = new TreeSet<OnmsMonitoredService>();\n        services.add(new OnmsMonitoredService(iface, getServiceType(\"ICMP\")));\n        services.add(new OnmsMonitoredService(iface, getServiceType(\"SNMP\")));\n        iface.setMonitoredServices(services);\n        \n        OnmsAssetRecord asset = new OnmsAssetRecord();\n        asset.setAutoenable(autoEnable);\n        asset.setConnection(accessMethod);\n        asset.setEnable(enablePassword);\n        asset.setUsername(deviceUsername);\n        asset.setPassword(devicePassword);\n        node.setAssetRecord(asset);\n        \n        log().debug(\"saving database node\");\n        m_nodeDao.save(node);\n        \n        node = m_nodeDao.findByForeignId(foreignSource, foreignId);\n        \n        try {\n            log().debug(\"sending event for new node ID \" + node.getNodeId());\n            Event e = new Event();\n            e.setUei(EventConstants.NODE_ADDED_EVENT_UEI);\n            e.setNodeid(node.getId());\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n            \n            e = new Event();\n            e.setUei(EventConstants.NODE_GAINED_INTERFACE_EVENT_UEI);\n            e.setNodeid(node.getId());\n            e.setInterface(ipAddress);\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n\n            e = new Event();\n            e.setUei(EventConstants.NODE_GAINED_SERVICE_EVENT_UEI);\n            e.setNodeid(node.getId());\n            e.setInterface(ipAddress);\n            e.setService(\"ICMP\");\n            e.setService(\"SNMP\");\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n        } catch (EventProxyException ex) {\n            throw new NodeProvisionException(\"Unable to send node events\", ex);\n        }\n\n        return true;\n    }","id":48990,"modified_method":"@Transactional\n    public boolean provisionNode(String foreignSource, String foreignId, String nodeLabel, String ipAddress,\n            String[] categories, String snmpCommunity, String snmpVersion,\n            String deviceUsername, String devicePassword, String enablePassword,\n            String accessMethod, String autoEnable) throws NodeProvisionException {\n\n        if (log().isDebugEnabled()) {\n            log().debug(String.format(\"adding SNMP community %s (%s)\", snmpCommunity, snmpVersion));\n        }\n        // Set the SNMP community name (if necessary)\n        if (snmpCommunity != null && snmpVersion != null) {\n            try {\n                SnmpEventInfo info = new SnmpEventInfo();\n                info.setCommunityString(snmpCommunity);\n                info.setFirstIPAddress(ipAddress);\n                info.setVersion(snmpVersion);\n                m_snmpPeerFactory.define(info);\n                SnmpPeerFactory.saveCurrent();\n            } catch (Exception e) {\n                throw new NodeProvisionException(\"unable to add SNMP community information\", e);\n            }\n        }\n\n        log().debug(\"creating requisition node\");\n        // Create a requisition node based on the form input\n        RequisitionInterface reqIface = new RequisitionInterface();\n        reqIface.setIpAddr(ipAddress);\n        reqIface.setManaged(true);\n        reqIface.setSnmpPrimary(\"P\");\n        reqIface.setStatus(1);\n\n        reqIface.putMonitoredService(new RequisitionMonitoredService(\"ICMP\"));\n        reqIface.putMonitoredService(new RequisitionMonitoredService(\"SNMP\"));\n        \n        RequisitionNode reqNode = new RequisitionNode();\n        reqNode.setNodeLabel(nodeLabel);\n        reqNode.setForeignId(foreignId);\n        reqNode.putInterface(reqIface);\n\n        for (String category : categories) {\n            reqNode.putCategory(new RequisitionCategory(category));\n        }\n\n        if (deviceUsername != null) {\n            reqNode.putAsset(new RequisitionAsset(\"username\", deviceUsername));\n        }\n        if (devicePassword != null) {\n            reqNode.putAsset(new RequisitionAsset(\"password\", devicePassword));\n        }\n        if (enablePassword != null) {\n            reqNode.putAsset(new RequisitionAsset(\"enable\", enablePassword));\n        }\n        if (accessMethod != null) {\n            reqNode.putAsset(new RequisitionAsset(\"connection\", accessMethod));\n        }\n        if (autoEnable != null) {\n            reqNode.putAsset(new RequisitionAsset(\"autoenable\", autoEnable));\n        }\n\n        // Now save it to the requisition\n        try {\n            Requisition req = m_foreignSourceRepository.getRequisition(foreignSource);\n            req.putNode(reqNode);\n            log().debug(\"saving requisition node\");\n            m_foreignSourceRepository.save(req);\n        } catch (ForeignSourceRepositoryException e) {\n            throw new RuntimeException(\"unable to retrieve foreign source '\" + foreignSource + \"'\", e);\n        }\n        \n        log().debug(\"creating database node\");\n        // Create the basic node\n        \n        OnmsDistPoller dp = m_distPollerDao.get(\"localhost\");\n        OnmsNode node = new OnmsNode(dp);\n        node.setType(\"A\");\n        node.setForeignSource(foreignSource);\n        node.setForeignId(foreignId);\n        node.setLabel(nodeLabel);\n        \n        node.getAssetRecord().setAutoenable(autoEnable);\n        node.getAssetRecord().setConnection(accessMethod);\n        node.getAssetRecord().setEnable(enablePassword);\n        node.getAssetRecord().setUsername(deviceUsername);\n        node.getAssetRecord().setPassword(devicePassword);\n        \n        OnmsIpInterface iface = new OnmsIpInterface(ipAddress, node);\n        iface.setIsManaged(\"M\");\n        iface.setIsSnmpPrimary(new PrimaryType('P'));\n\n        // these are automatically added to the interface by the constructor\n        new OnmsMonitoredService(iface, getServiceType(\"ICMP\"));\n        new OnmsMonitoredService(iface, getServiceType(\"SNMP\"));\n        \n        log().debug(\"saving database node\");\n        m_nodeDao.save(node);\n        \n        OnmsNode savedNode = m_nodeDao.findByForeignId(foreignSource, foreignId);\n        \n        Assert.notNull(savedNode, \"Failed to save node to database\");\n        \n        try {\n            log().debug(\"sending event for new node ID \" + savedNode.getId());\n            Event e = new Event();\n            e.setUei(EventConstants.NODE_ADDED_EVENT_UEI);\n            e.setNodeid(savedNode.getId());\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n            \n            e = new Event();\n            e.setUei(EventConstants.NODE_GAINED_INTERFACE_EVENT_UEI);\n            e.setNodeid(savedNode.getId());\n            e.setInterface(ipAddress);\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n\n            e = new Event();\n            e.setUei(EventConstants.NODE_GAINED_SERVICE_EVENT_UEI);\n            e.setNodeid(savedNode.getId());\n            e.setInterface(ipAddress);\n            e.setService(\"ICMP\");\n            e.setService(\"SNMP\");\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n        } catch (EventProxyException ex) {\n            throw new NodeProvisionException(\"Unable to send node events\", ex);\n        }\n\n        return true;\n    }","commit_id":"9e2527ef49e8f8ca19ff060171e282f71a9310ec","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Transactional\n    public boolean provisionNode(String foreignSource, String foreignId, String nodeLabel, String ipAddress,\n            String[] categories, String snmpCommunity, String snmpVersion,\n            String deviceUsername, String devicePassword, String enablePassword,\n            String accessMethod, String autoEnable) throws NodeProvisionException {\n\n        if (log().isDebugEnabled()) {\n            log().debug(String.format(\"adding SNMP community %s (%s)\", snmpCommunity, snmpVersion));\n        }\n        // Set the SNMP community name (if necessary)\n        if (snmpCommunity != null && snmpVersion != null) {\n            try {\n                SnmpEventInfo info = new SnmpEventInfo();\n                info.setCommunityString(snmpCommunity);\n                info.setFirstIPAddress(ipAddress);\n                info.setVersion(snmpVersion);\n                m_snmpPeerFactory.define(info);\n                SnmpPeerFactory.saveCurrent();\n            } catch (Exception e) {\n                throw new NodeProvisionException(\"unable to add SNMP community information\", e);\n            }\n        }\n\n        log().debug(\"creating requisition node\");\n        // Create a requisition node based on the form input\n        RequisitionInterface reqIface = new RequisitionInterface();\n        reqIface.setIpAddr(ipAddress);\n        reqIface.setManaged(true);\n        reqIface.setSnmpPrimary(\"P\");\n        reqIface.setStatus(1);\n\n        reqIface.putMonitoredService(new RequisitionMonitoredService(\"ICMP\"));\n        reqIface.putMonitoredService(new RequisitionMonitoredService(\"SNMP\"));\n        \n        RequisitionNode reqNode = new RequisitionNode();\n        reqNode.setNodeLabel(nodeLabel);\n        reqNode.setForeignId(foreignId);\n        reqNode.putInterface(reqIface);\n\n        for (String category : categories) {\n            reqNode.putCategory(new RequisitionCategory(category));\n        }\n\n        if (deviceUsername != null) {\n            reqNode.putAsset(new RequisitionAsset(\"username\", deviceUsername));\n        }\n        if (devicePassword != null) {\n            reqNode.putAsset(new RequisitionAsset(\"password\", devicePassword));\n        }\n        if (enablePassword != null) {\n            reqNode.putAsset(new RequisitionAsset(\"enable\", enablePassword));\n        }\n        if (accessMethod != null) {\n            reqNode.putAsset(new RequisitionAsset(\"connection\", accessMethod));\n        }\n        if (autoEnable != null) {\n            reqNode.putAsset(new RequisitionAsset(\"autoenable\", autoEnable));\n        }\n\n        // Now save it to the requisition\n        try {\n            Requisition req = m_foreignSourceRepository.getRequisition(foreignSource);\n            req.putNode(reqNode);\n            log().debug(\"saving requisition node\");\n            m_foreignSourceRepository.save(req);\n        } catch (ForeignSourceRepositoryException e) {\n            throw new RuntimeException(\"unable to retrieve foreign source '\" + foreignSource + \"'\", e);\n        }\n        \n        log().debug(\"creating database node\");\n        // Create the basic node\n        \n        OnmsDistPoller dp = m_distPollerDao.get(\"localhost\");\n        OnmsNode node = new OnmsNode();\n        node.setDistPoller(dp);\n        node.setType(\"A\");\n        node.setForeignSource(foreignSource);\n        node.setForeignId(foreignId);\n        node.setLabel(nodeLabel);\n        \n        OnmsIpInterface iface = new OnmsIpInterface();\n        iface.setNode(node);\n        iface.setIpAddress(ipAddress);\n        iface.setIsManaged(\"M\");\n        iface.setIsSnmpPrimary(new PrimaryType('P'));\n        node.addIpInterface(iface);\n        \n        Set<OnmsMonitoredService> services = new TreeSet<OnmsMonitoredService>();\n        services.add(new OnmsMonitoredService(iface, getServiceType(\"ICMP\")));\n        services.add(new OnmsMonitoredService(iface, getServiceType(\"SNMP\")));\n        iface.setMonitoredServices(services);\n        \n        OnmsAssetRecord asset = new OnmsAssetRecord();\n        asset.setAutoenable(autoEnable);\n        asset.setConnection(accessMethod);\n        asset.setEnable(enablePassword);\n        asset.setUsername(deviceUsername);\n        asset.setPassword(devicePassword);\n        node.setAssetRecord(asset);\n        \n        log().debug(\"saving database node\");\n        m_nodeDao.save(node);\n        \n        node = m_nodeDao.findByForeignId(foreignSource, foreignId);\n        \n        try {\n            log().debug(\"sending event for new node ID \" + node.getNodeId());\n            Event e = new Event();\n            e.setUei(EventConstants.NODE_ADDED_EVENT_UEI);\n            e.setNodeid(node.getId());\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n            \n            e = new Event();\n            e.setUei(EventConstants.NODE_GAINED_INTERFACE_EVENT_UEI);\n            e.setNodeid(node.getId());\n            e.setInterface(ipAddress);\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n\n            e = new Event();\n            e.setUei(EventConstants.NODE_GAINED_SERVICE_EVENT_UEI);\n            e.setNodeid(node.getId());\n            e.setInterface(ipAddress);\n            e.setService(\"ICMP\");\n            e.setService(\"SNMP\");\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n        } catch (EventProxyException ex) {\n            throw new NodeProvisionException(\"Unable to send node events\", ex);\n        }\n\n        return true;\n    }","id":48991,"modified_method":"@Transactional\n    public boolean provisionNode(String foreignSource, String foreignId, String nodeLabel, String ipAddress,\n            String[] categories, String snmpCommunity, String snmpVersion,\n            String deviceUsername, String devicePassword, String enablePassword,\n            String accessMethod, String autoEnable) throws NodeProvisionException {\n\n        if (log().isDebugEnabled()) {\n            log().debug(String.format(\"adding SNMP community %s (%s)\", snmpCommunity, snmpVersion));\n        }\n        // Set the SNMP community name (if necessary)\n        if (snmpCommunity != null && snmpVersion != null) {\n            try {\n                SnmpEventInfo info = new SnmpEventInfo();\n                info.setCommunityString(snmpCommunity);\n                info.setFirstIPAddress(ipAddress);\n                info.setVersion(snmpVersion);\n                m_snmpPeerFactory.define(info);\n                SnmpPeerFactory.saveCurrent();\n            } catch (Exception e) {\n                throw new NodeProvisionException(\"unable to add SNMP community information\", e);\n            }\n        }\n\n        log().debug(\"creating requisition node\");\n        // Create a requisition node based on the form input\n        RequisitionInterface reqIface = new RequisitionInterface();\n        reqIface.setIpAddr(ipAddress);\n        reqIface.setManaged(true);\n        reqIface.setSnmpPrimary(\"P\");\n        reqIface.setStatus(1);\n\n        reqIface.putMonitoredService(new RequisitionMonitoredService(\"ICMP\"));\n        reqIface.putMonitoredService(new RequisitionMonitoredService(\"SNMP\"));\n        \n        RequisitionNode reqNode = new RequisitionNode();\n        reqNode.setNodeLabel(nodeLabel);\n        reqNode.setForeignId(foreignId);\n        reqNode.putInterface(reqIface);\n\n        for (String category : categories) {\n            reqNode.putCategory(new RequisitionCategory(category));\n        }\n\n        if (deviceUsername != null) {\n            reqNode.putAsset(new RequisitionAsset(\"username\", deviceUsername));\n        }\n        if (devicePassword != null) {\n            reqNode.putAsset(new RequisitionAsset(\"password\", devicePassword));\n        }\n        if (enablePassword != null) {\n            reqNode.putAsset(new RequisitionAsset(\"enable\", enablePassword));\n        }\n        if (accessMethod != null) {\n            reqNode.putAsset(new RequisitionAsset(\"connection\", accessMethod));\n        }\n        if (autoEnable != null) {\n            reqNode.putAsset(new RequisitionAsset(\"autoenable\", autoEnable));\n        }\n\n        // Now save it to the requisition\n        try {\n            Requisition req = m_foreignSourceRepository.getRequisition(foreignSource);\n            req.putNode(reqNode);\n            log().debug(\"saving requisition node\");\n            m_foreignSourceRepository.save(req);\n        } catch (ForeignSourceRepositoryException e) {\n            throw new RuntimeException(\"unable to retrieve foreign source '\" + foreignSource + \"'\", e);\n        }\n        \n        log().debug(\"creating database node\");\n        // Create the basic node\n        \n        OnmsDistPoller dp = m_distPollerDao.get(\"localhost\");\n        OnmsNode node = new OnmsNode(dp);\n        node.setType(\"A\");\n        node.setForeignSource(foreignSource);\n        node.setForeignId(foreignId);\n        node.setLabel(nodeLabel);\n        \n        node.getAssetRecord().setAutoenable(autoEnable);\n        node.getAssetRecord().setConnection(accessMethod);\n        node.getAssetRecord().setEnable(enablePassword);\n        node.getAssetRecord().setUsername(deviceUsername);\n        node.getAssetRecord().setPassword(devicePassword);\n        \n        OnmsIpInterface iface = new OnmsIpInterface(ipAddress, node);\n        iface.setIsManaged(\"M\");\n        iface.setIsSnmpPrimary(new PrimaryType('P'));\n\n        // these are automatically added to the interface by the constructor\n        new OnmsMonitoredService(iface, getServiceType(\"ICMP\"));\n        new OnmsMonitoredService(iface, getServiceType(\"SNMP\"));\n        \n        log().debug(\"saving database node\");\n        m_nodeDao.save(node);\n        \n        OnmsNode savedNode = m_nodeDao.findByForeignId(foreignSource, foreignId);\n        \n        Assert.notNull(savedNode, \"Failed to save node to database\");\n        \n        try {\n            log().debug(\"sending event for new node ID \" + savedNode.getId());\n            Event e = new Event();\n            e.setUei(EventConstants.NODE_ADDED_EVENT_UEI);\n            e.setNodeid(savedNode.getId());\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n            \n            e = new Event();\n            e.setUei(EventConstants.NODE_GAINED_INTERFACE_EVENT_UEI);\n            e.setNodeid(savedNode.getId());\n            e.setInterface(ipAddress);\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n\n            e = new Event();\n            e.setUei(EventConstants.NODE_GAINED_SERVICE_EVENT_UEI);\n            e.setNodeid(savedNode.getId());\n            e.setInterface(ipAddress);\n            e.setService(\"ICMP\");\n            e.setService(\"SNMP\");\n            e.setSource(getClass().getName());\n            e.setTime(EventConstants.formatToString(new java.util.Date()));\n            m_eventProxy.send(e);\n        } catch (EventProxyException ex) {\n            throw new NodeProvisionException(\"Unable to send node events\", ex);\n        }\n\n        return true;\n    }","commit_id":"f37b49ff0c2d7d06b617b75e49ea181ad6242c52","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test(timeout = 300000)\n  public void testReplayCmd() throws Exception {\n    LOG.info(\"testReplayCmd\");\n    Configuration curConf = HBaseConfiguration.create();\n    curConf.setBoolean(HConstants.DISTRIBUTED_LOG_REPLAY_KEY, true);\n    startCluster(NUM_RS, curConf);\n    final int NUM_REGIONS_TO_CREATE = 40;\n    // turn off load balancing to prevent regions from moving around otherwise\n    // they will consume recovered.edits\n    master.balanceSwitch(false);\n\n    List<RegionServerThread> rsts = cluster.getLiveRegionServerThreads();\n    final ZooKeeperWatcher zkw = new ZooKeeperWatcher(conf, \"table-creation\", null);\n    HTable ht = installTable(zkw, \"table\", \"family\", NUM_REGIONS_TO_CREATE);\n\n    List<HRegionInfo> regions = null;\n    HRegionServer hrs = null;\n    for (int i = 0; i < NUM_RS; i++) {\n      boolean isCarryingMeta = false;\n      hrs = rsts.get(i).getRegionServer();\n      regions = ProtobufUtil.getOnlineRegions(hrs);\n      for (HRegionInfo region : regions) {\n        if (region.isMetaRegion()) {\n          isCarryingMeta = true;\n          break;\n        }\n      }\n      if (isCarryingMeta) {\n        continue;\n      }\n      break;\n    }\n\n    this.prepareData(ht, Bytes.toBytes(\"family\"), Bytes.toBytes(\"c1\"));\n    String originalCheckSum = TEST_UTIL.checksumRows(ht);\n    \n    // abort RA and trigger replay\n    abortRSAndWaitForRecovery(hrs, zkw, NUM_REGIONS_TO_CREATE);\n\n    assertEquals(\"Data should remain after reopening of regions\", originalCheckSum,\n      TEST_UTIL.checksumRows(ht));\n\n    ht.close();\n  }","id":48992,"modified_method":"@Test(timeout = 300000)\n  public void testReplayCmd() throws Exception {\n    LOG.info(\"testReplayCmd\");\n    Configuration curConf = HBaseConfiguration.create();\n    curConf.setBoolean(HConstants.DISTRIBUTED_LOG_REPLAY_KEY, true);\n    startCluster(NUM_RS, curConf);\n    final int NUM_REGIONS_TO_CREATE = 40;\n    // turn off load balancing to prevent regions from moving around otherwise\n    // they will consume recovered.edits\n    master.balanceSwitch(false);\n\n    List<RegionServerThread> rsts = cluster.getLiveRegionServerThreads();\n    final ZooKeeperWatcher zkw = new ZooKeeperWatcher(conf, \"table-creation\", null);\n    HTable ht = installTable(zkw, \"table\", \"family\", NUM_REGIONS_TO_CREATE);\n\n    List<HRegionInfo> regions = null;\n    HRegionServer hrs = null;\n    for (int i = 0; i < NUM_RS; i++) {\n      boolean isCarryingMeta = false;\n      hrs = rsts.get(i).getRegionServer();\n      regions = ProtobufUtil.getOnlineRegions(hrs);\n      for (HRegionInfo region : regions) {\n        if (region.isMetaRegion()) {\n          isCarryingMeta = true;\n          break;\n        }\n      }\n      if (isCarryingMeta) {\n        continue;\n      }\n      if (regions.size() > 0) break;\n    }\n\n    this.prepareData(ht, Bytes.toBytes(\"family\"), Bytes.toBytes(\"c1\"));\n    String originalCheckSum = TEST_UTIL.checksumRows(ht);\n    \n    // abort RA and trigger replay\n    abortRSAndWaitForRecovery(hrs, zkw, NUM_REGIONS_TO_CREATE);\n\n    assertEquals(\"Data should remain after reopening of regions\", originalCheckSum,\n      TEST_UTIL.checksumRows(ht));\n\n    ht.close();\n    zkw.close();\n  }","commit_id":"4a6de45f7655363fc8a0bf656d282a0ae1c73aff","url":"https://github.com/apache/hbase"},{"original_method":"@Test(timeout = 300000)\n  public void testLogReplayTwoSequentialRSDown() throws Exception {\n    LOG.info(\"testRecoveredEditsReplayTwoSequentialRSDown\");\n    Configuration curConf = HBaseConfiguration.create();\n    curConf.setBoolean(HConstants.DISTRIBUTED_LOG_REPLAY_KEY, true);\n    startCluster(NUM_RS, curConf);\n    final int NUM_REGIONS_TO_CREATE = 40;\n    final int NUM_LOG_LINES = 1000;\n    // turn off load balancing to prevent regions from moving around otherwise\n    // they will consume recovered.edits\n    master.balanceSwitch(false);\n\n    List<RegionServerThread> rsts = cluster.getLiveRegionServerThreads();\n    final ZooKeeperWatcher zkw = new ZooKeeperWatcher(conf, \"table-creation\", null);\n    HTable ht = installTable(zkw, \"table\", \"family\", NUM_REGIONS_TO_CREATE);\n\n    List<HRegionInfo> regions = null;\n    HRegionServer hrs1 = rsts.get(0).getRegionServer();\n    regions = ProtobufUtil.getOnlineRegions(hrs1);\n\n    makeHLog(hrs1.getWAL(), regions, \"table\", \"family\", NUM_LOG_LINES, 100);\n\n    // abort RS1\n    LOG.info(\"Aborting region server: \" + hrs1.getServerName());\n    hrs1.abort(\"testing\");\n\n    // wait for abort completes\n    TEST_UTIL.waitFor(120000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (cluster.getLiveRegionServerThreads().size() <= (NUM_RS - 1));\n      }\n    });\n\n    // wait for regions come online\n    TEST_UTIL.waitFor(180000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (getAllOnlineRegions(cluster).size() >= (NUM_REGIONS_TO_CREATE + 1));\n      }\n    });\n\n    // sleep a little bit in order to interrupt recovering in the middle\n    Thread.sleep(300);\n    // abort second region server\n    rsts = cluster.getLiveRegionServerThreads();\n    HRegionServer hrs2 = rsts.get(0).getRegionServer();\n    LOG.info(\"Aborting one more region server: \" + hrs2.getServerName());\n    hrs2.abort(\"testing\");\n\n    // wait for abort completes\n    TEST_UTIL.waitFor(120000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (cluster.getLiveRegionServerThreads().size() <= (NUM_RS - 2));\n      }\n    });\n\n    // wait for regions come online\n    TEST_UTIL.waitFor(180000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (getAllOnlineRegions(cluster).size() >= (NUM_REGIONS_TO_CREATE + 1));\n      }\n    });\n\n    // wait for all regions are fully recovered\n    TEST_UTIL.waitFor(180000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        List<String> recoveringRegions = zkw.getRecoverableZooKeeper().getChildren(\n          zkw.recoveringRegionsZNode, false);\n        return (recoveringRegions != null && recoveringRegions.size() == 0);\n      }\n    });\n\n    assertEquals(NUM_LOG_LINES, TEST_UTIL.countRows(ht));\n    ht.close();\n  }","id":48993,"modified_method":"@Test(timeout = 300000)\n  public void testLogReplayTwoSequentialRSDown() throws Exception {\n    LOG.info(\"testRecoveredEditsReplayTwoSequentialRSDown\");\n    Configuration curConf = HBaseConfiguration.create();\n    curConf.setBoolean(HConstants.DISTRIBUTED_LOG_REPLAY_KEY, true);\n    startCluster(NUM_RS, curConf);\n    final int NUM_REGIONS_TO_CREATE = 40;\n    final int NUM_LOG_LINES = 1000;\n    // turn off load balancing to prevent regions from moving around otherwise\n    // they will consume recovered.edits\n    master.balanceSwitch(false);\n\n    List<RegionServerThread> rsts = cluster.getLiveRegionServerThreads();\n    final ZooKeeperWatcher zkw = new ZooKeeperWatcher(conf, \"table-creation\", null);\n    HTable ht = installTable(zkw, \"table\", \"family\", NUM_REGIONS_TO_CREATE);\n\n    List<HRegionInfo> regions = null;\n    HRegionServer hrs1 = rsts.get(0).getRegionServer();\n    regions = ProtobufUtil.getOnlineRegions(hrs1);\n\n    makeHLog(hrs1.getWAL(), regions, \"table\", \"family\", NUM_LOG_LINES, 100);\n\n    // abort RS1\n    LOG.info(\"Aborting region server: \" + hrs1.getServerName());\n    hrs1.abort(\"testing\");\n\n    // wait for abort completes\n    TEST_UTIL.waitFor(120000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (cluster.getLiveRegionServerThreads().size() <= (NUM_RS - 1));\n      }\n    });\n\n    // wait for regions come online\n    TEST_UTIL.waitFor(180000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (getAllOnlineRegions(cluster).size() >= (NUM_REGIONS_TO_CREATE + 1));\n      }\n    });\n\n    // sleep a little bit in order to interrupt recovering in the middle\n    Thread.sleep(300);\n    // abort second region server\n    rsts = cluster.getLiveRegionServerThreads();\n    HRegionServer hrs2 = rsts.get(0).getRegionServer();\n    LOG.info(\"Aborting one more region server: \" + hrs2.getServerName());\n    hrs2.abort(\"testing\");\n\n    // wait for abort completes\n    TEST_UTIL.waitFor(120000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (cluster.getLiveRegionServerThreads().size() <= (NUM_RS - 2));\n      }\n    });\n\n    // wait for regions come online\n    TEST_UTIL.waitFor(180000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (getAllOnlineRegions(cluster).size() >= (NUM_REGIONS_TO_CREATE + 1));\n      }\n    });\n\n    // wait for all regions are fully recovered\n    TEST_UTIL.waitFor(180000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        List<String> recoveringRegions = zkw.getRecoverableZooKeeper().getChildren(\n          zkw.recoveringRegionsZNode, false);\n        return (recoveringRegions != null && recoveringRegions.size() == 0);\n      }\n    });\n\n    assertEquals(NUM_LOG_LINES, TEST_UTIL.countRows(ht));\n    ht.close();\n    zkw.close();\n  }","commit_id":"4a6de45f7655363fc8a0bf656d282a0ae1c73aff","url":"https://github.com/apache/hbase"},{"original_method":"@Test(timeout = 300000)\n  public void testDisallowWritesInRecovering() throws Exception {\n    LOG.info(\"testDisallowWritesInRecovering\");\n    Configuration curConf = HBaseConfiguration.create();\n    curConf.setBoolean(HConstants.DISTRIBUTED_LOG_REPLAY_KEY, true);\n    curConf.setInt(HConstants.HBASE_CLIENT_RETRIES_NUMBER, 1);\n    curConf.setBoolean(HConstants.DISALLOW_WRITES_IN_RECOVERING, true);\n    startCluster(NUM_RS, curConf);\n    final int NUM_REGIONS_TO_CREATE = 40;\n    final int NUM_LOG_LINES = 20000;\n    // turn off load balancing to prevent regions from moving around otherwise\n    // they will consume recovered.edits\n    master.balanceSwitch(false);\n\n    List<RegionServerThread> rsts = cluster.getLiveRegionServerThreads();\n    final ZooKeeperWatcher zkw = new ZooKeeperWatcher(conf, \"table-creation\", null);\n    HTable ht = installTable(zkw, \"table\", \"family\", NUM_REGIONS_TO_CREATE);\n\n    List<HRegionInfo> regions = null;\n    HRegionServer hrs = null;\n    for (int i = 0; i < NUM_RS; i++) {\n      boolean isCarryingMeta = false;\n      hrs = rsts.get(i).getRegionServer();\n      regions = ProtobufUtil.getOnlineRegions(hrs);\n      for (HRegionInfo region : regions) {\n        if (region.isMetaRegion()) {\n          isCarryingMeta = true;\n          break;\n        }\n      }\n      if (isCarryingMeta) {\n        continue;\n      }\n      break;\n    }\n\n    LOG.info(\"#regions = \" + regions.size());\n    Iterator<HRegionInfo> it = regions.iterator();\n    while (it.hasNext()) {\n      HRegionInfo region = it.next();\n      if (region.isMetaTable()) {\n        it.remove();\n      }\n    }\n    makeHLog(hrs.getWAL(), regions, \"table\", \"family\", NUM_LOG_LINES, 100);\n    \n    // abort RS\n    LOG.info(\"Aborting region server: \" + hrs.getServerName());\n    hrs.abort(\"testing\");\n    \n    // wait for abort completes\n    TEST_UTIL.waitFor(120000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (cluster.getLiveRegionServerThreads().size() <= (NUM_RS - 1));\n      }\n    });\n    \n    // wait for regions come online\n    TEST_UTIL.waitFor(180000, 100, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (getAllOnlineRegions(cluster).size() >= (NUM_REGIONS_TO_CREATE + 1));\n      }\n    });\n\n    try {\n      HRegionInfo region = regions.get(0);\n      byte[] key = region.getStartKey();\n      if (key == null || key.length == 0) {\n        key = new byte[] { 0, 0, 0, 0, 1 };\n      }\n      ht.setAutoFlush(true);\n      Put put = new Put(key);\n      put.add(Bytes.toBytes(\"family\"), Bytes.toBytes(\"c1\"), new byte[]{'b'});\n      ht.put(put);\n    } catch (IOException ioe) {\n      Assert.assertTrue(ioe instanceof RetriesExhaustedWithDetailsException);\n      RetriesExhaustedWithDetailsException re = (RetriesExhaustedWithDetailsException) ioe;\n      Assert.assertTrue(re.getCause(0) instanceof RegionInRecoveryException);\n    }\n\n    ht.close();\n  }","id":48994,"modified_method":"@Test(timeout = 300000)\n  public void testDisallowWritesInRecovering() throws Exception {\n    LOG.info(\"testDisallowWritesInRecovering\");\n    Configuration curConf = HBaseConfiguration.create();\n    curConf.setBoolean(HConstants.DISTRIBUTED_LOG_REPLAY_KEY, true);\n    curConf.setInt(HConstants.HBASE_CLIENT_RETRIES_NUMBER, 1);\n    curConf.setBoolean(HConstants.DISALLOW_WRITES_IN_RECOVERING, true);\n    startCluster(NUM_RS, curConf);\n    final int NUM_REGIONS_TO_CREATE = 40;\n    final int NUM_LOG_LINES = 20000;\n    // turn off load balancing to prevent regions from moving around otherwise\n    // they will consume recovered.edits\n    master.balanceSwitch(false);\n\n    List<RegionServerThread> rsts = cluster.getLiveRegionServerThreads();\n    final ZooKeeperWatcher zkw = new ZooKeeperWatcher(conf, \"table-creation\", null);\n    HTable ht = installTable(zkw, \"table\", \"family\", NUM_REGIONS_TO_CREATE);\n\n    HRegionServer hrs = findRSToKill(false, \"table\");\n    List<HRegionInfo> regions = ProtobufUtil.getOnlineRegions(hrs);\n    makeHLog(hrs.getWAL(), regions, \"table\", \"family\", NUM_LOG_LINES, 100);\n    \n    // abort RS\n    LOG.info(\"Aborting region server: \" + hrs.getServerName());\n    hrs.abort(\"testing\");\n    \n    // wait for abort completes\n    TEST_UTIL.waitFor(120000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (cluster.getLiveRegionServerThreads().size() <= (NUM_RS - 1));\n      }\n    });\n    \n    // wait for regions come online\n    TEST_UTIL.waitFor(180000, 100, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (getAllOnlineRegions(cluster).size() >= (NUM_REGIONS_TO_CREATE + 1));\n      }\n    });\n\n    try {\n      HRegionInfo region = regions.get(0);\n      byte[] key = region.getStartKey();\n      if (key == null || key.length == 0) {\n        key = new byte[] { 0, 0, 0, 0, 1 };\n      }\n      ht.setAutoFlush(true);\n      Put put = new Put(key);\n      put.add(Bytes.toBytes(\"family\"), Bytes.toBytes(\"c1\"), new byte[]{'b'});\n      ht.put(put);\n    } catch (IOException ioe) {\n      Assert.assertTrue(ioe instanceof RetriesExhaustedWithDetailsException);\n      RetriesExhaustedWithDetailsException re = (RetriesExhaustedWithDetailsException) ioe;\n      Assert.assertTrue(re.getCause(0) instanceof RegionInRecoveryException);\n    }\n\n    ht.close();\n    zkw.close();\n  }","commit_id":"4a6de45f7655363fc8a0bf656d282a0ae1c73aff","url":"https://github.com/apache/hbase"},{"original_method":"@Test(timeout = 300000)\n  public void testMarkRegionsRecoveringInZK() throws Exception {\n    LOG.info(\"testMarkRegionsRecoveringInZK\");\n    Configuration curConf = HBaseConfiguration.create();\n    curConf.setBoolean(HConstants.DISTRIBUTED_LOG_REPLAY_KEY, true);\n    startCluster(NUM_RS, curConf);\n    master.balanceSwitch(false);\n    List<RegionServerThread> rsts = cluster.getLiveRegionServerThreads();\n    final ZooKeeperWatcher zkw = master.getZooKeeperWatcher();\n    HTable ht = installTable(zkw, \"table\", \"family\", 40);\n    final SplitLogManager slm = master.getMasterFileSystem().splitLogManager;\n\n    Set<HRegionInfo> regionSet = new HashSet<HRegionInfo>();\n    HRegionInfo region = null;\n    HRegionServer hrs = null;\n    ServerName firstFailedServer = null;\n    ServerName secondFailedServer = null;\n    for (int i = 0; i < NUM_RS; i++) {\n      hrs = rsts.get(i).getRegionServer();\n      List<HRegionInfo> regions = ProtobufUtil.getOnlineRegions(hrs);\n      if (regions.isEmpty()) continue;\n      region = regions.get(0);\n      regionSet.add(region);\n      firstFailedServer = hrs.getServerName();\n      secondFailedServer = rsts.get((i + 1) % NUM_RS).getRegionServer().getServerName();\n      break;\n    }\n\n    slm.markRegionsRecoveringInZK(firstFailedServer, regionSet);\n    slm.markRegionsRecoveringInZK(secondFailedServer, regionSet);\n\n    List<String> recoveringRegions = ZKUtil.listChildrenNoWatch(zkw,\n      ZKUtil.joinZNode(zkw.recoveringRegionsZNode, region.getEncodedName()));\n\n    assertEquals(recoveringRegions.size(), 2);\n\n    // wait for splitLogWorker to mark them up because there is no WAL files recorded in ZK\n    final HRegionServer tmphrs = hrs;\n    TEST_UTIL.waitFor(60000, 1000, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (tmphrs.getRecoveringRegions().size() == 0);\n      }\n    });\n    ht.close();\n  }","id":48995,"modified_method":"@Test(timeout = 300000)\n  public void testMarkRegionsRecoveringInZK() throws Exception {\n    LOG.info(\"testMarkRegionsRecoveringInZK\");\n    Configuration curConf = HBaseConfiguration.create();\n    curConf.setBoolean(HConstants.DISTRIBUTED_LOG_REPLAY_KEY, true);\n    startCluster(NUM_RS, curConf);\n    master.balanceSwitch(false);\n    List<RegionServerThread> rsts = cluster.getLiveRegionServerThreads();\n    final ZooKeeperWatcher zkw = master.getZooKeeperWatcher();\n    HTable ht = installTable(zkw, \"table\", \"family\", 40);\n    final SplitLogManager slm = master.getMasterFileSystem().splitLogManager;\n\n    Set<HRegionInfo> regionSet = new HashSet<HRegionInfo>();\n    HRegionInfo region = null;\n    HRegionServer hrs = null;\n    ServerName firstFailedServer = null;\n    ServerName secondFailedServer = null;\n    for (int i = 0; i < NUM_RS; i++) {\n      hrs = rsts.get(i).getRegionServer();\n      List<HRegionInfo> regions = ProtobufUtil.getOnlineRegions(hrs);\n      if (regions.isEmpty()) continue;\n      region = regions.get(0);\n      regionSet.add(region);\n      firstFailedServer = hrs.getServerName();\n      secondFailedServer = rsts.get((i + 1) % NUM_RS).getRegionServer().getServerName();\n      break;\n    }\n\n    slm.markRegionsRecoveringInZK(firstFailedServer, regionSet);\n    slm.markRegionsRecoveringInZK(secondFailedServer, regionSet);\n\n    List<String> recoveringRegions = ZKUtil.listChildrenNoWatch(zkw,\n      ZKUtil.joinZNode(zkw.recoveringRegionsZNode, region.getEncodedName()));\n\n    assertEquals(recoveringRegions.size(), 2);\n\n    // wait for splitLogWorker to mark them up because there is no WAL files recorded in ZK\n    final HRegionServer tmphrs = hrs;\n    TEST_UTIL.waitFor(60000, 1000, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (tmphrs.getRecoveringRegions().size() == 0);\n      }\n    });\n    ht.close();\n    zkw.close();\n  }","commit_id":"4a6de45f7655363fc8a0bf656d282a0ae1c73aff","url":"https://github.com/apache/hbase"},{"original_method":"@Test (timeout=300000)\n  public void testThreeRSAbort() throws Exception {\n    LOG.info(\"testThreeRSAbort\");\n    final int NUM_REGIONS_TO_CREATE = 40;\n    final int NUM_ROWS_PER_REGION = 100;\n\n    startCluster(NUM_RS); // NUM_RS=6.\n\n    final ZooKeeperWatcher zkw = new ZooKeeperWatcher(conf,\n        \"distributed log splitting test\", null);\n\n    HTable ht = installTable(zkw, \"table\", \"family\", NUM_REGIONS_TO_CREATE);\n    populateDataInTable(NUM_ROWS_PER_REGION, \"family\");\n\n\n    List<RegionServerThread> rsts = cluster.getLiveRegionServerThreads();\n    assertEquals(NUM_RS, rsts.size());\n    rsts.get(0).getRegionServer().abort(\"testing\");\n    rsts.get(1).getRegionServer().abort(\"testing\");\n    rsts.get(2).getRegionServer().abort(\"testing\");\n\n    long start = EnvironmentEdgeManager.currentTimeMillis();\n    while (cluster.getLiveRegionServerThreads().size() > (NUM_RS - 3)) {\n      if (EnvironmentEdgeManager.currentTimeMillis() - start > 60000) {\n        assertTrue(false);\n      }\n      Thread.sleep(200);\n    }\n\n    start = EnvironmentEdgeManager.currentTimeMillis();\n    while (getAllOnlineRegions(cluster).size() < (NUM_REGIONS_TO_CREATE + 1)) {\n      if (EnvironmentEdgeManager.currentTimeMillis() - start > 60000) {\n        assertTrue(\"Timedout\", false);\n      }\n      Thread.sleep(200);\n    }\n\n    // wait for all regions are fully recovered\n    TEST_UTIL.waitFor(180000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        List<String> recoveringRegions = zkw.getRecoverableZooKeeper().getChildren(\n          zkw.recoveringRegionsZNode, false);\n        return (recoveringRegions != null && recoveringRegions.size() == 0);\n      }\n    });\n\n    assertEquals(NUM_REGIONS_TO_CREATE * NUM_ROWS_PER_REGION,\n        TEST_UTIL.countRows(ht));\n    ht.close();\n  }","id":48996,"modified_method":"@Test (timeout=300000)\n  public void testThreeRSAbort() throws Exception {\n    LOG.info(\"testThreeRSAbort\");\n    final int NUM_REGIONS_TO_CREATE = 40;\n    final int NUM_ROWS_PER_REGION = 100;\n\n    startCluster(NUM_RS); // NUM_RS=6.\n\n    final ZooKeeperWatcher zkw = new ZooKeeperWatcher(conf,\n        \"distributed log splitting test\", null);\n\n    HTable ht = installTable(zkw, \"table\", \"family\", NUM_REGIONS_TO_CREATE);\n    populateDataInTable(NUM_ROWS_PER_REGION, \"family\");\n\n\n    List<RegionServerThread> rsts = cluster.getLiveRegionServerThreads();\n    assertEquals(NUM_RS, rsts.size());\n    rsts.get(0).getRegionServer().abort(\"testing\");\n    rsts.get(1).getRegionServer().abort(\"testing\");\n    rsts.get(2).getRegionServer().abort(\"testing\");\n\n    long start = EnvironmentEdgeManager.currentTimeMillis();\n    while (cluster.getLiveRegionServerThreads().size() > (NUM_RS - 3)) {\n      if (EnvironmentEdgeManager.currentTimeMillis() - start > 60000) {\n        assertTrue(false);\n      }\n      Thread.sleep(200);\n    }\n\n    start = EnvironmentEdgeManager.currentTimeMillis();\n    while (getAllOnlineRegions(cluster).size() < (NUM_REGIONS_TO_CREATE + 1)) {\n      if (EnvironmentEdgeManager.currentTimeMillis() - start > 60000) {\n        assertTrue(\"Timedout\", false);\n      }\n      Thread.sleep(200);\n    }\n\n    // wait for all regions are fully recovered\n    TEST_UTIL.waitFor(180000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        List<String> recoveringRegions = zkw.getRecoverableZooKeeper().getChildren(\n          zkw.recoveringRegionsZNode, false);\n        return (recoveringRegions != null && recoveringRegions.size() == 0);\n      }\n    });\n\n    assertEquals(NUM_REGIONS_TO_CREATE * NUM_ROWS_PER_REGION,\n        TEST_UTIL.countRows(ht));\n    ht.close();\n    zkw.close();\n  }","commit_id":"4a6de45f7655363fc8a0bf656d282a0ae1c73aff","url":"https://github.com/apache/hbase"},{"original_method":"public void makeHLog(HLog log, List<HRegionInfo> regions, String tname, String fname,\n      int num_edits, int edit_size, boolean closeLog) throws IOException {\n\n    // remove root and meta region\n    regions.remove(HRegionInfo.FIRST_META_REGIONINFO);\n    byte[] table = Bytes.toBytes(tname);\n    HTableDescriptor htd = new HTableDescriptor(tname);\n    byte[] value = new byte[edit_size];\n\n    List<HRegionInfo> hris = new ArrayList<HRegionInfo>();\n    for (HRegionInfo region : regions) {\n      if (!region.getTableNameAsString().equalsIgnoreCase(tname)) {\n        continue;\n      }\n      hris.add(region);\n    }\n    for (int i = 0; i < edit_size; i++) {\n      value[i] = (byte) ('a' + (i % 26));\n    }\n    int n = hris.size();\n    int[] counts = new int[n];\n    if (n > 0) {\n      for (int i = 0; i < num_edits; i += 1) {\n        WALEdit e = new WALEdit();\n        HRegionInfo curRegionInfo = hris.get(i % n);\n        byte[] startRow = curRegionInfo.getStartKey();\n        if (startRow == null || startRow.length == 0) {\n          startRow = new byte[] { 0, 0, 0, 0, 1 };\n        }\n        byte[] row = Bytes.incrementBytes(startRow, counts[i % n]);\n        row = Arrays.copyOfRange(row, 3, 8); // use last 5 bytes because\n                                             // HBaseTestingUtility.createMultiRegions use 5 bytes\n                                             // key\n        byte[] family = Bytes.toBytes(fname);\n        byte[] qualifier = Bytes.toBytes(\"c\" + Integer.toString(i));\n        e.add(new KeyValue(row, family, qualifier, System.currentTimeMillis(), value));\n        log.append(curRegionInfo, table, e, System.currentTimeMillis(), htd);\n        counts[i % n] += 1;\n      }\n    }\n    log.sync();\n    if(closeLog) {\n      log.close();\n    }\n    for (int i = 0; i < n; i++) {\n      LOG.info(\"region \" + hris.get(i).getRegionNameAsString() + \" has \" + counts[i] + \" edits\");\n    }\n    return;\n  }","id":48997,"modified_method":"public void makeHLog(HLog log, List<HRegionInfo> regions, String tname, String fname,\n      int num_edits, int edit_size, boolean closeLog) throws IOException {\n\n    // remove root and meta region\n    regions.remove(HRegionInfo.FIRST_META_REGIONINFO);\n    byte[] table = Bytes.toBytes(tname);\n    HTableDescriptor htd = new HTableDescriptor(tname);\n    byte[] value = new byte[edit_size];\n\n    List<HRegionInfo> hris = new ArrayList<HRegionInfo>();\n    for (HRegionInfo region : regions) {\n      if (!region.getTableNameAsString().equalsIgnoreCase(tname)) {\n        continue;\n      }\n      hris.add(region);\n    }\n    LOG.info(\"Creating wal edits across \" + hris.size() + \" regions.\");\n    for (int i = 0; i < edit_size; i++) {\n      value[i] = (byte) ('a' + (i % 26));\n    }\n    int n = hris.size();\n    int[] counts = new int[n];\n    if (n > 0) {\n      for (int i = 0; i < num_edits; i += 1) {\n        WALEdit e = new WALEdit();\n        HRegionInfo curRegionInfo = hris.get(i % n);\n        byte[] startRow = curRegionInfo.getStartKey();\n        if (startRow == null || startRow.length == 0) {\n          startRow = new byte[] { 0, 0, 0, 0, 1 };\n        }\n        byte[] row = Bytes.incrementBytes(startRow, counts[i % n]);\n        row = Arrays.copyOfRange(row, 3, 8); // use last 5 bytes because\n                                             // HBaseTestingUtility.createMultiRegions use 5 bytes\n                                             // key\n        byte[] family = Bytes.toBytes(fname);\n        byte[] qualifier = Bytes.toBytes(\"c\" + Integer.toString(i));\n        e.add(new KeyValue(row, family, qualifier, System.currentTimeMillis(), value));\n        log.append(curRegionInfo, table, e, System.currentTimeMillis(), htd);\n        counts[i % n] += 1;\n      }\n    }\n    log.sync();\n    if(closeLog) {\n      log.close();\n    }\n    for (int i = 0; i < n; i++) {\n      LOG.info(\"region \" + hris.get(i).getRegionNameAsString() + \" has \" + counts[i] + \" edits\");\n    }\n    return;\n  }","commit_id":"4a6de45f7655363fc8a0bf656d282a0ae1c73aff","url":"https://github.com/apache/hbase"},{"original_method":"@Test(timeout = 300000)\n  public void testMasterStartsUpWithLogSplittingWork() throws Exception {\n    LOG.info(\"testMasterStartsUpWithLogSplittingWork\");\n    Configuration curConf = HBaseConfiguration.create();\n    curConf.setBoolean(HConstants.DISTRIBUTED_LOG_REPLAY_KEY, false);\n    curConf.setInt(ServerManager.WAIT_ON_REGIONSERVERS_MINTOSTART, NUM_RS - 1);\n    startCluster(NUM_RS, curConf);\n\n    final int NUM_REGIONS_TO_CREATE = 40;\n    final int NUM_LOG_LINES = 1000;\n    // turn off load balancing to prevent regions from moving around otherwise\n    // they will consume recovered.edits\n    master.balanceSwitch(false);\n\n    List<RegionServerThread> rsts = cluster.getLiveRegionServerThreads();\n    final ZooKeeperWatcher zkw = new ZooKeeperWatcher(conf, \"table-creation\", null);\n    HTable ht = installTable(zkw, \"table\", \"family\", NUM_REGIONS_TO_CREATE);\n\n    List<HRegionInfo> regions = null;\n    HRegionServer hrs = null;\n    for (int i = 0; i < NUM_RS; i++) {\n      boolean isCarryingMeta = false;\n      hrs = rsts.get(i).getRegionServer();\n      regions = ProtobufUtil.getOnlineRegions(hrs);\n      for (HRegionInfo region : regions) {\n        if (region.isMetaRegion()) {\n          isCarryingMeta = true;\n          break;\n        }\n      }\n      if (isCarryingMeta) {\n        continue;\n      }\n      break;\n    }\n\n    LOG.info(\"#regions = \" + regions.size());\n    Iterator<HRegionInfo> it = regions.iterator();\n    while (it.hasNext()) {\n      HRegionInfo region = it.next();\n      if (region.isMetaTable()) {\n        it.remove();\n      }\n    }\n    makeHLog(hrs.getWAL(), regions, \"table\", \"family\", NUM_LOG_LINES, 100);\n\n    // abort master\n    abortMaster(cluster);\n\n    // abort RS\n    LOG.info(\"Aborting region server: \" + hrs.getServerName());\n    hrs.abort(\"testing\");\n\n    // wait for abort completes\n    TEST_UTIL.waitFor(120000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (cluster.getLiveRegionServerThreads().size() <= (NUM_RS - 1));\n      }\n    });\n\n    Thread.sleep(2000);\n    LOG.info(\"Current Open Regions:\" + getAllOnlineRegions(cluster).size());\n    \n    startMasterAndWaitUntilLogSplit(cluster);\n    \n    // wait for abort completes\n    TEST_UTIL.waitFor(120000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (getAllOnlineRegions(cluster).size() >= (NUM_REGIONS_TO_CREATE + 1));\n      }\n    });\n\n    LOG.info(\"Current Open Regions After Master Node Starts Up:\"\n        + getAllOnlineRegions(cluster).size());\n\n    assertEquals(NUM_LOG_LINES, TEST_UTIL.countRows(ht));\n\n    ht.close();\n  }","id":48998,"modified_method":"@Test(timeout = 300000)\n  public void testMasterStartsUpWithLogSplittingWork() throws Exception {\n    LOG.info(\"testMasterStartsUpWithLogSplittingWork\");\n    Configuration curConf = HBaseConfiguration.create();\n    curConf.setBoolean(HConstants.DISTRIBUTED_LOG_REPLAY_KEY, false);\n    curConf.setInt(ServerManager.WAIT_ON_REGIONSERVERS_MINTOSTART, NUM_RS - 1);\n    startCluster(NUM_RS, curConf);\n\n    final int NUM_REGIONS_TO_CREATE = 40;\n    final int NUM_LOG_LINES = 1000;\n    // turn off load balancing to prevent regions from moving around otherwise\n    // they will consume recovered.edits\n    master.balanceSwitch(false);\n\n    List<RegionServerThread> rsts = cluster.getLiveRegionServerThreads();\n    final ZooKeeperWatcher zkw = new ZooKeeperWatcher(conf, \"table-creation\", null);\n    HTable ht = installTable(zkw, \"table\", \"family\", NUM_REGIONS_TO_CREATE);\n\n    HRegionServer hrs = findRSToKill(false, \"table\");\n    List<HRegionInfo> regions = ProtobufUtil.getOnlineRegions(hrs);\n    makeHLog(hrs.getWAL(), regions, \"table\", \"family\", NUM_LOG_LINES, 100);\n\n    // abort master\n    abortMaster(cluster);\n\n    // abort RS\n    LOG.info(\"Aborting region server: \" + hrs.getServerName());\n    hrs.abort(\"testing\");\n\n    // wait for abort completes\n    TEST_UTIL.waitFor(120000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (cluster.getLiveRegionServerThreads().size() <= (NUM_RS - 1));\n      }\n    });\n\n    Thread.sleep(2000);\n    LOG.info(\"Current Open Regions:\" + getAllOnlineRegions(cluster).size());\n    \n    startMasterAndWaitUntilLogSplit(cluster);\n    \n    // wait for abort completes\n    TEST_UTIL.waitFor(120000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (getAllOnlineRegions(cluster).size() >= (NUM_REGIONS_TO_CREATE + 1));\n      }\n    });\n\n    LOG.info(\"Current Open Regions After Master Node Starts Up:\"\n        + getAllOnlineRegions(cluster).size());\n\n    assertEquals(NUM_LOG_LINES, TEST_UTIL.countRows(ht));\n\n    ht.close();\n    zkw.close();\n  }","commit_id":"4a6de45f7655363fc8a0bf656d282a0ae1c73aff","url":"https://github.com/apache/hbase"},{"original_method":"@Test(timeout = 300000)\n  public void testMasterStartsUpWithLogReplayWork() throws Exception {\n    LOG.info(\"testMasterStartsUpWithLogReplayWork\");\n    Configuration curConf = HBaseConfiguration.create();\n    curConf.setBoolean(HConstants.DISTRIBUTED_LOG_REPLAY_KEY, true);\n    curConf.setInt(ServerManager.WAIT_ON_REGIONSERVERS_MINTOSTART, NUM_RS - 1);\n    startCluster(NUM_RS, curConf);\n\n    final int NUM_REGIONS_TO_CREATE = 40;\n    final int NUM_LOG_LINES = 1000;\n    // turn off load balancing to prevent regions from moving around otherwise\n    // they will consume recovered.edits\n    master.balanceSwitch(false);\n\n    List<RegionServerThread> rsts = cluster.getLiveRegionServerThreads();\n    final ZooKeeperWatcher zkw = new ZooKeeperWatcher(conf, \"table-creation\", null);\n    HTable ht = installTable(zkw, \"table\", \"family\", NUM_REGIONS_TO_CREATE);\n\n    List<HRegionInfo> regions = null;\n    HRegionServer hrs = null;\n    for (int i = 0; i < NUM_RS; i++) {\n      boolean isCarryingMeta = false;\n      hrs = rsts.get(i).getRegionServer();\n      regions = ProtobufUtil.getOnlineRegions(hrs);\n      for (HRegionInfo region : regions) {\n        if (region.isMetaRegion()) {\n          isCarryingMeta = true;\n          break;\n        }\n      }\n      if (isCarryingMeta) {\n        continue;\n      }\n      break;\n    }\n\n    LOG.info(\"#regions = \" + regions.size());\n    Iterator<HRegionInfo> it = regions.iterator();\n    while (it.hasNext()) {\n      HRegionInfo region = it.next();\n      if (region.isMetaTable()) {\n        it.remove();\n      }\n    }\n    makeHLog(hrs.getWAL(), regions, \"table\", \"family\", NUM_LOG_LINES, 100);\n\n    // abort master\n    abortMaster(cluster);\n\n    // abort RS\n    LOG.info(\"Aborting region server: \" + hrs.getServerName());\n    hrs.abort(\"testing\");\n\n    // wait for the RS dies\n    TEST_UTIL.waitFor(120000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (cluster.getLiveRegionServerThreads().size() <= (NUM_RS - 1));\n      }\n    });\n\n    Thread.sleep(2000);\n    LOG.info(\"Current Open Regions:\" + getAllOnlineRegions(cluster).size());\n\n    startMasterAndWaitUntilLogSplit(cluster);\n\n    // wait for all regions are fully recovered\n    TEST_UTIL.waitFor(180000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        List<String> recoveringRegions = zkw.getRecoverableZooKeeper().getChildren(\n          zkw.recoveringRegionsZNode, false);\n        return (recoveringRegions != null && recoveringRegions.size() == 0);\n      }\n    });\n\n    LOG.info(\"Current Open Regions After Master Node Starts Up:\"\n        + getAllOnlineRegions(cluster).size());\n\n    assertEquals(NUM_LOG_LINES, TEST_UTIL.countRows(ht));\n\n    ht.close();\n  }","id":48999,"modified_method":"@Test(timeout = 300000)\n  public void testMasterStartsUpWithLogReplayWork() throws Exception {\n    LOG.info(\"testMasterStartsUpWithLogReplayWork\");\n    Configuration curConf = HBaseConfiguration.create();\n    curConf.setBoolean(HConstants.DISTRIBUTED_LOG_REPLAY_KEY, true);\n    curConf.setInt(ServerManager.WAIT_ON_REGIONSERVERS_MINTOSTART, NUM_RS - 1);\n    startCluster(NUM_RS, curConf);\n\n    final int NUM_REGIONS_TO_CREATE = 40;\n    final int NUM_LOG_LINES = 1000;\n    // turn off load balancing to prevent regions from moving around otherwise\n    // they will consume recovered.edits\n    master.balanceSwitch(false);\n\n    List<RegionServerThread> rsts = cluster.getLiveRegionServerThreads();\n    final ZooKeeperWatcher zkw = new ZooKeeperWatcher(conf, \"table-creation\", null);\n    HTable ht = installTable(zkw, \"table\", \"family\", NUM_REGIONS_TO_CREATE);\n\n    HRegionServer hrs = findRSToKill(false, \"table\");\n    List<HRegionInfo> regions = ProtobufUtil.getOnlineRegions(hrs);\n    makeHLog(hrs.getWAL(), regions, \"table\", \"family\", NUM_LOG_LINES, 100);\n\n    // abort master\n    abortMaster(cluster);\n\n    // abort RS\n    LOG.info(\"Aborting region server: \" + hrs.getServerName());\n    hrs.abort(\"testing\");\n\n    // wait for the RS dies\n    TEST_UTIL.waitFor(120000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        return (cluster.getLiveRegionServerThreads().size() <= (NUM_RS - 1));\n      }\n    });\n\n    Thread.sleep(2000);\n    LOG.info(\"Current Open Regions:\" + getAllOnlineRegions(cluster).size());\n\n    startMasterAndWaitUntilLogSplit(cluster);\n\n    // wait for all regions are fully recovered\n    TEST_UTIL.waitFor(180000, 200, new Waiter.Predicate<Exception>() {\n      @Override\n      public boolean evaluate() throws Exception {\n        List<String> recoveringRegions = zkw.getRecoverableZooKeeper().getChildren(\n          zkw.recoveringRegionsZNode, false);\n        return (recoveringRegions != null && recoveringRegions.size() == 0);\n      }\n    });\n\n    LOG.info(\"Current Open Regions After Master Node Starts Up:\"\n        + getAllOnlineRegions(cluster).size());\n\n    assertEquals(NUM_LOG_LINES, TEST_UTIL.countRows(ht));\n\n    ht.close();\n    zkw.close();\n  }","commit_id":"4a6de45f7655363fc8a0bf656d282a0ae1c73aff","url":"https://github.com/apache/hbase"}]