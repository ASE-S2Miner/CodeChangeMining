[{"original_method":"public String printProtocolSpecAsXML() {\n        StringBuilder sb=new StringBuilder();\n        Protocol     prot=bottom_prot;\n        Map<String,String>   tmpProps;\n        String       name;\n        Map.Entry    entry;\n        int len, max_len=30;\n\n        sb.append(\"<config>\\n\");\n        while(prot != null) {\n            name=prot.getName();\n            if(name != null) {\n                if(\"ProtocolStack\".equals(name))\n                    break;\n                sb.append(\"  <\").append(name).append(\" \");\n                tmpProps=getProps(prot);\n                if(tmpProps != null) {\n                    len=name.length();\n                    String s;\n                    for(Iterator it=tmpProps.entrySet().iterator(); it.hasNext();) {\n                        entry=(Map.Entry)it.next();\n                        s=entry.getKey() + \"=\\\"\" + entry.getValue() + \"\\\" \";\n                        if(len + s.length() > max_len) {\n                            sb.append(\"\\n       \");\n                            len=8;\n                        }\n                        sb.append(s);\n                        len+=s.length();\n                    }\n                }\n                sb.append(\"/>\\n\");\n                prot=prot.getUpProtocol();\n            }\n        }\n        sb.append(\"<\/config>\");\n\n        return sb.toString();\n    }","id":8000,"modified_method":"public String printProtocolSpecAsXML() {\n        StringBuilder sb=new StringBuilder();\n        Protocol prot=bottom_prot;\n        int len, max_len=30;\n\n        sb.append(\"<config>\\n\");\n        while(prot != null) {\n            String name=prot.getName();\n            if(name != null) {\n                if(\"ProtocolStack\".equals(name))\n                    break;\n                sb.append(\"  <\").append(name).append(\" \");\n                Map<String,String> tmpProps=getProps(prot);\n                if(tmpProps != null) {\n                    len=name.length();\n                    String s;\n                    for(Iterator<Entry<String,String>> it=tmpProps.entrySet().iterator();it.hasNext();) {\n                        Entry<String,String> entry=it.next();\n                        s=entry.getKey() + \"=\\\"\" + entry.getValue() + \"\\\" \";\n                        if(len + s.length() > max_len) {\n                            sb.append(\"\\n       \");\n                            len=8;\n                        }\n                        sb.append(s);\n                        len+=s.length();\n                    }\n                }\n                sb.append(\"/>\\n\");\n                prot=prot.getUpProtocol();\n            }\n        }\n        sb.append(\"<\/config>\");\n\n        return sb.toString();\n    }","commit_id":"6a7ecb27b42171b82958c047c7dc9a910505aa9a","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Inserts an already created (and initialized) protocol into the protocol list. Sets the links\n     * to the protocols above and below correctly and adjusts the linked list of protocols accordingly.\n     * Note that this method may change the value of top_prot or bottom_prot.\n     * @param prot The protocol to be inserted. Before insertion, a sanity check will ensure that none\n     *             of the existing protocols have the same name as the new protocol.\n     * @param position Where to place the protocol with respect to the neighbor_prot (ABOVE, BELOW)\n     * @param neighbor_prot The name of the neighbor protocol. An exception will be thrown if this name\n     *                      is not found\n     * @exception Exception Will be thrown when the new protocol cannot be created, or inserted.\n     */\n    public void insertProtocol(Protocol prot, int position, String neighbor_prot) throws Exception {\n        Configurator.insertProtocol(prot, position, neighbor_prot, this);\n    }","id":8001,"modified_method":"/**\n     * Inserts an already created (and initialized) protocol into the protocol list. Sets the links\n     * to the protocols above and below correctly and adjusts the linked list of protocols accordingly.\n     * Note that this method may change the value of top_prot or bottom_prot.\n     * @param prot The protocol to be inserted. Before insertion, a sanity check will ensure that none\n     *             of the existing protocols have the same name as the new protocol.\n     * @param position Where to place the protocol with respect to the neighbor_prot (ABOVE, BELOW)\n     * @param neighbor_prot The name of the neighbor protocol. An exception will be thrown if this name\n     *                      is not found\n     * @exception Exception Will be thrown when the new protocol cannot be created, or inserted.\n     */\n    public void insertProtocol(Protocol prot, int position, String neighbor_prot) throws Exception {\n        if(neighbor_prot == null) throw new IllegalArgumentException(\"Configurator.insertProtocol(): neighbor_prot is null\");\n        if(position != ProtocolStack.ABOVE && position != ProtocolStack.BELOW)\n            throw new IllegalArgumentException(\"position has to be ABOVE or BELOW\");\n\n        Protocol neighbor=findProtocol(neighbor_prot);\n        if(neighbor == null)\n            throw new IllegalArgumentException(\"protocol \\\"\" + neighbor_prot + \"\\\" not found in \" + stack.printProtocolSpec(false));\n\n        if(position == ProtocolStack.BELOW && neighbor instanceof TP)\n            throw new IllegalArgumentException(\"Cannot insert protocol \" + prot.getName() + \" below transport protocol\");\n            \n        insertProtocolInStack(prot, neighbor,  position);\n    }","commit_id":"6a7ecb27b42171b82958c047c7dc9a910505aa9a","url":"https://github.com/belaban/JGroups"},{"original_method":"public ProtocolTester(String prot_spec, Protocol harness) throws Exception {\n        if(prot_spec == null || harness == null)\n            throw new Exception(\"ProtocolTester(): prot_spec or harness is null\");\n\n        props=prot_spec;\n        this.harness=harness;\n        props=\"LOOPBACK:\" + props; // add a loopback layer at the bottom of the stack\n\n        config=new Configurator();\n        ProtocolStack stack=new ProtocolStack();\n        top=Configurator.setupProtocolStack(props, stack);\n        harness.setDownProtocol(top);\n        top.setUpProtocol(harness); // +++\n\n        Configurator.initProtocolStack(getProtocols(), null);\n\n        bottom=getBottomProtocol(top);\n\n        // has to be set after StartProtocolStack, otherwise the up and down handler threads in the harness\n        // will be started as well (we don't want that) !\n        // top.setUpProtocol(harness);\n    }","id":8002,"modified_method":"public ProtocolTester(String prot_spec, Protocol harness) throws Exception {\n        if(prot_spec == null || harness == null)\n            throw new Exception(\"ProtocolTester(): prot_spec or harness is null\");\n\n        props=prot_spec;\n        this.harness=harness;\n        props=\"LOOPBACK:\" + props; // add a loopback layer at the bottom of the stack\n\n        config=new Configurator();\n        JChannel mock_channel=new JChannel() {};\n        ProtocolStack stack=new ProtocolStack(mock_channel,props);\n        stack.setup();\n        stack.insertProtocol(harness, ProtocolStack.ABOVE, stack.getTopProtocol().getClass());\n        \n        bottom=stack.getBottomProtocol();\n\n        // has to be set after StartProtocolStack, otherwise the up and down handler threads in the harness\n        // will be started as well (we don't want that) !\n        // top.setUpProtocol(harness);\n    }","commit_id":"6a7ecb27b42171b82958c047c7dc9a910505aa9a","url":"https://github.com/belaban/JGroups"},{"original_method":"public void stop() {\n        Protocol p;\n        if(harness != null) {\n            List<Protocol> protocols=new LinkedList<Protocol>();\n            p=harness;\n            while(p != null) {\n                protocols.add(p);\n                p.stop();\n                p=p.getDownProtocol();\n            }\n            Configurator.destroyProtocolStack(protocols, null);\n        }\n        else if(top != null) {\n            p=top;\n            List<Protocol> protocols=new LinkedList<Protocol>();\n            while(p != null) {\n                protocols.add(p);\n                p.stop();\n                p=p.getDownProtocol();\n            }\n            Configurator.destroyProtocolStack(protocols, null);\n        }\n    }","id":8003,"modified_method":"public void stop() {\n        Protocol p;\n        if(harness != null) {\n            List<Protocol> protocols=new LinkedList<Protocol>();\n            p=harness;\n            while(p != null) {\n                protocols.add(p);\n                p.stop();\n                p=p.getDownProtocol();\n            }\n            p=harness;\n            while(p != null) {                \n                p.destroy();\n                p=p.getDownProtocol();\n            }            \n        }\n        else if(top != null) {\n            p=top;\n            List<Protocol> protocols=new LinkedList<Protocol>();\n            while(p != null) {\n                protocols.add(p);\n                p.stop();\n                p=p.getDownProtocol();\n            }    \n            p=top;\n            while(p != null) {                \n                p.destroy();\n                p=p.getDownProtocol();\n            }    \n        }\n    }","commit_id":"6a7ecb27b42171b82958c047c7dc9a910505aa9a","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Creates a protocol stack by iterating through the protocol list and connecting\n     * adjacent layers. The list starts with the topmost layer and has the bottommost\n     * layer at the tail.\n     * @param protocol_list List of Protocol elements (from top to bottom)\n     * @return Protocol stack\n     */\n    public static Protocol connectProtocols(Vector protocol_list) {\n        Protocol current_layer=null, next_layer=null;\n\n        for(int i=0; i < protocol_list.size(); i++) {\n            current_layer=(Protocol)protocol_list.elementAt(i);\n            if(i + 1 >= protocol_list.size())\n                break;\n            next_layer=(Protocol)protocol_list.elementAt(i + 1);\n            next_layer.setDownProtocol(current_layer);\n            current_layer.setUpProtocol(next_layer);\n\n             if(current_layer instanceof TP) {\n                String singleton_name= ((TP)current_layer).getSingletonName();\n                if(singleton_name != null && singleton_name.length() > 0) {\n                    ConcurrentMap<String, Protocol> up_prots=((TP)current_layer).getUpProtocols();\n                    String key;\n                    synchronized(up_prots) {\n                        while(true) {\n                            key=Global.DUMMY + System.currentTimeMillis();\n                            if(up_prots.containsKey(key))\n                                continue;\n                            up_prots.put(key, next_layer);\n                            break;\n                        }\n                    }\n                    current_layer.setUpProtocol(null);\n                }\n            }\n        }\n        return current_layer;\n    }","id":8004,"modified_method":"/**\n     * Creates a protocol stack by iterating through the protocol list and connecting\n     * adjacent layers. The list starts with the topmost layer and has the bottommost\n     * layer at the tail.\n     * @param protocol_list List of Protocol elements (from top to bottom)\n     * @return Protocol stack\n     */\n    private Protocol connectProtocols(Vector<Protocol> protocol_list) {\n        Protocol current_layer=null, next_layer=null;\n\n        for(int i=0; i < protocol_list.size(); i++) {\n            current_layer=protocol_list.elementAt(i);\n            if(i + 1 >= protocol_list.size())\n                break;\n            next_layer=protocol_list.elementAt(i + 1);\n            next_layer.setDownProtocol(current_layer);\n            current_layer.setUpProtocol(next_layer);\n\n             if(current_layer instanceof TP) {\n                TP transport = (TP)current_layer;                \n                if(transport.isSingleton()) {                   \n                    ConcurrentMap<String, Protocol> up_prots=transport.getUpProtocols();\n                    String key;\n                    synchronized(up_prots) {\n                        while(true) {\n                            key=Global.DUMMY + System.currentTimeMillis();\n                            if(up_prots.containsKey(key))\n                                continue;\n                            up_prots.put(key, next_layer);\n                            break;\n                        }\n                    }\n                    current_layer.setUpProtocol(null);\n                }\n            }\n        }\n        return current_layer;\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Get a string of the form \"P1(config_str1):P2:P3(config_str3)\" and return\n     * ProtocolConfigurations for it. That means, parse \"P1(config_str1)\", \"P2\" and\n     * \"P3(config_str3)\"\n     * @param config_str Configuration string\n     * @return Vector of strings\n     */\n    public static Vector<String> parseProtocols(String config_str) throws IOException {\n        Vector<String> retval=new Vector<String>();\n        PushbackReader reader=new PushbackReader(new StringReader(config_str));\n        int ch;\n        StringBuilder sb;\n        boolean running=true;\n\n        while(running) {\n            String protocol_name=readWord(reader);\n            sb=new StringBuilder();\n            sb.append(protocol_name);\n\n            ch=read(reader);\n            if(ch == -1) {\n                retval.add(sb.toString());\n                break;\n            }\n\n            if(ch == ':') {  // no attrs defined\n                retval.add(sb.toString());\n                continue;\n            }\n\n            if(ch == '(') { // more attrs defined\n                reader.unread(ch);\n                String attrs=readUntil(reader, ')');\n                sb.append(attrs);\n                retval.add(sb.toString());\n            }\n            else {\n                retval.add(sb.toString());\n            }\n\n            while(true) {\n                ch=read(reader);\n                if(ch == ':') {\n                    break;\n                }\n                if(ch == -1) {\n                    running=false;\n                    break;\n                }\n            }\n        }\n        reader.close();\n\n        return retval;\n    }","id":8005,"modified_method":"/**\n     * Get a string of the form \"P1(config_str1):P2:P3(config_str3)\" and return\n     * ProtocolConfigurations for it. That means, parse \"P1(config_str1)\", \"P2\" and\n     * \"P3(config_str3)\"\n     * @param config_str Configuration string\n     * @return Vector of strings\n     */\n    private Vector<String> parseProtocols(String config_str) throws IOException {\n        Vector<String> retval=new Vector<String>();\n        PushbackReader reader=new PushbackReader(new StringReader(config_str));\n        int ch;\n        StringBuilder sb;\n        boolean running=true;\n\n        while(running) {\n            String protocol_name=readWord(reader);\n            sb=new StringBuilder();\n            sb.append(protocol_name);\n\n            ch=read(reader);\n            if(ch == -1) {\n                retval.add(sb.toString());\n                break;\n            }\n\n            if(ch == ':') {  // no attrs defined\n                retval.add(sb.toString());\n                continue;\n            }\n\n            if(ch == '(') { // more attrs defined\n                reader.unread(ch);\n                String attrs=readUntil(reader, ')');\n                sb.append(attrs);\n                retval.add(sb.toString());\n            }\n            else {\n                retval.add(sb.toString());\n            }\n\n            while(true) {\n                ch=read(reader);\n                if(ch == ':') {\n                    break;\n                }\n                if(ch == -1) {\n                    running=false;\n                    break;\n                }\n            }\n        }\n        reader.close();\n\n        return retval;\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Return a number of ProtocolConfigurations in a vector\n     * @param configuration protocol-stack configuration string\n     * @return Vector of ProtocolConfigurations\n     */\n    public static Vector<ProtocolConfiguration> parseConfigurations(String configuration) throws Exception {\n        Vector<ProtocolConfiguration> retval=new Vector<ProtocolConfiguration>();\n        Vector protocol_string=parseProtocols(configuration);\n        String component_string;\n        ProtocolConfiguration protocol_config;\n\n        if(protocol_string == null)\n            return null;\n        for(int i=0; i < protocol_string.size(); i++) {\n            component_string=(String)protocol_string.elementAt(i);\n            protocol_config=new ProtocolConfiguration(component_string);\n            retval.addElement(protocol_config);\n        }\n        return retval;\n    }","id":8006,"modified_method":"/**\n     * Return a number of ProtocolConfigurations in a vector\n     * @param configuration protocol-stack configuration string\n     * @return Vector of ProtocolConfigurations\n     */\n    public Vector<ProtocolConfiguration> parseConfigurations(String configuration) throws Exception {\n        Vector<ProtocolConfiguration> retval=new Vector<ProtocolConfiguration>();\n        Vector<String> protocol_string=parseProtocols(configuration);              \n\n        if(protocol_string == null)\n            return null;\n        \n        for(String component_string:protocol_string) {                       \n            retval.addElement(new ProtocolConfiguration(component_string));\n        }\n        return retval;\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Takes vector of ProtocolConfigurations, iterates through it, creates Protocol for\n     * each ProtocolConfiguration and returns all Protocols in a vector.\n     * @param protocol_configs Vector of ProtocolConfigurations\n     * @param stack The protocol stack\n     * @return Vector of Protocols\n     */\n    private static Vector<Protocol> createProtocols(Vector<ProtocolConfiguration> protocol_configs, final ProtocolStack stack) throws Exception {\n        Vector<Protocol> retval=new Vector<Protocol>();\n        ProtocolConfiguration protocol_config;\n        Protocol layer;\n        String singleton_name;\n\n        for(int i=0; i < protocol_configs.size(); i++) {\n            protocol_config=protocol_configs.elementAt(i);\n            singleton_name=protocol_config.getProperties().getProperty(Global.SINGLETON_NAME);\n            if(singleton_name != null && singleton_name.trim().length() > 0) {\n                synchronized(stack) {\n                    if(i > 0) { // crude way to check whether protocol is a transport\n                        throw new IllegalArgumentException(\"Property 'singleton_name' can only be used in a transport\" +\n                                \" protocol (was used in \" + protocol_config.getProtocolName() + \")\");\n                    }\n                    Map<String,Tuple<TP, ProtocolStack.RefCounter>> singleton_transports=ProtocolStack.getSingletonTransports();\n                    Tuple<TP, ProtocolStack.RefCounter> val=singleton_transports.get(singleton_name);\n                    layer=val != null? val.getVal1() : null;\n                    if(layer != null) {\n                        retval.add(layer);\n                    }\n                    else {\n                        layer=protocol_config.createLayer(stack);\n                        if(layer == null)\n                            return null;\n                        singleton_transports.put(singleton_name, new Tuple<TP, ProtocolStack.RefCounter>((TP)layer,new ProtocolStack.RefCounter((short)0,(short)0)));\n                        retval.addElement(layer);\n                    }\n                }\n                continue;\n            }\n            layer=protocol_config.createLayer(stack);\n            if(layer == null)\n                return null;\n            retval.addElement(layer);\n        }\n        sanityCheck(retval);\n        return retval;\n    }","id":8007,"modified_method":"/**\n     * Takes vector of ProtocolConfigurations, iterates through it, creates Protocol for\n     * each ProtocolConfiguration and returns all Protocols in a vector.\n     * @param protocol_configs Vector of ProtocolConfigurations\n     * @param stack The protocol stack\n     * @return Vector of Protocols\n     */\n    private Vector<Protocol> createProtocols(Vector<ProtocolConfiguration> protocol_configs, final ProtocolStack stack) throws Exception {\n        Vector<Protocol> retval=new Vector<Protocol>();\n        ProtocolConfiguration protocol_config;\n        Protocol layer;\n        String singleton_name;\n\n        for(int i=0; i < protocol_configs.size(); i++) {\n            protocol_config=protocol_configs.elementAt(i);\n            singleton_name=protocol_config.getProperties().getProperty(Global.SINGLETON_NAME);\n            if(singleton_name != null && singleton_name.trim().length() > 0) {\n                synchronized(stack) {\n                    if(i > 0) { // crude way to check whether protocol is a transport\n                        throw new IllegalArgumentException(\"Property 'singleton_name' can only be used in a transport\" +\n                                \" protocol (was used in \" + protocol_config.getProtocolName() + \")\");\n                    }\n                    Map<String,Tuple<TP, ProtocolStack.RefCounter>> singleton_transports=ProtocolStack.getSingletonTransports();\n                    Tuple<TP, ProtocolStack.RefCounter> val=singleton_transports.get(singleton_name);\n                    layer=val != null? val.getVal1() : null;\n                    if(layer != null) {\n                        retval.add(layer);\n                    }\n                    else {\n                        layer=protocol_config.createLayer(stack);\n                        if(layer == null)\n                            return null;\n                        singleton_transports.put(singleton_name, new Tuple<TP, ProtocolStack.RefCounter>((TP)layer,new ProtocolStack.RefCounter((short)0,(short)0)));\n                        retval.addElement(layer);\n                    }\n                }\n                continue;\n            }\n            layer=protocol_config.createLayer(stack);\n            if(layer == null)\n                return null;\n            retval.addElement(layer);\n        }\n        sanityCheck(retval);\n        return retval;\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * The configuration string has a number of entries, separated by a ':' (colon).\n     * Each entry consists of the name of the protocol, followed by an optional configuration\n     * of that protocol. The configuration is enclosed in parentheses, and contains entries\n     * which are name/value pairs connected with an assignment sign (=) and separated by\n     * a semicolon.\n     * <pre>UDP(in_port=5555;out_port=4445):FRAG(frag_size=1024)<\/pre><p>\n     * The <em>first<\/em> entry defines the <em>bottommost<\/em> layer, the string is parsed\n     * left to right and the protocol stack constructed bottom up. Example: the string\n     * \"UDP(in_port=5555):FRAG(frag_size=32000):DEBUG\" results is the following stack:<pre>\n     *\n     *   -----------------------\n     *  | DEBUG                 |\n     *  |-----------------------|\n     *  | FRAG frag_size=32000  |\n     *  |-----------------------|\n     *  | UDP in_port=32000     |\n     *   -----------------------\n     * <\/pre>\n     */\n    public static Protocol setupProtocolStack(String configuration, ProtocolStack st) throws Exception {\n        Protocol protocol_stack=null;\n        Vector<ProtocolConfiguration> protocol_configs;\n        Vector<Protocol> protocols;\n\n        protocol_configs=parseConfigurations(configuration);\n        protocols=createProtocols(protocol_configs, st);\n        if(protocols == null)\n            return null;\n        protocol_stack=connectProtocols(protocols);\n        return protocol_stack;\n    }","id":8008,"modified_method":"/**\n     * The configuration string has a number of entries, separated by a ':' (colon).\n     * Each entry consists of the name of the protocol, followed by an optional configuration\n     * of that protocol. The configuration is enclosed in parentheses, and contains entries\n     * which are name/value pairs connected with an assignment sign (=) and separated by\n     * a semicolon.\n     * <pre>UDP(in_port=5555;out_port=4445):FRAG(frag_size=1024)<\/pre><p>\n     * The <em>first<\/em> entry defines the <em>bottommost<\/em> layer, the string is parsed\n     * left to right and the protocol stack constructed bottom up. Example: the string\n     * \"UDP(in_port=5555):FRAG(frag_size=32000):DEBUG\" results is the following stack:<pre>\n     *\n     *   -----------------------\n     *  | DEBUG                 |\n     *  |-----------------------|\n     *  | FRAG frag_size=32000  |\n     *  |-----------------------|\n     *  | UDP in_port=32000     |\n     *   -----------------------\n     * <\/pre>\n     */\n    private Protocol setupProtocolStack(String configuration, ProtocolStack st) throws Exception {       \n        Vector<ProtocolConfiguration> protocol_configs=parseConfigurations(configuration);\n        Vector<Protocol> protocols=createProtocols(protocol_configs, st);\n        if(protocols == null)\n            return null;\n        return connectProtocols(protocols);        \n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"public void testInsertion() throws Exception {\n        stack.setup();\n        List protocols=stack.getProtocols();\n        assert protocols != null;\n        Assert.assertEquals(6, protocols.size());\n\n        for(int i=0; i < names.length; i++) {\n            String name=names[i];\n            Protocol p=(Protocol)protocols.get(i);\n            Assert.assertEquals(name, p.getName());\n        }\n\n        // insert below\n        Protocol new_prot=(Protocol)Class.forName(\"org.jgroups.protocols.TRACE\").newInstance();\n        stack.insertProtocol(new_prot, ProtocolStack.BELOW, \"UNICAST\");\n        protocols=stack.getProtocols();\n        Assert.assertEquals(7, protocols.size());\n        for(int i=0; i < below.length; i++) {\n            String name=below[i];\n            Protocol p=(Protocol)protocols.get(i);\n            Assert.assertEquals(name, p.getName());\n        }\n\n        // remove\n        Protocol prot=stack.removeProtocol(\"TRACE\");\n        assert prot != null;\n        protocols=stack.getProtocols();\n        Assert.assertEquals(6, protocols.size());\n        for(int i=0; i < names.length; i++) {\n            String name=names[i];\n            Protocol p=(Protocol)protocols.get(i);\n            Assert.assertEquals(name, p.getName());\n        }\n\n        // insert above\n        new_prot=(Protocol)Class.forName(\"org.jgroups.protocols.TRACE\").newInstance();\n        stack.insertProtocol(new_prot, ProtocolStack.ABOVE, \"UNICAST\");\n        protocols=stack.getProtocols();\n        Assert.assertEquals(7, protocols.size());\n        for(int i=0; i < above.length; i++) {\n            String name=above[i];\n            Protocol p=(Protocol)protocols.get(i);\n            Assert.assertEquals(name, p.getName());\n        }\n    }","id":8009,"modified_method":"public void testInsertion() throws Exception {\n        stack.setup();\n        List<Protocol> protocols=stack.getProtocols();\n        assert protocols != null;\n        Assert.assertEquals(6, protocols.size());\n\n        for(int i=0; i < names.length; i++) {\n            String name=names[i];\n            Protocol p=protocols.get(i);\n            Assert.assertEquals(name, p.getName());\n        }\n\n        // insert below\n        Protocol new_prot=(Protocol)Class.forName(\"org.jgroups.protocols.TRACE\").newInstance();\n        stack.insertProtocol(new_prot, ProtocolStack.BELOW, \"UNICAST\");\n        protocols=stack.getProtocols();\n        Assert.assertEquals(7, protocols.size());\n        for(int i=0; i < below.length; i++) {\n            String name=below[i];\n            Protocol p=protocols.get(i);\n            Assert.assertEquals(name, p.getName());\n        }\n\n        // remove\n        Protocol prot=stack.removeProtocol(\"TRACE\");\n        assert prot != null;\n        protocols=stack.getProtocols();\n        Assert.assertEquals(6, protocols.size());\n        for(int i=0; i < names.length; i++) {\n            String name=names[i];\n            Protocol p=protocols.get(i);\n            Assert.assertEquals(name, p.getName());\n        }\n\n        // insert above\n        new_prot=(Protocol)Class.forName(\"org.jgroups.protocols.TRACE\").newInstance();\n        stack.insertProtocol(new_prot, ProtocolStack.ABOVE, \"UNICAST\");\n        protocols=stack.getProtocols();\n        Assert.assertEquals(7, protocols.size());\n        for(int i=0; i < above.length; i++) {\n            String name=above[i];\n            Protocol p=protocols.get(i);\n            Assert.assertEquals(name, p.getName());\n        }\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"public static void testParsing() throws Exception {\n        String config=\"UDP(mcast_addr=ff18:eb72:479f::2:3;oob_thread_pool.max_threads=4;\" +\n                \"oob_thread_pool.keep_alive_time=5000;max_bundle_size=64000;mcast_send_buf_size=640000;\" +\n                \"oob_thread_pool.queue_max_size=10;mcast_recv_buf_size=25000000;\" +\n                \"use_concurrent_stack=true;tos=8;mcast_port=45522;loopback=true;thread_pool.min_threads=2;\" +\n                \"oob_thread_pool.rejection_policy=Run;thread_pool.max_threads=8;enable_diagnostics=true;\" +\n                \"thread_naming_pattern=cl;ucast_send_buf_size=640000;ucast_recv_buf_size=20000000;\" +\n                \"thread_pool.enabled=true;use_incoming_packet_handler=true;oob_thread_pool.enabled=true;ip_ttl=2;\" +\n                \"enable_bundling=true;thread_pool.rejection_policy=Run;discard_incompatible_packets=true;\" +\n                \"thread_pool.keep_alive_time=5000;thread_pool.queue_enabled=false;mcast_addr=228.10.10.15;\" +\n                \"max_bundle_timeout=30;oob_thread_pool.queue_enabled=false;oob_thread_pool.min_threads=2;\" +\n                \"thread_pool.queue_max_size=100):\" +\n                \"PING(num_initial_members=3;timeout=2000):\" +\n                \"MERGE2(min_interval=5000;max_interval=10000):\" +\n                \"FD_SOCK:\" +\n                \"FD(max_tries=3;timeout=2000):\" +\n                \"VERIFY_SUSPECT(timeout=1500):\" +\n                \"BARRIER:\" +\n                \"pbcast.NAKACK(gc_lag=0;use_mcast_xmit=false;retransmit_timeout=300,600,1200,2400,4800;\" +\n                \"discard_delivered_msgs=true):\" +\n                \"UNICAST(loopback=false;timeout=300,600,1200,2400,3600):\" +\n                \"pbcast.STABLE(desired_avg_gossip=50000;max_bytes=1000000;stability_delay=1000):\" +\n                \"VIEW_SYNC(avg_send_interval=60000):\" +\n                \"pbcast.GMS(print_local_addr=true;view_bundling=true;join_timeout=3000;\" +\n                \"shun=false):\" +\n                \"FC(max_block_time=10000;max_credits=5000000;min_threshold=0.25):\" +\n                \"FRAG2(frag_size=60000):\" +\n                \"pbcast.STREAMING_STATE_TRANSFER(use_reading_thread=true)\";\n        \n        Vector<Configurator.ProtocolConfiguration> ret=Configurator.parseConfigurations(config);\n        System.out.println(\"config:\\n\" + ret);\n        Assert.assertEquals(15, ret.size());\n\n        config=\"UDP(mcast_addr=ff18:eb72:479f::2:3;mcast_port=2453):pbcast.FD:FRAG(frag_size=2292):FD_SIMPLE(s=22;d=33):MERGE2(a=22)\";\n        ret=Configurator.parseConfigurations(config);\n        System.out.println(\"config:\\n\" + ret);\n        Assert.assertEquals(5, ret.size());\n\n        config=\"com.mycomp.Class:B:pbcast.C:H(a=b;c=d;e=f)\";\n        ret=Configurator.parseConfigurations(config);\n        System.out.println(\"config:\\n\" + ret);\n        Assert.assertEquals(4, ret.size());\n    }","id":8010,"modified_method":"public static void testParsing() throws Exception {\n        String config=\"UDP(mcast_addr=ff18:eb72:479f::2:3;oob_thread_pool.max_threads=4;\" +\n                \"oob_thread_pool.keep_alive_time=5000;max_bundle_size=64000;mcast_send_buf_size=640000;\" +\n                \"oob_thread_pool.queue_max_size=10;mcast_recv_buf_size=25000000;\" +\n                \"use_concurrent_stack=true;tos=8;mcast_port=45522;loopback=true;thread_pool.min_threads=2;\" +\n                \"oob_thread_pool.rejection_policy=Run;thread_pool.max_threads=8;enable_diagnostics=true;\" +\n                \"thread_naming_pattern=cl;ucast_send_buf_size=640000;ucast_recv_buf_size=20000000;\" +\n                \"thread_pool.enabled=true;use_incoming_packet_handler=true;oob_thread_pool.enabled=true;ip_ttl=2;\" +\n                \"enable_bundling=true;thread_pool.rejection_policy=Run;discard_incompatible_packets=true;\" +\n                \"thread_pool.keep_alive_time=5000;thread_pool.queue_enabled=false;mcast_addr=228.10.10.15;\" +\n                \"max_bundle_timeout=30;oob_thread_pool.queue_enabled=false;oob_thread_pool.min_threads=2;\" +\n                \"thread_pool.queue_max_size=100):\" +\n                \"PING(num_initial_members=3;timeout=2000):\" +\n                \"MERGE2(min_interval=5000;max_interval=10000):\" +\n                \"FD_SOCK:\" +\n                \"FD(max_tries=3;timeout=2000):\" +\n                \"VERIFY_SUSPECT(timeout=1500):\" +\n                \"BARRIER:\" +\n                \"pbcast.NAKACK(gc_lag=0;use_mcast_xmit=false;retransmit_timeout=300,600,1200,2400,4800;\" +\n                \"discard_delivered_msgs=true):\" +\n                \"UNICAST(loopback=false;timeout=300,600,1200,2400,3600):\" +\n                \"pbcast.STABLE(desired_avg_gossip=50000;max_bytes=1000000;stability_delay=1000):\" +\n                \"VIEW_SYNC(avg_send_interval=60000):\" +\n                \"pbcast.GMS(print_local_addr=true;view_bundling=true;join_timeout=3000;\" +\n                \"shun=false):\" +\n                \"FC(max_block_time=10000;max_credits=5000000;min_threshold=0.25):\" +\n                \"FRAG2(frag_size=60000):\" +\n                \"pbcast.STREAMING_STATE_TRANSFER(use_reading_thread=true)\";\n        \n        Vector<Configurator.ProtocolConfiguration> ret=new Configurator().parseConfigurations(config);\n        System.out.println(\"config:\\n\" + ret);\n        Assert.assertEquals(15, ret.size());\n\n        config=\"UDP(mcast_addr=ff18:eb72:479f::2:3;mcast_port=2453):pbcast.FD:FRAG(frag_size=2292):FD_SIMPLE(s=22;d=33):MERGE2(a=22)\";\n        ret=new Configurator().parseConfigurations(config);\n        System.out.println(\"config:\\n\" + ret);\n        Assert.assertEquals(5, ret.size());\n\n        config=\"com.mycomp.Class:B:pbcast.C:H(a=b;c=d;e=f)\";\n        ret=new Configurator().parseConfigurations(config);\n        System.out.println(\"config:\\n\" + ret);\n        Assert.assertEquals(4, ret.size());\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"public Vector<Protocol> copyProtocols(ProtocolStack st) throws IllegalAccessException, InstantiationException {\n        Vector<Protocol> list=getProtocols();\n        Vector<Protocol> retval=new Vector<Protocol>(list.size());\n        for(Protocol prot: list) {\n            Protocol new_prot=prot.getClass().newInstance();\n            new_prot.setProtocolStack(st);\n            retval.add(new_prot);\n\n            for(Class<?> clazz=prot.getClass(); clazz != null; clazz=clazz.getSuperclass()) {\n\n                // copy all fields marked with @Property\n                Field[] fields=clazz.getDeclaredFields();\n                for(Field field: fields) {\n                    if(field.isAnnotationPresent(Property.class)) {\n                        Object value=Configurator.getField(field, prot);\n                        Configurator.setField(field, new_prot, value);\n                    }\n                }\n\n                // copy all setters marked with @Property\n                Method[] methods=clazz.getDeclaredMethods();\n                for(Method method: methods) {\n                    String methodName=method.getName();\n                    if(method.isAnnotationPresent(Property.class) && Configurator.isSetPropertyMethod(method)) {\n                        Property annotation=method.getAnnotation(Property.class);\n                        List<String> possible_names=new LinkedList<String>();\n                        if(annotation.name() != null)\n                            possible_names.add(annotation.name());\n                        possible_names.add(methodName.substring(3));\n                        possible_names.add(Configurator.renameFromJavaCodingConvention(methodName.substring(3)));\n                        Field field=findField(prot, possible_names);\n                        if(field != null) {\n                            Object value=Configurator.getField(field, prot);\n                            Configurator.setField(field, new_prot, value);\n                        }\n                    }\n                }\n            }\n        }\n        return retval;\n    }","id":8011,"modified_method":"public Vector<Protocol> copyProtocols(ProtocolStack targetStack) throws IllegalAccessException, InstantiationException {\n        Vector<Protocol> list=getProtocols();\n        Vector<Protocol> retval=new Vector<Protocol>(list.size());\n        for(Protocol prot: list) {\n            Protocol new_prot=prot.getClass().newInstance();\n            new_prot.setProtocolStack(targetStack);\n            retval.add(new_prot);\n\n            for(Class<?> clazz=prot.getClass(); clazz != null; clazz=clazz.getSuperclass()) {\n\n                // copy all fields marked with @Property\n                Field[] fields=clazz.getDeclaredFields();\n                for(Field field: fields) {\n                    if(field.isAnnotationPresent(Property.class)) {\n                        Object value=Configurator.getField(field, prot);\n                        Configurator.setField(field, new_prot, value);\n                    }\n                }\n\n                // copy all setters marked with @Property\n                Method[] methods=clazz.getDeclaredMethods();\n                for(Method method: methods) {\n                    String methodName=method.getName();\n                    if(method.isAnnotationPresent(Property.class) && Configurator.isSetPropertyMethod(method)) {\n                        Property annotation=method.getAnnotation(Property.class);\n                        List<String> possible_names=new LinkedList<String>();\n                        if(annotation.name() != null)\n                            possible_names.add(annotation.name());\n                        possible_names.add(methodName.substring(3));\n                        possible_names.add(Configurator.renameFromJavaCodingConvention(methodName.substring(3)));\n                        Field field=findField(prot, possible_names);\n                        if(field != null) {\n                            Object value=Configurator.getField(field, prot);\n                            Configurator.setField(field, new_prot, value);\n                        }\n                    }\n                }\n            }\n        }\n        return retval;\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"static Map<String,String> getProps(Protocol prot) {\n        Map<String,String> retval=new HashMap<String,String>();\n\n        for(Class<?> clazz=prot.getClass(); clazz != null; clazz=clazz.getSuperclass()) {\n\n            // copy all fields marked with @Property\n            Field[] fields=clazz.getDeclaredFields();\n            Property annotation;\n            for(Field field: fields) {\n                if(field.isAnnotationPresent(Property.class)) {\n                    Object value=Configurator.getField(field, prot);\n                    if(value != null) {\n                        annotation=field.getAnnotation(Property.class);\n                        Class<?> conv_class=annotation.converter();\n                        PropertyConverter conv=null;\n                        try {\n                            conv=(PropertyConverter)conv_class.newInstance();\n                        }\n                        catch(Exception e) {\n                        }\n                        String tmp=conv != null? conv.toString(value) : value.toString();\n                        retval.put(field.getName(), tmp);\n                    }\n                }\n            }\n\n            // copy all setters marked with @Property\n            Method[] methods=clazz.getDeclaredMethods();\n            for(Method method: methods) {\n                String methodName=method.getName();\n                if(method.isAnnotationPresent(Property.class) && Configurator.isSetPropertyMethod(method)) {\n                    annotation=method.getAnnotation(Property.class);\n                    List<String> possible_names=new LinkedList<String>();\n                    if(annotation.name() != null)\n                        possible_names.add(annotation.name());\n                    possible_names.add(methodName.substring(3));\n                    possible_names.add(Configurator.renameFromJavaCodingConvention(methodName.substring(3)));\n                    Field field=findField(prot, possible_names);\n                    if(field != null) {\n                        Object value=Configurator.getField(field, prot);\n                        if(value != null) {\n                            Class<?> conv_class=annotation.converter();\n                            PropertyConverter conv=null;\n                            try {\n                                conv=(PropertyConverter)conv_class.newInstance();\n                            }\n                            catch(Exception e) {\n                            }\n                            String tmp=conv != null? conv.toString(value) : value.toString();\n                            retval.put(field.getName(), tmp);\n                        }\n                    }\n                }\n            }\n        }\n        return retval;\n    }","id":8012,"modified_method":"private static Map<String,String> getProps(Protocol prot) {\n        Map<String,String> retval=new HashMap<String,String>();\n\n        for(Class<?> clazz=prot.getClass(); clazz != null; clazz=clazz.getSuperclass()) {\n\n            // copy all fields marked with @Property\n            Field[] fields=clazz.getDeclaredFields();\n            Property annotation;\n            for(Field field: fields) {\n                if(field.isAnnotationPresent(Property.class)) {\n                    Object value=Configurator.getField(field, prot);\n                    if(value != null) {\n                        annotation=field.getAnnotation(Property.class);\n                        Class<?> conv_class=annotation.converter();\n                        PropertyConverter conv=null;\n                        try {\n                            conv=(PropertyConverter)conv_class.newInstance();\n                        }\n                        catch(Exception e) {\n                        }\n                        String tmp=conv != null? conv.toString(value) : value.toString();\n                        retval.put(field.getName(), tmp);\n                    }\n                }\n            }\n\n            // copy all setters marked with @Property\n            Method[] methods=clazz.getDeclaredMethods();\n            for(Method method: methods) {\n                String methodName=method.getName();\n                if(method.isAnnotationPresent(Property.class) && Configurator.isSetPropertyMethod(method)) {\n                    annotation=method.getAnnotation(Property.class);\n                    List<String> possible_names=new LinkedList<String>();\n                    if(annotation.name() != null)\n                        possible_names.add(annotation.name());\n                    possible_names.add(methodName.substring(3));\n                    possible_names.add(Configurator.renameFromJavaCodingConvention(methodName.substring(3)));\n                    Field field=findField(prot, possible_names);\n                    if(field != null) {\n                        Object value=Configurator.getField(field, prot);\n                        if(value != null) {\n                            Class<?> conv_class=annotation.converter();\n                            PropertyConverter conv=null;\n                            try {\n                                conv=(PropertyConverter)conv_class.newInstance();\n                            }\n                            catch(Exception e) {\n                            }\n                            String tmp=conv != null? conv.toString(value) : value.toString();\n                            retval.put(field.getName(), tmp);\n                        }\n                    }\n                }\n            }\n        }\n        return retval;\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Removes a protocol from the stack. Stops the protocol and readjusts the linked lists of\n     * protocols.\n     * @param prot_name The name of the protocol. Since all protocol names in a stack have to be unique\n     *                  (otherwise the stack won't be created), the name refers to just 1 protocol.\n     * @exception Exception Thrown if the protocol cannot be stopped correctly.\n     */\n    public Protocol removeProtocol(String prot_name) throws Exception {\n        return Configurator.removeProtocol(top_prot, prot_name);\n    }","id":8013,"modified_method":"/**\n     * Removes a protocol from the stack. Stops the protocol and readjusts the linked lists of\n     * protocols.\n     * @param prot_name The name of the protocol. Since all protocol names in a stack have to be unique\n     *                  (otherwise the stack won't be created), the name refers to just 1 protocol.\n     * @exception Exception Thrown if the protocol cannot be stopped correctly.\n     */\n    public Protocol removeProtocol(String prot_name) throws Exception {\n        if(prot_name == null) return null;\n        Protocol prot=findProtocol(prot_name);\n        if(prot == null) return null;        \n        Protocol above=prot.getUpProtocol(), below=prot.getDownProtocol();\n        checkAndSwitchTop(prot, below);     \n        if(above != null)\n            above.setDownProtocol(below);\n        if(below != null)\n            below.setUpProtocol(above);\n        prot.setUpProtocol(null);\n        prot.setDownProtocol(null);\n        return prot;\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"public void setup() throws Exception {\n        if(top_prot == null) {\n            top_prot=Configurator.setupProtocolStack(setup_string, this);\n            top_prot.setUpProtocol(this);\n            bottom_prot=Configurator.getBottommostProtocol(top_prot);\n            List<Protocol> protocols=getProtocols();\n            Configurator.initProtocolStack(protocols, singleton_transports);         // calls init() on each protocol, from bottom to top\n        }\n    }","id":8014,"modified_method":"public void setup() throws Exception {\n        if(top_prot == null) {\n            top_prot=getProtocolStackFactory().setupProtocolStack();\n            top_prot.setUpProtocol(this);\n            this.setDownProtocol(top_prot);\n            bottom_prot=getBottomProtocol();           \n            initProtocolStack();\n        }\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"private static Field findField(Object target, List<String> possible_names) {\n        if(target == null)\n            return null;\n        for(Class clazz=target.getClass(); clazz != null; clazz=clazz.getSuperclass()) {\n            for(String name: possible_names) {\n                try {\n                    Field field=clazz.getDeclaredField(name);\n                    if(field != null)\n                        return field;\n                }\n                catch(NoSuchFieldException e) {\n                }\n            }\n        }\n\n        return null;\n    }","id":8015,"modified_method":"private static Field findField(Object target, List<String> possible_names) {\n        if(target == null)\n            return null;\n        for(Class<?> clazz=target.getClass(); clazz != null; clazz=clazz.getSuperclass()) {\n            for(String name: possible_names) {\n                try {\n                    Field field=clazz.getDeclaredField(name);\n                    if(field != null)\n                        return field;\n                }\n                catch(NoSuchFieldException e) {\n                }\n            }\n        }\n\n        return null;\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Start all layers. The {@link Protocol#start()} method is called in each protocol,\n     * <em>from top to bottom<\/em>.\n     * Each layer can perform some initialization, e.g. create a multicast socket\n     */\n    public void startStack(String cluster_name) throws Exception {\n        if(stopped == false) return;\n        Configurator.startProtocolStack(getProtocols(), cluster_name, singleton_transports);\n        stopped=false;\n    }","id":8016,"modified_method":"/**\n     * Start all layers. The {@link Protocol#start()} method is called in each protocol,\n     * <em>from top to bottom<\/em>.\n     * Each layer can perform some initialization, e.g. create a multicast socket\n     */\n    public void startStack(String cluster_name) throws Exception {\n        if(stopped == false) return;\n        \n        Protocol above_prot=null;        \n        for(final Protocol prot: getProtocols()) {\n            if(prot instanceof TP) {\n                String singleton_name=((TP)prot).getSingletonName();\n                TP transport=(TP)prot;\n                if(transport.isSingleton() && cluster_name != null) {\n                    final Map<String, Protocol> up_prots=transport.getUpProtocols();\n                    synchronized(up_prots) {\n                        Set<String> keys=up_prots.keySet();\n                        if(keys.contains(cluster_name))\n                            throw new IllegalStateException(\"cluster '\" + cluster_name + \"' is already connected to singleton \" +\n                                    \"transport: \" + keys);\n\n                        for(Iterator<Map.Entry<String,Protocol>> it=up_prots.entrySet().iterator(); it.hasNext();) {\n                            Map.Entry<String,Protocol> entry=it.next();\n                            Protocol tmp=entry.getValue();\n                            if(tmp == above_prot) {\n                                it.remove();\n                            }\n                        }\n\n                        if(above_prot != null) {\n                            TP.ProtocolAdapter ad=new TP.ProtocolAdapter(cluster_name, prot.getName(), above_prot, prot, \n                                                                         transport.getThreadNamingPattern(),\n                                                                         transport.getLocalAddress());\n                            ad.setProtocolStack(above_prot.getProtocolStack());\n                            above_prot.setDownProtocol(ad);\n                            up_prots.put(cluster_name, ad);\n                        }\n                    }\n                    synchronized(singleton_transports) {\n                        Tuple<TP, ProtocolStack.RefCounter> val=singleton_transports.get(singleton_name);\n                        if(val != null) {\n                            ProtocolStack.RefCounter counter=val.getVal2();\n                            short num_starts=counter.incrementStartCount();\n                            if(num_starts >= 1) {\n                                if(above_prot != null)\n                                    above_prot.up(new Event(Event.SET_LOCAL_ADDRESS, transport.getLocalAddress()));\n                                continue;\n                            }\n                        }\n                    }\n                }\n            }                       \n            prot.start();\n            above_prot=prot;\n        }\n        \n        stopped=false;\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"public void insertProtocol(Protocol prot, int position, Class<? extends Protocol> neighbor_prot) throws Exception {\n        Configurator.insertProtocol(prot, position, neighbor_prot, this);\n    }","id":8017,"modified_method":"public void insertProtocol(Protocol prot, int position, Class<? extends Protocol> neighbor_prot) throws Exception {\n        if(neighbor_prot == null) throw new IllegalArgumentException(\"Configurator.insertProtocol(): neighbor_prot is null\");\n        if(position != ProtocolStack.ABOVE && position != ProtocolStack.BELOW)\n            throw new IllegalArgumentException(\"position has to be ABOVE or BELOW\");\n\n        Protocol neighbor=findProtocol(neighbor_prot);\n        if(neighbor == null)\n            throw new IllegalArgumentException(\"protocol \\\"\" + neighbor_prot + \"\\\" not found in \" + stack.printProtocolSpec(false));\n        \n        insertProtocolInStack(prot, neighbor,  position);\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Inserts an already created (and initialized) protocol into the protocol list. Sets the links\n     * to the protocols above and below correctly and adjusts the linked list of protocols accordingly.\n     * Note that this method may change the value of top_prot or bottom_prot.\n     * @param prot The protocol to be inserted. Before insertion, a sanity check will ensure that none\n     *             of the existing protocols have the same name as the new protocol.\n     * @param position Where to place the protocol with respect to the neighbor_prot (ABOVE, BELOW)\n     * @param neighbor_prot The name of the neighbor protocol. An exception will be thrown if this name\n     *                      is not found\n     * @exception Exception Will be thrown when the new protocol cannot be created, or inserted.\n     */\n    public void insertProtocol(Protocol prot, int position, String neighbor_prot) throws Exception {\n        Configurator.insertProtocol(prot, position, neighbor_prot, this);\n    }","id":8018,"modified_method":"/**\n     * Inserts an already created (and initialized) protocol into the protocol list. Sets the links\n     * to the protocols above and below correctly and adjusts the linked list of protocols accordingly.\n     * Note that this method may change the value of top_prot or bottom_prot.\n     * @param prot The protocol to be inserted. Before insertion, a sanity check will ensure that none\n     *             of the existing protocols have the same name as the new protocol.\n     * @param position Where to place the protocol with respect to the neighbor_prot (ABOVE, BELOW)\n     * @param neighbor_prot The name of the neighbor protocol. An exception will be thrown if this name\n     *                      is not found\n     * @exception Exception Will be thrown when the new protocol cannot be created, or inserted.\n     */\n    public void insertProtocol(Protocol prot, int position, String neighbor_prot) throws Exception {\n        if(neighbor_prot == null) throw new IllegalArgumentException(\"Configurator.insertProtocol(): neighbor_prot is null\");\n        if(position != ProtocolStack.ABOVE && position != ProtocolStack.BELOW)\n            throw new IllegalArgumentException(\"position has to be ABOVE or BELOW\");\n\n        Protocol neighbor=findProtocol(neighbor_prot);\n        if(neighbor == null)\n            throw new IllegalArgumentException(\"protocol \\\"\" + neighbor_prot + \"\\\" not found in \" + stack.printProtocolSpec(false));\n\n        if(position == ProtocolStack.BELOW && neighbor instanceof TP)\n            throw new IllegalArgumentException(\"Cannot insert protocol \" + prot.getName() + \" below transport protocol\");\n            \n        insertProtocolInStack(prot, neighbor,  position);\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"public ProtocolStack(JChannel channel, String setup_string) throws ChannelException {\n        if(setup_string != null)\n            this.setup_string=setup_string;\n        this.channel=channel;\n        // ClassConfigurator.getInstance(true); // will create the singleton\n\n        Class tmp=ClassConfigurator.class; // load this class, trigger init()\n        try {\n            tmp.newInstance();\n        }\n        catch(Exception e) {\n            throw new ChannelException(\"failed initializing ClassConfigurator\", e);\n        }\n    }","id":8019,"modified_method":"public ProtocolStack(JChannel channel, String setup_string) throws ChannelException {\n        \n        this.setup_string=setup_string;\n        this.channel=channel;       \n\n        Class<?> tmp=ClassConfigurator.class; // load this class, trigger init()\n        try {\n            tmp.newInstance();\n        }\n        catch(Exception e) {\n            throw new ChannelException(\"failed initializing ClassConfigurator\", e);\n        }\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Iterates through all the protocols <em>from top to bottom<\/em> and does the following:\n     * <ol>\n     * <li>Waits until all messages in the down queue have been flushed (ie., size is 0)\n     * <li>Calls stop() on the protocol\n     * <\/ol>\n     */\n    public void stopStack(String cluster_name) {\n        if(stopped) return;\n        Configurator.stopProtocolStack(getProtocols(), cluster_name, singleton_transports);\n        stopped=true;\n    }","id":8020,"modified_method":"/**\n     * Iterates through all the protocols <em>from top to bottom<\/em> and does the following:\n     * <ol>\n     * <li>Waits until all messages in the down queue have been flushed (ie., size is 0)\n     * <li>Calls stop() on the protocol\n     * <\/ol>\n     */\n    public void stopStack(String cluster_name) {\n        if(stopped) return;\n        for(final Protocol prot: getProtocols()) {\n            if(prot instanceof TP) {\n                TP transport=(TP)prot;                \n                if(transport.isSingleton()) {\n                    String singleton_name=transport.getSingletonName();                    \n                    final Map<String,Protocol> up_prots=transport.getUpProtocols();\n                    synchronized(up_prots) {\n                        up_prots.remove(cluster_name);\n                    }\n                    synchronized(singleton_transports) {\n                        Tuple<TP, ProtocolStack.RefCounter> val=singleton_transports.get(singleton_name);\n                        if(val != null) {\n                            ProtocolStack.RefCounter counter=val.getVal2();\n                            short num_starts=counter.decrementStartCount();\n                            if(num_starts > 0) {\n                                continue; // don't call TP.stop() if we still have references to the transport\n                            }\n                            //else\n                                // singletons.remove(singleton_name); // do the removal in destroyProtocolStack()\n                        }\n                    }\n                }\n            }\n            prot.stop();\n        }\n        stopped=true;\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"public String printProtocolSpecAsXML() {\n        StringBuilder sb=new StringBuilder();\n        Protocol     prot=bottom_prot;\n        Map<String,String>   tmpProps;\n        String       name;\n        Map.Entry    entry;\n        int len, max_len=30;\n\n        sb.append(\"<config>\\n\");\n        while(prot != null) {\n            name=prot.getName();\n            if(name != null) {\n                if(\"ProtocolStack\".equals(name))\n                    break;\n                sb.append(\"  <\").append(name).append(\" \");\n                tmpProps=getProps(prot);\n                if(tmpProps != null) {\n                    len=name.length();\n                    String s;\n                    for(Iterator it=tmpProps.entrySet().iterator(); it.hasNext();) {\n                        entry=(Map.Entry)it.next();\n                        s=entry.getKey() + \"=\\\"\" + entry.getValue() + \"\\\" \";\n                        if(len + s.length() > max_len) {\n                            sb.append(\"\\n       \");\n                            len=8;\n                        }\n                        sb.append(s);\n                        len+=s.length();\n                    }\n                }\n                sb.append(\"/>\\n\");\n                prot=prot.getUpProtocol();\n            }\n        }\n        sb.append(\"<\/config>\");\n\n        return sb.toString();\n    }","id":8021,"modified_method":"public String printProtocolSpecAsXML() {\n        StringBuilder sb=new StringBuilder();\n        Protocol prot=bottom_prot;\n        int len, max_len=30;\n\n        sb.append(\"<config>\\n\");\n        while(prot != null) {\n            String name=prot.getName();\n            if(name != null) {\n                if(\"ProtocolStack\".equals(name))\n                    break;\n                sb.append(\"  <\").append(name).append(\" \");\n                Map<String,String> tmpProps=getProps(prot);\n                if(tmpProps != null) {\n                    len=name.length();\n                    String s;\n                    for(Iterator<Entry<String,String>> it=tmpProps.entrySet().iterator();it.hasNext();) {\n                        Entry<String,String> entry=it.next();\n                        s=entry.getKey() + \"=\\\"\" + entry.getValue() + \"\\\" \";\n                        if(len + s.length() > max_len) {\n                            sb.append(\"\\n       \");\n                            len=8;\n                        }\n                        sb.append(s);\n                        len+=s.length();\n                    }\n                }\n                sb.append(\"/>\\n\");\n                prot=prot.getUpProtocol();\n            }\n        }\n        sb.append(\"<\/config>\");\n\n        return sb.toString();\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"public void setup(ProtocolStack stack) throws Exception {\n        Vector<Protocol> protocols=stack.copyProtocols(this);\n        Collections.reverse(protocols);\n        if(top_prot == null) {\n            top_prot=Configurator.connectProtocols(protocols);\n            top_prot.setUpProtocol(this);\n            bottom_prot=Configurator.getBottommostProtocol(top_prot);\n            Collections.reverse(protocols);\n            Configurator.initProtocolStack(protocols, singleton_transports);         // calls init() on each protocol, from bottom to top\n        }\n    }","id":8022,"modified_method":"public void setup(ProtocolStack stack) throws Exception {      \n        if(top_prot == null) {\n            top_prot=getProtocolStackFactory().setupProtocolStack(stack);\n            top_prot.setUpProtocol(this);\n            this.setDownProtocol(top_prot);\n            bottom_prot=getBottomProtocol();           \n            initProtocolStack();\n        }\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"public void destroy() {\n        if(top_prot != null) {\n            Configurator.destroyProtocolStack(getProtocols(), singleton_transports);           // destroys msg queues and threads\n            \n            /*\n             *Do not null top_prot reference since we need recreation of channel properties (JChannel#getProperties)\n             *during channel recreation, especially if those properties were modified after channel was created.\n             *We modify channel properties after channel creation in some tests for example\n             * \n             */\n            //top_prot=null;\n        }        \n    }","id":8023,"modified_method":"public void destroy() {\n        if(top_prot != null) {\n            for(Protocol prot: getProtocols()) {\n                if(prot instanceof TP) {\n                    TP transport=(TP)prot;\n                    if(transport.isSingleton()) {\n                        String singleton_name=transport.getSingletonName();\n                        synchronized(singleton_transports) {\n                            Tuple<TP, ProtocolStack.RefCounter> val=singleton_transports.get(singleton_name);\n                            if(val != null) {\n                                ProtocolStack.RefCounter counter=val.getVal2();\n                                short num_inits=counter.decrementInitCount();\n                                if(num_inits >= 1) {\n                                    continue;\n                                }\n                                else\n                                    singleton_transports.remove(singleton_name);\n                            }\n                        }\n                    }\n                }\n                prot.destroy();\n            }\n            \n            /*\n             *Do not null top_prot reference since we need recreation of channel properties (JChannel#getProperties)\n             *during channel recreation, especially if those properties were modified after channel was created.\n             *We modify channel properties after channel creation in some tests for example\n             * \n             */\n            //top_prot=null;\n        }        \n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"public ProtocolTester(String prot_spec, Protocol harness) throws Exception {\n        if(prot_spec == null || harness == null)\n            throw new Exception(\"ProtocolTester(): prot_spec or harness is null\");\n\n        props=prot_spec;\n        this.harness=harness;\n        props=\"LOOPBACK:\" + props; // add a loopback layer at the bottom of the stack\n\n        config=new Configurator();\n        ProtocolStack stack=new ProtocolStack();\n        top=Configurator.setupProtocolStack(props, stack);\n        harness.setDownProtocol(top);\n        top.setUpProtocol(harness); // +++\n\n        Configurator.initProtocolStack(getProtocols(), null);\n\n        bottom=getBottomProtocol(top);\n\n        // has to be set after StartProtocolStack, otherwise the up and down handler threads in the harness\n        // will be started as well (we don't want that) !\n        // top.setUpProtocol(harness);\n    }","id":8024,"modified_method":"public ProtocolTester(String prot_spec, Protocol harness) throws Exception {\n        if(prot_spec == null || harness == null)\n            throw new Exception(\"ProtocolTester(): prot_spec or harness is null\");\n\n        props=prot_spec;\n        this.harness=harness;\n        props=\"LOOPBACK:\" + props; // add a loopback layer at the bottom of the stack\n\n        config=new Configurator();\n        JChannel mock_channel=new JChannel() {};\n        ProtocolStack stack=new ProtocolStack(mock_channel,props);\n        stack.setup();\n        stack.insertProtocol(harness, ProtocolStack.ABOVE, stack.getTopProtocol().getClass());\n        \n        bottom=stack.getBottomProtocol();\n\n        // has to be set after StartProtocolStack, otherwise the up and down handler threads in the harness\n        // will be started as well (we don't want that) !\n        // top.setUpProtocol(harness);\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"public void stop() {\n        Protocol p;\n        if(harness != null) {\n            List<Protocol> protocols=new LinkedList<Protocol>();\n            p=harness;\n            while(p != null) {\n                protocols.add(p);\n                p.stop();\n                p=p.getDownProtocol();\n            }\n            Configurator.destroyProtocolStack(protocols, null);\n        }\n        else if(top != null) {\n            p=top;\n            List<Protocol> protocols=new LinkedList<Protocol>();\n            while(p != null) {\n                protocols.add(p);\n                p.stop();\n                p=p.getDownProtocol();\n            }\n            Configurator.destroyProtocolStack(protocols, null);\n        }\n    }","id":8025,"modified_method":"public void stop() {\n        Protocol p;\n        if(harness != null) {\n            List<Protocol> protocols=new LinkedList<Protocol>();\n            p=harness;\n            while(p != null) {\n                protocols.add(p);\n                p.stop();\n                p=p.getDownProtocol();\n            }\n            p=harness;\n            while(p != null) {                \n                p.destroy();\n                p=p.getDownProtocol();\n            }            \n        }\n        else if(top != null) {\n            p=top;\n            List<Protocol> protocols=new LinkedList<Protocol>();\n            while(p != null) {\n                protocols.add(p);\n                p.stop();\n                p=p.getDownProtocol();\n            }    \n            p=top;\n            while(p != null) {                \n                p.destroy();\n                p=p.getDownProtocol();\n            }    \n        }\n    }","commit_id":"cfca0798a7fac01f3392730747ebfba9701852eb","url":"https://github.com/belaban/JGroups"},{"original_method":"@Override\n    protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {\n        String addressUri = uri;\n        if (!uri.startsWith(\"http4:\") && !uri.startsWith(\"https4:\")) {\n            addressUri = remaining;\n        }\n        Map<String, Object> httpClientParameters = new HashMap<String, Object>(parameters);\n        // http client can be configured from URI options\n        HttpParams clientParams = configureHttpParams(parameters);\n        // validate that we could resolve all httpClient. parameters as this component is lenient\n        validateParameters(uri, parameters, \"httpClient.\");\n        \n        HttpBinding httpBinding = resolveAndRemoveReferenceParameter(parameters, \"httpBindingRef\", HttpBinding.class);\n        if (httpBinding == null) {\n            httpBinding = resolveAndRemoveReferenceParameter(parameters, \"httpBinding\", HttpBinding.class);\n        }\n\n        HttpClientConfigurer httpClientConfigurer = resolveAndRemoveReferenceParameter(parameters, \"httpClientConfigurerRef\", HttpClientConfigurer.class);\n        if (httpClientConfigurer == null) {\n            httpClientConfigurer = resolveAndRemoveReferenceParameter(parameters, \"httpClientConfigurer\", HttpClientConfigurer.class);\n        }\n\n        HttpContext httpContext = resolveAndRemoveReferenceParameter(parameters, \"httpContextRef\", HttpContext.class);\n        if (httpContext == null) {\n            httpContext = resolveAndRemoveReferenceParameter(parameters, \"httpContext\", HttpContext.class);\n        }\n\n        X509HostnameVerifier x509HostnameVerifier = resolveAndRemoveReferenceParameter(parameters, \"x509HostnameVerifier\", X509HostnameVerifier.class);\n        if (x509HostnameVerifier == null) {\n            x509HostnameVerifier = getX509HostnameVerifier();\n        }\n        \n        SSLContextParameters sslContextParameters = resolveAndRemoveReferenceParameter(parameters, \"sslContextParametersRef\", SSLContextParameters.class);\n        if (sslContextParameters == null) {\n            sslContextParameters = getSslContextParameters();\n        }\n        String httpMethodRestrict = getAndRemoveParameter(parameters, \"httpMethodRestrict\", String.class);\n        \n        boolean secure = HttpHelper.isSecureConnection(uri);\n\n        // create the configurer to use for this endpoint\n        HttpClientConfigurer configurer = createHttpClientConfigurer(parameters, secure);\n        URI endpointUri = URISupport.createRemainingURI(new URI(addressUri), httpClientParameters);\n        // create the endpoint and set the http uri to be null\n        HttpEndpoint endpoint = new HttpEndpoint(endpointUri.toString(), this, clientParams, clientConnectionManager, configurer);\n        // configure the endpoint\n        setProperties(endpoint, parameters);\n        // The httpUri should be start with http or https\n        String httpUriAddress = addressUri;\n        if (addressUri.startsWith(\"http4\")) {\n            httpUriAddress = \"http\" + addressUri.substring(5);\n        }\n        if (addressUri.startsWith(\"https4\")) {\n            httpUriAddress = \"https\" + addressUri.substring(6);\n        }\n        // restructure uri to be based on the parameters left as we dont want to include the Camel internal options\n        // build up the http uri\n        URI httpUri = URISupport.createRemainingURI(new URI(httpUriAddress), parameters);\n\n        // validate http uri that end-user did not duplicate the http part that can be a common error\n        String part = httpUri.getSchemeSpecificPart();\n        if (part != null) {\n            part = part.toLowerCase();\n            if (part.startsWith(\"//http//\") || part.startsWith(\"//https//\") || part.startsWith(\"//http://\") || part.startsWith(\"//https://\")) {\n                throw new ResolveEndpointFailedException(uri,\n                        \"The uri part is not configured correctly. You have duplicated the http(s) protocol.\");\n            }\n        }\n        endpoint.setHttpUri(httpUri);\n        setEndpointHeaderFilterStrategy(endpoint);\n        endpoint.setBinding(getHttpBinding());\n        if (httpBinding != null) {\n            endpoint.setHttpBinding(httpBinding);\n        }\n        if (httpClientConfigurer != null) {\n            endpoint.setHttpClientConfigurer(httpClientConfigurer);\n        }\n        if (httpMethodRestrict != null) {\n            endpoint.setHttpMethodRestrict(httpMethodRestrict);\n        }\n        endpoint.setHttpContext(getHttpContext());\n        if (httpContext != null) {\n            endpoint.setHttpContext(httpContext);\n        }\n        // register port on schema registry\n        int port = getPort(httpUri);\n        registerPort(secure, x509HostnameVerifier, port, sslContextParameters);\n\n        return endpoint;\n    }","id":8026,"modified_method":"@Override\n    protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {\n        String addressUri = uri;\n        if (!uri.startsWith(\"http4:\") && !uri.startsWith(\"https4:\")) {\n            addressUri = remaining;\n        }\n        Map<String, Object> httpClientParameters = new HashMap<String, Object>(parameters);\n        // http client can be configured from URI options\n        HttpParams clientParams = configureHttpParams(parameters);\n        // validate that we could resolve all httpClient. parameters as this component is lenient\n        validateParameters(uri, parameters, \"httpClient.\");\n        \n        HttpBinding httpBinding = resolveAndRemoveReferenceParameter(parameters, \"httpBindingRef\", HttpBinding.class);\n        if (httpBinding == null) {\n            httpBinding = resolveAndRemoveReferenceParameter(parameters, \"httpBinding\", HttpBinding.class);\n        }\n\n        HttpClientConfigurer httpClientConfigurer = resolveAndRemoveReferenceParameter(parameters, \"httpClientConfigurerRef\", HttpClientConfigurer.class);\n        if (httpClientConfigurer == null) {\n            httpClientConfigurer = resolveAndRemoveReferenceParameter(parameters, \"httpClientConfigurer\", HttpClientConfigurer.class);\n        }\n\n        HttpContext httpContext = resolveAndRemoveReferenceParameter(parameters, \"httpContextRef\", HttpContext.class);\n        if (httpContext == null) {\n            httpContext = resolveAndRemoveReferenceParameter(parameters, \"httpContext\", HttpContext.class);\n        }\n\n        X509HostnameVerifier x509HostnameVerifier = resolveAndRemoveReferenceParameter(parameters, \"x509HostnameVerifier\", X509HostnameVerifier.class);\n        if (x509HostnameVerifier == null) {\n            x509HostnameVerifier = getX509HostnameVerifier();\n        }\n        \n        SSLContextParameters sslContextParameters = resolveAndRemoveReferenceParameter(parameters, \"sslContextParametersRef\", SSLContextParameters.class);\n        if (sslContextParameters == null) {\n            sslContextParameters = getSslContextParameters();\n        }\n        String httpMethodRestrict = getAndRemoveParameter(parameters, \"httpMethodRestrict\", String.class);\n        \n        HeaderFilterStrategy headerFilterStrategy = resolveAndRemoveReferenceParameter(parameters, \"headerFilterStrategy\", HeaderFilterStrategy.class);\n        \n        boolean secure = HttpHelper.isSecureConnection(uri);\n\n        // create the configurer to use for this endpoint\n        HttpClientConfigurer configurer = createHttpClientConfigurer(parameters, secure);\n        URI endpointUri = URISupport.createRemainingURI(new URI(addressUri), httpClientParameters);\n        // create the endpoint and set the http uri to be null\n        HttpEndpoint endpoint = new HttpEndpoint(endpointUri.toString(), this, clientParams, clientConnectionManager, configurer);\n        // configure the endpoint\n        setProperties(endpoint, parameters);\n        // The httpUri should be start with http or https\n        String httpUriAddress = addressUri;\n        if (addressUri.startsWith(\"http4\")) {\n            httpUriAddress = \"http\" + addressUri.substring(5);\n        }\n        if (addressUri.startsWith(\"https4\")) {\n            httpUriAddress = \"https\" + addressUri.substring(6);\n        }\n        // restructure uri to be based on the parameters left as we dont want to include the Camel internal options\n        // build up the http uri\n        URI httpUri = URISupport.createRemainingURI(new URI(httpUriAddress), parameters);\n\n        // validate http uri that end-user did not duplicate the http part that can be a common error\n        String part = httpUri.getSchemeSpecificPart();\n        if (part != null) {\n            part = part.toLowerCase();\n            if (part.startsWith(\"//http//\") || part.startsWith(\"//https//\") || part.startsWith(\"//http://\") || part.startsWith(\"//https://\")) {\n                throw new ResolveEndpointFailedException(uri,\n                        \"The uri part is not configured correctly. You have duplicated the http(s) protocol.\");\n            }\n        }\n        endpoint.setHttpUri(httpUri);\n        if (headerFilterStrategy != null) {\n            endpoint.setHeaderFilterStrategy(headerFilterStrategy);\n        } else {\n            setEndpointHeaderFilterStrategy(endpoint);\n        }\n        endpoint.setBinding(getHttpBinding());\n        if (httpBinding != null) {\n            endpoint.setHttpBinding(httpBinding);\n        }\n        if (httpClientConfigurer != null) {\n            endpoint.setHttpClientConfigurer(httpClientConfigurer);\n        }\n        if (httpMethodRestrict != null) {\n            endpoint.setHttpMethodRestrict(httpMethodRestrict);\n        }\n        endpoint.setHttpContext(getHttpContext());\n        if (httpContext != null) {\n            endpoint.setHttpContext(httpContext);\n        }\n        // register port on schema registry\n        int port = getPort(httpUri);\n        registerPort(secure, x509HostnameVerifier, port, sslContextParameters);\n\n        return endpoint;\n    }","commit_id":"ab0275d580155220fa92ac7fa560768fef08952b","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testDoNotMessWithComponent() throws Exception {\n        // get default\n        HttpEndpoint end = context.getEndpoint(\"http4://www.google.com\", HttpEndpoint.class);\n        assertIsInstanceOf(MyBinding.class, end.getBinding());\n\n        // use a endpoint specific binding\n        HttpEndpoint end2 = context.getEndpoint(\"http4://www.google.com?httpBinding=#other\", HttpEndpoint.class);\n        assertIsInstanceOf(MyOtherBinding.class, end2.getBinding());\n\n        // and the default option has not been messed with\n        HttpEndpoint end3 = context.getEndpoint(\"http4://www.google.com\", HttpEndpoint.class);\n        assertIsInstanceOf(MyBinding.class, end3.getBinding());\n    }","id":8027,"modified_method":"@Test\n    public void testDoNotMessWithComponent() throws Exception {\n        // get default\n        HttpEndpoint end = context.getEndpoint(\"http4://www.google.com\", HttpEndpoint.class);\n        assertIsInstanceOf(MyBinding.class, end.getBinding());\n\n        // use a endpoint specific binding\n        HttpEndpoint end2 = context.getEndpoint(\"http4://www.google.com?httpBinding=#other\", HttpEndpoint.class);\n        assertIsInstanceOf(MyOtherBinding.class, end2.getBinding());\n\n        // and the default option has not been messed with\n        HttpEndpoint end3 = context.getEndpoint(\"http4://www.google.com\", HttpEndpoint.class);\n        assertIsInstanceOf(MyBinding.class, end3.getBinding());\n        \n        // test the headerFilterStrategy\n        HttpEndpoint end4 = context.getEndpoint(\"http4://www.google.com?headerFilterStrategy=#myStrategy\", HttpEndpoint.class);\n        assertIsInstanceOf(MyHeaderFilterStrategy.class, end4.getHeaderFilterStrategy());\n    }","commit_id":"ab0275d580155220fa92ac7fa560768fef08952b","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected JndiRegistry createRegistry() throws Exception {\n        JndiRegistry jndi = super.createRegistry();\n        jndi.bind(\"other\", new MyOtherBinding());\n        return jndi;\n    }","id":8028,"modified_method":"@Override\n    protected JndiRegistry createRegistry() throws Exception {\n        JndiRegistry jndi = super.createRegistry();\n        jndi.bind(\"other\", new MyOtherBinding());\n        jndi.bind(\"myStrategy\", new MyHeaderFilterStrategy());\n        return jndi;\n    }","commit_id":"ab0275d580155220fa92ac7fa560768fef08952b","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {\n\n        // must extract well known parameters before we create the endpoint\n        List<Handler> handlerList = resolveAndRemoveReferenceListParameter(parameters, \"handlers\", Handler.class);\n        HttpBinding binding = resolveAndRemoveReferenceParameter(parameters, \"httpBindingRef\", HttpBinding.class);\n        JettyHttpBinding jettyBinding = resolveAndRemoveReferenceParameter(parameters, \"jettyHttpBindingRef\", JettyHttpBinding.class);\n        Boolean throwExceptionOnFailure = getAndRemoveParameter(parameters, \"throwExceptionOnFailure\", Boolean.class);\n        Boolean transferException = getAndRemoveParameter(parameters, \"transferException\", Boolean.class);\n        Boolean bridgeEndpoint = getAndRemoveParameter(parameters, \"bridgeEndpoint\", Boolean.class);\n        Boolean matchOnUriPrefix = getAndRemoveParameter(parameters, \"matchOnUriPrefix\", Boolean.class);\n        Boolean enableJmx = getAndRemoveParameter(parameters, \"enableJmx\", Boolean.class);\n        Boolean enableMultipartFilter = getAndRemoveParameter(parameters, \"enableMultipartFilter\",\n                                                              Boolean.class, true);\n        Filter multipartFilter = resolveAndRemoveReferenceParameter(parameters, \"multipartFilterRef\", Filter.class);\n        List<Filter> filters = resolveAndRemoveReferenceListParameter(parameters, \"filtersRef\", Filter.class);\n        Long continuationTimeout = getAndRemoveParameter(parameters, \"continuationTimeout\", Long.class);\n        Boolean useContinuation = getAndRemoveParameter(parameters, \"useContinuation\", Boolean.class);\n        String httpMethodRestrict = getAndRemoveParameter(parameters, \"httpMethodRestrict\", String.class);\n        SSLContextParameters sslContextParameters = resolveAndRemoveReferenceParameter(parameters, \"sslContextParametersRef\", SSLContextParameters.class);\n        SSLContextParameters ssl = sslContextParameters != null ? sslContextParameters : this.sslContextParameters;\n        // extract httpClient. parameters\n        Map<String, Object> httpClientParameters = IntrospectionSupport.extractProperties(parameters, \"httpClient.\");\n\n        String address = remaining;\n        URI addressUri = new URI(UnsafeUriCharactersEncoder.encode(address));\n        URI endpointUri = URISupport.createRemainingURI(addressUri, parameters);\n        // restructure uri to be based on the parameters left as we dont want to include the Camel internal options\n        URI httpUri = URISupport.createRemainingURI(addressUri, parameters);\n        // create endpoint after all known parameters have been extracted from parameters\n        JettyHttpEndpoint endpoint = new JettyHttpEndpoint(this, endpointUri.toString(), httpUri);\n        setEndpointHeaderFilterStrategy(endpoint);\n\n        if (httpClientParameters != null && !httpClientParameters.isEmpty()) {\n            endpoint.setHttpClientParameters(httpClientParameters);\n        }\n        if (handlerList.size() > 0) {\n            endpoint.setHandlers(handlerList);\n        }\n        // prefer to use endpoint configured over component configured\n        if (binding == null) {\n            // fallback to component configured\n            binding = getHttpBinding();\n        }\n        if (binding != null) {\n            endpoint.setBinding(binding);\n        }\n        // prefer to use endpoint configured over component configured\n        if (jettyBinding == null) {\n            // fallback to component configured\n            jettyBinding = getJettyHttpBinding();\n        }\n        if (jettyBinding != null) {\n            endpoint.setJettyBinding(jettyBinding);\n        }\n        // should we use an exception for failed error codes?\n        if (throwExceptionOnFailure != null) {\n            endpoint.setThrowExceptionOnFailure(throwExceptionOnFailure);\n        }\n        // should we transfer exception as serialized object\n        if (transferException != null) {\n            endpoint.setTransferException(transferException);\n        }\n        if (bridgeEndpoint != null) {\n            endpoint.setBridgeEndpoint(bridgeEndpoint);\n        }\n        if (matchOnUriPrefix != null) {\n            endpoint.setMatchOnUriPrefix(matchOnUriPrefix);\n        }\n        if (enableJmx != null) {\n            endpoint.setEnableJmx(enableJmx);\n        } else { \n            // set this option based on setting of JettyHttpComponent\n            endpoint.setEnableJmx(isEnableJmx());\n        }\n        \n        endpoint.setEnableMultipartFilter(enableMultipartFilter);\n        if (multipartFilter != null) {\n            endpoint.setMultipartFilter(multipartFilter);\n            endpoint.setEnableMultipartFilter(true);\n        }\n        if (filters != null) {\n            endpoint.setFilters(filters);\n        }\n\n        if (continuationTimeout != null) {\n            endpoint.setContinuationTimeout(continuationTimeout);\n        }\n        if (useContinuation != null) {\n            endpoint.setUseContinuation(useContinuation);\n        }\n        if (httpMethodRestrict != null) {\n            endpoint.setHttpMethodRestrict(httpMethodRestrict);\n        }\n        if (ssl != null) {\n            endpoint.setSslContextParameters(ssl);\n        }\n\n        setProperties(endpoint, parameters);\n        return endpoint;\n    }","id":8029,"modified_method":"@Override\n    protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {\n\n        // must extract well known parameters before we create the endpoint\n        List<Handler> handlerList = resolveAndRemoveReferenceListParameter(parameters, \"handlers\", Handler.class);\n        HttpBinding binding = resolveAndRemoveReferenceParameter(parameters, \"httpBindingRef\", HttpBinding.class);\n        JettyHttpBinding jettyBinding = resolveAndRemoveReferenceParameter(parameters, \"jettyHttpBindingRef\", JettyHttpBinding.class);\n        Boolean throwExceptionOnFailure = getAndRemoveParameter(parameters, \"throwExceptionOnFailure\", Boolean.class);\n        Boolean transferException = getAndRemoveParameter(parameters, \"transferException\", Boolean.class);\n        Boolean bridgeEndpoint = getAndRemoveParameter(parameters, \"bridgeEndpoint\", Boolean.class);\n        Boolean matchOnUriPrefix = getAndRemoveParameter(parameters, \"matchOnUriPrefix\", Boolean.class);\n        Boolean enableJmx = getAndRemoveParameter(parameters, \"enableJmx\", Boolean.class);\n        Boolean enableMultipartFilter = getAndRemoveParameter(parameters, \"enableMultipartFilter\",\n                                                              Boolean.class, true);\n        Filter multipartFilter = resolveAndRemoveReferenceParameter(parameters, \"multipartFilterRef\", Filter.class);\n        List<Filter> filters = resolveAndRemoveReferenceListParameter(parameters, \"filtersRef\", Filter.class);\n        Long continuationTimeout = getAndRemoveParameter(parameters, \"continuationTimeout\", Long.class);\n        Boolean useContinuation = getAndRemoveParameter(parameters, \"useContinuation\", Boolean.class);\n        String httpMethodRestrict = getAndRemoveParameter(parameters, \"httpMethodRestrict\", String.class);\n        HeaderFilterStrategy headerFilterStrategy = resolveAndRemoveReferenceParameter(parameters, \"headerFilterStrategy\", HeaderFilterStrategy.class);\n        SSLContextParameters sslContextParameters = resolveAndRemoveReferenceParameter(parameters, \"sslContextParametersRef\", SSLContextParameters.class);\n        SSLContextParameters ssl = sslContextParameters != null ? sslContextParameters : this.sslContextParameters;\n        // extract httpClient. parameters\n        Map<String, Object> httpClientParameters = IntrospectionSupport.extractProperties(parameters, \"httpClient.\");\n\n        String address = remaining;\n        URI addressUri = new URI(UnsafeUriCharactersEncoder.encode(address));\n        URI endpointUri = URISupport.createRemainingURI(addressUri, parameters);\n        // restructure uri to be based on the parameters left as we dont want to include the Camel internal options\n        URI httpUri = URISupport.createRemainingURI(addressUri, parameters);\n        // create endpoint after all known parameters have been extracted from parameters\n        JettyHttpEndpoint endpoint = new JettyHttpEndpoint(this, endpointUri.toString(), httpUri);\n        if (headerFilterStrategy != null) {\n            endpoint.setHeaderFilterStrategy(headerFilterStrategy);\n        } else {\n            setEndpointHeaderFilterStrategy(endpoint);\n        }\n\n        if (httpClientParameters != null && !httpClientParameters.isEmpty()) {\n            endpoint.setHttpClientParameters(httpClientParameters);\n        }\n        if (handlerList.size() > 0) {\n            endpoint.setHandlers(handlerList);\n        }\n        // prefer to use endpoint configured over component configured\n        if (binding == null) {\n            // fallback to component configured\n            binding = getHttpBinding();\n        }\n        if (binding != null) {\n            endpoint.setBinding(binding);\n        }\n        // prefer to use endpoint configured over component configured\n        if (jettyBinding == null) {\n            // fallback to component configured\n            jettyBinding = getJettyHttpBinding();\n        }\n        if (jettyBinding != null) {\n            endpoint.setJettyBinding(jettyBinding);\n        }\n        // should we use an exception for failed error codes?\n        if (throwExceptionOnFailure != null) {\n            endpoint.setThrowExceptionOnFailure(throwExceptionOnFailure);\n        }\n        // should we transfer exception as serialized object\n        if (transferException != null) {\n            endpoint.setTransferException(transferException);\n        }\n        if (bridgeEndpoint != null) {\n            endpoint.setBridgeEndpoint(bridgeEndpoint);\n        }\n        if (matchOnUriPrefix != null) {\n            endpoint.setMatchOnUriPrefix(matchOnUriPrefix);\n        }\n        if (enableJmx != null) {\n            endpoint.setEnableJmx(enableJmx);\n        } else { \n            // set this option based on setting of JettyHttpComponent\n            endpoint.setEnableJmx(isEnableJmx());\n        }\n        \n        endpoint.setEnableMultipartFilter(enableMultipartFilter);\n        if (multipartFilter != null) {\n            endpoint.setMultipartFilter(multipartFilter);\n            endpoint.setEnableMultipartFilter(true);\n        }\n        if (filters != null) {\n            endpoint.setFilters(filters);\n        }\n\n        if (continuationTimeout != null) {\n            endpoint.setContinuationTimeout(continuationTimeout);\n        }\n        if (useContinuation != null) {\n            endpoint.setUseContinuation(useContinuation);\n        }\n        if (httpMethodRestrict != null) {\n            endpoint.setHttpMethodRestrict(httpMethodRestrict);\n        }\n        if (ssl != null) {\n            endpoint.setSslContextParameters(ssl);\n        }\n\n        setProperties(endpoint, parameters);\n        return endpoint;\n    }","commit_id":"06b9749e22f31793b1f2ea867e5ee9977aa23408","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {\n        if (httpRegistry == null) {\n            httpRegistry = DefaultHttpRegistry.getSingletonHttpRegistry();\n        }\n\n        HttpClientParams params = new HttpClientParams();\n        IntrospectionSupport.setProperties(params, parameters, \"httpClient.\");\n\n        // create the configurer to use for this endpoint\n        final Set<AuthMethod> authMethods = new LinkedHashSet<AuthMethod>();\n        HttpClientConfigurer configurer = createHttpClientConfigurer(parameters, authMethods);\n\n        // must extract well known parameters before we create the endpoint\n        Boolean throwExceptionOnFailure = getAndRemoveParameter(parameters, \"throwExceptionOnFailure\", Boolean.class);\n        Boolean transferException = getAndRemoveParameter(parameters, \"transferException\", Boolean.class);\n        Boolean bridgeEndpoint = getAndRemoveParameter(parameters, \"bridgeEndpoint\", Boolean.class);\n        HttpBinding binding = resolveAndRemoveReferenceParameter(parameters, \"httpBindingRef\", HttpBinding.class);\n        Boolean matchOnUriPrefix = getAndRemoveParameter(parameters, \"matchOnUriPrefix\", Boolean.class);\n        String servletName = getAndRemoveParameter(parameters, \"servletName\", String.class, getServletName());\n        String httpMethodRestrict = getAndRemoveParameter(parameters, \"httpMethodRestrict\", String.class);\n\n        // restructure uri to be based on the parameters left as we dont want to include the Camel internal options\n        URI httpUri = URISupport.createRemainingURI(new URI(UnsafeUriCharactersEncoder.encode(uri)), parameters);\n\n        ServletEndpoint endpoint = createServletEndpoint(uri, this, httpUri, params, getHttpConnectionManager(), configurer);\n        endpoint.setServletName(servletName);\n        setEndpointHeaderFilterStrategy(endpoint);\n\n        // prefer to use endpoint configured over component configured\n        if (binding == null) {\n            // fallback to component configured\n            binding = getHttpBinding();\n        }\n        if (binding != null) {\n            endpoint.setBinding(binding);\n        }\n        // should we use an exception for failed error codes?\n        if (throwExceptionOnFailure != null) {\n            endpoint.setThrowExceptionOnFailure(throwExceptionOnFailure);\n        }\n        // should we transfer exception as serialized object\n        if (transferException != null) {\n            endpoint.setTransferException(transferException);\n        }\n        if (bridgeEndpoint != null) {\n            endpoint.setBridgeEndpoint(bridgeEndpoint);\n        }\n        if (matchOnUriPrefix != null) {\n            endpoint.setMatchOnUriPrefix(matchOnUriPrefix);\n        }\n        if (httpMethodRestrict != null) {\n            endpoint.setHttpMethodRestrict(httpMethodRestrict);\n        }\n\n        setProperties(endpoint, parameters);\n        return endpoint;\n    }","id":8030,"modified_method":"@Override\n    protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {\n        if (httpRegistry == null) {\n            httpRegistry = DefaultHttpRegistry.getSingletonHttpRegistry();\n        }\n\n        HttpClientParams params = new HttpClientParams();\n        IntrospectionSupport.setProperties(params, parameters, \"httpClient.\");\n\n        // create the configurer to use for this endpoint\n        final Set<AuthMethod> authMethods = new LinkedHashSet<AuthMethod>();\n        HttpClientConfigurer configurer = createHttpClientConfigurer(parameters, authMethods);\n\n        // must extract well known parameters before we create the endpoint\n        Boolean throwExceptionOnFailure = getAndRemoveParameter(parameters, \"throwExceptionOnFailure\", Boolean.class);\n        Boolean transferException = getAndRemoveParameter(parameters, \"transferException\", Boolean.class);\n        Boolean bridgeEndpoint = getAndRemoveParameter(parameters, \"bridgeEndpoint\", Boolean.class);\n        HttpBinding binding = resolveAndRemoveReferenceParameter(parameters, \"httpBindingRef\", HttpBinding.class);\n        Boolean matchOnUriPrefix = getAndRemoveParameter(parameters, \"matchOnUriPrefix\", Boolean.class);\n        String servletName = getAndRemoveParameter(parameters, \"servletName\", String.class, getServletName());\n        String httpMethodRestrict = getAndRemoveParameter(parameters, \"httpMethodRestrict\", String.class);\n        HeaderFilterStrategy headerFilterStrategy = resolveAndRemoveReferenceParameter(parameters, \"headerFilterStrategy\", HeaderFilterStrategy.class);\n\n        // restructure uri to be based on the parameters left as we dont want to include the Camel internal options\n        URI httpUri = URISupport.createRemainingURI(new URI(UnsafeUriCharactersEncoder.encode(uri)), parameters);\n\n        ServletEndpoint endpoint = createServletEndpoint(uri, this, httpUri, params, getHttpConnectionManager(), configurer);\n        endpoint.setServletName(servletName);\n        if (headerFilterStrategy != null) {\n            endpoint.setHeaderFilterStrategy(headerFilterStrategy);\n        } else {\n            setEndpointHeaderFilterStrategy(endpoint);\n        }\n\n        // prefer to use endpoint configured over component configured\n        if (binding == null) {\n            // fallback to component configured\n            binding = getHttpBinding();\n        }\n        if (binding != null) {\n            endpoint.setBinding(binding);\n        }\n        // should we use an exception for failed error codes?\n        if (throwExceptionOnFailure != null) {\n            endpoint.setThrowExceptionOnFailure(throwExceptionOnFailure);\n        }\n        // should we transfer exception as serialized object\n        if (transferException != null) {\n            endpoint.setTransferException(transferException);\n        }\n        if (bridgeEndpoint != null) {\n            endpoint.setBridgeEndpoint(bridgeEndpoint);\n        }\n        if (matchOnUriPrefix != null) {\n            endpoint.setMatchOnUriPrefix(matchOnUriPrefix);\n        }\n        if (httpMethodRestrict != null) {\n            endpoint.setHttpMethodRestrict(httpMethodRestrict);\n        }\n\n        setProperties(endpoint, parameters);\n        return endpoint;\n    }","commit_id":"87c0e8c1351adc6e760f943b9b1f879484a5b664","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {\n        String addressUri = uri;\n        if (!uri.startsWith(\"http:\") && !uri.startsWith(\"https:\")) {\n            addressUri = remaining;\n        }\n        Map<String, Object> httpClientParameters = new HashMap<String, Object>(parameters);\n        // must extract well known parameters before we create the endpoint\n        HttpBinding binding = resolveAndRemoveReferenceParameter(parameters, \"httpBindingRef\", HttpBinding.class);\n        if (binding == null) {\n            // try without ref\n            binding = resolveAndRemoveReferenceParameter(parameters, \"httpBinding\", HttpBinding.class);\n        }\n        String proxyHost = getAndRemoveParameter(parameters, \"proxyHost\", String.class);\n        Integer proxyPort = getAndRemoveParameter(parameters, \"proxyPort\", Integer.class);\n        String authMethodPriority = getAndRemoveParameter(parameters, \"authMethodPriority\", String.class);\n        // http client can be configured from URI options\n        HttpClientParams clientParams = new HttpClientParams();\n        IntrospectionSupport.setProperties(clientParams, parameters, \"httpClient.\");\n        // validate that we could resolve all httpClient. parameters as this component is lenient\n        validateParameters(uri, parameters, \"httpClient.\");       \n        \n        // create the configurer to use for this endpoint (authMethods contains the used methods created by the configurer)\n        final Set<AuthMethod> authMethods = new LinkedHashSet<AuthMethod>();\n        HttpClientConfigurer configurer = createHttpClientConfigurer(parameters, authMethods);\n        URI endpointUri = URISupport.createRemainingURI(new URI(addressUri), httpClientParameters);\n       \n        // create the endpoint\n        HttpEndpoint endpoint = new HttpEndpoint(endpointUri.toString(), this, clientParams, httpConnectionManager, configurer);\n        setEndpointHeaderFilterStrategy(endpoint);\n\n        // prefer to use endpoint configured over component configured\n        if (binding == null) {\n            // fallback to component configured\n            binding = getHttpBinding();\n        }\n        if (binding != null) {\n            endpoint.setBinding(binding);\n        }\n        if (proxyHost != null) {\n            endpoint.setProxyHost(proxyHost);\n            endpoint.setProxyPort(proxyPort);\n        } else if (httpConfiguration != null) {\n            endpoint.setProxyHost(httpConfiguration.getProxyHost());\n            endpoint.setProxyPort(httpConfiguration.getProxyPort());\n        }\n        if (authMethodPriority != null) {\n            endpoint.setAuthMethodPriority(authMethodPriority);\n        } else if (httpConfiguration != null && httpConfiguration.getAuthMethodPriority() != null) {\n            endpoint.setAuthMethodPriority(httpConfiguration.getAuthMethodPriority());\n        } else {\n            // no explicit auth method priority configured, so use convention over configuration\n            // and set priority based on auth method\n            if (!authMethods.isEmpty()) {\n                authMethodPriority = CollectionHelper.collectionAsCommaDelimitedString(authMethods);\n                endpoint.setAuthMethodPriority(authMethodPriority);\n            }\n        }\n        setProperties(endpoint, parameters);\n        // restructure uri to be based on the parameters left as we dont want to include the Camel internal options\n        URI httpUri = URISupport.createRemainingURI(new URI(addressUri), parameters);\n        \n        // validate http uri that end-user did not duplicate the http part that can be a common error\n        String part = httpUri.getSchemeSpecificPart();\n        if (part != null) {\n            part = part.toLowerCase();\n            if (part.startsWith(\"//http//\") || part.startsWith(\"//https//\") || part.startsWith(\"//http://\") || part.startsWith(\"//https://\")) {\n                throw new ResolveEndpointFailedException(uri,\n                        \"The uri part is not configured correctly. You have duplicated the http(s) protocol.\");\n            }\n        }\n        endpoint.setHttpUri(httpUri);\n        return endpoint;\n    }","id":8031,"modified_method":"@Override\n    protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {\n        String addressUri = uri;\n        if (!uri.startsWith(\"http:\") && !uri.startsWith(\"https:\")) {\n            addressUri = remaining;\n        }\n        Map<String, Object> httpClientParameters = new HashMap<String, Object>(parameters);\n        // must extract well known parameters before we create the endpoint\n        HttpBinding binding = resolveAndRemoveReferenceParameter(parameters, \"httpBindingRef\", HttpBinding.class);\n        if (binding == null) {\n            // try without ref\n            binding = resolveAndRemoveReferenceParameter(parameters, \"httpBinding\", HttpBinding.class);\n        }\n        String proxyHost = getAndRemoveParameter(parameters, \"proxyHost\", String.class);\n        Integer proxyPort = getAndRemoveParameter(parameters, \"proxyPort\", Integer.class);\n        String authMethodPriority = getAndRemoveParameter(parameters, \"authMethodPriority\", String.class);\n        HeaderFilterStrategy headerFilterStrategy = resolveAndRemoveReferenceParameter(parameters, \"headerFilterStrategy\", HeaderFilterStrategy.class);\n        // http client can be configured from URI options\n        HttpClientParams clientParams = new HttpClientParams();\n        IntrospectionSupport.setProperties(clientParams, parameters, \"httpClient.\");\n        // validate that we could resolve all httpClient. parameters as this component is lenient\n        validateParameters(uri, parameters, \"httpClient.\");       \n        \n        // create the configurer to use for this endpoint (authMethods contains the used methods created by the configurer)\n        final Set<AuthMethod> authMethods = new LinkedHashSet<AuthMethod>();\n        HttpClientConfigurer configurer = createHttpClientConfigurer(parameters, authMethods);\n        URI endpointUri = URISupport.createRemainingURI(new URI(addressUri), httpClientParameters);\n       \n        // create the endpoint\n        HttpEndpoint endpoint = new HttpEndpoint(endpointUri.toString(), this, clientParams, httpConnectionManager, configurer);\n        if (headerFilterStrategy != null) {\n            endpoint.setHeaderFilterStrategy(headerFilterStrategy);\n        } else {\n            setEndpointHeaderFilterStrategy(endpoint);\n        }\n\n        // prefer to use endpoint configured over component configured\n        if (binding == null) {\n            // fallback to component configured\n            binding = getHttpBinding();\n        }\n        if (binding != null) {\n            endpoint.setBinding(binding);\n        }\n        if (proxyHost != null) {\n            endpoint.setProxyHost(proxyHost);\n            endpoint.setProxyPort(proxyPort);\n        } else if (httpConfiguration != null) {\n            endpoint.setProxyHost(httpConfiguration.getProxyHost());\n            endpoint.setProxyPort(httpConfiguration.getProxyPort());\n        }\n        if (authMethodPriority != null) {\n            endpoint.setAuthMethodPriority(authMethodPriority);\n        } else if (httpConfiguration != null && httpConfiguration.getAuthMethodPriority() != null) {\n            endpoint.setAuthMethodPriority(httpConfiguration.getAuthMethodPriority());\n        } else {\n            // no explicit auth method priority configured, so use convention over configuration\n            // and set priority based on auth method\n            if (!authMethods.isEmpty()) {\n                authMethodPriority = CollectionHelper.collectionAsCommaDelimitedString(authMethods);\n                endpoint.setAuthMethodPriority(authMethodPriority);\n            }\n        }\n        setProperties(endpoint, parameters);\n        // restructure uri to be based on the parameters left as we dont want to include the Camel internal options\n        URI httpUri = URISupport.createRemainingURI(new URI(addressUri), parameters);\n        \n        // validate http uri that end-user did not duplicate the http part that can be a common error\n        String part = httpUri.getSchemeSpecificPart();\n        if (part != null) {\n            part = part.toLowerCase();\n            if (part.startsWith(\"//http//\") || part.startsWith(\"//https//\") || part.startsWith(\"//http://\") || part.startsWith(\"//https://\")) {\n                throw new ResolveEndpointFailedException(uri,\n                        \"The uri part is not configured correctly. You have duplicated the http(s) protocol.\");\n            }\n        }\n        endpoint.setHttpUri(httpUri);\n        return endpoint;\n    }","commit_id":"12563f8852105adce4ec62f0a91f97b6602c13af","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected JndiRegistry createRegistry() throws Exception {\n        JndiRegistry jndi = super.createRegistry();\n        jndi.bind(\"other\", new MyOtherBinding());\n        return jndi;\n    }","id":8032,"modified_method":"@Override\n    protected JndiRegistry createRegistry() throws Exception {\n        JndiRegistry jndi = super.createRegistry();\n        jndi.bind(\"other\", new MyOtherBinding());\n        jndi.bind(\"myStrategy\", new MyHeaderFilterStrategy());\n        return jndi;\n    }","commit_id":"12563f8852105adce4ec62f0a91f97b6602c13af","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testDoNotMessWithComponent() throws Exception {\n        // get default\n        HttpEndpoint end = context.getEndpoint(\"http://www.google.com\", HttpEndpoint.class);\n        assertIsInstanceOf(MyBinding.class, end.getBinding());\n\n        // use a endpoint specific binding\n        HttpEndpoint end2 = context.getEndpoint(\"http://www.google.com?httpBinding=#other\", HttpEndpoint.class);\n        assertIsInstanceOf(MyOtherBinding.class, end2.getBinding());\n\n        // and the default option has not been messed with\n        HttpEndpoint end3 = context.getEndpoint(\"http://www.google.com\", HttpEndpoint.class);\n        assertIsInstanceOf(MyBinding.class, end3.getBinding());\n    }","id":8033,"modified_method":"@Test\n    public void testDoNotMessWithComponent() throws Exception {\n        // get default\n        HttpEndpoint end = context.getEndpoint(\"http://www.google.com\", HttpEndpoint.class);\n        assertIsInstanceOf(MyBinding.class, end.getBinding());\n\n        // use a endpoint specific binding\n        HttpEndpoint end2 = context.getEndpoint(\"http://www.google.com?httpBinding=#other\", HttpEndpoint.class);\n        assertIsInstanceOf(MyOtherBinding.class, end2.getBinding());\n\n        // and the default option has not been messed with\n        HttpEndpoint end3 = context.getEndpoint(\"http://www.google.com\", HttpEndpoint.class);\n        assertIsInstanceOf(MyBinding.class, end3.getBinding());\n        \n        // test the headerFilterStrategy\n        HttpEndpoint end4 = context.getEndpoint(\"http://www.google.com?headerFilterStrategy=#myStrategy\", HttpEndpoint.class);\n        assertIsInstanceOf(MyHeaderFilterStrategy.class, end4.getHeaderFilterStrategy());\n    }","commit_id":"12563f8852105adce4ec62f0a91f97b6602c13af","url":"https://github.com/apache/camel"},{"original_method":"@Override\n\n    public VirtualMachineTO implement(VirtualMachineProfile vm) {\n        VirtualMachineTO to = toVirtualMachineTO(vm);\n\n        // Determine the VM's OS description\n        GuestOSVO guestOS = _guestOsDao.findById(vm.getVirtualMachine().getGuestOSId());\n        to.setOs(guestOS.getDisplayName());\n        HostVO host = _hostDao.findById(vm.getVirtualMachine().getHostId());\n        GuestOSHypervisorVO guestOsMapping = _guestOsHypervisorDao.findByOsIdAndHypervisor(guestOS.getId(), getHypervisorType().toString(), host.getHypervisorVersion());\n        if (guestOsMapping == null) {\n            to.setPlatformEmulator(\"Other\");\n        } else {\n            to.setPlatformEmulator(guestOsMapping.getGuestOsName());\n        }\n\n        return to;\n    }","id":8034,"modified_method":"@Override\n\n    public VirtualMachineTO implement(VirtualMachineProfile vm) {\n        VirtualMachineTO to = toVirtualMachineTO(vm);\n\n        // Determine the VM's OS description\n        GuestOSVO guestOS = _guestOsDao.findById(vm.getVirtualMachine().getGuestOSId());\n        to.setOs(guestOS.getDisplayName());\n        HostVO host = _hostDao.findById(vm.getVirtualMachine().getHostId());\n        GuestOSHypervisorVO guestOsMapping = null;\n        if (host != null) {\n            guestOsMapping = _guestOsHypervisorDao.findByOsIdAndHypervisor(guestOS.getId(), getHypervisorType().toString(), host.getHypervisorVersion());\n        }\n        if (guestOsMapping == null || host == null) {\n            to.setPlatformEmulator(\"Other\");\n        } else {\n            to.setPlatformEmulator(guestOsMapping.getGuestOsName());\n        }\n\n        return to;\n    }","commit_id":"d1d722f9bde91ce36f494142f4651a22c6795d6b","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public VirtualMachineTO implement(VirtualMachineProfile vm) {\n        VirtualMachineTO to = toVirtualMachineTO(vm);\n\n        // Determine the VM's OS description\n        GuestOSVO guestOS = _guestOsDao.findById(vm.getVirtualMachine().getGuestOSId());\n        to.setOs(guestOS.getDisplayName());\n\n        HostVO host = _hostDao.findById(vm.getVirtualMachine().getHostId());\n        GuestOSHypervisorVO guestOsMapping = _guestOsHypervisorDao.findByOsIdAndHypervisor(guestOS.getId(), getHypervisorType().toString(), host.getHypervisorVersion());\n        if (guestOsMapping == null) {\n            to.setPlatformEmulator(\"Other\");\n        } else {\n            to.setPlatformEmulator(guestOsMapping.getGuestOsName());\n        }\n\n        return to;\n    }","id":8035,"modified_method":"@Override\n    public VirtualMachineTO implement(VirtualMachineProfile vm) {\n        VirtualMachineTO to = toVirtualMachineTO(vm);\n\n        // Determine the VM's OS description\n        GuestOSVO guestOS = _guestOsDao.findById(vm.getVirtualMachine().getGuestOSId());\n        to.setOs(guestOS.getDisplayName());\n\n        HostVO host = _hostDao.findById(vm.getVirtualMachine().getHostId());\n        GuestOSHypervisorVO guestOsMapping = null;\n        if (host != null) {\n            guestOsMapping = _guestOsHypervisorDao.findByOsIdAndHypervisor(guestOS.getId(), getHypervisorType().toString(), host.getHypervisorVersion());\n        }\n        if (guestOsMapping == null || host == null) {\n            to.setPlatformEmulator(\"Other\");\n        } else {\n            to.setPlatformEmulator(guestOsMapping.getGuestOsName());\n        }\n\n        return to;\n    }","commit_id":"d1d722f9bde91ce36f494142f4651a22c6795d6b","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public VirtualMachineTO implement(VirtualMachineProfile vm) {\n        VirtualMachineTO to = toVirtualMachineTO(vm);\n        to.setBootloader(BootloaderType.HVM);\n\n        Map<String, String> details = to.getDetails();\n        if (details == null)\n            details = new HashMap<String, String>();\n\n        Type vmType = vm.getType();\n        boolean userVm = !(vmType.equals(VirtualMachine.Type.DomainRouter) || vmType.equals(VirtualMachine.Type.ConsoleProxy)\n                || vmType.equals(VirtualMachine.Type.SecondaryStorageVm));\n\n        String nicDeviceType = details.get(VmDetailConstants.NIC_ADAPTER);\n        if (!userVm) {\n\n            if (nicDeviceType == null) {\n                details.put(VmDetailConstants.NIC_ADAPTER, _vmwareMgr.getSystemVMDefaultNicAdapterType());\n            } else {\n                try {\n                    VirtualEthernetCardType.valueOf(nicDeviceType);\n                } catch (Exception e) {\n                    s_logger.warn(\"Invalid NIC device type \" + nicDeviceType + \" is specified in VM details, switch to default E1000\");\n                    details.put(VmDetailConstants.NIC_ADAPTER, VirtualEthernetCardType.E1000.toString());\n                }\n            }\n        } else {\n            // for user-VM, use E1000 as default\n            if (nicDeviceType == null) {\n                details.put(VmDetailConstants.NIC_ADAPTER, VirtualEthernetCardType.E1000.toString());\n            } else {\n                try {\n                    VirtualEthernetCardType.valueOf(nicDeviceType);\n                } catch (Exception e) {\n                    s_logger.warn(\"Invalid NIC device type \" + nicDeviceType + \" is specified in VM details, switch to default E1000\");\n                    details.put(VmDetailConstants.NIC_ADAPTER, VirtualEthernetCardType.E1000.toString());\n                }\n            }\n        }\n\n        String diskDeviceType = details.get(VmDetailConstants.ROOK_DISK_CONTROLLER);\n        if (userVm) {\n            if (diskDeviceType == null) {\n                details.put(VmDetailConstants.ROOK_DISK_CONTROLLER, _vmwareMgr.getRootDiskController());\n            }\n        }\n\n        List<NicProfile> nicProfiles = vm.getNics();\n\n        for (NicProfile nicProfile : nicProfiles) {\n            if (nicProfile.getTrafficType() == TrafficType.Guest) {\n                if (_networkMgr.isProviderSupportServiceInNetwork(nicProfile.getNetworkId(), Service.Firewall, Provider.CiscoVnmc)) {\n                    details.put(\"ConfigureVServiceInNexus\", Boolean.TRUE.toString());\n                }\n                break;\n            }\n        }\n\n        long clusterId = getClusterId(vm.getId());\n        details.put(Config.VmwareReserveCpu.key(), VmwareReserveCpu.valueIn(clusterId).toString());\n        details.put(Config.VmwareReserveMem.key(), VmwareReserveMemory.valueIn(clusterId).toString());\n        to.setDetails(details);\n\n        if (vmType.equals(VirtualMachine.Type.DomainRouter)) {\n\n            NicProfile publicNicProfile = null;\n            for (NicProfile nicProfile : nicProfiles) {\n                if (nicProfile.getTrafficType() == TrafficType.Public) {\n                    publicNicProfile = nicProfile;\n                    break;\n                }\n            }\n\n            if (publicNicProfile != null) {\n                NicTO[] nics = to.getNics();\n\n                // reserve extra NICs\n                NicTO[] expandedNics = new NicTO[nics.length + _vmwareMgr.getRouterExtraPublicNics()];\n                int i = 0;\n                int deviceId = -1;\n                for (i = 0; i < nics.length; i++) {\n                    expandedNics[i] = nics[i];\n                    if (nics[i].getDeviceId() > deviceId)\n                        deviceId = nics[i].getDeviceId();\n                }\n                deviceId++;\n\n                long networkId = publicNicProfile.getNetworkId();\n                NetworkVO network = _networkDao.findById(networkId);\n\n                for (; i < nics.length + _vmwareMgr.getRouterExtraPublicNics(); i++) {\n                    NicTO nicTo = new NicTO();\n\n                    nicTo.setDeviceId(deviceId++);\n                    nicTo.setBroadcastType(publicNicProfile.getBroadcastType());\n                    nicTo.setType(publicNicProfile.getTrafficType());\n                    nicTo.setIp(\"0.0.0.0\");\n                    nicTo.setNetmask(\"255.255.255.255\");\n\n                    try {\n                        String mac = _networkMgr.getNextAvailableMacAddressInNetwork(networkId);\n                        nicTo.setMac(mac);\n                    } catch (InsufficientAddressCapacityException e) {\n                        throw new CloudRuntimeException(\"unable to allocate mac address on network: \" + networkId);\n                    }\n                    nicTo.setDns1(publicNicProfile.getDns1());\n                    nicTo.setDns2(publicNicProfile.getDns2());\n                    if (publicNicProfile.getGateway() != null) {\n                        nicTo.setGateway(publicNicProfile.getGateway());\n                    } else {\n                        nicTo.setGateway(network.getGateway());\n                    }\n                    nicTo.setDefaultNic(false);\n                    nicTo.setBroadcastUri(publicNicProfile.getBroadCastUri());\n                    nicTo.setIsolationuri(publicNicProfile.getIsolationUri());\n\n                    Integer networkRate = _networkMgr.getNetworkRate(network.getId(), null);\n                    nicTo.setNetworkRateMbps(networkRate);\n\n                    expandedNics[i] = nicTo;\n                }\n\n                to.setNics(expandedNics);\n            }\n\n            StringBuffer sbMacSequence = new StringBuffer();\n            for (NicTO nicTo : sortNicsByDeviceId(to.getNics())) {\n                sbMacSequence.append(nicTo.getMac()).append(\"|\");\n            }\n            if (!sbMacSequence.toString().isEmpty()) {\n                sbMacSequence.deleteCharAt(sbMacSequence.length() - 1);\n                String bootArgs = to.getBootArgs();\n                to.setBootArgs(bootArgs + \" nic_macs=\" + sbMacSequence.toString());\n            }\n\n        }\n\n        // Don't do this if the virtual machine is one of the special types\n        // Should only be done on user machines\n        if (userVm) {\n            String nestedVirt = _configDao.getValue(Config.VmwareEnableNestedVirtualization.key());\n            if (nestedVirt != null) {\n                s_logger.debug(\"Nested virtualization requested, adding flag to vm configuration\");\n                details.put(VmDetailConstants.NESTED_VIRTUALIZATION_FLAG, nestedVirt);\n                to.setDetails(details);\n\n            }\n        }\n        // Determine the VM's OS description\n        GuestOSVO guestOS = _guestOsDao.findById(vm.getVirtualMachine().getGuestOSId());\n        to.setOs(guestOS.getDisplayName());\n        to.setHostName(vm.getHostName());\n        HostVO host = _hostDao.findById(vm.getVirtualMachine().getHostId());\n        GuestOSHypervisorVO guestOsMapping = _guestOsHypervisorDao.findByOsIdAndHypervisor(guestOS.getId(), getHypervisorType().toString(), host.getHypervisorVersion());\n        if (guestOsMapping == null) {\n            to.setPlatformEmulator(null);\n        } else {\n            to.setPlatformEmulator(guestOsMapping.getGuestOsName());\n        }\n        return to;\n    }","id":8036,"modified_method":"@Override\n    public VirtualMachineTO implement(VirtualMachineProfile vm) {\n        VirtualMachineTO to = toVirtualMachineTO(vm);\n        to.setBootloader(BootloaderType.HVM);\n\n        Map<String, String> details = to.getDetails();\n        if (details == null)\n            details = new HashMap<String, String>();\n\n        Type vmType = vm.getType();\n        boolean userVm = !(vmType.equals(VirtualMachine.Type.DomainRouter) || vmType.equals(VirtualMachine.Type.ConsoleProxy)\n                || vmType.equals(VirtualMachine.Type.SecondaryStorageVm));\n\n        String nicDeviceType = details.get(VmDetailConstants.NIC_ADAPTER);\n        if (!userVm) {\n\n            if (nicDeviceType == null) {\n                details.put(VmDetailConstants.NIC_ADAPTER, _vmwareMgr.getSystemVMDefaultNicAdapterType());\n            } else {\n                try {\n                    VirtualEthernetCardType.valueOf(nicDeviceType);\n                } catch (Exception e) {\n                    s_logger.warn(\"Invalid NIC device type \" + nicDeviceType + \" is specified in VM details, switch to default E1000\");\n                    details.put(VmDetailConstants.NIC_ADAPTER, VirtualEthernetCardType.E1000.toString());\n                }\n            }\n        } else {\n            // for user-VM, use E1000 as default\n            if (nicDeviceType == null) {\n                details.put(VmDetailConstants.NIC_ADAPTER, VirtualEthernetCardType.E1000.toString());\n            } else {\n                try {\n                    VirtualEthernetCardType.valueOf(nicDeviceType);\n                } catch (Exception e) {\n                    s_logger.warn(\"Invalid NIC device type \" + nicDeviceType + \" is specified in VM details, switch to default E1000\");\n                    details.put(VmDetailConstants.NIC_ADAPTER, VirtualEthernetCardType.E1000.toString());\n                }\n            }\n        }\n\n        String diskDeviceType = details.get(VmDetailConstants.ROOK_DISK_CONTROLLER);\n        if (userVm) {\n            if (diskDeviceType == null) {\n                details.put(VmDetailConstants.ROOK_DISK_CONTROLLER, _vmwareMgr.getRootDiskController());\n            }\n        }\n\n        List<NicProfile> nicProfiles = vm.getNics();\n\n        for (NicProfile nicProfile : nicProfiles) {\n            if (nicProfile.getTrafficType() == TrafficType.Guest) {\n                if (_networkMgr.isProviderSupportServiceInNetwork(nicProfile.getNetworkId(), Service.Firewall, Provider.CiscoVnmc)) {\n                    details.put(\"ConfigureVServiceInNexus\", Boolean.TRUE.toString());\n                }\n                break;\n            }\n        }\n\n        long clusterId = getClusterId(vm.getId());\n        details.put(Config.VmwareReserveCpu.key(), VmwareReserveCpu.valueIn(clusterId).toString());\n        details.put(Config.VmwareReserveMem.key(), VmwareReserveMemory.valueIn(clusterId).toString());\n        to.setDetails(details);\n\n        if (vmType.equals(VirtualMachine.Type.DomainRouter)) {\n\n            NicProfile publicNicProfile = null;\n            for (NicProfile nicProfile : nicProfiles) {\n                if (nicProfile.getTrafficType() == TrafficType.Public) {\n                    publicNicProfile = nicProfile;\n                    break;\n                }\n            }\n\n            if (publicNicProfile != null) {\n                NicTO[] nics = to.getNics();\n\n                // reserve extra NICs\n                NicTO[] expandedNics = new NicTO[nics.length + _vmwareMgr.getRouterExtraPublicNics()];\n                int i = 0;\n                int deviceId = -1;\n                for (i = 0; i < nics.length; i++) {\n                    expandedNics[i] = nics[i];\n                    if (nics[i].getDeviceId() > deviceId)\n                        deviceId = nics[i].getDeviceId();\n                }\n                deviceId++;\n\n                long networkId = publicNicProfile.getNetworkId();\n                NetworkVO network = _networkDao.findById(networkId);\n\n                for (; i < nics.length + _vmwareMgr.getRouterExtraPublicNics(); i++) {\n                    NicTO nicTo = new NicTO();\n\n                    nicTo.setDeviceId(deviceId++);\n                    nicTo.setBroadcastType(publicNicProfile.getBroadcastType());\n                    nicTo.setType(publicNicProfile.getTrafficType());\n                    nicTo.setIp(\"0.0.0.0\");\n                    nicTo.setNetmask(\"255.255.255.255\");\n\n                    try {\n                        String mac = _networkMgr.getNextAvailableMacAddressInNetwork(networkId);\n                        nicTo.setMac(mac);\n                    } catch (InsufficientAddressCapacityException e) {\n                        throw new CloudRuntimeException(\"unable to allocate mac address on network: \" + networkId);\n                    }\n                    nicTo.setDns1(publicNicProfile.getDns1());\n                    nicTo.setDns2(publicNicProfile.getDns2());\n                    if (publicNicProfile.getGateway() != null) {\n                        nicTo.setGateway(publicNicProfile.getGateway());\n                    } else {\n                        nicTo.setGateway(network.getGateway());\n                    }\n                    nicTo.setDefaultNic(false);\n                    nicTo.setBroadcastUri(publicNicProfile.getBroadCastUri());\n                    nicTo.setIsolationuri(publicNicProfile.getIsolationUri());\n\n                    Integer networkRate = _networkMgr.getNetworkRate(network.getId(), null);\n                    nicTo.setNetworkRateMbps(networkRate);\n\n                    expandedNics[i] = nicTo;\n                }\n\n                to.setNics(expandedNics);\n            }\n\n            StringBuffer sbMacSequence = new StringBuffer();\n            for (NicTO nicTo : sortNicsByDeviceId(to.getNics())) {\n                sbMacSequence.append(nicTo.getMac()).append(\"|\");\n            }\n            if (!sbMacSequence.toString().isEmpty()) {\n                sbMacSequence.deleteCharAt(sbMacSequence.length() - 1);\n                String bootArgs = to.getBootArgs();\n                to.setBootArgs(bootArgs + \" nic_macs=\" + sbMacSequence.toString());\n            }\n\n        }\n\n        // Don't do this if the virtual machine is one of the special types\n        // Should only be done on user machines\n        if (userVm) {\n            String nestedVirt = _configDao.getValue(Config.VmwareEnableNestedVirtualization.key());\n            if (nestedVirt != null) {\n                s_logger.debug(\"Nested virtualization requested, adding flag to vm configuration\");\n                details.put(VmDetailConstants.NESTED_VIRTUALIZATION_FLAG, nestedVirt);\n                to.setDetails(details);\n\n            }\n        }\n        // Determine the VM's OS description\n        GuestOSVO guestOS = _guestOsDao.findById(vm.getVirtualMachine().getGuestOSId());\n        to.setOs(guestOS.getDisplayName());\n        to.setHostName(vm.getHostName());\n        HostVO host = _hostDao.findById(vm.getVirtualMachine().getHostId());\n        GuestOSHypervisorVO guestOsMapping = null;\n        if (host != null) {\n            guestOsMapping = _guestOsHypervisorDao.findByOsIdAndHypervisor(guestOS.getId(), getHypervisorType().toString(), host.getHypervisorVersion());\n        }\n        if (guestOsMapping == null || host == null) {\n            to.setPlatformEmulator(null);\n        } else {\n            to.setPlatformEmulator(guestOsMapping.getGuestOsName());\n        }\n        return to;\n    }","commit_id":"d1d722f9bde91ce36f494142f4651a22c6795d6b","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public VirtualMachineTO implement(VirtualMachineProfile vm) {\n        BootloaderType bt = BootloaderType.PyGrub;\n        if (vm.getBootLoaderType() == BootloaderType.CD) {\n            bt = vm.getBootLoaderType();\n        }\n        VirtualMachineTO to = toVirtualMachineTO(vm);\n        to.setBootloader(bt);\n\n        // Determine the VM's OS description\n        GuestOSVO guestOS = _guestOsDao.findById(vm.getVirtualMachine().getGuestOSId());\n        to.setOs(guestOS.getDisplayName());\n        HostVO host = hostDao.findById(vm.getVirtualMachine().getHostId());\n        GuestOSHypervisorVO guestOsMapping = _guestOsHypervisorDao.findByOsIdAndHypervisor(guestOS.getId(), getHypervisorType().toString(), host.getHypervisorVersion());\n        if (guestOsMapping == null) {\n            to.setPlatformEmulator(null);\n        } else {\n            to.setPlatformEmulator(guestOsMapping.getGuestOsName());\n        }\n\n        return to;\n    }","id":8037,"modified_method":"@Override\n    public VirtualMachineTO implement(VirtualMachineProfile vm) {\n        BootloaderType bt = BootloaderType.PyGrub;\n        if (vm.getBootLoaderType() == BootloaderType.CD) {\n            bt = vm.getBootLoaderType();\n        }\n        VirtualMachineTO to = toVirtualMachineTO(vm);\n        to.setBootloader(bt);\n\n        // Determine the VM's OS description\n        GuestOSVO guestOS = _guestOsDao.findById(vm.getVirtualMachine().getGuestOSId());\n        to.setOs(guestOS.getDisplayName());\n        HostVO host = hostDao.findById(vm.getVirtualMachine().getHostId());\n        GuestOSHypervisorVO guestOsMapping = null;\n        if (host != null) {\n            guestOsMapping = _guestOsHypervisorDao.findByOsIdAndHypervisor(guestOS.getId(), getHypervisorType().toString(), host.getHypervisorVersion());\n        }\n        if (guestOsMapping == null || host == null) {\n            to.setPlatformEmulator(null);\n        } else {\n            to.setPlatformEmulator(guestOsMapping.getGuestOsName());\n        }\n\n        return to;\n    }","commit_id":"d1d722f9bde91ce36f494142f4651a22c6795d6b","url":"https://github.com/apache/cloudstack"},{"original_method":"public void endRendering(XWikiContext context)\r\n    {\r\n        Vector plugins = getPlugins(\"endRendering\");\r\n        for (int i = 0; i < plugins.size(); i++) {\r\n            try {\r\n                ((XWikiPluginInterface) plugins.get(i)).endRendering(context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n    }","id":8038,"modified_method":"public void endRendering(XWikiContext context)\r\n    {\r\n        for (XWikiPluginInterface plugin : getPlugins(\"endRendering\")) {\r\n            try {\r\n                plugin.endRendering(context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n    }","commit_id":"b9ebb578f692804c32e3768613771939edf9e397","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void flushCache(XWikiContext context)\r\n    {\r\n        Vector plugins = getPlugins(\"flushCache\");\r\n        for (int i = 0; i < plugins.size(); i++) {\r\n            try {\r\n                ((XWikiPluginInterface) plugins.get(i)).flushCache(context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n    }","id":8039,"modified_method":"public void flushCache(XWikiContext context)\r\n    {\r\n        for (XWikiPluginInterface plugin : getPlugins(\"flushCache\")) {\r\n            try {\r\n                plugin.flushCache(context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n    }","commit_id":"b9ebb578f692804c32e3768613771939edf9e397","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void virtualInit(XWikiContext context)\r\n    {\r\n        Vector plugins = getPlugins(\"virtualInit\");\r\n        for (int i = 0; i < plugins.size(); i++) {\r\n            try {\r\n                ((XWikiPluginInterface) plugins.get(i)).virtualInit(context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n    }","id":8040,"modified_method":"public void virtualInit(XWikiContext context)\r\n    {\r\n        for (XWikiPluginInterface plugin : getPlugins(\"virtualInit\")) {\r\n            try {\r\n                plugin.virtualInit(context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n    }","commit_id":"b9ebb578f692804c32e3768613771939edf9e397","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public Vector getPlugins(String functionName)\r\n    {\r\n        if (functionList.containsKey(functionName)) {\r\n            return (Vector) functionList.get(functionName);\r\n        }\r\n        return null;\r\n    }","id":8041,"modified_method":"public Vector<XWikiPluginInterface> getPlugins(String functionName)\r\n    {\r\n        if (functionList.containsKey(functionName)) {\r\n            return functionList.get(functionName);\r\n        }\r\n        return null;\r\n    }","commit_id":"b9ebb578f692804c32e3768613771939edf9e397","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public String startRenderingHandler(String text, XWikiContext context)\r\n    {\r\n        Vector plugins = getPlugins(\"startRenderingHandler\");\r\n        for (int i = 0; i < plugins.size(); i++) {\r\n            try {\r\n                text =\r\n                    ((XWikiPluginInterface) plugins.get(i)).startRenderingHandler(text, context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n        return text;\r\n    }","id":8042,"modified_method":"public String startRenderingHandler(String text, XWikiContext context)\r\n    {\r\n        for (XWikiPluginInterface plugin : getPlugins(\"startRenderingHandler\")) {\r\n            try {\r\n                text = plugin.startRenderingHandler(text, context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n        return text;\r\n    }","commit_id":"b9ebb578f692804c32e3768613771939edf9e397","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public XWikiAttachment downloadAttachment(XWikiAttachment attachment, XWikiContext context)\r\n    {\r\n        Vector plugins = getPlugins(\"downloadAttachment\");\r\n        XWikiAttachment attach = attachment;\r\n        for (int i = 0; i < plugins.size(); i++) {\r\n            try {\r\n                attach =\r\n                    ((XWikiPluginInterface) plugins.get(i)).downloadAttachment(attach, context);\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n        return attach;\r\n    }","id":8043,"modified_method":"public XWikiAttachment downloadAttachment(XWikiAttachment attachment, XWikiContext context)\r\n    {\r\n        XWikiAttachment attach = attachment;\r\n        for (XWikiPluginInterface plugin : getPlugins(\"downloadAttachment\")) {\r\n            try {\r\n                attach = plugin.downloadAttachment(attach, context);\r\n            } catch (Exception ex) {\r\n                LOG.warn(\"downloadAttachment failed for plugin [\" + plugin.getClassName() + \"]: \" + ex.getMessage());\r\n            }\r\n        }\r\n        return attach;\r\n    }","commit_id":"b9ebb578f692804c32e3768613771939edf9e397","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public String commonTagsHandler(String text, XWikiContext context)\r\n    {\r\n        Vector plugins = getPlugins(\"commonTagsHandler\");\r\n        for (int i = 0; i < plugins.size(); i++) {\r\n            try {\r\n                text = ((XWikiPluginInterface) plugins.get(i)).commonTagsHandler(text, context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n        return text;\r\n    }","id":8044,"modified_method":"public String commonTagsHandler(String text, XWikiContext context)\r\n    {\r\n        for (XWikiPluginInterface plugin : getPlugins(\"commonTagsHandler\")) {\r\n            try {\r\n                text = plugin.commonTagsHandler(text, context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n        return text;\r\n    }","commit_id":"b9ebb578f692804c32e3768613771939edf9e397","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public XWikiPluginInterface getPlugin(String className)\r\n    {\r\n        return (XWikiPluginInterface) plugins_classes.get(className);\r\n    }","id":8045,"modified_method":"public XWikiPluginInterface getPlugin(String className)\r\n    {\r\n        return plugins_classes.get(className);\r\n    }","commit_id":"b9ebb578f692804c32e3768613771939edf9e397","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void initInterface()\r\n    {\r\n        Method[] methods = XWikiPluginInterface.class.getMethods();\r\n        for (int i = 0; i < methods.length; i++) {\r\n            Method method = methods[i];\r\n            String name = method.getName();\r\n            functionList.put(name, new Vector());\r\n        }\r\n    }","id":8046,"modified_method":"public void initInterface()\r\n    {\r\n        for (Method method : XWikiPluginInterface.class.getMethods()) {\r\n            String name = method.getName();\r\n            functionList.put(name, new Vector<XWikiPluginInterface>());\r\n        }\r\n    }","commit_id":"b9ebb578f692804c32e3768613771939edf9e397","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void initPlugin(Object plugin, Class pluginClass, XWikiContext context)\r\n        throws XWikiException\r\n    {\r\n        Method[] methods = pluginClass.getDeclaredMethods();\r\n        for (int i = 0; i < methods.length; i++) {\r\n            Method method = methods[i];\r\n            String name = method.getName();\r\n            if (functionList.containsKey(name))\r\n                ((Vector) functionList.get(name)).add(plugin);\r\n        }\r\n        ((XWikiPluginInterface) plugin).init(context);\r\n    }","id":8047,"modified_method":"public void initPlugin(Object plugin, Class<XWikiPluginInterface> pluginClass,\r\n        XWikiContext context) throws XWikiException\r\n    {\r\n        for (Method method : pluginClass.getDeclaredMethods()) {\r\n            String name = method.getName();\r\n            if (functionList.containsKey(name))\r\n                functionList.get(name).add((XWikiPluginInterface) plugin);\r\n        }\r\n        ((XWikiPluginInterface) plugin).init(context);\r\n    }","commit_id":"b9ebb578f692804c32e3768613771939edf9e397","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void setPlugins(Vector plugins)\r\n    {\r\n        this.plugins = plugins;\r\n    }","id":8048,"modified_method":"public void setPlugins(Vector<String> plugins)\r\n    {\r\n        this.plugins = plugins;\r\n    }","commit_id":"b9ebb578f692804c32e3768613771939edf9e397","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public String endRenderingHandler(String text, XWikiContext context)\r\n    {\r\n        Vector plugins = getPlugins(\"endRenderingHandler\");\r\n        for (int i = 0; i < plugins.size(); i++) {\r\n            try {\r\n                text = ((XWikiPluginInterface) plugins.get(i)).endRenderingHandler(text, context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n        return text;\r\n    }","id":8049,"modified_method":"public String endRenderingHandler(String text, XWikiContext context)\r\n    {\r\n        for (XWikiPluginInterface plugin : getPlugins(\"endRenderingHandler\")) {\r\n            try {\r\n                text = plugin.endRenderingHandler(text, context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n        return text;\r\n    }","commit_id":"b9ebb578f692804c32e3768613771939edf9e397","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public String outsidePREHandler(String text, XWikiContext context)\r\n    {\r\n        Vector plugins = getPlugins(\"outsidePREHandler\");\r\n        for (int i = 0; i < plugins.size(); i++) {\r\n            try {\r\n                text = ((XWikiPluginInterface) plugins.get(i)).outsidePREHandler(text, context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n        return text;\r\n    }","id":8050,"modified_method":"public String outsidePREHandler(String text, XWikiContext context)\r\n    {\r\n        for (XWikiPluginInterface plugin : getPlugins(\"outsidePREHandler\")) {\r\n            try {\r\n                text = plugin.outsidePREHandler(text, context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n        return text;\r\n    }","commit_id":"b9ebb578f692804c32e3768613771939edf9e397","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void addPlugin(String name, String className, XWikiContext context)\r\n    {\r\n        try {\r\n            Class[] classes = new Class[3];\r\n            classes[0] = String.class;\r\n            classes[1] = String.class;\r\n            classes[2] = context.getClass();\r\n            Object[] args = new Object[3];\r\n            args[0] = name;\r\n            args[1] = className;\r\n            args[2] = context;\r\n            Class pluginClass = Class.forName(className);\r\n            XWikiPluginInterface plugin =\r\n                (XWikiPluginInterface) pluginClass.getConstructor(classes).newInstance(args);\r\n            if (plugin != null) {\r\n                plugins.add(plugin.getName());\r\n                plugins_classes.put(plugin.getName(), plugin);\r\n                initPlugin(plugin, pluginClass, context);\r\n            }\r\n        } catch (Exception e) {\r\n            // Log an error but do not fail..\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }","id":8051,"modified_method":"@SuppressWarnings(\"unchecked\")\r\n    public void addPlugin(String name, String className, XWikiContext context)\r\n    {\r\n        try {\r\n            Class< ? >[] classes = new Class< ? >[3];\r\n            classes[0] = String.class;\r\n            classes[1] = String.class;\r\n            classes[2] = context.getClass();\r\n            Object[] args = new Object[3];\r\n            args[0] = name;\r\n            args[1] = className;\r\n            args[2] = context;\r\n            Class<XWikiPluginInterface> pluginClass =\r\n                (Class<XWikiPluginInterface>) Class.forName(className);\r\n            XWikiPluginInterface plugin = pluginClass.getConstructor(classes).newInstance(args);\r\n            if (plugin != null) {\r\n                plugins.add(plugin.getName());\r\n                plugins_classes.put(plugin.getName(), plugin);\r\n                initPlugin(plugin, pluginClass, context);\r\n            }\r\n        } catch (Exception ex) {\r\n            // Log an error but do not fai\r\n            LOG.error(\"Cannot initialize plugin [\" + className + \"]\", ex);\r\n        }\r\n\r\n    }","commit_id":"b9ebb578f692804c32e3768613771939edf9e397","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void removePlugin(String className)\r\n    {\r\n        plugins.remove(className);\r\n        Object plugin = plugins_classes.get(className);\r\n        plugins_classes.remove(className);\r\n\r\n        Iterator it = functionList.keySet().iterator();\r\n        while (it.hasNext()) {\r\n            String name = (String) it.next();\r\n            Vector pluginList = (Vector) functionList.get(name);\r\n            pluginList.remove(plugin);\r\n        }\r\n    }","id":8052,"modified_method":"public void removePlugin(String className)\r\n    {\r\n        plugins.remove(className);\r\n        Object plugin = plugins_classes.get(className);\r\n        plugins_classes.remove(className);\r\n\r\n        for (String name : functionList.keySet()) {\r\n            Vector<XWikiPluginInterface> pluginList = functionList.get(name);\r\n            pluginList.remove(plugin);\r\n        }\r\n    }","commit_id":"b9ebb578f692804c32e3768613771939edf9e397","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public String insidePREHandler(String text, XWikiContext context)\r\n    {\r\n        Vector plugins = getPlugins(\"insidePREHandler\");\r\n        for (int i = 0; i < plugins.size(); i++) {\r\n            try {\r\n                text = ((XWikiPluginInterface) plugins.get(i)).insidePREHandler(text, context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n        return text;\r\n    }","id":8053,"modified_method":"public String insidePREHandler(String text, XWikiContext context)\r\n    {\r\n        for (XWikiPluginInterface plugin : getPlugins(\"insidePREHandler\")) {\r\n            try {\r\n                text = plugin.insidePREHandler(text, context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n        return text;\r\n    }","commit_id":"b9ebb578f692804c32e3768613771939edf9e397","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void beginRendering(XWikiContext context)\r\n    {\r\n        Vector plugins = getPlugins(\"beginRendering\");\r\n        for (int i = 0; i < plugins.size(); i++) {\r\n            try {\r\n                ((XWikiPluginInterface) plugins.get(i)).beginRendering(context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n    }","id":8054,"modified_method":"public void beginRendering(XWikiContext context)\r\n    {\r\n        for (XWikiPluginInterface plugin : getPlugins(\"beginRendering\")) {\r\n            try {\r\n                plugin.beginRendering(context);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n    }","commit_id":"b9ebb578f692804c32e3768613771939edf9e397","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"protected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type BookmarksEntry name VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// BookmarksEntry\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tBookmarksEntryTable.TABLE_NAME,\n\t\t\t\tBookmarksEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(BookmarksEntryTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\t// groupId\n\n\t\tupdateGroupId();\n\t}","id":8055,"modified_method":"protected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type BookmarksEntry name VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// BookmarksEntry\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tBookmarksEntryTable.TABLE_NAME,\n\t\t\t\tBookmarksEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(BookmarksEntryTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\t// groupId\n\n\t\tupdateGroupId();\n\t}","commit_id":"9039cca3bca28392cb227e7c53fde94c026f50c0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type CalEvent remindBy INTEGER\");\n\t\t}\n\t\telse {\n\n\t\t\t// CalEvent\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tCalEventTable.TABLE_NAME, CalEventTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(CalEventTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":8056,"modified_method":"protected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type CalEvent remindBy INTEGER\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// CalEvent\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tCalEventTable.TABLE_NAME, CalEventTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(CalEventTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"9039cca3bca28392cb227e7c53fde94c026f50c0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type DLFileEntry name VARCHAR(255) null\");\n\t\t\trunSQL(\"alter_column_type DLFileEntry title VARCHAR(255) null\");\n\t\t\trunSQL(\"alter_column_type DLFileRank name VARCHAR(255) null\");\n\t\t\trunSQL(\"alter_column_type DLFileShortcut toName VARCHAR(255) null\");\n\t\t\trunSQL(\"alter_column_type DLFileVersion name VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// DLFileEntry\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tDLFileEntryTable.TABLE_NAME, DLFileEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileEntryTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\n\t\t\t// DLFileRank\n\n\t\t\tupgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tDLFileRankTable.TABLE_NAME, DLFileRankTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileRankTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\n\t\t\t// DLFileShortcut\n\n\t\t\tupgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tDLFileShortcutTable.TABLE_NAME,\n\t\t\t\tDLFileShortcutTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileShortcutTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\n\t\t\t// DLFileVersion\n\n\t\t\tupgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tDLFileVersionTable.TABLE_NAME,\n\t\t\t\tDLFileVersionTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileVersionTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\t// groupId\n\n\t\tupdateGroupId();\n\n\t\t// PortletPreferences\n\n\t\tupdatePortletPreferences();\n\t}","id":8057,"modified_method":"protected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type DLFileEntry name VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// DLFileEntry\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tDLFileEntryTable.TABLE_NAME, DLFileEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileEntryTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type DLFileRank name VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// DLFileRank\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tDLFileRankTable.TABLE_NAME, DLFileRankTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileRankTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type DLFileShortcut toName VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// DLFileShortcut\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tDLFileShortcutTable.TABLE_NAME,\n\t\t\t\tDLFileShortcutTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileShortcutTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type DLFileVersion name VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// DLFileVersion\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tDLFileVersionTable.TABLE_NAME,\n\t\t\t\tDLFileVersionTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(DLFileVersionTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\t// groupId\n\n\t\tupdateGroupId();\n\n\t\t// PortletPreferences\n\n\t\tupdatePortletPreferences();\n\t}","commit_id":"9039cca3bca28392cb227e7c53fde94c026f50c0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type Layout friendlyURL VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// Layout\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tLayoutTable.TABLE_NAME, LayoutTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(LayoutTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":8058,"modified_method":"protected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type Layout friendlyURL VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// Layout\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tLayoutTable.TABLE_NAME, LayoutTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(LayoutTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"9039cca3bca28392cb227e7c53fde94c026f50c0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type PollsChoice description STRING null\");\n\t\t\trunSQL(\"alter_column_type PollsQuestion title STRING null\");\n\t\t}\n\t\telse {\n\n\t\t\t// PollsChoice\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tPollsChoiceTable.TABLE_NAME, PollsChoiceTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(PollsChoiceTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\n\t\t\t// PollsQuestion\n\n\t\t\tupgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tPollsQuestionTable.TABLE_NAME,\n\t\t\t\tPollsQuestionTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(PollsQuestionTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t}","id":8059,"modified_method":"protected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type PollsChoice description STRING null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// PollsChoice\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tPollsChoiceTable.TABLE_NAME, PollsChoiceTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(PollsChoiceTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type PollsQuestion title STRING null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// PollsQuestion\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tPollsQuestionTable.TABLE_NAME,\n\t\t\t\tPollsQuestionTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(PollsQuestionTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t}","commit_id":"9039cca3bca28392cb227e7c53fde94c026f50c0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type Resource_ primKey VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// Resource\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tResourceTable.TABLE_NAME, ResourceTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(ResourceTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":8060,"modified_method":"protected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type Resource_ primKey VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// Resource\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tResourceTable.TABLE_NAME, ResourceTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(ResourceTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"9039cca3bca28392cb227e7c53fde94c026f50c0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type ResourceCode name VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// ResourceCode\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tResourceCodeTable.TABLE_NAME, ResourceCodeTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(ResourceCodeTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":8061,"modified_method":"protected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type ResourceCode name VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// ResourceCode\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tResourceCodeTable.TABLE_NAME, ResourceCodeTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(ResourceCodeTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"9039cca3bca28392cb227e7c53fde94c026f50c0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type SCProductEntry tags VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// SCProductEntry\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tSCProductEntryTable.TABLE_NAME,\n\t\t\t\tSCProductEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(SCProductEntryTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":8062,"modified_method":"protected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type SCProductEntry tags VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// SCProductEntry\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tSCProductEntryTable.TABLE_NAME,\n\t\t\t\tSCProductEntryTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(SCProductEntryTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"9039cca3bca28392cb227e7c53fde94c026f50c0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type TagsAsset title VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// TagsAsset\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tTagsAssetTable.TABLE_NAME, TagsAssetTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(TagsAssetTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\tupdateAssetViewCount();\n\n\t\t// TagsProperty\n\n\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\tTagsPropertyTable.TABLE_NAME, TagsPropertyTable.TABLE_COLUMNS,\n\t\t\tnew TagsPropertyValueUpgradeColumnImpl(\"value\"));\n\n\t\tupgradeTable.setCreateSQL(TagsPropertyTable.TABLE_SQL_CREATE);\n\n\t\tupgradeTable.updateTable();\n\t}","id":8063,"modified_method":"protected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type TagsAsset title VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// TagsAsset\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tTagsAssetTable.TABLE_NAME, TagsAssetTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(TagsAssetTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\tupdateAssetViewCount();\n\n\t\t// TagsProperty\n\n\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\tTagsPropertyTable.TABLE_NAME, TagsPropertyTable.TABLE_COLUMNS,\n\t\t\tnew TagsPropertyValueUpgradeColumnImpl(\"value\"));\n\n\t\tupgradeTable.setCreateSQL(TagsPropertyTable.TABLE_SQL_CREATE);\n\n\t\tupgradeTable.updateTable();\n\t}","commit_id":"9039cca3bca28392cb227e7c53fde94c026f50c0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type User_ greeting VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// User_\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tUserTable.TABLE_NAME, UserTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(UserTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\tif (isSupportsUpdateWithInnerJoin()) {\n\t\t\tStringBuilder sb = new StringBuilder();\n\n\t\t\tsb.append(\"update User_ inner join Contact_ on \");\n\t\t\tsb.append(\"Contact_.contactId = User_.contactId set \");\n\t\t\tsb.append(\"User_.firstName = Contact_.firstName, \");\n\t\t\tsb.append(\"User_.middleName = Contact_.middleName, \");\n\t\t\tsb.append(\"User_.lastName = Contact_.lastName, \");\n\t\t\tsb.append(\"User_.jobTitle = Contact_.jobTitle\");\n\n\t\t\trunSQL(sb.toString());\n\t\t}\n\t\telse {\n\t\t\tConnection con = null;\n\t\t\tPreparedStatement ps = null;\n\t\t\tResultSet rs = null;\n\n\t\t\ttry {\n\t\t\t\tcon = DataAccess.getConnection();\n\n\t\t\t\tps = con.prepareStatement(\n\t\t\t\t\t\"select contactId, firstName, middleName, lastName, \" +\n\t\t\t\t\t\t\"jobTitle from Contact_\");\n\n\t\t\t\trs = ps.executeQuery();\n\n\t\t\t\twhile (rs.next()) {\n\t\t\t\t\tlong contactId = rs.getLong(\"contactId\");\n\t\t\t\t\tString firstName = rs.getString(\"firstName\");\n\t\t\t\t\tString middleName = rs.getString(\"middleName\");\n\t\t\t\t\tString lastName = rs.getString(\"lastName\");\n\t\t\t\t\tString jobTitle = rs.getString(\"jobTitle\");\n\n\t\t\t\t\tps = con.prepareStatement(\n\t\t\t\t\t\t\"update User_ set firstName = ?, middleName = ?, \" +\n\t\t\t\t\t\t\t\"lastName = ?, jobTitle = ? where contactId = ?\");\n\n\t\t\t\t\tps.setString(1, firstName);\n\t\t\t\t\tps.setString(2, middleName);\n\t\t\t\t\tps.setString(3, lastName);\n\t\t\t\t\tps.setString(4, jobTitle);\n\t\t\t\t\tps.setLong(5, contactId);\n\n\t\t\t\t\tps.executeUpdate();\n\n\t\t\t\t\tps.close();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tDataAccess.cleanUp(con, ps, rs);\n\t\t\t}\n\t\t}\n\t}","id":8064,"modified_method":"protected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type User_ greeting VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// User_\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tUserTable.TABLE_NAME, UserTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(UserTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\tif (isSupportsUpdateWithInnerJoin()) {\n\t\t\tStringBuilder sb = new StringBuilder();\n\n\t\t\tsb.append(\"update User_ inner join Contact_ on \");\n\t\t\tsb.append(\"Contact_.contactId = User_.contactId set \");\n\t\t\tsb.append(\"User_.firstName = Contact_.firstName, \");\n\t\t\tsb.append(\"User_.middleName = Contact_.middleName, \");\n\t\t\tsb.append(\"User_.lastName = Contact_.lastName, \");\n\t\t\tsb.append(\"User_.jobTitle = Contact_.jobTitle\");\n\n\t\t\trunSQL(sb.toString());\n\t\t}\n\t\telse {\n\t\t\tConnection con = null;\n\t\t\tPreparedStatement ps = null;\n\t\t\tResultSet rs = null;\n\n\t\t\ttry {\n\t\t\t\tcon = DataAccess.getConnection();\n\n\t\t\t\tps = con.prepareStatement(\n\t\t\t\t\t\"select contactId, firstName, middleName, lastName, \" +\n\t\t\t\t\t\t\"jobTitle from Contact_\");\n\n\t\t\t\trs = ps.executeQuery();\n\n\t\t\t\twhile (rs.next()) {\n\t\t\t\t\tlong contactId = rs.getLong(\"contactId\");\n\t\t\t\t\tString firstName = rs.getString(\"firstName\");\n\t\t\t\t\tString middleName = rs.getString(\"middleName\");\n\t\t\t\t\tString lastName = rs.getString(\"lastName\");\n\t\t\t\t\tString jobTitle = rs.getString(\"jobTitle\");\n\n\t\t\t\t\tps = con.prepareStatement(\n\t\t\t\t\t\t\"update User_ set firstName = ?, middleName = ?, \" +\n\t\t\t\t\t\t\t\"lastName = ?, jobTitle = ? where contactId = ?\");\n\n\t\t\t\t\tps.setString(1, firstName);\n\t\t\t\t\tps.setString(2, middleName);\n\t\t\t\t\tps.setString(3, lastName);\n\t\t\t\t\tps.setString(4, jobTitle);\n\t\t\t\t\tps.setLong(5, contactId);\n\n\t\t\t\t\tps.executeUpdate();\n\n\t\t\t\t\tps.close();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tDataAccess.cleanUp(con, ps, rs);\n\t\t\t}\n\t\t}\n\t}","commit_id":"9039cca3bca28392cb227e7c53fde94c026f50c0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type WikiPageResource title varchar(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// WikiPageResource\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tWikiPageResourceTable.TABLE_NAME,\n\t\t\t\tWikiPageResourceTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(WikiPageResourceTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":8065,"modified_method":"protected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\n\t\t\t\t\"alter_column_type WikiPageResource title varchar(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// WikiPageResource\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tWikiPageResourceTable.TABLE_NAME,\n\t\t\t\tWikiPageResourceTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(WikiPageResourceTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"9039cca3bca28392cb227e7c53fde94c026f50c0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doUpgrade() throws Exception {\n\t\tif (isSupportsAlterColumnType()) {\n\t\t\trunSQL(\"alter_column_type WikiPage title VARCHAR(255) null\");\n\t\t}\n\t\telse {\n\n\t\t\t// WikiPage\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tWikiPageTable.TABLE_NAME, WikiPageTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(WikiPageTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\t// groupId\n\n\t\tupdateGroupId();\n\t}","id":8066,"modified_method":"protected void doUpgrade() throws Exception {\n\t\ttry {\n\t\t\trunSQL(\"alter_column_type WikiPage title VARCHAR(255) null\");\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\t// WikiPage\n\n\t\t\tUpgradeTable upgradeTable = new DefaultUpgradeTableImpl(\n\t\t\t\tWikiPageTable.TABLE_NAME, WikiPageTable.TABLE_COLUMNS);\n\n\t\t\tupgradeTable.setCreateSQL(WikiPageTable.TABLE_SQL_CREATE);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\n\t\t// groupId\n\n\t\tupdateGroupId();\n\t}","commit_id":"9039cca3bca28392cb227e7c53fde94c026f50c0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n     * Create a ReportProgressPanel for each report generation module selected by the user.\n     * \n     * @param tableModuleStates The enabled/disabled state of each TableReportModule\n     * @param generalModuleStates The enabled/disabled state of each GeneralReportModule\n     * @param fileListModuleStates The enabled/disabled state of each FileReportModule\n     */\n    private void setupProgressPanels(Map<TableReportModule, Boolean> tableModuleStates, Map<GeneralReportModule, Boolean> generalModuleStates, Map<FileReportModule, Boolean> fileListModuleStates) {\n        if (null != tableModuleStates) {\n            for (Entry<TableReportModule, Boolean> entry : tableModuleStates.entrySet()) {\n                if (entry.getValue()) {\n                    TableReportModule module = entry.getKey();\n                    tableProgress.put(module, panel.addReport(module.getName(), reportPath + module.getFilePath()));\n                }\n            }\n        }\n        \n        if (null != generalModuleStates) {\n            for (Entry<GeneralReportModule, Boolean> entry : generalModuleStates.entrySet()) {\n                if (entry.getValue()) {\n                    GeneralReportModule module = entry.getKey();\n                    generalProgress.put(module, panel.addReport(module.getName(), reportPath + module.getFilePath()));\n                }\n            }\n        }\n        \n        if (null != fileListModuleStates) {\n            for(Entry<FileReportModule, Boolean> entry : fileListModuleStates.entrySet()) {\n                if (entry.getValue()) {\n                    FileReportModule module = entry.getKey();\n                    fileProgress.put(module, panel.addReport(module.getName(), reportPath + module.getFilePath()));\n                }\n            }\n        }\n    }","id":8067,"modified_method":"/**\n     * Create a ReportProgressPanel for each report generation module selected by the user.\n     * \n     * @param tableModuleStates The enabled/disabled state of each TableReportModule\n     * @param generalModuleStates The enabled/disabled state of each GeneralReportModule\n     * @param fileListModuleStates The enabled/disabled state of each FileReportModule\n     */\n    private void setupProgressPanels(Map<TableReportModule, Boolean> tableModuleStates, Map<GeneralReportModule, Boolean> generalModuleStates, Map<FileReportModule, Boolean> fileListModuleStates) {\n        if (null != tableModuleStates) {\n            for (Entry<TableReportModule, Boolean> entry : tableModuleStates.entrySet()) {\n                if (entry.getValue()) {\n                    TableReportModule module = entry.getKey();\n                    String moduleFilePath = module.getFilePath();\n                    if (moduleFilePath != null) {\n                        tableProgress.put(module, panel.addReport(module.getName(), reportPath + moduleFilePath));\n                    }\n                    else {\n                        tableProgress.put(module, panel.addReport(module.getName(), null));                        \n                    }\n                }\n            }\n        }\n        \n        if (null != generalModuleStates) {\n            for (Entry<GeneralReportModule, Boolean> entry : generalModuleStates.entrySet()) {\n                if (entry.getValue()) {\n                    GeneralReportModule module = entry.getKey();\n                    String moduleFilePath = module.getFilePath();\n                    if (moduleFilePath != null) {\n                        generalProgress.put(module, panel.addReport(module.getName(), reportPath + moduleFilePath));\n                    }\n                    else {\n                        generalProgress.put(module, panel.addReport(module.getName(), null));                        \n                    }\n                }\n            }\n        }\n        \n        if (null != fileListModuleStates) {\n            for(Entry<FileReportModule, Boolean> entry : fileListModuleStates.entrySet()) {\n                if (entry.getValue()) {\n                    FileReportModule module = entry.getKey();\n                    String moduleFilePath = module.getFilePath();\n                    if (moduleFilePath != null) {\n                        fileProgress.put(module, panel.addReport(module.getName(), reportPath + moduleFilePath));\n                    }\n                    else {\n                        fileProgress.put(module, panel.addReport(module.getName(), null));                        \n                    }\n                }\n            }\n        }\n    }","commit_id":"178179a4628041b93e1429968d59622c212c4483","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void customInit(String reportName, String reportPath) {\n        reportLabel.setText(reportName);\n        pathLabel.setText(\"<html><u>\" + shortenPath(reportPath) + \"<\/u><\/html>\");\n        pathLabel.setToolTipText(reportPath);\n        \n        reportProgressBar.setIndeterminate(true);\n        reportProgressBar.setMaximum(100);\n        \n        processingLabel.setText(\"Queuing...\");\n        STATUS = ReportStatus.QUEUING;\n        \n        // Add the \"link\" effect to the pathLabel\n        final String linkPath = reportPath;\n        pathLabel.addMouseListener(new MouseListener() {\n\n            @Override\n            public void mouseClicked(MouseEvent e) {\n            }\n\n            @Override\n            public void mousePressed(MouseEvent e) {\n            }\n\n            @Override\n            public void mouseReleased(MouseEvent e) {\n                File file = new File(linkPath);\n                try {\n                    Desktop.getDesktop().open(file);\n                } catch (IOException ex) {\n                } catch (IllegalArgumentException ex) {\n                    try {\n                        // try to open the parent path if the file doens't exist\n                        Desktop.getDesktop().open(file.getParentFile());\n                    } catch (IOException ex1) {\n                    }\n                }\n            }\n\n            @Override\n            public void mouseEntered(MouseEvent e) {\n                pathLabel.setForeground(Color.DARK_GRAY);\n                setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n            }\n\n            @Override\n            public void mouseExited(MouseEvent e) {\n                pathLabel.setForeground(Color.BLACK);\n                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\n            }\n            \n        });\n    }","id":8068,"modified_method":"private void customInit(String reportName, String reportPath) {\n        reportLabel.setText(reportName);\n        pathLabel.setText(\"<html><u>\" + shortenPath(reportPath) + \"<\/u><\/html>\");\n        pathLabel.setToolTipText(reportPath);\n        \n        reportProgressBar.setIndeterminate(true);\n        reportProgressBar.setMaximum(100);\n        \n        processingLabel.setText(\"Queuing...\");\n        STATUS = ReportStatus.QUEUING;\n        \n        if (reportPath != null) {\n            // Add the \"link\" effect to the pathLabel\n            final String linkPath = reportPath;\n            pathLabel.addMouseListener(new MouseListener() {\n\n                @Override\n                public void mouseClicked(MouseEvent e) {\n                }\n\n                @Override\n                public void mousePressed(MouseEvent e) {\n                }\n\n                @Override\n                public void mouseReleased(MouseEvent e) {\n                    File file = new File(linkPath);\n                    try {\n                        Desktop.getDesktop().open(file);\n                    } catch (IOException ex) {\n                    } catch (IllegalArgumentException ex) {\n                        try {\n                            // try to open the parent path if the file doens't exist\n                            Desktop.getDesktop().open(file.getParentFile());\n                        } catch (IOException ex1) {\n                        }\n                    }\n                }\n\n                @Override\n                public void mouseEntered(MouseEvent e) {\n                    pathLabel.setForeground(Color.DARK_GRAY);\n                    setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n                }\n\n                @Override\n                public void mouseExited(MouseEvent e) {\n                    pathLabel.setForeground(Color.BLACK);\n                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\n                }\n\n            });\n        }\n    }","commit_id":"178179a4628041b93e1429968d59622c212c4483","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n  public void start() {\n    metricsCollectionService = injector.getInstance(MetricsCollectionService.class);\n\n    startHealthCheckService();\n\n    Futures.getUnchecked(Services.chainStart(zkClientService,\n                                             kafkaClientService,\n                                             metricsCollectionService));\n\n    WeaveRunnerService weaveRunnerService = injector.getInstance(WeaveRunnerService.class);\n    weaveRunnerService.startAndWait();\n    Configuration hConf = injector.getInstance(Configuration.class);\n    if (User.isHBaseSecurityEnabled(hConf)) {\n      long updateInterval = hConf.getLong(Constants.HBase.AUTH_KEY_UPDATE_INTERVAL, 0L);\n      weaveRunnerService.scheduleSecureStoreUpdate(new HBaseSecureStoreUpdater(hConf),\n                                                   30000L, updateInterval, TimeUnit.MILLISECONDS);\n    }\n\n    leaderElection = new LeaderElection(zkClientService,\n                                        Constants.Service.APP_FABRIC_LEADER_ELECTION_PREFIX, new ElectionHandler() {\n      @Override\n      public void leader() {\n        appFabricServer = injector.getInstance(AppFabricServer.class);\n        LOG.info(\"Leader: Starting app fabric server.\");\n        Futures.getUnchecked(Services.chainStart(appFabricServer));\n      }\n\n      @Override\n      public void follower() {\n        if (appFabricServer != null) {\n          LOG.info(\"Follower: Stopping app fabric server.\");\n          Futures.getUnchecked(Services.chainStop(appFabricServer));\n        }\n      }\n    });\n  }","id":8069,"modified_method":"@Override\n  public void start() {\n    metricsCollectionService = injector.getInstance(MetricsCollectionService.class);\n\n    startHealthCheckService();\n\n    Futures.getUnchecked(Services.chainStart(zkClientService,\n                                             kafkaClientService,\n                                             metricsCollectionService));\n\n    WeaveRunnerService weaveRunnerService = injector.getInstance(WeaveRunnerService.class);\n    weaveRunnerService.startAndWait();\n    Configuration hConf = injector.getInstance(Configuration.class);\n    if (User.isHBaseSecurityEnabled(hConf)) {\n      HBaseSecureStoreUpdater updater = new HBaseSecureStoreUpdater(hConf);\n      weaveRunnerService.scheduleSecureStoreUpdate(updater, 30000L, updater.getUpdateInterval(), TimeUnit.MILLISECONDS);\n    }\n\n    leaderElection = new LeaderElection(zkClientService,\n                                        Constants.Service.APP_FABRIC_LEADER_ELECTION_PREFIX, new ElectionHandler() {\n      @Override\n      public void leader() {\n        appFabricServer = injector.getInstance(AppFabricServer.class);\n        LOG.info(\"Leader: Starting app fabric server.\");\n        Futures.getUnchecked(Services.chainStart(appFabricServer));\n      }\n\n      @Override\n      public void follower() {\n        if (appFabricServer != null) {\n          LOG.info(\"Follower: Stopping app fabric server.\");\n          Futures.getUnchecked(Services.chainStop(appFabricServer));\n        }\n      }\n    });\n  }","commit_id":"b74562461b8f350802f39fcfb903a12c13b62030","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  protected void scheduleSecureStoreUpdate(WeaveRunner weaveRunner) {\n    if (User.isHBaseSecurityEnabled(hConf)) {\n      long updateInterval = hConf.getLong(Constants.HBase.AUTH_KEY_UPDATE_INTERVAL, 0L);\n      weaveRunner.scheduleSecureStoreUpdate(new HBaseSecureStoreUpdater(hConf),\n                                            30000L, updateInterval, TimeUnit.MILLISECONDS);\n    }\n  }","id":8070,"modified_method":"@Override\n  protected void scheduleSecureStoreUpdate(WeaveRunner weaveRunner) {\n    if (User.isHBaseSecurityEnabled(hConf)) {\n      HBaseSecureStoreUpdater updater = new HBaseSecureStoreUpdater(hConf);\n      weaveRunner.scheduleSecureStoreUpdate(updater, 30000L, updater.getUpdateInterval(), TimeUnit.MILLISECONDS);\n    }\n  }","commit_id":"b74562461b8f350802f39fcfb903a12c13b62030","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public SecureStore update(String application, RunId runId) {\n    long now = System.currentTimeMillis();\n    if (now >= nextUpdateTime) {\n      // The value contains in hbase-default.xml, so it should always there.\n      long renewInterval = hConf.getLong(Constants.HBase.AUTH_KEY_UPDATE_INTERVAL, 0L);\n      nextUpdateTime = now + renewInterval;\n\n      HBaseTokenUtils.obtainToken(hConf, credentials);\n    }\n    return YarnSecureStore.create(credentials);\n  }","id":8071,"modified_method":"@Override\n  public SecureStore update(String application, RunId runId) {\n    long now = System.currentTimeMillis();\n    if (now >= nextUpdateTime) {\n      nextUpdateTime = now + getUpdateInterval();\n\n      HBaseTokenUtils.obtainToken(hConf, credentials);\n    }\n    return YarnSecureStore.create(credentials);\n  }","commit_id":"b74562461b8f350802f39fcfb903a12c13b62030","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  protected void scheduleSecureStoreUpdate(WeaveRunner weaveRunner) {\n    if (User.isHBaseSecurityEnabled(hConf)) {\n      long updateInterval = hConf.getLong(Constants.HBase.AUTH_KEY_UPDATE_INTERVAL, 0L);\n      weaveRunner.scheduleSecureStoreUpdate(new HBaseSecureStoreUpdater(hConf),\n                                            30000L, updateInterval, TimeUnit.MILLISECONDS);\n    }\n  }","id":8072,"modified_method":"@Override\n  protected void scheduleSecureStoreUpdate(WeaveRunner weaveRunner) {\n    if (User.isHBaseSecurityEnabled(hConf)) {\n      HBaseSecureStoreUpdater updater = new HBaseSecureStoreUpdater(hConf);\n      weaveRunner.scheduleSecureStoreUpdate(updater, 30000L, updater.getUpdateInterval(), TimeUnit.MILLISECONDS);\n    }\n  }","commit_id":"b74562461b8f350802f39fcfb903a12c13b62030","url":"https://github.com/caskdata/cdap"},{"original_method":"public WOActionResults resetPasswordAction() {\n\t\tWOActionResults nextPage;\n\t\tEOEditingContext editingContext = ERXEC.newEditingContext();\n\t\tString resetPasswordCode = request().stringFormValueForKey(SPUtilities.RESET_PASSWORD_CODE_KEY);\n\t\tif (resetPasswordCode == null || resetPasswordCode.trim().length() == 0) {\n\t\t\tsession().errors().addNotice(\"You must provide a reset code to change your password.\");\n\t\t\tnextPage = pageWithName(Main.class);\n\t\t} else {\n\t\t\tSPPerson person = SPPerson.fetchSPPerson(editingContext, SPPerson.PASSWORD.is(resetPasswordCode));\n\t\t\tif (person == null) {\n\t\t\t\tsession().errors().addNotice(\"The reset code you are using is invalid.\");\n\t\t\t\tnextPage = pageWithName(Main.class);\n\t\t\t} else {\n\t\t\t\tSPResetPasswordPage resetPasswordPage = pageWithName(SPResetPasswordPage.class);\n\t\t\t\tresetPasswordPage.setPerson(person);\n\t\t\t\tnextPage = resetPasswordPage;\n\t\t\t}\n\t\t}\n\t\treturn nextPage;\n\t}","id":8073,"modified_method":"public WOActionResults resetPasswordAction() {\n\t\tsession().logout();\n\t\t\n\t\tWOActionResults nextPage;\n\t\tEOEditingContext editingContext = ERXEC.newEditingContext();\n\t\tString resetPasswordCode = request().stringFormValueForKey(SPUtilities.RESET_PASSWORD_CODE_KEY);\n\t\tif (resetPasswordCode == null || resetPasswordCode.trim().length() == 0) {\n\t\t\tsession().errors().addNotice(\"You must provide a reset code to change your password.\");\n\t\t\tnextPage = pageWithName(Main.class);\n\t\t} else {\n\t\t\tSPPerson person = SPPerson.fetchSPPerson(editingContext, SPPerson.PASSWORD.is(resetPasswordCode));\n\t\t\tif (person == null) {\n\t\t\t\tsession().errors().addNotice(\"The reset code you are using is invalid.\");\n\t\t\t\tnextPage = pageWithName(Main.class);\n\t\t\t} else {\n\t\t\t\tSPResetPasswordPage resetPasswordPage = pageWithName(SPResetPasswordPage.class);\n\t\t\t\tresetPasswordPage.setPerson(person);\n\t\t\t\tnextPage = resetPasswordPage;\n\t\t\t}\n\t\t}\n\t\treturn nextPage;\n\t}","commit_id":"e29ec9cb2d4ad63c1461241ed3032b06a87818a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"public WOActionResults confirmAction() {\n\t\tWOActionResults nextPage;\n\t\tEOEditingContext editingContext = ERXEC.newEditingContext();\n\t\tString confirmationCode = request().stringFormValueForKey(SPUtilities.CONFIRMATION_CODE_KEY);\n\t\tif (confirmationCode == null || confirmationCode.trim().length() == 0) {\n\t\t\tsession().errors().addNotice(\"You must provide a confirmation code to validate your membership.\");\n\t\t\tnextPage = pageWithName(Main.class);\n\t\t} else {\n\t\t\tSPMembership membership = SPMembership.fetchSPMembership(editingContext, SPMembership.CONFIRMATION_CODE.is(confirmationCode));\n\t\t\tif (membership == null) {\n\t\t\t\tsession().errors().addNotice(\"The validation code you are using is invalid. Please talk to the owner of your group to receive a new invite.\");\n\t\t\t\tnextPage = pageWithName(Main.class);\n\t\t\t} else {\n\t\t\t\tSPConfirmationPage validationPage = pageWithName(SPConfirmationPage.class);\n\t\t\t\tvalidationPage.setMembership(membership);\n\t\t\t\tnextPage = validationPage;\n\t\t\t}\n\t\t}\n\t\treturn nextPage;\n\t}","id":8074,"modified_method":"public WOActionResults confirmAction() {\n\t\tsession().logout();\n\n\t\tWOActionResults nextPage;\n\t\tEOEditingContext editingContext = ERXEC.newEditingContext();\n\t\tString confirmationCode = request().stringFormValueForKey(SPUtilities.CONFIRMATION_CODE_KEY);\n\t\tif (confirmationCode == null || confirmationCode.trim().length() == 0) {\n\t\t\tsession().errors().addNotice(\"You must provide a confirmation code to validate your membership.\");\n\t\t\tnextPage = pageWithName(Main.class);\n\t\t} else {\n\t\t\tSPMembership membership = SPMembership.fetchSPMembership(editingContext, SPMembership.CONFIRMATION_CODE.is(confirmationCode));\n\t\t\tif (membership == null) {\n\t\t\t\tsession().errors().addNotice(\"The validation code you are using is invalid. Please talk to the owner of your group to receive a new invite.\");\n\t\t\t\tnextPage = pageWithName(Main.class);\n\t\t\t} else {\n\t\t\t\tSPConfirmationPage validationPage = pageWithName(SPConfirmationPage.class);\n\t\t\t\tvalidationPage.setMembership(membership);\n\t\t\t\tnextPage = validationPage;\n\t\t\t}\n\t\t}\n\t\treturn nextPage;\n\t}","commit_id":"e29ec9cb2d4ad63c1461241ed3032b06a87818a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"public WOActionResults loginAction() {\n\t\tString emailAddress = request().stringFormValueForKey(\"emailAddress\");\n\t\tString password = request().stringFormValueForKey(\"password\");\n\t\tSPPerson person = SPPerson.fetchSPPerson(ERXEC.newEditingContext(), SPPerson.EMAIL_ADDRESS.is(emailAddress).and(SPPerson.PASSWORD.is(SPPerson.hashPassword(password))).and(SPPerson.PASSWORD.isNotNull()));\n\t\tWOActionResults nextPage;\n\t\tif (person != null) {\n\t\t\tsession().setCurrentPerson(person);\n\t\t\tnextPage = pageWithName(SPHomePage.class);\n\t\t} else {\n\t\t\tsession().errors().addNotice(\"There was no person found with that email address and password.\");\n\t\t\tnextPage = pageWithName(Main.class);\n\t\t}\n\t\treturn nextPage;\n\t}","id":8075,"modified_method":"public WOActionResults loginAction() {\n\t\tsession().logout();\n\t\t\n\t\tString emailAddress = request().stringFormValueForKey(\"emailAddress\");\n\t\tString password = request().stringFormValueForKey(\"password\");\n\t\tSPPerson person = SPPerson.fetchSPPerson(ERXEC.newEditingContext(), SPPerson.EMAIL_ADDRESS.is(emailAddress).and(SPPerson.PASSWORD.is(SPPerson.hashPassword(password))).and(SPPerson.PASSWORD.isNotNull()));\n\t\tWOActionResults nextPage;\n\t\tif (person != null) {\n\t\t\tsession().setCurrentPerson(person);\n\t\t\tnextPage = pageWithName(SPHomePage.class);\n\t\t} else {\n\t\t\tsession().errors().addNotice(\"There was no person found with that email address and password.\");\n\t\t\tnextPage = pageWithName(Main.class);\n\t\t}\n\t\treturn nextPage;\n\t}","commit_id":"e29ec9cb2d4ad63c1461241ed3032b06a87818a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"public WOActionResults accept() {\n\t\tWOActionResults nextPage;\n\n\t\t// MS: This password checking is some repetitive bullshit ... It needs to be somewhere more centralized, but\n\t\t// they're all just SLLIIGGHTTLY different. They also can't quite be in EO validation because we actually\n\t\t// ALLOW a null password, but just not when entered by a user.\n\t\tif (_password != null) {\n\t\t\tif (!ERXExtensions.safeEquals(_password, _confirmPassword)) {\n\t\t\t\t_password = null;\n\t\t\t\t_confirmPassword = null;\n\t\t\t\tsession().errors().addNotice(\"Your password confirmation didn't match.\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t_membership.person().setPlainTextPassword(_password);\n\t\t}\n\n\t\tif (ERXStringUtilities.nullForEmptyString(_membership.person().name()) == null) {\n\t\t\tsession().errors().addNotice(\"You must set your name before accepting this invitation.\");\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (ERXStringUtilities.nullForEmptyString(_membership.person().password()) == null) {\n\t\t\tsession().errors().addNotice(\"You must set your password before accepting this invitation.\");\n\t\t\treturn null;\n\t\t}\n\n\t\t_membership.acceptInvitation();\n\n\t\ttry {\n\t\t\t_membership.editingContext().saveChanges();\n\t\t\tsession().setCurrentPerson(_membership.person());\n\t\t\tnextPage = pageWithName(SPHomePage.class);\n\t\t} catch (Throwable t) {\n\t\t\tsession().errors().addNotice(t.getMessage());\n\t\t\tnextPage = null;\n\t\t}\n\n\t\treturn nextPage;\n\t}","id":8076,"modified_method":"public WOActionResults accept() {\n\t\tif (session().errors().hasNotices()) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tWOActionResults nextPage;\n\n\t\t// MS: This password checking is some repetitive bullshit ... It needs to be somewhere more centralized, but\n\t\t// they're all just SLLIIGGHTTLY different. They also can't quite be in EO validation because we actually\n\t\t// ALLOW a null password, but just not when entered by a user.\n\t\tif (_password != null) {\n\t\t\tif (!ERXExtensions.safeEquals(_password, _confirmPassword)) {\n\t\t\t\t_password = null;\n\t\t\t\t_confirmPassword = null;\n\t\t\t\tsession().errors().addNotice(\"Your password confirmation didn't match.\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t_membership.person().setPlainTextPassword(_password);\n\t\t}\n\n\t\tif (ERXStringUtilities.nullForEmptyString(_membership.person().password()) == null) {\n\t\t\tsession().errors().addNotice(\"You must set your password before accepting this invitation.\");\n\t\t\treturn null;\n\t\t}\n\n\t\t_membership.acceptInvitation();\n\n\t\ttry {\n\t\t\t_membership.editingContext().saveChanges();\n\t\t\tsession().setCurrentPerson(_membership.person());\n\t\t\tnextPage = pageWithName(SPHomePage.class);\n\t\t} catch (Throwable t) {\n\t\t\tsession().errors().addNotice(t.getMessage());\n\t\t\tnextPage = null;\n\t\t}\n\n\t\treturn nextPage;\n\t}","commit_id":"e29ec9cb2d4ad63c1461241ed3032b06a87818a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"public WOActionResults saveEvent() {\n\t\t_event.editingContext().saveChanges();\n\t\tSPEventPage eventPage = pageWithName(SPEventPage.class);\n\t\teventPage.setEvent(_event);\n\t\treturn eventPage;\n\t}","id":8077,"modified_method":"public WOActionResults saveEvent() {\n\t\tif (session().errors().hasNotices()) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\t_event.editingContext().saveChanges();\n\t\tSPEventPage eventPage = pageWithName(SPEventPage.class);\n\t\teventPage.setEvent(_event);\n\t\treturn eventPage;\n\t}","commit_id":"e29ec9cb2d4ad63c1461241ed3032b06a87818a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"public WOActionResults addEvent() {\n\t\t_event.editingContext().saveChanges();\n\t\tSPEventPage eventPage = pageWithName(SPEventPage.class);\n\t\teventPage.setEvent(_event);\n\t\treturn eventPage;\n\t}","id":8078,"modified_method":"public WOActionResults addEvent() {\n\t\tif (session().errors().hasNotices()) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\t_event.editingContext().saveChanges();\n\t\tSPEventPage eventPage = pageWithName(SPEventPage.class);\n\t\teventPage.setEvent(_event);\n\t\treturn eventPage;\n\t}","commit_id":"e29ec9cb2d4ad63c1461241ed3032b06a87818a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"public SPMembership invite(String emailAddress) {\n\t\tEOEditingContext editingContext = editingContext();\n\t\tSPPerson person = SPPerson.fetchSPPerson(editingContext, SPPerson.EMAIL_ADDRESS.is(emailAddress));\n\t\tif (person == null) {\n\t\t\tint atIndex = emailAddress.indexOf('@');\n\t\t\tString name = atIndex == -1 ? emailAddress : emailAddress.substring(0, atIndex);\n\t\t\tperson = SPPerson.createSPPerson(editingContext, Boolean.FALSE, emailAddress, Boolean.FALSE, name);\n\t\t}\n\t\tSPMembership membership = membershipForPerson(person);\n\t\tif (membership == null) {\n\t\t\tmembership = SPMembership.createSPMembership(editingContext, Boolean.FALSE, Boolean.FALSE, this, person);\n\t\t}\n\t\treturn membership;\n\t}","id":8079,"modified_method":"public SPMembership invite(String emailAddress) {\n\t\tEOEditingContext editingContext = editingContext();\n\t\tSPPerson person = SPPerson.fetchSPPerson(editingContext, SPPerson.EMAIL_ADDRESS.likeInsensitive(emailAddress));\n\t\tif (person == null) {\n\t\t\tint atIndex = emailAddress.indexOf('@');\n\t\t\tString name = atIndex == -1 ? emailAddress : emailAddress.substring(0, atIndex);\n\t\t\tperson = SPPerson.createSPPerson(editingContext, Boolean.FALSE, emailAddress, Boolean.FALSE, name);\n\t\t}\n\t\tSPMembership membership = membershipForPerson(person);\n\t\tif (membership == null) {\n\t\t\tmembership = SPMembership.createSPMembership(editingContext, Boolean.FALSE, Boolean.FALSE, this, person);\n\t\t}\n\t\treturn membership;\n\t}","commit_id":"e29ec9cb2d4ad63c1461241ed3032b06a87818a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"public WOActionResults saveGroup() {\n\t\t_group.editingContext().saveChanges();\n\t\tSPGroupPage groupPage = pageWithName(SPGroupPage.class);\n\t\tgroupPage.setGroup(_group);\n\t\treturn groupPage;\n\t}","id":8080,"modified_method":"public WOActionResults saveGroup() {\n\t\tif (session().errors().hasNotices()) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\t_group.editingContext().saveChanges();\n\t\tSPGroupPage groupPage = pageWithName(SPGroupPage.class);\n\t\tgroupPage.setGroup(_group);\n\t\treturn groupPage;\n\t}","commit_id":"e29ec9cb2d4ad63c1461241ed3032b06a87818a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"public WOActionResults addGroup() {\n\t\t_group.editingContext().saveChanges();\n\t\tSPGroupEditPage groupPage = pageWithName(SPGroupEditPage.class);\n\t\tgroupPage.setGroup(_group);\n\t\treturn groupPage;\n\t}","id":8081,"modified_method":"public WOActionResults addGroup() {\n\t\tif (session().errors().hasNotices()) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\t_group.editingContext().saveChanges();\n\t\tSPGroupEditPage groupPage = pageWithName(SPGroupEditPage.class);\n\t\tgroupPage.setGroup(_group);\n\t\treturn groupPage;\n\t}","commit_id":"e29ec9cb2d4ad63c1461241ed3032b06a87818a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"public WOActionResults updateProfile() {\n\t\t// MS: This password checking is some repetitive bullshit ... It needs to be somewhere more centralized, but\n\t\t// they're all just SLLIIGGHTTLY different. They also can't quite be in EO validation because we actually\n\t\t// ALLOW a null password, but just not when entered by a user.\n\t\tif (!ERXExtensions.safeEquals(SPPerson.hashPassword(_currentPassword), _person.password())) {\n\t\t\t_currentPassword = null;\n\t\t\tsession().errors().addNotice(\"Your current password does not match the password you provided.\");\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tif (ERXStringUtilities.nullForEmptyString(_person.name()) == null) {\n\t\t\tsession().errors().addNotice(\"Your must set a name.\");\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tif (ERXStringUtilities.nullForEmptyString(_password) == null) {\n\t\t\tsession().errors().addNotice(\"Your must set a new passwrd.\");\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tif (!ERXExtensions.safeEquals(_password, _confirmPassword)) {\n\t\t\t_password = null;\n\t\t\t_confirmPassword = null;\n\t\t\tsession().errors().addNotice(\"Your password confirmation didn't match.\");\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\t_person.setPlainTextPassword(_password);\n\t\t_person.editingContext().saveChanges();\n\t\tsession().notifications().addNotice(\"Your profile has been updated.\");\n\t\treturn pageWithName(Main.class);\n\t}","id":8082,"modified_method":"public WOActionResults updateProfile() {\n\t\tif (session().errors().hasNotices()) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tif (ERXStringUtilities.nullForEmptyString(_password) != null) {\n\t\t\t// MS: This password checking is some repetitive bullshit ... It needs to be somewhere more centralized, but\n\t\t\t// they're all just SLLIIGGHTTLY different. They also can't quite be in EO validation because we actually\n\t\t\t// ALLOW a null password, but just not when entered by a user.\n\t\t\tif (!ERXExtensions.safeEquals(SPPerson.hashPassword(_currentPassword), _person.password())) {\n\t\t\t\t_currentPassword = null;\n\t\t\t\tsession().errors().addNotice(\"Your current password does not match the password you provided.\");\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t\n\t\t\tif (ERXStringUtilities.nullForEmptyString(_password) == null) {\n\t\t\t\tsession().errors().addNotice(\"Your must set a new passwrd.\");\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t\n\t\t\tif (!ERXExtensions.safeEquals(_password, _confirmPassword)) {\n\t\t\t\t_password = null;\n\t\t\t\t_confirmPassword = null;\n\t\t\t\tsession().errors().addNotice(\"Your password confirmation didn't match.\");\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t\n\t\t\t_person.setPlainTextPassword(_password);\n\t\t}\n\t\t\n\t\t_person.editingContext().saveChanges();\n\t\tsession().notifications().addNotice(\"Your profile has been updated.\");\n\t\treturn pageWithName(Main.class);\n\t}","commit_id":"e29ec9cb2d4ad63c1461241ed3032b06a87818a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"public WOActionResults resetPassword() {\n\t\t// MS: This password checking is some repetitive bullshit ... It needs to be somewhere more centralized, but\n\t\t// they're all just SLLIIGGHTTLY different. They also can't quite be in EO validation because we actually\n\t\t// ALLOW a null password, but just not when entered by a user.\n\t\tif (!ERXExtensions.safeEquals(_password, _confirmPassword)) {\n\t\t\t_password = null;\n\t\t\t_confirmPassword = null;\n\t\t\tsession().errors().addNotice(\"Your password confirmation didn't match.\");\n\t\t\treturn null;\n\t\t}\n\n\t\tif (ERXStringUtilities.nullForEmptyString(_person.name()) == null) {\n\t\t\tsession().errors().addNotice(\"You must set a name before logging in.\");\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tif (ERXStringUtilities.nullForEmptyString(_password) == null) {\n\t\t\tsession().errors().addNotice(\"You must set a password before logging in.\");\n\t\t\treturn null;\n\t\t}\n\n\t\t_person.setPlainTextPassword(_password);\n\t\t_person.editingContext().saveChanges();\n\t\t\n\t\tsession().notifications().addNotice(\"Your password has been changed. Please login again.\");\n\n\t\treturn pageWithName(Main.class);\n\t}","id":8083,"modified_method":"public WOActionResults resetPassword() {\n\t\tif (session().errors().hasNotices()) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\t// MS: This password checking is some repetitive bullshit ... It needs to be somewhere more centralized, but\n\t\t// they're all just SLLIIGGHTTLY different. They also can't quite be in EO validation because we actually\n\t\t// ALLOW a null password, but just not when entered by a user.\n\t\tif (!ERXExtensions.safeEquals(_password, _confirmPassword)) {\n\t\t\t_password = null;\n\t\t\t_confirmPassword = null;\n\t\t\tsession().errors().addNotice(\"Your password confirmation didn't match.\");\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tif (ERXStringUtilities.nullForEmptyString(_password) == null) {\n\t\t\tsession().errors().addNotice(\"You must set a password before logging in.\");\n\t\t\treturn null;\n\t\t}\n\n\t\t_person.setPlainTextPassword(_password);\n\t\t_person.editingContext().saveChanges();\n\t\t\n\t\tsession().notifications().addNotice(\"Your password has been changed. Please login again.\");\n\n\t\treturn pageWithName(Main.class);\n\t}","commit_id":"e29ec9cb2d4ad63c1461241ed3032b06a87818a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"private static void replaceSimplifiableImplicitAssignment(GrIfStatement statement)\n        throws IncorrectOperationException {\n      final PsiElement prevStatement =\n          PsiTreeUtil.skipSiblingsBackward(statement,\n              PsiWhiteSpace.class);\n      if (prevStatement == null) {\n        return;\n      }\n      final GrExpression condition = (GrExpression) statement.getCondition();\n      final String conditionText = condition.getText();\n      final GrStatement thenBranch = statement.getThenBranch();\n      final GrAssignmentExpression assignmentExpression =\n          (GrAssignmentExpression) ConditionalUtils.stripBraces(thenBranch);\n      final IElementType operator =\n          assignmentExpression.getOperationToken();\n      final GrExpression lhs = assignmentExpression.getLValue();\n      final String lhsText = lhs.getText();\n      replaceStatement(statement,\n          lhsText + operator + conditionText + ';');\n      prevStatement.delete();\n    }","id":8084,"modified_method":"private static void replaceSimplifiableImplicitAssignment(GrIfStatement statement)\n        throws IncorrectOperationException {\n      final PsiElement prevStatement =\n          PsiTreeUtil.skipSiblingsBackward(statement,\n              PsiWhiteSpace.class);\n      if (prevStatement == null) {\n        return;\n      }\n      final GrCondition condition = statement.getCondition();\n      final String conditionText = condition.getText();\n      final GrStatement thenBranch = statement.getThenBranch();\n      final GrAssignmentExpression assignmentExpression =\n          (GrAssignmentExpression) ConditionalUtils.stripBraces(thenBranch);\n      final IElementType operator =\n          assignmentExpression.getOperationToken();\n      final GrExpression lhs = assignmentExpression.getLValue();\n      final String lhsText = lhs.getText();\n      replaceStatement(statement,\n          lhsText + operator + conditionText + ';');\n      prevStatement.delete();\n    }","commit_id":"2e8e90a63f96a47618f236f70426adb800646611","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void repaceSimplifiableReturn(GrIfStatement statement)\n        throws IncorrectOperationException {\n      final GrExpression condition = (GrExpression) statement.getCondition();\n      final String conditionText = condition.getText();\n      @NonNls final String newStatement = \"return \" + conditionText + ';';\n      replaceStatement(statement, newStatement);\n    }","id":8085,"modified_method":"private static void repaceSimplifiableReturn(GrIfStatement statement)\n        throws IncorrectOperationException {\n      final GrCondition condition = statement.getCondition();\n      final String conditionText = condition.getText();\n      @NonNls final String newStatement = \"return \" + conditionText + ';';\n      replaceStatement(statement, newStatement);\n    }","commit_id":"2e8e90a63f96a47618f236f70426adb800646611","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void replaceSimplifiableImplicitReturn(GrIfStatement statement)\n        throws IncorrectOperationException {\n      final GrExpression condition = (GrExpression) statement.getCondition();\n      final String conditionText = condition.getText();\n      final PsiElement nextStatement =\n          PsiTreeUtil.skipSiblingsForward(statement,\n              PsiWhiteSpace.class);\n      @NonNls final String newStatement = \"return \" + conditionText + ';';\n      replaceStatement(statement, newStatement);\n      assert nextStatement != null;\n      nextStatement.delete();\n    }","id":8086,"modified_method":"private static void replaceSimplifiableImplicitReturn(GrIfStatement statement)\n        throws IncorrectOperationException {\n      final GrCondition condition = statement.getCondition();\n      final String conditionText = condition.getText();\n      final PsiElement nextStatement =\n          PsiTreeUtil.skipSiblingsForward(statement,\n              PsiWhiteSpace.class);\n      @NonNls final String newStatement = \"return \" + conditionText + ';';\n      replaceStatement(statement, newStatement);\n      assert nextStatement != null;\n      nextStatement.delete();\n    }","commit_id":"2e8e90a63f96a47618f236f70426adb800646611","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void replaceSimplifiableAssignmentNegated(GrIfStatement statement)\n        throws IncorrectOperationException {\n      final GrExpression condition = (GrExpression) statement.getCondition();\n      final String conditionText =\n          BoolUtils.getNegatedExpressionText(condition);\n      final GrStatement thenBranch = statement.getThenBranch();\n      final GrAssignmentExpression assignmentExpression =\n          (GrAssignmentExpression) ConditionalUtils.stripBraces(thenBranch);\n      final IElementType operator =\n          assignmentExpression.getOperationToken();\n      final String operatorText = getTextForOperator(operator);\n      final GrExpression lhs = assignmentExpression.getLValue();\n      final String lhsText = lhs.getText();\n      replaceStatement(statement,\n          lhsText + operatorText + conditionText + ';');\n    }","id":8087,"modified_method":"private static void replaceSimplifiableAssignmentNegated(GrIfStatement statement)\n        throws IncorrectOperationException {\n      final GrCondition condition = statement.getCondition();\n      if (!(condition instanceof GrExpression)) {\n        return;\n      }\n      final GrExpression expression = (GrExpression) condition;\n      final String conditionText =\n          BoolUtils.getNegatedExpressionText(expression);\n      final GrStatement thenBranch = statement.getThenBranch();\n      final GrAssignmentExpression assignmentExpression =\n          (GrAssignmentExpression) ConditionalUtils.stripBraces(thenBranch);\n      final IElementType operator =\n          assignmentExpression.getOperationToken();\n      final String operatorText = getTextForOperator(operator);\n      final GrExpression lhs = assignmentExpression.getLValue();\n      final String lhsText = lhs.getText();\n      replaceStatement(statement,\n          lhsText + operatorText + conditionText + ';');\n    }","commit_id":"2e8e90a63f96a47618f236f70426adb800646611","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void replaceSimplifiableAssignment(GrIfStatement statement)\n        throws IncorrectOperationException {\n      final GrExpression condition = (GrExpression) statement.getCondition();\n      final String conditionText = condition.getText();\n      final GrStatement thenBranch = statement.getThenBranch();\n      final GrAssignmentExpression assignmentExpression =\n          (GrAssignmentExpression) ConditionalUtils.stripBraces(thenBranch);\n      final IElementType operator =\n          assignmentExpression.getOperationToken();\n      final String operatorText = getTextForOperator(operator);\n      final GrExpression lhs = assignmentExpression.getLValue();\n      final String lhsText = lhs.getText();\n      replaceStatement(statement,\n          lhsText + operatorText + conditionText + ';');\n    }","id":8088,"modified_method":"private static void replaceSimplifiableAssignment(GrIfStatement statement)\n        throws IncorrectOperationException {\n      final GrCondition condition = statement.getCondition();\n      final String conditionText = condition.getText();\n      final GrStatement thenBranch = statement.getThenBranch();\n      final GrAssignmentExpression assignmentExpression =\n          (GrAssignmentExpression) ConditionalUtils.stripBraces(thenBranch);\n      final IElementType operator =\n          assignmentExpression.getOperationToken();\n      final String operatorText = getTextForOperator(operator);\n      final GrExpression lhs = assignmentExpression.getLValue();\n      final String lhsText = lhs.getText();\n      replaceStatement(statement,\n          lhsText + operatorText + conditionText + ';');\n    }","commit_id":"2e8e90a63f96a47618f236f70426adb800646611","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void replaceSimplifiableImplicitReturnNegated(GrIfStatement statement)\n        throws IncorrectOperationException {\n      final GrExpression condition = (GrExpression) statement.getCondition();\n\n      final String conditionText =\n          BoolUtils.getNegatedExpressionText(condition);\n      final PsiElement nextStatement =\n          PsiTreeUtil.skipSiblingsForward(statement,\n              PsiWhiteSpace.class);\n      if (nextStatement == null) {\n        return;\n      }\n      @NonNls final String newStatement = \"return \" + conditionText + ';';\n      replaceStatement(statement, newStatement);\n      nextStatement.delete();\n    }","id":8089,"modified_method":"private static void replaceSimplifiableImplicitReturnNegated(GrIfStatement statement)\n        throws IncorrectOperationException {\n      final GrCondition condition = statement.getCondition();\n      if (!(condition instanceof GrExpression)) {\n        return;\n      }\n      final GrExpression expression = (GrExpression) condition;\n      final String conditionText =\n          BoolUtils.getNegatedExpressionText(expression);\n      final PsiElement nextStatement =\n          PsiTreeUtil.skipSiblingsForward(statement,\n              PsiWhiteSpace.class);\n      if (nextStatement == null) {\n        return;\n      }\n      @NonNls final String newStatement = \"return \" + conditionText + ';';\n      replaceStatement(statement, newStatement);\n      nextStatement.delete();\n    }","commit_id":"2e8e90a63f96a47618f236f70426adb800646611","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void repaceSimplifiableReturnNegated(GrIfStatement statement)\n        throws IncorrectOperationException {\n      final GrExpression condition = (GrExpression) statement.getCondition();\n      final String conditionText =\n          BoolUtils.getNegatedExpressionText(condition);\n      @NonNls final String newStatement = \"return \" + conditionText + ';';\n      replaceStatement(statement, newStatement);\n    }","id":8090,"modified_method":"private static void repaceSimplifiableReturnNegated(GrIfStatement statement)\n        throws IncorrectOperationException {\n      final GrCondition condition = statement.getCondition();\n      if (!(condition instanceof GrExpression)) {\n        return;\n      }\n      final GrExpression expression = (GrExpression) condition;\n      final String conditionText =\n          BoolUtils.getNegatedExpressionText(expression);\n      @NonNls final String newStatement = \"return \" + conditionText + ';';\n      replaceStatement(statement, newStatement);\n    }","commit_id":"2e8e90a63f96a47618f236f70426adb800646611","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void replaceSimplifiableImplicitAssignmentNegated(GrIfStatement statement)\n        throws IncorrectOperationException {\n      final PsiElement prevStatement =\n          PsiTreeUtil.skipSiblingsBackward(statement,\n              PsiWhiteSpace.class);\n\n      final GrExpression condition = (GrExpression) statement.getCondition();\n      final String conditionText =\n          BoolUtils.getNegatedExpressionText(condition);\n      final GrStatement thenBranch = statement.getThenBranch();\n      final GrAssignmentExpression assignmentExpression =\n          (GrAssignmentExpression) ConditionalUtils.stripBraces(thenBranch);\n      final IElementType operator =\n          assignmentExpression.getOperationToken();\n      final String operatorText = getTextForOperator(operator);\n      final GrExpression lhs = assignmentExpression.getLValue();\n      final String lhsText = lhs.getText();\n      replaceStatement(statement,\n          lhsText + operatorText + conditionText + ';');\n      assert prevStatement != null;\n      prevStatement.delete();\n    }","id":8091,"modified_method":"private static void replaceSimplifiableImplicitAssignmentNegated(GrIfStatement statement)\n        throws IncorrectOperationException {\n      final PsiElement prevStatement =\n          PsiTreeUtil.skipSiblingsBackward(statement,\n              PsiWhiteSpace.class);\n      final GrCondition condition = statement.getCondition();\n      if (!(condition instanceof GrExpression)) {\n        return;\n      }\n      final GrExpression expression = (GrExpression) condition;\n      final String conditionText =\n          BoolUtils.getNegatedExpressionText(expression);\n      final GrStatement thenBranch = statement.getThenBranch();\n      final GrAssignmentExpression assignmentExpression =\n          (GrAssignmentExpression) ConditionalUtils.stripBraces(thenBranch);\n      final IElementType operator =\n          assignmentExpression.getOperationToken();\n      final String operatorText = getTextForOperator(operator);\n      final GrExpression lhs = assignmentExpression.getLValue();\n      final String lhsText = lhs.getText();\n      replaceStatement(statement,\n          lhsText + operatorText + conditionText + ';');\n      assert prevStatement != null;\n      prevStatement.delete();\n    }","commit_id":"2e8e90a63f96a47618f236f70426adb800646611","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void visitIfStatement(@NotNull GrIfStatement ifStatement) {\n      super.visitIfStatement(ifStatement);\n      final GrExpression condition = (GrExpression) ifStatement.getCondition();\n      if (condition == null) {\n        return;\n      }\n      if (isSimplifiableAssignment(ifStatement)) {\n        registerStatementError(ifStatement);\n        return;\n      }\n\n      if (isSimplifiableReturn(ifStatement)) {\n        registerStatementError(ifStatement);\n        return;\n      }\n\n      if (isSimplifiableImplicitReturn(ifStatement)) {\n        registerStatementError(ifStatement);\n        return;\n      }\n      if (isSimplifiableAssignmentNegated(ifStatement)) {\n        registerStatementError(ifStatement);\n        return;\n      }\n\n      if (isSimplifiableReturnNegated(ifStatement)) {\n        registerStatementError(ifStatement);\n        return;\n      }\n\n      if (isSimplifiableImplicitReturnNegated(ifStatement)) {\n        registerStatementError(ifStatement);\n        return;\n      }\n      if (isSimplifiableImplicitAssignment(ifStatement)) {\n        registerStatementError(ifStatement);\n        return;\n      }\n\n      if (isSimplifiableImplicitAssignmentNegated(ifStatement)) {\n        registerStatementError(ifStatement);\n      }\n    }","id":8092,"modified_method":"public void visitIfStatement(@NotNull GrIfStatement ifStatement) {\n      super.visitIfStatement(ifStatement);\n      final GrCondition condition = ifStatement.getCondition();\n      if (!(condition instanceof GrExpression)) {\n        return;\n      }\n      if (isSimplifiableAssignment(ifStatement)) {\n        registerStatementError(ifStatement);\n        return;\n      }\n\n      if (isSimplifiableReturn(ifStatement)) {\n        registerStatementError(ifStatement);\n        return;\n      }\n\n      if (isSimplifiableImplicitReturn(ifStatement)) {\n        registerStatementError(ifStatement);\n        return;\n      }\n      if (isSimplifiableAssignmentNegated(ifStatement)) {\n        registerStatementError(ifStatement);\n        return;\n      }\n\n      if (isSimplifiableReturnNegated(ifStatement)) {\n        registerStatementError(ifStatement);\n        return;\n      }\n\n      if (isSimplifiableImplicitReturnNegated(ifStatement)) {\n        registerStatementError(ifStatement);\n        return;\n      }\n      if (isSimplifiableImplicitAssignment(ifStatement)) {\n        registerStatementError(ifStatement);\n        return;\n      }\n\n      if (isSimplifiableImplicitAssignmentNegated(ifStatement)) {\n        registerStatementError(ifStatement);\n      }\n    }","commit_id":"2e8e90a63f96a47618f236f70426adb800646611","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean isNotNull(DfaVariableValue dfaVar) {\n    if (getVariableState(dfaVar).isNotNull()) {\n      return true;\n    }\n\n    DfaConstValue dfaNull = myFactory.getConstFactory().getNull();\n    Integer c1Index = getOrCreateEqClassIndex(dfaVar);\n    Integer c2Index = getOrCreateEqClassIndex(dfaNull);\n    if (c1Index == null || c2Index == null) {\n      return false;\n    }\n\n    long[] pairs = myDistinctClasses.toArray();\n    for (long pair : pairs) {\n      if (c1Index.equals(low(pair)) && c2Index.equals(high(pair)) ||\n          c1Index.equals(high(pair)) && c2Index.equals(low(pair))) {\n        return true;\n      }\n    }\n\n    return false;\n  }","id":8093,"modified_method":"@Override\n  public boolean isNotNull(DfaVariableValue dfaVar) {\n    if (getVariableState(dfaVar).isNotNull()) {\n      return true;\n    }\n\n    DfaConstValue dfaNull = myFactory.getConstFactory().getNull();\n    int c1Index = getEqClassIndex(dfaVar);\n    int c2Index = getEqClassIndex(dfaNull);\n    if (c1Index < 0 || c2Index < 0) {\n      return false;\n    }\n\n    long[] pairs = myDistinctClasses.toArray();\n    for (long pair : pairs) {\n      if (c1Index == low(pair) && c2Index == high(pair) ||\n          c1Index == high(pair) && c2Index == low(pair)) {\n        return true;\n      }\n    }\n\n    return false;\n  }","commit_id":"0f1494e02a86734644e62377809d28af37be2301","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean isNull(DfaValue dfaValue) {\n    if (dfaValue instanceof DfaTypeValue && ((DfaTypeValue)dfaValue).isNotNull()) return false;\n\n    if (dfaValue instanceof DfaVariableValue || dfaValue instanceof DfaConstValue) {\n      DfaConstValue dfaNull = myFactory.getConstFactory().getNull();\n      Integer c1Index = getOrCreateEqClassIndex(dfaValue);\n      Integer c2Index = getOrCreateEqClassIndex(dfaNull);\n\n      return c1Index != null && c1Index.equals(c2Index);\n    }\n\n    return false;\n  }","id":8094,"modified_method":"@Override\n  public boolean isNull(DfaValue dfaValue) {\n    if (dfaValue instanceof DfaTypeValue && ((DfaTypeValue)dfaValue).isNotNull()) return false;\n    \n    if (dfaValue instanceof DfaConstValue) return ((DfaConstValue)dfaValue).getConstant() == null;\n\n    if (dfaValue instanceof DfaVariableValue) {\n      int c1Index = getEqClassIndex(dfaValue);\n      return c1Index >= 0 && c1Index == getEqClassIndex(myFactory.getConstFactory().getNull());\n    }\n\n    return false;\n  }","commit_id":"0f1494e02a86734644e62377809d28af37be2301","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean canBeReused(final DfaValue valueToWrap, final DfaMemoryState memoryState) {\n    if (valueToWrap instanceof DfaConstValue) {\n      return cacheable((DfaConstValue)valueToWrap);\n    }\n    else if (valueToWrap instanceof DfaVariableValue) {\n      if (PsiType.BOOLEAN.equals(((DfaVariableValue)valueToWrap).getPsiVariable().getType())) return true;\n      List<DfaValue> values = ((DfaMemoryStateImpl)memoryState).getEqClassesFor(valueToWrap);\n      for (DfaValue value : values) {\n        if (value instanceof DfaConstValue && cacheable((DfaConstValue)value)) return true;\n      }\n      return false;\n    }\n    return false;\n    //throw new IllegalArgumentException(\"\"+valueToWrap);\n  }","id":8095,"modified_method":"private boolean canBeReused(final DfaValue dfaValue) {\n    if (dfaValue instanceof DfaBoxedValue) {\n      DfaValue valueToWrap = ((DfaBoxedValue)dfaValue).getWrappedValue();\n      if (valueToWrap instanceof DfaConstValue) {\n        return cacheable((DfaConstValue)valueToWrap);\n      }\n      if (valueToWrap instanceof DfaVariableValue) {\n        if (PsiType.BOOLEAN.equals(((DfaVariableValue)valueToWrap).getPsiVariable().getType())) return true;\n        for (DfaValue value : getEqClassesFor(valueToWrap)) {\n          if (value instanceof DfaConstValue && cacheable((DfaConstValue)value)) return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }","commit_id":"304d46bb965356c6aa2a880b41355b00b3de0ec2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isNull(DfaValue dfaValue) {\n    if (dfaValue instanceof DfaNotNullValue) return false;\n\n    if (dfaValue instanceof DfaVariableValue || dfaValue instanceof DfaConstValue) {\n      DfaConstValue dfaNull = myFactory.getConstFactory().getNull();\n      int c1Index = getOrCreateEqClassIndex(dfaValue);\n      int c2Index = getOrCreateEqClassIndex(dfaNull);\n\n      return c1Index == c2Index;\n    }\n\n    return false;\n  }","id":8096,"modified_method":"public boolean isNull(DfaValue dfaValue) {\n    if (dfaValue instanceof DfaNotNullValue) return false;\n\n    if (dfaValue instanceof DfaVariableValue || dfaValue instanceof DfaConstValue) {\n      DfaConstValue dfaNull = myFactory.getConstFactory().getNull();\n      Integer c1Index = getOrCreateEqClassIndex(dfaValue);\n      Integer c2Index = getOrCreateEqClassIndex(dfaNull);\n\n      return c1Index != null && c1Index.equals(c2Index);\n    }\n\n    return false;\n  }","commit_id":"304d46bb965356c6aa2a880b41355b00b3de0ec2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isNotNull(DfaVariableValue dfaVar) {\n    DfaConstValue dfaNull = myFactory.getConstFactory().getNull();\n    int c1Index = getOrCreateEqClassIndex(dfaVar);\n    int c2Index = getOrCreateEqClassIndex(dfaNull);\n\n    long[] pairs = myDistinctClasses.toArray();\n    for (long pair : pairs) {\n      if (low(pair) == c1Index && high(pair) == c2Index ||\n          high(pair) == c1Index && low(pair) == c2Index) {\n        return true;\n      }\n    }\n\n    return false;\n  }","id":8097,"modified_method":"public boolean isNotNull(DfaVariableValue dfaVar) {\n    DfaConstValue dfaNull = myFactory.getConstFactory().getNull();\n    Integer c1Index = getOrCreateEqClassIndex(dfaVar);\n    Integer c2Index = getOrCreateEqClassIndex(dfaNull);\n    if (c1Index == null || c2Index == null) {\n      return false;\n    }\n\n    long[] pairs = myDistinctClasses.toArray();\n    for (long pair : pairs) {\n      if (c1Index.equals(low(pair)) && c2Index.equals(high(pair)) ||\n          c1Index.equals(high(pair)) && c2Index.equals(low(pair))) {\n        return true;\n      }\n    }\n\n    return false;\n  }","commit_id":"304d46bb965356c6aa2a880b41355b00b3de0ec2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private int getOrCreateEqClassIndex(DfaValue dfaValue) {\n    int i = getEqClassIndex(dfaValue);\n    if (i != -1) return i;\n    SortedIntSet aClass = new SortedIntSet();\n    aClass.add(dfaValue.getID());\n    myEqClasses.add(aClass);\n    myStateSize++;\n\n    return myEqClasses.size() - 1;\n  }","id":8098,"modified_method":"@Nullable(\"for boxed values which can't be compared by ==\")\n  private Integer getOrCreateEqClassIndex(DfaValue dfaValue) {\n    int i = getEqClassIndex(dfaValue);\n    if (i != -1) return i;\n    if (!canBeReused(dfaValue) && !(((DfaBoxedValue)dfaValue).getWrappedValue() instanceof DfaConstValue)) {\n      return null;\n    }\n    SortedIntSet aClass = new SortedIntSet();\n    aClass.add(dfaValue.getID());\n    myEqClasses.add(aClass);\n    myStateSize++;\n\n    return myEqClasses.size() - 1;\n  }","commit_id":"304d46bb965356c6aa2a880b41355b00b3de0ec2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean applyRelation(@NotNull final DfaValue dfaLeft, @NotNull final DfaValue dfaRight, boolean isNegated) {\n    // DfaConstValue || DfaVariableValue\n    int c1Index = getOrCreateEqClassIndex(dfaLeft);\n    int c2Index = getOrCreateEqClassIndex(dfaRight);\n\n    if (!isNegated) { //Equals\n      if (c1Index == c2Index) return true;\n      if (!uniteClasses(c1Index, c2Index)) return false;\n    }\n    else { // Not Equals\n      if (c1Index == c2Index) return false;\n      makeClassesDistinct(c1Index, c2Index);\n    }\n\n    return true;\n  }","id":8099,"modified_method":"private boolean applyRelation(@NotNull final DfaValue dfaLeft, @NotNull final DfaValue dfaRight, boolean isNegated) {\n    // DfaConstValue || DfaVariableValue\n    Integer c1Index = getOrCreateEqClassIndex(dfaLeft);\n    Integer c2Index = getOrCreateEqClassIndex(dfaRight);\n    if (c1Index == null || c2Index == null) {\n      return true;\n    }\n\n    if (!isNegated) { //Equals\n      if (c1Index.equals(c2Index)) return true;\n      if (!uniteClasses(c1Index, c2Index)) return false;\n    }\n    else { // Not Equals\n      if (c1Index.equals(c2Index)) return false;\n      makeClassesDistinct(c1Index, c2Index);\n    }\n\n    return true;\n  }","commit_id":"304d46bb965356c6aa2a880b41355b00b3de0ec2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private int getEqClassIndex(@NotNull DfaValue dfaValue) {\n    for (int i = 0; i < myEqClasses.size(); i++) {\n      SortedIntSet aClass = myEqClasses.get(i);\n      if (aClass != null && aClass.contains(dfaValue.getID())) {\n        if (dfaValue instanceof DfaBoxedValue && !canBeReused(((DfaBoxedValue)dfaValue).getWrappedValue(), this) && aClass.size() > 1) return -1;\n        return i;\n      }\n    }\n    return -1;\n  }","id":8100,"modified_method":"private int getEqClassIndex(@NotNull DfaValue dfaValue) {\n    for (int i = 0; i < myEqClasses.size(); i++) {\n      SortedIntSet aClass = myEqClasses.get(i);\n      if (aClass != null && aClass.contains(dfaValue.getID())) {\n        if (!canBeReused(dfaValue) && aClass.size() > 1) return -1;\n        return i;\n      }\n    }\n    return -1;\n  }","commit_id":"304d46bb965356c6aa2a880b41355b00b3de0ec2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public FieldStatsResponse fieldStats(String field) throws IOException, APIException {\n        PathMethod routePath;\n        switch (timeRange.getType()) {\n            case ABSOLUTE:\n                routePath = routes.AbsoluteSearchResource().statsAbsolute();\n                break;\n            case KEYWORD:\n                routePath = routes.KeywordSearchResource().statsKeyword();\n                break;\n            case RELATIVE:\n                routePath = routes.RelativeSearchResource().statsRelative();\n                break;\n            default:\n                throw new RuntimeException(\"Invalid time range type!\");\n        }\n        return api.path(routePath, FieldStatsResponse.class)\n                .queryParam(\"field\", field)\n                .queryParam(\"query\", query)\n                .queryParams(timeRange.getQueryParams())\n                .queryParam(\"filter\", (filter == null ? \"*\" : filter))\n                .timeout(apiTimeout(\"search_universal_stats\", KEITH, TimeUnit.SECONDS))\n                .execute();\n    }","id":8101,"modified_method":"public FieldStatsResponse fieldStats(String field) throws IOException, APIException {\n        PathMethod routePath;\n        switch (timeRange.getType()) {\n            case ABSOLUTE:\n                routePath = routes.AbsoluteSearchResource().statsAbsolute();\n                break;\n            case KEYWORD:\n                routePath = routes.KeywordSearchResource().statsKeyword();\n                break;\n            case RELATIVE:\n                routePath = routes.RelativeSearchResource().statsRelative();\n                break;\n            default:\n                throw new RuntimeException(\"Invalid time range type!\");\n        }\n        final ApiRequestBuilder<FieldStatsResponse> builder = api.path(routePath, FieldStatsResponse.class)\n                .queryParam(\"field\", field)\n                .queryParam(\"query\", query)\n                .queryParams(timeRange.getQueryParams())\n                .timeout(apiTimeout(\"search_universal_stats\", KEITH, TimeUnit.SECONDS));\n        addFilterQueryParam(builder);\n        return builder.execute();\n    }","commit_id":"f9698d32cc91350a863d62f3b49a426c72790ad2","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"public DateHistogramResult dateHistogram(String interval) throws IOException, APIException {\n        PathMethod routePath;\n        switch (timeRange.getType()) {\n            case ABSOLUTE:\n                routePath = routes.AbsoluteSearchResource().histogramAbsolute();\n                break;\n            case KEYWORD:\n                routePath = routes.KeywordSearchResource().histogramKeyword();\n                break;\n            case RELATIVE:\n                routePath = routes.RelativeSearchResource().histogramRelative();\n                break;\n            default:\n                throw new RuntimeException(\"Invalid time range type!\");\n        }\n        DateHistogramResponse response = api.path(routePath, DateHistogramResponse.class)\n                .queryParam(\"interval\", interval)\n                .queryParam(\"query\", query)\n                .queryParams(timeRange.getQueryParams())\n                .queryParam(\"filter\", (filter == null ? \"*\" : filter))\n                .timeout(apiTimeout(\"search_universal_histogram\", KEITH, TimeUnit.SECONDS))\n                .execute();\n        return new DateHistogramResult(\n                response.query,\n                response.time,\n                response.interval,\n                response.results,\n                response.getHistogramBoundaries(),\n                timeRange\n        );\n    }","id":8102,"modified_method":"public DateHistogramResult dateHistogram(String interval) throws IOException, APIException {\n        PathMethod routePath;\n        switch (timeRange.getType()) {\n            case ABSOLUTE:\n                routePath = routes.AbsoluteSearchResource().histogramAbsolute();\n                break;\n            case KEYWORD:\n                routePath = routes.KeywordSearchResource().histogramKeyword();\n                break;\n            case RELATIVE:\n                routePath = routes.RelativeSearchResource().histogramRelative();\n                break;\n            default:\n                throw new RuntimeException(\"Invalid time range type!\");\n        }\n        final ApiRequestBuilder<DateHistogramResponse> builder = api.path(routePath, DateHistogramResponse.class)\n                .queryParam(\"interval\", interval)\n                .queryParam(\"query\", query)\n                .queryParams(timeRange.getQueryParams())\n                .timeout(apiTimeout(\"search_universal_histogram\", KEITH, TimeUnit.SECONDS));\n        addFilterQueryParam(builder);\n        final DateHistogramResponse response = builder.execute();\n        return new DateHistogramResult(\n                response.query,\n                response.time,\n                response.interval,\n                response.results,\n                response.getHistogramBoundaries(),\n                timeRange\n        );\n    }","commit_id":"f9698d32cc91350a863d62f3b49a426c72790ad2","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"public FieldTermsResponse fieldTerms(String field) throws IOException, APIException {\n        PathMethod routePath;\n        switch (timeRange.getType()) {\n            case ABSOLUTE:\n                routePath = routes.AbsoluteSearchResource().termsAbsolute();\n                break;\n            case KEYWORD:\n                routePath = routes.KeywordSearchResource().termsKeyword();\n                break;\n            case RELATIVE:\n                routePath = routes.RelativeSearchResource().termsRelative();\n                break;\n            default:\n                throw new RuntimeException(\"Invalid time range type!\");\n        }\n        return api.path(routePath, FieldTermsResponse.class)\n                .queryParam(\"field\", field)\n                .queryParam(\"query\", query)\n                .queryParams(timeRange.getQueryParams())\n                .queryParam(\"filter\", (filter == null ? \"*\" : filter))\n                .timeout(apiTimeout(\"search_universal_terms\", KEITH, TimeUnit.SECONDS))\n                .execute();\n    }","id":8103,"modified_method":"public FieldTermsResponse fieldTerms(String field) throws IOException, APIException {\n        PathMethod routePath;\n        switch (timeRange.getType()) {\n            case ABSOLUTE:\n                routePath = routes.AbsoluteSearchResource().termsAbsolute();\n                break;\n            case KEYWORD:\n                routePath = routes.KeywordSearchResource().termsKeyword();\n                break;\n            case RELATIVE:\n                routePath = routes.RelativeSearchResource().termsRelative();\n                break;\n            default:\n                throw new RuntimeException(\"Invalid time range type!\");\n        }\n        final ApiRequestBuilder<FieldTermsResponse> builder = api.path(routePath, FieldTermsResponse.class)\n                .queryParam(\"field\", field)\n                .queryParam(\"query\", query)\n                .queryParams(timeRange.getQueryParams())\n                .timeout(apiTimeout(\"search_universal_terms\", KEITH, TimeUnit.SECONDS));\n        addFilterQueryParam(builder);\n        return builder.execute();\n    }","commit_id":"f9698d32cc91350a863d62f3b49a426c72790ad2","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"private <T> ApiRequestBuilder<T> getSearchRequestBuilder(Class<T> clazz, int pageSize, Set<String> selectedFields) {\n        PathMethod pathMethod;\n        switch (timeRange.getType()) {\n            case ABSOLUTE:\n                pathMethod = routes.AbsoluteSearchResource().searchAbsolute();\n                break;\n            case KEYWORD:\n                pathMethod = routes.KeywordSearchResource().searchKeyword();\n                break;\n            case RELATIVE:\n                pathMethod = routes.RelativeSearchResource().searchRelative();\n                break;\n            default:\n                throw new RuntimeException(\"Invalid time range type!\");\n        }\n        final ApiRequestBuilder<T> builder =  api.path(pathMethod, clazz)\n                .queryParams(timeRange.getQueryParams())\n                .queryParam(\"query\", query)\n                .queryParam(\"limit\", pageSize)\n                .queryParam(\"offset\", page * pageSize)\n                .queryParam(\"filter\", (filter == null ? \"*\" : filter))\n                .queryParam(\"sort\", order.toApiParam());\n        if (selectedFields != null && !selectedFields.isEmpty()) {\n            builder.queryParam(\"fields\", Joiner.on(',').skipNulls().join(selectedFields));\n        }\n        return builder;\n    }","id":8104,"modified_method":"private <T> ApiRequestBuilder<T> getSearchRequestBuilder(Class<T> clazz, int pageSize, Set<String> selectedFields) {\n        PathMethod pathMethod;\n        switch (timeRange.getType()) {\n            case ABSOLUTE:\n                pathMethod = routes.AbsoluteSearchResource().searchAbsolute();\n                break;\n            case KEYWORD:\n                pathMethod = routes.KeywordSearchResource().searchKeyword();\n                break;\n            case RELATIVE:\n                pathMethod = routes.RelativeSearchResource().searchRelative();\n                break;\n            default:\n                throw new RuntimeException(\"Invalid time range type!\");\n        }\n        final ApiRequestBuilder<T> builder =  api.path(pathMethod, clazz)\n                .queryParams(timeRange.getQueryParams())\n                .queryParam(\"query\", query)\n                .queryParam(\"limit\", pageSize)\n                .queryParam(\"offset\", page * pageSize)\n                .queryParam(\"sort\", order.toApiParam());\n        addFilterQueryParam(builder);\n        if (selectedFields != null && !selectedFields.isEmpty()) {\n            builder.queryParam(\"fields\", Joiner.on(',').skipNulls().join(selectedFields));\n        }\n        return builder;\n    }","commit_id":"f9698d32cc91350a863d62f3b49a426c72790ad2","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"public FieldHistogramResponse fieldHistogram(String field, String interval, boolean isCardinality) throws IOException, APIException {\n        PathMethod routePath;\n        switch (timeRange.getType()) {\n            case ABSOLUTE:\n                routePath = routes.AbsoluteSearchResource().fieldHistogramAbsolute();\n                break;\n            case KEYWORD:\n                routePath = routes.KeywordSearchResource().fieldHistogramKeyword();\n                break;\n            case RELATIVE:\n                routePath = routes.RelativeSearchResource().fieldHistogramRelative();\n                break;\n            default:\n                throw new RuntimeException(\"Invalid time range type!\");\n        }\n        return api.path(routePath, FieldHistogramResponse.class)\n                .queryParam(\"field\", field)\n                .queryParam(\"interval\", interval)\n                .queryParam(\"query\", query)\n                .queryParams(timeRange.getQueryParams())\n                .queryParam(\"filter\", (filter == null ? \"*\" : filter))\n                .queryParam(\"cardinality\", Boolean.toString(isCardinality))\n                .timeout(apiTimeout(\"search_universal_fieldhistogram\", KEITH, TimeUnit.SECONDS))\n                .execute();\n    }","id":8105,"modified_method":"public FieldHistogramResponse fieldHistogram(String field, String interval, boolean isCardinality) throws IOException, APIException {\n        PathMethod routePath;\n        switch (timeRange.getType()) {\n            case ABSOLUTE:\n                routePath = routes.AbsoluteSearchResource().fieldHistogramAbsolute();\n                break;\n            case KEYWORD:\n                routePath = routes.KeywordSearchResource().fieldHistogramKeyword();\n                break;\n            case RELATIVE:\n                routePath = routes.RelativeSearchResource().fieldHistogramRelative();\n                break;\n            default:\n                throw new RuntimeException(\"Invalid time range type!\");\n        }\n        final ApiRequestBuilder<FieldHistogramResponse> builder = api.path(routePath, FieldHistogramResponse.class)\n                .queryParam(\"field\", field)\n                .queryParam(\"interval\", interval)\n                .queryParam(\"query\", query)\n                .queryParams(timeRange.getQueryParams())\n                .queryParam(\"cardinality\", Boolean.toString(isCardinality))\n                .timeout(apiTimeout(\"search_universal_fieldhistogram\", KEITH, TimeUnit.SECONDS));\n        addFilterQueryParam(builder);\n        return builder.execute();\n    }","commit_id":"f9698d32cc91350a863d62f3b49a426c72790ad2","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String report_type = request.getParameter(\"type\");\n        if (report_type == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String r_index = request.getParameter(\"report\");\n        String domain = request.getParameter(\"domain\");\n        int report_index = 0;\n        if (r_index != null) {\n            report_index = Integer.parseInt(r_index);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String override_timespan = request.getParameter(\"timespan\");\n        String override_graphtype = request.getParameter(\"graphtype\");\n        if ((override_timespan == null) || (override_timespan.equals(\"null\"))) {\n            override_timespan = \"none\";\n        }\n        if ((override_graphtype == null) || (override_graphtype.equals(\"null\"))) {\n            override_graphtype = \"none\";\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(report_type)) {\n            report = getKscReportService().buildNodeReport(report_index);\n        } else if (\"domain\".equals(report_type)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(report_type)) {\n            ReportsList reports_list = KSC_PerformanceReportFactory.getConfiguration();\n            report = reports_list.getReport(report_index);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + report_type + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Define the possible graph options \n        PrefabGraph[] graph_options = new PrefabGraph[0];\n      \n        if (report.getGraphCount() > 0) {\n            Set<PrefabGraph> prefabGraphs = new HashSet<PrefabGraph>();\n            \n            for (int i = 0; i < report.getGraphCount(); i++) {\n                Graph graph = report.getGraph(i);\n                OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n                getResourceService().promoteGraphAttributesForResource(resource);\n                prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n            }\n            \n            graph_options = prefabGraphs.toArray(new PrefabGraph[prefabGraphs.size()]);\n\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n\n            /*\n            if (\"custom\".equals(report_type) && \"node\".equals(resource.getResourceType().getName())) {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"nodeSnmp\", \"interfaceSnmp\");\n            } else {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"interfaceSnmp\");\n            }\n            */\n      \n            // Get default graph type from first element of graph_options\n            if ((\"node\".equals(report_type) || \"domain\".equals(report_type))\n                    && \"none\".equals(override_graphtype)\n                    && graph_options.length > 0) {\n                override_graphtype = graph_options[0].getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \"\n                                + override_graphtype);\n                }\n            }\n\n            /*\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n            */\n        }\n        \n        ArrayList<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (int i = 0; i < report.getGraphCount(); i++) {\n            Graph current_graph = report.getGraph(i);\n            \n            OnmsResource resource = getKscReportService().getResourceFromGraph(current_graph);\n            getResourceService().promoteGraphAttributesForResource(resource);\n\n            String display_graphtype = null;\n            if (\"none\".equals(override_graphtype)) {\n                display_graphtype = current_graph.getGraphtype();\n            } else {\n                display_graphtype = override_graphtype;\n            }\n            \n            PrefabGraph display_graph = getResourceService().getPrefabGraph(display_graphtype);\n            \n            // gather start/stop time information\n            String display_timespan = null;\n            if (\"none\".equals(override_timespan)) {\n                display_timespan = current_graph.getTimespan();\n            } else {\n                display_timespan = override_timespan;\n            }\n            Calendar begin_time = Calendar.getInstance();\n            Calendar end_time = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(display_timespan, begin_time, end_time);\n            \n            KscResultSet resultSet = new KscResultSet(current_graph.getTitle(), begin_time.getTime(), end_time.getTime(), resource, display_graph);\n            resultSets.add(resultSet);\n        }\n\n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"reportType\", report_type);\n        if (report != null) {\n            modelAndView.addObject(\"report\", r_index);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (\"none\".equals(override_timespan) || !getKscReportService().getTimeSpans(true).containsKey(override_timespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", override_timespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graph_option : graph_options) {\n                graphTypes.put(graph_option.getName(), graph_option.getName());\n            }\n            \n            if (\"none\".equals(override_graphtype) || !graphTypes.containsKey(override_graphtype)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", override_graphtype);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE));\n        modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        \n        return modelAndView;\n    }","id":8106,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String report_type = request.getParameter(\"type\");\n        if (report_type == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String r_index = request.getParameter(\"report\");\n        String domain = request.getParameter(\"domain\");\n        int report_index = 0;\n        if (r_index != null) {\n            report_index = Integer.parseInt(r_index);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String override_timespan = request.getParameter(\"timespan\");\n        String override_graphtype = request.getParameter(\"graphtype\");\n        if ((override_timespan == null) || (override_timespan.equals(\"null\"))) {\n            override_timespan = \"none\";\n        }\n        if ((override_graphtype == null) || (override_graphtype.equals(\"null\"))) {\n            override_graphtype = \"none\";\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(report_type)) {\n            report = getKscReportService().buildNodeReport(report_index);\n        } else if (\"domain\".equals(report_type)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(report_type)) {\n            ReportsList reports_list = KSC_PerformanceReportFactory.getConfiguration();\n            report = reports_list.getReport(report_index);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + report_type + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Define the possible graph options \n        PrefabGraph[] graph_options = new PrefabGraph[0];\n      \n        if (report.getGraphCount() > 0) {\n            Set<PrefabGraph> prefabGraphs = new HashSet<PrefabGraph>();\n            \n            for (int i = 0; i < report.getGraphCount(); i++) {\n                Graph graph = report.getGraph(i);\n                OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n                prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n            }\n            \n            graph_options = prefabGraphs.toArray(new PrefabGraph[prefabGraphs.size()]);\n\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n\n            /*\n            if (\"custom\".equals(report_type) && \"node\".equals(resource.getResourceType().getName())) {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"nodeSnmp\", \"interfaceSnmp\");\n            } else {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"interfaceSnmp\");\n            }\n            */\n      \n            // Get default graph type from first element of graph_options\n            if ((\"node\".equals(report_type) || \"domain\".equals(report_type))\n                    && \"none\".equals(override_graphtype)\n                    && graph_options.length > 0) {\n                override_graphtype = graph_options[0].getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \"\n                                + override_graphtype);\n                }\n            }\n\n            /*\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n            */\n        }\n        \n        \n        Map<String, OnmsResource> resourcesBeingGraphed = new HashMap<String, OnmsResource>();\n        \n        ArrayList<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (int i = 0; i < report.getGraphCount(); i++) {\n            Graph current_graph = report.getGraph(i);\n            \n            OnmsResource resource = getKscReportService().getResourceFromGraph(current_graph);\n            resourcesBeingGraphed.put(resource.getId(), resource);\n\n            String display_graphtype = null;\n            if (\"none\".equals(override_graphtype)) {\n                display_graphtype = current_graph.getGraphtype();\n            } else {\n                display_graphtype = override_graphtype;\n            }\n            \n            PrefabGraph display_graph = getResourceService().getPrefabGraph(display_graphtype);\n            \n            // gather start/stop time information\n            String display_timespan = null;\n            if (\"none\".equals(override_timespan)) {\n                display_timespan = current_graph.getTimespan();\n            } else {\n                display_timespan = override_timespan;\n            }\n            Calendar begin_time = Calendar.getInstance();\n            Calendar end_time = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(display_timespan, begin_time, end_time);\n            \n            KscResultSet resultSet = new KscResultSet(current_graph.getTitle(), begin_time.getTime(), end_time.getTime(), resource, display_graph);\n            resultSets.add(resultSet);\n        }\n        \n        for(String resourceId : resourcesBeingGraphed.keySet()) {\n            OnmsResource resource = resourcesBeingGraphed.get(resourceId);\n            getResourceService().promoteGraphAttributesForResource(resource);\n        }\n\n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"reportType\", report_type);\n        if (report != null) {\n            modelAndView.addObject(\"report\", r_index);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (\"none\".equals(override_timespan) || !getKscReportService().getTimeSpans(true).containsKey(override_timespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", override_timespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graph_option : graph_options) {\n                graphTypes.put(graph_option.getName(), graph_option.getName());\n            }\n            \n            if (\"none\".equals(override_graphtype) || !graphTypes.containsKey(override_graphtype)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", override_graphtype);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE));\n        modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        \n        return modelAndView;\n    }","commit_id":"5424130db083fcd3e2d01535e7eab279ccd69a3b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String report_type = request.getParameter(\"type\");\n        if (report_type == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String r_index = request.getParameter(\"report\");\n        String domain = request.getParameter(\"domain\");\n        int report_index = 0;\n        if (r_index != null) {\n            report_index = Integer.parseInt(r_index);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String override_timespan = request.getParameter(\"timespan\");\n        String override_graphtype = request.getParameter(\"graphtype\");\n        if ((override_timespan == null) || (override_timespan.equals(\"null\"))) {\n            override_timespan = \"none\";\n        }\n        if ((override_graphtype == null) || (override_graphtype.equals(\"null\"))) {\n            override_graphtype = \"none\";\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(report_type)) {\n            report = getKscReportService().buildNodeReport(report_index);\n        } else if (\"domain\".equals(report_type)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(report_type)) {\n            ReportsList reports_list = KSC_PerformanceReportFactory.getConfiguration();\n            report = reports_list.getReport(report_index);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + report_type + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Define the possible graph options \n        PrefabGraph[] graph_options = new PrefabGraph[0];\n      \n        if (report.getGraphCount() > 0) {\n            Set<PrefabGraph> prefabGraphs = new HashSet<PrefabGraph>();\n            \n            for (int i = 0; i < report.getGraphCount(); i++) {\n                Graph graph = report.getGraph(i);\n                OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n                getResourceService().promoteGraphAttributesForResource(resource);\n                prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n            }\n            \n            graph_options = prefabGraphs.toArray(new PrefabGraph[prefabGraphs.size()]);\n\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n\n            /*\n            if (\"custom\".equals(report_type) && \"node\".equals(resource.getResourceType().getName())) {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"nodeSnmp\", \"interfaceSnmp\");\n            } else {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"interfaceSnmp\");\n            }\n            */\n      \n            // Get default graph type from first element of graph_options\n            if ((\"node\".equals(report_type) || \"domain\".equals(report_type))\n                    && \"none\".equals(override_graphtype)\n                    && graph_options.length > 0) {\n                override_graphtype = graph_options[0].getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \"\n                                + override_graphtype);\n                }\n            }\n\n            /*\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n            */\n        }\n        \n        ArrayList<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (int i = 0; i < report.getGraphCount(); i++) {\n            Graph current_graph = report.getGraph(i);\n            \n            OnmsResource resource = getKscReportService().getResourceFromGraph(current_graph);\n            getResourceService().promoteGraphAttributesForResource(resource);\n\n            String display_graphtype = null;\n            if (\"none\".equals(override_graphtype)) {\n                display_graphtype = current_graph.getGraphtype();\n            } else {\n                display_graphtype = override_graphtype;\n            }\n            \n            PrefabGraph display_graph = getResourceService().getPrefabGraph(display_graphtype);\n            \n            // gather start/stop time information\n            String display_timespan = null;\n            if (\"none\".equals(override_timespan)) {\n                display_timespan = current_graph.getTimespan();\n            } else {\n                display_timespan = override_timespan;\n            }\n            Calendar begin_time = Calendar.getInstance();\n            Calendar end_time = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(display_timespan, begin_time, end_time);\n            \n            KscResultSet resultSet = new KscResultSet(current_graph.getTitle(), begin_time.getTime(), end_time.getTime(), resource, display_graph);\n            resultSets.add(resultSet);\n        }\n\n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"reportType\", report_type);\n        if (report != null) {\n            modelAndView.addObject(\"report\", r_index);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (\"none\".equals(override_timespan) || !getKscReportService().getTimeSpans(true).containsKey(override_timespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", override_timespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graph_option : graph_options) {\n                graphTypes.put(graph_option.getName(), graph_option.getName());\n            }\n            \n            if (\"none\".equals(override_graphtype) || !graphTypes.containsKey(override_graphtype)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", override_graphtype);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE));\n        modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        \n        return modelAndView;\n    }","id":8107,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String report_type = request.getParameter(\"type\");\n        if (report_type == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String r_index = request.getParameter(\"report\");\n        String domain = request.getParameter(\"domain\");\n        int report_index = 0;\n        if (r_index != null) {\n            report_index = Integer.parseInt(r_index);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String override_timespan = request.getParameter(\"timespan\");\n        String override_graphtype = request.getParameter(\"graphtype\");\n        if ((override_timespan == null) || (override_timespan.equals(\"null\"))) {\n            override_timespan = \"none\";\n        }\n        if ((override_graphtype == null) || (override_graphtype.equals(\"null\"))) {\n            override_graphtype = \"none\";\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(report_type)) {\n            report = getKscReportService().buildNodeReport(report_index);\n        } else if (\"domain\".equals(report_type)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(report_type)) {\n            ReportsList reports_list = KSC_PerformanceReportFactory.getConfiguration();\n            report = reports_list.getReport(report_index);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + report_type + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Define the possible graph options \n        PrefabGraph[] graph_options = new PrefabGraph[0];\n      \n        if (report.getGraphCount() > 0) {\n            Set<PrefabGraph> prefabGraphs = new HashSet<PrefabGraph>();\n            \n            for (int i = 0; i < report.getGraphCount(); i++) {\n                Graph graph = report.getGraph(i);\n                OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n                prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n            }\n            \n            graph_options = prefabGraphs.toArray(new PrefabGraph[prefabGraphs.size()]);\n\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n\n            /*\n            if (\"custom\".equals(report_type) && \"node\".equals(resource.getResourceType().getName())) {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"nodeSnmp\", \"interfaceSnmp\");\n            } else {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"interfaceSnmp\");\n            }\n            */\n      \n            // Get default graph type from first element of graph_options\n            if ((\"node\".equals(report_type) || \"domain\".equals(report_type))\n                    && \"none\".equals(override_graphtype)\n                    && graph_options.length > 0) {\n                override_graphtype = graph_options[0].getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \"\n                                + override_graphtype);\n                }\n            }\n\n            /*\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n            */\n        }\n        \n        \n        Map<String, OnmsResource> resourcesBeingGraphed = new HashMap<String, OnmsResource>();\n        \n        ArrayList<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (int i = 0; i < report.getGraphCount(); i++) {\n            Graph current_graph = report.getGraph(i);\n            \n            OnmsResource resource = getKscReportService().getResourceFromGraph(current_graph);\n            resourcesBeingGraphed.put(resource.getId(), resource);\n\n            String display_graphtype = null;\n            if (\"none\".equals(override_graphtype)) {\n                display_graphtype = current_graph.getGraphtype();\n            } else {\n                display_graphtype = override_graphtype;\n            }\n            \n            PrefabGraph display_graph = getResourceService().getPrefabGraph(display_graphtype);\n            \n            // gather start/stop time information\n            String display_timespan = null;\n            if (\"none\".equals(override_timespan)) {\n                display_timespan = current_graph.getTimespan();\n            } else {\n                display_timespan = override_timespan;\n            }\n            Calendar begin_time = Calendar.getInstance();\n            Calendar end_time = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(display_timespan, begin_time, end_time);\n            \n            KscResultSet resultSet = new KscResultSet(current_graph.getTitle(), begin_time.getTime(), end_time.getTime(), resource, display_graph);\n            resultSets.add(resultSet);\n        }\n        \n        for(String resourceId : resourcesBeingGraphed.keySet()) {\n            OnmsResource resource = resourcesBeingGraphed.get(resourceId);\n            getResourceService().promoteGraphAttributesForResource(resource);\n        }\n\n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"reportType\", report_type);\n        if (report != null) {\n            modelAndView.addObject(\"report\", r_index);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (\"none\".equals(override_timespan) || !getKscReportService().getTimeSpans(true).containsKey(override_timespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", override_timespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graph_option : graph_options) {\n                graphTypes.put(graph_option.getName(), graph_option.getName());\n            }\n            \n            if (\"none\".equals(override_graphtype) || !graphTypes.containsKey(override_graphtype)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", override_graphtype);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE));\n        modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        \n        return modelAndView;\n    }","commit_id":"3186f575f9b85869f0a7fb022b8f44954301c0e7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String report_type = request.getParameter(\"type\");\n        if (report_type == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String r_index = request.getParameter(\"report\");\n        String domain = request.getParameter(\"domain\");\n        int report_index = 0;\n        if (r_index != null) {\n            report_index = Integer.parseInt(r_index);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String override_timespan = request.getParameter(\"timespan\");\n        String override_graphtype = request.getParameter(\"graphtype\");\n        if ((override_timespan == null) || (override_timespan.equals(\"null\"))) {\n            override_timespan = \"none\";\n        }\n        if ((override_graphtype == null) || (override_graphtype.equals(\"null\"))) {\n            override_graphtype = \"none\";\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(report_type)) {\n            report = getKscReportService().buildNodeReport(report_index);\n        } else if (\"domain\".equals(report_type)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(report_type)) {\n            ReportsList reports_list = KSC_PerformanceReportFactory.getConfiguration();\n            report = reports_list.getReport(report_index);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + report_type + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Define the possible graph options \n        PrefabGraph[] graph_options = new PrefabGraph[0];\n      \n        if (report.getGraphCount() > 0) {\n            Set<PrefabGraph> prefabGraphs = new HashSet<PrefabGraph>();\n            \n            for (int i = 0; i < report.getGraphCount(); i++) {\n                Graph graph = report.getGraph(i);\n                OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n                getResourceService().promoteGraphAttributesForResource(resource);\n                prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n            }\n            \n            graph_options = prefabGraphs.toArray(new PrefabGraph[prefabGraphs.size()]);\n\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n\n            /*\n            if (\"custom\".equals(report_type) && \"node\".equals(resource.getResourceType().getName())) {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"nodeSnmp\", \"interfaceSnmp\");\n            } else {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"interfaceSnmp\");\n            }\n            */\n      \n            // Get default graph type from first element of graph_options\n            if ((\"node\".equals(report_type) || \"domain\".equals(report_type))\n                    && \"none\".equals(override_graphtype)\n                    && graph_options.length > 0) {\n                override_graphtype = graph_options[0].getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \"\n                                + override_graphtype);\n                }\n            }\n\n            /*\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n            */\n        }\n        \n        ArrayList<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (int i = 0; i < report.getGraphCount(); i++) {\n            Graph current_graph = report.getGraph(i);\n            \n            OnmsResource resource = getKscReportService().getResourceFromGraph(current_graph);\n            getResourceService().promoteGraphAttributesForResource(resource);\n\n            String display_graphtype = null;\n            if (\"none\".equals(override_graphtype)) {\n                display_graphtype = current_graph.getGraphtype();\n            } else {\n                display_graphtype = override_graphtype;\n            }\n            \n            PrefabGraph display_graph = getResourceService().getPrefabGraph(display_graphtype);\n            \n            // gather start/stop time information\n            String display_timespan = null;\n            if (\"none\".equals(override_timespan)) {\n                display_timespan = current_graph.getTimespan();\n            } else {\n                display_timespan = override_timespan;\n            }\n            Calendar begin_time = Calendar.getInstance();\n            Calendar end_time = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(display_timespan, begin_time, end_time);\n            \n            KscResultSet resultSet = new KscResultSet(current_graph.getTitle(), begin_time.getTime(), end_time.getTime(), resource, display_graph);\n            resultSets.add(resultSet);\n        }\n\n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"reportType\", report_type);\n        if (report != null) {\n            modelAndView.addObject(\"report\", r_index);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (\"none\".equals(override_timespan) || !getKscReportService().getTimeSpans(true).containsKey(override_timespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", override_timespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graph_option : graph_options) {\n                graphTypes.put(graph_option.getName(), graph_option.getName());\n            }\n            \n            if (\"none\".equals(override_graphtype) || !graphTypes.containsKey(override_graphtype)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", override_graphtype);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE));\n        modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        \n        return modelAndView;\n    }","id":8108,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String report_type = request.getParameter(\"type\");\n        if (report_type == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String r_index = request.getParameter(\"report\");\n        String domain = request.getParameter(\"domain\");\n        int report_index = 0;\n        if (r_index != null) {\n            report_index = Integer.parseInt(r_index);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String override_timespan = request.getParameter(\"timespan\");\n        String override_graphtype = request.getParameter(\"graphtype\");\n        if ((override_timespan == null) || (override_timespan.equals(\"null\"))) {\n            override_timespan = \"none\";\n        }\n        if ((override_graphtype == null) || (override_graphtype.equals(\"null\"))) {\n            override_graphtype = \"none\";\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(report_type)) {\n            report = getKscReportService().buildNodeReport(report_index);\n        } else if (\"domain\".equals(report_type)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(report_type)) {\n            ReportsList reports_list = KSC_PerformanceReportFactory.getConfiguration();\n            report = reports_list.getReport(report_index);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + report_type + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Define the possible graph options \n        PrefabGraph[] graph_options = new PrefabGraph[0];\n      \n        if (report.getGraphCount() > 0) {\n            Set<PrefabGraph> prefabGraphs = new HashSet<PrefabGraph>();\n            \n            for (int i = 0; i < report.getGraphCount(); i++) {\n                Graph graph = report.getGraph(i);\n                OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n                prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n            }\n            \n            graph_options = prefabGraphs.toArray(new PrefabGraph[prefabGraphs.size()]);\n\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n\n            /*\n            if (\"custom\".equals(report_type) && \"node\".equals(resource.getResourceType().getName())) {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"nodeSnmp\", \"interfaceSnmp\");\n            } else {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"interfaceSnmp\");\n            }\n            */\n      \n            // Get default graph type from first element of graph_options\n            if ((\"node\".equals(report_type) || \"domain\".equals(report_type))\n                    && \"none\".equals(override_graphtype)\n                    && graph_options.length > 0) {\n                override_graphtype = graph_options[0].getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \"\n                                + override_graphtype);\n                }\n            }\n\n            /*\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n            */\n        }\n        \n        \n        Map<String, OnmsResource> resourcesBeingGraphed = new HashMap<String, OnmsResource>();\n        \n        ArrayList<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (int i = 0; i < report.getGraphCount(); i++) {\n            Graph current_graph = report.getGraph(i);\n            \n            OnmsResource resource = getKscReportService().getResourceFromGraph(current_graph);\n            resourcesBeingGraphed.put(resource.getId(), resource);\n\n            String display_graphtype = null;\n            if (\"none\".equals(override_graphtype)) {\n                display_graphtype = current_graph.getGraphtype();\n            } else {\n                display_graphtype = override_graphtype;\n            }\n            \n            PrefabGraph display_graph = getResourceService().getPrefabGraph(display_graphtype);\n            \n            // gather start/stop time information\n            String display_timespan = null;\n            if (\"none\".equals(override_timespan)) {\n                display_timespan = current_graph.getTimespan();\n            } else {\n                display_timespan = override_timespan;\n            }\n            Calendar begin_time = Calendar.getInstance();\n            Calendar end_time = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(display_timespan, begin_time, end_time);\n            \n            KscResultSet resultSet = new KscResultSet(current_graph.getTitle(), begin_time.getTime(), end_time.getTime(), resource, display_graph);\n            resultSets.add(resultSet);\n        }\n        \n        for(String resourceId : resourcesBeingGraphed.keySet()) {\n            OnmsResource resource = resourcesBeingGraphed.get(resourceId);\n            getResourceService().promoteGraphAttributesForResource(resource);\n        }\n\n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"reportType\", report_type);\n        if (report != null) {\n            modelAndView.addObject(\"report\", r_index);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (\"none\".equals(override_timespan) || !getKscReportService().getTimeSpans(true).containsKey(override_timespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", override_timespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graph_option : graph_options) {\n                graphTypes.put(graph_option.getName(), graph_option.getName());\n            }\n            \n            if (\"none\".equals(override_graphtype) || !graphTypes.containsKey(override_graphtype)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", override_graphtype);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE));\n        modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        \n        return modelAndView;\n    }","commit_id":"20dede1db721840318249acc6930780ff5f6d051","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@CheckForNull\n  public TimeUnitValue days() {\n    return days;\n  }","id":8109,"modified_method":"public long days() {\n    return days;\n  }","commit_id":"69363f7a5f50722bc41c0216c020a0fd38c7d5e1","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@CheckForNull\n  public TimeUnitValue hours() {\n    return hours;\n  }","id":8110,"modified_method":"public long hours() {\n    return hours;\n  }","commit_id":"69363f7a5f50722bc41c0216c020a0fd38c7d5e1","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private RemediationCostTimeUnit(long input, int hoursInDay) {\n    int oneWorkingDay = hoursInDay * ONE_HOUR_IN_MINUTE;\n    if (input >= oneWorkingDay) {\n      long nbDays = input / oneWorkingDay;\n      this.days = new TimeUnitValue(nbDays, TimeUnit.DAYS);\n      input = input - (nbDays * oneWorkingDay);\n    } else {\n      this.days = new TimeUnitValue(0L, TimeUnit.DAYS);\n    }\n\n    if (input >= ONE_HOUR_IN_MINUTE) {\n      long nbHours = input / ONE_HOUR_IN_MINUTE;\n      this.hours = new TimeUnitValue(nbHours, TimeUnit.HOURS);\n      input = input - (nbHours * ONE_HOUR_IN_MINUTE);\n    } else {\n      this.hours = new TimeUnitValue(0L, TimeUnit.HOURS);\n    }\n\n    this.minutes = new TimeUnitValue(input, TimeUnit.MINUTES);\n  }","id":8111,"modified_method":"private RemediationCostTimeUnit(long input, int hoursInDay) {\n    int oneWorkingDay = hoursInDay * ONE_HOUR_IN_MINUTE;\n    if (input >= oneWorkingDay) {\n      long nbDays = input / oneWorkingDay;\n      this.days = nbDays;\n      input = input - (nbDays * oneWorkingDay);\n    }\n\n    if (input >= ONE_HOUR_IN_MINUTE) {\n      long nbHours = input / ONE_HOUR_IN_MINUTE;\n      this.hours = nbHours;\n      input = input - (nbHours * ONE_HOUR_IN_MINUTE);\n    }\n\n    this.minutes = input;\n  }","commit_id":"69363f7a5f50722bc41c0216c020a0fd38c7d5e1","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@CheckForNull\n  public TimeUnitValue minutes() {\n    return minutes;\n  }","id":8112,"modified_method":"public long minutes() {\n    return minutes;\n  }","commit_id":"69363f7a5f50722bc41c0216c020a0fd38c7d5e1","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void checkTimes(RemediationCostTimeUnit remediationCostTimeUnit, Long expectedMinutes, Long expectedHours, Long expectedDays ) {\n    if (expectedMinutes != null) {\n      checkTime(remediationCostTimeUnit.minutes(), expectedMinutes, TimeUnit.MINUTES);\n    } else {\n      assertThat(remediationCostTimeUnit.minutes().value()).isEqualTo(0L);\n    }\n    if (expectedHours != null) {\n      checkTime(remediationCostTimeUnit.hours(), expectedHours, TimeUnit.HOURS);\n    } else {\n      assertThat(remediationCostTimeUnit.hours().value()).isEqualTo(0L);\n    }\n    if (expectedDays != null) {\n      checkTime(remediationCostTimeUnit.days(), expectedDays, TimeUnit.DAYS);\n    } else {\n      assertThat(remediationCostTimeUnit.days().value()).isEqualTo(0L);\n    }\n  }","id":8113,"modified_method":"private void checkTimes(RemediationCostTimeUnit remediationCostTimeUnit, Long expectedMinutes, Long expectedHours, Long expectedDays ) {\n    assertThat(remediationCostTimeUnit.minutes()).isEqualTo(expectedMinutes);\n    assertThat(remediationCostTimeUnit.hours()).isEqualTo(expectedHours);\n    assertThat(remediationCostTimeUnit.days()).isEqualTo(expectedDays);\n  }","commit_id":"69363f7a5f50722bc41c0216c020a0fd38c7d5e1","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public ShortcutInfoPanel()\n   {\n      initWidget(uiBinder.createAndBindUi(this));\n      SafeHtmlBuilder sb = new SafeHtmlBuilder();\n      List<ShortcutInfo> shortcuts = \n            ShortcutManager.INSTANCE.getActiveShortcutInfo();\n      String[] groupNames = { \"IDE\", \"Source Editor\", \"Build/Execute\", \"Other\" };\n      sb.appendHtmlConstant(\"<table><tr>\");\n      for (String groupName: groupNames)\n      {\n         sb.appendHtmlConstant(\"<td><h2>\");\n         sb.appendEscaped(groupName);\n         sb.appendHtmlConstant(\"<\/h2><table>\");\n         for (int i = 0; i < shortcuts.size(); i++)\n         {\n            ShortcutInfo info = shortcuts.get(i);\n            if (info.getDescription() == null ||\n                info.getShortcuts().size() == 0 || \n                !info.getGroupName().equals(groupName))\n            {\n               continue;\n            }\n            sb.appendHtmlConstant(\"<tr><td><strong>\");\n            sb.appendHtmlConstant(\n                  StringUtil.joinStrings(info.getShortcuts(), \", \"));\n            sb.appendHtmlConstant(\"<\/strong><\/td><td>\");\n            sb.appendEscaped(info.getDescription());\n            sb.appendHtmlConstant(\"<\/td><\/tr>\");\n         }\n         sb.appendHtmlConstant(\"<\/table><\/td>\");\n      }\n      sb.appendHtmlConstant(\"<\/td><\/tr><\/table>\");\n      HTMLPanel panel = new HTMLPanel(sb.toSafeHtml());\n      shortcutPanel.add(panel);\n   }","id":8114,"modified_method":"public ShortcutInfoPanel()\n   {\n      initWidget(uiBinder.createAndBindUi(this));\n      SafeHtmlBuilder sb = new SafeHtmlBuilder();\n      List<ShortcutInfo> shortcuts = \n            ShortcutManager.INSTANCE.getActiveShortcutInfo();\n      String[][] groupNames = { \n            new String[] { \"Tabs/Panes\", \"Files\" },\n            new String[] { \"Source Navigation\", \"Source Editor\" },\n            new String[] { \"Execute\", \"Debug\", \"Build\" }, \n            new String[] { \"Source Control\", \"Other\" }\n      };\n      sb.appendHtmlConstant(\"<table><tr>\");\n      for (String[] colGroupNames: groupNames)\n      {\n         sb.appendHtmlConstant(\"<td>\");\n         for (String colGroupName: colGroupNames)\n         {\n            sb.appendHtmlConstant(\"<h2>\");\n            sb.appendEscaped(colGroupName);\n            sb.appendHtmlConstant(\"<\/h2><table>\");\n            for (int i = 0; i < shortcuts.size(); i++)\n            {\n               ShortcutInfo info = shortcuts.get(i);\n               if (info.getDescription() == null ||\n                   info.getShortcuts().size() == 0 || \n                   !info.getGroupName().equals(colGroupName))\n               {\n                  continue;\n               }\n               sb.appendHtmlConstant(\"<tr><td><strong>\");\n               sb.appendHtmlConstant(\n                     StringUtil.joinStrings(info.getShortcuts(), \", \"));\n               sb.appendHtmlConstant(\"<\/strong><\/td><td>\");\n               sb.appendEscaped(info.getDescription());\n               sb.appendHtmlConstant(\"<\/td><\/tr>\");\n            }\n            sb.appendHtmlConstant(\"<\/table>\");\n         }\n         sb.appendHtmlConstant(\"<\/td>\");\n      }\n      sb.appendHtmlConstant(\"<\/td><\/tr><\/table>\");\n      HTMLPanel panel = new HTMLPanel(sb.toSafeHtml());\n      shortcutPanel.add(panel);\n   }","commit_id":"b99be1852cbf227a49bf68047943b8bdabddce1a","url":"https://github.com/rstudio/rstudio"},{"original_method":"public ShortcutInfo (KeyboardShortcut shortcut, AppCommand command)\n   {\n      shortcut_ = shortcut.toString(true);\n      description_ = command.getMenuLabel(false);\n      groupName_ = shortcut.getGroupName();\n   }","id":8115,"modified_method":"public ShortcutInfo (KeyboardShortcut shortcut, AppCommand command)\n   {\n      shortcuts_ = new ArrayList<String>(); \n      description_ = command.getMenuLabel(false);\n      groupName_ = shortcut.getGroupName();\n      isActive_ = command.isEnabled() && command.isVisible();\n      addShortcut(shortcut);\n   }","commit_id":"de255caa5a51f5562f5b3b8964a60eb2ae797e18","url":"https://github.com/rstudio/rstudio"},{"original_method":"public String getShortcut()\n   {\n      return shortcut_;\n   }","id":8116,"modified_method":"public List<String> getShortcuts()\n   {\n      return shortcuts_;\n   }","commit_id":"de255caa5a51f5562f5b3b8964a60eb2ae797e18","url":"https://github.com/rstudio/rstudio"},{"original_method":"public ShortcutInfoPanel()\n   {\n      initWidget(uiBinder.createAndBindUi(this));\n      SafeHtmlBuilder sb = new SafeHtmlBuilder();\n      List<ShortcutInfo> shortcuts = \n            ShortcutManager.INSTANCE.getActiveShortcutInfo();\n      sb.appendHtmlConstant(\"<table><tr><td>\");\n      for (int i = 0; i < shortcuts.size(); i++)\n      {\n         ShortcutInfo info = shortcuts.get(i);\n         if (info.getDescription() == null ||\n             info.getShortcut() == null)\n         {\n            continue;\n         }\n         sb.appendHtmlConstant(\"<strong>\");\n         sb.appendHtmlConstant(info.getShortcut());\n         sb.appendHtmlConstant(\"<\/strong>: \");\n         sb.appendEscaped(info.getGroupName() + \" - \" + info.getDescription());\n         sb.appendHtmlConstant(\"<\/br>\");\n         if ((i + 1) % Math.floor(shortcuts.size() / 3) == 0)\n            sb.appendHtmlConstant(\"<\/td><td>\");\n      }\n      sb.appendHtmlConstant(\"<\/td><\/tr><\/table>\");\n      HTMLPanel panel = new HTMLPanel(sb.toSafeHtml());\n      shortcutPanel.add(panel);\n   }","id":8117,"modified_method":"public ShortcutInfoPanel()\n   {\n      initWidget(uiBinder.createAndBindUi(this));\n      SafeHtmlBuilder sb = new SafeHtmlBuilder();\n      List<ShortcutInfo> shortcuts = \n            ShortcutManager.INSTANCE.getActiveShortcutInfo();\n      String[] groupNames = { \"IDE\", \"Source Editor\", \"Build/Execute\", \"Other\" };\n      sb.appendHtmlConstant(\"<table><tr>\");\n      for (String groupName: groupNames)\n      {\n         sb.appendHtmlConstant(\"<td><h2>\");\n         sb.appendEscaped(groupName);\n         sb.appendHtmlConstant(\"<\/h2><table>\");\n         for (int i = 0; i < shortcuts.size(); i++)\n         {\n            ShortcutInfo info = shortcuts.get(i);\n            if (info.getDescription() == null ||\n                info.getShortcuts().size() == 0 || \n                !info.getGroupName().equals(groupName))\n            {\n               continue;\n            }\n            sb.appendHtmlConstant(\"<tr><td><strong>\");\n            sb.appendHtmlConstant(\n                  StringUtil.joinStrings(info.getShortcuts(), \", \"));\n            sb.appendHtmlConstant(\"<\/strong><\/td><td>\");\n            sb.appendEscaped(info.getDescription());\n            sb.appendHtmlConstant(\"<\/td><\/tr>\");\n         }\n         sb.appendHtmlConstant(\"<\/table><\/td>\");\n      }\n      sb.appendHtmlConstant(\"<\/td><\/tr><\/table>\");\n      HTMLPanel panel = new HTMLPanel(sb.toSafeHtml());\n      shortcutPanel.add(panel);\n   }","commit_id":"de255caa5a51f5562f5b3b8964a60eb2ae797e18","url":"https://github.com/rstudio/rstudio"},{"original_method":"public List<ShortcutInfo> getActiveShortcutInfo()\n   {\n      List<ShortcutInfo> info = new ArrayList<ShortcutInfo>();\n      Set<KeyboardShortcut> shortcuts = commands_.keySet();\n      for (KeyboardShortcut shortcut: shortcuts)\n      {\n         AppCommand command = commands_.get(shortcut);\n         if (command.isEnabled() && \n             command.isVisible())\n         {\n            info.add(new ShortcutInfo(shortcut, command));\n         }\n      }\n      return info;\n   }","id":8118,"modified_method":"public List<ShortcutInfo> getActiveShortcutInfo()\n   {\n      List<ShortcutInfo> info = new ArrayList<ShortcutInfo>();\n      HashMap<Command, ShortcutInfo> infoMap = \n            new HashMap<Command, ShortcutInfo>();\n      Set<KeyboardShortcut> shortcuts = commands_.keySet();\n      for (KeyboardShortcut shortcut: shortcuts)\n      {\n         AppCommand command = commands_.get(shortcut);\n         if (infoMap.containsKey(command))\n         {\n            infoMap.get(command).addShortcut(shortcut);\n         }\n         else\n         {\n            ShortcutInfo shortcutInfo = new ShortcutInfo(shortcut, command);\n            info.add(shortcutInfo);\n            infoMap.put(command, shortcutInfo);\n         }\n      }\n      return info;\n   }","commit_id":"de255caa5a51f5562f5b3b8964a60eb2ae797e18","url":"https://github.com/rstudio/rstudio"},{"original_method":"@Override\n\tpublic void backup(Document document, SAXSerializer serializer) throws SAXException {\n\t    if (document == null)\n\t        return;\n\t    \n//\t\tSystem.out.println(\"backup document \"+document.getURI());\n\t\tbackup(md.getMetas(document), serializer);\n\t}","id":8119,"modified_method":"@Override\n\tpublic void backup(Document document, SAXSerializer serializer) throws SAXException {\n\t    if (document == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tfinal Metas ms = md.getMetas(document);\n\t\tif(ms == null) {\n\t\t\tLOG.warn(\"No metadata found to backup for document: \"  + ((DocumentImpl)document).getURI());\n\t\t\treturn;\n\t\t}\n\n//\t\tSystem.out.println(\"backup document \"+document.getURI());\n\t\tbackup(ms, serializer);\n\t}","commit_id":"a095a268a584ae7f10b3cac1bb8d007a10a38455","url":"https://github.com/eXist-db/exist"},{"original_method":"@Override\n\tpublic void backup(Document document, AttributesImpl attrs) {\n\t    if (document == null)\n\t        return;\n\t    \n//\t\tSystem.out.println(\"backup document \"+document.getURI());\n\t\tbackup(md.getMetas(document), attrs);\n\t}","id":8120,"modified_method":"@Override\n\tpublic void backup(Document document, AttributesImpl attrs) {\n\t    if (document == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tfinal Metas ms = md.getMetas(document);\n\t\tif(ms == null) {\n\t\t\tLOG.warn(\"No metadata found to backup for document: \"  + ((DocumentImpl)document).getURI());\n\t\t\treturn;\n\t\t}\n\n//\t\tSystem.out.println(\"backup document \"+document.getURI());\n\t\tbackup(ms, attrs);\n\t}","commit_id":"a095a268a584ae7f10b3cac1bb8d007a10a38455","url":"https://github.com/eXist-db/exist"},{"original_method":"@Override\n\tpublic void backup(Collection collection, SAXSerializer serializer) throws SAXException {\n\t    if (collection == null)\n\t        return;\n\t    \n//\t\tSystem.out.println(\"backup collection \"+colection.getURI());\n\t\tbackup(md.getMetas(collection.getURI()), serializer);\n\t}","id":8121,"modified_method":"@Override\n\tpublic void backup(Collection collection, SAXSerializer serializer) throws SAXException {\n\t    if (collection == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tfinal Metas ms = md.getMetas(collection.getURI());\n\t\tif(ms == null) {\n\t\t\tLOG.warn(\"No metadata found to backup for collection: \"  + collection.getURI());\n\t\t\treturn;\n\t\t}\n\n//\t\tSystem.out.println(\"backup collection \"+colection.getURI());\n\t\tbackup(ms, serializer);\n\t}","commit_id":"a095a268a584ae7f10b3cac1bb8d007a10a38455","url":"https://github.com/eXist-db/exist"},{"original_method":"@Override\n\tpublic void backup(Collection collection, AttributesImpl attrs) {\n\t    if (collection == null)\n\t        return;\n\t    \n//\t\tSystem.out.println(\"backup collection \"+colection.getURI());\n\t\tbackup(md.getMetas(collection.getURI()), attrs);\n\t}","id":8122,"modified_method":"@Override\n\tpublic void backup(Collection collection, AttributesImpl attrs) {\n\t    if (collection == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tfinal Metas ms = md.getMetas(collection.getURI());\n\t\tif(ms == null) {\n\t\t\tLOG.warn(\"No metadata found to backup for collection: \"  + collection.getURI());\n\t\t\treturn;\n\t\t}\n\t    \n//\t\tSystem.out.println(\"backup collection \"+colection.getURI());\n\t\tbackup(ms, attrs);\n\t}","commit_id":"a095a268a584ae7f10b3cac1bb8d007a10a38455","url":"https://github.com/eXist-db/exist"},{"original_method":"public String toString() {\n        if(print_uuids)\n            return toStringLong();\n        return super.toString() + (payload == null? \"\" : \" (\" + payload.length + \" bytes)\");\n    }","id":8123,"modified_method":"public String toString() {\n        if(print_uuids)\n            return toStringLong() + (payload == null? \"\" : \" (\" + payload.length + \" bytes)\");\n        return super.toString() + (payload == null? \"\" : \" (\" + payload.length + \" bytes)\");\n    }","commit_id":"1820b31117c4c5fc1c952e17ffb8f52b36edee9f","url":"https://github.com/belaban/JGroups"},{"original_method":"public String toString() {\n        if(print_uuids)\n            return toStringLong();\n        return super.toString() + (payload == null? \"\" : \"(\" + payload + \")\");\n    }","id":8124,"modified_method":"public String toString() {\n        if(print_uuids)\n            return toStringLong() + (payload == null? \"\" : \"(\" + payload + \")\");\n        return super.toString() + (payload == null? \"\" : \"(\" + payload + \")\");\n    }","commit_id":"1820b31117c4c5fc1c952e17ffb8f52b36edee9f","url":"https://github.com/belaban/JGroups"},{"original_method":"public String toString() {\n        return super.toString() + \"-\" + payload;\n    }","id":8125,"modified_method":"public String toString() {\n        return super.toString() + (payload == null? \"\" : \"(\" + payload + \")\");\n    }","commit_id":"7ac81b896108fe892e522b9ed1ad916741fdac0c","url":"https://github.com/belaban/JGroups"},{"original_method":"public String toStringLong() {\n        return super.toStringLong() + \"-\" + payload;\n    }","id":8126,"modified_method":"public String toStringLong() {\n        return super.toStringLong() + (payload == null? \"\" : \"(\" + payload + \")\");\n    }","commit_id":"7ac81b896108fe892e522b9ed1ad916741fdac0c","url":"https://github.com/belaban/JGroups"},{"original_method":"private VmDataCommand generateVmDataCommand(DomainRouterVO router, String vmPrivateIpAddress, String userData, String serviceOffering, String zoneName, String guestIpAddress, String vmName,\n            String vmInstanceName, long vmId, String publicKey) {\n        VmDataCommand cmd = new VmDataCommand(vmPrivateIpAddress, vmName);\n\n        cmd.setAccessDetail(NetworkElementCommand.ROUTER_IP, router.getPrivateIpAddress());\n        cmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP, router.getGuestIpAddress());\n        cmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n\n        DataCenterVO dcVo = _dcDao.findById(router.getDataCenterIdToDeployIn());\n        cmd.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE, dcVo.getNetworkType().toString());\n        \n        cmd.addVmData(\"userdata\", \"user-data\", userData);\n        cmd.addVmData(\"metadata\", \"service-offering\", StringUtils.unicodeEscape(serviceOffering));\n        cmd.addVmData(\"metadata\", \"availability-zone\", StringUtils.unicodeEscape(zoneName));\n        cmd.addVmData(\"metadata\", \"local-ipv4\", guestIpAddress);\n        cmd.addVmData(\"metadata\", \"local-hostname\", StringUtils.unicodeEscape(vmName));\n        cmd.addVmData(\"metadata\", \"public-ipv4\", guestIpAddress);\n        cmd.addVmData(\"metadata\", \"public-hostname\",  StringUtils.unicodeEscape(vmName));\n        cmd.addVmData(\"metadata\", \"instance-id\", vmInstanceName);\n        cmd.addVmData(\"metadata\", \"vm-id\", String.valueOf(vmId));\n        cmd.addVmData(\"metadata\", \"public-keys\", publicKey);\n\n        String cloudIdentifier = _configDao.getValue(\"cloud.identifier\");\n        if (cloudIdentifier == null) {\n            cloudIdentifier = \"\";\n        } else {\n            cloudIdentifier = \"CloudStack-{\" + cloudIdentifier + \"}\";\n        }\n        cmd.addVmData(\"metadata\", \"cloud-identifier\", cloudIdentifier);\n\n        return cmd;\n    }","id":8127,"modified_method":"private VmDataCommand generateVmDataCommand(DomainRouterVO router, String vmPrivateIpAddress, String userData, String serviceOffering, String zoneName, String guestIpAddress, String vmName,\n            String vmInstanceName, long vmId, String publicKey) {\n        VmDataCommand cmd = new VmDataCommand(vmPrivateIpAddress, vmName);\n\n        cmd.setAccessDetail(NetworkElementCommand.ROUTER_IP, router.getPrivateIpAddress());\n        cmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP, router.getGuestIpAddress());\n        cmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n\n        DataCenterVO dcVo = _dcDao.findById(router.getDataCenterIdToDeployIn());\n        cmd.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE, dcVo.getNetworkType().toString());\n        \n        cmd.addVmData(\"userdata\", \"user-data\", userData);\n        cmd.addVmData(\"metadata\", \"service-offering\", StringUtils.unicodeEscape(serviceOffering));\n        cmd.addVmData(\"metadata\", \"availability-zone\", StringUtils.unicodeEscape(zoneName));\n        cmd.addVmData(\"metadata\", \"local-ipv4\", guestIpAddress);\n        cmd.addVmData(\"metadata\", \"local-hostname\", StringUtils.unicodeEscape(vmName));\n        if (dcVo.getNetworkType() == NetworkType.Basic) {\n            cmd.addVmData(\"metadata\", \"public-ipv4\", guestIpAddress);\n            cmd.addVmData(\"metadata\", \"public-hostname\",  StringUtils.unicodeEscape(vmName));\n        }else\n        {\n            cmd.addVmData(\"metadata\", \"public-ipv4\", router.getPublicIpAddress());\n            cmd.addVmData(\"metadata\", \"public-hostname\", router.getPublicIpAddress());\n        }\n        cmd.addVmData(\"metadata\", \"instance-id\", vmInstanceName);\n        cmd.addVmData(\"metadata\", \"vm-id\", String.valueOf(vmId));\n        cmd.addVmData(\"metadata\", \"public-keys\", publicKey);\n\n        String cloudIdentifier = _configDao.getValue(\"cloud.identifier\");\n        if (cloudIdentifier == null) {\n            cloudIdentifier = \"\";\n        } else {\n            cloudIdentifier = \"CloudStack-{\" + cloudIdentifier + \"}\";\n        }\n        cmd.addVmData(\"metadata\", \"cloud-identifier\", cloudIdentifier);\n\n        return cmd;\n    }","commit_id":"580e8503cdbe60de6ad3be948636ae1f728a634a","url":"https://github.com/apache/cloudstack"},{"original_method":"private VmDataCommand generateVmDataCommand(DomainRouterVO router, String vmPrivateIpAddress, String userData, String serviceOffering, String zoneName, String guestIpAddress, String vmName,\n            String vmInstanceName, long vmId, String publicKey) {\n        VmDataCommand cmd = new VmDataCommand(vmPrivateIpAddress, vmName);\n\n        cmd.setAccessDetail(NetworkElementCommand.ROUTER_IP, router.getPrivateIpAddress());\n        cmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP, router.getGuestIpAddress());\n        cmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n\n        DataCenterVO dcVo = _dcDao.findById(router.getDataCenterIdToDeployIn());\n        cmd.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE, dcVo.getNetworkType().toString());\n        \n        cmd.addVmData(\"userdata\", \"user-data\", userData);\n        cmd.addVmData(\"metadata\", \"service-offering\", StringUtils.unicodeEscape(serviceOffering));\n        cmd.addVmData(\"metadata\", \"availability-zone\", StringUtils.unicodeEscape(zoneName));\n        cmd.addVmData(\"metadata\", \"local-ipv4\", guestIpAddress);\n        cmd.addVmData(\"metadata\", \"local-hostname\", StringUtils.unicodeEscape(vmName));\n        cmd.addVmData(\"metadata\", \"public-ipv4\", guestIpAddress);\n        cmd.addVmData(\"metadata\", \"public-hostname\",  StringUtils.unicodeEscape(vmName));\n        cmd.addVmData(\"metadata\", \"instance-id\", vmInstanceName);\n        cmd.addVmData(\"metadata\", \"vm-id\", String.valueOf(vmId));\n        cmd.addVmData(\"metadata\", \"public-keys\", publicKey);\n\n        String cloudIdentifier = _configDao.getValue(\"cloud.identifier\");\n        if (cloudIdentifier == null) {\n            cloudIdentifier = \"\";\n        } else {\n            cloudIdentifier = \"CloudStack-{\" + cloudIdentifier + \"}\";\n        }\n        cmd.addVmData(\"metadata\", \"cloud-identifier\", cloudIdentifier);\n\n        return cmd;\n    }","id":8128,"modified_method":"private VmDataCommand generateVmDataCommand(DomainRouterVO router, String vmPrivateIpAddress, String userData, String serviceOffering, String zoneName, String guestIpAddress, String vmName,\n            String vmInstanceName, long vmId, String publicKey) {\n        VmDataCommand cmd = new VmDataCommand(vmPrivateIpAddress, vmName);\n\n        cmd.setAccessDetail(NetworkElementCommand.ROUTER_IP, router.getPrivateIpAddress());\n        cmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP, router.getGuestIpAddress());\n        cmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n\n        DataCenterVO dcVo = _dcDao.findById(router.getDataCenterIdToDeployIn());\n        cmd.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE, dcVo.getNetworkType().toString());\n        \n        cmd.addVmData(\"userdata\", \"user-data\", userData);\n        cmd.addVmData(\"metadata\", \"service-offering\", StringUtils.unicodeEscape(serviceOffering));\n        cmd.addVmData(\"metadata\", \"availability-zone\", StringUtils.unicodeEscape(zoneName));\n        cmd.addVmData(\"metadata\", \"local-ipv4\", guestIpAddress);\n        cmd.addVmData(\"metadata\", \"local-hostname\", StringUtils.unicodeEscape(vmName));\n        if (dcVo.getNetworkType() == NetworkType.Basic) {\n            cmd.addVmData(\"metadata\", \"public-ipv4\", guestIpAddress);\n            cmd.addVmData(\"metadata\", \"public-hostname\",  StringUtils.unicodeEscape(vmName));\n        }else\n        {\n            cmd.addVmData(\"metadata\", \"public-ipv4\", router.getPublicIpAddress());\n            cmd.addVmData(\"metadata\", \"public-hostname\", router.getPublicIpAddress());\n        }\n        cmd.addVmData(\"metadata\", \"instance-id\", vmInstanceName);\n        cmd.addVmData(\"metadata\", \"vm-id\", String.valueOf(vmId));\n        cmd.addVmData(\"metadata\", \"public-keys\", publicKey);\n\n        String cloudIdentifier = _configDao.getValue(\"cloud.identifier\");\n        if (cloudIdentifier == null) {\n            cloudIdentifier = \"\";\n        } else {\n            cloudIdentifier = \"CloudStack-{\" + cloudIdentifier + \"}\";\n        }\n        cmd.addVmData(\"metadata\", \"cloud-identifier\", cloudIdentifier);\n\n        return cmd;\n    }","commit_id":"b3b32fce9b623feaa98b1496566d6cc08b37fbe5","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n  public void define(WebService.NewController controller) {\n    WebService.NewAction action = controller.createAction(\"activity\")\n      .setDescription(format(\"Search for tasks.<br> \" +\n        \"Requires the system administration permission, \" +\n        \"or project administration permission if %s is set.\", PARAM_COMPONENT_ID))\n      .setResponseExample(getClass().getResource(\"activity-example.json\"))\n      .setHandler(this)\n      .setSince(\"5.2\");\n\n    action.createParam(PARAM_COMPONENT_ID)\n      .setDescription(\"Id of the component (project) to filter on\")\n      .setExampleValue(Uuids.UUID_EXAMPLE_03);\n    action.createParam(PARAM_COMPONENT_QUERY)\n      .setDescription(format(\"Limit search to: <ul>\" +\n        \"<li>component names that contain the supplied string<\/li>\" +\n        \"<li>component keys that are exactly the same as the supplied string<\/li>\" +\n        \"<\/ul>\" +\n        \"Must not be set together with %s\", PARAM_COMPONENT_ID))\n      .setExampleValue(\"Apache\");\n    action.createParam(PARAM_STATUS)\n      .setDescription(\"Comma separated list of task statuses\")\n      .setPossibleValues(ImmutableList.builder()\n        .add(CeActivityDto.Status.values())\n        .add(CeQueueDto.Status.values()).build())\n      .setExampleValue(Joiner.on(\",\").join(CeQueueDto.Status.IN_PROGRESS, CeActivityDto.Status.SUCCESS))\n      // activity statuses by default to be backward compatible\n      // queued tasks have been added in 5.5\n      .setDefaultValue(Joiner.on(\",\").join(CeActivityDto.Status.values()));\n    action.createParam(PARAM_ONLY_CURRENTS)\n      .setDescription(\"Filter on the last tasks (only the most recent finished task by project)\")\n      .setBooleanPossibleValues()\n      .setDefaultValue(\"false\");\n    action.createParam(PARAM_TYPE)\n      .setDescription(\"Task type\")\n      .setExampleValue(CeTaskTypes.REPORT)\n      .setPossibleValues(taskTypes);\n    action.createParam(PARAM_MIN_SUBMITTED_AT)\n      .setDescription(\"Minimum date of task submission\")\n      .setExampleValue(DateUtils.formatDateTime(new Date()));\n    action.createParam(PARAM_MAX_EXECUTED_AT)\n      .setDescription(\"Maximum date of end of task processing\")\n      .setExampleValue(DateUtils.formatDateTime(new Date()));\n    action.addPagingParams(100, MAX_PAGE_SIZE);\n  }","id":8129,"modified_method":"@Override\n  public void define(WebService.NewController controller) {\n    WebService.NewAction action = controller.createAction(\"activity\")\n      .setDescription(format(\"Search for tasks.<br> \" +\n        \"Requires the system administration permission, \" +\n        \"or project administration permission if %s is set.\", PARAM_COMPONENT_ID))\n      .setResponseExample(getClass().getResource(\"activity-example.json\"))\n      .setHandler(this)\n      .setSince(\"5.2\");\n\n    action.createParam(PARAM_COMPONENT_ID)\n      .setDescription(\"Id of the component (project) to filter on\")\n      .setExampleValue(Uuids.UUID_EXAMPLE_03);\n    action.createParam(PARAM_COMPONENT_QUERY)\n      .setDescription(format(\"Limit search to: <ul>\" +\n        \"<li>component names that contain the supplied string<\/li>\" +\n        \"<li>component keys that are exactly the same as the supplied string<\/li>\" +\n        \"<\/ul>\" +\n        \"Must not be set together with %s.<br />\" +\n        \"Deprecated and replaced by '%s'\", PARAM_COMPONENT_ID, Param.TEXT_QUERY))\n      .setExampleValue(\"Apache\")\n      .setDeprecatedSince(\"5.5\");\n    action.createParam(Param.TEXT_QUERY)\n      .setDescription(format(\"Limit search to: <ul>\" +\n        \"<li>component names that contain the supplied string<\/li>\" +\n        \"<li>component keys that are exactly the same as the supplied string<\/li>\" +\n        \"<li>task ids that are exactly the same as the supplied string<\/li>\" +\n        \"<\/ul>\" +\n        \"Must not be set together with %s\", PARAM_COMPONENT_ID))\n      .setExampleValue(\"Apache\")\n      .setSince(\"5.5\");\n    action.createParam(PARAM_STATUS)\n      .setDescription(\"Comma separated list of task statuses\")\n      .setPossibleValues(ImmutableList.builder()\n        .add(CeActivityDto.Status.values())\n        .add(CeQueueDto.Status.values()).build())\n      .setExampleValue(Joiner.on(\",\").join(CeQueueDto.Status.IN_PROGRESS, CeActivityDto.Status.SUCCESS))\n      // activity statuses by default to be backward compatible\n      // queued tasks have been added in 5.5\n      .setDefaultValue(Joiner.on(\",\").join(CeActivityDto.Status.values()));\n    action.createParam(PARAM_ONLY_CURRENTS)\n      .setDescription(\"Filter on the last tasks (only the most recent finished task by project)\")\n      .setBooleanPossibleValues()\n      .setDefaultValue(\"false\");\n    action.createParam(PARAM_TYPE)\n      .setDescription(\"Task type\")\n      .setExampleValue(CeTaskTypes.REPORT)\n      .setPossibleValues(taskTypes);\n    action.createParam(PARAM_MIN_SUBMITTED_AT)\n      .setDescription(\"Minimum date of task submission\")\n      .setExampleValue(DateUtils.formatDateTime(new Date()));\n    action.createParam(PARAM_MAX_EXECUTED_AT)\n      .setDescription(\"Maximum date of end of task processing\")\n      .setExampleValue(DateUtils.formatDateTime(new Date()));\n    action.addPagingParams(100, MAX_PAGE_SIZE);\n  }","commit_id":"bf27baa7ef13bef1a1296c1c09b845580e65be44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private static ActivityWsRequest toSearchWsRequest(Request request) {\n    ActivityWsRequest activityWsRequest = new ActivityWsRequest()\n      .setComponentId(request.param(PARAM_COMPONENT_ID))\n      .setComponentQuery(request.param(PARAM_COMPONENT_QUERY))\n      .setStatus(request.paramAsStrings(PARAM_STATUS))\n      .setType(request.param(PARAM_TYPE))\n      .setMinSubmittedAt(request.param(PARAM_MIN_SUBMITTED_AT))\n      .setMaxExecutedAt(request.param(PARAM_MAX_EXECUTED_AT))\n      .setOnlyCurrents(request.paramAsBoolean(PARAM_ONLY_CURRENTS))\n      .setPage(request.mandatoryParamAsInt(Param.PAGE))\n      .setPageSize(request.mandatoryParamAsInt(Param.PAGE_SIZE));\n\n    checkRequest(activityWsRequest.getComponentId() == null || activityWsRequest.getComponentQuery() == null, \"%s and %s must not be set at the same time\",\n      PARAM_COMPONENT_ID, PARAM_COMPONENT_QUERY);\n    checkRequest(activityWsRequest.getPageSize() <= MAX_PAGE_SIZE, \"The '%s' parameter must be less than %d\", Param.PAGE_SIZE, MAX_PAGE_SIZE);\n\n    return activityWsRequest;\n  }","id":8130,"modified_method":"private static ActivityWsRequest toSearchWsRequest(Request request) {\n    ActivityWsRequest activityWsRequest = new ActivityWsRequest()\n      .setComponentId(request.param(PARAM_COMPONENT_ID))\n      .setQuery(defaultString(request.param(Param.TEXT_QUERY), request.param(PARAM_COMPONENT_QUERY)))\n      .setStatus(request.paramAsStrings(PARAM_STATUS))\n      .setType(request.param(PARAM_TYPE))\n      .setMinSubmittedAt(request.param(PARAM_MIN_SUBMITTED_AT))\n      .setMaxExecutedAt(request.param(PARAM_MAX_EXECUTED_AT))\n      .setOnlyCurrents(request.paramAsBoolean(PARAM_ONLY_CURRENTS))\n      .setPage(request.mandatoryParamAsInt(Param.PAGE))\n      .setPageSize(request.mandatoryParamAsInt(Param.PAGE_SIZE));\n\n    checkRequest(activityWsRequest.getComponentId() == null || activityWsRequest.getQuery() == null, \"%s and %s must not be set at the same time\",\n      PARAM_COMPONENT_ID, PARAM_COMPONENT_QUERY);\n    checkRequest(activityWsRequest.getPageSize() <= MAX_PAGE_SIZE, \"The '%s' parameter must be less than %d\", Param.PAGE_SIZE, MAX_PAGE_SIZE);\n\n    return activityWsRequest;\n  }","commit_id":"bf27baa7ef13bef1a1296c1c09b845580e65be44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private ActivityResponse doHandle(ActivityWsRequest request) {\n    DbSession dbSession = dbClient.openSession(false);\n    try {\n      CeTaskQuery query = buildQuery(dbSession, request);\n      checkPermissions(query);\n      TaskResult queuedTasks = loadQueuedTasks(dbSession, request, query);\n      TaskResult pastTasks = loadPastTasks(dbSession, request, query, queuedTasks.total);\n\n      return buildResponse(\n        queuedTasks.tasks,\n        pastTasks.tasks,\n        Paging.forPageIndex(request.getPage())\n          .withPageSize(request.getPageSize())\n          .andTotal(queuedTasks.total + pastTasks.total));\n\n    } finally {\n      dbClient.closeSession(dbSession);\n    }\n  }","id":8131,"modified_method":"private ActivityResponse doHandle(ActivityWsRequest request) {\n    DbSession dbSession = dbClient.openSession(false);\n    try {\n      // if a task searched by uuid is found all other parameters are ignored\n      Optional<WsCe.Task> taskSearchedById = searchTaskByUuid(dbSession, request);\n      if (taskSearchedById.isPresent()) {\n        return buildResponse(\n          singletonList(taskSearchedById.get()),\n          Collections.<WsCe.Task>emptyList(),\n          Paging.forPageIndex(1).withPageSize(request.getPageSize()).andTotal(1));\n      }\n\n      CeTaskQuery query = buildQuery(dbSession, request);\n      checkPermissions(query);\n      TaskResult queuedTasks = loadQueuedTasks(dbSession, request, query);\n      TaskResult pastTasks = loadPastTasks(dbSession, request, query, queuedTasks.total);\n\n      return buildResponse(\n        queuedTasks.tasks,\n        pastTasks.tasks,\n        Paging.forPageIndex(request.getPage())\n          .withPageSize(request.getPageSize())\n          .andTotal(queuedTasks.total + pastTasks.total));\n\n    } finally {\n      dbClient.closeSession(dbSession);\n    }\n  }","commit_id":"bf27baa7ef13bef1a1296c1c09b845580e65be44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void loadComponentUuids(DbSession dbSession, ActivityWsRequest request, CeTaskQuery query) {\n    String componentUuid = request.getComponentId();\n    String componentQuery = request.getComponentQuery();\n\n    if (componentUuid != null) {\n      query.setComponentUuid(componentUuid);\n    }\n    if (componentQuery != null) {\n      ComponentQuery componentDtoQuery = ComponentQuery.builder().setNameOrKeyQuery(componentQuery).setQualifiers(Qualifiers.PROJECT, Qualifiers.VIEW).build();\n      List<ComponentDto> componentDtos = dbClient.componentDao().selectByQuery(dbSession, componentDtoQuery, 0, CeTaskQuery.MAX_COMPONENT_UUIDS);\n      query.setComponentUuids(Lists.transform(componentDtos, ComponentDtoFunctions.toUuid()));\n    }\n  }","id":8132,"modified_method":"private void loadComponentUuids(DbSession dbSession, ActivityWsRequest request, CeTaskQuery query) {\n    String componentUuid = request.getComponentId();\n    String componentQuery = request.getQuery();\n\n    if (componentUuid != null) {\n      query.setComponentUuid(componentUuid);\n    }\n    if (componentQuery != null) {\n      ComponentQuery componentDtoQuery = ComponentQuery.builder().setNameOrKeyQuery(componentQuery).setQualifiers(Qualifiers.PROJECT, Qualifiers.VIEW).build();\n      List<ComponentDto> componentDtos = dbClient.componentDao().selectByQuery(dbSession, componentDtoQuery, 0, CeTaskQuery.MAX_COMPONENT_UUIDS);\n      query.setComponentUuids(Lists.transform(componentDtos, ComponentDtoFunctions.toUuid()));\n    }\n  }","commit_id":"bf27baa7ef13bef1a1296c1c09b845580e65be44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void filter_on_current_activities() {\n    userSession.setGlobalPermissions(GlobalPermissions.SYSTEM_ADMIN);\n    // T2 is the current activity (the most recent one)\n    insertActivity(\"T1\", \"PROJECT_1\", CeActivityDto.Status.SUCCESS);\n    insertActivity(\"T2\", \"PROJECT_1\", CeActivityDto.Status.FAILED);\n    insertQueue(\"T3\", \"PROJECT_1\", CeQueueDto.Status.PENDING);\n\n    TestResponse wsResponse = ws.newRequest()\n      .setParam(\"onlyCurrents\", \"true\")\n      .setMediaType(MediaTypes.PROTOBUF)\n      .execute();\n\n    WsCe.ActivityResponse activityResponse = Protobuf.read(wsResponse.getInputStream(), WsCe.ActivityResponse.parser());\n    assertThat(activityResponse.getTasksCount()).isEqualTo(1);\n    assertThat(activityResponse.getTasks(0).getId()).isEqualTo(\"T2\");\n  }","id":8133,"modified_method":"@Test\n  public void filter_on_current_activities() {\n    userSession.setGlobalPermissions(GlobalPermissions.SYSTEM_ADMIN);\n    // T2 is the current activity (the most recent one)\n    insertActivity(\"T1\", \"PROJECT_1\", CeActivityDto.Status.SUCCESS);\n    insertActivity(\"T2\", \"PROJECT_1\", CeActivityDto.Status.FAILED);\n    insertQueue(\"T3\", \"PROJECT_1\", CeQueueDto.Status.PENDING);\n\n    ActivityResponse activityResponse = call(\n      ws.newRequest()\n        .setParam(\"onlyCurrents\", \"true\"));\n\n    assertThat(activityResponse.getTasksCount()).isEqualTo(1);\n    assertThat(activityResponse.getTasks(0).getId()).isEqualTo(\"T2\");\n  }","commit_id":"bf27baa7ef13bef1a1296c1c09b845580e65be44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void search_activity_by_component_name() throws IOException {\n    componentDb.insertProjectAndSnapshot(newProjectDto().setName(\"apache struts\").setUuid(\"P1\"));\n    componentDb.insertProjectAndSnapshot(newProjectDto().setName(\"apache zookeeper\").setUuid(\"P2\"));\n    componentDb.insertProjectAndSnapshot(newProjectDto().setName(\"eclipse\").setUuid(\"P3\"));\n    dbTester.commit();\n    componentDb.indexProjects();\n    userSession.setGlobalPermissions(GlobalPermissions.SYSTEM_ADMIN);\n    insertActivity(\"T1\", \"P1\", CeActivityDto.Status.SUCCESS);\n    insertActivity(\"T2\", \"P2\", CeActivityDto.Status.SUCCESS);\n    insertActivity(\"T3\", \"P3\", CeActivityDto.Status.SUCCESS);\n\n    TestResponse wsResponse = ws.newRequest()\n      .setParam(\"componentQuery\", \"apac\")\n      .setMediaType(MediaTypes.PROTOBUF)\n      .execute();\n\n    WsCe.ActivityResponse activityResponse = WsCe.ActivityResponse.parseFrom(wsResponse.getInputStream());\n    assertThat(activityResponse.getTasksList()).extracting(\"id\").containsOnly(\"T1\", \"T2\");\n  }","id":8134,"modified_method":"@Test\n  public void search_activity_by_component_name() throws IOException {\n    componentDb.insertProjectAndSnapshot(newProjectDto().setName(\"apache struts\").setUuid(\"P1\"));\n    componentDb.insertProjectAndSnapshot(newProjectDto().setName(\"apache zookeeper\").setUuid(\"P2\"));\n    componentDb.insertProjectAndSnapshot(newProjectDto().setName(\"eclipse\").setUuid(\"P3\"));\n    dbTester.commit();\n    componentDb.indexProjects();\n    userSession.setGlobalPermissions(GlobalPermissions.SYSTEM_ADMIN);\n    insertActivity(\"T1\", \"P1\", CeActivityDto.Status.SUCCESS);\n    insertActivity(\"T2\", \"P2\", CeActivityDto.Status.SUCCESS);\n    insertActivity(\"T3\", \"P3\", CeActivityDto.Status.SUCCESS);\n\n    ActivityResponse activityResponse = call(ws.newRequest().setParam(PARAM_COMPONENT_QUERY, \"apac\"));\n\n    assertThat(activityResponse.getTasksList()).extracting(\"id\").containsOnly(\"T1\", \"T2\");\n  }","commit_id":"bf27baa7ef13bef1a1296c1c09b845580e65be44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void filter_by_status() {\n    userSession.setGlobalPermissions(GlobalPermissions.SYSTEM_ADMIN);\n    insertActivity(\"T1\", \"PROJECT_1\", CeActivityDto.Status.SUCCESS);\n    insertActivity(\"T2\", \"PROJECT_2\", CeActivityDto.Status.FAILED);\n    insertQueue(\"T3\", \"PROJECT_1\", CeQueueDto.Status.IN_PROGRESS);\n\n    TestResponse wsResponse = ws.newRequest()\n      .setParam(\"status\", \"FAILED,IN_PROGRESS\")\n      .setMediaType(MediaTypes.PROTOBUF)\n      .execute();\n\n    WsCe.ActivityResponse activityResponse = Protobuf.read(wsResponse.getInputStream(), WsCe.ActivityResponse.parser());\n    assertThat(activityResponse.getTasksCount()).isEqualTo(2);\n    assertThat(activityResponse.getTasks(0).getId()).isEqualTo(\"T3\");\n    assertThat(activityResponse.getTasks(1).getId()).isEqualTo(\"T2\");\n  }","id":8135,"modified_method":"@Test\n  public void filter_by_status() {\n    userSession.setGlobalPermissions(GlobalPermissions.SYSTEM_ADMIN);\n    insertActivity(\"T1\", \"PROJECT_1\", CeActivityDto.Status.SUCCESS);\n    insertActivity(\"T2\", \"PROJECT_2\", CeActivityDto.Status.FAILED);\n    insertQueue(\"T3\", \"PROJECT_1\", CeQueueDto.Status.IN_PROGRESS);\n\n    ActivityResponse activityResponse = call(ws.newRequest()\n      .setParam(\"status\", \"FAILED,IN_PROGRESS\"));\n\n    assertThat(activityResponse.getTasksCount()).isEqualTo(2);\n    assertThat(activityResponse.getTasks(0).getId()).isEqualTo(\"T3\");\n    assertThat(activityResponse.getTasks(1).getId()).isEqualTo(\"T2\");\n  }","commit_id":"bf27baa7ef13bef1a1296c1c09b845580e65be44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void assertPage(int pageIndex, int pageSize, int expectedTotal, List<String> expectedOrderedTaskIds) {\n    TestResponse wsResponse = ws.newRequest()\n      .setMediaType(MediaTypes.PROTOBUF)\n      .setParam(Param.PAGE, Integer.toString(pageIndex))\n      .setParam(Param.PAGE_SIZE, Integer.toString(pageSize))\n      .setParam(PARAM_STATUS, \"SUCCESS,FAILED,CANCELED,IN_PROGRESS,PENDING\")\n      .execute();\n\n    WsCe.ActivityResponse activityResponse = Protobuf.read(wsResponse.getInputStream(), WsCe.ActivityResponse.parser());\n    assertThat(activityResponse.getPaging().getPageIndex()).isEqualTo(pageIndex);\n    assertThat(activityResponse.getPaging().getPageSize()).isEqualTo(pageSize);\n    assertThat(activityResponse.getPaging().getTotal()).isEqualTo(expectedTotal);\n\n    assertThat(activityResponse.getTasksCount()).isEqualTo(expectedOrderedTaskIds.size());\n    for (int i = 0; i < expectedOrderedTaskIds.size(); i++) {\n      String expectedTaskId = expectedOrderedTaskIds.get(i);\n      assertThat(activityResponse.getTasks(i).getId()).isEqualTo(expectedTaskId);\n    }\n  }","id":8136,"modified_method":"private void assertPage(int pageIndex, int pageSize, int expectedTotal, List<String> expectedOrderedTaskIds) {\n    ActivityResponse activityResponse = call(ws.newRequest()\n      .setParam(Param.PAGE, Integer.toString(pageIndex))\n      .setParam(Param.PAGE_SIZE, Integer.toString(pageSize))\n      .setParam(PARAM_STATUS, \"SUCCESS,FAILED,CANCELED,IN_PROGRESS,PENDING\"));\n\n    assertThat(activityResponse.getPaging().getPageIndex()).isEqualTo(pageIndex);\n    assertThat(activityResponse.getPaging().getPageSize()).isEqualTo(pageSize);\n    assertThat(activityResponse.getPaging().getTotal()).isEqualTo(expectedTotal);\n\n    assertThat(activityResponse.getTasksCount()).isEqualTo(expectedOrderedTaskIds.size());\n    for (int i = 0; i < expectedOrderedTaskIds.size(); i++) {\n      String expectedTaskId = expectedOrderedTaskIds.get(i);\n      assertThat(activityResponse.getTasks(i).getId()).isEqualTo(expectedTaskId);\n    }\n  }","commit_id":"bf27baa7ef13bef1a1296c1c09b845580e65be44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void get_all_past_activity() {\n    userSession.setGlobalPermissions(GlobalPermissions.SYSTEM_ADMIN);\n    insertActivity(\"T1\", \"PROJECT_1\", CeActivityDto.Status.SUCCESS);\n    insertActivity(\"T2\", \"PROJECT_2\", CeActivityDto.Status.FAILED);\n\n    TestResponse wsResponse = ws.newRequest()\n      .setParam(CeWsParameters.PARAM_MAX_EXECUTED_AT, formatDateTime(EXECUTED_AT + 2_000))\n      .setMediaType(MediaTypes.PROTOBUF)\n      .execute();\n\n    // verify the protobuf response\n    WsCe.ActivityResponse activityResponse = Protobuf.read(wsResponse.getInputStream(), WsCe.ActivityResponse.parser());\n    assertThat(activityResponse.getTasksCount()).isEqualTo(2);\n\n    // chronological order, from newest to oldest\n    assertThat(activityResponse.getTasks(0).getId()).isEqualTo(\"T2\");\n    assertThat(activityResponse.getTasks(0).getStatus()).isEqualTo(WsCe.TaskStatus.FAILED);\n    assertThat(activityResponse.getTasks(0).getComponentId()).isEqualTo(\"PROJECT_2\");\n    assertThat(activityResponse.getTasks(0).getAnalysisId()).isEqualTo(\"123456\");\n    assertThat(activityResponse.getTasks(0).getExecutionTimeMs()).isEqualTo(500L);\n    assertThat(activityResponse.getTasks(0).getLogs()).isFalse();\n    assertThat(activityResponse.getTasks(1).getId()).isEqualTo(\"T1\");\n    assertThat(activityResponse.getTasks(1).getStatus()).isEqualTo(WsCe.TaskStatus.SUCCESS);\n    assertThat(activityResponse.getTasks(1).getComponentId()).isEqualTo(\"PROJECT_1\");\n    assertThat(activityResponse.getTasks(1).getLogs()).isFalse();\n  }","id":8137,"modified_method":"@Test\n  public void get_all_past_activity() {\n    userSession.setGlobalPermissions(GlobalPermissions.SYSTEM_ADMIN);\n    insertActivity(\"T1\", \"PROJECT_1\", CeActivityDto.Status.SUCCESS);\n    insertActivity(\"T2\", \"PROJECT_2\", CeActivityDto.Status.FAILED);\n\n    ActivityResponse activityResponse = call(ws.newRequest()\n      .setParam(CeWsParameters.PARAM_MAX_EXECUTED_AT, formatDateTime(EXECUTED_AT + 2_000)));\n\n    assertThat(activityResponse.getTasksCount()).isEqualTo(2);\n    // chronological order, from newest to oldest\n    assertThat(activityResponse.getTasks(0).getId()).isEqualTo(\"T2\");\n    assertThat(activityResponse.getTasks(0).getStatus()).isEqualTo(WsCe.TaskStatus.FAILED);\n    assertThat(activityResponse.getTasks(0).getComponentId()).isEqualTo(\"PROJECT_2\");\n    assertThat(activityResponse.getTasks(0).getAnalysisId()).isEqualTo(\"123456\");\n    assertThat(activityResponse.getTasks(0).getExecutionTimeMs()).isEqualTo(500L);\n    assertThat(activityResponse.getTasks(0).getLogs()).isFalse();\n    assertThat(activityResponse.getTasks(1).getId()).isEqualTo(\"T1\");\n    assertThat(activityResponse.getTasks(1).getStatus()).isEqualTo(WsCe.TaskStatus.SUCCESS);\n    assertThat(activityResponse.getTasks(1).getComponentId()).isEqualTo(\"PROJECT_1\");\n    assertThat(activityResponse.getTasks(1).getLogs()).isFalse();\n  }","commit_id":"bf27baa7ef13bef1a1296c1c09b845580e65be44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void filter_by_max_executed_at() {\n    userSession.setGlobalPermissions(GlobalPermissions.SYSTEM_ADMIN);\n    insertActivity(\"T1\", \"PROJECT_1\", CeActivityDto.Status.SUCCESS);\n    insertActivity(\"T2\", \"PROJECT_2\", CeActivityDto.Status.FAILED);\n    insertQueue(\"T3\", \"PROJECT_1\", CeQueueDto.Status.IN_PROGRESS);\n\n    TestResponse wsResponse = ws.newRequest()\n      .setParam(\"status\", \"FAILED,IN_PROGRESS,SUCCESS\")\n      .setParam(CeWsParameters.PARAM_MAX_EXECUTED_AT, \"2016-02-15\")\n      .setMediaType(MediaTypes.PROTOBUF)\n      .execute();\n\n    WsCe.ActivityResponse activityResponse = Protobuf.read(wsResponse.getInputStream(), WsCe.ActivityResponse.parser());\n    assertThat(activityResponse.getTasksCount()).isEqualTo(0);\n  }","id":8138,"modified_method":"@Test\n  public void filter_by_max_executed_at() {\n    userSession.setGlobalPermissions(GlobalPermissions.SYSTEM_ADMIN);\n    insertActivity(\"T1\", \"PROJECT_1\", CeActivityDto.Status.SUCCESS);\n    insertActivity(\"T2\", \"PROJECT_2\", CeActivityDto.Status.FAILED);\n    insertQueue(\"T3\", \"PROJECT_1\", CeQueueDto.Status.IN_PROGRESS);\n\n    ActivityResponse activityResponse = call(ws.newRequest()\n      .setParam(\"status\", \"FAILED,IN_PROGRESS,SUCCESS\")\n      .setParam(CeWsParameters.PARAM_MAX_EXECUTED_AT, \"2016-02-15\"));\n\n    assertThat(activityResponse.getTasksCount()).isEqualTo(0);\n  }","commit_id":"bf27baa7ef13bef1a1296c1c09b845580e65be44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void project_administrator_can_access_his_project_activity() {\n    // no need to be a system admin\n    userSession.addComponentUuidPermission(UserRole.ADMIN, \"PROJECT_1\", \"PROJECT_1\");\n    insertActivity(\"T1\", \"PROJECT_1\", CeActivityDto.Status.SUCCESS);\n    insertActivity(\"T2\", \"PROJECT_2\", CeActivityDto.Status.FAILED);\n\n    TestResponse wsResponse = ws.newRequest()\n      .setParam(\"componentId\", \"PROJECT_1\")\n      .setMediaType(MediaTypes.PROTOBUF)\n      .execute();\n\n    WsCe.ActivityResponse activityResponse = Protobuf.read(wsResponse.getInputStream(), WsCe.ActivityResponse.parser());\n    assertThat(activityResponse.getTasksCount()).isEqualTo(1);\n    assertThat(activityResponse.getTasks(0).getId()).isEqualTo(\"T1\");\n    assertThat(activityResponse.getTasks(0).getStatus()).isEqualTo(WsCe.TaskStatus.SUCCESS);\n    assertThat(activityResponse.getTasks(0).getComponentId()).isEqualTo(\"PROJECT_1\");\n  }","id":8139,"modified_method":"@Test\n  public void project_administrator_can_access_his_project_activity() {\n    // no need to be a system admin\n    userSession.addComponentUuidPermission(UserRole.ADMIN, \"PROJECT_1\", \"PROJECT_1\");\n    insertActivity(\"T1\", \"PROJECT_1\", CeActivityDto.Status.SUCCESS);\n    insertActivity(\"T2\", \"PROJECT_2\", CeActivityDto.Status.FAILED);\n\n    ActivityResponse activityResponse = call(ws.newRequest().setParam(\"componentId\", \"PROJECT_1\"));\n\n    assertThat(activityResponse.getTasksCount()).isEqualTo(1);\n    assertThat(activityResponse.getTasks(0).getId()).isEqualTo(\"T1\");\n    assertThat(activityResponse.getTasks(0).getStatus()).isEqualTo(WsCe.TaskStatus.SUCCESS);\n    assertThat(activityResponse.getTasks(0).getComponentId()).isEqualTo(\"PROJECT_1\");\n  }","commit_id":"bf27baa7ef13bef1a1296c1c09b845580e65be44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@CheckForNull\n  public String getComponentQuery() {\n    return componentQuery;\n  }","id":8140,"modified_method":"@CheckForNull\n  public String getQuery() {\n    return query;\n  }","commit_id":"bf27baa7ef13bef1a1296c1c09b845580e65be44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public ActivityWsRequest setComponentQuery(@Nullable String componentQuery) {\n    this.componentQuery = componentQuery;\n    return this;\n  }","id":8141,"modified_method":"public ActivityWsRequest setQuery(@Nullable String query) {\n    this.query = query;\n    return this;\n  }","commit_id":"bf27baa7ef13bef1a1296c1c09b845580e65be44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public ActivityResponse activity(ActivityWsRequest request) {\n    return call(\n      new GetRequest(path(\"activity\"))\n        .setParam(PARAM_COMPONENT_ID, request.getComponentId())\n        .setParam(PARAM_COMPONENT_QUERY, request.getComponentQuery())\n        .setParam(PARAM_STATUS, inlineMultipleParamValue(request.getStatus()))\n        .setParam(PARAM_TYPE, request.getType())\n        .setParam(PARAM_MAX_EXECUTED_AT, request.getMaxExecutedAt())\n        .setParam(PARAM_MIN_SUBMITTED_AT, request.getMinSubmittedAt())\n        .setParam(PARAM_ONLY_CURRENTS, request.getOnlyCurrents())\n        .setParam(\"p\", request.getPage())\n        .setParam(\"ps\", request.getPageSize()),\n      ActivityResponse.parser());\n  }","id":8142,"modified_method":"public ActivityResponse activity(ActivityWsRequest request) {\n    return call(\n      new GetRequest(path(\"activity\"))\n        .setParam(PARAM_COMPONENT_ID, request.getComponentId())\n        .setParam(\"q\", request.getQuery())\n        .setParam(PARAM_STATUS, inlineMultipleParamValue(request.getStatus()))\n        .setParam(PARAM_TYPE, request.getType())\n        .setParam(PARAM_MAX_EXECUTED_AT, request.getMaxExecutedAt())\n        .setParam(PARAM_MIN_SUBMITTED_AT, request.getMinSubmittedAt())\n        .setParam(PARAM_ONLY_CURRENTS, request.getOnlyCurrents())\n        .setParam(\"p\", request.getPage())\n        .setParam(\"ps\", request.getPageSize()),\n      ActivityResponse.parser());\n  }","commit_id":"bf27baa7ef13bef1a1296c1c09b845580e65be44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void activity() {\n    ActivityWsRequest request = new ActivityWsRequest()\n      .setComponentId(VALUE_COMPONENT_ID)\n      .setComponentQuery(VALUE_COMPONENT_QUERY)\n      .setStatus(ImmutableList.of(VALUE_TASK_STATUS_1, VALUE_TASK_STATUS_2))\n      .setType(VALUE_TASK_TYPE)\n      .setPage(VALUE_PAGE)\n      .setPageSize(VALUE_PAGE_SIZE)\n      .setMaxExecutedAt(VALUE_MAX_EXECUTED_AT)\n      .setMinSubmittedAt(VALUE_MIN_SUBMITTED_AT)\n      .setOnlyCurrents(VALUE_ONLY_CURRENTS)\n      .setPage(1)\n      .setPageSize(1);\n\n    underTest.activity(request);\n    GetRequest result = serviceTester.getGetRequest();\n\n    assertThat(serviceTester.getGetParser()).isSameAs(ActivityResponse.parser());\n    serviceTester.assertThat(result)\n      .hasPath(\"activity\")\n      .hasParam(PARAM_COMPONENT_ID, VALUE_COMPONENT_ID)\n      .hasParam(PARAM_COMPONENT_QUERY, VALUE_COMPONENT_QUERY)\n      .hasParam(PARAM_STATUS, VALUE_TASK_STATUS_1 + \",\" + VALUE_TASK_STATUS_2)\n      .hasParam(PARAM_TYPE, VALUE_TASK_TYPE)\n      .hasParam(PARAM_MAX_EXECUTED_AT, VALUE_MAX_EXECUTED_AT)\n      .hasParam(PARAM_MIN_SUBMITTED_AT, VALUE_MIN_SUBMITTED_AT)\n      .hasParam(PARAM_ONLY_CURRENTS, VALUE_ONLY_CURRENTS)\n      .hasParam(\"p\", 1)\n      .hasParam(\"ps\", 1)\n      .andNoOtherParam();\n  }","id":8143,"modified_method":"@Test\n  public void activity() {\n    ActivityWsRequest request = new ActivityWsRequest()\n      .setComponentId(VALUE_COMPONENT_ID)\n      .setQuery(VALUE_QUERY)\n      .setStatus(ImmutableList.of(VALUE_TASK_STATUS_1, VALUE_TASK_STATUS_2))\n      .setType(VALUE_TASK_TYPE)\n      .setPage(VALUE_PAGE)\n      .setPageSize(VALUE_PAGE_SIZE)\n      .setMaxExecutedAt(VALUE_MAX_EXECUTED_AT)\n      .setMinSubmittedAt(VALUE_MIN_SUBMITTED_AT)\n      .setOnlyCurrents(VALUE_ONLY_CURRENTS)\n      .setPage(1)\n      .setPageSize(1);\n\n    underTest.activity(request);\n    GetRequest result = serviceTester.getGetRequest();\n\n    assertThat(serviceTester.getGetParser()).isSameAs(ActivityResponse.parser());\n    serviceTester.assertThat(result)\n      .hasPath(\"activity\")\n      .hasParam(PARAM_COMPONENT_ID, VALUE_COMPONENT_ID)\n      .hasParam(\"q\", VALUE_QUERY)\n      .hasParam(PARAM_STATUS, VALUE_TASK_STATUS_1 + \",\" + VALUE_TASK_STATUS_2)\n      .hasParam(PARAM_TYPE, VALUE_TASK_TYPE)\n      .hasParam(PARAM_MAX_EXECUTED_AT, VALUE_MAX_EXECUTED_AT)\n      .hasParam(PARAM_MIN_SUBMITTED_AT, VALUE_MIN_SUBMITTED_AT)\n      .hasParam(PARAM_ONLY_CURRENTS, VALUE_ONLY_CURRENTS)\n      .hasParam(\"p\", 1)\n      .hasParam(\"ps\", 1)\n      .andNoOtherParam();\n  }","commit_id":"bf27baa7ef13bef1a1296c1c09b845580e65be44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public EffectivePolicy getEffectiveClientResponsePolicy(EndpointInfo ei,\n                                                            BindingOperationInfo boi,\n                                                            Message m) {\n        synchronized (ei) {\n            EffectivePolicy effectivePolicy = (EffectivePolicy)boi.getProperty(POLICY_INFO_RESPONSE_CLIENT);\n            if (null == effectivePolicy) {\n                EffectivePolicyImpl epi = createOutPolicyInfo();\n                if (m != null) {\n                    boi.setProperty(POLICY_INFO_RESPONSE_CLIENT, epi);\n                }\n                epi.initialise(ei, boi, this, true, false, m);\n                effectivePolicy = epi;\n            }\n            return effectivePolicy;\n        }\n    }","id":8144,"modified_method":"public EffectivePolicy getEffectiveClientResponsePolicy(EndpointInfo ei,\n                                                            BindingOperationInfo boi,\n                                                            Message m) {\n        EffectivePolicy effectivePolicy = (EffectivePolicy)boi.getProperty(POLICY_INFO_RESPONSE_CLIENT);\n        if (effectivePolicy == null) {\n            synchronized (ei) {\n                effectivePolicy = (EffectivePolicy)boi.getProperty(POLICY_INFO_RESPONSE_CLIENT);\n                if (null == effectivePolicy) {\n                    EffectivePolicyImpl epi = createOutPolicyInfo();\n                    epi.initialise(ei, boi, this, true, false, m);\n                    if (m != null) {\n                        boi.setProperty(POLICY_INFO_RESPONSE_CLIENT, epi);\n                    }\n                    effectivePolicy = epi;\n                }\n            }\n        }\n        return effectivePolicy;\n    }","commit_id":"8e650cfe3efd63a06c25b7e912d9d4db61598eb1","url":"https://github.com/apache/cxf"},{"original_method":"private EndpointPolicy getEndpointPolicy(\n        EndpointInfo ei, \n        boolean isRequestor,\n        Assertor assertor,\n        Message m) {\n        synchronized (ei) {\n            EndpointPolicy ep = (EndpointPolicy)ei.getProperty(isRequestor ? POLICY_INFO_ENDPOINT_CLIENT \n                            : POLICY_INFO_ENDPOINT_SERVER);\n            if (null != ep) {\n                return ep; \n            }\n            return createEndpointPolicyInfo(ei, isRequestor, assertor, m);\n        }\n    }","id":8145,"modified_method":"private EndpointPolicy getEndpointPolicy(//NOPMD\n        EndpointInfo ei, \n        boolean isRequestor,\n        Assertor assertor,\n        Message m) {\n        EndpointPolicy ep = (EndpointPolicy)ei.getProperty(isRequestor\n            ? POLICY_INFO_ENDPOINT_CLIENT : POLICY_INFO_ENDPOINT_SERVER);\n        if (ep == null) {\n            synchronized (ei) {\n                ep = (EndpointPolicy)ei.getProperty(isRequestor\n                    ? POLICY_INFO_ENDPOINT_CLIENT : POLICY_INFO_ENDPOINT_SERVER);\n                if (ep == null) {\n                    ep = createEndpointPolicyInfo(ei, isRequestor, assertor, m);\n                }\n            }\n        }\n        return ep;\n    }","commit_id":"8e650cfe3efd63a06c25b7e912d9d4db61598eb1","url":"https://github.com/apache/cxf"},{"original_method":"public EffectivePolicy getEffectiveServerResponsePolicy(EndpointInfo ei,\n                                                            BindingOperationInfo boi,\n                                                            Destination d,\n                                                            List<List<Assertion>> incoming, \n                                                            Message m) {\n        if (incoming == null) {\n            synchronized (ei) {\n                EffectivePolicy effectivePolicy = (EffectivePolicy)boi.getProperty(POLICY_INFO_RESPONSE_SERVER);\n                if (null == effectivePolicy) {\n                    EffectivePolicyImpl epi = createOutPolicyInfo();\n                    Assertor assertor = PolicyUtils.createAsserter(d);\n                    if (m != null) {\n                        boi.setProperty(POLICY_INFO_RESPONSE_SERVER, epi);\n                    }\n                    epi.initialise(ei, boi, this, assertor, false, false, null);\n                    effectivePolicy = epi;\n                }\n                return effectivePolicy;\n            } \n        }\n        EffectivePolicyImpl epi = createOutPolicyInfo();\n        Assertor assertor = PolicyUtils.createAsserter(d);\n        epi.initialise(ei, boi, this, assertor, incoming, m);\n        return epi;\n    }","id":8146,"modified_method":"public EffectivePolicy getEffectiveServerResponsePolicy(EndpointInfo ei,\n                                                            BindingOperationInfo boi,\n                                                            Destination d,\n                                                            List<List<Assertion>> incoming, \n                                                            Message m) {\n        if (incoming == null) {\n            EffectivePolicy effectivePolicy = (EffectivePolicy)boi.getProperty(POLICY_INFO_RESPONSE_SERVER);\n            if (effectivePolicy == null) {\n                synchronized (ei) {\n                    effectivePolicy = (EffectivePolicy)boi.getProperty(POLICY_INFO_RESPONSE_SERVER);\n                    if (null == effectivePolicy) {\n                        EffectivePolicyImpl epi = createOutPolicyInfo();\n                        Assertor assertor = PolicyUtils.createAsserter(d);\n                        epi.initialise(ei, boi, this, assertor, false, false, null);\n                        if (m != null) {\n                            boi.setProperty(POLICY_INFO_RESPONSE_SERVER, epi);\n                        }\n                        effectivePolicy = epi;\n                    }\n                }\n            }\n            return effectivePolicy;\n        }\n        EffectivePolicyImpl epi = createOutPolicyInfo();\n        Assertor assertor = PolicyUtils.createAsserter(d);\n        epi.initialise(ei, boi, this, assertor, incoming, m);\n        return epi;\n    }","commit_id":"8e650cfe3efd63a06c25b7e912d9d4db61598eb1","url":"https://github.com/apache/cxf"},{"original_method":"public EffectivePolicy getEffectiveClientFaultPolicy(EndpointInfo ei,\n                                                         BindingOperationInfo boi,\n                                                         BindingFaultInfo bfi,\n                                                         Message m) {\n        synchronized (ei) {\n            EffectivePolicy effectivePolicy = null;\n            if (bfi != null) {\n                effectivePolicy = (EffectivePolicy)bfi.getProperty(POLICY_INFO_FAULT_CLIENT);\n            }\n            if (null == effectivePolicy) {\n                EffectivePolicyImpl epi = createOutPolicyInfo();\n                if (bfi != null) {\n                    bfi.setProperty(POLICY_INFO_FAULT_CLIENT, epi);\n                }\n                epi.initialisePolicy(ei, boi, bfi, this, m);\n                effectivePolicy = epi;\n            }\n            return effectivePolicy;\n        }\n    }","id":8147,"modified_method":"public EffectivePolicy getEffectiveClientFaultPolicy(EndpointInfo ei,\n                                                         BindingOperationInfo boi,\n                                                         BindingFaultInfo bfi,\n                                                         Message m) {\n        EffectivePolicy effectivePolicy = null;\n        if (bfi != null) {\n            effectivePolicy = (EffectivePolicy)bfi.getProperty(POLICY_INFO_FAULT_CLIENT);\n        }\n        if (effectivePolicy == null) {\n            synchronized (ei) {\n                if (bfi != null) {\n                    effectivePolicy = (EffectivePolicy)bfi.getProperty(POLICY_INFO_FAULT_CLIENT);\n                }\n                if (null == effectivePolicy) {\n                    EffectivePolicyImpl epi = createOutPolicyInfo();\n                    epi.initialisePolicy(ei, boi, bfi, this, m);\n                    if (bfi != null) {\n                        bfi.setProperty(POLICY_INFO_FAULT_CLIENT, epi);\n                    }\n                    effectivePolicy = epi;\n                }\n            }\n        }\n        return effectivePolicy;\n    }","commit_id":"8e650cfe3efd63a06c25b7e912d9d4db61598eb1","url":"https://github.com/apache/cxf"},{"original_method":"public EffectivePolicy getEffectiveClientRequestPolicy(EndpointInfo ei, BindingOperationInfo boi, \n                                                           Conduit c, Message m) {\n        synchronized (ei) {\n            EffectivePolicy effectivePolicy = (EffectivePolicy)boi.getProperty(POLICY_INFO_REQUEST_CLIENT);\n            if (null == effectivePolicy) {\n                EffectivePolicyImpl epi = createOutPolicyInfo();\n                Assertor assertor = PolicyUtils.createAsserter(c);\n                if (m != null) {\n                    boi.setProperty(POLICY_INFO_REQUEST_CLIENT, epi);\n                }\n                epi.initialise(ei, boi, this, assertor, true, true, m);\n                effectivePolicy = epi;\n            }\n            return effectivePolicy;\n        }\n    }","id":8148,"modified_method":"public EffectivePolicy getEffectiveClientRequestPolicy(EndpointInfo ei, BindingOperationInfo boi, \n                                                           Conduit c, Message m) {\n        EffectivePolicy effectivePolicy = (EffectivePolicy)boi.getProperty(POLICY_INFO_REQUEST_CLIENT);\n        if (effectivePolicy == null) {\n            synchronized (ei) {\n                effectivePolicy = (EffectivePolicy)boi.getProperty(POLICY_INFO_REQUEST_CLIENT);\n                if (null == effectivePolicy) {\n                    EffectivePolicyImpl epi = createOutPolicyInfo();\n                    Assertor assertor = PolicyUtils.createAsserter(c);\n                    epi.initialise(ei, boi, this, assertor, true, true, m);\n                    if (m != null) {\n                        boi.setProperty(POLICY_INFO_REQUEST_CLIENT, epi);\n                    }\n                    effectivePolicy = epi;\n                }\n            }\n        }\n        return effectivePolicy;\n    }","commit_id":"8e650cfe3efd63a06c25b7e912d9d4db61598eb1","url":"https://github.com/apache/cxf"},{"original_method":"public EffectivePolicy getEffectiveServerRequestPolicy(EndpointInfo ei, \n                                                           BindingOperationInfo boi, \n                                                           Message m) {\n        synchronized (ei) {\n            EffectivePolicy effectivePolicy = (EffectivePolicy)boi.getProperty(POLICY_INFO_REQUEST_SERVER);\n            if (null == effectivePolicy) {\n                EffectivePolicyImpl epi = createOutPolicyInfo();\n                if (m != null) {\n                    boi.setProperty(POLICY_INFO_REQUEST_SERVER, epi);\n                }\n                epi.initialise(ei, boi, this, false, true, m);\n                effectivePolicy = epi;\n            }\n            return effectivePolicy;\n        }\n    }","id":8149,"modified_method":"public EffectivePolicy getEffectiveServerRequestPolicy(EndpointInfo ei, \n                                                           BindingOperationInfo boi, \n                                                           Message m) {\n        EffectivePolicy effectivePolicy = (EffectivePolicy)boi.getProperty(POLICY_INFO_REQUEST_SERVER);\n        if (effectivePolicy == null) {\n            synchronized (ei) {\n                effectivePolicy = (EffectivePolicy)boi.getProperty(POLICY_INFO_REQUEST_SERVER);\n                if (null == effectivePolicy) {\n                    EffectivePolicyImpl epi = createOutPolicyInfo();\n                    epi.initialise(ei, boi, this, false, true, m);\n                    if (m != null) {\n                        boi.setProperty(POLICY_INFO_REQUEST_SERVER, epi);\n                    }\n                    effectivePolicy = epi;\n                }\n            }\n        }\n        return effectivePolicy;\n    }","commit_id":"8e650cfe3efd63a06c25b7e912d9d4db61598eb1","url":"https://github.com/apache/cxf"},{"original_method":"public EffectivePolicy getEffectiveServerFaultPolicy(EndpointInfo ei,\n                                                         BindingOperationInfo boi,\n                                                         BindingFaultInfo bfi, \n                                                         Destination d,\n                                                         Message m) {\n\n        if (bfi == null) {\n            EffectivePolicyImpl epi = createOutPolicyInfo();\n            Assertor assertor = PolicyUtils.createAsserter(d);\n            epi.initialise(ei, boi, null, this, assertor, m);\n            return epi;\n        }\n        bfi = mapToWrappedBindingFaultInfo(bfi);\n        synchronized (ei) {\n            EffectivePolicy effectivePolicy = (EffectivePolicy)bfi.getProperty(POLICY_INFO_FAULT_SERVER);\n            if (null == effectivePolicy) {\n                EffectivePolicyImpl epi = createOutPolicyInfo();\n                Assertor assertor = PolicyUtils.createAsserter(d);\n                if (m != null) {\n                    bfi.setProperty(POLICY_INFO_FAULT_SERVER, epi);\n                }\n                epi.initialise(ei, boi, bfi, this, assertor, m);\n                effectivePolicy = epi;\n            }\n            return effectivePolicy;\n        }\n    }","id":8150,"modified_method":"public EffectivePolicy getEffectiveServerFaultPolicy(EndpointInfo ei,\n                                                         BindingOperationInfo boi,\n                                                         BindingFaultInfo bfi, \n                                                         Destination d,\n                                                         Message m) {\n\n        if (bfi == null) {\n            EffectivePolicyImpl epi = createOutPolicyInfo();\n            Assertor assertor = PolicyUtils.createAsserter(d);\n            epi.initialise(ei, boi, null, this, assertor, m);\n            return epi;\n        }\n        bfi = mapToWrappedBindingFaultInfo(bfi);\n        EffectivePolicy effectivePolicy = (EffectivePolicy)bfi.getProperty(POLICY_INFO_FAULT_SERVER);\n        if (effectivePolicy == null) {\n            synchronized (ei) {\n                effectivePolicy = (EffectivePolicy)bfi.getProperty(POLICY_INFO_FAULT_SERVER);\n                if (null == effectivePolicy) {\n                    EffectivePolicyImpl epi = createOutPolicyInfo();\n                    Assertor assertor = PolicyUtils.createAsserter(d);\n                    epi.initialise(ei, boi, bfi, this, assertor, m);\n                    if (m != null) {\n                        bfi.setProperty(POLICY_INFO_FAULT_SERVER, epi);\n                    }\n                    effectivePolicy = epi;\n                }\n            }\n        }\n        return effectivePolicy;\n    }","commit_id":"8e650cfe3efd63a06c25b7e912d9d4db61598eb1","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    @SuppressWarnings(\"unchecked\")\n    public void nextShouldNotEqualNotNext()\n    {\n        // Given\n        Result result = mock( Result.class );\n        when( result.columns() ).thenReturn( asList( \"name\" ) );\n        when( result.hasNext() ).thenReturn( true, true, false );\n        when( result.next() ).thenReturn( MapUtil.map( \"name\", \"bob\" ), MapUtil.map( \"name\", \"Steve Brook\" ), null );\n\n        // When\n        CypherAdapterStream cursor = new CypherAdapterStream( result );\n\n        // Then\n        assertThat( cursor, equalsStream(\n                new String[]{\"name\"},\n                eqRecord( equalTo( \"bob\" ) ),\n                eqRecord( equalTo( \"Steve Brook\" ) ) ) );\n    }","id":8151,"modified_method":"@Test\n    public void nextShouldNotEqualNotNext()\n    {\n        // Given\n        Result result = mock( Result.class );\n        when( result.columns() ).thenReturn( Collections.singletonList( \"name\" ) );\n        when( result.hasNext() ).thenReturn( true, true, false );\n        //noinspection unchecked\n        when( result.next() ).thenReturn( MapUtil.map( \"name\", \"bob\" ), MapUtil.map( \"name\", \"Steve Brook\" ), null );\n\n        // When\n        CypherAdapterStream cursor = new CypherAdapterStream( result );\n\n        // Then\n        assertThat( cursor, equalsStream(\n                new String[]{\"name\"},\n                eqRecord( equalTo( \"bob\" ) ),\n                eqRecord( equalTo( \"Steve Brook\" ) ) ) );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Object[] unwind( RecordStream result ) throws Exception\n    {\n        final List<Object> values = new ArrayList<>();\n        result.visitAll( new RecordStream.Visitor()\n        {\n            @Override\n            public void visit( Record record )\n            {\n                values.add( record.copy() );\n            }\n        } );\n        return values.toArray();\n    }","id":8152,"modified_method":"private Record[] unwind( RecordStream result ) throws Exception\n    {\n        final List<Record> values = new ArrayList<>();\n        result.visitAll( new RecordStream.Visitor()\n        {\n            @Override\n            public void visit( Record record )\n            {\n                values.add( record.copy() );\n            }\n        } );\n        return values.toArray(new Record[values.size()]);\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Result( Object[] streamValues )\n        {\n            this.streamValues = streamValues;\n        }","id":8153,"modified_method":"public Result( Record[] streamValues )\n        {\n            this.streamValues = streamValues;\n        }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Object[] records()\n        {\n            return streamValues;\n        }","id":8154,"modified_method":"public Record[] records()\n        {\n            return streamValues;\n        }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void completed( Object attachment )\n    {\n        try\n        {\n            if ( ignored )\n            {\n                calls.add( new Ignored() );\n            }\n            else if ( errors.size() > 0 )\n            {\n                calls.add( new Failure( errors.get( 0 ) ) );\n            }\n            else if ( results.size() > 1 )\n            {\n                throw new IllegalStateException( \"Cannot handle multiple results yet.\" );\n            }\n            else if ( results.size() == 1 )\n            {\n                calls.add( results.get( 0 ) );\n            }\n            else\n            {\n                calls.add( new Success() );\n            }\n        }\n        finally\n        {\n            results.clear();\n            errors.clear();\n            ignored = false;\n        }\n    }","id":8155,"modified_method":"@Override\n    public void completed( A attachment )\n    {\n        try\n        {\n            if ( ignored )\n            {\n                calls.add( new Ignored() );\n            }\n            else if ( errors.size() > 0 )\n            {\n                calls.add( new Failure( errors.get( 0 ) ) );\n            }\n            else if ( results.size() > 1 )\n            {\n                throw new IllegalStateException( \"Cannot handle multiple results yet.\" );\n            }\n            else if ( results.size() == 1 )\n            {\n                calls.add( results.get( 0 ) );\n            }\n            else\n            {\n                calls.add( new Success() );\n            }\n        }\n        finally\n        {\n            results.clear();\n            errors.clear();\n            ignored = false;\n        }\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void ignored( Object attachment )\n    {\n        this.ignored = true;\n    }","id":8156,"modified_method":"@Override\n    public void ignored( A attachment )\n    {\n        this.ignored = true;\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void failure( Neo4jError err, Object attachment )\n    {\n        errors.add( err );\n    }","id":8157,"modified_method":"@Override\n    public void failure( Neo4jError err, A attachment )\n    {\n        errors.add( err );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldFailOn__run__run() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And Given that I've ran one statement\n        session.run( \"RETURN 1\", EMPTY_MAP, null, Session.Callback.NO_OP );\n\n        // When I run a new statement, before consuming the stream\n        session.run( \"RETURN 1\", EMPTY_MAP, null, responses );\n\n        // Then\n        assertThat( responses.next(), failedWith( Status.Request.Invalid ) );\n    }","id":8158,"modified_method":"@Test\n    public void shouldFailOn__run__run() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And Given that I've ran one statement\n        session.run( \"RETURN 1\", EMPTY_PARAMS, null, Session.Callbacks.<StatementMetadata, Object>noop() );\n\n        // When I run a new statement, before consuming the stream\n        session.run( \"RETURN 1\", EMPTY_PARAMS, null, responses );\n\n        // Then\n        assertThat( responses.next(), failedWith( Status.Request.Invalid ) );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldSucceedOn__run__discardAll__run() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And Given that I've ran and pulled one stream\n        session.run( \"RETURN 1\", EMPTY_MAP, null, Session.Callback.NO_OP );\n        session.discardAll( null, Session.Callback.NO_OP );\n\n        // When I run a new statement\n        session.run( \"RETURN 1\", EMPTY_MAP, null, responses );\n\n        // Then\n        assertThat( responses.next(), success() );\n    }","id":8159,"modified_method":"@Test\n    public void shouldSucceedOn__run__discardAll__run() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And Given that I've ran and pulled one stream\n        session.run( \"RETURN 1\", EMPTY_PARAMS, null, Session.Callbacks.<StatementMetadata,Object>noop() );\n        session.discardAll( null, Session.Callbacks.<Void,Object>noop() );\n\n        // When I run a new statement\n        session.run( \"RETURN 1\", EMPTY_PARAMS, null, responses );\n\n        // Then\n        assertThat( responses.next(), success() );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldSucceedOn__run_BEGIN__pullAll__run_COMMIT__pullALL__run_COMMIT() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And Given that I've ran and pulled one stream\n        session.run( \"BEGIN\", EMPTY_MAP, null, Session.Callback.NO_OP );\n        session.pullAll( null, Session.Callback.NO_OP );\n        session.run( \"COMMIT\", EMPTY_MAP, null, NO_OP );\n        session.pullAll( null, Session.Callback.NO_OP );\n\n        // When I run a new statement\n        session.run( \"BEGIN\", EMPTY_MAP, null, responses );\n\n        // Then\n        assertThat( responses.next(), success() );\n    }","id":8160,"modified_method":"@Test\n    public void shouldSucceedOn__run_BEGIN__pullAll__run_COMMIT__pullALL__run_COMMIT() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And Given that I've ran and pulled one stream\n        session.run( \"BEGIN\", EMPTY_PARAMS, null, Session.Callbacks.<StatementMetadata, Object>noop() );\n        session.pullAll( null, Session.Callbacks.<RecordStream,Object>noop() );\n        session.run( \"COMMIT\", EMPTY_PARAMS, null, Session.Callbacks.<StatementMetadata,Object>noop() );\n        session.pullAll( null, Session.Callbacks.<RecordStream,Object>noop() );\n\n        // When I run a new statement\n        session.run( \"BEGIN\", EMPTY_PARAMS, null, responses );\n\n        // Then\n        assertThat( responses.next(), success() );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldFailOn__pullAll__pullAll() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And Given that I've ran and pulled one stream\n        session.run( \"RETURN 1\", EMPTY_MAP, null, Session.Callback.NO_OP );\n        session.pullAll( null, Session.Callback.NO_OP );\n\n        // When I attempt to pull more items from the stream\n        session.pullAll( null, responses );\n\n        // Then\n        assertThat( responses.next(), failedWith( Status.Request.Invalid ) );\n    }","id":8161,"modified_method":"@Test\n    public void shouldFailOn__pullAll__pullAll() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And Given that I've ran and pulled one stream\n        session.run( \"RETURN 1\", EMPTY_PARAMS, null, Session.Callbacks.<StatementMetadata, Object>noop() );\n        session.pullAll( null, Session.Callbacks.<RecordStream,Object>noop() );\n\n        // When I attempt to pull more items from the stream\n        session.pullAll( null, pulling );\n\n        // Then\n        assertThat( pulling.next(), failedWith( Status.Request.Invalid ) );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldFailOn__discardAll__discardAll() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And Given that I've ran and pulled one stream\n        session.run( \"RETURN 1\", EMPTY_MAP, null, Session.Callback.NO_OP );\n        session.discardAll( null, Session.Callback.NO_OP );\n\n        // When I attempt to pull more items from the stream\n        session.discardAll( null, responses );\n\n        // Then\n        assertThat( responses.next(), failedWith( Status.Request.Invalid ) );\n    }","id":8162,"modified_method":"@Test\n    public void shouldFailOn__discardAll__discardAll() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And Given that I've ran and pulled one stream\n        session.run( \"RETURN 1\", EMPTY_PARAMS, null, Session.Callbacks.<StatementMetadata, Object>noop() );\n        session.discardAll( null, Session.Callbacks.<Void,Object>noop() );\n\n        // When I attempt to pull more items from the stream\n        session.discardAll( null, discarding );\n\n        // Then\n        assertThat( discarding.next(), failedWith( Status.Request.Invalid ) );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldFailOn__discardAll__pullAll() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And Given that I've ran and pulled one stream\n        session.run( \"RETURN 1\", EMPTY_MAP, null, Session.Callback.NO_OP );\n        session.discardAll( null, Session.Callback.NO_OP );\n\n        // When I attempt to pull more items from the stream\n        session.pullAll( null, responses );\n\n        // Then\n        assertThat( responses.next(), failedWith( Status.Request.Invalid ) );\n    }","id":8163,"modified_method":"@Test\n    public void shouldFailOn__discardAll__pullAll() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And Given that I've ran and pulled one stream\n        session.run( \"RETURN 1\", EMPTY_PARAMS, null, Session.Callbacks.<StatementMetadata, Object>noop() );\n        session.discardAll( null, Session.Callbacks.<Void,Object>noop() );\n\n        // When I attempt to pull more items from the stream\n        session.pullAll( null, pulling );\n\n        // Then\n        assertThat( pulling.next(), failedWith( Status.Request.Invalid ) );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldFailOn__pullAll__discardAll() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And Given that I've ran and pulled one stream\n        session.run( \"RETURN 1\", EMPTY_MAP, null, Session.Callback.NO_OP );\n        session.pullAll( null, Session.Callback.NO_OP );\n\n        // When I attempt to pull more items from the stream\n        session.discardAll( null, responses );\n\n        // Then\n        assertThat( responses.next(), failedWith( Status.Request.Invalid ) );\n    }","id":8164,"modified_method":"@Test\n    public void shouldFailOn__pullAll__discardAll() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And Given that I've ran and pulled one stream\n        session.run( \"RETURN 1\", EMPTY_PARAMS, null, Session.Callbacks.<StatementMetadata, Object>noop() );\n        session.pullAll( null, Session.Callbacks.<RecordStream,Object>noop() );\n\n        // When I attempt to pull more items from the stream\n        session.discardAll( null, discarding );\n\n        // Then\n        assertThat( discarding.next(), failedWith( Status.Request.Invalid ) );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Object[] runAndPull( Session session, String statement ) throws InterruptedException\n    {\n        RecordingCallback responses = new RecordingCallback();\n        session.run( statement, EMPTY_MAP, null, Session.Callback.NO_OP );\n        session.pullAll( null, responses );\n        return ((RecordingCallback.Result) responses.next()).records();\n    }","id":8165,"modified_method":"private Object[] runAndPull( Session session, String statement ) throws InterruptedException\n    {\n        RecordingCallback<RecordStream, ?> cb = new RecordingCallback<>();\n        session.run( statement, EMPTY_PARAMS, null, Session.Callbacks.<StatementMetadata,Object>noop() );\n        session.pullAll( null, cb );\n        return ((RecordingCallback.Result) cb.next()).records();\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldAllowNewTransactionAfterFailure() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And given I've started a transaction that failed\n        runAndPull( session, \"BEGIN\" );\n        session.run( \"invalid\", EMPTY_MAP, null, Session.Callback.NO_OP );\n        session.acknowledgeFailure( null, Session.Callback.NO_OP );\n\n        // When\n        runAndPull( session, \"BEGIN\" );\n        Object[] stream = runAndPull( session, \"RETURN 1\" );\n\n        // Then\n        assertThat( ((Record) stream[0]).fields()[0], equalTo( (Object) 1L ) );\n\n    }","id":8166,"modified_method":"@Test\n    public void shouldAllowNewTransactionAfterFailure() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And given I've started a transaction that failed\n        runAndPull( session, \"BEGIN\" );\n        session.run( \"invalid\", EMPTY_PARAMS, null, Session.Callbacks.<StatementMetadata, Object>noop() );\n        session.acknowledgeFailure( null, Session.Callbacks.<Void,Object>noop() );\n\n        // When\n        runAndPull( session, \"BEGIN\" );\n        Object[] stream = runAndPull( session, \"RETURN 1\" );\n\n        // Then\n        assertThat( ((Record) stream[0]).fields()[0], equalTo( (Object) 1L ) );\n\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldExecuteStatement() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // When\n        session.run( \"CREATE (n {k:'k'}) RETURN n.k\", EMPTY_MAP, null, responses );\n\n        // Then\n        assertThat( responses.next(), success() );\n\n\n        // When\n        session.pullAll( null, responses );\n\n        // Then\n        assertThat( responses.next(), streamContaining(\n                eqRecord( equalTo( \"k\" ) ) ) );\n    }","id":8167,"modified_method":"@Test\n    public void shouldExecuteStatement() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // When\n        session.run( \"CREATE (n {k:'k'}) RETURN n.k\", Collections.<String,Object>emptyMap(), null, responses );\n\n        // Then\n        assertThat( responses.next(), success() );\n\n\n        // When\n        session.pullAll( null, pulling );\n\n        // Then\n        assertThat( pulling.next(), streamContaining( eqRecord( equalTo( \"k\" ) ) ) );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldSucceedOn__run__pullAll__run() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And Given that I've ran and pulled one stream\n        session.run( \"RETURN 1\", EMPTY_MAP, null, Session.Callback.NO_OP );\n        session.pullAll( null, Session.Callback.NO_OP );\n\n        // When I run a new statement\n        session.run( \"RETURN 1\", EMPTY_MAP, null, responses );\n\n        // Then\n        assertThat( responses.next(), success() );\n    }","id":8168,"modified_method":"@Test\n    public void shouldSucceedOn__run__pullAll__run() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n\n        // And Given that I've ran and pulled one stream\n        session.run( \"RETURN 1\", EMPTY_PARAMS, null, Session.Callbacks.<StatementMetadata, Object>noop() );\n        session.pullAll( null, Session.Callbacks.<RecordStream,Object>noop() );\n\n        // When I run a new statement\n        session.run( \"RETURN 1\", EMPTY_PARAMS, null, responses );\n\n        // Then\n        assertThat( responses.next(), success() );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldHandleImplicitCommitFailure() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n        session.run( \"CREATE (n:Victim)-[:REL]->()\", EMPTY_MAP, null, Session.Callback.NO_OP );\n        session.discardAll( null, Session.Callback.NO_OP );\n\n        // When I perform an action that will fail on commit\n        session.run( \"MATCH (n:Victim) DELETE n\", EMPTY_MAP, null, responses );\n        session.discardAll( null, responses );\n\n        // Then the statement running should have succeeded\n        assertThat( responses.next(), success() );\n\n        // But the stop should have failed, since it implicitly triggers commit and thus triggers a failure\n        assertThat( responses.next(), failedWith( Status.Transaction.ValidationFailed ) );\n    }","id":8169,"modified_method":"@Test\n    public void shouldHandleImplicitCommitFailure() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n        session.run( \"CREATE (n:Victim)-[:REL]->()\", EMPTY_PARAMS, null, Session.Callbacks.<StatementMetadata, Object>noop() );\n        session.discardAll( null, Session.Callbacks.<Void,Object>noop() );\n\n        // When I perform an action that will fail on commit\n        session.run( \"MATCH (n:Victim) DELETE n\", EMPTY_PARAMS, null, responses );\n        session.discardAll( null, discarding );\n\n        // Then the statement running should have succeeded\n        assertThat( responses.next(), success() );\n\n        // But the stop should have failed, since it implicitly triggers commit and thus triggers a failure\n        assertThat( discarding.next(), failedWith( Status.Transaction.ValidationFailed ) );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldHandleFailureDuringResultPublishing() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n        final AtomicReference<Neo4jError> error = new AtomicReference<>();\n\n        // When something fails while publishing the result stream\n        session.run( \"RETURN 1\", EMPTY_MAP, null, Session.Callback.NO_OP );\n        session.pullAll( null, new Session.Callback.Adapter<RecordStream,Object>()\n        {\n            @Override\n            public void result( RecordStream result, Object attachment ) throws Exception\n            {\n                throw new RuntimeException( \"Ooopsies!\" );\n            }\n\n            @Override\n            public void failure( Neo4jError err, Object attachment )\n            {\n                error.set( err );\n            }\n        } );\n\n        // Then\n        assertThat( error.get(), equalTo( new Neo4jError( Status.General.UnknownFailure,\n                \"An unexpected failure occurred: 'Ooopsies!'.\" ) ) );\n    }","id":8170,"modified_method":"@Test\n    public void shouldHandleFailureDuringResultPublishing() throws Throwable\n    {\n        // Given\n        Session session = env.newSession();\n        final AtomicReference<Neo4jError> error = new AtomicReference<>();\n\n        // When something fails while publishing the result stream\n        session.run( \"RETURN 1\", EMPTY_PARAMS, null, Session.Callbacks.<StatementMetadata, Object>noop() );\n        session.pullAll( null, new Session.Callback.Adapter<RecordStream,Object>()\n        {\n            @Override\n            public void result( RecordStream result, Object attachment ) throws Exception\n            {\n                throw new RuntimeException( \"Ooopsies!\" );\n            }\n\n            @Override\n            public void failure( Neo4jError err, Object attachment )\n            {\n                error.set( err );\n            }\n        } );\n\n        // Then\n        assertThat( error.get(), equalTo( new Neo4jError( Status.General.UnknownFailure,\n                \"An unexpected failure occurred: 'Ooopsies!'.\" ) ) );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static Matcher<RecordingCallback.Call> streamContaining( final Matcher<?>... values )\n    {\n        return new TypeSafeMatcher<RecordingCallback.Call>()\n        {\n            @Override\n            protected boolean matchesSafely( RecordingCallback.Call item )\n            {\n                if ( !(item instanceof RecordingCallback.Result) )\n                {\n                    return false;\n                }\n\n                Object[] actual = ((RecordingCallback.Result) item).records();\n                for ( int i = 0; i < values.length; i++ )\n                {\n                    if ( !values[i].matches( actual[i] ) )\n                    {\n                        return false;\n                    }\n                }\n\n                return true;\n            }\n\n            @Override\n            public void describeTo( Description description )\n            {\n                description.appendText( \"Stream{\" );\n                description.appendList( \"values=[\", \"\\n\", \"]\", asList( values ) );\n                description.appendText( \"}\" );\n            }\n        };\n    }","id":8171,"modified_method":"public static Matcher<RecordingCallback.Call> streamContaining( final Matcher<?>... values )\n    {\n        return new TypeSafeMatcher<RecordingCallback.Call>()\n        {\n            @Override\n            protected boolean matchesSafely( RecordingCallback.Call item )\n            {\n                if ( !(item instanceof RecordingCallback.Result) )\n                {\n                    return false;\n                }\n\n                Record[] actual = ((RecordingCallback.Result) item).records();\n                for ( int i = 0; i < values.length; i++ )\n                {\n                    if ( !values[i].matches( actual[i] ) )\n                    {\n                        return false;\n                    }\n                }\n\n                return true;\n            }\n\n            @Override\n            public void describeTo( Description description )\n            {\n                description.appendText( \"Stream{\" );\n                description.appendList( \"values=[\", \"\\n\", \"]\", asList( values ) );\n                description.appendText( \"}\" );\n            }\n        };\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void testSyntaxError() throws Throwable\n    {\n        // Given\n        RecordingCallback responses = new RecordingCallback();\n\n        doThrow( new SyntaxException( \"src/test\" ) ).when( runner ).run( any( SessionState.class ),\n                any( String.class ), any( Map.class ) );\n\n        SessionStateMachine machine = new SessionStateMachine( db, txBridge, runner, NullLog.getInstance() );\n\n        // When\n        machine.run( \"this is nonsense\", EMPTY_MAP, null, responses );\n\n        // Then\n        assertThat( responses.next(), failedWith( Status.Statement.InvalidSyntax ) );\n        assertThat( machine.state(), equalTo( ERROR ) );\n    }","id":8172,"modified_method":"@Test\n    public void testSyntaxError() throws Throwable\n    {\n        // Given\n        RecordingCallback<StatementMetadata, Object> responses = new RecordingCallback<>();\n\n        doThrow( new SyntaxException( \"src/test\" ) ).when( runner ).run( any( SessionState.class ),\n                any( String.class ), any( Map.class ) );\n\n        SessionStateMachine machine = new SessionStateMachine( db, txBridge, runner, NullLog.getInstance() );\n\n        // When\n        machine.run( \"this is nonsense\", EMPTY_PARAMS, null, responses );\n\n        // Then\n        assertThat( responses.next(), failedWith( Status.Statement.InvalidSyntax ) );\n        assertThat( machine.state(), equalTo( ERROR ) );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void testAcknowledgingError() throws Throwable\n    {\n        // Given\n        RecordingCallback messages = new RecordingCallback();\n        SessionStateMachine machine = new SessionStateMachine( db, txBridge, runner, NullLog.getInstance() );\n\n        // Given I've performed some action that causes an error state\n        machine.commitTransaction(); // No tx to be committed!\n\n        // When\n        machine.acknowledgeFailure( null, messages );\n\n        // Then\n        assertThat( messages.next(), success() );\n\n        // And when I know run some other operation\n        machine.run( \"src/test\", EMPTY_MAP, null, messages );\n\n    }","id":8173,"modified_method":"@Test\n    public void testAcknowledgingError() throws Throwable\n    {\n        // Given\n        RecordingCallback<StatementMetadata, Object> messages = new RecordingCallback<>();\n        RecordingCallback<Void, Object> failures = new RecordingCallback<>();\n        SessionStateMachine machine = new SessionStateMachine( db, txBridge, runner, NullLog.getInstance() );\n\n        // Given I've performed some action that causes an error state\n        machine.commitTransaction(); // No tx to be committed!\n\n        // When\n        machine.acknowledgeFailure( null, failures );\n\n        // Then\n        assertThat( failures.next(), success() );\n\n        // And when I know run some other operation\n        machine.run( \"src/test\", EMPTY_PARAMS, null, messages );\n\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void testCantDoAnythingIfInErrorState() throws Throwable\n    {\n        // Given\n        RecordingCallback messages = new RecordingCallback();\n        SessionStateMachine machine = new SessionStateMachine( db, txBridge, runner, NullLog.getInstance() );\n\n        // When I perform some action that causes an error state\n        machine.commitTransaction(); // No tx to be committed!\n\n        // Then it should be in an error state\n        assertThat( machine.state(), equalTo( ERROR ) );\n\n        // and no action other than acknowledging the error should be possible\n        machine.beginTransaction();\n        assertThat( machine.state(), equalTo( ERROR ) );\n\n        machine.beginImplicitTransaction();\n        assertThat( machine.state(), equalTo( ERROR ) );\n\n        machine.commitTransaction();\n        assertThat( machine.state(), equalTo( ERROR ) );\n\n        machine.rollbackTransaction();\n        assertThat( machine.state(), equalTo( ERROR ) );\n\n        // this includes externally triggered actions\n        machine.run( \"src/test\", EMPTY_MAP, null, messages );\n        assertThat( machine.state(), equalTo( ERROR ) );\n        assertThat( messages.next(), ignored() );\n\n        machine.pullAll( null, messages );\n        assertThat( machine.state(), equalTo( ERROR ) );\n        assertThat( messages.next(), ignored() );\n\n        // And nothing at all should have been done\n        verifyNoMoreInteractions( db, runner );\n    }","id":8174,"modified_method":"@Test\n    public void testCantDoAnythingIfInErrorState() throws Throwable\n    {\n        // Given\n        RecordingCallback<StatementMetadata, Object> messages = new RecordingCallback<>();\n        RecordingCallback<RecordStream, Object> pulling = new RecordingCallback<>();\n        SessionStateMachine machine = new SessionStateMachine( db, txBridge, runner, NullLog.getInstance() );\n\n        // When I perform some action that causes an error state\n        machine.commitTransaction(); // No tx to be committed!\n\n        // Then it should be in an error state\n        assertThat( machine.state(), equalTo( ERROR ) );\n\n        // and no action other than acknowledging the error should be possible\n        machine.beginTransaction();\n        assertThat( machine.state(), equalTo( ERROR ) );\n\n        machine.beginImplicitTransaction();\n        assertThat( machine.state(), equalTo( ERROR ) );\n\n        machine.commitTransaction();\n        assertThat( machine.state(), equalTo( ERROR ) );\n\n        machine.rollbackTransaction();\n        assertThat( machine.state(), equalTo( ERROR ) );\n\n        // this includes externally triggered actions\n        machine.run( \"src/test\", EMPTY_PARAMS, null, messages );\n        assertThat( machine.state(), equalTo( ERROR ) );\n        assertThat( messages.next(), ignored() );\n\n        machine.pullAll( null, pulling );\n        assertThat( machine.state(), equalTo( ERROR ) );\n        assertThat( pulling.next(), ignored() );\n\n        // And nothing at all should have been done\n        verifyNoMoreInteractions( db, runner );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void testPublishingError() throws Throwable\n    {\n        // Given\n        RecordingCallback failingCallback = new RecordingCallback()\n        {\n            @Override\n            public void result( Object result, Object attachment )\n            {\n                throw new RuntimeException( \"Well, that didn't work out very well.\" );\n            }\n        };\n        when( runner.run( any( SessionState.class ), any( String.class ), any( Map.class ) ) )\n                .thenReturn( mock( RecordStream.class ) );\n\n        SessionStateMachine machine = new SessionStateMachine( db, txBridge, runner, NullLog.getInstance() );\n\n        // and Given there is a result ready to be retrieved\n        machine.run( \"something\", null, null, Session.Callback.NO_OP );\n\n        // When\n        machine.pullAll( null, failingCallback );\n\n        // Then\n        assertThat( failingCallback.next(), failedWith( Status.General.UnknownFailure ) );\n        assertThat( machine.state(), equalTo( ERROR ) );\n    }","id":8175,"modified_method":"@Test\n    public void testPublishingError() throws Throwable\n    {\n        // Given\n        RecordingCallback<RecordStream, Object> failingCallback = new RecordingCallback<RecordStream, Object>()\n        {\n            @Override\n            public void result( RecordStream result, Object attachment )\n            {\n                throw new RuntimeException( \"Well, that didn't work out very well.\" );\n            }\n        };\n        when( runner.run( any( SessionState.class ), any( String.class ), any( Map.class ) ) )\n                .thenReturn( mock( RecordStream.class ) );\n\n        SessionStateMachine machine = new SessionStateMachine( db, txBridge, runner, NullLog.getInstance() );\n\n        // and Given there is a result ready to be retrieved\n        machine.run( \"something\", null, null, Session.Callbacks.<StatementMetadata, Object>noop() );\n\n        // When\n        machine.pullAll( null, failingCallback );\n\n        // Then\n        assertThat( failingCallback.next(), failedWith( Status.General.UnknownFailure ) );\n        assertThat( machine.state(), equalTo( ERROR ) );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    @SuppressWarnings(\"unchecked\")\n    public void shouldHandleBeginRollback() throws Throwable\n    {\n        // Given\n        RecordingCallback responses = new RecordingCallback();\n        Session session = env.newSession();\n\n        // When\n        session.run( \"BEGIN\", EMPTY_MAP, null, responses );\n        session.discardAll( null, Session.Callback.NO_OP );\n\n        session.run( \"CREATE (n:InTx)\", EMPTY_MAP, null, responses );\n        session.discardAll( null, Session.Callback.NO_OP );\n\n        session.run( \"ROLLBACK\", EMPTY_MAP, null, responses );\n        session.discardAll( null, Session.Callback.NO_OP );\n\n        // Then\n        assertThat( responses.next(), success() );\n        assertThat( responses.next(), success() );\n        assertThat( responses.next(), success() );\n    }","id":8176,"modified_method":"@Test\n    public void shouldHandleBeginRollback() throws Throwable\n    {\n        // Given\n        RecordingCallback<StatementMetadata, ?> responses = new RecordingCallback<>();\n        Session session = env.newSession();\n\n        // When\n        session.run( \"BEGIN\", EMPTY_PARAMS, null, responses );\n        session.discardAll( null, Session.Callbacks.<Void,Object>noop() );\n\n        session.run( \"CREATE (n:InTx)\", EMPTY_PARAMS, null, responses );\n        session.discardAll( null, Session.Callbacks.<Void,Object>noop() );\n\n        session.run( \"ROLLBACK\", EMPTY_PARAMS, null, responses );\n        session.discardAll( null, Session.Callbacks.<Void,Object>noop() );\n\n        // Then\n        assertThat( responses.next(), success() );\n        assertThat( responses.next(), success() );\n        assertThat( responses.next(), success() );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    @SuppressWarnings(\"unchecked\")\n    public void shouldHandleBeginCommit() throws Throwable\n    {\n        // Given\n        RecordingCallback responses = new RecordingCallback();\n        Session session = env.newSession();\n\n        // When\n        session.run( \"BEGIN\", EMPTY_MAP, null, responses );\n        session.discardAll( null, Session.Callback.NO_OP );\n\n        session.run( \"CREATE (n:InTx)\", EMPTY_MAP, null, responses );\n        session.discardAll( null, Session.Callback.NO_OP );\n\n        session.run( \"COMMIT\", EMPTY_MAP, null, responses );\n        session.discardAll( null, Session.Callback.NO_OP );\n\n        // Then\n        assertThat( responses.next(), success() );\n        assertThat( responses.next(), success() );\n        assertThat( responses.next(), success() );\n    }","id":8177,"modified_method":"@Test\n    public void shouldHandleBeginCommit() throws Throwable\n    {\n        // Given\n        RecordingCallback<StatementMetadata, ?> responses = new RecordingCallback<>();\n        Session session = env.newSession();\n\n        // When\n        session.run( \"BEGIN\", EMPTY_PARAMS, null, responses );\n        session.discardAll( null, Session.Callbacks.<Void,Object>noop() );\n\n        session.run( \"CREATE (n:InTx)\", EMPTY_PARAMS, null, responses );\n        session.discardAll( null, Session.Callbacks.<Void,Object>noop() );\n\n        session.run( \"COMMIT\", EMPTY_PARAMS, null, responses );\n        session.discardAll( null, Session.Callbacks.<Void,Object>noop() );\n\n        // Then\n        assertThat( responses.next(), success() );\n        assertThat( responses.next(), success() );\n        assertThat( responses.next(), success() );\n    }","commit_id":"6c25ba096f31540674bb78905bcbcea34bb68899","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void execute()\n        throws MojoExecutionException, MojoFailureException\n    {\n        // Initializes ear modules\n        super.execute();\n\n        getLog().debug( \" ======= EarMojo settings =======\" );\n        getLog().debug( \"earSourceDirectory[\" + earSourceDirectory + \"]\" );\n        getLog().debug( \"manifestLocation[\" + manifestFile + \"]\" );\n        getLog().debug( \"applicationXmlLocation[\" + applicationXmlFile + \"]\" );\n        getLog().debug( \"workDirectory[\" + getWorkDirectory() + \"]\" );\n        getLog().debug( \"outputDirectory[\" + outputDirectory + \"]\" );\n        getLog().debug( \"finalName[\" + finalName + \"]\" );\n\n        // Copy modules\n        try\n        {\n            for ( Iterator iter = getModules().iterator(); iter.hasNext(); )\n            {\n                EarModule module = (EarModule) iter.next();\n                getLog().info( \"Copying artifact[\" + module + \"] to[\" + module.getUri() + \"]\" );\n                File destinationFile = buildDestinationFile( getWorkDirectory(), module.getUri() );\n\n                File sourceFile = module.getArtifact().getFile();\n\n                if ( !sourceFile.isFile() )\n                {\n                    throw new MojoExecutionException( \"Cannot copy a directory: \" + sourceFile.getAbsolutePath() +\n                        \"; Did you package/install \" + module.getArtifact() + \"?\" );\n                }\n\n                FileUtils.copyFile( module.getArtifact().getFile(), destinationFile );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying EAR modules\", e );\n        }\n\n        // Copy source files\n        try\n        {\n            File earSourceDir = earSourceDirectory;\n            if ( earSourceDir.exists() )\n            {\n                getLog().info( \"Copy ear sources to \" + getWorkDirectory().getAbsolutePath() );\n                FileUtils.copyDirectoryStructure( earSourceDir, getWorkDirectory() );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying EAR sources\", e );\n        }\n\n        // Copy resources files\n        try\n        {\n            if ( resourcesDir.exists() )\n            {\n                getLog().info( \"Copy ear resources to \" + getWorkDirectory().getAbsolutePath() );\n                FileUtils.copyDirectoryStructure( resourcesDir, getWorkDirectory() );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying EAR resources\", e );\n        }\n\n        // Check if deployment descriptor is there\n        File ddFile = new File( getWorkDirectory(), APPLICATION_XML_URI );\n        if ( !ddFile.exists() )\n        {\n            throw new MojoExecutionException(\n                \"Deployment descriptor: \" + ddFile.getAbsolutePath() + \" does not exist.\" );\n        }\n\n        try\n        {\n            File earFile = new File( outputDirectory, finalName + \".ear\" );\n            MavenArchiver archiver = new MavenArchiver();\n            archiver.setArchiver( jarArchiver );\n            archiver.setOutputFile( earFile );\n\n            // Include custom manifest if necessary\n            includeCustomManifestFile();\n\n            archiver.getArchiver().addDirectory( getWorkDirectory() );\n            archiver.createArchive( getProject(), archive );\n\n            project.getArtifact().setFile( earFile );\n        }\n        catch ( Exception e )\n        {\n            throw new MojoExecutionException( \"Error assembling EAR\", e );\n        }\n    }","id":8178,"modified_method":"public void execute()\n        throws MojoExecutionException, MojoFailureException\n    {\n        // Initializes ear modules\n        super.execute();\n\n        getLog().debug( \" ======= EarMojo settings =======\" );\n        getLog().debug( \"earSourceDirectory[\" + earSourceDirectory + \"]\" );\n        getLog().debug( \"manifestLocation[\" + manifestFile + \"]\" );\n        getLog().debug( \"applicationXml[\" + getApplicationXml() + \"]\" );\n        getLog().debug( \"workDirectory[\" + getWorkDirectory() + \"]\" );\n        getLog().debug( \"outputDirectory[\" + outputDirectory + \"]\" );\n        getLog().debug( \"finalName[\" + finalName + \"]\" );\n\n        // Copy modules\n        try\n        {\n            for ( Iterator iter = getModules().iterator(); iter.hasNext(); )\n            {\n                EarModule module = (EarModule) iter.next();\n                getLog().info( \"Copying artifact[\" + module + \"] to[\" + module.getUri() + \"]\" );\n                File destinationFile = buildDestinationFile( getWorkDirectory(), module.getUri() );\n\n                File sourceFile = module.getArtifact().getFile();\n\n                if ( !sourceFile.isFile() )\n                {\n                    throw new MojoExecutionException( \"Cannot copy a directory: \" + sourceFile.getAbsolutePath() +\n                        \"; Did you package/install \" + module.getArtifact() + \"?\" );\n                }\n\n                FileUtils.copyFile( module.getArtifact().getFile(), destinationFile );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying EAR modules\", e );\n        }\n\n        // Copy source files\n        try\n        {\n            File earSourceDir = earSourceDirectory;\n            if ( earSourceDir.exists() )\n            {\n                getLog().info( \"Copy ear sources to \" + getWorkDirectory().getAbsolutePath() );\n                String[] fileNames = getEarFiles( earSourceDir );\n                for ( int i = 0; i < fileNames.length; i++ )\n                {\n                    FileUtils.copyFile( new File( earSourceDir, fileNames[i] ),\n                                        new File( getWorkDirectory(), fileNames[i] ) );\n                }\n            }\n\n            if ( applicationXml != null && !\"\".equals( applicationXml ) )\n            {\n                //rename to application.xml\n                getLog().info( \"Including custom application.xml[\" + applicationXml + \"]\" );\n                File metaInfDir = new File( getWorkDirectory(), META_INF );\n                FileUtils.copyFile( new File( applicationXml ), new File( metaInfDir, \"/application.xml\" ) );\n            }\n\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying EAR sources\", e );\n        }\n\n        // Copy resources files\n        try\n        {\n            if ( resourcesDir.exists() )\n            {\n                getLog().info( \"Copy ear resources to \" + getWorkDirectory().getAbsolutePath() );\n                String[] fileNames = getEarFiles( resourcesDir );\n                for ( int i = 0; i < fileNames.length; i++ )\n                {\n                    FileUtils.copyFile( new File( resourcesDir, fileNames[i] ),\n                                        new File( getWorkDirectory(), fileNames[i] ) );\n                }\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying EAR resources\", e );\n        }\n\n        // Check if deployment descriptor is there\n        File ddFile = new File( getWorkDirectory(), APPLICATION_XML_URI );\n        if ( !ddFile.exists() )\n        {\n            throw new MojoExecutionException(\n                \"Deployment descriptor: \" + ddFile.getAbsolutePath() + \" does not exist.\" );\n        }\n\n        try\n        {\n            File earFile = new File( outputDirectory, finalName + \".ear\" );\n            MavenArchiver archiver = new MavenArchiver();\n            archiver.setArchiver( jarArchiver );\n            archiver.setOutputFile( earFile );\n\n            // Include custom manifest if necessary\n            includeCustomManifestFile();\n\n            archiver.getArchiver().addDirectory( getWorkDirectory() );\n            archiver.createArchive( getProject(), archive );\n\n            project.getArtifact().setFile( earFile );\n        }\n        catch ( Exception e )\n        {\n            throw new MojoExecutionException( \"Error assembling EAR\", e );\n        }\n    }","commit_id":"302a48ba4682e423961b2412e18fb8ec643ca3dc","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void execute()\n        throws MojoExecutionException, MojoFailureException\n    {\n        // Initializes ear modules\n        super.execute();\n\n        getLog().debug( \" ======= EarMojo settings =======\" );\n        getLog().debug( \"earSourceDirectory[\" + earSourceDirectory + \"]\" );\n        getLog().debug( \"manifestLocation[\" + manifestFile + \"]\" );\n        getLog().debug( \"applicationXmlLocation[\" + applicationXmlFile + \"]\" );\n        getLog().debug( \"workDirectory[\" + getWorkDirectory() + \"]\" );\n        getLog().debug( \"outputDirectory[\" + outputDirectory + \"]\" );\n        getLog().debug( \"finalName[\" + finalName + \"]\" );\n\n        // Copy modules\n        try\n        {\n            for ( Iterator iter = getModules().iterator(); iter.hasNext(); )\n            {\n                EarModule module = (EarModule) iter.next();\n                getLog().info( \"Copying artifact[\" + module + \"] to[\" + module.getUri() + \"]\" );\n                File destinationFile = buildDestinationFile( getWorkDirectory(), module.getUri() );\n\n                File sourceFile = module.getArtifact().getFile();\n\n                if ( !sourceFile.isFile() )\n                {\n                    throw new MojoExecutionException( \"Cannot copy a directory: \" + sourceFile.getAbsolutePath() +\n                        \"; Did you package/install \" + module.getArtifact() + \"?\" );\n                }\n\n                FileUtils.copyFile( module.getArtifact().getFile(), destinationFile );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying EAR modules\", e );\n        }\n\n        // Copy source files\n        try\n        {\n            File earSourceDir = earSourceDirectory;\n            if ( earSourceDir.exists() )\n            {\n                getLog().info( \"Copy ear sources to \" + getWorkDirectory().getAbsolutePath() );\n                FileUtils.copyDirectoryStructure( earSourceDir, getWorkDirectory() );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying EAR sources\", e );\n        }\n\n        // Copy resources files\n        try\n        {\n            if ( resourcesDir.exists() )\n            {\n                getLog().info( \"Copy ear resources to \" + getWorkDirectory().getAbsolutePath() );\n                FileUtils.copyDirectoryStructure( resourcesDir, getWorkDirectory() );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying EAR resources\", e );\n        }\n\n        // Check if deployment descriptor is there\n        File ddFile = new File( getWorkDirectory(), APPLICATION_XML_URI );\n        if ( !ddFile.exists() )\n        {\n            throw new MojoExecutionException(\n                \"Deployment descriptor: \" + ddFile.getAbsolutePath() + \" does not exist.\" );\n        }\n\n        try\n        {\n            File earFile = new File( outputDirectory, finalName + \".ear\" );\n            MavenArchiver archiver = new MavenArchiver();\n            archiver.setArchiver( jarArchiver );\n            archiver.setOutputFile( earFile );\n\n            // Include custom manifest if necessary\n            includeCustomManifestFile();\n\n            archiver.getArchiver().addDirectory( getWorkDirectory() );\n            archiver.createArchive( getProject(), archive );\n\n            project.getArtifact().setFile( earFile );\n        }\n        catch ( Exception e )\n        {\n            throw new MojoExecutionException( \"Error assembling EAR\", e );\n        }\n    }","id":8179,"modified_method":"public void execute()\n        throws MojoExecutionException, MojoFailureException\n    {\n        // Initializes ear modules\n        super.execute();\n\n        getLog().debug( \" ======= EarMojo settings =======\" );\n        getLog().debug( \"earSourceDirectory[\" + earSourceDirectory + \"]\" );\n        getLog().debug( \"manifestLocation[\" + manifestFile + \"]\" );\n        getLog().debug( \"applicationXml[\" + getApplicationXml() + \"]\" );\n        getLog().debug( \"workDirectory[\" + getWorkDirectory() + \"]\" );\n        getLog().debug( \"outputDirectory[\" + outputDirectory + \"]\" );\n        getLog().debug( \"finalName[\" + finalName + \"]\" );\n\n        // Copy modules\n        try\n        {\n            for ( Iterator iter = getModules().iterator(); iter.hasNext(); )\n            {\n                EarModule module = (EarModule) iter.next();\n                getLog().info( \"Copying artifact[\" + module + \"] to[\" + module.getUri() + \"]\" );\n                File destinationFile = buildDestinationFile( getWorkDirectory(), module.getUri() );\n\n                File sourceFile = module.getArtifact().getFile();\n\n                if ( !sourceFile.isFile() )\n                {\n                    throw new MojoExecutionException( \"Cannot copy a directory: \" + sourceFile.getAbsolutePath() +\n                        \"; Did you package/install \" + module.getArtifact() + \"?\" );\n                }\n\n                FileUtils.copyFile( module.getArtifact().getFile(), destinationFile );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying EAR modules\", e );\n        }\n\n        // Copy source files\n        try\n        {\n            File earSourceDir = earSourceDirectory;\n            if ( earSourceDir.exists() )\n            {\n                getLog().info( \"Copy ear sources to \" + getWorkDirectory().getAbsolutePath() );\n                String[] fileNames = getEarFiles( earSourceDir );\n                for ( int i = 0; i < fileNames.length; i++ )\n                {\n                    FileUtils.copyFile( new File( earSourceDir, fileNames[i] ),\n                                        new File( getWorkDirectory(), fileNames[i] ) );\n                }\n            }\n\n            if ( applicationXml != null && !\"\".equals( applicationXml ) )\n            {\n                //rename to application.xml\n                getLog().info( \"Including custom application.xml[\" + applicationXml + \"]\" );\n                File metaInfDir = new File( getWorkDirectory(), META_INF );\n                FileUtils.copyFile( new File( applicationXml ), new File( metaInfDir, \"/application.xml\" ) );\n            }\n\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying EAR sources\", e );\n        }\n\n        // Copy resources files\n        try\n        {\n            if ( resourcesDir.exists() )\n            {\n                getLog().info( \"Copy ear resources to \" + getWorkDirectory().getAbsolutePath() );\n                String[] fileNames = getEarFiles( resourcesDir );\n                for ( int i = 0; i < fileNames.length; i++ )\n                {\n                    FileUtils.copyFile( new File( resourcesDir, fileNames[i] ),\n                                        new File( getWorkDirectory(), fileNames[i] ) );\n                }\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying EAR resources\", e );\n        }\n\n        // Check if deployment descriptor is there\n        File ddFile = new File( getWorkDirectory(), APPLICATION_XML_URI );\n        if ( !ddFile.exists() )\n        {\n            throw new MojoExecutionException(\n                \"Deployment descriptor: \" + ddFile.getAbsolutePath() + \" does not exist.\" );\n        }\n\n        try\n        {\n            File earFile = new File( outputDirectory, finalName + \".ear\" );\n            MavenArchiver archiver = new MavenArchiver();\n            archiver.setArchiver( jarArchiver );\n            archiver.setOutputFile( earFile );\n\n            // Include custom manifest if necessary\n            includeCustomManifestFile();\n\n            archiver.getArchiver().addDirectory( getWorkDirectory() );\n            archiver.createArchive( getProject(), archive );\n\n            project.getArtifact().setFile( earFile );\n        }\n        catch ( Exception e )\n        {\n            throw new MojoExecutionException( \"Error assembling EAR\", e );\n        }\n    }","commit_id":"19ab81b689a66c161c05718777232f448a7761cc","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * Tests weak iterators cleanup after garbage collections.\n     *\n     * @throws Exception If failed.\n     */\n    public void testIteratorsCleanup() throws Exception {\n        final GridCache<Long, Long> cache = populate();\n\n        IgniteInternalFuture<?> offHeapFut = multithreadedAsync(new Runnable() {\n            @Override public void run() {\n                try {\n                    Iterator<Map.Entry<Long, Long>> ohIt = cache.offHeapIterator();\n\n                    int cnt = 0;\n\n                    while (ohIt.hasNext()) {\n                        Map.Entry<Long, Long> e = ohIt.next();\n\n                        assertEquals(e.getKey(), e.getValue());\n\n                        cnt++;\n                    }\n\n                    assertEquals(cache.offHeapEntriesCount(), cnt);\n                }\n                catch (IgniteCheckedException ignored) {\n                    fail();\n                }\n            }\n        }, 20);\n\n        IgniteInternalFuture<?> swapFut = multithreadedAsync(new Runnable() {\n            @Override public void run() {\n                try {\n                    Iterator<Map.Entry<Long, Long>> ohIt = cache.swapIterator();\n\n                    int cnt = 0;\n\n                    while (ohIt.hasNext()) {\n                        Map.Entry<Long, Long> e = ohIt.next();\n\n                        assertEquals(e.getKey(), e.getValue());\n\n                        cnt++;\n                    }\n\n                    assertEquals(ENTRY_CNT - cache.offHeapEntriesCount(), cnt);\n                }\n                catch (IgniteCheckedException ignored) {\n                    fail();\n                }\n            }\n        }, 20);\n\n        offHeapFut.get();\n        swapFut.get();\n\n        System.gc();\n\n        // Runs iterator queue cleanup in GridCacheSwapManager.read method.\n        cache.get(1L + ENTRY_CNT);\n\n        assertEquals(0, ((IgniteKernal)grid(0)).internalCache().context().swap().iteratorSetSize());\n    }","id":8180,"modified_method":"/**\n     * Tests weak iterators cleanup after garbage collections.\n     *\n     * @throws Exception If failed.\n     */\n    public void testIteratorsCleanup() throws Exception {\n        final IgniteCache<Long, Long> cache = populate();\n\n        IgniteInternalFuture<?> offHeapFut = multithreadedAsync(new Runnable() {\n            @Override public void run() {\n                int cnt = 0;\n\n                for (Cache.Entry<Long, Long> e : cache.localEntries(CachePeekMode.OFFHEAP)) {\n                    assertEquals(e.getKey(), e.getValue());\n\n                    cnt++;\n                }\n\n                assertEquals(cache.localSize(CachePeekMode.OFFHEAP), cnt);\n\n            }\n        }, 20);\n\n        IgniteInternalFuture<?> swapFut = multithreadedAsync(new Runnable() {\n            @Override public void run() {\n                int cnt = 0;\n\n                for (Cache.Entry<Long, Long> e : cache.localEntries(CachePeekMode.SWAP)) {\n                    assertEquals(e.getKey(), e.getValue());\n\n                    cnt++;\n                }\n\n                assertEquals(ENTRY_CNT - cache.localSize(CachePeekMode.OFFHEAP), cnt);\n            }\n        }, 20);\n\n        offHeapFut.get();\n        swapFut.get();\n\n        System.gc();\n\n        // Runs iterator queue cleanup in GridCacheSwapManager.read method.\n        cache.get(1L + ENTRY_CNT);\n\n        assertEquals(0, ((IgniteKernal)grid(0)).internalCache().context().swap().iteratorSetSize());\n    }","commit_id":"848e1de73402624589b28ba5944167cc22007711","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Tests.\n     *\n     * @throws Exception If failed.\n     */\n    public void testUnswapAll() throws Exception {\n        GridCache<Long, Long> cache = populate();\n\n        Collection<Long> keys = new HashSet<>();\n\n        for (long i = from; i < to; i++)\n            keys.add(i);\n\n        cache.promoteAll(keys);\n\n        assertEquals(0, swappedCnt.get());\n        assertEquals(to - from, unswapedCnt.get() + onheapedCnt.get());\n\n        checkEntries(cache);\n\n        assertEquals(to - from, unswapedCnt.get() + onheapedCnt.get());\n    }","id":8181,"modified_method":"/**\n     * Tests.\n     *\n     * @throws Exception If failed.\n     */\n    public void testUnswapAll() throws Exception {\n        IgniteCache<Long, Long> cache = populate();\n\n        Set<Long> keys = new HashSet<>();\n\n        for (long i = from; i < to; i++)\n            keys.add(i);\n\n        cache.localPromote(keys);\n\n        assertEquals(0, swappedCnt.get());\n        assertEquals(to - from, unswapedCnt.get() + onheapedCnt.get());\n\n        checkEntries(cache);\n\n        assertEquals(to - from, unswapedCnt.get() + onheapedCnt.get());\n    }","commit_id":"848e1de73402624589b28ba5944167cc22007711","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Tests {@link CacheProjection#promote(Object)} behavior on offheaped entries.\n     *\n     * @throws Exception If failed.\n     */\n    public void testUnswap() throws Exception {\n        GridCache<Long, Long> cache = populate();\n\n        for (long i = from; i < to; i++) {\n            Long val = cache.promote(i);\n\n            assertNotNull(val);\n            assertEquals(i, val.longValue());\n\n            assertEquals(i - from + 1, unswapedCnt.get() + onheapedCnt.get());\n        }\n\n        assertEquals(0, swappedCnt.get());\n\n        checkEntries(cache);\n\n        assertEquals(0, swappedCnt.get());\n        assertEquals(0, offheapedCnt.get());\n        assertEquals(to - from, unswapedCnt.get() + onheapedCnt.get());\n    }","id":8182,"modified_method":"/**\n     * Tests {@link IgniteCache#localPromote(java.util.Set)} behavior on offheaped entries.\n     *\n     * @throws Exception If failed.\n     */\n    public void testUnswap() throws Exception {\n        IgniteCache<Long, Long> cache = populate();\n\n        for (long i = from; i < to; i++) {\n            cache.localPromote(Collections.singleton(i));\n\n            Long val = cache.localPeek(i);\n\n            assertNotNull(val);\n            assertEquals(i, val.longValue());\n\n            assertEquals(i - from + 1, unswapedCnt.get() + onheapedCnt.get());\n        }\n\n        assertEquals(0, swappedCnt.get());\n\n        checkEntries(cache);\n\n        assertEquals(0, swappedCnt.get());\n        assertEquals(0, offheapedCnt.get());\n        assertEquals(to - from, unswapedCnt.get() + onheapedCnt.get());\n    }","commit_id":"848e1de73402624589b28ba5944167cc22007711","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Tests behavior on offheaped entries.\n     *\n     * @throws Exception If failed.\n     */\n    public void testGet() throws Exception {\n        GridCache<Long, Long> cache = populate();\n\n        for (long i = from; i < to; i++) {\n            Long val = cache.get(i);\n\n            assertNotNull(val);\n            assertEquals(i, val.longValue());\n        }\n\n        assertEquals(0, swappedCnt.get());\n        assertEquals(0, offheapedCnt.get());\n        assertEquals(to - from, unswapedCnt.get() + onheapedCnt.get());\n\n        checkEntries(cache);\n\n        assertEquals(to - from, unswapedCnt.get() + onheapedCnt.get());\n    }","id":8183,"modified_method":"/**\n     * Tests behavior on offheaped entries.\n     *\n     * @throws Exception If failed.\n     */\n    public void testGet() throws Exception {\n        IgniteCache<Long, Long> cache = populate();\n\n        for (long i = from; i < to; i++) {\n            Long val = cache.get(i);\n\n            assertNotNull(val);\n            assertEquals(i, val.longValue());\n        }\n\n        assertEquals(0, swappedCnt.get());\n        assertEquals(0, offheapedCnt.get());\n        assertEquals(to - from, unswapedCnt.get() + onheapedCnt.get());\n\n        checkEntries(cache);\n\n        assertEquals(to - from, unswapedCnt.get() + onheapedCnt.get());\n    }","commit_id":"848e1de73402624589b28ba5944167cc22007711","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Tests {@link GridCache#peek(Object)} behavior on offheaped entries.\n     *\n     * @throws Exception If failed.\n     */\n    public void testPeek() throws Exception {\n        GridCache<Long, Long> cache = populate();\n\n        for (long i = from; i < to; i++) {\n            assertNull(cache.peek(i));\n\n            Long val = cache.peek(i, F.asList(SWAP));\n\n            assertNotNull(val);\n            assertEquals(i, val.longValue());\n        }\n\n        assert swappedCnt.get() == 0;\n        assert unswapedCnt.get() == 0;\n        assert offheapedCnt.get() == 0;\n        assert onheapedCnt.get() == 0;\n\n        checkEntries(cache);\n    }","id":8184,"modified_method":"/**\n     * Tests {@link GridCache#peek(Object)} behavior on offheaped entries.\n     *\n     * @throws Exception If failed.\n     */\n    public void testPeek() throws Exception {\n        IgniteCache<Long, Long> cache = populate();\n\n        for (long i = from; i < to; i++) {\n            assertNull(cache.localPeek(i));\n\n            Long val = cache.localPeek(i, CachePeekMode.SWAP);\n\n            assertNotNull(val);\n            assertEquals(i, val.longValue());\n        }\n\n        assert swappedCnt.get() == 0;\n        assert unswapedCnt.get() == 0;\n        assert offheapedCnt.get() == 0;\n        assert onheapedCnt.get() == 0;\n\n        checkEntries(cache);\n    }","commit_id":"848e1de73402624589b28ba5944167cc22007711","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Populates cache with entries and evicts them partially to offheap partially to swap.\n     *\n     * @return Cache to use in tests.\n     * @throws Exception If failed.\n     */\n    private GridCache<Long, Long> populate() throws Exception {\n        GridCache<Long, Long> cache = ((IgniteKernal)grid(0)).getCache(null);\n\n        assertEquals(0, cache.size());\n        assertEquals(0, cache.offHeapEntriesCount());\n\n        assert offheapedCnt.get() == 0;\n        assert onheapedCnt.get() == 0;\n        assert swappedCnt.get() == 0;\n        assert unswapedCnt.get() == 0;\n\n        for (long i = 0; i < ENTRY_CNT; i++) {\n            info(\"putting: \" + i);\n\n            cache.put(i, i);\n\n            Long val = cache.peek(i);\n\n            assert val != null;\n            assert val == i;\n\n            GridCacheEntryEx entry = dht(cache).peekEx(i);\n\n            assert entry != null;\n\n            versions.put(i, entry.version());\n        }\n\n        assertEquals(0, offheapedCnt.get());\n        assertEquals(0, onheapedCnt.get());\n        assertEquals(0, swappedCnt.get());\n        assertEquals(0, unswapedCnt.get());\n\n        assertEquals(ENTRY_CNT, cache.size());\n        assertEquals(0, cache.offHeapEntriesCount());\n\n        for (long i = 0; i < ENTRY_CNT; i++) {\n            cache.evict(i);\n\n            assertEquals(ENTRY_CNT - i - 1, cache.size());\n        }\n\n        // Ensure that part of entries located in off-heap memory and part is swapped.\n        assertEquals(0, cache.size());\n        assertTrue(cache.offHeapEntriesCount() > 0);\n        assertTrue(cache.offHeapEntriesCount() < ENTRY_CNT);\n\n        // Setting test window to catch near half of both offheaped and swapped entries.\n        from = cache.offHeapEntriesCount() / 2;\n        to = (ENTRY_CNT + cache.offHeapEntriesCount()) / 2;\n\n        for (long i = 0; i < ENTRY_CNT; i++)\n            assertNull(cache.peek(i));\n\n        assertEquals(ENTRY_CNT, offheapedCnt.get());\n        assertEquals(0, onheapedCnt.get());\n        assertTrue(swappedCnt.get() > 0);\n        assertEquals(0, unswapedCnt.get());\n\n        resetCounters();\n\n        return cache;\n    }","id":8185,"modified_method":"/**\n     * Populates cache with entries and evicts them partially to offheap partially to swap.\n     *\n     * @return Cache to use in tests.\n     * @throws Exception If failed.\n     */\n    private IgniteCache<Long, Long> populate() throws Exception {\n        IgniteCache<Long, Long> cache = grid(0).cache(null);\n\n        assertEquals(0, cache.size());\n        assertEquals(0, cache.localSize(CachePeekMode.OFFHEAP));\n\n        assert offheapedCnt.get() == 0;\n        assert onheapedCnt.get() == 0;\n        assert swappedCnt.get() == 0;\n        assert unswapedCnt.get() == 0;\n\n        for (long i = 0; i < ENTRY_CNT; i++) {\n            info(\"putting: \" + i);\n\n            cache.put(i, i);\n\n            Long val = cache.localPeek(i);\n\n            assert val != null;\n            assert val == i;\n\n            GridCacheEntryEx entry = dht(cache).peekEx(i);\n\n            assert entry != null;\n\n            versions.put(i, entry.version());\n        }\n\n        assertEquals(0, offheapedCnt.get());\n        assertEquals(0, onheapedCnt.get());\n        assertEquals(0, swappedCnt.get());\n        assertEquals(0, unswapedCnt.get());\n\n        assertEquals(ENTRY_CNT, cache.size());\n        assertEquals(0, cache.localSize(CachePeekMode.OFFHEAP));\n\n        for (long i = 0; i < ENTRY_CNT; i++) {\n            cache.localEvict(Collections.singleton(i));\n\n            assertEquals(ENTRY_CNT - i - 1, cache.size());\n        }\n\n        // Ensure that part of entries located in off-heap memory and part is swapped.\n        assertEquals(0, cache.size());\n        assertTrue(cache.localSize(CachePeekMode.OFFHEAP) > 0);\n        assertTrue(cache.localSize(CachePeekMode.OFFHEAP) < ENTRY_CNT);\n\n        // Setting test window to catch near half of both offheaped and swapped entries.\n        from = cache.localSize(CachePeekMode.OFFHEAP) / 2;\n        to = (ENTRY_CNT + cache.localSize(CachePeekMode.OFFHEAP)) / 2;\n\n        for (long i = 0; i < ENTRY_CNT; i++)\n            assertNull(cache.localPeek(i));\n\n        assertEquals(ENTRY_CNT, offheapedCnt.get());\n        assertEquals(0, onheapedCnt.get());\n        assertTrue(swappedCnt.get() > 0);\n        assertEquals(0, unswapedCnt.get());\n\n        resetCounters();\n\n        return cache;\n    }","commit_id":"848e1de73402624589b28ba5944167cc22007711","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Tests SQL queries over evicted entries.\n     *\n     * @throws Exception If failed.\n     */\n    public void testSql() throws Exception {\n        GridCache<Long, Long> cache = populate();\n\n        Collection<Map.Entry<Long, Long>> res = cache.queries().\n            createSqlQuery(Long.class, \"_val >= ? and _val < ?\").\n            execute(from, to).\n            get();\n\n        assertEquals(to - from, res.size());\n\n        for (Map.Entry<Long, Long> entry : res) {\n            assertNotNull(entry);\n            assertNotNull(entry.getKey());\n            assertNotNull(entry.getValue());\n            assert entry.getKey().equals(entry.getValue());\n        }\n\n        assertEquals(0, offheapedCnt.get());\n        assertEquals(0, onheapedCnt.get());\n\n        checkEntries(cache);\n\n        assertEquals(0, offheapedCnt.get());\n        assertEquals(to - from, onheapedCnt.get() + unswapedCnt.get());\n    }","id":8186,"modified_method":"/**\n     * Tests SQL queries over evicted entries.\n     *\n     * @throws Exception If failed.\n     */\n    public void testSql() throws Exception {\n        IgniteCache<Long, Long> cache = populate();\n\n        Collection<Cache.Entry<Long, Long>> res = cache.query(\n            new SqlQuery<Long, Long>(Long.class, \"_val >= ? and _val < ?\").\n            setArgs(from, to)).\n            getAll();\n\n        assertEquals(to - from, res.size());\n\n        for (Cache.Entry<Long, Long> entry : res) {\n            assertNotNull(entry);\n            assertNotNull(entry.getKey());\n            assertNotNull(entry.getValue());\n            assert entry.getKey().equals(entry.getValue());\n        }\n\n        assertEquals(0, offheapedCnt.get());\n        assertEquals(0, onheapedCnt.get());\n\n        checkEntries(cache);\n\n        assertEquals(0, offheapedCnt.get());\n        assertEquals(to - from, onheapedCnt.get() + unswapedCnt.get());\n    }","commit_id":"848e1de73402624589b28ba5944167cc22007711","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Checks that entries in cache are correct after being unswapped. If entry is still swapped, it will be unswapped\n     * in this method.\n     *\n     * @param cache Cache.\n     * @throws Exception In case of error.\n     */\n    private void checkEntries(GridCache<Long, Long> cache) throws Exception {\n        for (long i = from; i < to; i++) {\n            cache.promote(i);\n\n            GridCacheEntryEx entry = dht(cache).entryEx(i);\n\n            assert entry != null;\n            assert entry.key() != null;\n\n            Long val = entry.rawGet().value(entry.context().cacheObjectContext(), false);\n\n            assertNotNull(\"Value null for key: \" + i, val);\n            assertEquals(entry.key().value(entry.context().cacheObjectContext(), false), val);\n            assertEquals(entry.version(), versions.get(i));\n        }\n\n        assertEquals(0, swappedCnt.get());\n        assertEquals(0, offheapedCnt.get());\n    }","id":8187,"modified_method":"/**\n     * Checks that entries in cache are correct after being unswapped. If entry is still swapped, it will be unswapped\n     * in this method.\n     *\n     * @param cache Cache.\n     * @throws Exception In case of error.\n     */\n    private void checkEntries(IgniteCache<Long, Long> cache) throws Exception {\n        for (long i = from; i < to; i++) {\n            cache.localPromote(Collections.singleton(i));\n\n            GridCacheEntryEx entry = dht(cache).entryEx(i);\n\n            assert entry != null;\n            assert entry.key() != null;\n\n            Long val = entry.rawGet().value(entry.context().cacheObjectContext(), false);\n\n            assertNotNull(\"Value null for key: \" + i, val);\n            assertEquals(entry.key().value(entry.context().cacheObjectContext(), false), val);\n            assertEquals(entry.version(), versions.get(i));\n        }\n\n        assertEquals(0, swappedCnt.get());\n        assertEquals(0, offheapedCnt.get());\n    }","commit_id":"848e1de73402624589b28ba5944167cc22007711","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Tests offheap and swap iterators.\n     *\n     * @throws Exception If failed.\n     */\n    public void testIterators() throws Exception {\n        GridCache<Long, Long> cache = populate();\n\n        int cnt = 0;\n\n        Iterator<Map.Entry<Long, Long>> ohIt = cache.offHeapIterator();\n\n        while (ohIt.hasNext()) {\n            Map.Entry<Long, Long> e = ohIt.next();\n\n            assertEquals(e.getKey(), e.getValue());\n\n            cnt++;\n        }\n\n        int cnt0 = cnt;\n\n        assertTrue(cnt > 0);\n\n        Iterator<Map.Entry<Long, Long>> sIt = cache.swapIterator();\n\n        while (sIt.hasNext()) {\n            Map.Entry<Long, Long> e = sIt.next();\n\n            assertEquals(e.getKey(), e.getValue());\n\n            cnt++;\n        }\n\n        assertTrue(cnt > cnt0);\n        assertEquals(ENTRY_CNT, cnt);\n    }","id":8188,"modified_method":"/**\n     * Tests offheap and swap iterators.\n     *\n     * @throws Exception If failed.\n     */\n    public void testIterators() throws Exception {\n        IgniteCache<Long, Long> cache = populate();\n\n        int cnt = 0;\n\n\n        for (Cache.Entry<Long, Long> e : cache.localEntries(CachePeekMode.OFFHEAP)) {\n            assertEquals(e.getKey(), e.getValue());\n\n            cnt++;\n        }\n\n        int cnt0 = cnt;\n\n        assertTrue(cnt > 0);\n\n        for (Cache.Entry<Long, Long> e : cache.localEntries(CachePeekMode.SWAP)) {\n            assertEquals(e.getKey(), e.getValue());\n\n            cnt++;\n        }\n\n        assertTrue(cnt > cnt0);\n        assertEquals(ENTRY_CNT, cnt);\n    }","commit_id":"848e1de73402624589b28ba5944167cc22007711","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @throws Exception If failed.\n     */\n    public void testSystemMarshallerTxInsideSystemTx() throws Exception {\n        IgniteKernal ignite = (IgniteKernal)grid(0);\n\n        GridCacheAdapter<Object, Object> utilityCache = ignite.context().cache().utilityCache();\n\n        try (IgniteInternalTx tx = utilityCache.txStartEx(PESSIMISTIC, REPEATABLE_READ)) {\n            utilityCache.get(\"1\");\n            utilityCache.put(\"1\", \"11\");\n\n            CacheProjection<String,String> marshallerCache = (GridCacheAdapter<String, String>)(GridCacheAdapter)ignite.context().cache().marshallerCache();\n\n            marshallerCache.putIfAbsent(\"2\", \"2\");\n\n            try (IgniteInternalTx itx = marshallerCache.txStartEx(PESSIMISTIC, REPEATABLE_READ)) {\n                assertEquals(null, marshallerCache.get(\"1\"));\n                assertEquals(\"2\", marshallerCache.get(\"2\"));\n                assertEquals(null, marshallerCache.get(\"3\"));\n\n                marshallerCache.put(\"3\", \"3\");\n\n                itx.commit();\n            }\n\n            utilityCache.put(\"2\", \"22\");\n\n            tx.commit();\n        }\n\n        checkTransactionsCommitted();\n\n        checkEntries(CU.UTILITY_CACHE_NAME, 1, \"11\", 2, \"22\", 3, null);\n        checkEntries(CU.MARSH_CACHE_NAME,   1, null, 2, \"2\",  3, \"3\");\n    }","id":8189,"modified_method":"/**\n     * @throws Exception If failed.\n     */\n    public void testSystemMarshallerTxInsideSystemTx() throws Exception {\n        IgniteKernal ignite = (IgniteKernal)grid(0);\n\n        GridCacheAdapter<Object, Object> utilityCache = ignite.context().cache().utilityCache();\n\n        try (IgniteInternalTx tx = utilityCache.txStartEx(PESSIMISTIC, REPEATABLE_READ)) {\n            utilityCache.get(\"1\");\n            utilityCache.put(\"1\", \"11\");\n\n            GridCacheAdapter<String,String> marshallerCache = (GridCacheAdapter<String, String>)(GridCacheAdapter)ignite.context().cache().marshallerCache();\n\n            marshallerCache.putIfAbsent(\"2\", \"2\");\n\n            try (IgniteInternalTx itx = marshallerCache.txStartEx(PESSIMISTIC, REPEATABLE_READ)) {\n                assertEquals(null, marshallerCache.get(\"1\"));\n                assertEquals(\"2\", marshallerCache.get(\"2\"));\n                assertEquals(null, marshallerCache.get(\"3\"));\n\n                marshallerCache.put(\"3\", \"3\");\n\n                itx.commit();\n            }\n\n            utilityCache.put(\"2\", \"22\");\n\n            tx.commit();\n        }\n\n        checkTransactionsCommitted();\n\n        checkEntries(CU.UTILITY_CACHE_NAME, 1, \"11\", 2, \"22\", 3, null);\n        checkEntries(CU.MARSH_CACHE_NAME,   1, null, 2, \"2\",  3, \"3\");\n    }","commit_id":"848e1de73402624589b28ba5944167cc22007711","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Refreshes the displayed data from the given sitemap entry.<p>\n     * \n     * @param entry the sitemap entry to update\n     */\n    public void updateEntry(CmsClientSitemapEntry entry) {\n\n        getListItemWidget().setTitleLabel(entry.getTitle());\n        getListItemWidget().reInitAdditionalInfo(getInfoBean(entry));\n        updateSitePath(entry.getSitePath());\n        updateDetailPageStatus();\n        updateLock(entry);\n        updateInNavigation(entry);\n        getListItemWidget().setIcon(CmsSitemapView.getInstance().getIconForEntry(entry));\n        setExpiredStyle(entry, getListItemWidget());\n        setDropEnabled(getSitemapEntry().isFolderType() && !getSitemapEntry().hasForeignFolderLock());\n        if (entry.isSubSitemapType() || entry.isLeafType()) {\n            hideOpeners();\n        } else {\n            showOpeners();\n        }\n        getListItemWidget().updateTruncation();\n    }","id":8190,"modified_method":"/**\n     * Refreshes the displayed data from the given sitemap entry.<p>\n     * \n     * @param entry the sitemap entry to update\n     */\n    public void updateEntry(CmsClientSitemapEntry entry) {\n\n        getListItemWidget().setTitleLabel(entry.getTitle());\n        getListItemWidget().reInitAdditionalInfo(getInfoBean(entry, CmsSitemapView.getInstance().isNavigationMode()));\n        updateSitePath(entry.getSitePath());\n        updateDetailPageStatus();\n        updateLock(entry);\n        updateInNavigation(entry);\n        getListItemWidget().setIcon(CmsSitemapView.getInstance().getIconForEntry(entry));\n        setExpiredStyle(entry, getListItemWidget());\n        setDropEnabled(getSitemapEntry().isFolderType() && !getSitemapEntry().hasForeignFolderLock());\n        if (entry.isSubSitemapType() || entry.isLeafType()) {\n            hideOpeners();\n        } else {\n            showOpeners();\n        }\n        getListItemWidget().updateTruncation();\n    }","commit_id":"90750f42de6641044a5317f316704adc27c07630","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Generates the list item widget for the tree item.<p>\n     * \n     * @param entry the sitemap entry\n     * \n     * @return the list item widget\n     */\n    private static CmsListItemWidget generateItemWidget(CmsClientSitemapEntry entry) {\n\n        CmsListInfoBean infoBean = getInfoBean(entry);\n        final CmsListItemWidget itemWidget = new CmsListItemWidget(infoBean);\n        itemWidget.setIcon(CmsSitemapView.getInstance().getIconForEntry(entry));\n        itemWidget.setIconTitle(entry.isSubSitemapType()\n        ? Messages.get().key(Messages.GUI_HOVERBAR_GOTO_SUB_0)\n        : Messages.get().key(Messages.GUI_HOVERBAR_GOTO_0));\n        setExpiredStyle(entry, itemWidget);\n        return itemWidget;\n    }","id":8191,"modified_method":"/**\n     * Generates the list item widget for the tree item.<p>\n     * \n     * @param entry the sitemap entry\n     * \n     * @return the list item widget\n     */\n    private static CmsListItemWidget generateItemWidget(final CmsClientSitemapEntry entry) {\n\n        CmsListInfoBean infoBean = getInfoBean(entry, true);\n        final CmsListItemWidget itemWidget = new CmsListItemWidget(infoBean);\n        itemWidget.setIcon(CmsSitemapView.getInstance().getIconForEntry(entry));\n        itemWidget.setIconTitle(entry.isSubSitemapType()\n        ? Messages.get().key(Messages.GUI_HOVERBAR_GOTO_SUB_0)\n        : Messages.get().key(Messages.GUI_HOVERBAR_GOTO_0));\n        setExpiredStyle(entry, itemWidget);\n        //\n        //        itemWidget.addOpenHandler(new OpenHandler<CmsListItemWidget>() {\n        //\n        //            public void onOpen(OpenEvent<CmsListItemWidget> event) {\n        //\n        //                itemWidget.reInitAdditionalInfo(getInfoBean(entry, true));\n        //            }\n        //        });\n\n        return itemWidget;\n    }","commit_id":"90750f42de6641044a5317f316704adc27c07630","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the list info bean for the given entry.<p>\n     * \n     * @param entry the sitemap entry\n     * \n     * @return the list info bean\n     */\n    private static CmsListInfoBean getInfoBean(CmsClientSitemapEntry entry) {\n\n        CmsListInfoBean infoBean = new CmsListInfoBean();\n        infoBean.setTitle(entry.getTitle());\n        infoBean.setSubTitle(entry.getSitePath());\n        // showing the resource type icon of the default file in navigation mode\n        infoBean.setResourceType(CmsStringUtil.isNotEmptyOrWhitespaceOnly(entry.getDefaultFileType())\n        ? entry.getDefaultFileType()\n        : entry.getResourceTypeName());\n        infoBean.setResourceState(entry.getResourceState());\n\n        List<CmsAdditionalInfoBean> infos = new ArrayList<CmsAdditionalInfoBean>();\n        infos.add(new CmsAdditionalInfoBean(Messages.get().key(Messages.GUI_NAME_0), entry.getName(), null));\n        CmsClientProperty titleProperty = entry.getOwnProperties().get(CmsClientProperty.PROPERTY_TITLE);\n        if ((titleProperty != null) && !titleProperty.isEmpty()) {\n            infos.add(new CmsAdditionalInfoBean(\n                Messages.get().key(Messages.GUI_TITLE_PROPERTY_0),\n                titleProperty.getEffectiveValue(),\n                null));\n        }\n        String shownPath = entry.getVfsPath();\n        if (CmsStringUtil.isEmptyOrWhitespaceOnly(shownPath)) {\n            shownPath = \"-\";\n        }\n        infos.add(new CmsAdditionalInfoBean(Messages.get().key(Messages.GUI_VFS_PATH_0), shownPath, null));\n        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(entry.getDateReleased())) {\n            infos.add(new CmsAdditionalInfoBean(\n                Messages.get().key(Messages.GUI_LABEL_DATE_RELEASED_0),\n                entry.getDateReleased(),\n                null));\n        }\n        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(entry.getDateExpired())) {\n            infos.add(new CmsAdditionalInfoBean(\n                Messages.get().key(Messages.GUI_LABEL_DATE_EXPIRED_0),\n                entry.getDateExpired(),\n                null));\n        }\n        if (entry.getEntryType() == EntryType.redirect) {\n            infos.add(new CmsAdditionalInfoBean(\n                Messages.get().key(Messages.GUI_LABEL_TARGET_0),\n                entry.getRedirectTarget(),\n                null));\n        }\n        if (entry.getAliases() != null) {\n            int counter = 1;\n            for (String aliasPath : entry.getAliases()) {\n                infos.add(new CmsAdditionalInfoBean(\n                    Messages.get().key(Messages.GUI_LABEL_ALIAS_1, counter + \"\"),\n                    aliasPath,\n                    null));\n                counter += 1;\n            }\n        }\n        infoBean.setAdditionalInfo(infos);\n        return infoBean;\n    }","id":8192,"modified_method":"/**\n     * Returns the list info bean for the given entry.<p>\n     * \n     * @param entry the sitemap entry\n     * @param navMode a flag indicating whether we want the info bean for navigation mode or VFS mode \n     * \n     * @return the list info bean\n     */\n    static CmsListInfoBean getInfoBean(CmsClientSitemapEntry entry, boolean navMode) {\n\n        CmsListInfoBean infoBean = new CmsListInfoBean();\n        infoBean.setTitle(entry.getTitle());\n        infoBean.setSubTitle(entry.getSitePath());\n        // showing the resource type icon of the default file in navigation mode\n        infoBean.setResourceType(CmsStringUtil.isNotEmptyOrWhitespaceOnly(entry.getDefaultFileType())\n        ? entry.getDefaultFileType()\n        : entry.getResourceTypeName());\n        infoBean.setResourceState(entry.getResourceState());\n        CmsMessages msg = Messages.get();\n        List<CmsAdditionalInfoBean> infos = new ArrayList<CmsAdditionalInfoBean>();\n        addInfo(infos, msg.key(Messages.GUI_NAME_0), entry.getName());\n\n        boolean isTitleSet = false;\n        if (navMode) {\n            // in nav mode, display the title of the page rather than that of the folder, if available \n            Map<String, CmsClientProperty> defaultFileProps = entry.getDefaultFileProperties();\n            CmsClientProperty titleProperty = defaultFileProps == null\n            ? null\n            : defaultFileProps.get(CmsClientProperty.PROPERTY_TITLE);\n            if ((titleProperty != null) && !titleProperty.isEmpty()) {\n                addInfo(infos, msg.key(Messages.GUI_TITLE_PROPERTY_0), titleProperty.getEffectiveValue());\n                isTitleSet = true;\n            }\n        }\n        if (!isTitleSet) {\n            CmsClientProperty titleProperty = entry.getOwnProperties().get(CmsClientProperty.PROPERTY_TITLE);\n            if ((titleProperty != null) && !titleProperty.isEmpty()) {\n                addInfo(infos, msg.key(Messages.GUI_TITLE_PROPERTY_0), titleProperty.getEffectiveValue());\n                isTitleSet = true;\n            }\n        }\n\n        String shownPath = entry.getVfsPath();\n        if (CmsStringUtil.isEmptyOrWhitespaceOnly(shownPath)) {\n            shownPath = \"-\";\n        }\n        addInfo(infos, msg.key(Messages.GUI_VFS_PATH_0), shownPath);\n        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(entry.getDateReleased())) {\n            addInfo(infos, msg.key(Messages.GUI_LABEL_DATE_RELEASED_0), entry.getDateReleased());\n\n        }\n        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(entry.getDateExpired())) {\n            addInfo(infos, msg.key(Messages.GUI_LABEL_DATE_EXPIRED_0), entry.getDateExpired());\n\n        }\n        if (entry.getEntryType() == EntryType.redirect) {\n            addInfo(infos, msg.key(Messages.GUI_LABEL_TARGET_0), entry.getRedirectTarget());\n\n        }\n        if (entry.getAliases() != null) {\n            int counter = 1;\n            for (String aliasPath : entry.getAliases()) {\n                addInfo(infos, msg.key(Messages.GUI_LABEL_ALIAS_1, counter + \"\"), aliasPath);\n                counter += 1;\n            }\n        }\n        infoBean.setAdditionalInfo(infos);\n        return infoBean;\n    }","commit_id":"90750f42de6641044a5317f316704adc27c07630","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public void testRejections_1_4_0(ModelTestControllerVersion controllerVersion) throws Exception {\n        // create builder for current subsystem version\n        KernelServicesBuilder builder = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT);\n\n        // create builder for legacy subsystem version\n        ModelVersion version_1_4_0 = ModelVersion.create(1, 4, 0);\n        builder.createLegacyKernelServicesBuilder(null, controllerVersion, version_1_4_0)\n            .addMavenResourceURL(\"org.jboss.as:jboss-as-clustering-infinispan:7.2.0.Final\")\n            .addMavenResourceURL(\"org.infinispan:infinispan-core:5.3.0.Final\")\n            .addMavenResourceURL(\"org.infinispan:infinispan-cachestore-jdbc:5.3.0.Final\")\n            //TODO storing the model triggers the weirdness mentioned in SubsystemTestDelegate.LegacyKernelServiceInitializerImpl.install()\n            //which is strange since it should be loading it all from the current jboss modules\n            //Also this works in several other tests\n            .dontPersistXml();\n\n        KernelServices mainServices = builder.build();\n        KernelServices legacyServices = mainServices.getLegacyServices(version_1_4_0);\n        Assert.assertNotNull(legacyServices);\n        Assert.assertTrue(\"main services did not boot\", mainServices.isSuccessfulBoot());\n        Assert.assertTrue(legacyServices.isSuccessfulBoot());\n\n        // test failed operations involving backups\n        List<ModelNode> xmlOps = builder.parseXmlResource(\"infinispan-transformer-2_0-backup.xml\");\n        ModelTestUtils.checkFailedTransformedBootOperations(mainServices, version_1_4_0, xmlOps, getFailedOperationConfig140());\n    }","id":8193,"modified_method":"public void testRejections_1_4_0(ModelTestControllerVersion controllerVersion, String ... mavenResourceURLs) throws Exception {\n        ModelVersion version_1_4_0 = ModelVersion.create(1, 4, 0);\n\n        // create builder for current subsystem version\n        KernelServicesBuilder builder = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT);\n\n        // initialize the legacy services\n        LegacyKernelServicesInitializer legacyInitializer = builder.createLegacyKernelServicesBuilder(null, controllerVersion, version_1_4_0);\n        for (String mavenResourceURL : mavenResourceURLs) {\n            legacyInitializer.addMavenResourceURL(mavenResourceURL);\n        }\n        //TODO storing the model triggers the weirdness mentioned in SubsystemTestDelegate.LegacyKernelServiceInitializerImpl.install()\n        //which is strange since it should be loading it all from the current jboss modules\n        //Also this works in several other tests\n        legacyInitializer.dontPersistXml();\n\n        KernelServices mainServices = builder.build();\n        KernelServices legacyServices = mainServices.getLegacyServices(version_1_4_0);\n        Assert.assertNotNull(legacyServices);\n        Assert.assertTrue(\"main services did not boot\", mainServices.isSuccessfulBoot());\n        Assert.assertTrue(legacyServices.isSuccessfulBoot());\n\n        // test failed operations involving backups\n        List<ModelNode> xmlOps = builder.parseXmlResource(\"infinispan-transformer-2_0-backup.xml\");\n        ModelTestUtils.checkFailedTransformedBootOperations(mainServices, version_1_4_0, xmlOps, getFailedOperationConfig140());\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testRejections610() throws Exception {\n        testRejections_1_4_1(ModelTestControllerVersion.EAP_6_1_0);\n    }","id":8194,"modified_method":"@Test\n    public void testRejections610() throws Exception {\n        testRejections_1_4_1(\n                ModelTestControllerVersion.EAP_6_1_0,\n                \"org.jboss.as:jboss-as-clustering-infinispan:\" + ModelTestControllerVersion.EAP_6_1_0.getMavenGavVersion(),\n                \"org.infinispan:infinispan-core:5.2.6.Final-redhat-1\",\n                \"org.infinispan:infinispan-cachestore-jdbc:5.2.6.Final-redhat-1\"\n                );\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testRejections713() throws Exception {\n        testRejections_1_3_0(ModelTestControllerVersion.V7_1_3_FINAL);\n    }","id":8195,"modified_method":"@Test\n    public void testRejections713() throws Exception {\n        testRejections_1_3_0(\n                ModelTestControllerVersion.V7_1_3_FINAL,\n                \"org.jboss.as:jboss-as-clustering-infinispan:\" + ModelTestControllerVersion.V7_1_3_FINAL.getMavenGavVersion(),\n                \"org.infinispan:infinispan-core:5.2.6.Final\"\n        );\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testRejections600() throws Exception {\n        testRejections_1_3_0(ModelTestControllerVersion.EAP_6_0_0);\n    }","id":8196,"modified_method":"@Test\n    public void testRejections600() throws Exception {\n        testRejections_1_3_0(\n                ModelTestControllerVersion.EAP_6_0_0,\n                \"org.jboss.as:jboss-as-clustering-infinispan:\" + ModelTestControllerVersion.EAP_6_0_0.getMavenGavVersion(),\n                \"org.infinispan:infinispan-core:5.1.4.FINAL-redhat-1\"\n        );\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void testRejections_1_4_1(ModelTestControllerVersion controllerVersion) throws Exception {\n        // create builder for current subsystem version\n        KernelServicesBuilder builder = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT);\n\n        // create builder for legacy subsystem version\n        ModelVersion version_1_4_1 = ModelVersion.create(1, 4, 1);\n        builder.createLegacyKernelServicesBuilder(null, controllerVersion, version_1_4_1)\n            .addMavenResourceURL(\"org.jboss.as:jboss-as-clustering-infinispan:7.2.0.Final\")\n            .addMavenResourceURL(\"org.infinispan:infinispan-core:5.3.0.Final\")\n            .addMavenResourceURL(\"org.infinispan:infinispan-cachestore-jdbc:5.3.0.Final\")\n            //TODO storing the model triggers the weirdness mentioned in SubsystemTestDelegate.LegacyKernelServiceInitializerImpl.install()\n            //which is strange since it should be loading it all from the current jboss modules\n            //Also this works in several other tests\n            .dontPersistXml();\n\n        KernelServices mainServices = builder.build();\n        KernelServices legacyServices = mainServices.getLegacyServices(version_1_4_1);\n        Assert.assertNotNull(legacyServices);\n        Assert.assertTrue(\"main services did not boot\", mainServices.isSuccessfulBoot());\n        Assert.assertTrue(legacyServices.isSuccessfulBoot());\n\n        // test failed operations involving backups\n        List<ModelNode> xmlOps = builder.parseXmlResource(\"infinispan-transformer-2_0-backup.xml\");\n        ModelTestUtils.checkFailedTransformedBootOperations(mainServices, version_1_4_1, xmlOps, getFailedOperationConfig140());\n    }","id":8197,"modified_method":"public void testRejections_1_4_1(ModelTestControllerVersion controllerVersion, String ... mavenResourceURLs) throws Exception {\n        ModelVersion version_1_4_1 = ModelVersion.create(1, 4, 1);\n\n        // create builder for current subsystem version\n        KernelServicesBuilder builder = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT);\n\n        // initialise the legacy services\n        LegacyKernelServicesInitializer legacyInitializer = builder.createLegacyKernelServicesBuilder(null, controllerVersion, version_1_4_1);\n        for (String mavenResourceURL : mavenResourceURLs) {\n            legacyInitializer.addMavenResourceURL(mavenResourceURL);\n        }\n        //TODO storing the model triggers the weirdness mentioned in SubsystemTestDelegate.LegacyKernelServiceInitializerImpl.install()\n        //which is strange since it should be loading it all from the current jboss modules\n        //Also this works in several other tests\n        legacyInitializer.dontPersistXml();\n\n        KernelServices mainServices = builder.build();\n        KernelServices legacyServices = mainServices.getLegacyServices(version_1_4_1);\n        Assert.assertNotNull(legacyServices);\n        Assert.assertTrue(\"main services did not boot\", mainServices.isSuccessfulBoot());\n        Assert.assertTrue(legacyServices.isSuccessfulBoot());\n\n        // test failed operations involving backups\n        List<ModelNode> xmlOps = builder.parseXmlResource(\"infinispan-transformer-2_0-backup.xml\");\n        ModelTestUtils.checkFailedTransformedBootOperations(mainServices, version_1_4_1, xmlOps, getFailedOperationConfig140());\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testTransformer712() throws Exception {\n        testTransformer_1_3_0(ModelTestControllerVersion.V7_1_2_FINAL);\n    }","id":8198,"modified_method":"@Test\n    public void testTransformer712() throws Exception {\n        testTransformer_1_3_0(\n                ModelTestControllerVersion.V7_1_2_FINAL,\n                \"org.jboss.as:jboss-as-clustering-infinispan:\" + ModelTestControllerVersion.V7_1_2_FINAL.getMavenGavVersion(),\n                \"org.infinispan:infinispan-core:5.2.6.Final\"\n        );\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testTransformer720() throws Exception {\n        testTransformer_1_4_0(ModelTestControllerVersion.V7_2_0_FINAL);\n    }","id":8199,"modified_method":"@Test\n    public void testTransformer720() throws Exception {\n        testTransformer_1_4_0(\n                ModelTestControllerVersion.V7_2_0_FINAL,\n                \"org.jboss.as:jboss-as-clustering-infinispan:\" + ModelTestControllerVersion.V7_2_0_FINAL.getMavenGavVersion(),\n                \"org.infinispan:infinispan-core:5.3.0.Final\",\n                \"org.infinispan:infinispan-cachestore-jdbc:5.3.0.Final\"\n        );\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testTransformer610() throws Exception {\n        testTransformer_1_4_1(ModelTestControllerVersion.EAP_6_1_0);\n    }","id":8200,"modified_method":"@Test\n    public void testTransformer610() throws Exception {\n        testTransformer_1_4_1(\n                ModelTestControllerVersion.EAP_6_1_0,\n                \"org.jboss.as:jboss-as-clustering-infinispan:\" + ModelTestControllerVersion.EAP_6_1_0.getMavenGavVersion(),\n                \"org.infinispan:infinispan-core:5.2.6.Final-redhat-1\",\n                \"org.infinispan:infinispan-cachestore-jdbc:5.2.6.Final-redhat-1\"\n                );\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testRejections720() throws Exception {\n        testRejections_1_4_0(ModelTestControllerVersion.V7_2_0_FINAL);\n    }","id":8201,"modified_method":"@Test\n    public void testRejections720() throws Exception {\n        testRejections_1_4_0(\n                ModelTestControllerVersion.V7_2_0_FINAL,\n                \"org.jboss.as:jboss-as-clustering-infinispan:\" + ModelTestControllerVersion.V7_2_0_FINAL.getMavenGavVersion(),\n                \"org.infinispan:infinispan-core:5.3.0.Final\",\n                \"org.infinispan:infinispan-cachestore-jdbc:5.3.0.Final\"\n                );\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testRejections611() throws Exception {\n        testRejections_1_4_1(ModelTestControllerVersion.EAP_6_1_1);\n    }","id":8202,"modified_method":"@Test\n    public void testRejections611() throws Exception {\n        testRejections_1_4_1(\n                ModelTestControllerVersion.EAP_6_1_1,\n                \"org.jboss.as:jboss-as-clustering-infinispan:\" + ModelTestControllerVersion.EAP_6_1_1.getMavenGavVersion(),\n                \"org.infinispan:infinispan-core:5.2.7.Final-redhat-1\",\n                \"org.infinispan:infinispan-cachestore-jdbc:5.2.7.Final-redhat-1\"\n                );\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void testTransformer_1_3_0(ModelTestControllerVersion controllerVersion) throws Exception {\n        ModelVersion version130 = ModelVersion.create(1, 3);\n        KernelServicesBuilder builder = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT)\n                .setSubsystemXml(getSubsystemXml());\n        builder.createLegacyKernelServicesBuilder(null, controllerVersion, version130)\n            .addMavenResourceURL(\"org.jboss.as:jboss-as-clustering-infinispan:\" + controllerVersion.getMavenGavVersion())\n            .addMavenResourceURL(\"org.infinispan:infinispan-core:5.2.6.Final\")\n            .configureReverseControllerCheck(null, new FixReverseControllerModel130())\n            //TODO storing the model triggers the weirdness mentioned in SubsystemTestDelegate.LegacyKernelServiceInitializerImpl.install()\n            //which is strange since it should be loading it all from the current jboss modules\n            //Also this works in several other tests\n            .dontPersistXml();\n\n        KernelServices mainServices = builder.build();\n        Assert.assertTrue(\"main services did not boot\", mainServices.isSuccessfulBoot());\n        Assert.assertTrue(mainServices.getLegacyServices(version130).isSuccessfulBoot());\n\n        // check that both versions of the legacy model are the same and valid\n        checkSubsystemModelTransformation(mainServices, version130);\n\n        // 1.3.0 API specific checks:\n        // - check that segments is translated into virtual nodes\n        // - check both segments and indexing properties are removed\n        ModelNode model = mainServices.readTransformedModel(version130);\n        ModelNode distCache = model.get(SUBSYSTEM,\"infinispan\",ModelKeys.CACHE_CONTAINER, \"maximal\", ModelKeys.DISTRIBUTED_CACHE, \"dist\") ;\n        Assert.assertFalse(distCache.has(ModelKeys.INDEXING_PROPERTIES));\n        Assert.assertFalse(distCache.has(ModelKeys.SEGMENTS));\n        Assert.assertTrue(distCache.get(ModelKeys.VIRTUAL_NODES).isDefined());\n    }","id":8203,"modified_method":"private void testTransformer_1_3_0(ModelTestControllerVersion controllerVersion, String ... mavenResourceURLs) throws Exception {\n\n        ModelVersion version130 = ModelVersion.create(1, 3);\n\n        // create the builder for the current subsystem\n        KernelServicesBuilder builder = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT);\n        builder.setSubsystemXml(getSubsystemXml());\n\n        // initialise the legacy services\n        LegacyKernelServicesInitializer legacyInitializer = builder.createLegacyKernelServicesBuilder(null, controllerVersion, version130);\n        // add required legacy jars\n        for (String mavenResourceURL : mavenResourceURLs) {\n            legacyInitializer.addMavenResourceURL(mavenResourceURL);\n        }\n        legacyInitializer.configureReverseControllerCheck(null, new FixReverseControllerModel130());\n        //TODO storing the model triggers the weirdness mentioned in SubsystemTestDelegate.LegacyKernelServiceInitializerImpl.install()\n        //which is strange since it should be loading it all from the current jboss modules\n        //Also this works in several other tests\n        legacyInitializer.dontPersistXml();\n\n        KernelServices mainServices = builder.build();\n        Assert.assertTrue(\"main services did not boot\", mainServices.isSuccessfulBoot());\n        Assert.assertTrue(mainServices.getLegacyServices(version130).isSuccessfulBoot());\n\n        // check that both versions of the legacy model are the same and valid\n        checkSubsystemModelTransformation(mainServices, version130);\n\n        // 1.3.0 API specific checks:\n        // - check that segments is translated into virtual nodes\n        // - check both segments and indexing properties are removed\n        ModelNode model = mainServices.readTransformedModel(version130);\n        ModelNode distCache = model.get(SUBSYSTEM,\"infinispan\",ModelKeys.CACHE_CONTAINER, \"maximal\", ModelKeys.DISTRIBUTED_CACHE, \"dist\") ;\n        Assert.assertFalse(distCache.has(ModelKeys.INDEXING_PROPERTIES));\n        Assert.assertFalse(distCache.has(ModelKeys.SEGMENTS));\n        Assert.assertTrue(distCache.get(ModelKeys.VIRTUAL_NODES).isDefined());\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testTransformer600() throws Exception {\n        testTransformer_1_3_0(ModelTestControllerVersion.EAP_6_0_0);\n    }","id":8204,"modified_method":"@Test\n    public void testTransformer600() throws Exception {\n        testTransformer_1_3_0(\n                ModelTestControllerVersion.EAP_6_0_0,\n                \"org.jboss.as:jboss-as-clustering-infinispan:\" + ModelTestControllerVersion.EAP_6_0_0.getMavenGavVersion(),\n                \"org.infinispan:infinispan-core:5.1.4.FINAL-redhat-1\"\n        );\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testRejections712() throws Exception {\n        testRejections_1_3_0(ModelTestControllerVersion.V7_1_2_FINAL);\n    }","id":8205,"modified_method":"@Test\n    public void testRejections712() throws Exception {\n        testRejections_1_3_0(\n                ModelTestControllerVersion.V7_1_2_FINAL,\n                \"org.jboss.as:jboss-as-clustering-infinispan:\" + ModelTestControllerVersion.V7_1_2_FINAL.getMavenGavVersion(),\n                \"org.infinispan:infinispan-core:5.2.6.Final\"\n                );\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testTransformer611() throws Exception {\n        testTransformer_1_4_1(ModelTestControllerVersion.EAP_6_1_1);\n    }","id":8206,"modified_method":"@Test\n    public void testTransformer611() throws Exception {\n        testTransformer_1_4_1(\n                ModelTestControllerVersion.EAP_6_1_1,\n                \"org.jboss.as:jboss-as-clustering-infinispan:\" + ModelTestControllerVersion.EAP_6_1_1.getMavenGavVersion(),\n                \"org.infinispan:infinispan-core:5.2.7.Final-redhat-1\",\n                \"org.infinispan:infinispan-cachestore-jdbc:5.2.7.Final-redhat-1\"\n                );\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void testTransformer_1_4_0(ModelTestControllerVersion controllerVersion) throws Exception {\n        ModelVersion version140 = ModelVersion.create(1, 4);\n        // create builder for current subsystem version\n        KernelServicesBuilder builder = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT)\n                .setSubsystemXml(getSubsystemXml());\n        builder.createLegacyKernelServicesBuilder(null,controllerVersion, version140)\n                .addMavenResourceURL(\"org.jboss.as:jboss-as-clustering-infinispan:7.2.0.Final\")\n                .addMavenResourceURL(\"org.infinispan:infinispan-core:5.3.0.Final\")\n                .addMavenResourceURL(\"org.infinispan:infinispan-cachestore-jdbc:5.3.0.Final\")\n                .configureReverseControllerCheck(null, new FixReverseControllerModel140());\n\n        KernelServices mainServices = builder.build();\n        KernelServices legacyServices = mainServices.getLegacyServices(version140);\n        Assert.assertNotNull(legacyServices);\n        Assert.assertTrue(\"main services did not boot\", mainServices.isSuccessfulBoot());\n        Assert.assertTrue(legacyServices.isSuccessfulBoot());\n\n        // check that both versions of the legacy model are the same and valid\n        // TODO: need a model fixer to make this work\n        checkSubsystemModelTransformation(mainServices, version140, new VirtualNodesTransformedModelProblem());\n\n        // 1.4.0 API specific checks\n        // - check transformation of virtual nodes into segments\n        // - check that statistics is discarded\n        PathAddress pa = PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM, InfinispanExtension.SUBSYSTEM_NAME),\n                PathElement.pathElement(CacheContainerResourceDefinition.CONTAINER_PATH.getKey(), \"container\"),\n                PathElement.pathElement(DistributedCacheResourceDefinition.DISTRIBUTED_CACHE_PATH.getKey(), \"cache\"));\n        ModelNode addOp = Util.createAddOperation(pa);\n        addOp.get(DistributedCacheResourceDefinition.VIRTUAL_NODES.getName()).set(4);\n        addOp.get(CacheResourceDefinition.STATISTICS.getName()).set(true);\n\n        OperationTransformer.TransformedOperation transformedOperation = mainServices.transformOperation(version140, addOp);\n        Assert.assertFalse(transformedOperation.getTransformedOperation().has(DistributedCacheResourceDefinition.VIRTUAL_NODES.getName()));\n        Assert.assertEquals(24, transformedOperation.getTransformedOperation().get(DistributedCacheResourceDefinition.SEGMENTS.getName()).asInt());\n\n        ModelNode result = new ModelNode();\n        result.get(OUTCOME).set(SUCCESS);\n        result.get(RESULT);\n        Assert.assertFalse(transformedOperation.rejectOperation(result));\n        Assert.assertEquals(result, transformedOperation.transformResult(result));\n\n        ModelNode writeOp = Util.createEmptyOperation(WRITE_ATTRIBUTE_OPERATION, pa);\n        writeOp.get(NAME).set(DistributedCacheResourceDefinition.VIRTUAL_NODES.getName());\n        writeOp.get(VALUE).set(4);\n\n        transformedOperation = mainServices.transformOperation(version140, writeOp);\n        Assert.assertEquals(DistributedCacheResourceDefinition.SEGMENTS.getName(), transformedOperation.getTransformedOperation().get(NAME).asString());\n        Assert.assertEquals(24, transformedOperation.getTransformedOperation().get(VALUE).asInt());\n        Assert.assertFalse(transformedOperation.rejectOperation(result));\n        Assert.assertEquals(result, transformedOperation.transformResult(result));\n    }","id":8207,"modified_method":"public void testTransformer_1_4_0(ModelTestControllerVersion controllerVersion, String ... mavenResourceURLs) throws Exception {\n        ModelVersion version140 = ModelVersion.create(1, 4);\n\n        // create builder for current subsystem version\n        KernelServicesBuilder builder = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT)\n                .setSubsystemXml(getSubsystemXml());\n\n        // initialise the legacy services\n        LegacyKernelServicesInitializer legacyInitializer = builder.createLegacyKernelServicesBuilder(null,controllerVersion, version140);\n        for (String mavenResourceURL : mavenResourceURLs) {\n            legacyInitializer.addMavenResourceURL(mavenResourceURL);\n        }\n        legacyInitializer.configureReverseControllerCheck(null, new FixReverseControllerModel140());\n\n        KernelServices mainServices = builder.build();\n        KernelServices legacyServices = mainServices.getLegacyServices(version140);\n        Assert.assertNotNull(legacyServices);\n        Assert.assertTrue(\"main services did not boot\", mainServices.isSuccessfulBoot());\n        Assert.assertTrue(legacyServices.isSuccessfulBoot());\n\n        // check that both versions of the legacy model are the same and valid\n        // TODO: need a model fixer to make this work\n        checkSubsystemModelTransformation(mainServices, version140, new VirtualNodesTransformedModelProblem());\n\n        // 1.4.0 API specific checks\n        // - check transformation of virtual nodes into segments\n        // - check that statistics is discarded\n        PathAddress pa = PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM, InfinispanExtension.SUBSYSTEM_NAME),\n                PathElement.pathElement(CacheContainerResourceDefinition.CONTAINER_PATH.getKey(), \"container\"),\n                PathElement.pathElement(DistributedCacheResourceDefinition.DISTRIBUTED_CACHE_PATH.getKey(), \"cache\"));\n        ModelNode addOp = Util.createAddOperation(pa);\n        addOp.get(DistributedCacheResourceDefinition.VIRTUAL_NODES.getName()).set(4);\n        addOp.get(CacheResourceDefinition.STATISTICS.getName()).set(true);\n\n        OperationTransformer.TransformedOperation transformedOperation = mainServices.transformOperation(version140, addOp);\n        Assert.assertFalse(transformedOperation.getTransformedOperation().has(DistributedCacheResourceDefinition.VIRTUAL_NODES.getName()));\n        Assert.assertEquals(24, transformedOperation.getTransformedOperation().get(DistributedCacheResourceDefinition.SEGMENTS.getName()).asInt());\n\n        ModelNode result = new ModelNode();\n        result.get(OUTCOME).set(SUCCESS);\n        result.get(RESULT);\n        Assert.assertFalse(transformedOperation.rejectOperation(result));\n        Assert.assertEquals(result, transformedOperation.transformResult(result));\n\n        ModelNode writeOp = Util.createEmptyOperation(WRITE_ATTRIBUTE_OPERATION, pa);\n        writeOp.get(NAME).set(DistributedCacheResourceDefinition.VIRTUAL_NODES.getName());\n        writeOp.get(VALUE).set(4);\n\n        transformedOperation = mainServices.transformOperation(version140, writeOp);\n        Assert.assertEquals(DistributedCacheResourceDefinition.SEGMENTS.getName(), transformedOperation.getTransformedOperation().get(NAME).asString());\n        Assert.assertEquals(24, transformedOperation.getTransformedOperation().get(VALUE).asInt());\n        Assert.assertFalse(transformedOperation.rejectOperation(result));\n        Assert.assertEquals(result, transformedOperation.transformResult(result));\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testRejections601() throws Exception {\n        testRejections_1_3_0(ModelTestControllerVersion.EAP_6_0_1);\n    }","id":8208,"modified_method":"@Test\n    public void testRejections601() throws Exception {\n        testRejections_1_3_0(ModelTestControllerVersion.EAP_6_0_1,\n                \"org.jboss.as:jboss-as-clustering-infinispan:\" + ModelTestControllerVersion.EAP_6_0_1.getMavenGavVersion(),\n                \"org.infinispan:infinispan-core:5.1.8.Final-redhat-1\"\n                );\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void testTransformer_1_4_1(ModelTestControllerVersion controllerVersion) throws Exception {\n        ModelVersion version141 = ModelVersion.create(1, 4, 1);\n        // create builder for current subsystem version\n        KernelServicesBuilder builder = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT)\n                .setSubsystemXml(getSubsystemXml());\n        builder.createLegacyKernelServicesBuilder(null,controllerVersion, version141)\n                .addMavenResourceURL(\"org.jboss.as:jboss-as-clustering-infinispan:7.2.0.Final\")\n                .addMavenResourceURL(\"org.infinispan:infinispan-core:5.3.0.Final\")\n                .addMavenResourceURL(\"org.infinispan:infinispan-cachestore-jdbc:5.3.0.Final\")\n                .configureReverseControllerCheck(null, new FixReverseControllerModel141());\n\n        KernelServices mainServices = builder.build();\n        KernelServices legacyServices = mainServices.getLegacyServices(version141);\n        Assert.assertNotNull(legacyServices);\n        Assert.assertTrue(\"main services did not boot\", mainServices.isSuccessfulBoot());\n        Assert.assertTrue(legacyServices.isSuccessfulBoot());\n\n        // check that both versions of the legacy model are the same and valid\n        checkSubsystemModelTransformation(mainServices, version141);\n\n        // 1.4.0 API specific checks\n        // - check transformation of virtual nodes into segments\n        // - check that statistics is discarded\n        PathAddress pa = PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM, InfinispanExtension.SUBSYSTEM_NAME),\n                PathElement.pathElement(CacheContainerResourceDefinition.CONTAINER_PATH.getKey(), \"container\"),\n                PathElement.pathElement(DistributedCacheResourceDefinition.DISTRIBUTED_CACHE_PATH.getKey(), \"cache\"));\n        ModelNode addOp = Util.createAddOperation(pa);\n        addOp.get(DistributedCacheResourceDefinition.VIRTUAL_NODES.getName()).set(1);\n        addOp.get(CacheResourceDefinition.STATISTICS.getName()).set(true);\n\n        OperationTransformer.TransformedOperation transformedOperation = mainServices.transformOperation(version141, addOp);\n        Assert.assertFalse(transformedOperation.getTransformedOperation().has(DistributedCacheResourceDefinition.VIRTUAL_NODES.getName()));\n        Assert.assertEquals(6, transformedOperation.getTransformedOperation().get(DistributedCacheResourceDefinition.SEGMENTS.getName()).asInt());\n\n        ModelNode result = new ModelNode();\n        result.get(OUTCOME).set(SUCCESS);\n        result.get(RESULT);\n        Assert.assertFalse(transformedOperation.rejectOperation(result));\n        Assert.assertEquals(result, transformedOperation.transformResult(result));\n\n        ModelNode writeOp = Util.createEmptyOperation(WRITE_ATTRIBUTE_OPERATION, pa);\n        writeOp.get(NAME).set(DistributedCacheResourceDefinition.VIRTUAL_NODES.getName());\n        writeOp.get(VALUE).set(1);\n\n        transformedOperation = mainServices.transformOperation(version141, writeOp);\n        Assert.assertEquals(DistributedCacheResourceDefinition.SEGMENTS.getName(), transformedOperation.getTransformedOperation().get(NAME).asString());\n        Assert.assertEquals(6, transformedOperation.getTransformedOperation().get(VALUE).asInt());\n        Assert.assertFalse(transformedOperation.rejectOperation(result));\n        Assert.assertEquals(result, transformedOperation.transformResult(result));\n\n    }","id":8209,"modified_method":"public void testTransformer_1_4_1(ModelTestControllerVersion controllerVersion, String ... mavenResourceURLs) throws Exception {\n        ModelVersion version141 = ModelVersion.create(1, 4, 1);\n\n        // create builder for current subsystem version\n        KernelServicesBuilder builder = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT)\n                .setSubsystemXml(getSubsystemXml());\n\n        // initialise the legacy services\n        LegacyKernelServicesInitializer legacyInitializer = builder.createLegacyKernelServicesBuilder(null,controllerVersion, version141);\n        for (String mavenResourceURL : mavenResourceURLs) {\n            legacyInitializer.addMavenResourceURL(mavenResourceURL);\n        }\n        legacyInitializer.configureReverseControllerCheck(null, new FixReverseControllerModel141());\n\n        KernelServices mainServices = builder.build();\n        KernelServices legacyServices = mainServices.getLegacyServices(version141);\n        Assert.assertNotNull(legacyServices);\n        Assert.assertTrue(\"main services did not boot\", mainServices.isSuccessfulBoot());\n        Assert.assertTrue(legacyServices.isSuccessfulBoot());\n\n        // check that both versions of the legacy model are the same and valid\n        checkSubsystemModelTransformation(mainServices, version141);\n\n        // 1.4.1 API specific checks\n        // - check transformation of virtual nodes into segments\n        // - check that statistics is discarded\n        PathAddress pa = PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM, InfinispanExtension.SUBSYSTEM_NAME),\n                PathElement.pathElement(CacheContainerResourceDefinition.CONTAINER_PATH.getKey(), \"container\"),\n                PathElement.pathElement(DistributedCacheResourceDefinition.DISTRIBUTED_CACHE_PATH.getKey(), \"cache\"));\n        ModelNode addOp = Util.createAddOperation(pa);\n        addOp.get(DistributedCacheResourceDefinition.VIRTUAL_NODES.getName()).set(1);\n        addOp.get(CacheResourceDefinition.STATISTICS.getName()).set(true);\n\n        // what happens to virtual nodes now? current - 1.4.1\n        /*\n        OperationTransformer.TransformedOperation transformedOperation = mainServices.transformOperation(version141, addOp);\n        Assert.assertFalse(transformedOperation.getTransformedOperation().has(DistributedCacheResourceDefinition.VIRTUAL_NODES.getName()));\n        Assert.assertEquals(6, transformedOperation.getTransformedOperation().get(DistributedCacheResourceDefinition.SEGMENTS.getName()).asInt());\n\n        ModelNode result = new ModelNode();\n        result.get(OUTCOME).set(SUCCESS);\n        result.get(RESULT);\n        Assert.assertFalse(transformedOperation.rejectOperation(result));\n        Assert.assertEquals(result, transformedOperation.transformResult(result));\n\n        ModelNode writeOp = Util.createEmptyOperation(WRITE_ATTRIBUTE_OPERATION, pa);\n        writeOp.get(NAME).set(DistributedCacheResourceDefinition.VIRTUAL_NODES.getName());\n        writeOp.get(VALUE).set(1);\n\n        transformedOperation = mainServices.transformOperation(version141, writeOp);\n        Assert.assertEquals(DistributedCacheResourceDefinition.SEGMENTS.getName(), transformedOperation.getTransformedOperation().get(NAME).asString());\n        Assert.assertEquals(6, transformedOperation.getTransformedOperation().get(VALUE).asInt());\n        Assert.assertFalse(transformedOperation.rejectOperation(result));\n        Assert.assertEquals(result, transformedOperation.transformResult(result));\n        */\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testTransformer601() throws Exception {\n        testTransformer_1_3_0(ModelTestControllerVersion.EAP_6_0_1);\n    }","id":8210,"modified_method":"@Test\n    public void testTransformer601() throws Exception {\n        testTransformer_1_3_0(ModelTestControllerVersion.EAP_6_0_1,\n                \"org.jboss.as:jboss-as-clustering-infinispan:\" + ModelTestControllerVersion.EAP_6_0_1.getMavenGavVersion(),\n                \"org.infinispan:infinispan-core:5.1.8.Final-redhat-1\"\n                );\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testTransformer713() throws Exception {\n        testTransformer_1_3_0(ModelTestControllerVersion.V7_1_3_FINAL);\n    }","id":8211,"modified_method":"@Test\n    public void testTransformer713() throws Exception {\n        testTransformer_1_3_0(\n                ModelTestControllerVersion.V7_1_3_FINAL,\n                \"org.jboss.as:jboss-as-clustering-infinispan:\" + ModelTestControllerVersion.V7_1_3_FINAL.getMavenGavVersion(),\n                \"org.infinispan:infinispan-core:5.2.6.Final\"\n        );\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void testRejections_1_3_0(ModelTestControllerVersion controllerVersion) throws Exception {\n\n        ModelVersion version_1_3_0 = ModelVersion.create(1, 3, 0);\n\n        // create builder for current subsystem version\n        KernelServicesBuilder builderA = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT);\n\n        // create builder for legacy subsystem version\n        builderA.createLegacyKernelServicesBuilder(null, controllerVersion, version_1_3_0)\n            .addMavenResourceURL(\"org.jboss.as:jboss-as-clustering-infinispan:\" + controllerVersion.getMavenGavVersion())\n            .addMavenResourceURL(\"org.infinispan:infinispan-core:5.2.6.Final\")\n            //TODO storing the model triggers the weirdness mentioned in SubsystemTestDelegate.LegacyKernelServiceInitializerImpl.install()\n            //which is strange since it should be loading it all from the current jboss modules\n            //Also this works in several other tests\n            .dontPersistXml();\n\n        KernelServices mainServicesA = builderA.build();\n        KernelServices legacyServicesA = mainServicesA.getLegacyServices(version_1_3_0);\n        Assert.assertNotNull(legacyServicesA);\n        Assert.assertTrue(\"main services did not boot\", mainServicesA.isSuccessfulBoot());\n        Assert.assertTrue(legacyServicesA.isSuccessfulBoot());\n\n        // test failed operations involving expressions\n        List<ModelNode> xmlOps_expressions = builderA.parseXmlResource(\"infinispan-transformer-2_0-expressions.xml\");\n        ModelTestUtils.checkFailedTransformedBootOperations(mainServicesA, version_1_3_0, xmlOps_expressions, getFailedOperationConfig130());\n        mainServicesA.shutdown();\n\n        // create builder for current subsystem version\n        KernelServicesBuilder builderB = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT);\n\n        // create builder for legacy subsystem version\n        builderB.createLegacyKernelServicesBuilder(null, controllerVersion, version_1_3_0)\n            .addMavenResourceURL(\"org.jboss.as:jboss-as-clustering-infinispan:\" + controllerVersion.getMavenGavVersion())\n            .addMavenResourceURL(\"org.infinispan:infinispan-core:5.2.6.Final\")\n            //TODO storing the model triggers the weirdness mentioned in SubsystemTestDelegate.LegacyKernelServiceInitializerImpl.install()\n            //which is strange since it should be loading it all from the current jboss modules\n            //Also this works in several other tests\n            .dontPersistXml();\n\n        KernelServices mainServicesB = builderB.build();\n        KernelServices legacyServicesB = mainServicesB.getLegacyServices(version_1_3_0);\n        Assert.assertNotNull(legacyServicesB);\n        Assert.assertTrue(\"main services did not boot\", mainServicesB.isSuccessfulBoot());\n        Assert.assertTrue(legacyServicesB.isSuccessfulBoot());\n\n        // test failed operations involving expressions\n        List<ModelNode> xmlOps_backup = builderB.parseXmlResource(\"infinispan-transformer-2_0-backup.xml\");\n        ModelTestUtils.checkFailedTransformedBootOperations(mainServicesB, version_1_3_0, xmlOps_backup, getFailedOperationConfig130());\n        mainServicesB.shutdown();\n\n    }","id":8212,"modified_method":"public void testRejections_1_3_0(ModelTestControllerVersion controllerVersion, String ... mavenResourceURLs) throws Exception {\n        ModelVersion version_1_3_0 = ModelVersion.create(1, 3, 0);\n\n        // create builder for current subsystem version\n        KernelServicesBuilder builderA = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT);\n\n        // initialise the legacy services\n        LegacyKernelServicesInitializer legacyInitializerA = builderA.createLegacyKernelServicesBuilder(null, controllerVersion, version_1_3_0);\n        for (String mavenResourceURL : mavenResourceURLs) {\n            legacyInitializerA.addMavenResourceURL(mavenResourceURL);\n        }\n        //TODO storing the model triggers the weirdness mentioned in SubsystemTestDelegate.LegacyKernelServiceInitializerImpl.install()\n        //which is strange since it should be loading it all from the current jboss modules\n        //Also this works in several other tests\n        legacyInitializerA.dontPersistXml();\n\n        KernelServices mainServicesA = builderA.build();\n        KernelServices legacyServicesA = mainServicesA.getLegacyServices(version_1_3_0);\n        Assert.assertNotNull(legacyServicesA);\n        Assert.assertTrue(\"main services did not boot\", mainServicesA.isSuccessfulBoot());\n        Assert.assertTrue(legacyServicesA.isSuccessfulBoot());\n\n        // test failed operations involving expressions\n        List<ModelNode> xmlOps_expressions = builderA.parseXmlResource(\"infinispan-transformer-2_0-expressions.xml\");\n        ModelTestUtils.checkFailedTransformedBootOperations(mainServicesA, version_1_3_0, xmlOps_expressions, getFailedOperationConfig130());\n        mainServicesA.shutdown();\n\n        // create builder for current subsystem version\n        KernelServicesBuilder builderB = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT);\n\n        // initialize the legacy services\n        LegacyKernelServicesInitializer legacyInitializerB = builderB.createLegacyKernelServicesBuilder(null, controllerVersion, version_1_3_0);\n        for (String mavenResourceURL : mavenResourceURLs) {\n            legacyInitializerB.addMavenResourceURL(mavenResourceURL);\n        }\n        //TODO storing the model triggers the weirdness mentioned in SubsystemTestDelegate.LegacyKernelServiceInitializerImpl.install()\n        //which is strange since it should be loading it all from the current jboss modules\n        //Also this works in several other tests\n        legacyInitializerB.dontPersistXml();\n\n        KernelServices mainServicesB = builderB.build();\n        KernelServices legacyServicesB = mainServicesB.getLegacyServices(version_1_3_0);\n        Assert.assertNotNull(legacyServicesB);\n        Assert.assertTrue(\"main services did not boot\", mainServicesB.isSuccessfulBoot());\n        Assert.assertTrue(legacyServicesB.isSuccessfulBoot());\n\n        // test failed operations involving expressions\n        List<ModelNode> xmlOps_backup = builderB.parseXmlResource(\"infinispan-transformer-2_0-backup.xml\");\n        ModelTestUtils.checkFailedTransformedBootOperations(mainServicesB, version_1_3_0, xmlOps_backup, getFailedOperationConfig130());\n        mainServicesB.shutdown();\n\n    }","commit_id":"7730487047cc0431eb425e3e5f41c67a98325fb5","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Stops the Google Contacts service.\n     *\n     * @param bundleContext BundleContext\n     * @throws Exception if something goes wrong when stopping service\n     */\n    public void stop(BundleContext bundleContext)\n        throws Exception\n    {\n        if (serviceRegistration != null)\n        {\n            serviceRegistration.unregister();\n            serviceRegistration = null;\n        }\n\n        /* remove contact source services */\n        for(Map.Entry<GoogleContactsSourceService, ServiceRegistration> entry :\n            cssList.entrySet())\n        {\n            if (entry.getValue() != null)\n            {\n                try\n                {\n                    entry.getValue().unregister();\n                }\n                finally\n                {\n                    entry.getKey().stop();\n                }\n            }\n        }\n        cssList.clear();\n\n        GoogleContactsActivator.bundleContext = null;\n    }","id":8213,"modified_method":"/**\n     * Stops the Google Contacts service.\n     *\n     * @param bundleContext BundleContext\n     * @throws Exception if something goes wrong when stopping service\n     */\n    public void stop(BundleContext bundleContext)\n        throws Exception\n    {\n        if (serviceRegistration != null)\n        {\n            serviceRegistration.unregister();\n            serviceRegistration = null;\n        }\n\n        /* remove contact source services */\n        for(Map.Entry<GoogleContactsSourceService, ServiceRegistration<?>> entry :\n            cssList.entrySet())\n        {\n            if (entry.getValue() != null)\n            {\n                try\n                {\n                    entry.getValue().unregister();\n                }\n                finally\n                {\n                    entry.getKey().stop();\n                }\n            }\n        }\n        cssList.clear();\n\n        GoogleContactsActivator.bundleContext = null;\n    }","commit_id":"37a8c45280eced1ea33392416fbe0b39c71fe0a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns a reference to a CredentialsStorageConfigurationService\n     * implementation currently registered in the bundle context or null if no\n     * such implementation was found.\n     *\n     * @return a currently valid implementation of the\n     * CredentialsStorageService.\n     */\n    public static CredentialsStorageService getCredentialsService()\n    {\n        if(credentialsService == null)\n        {\n            ServiceReference confReference\n                = bundleContext.getServiceReference(\n                        CredentialsStorageService.class.getName());\n            credentialsService\n                = (CredentialsStorageService) bundleContext.getService(\n                        confReference);\n        }\n        return credentialsService;\n    }","id":8214,"modified_method":"/**\n     * Returns a reference to a CredentialsStorageConfigurationService\n     * implementation currently registered in the bundle context or null if no\n     * such implementation was found.\n     *\n     * @return a currently valid implementation of the\n     * CredentialsStorageService.\n     */\n    public static CredentialsStorageService getCredentialsService()\n    {\n        if(credentialsService == null)\n        {\n            credentialsService =\n                ServiceUtils.getService(bundleContext,\n                    CredentialsStorageService.class);\n        }\n        return credentialsService;\n    }","commit_id":"37a8c45280eced1ea33392416fbe0b39c71fe0a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Enable contact source service with specified\n     * <tt>GoogleContactsConnection<\/tt>.\n     *\n     * @param cnx <tt>GoogleContactsConnection<\/tt>\n     * @param googleTalk if the contact source has been created as GoogleTalk\n     * account or via external Google Contacts\n     * @return a <tt>GoogleContactsSourceService<\/tt> instance\n     */\n    public static GoogleContactsSourceService enableContactSource(\n                                                GoogleContactsConnection cnx,\n                                                boolean googleTalk)\n    {\n        GoogleContactsSourceService css = new GoogleContactsSourceService(cnx);\n        ServiceRegistration cssServiceRegistration = null;\n\n        css.setGoogleTalk(googleTalk);\n\n        try\n        {\n            cssServiceRegistration\n                = bundleContext.registerService(\n                        ContactSourceService.class.getName(),\n                        css,\n                        null);\n        }\n        finally\n        {\n            if (cssServiceRegistration == null)\n            {\n                css.stop();\n                css = null;\n            }\n            else\n            {\n                cssList.put(css, cssServiceRegistration);\n            }\n        }\n\n        return css;\n    }","id":8215,"modified_method":"/**\n     * Enable contact source service with specified\n     * <tt>GoogleContactsConnection<\/tt>.\n     *\n     * @param cnx <tt>GoogleContactsConnection<\/tt>\n     * @param googleTalk if the contact source has been created as GoogleTalk\n     * account or via external Google Contacts\n     * @return a <tt>GoogleContactsSourceService<\/tt> instance\n     */\n    public static GoogleContactsSourceService enableContactSource(\n                                                GoogleContactsConnection cnx,\n                                                boolean googleTalk)\n    {\n        GoogleContactsSourceService css = new GoogleContactsSourceService(cnx);\n        ServiceRegistration<?> cssServiceRegistration = null;\n\n        css.setGoogleTalk(googleTalk);\n\n        try\n        {\n            cssServiceRegistration\n                = bundleContext.registerService(\n                        ContactSourceService.class.getName(),\n                        css,\n                        null);\n        }\n        finally\n        {\n            if (cssServiceRegistration == null)\n            {\n                css.stop();\n                css = null;\n            }\n            else\n            {\n                cssList.put(css, cssServiceRegistration);\n            }\n        }\n\n        return css;\n    }","commit_id":"37a8c45280eced1ea33392416fbe0b39c71fe0a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns a reference to a ResourceManagementService implementation\n     * currently registered in the bundle context or null if no such\n     * implementation was found.\n     *\n     * @return a currently valid implementation of the\n     * ResourceManagementService.\n     */\n    public static ResourceManagementService getResourceManagementService()\n    {\n        if(resourceService == null)\n        {\n            ServiceReference confReference\n                = bundleContext.getServiceReference(\n                        ResourceManagementService.class.getName());\n            resourceService\n                = (ResourceManagementService) bundleContext.getService(\n                        confReference);\n        }\n        return resourceService;\n    }","id":8216,"modified_method":"/**\n     * Returns a reference to a ResourceManagementService implementation\n     * currently registered in the bundle context or null if no such\n     * implementation was found.\n     *\n     * @return a currently valid implementation of the\n     * ResourceManagementService.\n     */\n    public static ResourceManagementService getResourceManagementService()\n    {\n        if(resourceService == null)\n        {\n            resourceService =\n                ResourceManagementServiceUtils.getService(bundleContext);\n        }\n        return resourceService;\n    }","commit_id":"37a8c45280eced1ea33392416fbe0b39c71fe0a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Implements the <tt>ServiceListener<\/tt> method. Verifies whether the\n     * passed event concerns a <tt>ProtocolProviderService<\/tt> and adds the\n     * corresponding UI controls.\n     *\n     * @param event The <tt>ServiceEvent<\/tt> object.\n     */\n    private void serviceChanged(ServiceEvent event)\n    {\n        ServiceReference serviceRef = event.getServiceReference();\n\n        // if the event is caused by a bundle being stopped, we don't want to\n        // know\n        if (serviceRef.getBundle().getState() == Bundle.STOPPING)\n        {\n            return;\n        }\n\n        Object service = bundleContext.getService(serviceRef);\n\n        // we don't care if the source service is not a protocol provider\n        if (!(service instanceof ProtocolProviderService))\n        {\n            return;\n        }\n\n        // we don't care if the protocol provider is not a Jabber ones\n        if(((ProtocolProviderService)service).getProtocolName() !=\n            ProtocolNames.JABBER)\n        {\n            return;\n        }\n\n        switch (event.getType())\n        {\n        case ServiceEvent.REGISTERED:\n            this.handleProviderAdded((ProtocolProviderService) service);\n            break;\n        case ServiceEvent.UNREGISTERING:\n            this.handleProviderRemoved((ProtocolProviderService) service);\n            break;\n        }\n    }","id":8217,"modified_method":"/**\n     * Implements the <tt>ServiceListener<\/tt> method. Verifies whether the\n     * passed event concerns a <tt>ProtocolProviderService<\/tt> and adds the\n     * corresponding UI controls.\n     *\n     * @param event The <tt>ServiceEvent<\/tt> object.\n     */\n    private void serviceChanged(ServiceEvent event)\n    {\n        ServiceReference<?> serviceRef = event.getServiceReference();\n\n        // if the event is caused by a bundle being stopped, we don't want to\n        // know\n        if (serviceRef.getBundle().getState() == Bundle.STOPPING)\n        {\n            return;\n        }\n\n        Object service = bundleContext.getService(serviceRef);\n\n        // we don't care if the source service is not a protocol provider\n        if (!(service instanceof ProtocolProviderService))\n        {\n            return;\n        }\n\n        // we don't care if the protocol provider is not a Jabber ones\n        if(((ProtocolProviderService)service).getProtocolName() !=\n            ProtocolNames.JABBER)\n        {\n            return;\n        }\n\n        switch (event.getType())\n        {\n        case ServiceEvent.REGISTERED:\n            this.handleProviderAdded((ProtocolProviderService) service);\n            break;\n        case ServiceEvent.UNREGISTERING:\n            this.handleProviderRemoved((ProtocolProviderService) service);\n            break;\n        }\n    }","commit_id":"37a8c45280eced1ea33392416fbe0b39c71fe0a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Disable contact source service with specified\n     * <tt>GoogleContactsConnection<\/tt>.\n     *\n     * @param login login\n     */\n    public static void disableContactSource(String login)\n    {\n        GoogleContactsSourceService found = null;\n\n        for(Map.Entry<GoogleContactsSourceService, ServiceRegistration> entry :\n            cssList.entrySet())\n        {\n            String cssName = entry.getKey().getLogin();\n\n            if(cssName.equals(login))\n            {\n                try\n                {\n                    entry.getValue().unregister();\n                }\n                finally\n                {\n                    entry.getKey().stop();\n                }\n                found = entry.getKey();\n                break;\n            }\n        }\n\n        if(found != null)\n        {\n            cssList.remove(found);\n        }\n    }","id":8218,"modified_method":"/**\n     * Disable contact source service with specified\n     * <tt>GoogleContactsConnection<\/tt>.\n     *\n     * @param login login\n     */\n    public static void disableContactSource(String login)\n    {\n        GoogleContactsSourceService found = null;\n\n        for(Map.Entry<GoogleContactsSourceService, ServiceRegistration<?>> entry :\n            cssList.entrySet())\n        {\n            String cssName = entry.getKey().getLogin();\n\n            if(cssName.equals(login))\n            {\n                try\n                {\n                    entry.getValue().unregister();\n                }\n                finally\n                {\n                    entry.getKey().stop();\n                }\n                found = entry.getKey();\n                break;\n            }\n        }\n\n        if(found != null)\n        {\n            cssList.remove(found);\n        }\n    }","commit_id":"37a8c45280eced1ea33392416fbe0b39c71fe0a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Enable contact source service with specified\n     * <tt>GoogleContactsConnection<\/tt>.\n     *\n     * @param login login\n     * @param password password\n     * @param googleTalk if the provider service is GoogleTalk\n     * @return a <tt>GoogleContactsSourceService<\/tt> instance\n     */\n    public static GoogleContactsSourceService enableContactSource(\n                                                String login, String password,\n                                                boolean googleTalk)\n    {\n        GoogleContactsSourceService css = new GoogleContactsSourceService(\n                login, password);\n        ServiceRegistration cssServiceRegistration = null;\n\n        css.setGoogleTalk(googleTalk);\n\n        try\n        {\n            cssServiceRegistration\n                = bundleContext.registerService(\n                        ContactSourceService.class.getName(),\n                        css,\n                        null);\n        }\n        finally\n        {\n            if (cssServiceRegistration == null)\n            {\n                css.stop();\n                css = null;\n            }\n            else\n            {\n                cssList.put(css, cssServiceRegistration);\n            }\n        }\n\n        return css;\n    }","id":8219,"modified_method":"/**\n     * Enable contact source service with specified\n     * <tt>GoogleContactsConnection<\/tt>.\n     *\n     * @param login login\n     * @param password password\n     * @param googleTalk if the provider service is GoogleTalk\n     * @return a <tt>GoogleContactsSourceService<\/tt> instance\n     */\n    public static GoogleContactsSourceService enableContactSource(\n                                                String login, String password,\n                                                boolean googleTalk)\n    {\n        GoogleContactsSourceService css = new GoogleContactsSourceService(\n                login, password);\n        ServiceRegistration<?> cssServiceRegistration = null;\n\n        css.setGoogleTalk(googleTalk);\n\n        try\n        {\n            cssServiceRegistration\n                = bundleContext.registerService(\n                        ContactSourceService.class.getName(),\n                        css,\n                        null);\n        }\n        finally\n        {\n            if (cssServiceRegistration == null)\n            {\n                css.stop();\n                css = null;\n            }\n            else\n            {\n                cssList.put(css, cssServiceRegistration);\n            }\n        }\n\n        return css;\n    }","commit_id":"37a8c45280eced1ea33392416fbe0b39c71fe0a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Disable contact source service with specified\n     * <tt>GoogleContactsConnection<\/tt>.\n     *\n     * @param cnx <tt>GoogleContactsConnection<\/tt>.\n     */\n    public static void disableContactSource(GoogleContactsConnection cnx)\n    {\n        GoogleContactsSourceService found = null;\n\n        if(cnx == null)\n        {\n            return;\n        }\n\n        for(Map.Entry<GoogleContactsSourceService, ServiceRegistration> entry :\n            cssList.entrySet())\n        {\n            String cssName = entry.getKey().getLogin();\n            String name = cnx.getLogin();\n\n            if(cssName.equals(name))\n            {\n                try\n                {\n                    entry.getValue().unregister();\n                }\n                finally\n                {\n                    entry.getKey().stop();\n                }\n                found = entry.getKey();\n                break;\n            }\n        }\n\n        if(found != null)\n        {\n            cssList.remove(found);\n        }\n    }","id":8220,"modified_method":"/**\n     * Disable contact source service with specified\n     * <tt>GoogleContactsConnection<\/tt>.\n     *\n     * @param cnx <tt>GoogleContactsConnection<\/tt>.\n     */\n    public static void disableContactSource(GoogleContactsConnection cnx)\n    {\n        GoogleContactsSourceService found = null;\n\n        if(cnx == null)\n        {\n            return;\n        }\n\n        for(Map.Entry<GoogleContactsSourceService, ServiceRegistration<?>> entry :\n            cssList.entrySet())\n        {\n            String cssName = entry.getKey().getLogin();\n            String name = cnx.getLogin();\n\n            if(cssName.equals(name))\n            {\n                try\n                {\n                    entry.getValue().unregister();\n                }\n                finally\n                {\n                    entry.getKey().stop();\n                }\n                found = entry.getKey();\n                break;\n            }\n        }\n\n        if(found != null)\n        {\n            cssList.remove(found);\n        }\n    }","commit_id":"37a8c45280eced1ea33392416fbe0b39c71fe0a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns a reference to a ConfigurationService implementation currently\n     * registered in the bundle context or null if no such implementation was\n     * found.\n     *\n     * @return a currently valid implementation of the ConfigurationService.\n     */\n    public static ConfigurationService getConfigService()\n    {\n        if(configService == null)\n        {\n            ServiceReference confReference\n                = bundleContext.getServiceReference(\n                        ConfigurationService.class.getName());\n            configService\n                = (ConfigurationService) bundleContext.getService(\n                        confReference);\n        }\n        return configService;\n    }","id":8221,"modified_method":"/**\n     * Returns a reference to a ConfigurationService implementation currently\n     * registered in the bundle context or null if no such implementation was\n     * found.\n     *\n     * @return a currently valid implementation of the ConfigurationService.\n     */\n    public static ConfigurationService getConfigService()\n    {\n        if(configService == null)\n        {\n            configService =\n                ServiceUtils.getService(bundleContext,\n                    ConfigurationService.class);\n        }\n        return configService;\n    }","commit_id":"37a8c45280eced1ea33392416fbe0b39c71fe0a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Initialize connection.\n     *\n     * @return connection status\n     */\n    public synchronized ConnectionStatus connect()\n    {\n        try\n        {\n            googleService.setOAuth2Credentials(this.store.get());\n            return ConnectionStatus.SUCCESS;\n        }\n        catch (FailedAcquireCredentialException e)\n        {\n            logger.error(\"Failed to acquire credentials.\", e);\n            return ConnectionStatus.ERROR_UNKNOWN;\n        }\n    }","id":8222,"modified_method":"/**\n     * Initialize connection.\n     *\n     * @return connection status\n     */\n    public synchronized ConnectionStatus connect()\n    {\n        try\n        {\n            googleService.setOAuth2Credentials(this.store.get(this.login));\n            return ConnectionStatus.SUCCESS;\n        }\n        catch (FailedAcquireCredentialException e)\n        {\n            logger.error(\"Failed to acquire credentials.\", e);\n            return ConnectionStatus.ERROR_UNKNOWN;\n        }\n    }","commit_id":"37a8c45280eced1ea33392416fbe0b39c71fe0a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"public OAuthApprovalDialog()\n        {\n            this.setModal(true);\n            this.label = new SIPCommLinkButton(\"Click here to approve.\");\n            this.label.addActionListener(new ActionListener()\n            {\n\n                @Override\n                public void actionPerformed(ActionEvent e)\n                {\n                    LOGGER.info(\"Request user for approval via web page: \" + APPROVAL_URL);\n                    // FIXME open browser\n                }\n            });\n            this.setLayout(new BorderLayout());\n            this.add(this.label, BorderLayout.NORTH);\n            this.add(new JLabel(\"Code\"), BorderLayout.WEST);\n            this.add(this.code, BorderLayout.CENTER);\n            final JButton button = new JButton(\"Done\");\n            button.addActionListener(new ActionListener() {\n\n                @Override\n                public void actionPerformed(ActionEvent e)\n                {\n                    OAuthApprovalDialog.this.dispose();\n                }\n            });\n            this.add(button, BorderLayout.SOUTH);\n            this.pack();\n        }","id":8223,"modified_method":"public OAuthApprovalDialog(final String identity)\n        {\n            this.setModal(true);\n            this.label =\n                new SIPCommLinkButton(\n                    \"Click here to approve. Make sure you log in as \"\n                        + identity);\n            this.label.addActionListener(new ActionListener()\n            {\n\n                @Override\n                public void actionPerformed(ActionEvent e)\n                {\n                    LOGGER.info(\"Request user for approval via web page: \" + APPROVAL_URL);\n                    // FIXME open browser\n                }\n            });\n            this.setLayout(new BorderLayout());\n            this.add(this.label, BorderLayout.NORTH);\n            this.add(new JLabel(\"Code\"), BorderLayout.WEST);\n            this.add(this.code, BorderLayout.CENTER);\n            final JButton button = new JButton(\"Done\");\n            button.addActionListener(new ActionListener() {\n\n                @Override\n                public void actionPerformed(ActionEvent e)\n                {\n                    OAuthApprovalDialog.this.dispose();\n                }\n            });\n            this.add(button, BorderLayout.SOUTH);\n            this.pack();\n        }","commit_id":"37a8c45280eced1ea33392416fbe0b39c71fe0a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Create credential instance suitable for use in Google Contacts API.\n     * \n     * @param store reference to the credential store for updating credential\n     *            data upon refreshing and other cases\n     * @param approvalCode the approval code received from Google by the user\n     *            accepting the authorization request\n     * @return Returns a Credential instance.\n     * @throws URISyntaxException In case of bad OAuth 2 redirect URI.\n     */\n    private static Credential createCredential(\n        final AtomicReference<Credential> store, final TokenData data) throws URISyntaxException\n    {\n        final Credential.Builder builder =\n            new Credential.Builder(\n                BearerToken.authorizationHeaderAccessMethod());\n        builder.setTokenServerUrl(GOOGLE_OAUTH2_TOKEN_SERVER);\n        builder.setTransport(new NetHttpTransport());\n        builder.setJsonFactory(new JacksonFactory());\n        builder.setClientAuthentication(new HttpExecuteInterceptor()\n        {\n\n            @Override\n            public void intercept(HttpRequest request) throws IOException\n            {\n                final Object data =\n                    ((UrlEncodedContent) request.getContent()).getData();\n                if (data instanceof RefreshTokenRequest)\n                {\n                    // Inject client authentication credentials in requests.\n                    final RefreshTokenRequest content =\n                        (RefreshTokenRequest) data;\n                    content.put(\"client_id\", GOOGLE_API_CLIENT_ID);\n                    content.put(\"client_secret\", GOOGLE_API_CLIENT_SECRET);\n                    LOGGER.info(\"Inserting client authentication data into \"\n                        + \" refresh token request.\");\n                    if (LOGGER.isDebugEnabled())\n                    {\n                        LOGGER.debug(\"Request: \" + content.toString());\n                    }\n                }\n                else\n                {\n                    LOGGER.debug(\"Unexpected type of request found.\");\n                }\n            }\n        });\n        builder.addRefreshListener(new CredentialRefreshListener()\n        {\n\n            @Override\n            public void onTokenResponse(Credential credential,\n                TokenResponse tokenResponse) throws IOException\n            {\n                LOGGER.debug(\"Successful token refresh response: \"\n                    + tokenResponse.toPrettyString());\n                store.set(credential);\n            }\n\n            @Override\n            public void onTokenErrorResponse(Credential credential,\n                TokenErrorResponse tokenErrorResponse) throws IOException\n            {\n                if (LOGGER.isDebugEnabled())\n                {\n                    LOGGER.debug(\"Failed token refresh response: \"\n                        + tokenErrorResponse.toPrettyString());\n                }\n                LOGGER.error(\"Failed to refresh OAuth2 token: \"\n                    + tokenErrorResponse.getError() + \": \"\n                    + tokenErrorResponse.getErrorDescription());\n            }\n        });\n        final Credential credential = builder.build();\n        credential.setAccessToken(data.accessToken);\n        credential.setRefreshToken(data.refreshToken);\n        credential.setExpiresInSeconds(data.expiration);\n        return credential;\n    }","id":8224,"modified_method":"/**\n     * Create credential instance suitable for use in Google Contacts API.\n     * \n     * @param store reference to the credential store for updating credential\n     *            data upon refreshing and other cases\n     * @param approvalCode the approval code received from Google by the user\n     *            accepting the authorization request\n     * @return Returns a Credential instance.\n     * @throws URISyntaxException In case of bad OAuth 2 redirect URI.\n     */\n    private static Credential createCredential(\n        final AtomicReference<Credential> store, final TokenData data)\n        throws URISyntaxException\n    {\n        final Credential.Builder builder =\n            new Credential.Builder(\n                BearerToken.authorizationHeaderAccessMethod());\n        builder.setTokenServerUrl(GOOGLE_OAUTH2_TOKEN_SERVER);\n        builder.setTransport(new NetHttpTransport());\n        builder.setJsonFactory(new JacksonFactory());\n        builder.setClientAuthentication(new HttpExecuteInterceptor()\n        {\n\n            @Override\n            public void intercept(HttpRequest request) throws IOException\n            {\n                final Object data =\n                    ((UrlEncodedContent) request.getContent()).getData();\n                if (data instanceof RefreshTokenRequest)\n                {\n                    // Inject client authentication credentials in requests.\n                    final RefreshTokenRequest content =\n                        (RefreshTokenRequest) data;\n                    content.put(\"client_id\", GOOGLE_API_CLIENT_ID);\n                    content.put(\"client_secret\", GOOGLE_API_CLIENT_SECRET);\n                    LOGGER.info(\"Inserting client authentication data into \"\n                        + \"refresh token request.\");\n                    if (LOGGER.isDebugEnabled())\n                    {\n                        LOGGER.debug(\"Request: \" + content.toString());\n                    }\n                }\n                else\n                {\n                    LOGGER.debug(\"Unexpected type of request found.\");\n                }\n            }\n        });\n        builder.addRefreshListener(new CredentialRefreshListener()\n        {\n\n            @Override\n            public void onTokenResponse(Credential credential,\n                TokenResponse tokenResponse) throws IOException\n            {\n                LOGGER.debug(\"Successful token refresh response: \"\n                    + tokenResponse.toPrettyString());\n                store.set(credential);\n            }\n\n            @Override\n            public void onTokenErrorResponse(Credential credential,\n                TokenErrorResponse tokenErrorResponse) throws IOException\n            {\n                if (LOGGER.isDebugEnabled())\n                {\n                    LOGGER.debug(\"Failed token refresh response: \"\n                        + tokenErrorResponse.toPrettyString());\n                }\n                LOGGER.error(\"Failed to refresh OAuth2 token: \"\n                    + tokenErrorResponse.getError() + \": \"\n                    + tokenErrorResponse.getErrorDescription());\n            }\n        });\n        final Credential credential = builder.build();\n        credential.setAccessToken(data.accessToken);\n        credential.setRefreshToken(data.refreshToken);\n        credential.setExpiresInSeconds(data.expiration);\n        return credential;\n    }","commit_id":"37a8c45280eced1ea33392416fbe0b39c71fe0a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Request an authentication token using the approval code received from the\n     * user.\n     * \n     * @param approvalCode the approval code\n     * @return Returns the acquired token data from OAuth 2 token server.\n     */\n    private static TokenData requestAuthenticationToken(final String approvalCode)\n    {\n        // FIXME actually acquire credential\n        return new TokenData(\"\", \"\", 3600L);\n    }","id":8225,"modified_method":"/**\n     * Request an authentication token using the approval code received from the\n     * user.\n     * \n     * @param approvalCode the approval code\n     * @return Returns the acquired token data from OAuth 2 token server.\n     * @throws IOException \n     * @throws ClientProtocolException \n     */\n    private static TokenData requestAuthenticationToken(\n        final String approvalCode) throws ClientProtocolException, IOException\n    {\n        final HttpClient client = new DefaultHttpClient();\n        final HttpPost post = new HttpPost(GOOGLE_OAUTH2_TOKEN_SERVER.toURI());\n        final UrlEncodedFormEntity entity =\n            new UrlEncodedFormEntity(Arrays.asList(new BasicNameValuePair(\n                \"code\", approvalCode), new BasicNameValuePair(\"client_id\",\n                GOOGLE_API_CLIENT_ID), new BasicNameValuePair(\"client_secret\",\n                GOOGLE_API_CLIENT_SECRET), new BasicNameValuePair(\n                \"redirect_uri\", GOOGLE_API_OAUTH2_REDIRECT_URI),\n                new BasicNameValuePair(\"grant_type\", GOOGLE_API_GRANT_TYPE)));\n        post.setEntity(entity);\n        final HttpResponse httpResponse = client.execute(post);\n        final JsonParser parser =\n            JacksonFactory.getDefaultInstance().createJsonParser(\n                httpResponse.getEntity().getContent());\n        try\n        {\n            // Token response components initialized with defaults in case\n            // fields are missing in the token server response.\n            String accessToken = \"\";\n            String refreshToken = \"\";\n            long expiresIn = 3600;\n            // Parse token server response.\n            String found;\n            while (parser.nextToken() != JsonToken.END_OBJECT)\n            {\n                found = parser.skipToKey(TOKEN_RESPONSE_FIELDS);\n                if (REFRESH_TOKEN_SYMBOL.equals(found))\n                {\n                    refreshToken = parser.getText();\n                }\n                else if (ACCESS_TOKEN_SYMBOL.equals(found))\n                {\n                    accessToken = parser.getText();\n                }\n                else if (EXPIRES_IN_SYMBOL.equals(found))\n                {\n                    expiresIn = parser.getLongValue();\n                }\n            }\n            return new TokenData(accessToken, refreshToken, expiresIn);\n        }\n        finally\n        {\n            parser.close();\n        }\n    }","commit_id":"37a8c45280eced1ea33392416fbe0b39c71fe0a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Acquire a new credential instance.\n     *\n     * @param store credential store to update upon refreshing and other\n     *            operations\n     * @return Acquires and returns the credential instance.\n     * @throws MalformedURLException In case of bad redirect URL.\n     * @throws URISyntaxException In case of bad redirect URI.\n     */\n    private static void acquireCredential(\n        final AtomicReference<Credential> store)\n        throws MalformedURLException,\n        URISyntaxException\n    {\n        LOGGER.info(\"No credentials available yet. Requesting user to \"\n            + \"approve access to Contacts API using URL: \" + APPROVAL_URL);\n        final OAuthApprovalDialog dialog = new OAuthApprovalDialog();\n        dialog.setVisible(true);\n        final String approvalCode = dialog.getApprovalCode();\n        LOGGER.debug(\"Approval code from user: \" + approvalCode);\n        final TokenData data = requestAuthenticationToken(approvalCode);\n        store.set(createCredential(store, data));\n    }","id":8226,"modified_method":"/**\n     * Acquire a new credential instance.\n     *\n     * @param store credential store to update upon refreshing and other\n     *            operations\n     * @param identity the identity to which the refresh token belongs\n     * @return Acquires and returns the credential instance.\n     * @throws URISyntaxException In case of bad redirect URI.\n     * @throws IOException \n     * @throws ClientProtocolException \n     */\n    private static void acquireCredential(\n        final AtomicReference<Credential> store, final String identity)\n        throws URISyntaxException, ClientProtocolException, IOException\n    {\n        final TokenData token;\n        String refreshToken = restoreRefreshToken(identity);\n        if (refreshToken == null)\n        {\n            LOGGER.info(\"No credentials available yet. Requesting user to \"\n                + \"approve access to Contacts API for identity \" + identity\n                + \" using URL: \" + APPROVAL_URL);\n            final OAuthApprovalDialog dialog =\n                new OAuthApprovalDialog(identity);\n            dialog.setVisible(true);\n            final String approvalCode = dialog.getApprovalCode();\n            LOGGER.debug(\"Approval code from user: \" + approvalCode);\n            token = requestAuthenticationToken(approvalCode);\n            saveRefreshToken(token, identity);\n        }\n        else\n        {\n            token = new TokenData(\"TOKEN_NOT_AVAILABLE\", refreshToken, 0);\n        }\n        store.set(createCredential(store, token));\n    }","commit_id":"37a8c45280eced1ea33392416fbe0b39c71fe0a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns the <tt>ConfigurationService<\/tt> obtained from the bundle\n     * context.\n     * @return the <tt>ConfigurationService<\/tt> obtained from the bundle\n     * context\n     */\n    public static ConfigurationService getConfigurationService()\n    {\n        if(configService == null) {\n            ServiceReference configReference = bundleContext\n                .getServiceReference(ConfigurationService.class.getName());\n\n            configService = (ConfigurationService) bundleContext\n                .getService(configReference);\n        }\n\n        return configService;\n    }","id":8227,"modified_method":"/**\n     * Returns the <tt>ConfigurationService<\/tt> obtained from the bundle\n     * context.\n     * @return the <tt>ConfigurationService<\/tt> obtained from the bundle\n     * context\n     */\n    public static ConfigurationService getConfigurationService()\n    {\n        if(configService == null)\n        {\n            configService\n                = ServiceUtils.getService(\n                        bundleContext,\n                        ConfigurationService.class);\n        }\n        return configService;\n    }","commit_id":"a788c54d13244be7c9865c46b8e57cc1d13a6321","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Gets a reference to a <code>ShutdownService<\/code> implementation\n     * currently registered in the bundle context of the active\n     * <code>OsDependentActivator<\/code> instance.\n     * <p>\n     * The returned reference to <code>ShutdownService<\/code> is not being\n     * cached.\n     * <\/p>\n     *\n     * @return reference to a <code>ShutdownService<\/code> implementation\n     *         currently registered in the bundle context of the active\n     *         <code>OsDependentActivator<\/code> instance\n     */\n    public static ShutdownService getShutdownService()\n    {\n        return\n            (ShutdownService)\n                bundleContext.getService(\n                    bundleContext.getServiceReference(\n                        ShutdownService.class.getName()));\n    }","id":8228,"modified_method":"/**\n     * Gets a reference to a <tt>ShutdownService<\/tt> implementation currently\n     * registered in the <tt>BundleContext<\/tt> of the active\n     * <tt>OsDependentActivator<\/tt> instance.\n     * <p>\n     * The returned reference to <tt>ShutdownService<\/tt> is not cached.\n     * <\/p>\n     *\n     * @return reference to a <tt>ShutdownService<\/tt> implementation currently\n     * registered in the <tt>BundleContext<\/tt> of the active\n     * <tt>OsDependentActivator<\/tt> instance\n     */\n    public static ShutdownService getShutdownService()\n    {\n        return ServiceUtils.getService(bundleContext, ShutdownService.class);\n    }","commit_id":"a788c54d13244be7c9865c46b8e57cc1d13a6321","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Called when this bundle is started.\n     *\n     * @param bc The execution context of the bundle being started.\n     * @throws Exception If\n     */\n    public void start(BundleContext bc)\n            throws Exception\n    {\n        bundleContext = bc;\n\n        try\n        {\n            // Adds a MacOSX specific dock icon listener in order to show main\n            // contact list window on dock icon click.\n            if (OSUtils.IS_MAC)\n                MacOSXDockIcon.addDockIconListener();\n\n            // Create the notification service implementation\n            SystrayService systrayService = new SystrayServiceJdicImpl();\n\n            if (logger.isInfoEnabled())\n                logger.info(\"Systray Service...[  STARTED ]\");\n\n            bundleContext.registerService(\n                    SystrayService.class.getName(),\n                    systrayService,\n                    null);\n\n            if (logger.isInfoEnabled())\n                logger.info(\"Systray Service ...[REGISTERED]\");\n\n            // Create the desktop service implementation\n            DesktopService desktopService = new DesktopServiceImpl();\n\n            if (logger.isInfoEnabled())\n                logger.info(\"Desktop Service...[  STARTED ]\");\n\n            bundleContext.registerService(\n                    DesktopService.class.getName(),\n                    desktopService,\n                    null);\n\n            if (logger.isInfoEnabled())\n                logger.info(\"Desktop Service ...[REGISTERED]\");\n\n            logger.logEntry();\n        }\n        finally\n        {\n            logger.logExit();\n        }\n    }","id":8229,"modified_method":"/**\n     * Called when this bundle is started.\n     *\n     * @param bc The execution context of the bundle being started.\n     * @throws Exception\n     */\n    @Override\n    public void start(BundleContext bc)\n        throws Exception\n    {\n        bundleContext = bc;\n\n        try\n        {\n            // Adds a MacOSX specific dock icon listener in order to show main\n            // contact list window on dock icon click.\n            if (OSUtils.IS_MAC)\n                MacOSXDockIcon.addDockIconListener();\n\n            // Create the notification service implementation\n            SystrayService systrayService = new SystrayServiceJdicImpl();\n\n            if (logger.isInfoEnabled())\n                logger.info(\"Systray Service...[  STARTED ]\");\n\n            bundleContext.registerService(\n                    SystrayService.class.getName(),\n                    systrayService,\n                    null);\n\n            if (logger.isInfoEnabled())\n                logger.info(\"Systray Service ...[REGISTERED]\");\n\n            // Create the desktop service implementation\n            DesktopService desktopService = new DesktopServiceImpl();\n\n            if (logger.isInfoEnabled())\n                logger.info(\"Desktop Service...[  STARTED ]\");\n\n            bundleContext.registerService(\n                    DesktopService.class.getName(),\n                    desktopService,\n                    null);\n\n            if (logger.isInfoEnabled())\n                logger.info(\"Desktop Service ...[REGISTERED]\");\n\n            logger.logEntry();\n        }\n        finally\n        {\n            logger.logExit();\n        }\n    }","commit_id":"a788c54d13244be7c9865c46b8e57cc1d13a6321","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns the <tt>UIService<\/tt> obtained from the bundle\n     * context.\n     * @return the <tt>UIService<\/tt> obtained from the bundle\n     * context\n     */\n    public static UIService getUIService()\n    {\n        if(uiService == null)\n        {\n            ServiceReference serviceRef = bundleContext\n                .getServiceReference(UIService.class.getName());\n\n            if (serviceRef != null)\n                uiService = (UIService) bundleContext.getService(serviceRef);\n        }\n\n        return uiService;\n    }","id":8230,"modified_method":"/**\n     * Returns the <tt>UIService<\/tt> obtained from the bundle context.\n     * @return the <tt>UIService<\/tt> obtained from the bundle context\n     */\n    public static UIService getUIService()\n    {\n        if(uiService == null)\n            uiService = ServiceUtils.getService(bundleContext, UIService.class);\n        return uiService;\n    }","commit_id":"a788c54d13244be7c9865c46b8e57cc1d13a6321","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Obtains all currently registered ProtocolProviderServices.\n     * @return all currently registered ProtocolProviderServices.\n     */\n    private List<ProtocolProviderService> getProtocolProviders()\n    {\n        List<ProtocolProviderService> providers\n            = new ArrayList<ProtocolProviderService>();\n        ServiceReference[] protocolProviderRefs = null;\n        try\n        {\n            protocolProviderRefs\n                = OsDependentActivator.bundleContext.getServiceReferences(\n                    ProtocolProviderService.class.getName(), null);\n        }\n        catch (InvalidSyntaxException ex)\n        {\n            return providers;\n        }\n        catch(IllegalStateException ise)\n        {\n            // happens sometimes on stopping felix\n        }\n\n        // in case we found any\n        if (protocolProviderRefs != null)\n        {\n            for (ServiceReference protocolProviderRef : protocolProviderRefs)\n            {\n                providers.add(\n                    (ProtocolProviderService)\n                        OsDependentActivator\n                            .bundleContext.getService(protocolProviderRef));\n            }\n        }\n\n        return providers;\n    }","id":8231,"modified_method":"/**\n     * Obtains all currently registered ProtocolProviderServices.\n     * @return all currently registered ProtocolProviderServices.\n     */\n    private List<ProtocolProviderService> getProtocolProviders()\n    {\n        BundleContext bundleContext = OsDependentActivator.bundleContext;\n        Collection<ServiceReference<ProtocolProviderService>> ppsRefs\n            = ServiceUtils.getServiceReferences(\n                    bundleContext,\n                    ProtocolProviderService.class);\n        List<ProtocolProviderService> protocolProviders\n            = new ArrayList<ProtocolProviderService>();\n\n        // in case we found any\n        if ((ppsRefs != null) && !ppsRefs.isEmpty())\n        {\n            for (ServiceReference<ProtocolProviderService> ppsRef : ppsRefs)\n                protocolProviders.add(bundleContext.getService(ppsRef));\n        }\n        return protocolProviders;\n    }","commit_id":"a788c54d13244be7c9865c46b8e57cc1d13a6321","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n         * When a service is registered or unregistered, we update\n         * the provider tables and add/remove listeners (if it supports\n         * BasicInstantMessaging implementation)\n         *\n         * @param event ServiceEvent\n         */\n        public void serviceChanged(ServiceEvent event)\n        {\n            //if the event is caused by a bundle being stopped, we don't want to\n            //know\n            ServiceReference serviceRef = event.getServiceReference();\n\n            if(serviceRef.getBundle().getState() == Bundle.STOPPING)\n                return;\n\n            Object service\n                = OsDependentActivator.bundleContext.getService(serviceRef);\n\n            if (! (service instanceof ProtocolProviderService))\n                return;\n\n            ProtocolProviderService provider = (ProtocolProviderService)service;\n\n            switch (event.getType())\n            {\n            case ServiceEvent.REGISTERED:\n                addAccount(provider);\n                break;\n\n            case ServiceEvent.UNREGISTERING:\n                removeAccount(provider);\n                break;\n            }\n        }","id":8232,"modified_method":"/**\n         * When a service is registered or unregistered, we update\n         * the provider tables and add/remove listeners (if it supports\n         * BasicInstantMessaging implementation)\n         *\n         * @param event ServiceEvent\n         */\n        public void serviceChanged(ServiceEvent event)\n        {\n            //if the event is caused by a bundle being stopped, we don't want to\n            //know\n            ServiceReference<?> serviceRef = event.getServiceReference();\n\n            if(serviceRef.getBundle().getState() == Bundle.STOPPING)\n                return;\n\n            Object service\n                = OsDependentActivator.bundleContext.getService(serviceRef);\n\n            if (! (service instanceof ProtocolProviderService))\n                return;\n\n            ProtocolProviderService provider = (ProtocolProviderService)service;\n\n            switch (event.getType())\n            {\n            case ServiceEvent.REGISTERED:\n                addAccount(provider);\n                break;\n\n            case ServiceEvent.UNREGISTERING:\n                removeAccount(provider);\n                break;\n            }\n        }","commit_id":"a788c54d13244be7c9865c46b8e57cc1d13a6321","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns the <tt>SystrayService<\/tt> obtained from the bundle context.\n     *\n     * @return the <tt>SystrayService<\/tt> obtained from the bundle context\n     */\n    public static SystrayService getSystray()\n    {\n        if (systrayService == null)\n        {\n            ServiceReference serviceReference = bundleContext\n                .getServiceReference(SystrayService.class.getName());\n\n            systrayService = (SystrayService) bundleContext\n                .getService(serviceReference);\n        }\n\n        return systrayService;\n    }","id":8233,"modified_method":"/**\n     * Returns the <tt>SystrayService<\/tt> obtained from the bundle context.\n     *\n     * @return the <tt>SystrayService<\/tt> obtained from the bundle context\n     */\n    public static SystrayService getSystray()\n    {\n        if (systrayService == null)\n        {\n            systrayService = ServiceUtils.getService( bundleContext,\n                                                      SystrayService.class );\n        }\n\n        return systrayService;\n    }","commit_id":"b88978488c9bb5be6534dd225af0a95a5b717600","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Checks whether a stored account with <tt>userID<\/tt> is stored\r\n     * in configuration.\r\n     *\r\n     * @param protocolName the protocol name\r\n     * @param includeHidden whether to check hidden providers\r\n     * @param userID the user id to check.\r\n     * @return <tt>true<\/tt> if there is any account stored in configuration\r\n     * service with <tt>protocolName<\/tt> and <tt>userID<\/tt>,\r\n     * <tt>false<\/tt> otherwise.\r\n     */\r\n    public boolean hasStoredAccount(String protocolName,\r\n                                    boolean includeHidden,\r\n                                    String userID)\r\n    {\r\n        ServiceReference[] factoryRefs = null;\r\n        boolean hasStoredAccounts = false;\r\n\r\n        try\r\n        {\r\n            factoryRefs\r\n                = bundleContext.getServiceReferences(\r\n                    ProtocolProviderFactory.class.getName(), null);\r\n        }\r\n        catch (InvalidSyntaxException ex)\r\n        {\r\n            logger.error(\r\n                \"Failed to retrieve the registered ProtocolProviderFactories\",\r\n                ex);\r\n        }\r\n\r\n        if ((factoryRefs != null) && (factoryRefs.length > 0))\r\n        {\r\n            ConfigurationService configService\r\n                = ProtocolProviderActivator.getConfigurationService();\r\n\r\n            for (ServiceReference factoryRef : factoryRefs)\r\n            {\r\n                ProtocolProviderFactory factory\r\n                    = (ProtocolProviderFactory)\r\n                        bundleContext.getService(factoryRef);\r\n\r\n                if ((protocolName != null)\r\n                    && !protocolName.equals(factory.getProtocolName()))\r\n                {\r\n                    continue;\r\n                }\r\n\r\n                String factoryPackage = getFactoryImplPackageName(factory);\r\n                List<String> storedAccounts\r\n                    = configService\r\n                        .getPropertyNamesByPrefix(factoryPackage + \".acc\",\r\n                            false);\r\n\r\n                /* Ignore the hidden accounts. */\r\n                for (Iterator<String> storedAccountIter =\r\n                    storedAccounts.iterator(); storedAccountIter.hasNext();)\r\n                {\r\n                    String storedAccount = storedAccountIter.next();\r\n                    List<String> storedAccountProperties =\r\n                        configService.getPropertyNamesByPrefix(storedAccount,\r\n                            true);\r\n                    boolean hidden = false;\r\n                    String accountUserID = null;\r\n\r\n                    if (!includeHidden || userID != null)\r\n                    {\r\n                        for (Iterator<String> storedAccountPropertyIter =\r\n                            storedAccountProperties.iterator();\r\n                            storedAccountPropertyIter.hasNext();)\r\n                        {\r\n                            String property = storedAccountPropertyIter.next();\r\n                            String value = configService.getString(property);\r\n\r\n                            property = stripPackagePrefix(property);\r\n\r\n                            if (ProtocolProviderFactory.IS_PROTOCOL_HIDDEN\r\n                                .equals(property))\r\n                            {\r\n                                hidden = (value != null);\r\n                            }\r\n                            else if (ProtocolProviderFactory.USER_ID\r\n                                    .equals(property))\r\n                            {\r\n                                accountUserID = value;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (includeHidden || !hidden)\r\n                    {\r\n                        if(accountUserID != null\r\n                            && userID != null\r\n                            && userID.equals(accountUserID))\r\n                        {\r\n                            hasStoredAccounts = true;\r\n                            break;\r\n                        }\r\n                        else if(userID == null)\r\n                        {\r\n                            hasStoredAccounts = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (hasStoredAccounts || (protocolName != null))\r\n                {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return hasStoredAccounts;\r\n    }","id":8234,"modified_method":"/**\r\n     * Checks whether a stored account with <tt>userID<\/tt> is stored\r\n     * in configuration.\r\n     *\r\n     * @param protocolName the protocol name\r\n     * @param includeHidden whether to check hidden providers\r\n     * @param userID the user id to check.\r\n     * @return <tt>true<\/tt> if there is any account stored in configuration\r\n     * service with <tt>protocolName<\/tt> and <tt>userID<\/tt>,\r\n     * <tt>false<\/tt> otherwise.\r\n     */\r\n    public boolean hasStoredAccount(String protocolName,\r\n                                    boolean includeHidden,\r\n                                    String userID)\r\n    {\r\n        Collection<ServiceReference<ProtocolProviderFactory>> factoryRefs;\r\n        boolean hasStoredAccounts = false;\r\n\r\n        try\r\n        {\r\n            factoryRefs\r\n                = bundleContext.getServiceReferences(\r\n                        ProtocolProviderFactory.class,\r\n                        null);\r\n        }\r\n        catch (InvalidSyntaxException ex)\r\n        {\r\n            factoryRefs = null;\r\n            logger.error(\r\n                \"Failed to retrieve the registered ProtocolProviderFactories\",\r\n                ex);\r\n        }\r\n\r\n        if ((factoryRefs != null) && !factoryRefs.isEmpty())\r\n        {\r\n            ConfigurationService configService\r\n                = ProtocolProviderActivator.getConfigurationService();\r\n\r\n            for (ServiceReference<ProtocolProviderFactory> factoryRef\r\n                    : factoryRefs)\r\n            {\r\n                ProtocolProviderFactory factory\r\n                    = bundleContext.getService(factoryRef);\r\n\r\n                if ((protocolName != null)\r\n                        && !protocolName.equals(factory.getProtocolName()))\r\n                {\r\n                    continue;\r\n                }\r\n\r\n                String factoryPackage = getFactoryImplPackageName(factory);\r\n                List<String> storedAccounts\r\n                    = configService\r\n                        .getPropertyNamesByPrefix(factoryPackage + \".acc\",\r\n                            false);\r\n\r\n                /* Ignore the hidden accounts. */\r\n                for (Iterator<String> storedAccountIter =\r\n                    storedAccounts.iterator(); storedAccountIter.hasNext();)\r\n                {\r\n                    String storedAccount = storedAccountIter.next();\r\n                    List<String> storedAccountProperties =\r\n                        configService.getPropertyNamesByPrefix(storedAccount,\r\n                            true);\r\n                    boolean hidden = false;\r\n                    String accountUserID = null;\r\n\r\n                    if (!includeHidden || userID != null)\r\n                    {\r\n                        for (Iterator<String> storedAccountPropertyIter =\r\n                            storedAccountProperties.iterator();\r\n                            storedAccountPropertyIter.hasNext();)\r\n                        {\r\n                            String property = storedAccountPropertyIter.next();\r\n                            String value = configService.getString(property);\r\n\r\n                            property = stripPackagePrefix(property);\r\n\r\n                            if (ProtocolProviderFactory.IS_PROTOCOL_HIDDEN\r\n                                .equals(property))\r\n                            {\r\n                                hidden = (value != null);\r\n                            }\r\n                            else if (ProtocolProviderFactory.USER_ID\r\n                                    .equals(property))\r\n                            {\r\n                                accountUserID = value;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (includeHidden || !hidden)\r\n                    {\r\n                        if(accountUserID != null\r\n                            && userID != null\r\n                            && userID.equals(accountUserID))\r\n                        {\r\n                            hasStoredAccounts = true;\r\n                            break;\r\n                        }\r\n                        else if(userID == null)\r\n                        {\r\n                            hasStoredAccounts = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (hasStoredAccounts || (protocolName != null))\r\n                {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return hasStoredAccounts;\r\n    }","commit_id":"a613195ef42ca5a88e663b17d6419ab4a6db1891","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Searches for stored account with <tt>uid<\/tt> in stored\r\n     * configuration. The <tt>uid<\/tt> is the one generated when creating\r\n     * accounts with prefix <tt>ACCOUNT_UID_PREFIX<\/tt>.\r\n     *\r\n     * @return <tt>AccountID<\/tt> if there is any account stored in configuration\r\n     * service with <tt>uid<\/tt>,\r\n     * <tt>null<\/tt> otherwise.\r\n     */\r\n    public AccountID findAccountID(String uid)\r\n    {\r\n        ServiceReference[] factoryRefs = null;\r\n\r\n        try\r\n        {\r\n            factoryRefs\r\n                = bundleContext.getServiceReferences(\r\n                    ProtocolProviderFactory.class.getName(), null);\r\n        }\r\n        catch (InvalidSyntaxException ex)\r\n        {\r\n            logger.error(\r\n                \"Failed to retrieve the registered ProtocolProviderFactories\",\r\n                ex);\r\n        }\r\n\r\n        if ((factoryRefs != null) && (factoryRefs.length > 0))\r\n        {\r\n            ConfigurationService configService\r\n                = ProtocolProviderActivator.getConfigurationService();\r\n\r\n            for (ServiceReference factoryRef : factoryRefs)\r\n            {\r\n                ProtocolProviderFactory factory\r\n                    = (ProtocolProviderFactory)\r\n                        bundleContext.getService(factoryRef);\r\n\r\n                String factoryPackage = getFactoryImplPackageName(factory);\r\n                List<String> storedAccountsProps\r\n                    = configService\r\n                        .getPropertyNamesByPrefix(factoryPackage, true);\r\n\r\n                for (Iterator<String> storedAccountIter =\r\n                         storedAccountsProps.iterator();\r\n                     storedAccountIter.hasNext();)\r\n                {\r\n                    String storedAccount = storedAccountIter.next();\r\n\r\n                    if(!storedAccount.endsWith(uid))\r\n                        continue;\r\n\r\n                    String accountUID = configService.getString(\r\n                        storedAccount //node id\r\n                        + \".\" + ProtocolProviderFactory.ACCOUNT_UID);// propname\r\n\r\n                    for(AccountID acc : storedAccounts)\r\n                    {\r\n                        if(acc.getAccountUniqueID().equals(accountUID))\r\n                            return acc;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }","id":8235,"modified_method":"/**\r\n     * Searches for stored account with <tt>uid<\/tt> in stored\r\n     * configuration. The <tt>uid<\/tt> is the one generated when creating\r\n     * accounts with prefix <tt>ACCOUNT_UID_PREFIX<\/tt>.\r\n     *\r\n     * @return <tt>AccountID<\/tt> if there is any account stored in configuration\r\n     * service with <tt>uid<\/tt>,\r\n     * <tt>null<\/tt> otherwise.\r\n     */\r\n    public AccountID findAccountID(String uid)\r\n    {\r\n        Collection<ServiceReference<ProtocolProviderFactory>> factoryRefs;\r\n\r\n        try\r\n        {\r\n            factoryRefs\r\n                = bundleContext.getServiceReferences(\r\n                        ProtocolProviderFactory.class,\r\n                        null);\r\n        }\r\n        catch (InvalidSyntaxException ex)\r\n        {\r\n            factoryRefs = null;\r\n            logger.error(\r\n                \"Failed to retrieve the registered ProtocolProviderFactories\",\r\n                ex);\r\n        }\r\n\r\n        if ((factoryRefs != null) && !factoryRefs.isEmpty())\r\n        {\r\n            ConfigurationService configService\r\n                = ProtocolProviderActivator.getConfigurationService();\r\n\r\n            for (ServiceReference<ProtocolProviderFactory> factoryRef\r\n                    : factoryRefs)\r\n            {\r\n                ProtocolProviderFactory factory\r\n                    = bundleContext.getService(factoryRef);\r\n\r\n                String factoryPackage = getFactoryImplPackageName(factory);\r\n                List<String> storedAccountsProps\r\n                    = configService\r\n                        .getPropertyNamesByPrefix(factoryPackage, true);\r\n\r\n                for (Iterator<String> storedAccountIter =\r\n                         storedAccountsProps.iterator();\r\n                     storedAccountIter.hasNext();)\r\n                {\r\n                    String storedAccount = storedAccountIter.next();\r\n\r\n                    if(!storedAccount.endsWith(uid))\r\n                        continue;\r\n\r\n                    String accountUID = configService.getString(\r\n                        storedAccount //node id\r\n                        + \".\" + ProtocolProviderFactory.ACCOUNT_UID);// propname\r\n\r\n                    for(AccountID acc : storedAccounts)\r\n                    {\r\n                        if(acc.getAccountUniqueID().equals(accountUID))\r\n                            return acc;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }","commit_id":"a613195ef42ca5a88e663b17d6419ab4a6db1891","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Unloads the account corresponding to the given <tt>AccountID<\/tt>. An\r\n     * account is unloaded when its <tt>ProtocolProviderService<\/tt> is\r\n     * unregistered in the bundle context. This method is meant to unload the\r\n     * account through the corresponding <tt>ProtocolProviderFactory<\/tt>.\r\n     *\r\n     * @param accountID the identifier of the account to load\r\n     * @throws OperationFailedException if anything goes wrong while unloading\r\n     * the account corresponding to the specified <tt>accountID<\/tt>\r\n     */\r\n    public void unloadAccount(AccountID accountID)\r\n        throws OperationFailedException\r\n    {\r\n        // If the account with the given id is already unloaded we have nothing\r\n        // to do here.\r\n        if (!isAccountLoaded(accountID))\r\n            return;\r\n\r\n        ProtocolProviderFactory providerFactory\r\n            = ProtocolProviderActivator.getProtocolProviderFactory(\r\n                accountID.getProtocolName());\r\n\r\n        // Obtain the protocol provider.\r\n        ServiceReference serRef\r\n            = providerFactory.getProviderForAccount(accountID);\r\n\r\n        // If there's no such provider we have nothing to do here.\r\n        if (serRef == null)\r\n            return;\r\n\r\n        ProtocolProviderService protocolProvider =\r\n            (ProtocolProviderService) bundleContext.getService(serRef);\r\n\r\n        // Set the account icon path for unloaded accounts.\r\n        String iconPathProperty = accountID.getAccountPropertyString(\r\n            ProtocolProviderFactory.ACCOUNT_ICON_PATH);\r\n\r\n        if (iconPathProperty == null)\r\n        {\r\n            accountID.putAccountProperty(\r\n                ProtocolProviderFactory.ACCOUNT_ICON_PATH,\r\n                protocolProvider.getProtocolIcon()\r\n                    .getIconPath(ProtocolIcon.ICON_SIZE_32x32));\r\n        }\r\n\r\n        accountID.putAccountProperty(\r\n            ProtocolProviderFactory.IS_ACCOUNT_DISABLED,\r\n            String.valueOf(true));\r\n\r\n        if (!providerFactory.unloadAccount(accountID))\r\n        {\r\n            accountID.putAccountProperty(\r\n                ProtocolProviderFactory.IS_ACCOUNT_DISABLED,\r\n                String.valueOf(false));\r\n        }\r\n        // Finally store the modified properties.\r\n        storeAccount(providerFactory, accountID);\r\n    }","id":8236,"modified_method":"/**\r\n     * Unloads the account corresponding to the given <tt>AccountID<\/tt>. An\r\n     * account is unloaded when its <tt>ProtocolProviderService<\/tt> is\r\n     * unregistered in the bundle context. This method is meant to unload the\r\n     * account through the corresponding <tt>ProtocolProviderFactory<\/tt>.\r\n     *\r\n     * @param accountID the identifier of the account to load\r\n     * @throws OperationFailedException if anything goes wrong while unloading\r\n     * the account corresponding to the specified <tt>accountID<\/tt>\r\n     */\r\n    public void unloadAccount(AccountID accountID)\r\n        throws OperationFailedException\r\n    {\r\n        // If the account with the given id is already unloaded we have nothing\r\n        // to do here.\r\n        if (!isAccountLoaded(accountID))\r\n            return;\r\n\r\n        ProtocolProviderFactory providerFactory\r\n            = ProtocolProviderActivator.getProtocolProviderFactory(\r\n                accountID.getProtocolName());\r\n\r\n        // Obtain the protocol provider.\r\n        ServiceReference<ProtocolProviderService> serRef\r\n            = providerFactory.getProviderForAccount(accountID);\r\n\r\n        // If there's no such provider we have nothing to do here.\r\n        if (serRef == null)\r\n            return;\r\n\r\n        ProtocolProviderService protocolProvider\r\n            = bundleContext.getService(serRef);\r\n\r\n        // Set the account icon path for unloaded accounts.\r\n        String iconPathProperty = accountID.getAccountPropertyString(\r\n            ProtocolProviderFactory.ACCOUNT_ICON_PATH);\r\n\r\n        if (iconPathProperty == null)\r\n        {\r\n            accountID.putAccountProperty(\r\n                ProtocolProviderFactory.ACCOUNT_ICON_PATH,\r\n                protocolProvider.getProtocolIcon()\r\n                    .getIconPath(ProtocolIcon.ICON_SIZE_32x32));\r\n        }\r\n\r\n        accountID.putAccountProperty(\r\n            ProtocolProviderFactory.IS_ACCOUNT_DISABLED,\r\n            String.valueOf(true));\r\n\r\n        if (!providerFactory.unloadAccount(accountID))\r\n        {\r\n            accountID.putAccountProperty(\r\n                ProtocolProviderFactory.IS_ACCOUNT_DISABLED,\r\n                String.valueOf(false));\r\n        }\r\n        // Finally store the modified properties.\r\n        storeAccount(providerFactory, accountID);\r\n    }","commit_id":"a613195ef42ca5a88e663b17d6419ab4a6db1891","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Starts a specific <code>Bundle<\/code> and waits for the\r\n     * <code>AccountManager<\/code> available in a specific\r\n     * <code>BundleContext<\/code> to load the stored accounts of a\r\n     * <code>ProtocolProviderFactory<\/code> with a specific protocol name.\r\n     *\r\n     * @param bundleContextWithAccountManager\r\n     *            the <code>BundleContext<\/code> in which an\r\n     *            <code>AccountManager<\/code> service is registered\r\n     * @param bundleToStart\r\n     *            the <code>Bundle<\/code> to be started\r\n     * @param protocolNameToWait\r\n     *            the protocol name of a <code>ProtocolProviderFactory<\/code> to\r\n     *            wait the end of the loading of the stored accounts for\r\n     * @throws BundleException\r\n     * @throws InterruptedException\r\n     *             if any thread interrupted the current thread before or while\r\n     *             the current thread was waiting for the loading of the stored\r\n     *             accounts\r\n     */\r\n    public static void startBundleAndWaitStoredAccountsLoaded(\r\n            BundleContext bundleContextWithAccountManager,\r\n            final Bundle bundleToStart,\r\n            final String protocolNameToWait)\r\n        throws BundleException,\r\n               InterruptedException\r\n    {\r\n        AccountManager accountManager\r\n            = getAccountManager(bundleContextWithAccountManager);\r\n        final boolean[] storedAccountsAreLoaded = new boolean[1];\r\n        AccountManagerListener listener = new AccountManagerListener()\r\n        {\r\n            public void handleAccountManagerEvent(AccountManagerEvent event)\r\n            {\r\n                if (AccountManagerEvent.STORED_ACCOUNTS_LOADED\r\n                        != event.getType())\r\n                    return;\r\n\r\n                ProtocolProviderFactory factory = event.getFactory();\r\n\r\n                /*\r\n                 * If the event is for a factory with a protocol name other than\r\n                 * protocolNameToWait, it's not the one we're waiting for.\r\n                 */\r\n                if ((factory != null)\r\n                        && !protocolNameToWait\r\n                                .equals(factory.getProtocolName()))\r\n                    return;\r\n\r\n                /*\r\n                 * If the event if for a factory which is no longer registered,\r\n                 * then it's not the one we're waiting for because we're waiting\r\n                 * for the specified bundle to start and register a factory.\r\n                 */\r\n                if (factory != null)\r\n                {\r\n                    BundleContext bundleContext\r\n                        = bundleToStart.getBundleContext();\r\n\r\n                    /*\r\n                     * If the specified bundle still hasn't started, the event\r\n                     * cannot be the one we're waiting for.\r\n                     */\r\n                    if (bundleContext == null)\r\n                        return;\r\n\r\n                    ServiceReference[] factoryRefs;\r\n\r\n                    try\r\n                    {\r\n                        factoryRefs\r\n                            = bundleContext\r\n                                .getServiceReferences(\r\n                                    ProtocolProviderFactory.class.getName(),\r\n                                    \"(\"\r\n                                        + ProtocolProviderFactory.PROTOCOL\r\n                                        + \"=\"\r\n                                        + protocolNameToWait\r\n                                        + \")\");\r\n                    }\r\n                    catch (InvalidSyntaxException isex)\r\n                    {\r\n                        /*\r\n                         * Not likely so ignore it and assume the event is for\r\n                         * a valid factory.\r\n                         */\r\n                        factoryRefs = null;\r\n                    }\r\n\r\n                    if (factoryRefs != null)\r\n                    {\r\n                        boolean factoryIsRegistered = false;\r\n\r\n                        for (ServiceReference factoryRef : factoryRefs)\r\n                            if (factory == bundleContext.getService(factoryRef))\r\n                            {\r\n                                factoryIsRegistered = true;\r\n                                break;\r\n                            }\r\n\r\n                        if (!factoryIsRegistered)\r\n                            return;\r\n                    }\r\n                }\r\n\r\n                synchronized (storedAccountsAreLoaded)\r\n                {\r\n                    storedAccountsAreLoaded[0] = true;\r\n                    storedAccountsAreLoaded.notify();\r\n                }\r\n            }\r\n        };\r\n\r\n        accountManager.addListener(listener);\r\n        try\r\n        {\r\n            bundleToStart.start();\r\n\r\n            while (true)\r\n            {\r\n                synchronized (storedAccountsAreLoaded)\r\n                {\r\n                    if (storedAccountsAreLoaded[0])\r\n                    {\r\n                        break;\r\n                    }\r\n                    storedAccountsAreLoaded.wait();\r\n                }\r\n            }\r\n        }\r\n        finally\r\n        {\r\n            accountManager.removeListener(listener);\r\n        }\r\n    }","id":8237,"modified_method":"/**\r\n     * Starts a specific <code>Bundle<\/code> and waits for the\r\n     * <code>AccountManager<\/code> available in a specific\r\n     * <code>BundleContext<\/code> to load the stored accounts of a\r\n     * <code>ProtocolProviderFactory<\/code> with a specific protocol name.\r\n     *\r\n     * @param bundleContextWithAccountManager\r\n     *            the <code>BundleContext<\/code> in which an\r\n     *            <code>AccountManager<\/code> service is registered\r\n     * @param bundleToStart\r\n     *            the <code>Bundle<\/code> to be started\r\n     * @param protocolNameToWait\r\n     *            the protocol name of a <code>ProtocolProviderFactory<\/code> to\r\n     *            wait the end of the loading of the stored accounts for\r\n     * @throws BundleException\r\n     * @throws InterruptedException\r\n     *             if any thread interrupted the current thread before or while\r\n     *             the current thread was waiting for the loading of the stored\r\n     *             accounts\r\n     */\r\n    public static void startBundleAndWaitStoredAccountsLoaded(\r\n            BundleContext bundleContextWithAccountManager,\r\n            final Bundle bundleToStart,\r\n            final String protocolNameToWait)\r\n        throws BundleException,\r\n               InterruptedException\r\n    {\r\n        AccountManager accountManager\r\n            = getAccountManager(bundleContextWithAccountManager);\r\n        final boolean[] storedAccountsAreLoaded = new boolean[1];\r\n        AccountManagerListener listener = new AccountManagerListener()\r\n        {\r\n            public void handleAccountManagerEvent(AccountManagerEvent event)\r\n            {\r\n                if (AccountManagerEvent.STORED_ACCOUNTS_LOADED\r\n                        != event.getType())\r\n                    return;\r\n\r\n                ProtocolProviderFactory factory = event.getFactory();\r\n\r\n                /*\r\n                 * If the event is for a factory with a protocol name other than\r\n                 * protocolNameToWait, it's not the one we're waiting for.\r\n                 */\r\n                if ((factory != null)\r\n                        && !protocolNameToWait\r\n                                .equals(factory.getProtocolName()))\r\n                    return;\r\n\r\n                /*\r\n                 * If the event if for a factory which is no longer registered,\r\n                 * then it's not the one we're waiting for because we're waiting\r\n                 * for the specified bundle to start and register a factory.\r\n                 */\r\n                if (factory != null)\r\n                {\r\n                    BundleContext bundleContext\r\n                        = bundleToStart.getBundleContext();\r\n\r\n                    /*\r\n                     * If the specified bundle still hasn't started, the event\r\n                     * cannot be the one we're waiting for.\r\n                     */\r\n                    if (bundleContext == null)\r\n                        return;\r\n\r\n                    Collection<ServiceReference<ProtocolProviderFactory>> factoryRefs;\r\n\r\n                    try\r\n                    {\r\n                        factoryRefs\r\n                            = bundleContext.getServiceReferences(\r\n                                    ProtocolProviderFactory.class,\r\n                                    \"(\"\r\n                                        + ProtocolProviderFactory.PROTOCOL\r\n                                        + \"=\"\r\n                                        + protocolNameToWait\r\n                                        + \")\");\r\n                    }\r\n                    catch (InvalidSyntaxException isex)\r\n                    {\r\n                        /*\r\n                         * Not likely so ignore it and assume the event is for\r\n                         * a valid factory.\r\n                         */\r\n                        factoryRefs = null;\r\n                    }\r\n\r\n                    if (factoryRefs != null)\r\n                    {\r\n                        boolean factoryIsRegistered = false;\r\n\r\n                        for (ServiceReference<ProtocolProviderFactory> factoryRef\r\n                                : factoryRefs)\r\n                        {\r\n                            if (factory == bundleContext.getService(factoryRef))\r\n                            {\r\n                                factoryIsRegistered = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!factoryIsRegistered)\r\n                            return;\r\n                    }\r\n                }\r\n\r\n                synchronized (storedAccountsAreLoaded)\r\n                {\r\n                    storedAccountsAreLoaded[0] = true;\r\n                    storedAccountsAreLoaded.notify();\r\n                }\r\n            }\r\n        };\r\n\r\n        accountManager.addListener(listener);\r\n        try\r\n        {\r\n            bundleToStart.start();\r\n\r\n            while (true)\r\n            {\r\n                synchronized (storedAccountsAreLoaded)\r\n                {\r\n                    if (storedAccountsAreLoaded[0])\r\n                    {\r\n                        break;\r\n                    }\r\n                    storedAccountsAreLoaded.wait();\r\n                }\r\n            }\r\n        }\r\n        finally\r\n        {\r\n            accountManager.removeListener(listener);\r\n        }\r\n    }","commit_id":"a613195ef42ca5a88e663b17d6419ab4a6db1891","url":"https://github.com/jitsi/jitsi"},{"original_method":"private static AccountManager getAccountManager(BundleContext bundleContext)\r\n    {\r\n        return\r\n            (AccountManager)\r\n                bundleContext.getService(\r\n                    bundleContext.getServiceReference(\r\n                        AccountManager.class.getName()));\r\n    }","id":8238,"modified_method":"private static AccountManager getAccountManager(BundleContext bundleContext)\r\n    {\r\n        return\r\n            bundleContext.getService(\r\n                    bundleContext.getServiceReference(AccountManager.class));\r\n    }","commit_id":"a613195ef42ca5a88e663b17d6419ab4a6db1891","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns the <tt>ConfigurationService<\/tt> obtained from the\n     * the <tt>BundleContext<\/tt>\n     *\n     * @return the <tt>ConfigurationService<\/tt> obtained from the\n     * the <tt>BundleContext<\/tt>\n     */\n    public static ConfigurationService getConfigurationService()\n    {\n        if (configService == null && bundleContext != null)\n        {\n            ServiceReference serviceReference = bundleContext\n                    .getServiceReference(ConfigurationService.class.getName());\n\n            configService = (ConfigurationService)bundleContext\n                    .getService(serviceReference);\n        }\n\n        return configService;\n    }","id":8239,"modified_method":"/**\n     * Returns the <tt>ConfigurationService<\/tt> obtained from the\n     * the <tt>BundleContext<\/tt>\n     *\n     * @return the <tt>ConfigurationService<\/tt> obtained from the\n     * the <tt>BundleContext<\/tt>\n     */\n    public static ConfigurationService getConfigurationService()\n    {\n        if (configService == null && bundleContext != null)\n        {\n            configService\n                = ServiceUtils.getService(\n                        bundleContext,\n                        ConfigurationService.class);\n        }\n\n        return configService;\n    }","commit_id":"a613195ef42ca5a88e663b17d6419ab4a6db1891","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns all <tt>ProtocolProviderFactory<\/tt>s obtained from the bundle\n     * context.\n     *\n     * @return all <tt>ProtocolProviderFactory<\/tt>s obtained from the bundle\n     *         context\n     */\n    public static Map<Object, ProtocolProviderFactory>\n        getProtocolProviderFactories()\n    {\n        ServiceReference[] serRefs = null;\n        try\n        {\n            // get all registered provider factories\n            serRefs =\n                bundleContext.getServiceReferences(\n                    ProtocolProviderFactory.class.getName(), null);\n\n        }\n        catch (InvalidSyntaxException e)\n        {\n            logger.error(\"LoginManager : \" + e);\n        }\n\n        if (serRefs != null)\n        {\n            for (ServiceReference serRef : serRefs)\n            {\n                ProtocolProviderFactory providerFactory\n                    = (ProtocolProviderFactory)\n                        bundleContext.getService(serRef);\n\n                providerFactoriesMap.put(\n                        serRef.getProperty(ProtocolProviderFactory.PROTOCOL),\n                        providerFactory);\n            }\n        }\n        return providerFactoriesMap;\n    }","id":8240,"modified_method":"/**\n     * Returns all <tt>ProtocolProviderFactory<\/tt>s obtained from the bundle\n     * context.\n     *\n     * @return all <tt>ProtocolProviderFactory<\/tt>s obtained from the bundle\n     *         context\n     */\n    public static Map<Object, ProtocolProviderFactory>\n        getProtocolProviderFactories()\n    {\n        Collection<ServiceReference<ProtocolProviderFactory>> serRefs;\n        try\n        {\n            // get all registered provider factories\n            serRefs\n                = bundleContext.getServiceReferences(\n                        ProtocolProviderFactory.class,\n                        null);\n\n        }\n        catch (InvalidSyntaxException e)\n        {\n            serRefs = null;\n            logger.error(\"LoginManager : \" + e);\n        }\n\n        if (serRefs != null)\n        {\n            for (ServiceReference<ProtocolProviderFactory> serRef : serRefs)\n            {\n                ProtocolProviderFactory providerFactory\n                    = bundleContext.getService(serRef);\n\n                providerFactoriesMap.put(\n                        serRef.getProperty(ProtocolProviderFactory.PROTOCOL),\n                        providerFactory);\n            }\n        }\n        return providerFactoriesMap;\n    }","commit_id":"a613195ef42ca5a88e663b17d6419ab4a6db1891","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Initialize and start call history\n     *\n     * @param bc the <tt>BundleContext<\/tt>\n     * @throws Exception if initializing and starting call history fails\n     */\n    public void start(BundleContext bc) throws Exception\n    {\n        bundleContext = bc;\n\n        try{\n            logger.logEntry();\n\n            ServiceReference refHistory = bundleContext.getServiceReference(\n                HistoryService.class.getName());\n\n            HistoryService historyService = (HistoryService)\n                bundleContext.getService(refHistory);\n\n            //Create and start the call history service.\n            callHistoryService =\n                new CallHistoryServiceImpl();\n            // set the configuration and history service\n            callHistoryService.setHistoryService(historyService);\n\n            callHistoryService.start(bundleContext);\n\n            bundleContext.registerService(\n                CallHistoryService.class.getName(), callHistoryService, null);\n\n            bundleContext.registerService(\n                ContactSourceService.class.getName(),\n                new CallHistoryContactSource(), null);\n\n            if (logger.isInfoEnabled())\n                logger.info(\"Call History Service ...[REGISTERED]\");\n        }\n        finally\n        {\n            logger.logExit();\n        }\n\n    }","id":8241,"modified_method":"/**\n     * Initialize and start call history\n     *\n     * @param bc the <tt>BundleContext<\/tt>\n     * @throws Exception if initializing and starting call history fails\n     */\n    public void start(BundleContext bc) throws Exception\n    {\n        bundleContext = bc;\n\n        try{\n            logger.logEntry();\n\n            HistoryService historyService\n                = ServiceUtils.getService(bundleContext, HistoryService.class);\n\n            //Create and start the call history service.\n            callHistoryService =\n                new CallHistoryServiceImpl();\n            // set the configuration and history service\n            callHistoryService.setHistoryService(historyService);\n\n            callHistoryService.start(bundleContext);\n\n            bundleContext.registerService(\n                CallHistoryService.class.getName(), callHistoryService, null);\n\n            bundleContext.registerService(\n                ContactSourceService.class.getName(),\n                new CallHistoryContactSource(), null);\n\n            if (logger.isInfoEnabled())\n                logger.info(\"Call History Service ...[REGISTERED]\");\n        }\n        finally\n        {\n            logger.logExit();\n        }\n\n    }","commit_id":"a613195ef42ca5a88e663b17d6419ab4a6db1891","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * stops the service.\n     *\n     * @param bc BundleContext\n     */\n    public void stop(BundleContext bc)\n    {\n        bc.removeServiceListener(this);\n\n        ServiceReference[] protocolProviderRefs = null;\n\n        try\n        {\n            protocolProviderRefs\n                = bc.getServiceReferences(\n                        ProtocolProviderService.class.getName(),\n                        null);\n        }\n        catch (InvalidSyntaxException ex)\n        {\n            // this shouldn't happen since we're providing no parameter string\n            // but let's log just in case.\n            logger.error(\"Error while retrieving service refs\", ex);\n        }\n\n        // in case we found any\n        if (protocolProviderRefs != null)\n        {\n            for (ServiceReference protocolProviderRef : protocolProviderRefs)\n            {\n                ProtocolProviderService provider\n                    = (ProtocolProviderService)\n                        bc.getService(protocolProviderRef);\n\n                this.handleProviderRemoved(provider);\n            }\n        }\n    }","id":8242,"modified_method":"/**\n     * stops the service.\n     *\n     * @param bc BundleContext\n     */\n    public void stop(BundleContext bc)\n    {\n        bc.removeServiceListener(this);\n\n        Collection<ServiceReference<ProtocolProviderService>> ppsRefs;\n\n        try\n        {\n            ppsRefs\n                = bc.getServiceReferences(ProtocolProviderService.class, null);\n        }\n        catch (InvalidSyntaxException ex)\n        {\n            ppsRefs = null;\n            // this shouldn't happen since we're providing no parameter string\n            // but let's log just in case.\n            logger.error(\"Error while retrieving service refs\", ex);\n        }\n\n        // in case we found any\n        if (ppsRefs != null)\n        {\n            for (ServiceReference<ProtocolProviderService> ppsRef : ppsRefs)\n            {\n                ProtocolProviderService pps = bc.getService(ppsRef);\n\n                this.handleProviderRemoved(pps);\n            }\n        }\n    }","commit_id":"a613195ef42ca5a88e663b17d6419ab4a6db1891","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * starts the service. Check the current registerd protocol providers\n     * which supports BasicTelephony and adds calls listener to them\n     *\n     * @param bc BundleContext\n     */\n    public void start(BundleContext bc)\n    {\n        if (logger.isDebugEnabled())\n            logger.debug(\"Starting the call history implementation.\");\n\n        this.bundleContext = bc;\n\n        // start listening for newly register or removed protocol providers\n        bc.addServiceListener(this);\n\n        ServiceReference[] protocolProviderRefs = null;\n\n        try\n        {\n            protocolProviderRefs\n                = bc.getServiceReferences(\n                        ProtocolProviderService.class.getName(),\n                        null);\n        }\n        catch (InvalidSyntaxException ex)\n        {\n            // this shouldn't happen since we're providing no parameter string\n            // but let's log just in case.\n            logger.error(\"Error while retrieving service refs\", ex);\n        }\n\n        // in case we found any\n        if (protocolProviderRefs != null)\n        {\n            if (logger.isDebugEnabled())\n            {\n                logger.debug(\n                        \"Found \"\n                            + protocolProviderRefs.length\n                            + \" already installed providers.\");\n            }\n            for (ServiceReference protocolProviderRef : protocolProviderRefs)\n            {\n                ProtocolProviderService provider\n                    = (ProtocolProviderService)\n                        bc.getService(protocolProviderRef);\n\n                this.handleProviderAdded(provider);\n            }\n        }\n    }","id":8243,"modified_method":"/**\n     * starts the service. Check the current registerd protocol providers\n     * which supports BasicTelephony and adds calls listener to them\n     *\n     * @param bc BundleContext\n     */\n    public void start(BundleContext bc)\n    {\n        if (logger.isDebugEnabled())\n            logger.debug(\"Starting the call history implementation.\");\n\n        this.bundleContext = bc;\n\n        // start listening for newly register or removed protocol providers\n        bc.addServiceListener(this);\n\n        Collection<ServiceReference<ProtocolProviderService>> ppsRefs;\n\n        try\n        {\n            ppsRefs\n                = bc.getServiceReferences(ProtocolProviderService.class, null);\n        }\n        catch (InvalidSyntaxException ex)\n        {\n            ppsRefs = null;\n            // this shouldn't happen since we're providing no parameter string\n            // but let's log just in case.\n            logger.error(\"Error while retrieving service refs\", ex);\n        }\n\n        // in case we found any\n        if (ppsRefs != null)\n        {\n            if (logger.isDebugEnabled())\n            {\n                logger.debug(\n                        \"Found \" + ppsRefs.size()\n                            + \" already installed providers.\");\n            }\n            for (ServiceReference<ProtocolProviderService> ppsRef : ppsRefs)\n            {\n                ProtocolProviderService pps = bc.getService(ppsRef);\n\n                this.handleProviderAdded(pps);\n            }\n        }\n    }","commit_id":"a613195ef42ca5a88e663b17d6419ab4a6db1891","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Starts transport candidate harvest. This method should complete rapidly\n     * and, in case of lengthy procedures like STUN/TURN/UPnP candidate harvests\n     * are necessary, they should be executed in a separate thread. Candidate\n     * harvest would then need to be concluded in the\n     * {@link #wrapupCandidateHarvest()} method which would be called once we\n     * absolutely need the candidates.\n     *\n     * @param ourOffer the SDP that should tell us how many stream connectors we\n     * actually need.\n     * @param trickleCallback the callback that will be taking care of\n     * candidates that we discover asynchronously or <tt>null<\/tt> in case we\n     * wouldn't won't to use trickle ICE (either because it is disabled or,\n     * potentially, because we are doing half trickle).\n     * @param advertiseTrickle indicates whether we should be including the\n     * ice-options:trickle attribute in the SDP. Note that this parameter is\n     * ignored and considered <tt>true<\/tt> if <tt>trickleCallback<\/tt> is not\n     * <tt>null<\/tt>.\n     * @param useBundle indicates whether or not we are using bundle.\n     * @param advertiseBundle indicates whether or not we should be advertising\n     * bundle to the remote party ( assumed as <tt>true<\/tt> in case\n     * <tt>useBundle<\/tt> is already set to <tt>true<\/tt>).\n     * @param useRtcpMux indicates whether or not we are using rtcp-mux.\n     * @param advertiseRtcpMux indicates whether or not we should be advertising\n     * rtcp-mux to the remote party ( assumed as <tt>true<\/tt> in case\n     * <tt>useRtcpMux<\/tt> is already set to <tt>true<\/tt>).\n     *\n     * @throws OperationFailedException if we fail to allocate a port number.\n     */\n    public void startCandidateHarvest(SessionDescription ourOffer,\n                                      Object             trickleCallback,\n                                      boolean            advertiseTrickle,\n                                      boolean            useBundle,\n                                      boolean            advertiseBundle,\n                                      boolean            useRtcpMux,\n                                      boolean            advertiseRtcpMux)\n        throws OperationFailedException\n    {\n        iceAgent = createIceAgent();\n        iceAgent.setControlling(true);\n\n        //obviously we ARE the controlling agent since we are the ones creating\n        //the offer.\n        iceAgent.setControlling(true);\n\n        //add the candidate attributes and set default candidates\n        for(MediaDescription mLine : SdpUtils.extractMediaDescriptions(ourOffer))\n        {\n            IceMediaStream iceStream = createIceStream(\n                SdpUtils.getMediaType(mLine).toString(), iceAgent);\n        }\n\n        //now that our iceAgent is ready, reflect it on our offer.\n        IceSdpUtils.initSessionDescription(ourOffer, iceAgent);\n    }","id":8244,"modified_method":"/**\n     * Starts transport candidate harvest. This method should complete rapidly\n     * and, in case of lengthy procedures like STUN/TURN/UPnP candidate harvests\n     * are necessary, they should be executed in a separate thread. Candidate\n     * harvest would then need to be concluded in the\n     * {@link #wrapupCandidateHarvest()} method which would be called once we\n     * absolutely need the candidates.\n     *\n     * @param ourOffer the SDP that should tell us how many stream connectors we\n     * actually need.\n     * @param trickleCallback the callback that will be taking care of\n     * candidates that we discover asynchronously or <tt>null<\/tt> in case we\n     * wouldn't won't to use trickle ICE (either because it is disabled or,\n     * potentially, because we are doing half trickle).\n     * @param advertiseTrickle indicates whether we should be including the\n     * ice-options:trickle attribute in the SDP. Note that this parameter is\n     * ignored and considered <tt>true<\/tt> if <tt>trickleCallback<\/tt> is not\n     * <tt>null<\/tt>.\n     * @param useBundle indicates whether or not we are using bundle.\n     * @param advertiseBundle indicates whether or not we should be advertising\n     * bundle to the remote party ( assumed as <tt>true<\/tt> in case\n     * <tt>useBundle<\/tt> is already set to <tt>true<\/tt>).\n     * @param useRtcpMux indicates whether or not we are using rtcp-mux.\n     * @param advertiseRtcpMux indicates whether or not we should be advertising\n     * rtcp-mux to the remote party ( assumed as <tt>true<\/tt> in case\n     * <tt>useRtcpMux<\/tt> is already set to <tt>true<\/tt>).\n     *\n     * @throws OperationFailedException if we fail to allocate a port number.\n     */\n    public void startCandidateHarvest(SessionDescription ourOffer,\n                                      Object             trickleCallback,\n                                      boolean            advertiseTrickle,\n                                      boolean            useBundle,\n                                      boolean            advertiseBundle,\n                                      boolean            useRtcpMux,\n                                      boolean            advertiseRtcpMux)\n        throws OperationFailedException\n    {\n        iceAgent = createIceAgent();\n        iceAgent.setControlling(true);\n\n        //obviously we ARE the controlling agent since we are the ones creating\n        //the offer.\n        iceAgent.setControlling(true);\n\n        //add the candidate attributes and set default candidates\n        for(MediaDescription mLine\n                : SdpUtils.extractMediaDescriptions(ourOffer))\n        {\n            createIceStream(SdpUtils.getMediaType(mLine).toString(), iceAgent);\n        }\n\n        //now that our iceAgent is ready, reflect it on our offer.\n        IceSdpUtils.initSessionDescription(ourOffer, iceAgent);\n    }","commit_id":"a613195ef42ca5a88e663b17d6419ab4a6db1891","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Notifies the transport manager that it should conclude candidate\n     * harvesting as soon as possible and return the lists of candidates\n     * gathered so far.\n     *\n     * @return the content list that we received earlier (possibly cloned into\n     * a new instance) and that we have updated with transport lists.\n     */\n    public List<Candidate> wrapupCandidateHarvest()\n    {\n        return null;\n    }","id":8245,"modified_method":"/**\n     * Notifies the transport manager that it should conclude candidate\n     * harvesting as soon as possible and return the lists of candidates\n     * gathered so far.\n     *\n     * @return the content list that we received earlier (possibly cloned into\n     * a new instance) and that we have updated with transport lists.\n     */\n    public List<Candidate<?>> wrapupCandidateHarvest()\n    {\n        return null;\n    }","commit_id":"a613195ef42ca5a88e663b17d6419ab4a6db1891","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Initializes the startup config panel.\n     * @return the created component\n     */\n    public Component createStartupConfigPanel()\n    {\n        // If we're on a Mac nothing would be added in this panel, so we return\n        // null.\n        if (OSUtils.IS_MAC)\n            return null;\n\n        JPanel updateConfigPanel = new TransparentPanel(new BorderLayout());\n\n        updateConfigPanel.add(\n            GeneralConfigPluginActivator.createConfigSectionComponent(\n                Resources.getString(\"plugin.generalconfig.STARTUP_CONFIG\")\n                    + \":\"),\n            BorderLayout.WEST);\n\n        Component updateCheckBox = createUpdateCheckBox();\n        Component autoStartCheckBox = null;\n\n        if (OSUtils.IS_WINDOWS)\n            autoStartCheckBox = createAutoStartCheckBox();\n\n        if (updateCheckBox != null && autoStartCheckBox != null)\n        {\n            JPanel checkBoxPanel = new TransparentPanel(new GridLayout(0, 1));\n            checkBoxPanel.add(autoStartCheckBox);\n            checkBoxPanel.add(updateCheckBox);\n            updateConfigPanel.add(checkBoxPanel);\n        }\n        else if (updateCheckBox != null)\n            updateConfigPanel.add(updateCheckBox);\n        else if (autoStartCheckBox != null)\n            updateConfigPanel.add(autoStartCheckBox);\n\n        return updateConfigPanel;\n    }","id":8246,"modified_method":"/**\n     * Initializes the startup config panel.\n     * @return the created component\n     */\n    public Component createStartupConfigPanel()\n    {\n        // If we're on a Mac nothing would be added in this panel, so we return\n        // null.\n        if (OSUtils.IS_MAC)\n            return null;\n\n        JPanel updateConfigPanel = new TransparentPanel(new BorderLayout());\n\n        updateConfigPanel.add(\n            GeneralConfigPluginActivator.createConfigSectionComponent(\n                Resources.getString(\"plugin.generalconfig.STARTUP_CONFIG\")\n                    + \":\"),\n            BorderLayout.WEST);\n\n        Component updateCheckBox = null;\n        Component autoStartCheckBox = null;\n\n        if (OSUtils.IS_WINDOWS)\n        {\n            autoStartCheckBox = createAutoStartCheckBox();\n            updateCheckBox = createUpdateCheckBox();\n        }\n\n        if (updateCheckBox != null && autoStartCheckBox != null)\n        {\n            JPanel checkBoxPanel = new TransparentPanel(new GridLayout(0, 1));\n            checkBoxPanel.add(autoStartCheckBox);\n            checkBoxPanel.add(updateCheckBox);\n            updateConfigPanel.add(checkBoxPanel);\n        }\n        else if (updateCheckBox != null)\n            updateConfigPanel.add(updateCheckBox);\n        else if (autoStartCheckBox != null)\n            updateConfigPanel.add(autoStartCheckBox);\n\n        return updateConfigPanel;\n    }","commit_id":"e05a78a3468123a676267ab6a6199ddd4c57e861","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Starts this bundle\n     *\n     * @param bundleContext <tt>BundleContext<\/tt> provided by OSGi framework\n     * @throws Exception if something goes wrong during start\n     */\n    public void start(BundleContext bundleContext) throws Exception\n    {\n        if (logger.isDebugEnabled())\n            logger.debug(\"Update checker [STARTED]\");\n\n        try\n        {\n            logger.logEntry();\n            UpdateCheckActivator.bundleContext = bundleContext;\n        }\n        finally\n        {\n            logger.logExit();\n        }\n\n        Thread updateThread = new Thread(new UpdateCheckThread());\n        updateThread.setDaemon(true);\n        updateThread.start();\n\n        if (logger.isDebugEnabled())\n            logger.debug(\"Update checker [REGISTERED]\");\n    }","id":8247,"modified_method":"/**\r\n     * Starts this bundle\r\n     *\r\n     * @param bundleContext <tt>BundleContext<\/tt> provided by OSGi framework\r\n     * @throws Exception if something goes wrong during start\r\n     */\r\n    public void start(BundleContext bundleContext) throws Exception\r\n    {\r\n        if (logger.isDebugEnabled())\r\n            logger.debug(\"Update checker [STARTED]\");\r\n\r\n        UpdateCheckActivator.bundleContext = bundleContext;\r\n\r\n        if (OSUtils.IS_WINDOWS)\r\n        {\r\n            // Register the \"Check for Updates\" menu item.\r\n            checkForUpdatesMenuItemComponent\r\n                = new CheckForUpdatesMenuItemComponent(\r\n                        Container.CONTAINER_HELP_MENU);\r\n\r\n            Hashtable<String, String> toolsMenuFilter\r\n                = new Hashtable<String, String>();\r\n            toolsMenuFilter.put(\r\n                    Container.CONTAINER_ID,\r\n                    Container.CONTAINER_HELP_MENU.getID());\r\n\r\n            bundleContext.registerService(\r\n                    PluginComponent.class.getName(),\r\n                    checkForUpdatesMenuItemComponent,\r\n                    toolsMenuFilter);\r\n\r\n            // Check for software update upon startup if enabled.\r\n            if(getConfiguration().getBoolean(UPDATECHECKER_ENABLED, true))\r\n                checkForUpdates(false);\r\n        }\r\n\r\n        if (logger.isDebugEnabled())\r\n            logger.debug(\"Update checker [REGISTERED]\");\r\n    }","commit_id":"e05a78a3468123a676267ab6a6199ddd4c57e861","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Gets a reference to a <code>ShutdownService<\/code> implementation\n     * currently registered in the bundle context of the active\n     * <code>UpdateCheckActivator<\/code> instance.\n     * <p>\n     * The returned reference to <code>ShutdownService<\/code> is not being\n     * cached.\n     * <\/p>\n     *\n     * @return reference to a <code>ShutdownService<\/code> implementation\n     *         currently registered in the bundle context of the active\n     *         <code>UpdateCheckActivator<\/code> instance\n     */\n    private static ShutdownService getShutdownService()\n    {\n        return\n            (ShutdownService)\n                bundleContext.getService(\n                    bundleContext.getServiceReference(\n                        ShutdownService.class.getName()));\n    }","id":8248,"modified_method":"/**\r\n     * Gets a reference to a <code>ShutdownService<\/code> implementation\r\n     * currently registered in the bundle context of the active\r\n     * <code>UpdateCheckActivator<\/code> instance.\r\n     * <p>\r\n     * The returned reference to <code>ShutdownService<\/code> is not being\r\n     * cached.\r\n     * <\/p>\r\n     *\r\n     * @return reference to a <code>ShutdownService<\/code> implementation\r\n     *         currently registered in the bundle context of the active\r\n     *         <code>UpdateCheckActivator<\/code> instance\r\n     */\r\n    private static ShutdownService getShutdownService()\r\n    {\r\n        return ServiceUtils.getService(bundleContext, ShutdownService.class);\r\n    }","commit_id":"e05a78a3468123a676267ab6a6199ddd4c57e861","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns resource service.\n     * @return the resource service.\n     */\n    private static ResourceManagementService getResources()\n    {\n        if (resourcesService == null)\n        {\n            ServiceReference serviceReference = bundleContext\n                .getServiceReference(ResourceManagementService.class.getName());\n\n            if(serviceReference == null)\n                return null;\n\n            resourcesService = (ResourceManagementService) bundleContext\n                .getService(serviceReference);\n        }\n\n        return resourcesService;\n    }","id":8249,"modified_method":"/**\r\n     * Returns resource service.\r\n     * @return the resource service.\r\n     */\r\n    private static ResourceManagementService getResources()\r\n    {\r\n        if (resources == null)\r\n        {\r\n            resources\r\n                = ServiceUtils.getService(\r\n                        bundleContext,\r\n                        ResourceManagementService.class);\r\n        }\r\n        return resources;\r\n    }","commit_id":"e05a78a3468123a676267ab6a6199ddd4c57e861","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Installs Dummy TrustManager will not try to validate self-signed certs.\n     * Fix some problems with not proper use of certs.\n     */\n    private static void removeDownloadRestrictions()\n    {\n        HostnameVerifier hv = new HostnameVerifier()\n        {\n            public boolean verify(String urlHostName, SSLSession session)\n            {\n                logger.warn(\"Warning: URL Host: \" + urlHostName +\n                        \" vs. \" + session.getPeerHost());\n                return true;\n            }\n        };\n        HttpsURLConnection.setDefaultHostnameVerifier(hv);\n\n        Authenticator.setDefault(new Authenticator()\n        {\n            protected PasswordAuthentication getPasswordAuthentication()\n            {\n                if(userCredentials == null)\n                {\n                    // if there is something save return it\n                    ConfigurationService config = getConfigurationService();\n                    String uName\n                        = (String) config.getProperty(UPDATE_USERNAME_CONFIG);\n                    if(uName != null)\n                    {\n                        String pass\n                            = (String) config.getProperty(UPDATE_PASSWORD_CONFIG);\n\n                        if(pass != null)\n                        {\n                            userCredentials = new UserCredentials();\n                            userCredentials.setUserName(uName);\n                            userCredentials.setPassword(new String(\n                                    Base64.decode(pass)).toCharArray());\n                            userCredentials.setPasswordPersistent(true);\n                        }\n                    }\n                }\n\n                if(userCredentials != null)\n                {\n                    return new PasswordAuthentication(\n                        userCredentials.getUserName(),\n                        userCredentials.getPassword());\n                }\n                else\n                {\n                    host = getRequestingHost();\n\n                    AuthenticationWindow authWindow = null;\n                    if(errorMessage == null)\n                    {\n                        authWindow = new AuthenticationWindow(host, true, null);\n                    }\n                    else\n                    {\n                        authWindow = new AuthenticationWindow(\n                                null, null, host, true, null, errorMessage);\n                        // we showed the message, remove it\n                        errorMessage = null;\n                    }\n\n                    userCredentials = new UserCredentials();\n\n                    authWindow.setVisible(true);\n\n                    if (!authWindow.isCanceled())\n                    {\n                        isAuthenticationCanceled = false;\n                        userCredentials.setUserName(authWindow.getUserName());\n                        userCredentials.setPassword(authWindow.getPassword());\n                        userCredentials.setPasswordPersistent(\n                            authWindow.isRememberPassword());\n\n                        if(authWindow.isRememberPassword())\n                        {\n                            // if save password is checked save the pass\n                            getConfigurationService().setProperty(\n                                UPDATE_USERNAME_CONFIG,\n                                userCredentials.getUserName());\n                            getConfigurationService().setProperty(\n                                UPDATE_PASSWORD_CONFIG,\n                                new String(Base64.encode(\n                                    userCredentials.getPasswordAsString()\n                                    .getBytes())));\n                        }\n\n                         return new PasswordAuthentication(\n                            userCredentials.getUserName(),\n                            userCredentials.getPassword());\n                    }\n                    else\n                    {\n                        isAuthenticationCanceled = true;\n                        userCredentials.setUserName(null);\n                        userCredentials = null;\n\n                        getConfigurationService().removeProperty(\n                            UPDATE_USERNAME_CONFIG);\n                        getConfigurationService().removeProperty(\n                            UPDATE_PASSWORD_CONFIG);\n                    }\n\n                    return null;\n                }\n            }\n        });\n    }","id":8250,"modified_method":"/**\r\n     * Installs Dummy TrustManager will not try to validate self-signed certs.\r\n     * Fix some problems with not proper use of certs.\r\n     */\r\n    private static void removeDownloadRestrictions()\r\n    {\r\n        HostnameVerifier hv = new HostnameVerifier()\r\n        {\r\n            public boolean verify(String urlHostName, SSLSession session)\r\n            {\r\n                logger.warn(\"Warning: URL Host: \" + urlHostName +\r\n                        \" vs. \" + session.getPeerHost());\r\n                return true;\r\n            }\r\n        };\r\n        HttpsURLConnection.setDefaultHostnameVerifier(hv);\r\n\r\n        Authenticator.setDefault(new Authenticator()\r\n        {\r\n            protected PasswordAuthentication getPasswordAuthentication()\r\n            {\r\n                if(userCredentials == null)\r\n                {\r\n                    // if there is something save return it\r\n                    ConfigurationService config = getConfiguration();\r\n                    String uName\r\n                        = (String) config.getProperty(UPDATE_USERNAME_CONFIG);\r\n                    if(uName != null)\r\n                    {\r\n                        String pass\r\n                            = (String) config.getProperty(UPDATE_PASSWORD_CONFIG);\r\n\r\n                        if(pass != null)\r\n                        {\r\n                            userCredentials = new UserCredentials();\r\n                            userCredentials.setUserName(uName);\r\n                            userCredentials.setPassword(new String(\r\n                                    Base64.decode(pass)).toCharArray());\r\n                            userCredentials.setPasswordPersistent(true);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if(userCredentials != null)\r\n                {\r\n                    return new PasswordAuthentication(\r\n                        userCredentials.getUserName(),\r\n                        userCredentials.getPassword());\r\n                }\r\n                else\r\n                {\r\n                    host = getRequestingHost();\r\n\r\n                    AuthenticationWindow authWindow = null;\r\n                    if(errorMessage == null)\r\n                    {\r\n                        authWindow = new AuthenticationWindow(host, true, null);\r\n                    }\r\n                    else\r\n                    {\r\n                        authWindow = new AuthenticationWindow(\r\n                                null, null, host, true, null, errorMessage);\r\n                        // we showed the message, remove it\r\n                        errorMessage = null;\r\n                    }\r\n\r\n                    userCredentials = new UserCredentials();\r\n\r\n                    authWindow.setVisible(true);\r\n\r\n                    if (!authWindow.isCanceled())\r\n                    {\r\n                        isAuthenticationCanceled = false;\r\n                        userCredentials.setUserName(authWindow.getUserName());\r\n                        userCredentials.setPassword(authWindow.getPassword());\r\n                        userCredentials.setPasswordPersistent(\r\n                            authWindow.isRememberPassword());\r\n\r\n                        if(authWindow.isRememberPassword())\r\n                        {\r\n                            // if save password is checked save the pass\r\n                            getConfiguration().setProperty(\r\n                                    UPDATE_USERNAME_CONFIG,\r\n                                    userCredentials.getUserName());\r\n                            getConfiguration().setProperty(\r\n                                    UPDATE_PASSWORD_CONFIG,\r\n                                    new String(\r\n                                            Base64.encode(\r\n                                                    userCredentials\r\n                                                        .getPasswordAsString()\r\n                                                            .getBytes())));\r\n                        }\r\n\r\n                         return new PasswordAuthentication(\r\n                            userCredentials.getUserName(),\r\n                            userCredentials.getPassword());\r\n                    }\r\n                    else\r\n                    {\r\n                        isAuthenticationCanceled = true;\r\n                        userCredentials.setUserName(null);\r\n                        userCredentials = null;\r\n\r\n                        getConfiguration().removeProperty(\r\n                                UPDATE_USERNAME_CONFIG);\r\n                        getConfiguration().removeProperty(\r\n                                UPDATE_PASSWORD_CONFIG);\r\n                    }\r\n\r\n                    return null;\r\n                }\r\n            }\r\n        });\r\n    }","commit_id":"e05a78a3468123a676267ab6a6199ddd4c57e861","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns the <tt>ConfigurationService<\/tt> obtained from the bundle\n     * context.\n     *\n     * @return the <tt>ConfigurationService<\/tt> obtained from the bundle\n     *         context\n     */\n    private static ConfigurationService getConfigurationService()\n    {\n        if (configService == null)\n        {\n            ServiceReference configReference =\n                bundleContext.getServiceReference(ConfigurationService.class\n                    .getName());\n\n            configService =\n                (ConfigurationService) bundleContext\n                    .getService(configReference);\n        }\n\n        return configService;\n    }","id":8251,"modified_method":"/**\r\n     * Returns the <tt>ConfigurationService<\/tt> obtained from the bundle\r\n     * context.\r\n     *\r\n     * @return the <tt>ConfigurationService<\/tt> obtained from the bundle\r\n     * context\r\n     */\r\n    private static ConfigurationService getConfiguration()\r\n    {\r\n        if (configuration == null)\r\n        {\r\n            configuration\r\n                = ServiceUtils.getService(\r\n                        bundleContext,\r\n                        ConfigurationService.class);\r\n        }\r\n        return configuration;\r\n    }","commit_id":"e05a78a3468123a676267ab6a6199ddd4c57e861","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * The update process itself.\n     * - Downloads the installer in a temp directory.\n     * - Warns that update will shutdown.\n     * - Triggers update (installer) in separate process with the help\n     * of update.exe and shutdowns.\n     */\n    private void windowsUpdate()\n    {\n        File tempF = null;\n        try\n        {\n            final File temp = File.createTempFile(\"sc-install\", \".exe\");\n            tempF = temp;\n\n            URL u = new URL(downloadLink);\n            URLConnection uc = u.openConnection();\n\n            if (uc instanceof HttpURLConnection)\n            {\n                if(uc instanceof HttpsURLConnection)\n                {\n                    CertificateVerificationService vs =\n                        getCertificateVerificationService();\n\n                    int port = u.getPort();\n\n                    /* if we do not specify port in the URL\n                     * (http://domain.org:port) we have to set up the default\n                     * port of HTTP (80) or\n                     * HTTPS (443).\n                     */\n                    if(port == -1)\n                    {\n                        if(u.getProtocol().equals(\"http\"))\n                        {\n                            port = 80;\n                        }\n                        else if(u.getProtocol().equals(\"https\"))\n                        {\n                            port = 443;\n                        }\n                    }\n\n                    ((HttpsURLConnection)uc).setSSLSocketFactory(\n                            vs.getSSLContext(\n                            u.getHost(), port).getSocketFactory());\n                }\n\n                // we don't handle here authentication fails cause\n                // still we gone to downloading file we have gone through\n                // successful authentication\n            }\n\n            InputStream in = uc.getInputStream();\n\n            // Chain a ProgressMonitorInputStream to the\n            // URLConnection's InputStream\n            final ProgressMonitorInputStream pin\n             = new ProgressMonitorInputStream(null, u.toString(), in);\n\n            // Set the maximum value of the ProgressMonitor\n            ProgressMonitor pm = pin.getProgressMonitor();\n            pm.setMaximum(uc.getContentLength());\n\n            final BufferedOutputStream out =\n                    new BufferedOutputStream(new FileOutputStream(temp));\n            new Thread(new Runnable()\n            {\n                public void run()\n                {\n                    try\n                    {\n                        int read = -1;\n                        byte[] buff = new byte[1024];\n                        while((read = pin.read(buff)) != -1)\n                        {\n                            out.write(buff, 0, read);\n                        }\n                        pin.close();\n                        out.flush();\n                        out.close();\n\n                        if(getUIService().getPopupDialog().\n                            showConfirmPopupDialog(\n                                    getResources().getI18NString(\n                                    \"plugin.updatechecker.DIALOG_WARN\"),\n                                    getResources().getI18NString(\n                                    \"plugin.updatechecker.DIALOG_TITLE\"),\n                                    PopupDialog.YES_NO_OPTION,\n                                    PopupDialog.QUESTION_MESSAGE\n                                ) != PopupDialog.YES_OPTION)\n                        {\n                            return;\n                        }\n\n                        String packageName = getResources().getSettingsString(\n                                \"plugin.updatechecker.package.name\");\n\n                        // file saved. Now start updater and shutdown.\n                        String workingDir = System.getProperty(\"user.dir\");\n\n                        String updateFileLocation = workingDir + File.separator;\n                        if(packageName != null)\n                            updateFileLocation += packageName + \"-up2date.exe\";\n                        else\n                            updateFileLocation += \"up2date.exe\";\n\n                        ProcessBuilder processBuilder\n                            = new ProcessBuilder(\n                                new String[]\n                                {\n                                    updateFileLocation,\n                                    \"--wait-parent\",\n                                    \"--allow-elevation\",\n                                    temp.getCanonicalPath(),\n                                    workingDir\n                                });\n                        processBuilder.start();\n\n                        getShutdownService().beginShutdown();\n\n                    } catch (Exception e)\n                    {\n                        logger.error(\"Error saving\", e);\n                        try\n                        {\n                            pin.close();\n                            out.close();\n                        } catch (Exception e1)\n                        {}\n                    }\n                }\n            }).start();\n\n        }\n        catch(FileNotFoundException e)\n        {\n            getUIService().getPopupDialog().showMessagePopupDialog(\n                getResources().getI18NString(\n                        \"plugin.updatechecker.DIALOG_MISSING_UPDATE\"),\n                getResources().getI18NString(\n                        \"plugin.updatechecker.DIALOG_NOUPDATE_TITLE\"),\n                PopupDialog.INFORMATION_MESSAGE);\n            tempF.delete();\n        }\n        catch (Exception e)\n        {\n            if (logger.isInfoEnabled())\n                logger.info(\"Error starting update process!\", e);\n            tempF.delete();\n        }\n    }","id":8252,"modified_method":"/**\r\n     * The update process itself.\r\n     * - Downloads the setup in a temporary directory.\r\n     * - Warns that update will shut down.\r\n     * - Triggers the setup in a separate process and shuts down.\r\n     */\r\n    private void windowsUpdate()\r\n    {\r\n        final File[] tempFile = new File[1];\r\n        FileOutputStream tempFileOutputStream = null;\r\n        boolean deleteTempFile = false;\r\n\r\n        try\r\n        {\r\n            URL u = new URL(downloadLink);\r\n\r\n            tempFileOutputStream = createTempFileOutputStream(u, tempFile);\r\n\r\n            URLConnection uc = u.openConnection();\r\n\r\n            if (uc instanceof HttpURLConnection)\r\n            {\r\n                if(uc instanceof HttpsURLConnection)\r\n                {\r\n                    CertificateVerificationService cvs\r\n                        = getCertificateVerification();\r\n\r\n                    int port = u.getPort();\r\n\r\n                    /* if we do not specify port in the URL\r\n                     * (http://domain.org:port) we have to set up the default\r\n                     * port of HTTP (80) or\r\n                     * HTTPS (443).\r\n                     */\r\n                    if(port == -1)\r\n                    {\r\n                        if(u.getProtocol().equals(\"http\"))\r\n                            port = 80;\r\n                        else if(u.getProtocol().equals(\"https\"))\r\n                            port = 443;\r\n                    }\r\n\r\n                    ((HttpsURLConnection)uc).setSSLSocketFactory(\r\n                            cvs.getSSLContext(u.getHost(), port)\r\n                                    .getSocketFactory());\r\n                }\r\n\r\n                // we don't handle here authentication fails cause\r\n                // still we gone to downloading file we have gone through\r\n                // successful authentication\r\n            }\r\n\r\n            // Track the progress of the download.\r\n            final ProgressMonitorInputStream input\r\n                = new ProgressMonitorInputStream(\r\n                        null,\r\n                        u.toString(),\r\n                        uc.getInputStream());\r\n            // Set the maximum value of the ProgressMonitor\r\n            input.getProgressMonitor().setMaximum(uc.getContentLength());\r\n\r\n            final BufferedOutputStream output\r\n                = new BufferedOutputStream(tempFileOutputStream);\r\n\r\n            try\r\n            {\r\n                int read = -1;\r\n                byte[] buff = new byte[1024];\r\n\r\n                while((read = input.read(buff)) != -1)\r\n                    output.write(buff, 0, read);\r\n                try\r\n                {\r\n                    input.close();\r\n                }\r\n                catch (IOException ioe)\r\n                {\r\n                    /*\r\n                     * Ignore it because we've already downloaded the\r\n                     * setup and that's what matters most.\r\n                     */ \r\n                }\r\n                output.close();\r\n\r\n                if(getUIService().getPopupDialog()\r\n                            .showConfirmPopupDialog(\r\n                                    getResources().getI18NString(\r\n                                        \"plugin.updatechecker.DIALOG_WARN\"),\r\n                                    getResources().getI18NString(\r\n                                        \"plugin.updatechecker.DIALOG_TITLE\"),\r\n                                    PopupDialog.YES_NO_OPTION,\r\n                                    PopupDialog.QUESTION_MESSAGE)\r\n                        != PopupDialog.YES_OPTION)\r\n                    return;\r\n\r\n                /*\r\n                 * The setup has been downloaded. Now start it and shut\r\n                 * down.\r\n                 */\r\n                new ProcessBuilder(\r\n                        tempFile[0].getCanonicalPath(),\r\n                        \"--wait-parent\",\r\n                        \"SIP_COMMUNICATOR_AUTOUPDATE_INSTALLDIR=\\\"\"\r\n                            + System.getProperty(\"user.dir\")\r\n                            + \"\\\"\")\r\n                    .start();\r\n\r\n                getShutdownService().beginShutdown();\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                logger.error(\"Error saving\", e);\r\n            }\r\n            finally\r\n            {\r\n                try\r\n                {\r\n                    input.close();\r\n                }\r\n                catch (IOException ioe)\r\n                {\r\n                }\r\n                try\r\n                {\r\n                    output.close();\r\n                }\r\n                catch (IOException ioe)\r\n                {\r\n                }\r\n            }\r\n        }\r\n        catch(FileNotFoundException fnfe)\r\n        {\r\n            deleteTempFile = true;\r\n            getUIService().getPopupDialog().showMessagePopupDialog(\r\n                getResources().getI18NString(\r\n                        \"plugin.updatechecker.DIALOG_MISSING_UPDATE\"),\r\n                getResources().getI18NString(\r\n                        \"plugin.updatechecker.DIALOG_NOUPDATE_TITLE\"),\r\n                PopupDialog.INFORMATION_MESSAGE);\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            deleteTempFile = true;\r\n            if (logger.isInfoEnabled())\r\n                logger.info(\"Error starting update process!\", e);;\r\n        }\r\n        finally\r\n        {\r\n            /*\r\n             * If we've failed, delete the temporary file into which the setup\r\n             * was supposed to be or has already been downloaded.\r\n             */\r\n            if (deleteTempFile)\r\n            {\r\n                if (tempFileOutputStream != null)\r\n                {\r\n                    try\r\n                    {\r\n                        tempFileOutputStream.close();\r\n                    }\r\n                    catch (IOException ioe)\r\n                    {\r\n                        // Ignore it because there's nothing else we can do.\r\n                    }\r\n                }\r\n                if (tempFile[0] != null)\r\n                    tempFile[0].delete();\r\n            }\r\n        }\r\n    }","commit_id":"e05a78a3468123a676267ab6a6199ddd4c57e861","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Invokes action for checking for updates.\n     */\n    private void checkForUpdate()\n    {\n        if(isNewestVersion())\n        {\n            if(isAuthenticationCanceled)\n                return;\n\n            getUIService().getPopupDialog().showMessagePopupDialog(\n                getResources().getI18NString(\n                        \"plugin.updatechecker.DIALOG_NOUPDATE\"),\n                getResources().getI18NString(\n                        \"plugin.updatechecker.DIALOG_NOUPDATE_TITLE\"),\n                PopupDialog.INFORMATION_MESSAGE);\n        }\n        else\n            windowsUpdaterShow();\n    }","id":8253,"modified_method":"/**\r\n     * Invokes \"Check for Updates\".\r\n     *\r\n     * @param notifyAboutNewestVersion <tt>true<\/tt> if the user is to be\r\n     * notified if they have the newest version already; otherwise,\r\n     * <tt>false<\/tt>\r\n     */\r\n    private synchronized void checkForUpdates(\r\n            final boolean notifyAboutNewestVersion)\r\n    {\r\n        if (inCheckForUpdates > 0)\r\n        {\r\n            if (checkForUpdatesDialog != null)\r\n                checkForUpdatesDialog.toFront();\r\n            return;\r\n        }\r\n\r\n        Thread checkForUpdatesThread\r\n            = new Thread()\r\n            {\r\n                @Override\r\n                public void run()\r\n                {\r\n                    try\r\n                    {\r\n                        if(isNewestVersion())\r\n                        {\r\n                            if(!isAuthenticationCanceled\r\n                                    && notifyAboutNewestVersion)\r\n                            {\r\n                                ResourceManagementService resources\r\n                                    = getResources();\r\n\r\n                                getUIService()\r\n                                    .getPopupDialog()\r\n                                        .showMessagePopupDialog(\r\n                                                resources.getI18NString(\r\n                                                        \"plugin.updatechecker.DIALOG_NOUPDATE\"),\r\n                                                resources.getI18NString(\r\n                                                        \"plugin.updatechecker.DIALOG_NOUPDATE_TITLE\"),\r\n                                                PopupDialog.INFORMATION_MESSAGE);\r\n                            }\r\n                        }\r\n                        else if (OSUtils.IS_WINDOWS)\r\n                            showWindowsNewVersionAvailableDialog();\r\n                        else\r\n                            showGenericNewVersionAvailableDialog();\r\n                    }\r\n                    finally\r\n                    {\r\n                        exitCheckForUpdates(null);\r\n                    }\r\n                }\r\n            };\r\n\r\n        checkForUpdatesThread.setDaemon(true);\r\n\r\n        enterCheckForUpdates(null);\r\n        try\r\n        {\r\n            checkForUpdatesThread.start();\r\n            checkForUpdatesThread = null;\r\n        }\r\n        finally\r\n        {\r\n            if (checkForUpdatesThread != null)\r\n                exitCheckForUpdates(null);\r\n        }\r\n    }","commit_id":"e05a78a3468123a676267ab6a6199ddd4c57e861","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Return the certificate verification service impl.\n     * @return the CertificateVerification service.\n     */\n    private static CertificateVerificationService\n        getCertificateVerificationService()\n    {\n        if(certificateService == null)\n        {\n            ServiceReference certVerifyReference\n                = bundleContext.getServiceReference(\n                    CertificateVerificationService.class.getName());\n            if(certVerifyReference != null)\n                certificateService\n                = (CertificateVerificationService)bundleContext.getService(\n                        certVerifyReference);\n        }\n\n        return certificateService;\n    }","id":8254,"modified_method":"/**\r\n     * Returns the certificate verification service implementation.\r\n     *\r\n     * @return the <tt>CertificateVerificationService<\/tt>\r\n     */\r\n    private static CertificateVerificationService getCertificateVerification()\r\n    {\r\n        if(certificateVerification == null)\r\n        {\r\n            certificateVerification\r\n                = ServiceUtils.getService(\r\n                        bundleContext,\r\n                        CertificateVerificationService.class);\r\n        }\r\n        return certificateVerification;\r\n    }","commit_id":"e05a78a3468123a676267ab6a6199ddd4c57e861","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns the <tt>BrowserLauncherService<\/tt> obtained from the bundle\n     * context.\n     * @return the <tt>BrowserLauncherService<\/tt> obtained from the bundle\n     * context\n     */\n    private static BrowserLauncherService getBrowserLauncher()\n    {\n        if (browserLauncherService == null)\n        {\n            ServiceReference serviceReference = bundleContext\n                .getServiceReference(BrowserLauncherService.class.getName());\n\n            browserLauncherService = (BrowserLauncherService) bundleContext\n                .getService(serviceReference);\n        }\n\n        return browserLauncherService;\n    }","id":8255,"modified_method":"/**\r\n     * Returns the <tt>BrowserLauncherService<\/tt> obtained from the bundle\r\n     * context.\r\n     * @return the <tt>BrowserLauncherService<\/tt> obtained from the bundle\r\n     * context\r\n     */\r\n    private static BrowserLauncherService getBrowserLauncher()\r\n    {\r\n        if (browserLauncher == null)\r\n        {\r\n            browserLauncher\r\n                = ServiceUtils.getService(\r\n                        bundleContext,\r\n                        BrowserLauncherService.class);\r\n        }\r\n        return browserLauncher;\r\n    }","commit_id":"e05a78a3468123a676267ab6a6199ddd4c57e861","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Check the first link as files on the web are sorted by date\n     * @return whether we are using the latest version or not.\n     */\n    private boolean isNewestVersion()\n    {\n        try\n        {\n            ServiceReference serviceReference = bundleContext\n                .getServiceReference( net.java.sip.communicator.service.version.\n                    VersionService.class.getName());\n\n            VersionService verService = (VersionService) bundleContext\n                    .getService(serviceReference);\n\n            net.java.sip.communicator.service.version.Version\n                ver = verService.getCurrentVersion();\n\n            String configString = null;\n\n            configString = getConfigurationService().getString(\n                    PROP_UPDATE_LINK);\n\n            if(configString == null)\n            {\n                configString = Resources.getConfigString(\"update_link\");\n            }\n\n            if(configString == null)\n            {\n                if (logger.isDebugEnabled())\n                    logger.debug(\n                            \"Updates are disabled. Faking latest version.\");\n                return true;\n            }\n\n            URL url = new URL(configString);\n            URLConnection conn = url.openConnection();\n\n            if (conn instanceof HttpURLConnection)\n            {\n                while(((HttpURLConnection)conn).getResponseCode() ==\n                            HttpURLConnection.HTTP_UNAUTHORIZED\n                        && !isAuthenticationCanceled)\n                {\n                    if(userCredentials.getUserName() != null)\n                    {\n                        errorMessage = getResources().getI18NString(\n                            \"service.gui.AUTHENTICATION_FAILED\",\n                            new String[]{\n                                userCredentials.getUserName(),\n                                host});\n\n                        userCredentials.setUserName(null);\n                        userCredentials.setPasswordPersistent(false);\n                        userCredentials = null;\n\n                        getConfigurationService().removeProperty(\n                            UPDATE_USERNAME_CONFIG);\n                        getConfigurationService().removeProperty(\n                            UPDATE_PASSWORD_CONFIG);                        \n\n                        conn = url.openConnection();\n                    }\n                    else\n                        break;\n                }\n            }\n            conn.setConnectTimeout(10000);\n            conn.setReadTimeout(10000);\n\n            Properties props = new Properties();\n            props.load(conn.getInputStream());\n\n            lastVersion = props.getProperty(\"last_version\");\n            downloadLink = props.getProperty(\"download_link\");\n\n            changesLink =\n                    configString.substring(0, configString.lastIndexOf(\"/\") + 1)\n                    + props.getProperty(\"changes_html\");\n\n            return lastVersion.compareTo(ver.toString()) <= 0;\n        }\n        catch (Exception e)\n        {\n            logger.warn(\"Cannot get and compare versions!\");\n            if (logger.isDebugEnabled())\n                logger.debug(\"Error was: \", e);\n            // if we get an exception this mean we were unable to compare\n            // versions will return that current is newest to prevent opening\n            // info dialog about new version\n            return true;\n        }\n    }","id":8256,"modified_method":"/**\r\n     * Checks the first link as files on the web are sorted by date.\r\n     *\r\n     * @return <tt>true<\/tt> if we are currently running the newest version;\r\n     * otherwise, <tt>false<\/tt>\r\n     */\r\n    private boolean isNewestVersion()\r\n    {\r\n        try\r\n        {\r\n            ServiceReference serviceReference = bundleContext\r\n                .getServiceReference( net.java.sip.communicator.service.version.\r\n                    VersionService.class.getName());\r\n\r\n            VersionService verService = (VersionService) bundleContext\r\n                    .getService(serviceReference);\r\n\r\n            net.java.sip.communicator.service.version.Version\r\n                ver = verService.getCurrentVersion();\r\n\r\n            String configString\r\n                = getConfiguration().getString(PROP_UPDATE_LINK);\r\n            if(configString == null)\r\n                configString = Resources.getConfigString(\"update_link\");\r\n            if(configString == null)\r\n            {\r\n                if (logger.isDebugEnabled())\r\n                    logger.debug(\r\n                            \"Updates are disabled. Faking latest version.\");\r\n                return true;\r\n            }\r\n\r\n            URL url = new URL(configString);\r\n            URLConnection conn = url.openConnection();\r\n\r\n            if (conn instanceof HttpURLConnection)\r\n            {\r\n                while(((HttpURLConnection)conn).getResponseCode() ==\r\n                            HttpURLConnection.HTTP_UNAUTHORIZED\r\n                        && !isAuthenticationCanceled)\r\n                {\r\n                    if(userCredentials.getUserName() != null)\r\n                    {\r\n                        errorMessage = getResources().getI18NString(\r\n                            \"service.gui.AUTHENTICATION_FAILED\",\r\n                            new String[]{\r\n                                userCredentials.getUserName(),\r\n                                host});\r\n\r\n                        userCredentials.setUserName(null);\r\n                        userCredentials.setPasswordPersistent(false);\r\n                        userCredentials = null;\r\n\r\n                        getConfiguration().removeProperty(\r\n                                UPDATE_USERNAME_CONFIG);\r\n                        getConfiguration().removeProperty(\r\n                                UPDATE_PASSWORD_CONFIG);                        \r\n\r\n                        conn = url.openConnection();\r\n                    }\r\n                    else\r\n                        break;\r\n                }\r\n            }\r\n            conn.setConnectTimeout(10000);\r\n            conn.setReadTimeout(10000);\r\n\r\n            Properties props = new Properties();\r\n            props.load(conn.getInputStream());\r\n\r\n            lastVersion = props.getProperty(\"last_version\");\r\n            downloadLink = props.getProperty(\"download_link\");\r\n\r\n            changesLink =\r\n                    configString.substring(0, configString.lastIndexOf(\"/\") + 1)\r\n                    + props.getProperty(\"changes_html\");\r\n\r\n            return lastVersion.compareTo(ver.toString()) <= 0;\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            logger.warn(\"Cannot get and compare versions!\");\r\n            if (logger.isDebugEnabled())\r\n                logger.debug(\"Error was: \", e);\r\n            // if we get an exception this mean we were unable to compare\r\n            // versions will return that current is newest to prevent opening\r\n            // info dialog about new version\r\n            return true;\r\n        }\r\n    }","commit_id":"e05a78a3468123a676267ab6a6199ddd4c57e861","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns a reference to the UIService implementation currently registered\n     * in the bundle context or null if no such implementation was found.\n     *\n     * @return a reference to a UIService implementation currently registered\n     * in the bundle context or null if no such implementation was found.\n     */\n    private static UIService getUIService()\n    {\n        if(uiService == null)\n        {\n            ServiceReference uiServiceReference\n                = bundleContext.getServiceReference(\n                    UIService.class.getName());\n            uiService = (UIService)bundleContext\n                .getService(uiServiceReference);\n        }\n        return uiService;\n    }","id":8257,"modified_method":"/**\r\n     * Returns a reference to the UIService implementation currently registered\r\n     * in the bundle context or null if no such implementation was found.\r\n     *\r\n     * @return a reference to a UIService implementation currently registered\r\n     * in the bundle context or null if no such implementation was found.\r\n     */\r\n    private static UIService getUIService()\r\n    {\r\n        if(uiService == null)\r\n            uiService = ServiceUtils.getService(bundleContext, UIService.class);\r\n        return uiService;\r\n    }","commit_id":"e05a78a3468123a676267ab6a6199ddd4c57e861","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns a reference to a ConfigurationService implementation currently\n     * registered in the bundle context or null if no such implementation was\n     * found.\n     *\n     * @return a currently valid implementation of the ConfigurationService.\n     */\n    public static ConfigurationService getConfigurationService()\n    {\n        if(configurationService == null)\n        {\n            ServiceReference confReference\n                = bundleContext.getServiceReference(\n                    ConfigurationService.class.getName());\n            configurationService\n                = (ConfigurationService) bundleContext.getService(confReference);\n        }\n        return configurationService;\n    }","id":8258,"modified_method":"/**\n     * Returns a reference to a ConfigurationService implementation currently\n     * registered in the bundle context or null if no such implementation was\n     * found.\n     *\n     * @return a currently valid implementation of the ConfigurationService.\n     */\n    public static ConfigurationService getConfigurationService()\n    {\n        if(configurationService == null)\n        {\n            configurationService\n                = ServiceUtils.getService(\n                        bundleContext,\n                        ConfigurationService.class);\n        }\n        return configurationService;\n    }","commit_id":"8942d902ee7ab2662cfce61d7879624ce29d7522","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns a reference to a NetworkAddressManagerService implementation\n     * currently registered in the bundle context or null if no such\n     * implementation was found.\n     *\n     * @return a currently valid implementation of the\n     * NetworkAddressManagerService .\n     */\n    public static NetworkAddressManagerService getNetworkAddressManagerService()\n    {\n        if(networkAddressManagerService == null)\n        {\n            ServiceReference confReference\n                = bundleContext.getServiceReference(\n                    NetworkAddressManagerService.class.getName());\n            networkAddressManagerService = (NetworkAddressManagerService)\n                bundleContext.getService(confReference);\n        }\n        return networkAddressManagerService;\n    }","id":8259,"modified_method":"/**\n     * Returns a reference to a NetworkAddressManagerService implementation\n     * currently registered in the bundle context or null if no such\n     * implementation was found.\n     *\n     * @return a currently valid implementation of the\n     * <tt>NetworkAddressManagerService<\/tt>\n     */\n    public static NetworkAddressManagerService getNetworkAddressManagerService()\n    {\n        if(networkAddressManagerService == null)\n        {\n            networkAddressManagerService\n                = ServiceUtils.getService(\n                        bundleContext,\n                        NetworkAddressManagerService.class);\n        }\n        return networkAddressManagerService;\n    }","commit_id":"8942d902ee7ab2662cfce61d7879624ce29d7522","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns a reference to a MediaService implementation currently registered\n     * in the bundle context or null if no such implementation was found.\n     *\n     * @return a reference to a MediaService implementation currently registered\n     * in the bundle context or null if no such implementation was found.\n     */\n    public static MediaService getMediaService()\n    {\n        if(mediaService == null)\n        {\n            ServiceReference mediaServiceReference\n                = bundleContext.getServiceReference(\n                    MediaService.class.getName());\n            mediaService = (MediaService)bundleContext\n                .getService(mediaServiceReference);\n        }\n        return mediaService;\n    }","id":8260,"modified_method":"/**\n     * Returns a reference to a <tt>MediaService<\/tt> implementation currently\n     * registered in the bundle context or null if no such implementation was\n     * found.\n     *\n     * @return a reference to a <tt>MediaService<\/tt> implementation currently\n     * registered in the bundle context or null if no such implementation was\n     * found.\n     */\n    public static MediaService getMediaService()\n    {\n        if(mediaService == null)\n        {\n            mediaService\n                = ServiceUtils.getService(bundleContext, MediaService.class);\n        }\n        return mediaService;\n    }","commit_id":"8942d902ee7ab2662cfce61d7879624ce29d7522","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Returns the port tracker that we are supposed to use when binding ports\r\n     * for the {@link MediaType} indicated by the string param. If we do not\r\n     * recognize the string as a valid media type, we simply return the default\r\n     * port tracker.\r\n     *\r\n     * @param mediaTypeStr the name of the media type that we want to obtain a\r\n     * locator for.\r\n     *\r\n     * @return the port tracker that we are supposed to use when binding ports\r\n     * for the {@link MediaType} with the specified name or the default tracker\r\n     * in case the name doesn't ring a bell.\r\n     */\r\n    protected static PortTracker getPortTracker(String mediaTypeStr)\r\n    {\r\n        try\r\n        {\r\n            MediaType mediaType = MediaType.parseString(mediaTypeStr);\r\n\r\n            return getPortTracker(mediaType);\r\n        }\r\n        catch (Exception exc)\r\n        {\r\n            logger.info(\r\n                \"Returning default port tracker for unrecognized media type: \"\r\n                + mediaTypeStr);\r\n\r\n            return defaultPortTracker;\r\n        }\r\n    }","id":8261,"modified_method":"/**\r\n     * Returns the port tracker that we are supposed to use when binding ports\r\n     * for the {@link MediaType} indicated by the string param. If we do not\r\n     * recognize the string as a valid media type, we simply return the default\r\n     * port tracker.\r\n     *\r\n     * @param mediaTypeStr the name of the media type that we want to obtain a\r\n     * locator for.\r\n     *\r\n     * @return the port tracker that we are supposed to use when binding ports\r\n     * for the {@link MediaType} with the specified name or the default tracker\r\n     * in case the name doesn't ring a bell.\r\n     */\r\n    protected static PortTracker getPortTracker(String mediaTypeStr)\r\n    {\r\n        try\r\n        {\r\n            return getPortTracker(MediaType.parseString(mediaTypeStr));\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            logger.info(\r\n                \"Returning default port tracker for unrecognized media type: \"\r\n                    + mediaTypeStr);\r\n\r\n            return defaultPortTracker;\r\n        }\r\n    }","commit_id":"8942d902ee7ab2662cfce61d7879624ce29d7522","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Checks whether the logger is enabled.\n     * @return <tt>true<\/tt> if the logger is enabled, <tt>false<\/tt>\n     *  otherwise.\n     */\n    public boolean isEnabled()\n    {\n        return NetaddrActivator.getPacketLogging()\n                .isLoggingEnabled(PacketLoggingService.ProtocolName.ICE4J);\n    }","id":8262,"modified_method":"/**\n     * Checks whether the logger is enabled.\n     *\n     * @return <tt>true<\/tt> if the logger is enabled; <tt>false<\/tt>,\n     * otherwise\n     */\n    public boolean isEnabled()\n    {\n        PacketLoggingService packetLoggingService\n            = NetaddrActivator.getPacketLogging();\n\n        return\n            (packetLoggingService != null)\n                && packetLoggingService.isLoggingEnabled(\n                        PacketLoggingService.ProtocolName.ICE4J);\n    }","commit_id":"c307d5ebab5e5f20c5550d6bf341731b8b47497a","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns a reference to a ConfigurationService implementation currently\n     * registered in the bundle context or null if no such implementation was\n     * found.\n     *\n     * @return a currently valid implementation of the ConfigurationService.\n     */\n    public static ConfigurationService getConfigurationService()\n    {\n        if (configurationService == null)\n        {\n            ServiceReference confReference\n                = bundleContext.getServiceReference(\n                    ConfigurationService.class.getName());\n            configurationService\n                = (ConfigurationService) bundleContext.getService(confReference);\n        }\n        return configurationService;\n    }","id":8263,"modified_method":"/**\n     * Returns a reference to a ConfigurationService implementation currently\n     * registered in the bundle context or null if no such implementation was\n     * found.\n     *\n     * @return a currently valid implementation of the ConfigurationService.\n     */\n    public static ConfigurationService getConfigurationService()\n    {\n        if (configurationService == null)\n        {\n            configurationService\n                = ServiceUtils.getService(\n                        bundleContext,\n                        ConfigurationService.class);\n        }\n        return configurationService;\n    }","commit_id":"c307d5ebab5e5f20c5550d6bf341731b8b47497a","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns a reference to the <tt>PacketLoggingService<\/tt> implementation\n     * currently registered in the bundle context or null if no such\n     * implementation was found.\n     *\n     * @return a reference to a <tt>PacketLoggingService<\/tt> implementation\n     * currently registered in the bundle context or null if no such\n     * implementation was found.\n     */\n    public static PacketLoggingService getPacketLogging()\n    {\n        if (packetLoggingService == null)\n        {\n            ServiceReference plReference\n                = bundleContext.getServiceReference(\n                        PacketLoggingService.class.getName());\n\n            packetLoggingService\n                = (PacketLoggingService)bundleContext.getService(plReference);\n        }\n        return packetLoggingService;\n    }","id":8264,"modified_method":"/**\n     * Returns a reference to the <tt>PacketLoggingService<\/tt> implementation\n     * currently registered in the bundle context or null if no such\n     * implementation was found.\n     *\n     * @return a reference to a <tt>PacketLoggingService<\/tt> implementation\n     * currently registered in the bundle context or null if no such\n     * implementation was found.\n     */\n    public static PacketLoggingService getPacketLogging()\n    {\n        if (packetLoggingService == null)\n        {\n            packetLoggingService\n                = ServiceUtils.getService(\n                        bundleContext,\n                        PacketLoggingService.class);\n        }\n        return packetLoggingService;\n    }","commit_id":"c307d5ebab5e5f20c5550d6bf341731b8b47497a","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n      * Creates and returns an ICE agent that a protocol could use for the\n      * negotiation of media transport addresses. One ICE agent should only be\n      * used for a single session negotiation.\n      *\n      * @return the newly created ICE Agent.\n      */\n     public Agent createIceAgent()\n     {\n         Agent a = new Agent();\n//         a.getStunStack().\n         return a;\n     }","id":8265,"modified_method":"/**\n      * Creates and returns an ICE agent that a protocol could use for the\n      * negotiation of media transport addresses. One ICE agent should only be\n      * used for a single session negotiation.\n      *\n      * @return the newly created ICE Agent.\n      */\n     public Agent createIceAgent()\n     {\n         return new Agent();\n     }","commit_id":"c307d5ebab5e5f20c5550d6bf341731b8b47497a","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Performs corresponding actions, when a button is pressed.\n     * @param e the <tt>ActionEvent<\/tt> that notified us\n     */\n    public void actionPerformed(ActionEvent e)\n    {\n        JButton sourceButton = (JButton) e.getSource();\n\n        if (sourceButton.equals(newButton))\n        {\n            NewPropertyDialog dialog = new NewPropertyDialog();\n\n            dialog.pack();\n            dialog.setLocation(\n                    Toolkit.getDefaultToolkit().getScreenSize().width/2\n                        - dialog.getWidth()/2,\n                    Toolkit.getDefaultToolkit().getScreenSize().height/2\n                        - dialog.getHeight()/2\n                    );\n\n            dialog.setVisible(true);\n\n        } else if (sourceButton.equals(deleteButton))\n        {\n            int viewRow = propsTable.getSelectedRow();\n            int modelRow = \n                propsTable.convertRowIndexToModel(viewRow);\n            String selectedProperty\n                = (String)propsTable.getModel().getValueAt(modelRow, 0);\n            confService.removeProperty(selectedProperty);\n            propsTable.clearSelection();\n            defaultButtonState();\n            /**\n             * Resets the text in the search box text field in order to fire \n             * a new value change event for the FilterRow to update the view.\n             */\n            String text = searchField.getText();\n            searchField.setText(text);\n        }\n    }","id":8266,"modified_method":"/**\n     * Performs corresponding actions, when a button is pressed.\n     * @param e the <tt>ActionEvent<\/tt> that notified us\n     */\n    public void actionPerformed(ActionEvent e)\n    {\n        JButton sourceButton = (JButton) e.getSource();\n\n        if (sourceButton.equals(newButton))\n        {\n            NewPropertyDialog dialog = new NewPropertyDialog();\n            Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\n\n            dialog.pack();\n            dialog.setLocation(\n                    (screenSize.width - dialog.getWidth()) / 2,\n                    (screenSize.height - dialog.getHeight()) / 2);\n\n            dialog.setVisible(true);\n        }\n        else if (sourceButton.equals(deleteButton))\n        {\n            int viewRow = propsTable.getSelectedRow();\n            int modelRow =  propsTable.convertRowIndexToModel(viewRow);\n            String selectedProperty\n                = (String) propsTable.getModel().getValueAt(modelRow, 0);\n\n            confService.removeProperty(selectedProperty);\n            ((DefaultTableModel) propsTable.getModel()).removeRow(modelRow);\n            propsTable.clearSelection();\n            defaultButtonState();\n        }\n    }","commit_id":"2f3339dacf8bd16af1ea642a125d632319d0a454","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Creates an instance of <tt>ButtonsPanel<\/tt>.\n     * @param propsTable the table containing all properties.\n     * @param searchBox the search box panel containing the search box text \n     * field.\n     */\n    public ButtonsPanel(JTable propsTable, SearchField searchField)\n    {\n        this.propsTable = propsTable;\n\n        this.searchField = searchField;\n\n        this.setLayout(new BorderLayout());\n\n        this.setBorder(BorderFactory.createEmptyBorder(8, 8, 8, 8));\n\n        this.newButton.setOpaque(false);\n        this.deleteButton.setOpaque(false);\n\n        this.buttonsPanel.add(newButton);\n        this.buttonsPanel.add(deleteButton);\n\n        this.add(buttonsPanel, BorderLayout.NORTH);\n\n        this.newButton.addActionListener(this);\n        this.deleteButton.addActionListener(this);\n\n        //default as nothing is selected\n        defaultButtonState();\n    }","id":8267,"modified_method":"/**\n     * Creates an instance of <tt>ButtonsPanel<\/tt>.\n     * @param propsTable the table containing all properties.\n     * @param searchBox the search box panel containing the search box text \n     * field.\n     */\n    public ButtonsPanel(JTable propsTable, SearchField searchField)\n    {\n        this.propsTable = propsTable;\n\n        ResourceManagementService r\n            = PropertiesEditorActivator.getResourceManagementService();\n\n        newButton = new JButton(r.getI18NString(\"service.gui.NEW\"));\n        deleteButton = new JButton(r.getI18NString(\"service.gui.DELETE\"));\n        newButton.setOpaque(false);\n        deleteButton.setOpaque(false);\n\n        JPanel buttonsPanel = new TransparentPanel(new GridLayout(0, 1, 8, 8));\n\n        buttonsPanel.add(newButton);\n        buttonsPanel.add(deleteButton);\n\n        setBorder(BorderFactory.createEmptyBorder(8, 8, 8, 8));\n        setLayout(new BorderLayout());\n        add(buttonsPanel, BorderLayout.NORTH);\n\n        newButton.addActionListener(this);\n        deleteButton.addActionListener(this);\n\n        //default as nothing is selected\n        defaultButtonState();\n    }","commit_id":"2f3339dacf8bd16af1ea642a125d632319d0a454","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns the <tt>UIService<\/tt> obtained from the bundle context.\n     *\n     * @return the <tt>UIService<\/tt> obtained from the bundle context.\n     */\n    public static UIService getUIService() \n    {\n        if (uiService == null) \n        {\n            ServiceReference uiReference =\n                    bundleContext.getServiceReference(UIService.class.getName());\n\n            uiService =\n                    (UIService) bundleContext.getService(uiReference);\n        }\n\n        return uiService;\n    }","id":8268,"modified_method":"/**\n     * Returns the <tt>UIService<\/tt> obtained from the <tt>BundleContext<\/tt>.\n     *\n     * @return the <tt>UIService<\/tt> obtained from the <tt>BundleContext<\/tt>.\n     */\n    public static UIService getUIService() \n    {\n        if (uiService == null)\n            uiService = ServiceUtils.getService(bundleContext, UIService.class);\n        return uiService;\n    }","commit_id":"2f3339dacf8bd16af1ea642a125d632319d0a454","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns the table model of the props table.\n     * \n     * @return The <tt>PropsTableModel<\/tt> of the props table.\n     */\n    private PropsTableModel getTableModel()\n    {\n        if (tableModel == null)\n            tableModel = new PropsTableModel();\n        return tableModel;\n    }","id":8269,"modified_method":"/**\n     * Gets the data from the <tt>ConfigurationService<\/tt> that will construct\n     * the <tt>PropsTableModel<\/tt> for the properties table.\n     *\n     * @return The data necessary to initialize the <tt>PropsTableModel<\/tt>\n     */\n    private Object[][] initTableModel()\n    {\n        ConfigurationService confService\n            = PropertiesEditorActivator.getConfigurationService();\n        java.util.List<String> properties = confService.getAllPropertyNames();\n        Object[][] data = new Object[properties.size()][];\n        int i = 0;\n\n        for (String property : properties)\n        {\n            data[i++]\n                = new Object[] { property, confService.getProperty(property) };\n        }\n\n        return data;\n    }","commit_id":"2f3339dacf8bd16af1ea642a125d632319d0a454","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void valueChanged(ListSelectionEvent e)\n        {\n            int selectedRow = propsTable.getSelectedRow();\n\n            if (selectedRow == -1)\n            {\n                buttonsPanel.defaultButtonState();\n                return;\n            }\n\n            buttonsPanel.enableDeleteButton(true);\n        }","id":8270,"modified_method":"public void valueChanged(ListSelectionEvent e)\n        {\n            int selectedRow = propsTable.getSelectedRow();\n\n            if (selectedRow == -1)\n                buttonsPanel.defaultButtonState();\n            else\n                buttonsPanel.enableDeleteButton(true);\n        }","commit_id":"2f3339dacf8bd16af1ea642a125d632319d0a454","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Creates an instance <tt>PropertiesEditorPanel<\/tt>.\n     */\n    public PropertiesEditorPanel()\n    {\n        super(new BorderLayout());\n        setBorder(BorderFactory.createEmptyBorder(8, 8, 8, 8));\n\n        /**\n         * Instantiates the properties table and adds selection model and\n         * listener and adds a row sorter to the table model\n         */\n        propsTable = new JTable(getTableModel());\n        propsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n        PropsListSelectionListener selectionListener =\n            new PropsListSelectionListener();\n        propsTable.getSelectionModel().addListSelectionListener(\n            selectionListener);\n        propsTable.getColumnModel().getSelectionModel()\n            .addListSelectionListener(selectionListener);\n        TableRowSorter<TableModel> sorter =\n            new TableRowSorter<TableModel>(propsTable.getModel());\n        propsTable.setRowSorter(sorter);\n\n        JScrollPane scrollPane = new JScrollPane(propsTable);\n\n        SearchField searchField = new SearchField(\"\", sorter);\n        buttonsPanel = new ButtonsPanel(propsTable, searchField);\n\n        centerPanel = new TransparentPanel(new BorderLayout());\n        centerPanel.add(scrollPane, BorderLayout.CENTER);\n        centerPanel.add(buttonsPanel, BorderLayout.EAST);\n\n        JLabel needRestart =\n            new JLabel(\n                resourceManagementService\n                    .getI18NString(\"plugin.propertieseditor.NEED_RESTART\"));\n        needRestart.setForeground(Color.RED);\n\n        TransparentPanel searchPanel =\n            new TransparentPanel(new BorderLayout(5, 0));\n        searchPanel.setBorder(BorderFactory.createEmptyBorder(3, 5, 3, 5));\n        searchPanel.add(searchField, BorderLayout.CENTER);\n\n        add(searchPanel, BorderLayout.NORTH);\n        add(centerPanel, BorderLayout.CENTER);\n        add(needRestart, BorderLayout.SOUTH);\n    }","id":8271,"modified_method":"/**\n     * Creates an instance <tt>PropertiesEditorPanel<\/tt>.\n     */\n    public PropertiesEditorPanel()\n    {\n        super(new BorderLayout());\n\n        /**\n         * Instantiates the properties table and adds selection model and\n         * listener and adds a row sorter to the table model\n         */\n        ResourceManagementService r\n            = PropertiesEditorActivator.getResourceManagementService();\n        String[] columnNames\n            = new String[]\n                    {\n                        r.getI18NString(\"service.gui.NAME\"),\n                        r.getI18NString(\"service.gui.VALUE\")\n                    };\n\n        propsTable\n            = new JTable(new PropsTableModel(initTableModel(), columnNames));\n        propsTable.setRowSorter(\n                new TableRowSorter<TableModel>(propsTable.getModel()));\n        propsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n\n        PropsListSelectionListener selectionListener\n            = new PropsListSelectionListener();\n\n        propsTable.getSelectionModel().addListSelectionListener(\n                selectionListener);\n        propsTable\n            .getColumnModel()\n                .getSelectionModel()\n                    .addListSelectionListener(selectionListener);\n\n        JScrollPane scrollPane = new JScrollPane(propsTable);\n        SearchField searchField = new SearchField(\"\", propsTable);\n\n        buttonsPanel = new ButtonsPanel(propsTable, searchField);\n\n        centerPanel = new TransparentPanel(new BorderLayout());\n        centerPanel.add(scrollPane, BorderLayout.CENTER);\n        centerPanel.add(buttonsPanel, BorderLayout.EAST);\n\n        JLabel needRestart\n            = new JLabel(\n                    r.getI18NString(\"plugin.propertieseditor.NEED_RESTART\"));\n\n        needRestart.setForeground(Color.RED);\n\n        TransparentPanel searchPanel\n            = new TransparentPanel(new BorderLayout(5, 0));\n\n        searchPanel.setBorder(BorderFactory.createEmptyBorder(3, 5, 3, 5));\n        searchPanel.add(searchField, BorderLayout.CENTER);\n\n        setBorder(BorderFactory.createEmptyBorder(8, 8, 8, 8));\n        add(searchPanel, BorderLayout.NORTH);\n        add(centerPanel, BorderLayout.CENTER);\n        add(needRestart, BorderLayout.SOUTH);\n    }","commit_id":"2f3339dacf8bd16af1ea642a125d632319d0a454","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns true if the given cell is edittable.\n     * Edittable cells in this model are cells with column index 1.\n     * @param rowIndex The row index.\n     * @param columnIndex The column index.\n     * @return True if the column index is 1\n     */\n    public boolean isCellEditable(int rowIndex, int columnIndex) \n    {\n        return columnIndex == 1;\n    }","id":8272,"modified_method":"/**\n     * Returns true if the given cell is editable. Editable cells in this model\n     * are cells with column index 1.\n     *\n     * @param rowIndex The row index.\n     * @param columnIndex The column index.\n     * @return <tt>true<\/tt> if the column index is 1\n     */\n    @Override\n    public boolean isCellEditable(int rowIndex, int columnIndex)\n    {\n        return columnIndex == 1;\n    }","commit_id":"2f3339dacf8bd16af1ea642a125d632319d0a454","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Sets aValue at a cell with coordinates [rowIndex, columnIndex]\n     * @param aValue The given value.\n     * @param rowIndex The row index that the value will be set to.\n     * @param columnIndex The column index that the value will be set to.\n     */\n    public void setValueAt(Object aValue, int rowIndex, int columnIndex) \n    {\n        String property = confService.getAllPropertyNames().get(rowIndex);\n        confService.setProperty(property, aValue);\n    }","id":8273,"modified_method":"/**\n     * Sets aValue at a cell with coordinates [<tt>rowIndex<\/tt>,\n     * <tt>columnIndex<\/tt>].\n     *\n     * @param aValue The given value.\n     * @param rowIndex The row index that the value will be set to.\n     * @param columnIndex The column index that the value will be set to.\n     */\n    @Override\n    public void setValueAt(Object aValue, int rowIndex, int columnIndex)\n    {\n        String property = (String)getValueAt(rowIndex, 0);\n\n        confService.setProperty(property, aValue);\n        super.setValueAt(aValue, rowIndex, columnIndex);\n    }","commit_id":"2f3339dacf8bd16af1ea642a125d632319d0a454","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void propertyChange(PropertyChangeEvent evt)\n    {\n        for (TableModelListener l : listeners.getListeners(TableModelListener.class))\n        {\n            l.tableChanged(new TableModelEvent(this));\n        }\n    }","id":8274,"modified_method":"/**\n     * Listens for <tt>PropertyChangeEvent<\/tt>'s in the\n     * <tt>ConfigurationService<\/tt> and updates the model if new property is\n     * added.\n     */\n    @Override\n    public void propertyChange(PropertyChangeEvent evt)\n    {\n        // If new property was added\n        if (evt.getOldValue() == null)\n            addRow(new Object[] {evt.getPropertyName(), evt.getNewValue()});\n    }","commit_id":"2f3339dacf8bd16af1ea642a125d632319d0a454","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void Register()\n    {\n        confService.addPropertyChangeListener(this);\n    }","id":8275,"modified_method":"/**\n     * Creates an instance of <tt>PropsTableModel<\/tt>.\n     */\n    public PropsTableModel(Object[][] data, String[] columnNames)\n    {\n        super(data, columnNames);\n\n        confService.addPropertyChangeListener(this);\n    }","commit_id":"2f3339dacf8bd16af1ea642a125d632319d0a454","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Reloads text field UI defs.\n     */\n    public void loadSkin()\n    {\n        if (getUI() instanceof SearchFieldUI)\n        {\n            ((SearchFieldUI) getUI()).loadSkin();\n        }\n    }","id":8276,"modified_method":"/**\n     * Reloads text field UI defs.\n     */\n    public void loadSkin()\n    {\n        ComponentUI ui = getUI();\n\n        if (ui instanceof SearchFieldUI)\n            ((SearchFieldUI) ui).loadSkin();\n    }","commit_id":"2f3339dacf8bd16af1ea642a125d632319d0a454","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Creates an instance <tt>SearchField<\/tt>.\n     * \n     * @param text the text we would like to enter by default\n     * @param sorter the sorter which will be used for filtering.\n     */\n    public SearchField(String text, final TableRowSorter<TableModel> sorter)\n    {\n        super(text);\n\n        if (getUI() instanceof SearchFieldUI)\n        {\n            ((SearchFieldUI) getUI()).setDeleteButtonEnabled(true);\n            ((SearchFieldUI) getUI()).setCallButtonEnabled(false);\n        }\n\n        this.setBorder(null);\n        this.setOpaque(false);\n        this.setPreferredSize(new Dimension(100, 25));\n        this.setDragEnabled(true);\n\n        InputMap imap =\n            getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);\n        imap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), \"escape\");\n        ActionMap amap = getActionMap();\n        amap.put(\"escape\", new AbstractAction()\n        {\n            /**\n             * Serial Version UID.\n             */\n            private static final long serialVersionUID = 1L;\n\n            public void actionPerformed(ActionEvent e)\n            {\n                setText(\"\");\n            }\n        });\n\n        getDocument().addDocumentListener(new DocumentListener()\n        {\n            public void insertUpdate(DocumentEvent e)\n            {\n                RowFilter<TableModel, Object> rf = null;\n                try\n                {\n                    rf = RowFilter.regexFilter(getText(), 0);\n                }\n                catch (java.util.regex.PatternSyntaxException exception)\n                {\n                    logger.info(\"Failed to compile regex.\", exception);\n                    return;\n                }\n                sorter.setRowFilter(rf);\n            }\n\n            public void removeUpdate(DocumentEvent e)\n            {\n                RowFilter<TableModel, Object> rf = null;\n                try\n                {\n                    rf = RowFilter.regexFilter(getText(), 0);\n                }\n                catch (java.util.regex.PatternSyntaxException exception)\n                {\n                    logger.info(\"Failed to compile regex.\", exception);\n                    return;\n                }\n                sorter.setRowFilter(rf);\n            }\n\n            public void changedUpdate(DocumentEvent e)\n            {\n            }\n        });\n\n        loadSkin();\n    }","id":8277,"modified_method":"/**\n     * Creates an instance <tt>SearchField<\/tt>.\n     * \n     * @param text the text we would like to enter by default\n     * @param sorter the sorter which will be used for filtering.\n     */\n    public SearchField(String text, JTable table)\n    {\n        super(text);\n\n        this.table = table;\n\n        ComponentUI ui = getUI();\n\n        if (ui instanceof SearchFieldUI)\n        {\n            SearchFieldUI searchFieldUI = (SearchFieldUI) ui;\n\n            searchFieldUI.setCallButtonEnabled(false);\n            searchFieldUI.setDeleteButtonEnabled(true);\n        }\n\n        setBorder(null);\n        setDragEnabled(true);\n        setOpaque(false);\n        setPreferredSize(new Dimension(100, 25));\n\n        InputMap imap\n            = getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);\n\n        imap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), \"escape\");\n\n        ActionMap amap = getActionMap();\n        @SuppressWarnings(\"serial\")\n        AbstractAction escapeAction\n            = new AbstractAction()\n            {\n                public void actionPerformed(ActionEvent e)\n                {\n                    setText(\"\");\n                }\n            };\n\n        amap.put(\"escape\", escapeAction);\n\n        getDocument().addDocumentListener(\n                new DocumentListener()\n                {\n                    public void changedUpdate(DocumentEvent e) {}\n\n                    public void insertUpdate(DocumentEvent e)\n                    {\n                        filter(getText());\n                    }\n\n                    public void removeUpdate(DocumentEvent e)\n                    {\n                        filter(getText());\n                    }\n                });\n\n        loadSkin();\n    }","commit_id":"2f3339dacf8bd16af1ea642a125d632319d0a454","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns a reference to an UIService implementation currently registered\n     * in the bundle context or null if no such implementation was found.\n     *\n     * @return a reference to an UIService implementation currently registered\n     * in the bundle context or null if no such implementation was found.\n     */\n    public static UIService getUIService()\n    {\n        if(uiService == null)\n        {\n            ServiceReference versionServiceReference\n                = bundleContext.getServiceReference(\n                    UIService.class.getName());\n            uiService = (UIService)bundleContext\n                .getService(versionServiceReference);\n        }\n        return uiService;\n    }","id":8278,"modified_method":"/**\n     * Returns a reference to an UIService implementation currently registered\n     * in the bundle context or null if no such implementation was found.\n     *\n     * @return a reference to an UIService implementation currently registered\n     * in the bundle context or null if no such implementation was found.\n     */\n    public static UIService getUIService()\n    {\n        if(uiService == null)\n            uiService = ServiceUtils.getService(bundleContext, UIService.class);\n        return uiService;\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Starts the arg delegation bundle and registers the delegationPeer with\n     * the util package URI manager.\n     *\n     * @param bc a reference to the currently active bundle context.\n     */\n    public void start(BundleContext bc) throws Exception\n    {\n        bundleContext = bc;\n        delegationPeer = new ArgDelegationPeerImpl(bc);\n        bc.addServiceListener(delegationPeer);\n\n        //register our instance of delegation peer.\n        LaunchArgHandler.getInstance().setDelegationPeer(delegationPeer);\n\n    }","id":8279,"modified_method":"/**\n     * Starts the arg delegation bundle and registers the delegationPeer with\n     * the util package URI manager.\n     *\n     * @param bc a reference to the currently active bundle context.\n     * @throws Exception if starting the arg delegation bundle and registering\n     * the delegationPeer with the util package URI manager fails\n     */\n    public void start(BundleContext bc) throws Exception\n    {\n        bundleContext = bc;\n        delegationPeer = new ArgDelegationPeerImpl(bc);\n        bc.addServiceListener(delegationPeer);\n\n        //register our instance of delegation peer.\n        LaunchArgHandler.getInstance().setDelegationPeer(delegationPeer);\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Unsets the delegation peer instance that we set when we start this\n     * bundle.\n     *\n     * @param bc an instance of the currently valid bundle context.\n     */\n    public void stop(BundleContext bc) throws Exception\n    {\n        uiService = null;\n        bc.removeServiceListener(delegationPeer);\n        delegationPeer = null;\n        LaunchArgHandler.getInstance().setDelegationPeer(null);\n    }","id":8280,"modified_method":"/**\n     * Unsets the delegation peer instance that we set when we start this\n     * bundle.\n     *\n     * @param bc an instance of the currently valid bundle context.\n     * @throws Exception if unsetting the delegation peer instance that we set\n     * when we start this bundle fails\n     */\n    public void stop(BundleContext bc) throws Exception\n    {\n        uiService = null;\n        bc.removeServiceListener(delegationPeer);\n        delegationPeer = null;\n        LaunchArgHandler.getInstance().setDelegationPeer(null);\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns all <tt>ProtocolProviderFactory<\/tt>s obtained from the bundle\n     * context.\n     * \n     * @return all <tt>ProtocolProviderFactory<\/tt>s obtained from the bundle\n     *         context\n     */\n    public static Map<Object, ProtocolProviderFactory>\n        getProtocolProviderFactories()\n    {\n        ServiceReference[] serRefs = null;\n        try\n        {\n            // get all registered provider factories\n            serRefs =\n                bundleContext.getServiceReferences(\n                    ProtocolProviderFactory.class.getName(), null);\n\n        }\n        catch (InvalidSyntaxException e)\n        {\n            logger.error(\"LoginManager : \" + e);\n        }\n\n        if (serRefs != null) \n        {\n            for (int i = 0; i < serRefs.length; i++) \n            {\n\n                ProtocolProviderFactory providerFactory\n                    = (ProtocolProviderFactory) bundleContext\n                        .getService(serRefs[i]);\n\n                providerFactoriesMap.put(serRefs[i]\n                        .getProperty(ProtocolProviderFactory.PROTOCOL),\n                        providerFactory);\n            }\n        }\n        return providerFactoriesMap;\n    }","id":8281,"modified_method":"/**\n     * Returns all <tt>ProtocolProviderFactory<\/tt>s obtained from the bundle\n     * context.\n     * \n     * @return all <tt>ProtocolProviderFactory<\/tt>s obtained from the bundle\n     *         context\n     */\n    public static Map<Object, ProtocolProviderFactory>\n        getProtocolProviderFactories()\n    {\n        ServiceReference[] serRefs = null;\n        try\n        {\n            // get all registered provider factories\n            serRefs =\n                bundleContext.getServiceReferences(\n                    ProtocolProviderFactory.class.getName(), null);\n\n        }\n        catch (InvalidSyntaxException e)\n        {\n            logger.error(\"LoginManager : \" + e);\n        }\n\n        if (serRefs != null) \n        {\n            for (ServiceReference serRef : serRefs) \n            {\n                ProtocolProviderFactory providerFactory\n                    = (ProtocolProviderFactory)\n                        bundleContext.getService(serRef);\n\n                providerFactoriesMap.put(\n                        serRef.getProperty(ProtocolProviderFactory.PROTOCOL),\n                        providerFactory);\n            }\n        }\n        return providerFactoriesMap;\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns the <tt>ResourceManagementService<\/tt>, through which we will\n     * access all resources.\n     *\n     * @return the <tt>ResourceManagementService<\/tt>, through which we will\n     * access all resources.\n     */\n    public static ResourceManagementService getResources()\n    {\n        if (resourcesService == null)\n        {\n            ServiceReference serviceReference = bundleContext\n                .getServiceReference(ResourceManagementService.class.getName());\n\n            if(serviceReference == null)\n                return null;\n\n            resourcesService = (ResourceManagementService) bundleContext\n                .getService(serviceReference);\n        }\n        return resourcesService;\n    }","id":8282,"modified_method":"/**\n     * Returns the <tt>ResourceManagementService<\/tt>, through which we will\n     * access all resources.\n     *\n     * @return the <tt>ResourceManagementService<\/tt>, through which we will\n     * access all resources.\n     */\n    public static ResourceManagementService getResources()\n    {\n        if (resourcesService == null)\n        {\n            resourcesService\n                = ServiceUtils.getService(\n                        bundleContext,\n                        ResourceManagementService.class);\n        }\n        return resourcesService;\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Report a bound property update to any registered listeners.\n     * No event is fired if old and new are equal and non-null.\n     *\n     * @param propertyName  The programmatic name of the property\n     *                      that was changed.\n     * @param oldValue  The old value of the property.\n     * @param newValue  The new value of the property.\n     */\n    public void firePropertyChange(String propertyName,\n                                   Object oldValue, Object newValue)\n    {\n        if (oldValue != null && newValue != null && oldValue.equals(newValue))\n        {\n            return;\n        }\n        firePropertyChange(new PropertyChangeEvent(source, propertyName,\n            oldValue, newValue));\n    }","id":8283,"modified_method":"/**\n     * Report a bound property update to any registered listeners.\n     * No event is fired if old and new are equal and non-null.\n     *\n     * @param propertyName  The programmatic name of the property\n     *                      that was changed.\n     * @param oldValue  The old value of the property.\n     * @param newValue  The new value of the property.\n     */\n    public void firePropertyChange(String propertyName,\n                                   Object oldValue, Object newValue)\n    {\n        if (oldValue == null || newValue == null || !oldValue.equals(newValue))\n        {\n            firePropertyChange(\n                new PropertyChangeEvent(\n                        source,\n                        propertyName,\n                        oldValue, newValue));\n        }\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Fire a vetoable property update to any registered listeners.  If\n     * anyone vetos the change, then the excption will be rethrown by this\n     * method.\n     * <p>\n     * No event is fired if old and new are equal and non-null.\n     *\n     * @param evt  The PropertyChangeEvent to be fired.\n     * @exception PropertyVetoException if at least one of the recipients has\n     * vetoed the change.\n     */\n    public void fireVetoableChange(PropertyChangeEvent evt) \n        // throws PropertyVetoException\n    {\n\n        Object oldValue = evt.getOldValue();\n        Object newValue = evt.getNewValue();\n        String propertyName = evt.getPropertyName();\n        if (oldValue != null && newValue != null && oldValue.equals(newValue))\n        {\n            return;\n        }\n\n        ConfigVetoableChangeListener[] targets = null;\n        ChangeEventDispatcher child = null;\n        synchronized (this)\n        {\n            if (vetoableChangeListeners != null)\n            {\n                targets =\n                    vetoableChangeListeners\n                        .toArray(new ConfigVetoableChangeListener[vetoableChangeListeners\n                            .size()]);\n            }\n            if (vetoableChangeChildren != null && propertyName != null)\n            {\n                child = vetoableChangeChildren.get(propertyName);\n            }\n        }\n\n        if (vetoableChangeListeners != null && targets != null)\n        {\n            for (int i = 0; i < targets.length; i++)\n            {\n                ConfigVetoableChangeListener target = targets[i];\n                target.vetoableChange(evt);\n            }\n        }\n\n        if (child != null)\n        {\n            child.fireVetoableChange(evt);\n        }\n    }","id":8284,"modified_method":"/**\n     * Fire a vetoable property update to any registered listeners.  If anyone\n     * vetos the change, then the exception will be rethrown by this method.\n     * <p>\n     * No event is fired if old and new are equal and non-null.\n     *\n     * @param evt  The PropertyChangeEvent to be fired.\n     * @exception PropertyVetoException if at least one of the recipients has\n     * vetoed the change.\n     */\n    public void fireVetoableChange(PropertyChangeEvent evt) \n        // throws PropertyVetoException\n    {\n        Object oldValue = evt.getOldValue();\n        Object newValue = evt.getNewValue();\n        String propertyName = evt.getPropertyName();\n        if (oldValue != null && newValue != null && oldValue.equals(newValue))\n            return;\n\n        ConfigVetoableChangeListener[] targets = null;\n        ChangeEventDispatcher child = null;\n        synchronized (this)\n        {\n            if (vetoableChangeListeners != null)\n            {\n                targets\n                    = vetoableChangeListeners.toArray(\n                            new ConfigVetoableChangeListener[\n                                    vetoableChangeListeners.size()]);\n            }\n            if (vetoableChangeChildren != null && propertyName != null)\n                child = vetoableChangeChildren.get(propertyName);\n        }\n\n        if (vetoableChangeListeners != null && targets != null)\n        {\n            for (ConfigVetoableChangeListener target : targets)\n                target.vetoableChange(evt);\n        }\n\n        if (child != null)\n            child.fireVetoableChange(evt);\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Remove a VetoableChangeListener for a specific property.\n     *\n     * @param propertyName  The name of the property that was listened on.\n     * @param listener  The VetoableChangeListener to be removed\n     */\n    public synchronized void removeVetoableChangeListener(\n        String propertyName,\n        ConfigVetoableChangeListener listener)\n    {\n        if (vetoableChangeChildren == null)\n        {\n            return;\n        }\n        ChangeEventDispatcher child = vetoableChangeChildren.get( propertyName );\n\n        if (child == null)\n        {\n            return;\n        }\n        child.removeVetoableChangeListener(listener);\n    }","id":8285,"modified_method":"/**\n     * Remove a VetoableChangeListener for a specific property.\n     *\n     * @param propertyName  The name of the property that was listened on.\n     * @param listener  The VetoableChangeListener to be removed\n     */\n    public synchronized void removeVetoableChangeListener(\n        String propertyName,\n        ConfigVetoableChangeListener listener)\n    {\n        if (vetoableChangeChildren != null)\n        {\n            ChangeEventDispatcher child\n                = vetoableChangeChildren.get( propertyName );\n\n            if (child != null)\n                child.removeVetoableChangeListener(listener);\n        }\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Report a vetoable property update to any registered listeners.  If\n     * no one vetos the change, then fire a new ConfigurationChangeEvent\n     * indicating that the change has been accepted. In the case of a\n     * PropertyVetoException, end eventdispatch and rethrow the eception\n     * <p>\n     * No event is fired if old and new are equal and non-null.\n     *\n     * @param propertyName  The programmatic name of the property\n     *                      that is about to change..\n     * @param oldValue  The old value of the property.\n     * @param newValue  The new value of the property.\n     * @exception PropertyVetoException if the recipient wishes the property\n     *              change to be rolled back.\n     */\n    public void fireVetoableChange(String propertyName,\n                                   Object oldValue, Object newValue) \n        //throws PropertyVetoException\n    {\n        if (vetoableChangeListeners == null && vetoableChangeChildren == null)\n        {\n            return;\n        }\n\n        PropertyChangeEvent evt = new PropertyChangeEvent(source,\n            propertyName, oldValue, newValue);\n            fireVetoableChange(evt);\n    }","id":8286,"modified_method":"/**\n     * Report a vetoable property update to any registered listeners.  If\n     * no one vetos the change, then fire a new ConfigurationChangeEvent\n     * indicating that the change has been accepted. In the case of a\n     * PropertyVetoException, end eventdispatch and rethrow the exception\n     * <p>\n     * No event is fired if old and new are equal and non-null.\n     *\n     * @param propertyName  The programmatic name of the property\n     *                      that is about to change..\n     * @param oldValue  The old value of the property.\n     * @param newValue  The new value of the property.\n     * @exception PropertyVetoException if the recipient wishes the property\n     *              change to be rolled back.\n     */\n    public void fireVetoableChange(String propertyName,\n                                   Object oldValue, Object newValue) \n        //throws PropertyVetoException\n    {\n        if (vetoableChangeListeners != null || vetoableChangeChildren != null)\n        {\n            fireVetoableChange(\n                new PropertyChangeEvent(\n                        source,\n                        propertyName,\n                        oldValue, newValue));\n        }\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Constructs a <tt>VetoableChangeSupport<\/tt> object.\n     *\n     * @param sourceObject  The object to be given as the source for any events.\n     */\n    public ChangeEventDispatcher(Object sourceObject)\n    {\n        if (sourceObject == null)\n        {\n            throw new NullPointerException();\n        }\n        source = sourceObject;\n    }","id":8287,"modified_method":"/**\n     * Constructs a <tt>VetoableChangeSupport<\/tt> object.\n     *\n     * @param sourceObject  The object to be given as the source for any events.\n     */\n    public ChangeEventDispatcher(Object sourceObject)\n    {\n        if (sourceObject == null)\n            throw new NullPointerException(\"sourceObject\");\n\n        source = sourceObject;\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Remove a PropertyChangeListener for a specific property.\n     *\n     * @param propertyName  The name of the property that was listened on.\n     * @param listener  The VetoableChangeListener to be removed\n     */\n    public synchronized void removePropertyChangeListener(\n        String propertyName,\n        PropertyChangeListener listener)\n    {\n        if (propertyChangeChildren == null)\n        {\n            return;\n        }\n        ChangeEventDispatcher child = propertyChangeChildren.get(propertyName);\n\n        if (child == null)\n        {\n            return;\n        }\n        child.removePropertyChangeListener(listener);\n    }","id":8288,"modified_method":"/**\n     * Remove a PropertyChangeListener for a specific property.\n     *\n     * @param propertyName  The name of the property that was listened on.\n     * @param listener  The VetoableChangeListener to be removed\n     */\n    public synchronized void removePropertyChangeListener(\n        String propertyName,\n        PropertyChangeListener listener)\n    {\n        if (propertyChangeChildren != null)\n        {\n            ChangeEventDispatcher child\n                = propertyChangeChildren.get(propertyName);\n\n            if (child != null)\n                child.removePropertyChangeListener(listener);\n        }\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"public String[] getPropertyNames()\r\n    {\r\n        synchronized (properties)\r\n        {\r\n            Set<Object> propertyNames = properties.keySet();\r\n            return propertyNames.toArray(new String[propertyNames.size()]);\r\n        }\r\n    }","id":8289,"modified_method":"/**\r\n     * Implements {@link ConfigurationStore#getPropertyNames()}. Gets the names\r\n     * of the properties which have values associated in this\r\n     * <tt>ConfigurationStore<\/tt>.\r\n     *\r\n     * @return an array of <tt>String<\/tt>s which specify the names of the\r\n     * properties that have values associated in this\r\n     * <tt>ConfigurationStore<\/tt>; an empty array if this instance contains no\r\n     * property values\r\n     * @see ConfigurationStore#getPropertyNames()\r\n     */\r\n    public String[] getPropertyNames()\r\n    {\r\n        synchronized (properties)\r\n        {\r\n            Set<Object> propertyNames = properties.keySet();\r\n            return propertyNames.toArray(new String[propertyNames.size()]);\r\n        }\r\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void setNonSystemProperty(String name, Object value)\r\n    {\r\n        properties.setProperty(name, value.toString());\r\n    }","id":8290,"modified_method":"/**\r\n     * Implements\r\n     * {@link ConfigurationStore#setNonSystemProperty(String, Object)}. As the\r\n     * backend of this instance is a <tt>Properties<\/tt> instance, it can only\r\n     * store <tt>String<\/tt> values and the specified value to be associated\r\n     * with the specified property name is converted to a <tt>String<\/tt>.\r\n     *\r\n     * @param name the name of the non-system property to be set to the\r\n     * specified value in this <tt>ConfigurationStore<\/tt>\r\n     * @param value the value to be assigned to the non-system property with the\r\n     * specified name in this <tt>ConfigurationStore<\/tt>\r\n     * @see ConfigurationStore#setNonSystemProperty(String, Object)\r\n     */\r\n    public void setNonSystemProperty(String name, Object value)\r\n    {\r\n        properties.setProperty(name, value.toString());\r\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void storeConfiguration(OutputStream out)\r\n        throws IOException\r\n    {\r\n        properties.store(out, null);\r\n    }","id":8291,"modified_method":"/**\r\n     * Implements {@link ConfigurationStore#storeConfiguration(OutputStream)}.\r\n     * Stores/serializes the property name-value associations currently present\r\n     * in this <tt>ConfigurationStore<\/tt> into a specific <tt>OutputStream<\/tt>\r\n     * in the format represented by this instance.\r\n     *\r\n     * @param out the <tt>OutputStream<\/tt> to receive the serialized form of\r\n     * the property name-value associations currently present in this\r\n     * <tt>ConfigurationStore<\/tt>\r\n     * @throws IOException if there is an output error while storing the\r\n     * properties managed by this <tt>ConfigurationStore<\/tt> into the specified\r\n     * <tt>file<\/tt>\r\n     * @see ConfigurationStore#storeConfiguration(OutputStream)\r\n     */\r\n    public void storeConfiguration(OutputStream out)\r\n        throws IOException\r\n    {\r\n        properties.store(out, null);\r\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void removeProperty(String name)\r\n    {\r\n        properties.remove(name);\r\n    }","id":8292,"modified_method":"/**\r\n     * Implements {@link ConfigurationStore#removeProperty(String)}. Removes the\r\n     * value association in this <tt>ConfigurationStore<\/tt> of the property\r\n     * with a specific name. If the property with the specified name is not\r\n     * associated with a value in this <tt>ConfigurationStore<\/tt>, does\r\n     * nothing.\r\n     *\r\n     * @param name the name of the property which is to have its value\r\n     * association in this <tt>ConfigurationStore<\/tt> removed\r\n     * @see ConfigurationStore#removeProperty(String)\r\n     */\r\n    public void removeProperty(String name)\r\n    {\r\n        properties.remove(name);\r\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void setSystemProperty(String name)\r\n    {\r\n        removeProperty(name);\r\n    }","id":8293,"modified_method":"/**\r\n     * Implements {@link ConfigurationStore#setSystemProperty(String)}. Since\r\n     * system properties are managed through the <tt>System<\/tt> class, setting\r\n     * a property as system in this <tt>ConfigurationStore<\/tt> effectively\r\n     * removes any existing value associated with the specified property name\r\n     * from this instance.\r\n     *\r\n     * @param name the name of the property to be set as a system property in\r\n     * this <tt>ConfigurationStore<\/tt>\r\n     * @see ConfigurationStore#setSystemProperty(String)\r\n     */\r\n    public void setSystemProperty(String name)\r\n    {\r\n        removeProperty(name);\r\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"public boolean isSystemProperty(String name)\r\n    {\r\n        return (System.getProperty(name) != null);\r\n    }","id":8294,"modified_method":"/**\r\n     * Implements {@link ConfigurationStore#isSystemProperty(String)}. Considers\r\n     * a property to be system if the system properties contain a value\r\n     * associated with its name.\r\n     *\r\n     * @param name the name of a property which is to be determined whether it\r\n     * is a system property\r\n     * @return <tt>true<\/tt> if the specified name stands for a system property;\r\n     * <tt>false<\/tt>, otherwise\r\n     * @see ConfigurationStore#isSystemProperty(String)\r\n     */\r\n    public boolean isSystemProperty(String name)\r\n    {\r\n        return (System.getProperty(name) != null);\r\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"public Object getProperty(String name)\r\n    {\r\n        Object value = properties.get(name);\r\n\r\n        return (value != null) ? value : System.getProperty(name);\r\n    }","id":8295,"modified_method":"/**\r\n     * Implements {@link ConfigurationStore#getProperty(String)}. If this\r\n     * <tt>ConfigurationStore<\/tt> contains a value associated with the\r\n     * specified property name, returns it. Otherwise, searches for a system\r\n     * property with the specified name and returns its value.\r\n     *\r\n     * @param name the name of the property to get the value of\r\n     * @return the value in this <tt>ConfigurationStore<\/tt> of the property\r\n     * with the specified name; <tt>null<\/tt> if the property with the specified\r\n     * name does not have an association with a value in this\r\n     * <tt>ConfigurationStore<\/tt>\r\n     * @see ConfigurationStore#getProperty(String)\r\n     */\r\n    public Object getProperty(String name)\r\n    {\r\n        Object value = properties.get(name);\r\n\r\n        return (value != null) ? value : System.getProperty(name);\r\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void reloadConfiguration(File file)\r\n        throws IOException\r\n    {\r\n        properties.clear();\r\n\r\n        InputStream in = new BufferedInputStream(new FileInputStream(file));\r\n        try\r\n        {\r\n            properties.load(in);\r\n        }\r\n        finally\r\n        {\r\n            in.close();\r\n        }\r\n    }","id":8296,"modified_method":"/**\r\n     * Implements {@link ConfigurationStore#reloadConfiguration(File)}. Removes\r\n     * all property name-value associations currently present in this\r\n     * <tt>ConfigurationStore<\/tt> and deserializes new property name-value\r\n     * associations from a specific <tt>File<\/tt> which presumably is in the\r\n     * format represented by this instance.\r\n     *\r\n     * @param file the <tt>File<\/tt> to be read and to deserialize new property\r\n     * name-value associations from into this instance\r\n     * @throws IOException if there is an input error while reading from the\r\n     * specified <tt>file<\/tt>\r\n     * @see ConfigurationStore#reloadConfiguration(File)\r\n     */\r\n    public void reloadConfiguration(File file)\r\n        throws IOException\r\n    {\r\n        properties.clear();\r\n\r\n        InputStream in = new BufferedInputStream(new FileInputStream(file));\r\n        try\r\n        {\r\n            properties.load(in);\r\n        }\r\n        finally\r\n        {\r\n            in.close();\r\n        }\r\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"public String[] getPropertyNames()\r\n    {\r\n        Set<String> propertyNames = properties.keySet();\r\n        return propertyNames.toArray(new String[propertyNames.size()]);\r\n    }","id":8297,"modified_method":"/**\r\n     * Implements {ConfigurationStore#getPropertyNames()}. Gets the names of the\r\n     * properties which have values associated in this\r\n     * <tt>ConfigurationStore<\/tt>.\r\n     *\r\n     * @return an array of <tt>String<\/tt>s which specify the names of the\r\n     * properties that have values associated in this\r\n     * <tt>ConfigurationStore<\/tt>; an empty array if this instance contains no\r\n     * property values\r\n     * @see ConfigurationStore#getPropertyNames()\r\n     */\r\n    public String[] getPropertyNames()\r\n    {\r\n        Set<String> propertyNames = properties.keySet();\r\n        return propertyNames.toArray(new String[propertyNames.size()]);\r\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void storeConfiguration(OutputStream out)\r\n    {\r\n        // resolve the properties that were initially in the file - back to\r\n        // the document.\r\n        if (propertiesDocument == null)\r\n            propertiesDocument = createPropertiesDocument();\r\n\r\n        Node root = propertiesDocument.getFirstChild();\r\n        NodeList children = root.getChildNodes();\r\n\r\n        for (int i = 0; i < children.getLength(); i++)\r\n        {\r\n            Node currentNode = children.item(i);\r\n\r\n            if (currentNode.getNodeType() == Node.ELEMENT_NODE)\r\n            {\r\n                String propertyName\r\n                    = DOMElementWriter.decodeName(currentNode.getNodeName());\r\n\r\n                updateNode(currentNode, propertyName, properties);\r\n            }\r\n        }\r\n\r\n        // create in the document the properties that were added by other\r\n        // bundles after the initial property load.\r\n        Map<String, Object> newlyAddedProperties = cloneProperties();\r\n\r\n        // remove those that were originally there;\r\n        for (String propName : fileExtractedProperties.keySet())\r\n            newlyAddedProperties.remove(propName);\r\n\r\n        this.processNewProperties(propertiesDocument, newlyAddedProperties);\r\n\r\n        XMLUtils.indentedWriteXML(propertiesDocument, out);\r\n    }","id":8298,"modified_method":"/**\r\n     * Implements {@link ConfigurationStore#storeConfiguration(OutputStream)}.\r\n     * Stores/serializes the property name-value associations currently present\r\n     * in this <tt>ConfigurationStore<\/tt> into a specific <tt>OutputStream<\/tt>\r\n     * in the format represented by this instance.\r\n     *\r\n     * @param out the <tt>OutputStream<\/tt> to receive the serialized form of\r\n     * the property name-value associations currently present in this\r\n     * <tt>ConfigurationStore<\/tt>\r\n     * @see ConfigurationStore#storeConfiguration(OutputStream)\r\n     */\r\n    public void storeConfiguration(OutputStream out)\r\n    {\r\n        // resolve the properties that were initially in the file - back to\r\n        // the document.\r\n        if (propertiesDocument == null)\r\n            propertiesDocument = createPropertiesDocument();\r\n\r\n        Node root = propertiesDocument.getFirstChild();\r\n        NodeList children = root.getChildNodes();\r\n\r\n        for (int i = 0; i < children.getLength(); i++)\r\n        {\r\n            Node currentNode = children.item(i);\r\n\r\n            if (currentNode.getNodeType() == Node.ELEMENT_NODE)\r\n            {\r\n                String propertyName\r\n                    = DOMElementWriter.decodeName(currentNode.getNodeName());\r\n\r\n                updateNode(currentNode, propertyName, properties);\r\n            }\r\n        }\r\n\r\n        // create in the document the properties that were added by other\r\n        // bundles after the initial property load.\r\n        Map<String, Object> newlyAddedProperties = cloneProperties();\r\n\r\n        // remove those that were originally there;\r\n        for (String propName : fileExtractedProperties.keySet())\r\n            newlyAddedProperties.remove(propName);\r\n\r\n        this.processNewProperties(propertiesDocument, newlyAddedProperties);\r\n\r\n        XMLUtils.indentedWriteXML(propertiesDocument, out);\r\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"public Object getProperty(String propertyName)\r\n    {\r\n        Object value = properties.get(propertyName);\r\n\r\n        // if this is a property reference make sure we return the referenced\r\n        // value and not the reference itself\r\n        if (value instanceof PropertyReference)\r\n            return ((PropertyReference) value).getValue();\r\n        else\r\n            return value;\r\n    }","id":8299,"modified_method":"/**\r\n     * Implements {@link ConfigurationStore#getProperty(String)}. Gets the value\r\n     * in this <code>ConfigurationStore<\/code> of a property with a specific\r\n     * name.\r\n     *\r\n     * @param propertyName the name of the property to get the value of\r\n     * @return the value in this <tt>ConfigurationStore<\/tt> of the property\r\n     * with the specified name; <tt>null<\/tt> if the property with the specified\r\n     * name does not have an association with a value in this\r\n     * <tt>ConfigurationStore<\/tt>\r\n     * @see ConfigurationStore#getProperty(String)\r\n     */\r\n    public Object getProperty(String propertyName)\r\n    {\r\n        Object value = properties.get(propertyName);\r\n\r\n        // if this is a property reference make sure we return the referenced\r\n        // value and not the reference itself\r\n        if (value instanceof PropertyReference)\r\n            return ((PropertyReference) value).getValue();\r\n        else\r\n            return value;\r\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void reloadConfiguration(File file)\r\n        throws IOException,\r\n               XMLException\r\n    {\r\n        properties = new Hashtable<String, Object>();\r\n\r\n        fileExtractedProperties = loadConfiguration(file);\r\n        properties.putAll(fileExtractedProperties);\r\n    }","id":8300,"modified_method":"/**\r\n     * Implements {@link ConfigurationStore#reloadConfiguration(File)}. Removes\r\n     * all property name-value associations currently present in this\r\n     * <tt>ConfigurationStore<\/tt> and deserializes new property name-value\r\n     * associations from a specific <tt>File<\/tt> which presumably is in the\r\n     * format represented by this instance.\r\n     *\r\n     * @param file the <tt>File<\/tt> to be read and to deserialize new property\r\n     * name-value associations from into this instance\r\n     * @throws IOException if there is an input error while reading from the\r\n     * specified <tt>file<\/tt>\r\n     * @throws XMLException if parsing the contents of the specified\r\n     * <tt>file<\/tt> fails\r\n     * @see ConfigurationStore#reloadConfiguration(File)\r\n     */\r\n    public void reloadConfiguration(File file)\r\n        throws IOException,\r\n               XMLException\r\n    {\r\n        properties = new Hashtable<String, Object>();\r\n\r\n        fileExtractedProperties = loadConfiguration(file);\r\n        properties.putAll(fileExtractedProperties);\r\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"public boolean isSystemProperty(String propertyName)\r\n    {\r\n        return properties.get(propertyName) instanceof PropertyReference;\r\n    }","id":8301,"modified_method":"/**\r\n     * Implements {ConfigurationStore#isSystemProperty(String)}. Determines\r\n     * whether a specific name stands for a system property.\r\n     *\r\n     * @param propertyName the name of a property which is to be determined\r\n     * whether it is a system property\r\n     * @return <tt>true<\/tt> if the specified name stands for a system property;\r\n     * <tt>false<\/tt>, otherwise\r\n     * @see ConfigurationStore#isSystemProperty(String)\r\n     */\r\n    public boolean isSystemProperty(String propertyName)\r\n    {\r\n        return properties.get(propertyName) instanceof PropertyReference;\r\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void setNonSystemProperty(String propertyName, Object property)\r\n    {\r\n        properties.put(propertyName, property);\r\n    }","id":8302,"modified_method":"/**\r\n     * Implements\r\n     * {@link ConfigurationStore#setNonSystemProperty(String, Object)}. Sets the\r\n     * value of a non-system property with a specific name to a specific value\r\n     * in this <tt>ConfigurationStore<\/tt>.\r\n     *\r\n     * @param propertyName the name of the non-system property to be set to the\r\n     * specified value in this <tt>ConfigurationStore<\/tt>\r\n     * @param property the value to be assigned to the non-system property with the\r\n     * specified name in this <tt>ConfigurationStore<\/tt>\r\n     * @see ConfigurationStore#setNonSystemProperty(String, Object)\r\n     */\r\n    public void setNonSystemProperty(String propertyName, Object property)\r\n    {\r\n        properties.put(propertyName, property);\r\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"private Document createPropertiesDocument()\r\n    {\r\n        if (propertiesDocument == null)\r\n        {\r\n            DocumentBuilderFactory factory =\r\n                DocumentBuilderFactory.newInstance();\r\n            DocumentBuilder builder = null;\r\n            try\r\n            {\r\n                builder = factory.newDocumentBuilder();\r\n            }\r\n            catch (ParserConfigurationException ex)\r\n            {\r\n                logger.error(\"Failed to create a DocumentBuilder\", ex);\r\n                return null;\r\n            }\r\n            propertiesDocument = builder.newDocument();\r\n            propertiesDocument.appendChild(propertiesDocument\r\n                .createElement(\"sip-communicator\"));\r\n        }\r\n        return propertiesDocument;\r\n    }","id":8303,"modified_method":"/**\r\n     * Creates a new runtime XML document which is to contain the properties\r\n     * managed by this <tt>ConfigurationStore<\/tt>.\r\n     *\r\n     * @return a new runtime XML <tt>Document<\/tt> which is to contain the\r\n     * properties managed by this <tt>ConfigurationStore<\/tt>\r\n     */\r\n    private Document createPropertiesDocument()\r\n    {\r\n        if (propertiesDocument == null)\r\n        {\r\n            DocumentBuilderFactory factory =\r\n                DocumentBuilderFactory.newInstance();\r\n            DocumentBuilder builder = null;\r\n            try\r\n            {\r\n                builder = factory.newDocumentBuilder();\r\n            }\r\n            catch (ParserConfigurationException ex)\r\n            {\r\n                logger.error(\"Failed to create a DocumentBuilder\", ex);\r\n                return null;\r\n            }\r\n            propertiesDocument = builder.newDocument();\r\n            propertiesDocument.appendChild(propertiesDocument\r\n                .createElement(\"sip-communicator\"));\r\n        }\r\n        return propertiesDocument;\r\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void removeProperty(String propertyName)\r\n    {\r\n        properties.remove(propertyName);\r\n\r\n        fileExtractedProperties.remove(propertyName);\r\n    }","id":8304,"modified_method":"/**\r\n     * Implements {@link ConfigurationStore#removeProperty(String)}. Removes the\r\n     * value association in this <tt>ConfigurationStore<\/tt> of the property\r\n     * with a specific name. If the property with the specified name is not\r\n     * associated with a value in this <tt>ConfigurationStore<\/tt>, does\r\n     * nothing.\r\n     *\r\n     * @param propertyName the name of the property which is to have its value\r\n     * association in this <tt>ConfigurationStore<\/tt> removed\r\n     * @see ConfigurationStore#removeProperty(String)\r\n     */\r\n    public void removeProperty(String propertyName)\r\n    {\r\n        properties.remove(propertyName);\r\n\r\n        fileExtractedProperties.remove(propertyName);\r\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void setSystemProperty(String propertyName)\r\n    {\r\n        setNonSystemProperty(propertyName, new PropertyReference(propertyName));\r\n    }","id":8305,"modified_method":"/**\r\n     * Implements {@link ConfigurationStore#setSystemProperty(String)}. Sets a\r\n     * property with a specific name to be considered a system property by the\r\n     * <tt>ConfigurationStore<\/tt>.\r\n     *\r\n     * @param propertyName the name of the property to be set as a system\r\n     * property in this <tt>ConfigurationStore<\/tt>\r\n     * @see ConfigurationStore#setSystemProperty(String)\r\n     */\r\n    public void setSystemProperty(String propertyName)\r\n    {\r\n        setNonSystemProperty(propertyName, new PropertyReference(propertyName));\r\n    }","commit_id":"b9f8d008543341da7c46d3cf6184e3a68092c405","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns the <tt>AudioService<\/tt> obtained from the bundle\n     * context.\n     * @return the <tt>AudioService<\/tt> obtained from the bundle\n     * context\n     */\n    public static AudioNotifierService getAudioNotifierService()\n    {\n        if(audioService == null)\n        {\n            ServiceReference audioReference \n                    = bundleContext.getServiceReference(\n                    AudioNotifierService.class.getName());\n\n            audioService = (AudioNotifierService) bundleContext.getService(\n                    audioReference);\n        }\n        return audioService;\n    }","id":8306,"modified_method":"/**\n     * Returns the <tt>AudioService<\/tt> obtained from the bundle\n     * context.\n     * @return the <tt>AudioService<\/tt> obtained from the bundle\n     * context\n     */\n    public static AudioNotifierService getAudioNotifierService()\n    {\n        if(audioService == null)\n        {\n            audioService\n                = ServiceUtils.getService(\n                        bundleContext,\n                        AudioNotifierService.class);\n        }\n        return audioService;\n    }","commit_id":"d4654c0bebe0874e776587360893315fbf4359c6","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Stops this bundles.\n     */\n    public void stop(BundleContext arg0) throws Exception\n    {   \n    }","id":8307,"modified_method":"/**\n     * Stops this bundle.\n     */\n    public void stop(BundleContext bc)\n        throws Exception\n    {   \n    }","commit_id":"d4654c0bebe0874e776587360893315fbf4359c6","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns the <tt>NotificationService<\/tt> obtained from the bundle\n     * context.\n     * <p>\n     * <b>Note<\/b>: No caching of the returned value is made available. Clients\n     * interested in bringing down the penalties imposed by acquiring the value\n     * in question should provide it by themselves.\n     * <\/p>\n     * \n     * @return the <tt>NotificationService<\/tt> obtained from the bundle context\n     */\n    public static NotificationService getNotificationService()\n    {\n        ServiceReference notificationReference =\n            bundleContext.getServiceReference(NotificationService.class\n                .getName());\n\n        return (NotificationService) bundleContext\n            .getService(notificationReference);\n    }","id":8308,"modified_method":"/**\n     * Returns the <tt>NotificationService<\/tt> obtained from the bundle\n     * context.\n     * <p>\n     * <b>Note<\/b>: No caching of the returned value is made available. Clients\n     * interested in bringing down the penalties imposed by acquiring the value\n     * in question should provide it by themselves.\n     * <\/p>\n     * \n     * @return the <tt>NotificationService<\/tt> obtained from the bundle context\n     */\n    public static NotificationService getNotificationService()\n    {\n        return\n            ServiceUtils.getService(bundleContext, NotificationService.class);\n    }","commit_id":"d4654c0bebe0874e776587360893315fbf4359c6","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns the rendering component.\n     * @param table the parent table\n     * @param value the value of the cell\n     * @param isSelected indicates if the cell is selected\n     * @param hasFocus indicates if the cell has the focus\n     * @param row the cell row\n     * @param column the cell column\n     * @return the rendering component\n     */\n    public Component getTableCellRendererComponent(\n            JTable table,\n            Object value,\n            boolean isSelected,\n            boolean hasFocus,\n            int row,\n            int column)\n    {\n        if (value instanceof NotificationEntry)\n        {\n            NotificationEntry entry = (NotificationEntry) value;\n            setIcon(null);\n            setText(entry.getEvent());\n            setHorizontalAlignment(SwingConstants.LEFT);\n\n            if (entry.getEnabled())\n            {\n                this.setForeground(Color.BLACK);\n            }\n            else\n            {\n                this.setForeground(Color.GRAY);\n            }\n        }\n        else if (value instanceof String)\n        {\n            String stringValue = (String) value;\n\n            if(stringValue.equals(NotificationsTable.ENABLED))\n            {\n                setText(null);\n                setIcon(NotificationsTable.getColumnIconValue(column));\n                setHorizontalAlignment(SwingConstants.CENTER);\n            }\n            else if (stringValue.equals(NotificationsTable.DISABLED))\n            {\n                setText(null);\n                setIcon(null);\n            }\n        }\n\n        if(isSelected)\n        {\n            this.setOpaque(true);\n            this.setBackground(new Color(209, 212, 225));\n        }\n        else\n        {\n            this.setBackground(Color.WHITE);\n        }\n        return this;\n    }","id":8309,"modified_method":"/**\n     * Returns the rendering component.\n     * @param table the parent table\n     * @param value the value of the cell\n     * @param isSelected indicates if the cell is selected\n     * @param hasFocus indicates if the cell has the focus\n     * @param row the cell row\n     * @param column the cell column\n     * @return the rendering component\n     */\n    public Component getTableCellRendererComponent(\n            JTable table,\n            Object value,\n            boolean isSelected,\n            boolean hasFocus,\n            int row,\n            int column)\n    {\n        if (value instanceof NotificationEntry)\n        {\n            NotificationEntry entry = (NotificationEntry) value;\n\n            setForeground(entry.getEnabled() ? Color.BLACK : Color.GRAY);\n            setHorizontalAlignment(SwingConstants.LEFT);\n            setIcon(null);\n            setText(\n                    StringUtils.convertCamelCaseToDisplayString(\n                            entry.getEvent()));\n        }\n        else if (value instanceof String)\n        {\n            String stringValue = (String) value;\n\n            if(stringValue.equals(NotificationsTable.ENABLED))\n            {\n                setHorizontalAlignment(SwingConstants.CENTER);\n                setIcon(NotificationsTable.getColumnIconValue(column));\n                setText(null);\n            }\n            else if (stringValue.equals(NotificationsTable.DISABLED))\n            {\n                setIcon(null);\n                setText(null);\n            }\n        }\n\n        if(isSelected)\n        {\n            setBackground(new Color(209, 212, 225));\n            setOpaque(true);\n        }\n        else\n        {\n            setBackground(Color.WHITE);\n        }\n        return this;\n    }","commit_id":"d4654c0bebe0874e776587360893315fbf4359c6","url":"https://github.com/jitsi/jitsi"},{"original_method":"Relationship(VGraphComponent parent, Widget from, Widget to, String type) {\r\n        this.from = from;\r\n        this.to = to;\r\n        addEdge(parent);\r\n        addArrowhead(parent);\r\n        addLabel(parent, type);\r\n    }","id":8310,"modified_method":"Relationship(VGraphComponent parent, Node node1, Node node2, String type) {\r\n        this.from = node1;\r\n        this.to = node2;\r\n        addEdge(parent);\r\n        addArrowhead(parent);\r\n        addLabel(parent, type);\r\n    }","commit_id":"853b14081b48ecea51bee887a3ce4ad747cf90c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void addLabel(VGraphComponent parent, String type) {\r\n        label = new HTML(\"<div style='text-align:center'>\" + type + \"<\/div>\");\r\n        parent.add(label);\r\n\r\n        Style style = label.getElement().getStyle();\r\n        style.setPosition(Position.ABSOLUTE);\r\n        style.setBackgroundColor(\"white\");\r\n        style.setFontSize(9, Unit.PX);\r\n        updateLabel();\r\n    }","id":8311,"modified_method":"private void addLabel(VGraphComponent parent, String type) {\r\n        label = new HTML(\"<div style='text-align:center'>\" + type + \"<\/div>\");\r\n        parent.add(label);\r\n\r\n        Style style = label.getElement().getStyle();\r\n        style.setPosition(Position.ABSOLUTE);\r\n        style.setBackgroundColor(\"white\");\r\n        style.setFontSize(10, Unit.PX);\r\n        updateLabel();\r\n    }","commit_id":"853b14081b48ecea51bee887a3ce4ad747cf90c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void addEdge(VGraphComponent parent) {\r\n        edge = new Line((int) Math.round(getCenterX(from)),\r\n                (int) Math.round(getCenterY(from)),\r\n                (int) Math.round(getCenterX(to)),\r\n                (int) Math.round(getCenterY(to)));\r\n        parent.add(edge);\r\n    }","id":8312,"modified_method":"private void addEdge(VGraphComponent parent) {\r\n        edge = new Line((int) Math.round(from.getCenterX()),\r\n                (int) Math.round(from.getCenterY()), (int) Math.round(to\r\n                        .getCenterX()), (int) Math.round(to.getCenterY()));\r\n        parent.add(edge);\r\n    }","commit_id":"853b14081b48ecea51bee887a3ce4ad747cf90c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void updateEdge() {\r\n        updateLine(edge, getCenterX(from), getCenterY(from), getCenterX(to),\r\n                getCenterY(to));\r\n    }","id":8313,"modified_method":"private void updateEdge() {\r\n        updateLine(edge, from.getCenterX(), from.getCenterY(), to.getCenterX(),\r\n                to.getCenterY());\r\n    }","commit_id":"853b14081b48ecea51bee887a3ce4ad747cf90c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Style updateLabel() {\r\n        Style style = label.getElement().getStyle();\r\n\r\n        double x = getLabelCenter(getCenterX(from), getCenterX(to))\r\n                - label.getOffsetWidth() / 2;\r\n        style.setLeft(x, Unit.PX);\r\n        double y = getLabelCenter(getCenterY(from), getCenterY(to))\r\n                - label.getOffsetHeight() / 2;\r\n        style.setTop(y, Unit.PX);\r\n        return style;\r\n    }","id":8314,"modified_method":"private Style updateLabel() {\r\n        Style style = label.getElement().getStyle();\r\n\r\n        double x = getLabelCenter(from.getCenterX(), to.getCenterX())\r\n                - label.getOffsetWidth() / 2;\r\n        style.setLeft(x, Unit.PX);\r\n        double y = getLabelCenter(from.getCenterY(), to.getCenterY())\r\n                - label.getOffsetHeight() / 2;\r\n        style.setTop(y, Unit.PX);\r\n        return style;\r\n    }","commit_id":"853b14081b48ecea51bee887a3ce4ad747cf90c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void updateArrowhead() {\r\n        double originX = getArrowheadOrigin(getCenterX(from), getCenterX(to));\r\n        double originY = getArrowheadOrigin(getCenterY(from), getCenterY(to));\r\n        double angle = Math.atan2(getCenterY(to) - getCenterY(from),\r\n                getCenterX(to) - getCenterX(from));\r\n\r\n        double leftX = originX\r\n                + rotateX(-ARROWHEAD_LENGTH, -ARROWHEAD_WIDTH, angle);\r\n        double leftY = originY\r\n                + rotateY(-ARROWHEAD_LENGTH, -ARROWHEAD_WIDTH, angle);\r\n        updateLine(arrowheadLeft, originX, originY, leftX, leftY);\r\n\r\n        double rightX = originX\r\n                + rotateX(-ARROWHEAD_LENGTH, ARROWHEAD_WIDTH, angle);\r\n        double rightY = originY\r\n                + rotateY(-ARROWHEAD_LENGTH, ARROWHEAD_WIDTH, angle);\r\n        updateLine(arrowheadRight, originX, originY, rightX, rightY);\r\n    }","id":8315,"modified_method":"private void updateArrowhead() {\r\n        double fromX = from.getCenterX();\r\n        double fromY = from.getCenterY();\r\n        double toX = to.getCenterX();\r\n        double toY = to.getCenterY();\r\n        double originX = getArrowheadOrigin(fromX, toX);\r\n        double originY = getArrowheadOrigin(fromY, toY);\r\n        double angle = Math.atan2(toY - fromY, toX - fromX);\r\n\r\n        double leftX = originX\r\n                + rotateX(-ARROWHEAD_LENGTH, -ARROWHEAD_WIDTH, angle);\r\n        double leftY = originY\r\n                + rotateY(-ARROWHEAD_LENGTH, -ARROWHEAD_WIDTH, angle);\r\n        updateLine(arrowheadLeft, originX, originY, leftX, leftY);\r\n\r\n        double rightX = originX\r\n                + rotateX(-ARROWHEAD_LENGTH, ARROWHEAD_WIDTH, angle);\r\n        double rightY = originY\r\n                + rotateY(-ARROWHEAD_LENGTH, ARROWHEAD_WIDTH, angle);\r\n        updateLine(arrowheadRight, originX, originY, rightX, rightY);\r\n    }","commit_id":"853b14081b48ecea51bee887a3ce4ad747cf90c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void setWidth(String width) {\n        Util.setWidthExcludingPaddingAndBorder(this, width, 0);\n        canvas.setWidth(getOffsetWidth());\n        constrainNodes();\n    }","id":8316,"modified_method":"public void setWidth(String width) {\n        Util.setWidthExcludingPaddingAndBorder(this, width, 0);\n        canvas.setWidth(getOffsetWidth());\n        updateNodes();\n    }","commit_id":"853b14081b48ecea51bee887a3ce4ad747cf90c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Called whenever an update is received from the server\n     */\n    public void updateFromUIDL(UIDL uidl, ApplicationConnection client) {\n        // This call should be made first.\n        // It handles sizes, captions, tooltips, etc. automatically.\n        if (client.updateComponent(this, uidl, true)) {\n            // If client.updateComponent returns true there has been no changes\n            // and we\n            // do not need to update anything.\n            return;\n        }\n\n        // Save reference to server connection object to be able to send\n        // user interaction later\n        this.client = client;\n\n        // Save the client side identifier (paintable id) for the widget\n        paintableId = uidl.getId();\n\n        Widget node1 = createRandomNode();\n        Widget node2 = createRandomNode();\n\n        createRelationship(node1, node2);\n        createRelationship(node2, node1);\n    }","id":8317,"modified_method":"/**\n     * Called whenever an update is received from the server\n     */\n    public void updateFromUIDL(UIDL uidl, ApplicationConnection client) {\n        // This call should be made first.\n        // It handles sizes, captions, tooltips, etc. automatically.\n        if (client.updateComponent(this, uidl, true)) {\n            // If client.updateComponent returns true there has been no changes\n            // and we\n            // do not need to update anything.\n            return;\n        }\n\n        // Save reference to server connection object to be able to send\n        // user interaction later\n        this.client = client;\n\n        // Save the client side identifier (paintable id) for the widget\n        paintableId = uidl.getId();\n\n        Node node1 = createRandomNode();\n        Node node2 = createRandomNode();\n\n        createRelationship(node1, node2);\n        createRelationship(node2, node1);\n    }","commit_id":"853b14081b48ecea51bee887a3ce4ad747cf90c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Widget createNode(double x, double y) {\n        HTML node = new HTML(\"<div style='text-align:center'>Node \"\n                + nodes.size() + \"<\/div>\");\n        Style style = node.getElement().getStyle();\n        style.setPosition(Position.ABSOLUTE);\n        style.setLeft(x, Unit.PX);\n        style.setTop(y, Unit.PX);\n        style.setWidth(NODE_SIZE, Unit.PX);\n        style.setHeight(NODE_SIZE, Unit.PX);\n        style.setBackgroundColor(\"lightblue\");\n        style.setFontSize(12, Unit.PX);\n        root.add(node);\n        nodes.add(node);\n        new NodeHandler(node, this);\n        return node;\n    }","id":8318,"modified_method":"private Node createNode(double x, double y) {\n        Node node = new Node(this, \"Node \" + nodes.size(), x, y);\n        nodes.add(node);\n        return node;\n    }","commit_id":"853b14081b48ecea51bee887a3ce4ad747cf90c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void setHeight(String height) {\n        Util.setHeightExcludingPaddingAndBorder(this, height, 0);\n        canvas.setHeight(getOffsetHeight());\n        constrainNodes();\n    }","id":8319,"modified_method":"public void setHeight(String height) {\n        Util.setHeightExcludingPaddingAndBorder(this, height, 0);\n        canvas.setHeight(getOffsetHeight());\n        updateNodes();\n    }","commit_id":"853b14081b48ecea51bee887a3ce4ad747cf90c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void onClick(ClickEvent event) {\n        System.out.println(\"Click \" + event.getNativeButton());\n        if (event.isShiftKeyDown()) {\n            Widget[] list = nodes.toArray(new Widget[nodes.size()]);\n            Widget other = list[Random.nextInt(list.length)];\n            Widget node = createNode(event.getRelativeX(canvas.getElement()),\n                    event.getRelativeY(canvas.getElement()));\n            int choice = Random.nextInt(3);\n            if (choice == 0 || choice == 2) {\n                createRelationship(node, other);\n            } \n            if (choice == 1 || choice == 2) {\n                createRelationship(other, node);\n            }\n            event.preventDefault();\n        }\n    }","id":8320,"modified_method":"public void onClick(ClickEvent event) {\n        System.out.println(\"Click \" + event.getNativeButton());\n        if (event.isShiftKeyDown()) {\n            Node[] list = nodes.toArray(new Node[nodes.size()]);\n            Node other = list[Random.nextInt(list.length)];\n            Node node = createNode(event.getRelativeX(canvas.getElement()),\n                    event.getRelativeY(canvas.getElement()));\n            createRandomRelationships(node, other);\n            event.preventDefault();\n        }\n    }","commit_id":"853b14081b48ecea51bee887a3ce4ad747cf90c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Widget createRandomNode() {\n        return createNode(Math.random() * canvas.getWidth(), Math.random()\n                * canvas.getHeight());\n    }","id":8321,"modified_method":"private Node createRandomNode() {\n        return createNode(Random.nextDouble() * canvas.getWidth(),\n                Random.nextDouble() * canvas.getHeight());\n    }","commit_id":"853b14081b48ecea51bee887a3ce4ad747cf90c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Relationship createRelationship(Widget node1, Widget node2) {\n        String type = new String[] { \"LIKES\", \"EATS\", \"FEARS\" }[Random\n                .nextInt(3)];\n        Relationship edge = new Relationship(this, node1, node2, type);\n\n        mapRelationship(node1, edge, edgesFrom);\n        mapRelationship(node2, edge, edgesTo);\n        return edge;\n    }","id":8322,"modified_method":"private Relationship createRelationship(Node from, Node to) {\n        String type = new String[] { \"LIKES\", \"EATS\", \"FEARS\" }[Random\n                .nextInt(3)];\n        Relationship edge = new Relationship(this, from, to, type);\n\n        from.addOutgoing(edge);\n        to.addIncoming(edge);\n        return edge;\n    }","commit_id":"853b14081b48ecea51bee887a3ce4ad747cf90c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void addEdge(VGraphComponent parent) {\r\n        edge = new Line((int) Math.round(getCenterX(from)),\r\n                (int) Math.round(getCenterY(from)),\r\n                (int) Math.round(getCenterX(to)),\r\n                (int) Math.round(getCenterY(to)));\r\n        parent.add(edge);\r\n    }","id":8323,"modified_method":"private void addEdge(VGraphComponent parent) {\r\n        edge = new Line((int) Math.round(from.getCenterX()),\r\n                (int) Math.round(from.getCenterY()), (int) Math.round(to\r\n                        .getCenterX()), (int) Math.round(to.getCenterY()));\r\n        parent.add(edge);\r\n    }","commit_id":"d84a8590fc6f9dce9da1e532fe374fd0ada7669c","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void addLabel(VGraphComponent parent, String type) {\r\n        label = new HTML(\"<div style='text-align:center'>\" + type + \"<\/div>\");\r\n        parent.add(label);\r\n\r\n        Style style = label.getElement().getStyle();\r\n        style.setPosition(Position.ABSOLUTE);\r\n        style.setBackgroundColor(\"white\");\r\n        style.setFontSize(9, Unit.PX);\r\n        updateLabel();\r\n    }","id":8324,"modified_method":"private void addLabel(VGraphComponent parent, String type) {\r\n        label = new HTML(\"<div style='text-align:center'>\" + type + \"<\/div>\");\r\n        parent.add(label);\r\n\r\n        Style style = label.getElement().getStyle();\r\n        style.setPosition(Position.ABSOLUTE);\r\n        style.setBackgroundColor(\"white\");\r\n        style.setFontSize(10, Unit.PX);\r\n        updateLabel();\r\n    }","commit_id":"d84a8590fc6f9dce9da1e532fe374fd0ada7669c","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void updateArrowhead() {\r\n        double originX = getArrowheadOrigin(getCenterX(from), getCenterX(to));\r\n        double originY = getArrowheadOrigin(getCenterY(from), getCenterY(to));\r\n        double angle = Math.atan2(getCenterY(to) - getCenterY(from),\r\n                getCenterX(to) - getCenterX(from));\r\n\r\n        double leftX = originX\r\n                + rotateX(-ARROWHEAD_LENGTH, -ARROWHEAD_WIDTH, angle);\r\n        double leftY = originY\r\n                + rotateY(-ARROWHEAD_LENGTH, -ARROWHEAD_WIDTH, angle);\r\n        updateLine(arrowheadLeft, originX, originY, leftX, leftY);\r\n\r\n        double rightX = originX\r\n                + rotateX(-ARROWHEAD_LENGTH, ARROWHEAD_WIDTH, angle);\r\n        double rightY = originY\r\n                + rotateY(-ARROWHEAD_LENGTH, ARROWHEAD_WIDTH, angle);\r\n        updateLine(arrowheadRight, originX, originY, rightX, rightY);\r\n    }","id":8325,"modified_method":"private void updateArrowhead() {\r\n        double fromX = from.getCenterX();\r\n        double fromY = from.getCenterY();\r\n        double toX = to.getCenterX();\r\n        double toY = to.getCenterY();\r\n        double originX = getArrowheadOrigin(fromX, toX);\r\n        double originY = getArrowheadOrigin(fromY, toY);\r\n        double angle = Math.atan2(toY - fromY, toX - fromX);\r\n\r\n        double leftX = originX\r\n                + rotateX(-ARROWHEAD_LENGTH, -ARROWHEAD_WIDTH, angle);\r\n        double leftY = originY\r\n                + rotateY(-ARROWHEAD_LENGTH, -ARROWHEAD_WIDTH, angle);\r\n        updateLine(arrowheadLeft, originX, originY, leftX, leftY);\r\n\r\n        double rightX = originX\r\n                + rotateX(-ARROWHEAD_LENGTH, ARROWHEAD_WIDTH, angle);\r\n        double rightY = originY\r\n                + rotateY(-ARROWHEAD_LENGTH, ARROWHEAD_WIDTH, angle);\r\n        updateLine(arrowheadRight, originX, originY, rightX, rightY);\r\n    }","commit_id":"d84a8590fc6f9dce9da1e532fe374fd0ada7669c","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Style updateLabel() {\r\n        Style style = label.getElement().getStyle();\r\n\r\n        double x = getLabelCenter(getCenterX(from), getCenterX(to))\r\n                - label.getOffsetWidth() / 2;\r\n        style.setLeft(x, Unit.PX);\r\n        double y = getLabelCenter(getCenterY(from), getCenterY(to))\r\n                - label.getOffsetHeight() / 2;\r\n        style.setTop(y, Unit.PX);\r\n        return style;\r\n    }","id":8326,"modified_method":"private Style updateLabel() {\r\n        Style style = label.getElement().getStyle();\r\n\r\n        double x = getLabelCenter(from.getCenterX(), to.getCenterX())\r\n                - label.getOffsetWidth() / 2;\r\n        style.setLeft(x, Unit.PX);\r\n        double y = getLabelCenter(from.getCenterY(), to.getCenterY())\r\n                - label.getOffsetHeight() / 2;\r\n        style.setTop(y, Unit.PX);\r\n        return style;\r\n    }","commit_id":"d84a8590fc6f9dce9da1e532fe374fd0ada7669c","url":"https://github.com/neo4j/neo4j"},{"original_method":"Relationship(VGraphComponent parent, Widget from, Widget to, String type) {\r\n        this.from = from;\r\n        this.to = to;\r\n        addEdge(parent);\r\n        addArrowhead(parent);\r\n        addLabel(parent, type);\r\n    }","id":8327,"modified_method":"Relationship(VGraphComponent parent, Node node1, Node node2, String type) {\r\n        this.from = node1;\r\n        this.to = node2;\r\n        addEdge(parent);\r\n        addArrowhead(parent);\r\n        addLabel(parent, type);\r\n    }","commit_id":"d84a8590fc6f9dce9da1e532fe374fd0ada7669c","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void updateEdge() {\r\n        updateLine(edge, getCenterX(from), getCenterY(from), getCenterX(to),\r\n                getCenterY(to));\r\n    }","id":8328,"modified_method":"private void updateEdge() {\r\n        updateLine(edge, from.getCenterX(), from.getCenterY(), to.getCenterX(),\r\n                to.getCenterY());\r\n    }","commit_id":"d84a8590fc6f9dce9da1e532fe374fd0ada7669c","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Widget createNode(double x, double y) {\n        HTML node = new HTML(\"<div style='text-align:center'>Node \"\n                + nodes.size() + \"<\/div>\");\n        Style style = node.getElement().getStyle();\n        style.setPosition(Position.ABSOLUTE);\n        style.setLeft(x, Unit.PX);\n        style.setTop(y, Unit.PX);\n        style.setWidth(NODE_SIZE, Unit.PX);\n        style.setHeight(NODE_SIZE, Unit.PX);\n        style.setBackgroundColor(\"lightblue\");\n        style.setFontSize(12, Unit.PX);\n        root.add(node);\n        nodes.add(node);\n        new NodeHandler(node, this);\n        return node;\n    }","id":8329,"modified_method":"private Node createNode(double x, double y) {\n        Node node = new Node(this, \"Node \" + nodes.size(), x, y);\n        nodes.add(node);\n        return node;\n    }","commit_id":"d84a8590fc6f9dce9da1e532fe374fd0ada7669c","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void setWidth(String width) {\n        Util.setWidthExcludingPaddingAndBorder(this, width, 0);\n        canvas.setWidth(getOffsetWidth());\n        constrainNodes();\n    }","id":8330,"modified_method":"public void setWidth(String width) {\n        Util.setWidthExcludingPaddingAndBorder(this, width, 0);\n        canvas.setWidth(getOffsetWidth());\n        updateNodes();\n    }","commit_id":"d84a8590fc6f9dce9da1e532fe374fd0ada7669c","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void setHeight(String height) {\n        Util.setHeightExcludingPaddingAndBorder(this, height, 0);\n        canvas.setHeight(getOffsetHeight());\n        constrainNodes();\n    }","id":8331,"modified_method":"public void setHeight(String height) {\n        Util.setHeightExcludingPaddingAndBorder(this, height, 0);\n        canvas.setHeight(getOffsetHeight());\n        updateNodes();\n    }","commit_id":"d84a8590fc6f9dce9da1e532fe374fd0ada7669c","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void onClick(ClickEvent event) {\n        System.out.println(\"Click \" + event.getNativeButton());\n        if (event.isShiftKeyDown()) {\n            Widget[] list = nodes.toArray(new Widget[nodes.size()]);\n            Widget other = list[Random.nextInt(list.length)];\n            Widget node = createNode(event.getRelativeX(canvas.getElement()),\n                    event.getRelativeY(canvas.getElement()));\n            int choice = Random.nextInt(3);\n            if (choice == 0 || choice == 2) {\n                createRelationship(node, other);\n            } \n            if (choice == 1 || choice == 2) {\n                createRelationship(other, node);\n            }\n            event.preventDefault();\n        }\n    }","id":8332,"modified_method":"public void onClick(ClickEvent event) {\n        System.out.println(\"Click \" + event.getNativeButton());\n        if (event.isShiftKeyDown()) {\n            Node[] list = nodes.toArray(new Node[nodes.size()]);\n            Node other = list[Random.nextInt(list.length)];\n            Node node = createNode(event.getRelativeX(canvas.getElement()),\n                    event.getRelativeY(canvas.getElement()));\n            createRandomRelationships(node, other);\n            event.preventDefault();\n        }\n    }","commit_id":"d84a8590fc6f9dce9da1e532fe374fd0ada7669c","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Called whenever an update is received from the server\n     */\n    public void updateFromUIDL(UIDL uidl, ApplicationConnection client) {\n        // This call should be made first.\n        // It handles sizes, captions, tooltips, etc. automatically.\n        if (client.updateComponent(this, uidl, true)) {\n            // If client.updateComponent returns true there has been no changes\n            // and we\n            // do not need to update anything.\n            return;\n        }\n\n        // Save reference to server connection object to be able to send\n        // user interaction later\n        this.client = client;\n\n        // Save the client side identifier (paintable id) for the widget\n        paintableId = uidl.getId();\n\n        Widget node1 = createRandomNode();\n        Widget node2 = createRandomNode();\n\n        createRelationship(node1, node2);\n        createRelationship(node2, node1);\n    }","id":8333,"modified_method":"/**\n     * Called whenever an update is received from the server\n     */\n    public void updateFromUIDL(UIDL uidl, ApplicationConnection client) {\n        // This call should be made first.\n        // It handles sizes, captions, tooltips, etc. automatically.\n        if (client.updateComponent(this, uidl, true)) {\n            // If client.updateComponent returns true there has been no changes\n            // and we\n            // do not need to update anything.\n            return;\n        }\n\n        // Save reference to server connection object to be able to send\n        // user interaction later\n        this.client = client;\n\n        // Save the client side identifier (paintable id) for the widget\n        paintableId = uidl.getId();\n\n        Node node1 = createRandomNode();\n        Node node2 = createRandomNode();\n\n        createRelationship(node1, node2);\n        createRelationship(node2, node1);\n    }","commit_id":"d84a8590fc6f9dce9da1e532fe374fd0ada7669c","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Relationship createRelationship(Widget node1, Widget node2) {\n        String type = new String[] { \"LIKES\", \"EATS\", \"FEARS\" }[Random\n                .nextInt(3)];\n        Relationship edge = new Relationship(this, node1, node2, type);\n\n        mapRelationship(node1, edge, edgesFrom);\n        mapRelationship(node2, edge, edgesTo);\n        return edge;\n    }","id":8334,"modified_method":"private Relationship createRelationship(Node from, Node to) {\n        String type = new String[] { \"LIKES\", \"EATS\", \"FEARS\" }[Random\n                .nextInt(3)];\n        Relationship edge = new Relationship(this, from, to, type);\n\n        from.addOutgoing(edge);\n        to.addIncoming(edge);\n        return edge;\n    }","commit_id":"d84a8590fc6f9dce9da1e532fe374fd0ada7669c","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Widget createRandomNode() {\n        return createNode(Math.random() * canvas.getWidth(), Math.random()\n                * canvas.getHeight());\n    }","id":8335,"modified_method":"private Node createRandomNode() {\n        return createNode(Random.nextDouble() * canvas.getWidth(),\n                Random.nextDouble() * canvas.getHeight());\n    }","commit_id":"d84a8590fc6f9dce9da1e532fe374fd0ada7669c","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void updateEdge() {\r\n        updateLine(edge, getCenterX(from), getCenterY(from), getCenterX(to),\r\n                getCenterY(to));\r\n    }","id":8336,"modified_method":"private void updateEdge() {\r\n        updateLine(edge, from.getCenterX(), from.getCenterY(), to.getCenterX(),\r\n                to.getCenterY());\r\n    }","commit_id":"6745f6ea6d9bf9bbce24b8ed84ed91d9bc9d3084","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Style updateLabel() {\r\n        Style style = label.getElement().getStyle();\r\n\r\n        double x = getLabelCenter(getCenterX(from), getCenterX(to))\r\n                - label.getOffsetWidth() / 2;\r\n        style.setLeft(x, Unit.PX);\r\n        double y = getLabelCenter(getCenterY(from), getCenterY(to))\r\n                - label.getOffsetHeight() / 2;\r\n        style.setTop(y, Unit.PX);\r\n        return style;\r\n    }","id":8337,"modified_method":"private Style updateLabel() {\r\n        Style style = label.getElement().getStyle();\r\n\r\n        double x = getLabelCenter(from.getCenterX(), to.getCenterX())\r\n                - label.getOffsetWidth() / 2;\r\n        style.setLeft(x, Unit.PX);\r\n        double y = getLabelCenter(from.getCenterY(), to.getCenterY())\r\n                - label.getOffsetHeight() / 2;\r\n        style.setTop(y, Unit.PX);\r\n        return style;\r\n    }","commit_id":"6745f6ea6d9bf9bbce24b8ed84ed91d9bc9d3084","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void addLabel(VGraphComponent parent, String type) {\r\n        label = new HTML(\"<div style='text-align:center'>\" + type + \"<\/div>\");\r\n        parent.add(label);\r\n\r\n        Style style = label.getElement().getStyle();\r\n        style.setPosition(Position.ABSOLUTE);\r\n        style.setBackgroundColor(\"white\");\r\n        style.setFontSize(9, Unit.PX);\r\n        updateLabel();\r\n    }","id":8338,"modified_method":"private void addLabel(VGraphComponent parent, String type) {\r\n        label = new HTML(\"<div style='text-align:center'>\" + type + \"<\/div>\");\r\n        parent.add(label);\r\n\r\n        Style style = label.getElement().getStyle();\r\n        style.setPosition(Position.ABSOLUTE);\r\n        style.setBackgroundColor(\"white\");\r\n        style.setFontSize(10, Unit.PX);\r\n        updateLabel();\r\n    }","commit_id":"6745f6ea6d9bf9bbce24b8ed84ed91d9bc9d3084","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void updateArrowhead() {\r\n        double originX = getArrowheadOrigin(getCenterX(from), getCenterX(to));\r\n        double originY = getArrowheadOrigin(getCenterY(from), getCenterY(to));\r\n        double angle = Math.atan2(getCenterY(to) - getCenterY(from),\r\n                getCenterX(to) - getCenterX(from));\r\n\r\n        double leftX = originX\r\n                + rotateX(-ARROWHEAD_LENGTH, -ARROWHEAD_WIDTH, angle);\r\n        double leftY = originY\r\n                + rotateY(-ARROWHEAD_LENGTH, -ARROWHEAD_WIDTH, angle);\r\n        updateLine(arrowheadLeft, originX, originY, leftX, leftY);\r\n\r\n        double rightX = originX\r\n                + rotateX(-ARROWHEAD_LENGTH, ARROWHEAD_WIDTH, angle);\r\n        double rightY = originY\r\n                + rotateY(-ARROWHEAD_LENGTH, ARROWHEAD_WIDTH, angle);\r\n        updateLine(arrowheadRight, originX, originY, rightX, rightY);\r\n    }","id":8339,"modified_method":"private void updateArrowhead() {\r\n        double fromX = from.getCenterX();\r\n        double fromY = from.getCenterY();\r\n        double toX = to.getCenterX();\r\n        double toY = to.getCenterY();\r\n        double originX = getArrowheadOrigin(fromX, toX);\r\n        double originY = getArrowheadOrigin(fromY, toY);\r\n        double angle = Math.atan2(toY - fromY, toX - fromX);\r\n\r\n        double leftX = originX\r\n                + rotateX(-ARROWHEAD_LENGTH, -ARROWHEAD_WIDTH, angle);\r\n        double leftY = originY\r\n                + rotateY(-ARROWHEAD_LENGTH, -ARROWHEAD_WIDTH, angle);\r\n        updateLine(arrowheadLeft, originX, originY, leftX, leftY);\r\n\r\n        double rightX = originX\r\n                + rotateX(-ARROWHEAD_LENGTH, ARROWHEAD_WIDTH, angle);\r\n        double rightY = originY\r\n                + rotateY(-ARROWHEAD_LENGTH, ARROWHEAD_WIDTH, angle);\r\n        updateLine(arrowheadRight, originX, originY, rightX, rightY);\r\n    }","commit_id":"6745f6ea6d9bf9bbce24b8ed84ed91d9bc9d3084","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void addEdge(VGraphComponent parent) {\r\n        edge = new Line((int) Math.round(getCenterX(from)),\r\n                (int) Math.round(getCenterY(from)),\r\n                (int) Math.round(getCenterX(to)),\r\n                (int) Math.round(getCenterY(to)));\r\n        parent.add(edge);\r\n    }","id":8340,"modified_method":"private void addEdge(VGraphComponent parent) {\r\n        edge = new Line((int) Math.round(from.getCenterX()),\r\n                (int) Math.round(from.getCenterY()), (int) Math.round(to\r\n                        .getCenterX()), (int) Math.round(to.getCenterY()));\r\n        parent.add(edge);\r\n    }","commit_id":"6745f6ea6d9bf9bbce24b8ed84ed91d9bc9d3084","url":"https://github.com/neo4j/neo4j"},{"original_method":"Relationship(VGraphComponent parent, Widget from, Widget to, String type) {\r\n        this.from = from;\r\n        this.to = to;\r\n        addEdge(parent);\r\n        addArrowhead(parent);\r\n        addLabel(parent, type);\r\n    }","id":8341,"modified_method":"Relationship(VGraphComponent parent, Node node1, Node node2, String type) {\r\n        this.from = node1;\r\n        this.to = node2;\r\n        addEdge(parent);\r\n        addArrowhead(parent);\r\n        addLabel(parent, type);\r\n    }","commit_id":"6745f6ea6d9bf9bbce24b8ed84ed91d9bc9d3084","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void setHeight(String height) {\n        Util.setHeightExcludingPaddingAndBorder(this, height, 0);\n        canvas.setHeight(getOffsetHeight());\n        constrainNodes();\n    }","id":8342,"modified_method":"public void setHeight(String height) {\n        Util.setHeightExcludingPaddingAndBorder(this, height, 0);\n        canvas.setHeight(getOffsetHeight());\n        updateNodes();\n    }","commit_id":"6745f6ea6d9bf9bbce24b8ed84ed91d9bc9d3084","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Widget createNode(double x, double y) {\n        HTML node = new HTML(\"<div style='text-align:center'>Node \"\n                + nodes.size() + \"<\/div>\");\n        Style style = node.getElement().getStyle();\n        style.setPosition(Position.ABSOLUTE);\n        style.setLeft(x, Unit.PX);\n        style.setTop(y, Unit.PX);\n        style.setWidth(NODE_SIZE, Unit.PX);\n        style.setHeight(NODE_SIZE, Unit.PX);\n        style.setBackgroundColor(\"lightblue\");\n        style.setFontSize(12, Unit.PX);\n        root.add(node);\n        nodes.add(node);\n        new NodeHandler(node, this);\n        return node;\n    }","id":8343,"modified_method":"private Node createNode(double x, double y) {\n        Node node = new Node(this, \"Node \" + nodes.size(), x, y);\n        nodes.add(node);\n        return node;\n    }","commit_id":"6745f6ea6d9bf9bbce24b8ed84ed91d9bc9d3084","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void onClick(ClickEvent event) {\n        System.out.println(\"Click \" + event.getNativeButton());\n        if (event.isShiftKeyDown()) {\n            Widget[] list = nodes.toArray(new Widget[nodes.size()]);\n            Widget other = list[Random.nextInt(list.length)];\n            Widget node = createNode(event.getRelativeX(canvas.getElement()),\n                    event.getRelativeY(canvas.getElement()));\n            int choice = Random.nextInt(3);\n            if (choice == 0 || choice == 2) {\n                createRelationship(node, other);\n            } \n            if (choice == 1 || choice == 2) {\n                createRelationship(other, node);\n            }\n            event.preventDefault();\n        }\n    }","id":8344,"modified_method":"public void onClick(ClickEvent event) {\n        System.out.println(\"Click \" + event.getNativeButton());\n        if (event.isShiftKeyDown()) {\n            Node[] list = nodes.toArray(new Node[nodes.size()]);\n            Node other = list[Random.nextInt(list.length)];\n            Node node = createNode(event.getRelativeX(canvas.getElement()),\n                    event.getRelativeY(canvas.getElement()));\n            createRandomRelationships(node, other);\n            event.preventDefault();\n        }\n    }","commit_id":"6745f6ea6d9bf9bbce24b8ed84ed91d9bc9d3084","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void setWidth(String width) {\n        Util.setWidthExcludingPaddingAndBorder(this, width, 0);\n        canvas.setWidth(getOffsetWidth());\n        constrainNodes();\n    }","id":8345,"modified_method":"public void setWidth(String width) {\n        Util.setWidthExcludingPaddingAndBorder(this, width, 0);\n        canvas.setWidth(getOffsetWidth());\n        updateNodes();\n    }","commit_id":"6745f6ea6d9bf9bbce24b8ed84ed91d9bc9d3084","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Widget createRandomNode() {\n        return createNode(Math.random() * canvas.getWidth(), Math.random()\n                * canvas.getHeight());\n    }","id":8346,"modified_method":"private Node createRandomNode() {\n        return createNode(Random.nextDouble() * canvas.getWidth(),\n                Random.nextDouble() * canvas.getHeight());\n    }","commit_id":"6745f6ea6d9bf9bbce24b8ed84ed91d9bc9d3084","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Relationship createRelationship(Widget node1, Widget node2) {\n        String type = new String[] { \"LIKES\", \"EATS\", \"FEARS\" }[Random\n                .nextInt(3)];\n        Relationship edge = new Relationship(this, node1, node2, type);\n\n        mapRelationship(node1, edge, edgesFrom);\n        mapRelationship(node2, edge, edgesTo);\n        return edge;\n    }","id":8347,"modified_method":"private Relationship createRelationship(Node from, Node to) {\n        String type = new String[] { \"LIKES\", \"EATS\", \"FEARS\" }[Random\n                .nextInt(3)];\n        Relationship edge = new Relationship(this, from, to, type);\n\n        from.addOutgoing(edge);\n        to.addIncoming(edge);\n        return edge;\n    }","commit_id":"6745f6ea6d9bf9bbce24b8ed84ed91d9bc9d3084","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Called whenever an update is received from the server\n     */\n    public void updateFromUIDL(UIDL uidl, ApplicationConnection client) {\n        // This call should be made first.\n        // It handles sizes, captions, tooltips, etc. automatically.\n        if (client.updateComponent(this, uidl, true)) {\n            // If client.updateComponent returns true there has been no changes\n            // and we\n            // do not need to update anything.\n            return;\n        }\n\n        // Save reference to server connection object to be able to send\n        // user interaction later\n        this.client = client;\n\n        // Save the client side identifier (paintable id) for the widget\n        paintableId = uidl.getId();\n\n        Widget node1 = createRandomNode();\n        Widget node2 = createRandomNode();\n\n        createRelationship(node1, node2);\n        createRelationship(node2, node1);\n    }","id":8348,"modified_method":"/**\n     * Called whenever an update is received from the server\n     */\n    public void updateFromUIDL(UIDL uidl, ApplicationConnection client) {\n        // This call should be made first.\n        // It handles sizes, captions, tooltips, etc. automatically.\n        if (client.updateComponent(this, uidl, true)) {\n            // If client.updateComponent returns true there has been no changes\n            // and we\n            // do not need to update anything.\n            return;\n        }\n\n        // Save reference to server connection object to be able to send\n        // user interaction later\n        this.client = client;\n\n        // Save the client side identifier (paintable id) for the widget\n        paintableId = uidl.getId();\n\n        Node node1 = createRandomNode();\n        Node node2 = createRandomNode();\n\n        createRelationship(node1, node2);\n        createRelationship(node2, node1);\n    }","commit_id":"6745f6ea6d9bf9bbce24b8ed84ed91d9bc9d3084","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void addLabel(VGraphComponent parent, String type) {\r\n        label = new HTML(\"<div style='text-align:center'>\" + type + \"<\/div>\");\r\n        parent.add(label);\r\n\r\n        Style style = label.getElement().getStyle();\r\n        style.setPosition(Position.ABSOLUTE);\r\n        style.setBackgroundColor(\"white\");\r\n        style.setFontSize(9, Unit.PX);\r\n        updateLabel();\r\n    }","id":8349,"modified_method":"private void addLabel(VGraphComponent parent, String type) {\r\n        label = new HTML(\"<div style='text-align:center'>\" + type + \"<\/div>\");\r\n        parent.add(label);\r\n\r\n        Style style = label.getElement().getStyle();\r\n        style.setPosition(Position.ABSOLUTE);\r\n        style.setBackgroundColor(\"white\");\r\n        style.setFontSize(10, Unit.PX);\r\n        updateLabel();\r\n    }","commit_id":"adff07a2a41dbfd4de4b7bd28c5848e169ccbb4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Style updateLabel() {\r\n        Style style = label.getElement().getStyle();\r\n\r\n        double x = getLabelCenter(getCenterX(from), getCenterX(to))\r\n                - label.getOffsetWidth() / 2;\r\n        style.setLeft(x, Unit.PX);\r\n        double y = getLabelCenter(getCenterY(from), getCenterY(to))\r\n                - label.getOffsetHeight() / 2;\r\n        style.setTop(y, Unit.PX);\r\n        return style;\r\n    }","id":8350,"modified_method":"private Style updateLabel() {\r\n        Style style = label.getElement().getStyle();\r\n\r\n        double x = getLabelCenter(from.getCenterX(), to.getCenterX())\r\n                - label.getOffsetWidth() / 2;\r\n        style.setLeft(x, Unit.PX);\r\n        double y = getLabelCenter(from.getCenterY(), to.getCenterY())\r\n                - label.getOffsetHeight() / 2;\r\n        style.setTop(y, Unit.PX);\r\n        return style;\r\n    }","commit_id":"adff07a2a41dbfd4de4b7bd28c5848e169ccbb4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void updateEdge() {\r\n        updateLine(edge, getCenterX(from), getCenterY(from), getCenterX(to),\r\n                getCenterY(to));\r\n    }","id":8351,"modified_method":"private void updateEdge() {\r\n        updateLine(edge, from.getCenterX(), from.getCenterY(), to.getCenterX(),\r\n                to.getCenterY());\r\n    }","commit_id":"adff07a2a41dbfd4de4b7bd28c5848e169ccbb4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"Relationship(VGraphComponent parent, Widget from, Widget to, String type) {\r\n        this.from = from;\r\n        this.to = to;\r\n        addEdge(parent);\r\n        addArrowhead(parent);\r\n        addLabel(parent, type);\r\n    }","id":8352,"modified_method":"Relationship(VGraphComponent parent, Node node1, Node node2, String type) {\r\n        this.from = node1;\r\n        this.to = node2;\r\n        addEdge(parent);\r\n        addArrowhead(parent);\r\n        addLabel(parent, type);\r\n    }","commit_id":"adff07a2a41dbfd4de4b7bd28c5848e169ccbb4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void addEdge(VGraphComponent parent) {\r\n        edge = new Line((int) Math.round(getCenterX(from)),\r\n                (int) Math.round(getCenterY(from)),\r\n                (int) Math.round(getCenterX(to)),\r\n                (int) Math.round(getCenterY(to)));\r\n        parent.add(edge);\r\n    }","id":8353,"modified_method":"private void addEdge(VGraphComponent parent) {\r\n        edge = new Line((int) Math.round(from.getCenterX()),\r\n                (int) Math.round(from.getCenterY()), (int) Math.round(to\r\n                        .getCenterX()), (int) Math.round(to.getCenterY()));\r\n        parent.add(edge);\r\n    }","commit_id":"adff07a2a41dbfd4de4b7bd28c5848e169ccbb4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void updateArrowhead() {\r\n        double originX = getArrowheadOrigin(getCenterX(from), getCenterX(to));\r\n        double originY = getArrowheadOrigin(getCenterY(from), getCenterY(to));\r\n        double angle = Math.atan2(getCenterY(to) - getCenterY(from),\r\n                getCenterX(to) - getCenterX(from));\r\n\r\n        double leftX = originX\r\n                + rotateX(-ARROWHEAD_LENGTH, -ARROWHEAD_WIDTH, angle);\r\n        double leftY = originY\r\n                + rotateY(-ARROWHEAD_LENGTH, -ARROWHEAD_WIDTH, angle);\r\n        updateLine(arrowheadLeft, originX, originY, leftX, leftY);\r\n\r\n        double rightX = originX\r\n                + rotateX(-ARROWHEAD_LENGTH, ARROWHEAD_WIDTH, angle);\r\n        double rightY = originY\r\n                + rotateY(-ARROWHEAD_LENGTH, ARROWHEAD_WIDTH, angle);\r\n        updateLine(arrowheadRight, originX, originY, rightX, rightY);\r\n    }","id":8354,"modified_method":"private void updateArrowhead() {\r\n        double fromX = from.getCenterX();\r\n        double fromY = from.getCenterY();\r\n        double toX = to.getCenterX();\r\n        double toY = to.getCenterY();\r\n        double originX = getArrowheadOrigin(fromX, toX);\r\n        double originY = getArrowheadOrigin(fromY, toY);\r\n        double angle = Math.atan2(toY - fromY, toX - fromX);\r\n\r\n        double leftX = originX\r\n                + rotateX(-ARROWHEAD_LENGTH, -ARROWHEAD_WIDTH, angle);\r\n        double leftY = originY\r\n                + rotateY(-ARROWHEAD_LENGTH, -ARROWHEAD_WIDTH, angle);\r\n        updateLine(arrowheadLeft, originX, originY, leftX, leftY);\r\n\r\n        double rightX = originX\r\n                + rotateX(-ARROWHEAD_LENGTH, ARROWHEAD_WIDTH, angle);\r\n        double rightY = originY\r\n                + rotateY(-ARROWHEAD_LENGTH, ARROWHEAD_WIDTH, angle);\r\n        updateLine(arrowheadRight, originX, originY, rightX, rightY);\r\n    }","commit_id":"adff07a2a41dbfd4de4b7bd28c5848e169ccbb4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Widget createRandomNode() {\n        return createNode(Math.random() * canvas.getWidth(), Math.random()\n                * canvas.getHeight());\n    }","id":8355,"modified_method":"private Node createRandomNode() {\n        return createNode(Random.nextDouble() * canvas.getWidth(),\n                Random.nextDouble() * canvas.getHeight());\n    }","commit_id":"adff07a2a41dbfd4de4b7bd28c5848e169ccbb4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void setHeight(String height) {\n        Util.setHeightExcludingPaddingAndBorder(this, height, 0);\n        canvas.setHeight(getOffsetHeight());\n        constrainNodes();\n    }","id":8356,"modified_method":"public void setHeight(String height) {\n        Util.setHeightExcludingPaddingAndBorder(this, height, 0);\n        canvas.setHeight(getOffsetHeight());\n        updateNodes();\n    }","commit_id":"adff07a2a41dbfd4de4b7bd28c5848e169ccbb4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Called whenever an update is received from the server\n     */\n    public void updateFromUIDL(UIDL uidl, ApplicationConnection client) {\n        // This call should be made first.\n        // It handles sizes, captions, tooltips, etc. automatically.\n        if (client.updateComponent(this, uidl, true)) {\n            // If client.updateComponent returns true there has been no changes\n            // and we\n            // do not need to update anything.\n            return;\n        }\n\n        // Save reference to server connection object to be able to send\n        // user interaction later\n        this.client = client;\n\n        // Save the client side identifier (paintable id) for the widget\n        paintableId = uidl.getId();\n\n        Widget node1 = createRandomNode();\n        Widget node2 = createRandomNode();\n\n        createRelationship(node1, node2);\n        createRelationship(node2, node1);\n    }","id":8357,"modified_method":"/**\n     * Called whenever an update is received from the server\n     */\n    public void updateFromUIDL(UIDL uidl, ApplicationConnection client) {\n        // This call should be made first.\n        // It handles sizes, captions, tooltips, etc. automatically.\n        if (client.updateComponent(this, uidl, true)) {\n            // If client.updateComponent returns true there has been no changes\n            // and we\n            // do not need to update anything.\n            return;\n        }\n\n        // Save reference to server connection object to be able to send\n        // user interaction later\n        this.client = client;\n\n        // Save the client side identifier (paintable id) for the widget\n        paintableId = uidl.getId();\n\n        Node node1 = createRandomNode();\n        Node node2 = createRandomNode();\n\n        createRelationship(node1, node2);\n        createRelationship(node2, node1);\n    }","commit_id":"adff07a2a41dbfd4de4b7bd28c5848e169ccbb4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void onClick(ClickEvent event) {\n        System.out.println(\"Click \" + event.getNativeButton());\n        if (event.isShiftKeyDown()) {\n            Widget[] list = nodes.toArray(new Widget[nodes.size()]);\n            Widget other = list[Random.nextInt(list.length)];\n            Widget node = createNode(event.getRelativeX(canvas.getElement()),\n                    event.getRelativeY(canvas.getElement()));\n            int choice = Random.nextInt(3);\n            if (choice == 0 || choice == 2) {\n                createRelationship(node, other);\n            } \n            if (choice == 1 || choice == 2) {\n                createRelationship(other, node);\n            }\n            event.preventDefault();\n        }\n    }","id":8358,"modified_method":"public void onClick(ClickEvent event) {\n        System.out.println(\"Click \" + event.getNativeButton());\n        if (event.isShiftKeyDown()) {\n            Node[] list = nodes.toArray(new Node[nodes.size()]);\n            Node other = list[Random.nextInt(list.length)];\n            Node node = createNode(event.getRelativeX(canvas.getElement()),\n                    event.getRelativeY(canvas.getElement()));\n            createRandomRelationships(node, other);\n            event.preventDefault();\n        }\n    }","commit_id":"adff07a2a41dbfd4de4b7bd28c5848e169ccbb4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Relationship createRelationship(Widget node1, Widget node2) {\n        String type = new String[] { \"LIKES\", \"EATS\", \"FEARS\" }[Random\n                .nextInt(3)];\n        Relationship edge = new Relationship(this, node1, node2, type);\n\n        mapRelationship(node1, edge, edgesFrom);\n        mapRelationship(node2, edge, edgesTo);\n        return edge;\n    }","id":8359,"modified_method":"private Relationship createRelationship(Node from, Node to) {\n        String type = new String[] { \"LIKES\", \"EATS\", \"FEARS\" }[Random\n                .nextInt(3)];\n        Relationship edge = new Relationship(this, from, to, type);\n\n        from.addOutgoing(edge);\n        to.addIncoming(edge);\n        return edge;\n    }","commit_id":"adff07a2a41dbfd4de4b7bd28c5848e169ccbb4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void setWidth(String width) {\n        Util.setWidthExcludingPaddingAndBorder(this, width, 0);\n        canvas.setWidth(getOffsetWidth());\n        constrainNodes();\n    }","id":8360,"modified_method":"public void setWidth(String width) {\n        Util.setWidthExcludingPaddingAndBorder(this, width, 0);\n        canvas.setWidth(getOffsetWidth());\n        updateNodes();\n    }","commit_id":"adff07a2a41dbfd4de4b7bd28c5848e169ccbb4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Widget createNode(double x, double y) {\n        HTML node = new HTML(\"<div style='text-align:center'>Node \"\n                + nodes.size() + \"<\/div>\");\n        Style style = node.getElement().getStyle();\n        style.setPosition(Position.ABSOLUTE);\n        style.setLeft(x, Unit.PX);\n        style.setTop(y, Unit.PX);\n        style.setWidth(NODE_SIZE, Unit.PX);\n        style.setHeight(NODE_SIZE, Unit.PX);\n        style.setBackgroundColor(\"lightblue\");\n        style.setFontSize(12, Unit.PX);\n        root.add(node);\n        nodes.add(node);\n        new NodeHandler(node, this);\n        return node;\n    }","id":8361,"modified_method":"private Node createNode(double x, double y) {\n        Node node = new Node(this, \"Node \" + nodes.size(), x, y);\n        nodes.add(node);\n        return node;\n    }","commit_id":"adff07a2a41dbfd4de4b7bd28c5848e169ccbb4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void process(final MouseEvent e, boolean motionEvent) {\n    final Container cp = myRootPane.getContentPane();\n    final Point cpPoint = SwingUtilities.convertPoint(e.getComponent(), e.getPoint(), cp);\n    if (cpPoint.y < 0) {\n      final JMenuBar mb = myRootPane.getJMenuBar();\n      processForContainer(e, motionEvent, mb, SwingUtilities.convertPoint(e.getComponent(), e.getPoint(), mb));\n    }\n    else {\n      processForContainer(e, motionEvent, cp, cpPoint);\n    }\n  }","id":8362,"modified_method":"private void process(final MouseEvent e, boolean motionEvent) {\n    final Container cp = myRootPane.getContentPane();\n    final Point cpPoint = SwingUtilities.convertPoint(e.getComponent(), e.getPoint(), cp);\n    final boolean processingDrag = myMousePressedComponent != null && e.getID() == MouseEvent.MOUSE_DRAGGED;\n    if (!processingDrag && cpPoint.y < 0) {\n      final JMenuBar mb = myRootPane.getJMenuBar();\n      if (mb != null) {\n        processForContainer(e, motionEvent, mb, SwingUtilities.convertPoint(e.getComponent(), e.getPoint(), mb));\n      }\n    }\n    else {\n      processForContainer(e, motionEvent, cp, cpPoint);\n    }\n  }","commit_id":"a4a0c9fdd35e4894357c137670aafa983ea39d6e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void processForContainer(final MouseEvent e, final boolean motionEvent, final Container cp, final Point containerPoint) {\n    final boolean dragEvent = e.getID() == MouseEvent.MOUSE_DRAGGED;\n    Component target = SwingUtilities.getDeepestComponentAt(cp, containerPoint.x, containerPoint.y);\n    if (dragEvent && myMousePressedComponent != null) {\n      target = myMousePressedComponent;\n    }\n\n    if (myCurrentOverComponent != target && !dragEvent) {\n      if (myCurrentOverComponent != null) {\n        redispatch(convertEventType(e, MouseEvent.MOUSE_EXITED), false, myCurrentOverComponent);\n        if (target != null) {\n          redispatch(convertEventType(e, MouseEvent.MOUSE_ENTERED), false, target);\n        }\n      }\n    }\n\n\n    if (target != null && !redispatch(e, motionEvent, target)) {\n      setCursor(target.getCursor());\n      if (e.getID() == MouseEvent.MOUSE_PRESSED) {\n        myMousePressedComponent = target;\n      }\n    }\n    else {\n      setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\n    }\n\n    if (e.getID() == MouseEvent.MOUSE_RELEASED) {\n      myMousePressedComponent = null;\n    }\n\n    myCurrentOverComponent = target;\n  }","id":8363,"modified_method":"private void processForContainer(final MouseEvent e, final boolean motionEvent, final Container cp, final Point containerPoint) {\n    final boolean dragEvent = e.getID() == MouseEvent.MOUSE_DRAGGED;\n    Component target = SwingUtilities.getDeepestComponentAt(cp, containerPoint.x, containerPoint.y);\n    if (dragEvent && myMousePressedComponent != null) {\n      target = myMousePressedComponent;\n    }\n\n    if (myCurrentOverComponent != target && !dragEvent) {\n      if (myCurrentOverComponent != null) {\n        redispatch(convertEventType(e, MouseEvent.MOUSE_EXITED), false, myCurrentOverComponent);\n        if (target != null) {\n          redispatch(convertEventType(e, MouseEvent.MOUSE_ENTERED), false, target);\n        }\n      }\n    }\n\n\n    if (target != null && !redispatch(e, motionEvent, target)) {\n      setCursor(target.getCursor());\n      if (e.getID() == MouseEvent.MOUSE_PRESSED) {\n        myMousePressedComponent = target;\n        if (target.isFocusable()) {\n          target.requestFocus();\n        }\n      }\n    }\n    else {\n      setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\n    }\n\n    if (e.getID() == MouseEvent.MOUSE_RELEASED) {\n      myMousePressedComponent = null;\n    }\n\n    myCurrentOverComponent = target;\n  }","commit_id":"a4a0c9fdd35e4894357c137670aafa983ea39d6e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void doResize(final Point point) {\n    final Window popupWindow = SwingUtilities.windowForComponent(myComponent);\n    final Rectangle bounds = popupWindow.getBounds();\n    final Point location = popupWindow.getLocation();\n    switch (myDirection){\n      case Cursor.NW_RESIZE_CURSOR :\n        popupWindow.setBounds(location.x + point.x - myStartPoint.x,\n                              location.y + point.y - myStartPoint.y,\n                              bounds.width + myStartPoint.x - point.x,\n                              bounds.height + myStartPoint.y - point.y );\n        break;\n      case Cursor.N_RESIZE_CURSOR :\n        popupWindow.setBounds(location.x,\n                              location.y + point.y - myStartPoint.y,\n                              bounds.width,\n                              bounds.height + myStartPoint.y - point.y);\n        break;\n      case Cursor.NE_RESIZE_CURSOR :\n        popupWindow.setBounds(location.x,\n                              location.y + point.y - myStartPoint.y,\n                              bounds.width + point.x - myStartPoint.x,\n                              bounds.height + myStartPoint.y - point.y);\n        break;\n      case Cursor.E_RESIZE_CURSOR :\n        popupWindow.setBounds(location.x ,\n                              location.y,\n                              bounds.width + point.x - myStartPoint.x,\n                              bounds.height);\n        break;\n      case Cursor.SE_RESIZE_CURSOR :\n        popupWindow.setBounds(location.x,\n                              location.y,\n                              bounds.width + point.x - myStartPoint.x,\n                              bounds.height + point.y - myStartPoint.y);\n        break;\n      case Cursor.S_RESIZE_CURSOR :\n        popupWindow.setBounds(location.x,\n                              location.y,\n                              bounds.width ,\n                              bounds.height + point.y - myStartPoint.y);\n        break;\n      case Cursor.SW_RESIZE_CURSOR :\n        popupWindow.setBounds(location.x + point.x - myStartPoint.x,\n                              location.y,\n                              bounds.width + myStartPoint.x - point.x,\n                              bounds.height + point.y - myStartPoint.y);\n        break;\n      case Cursor.W_RESIZE_CURSOR :\n        popupWindow.setBounds(location.x + point.x - myStartPoint.x,\n                              location.y,\n                              bounds.width + myStartPoint.x - point.x,\n                              bounds.height);\n        break;\n    }\n  }","id":8364,"modified_method":"private void doResize(final Point point) {\n    final Window popupWindow = SwingUtilities.windowForComponent(myComponent);\n    final Rectangle bounds = popupWindow.getBounds();\n    final Point location = popupWindow.getLocation();\n    switch (myDirection){\n      case Cursor.NW_RESIZE_CURSOR :\n        popupWindow.setBounds(location.x + point.x - myStartPoint.x,\n                              location.y + point.y - myStartPoint.y,\n                              bounds.width + myStartPoint.x - point.x,\n                              bounds.height + myStartPoint.y - point.y );\n        break;\n      case Cursor.N_RESIZE_CURSOR :\n        popupWindow.setBounds(location.x,\n                              location.y + point.y - myStartPoint.y,\n                              bounds.width,\n                              bounds.height + myStartPoint.y - point.y);\n        break;\n      case Cursor.NE_RESIZE_CURSOR :\n        popupWindow.setBounds(location.x,\n                              location.y + point.y - myStartPoint.y,\n                              bounds.width + point.x - myStartPoint.x,\n                              bounds.height + myStartPoint.y - point.y);\n        break;\n      case Cursor.E_RESIZE_CURSOR :\n        popupWindow.setBounds(location.x ,\n                              location.y,\n                              bounds.width + point.x - myStartPoint.x,\n                              bounds.height);\n        break;\n      case Cursor.SE_RESIZE_CURSOR :\n        popupWindow.setBounds(location.x,\n                              location.y,\n                              bounds.width + point.x - myStartPoint.x,\n                              bounds.height + point.y - myStartPoint.y);\n        break;\n      case Cursor.S_RESIZE_CURSOR :\n        popupWindow.setBounds(location.x,\n                              location.y,\n                              bounds.width ,\n                              bounds.height + point.y - myStartPoint.y);\n        break;\n      case Cursor.SW_RESIZE_CURSOR :\n        popupWindow.setBounds(location.x + point.x - myStartPoint.x,\n                              location.y,\n                              bounds.width + myStartPoint.x - point.x,\n                              bounds.height + point.y - myStartPoint.y);\n        break;\n      case Cursor.W_RESIZE_CURSOR :\n        popupWindow.setBounds(location.x + point.x - myStartPoint.x,\n                              location.y,\n                              bounds.width + myStartPoint.x - point.x,\n                              bounds.height);\n        break;\n    }\n\n    popupWindow.validate();\n  }","commit_id":"a4a0c9fdd35e4894357c137670aafa983ea39d6e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void process(final MouseEvent e, boolean motionEvent) {\n    final Container cp = myRootPane.getContentPane();\n    final Point cpPoint = SwingUtilities.convertPoint(e.getComponent(), e.getPoint(), cp);\n    final boolean processingDrag = myMousePressedComponent != null && e.getID() == MouseEvent.MOUSE_DRAGGED;\n    if (!processingDrag && cpPoint.y < 0) {\n      final JMenuBar mb = myRootPane.getJMenuBar();\n      if (mb != null) {\n        processForContainer(e, motionEvent, mb, SwingUtilities.convertPoint(e.getComponent(), e.getPoint(), mb));\n      }\n    }\n    else {\n      processForContainer(e, motionEvent, cp, cpPoint);\n    }\n  }","id":8365,"modified_method":"private void process(final MouseEvent e, boolean motionEvent) {\n    final boolean processingDragEnd = myMousePressedComponent != null && e.getID() == MouseEvent.MOUSE_RELEASED;\n    if (processingDragEnd) {\n      final Point releasePoint = SwingUtilities.convertPoint(e.getComponent(), e.getPoint(), myMousePressedComponent);\n      redispatch(convertEvent(e, myMousePressedComponent, releasePoint, MouseEvent.MOUSE_RELEASED), motionEvent, myMousePressedComponent);\n\n      myMousePressedComponent = null;\n      myMousePressedContainer = null;\n      return;\n    }\n\n    final boolean processingDrag = myMousePressedComponent != null && e.getID() == MouseEvent.MOUSE_DRAGGED;\n    final JLayeredPane lp = myRootPane.getLayeredPane();\n    final Point lpPoint = SwingUtilities.convertPoint(e.getComponent(), e.getPoint(), lp);\n    if (processForContainer(e, motionEvent, lp, lpPoint)) return;\n\n    final Container cp = myRootPane.getContentPane();\n    final Point cpPoint = SwingUtilities.convertPoint(e.getComponent(), e.getPoint(), cp);\n    if (!processingDrag && cpPoint.y < 0) {\n      final JMenuBar mb = myRootPane.getJMenuBar();\n      if (mb != null) {\n        if (processForContainer(e, motionEvent, mb, SwingUtilities.convertPoint(e.getComponent(), e.getPoint(), mb))) return;\n      }\n    }\n\n    processForContainer(e, motionEvent, cp, cpPoint);\n  }","commit_id":"0ef86d78696a5a95ffa564efc71632154eafe615","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean isEndComponent(final Component actualTarget) {\n    if (actualTarget == null) return true;\n    if (actualTarget == myRootPane.getContentPane()) return true;\n    if (actualTarget == myRootPane.getJMenuBar()) return true;\n    return false;\n  }","id":8366,"modified_method":"private boolean isEndComponent(final Component actualTarget) {\n    if (actualTarget == null) return true;\n    if (actualTarget == myRootPane.getContentPane()) return true;\n    if (actualTarget == myRootPane.getJMenuBar()) return true;\n    if (actualTarget == myRootPane.getLayeredPane()) return true;\n    return false;\n  }","commit_id":"0ef86d78696a5a95ffa564efc71632154eafe615","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void processForContainer(final MouseEvent e, final boolean motionEvent, final Container cp, final Point containerPoint) {\n    final boolean dragEvent = e.getID() == MouseEvent.MOUSE_DRAGGED;\n    Component target = SwingUtilities.getDeepestComponentAt(cp, containerPoint.x, containerPoint.y);\n    if (dragEvent && myMousePressedComponent != null) {\n      target = myMousePressedComponent;\n    }\n\n    if (myCurrentOverComponent != target && !dragEvent) {\n      if (myCurrentOverComponent != null) {\n        redispatch(convertEventType(e, MouseEvent.MOUSE_EXITED), false, myCurrentOverComponent);\n        if (target != null) {\n          redispatch(convertEventType(e, MouseEvent.MOUSE_ENTERED), false, target);\n        }\n      }\n    }\n\n\n    if (target != null && !redispatch(e, motionEvent, target)) {\n      setCursor(target.getCursor());\n      if (e.getID() == MouseEvent.MOUSE_PRESSED) {\n        myMousePressedComponent = target;\n        if (target.isFocusable()) {\n          target.requestFocus();\n        }\n      }\n    }\n    else {\n      setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\n    }\n\n    if (e.getID() == MouseEvent.MOUSE_RELEASED) {\n      myMousePressedComponent = null;\n    }\n\n    myCurrentOverComponent = target;\n  }","id":8367,"modified_method":"private boolean processForContainer(final MouseEvent e, final boolean motionEvent, final Container container, final Point containerPoint) {\n    final boolean dragEvent = e.getID() == MouseEvent.MOUSE_DRAGGED;\n    Component target = SwingUtilities.getDeepestComponentAt(container, containerPoint.x, containerPoint.y);\n\n    boolean processed = target != null;\n\n    if (dragEvent && myMousePressedComponent != null) {\n      target = myMousePressedComponent;\n    }\n\n    if (myCurrentOverComponent != target && !dragEvent) {\n      if (myCurrentOverComponent != null) {\n        redispatch(convertEventType(e, MouseEvent.MOUSE_EXITED), false, myCurrentOverComponent);\n        if (target != null) {\n          redispatch(convertEventType(e, MouseEvent.MOUSE_ENTERED), false, target);\n        }\n        processed = true;\n      }\n    }\n\n\n    if (target != null) {\n      redispatch(e, motionEvent, target);\n      setCursor(target.getCursor());\n      if (e.getID() == MouseEvent.MOUSE_PRESSED) {\n        myMousePressedComponent = target;\n        myMousePressedContainer = container;\n        if (target.isFocusable()) {\n          target.requestFocus();\n        }\n      }\n    }\n    else {\n      setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\n    }\n\n    if (e.getID() == MouseEvent.MOUSE_RELEASED) {\n      myMousePressedComponent = null;\n      myMousePressedContainer = null;\n    }\n\n    myCurrentOverComponent = target;\n\n    return processed;\n  }","commit_id":"0ef86d78696a5a95ffa564efc71632154eafe615","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static MouseEvent convertEventType(MouseEvent event, int id) {\n    return new MouseEvent(event.getComponent(), id, System.currentTimeMillis(), event.getModifiersEx(), event.getX(), event.getY(),\n                          event.getClickCount(), event.isPopupTrigger(), event.getButton());\n  }","id":8368,"modified_method":"private static MouseEvent convertEventType(MouseEvent template, int id) {\n    return new MouseEvent(template.getComponent(), id, System.currentTimeMillis(), template.getModifiersEx(), template.getX(), template.getY(),\n                          template.getClickCount(), template.isPopupTrigger(), template.getButton());\n  }","commit_id":"0ef86d78696a5a95ffa564efc71632154eafe615","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Change internal settings based on what was chosen in the prefs,\n   * then send a message to the editor saying that it's time to do the same.\n   */\n  protected void applyFrame() {\n    Preferences.setBoolean(\"editor.smooth\", //$NON-NLS-1$\n                           editorAntialiasBox.isSelected());\n\n    Preferences.setBoolean(\"export.delete_target_folder\", //$NON-NLS-1$\n                           deletePreviousBox.isSelected());\n\n    boolean wine = whinyBox.isSelected();\n    Preferences.setBoolean(\"header.hide.image\", wine); //$NON-NLS-1$\n    Preferences.setBoolean(\"buttons.hide.image\", wine); //$NON-NLS-1$\n    // Could iterate through editors here and repaint them all, but probably\n    // requires a doLayout() call, and that may have different effects on\n    // each platform, and nobody wants to debug/support that.\n\n    // if the sketchbook path has changed, rebuild the menus\n    String oldPath = Preferences.getSketchbookPath();\n    String newPath = sketchbookLocationField.getText();\n    if (!newPath.equals(oldPath)) {\n      base.setSketchbookFolder(new File(newPath));\n    }\n\n//    setBoolean(\"editor.external\", externalEditorBox.isSelected());\n    Preferences.setBoolean(\"update.check\", checkUpdatesBox.isSelected()); //$NON-NLS-1$\n\n    // Save Language\n    Map<String, String> languages = Language.getLanguages();\n    String language = \"\";\n    for (Map.Entry<String, String> lang : languages.entrySet()) {\n      if (lang.getValue().equals(String.valueOf(languageSelectionBox.getSelectedItem()))) {\n        language = lang.getKey().trim().toLowerCase();\n        break;\n      }\n    }\n    if (!language.equals(Language.getLanguage()) && !language.equals(\"\")) {\n      Language.saveLanguage(language);\n    }\n\n    int oldDisplayIndex = Preferences.getInteger(\"run.display\"); //$NON-NLS-1$\n    int displayIndex = 0;\n    for (int d = 0; d < displaySelectionBox.getItemCount(); d++) {\n      if (displaySelectionBox.getSelectedIndex() == d) {\n        displayIndex = d;\n      }\n    }\n    if (oldDisplayIndex != displayIndex) {\n      Preferences.setInteger(\"run.display\", displayIndex); //$NON-NLS-1$\n      for (Editor editor : base.getEditors()) {\n        editor.setSketchLocation(null);\n      }\n    }\n\n    Preferences.setBoolean(\"run.options.memory\", memoryOverrideBox.isSelected()); //$NON-NLS-1$\n    int memoryMin = Preferences.getInteger(\"run.options.memory.initial\"); //$NON-NLS-1$\n    int memoryMax = Preferences.getInteger(\"run.options.memory.maximum\"); //$NON-NLS-1$\n    try {\n      memoryMax = Integer.parseInt(memoryField.getText().trim());\n      // make sure memory setting isn't too small\n      if (memoryMax < memoryMin) memoryMax = memoryMin;\n      Preferences.setInteger(\"run.options.memory.maximum\", memoryMax); //$NON-NLS-1$\n    } catch (NumberFormatException e) {\n      System.err.println(\"Ignoring bad memory setting\");\n    }\n\n    // Don't change anything if the user closes the window before fonts load\n    if (fontSelectionBox.isEnabled()) {\n      String fontFamily = (String) fontSelectionBox.getSelectedItem();\n      Preferences.set(\"editor.font.family\", fontFamily);\n    }\n\n    try {\n      Object selection = fontSizeField.getSelectedItem();\n      if (selection instanceof String) {\n        // Replace with Integer version\n        selection = Integer.parseInt((String) selection);\n      }\n      Preferences.set(\"editor.font.size\", String.valueOf(selection));\n\n    } catch (NumberFormatException e) {\n      Base.log(\"Ignoring invalid font size \" + fontSizeField); //$NON-NLS-1$\n      fontSizeField.setSelectedItem(Preferences.getInteger(\"editor.font.size\"));\n    }\n\n    try {\n      Object selection = consoleFontSizeField.getSelectedItem();\n      if (selection instanceof String) {\n        // Replace with Integer version\n        selection = Integer.parseInt((String) selection);\n      }\n      Preferences.set(\"console.font.size\", String.valueOf(selection));\n\n    } catch (NumberFormatException e) {\n      Base.log(\"Ignoring invalid font size \" + consoleFontSizeField); //$NON-NLS-1$\n      consoleFontSizeField.setSelectedItem(Preferences.getInteger(\"console.font.size\"));\n    }\n\n    Preferences.setColor(\"run.present.bgcolor\", presentColor.getBackground());\n\n    Preferences.setBoolean(\"editor.input_method_support\", inputMethodBox.isSelected()); //$NON-NLS-1$\n\n    if (autoAssociateBox != null) {\n      Preferences.setBoolean(\"platform.auto_file_type_associations\", //$NON-NLS-1$\n                             autoAssociateBox.isSelected());\n    }\n\n    Preferences.setBoolean(\"pdex.errorCheckEnabled\", errorCheckerBox.isSelected());\n    Preferences.setBoolean(\"pdex.warningsEnabled\", warningsCheckerBox.isSelected());\n    Preferences.setBoolean(\"pdex.completion\", codeCompletionBox.isSelected());\n    //Preferences.setBoolean(\"pdex.completion.trigger\", codeCompletionTriggerBox.isSelected());\n    Preferences.setBoolean(\"pdex.importSuggestEnabled\", importSuggestionsBox.isSelected());\n\n    for (Editor editor : base.getEditors()) {\n      editor.applyPreferences();\n    }\n  }","id":8369,"modified_method":"/**\n   * Change internal settings based on what was chosen in the prefs,\n   * then send a message to the editor saying that it's time to do the same.\n   */\n  protected void applyFrame() {\n    Preferences.setBoolean(\"editor.smooth\", //$NON-NLS-1$\n                           editorAntialiasBox.isSelected());\n\n    Preferences.setBoolean(\"export.delete_target_folder\", //$NON-NLS-1$\n                           deletePreviousBox.isSelected());\n\n    // if the sketchbook path has changed, rebuild the menus\n    String oldPath = Preferences.getSketchbookPath();\n    String newPath = sketchbookLocationField.getText();\n    if (!newPath.equals(oldPath)) {\n      base.setSketchbookFolder(new File(newPath));\n    }\n\n//    setBoolean(\"editor.external\", externalEditorBox.isSelected());\n    Preferences.setBoolean(\"update.check\", checkUpdatesBox.isSelected()); //$NON-NLS-1$\n\n    // Save Language\n    Map<String, String> languages = Language.getLanguages();\n    String language = \"\";\n    for (Map.Entry<String, String> lang : languages.entrySet()) {\n      if (lang.getValue().equals(String.valueOf(languageSelectionBox.getSelectedItem()))) {\n        language = lang.getKey().trim().toLowerCase();\n        break;\n      }\n    }\n    if (!language.equals(Language.getLanguage()) && !language.equals(\"\")) {\n      Language.saveLanguage(language);\n    }\n\n    int oldDisplayIndex = Preferences.getInteger(\"run.display\"); //$NON-NLS-1$\n    int displayIndex = 0;\n    for (int d = 0; d < displaySelectionBox.getItemCount(); d++) {\n      if (displaySelectionBox.getSelectedIndex() == d) {\n        displayIndex = d;\n      }\n    }\n    if (oldDisplayIndex != displayIndex) {\n      Preferences.setInteger(\"run.display\", displayIndex); //$NON-NLS-1$\n      for (Editor editor : base.getEditors()) {\n        editor.setSketchLocation(null);\n      }\n    }\n\n    Preferences.setBoolean(\"run.options.memory\", memoryOverrideBox.isSelected()); //$NON-NLS-1$\n    int memoryMin = Preferences.getInteger(\"run.options.memory.initial\"); //$NON-NLS-1$\n    int memoryMax = Preferences.getInteger(\"run.options.memory.maximum\"); //$NON-NLS-1$\n    try {\n      memoryMax = Integer.parseInt(memoryField.getText().trim());\n      // make sure memory setting isn't too small\n      if (memoryMax < memoryMin) memoryMax = memoryMin;\n      Preferences.setInteger(\"run.options.memory.maximum\", memoryMax); //$NON-NLS-1$\n    } catch (NumberFormatException e) {\n      System.err.println(\"Ignoring bad memory setting\");\n    }\n\n    // Don't change anything if the user closes the window before fonts load\n    if (fontSelectionBox.isEnabled()) {\n      String fontFamily = (String) fontSelectionBox.getSelectedItem();\n      Preferences.set(\"editor.font.family\", fontFamily);\n    }\n\n    try {\n      Object selection = fontSizeField.getSelectedItem();\n      if (selection instanceof String) {\n        // Replace with Integer version\n        selection = Integer.parseInt((String) selection);\n      }\n      Preferences.set(\"editor.font.size\", String.valueOf(selection));\n\n    } catch (NumberFormatException e) {\n      Base.log(\"Ignoring invalid font size \" + fontSizeField); //$NON-NLS-1$\n      fontSizeField.setSelectedItem(Preferences.getInteger(\"editor.font.size\"));\n    }\n\n    try {\n      Object selection = consoleFontSizeField.getSelectedItem();\n      if (selection instanceof String) {\n        // Replace with Integer version\n        selection = Integer.parseInt((String) selection);\n      }\n      Preferences.set(\"console.font.size\", String.valueOf(selection));\n\n    } catch (NumberFormatException e) {\n      Base.log(\"Ignoring invalid font size \" + consoleFontSizeField); //$NON-NLS-1$\n      consoleFontSizeField.setSelectedItem(Preferences.getInteger(\"console.font.size\"));\n    }\n\n    Preferences.setColor(\"run.present.bgcolor\", presentColor.getBackground());\n\n    Preferences.setBoolean(\"editor.input_method_support\", inputMethodBox.isSelected()); //$NON-NLS-1$\n\n    if (autoAssociateBox != null) {\n      Preferences.setBoolean(\"platform.auto_file_type_associations\", //$NON-NLS-1$\n                             autoAssociateBox.isSelected());\n    }\n\n    Preferences.setBoolean(\"pdex.errorCheckEnabled\", errorCheckerBox.isSelected());\n    Preferences.setBoolean(\"pdex.warningsEnabled\", warningsCheckerBox.isSelected());\n    Preferences.setBoolean(\"pdex.completion\", codeCompletionBox.isSelected());\n    //Preferences.setBoolean(\"pdex.completion.trigger\", codeCompletionTriggerBox.isSelected());\n    Preferences.setBoolean(\"pdex.importSuggestEnabled\", importSuggestionsBox.isSelected());\n\n    for (Editor editor : base.getEditors()) {\n      editor.applyPreferences();\n    }\n  }","commit_id":"a3a32326b4ebbcfc90541c9448714e31113726f0","url":"https://github.com/processing/processing"},{"original_method":"protected void showFrame() {\n    editorAntialiasBox.setSelected(Preferences.getBoolean(\"editor.smooth\")); //$NON-NLS-1$\n    inputMethodBox.setSelected(Preferences.getBoolean(\"editor.input_method_support\")); //$NON-NLS-1$\n    errorCheckerBox.setSelected(Preferences.getBoolean(\"pdex.errorCheckEnabled\"));\n    warningsCheckerBox.setSelected(Preferences.getBoolean(\"pdex.warningsEnabled\"));\n    codeCompletionBox.setSelected(Preferences.getBoolean(\"pdex.completion\"));\n    //codeCompletionTriggerBox.setSelected(Preferences.getBoolean(\"pdex.completion.trigger\"));\n    //codeCompletionTriggerBox.setEnabled(codeCompletionBox.isSelected());\n    importSuggestionsBox.setSelected(Preferences.getBoolean(\"pdex.importSuggestEnabled\"));\n    deletePreviousBox.setSelected(Preferences.getBoolean(\"export.delete_target_folder\")); //$NON-NLS-1$\n\n    sketchbookLocationField.setText(Preferences.getSketchbookPath());\n    checkUpdatesBox.setSelected(Preferences.getBoolean(\"update.check\")); //$NON-NLS-1$\n\n    whinyBox.setSelected(Preferences.getBoolean(\"header.hide.image\") || //$NON-NLS-1$\n                         Preferences.getBoolean(\"buttons.hide.image\")); //$NON-NLS-1$\n\n    updateDisplayList();\n    int displayNum = Preferences.getInteger(\"run.display\"); //$NON-NLS-1$\n    if (displayNum >= 0 && displayNum < displayCount) {\n      displaySelectionBox.setSelectedIndex(displayNum);\n    }\n\n    // This takes a while to load, so run it from a separate thread\n    EventQueue.invokeLater(new Runnable() {\n      public void run() {\n        initFontList();\n      }\n    });\n\n    fontSizeField.setSelectedItem(Preferences.getInteger(\"editor.font.size\"));\n    consoleFontSizeField.setSelectedItem(Preferences.getInteger(\"console.font.size\"));\n\n    presentColor.setBackground(Preferences.getColor(\"run.present.bgcolor\"));\n    presentColorHex.setText(Preferences.get(\"run.present.bgcolor\").substring(1));\n\n    memoryOverrideBox.\n      setSelected(Preferences.getBoolean(\"run.options.memory\")); //$NON-NLS-1$\n    memoryField.\n      setText(Preferences.get(\"run.options.memory.maximum\")); //$NON-NLS-1$\n    memoryField.setEnabled(memoryOverrideBox.isSelected());\n\n    if (autoAssociateBox != null) {\n      autoAssociateBox.setSelected(Preferences.getBoolean(\"platform.auto_file_type_associations\")); //$NON-NLS-1$\n    }\n    dialog.setVisible(true);\n  }","id":8370,"modified_method":"protected void showFrame() {\n    editorAntialiasBox.setSelected(Preferences.getBoolean(\"editor.smooth\")); //$NON-NLS-1$\n    inputMethodBox.setSelected(Preferences.getBoolean(\"editor.input_method_support\")); //$NON-NLS-1$\n    errorCheckerBox.setSelected(Preferences.getBoolean(\"pdex.errorCheckEnabled\"));\n    warningsCheckerBox.setSelected(Preferences.getBoolean(\"pdex.warningsEnabled\"));\n    codeCompletionBox.setSelected(Preferences.getBoolean(\"pdex.completion\"));\n    //codeCompletionTriggerBox.setSelected(Preferences.getBoolean(\"pdex.completion.trigger\"));\n    //codeCompletionTriggerBox.setEnabled(codeCompletionBox.isSelected());\n    importSuggestionsBox.setSelected(Preferences.getBoolean(\"pdex.importSuggestEnabled\"));\n    deletePreviousBox.setSelected(Preferences.getBoolean(\"export.delete_target_folder\")); //$NON-NLS-1$\n\n    sketchbookLocationField.setText(Preferences.getSketchbookPath());\n    checkUpdatesBox.setSelected(Preferences.getBoolean(\"update.check\")); //$NON-NLS-1$\n\n    updateDisplayList();\n    int displayNum = Preferences.getInteger(\"run.display\"); //$NON-NLS-1$\n    if (displayNum >= 0 && displayNum < displayCount) {\n      displaySelectionBox.setSelectedIndex(displayNum);\n    }\n\n    // This takes a while to load, so run it from a separate thread\n    EventQueue.invokeLater(new Runnable() {\n      public void run() {\n        initFontList();\n      }\n    });\n\n    fontSizeField.setSelectedItem(Preferences.getInteger(\"editor.font.size\"));\n    consoleFontSizeField.setSelectedItem(Preferences.getInteger(\"console.font.size\"));\n\n    presentColor.setBackground(Preferences.getColor(\"run.present.bgcolor\"));\n    presentColorHex.setText(Preferences.get(\"run.present.bgcolor\").substring(1));\n\n    memoryOverrideBox.\n      setSelected(Preferences.getBoolean(\"run.options.memory\")); //$NON-NLS-1$\n    memoryField.\n      setText(Preferences.get(\"run.options.memory.maximum\")); //$NON-NLS-1$\n    memoryField.setEnabled(memoryOverrideBox.isSelected());\n\n    if (autoAssociateBox != null) {\n      autoAssociateBox.setSelected(Preferences.getBoolean(\"platform.auto_file_type_associations\")); //$NON-NLS-1$\n    }\n    dialog.setVisible(true);\n  }","commit_id":"a3a32326b4ebbcfc90541c9448714e31113726f0","url":"https://github.com/processing/processing"},{"original_method":"public PreferencesFrame(Base base) {\n    this.base = base;\n    //dialog = new JDialog(editor, \"Preferences\", true);\n    dialog = new JFrame(Language.text(\"preferences\"));\n    dialog.setResizable(false);\n    Container pain = dialog.getContentPane();\n    layout = new GroupLayout(pain);// pain ??\n//    layout.setAutoCreateGaps(true);\n    layout.setAutoCreateContainerGaps(true);\n\n//    pain.setLayout(null);\n    pain.setLayout(layout);\n\n//    final int GUI_BETWEEN = Preferences.GUI_BETWEEN;\n//    final int GUI_BIG = Preferences.GUI_BIG;\n//    final int GUI_SMALL = Preferences.GUI_SMALL;\n//    final int BUTTON_WIDTH = Preferences.BUTTON_WIDTH;\n\n//    int top = GUI_BIG;\n//    int left = GUI_BIG;\n//    int right = 0;\n\n    JLabel sketchbookLocationLabel, restartProcessingLabel;\n    JButton browseButton; //, button2;\n    //JComboBox combo;\n//    Dimension d, d2; //, d3;\n//    int h, vmax;\n\n\n    // Sketchbook location:\n    // [...............................]  [ Browse ]\n\n    sketchbookLocationLabel = new JLabel(Language.text(\"preferences.sketchbook_location\")+\":\");\n//    pain.add(label);\n//    d = label.getPreferredSize();\n//    label.setBounds(left, top, d.width, d.height);\n//    top += d.height; // + GUI_SMALL;\n\n    sketchbookLocationField = new JTextField(40);\n//    pain.add(sketchbookLocationField);\n//    d = sketchbookLocationField.getPreferredSize();\n\n    browseButton = new JButton(Preferences.PROMPT_BROWSE);\n    browseButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n          File dflt = new File(sketchbookLocationField.getText());\n          PApplet.selectFolder(Language.text(\"preferences.sketchbook_location.popup\"),\n                               \"sketchbookCallback\", dflt,\n                               PreferencesFrame.this, dialog);\n        }\n      });\n//    pain.add(button);\n//    d2 = button.getPreferredSize();\n\n    // take max height of all components to vertically align em\n//    vmax = Math.max(d.height, d2.height);\n//    sketchbookLocationField.setBounds(left, top + (vmax-d.height)/2,\n//                                      d.width, d.height);\n//    h = left + d.width + GUI_SMALL;\n//    button.setBounds(h, top + (vmax-d2.height)/2,\n//                     d2.width, d2.height);\n\n//    right = Math.max(right, h + d2.width + GUI_BIG);\n//    top += vmax + GUI_BETWEEN;\n\n\n    // Language: [ English ] (requires restart of Processing)\n\n\n\n//    Container languageBox = Box.createHorizontalBox();\n    JLabel languageLabel = new JLabel(Language.text(\"preferences.language\")+\": \");\n//    languageBox.add(languageLabel);\n    languageSelectionBox = new JComboBox<String>();\n\n    Map<String, String> languages = Language.getLanguages();\n    String[] languageSelection = new String[languages.size()];\n    languageSelection[0] = languages.get(Language.getLanguage());\n    int i = 1;\n    for (Map.Entry<String, String> lang : languages.entrySet()) {\n      if(!lang.getKey().equals(Language.getLanguage())){\n        languageSelection[i++] = lang.getValue();\n      }\n    }\n    languageSelectionBox.setModel(new DefaultComboBoxModel<String>(languageSelection));\n//    languageBox.add(languageSelectionBox);\n    restartProcessingLabel = new JLabel(\" (\"+Language.text(\"preferences.requires_restart\")+\")\");\n//    languageBox.add(lRestartProcessing);\n//    pain.add(languageBox);\n//    d = languageBox.getPreferredSize();\n//    languageBox.setBounds(left, top, d.width, d.height);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // Editor and console font [ Source Code Pro ]\n\n    // Nevermind on this for now.. Java doesn't seem to have a method for\n    // enumerating only the fixed-width (monospaced) fonts. To do this\n    // properly, we'd need to list the fonts, and compare the metrics of\n    // i and M for each. When they're identical (and not degenerate),\n    // we'd call that font fixed width. That's all a very expensive set of\n    // operations, so it should also probably be cached between runs and\n    // updated in the background.\n\n//    Container fontBox = Box.createHorizontalBox();\n    JLabel fontLabel = new JLabel(Language.text(\"preferences.editor_and_console_font\")+\": \");\n    final String fontTip = \"<html>\" + Language.text(\"preferences.editor_and_console_font.tip\");\n    fontLabel.setToolTipText(fontTip);\n//    fontBox.add(fontLabel);\n    // get a wide name in there before getPreferredSize() is called\n    fontSelectionBox = new JComboBox<String>(new String[] { Toolkit.getMonoFontName() });\n    fontSelectionBox.setToolTipText(fontTip);\n//    fontSelectionBox.addItem(Toolkit.getMonoFont(size, style));\n    //updateDisplayList();\n    fontSelectionBox.setEnabled(false);  // don't enable until fonts are loaded\n//    fontBox.add(fontSelectionBox);\n////    fontBox.add(Box.createHorizontalGlue());\n//    pain.add(fontBox);\n//    d = fontBox.getPreferredSize();\n//    fontBox.setBounds(left, top, d.width + 150, d.height);\n////    fontBox.setBounds(left, top, dialog.getWidth() - left*2, d.height);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // Editor font size [ 12 ]  Console font size [ 10 ]\n\n//    Container box = Box.createHorizontalBox();\n    JLabel fontSizelabel = new JLabel(Language.text(\"preferences.editor_font_size\")+\": \");\n//    box.add(fontSizelabel);\n    fontSizeField = new JComboBox<Integer>(FONT_SIZES);\n////    fontSizeField = new JComboBox<Integer>(FONT_SIZES);\n    fontSizeField.setEditable(true);\n//    box.add(fontSizeField);\n//    box.add(Box.createHorizontalStrut(GUI_BETWEEN));\n\n    JLabel consoleFontSizeLabel = new JLabel(Language.text(\"preferences.console_font_size\")+\": \");\n\n//    box.add(consoleSizeLabel);\n////    consoleSizeField = new JComboBox<Integer>(FONT_SIZES);\n    consoleFontSizeField = new JComboBox<Integer>(FONT_SIZES);\n    consoleFontSizeField.setEditable(true);\n//    box.add(consoleSizeField);\n\n//    pain.add(box);\n//    d = box.getPreferredSize();\n//    box.setBounds(left, top, d.width, d.height);\n    fontSizeField.setSelectedItem(Preferences.getFont(\"editor.font.size\"));\n//    top += d.height + GUI_BETWEEN;\n\n\n//    Container colorBox = Box.createHorizontalBox();\n\n    JLabel backgroundColorLabel = new JLabel(Language.text(\"preferences.background_color\")+\": \");\n//    colorBox.add(backgroundColorLabel);\n\n    final String colorTip = \"<html>\" + Language.text(\"preferences.background_color.tip\");\n    backgroundColorLabel.setToolTipText(colorTip);\n\n    presentColor = new JTextField(\"      \");\n    presentColor.setOpaque(true);\n    presentColor.setEnabled(false);\n    presentColor.setBorder(new CompoundBorder(BorderFactory.createMatteBorder(\n        1, 1, 0, 0, new Color(195, 195, 195)), BorderFactory.createMatteBorder(\n        0, 0, 1, 1, new Color(54, 54, 54))));\n    presentColor.setBackground(Preferences.getColor(\"run.present.bgcolor\"));\n\n    presentColorHex = new JTextField(6);\n    presentColorHex\n        .setText(Preferences.get(\"run.present.bgcolor\").substring(1));\n    presentColorHex.getDocument().addDocumentListener(new DocumentListener() {\n\n      @Override\n      public void removeUpdate(DocumentEvent e) {\n        final String colorValue = presentColorHex.getText().toUpperCase();\n        if (colorValue.length() == 7 && (colorValue.startsWith(\"#\")))\n          EventQueue.invokeLater(new Runnable() {\n            public void run() {\n              presentColorHex.setText(colorValue.substring(1));\n            }\n          });\n        if (colorValue.length() == 6\n            && colorValue.matches(\"[0123456789ABCDEF]*\")) {\n          presentColor.setBackground(new Color(Integer.parseInt(\n              colorValue.substring(0, 2), 16), Integer.parseInt(\n              colorValue.substring(2, 4), 16), Integer.parseInt(\n              colorValue.substring(4, 6), 16)));\n          if (!colorValue.equals(presentColorHex.getText()))\n            EventQueue.invokeLater(new Runnable() {\n              public void run() {\n                presentColorHex.setText(colorValue);\n              }\n            });\n        }\n      }\n\n      @Override\n      public void insertUpdate(DocumentEvent e) {\n        final String colorValue = presentColorHex.getText().toUpperCase();\n        if (colorValue.length() == 7 && (colorValue.startsWith(\"#\")))\n          EventQueue.invokeLater(new Runnable() {\n            public void run() {\n              presentColorHex.setText(colorValue.substring(1));\n            }\n          });\n        if (colorValue.length() == 6\n            && colorValue.matches(\"[0123456789ABCDEF]*\")) {\n          presentColor.setBackground(new Color(Integer.parseInt(\n              colorValue.substring(0, 2), 16), Integer.parseInt(\n              colorValue.substring(2, 4), 16), Integer.parseInt(\n              colorValue.substring(4, 6), 16)));\n          if (!colorValue.equals(presentColorHex.getText()))\n            EventQueue.invokeLater(new Runnable() {\n              public void run() {\n                presentColorHex.setText(colorValue);\n              }\n            });\n        }\n      }\n\n      @Override public void changedUpdate(DocumentEvent e) {}\n    });\n\n    selector = new ColorChooser(dialog, false,\n        Preferences.getColor(\"run.present.bgcolor\"), Language.text(\"prompt.ok\"),\n        new ActionListener() {\n          @Override\n          public void actionPerformed(ActionEvent e) {\n            String colorValue = selector.getHexColor();\n            presentColorHex.setText(colorValue.substring(1));\n            presentColor.setBackground(new Color(Integer.parseInt(\n                colorValue.substring(1, 3), 16), Integer.parseInt(\n                colorValue.substring(3, 5), 16), Integer.parseInt(\n                colorValue.substring(5, 7), 16)));\n            selector.hide();\n          }\n        });\n\n    presentColor.addMouseListener(new MouseAdapter() {\n\n      @Override\n      public void mouseExited(MouseEvent e) {\n        dialog.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\n      }\n\n      @Override\n      public void mouseEntered(MouseEvent e) {\n        dialog.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n      }\n\n      @Override\n      public void mouseClicked(MouseEvent e) {\n        selector.show();\n      }\n    });\n\n    JLabel hashLabel = new JLabel(\"#\");\n//    colorBox.add(hashLabel);\n//    colorBox.add(presentColorHex);\n//    colorBox.add(Box.createHorizontalStrut(GUI_SMALL + 2 / 3 * GUI_SMALL));\n//    colorBox.add(presentColor);\n\n//    pain.add(colorBox);\n//    d = colorBox.getPreferredSize();\n//    colorBox.setBounds(left, top, d.width, d.height);\n\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Use smooth text in editor window\n\n    editorAntialiasBox = new JCheckBox(Language.text(\"preferences.use_smooth_text\"));\n//    pain.add(editorAntialiasBox);\n//    d = editorAntialiasBox.getPreferredSize();\n////     adding +10 because ubuntu + jre 1.5 truncating items\n//    editorAntialiasBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n\n    // [ ] Enable complex text input (for Japanese et al, requires restart)\n\n    inputMethodBox =\n      new JCheckBox(Language.text(\"preferences.enable_complex_text_input\")+\n                    \" (\"+Language.text(\"preferences.enable_complex_text_input_example\")+\n                    \", \"+Language.text(\"preferences.requires_restart\")+\")\");\n//    pain.add(inputMethodBox);\n//    d = inputMethodBox.getPreferredSize();\n//    inputMethodBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Continuously check for errors - PDE X\n\n    errorCheckerBox =\n      new JCheckBox(Language.text(\"preferences.continuously_check\"));\n\n//    pain.add(errorCheckerBox);\n//    d = errorCheckerBox.getPreferredSize();\n//    errorCheckerBox.setBounds(left, top, d.width + 10, d.height);\n    ////right = Math.max(right, left + d.width);\n   // //top += d.height + GUI_BETWEEN;\n//    int warningLeft = left + d.width;\n\n\n    // [ ] Show Warnings - PDE X\n\n    warningsCheckerBox =\n      new JCheckBox(Language.text(\"preferences.show_warnings\"));\n//    pain.add(warningsCheckerBox);\n//    d = warningsCheckerBox.getPreferredSize();\n//    warningsCheckerBox.setBounds(warningLeft, top, d.width + 10, d.height);\n//    right = Math.max(right, warningLeft + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Enable Code Completion - PDE X\n\n    codeCompletionBox =\n      new JCheckBox(Language.text(\"preferences.code_completion\") +\n                    \" Ctrl-\" + Language.text(\"preferences.cmd_space\"));\n//    pain.add(codeCompletionBox);\n//    d = codeCompletionBox.getPreferredSize();\n//    codeCompletionBox.setBounds(left, top, d.width + 10, d.height);\n////    codeCompletionBox.addActionListener(new ActionListener() {\n////\n////      @Override\n////      public void actionPerformed(ActionEvent e) {\n////        // Disble code completion trigger option if completion is disabled\n////        codeCompletionTriggerBox.setEnabled(codeCompletionBox.isSelected());\n////      }\n////    });\n\n////    int toggleLeft = left + d.width;\n\n    //// [ ] Toggle Code Completion Trigger - PDE X. No longer needed (Manindra)\n\n////    codeCompletionTriggerBox =\n////      new JCheckBox(Language.text(\"preferences.trigger_with\")+\" Ctrl-\"+Language.text(\"preferences.cmd_space\"));\n////    pain.add(codeCompletionTriggerBox);\n////    d = codeCompletionTriggerBox.getPreferredSize();\n////    codeCompletionTriggerBox.setBounds(toggleLeft, top, d.width + 10, d.height);\n////    right = Math.max(right, toggleLeft + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n    // [ ] Show import suggestions - PDE X\n\n    importSuggestionsBox =\n      new JCheckBox(Language.text(\"preferences.suggest_imports\"));\n//    pain.add(importSuggestionsBox);\n//    d = importSuggestionsBox.getPreferredSize();\n//    importSuggestionsBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n    // [ ] Increase maximum available memory to [______] MB\n\n//    Container memoryBox = Box.createHorizontalBox();\n    memoryOverrideBox = new JCheckBox(Language.text(\"preferences.increase_max_memory\")+\": \");\n//    memoryBox.add(memoryOverrideBox);\n    memoryField = new JTextField(4);\n    memoryOverrideBox.addChangeListener(new ChangeListener() {\n      @Override\n      public void stateChanged(ChangeEvent e) {\n        memoryField.setEnabled(memoryOverrideBox.isSelected());\n      }\n    });\n//    memoryBox.add(memoryField);\n//    memoryBox.add(new JLabel(\" MB\"));\n//    pain.add(memoryBox);\n//    d = memoryBox.getPreferredSize();\n//    memoryBox.setBounds(left, top, d.width, d.height);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Delete previous application folder on export\n\n    deletePreviousBox =\n      new JCheckBox(Language.text(\"preferences.delete_previous_folder_on_export\"));\n//    pain.add(deletePreviousBox);\n//    d = deletePreviousBox.getPreferredSize();\n//    deletePreviousBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Check for updates on startup\n\n    checkUpdatesBox =\n      new JCheckBox(Language.text(\"preferences.check_for_updates_on_startup\"));\n//    pain.add(checkUpdatesBox);\n//    d = checkUpdatesBox.getPreferredSize();\n//    checkUpdatesBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // Run sketches on display [  1 ]\n\n//    Container displayBox = Box.createHorizontalBox();\n    JLabel displayLabel = new JLabel(Language.text(\"preferences.run_sketches_on_display\")+\": \");\n    final String tip = \"<html>\" + Language.text(\"preferences.run_sketches_on_display.tip\");\n    displayLabel.setToolTipText(tip);\n//    displayBox.add(displayLabel);\n    displaySelectionBox = new JComboBox<String>();\n    updateDisplayList();  // needs to happen here for getPreferredSize()\n//    displayBox.add(displaySelectionBox);\n//    pain.add(displayBox);\n//    d = displayBox.getPreferredSize();\n//    displayBox.setBounds(left, top, d.width, d.height);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Automatically associate .pde files with Processing\n\n//    if (Base.isWindows()) {\n      autoAssociateBox =\n        new JCheckBox(Language.text(\"preferences.automatically_associate_pde_files\"));\n      autoAssociateBox.setVisible(false);\n//      pain.add(autoAssociateBox);\n//      d = autoAssociateBox.getPreferredSize();\n//      autoAssociateBox.setBounds(left, top, d.width + 10, d.height);\n//      right = Math.max(right, left + d.width);\n//      top += d.height + GUI_BETWEEN;\n//    }\n\n\n    // More preferences are in the ...\n\n    JLabel morePreferenceLabel = new JLabel(Language.text(\"preferences.file\") + \":\");\n//    pain.add(morePreferenceLabel);\n//    d = morePreferenceLabel.getPreferredSize();\n    morePreferenceLabel.setForeground(Color.gray);\n//    morePreferenceLabel.setBounds(left, top, d.width, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height; // + GUI_SMALL;\n\n    JLabel preferencePathLabel = new JLabel(Preferences.getPreferencesPath());\n    final JLabel clickable = preferencePathLabel;\n    preferencePathLabel.addMouseListener(new MouseAdapter() {\n        public void mousePressed(MouseEvent e) {\n          Base.openFolder(Base.getSettingsFolder());\n        }\n\n        public void mouseEntered(MouseEvent e) {\n          clickable.setForeground(new Color(0, 0, 140));\n        }\n\n        public void mouseExited(MouseEvent e) {\n          clickable.setForeground(Color.BLACK);\n        }\n      });\n//    pain.add(preferencePathLabel);\n//    d = preferencePathLabel.getPreferredSize();\n//    preferencePathLabel.setBounds(left, top, d.width, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height;\n\n    JLabel preferenceHintLabel = new JLabel(\"(\" + Language.text(\"preferences.file.hint\") + \")\");\n//    pain.add(preferenceHintLabel);\n//    d = preferenceHintLabel.getPreferredSize();\n    preferenceHintLabel.setForeground(Color.gray);\n//    preferenceHintLabel.setBounds(left, top, d.width, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height; // + GUI_SMALL;\n\n\n    // [  OK  ] [ Cancel ]  maybe these should be next to the message?\n\n    JButton okButton = new JButton(Preferences.PROMPT_OK);\n    okButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n          applyFrame();\n          disposeFrame();\n        }\n      });\n//    pain.add(okButton);\n//    d2 = okButton.getPreferredSize();\n//    int BUTTON_HEIGHT = d2.height;\n\n//    h = right - (BUTTON_WIDTH + GUI_SMALL + BUTTON_WIDTH);\n//    okButton.setBounds(h, top, BUTTON_WIDTH, BUTTON_HEIGHT);\n//    h += BUTTON_WIDTH + GUI_SMALL;\n\n    JButton cancelButton = new JButton(Preferences.PROMPT_CANCEL);\n    cancelButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n          disposeFrame();\n        }\n      });\n//    pain.add(cancelButton);\n//    cancelButton.setBounds(h, top, BUTTON_WIDTH, BUTTON_HEIGHT);\n\n//    top += BUTTON_HEIGHT + GUI_BETWEEN;\n\n\n    // finish up\n\n//    wide = right + GUI_BIG;\n//    high = top + GUI_SMALL;\n    layout.setHorizontalGroup(layout.createParallelGroup()\n      .addComponent(sketchbookLocationLabel)\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(sketchbookLocationField)\n                  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n                  .addComponent(browseButton))\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(languageLabel)\n                  .addComponent(languageSelectionBox,GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addComponent(restartProcessingLabel))\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(fontLabel)\n                  .addComponent(fontSelectionBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(fontSizelabel)\n                  .addComponent(fontSizeField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)\n                  .addComponent(consoleFontSizeLabel)\n                  .addComponent(consoleFontSizeField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n      )\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(backgroundColorLabel)\n                  .addComponent(hashLabel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addComponent(presentColorHex, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n                  .addComponent(presentColor, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n      .addComponent(editorAntialiasBox)\n      .addComponent(inputMethodBox)\n      .addComponent(errorCheckerBox)\n      .addComponent(warningsCheckerBox)\n      .addComponent(codeCompletionBox)\n      .addComponent(importSuggestionsBox)\n      .addGroup(layout.createSequentialGroup()\n                    .addComponent(memoryOverrideBox)\n                    .addComponent(memoryField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n      .addComponent(deletePreviousBox)\n      .addComponent(whinyBox)\n      .addComponent(checkUpdatesBox)\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(displayLabel)\n                  .addComponent(displaySelectionBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n      )\n      .addComponent(autoAssociateBox)\n      .addComponent(morePreferenceLabel)\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(preferencePathLabel)\n                  .addGap(0, 100, 200)\n                  .addComponent(okButton, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)\n                  .addComponent(cancelButton, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n      )\n      .addComponent(preferenceHintLabel)\n    );\n\n    // Making sure that Ok and Cancel buttons are of the same size\n    layout.linkSize(okButton, cancelButton);\n\n    layout.setVerticalGroup(layout\n      .createSequentialGroup()\n      .addComponent(sketchbookLocationLabel)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup()\n                  .addComponent(sketchbookLocationField)\n                  .addComponent(browseButton))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(languageLabel)\n                  .addComponent(languageSelectionBox)\n                  .addComponent(restartProcessingLabel))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER).\n                  addComponent(fontLabel)\n                  .addComponent(fontSelectionBox))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(fontSizelabel)\n                  .addComponent(fontSizeField)\n                  .addComponent(consoleFontSizeLabel)\n                  .addComponent(consoleFontSizeField))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(backgroundColorLabel)\n                  .addComponent(hashLabel)\n                  .addComponent(presentColorHex)\n                  .addComponent(presentColor))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(editorAntialiasBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(inputMethodBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(errorCheckerBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(warningsCheckerBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(codeCompletionBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(importSuggestionsBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup()\n                .addComponent(memoryOverrideBox)\n                .addComponent(memoryField))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(deletePreviousBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(whinyBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(checkUpdatesBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(displayLabel)\n                  .addComponent(displaySelectionBox))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(autoAssociateBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(morePreferenceLabel)\n      .addComponent(preferencePathLabel)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)\n                  .addComponent(preferenceHintLabel)\n                  .addComponent(okButton)\n                  .addComponent(cancelButton))\n      .addContainerGap()\n      );\n    dialog.getRootPane().setDefaultButton(okButton);\n\n    if (Base.isWindows()){\n      autoAssociateBox.setVisible(true);\n    }\n    // closing the window is same as hitting cancel button\n\n    dialog.addWindowListener(new WindowAdapter() {\n      public void windowClosing(WindowEvent e) {\n        disposeFrame();\n      }\n    });\n\n    ActionListener disposer = new ActionListener() {\n      public void actionPerformed(ActionEvent actionEvent) {\n        disposeFrame();\n      }\n    };\n\n    Toolkit.registerWindowCloseKeys(dialog.getRootPane(), disposer);\n    Toolkit.setIcon(dialog);\n    dialog.pack();\n    dialog.setLocationRelativeTo(null);\n\n\n    // handle window closing commands for ctrl/cmd-W or hitting ESC.\n\n    pain.addKeyListener(new KeyAdapter() {\n        public void keyPressed(KeyEvent e) {\n          //System.out.println(e);\n          KeyStroke wc = Toolkit.WINDOW_CLOSE_KEYSTROKE;\n          if ((e.getKeyCode() == KeyEvent.VK_ESCAPE) ||\n              (KeyStroke.getKeyStrokeForEvent(e).equals(wc))) {\n            disposeFrame();\n          }\n        }\n      });\n  }","id":8371,"modified_method":"public PreferencesFrame(Base base) {\n    this.base = base;\n    //dialog = new JDialog(editor, \"Preferences\", true);\n    dialog = new JFrame(Language.text(\"preferences\"));\n    dialog.setResizable(false);\n    Container pain = dialog.getContentPane();\n    layout = new GroupLayout(pain);// pain ??\n//    layout.setAutoCreateGaps(true);\n    layout.setAutoCreateContainerGaps(true);\n\n//    pain.setLayout(null);\n    pain.setLayout(layout);\n\n//    final int GUI_BETWEEN = Preferences.GUI_BETWEEN;\n//    final int GUI_BIG = Preferences.GUI_BIG;\n//    final int GUI_SMALL = Preferences.GUI_SMALL;\n//    final int BUTTON_WIDTH = Preferences.BUTTON_WIDTH;\n\n//    int top = GUI_BIG;\n//    int left = GUI_BIG;\n//    int right = 0;\n\n    JLabel sketchbookLocationLabel, restartProcessingLabel;\n    JButton browseButton; //, button2;\n    //JComboBox combo;\n//    Dimension d, d2; //, d3;\n//    int h, vmax;\n\n\n    // Sketchbook location:\n    // [...............................]  [ Browse ]\n\n    sketchbookLocationLabel = new JLabel(Language.text(\"preferences.sketchbook_location\")+\":\");\n//    pain.add(label);\n//    d = label.getPreferredSize();\n//    label.setBounds(left, top, d.width, d.height);\n//    top += d.height; // + GUI_SMALL;\n\n    sketchbookLocationField = new JTextField(40);\n//    pain.add(sketchbookLocationField);\n//    d = sketchbookLocationField.getPreferredSize();\n\n    browseButton = new JButton(Preferences.PROMPT_BROWSE);\n    browseButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n          File dflt = new File(sketchbookLocationField.getText());\n          PApplet.selectFolder(Language.text(\"preferences.sketchbook_location.popup\"),\n                               \"sketchbookCallback\", dflt,\n                               PreferencesFrame.this, dialog);\n        }\n      });\n//    pain.add(button);\n//    d2 = button.getPreferredSize();\n\n    // take max height of all components to vertically align em\n//    vmax = Math.max(d.height, d2.height);\n//    sketchbookLocationField.setBounds(left, top + (vmax-d.height)/2,\n//                                      d.width, d.height);\n//    h = left + d.width + GUI_SMALL;\n//    button.setBounds(h, top + (vmax-d2.height)/2,\n//                     d2.width, d2.height);\n\n//    right = Math.max(right, h + d2.width + GUI_BIG);\n//    top += vmax + GUI_BETWEEN;\n\n\n    // Language: [ English ] (requires restart of Processing)\n\n\n\n//    Container languageBox = Box.createHorizontalBox();\n    JLabel languageLabel = new JLabel(Language.text(\"preferences.language\")+\": \");\n//    languageBox.add(languageLabel);\n    languageSelectionBox = new JComboBox<String>();\n\n    Map<String, String> languages = Language.getLanguages();\n    String[] languageSelection = new String[languages.size()];\n    languageSelection[0] = languages.get(Language.getLanguage());\n    int i = 1;\n    for (Map.Entry<String, String> lang : languages.entrySet()) {\n      if(!lang.getKey().equals(Language.getLanguage())){\n        languageSelection[i++] = lang.getValue();\n      }\n    }\n    languageSelectionBox.setModel(new DefaultComboBoxModel<String>(languageSelection));\n//    languageBox.add(languageSelectionBox);\n    restartProcessingLabel = new JLabel(\" (\"+Language.text(\"preferences.requires_restart\")+\")\");\n//    languageBox.add(lRestartProcessing);\n//    pain.add(languageBox);\n//    d = languageBox.getPreferredSize();\n//    languageBox.setBounds(left, top, d.width, d.height);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // Editor and console font [ Source Code Pro ]\n\n    // Nevermind on this for now.. Java doesn't seem to have a method for\n    // enumerating only the fixed-width (monospaced) fonts. To do this\n    // properly, we'd need to list the fonts, and compare the metrics of\n    // i and M for each. When they're identical (and not degenerate),\n    // we'd call that font fixed width. That's all a very expensive set of\n    // operations, so it should also probably be cached between runs and\n    // updated in the background.\n\n//    Container fontBox = Box.createHorizontalBox();\n    JLabel fontLabel = new JLabel(Language.text(\"preferences.editor_and_console_font\")+\": \");\n    final String fontTip = \"<html>\" + Language.text(\"preferences.editor_and_console_font.tip\");\n    fontLabel.setToolTipText(fontTip);\n//    fontBox.add(fontLabel);\n    // get a wide name in there before getPreferredSize() is called\n    fontSelectionBox = new JComboBox<String>(new String[] { Toolkit.getMonoFontName() });\n    fontSelectionBox.setToolTipText(fontTip);\n//    fontSelectionBox.addItem(Toolkit.getMonoFont(size, style));\n    //updateDisplayList();\n    fontSelectionBox.setEnabled(false);  // don't enable until fonts are loaded\n//    fontBox.add(fontSelectionBox);\n////    fontBox.add(Box.createHorizontalGlue());\n//    pain.add(fontBox);\n//    d = fontBox.getPreferredSize();\n//    fontBox.setBounds(left, top, d.width + 150, d.height);\n////    fontBox.setBounds(left, top, dialog.getWidth() - left*2, d.height);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // Editor font size [ 12 ]  Console font size [ 10 ]\n\n//    Container box = Box.createHorizontalBox();\n    JLabel fontSizelabel = new JLabel(Language.text(\"preferences.editor_font_size\")+\": \");\n//    box.add(fontSizelabel);\n    fontSizeField = new JComboBox<Integer>(FONT_SIZES);\n////    fontSizeField = new JComboBox<Integer>(FONT_SIZES);\n    fontSizeField.setEditable(true);\n//    box.add(fontSizeField);\n//    box.add(Box.createHorizontalStrut(GUI_BETWEEN));\n\n    JLabel consoleFontSizeLabel = new JLabel(Language.text(\"preferences.console_font_size\")+\": \");\n\n//    box.add(consoleSizeLabel);\n////    consoleSizeField = new JComboBox<Integer>(FONT_SIZES);\n    consoleFontSizeField = new JComboBox<Integer>(FONT_SIZES);\n    consoleFontSizeField.setEditable(true);\n//    box.add(consoleSizeField);\n\n//    pain.add(box);\n//    d = box.getPreferredSize();\n//    box.setBounds(left, top, d.width, d.height);\n    fontSizeField.setSelectedItem(Preferences.getFont(\"editor.font.size\"));\n//    top += d.height + GUI_BETWEEN;\n\n\n//    Container colorBox = Box.createHorizontalBox();\n\n    JLabel backgroundColorLabel = new JLabel(Language.text(\"preferences.background_color\")+\": \");\n//    colorBox.add(backgroundColorLabel);\n\n    final String colorTip = \"<html>\" + Language.text(\"preferences.background_color.tip\");\n    backgroundColorLabel.setToolTipText(colorTip);\n\n    presentColor = new JTextField(\"      \");\n    presentColor.setOpaque(true);\n    presentColor.setEnabled(false);\n    presentColor.setBorder(new CompoundBorder(BorderFactory.createMatteBorder(\n        1, 1, 0, 0, new Color(195, 195, 195)), BorderFactory.createMatteBorder(\n        0, 0, 1, 1, new Color(54, 54, 54))));\n    presentColor.setBackground(Preferences.getColor(\"run.present.bgcolor\"));\n\n    presentColorHex = new JTextField(6);\n    presentColorHex\n        .setText(Preferences.get(\"run.present.bgcolor\").substring(1));\n    presentColorHex.getDocument().addDocumentListener(new DocumentListener() {\n\n      @Override\n      public void removeUpdate(DocumentEvent e) {\n        final String colorValue = presentColorHex.getText().toUpperCase();\n        if (colorValue.length() == 7 && (colorValue.startsWith(\"#\")))\n          EventQueue.invokeLater(new Runnable() {\n            public void run() {\n              presentColorHex.setText(colorValue.substring(1));\n            }\n          });\n        if (colorValue.length() == 6\n            && colorValue.matches(\"[0123456789ABCDEF]*\")) {\n          presentColor.setBackground(new Color(Integer.parseInt(\n              colorValue.substring(0, 2), 16), Integer.parseInt(\n              colorValue.substring(2, 4), 16), Integer.parseInt(\n              colorValue.substring(4, 6), 16)));\n          if (!colorValue.equals(presentColorHex.getText()))\n            EventQueue.invokeLater(new Runnable() {\n              public void run() {\n                presentColorHex.setText(colorValue);\n              }\n            });\n        }\n      }\n\n      @Override\n      public void insertUpdate(DocumentEvent e) {\n        final String colorValue = presentColorHex.getText().toUpperCase();\n        if (colorValue.length() == 7 && (colorValue.startsWith(\"#\")))\n          EventQueue.invokeLater(new Runnable() {\n            public void run() {\n              presentColorHex.setText(colorValue.substring(1));\n            }\n          });\n        if (colorValue.length() == 6\n            && colorValue.matches(\"[0123456789ABCDEF]*\")) {\n          presentColor.setBackground(new Color(Integer.parseInt(\n              colorValue.substring(0, 2), 16), Integer.parseInt(\n              colorValue.substring(2, 4), 16), Integer.parseInt(\n              colorValue.substring(4, 6), 16)));\n          if (!colorValue.equals(presentColorHex.getText()))\n            EventQueue.invokeLater(new Runnable() {\n              public void run() {\n                presentColorHex.setText(colorValue);\n              }\n            });\n        }\n      }\n\n      @Override public void changedUpdate(DocumentEvent e) {}\n    });\n\n    selector = new ColorChooser(dialog, false,\n        Preferences.getColor(\"run.present.bgcolor\"), Language.text(\"prompt.ok\"),\n        new ActionListener() {\n          @Override\n          public void actionPerformed(ActionEvent e) {\n            String colorValue = selector.getHexColor();\n            presentColorHex.setText(colorValue.substring(1));\n            presentColor.setBackground(new Color(Integer.parseInt(\n                colorValue.substring(1, 3), 16), Integer.parseInt(\n                colorValue.substring(3, 5), 16), Integer.parseInt(\n                colorValue.substring(5, 7), 16)));\n            selector.hide();\n          }\n        });\n\n    presentColor.addMouseListener(new MouseAdapter() {\n\n      @Override\n      public void mouseExited(MouseEvent e) {\n        dialog.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\n      }\n\n      @Override\n      public void mouseEntered(MouseEvent e) {\n        dialog.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n      }\n\n      @Override\n      public void mouseClicked(MouseEvent e) {\n        selector.show();\n      }\n    });\n\n    JLabel hashLabel = new JLabel(\"#\");\n//    colorBox.add(hashLabel);\n//    colorBox.add(presentColorHex);\n//    colorBox.add(Box.createHorizontalStrut(GUI_SMALL + 2 / 3 * GUI_SMALL));\n//    colorBox.add(presentColor);\n\n//    pain.add(colorBox);\n//    d = colorBox.getPreferredSize();\n//    colorBox.setBounds(left, top, d.width, d.height);\n\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Use smooth text in editor window\n\n    editorAntialiasBox = new JCheckBox(Language.text(\"preferences.use_smooth_text\"));\n//    pain.add(editorAntialiasBox);\n//    d = editorAntialiasBox.getPreferredSize();\n////     adding +10 because ubuntu + jre 1.5 truncating items\n//    editorAntialiasBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n\n    // [ ] Enable complex text input (for Japanese et al, requires restart)\n\n    inputMethodBox =\n      new JCheckBox(Language.text(\"preferences.enable_complex_text_input\")+\n                    \" (\"+Language.text(\"preferences.enable_complex_text_input_example\")+\n                    \", \"+Language.text(\"preferences.requires_restart\")+\")\");\n//    pain.add(inputMethodBox);\n//    d = inputMethodBox.getPreferredSize();\n//    inputMethodBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Continuously check for errors - PDE X\n\n    errorCheckerBox =\n      new JCheckBox(Language.text(\"preferences.continuously_check\"));\n\n//    pain.add(errorCheckerBox);\n//    d = errorCheckerBox.getPreferredSize();\n//    errorCheckerBox.setBounds(left, top, d.width + 10, d.height);\n    ////right = Math.max(right, left + d.width);\n   // //top += d.height + GUI_BETWEEN;\n//    int warningLeft = left + d.width;\n\n\n    // [ ] Show Warnings - PDE X\n\n    warningsCheckerBox =\n      new JCheckBox(Language.text(\"preferences.show_warnings\"));\n//    pain.add(warningsCheckerBox);\n//    d = warningsCheckerBox.getPreferredSize();\n//    warningsCheckerBox.setBounds(warningLeft, top, d.width + 10, d.height);\n//    right = Math.max(right, warningLeft + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Enable Code Completion - PDE X\n\n    codeCompletionBox =\n      new JCheckBox(Language.text(\"preferences.code_completion\") +\n                    \" Ctrl-\" + Language.text(\"preferences.cmd_space\"));\n//    pain.add(codeCompletionBox);\n//    d = codeCompletionBox.getPreferredSize();\n//    codeCompletionBox.setBounds(left, top, d.width + 10, d.height);\n////    codeCompletionBox.addActionListener(new ActionListener() {\n////\n////      @Override\n////      public void actionPerformed(ActionEvent e) {\n////        // Disble code completion trigger option if completion is disabled\n////        codeCompletionTriggerBox.setEnabled(codeCompletionBox.isSelected());\n////      }\n////    });\n\n////    int toggleLeft = left + d.width;\n\n    //// [ ] Toggle Code Completion Trigger - PDE X. No longer needed (Manindra)\n\n////    codeCompletionTriggerBox =\n////      new JCheckBox(Language.text(\"preferences.trigger_with\")+\" Ctrl-\"+Language.text(\"preferences.cmd_space\"));\n////    pain.add(codeCompletionTriggerBox);\n////    d = codeCompletionTriggerBox.getPreferredSize();\n////    codeCompletionTriggerBox.setBounds(toggleLeft, top, d.width + 10, d.height);\n////    right = Math.max(right, toggleLeft + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n    // [ ] Show import suggestions - PDE X\n\n    importSuggestionsBox =\n      new JCheckBox(Language.text(\"preferences.suggest_imports\"));\n//    pain.add(importSuggestionsBox);\n//    d = importSuggestionsBox.getPreferredSize();\n//    importSuggestionsBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n    // [ ] Increase maximum available memory to [______] MB\n\n//    Container memoryBox = Box.createHorizontalBox();\n    memoryOverrideBox = new JCheckBox(Language.text(\"preferences.increase_max_memory\")+\": \");\n//    memoryBox.add(memoryOverrideBox);\n    memoryField = new JTextField(4);\n    memoryOverrideBox.addChangeListener(new ChangeListener() {\n      @Override\n      public void stateChanged(ChangeEvent e) {\n        memoryField.setEnabled(memoryOverrideBox.isSelected());\n      }\n    });\n//    memoryBox.add(memoryField);\n//    memoryBox.add(new JLabel(\" MB\"));\n//    pain.add(memoryBox);\n//    d = memoryBox.getPreferredSize();\n//    memoryBox.setBounds(left, top, d.width, d.height);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Delete previous application folder on export\n\n    deletePreviousBox =\n      new JCheckBox(Language.text(\"preferences.delete_previous_folder_on_export\"));\n//    pain.add(deletePreviousBox);\n//    d = deletePreviousBox.getPreferredSize();\n//    deletePreviousBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Check for updates on startup\n\n    checkUpdatesBox =\n      new JCheckBox(Language.text(\"preferences.check_for_updates_on_startup\"));\n//    pain.add(checkUpdatesBox);\n//    d = checkUpdatesBox.getPreferredSize();\n//    checkUpdatesBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // Run sketches on display [  1 ]\n\n//    Container displayBox = Box.createHorizontalBox();\n    JLabel displayLabel = new JLabel(Language.text(\"preferences.run_sketches_on_display\")+\": \");\n    final String tip = \"<html>\" + Language.text(\"preferences.run_sketches_on_display.tip\");\n    displayLabel.setToolTipText(tip);\n//    displayBox.add(displayLabel);\n    displaySelectionBox = new JComboBox<String>();\n    updateDisplayList();  // needs to happen here for getPreferredSize()\n//    displayBox.add(displaySelectionBox);\n//    pain.add(displayBox);\n//    d = displayBox.getPreferredSize();\n//    displayBox.setBounds(left, top, d.width, d.height);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Automatically associate .pde files with Processing\n\n//    if (Base.isWindows()) {\n      autoAssociateBox =\n        new JCheckBox(Language.text(\"preferences.automatically_associate_pde_files\"));\n      autoAssociateBox.setVisible(false);\n//      pain.add(autoAssociateBox);\n//      d = autoAssociateBox.getPreferredSize();\n//      autoAssociateBox.setBounds(left, top, d.width + 10, d.height);\n//      right = Math.max(right, left + d.width);\n//      top += d.height + GUI_BETWEEN;\n//    }\n\n\n    // More preferences are in the ...\n\n    JLabel morePreferenceLabel = new JLabel(Language.text(\"preferences.file\") + \":\");\n//    pain.add(morePreferenceLabel);\n//    d = morePreferenceLabel.getPreferredSize();\n    morePreferenceLabel.setForeground(Color.gray);\n//    morePreferenceLabel.setBounds(left, top, d.width, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height; // + GUI_SMALL;\n\n    JLabel preferencePathLabel = new JLabel(Preferences.getPreferencesPath());\n    final JLabel clickable = preferencePathLabel;\n    preferencePathLabel.addMouseListener(new MouseAdapter() {\n        public void mousePressed(MouseEvent e) {\n          Base.openFolder(Base.getSettingsFolder());\n        }\n\n        public void mouseEntered(MouseEvent e) {\n          clickable.setForeground(new Color(0, 0, 140));\n        }\n\n        public void mouseExited(MouseEvent e) {\n          clickable.setForeground(Color.BLACK);\n        }\n      });\n//    pain.add(preferencePathLabel);\n//    d = preferencePathLabel.getPreferredSize();\n//    preferencePathLabel.setBounds(left, top, d.width, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height;\n\n    JLabel preferenceHintLabel = new JLabel(\"(\" + Language.text(\"preferences.file.hint\") + \")\");\n//    pain.add(preferenceHintLabel);\n//    d = preferenceHintLabel.getPreferredSize();\n    preferenceHintLabel.setForeground(Color.gray);\n//    preferenceHintLabel.setBounds(left, top, d.width, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height; // + GUI_SMALL;\n\n\n    // [  OK  ] [ Cancel ]  maybe these should be next to the message?\n\n    JButton okButton = new JButton(Preferences.PROMPT_OK);\n    okButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n          applyFrame();\n          disposeFrame();\n        }\n      });\n//    pain.add(okButton);\n//    d2 = okButton.getPreferredSize();\n//    int BUTTON_HEIGHT = d2.height;\n\n//    h = right - (BUTTON_WIDTH + GUI_SMALL + BUTTON_WIDTH);\n//    okButton.setBounds(h, top, BUTTON_WIDTH, BUTTON_HEIGHT);\n//    h += BUTTON_WIDTH + GUI_SMALL;\n\n    JButton cancelButton = new JButton(Preferences.PROMPT_CANCEL);\n    cancelButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n          disposeFrame();\n        }\n      });\n//    pain.add(cancelButton);\n//    cancelButton.setBounds(h, top, BUTTON_WIDTH, BUTTON_HEIGHT);\n\n//    top += BUTTON_HEIGHT + GUI_BETWEEN;\n\n\n    // finish up\n\n//    wide = right + GUI_BIG;\n//    high = top + GUI_SMALL;\n    layout.setHorizontalGroup(layout.createParallelGroup()\n      .addComponent(sketchbookLocationLabel)\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(sketchbookLocationField)\n                  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n                  .addComponent(browseButton))\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(languageLabel)\n                  .addComponent(languageSelectionBox,GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addComponent(restartProcessingLabel))\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(fontLabel)\n                  .addComponent(fontSelectionBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(fontSizelabel)\n                  .addComponent(fontSizeField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)\n                  .addComponent(consoleFontSizeLabel)\n                  .addComponent(consoleFontSizeField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n      )\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(backgroundColorLabel)\n                  .addComponent(hashLabel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addComponent(presentColorHex, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n                  .addComponent(presentColor, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n      .addComponent(editorAntialiasBox)\n      .addComponent(inputMethodBox)\n      .addComponent(errorCheckerBox)\n      .addComponent(warningsCheckerBox)\n      .addComponent(codeCompletionBox)\n      .addComponent(importSuggestionsBox)\n      .addGroup(layout.createSequentialGroup()\n                    .addComponent(memoryOverrideBox)\n                    .addComponent(memoryField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n      .addComponent(deletePreviousBox)\n      .addComponent(checkUpdatesBox)\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(displayLabel)\n                  .addComponent(displaySelectionBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n      )\n      .addComponent(autoAssociateBox)\n      .addComponent(morePreferenceLabel)\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(preferencePathLabel)\n                  .addGap(0, 100, 200)\n                  .addComponent(okButton, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)\n                  .addComponent(cancelButton, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n      )\n      .addComponent(preferenceHintLabel)\n    );\n\n    // Making sure that Ok and Cancel buttons are of the same size\n    layout.linkSize(okButton, cancelButton);\n\n    layout.setVerticalGroup(layout\n      .createSequentialGroup()\n      .addComponent(sketchbookLocationLabel)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup()\n                  .addComponent(sketchbookLocationField)\n                  .addComponent(browseButton))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(languageLabel)\n                  .addComponent(languageSelectionBox)\n                  .addComponent(restartProcessingLabel))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER).\n                  addComponent(fontLabel)\n                  .addComponent(fontSelectionBox))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(fontSizelabel)\n                  .addComponent(fontSizeField)\n                  .addComponent(consoleFontSizeLabel)\n                  .addComponent(consoleFontSizeField))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(backgroundColorLabel)\n                  .addComponent(hashLabel)\n                  .addComponent(presentColorHex)\n                  .addComponent(presentColor))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(editorAntialiasBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(inputMethodBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(errorCheckerBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(warningsCheckerBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(codeCompletionBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(importSuggestionsBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup()\n                .addComponent(memoryOverrideBox)\n                .addComponent(memoryField))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(deletePreviousBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(checkUpdatesBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(displayLabel)\n                  .addComponent(displaySelectionBox))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(autoAssociateBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(morePreferenceLabel)\n      .addComponent(preferencePathLabel)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)\n                  .addComponent(preferenceHintLabel)\n                  .addComponent(okButton)\n                  .addComponent(cancelButton))\n      .addContainerGap()\n      );\n    dialog.getRootPane().setDefaultButton(okButton);\n\n    if (Base.isWindows()){\n      autoAssociateBox.setVisible(true);\n    }\n    // closing the window is same as hitting cancel button\n\n    dialog.addWindowListener(new WindowAdapter() {\n      public void windowClosing(WindowEvent e) {\n        disposeFrame();\n      }\n    });\n\n    ActionListener disposer = new ActionListener() {\n      public void actionPerformed(ActionEvent actionEvent) {\n        disposeFrame();\n      }\n    };\n\n    Toolkit.registerWindowCloseKeys(dialog.getRootPane(), disposer);\n    Toolkit.setIcon(dialog);\n    dialog.pack();\n    dialog.setLocationRelativeTo(null);\n\n\n    // handle window closing commands for ctrl/cmd-W or hitting ESC.\n\n    pain.addKeyListener(new KeyAdapter() {\n        public void keyPressed(KeyEvent e) {\n          //System.out.println(e);\n          KeyStroke wc = Toolkit.WINDOW_CLOSE_KEYSTROKE;\n          if ((e.getKeyCode() == KeyEvent.VK_ESCAPE) ||\n              (KeyStroke.getKeyStrokeForEvent(e).equals(wc))) {\n            disposeFrame();\n          }\n        }\n      });\n  }","commit_id":"a3a32326b4ebbcfc90541c9448714e31113726f0","url":"https://github.com/processing/processing"},{"original_method":"public PreferencesFrame(Base base) {\n    this.base = base;\n    //dialog = new JDialog(editor, \"Preferences\", true);\n    dialog = new JFrame(Language.text(\"preferences\"));\n    dialog.setResizable(false);\n    Container pain = dialog.getContentPane();\n    layout = new GroupLayout(pain);// pain ??\n//    layout.setAutoCreateGaps(true);\n    layout.setAutoCreateContainerGaps(true);\n\n//    pain.setLayout(null);\n    pain.setLayout(layout);\n\n//    final int GUI_BETWEEN = Preferences.GUI_BETWEEN;\n//    final int GUI_BIG = Preferences.GUI_BIG;\n//    final int GUI_SMALL = Preferences.GUI_SMALL;\n//    final int BUTTON_WIDTH = Preferences.BUTTON_WIDTH;\n\n//    int top = GUI_BIG;\n//    int left = GUI_BIG;\n//    int right = 0;\n\n    JLabel sketchbookLocationLabel, restartProcessingLabel;\n    JButton browseButton; //, button2;\n    //JComboBox combo;\n//    Dimension d, d2; //, d3;\n//    int h, vmax;\n\n\n    // Sketchbook location:\n    // [...............................]  [ Browse ]\n\n    sketchbookLocationLabel = new JLabel(Language.text(\"preferences.sketchbook_location\")+\":\");\n//    pain.add(label);\n//    d = label.getPreferredSize();\n//    label.setBounds(left, top, d.width, d.height);\n//    top += d.height; // + GUI_SMALL;\n\n    sketchbookLocationField = new JTextField(40);\n//    pain.add(sketchbookLocationField);\n//    d = sketchbookLocationField.getPreferredSize();\n\n    browseButton = new JButton(Preferences.PROMPT_BROWSE);\n    browseButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n          File dflt = new File(sketchbookLocationField.getText());\n          PApplet.selectFolder(Language.text(\"preferences.sketchbook_location.popup\"),\n                               \"sketchbookCallback\", dflt,\n                               PreferencesFrame.this, dialog);\n        }\n      });\n//    pain.add(button);\n//    d2 = button.getPreferredSize();\n\n    // take max height of all components to vertically align em\n//    vmax = Math.max(d.height, d2.height);\n//    sketchbookLocationField.setBounds(left, top + (vmax-d.height)/2,\n//                                      d.width, d.height);\n//    h = left + d.width + GUI_SMALL;\n//    button.setBounds(h, top + (vmax-d2.height)/2,\n//                     d2.width, d2.height);\n\n//    right = Math.max(right, h + d2.width + GUI_BIG);\n//    top += vmax + GUI_BETWEEN;\n\n\n    // Language: [ English ] (requires restart of Processing)\n\n\n\n//    Container languageBox = Box.createHorizontalBox();\n    JLabel languageLabel = new JLabel(Language.text(\"preferences.language\")+\": \");\n//    languageBox.add(languageLabel);\n    languageSelectionBox = new JComboBox<String>();\n\n    Map<String, String> languages = Language.getLanguages();\n    String[] languageSelection = new String[languages.size()];\n    languageSelection[0] = languages.get(Language.getLanguage());\n    int i = 1;\n    for (Map.Entry<String, String> lang : languages.entrySet()) {\n      if(!lang.getKey().equals(Language.getLanguage())){\n        languageSelection[i++] = lang.getValue();\n      }\n    }\n    languageSelectionBox.setModel(new DefaultComboBoxModel<String>(languageSelection));\n//    languageBox.add(languageSelectionBox);\n    restartProcessingLabel = new JLabel(\" (\"+Language.text(\"preferences.requires_restart\")+\")\");\n//    languageBox.add(lRestartProcessing);\n//    pain.add(languageBox);\n//    d = languageBox.getPreferredSize();\n//    languageBox.setBounds(left, top, d.width, d.height);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // Editor and console font [ Source Code Pro ]\n\n    // Nevermind on this for now.. Java doesn't seem to have a method for\n    // enumerating only the fixed-width (monospaced) fonts. To do this\n    // properly, we'd need to list the fonts, and compare the metrics of\n    // i and M for each. When they're identical (and not degenerate),\n    // we'd call that font fixed width. That's all a very expensive set of\n    // operations, so it should also probably be cached between runs and\n    // updated in the background.\n\n//    Container fontBox = Box.createHorizontalBox();\n    JLabel fontLabel = new JLabel(Language.text(\"preferences.editor_and_console_font\")+\": \");\n    final String fontTip = \"<html>\" + Language.text(\"preferences.editor_and_console_font.tip\");\n    fontLabel.setToolTipText(fontTip);\n//    fontBox.add(fontLabel);\n    // get a wide name in there before getPreferredSize() is called\n    fontSelectionBox = new JComboBox<String>(new String[] { Toolkit.getMonoFontName() });\n    fontSelectionBox.setToolTipText(fontTip);\n//    fontSelectionBox.addItem(Toolkit.getMonoFont(size, style));\n    //updateDisplayList();\n    fontSelectionBox.setEnabled(false);  // don't enable until fonts are loaded\n//    fontBox.add(fontSelectionBox);\n////    fontBox.add(Box.createHorizontalGlue());\n//    pain.add(fontBox);\n//    d = fontBox.getPreferredSize();\n//    fontBox.setBounds(left, top, d.width + 150, d.height);\n////    fontBox.setBounds(left, top, dialog.getWidth() - left*2, d.height);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // Editor font size [ 12 ]  Console font size [ 10 ]\n\n//    Container box = Box.createHorizontalBox();\n    JLabel fontSizelabel = new JLabel(Language.text(\"preferences.editor_font_size\")+\": \");\n//    box.add(fontSizelabel);\n    fontSizeField = new JComboBox<Integer>(FONT_SIZES);\n////    fontSizeField = new JComboBox<Integer>(FONT_SIZES);\n    fontSizeField.setEditable(true);\n//    box.add(fontSizeField);\n//    box.add(Box.createHorizontalStrut(GUI_BETWEEN));\n\n    JLabel consoleFontSizeLabel = new JLabel(Language.text(\"preferences.console_font_size\")+\": \");\n\n//    box.add(consoleSizeLabel);\n////    consoleSizeField = new JComboBox<Integer>(FONT_SIZES);\n    consoleFontSizeField = new JComboBox<Integer>(FONT_SIZES);\n    consoleFontSizeField.setEditable(true);\n//    box.add(consoleSizeField);\n\n//    pain.add(box);\n//    d = box.getPreferredSize();\n//    box.setBounds(left, top, d.width, d.height);\n    fontSizeField.setSelectedItem(Preferences.getFont(\"editor.font.size\"));\n//    top += d.height + GUI_BETWEEN;\n\n\n//    Container colorBox = Box.createHorizontalBox();\n\n    JLabel backgroundColorLabel = new JLabel(Language.text(\"preferences.background_color\")+\": \");\n//    colorBox.add(backgroundColorLabel);\n\n    final String colorTip = \"<html>\" + Language.text(\"preferences.background_color.tip\");\n    backgroundColorLabel.setToolTipText(colorTip);\n\n    presentColor = new JTextField(\"      \");\n    presentColor.setOpaque(true);\n    presentColor.setEnabled(false);\n    presentColor.setBorder(new CompoundBorder(BorderFactory.createMatteBorder(\n        1, 1, 0, 0, new Color(195, 195, 195)), BorderFactory.createMatteBorder(\n        0, 0, 1, 1, new Color(54, 54, 54))));\n    presentColor.setBackground(Preferences.getColor(\"run.present.bgcolor\"));\n\n    presentColorHex = new JTextField(6);\n    presentColorHex\n        .setText(Preferences.get(\"run.present.bgcolor\").substring(1));\n    presentColorHex.getDocument().addDocumentListener(new DocumentListener() {\n\n      @Override\n      public void removeUpdate(DocumentEvent e) {\n        final String colorValue = presentColorHex.getText().toUpperCase();\n        if (colorValue.length() == 7 && (colorValue.startsWith(\"#\")))\n          EventQueue.invokeLater(new Runnable() {\n            public void run() {\n              presentColorHex.setText(colorValue.substring(1));\n            }\n          });\n        if (colorValue.length() == 6\n            && colorValue.matches(\"[0123456789ABCDEF]*\")) {\n          presentColor.setBackground(new Color(Integer.parseInt(\n              colorValue.substring(0, 2), 16), Integer.parseInt(\n              colorValue.substring(2, 4), 16), Integer.parseInt(\n              colorValue.substring(4, 6), 16)));\n          if (!colorValue.equals(presentColorHex.getText()))\n            EventQueue.invokeLater(new Runnable() {\n              public void run() {\n                presentColorHex.setText(colorValue);\n              }\n            });\n        }\n      }\n\n      @Override\n      public void insertUpdate(DocumentEvent e) {\n        final String colorValue = presentColorHex.getText().toUpperCase();\n        if (colorValue.length() == 7 && (colorValue.startsWith(\"#\")))\n          EventQueue.invokeLater(new Runnable() {\n            public void run() {\n              presentColorHex.setText(colorValue.substring(1));\n            }\n          });\n        if (colorValue.length() == 6\n            && colorValue.matches(\"[0123456789ABCDEF]*\")) {\n          presentColor.setBackground(new Color(Integer.parseInt(\n              colorValue.substring(0, 2), 16), Integer.parseInt(\n              colorValue.substring(2, 4), 16), Integer.parseInt(\n              colorValue.substring(4, 6), 16)));\n          if (!colorValue.equals(presentColorHex.getText()))\n            EventQueue.invokeLater(new Runnable() {\n              public void run() {\n                presentColorHex.setText(colorValue);\n              }\n            });\n        }\n      }\n\n      @Override public void changedUpdate(DocumentEvent e) {}\n    });\n\n    selector = new ColorChooser(dialog, false,\n        Preferences.getColor(\"run.present.bgcolor\"), Language.text(\"prompt.ok\"),\n        new ActionListener() {\n          @Override\n          public void actionPerformed(ActionEvent e) {\n            String colorValue = selector.getHexColor();\n            presentColorHex.setText(colorValue.substring(1));\n            presentColor.setBackground(new Color(Integer.parseInt(\n                colorValue.substring(1, 3), 16), Integer.parseInt(\n                colorValue.substring(3, 5), 16), Integer.parseInt(\n                colorValue.substring(5, 7), 16)));\n            selector.hide();\n          }\n        });\n\n    presentColor.addMouseListener(new MouseAdapter() {\n\n      @Override\n      public void mouseExited(MouseEvent e) {\n        dialog.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\n      }\n\n      @Override\n      public void mouseEntered(MouseEvent e) {\n        dialog.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n      }\n\n      @Override\n      public void mouseClicked(MouseEvent e) {\n        selector.show();\n      }\n    });\n\n    JLabel hashLabel = new JLabel(\"#\");\n//    colorBox.add(hashLabel);\n//    colorBox.add(presentColorHex);\n//    colorBox.add(Box.createHorizontalStrut(GUI_SMALL + 2 / 3 * GUI_SMALL));\n//    colorBox.add(presentColor);\n\n//    pain.add(colorBox);\n//    d = colorBox.getPreferredSize();\n//    colorBox.setBounds(left, top, d.width, d.height);\n\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Use smooth text in editor window\n\n    editorAntialiasBox = new JCheckBox(Language.text(\"preferences.use_smooth_text\"));\n//    pain.add(editorAntialiasBox);\n//    d = editorAntialiasBox.getPreferredSize();\n////     adding +10 because ubuntu + jre 1.5 truncating items\n//    editorAntialiasBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n\n    // [ ] Enable complex text input (for Japanese et al, requires restart)\n\n    inputMethodBox =\n      new JCheckBox(Language.text(\"preferences.enable_complex_text_input\")+\n                    \" (\"+Language.text(\"preferences.enable_complex_text_input_example\")+\n                    \", \"+Language.text(\"preferences.requires_restart\")+\")\");\n//    pain.add(inputMethodBox);\n//    d = inputMethodBox.getPreferredSize();\n//    inputMethodBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Continuously check for errors - PDE X\n\n    errorCheckerBox =\n      new JCheckBox(Language.text(\"preferences.continuously_check\"));\n\n//    pain.add(errorCheckerBox);\n//    d = errorCheckerBox.getPreferredSize();\n//    errorCheckerBox.setBounds(left, top, d.width + 10, d.height);\n    ////right = Math.max(right, left + d.width);\n   // //top += d.height + GUI_BETWEEN;\n//    int warningLeft = left + d.width;\n\n\n    // [ ] Show Warnings - PDE X\n\n    warningsCheckerBox =\n      new JCheckBox(Language.text(\"preferences.show_warnings\"));\n//    pain.add(warningsCheckerBox);\n//    d = warningsCheckerBox.getPreferredSize();\n//    warningsCheckerBox.setBounds(warningLeft, top, d.width + 10, d.height);\n//    right = Math.max(right, warningLeft + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Enable Code Completion - PDE X\n\n    codeCompletionBox =\n      new JCheckBox(Language.text(\"preferences.code_completion\") +\n                    \" Ctrl-\" + Language.text(\"preferences.cmd_space\"));\n//    pain.add(codeCompletionBox);\n//    d = codeCompletionBox.getPreferredSize();\n//    codeCompletionBox.setBounds(left, top, d.width + 10, d.height);\n////    codeCompletionBox.addActionListener(new ActionListener() {\n////\n////      @Override\n////      public void actionPerformed(ActionEvent e) {\n////        // Disble code completion trigger option if completion is disabled\n////        codeCompletionTriggerBox.setEnabled(codeCompletionBox.isSelected());\n////      }\n////    });\n\n////    int toggleLeft = left + d.width;\n\n    //// [ ] Toggle Code Completion Trigger - PDE X. No longer needed (Manindra)\n\n////    codeCompletionTriggerBox =\n////      new JCheckBox(Language.text(\"preferences.trigger_with\")+\" Ctrl-\"+Language.text(\"preferences.cmd_space\"));\n////    pain.add(codeCompletionTriggerBox);\n////    d = codeCompletionTriggerBox.getPreferredSize();\n////    codeCompletionTriggerBox.setBounds(toggleLeft, top, d.width + 10, d.height);\n////    right = Math.max(right, toggleLeft + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n    // [ ] Show import suggestions - PDE X\n\n    importSuggestionsBox =\n      new JCheckBox(Language.text(\"preferences.suggest_imports\"));\n//    pain.add(importSuggestionsBox);\n//    d = importSuggestionsBox.getPreferredSize();\n//    importSuggestionsBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n    // [ ] Increase maximum available memory to [______] MB\n\n//    Container memoryBox = Box.createHorizontalBox();\n    memoryOverrideBox = new JCheckBox(Language.text(\"preferences.increase_max_memory\")+\": \");\n//    memoryBox.add(memoryOverrideBox);\n    memoryField = new JTextField(4);\n    memoryOverrideBox.addChangeListener(new ChangeListener() {\n      @Override\n      public void stateChanged(ChangeEvent e) {\n        memoryField.setEnabled(memoryOverrideBox.isSelected());\n      }\n    });\n//    memoryBox.add(memoryField);\n//    memoryBox.add(new JLabel(\" MB\"));\n//    pain.add(memoryBox);\n//    d = memoryBox.getPreferredSize();\n//    memoryBox.setBounds(left, top, d.width, d.height);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Delete previous application folder on export\n\n    deletePreviousBox =\n      new JCheckBox(Language.text(\"preferences.delete_previous_folder_on_export\"));\n//    pain.add(deletePreviousBox);\n//    d = deletePreviousBox.getPreferredSize();\n//    deletePreviousBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Check for updates on startup\n\n    checkUpdatesBox =\n      new JCheckBox(Language.text(\"preferences.check_for_updates_on_startup\"));\n//    pain.add(checkUpdatesBox);\n//    d = checkUpdatesBox.getPreferredSize();\n//    checkUpdatesBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // Run sketches on display [  1 ]\n\n//    Container displayBox = Box.createHorizontalBox();\n    JLabel displayLabel = new JLabel(Language.text(\"preferences.run_sketches_on_display\")+\": \");\n    final String tip = \"<html>\" + Language.text(\"preferences.run_sketches_on_display.tip\");\n    displayLabel.setToolTipText(tip);\n//    displayBox.add(displayLabel);\n    displaySelectionBox = new JComboBox<String>();\n    updateDisplayList();  // needs to happen here for getPreferredSize()\n//    displayBox.add(displaySelectionBox);\n//    pain.add(displayBox);\n//    d = displayBox.getPreferredSize();\n//    displayBox.setBounds(left, top, d.width, d.height);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Automatically associate .pde files with Processing\n\n//    if (Base.isWindows()) {\n      autoAssociateBox =\n        new JCheckBox(Language.text(\"preferences.automatically_associate_pde_files\"));\n      autoAssociateBox.setVisible(false);\n//      pain.add(autoAssociateBox);\n//      d = autoAssociateBox.getPreferredSize();\n//      autoAssociateBox.setBounds(left, top, d.width + 10, d.height);\n//      right = Math.max(right, left + d.width);\n//      top += d.height + GUI_BETWEEN;\n//    }\n\n\n    // More preferences are in the ...\n\n    JLabel morePreferenceLabel = new JLabel(Language.text(\"preferences.file\") + \":\");\n//    pain.add(morePreferenceLabel);\n//    d = morePreferenceLabel.getPreferredSize();\n    morePreferenceLabel.setForeground(Color.gray);\n//    morePreferenceLabel.setBounds(left, top, d.width, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height; // + GUI_SMALL;\n\n    JLabel preferencePathLabel = new JLabel(Preferences.getPreferencesPath());\n    final JLabel clickable = preferencePathLabel;\n    preferencePathLabel.addMouseListener(new MouseAdapter() {\n        public void mousePressed(MouseEvent e) {\n          Base.openFolder(Base.getSettingsFolder());\n        }\n\n        public void mouseEntered(MouseEvent e) {\n          clickable.setForeground(new Color(0, 0, 140));\n        }\n\n        public void mouseExited(MouseEvent e) {\n          clickable.setForeground(Color.BLACK);\n        }\n      });\n//    pain.add(preferencePathLabel);\n//    d = preferencePathLabel.getPreferredSize();\n//    preferencePathLabel.setBounds(left, top, d.width, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height;\n\n    JLabel preferenceHintLabel = new JLabel(\"(\" + Language.text(\"preferences.file.hint\") + \")\");\n//    pain.add(preferenceHintLabel);\n//    d = preferenceHintLabel.getPreferredSize();\n    preferenceHintLabel.setForeground(Color.gray);\n//    preferenceHintLabel.setBounds(left, top, d.width, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height; // + GUI_SMALL;\n\n\n    // [  OK  ] [ Cancel ]  maybe these should be next to the message?\n\n    JButton okButton = new JButton(Preferences.PROMPT_OK);\n    okButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n          applyFrame();\n          disposeFrame();\n        }\n      });\n//    pain.add(okButton);\n//    d2 = okButton.getPreferredSize();\n//    int BUTTON_HEIGHT = d2.height;\n\n//    h = right - (BUTTON_WIDTH + GUI_SMALL + BUTTON_WIDTH);\n//    okButton.setBounds(h, top, BUTTON_WIDTH, BUTTON_HEIGHT);\n//    h += BUTTON_WIDTH + GUI_SMALL;\n\n    JButton cancelButton = new JButton(Preferences.PROMPT_CANCEL);\n    cancelButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n          disposeFrame();\n        }\n      });\n//    pain.add(cancelButton);\n//    cancelButton.setBounds(h, top, BUTTON_WIDTH, BUTTON_HEIGHT);\n\n//    top += BUTTON_HEIGHT + GUI_BETWEEN;\n\n\n    // finish up\n\n//    wide = right + GUI_BIG;\n//    high = top + GUI_SMALL;\n    layout.setHorizontalGroup(layout.createParallelGroup()\n      .addComponent(sketchbookLocationLabel)\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(sketchbookLocationField)\n                  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n                  .addComponent(browseButton))\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(languageLabel)\n                  .addComponent(languageSelectionBox,GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addComponent(restartProcessingLabel))\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(fontLabel)\n                  .addComponent(fontSelectionBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(fontSizelabel)\n                  .addComponent(fontSizeField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)\n                  .addComponent(consoleFontSizeLabel)\n                  .addComponent(consoleFontSizeField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n      )\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(backgroundColorLabel)\n                  .addComponent(hashLabel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addComponent(presentColorHex, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n                  .addComponent(presentColor, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n      .addComponent(editorAntialiasBox)\n      .addComponent(inputMethodBox)\n      .addComponent(errorCheckerBox)\n      .addComponent(warningsCheckerBox)\n      .addComponent(codeCompletionBox)\n      .addComponent(importSuggestionsBox)\n      .addGroup(layout.createSequentialGroup()\n                    .addComponent(memoryOverrideBox)\n                    .addComponent(memoryField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n      .addComponent(deletePreviousBox)\n      .addComponent(checkUpdatesBox)\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(displayLabel)\n                  .addComponent(displaySelectionBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n      )\n      .addComponent(autoAssociateBox)\n      .addComponent(morePreferenceLabel)\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(preferencePathLabel)\n                  .addGap(0, 100, 200)\n                  .addComponent(okButton, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)\n                  .addComponent(cancelButton, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n      )\n      .addComponent(preferenceHintLabel)\n    );\n\n    // Making sure that Ok and Cancel buttons are of the same size\n    layout.linkSize(okButton, cancelButton);\n\n    layout.setVerticalGroup(layout\n      .createSequentialGroup()\n      .addComponent(sketchbookLocationLabel)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup()\n                  .addComponent(sketchbookLocationField)\n                  .addComponent(browseButton))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(languageLabel)\n                  .addComponent(languageSelectionBox)\n                  .addComponent(restartProcessingLabel))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER).\n                  addComponent(fontLabel)\n                  .addComponent(fontSelectionBox))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(fontSizelabel)\n                  .addComponent(fontSizeField)\n                  .addComponent(consoleFontSizeLabel)\n                  .addComponent(consoleFontSizeField))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(backgroundColorLabel)\n                  .addComponent(hashLabel)\n                  .addComponent(presentColorHex)\n                  .addComponent(presentColor))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(editorAntialiasBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(inputMethodBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(errorCheckerBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(warningsCheckerBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(codeCompletionBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(importSuggestionsBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup()\n                .addComponent(memoryOverrideBox)\n                .addComponent(memoryField))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(deletePreviousBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(checkUpdatesBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(displayLabel)\n                  .addComponent(displaySelectionBox))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(autoAssociateBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(morePreferenceLabel)\n      .addComponent(preferencePathLabel)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)\n                  .addComponent(preferenceHintLabel)\n                  .addComponent(okButton)\n                  .addComponent(cancelButton))\n      .addContainerGap()\n      );\n    dialog.getRootPane().setDefaultButton(okButton);\n\n    if (Base.isWindows()){\n      autoAssociateBox.setVisible(true);\n    }\n    // closing the window is same as hitting cancel button\n\n    dialog.addWindowListener(new WindowAdapter() {\n      public void windowClosing(WindowEvent e) {\n        disposeFrame();\n      }\n    });\n\n    ActionListener disposer = new ActionListener() {\n      public void actionPerformed(ActionEvent actionEvent) {\n        disposeFrame();\n      }\n    };\n\n    Toolkit.registerWindowCloseKeys(dialog.getRootPane(), disposer);\n    Toolkit.setIcon(dialog);\n    dialog.pack();\n    dialog.setLocationRelativeTo(null);\n\n\n    // handle window closing commands for ctrl/cmd-W or hitting ESC.\n\n    pain.addKeyListener(new KeyAdapter() {\n        public void keyPressed(KeyEvent e) {\n          //System.out.println(e);\n          KeyStroke wc = Toolkit.WINDOW_CLOSE_KEYSTROKE;\n          if ((e.getKeyCode() == KeyEvent.VK_ESCAPE) ||\n              (KeyStroke.getKeyStrokeForEvent(e).equals(wc))) {\n            disposeFrame();\n          }\n        }\n      });\n  }","id":8372,"modified_method":"public PreferencesFrame(Base base) {\n    this.base = base;\n    //dialog = new JDialog(editor, \"Preferences\", true);\n    dialog = new JFrame(Language.text(\"preferences\"));\n    dialog.setResizable(false);\n    Container pain = dialog.getContentPane();\n    layout = new GroupLayout(pain);// pain ??\n//    layout.setAutoCreateGaps(true);\n    layout.setAutoCreateContainerGaps(true);\n\n//    pain.setLayout(null);\n    pain.setLayout(layout);\n\n//    final int GUI_BETWEEN = Preferences.GUI_BETWEEN;\n//    final int GUI_BIG = Preferences.GUI_BIG;\n//    final int GUI_SMALL = Preferences.GUI_SMALL;\n//    final int BUTTON_WIDTH = Preferences.BUTTON_WIDTH;\n\n//    int top = GUI_BIG;\n//    int left = GUI_BIG;\n//    int right = 0;\n\n    JLabel sketchbookLocationLabel, restartProcessingLabel;\n    JButton browseButton; //, button2;\n    //JComboBox combo;\n//    Dimension d, d2; //, d3;\n//    int h, vmax;\n\n\n    // Sketchbook location:\n    // [...............................]  [ Browse ]\n\n    sketchbookLocationLabel = new JLabel(Language.text(\"preferences.sketchbook_location\")+\":\");\n//    pain.add(label);\n//    d = label.getPreferredSize();\n//    label.setBounds(left, top, d.width, d.height);\n//    top += d.height; // + GUI_SMALL;\n\n    sketchbookLocationField = new JTextField(40);\n//    pain.add(sketchbookLocationField);\n//    d = sketchbookLocationField.getPreferredSize();\n\n    browseButton = new JButton(Preferences.PROMPT_BROWSE);\n    browseButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n          File dflt = new File(sketchbookLocationField.getText());\n          PApplet.selectFolder(Language.text(\"preferences.sketchbook_location.popup\"),\n                               \"sketchbookCallback\", dflt,\n                               PreferencesFrame.this, dialog);\n        }\n      });\n//    pain.add(button);\n//    d2 = button.getPreferredSize();\n\n    // take max height of all components to vertically align em\n//    vmax = Math.max(d.height, d2.height);\n//    sketchbookLocationField.setBounds(left, top + (vmax-d.height)/2,\n//                                      d.width, d.height);\n//    h = left + d.width + GUI_SMALL;\n//    button.setBounds(h, top + (vmax-d2.height)/2,\n//                     d2.width, d2.height);\n\n//    right = Math.max(right, h + d2.width + GUI_BIG);\n//    top += vmax + GUI_BETWEEN;\n\n\n    // Language: [ English ] (requires restart of Processing)\n\n\n\n//    Container languageBox = Box.createHorizontalBox();\n    JLabel languageLabel = new JLabel(Language.text(\"preferences.language\")+\": \");\n//    languageBox.add(languageLabel);\n    languageSelectionBox = new JComboBox<String>();\n\n    Map<String, String> languages = Language.getLanguages();\n    String[] languageSelection = new String[languages.size()];\n    languageSelection[0] = languages.get(Language.getLanguage());\n    int i = 1;\n    for (Map.Entry<String, String> lang : languages.entrySet()) {\n      if(!lang.getKey().equals(Language.getLanguage())){\n        languageSelection[i++] = lang.getValue();\n      }\n    }\n    languageSelectionBox.setModel(new DefaultComboBoxModel<String>(languageSelection));\n//    languageBox.add(languageSelectionBox);\n    restartProcessingLabel = new JLabel(\" (\"+Language.text(\"preferences.requires_restart\")+\")\");\n//    languageBox.add(lRestartProcessing);\n//    pain.add(languageBox);\n//    d = languageBox.getPreferredSize();\n//    languageBox.setBounds(left, top, d.width, d.height);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // Editor and console font [ Source Code Pro ]\n\n    // Nevermind on this for now.. Java doesn't seem to have a method for\n    // enumerating only the fixed-width (monospaced) fonts. To do this\n    // properly, we'd need to list the fonts, and compare the metrics of\n    // i and M for each. When they're identical (and not degenerate),\n    // we'd call that font fixed width. That's all a very expensive set of\n    // operations, so it should also probably be cached between runs and\n    // updated in the background.\n\n//    Container fontBox = Box.createHorizontalBox();\n    JLabel fontLabel = new JLabel(Language.text(\"preferences.editor_and_console_font\")+\": \");\n    final String fontTip = \"<html>\" + Language.text(\"preferences.editor_and_console_font.tip\");\n    fontLabel.setToolTipText(fontTip);\n//    fontBox.add(fontLabel);\n    // get a wide name in there before getPreferredSize() is called\n    fontSelectionBox = new JComboBox<String>(new String[] { Toolkit.getMonoFontName() });\n    fontSelectionBox.setToolTipText(fontTip);\n//    fontSelectionBox.addItem(Toolkit.getMonoFont(size, style));\n    //updateDisplayList();\n    fontSelectionBox.setEnabled(false);  // don't enable until fonts are loaded\n//    fontBox.add(fontSelectionBox);\n////    fontBox.add(Box.createHorizontalGlue());\n//    pain.add(fontBox);\n//    d = fontBox.getPreferredSize();\n//    fontBox.setBounds(left, top, d.width + 150, d.height);\n////    fontBox.setBounds(left, top, dialog.getWidth() - left*2, d.height);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // Editor font size [ 12 ]  Console font size [ 10 ]\n\n//    Container box = Box.createHorizontalBox();\n    JLabel fontSizelabel = new JLabel(Language.text(\"preferences.editor_font_size\")+\": \");\n//    box.add(fontSizelabel);\n    fontSizeField = new JComboBox<Integer>(FONT_SIZES);\n////    fontSizeField = new JComboBox<Integer>(FONT_SIZES);\n    fontSizeField.setEditable(true);\n//    box.add(fontSizeField);\n//    box.add(Box.createHorizontalStrut(GUI_BETWEEN));\n\n    JLabel consoleFontSizeLabel = new JLabel(Language.text(\"preferences.console_font_size\")+\": \");\n\n//    box.add(consoleSizeLabel);\n////    consoleSizeField = new JComboBox<Integer>(FONT_SIZES);\n    consoleFontSizeField = new JComboBox<Integer>(FONT_SIZES);\n    consoleFontSizeField.setEditable(true);\n//    box.add(consoleSizeField);\n\n//    pain.add(box);\n//    d = box.getPreferredSize();\n//    box.setBounds(left, top, d.width, d.height);\n    fontSizeField.setSelectedItem(Preferences.getFont(\"editor.font.size\"));\n//    top += d.height + GUI_BETWEEN;\n\n\n//    Container colorBox = Box.createHorizontalBox();\n\n    JLabel backgroundColorLabel = new JLabel(Language.text(\"preferences.background_color\")+\": \");\n//    colorBox.add(backgroundColorLabel);\n\n    final String colorTip = \"<html>\" + Language.text(\"preferences.background_color.tip\");\n    backgroundColorLabel.setToolTipText(colorTip);\n\n    presentColor = new JTextField(\"      \");\n    presentColor.setOpaque(true);\n    presentColor.setEnabled(false);\n    presentColor.setBorder(new CompoundBorder(BorderFactory.createMatteBorder(\n        1, 1, 0, 0, new Color(195, 195, 195)), BorderFactory.createMatteBorder(\n        0, 0, 1, 1, new Color(54, 54, 54))));\n    presentColor.setBackground(Preferences.getColor(\"run.present.bgcolor\"));\n\n    presentColorHex = new JTextField(6);\n    presentColorHex\n        .setText(Preferences.get(\"run.present.bgcolor\").substring(1));\n    presentColorHex.getDocument().addDocumentListener(new DocumentListener() {\n\n      @Override\n      public void removeUpdate(DocumentEvent e) {\n        final String colorValue = presentColorHex.getText().toUpperCase();\n        if (colorValue.length() == 7 && (colorValue.startsWith(\"#\")))\n          EventQueue.invokeLater(new Runnable() {\n            public void run() {\n              presentColorHex.setText(colorValue.substring(1));\n            }\n          });\n        if (colorValue.length() == 6\n            && colorValue.matches(\"[0123456789ABCDEF]*\")) {\n          presentColor.setBackground(new Color(Integer.parseInt(\n              colorValue.substring(0, 2), 16), Integer.parseInt(\n              colorValue.substring(2, 4), 16), Integer.parseInt(\n              colorValue.substring(4, 6), 16)));\n          if (!colorValue.equals(presentColorHex.getText()))\n            EventQueue.invokeLater(new Runnable() {\n              public void run() {\n                presentColorHex.setText(colorValue);\n              }\n            });\n        }\n      }\n\n      @Override\n      public void insertUpdate(DocumentEvent e) {\n        final String colorValue = presentColorHex.getText().toUpperCase();\n        if (colorValue.length() == 7 && (colorValue.startsWith(\"#\")))\n          EventQueue.invokeLater(new Runnable() {\n            public void run() {\n              presentColorHex.setText(colorValue.substring(1));\n            }\n          });\n        if (colorValue.length() == 6\n            && colorValue.matches(\"[0123456789ABCDEF]*\")) {\n          presentColor.setBackground(new Color(Integer.parseInt(\n              colorValue.substring(0, 2), 16), Integer.parseInt(\n              colorValue.substring(2, 4), 16), Integer.parseInt(\n              colorValue.substring(4, 6), 16)));\n          if (!colorValue.equals(presentColorHex.getText()))\n            EventQueue.invokeLater(new Runnable() {\n              public void run() {\n                presentColorHex.setText(colorValue);\n              }\n            });\n        }\n      }\n\n      @Override public void changedUpdate(DocumentEvent e) {}\n    });\n\n    selector = new ColorChooser(dialog, false,\n        Preferences.getColor(\"run.present.bgcolor\"), Language.text(\"prompt.ok\"),\n        new ActionListener() {\n          @Override\n          public void actionPerformed(ActionEvent e) {\n            String colorValue = selector.getHexColor();\n            presentColorHex.setText(colorValue.substring(1));\n            presentColor.setBackground(new Color(Integer.parseInt(\n                colorValue.substring(1, 3), 16), Integer.parseInt(\n                colorValue.substring(3, 5), 16), Integer.parseInt(\n                colorValue.substring(5, 7), 16)));\n            selector.hide();\n          }\n        });\n\n    presentColor.addMouseListener(new MouseAdapter() {\n\n      @Override\n      public void mouseExited(MouseEvent e) {\n        dialog.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\n      }\n\n      @Override\n      public void mouseEntered(MouseEvent e) {\n        dialog.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n      }\n\n      @Override\n      public void mouseClicked(MouseEvent e) {\n        selector.show();\n      }\n    });\n\n    JLabel hashLabel = new JLabel(\"#\");\n//    colorBox.add(hashLabel);\n//    colorBox.add(presentColorHex);\n//    colorBox.add(Box.createHorizontalStrut(GUI_SMALL + 2 / 3 * GUI_SMALL));\n//    colorBox.add(presentColor);\n\n//    pain.add(colorBox);\n//    d = colorBox.getPreferredSize();\n//    colorBox.setBounds(left, top, d.width, d.height);\n\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Use smooth text in editor window\n\n    editorAntialiasBox = new JCheckBox(Language.text(\"preferences.use_smooth_text\"));\n//    pain.add(editorAntialiasBox);\n//    d = editorAntialiasBox.getPreferredSize();\n////     adding +10 because ubuntu + jre 1.5 truncating items\n//    editorAntialiasBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n\n    // [ ] Enable complex text input (for Japanese et al, requires restart)\n\n    inputMethodBox =\n      new JCheckBox(Language.text(\"preferences.enable_complex_text_input\")+\n                    \" (\"+Language.text(\"preferences.enable_complex_text_input_example\")+\n                    \", \"+Language.text(\"preferences.requires_restart\")+\")\");\n//    pain.add(inputMethodBox);\n//    d = inputMethodBox.getPreferredSize();\n//    inputMethodBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Continuously check for errors - PDE X\n\n    errorCheckerBox =\n      new JCheckBox(Language.text(\"preferences.continuously_check\"));\n\n//    pain.add(errorCheckerBox);\n//    d = errorCheckerBox.getPreferredSize();\n//    errorCheckerBox.setBounds(left, top, d.width + 10, d.height);\n    ////right = Math.max(right, left + d.width);\n   // //top += d.height + GUI_BETWEEN;\n//    int warningLeft = left + d.width;\n\n\n    // [ ] Show Warnings - PDE X\n\n    warningsCheckerBox =\n      new JCheckBox(Language.text(\"preferences.show_warnings\"));\n//    pain.add(warningsCheckerBox);\n//    d = warningsCheckerBox.getPreferredSize();\n//    warningsCheckerBox.setBounds(warningLeft, top, d.width + 10, d.height);\n//    right = Math.max(right, warningLeft + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Enable Code Completion - PDE X\n\n    codeCompletionBox =\n      new JCheckBox(Language.text(\"preferences.code_completion\") +\n                    \" Ctrl-\" + Language.text(\"preferences.cmd_space\"));\n//    pain.add(codeCompletionBox);\n//    d = codeCompletionBox.getPreferredSize();\n//    codeCompletionBox.setBounds(left, top, d.width + 10, d.height);\n////    codeCompletionBox.addActionListener(new ActionListener() {\n////\n////      @Override\n////      public void actionPerformed(ActionEvent e) {\n////        // Disble code completion trigger option if completion is disabled\n////        codeCompletionTriggerBox.setEnabled(codeCompletionBox.isSelected());\n////      }\n////    });\n\n////    int toggleLeft = left + d.width;\n\n    //// [ ] Toggle Code Completion Trigger - PDE X. No longer needed (Manindra)\n\n////    codeCompletionTriggerBox =\n////      new JCheckBox(Language.text(\"preferences.trigger_with\")+\" Ctrl-\"+Language.text(\"preferences.cmd_space\"));\n////    pain.add(codeCompletionTriggerBox);\n////    d = codeCompletionTriggerBox.getPreferredSize();\n////    codeCompletionTriggerBox.setBounds(toggleLeft, top, d.width + 10, d.height);\n////    right = Math.max(right, toggleLeft + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n    // [ ] Show import suggestions - PDE X\n\n    importSuggestionsBox =\n      new JCheckBox(Language.text(\"preferences.suggest_imports\"));\n//    pain.add(importSuggestionsBox);\n//    d = importSuggestionsBox.getPreferredSize();\n//    importSuggestionsBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n    // [ ] Increase maximum available memory to [______] MB\n\n//    Container memoryBox = Box.createHorizontalBox();\n    memoryOverrideBox = new JCheckBox(Language.text(\"preferences.increase_max_memory\")+\": \");\n//    memoryBox.add(memoryOverrideBox);\n    memoryField = new JTextField(4);\n    memoryOverrideBox.addChangeListener(new ChangeListener() {\n      @Override\n      public void stateChanged(ChangeEvent e) {\n        memoryField.setEnabled(memoryOverrideBox.isSelected());\n      }\n    });\n//    memoryBox.add(memoryField);\n//    memoryBox.add(new JLabel(\" MB\"));\n//    pain.add(memoryBox);\n//    d = memoryBox.getPreferredSize();\n//    memoryBox.setBounds(left, top, d.width, d.height);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Delete previous application folder on export\n\n    deletePreviousBox =\n      new JCheckBox(Language.text(\"preferences.delete_previous_folder_on_export\"));\n//    pain.add(deletePreviousBox);\n//    d = deletePreviousBox.getPreferredSize();\n//    deletePreviousBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Check for updates on startup\n\n    checkUpdatesBox =\n      new JCheckBox(Language.text(\"preferences.check_for_updates_on_startup\"));\n//    pain.add(checkUpdatesBox);\n//    d = checkUpdatesBox.getPreferredSize();\n//    checkUpdatesBox.setBounds(left, top, d.width + 10, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // Run sketches on display [  1 ]\n\n//    Container displayBox = Box.createHorizontalBox();\n    JLabel displayLabel = new JLabel(Language.text(\"preferences.run_sketches_on_display\")+\": \");\n    final String tip = \"<html>\" + Language.text(\"preferences.run_sketches_on_display.tip\");\n    displayLabel.setToolTipText(tip);\n//    displayBox.add(displayLabel);\n    displaySelectionBox = new JComboBox<String>();\n    updateDisplayList();  // needs to happen here for getPreferredSize()\n//    displayBox.add(displaySelectionBox);\n//    pain.add(displayBox);\n//    d = displayBox.getPreferredSize();\n//    displayBox.setBounds(left, top, d.width, d.height);\n//    top += d.height + GUI_BETWEEN;\n\n\n    // [ ] Automatically associate .pde files with Processing\n\n//    if (Base.isWindows()) {\n      autoAssociateBox =\n        new JCheckBox(Language.text(\"preferences.automatically_associate_pde_files\"));\n      autoAssociateBox.setVisible(false);\n//      pain.add(autoAssociateBox);\n//      d = autoAssociateBox.getPreferredSize();\n//      autoAssociateBox.setBounds(left, top, d.width + 10, d.height);\n//      right = Math.max(right, left + d.width);\n//      top += d.height + GUI_BETWEEN;\n//    }\n\n\n    // More preferences are in the ...\n\n    JLabel morePreferenceLabel = new JLabel(Language.text(\"preferences.file\") + \":\");\n//    pain.add(morePreferenceLabel);\n//    d = morePreferenceLabel.getPreferredSize();\n    morePreferenceLabel.setForeground(Color.gray);\n//    morePreferenceLabel.setBounds(left, top, d.width, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height; // + GUI_SMALL;\n\n    JLabel preferencePathLabel = new JLabel(Preferences.getPreferencesPath());\n    final JLabel clickable = preferencePathLabel;\n    preferencePathLabel.addMouseListener(new MouseAdapter() {\n        public void mousePressed(MouseEvent e) {\n          Base.openFolder(Base.getSettingsFolder());\n        }\n\n        public void mouseEntered(MouseEvent e) {\n          clickable.setForeground(new Color(0, 0, 140));\n        }\n\n        public void mouseExited(MouseEvent e) {\n          clickable.setForeground(Color.BLACK);\n        }\n      });\n//    pain.add(preferencePathLabel);\n//    d = preferencePathLabel.getPreferredSize();\n//    preferencePathLabel.setBounds(left, top, d.width, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height;\n\n    JLabel preferenceHintLabel = new JLabel(\"(\" + Language.text(\"preferences.file.hint\") + \")\");\n//    pain.add(preferenceHintLabel);\n//    d = preferenceHintLabel.getPreferredSize();\n    preferenceHintLabel.setForeground(Color.gray);\n//    preferenceHintLabel.setBounds(left, top, d.width, d.height);\n//    right = Math.max(right, left + d.width);\n//    top += d.height; // + GUI_SMALL;\n\n\n    // [  OK  ] [ Cancel ]  maybe these should be next to the message?\n\n    JButton okButton = new JButton(Preferences.PROMPT_OK);\n    okButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n          applyFrame();\n          disposeFrame();\n        }\n      });\n//    pain.add(okButton);\n//    d2 = okButton.getPreferredSize();\n//    int BUTTON_HEIGHT = d2.height;\n\n//    h = right - (BUTTON_WIDTH + GUI_SMALL + BUTTON_WIDTH);\n//    okButton.setBounds(h, top, BUTTON_WIDTH, BUTTON_HEIGHT);\n//    h += BUTTON_WIDTH + GUI_SMALL;\n\n    JButton cancelButton = new JButton(Preferences.PROMPT_CANCEL);\n    cancelButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n          disposeFrame();\n        }\n      });\n//    pain.add(cancelButton);\n//    cancelButton.setBounds(h, top, BUTTON_WIDTH, BUTTON_HEIGHT);\n\n//    top += BUTTON_HEIGHT + GUI_BETWEEN;\n\n\n    // finish up\n\n//    wide = right + GUI_BIG;\n//    high = top + GUI_SMALL;\n    layout.setHorizontalGroup(layout.createParallelGroup()\n      .addComponent(sketchbookLocationLabel)\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(sketchbookLocationField)\n                  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n                  .addComponent(browseButton))\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(languageLabel)\n                  .addComponent(languageSelectionBox,GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addComponent(restartProcessingLabel))\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(fontLabel)\n                  .addComponent(fontSelectionBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(fontSizelabel)\n                  .addComponent(fontSizeField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)\n                  .addComponent(consoleFontSizeLabel)\n                  .addComponent(consoleFontSizeField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n      )\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(backgroundColorLabel)\n                  .addComponent(hashLabel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addComponent(presentColorHex, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n                  .addComponent(presentColor, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n      .addComponent(editorAntialiasBox)\n      .addComponent(inputMethodBox)\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(errorCheckerBox)\n                  .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)\n                  .addComponent(warningsCheckerBox))\n      .addComponent(codeCompletionBox)\n      .addComponent(importSuggestionsBox)\n      .addGroup(layout.createSequentialGroup()\n                    .addComponent(memoryOverrideBox)\n                    .addComponent(memoryField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n      .addComponent(deletePreviousBox)\n      .addComponent(checkUpdatesBox)\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(displayLabel)\n                  .addComponent(displaySelectionBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n      )\n      .addComponent(autoAssociateBox)\n      .addComponent(morePreferenceLabel)\n      .addGroup(layout.createSequentialGroup()\n                  .addComponent(preferencePathLabel)\n                  .addGap(0, 100, 200)\n                  .addComponent(okButton, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                  .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)\n                  .addComponent(cancelButton, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n      )\n      .addComponent(preferenceHintLabel)\n    );\n\n    // Making sure that Ok and Cancel buttons are of the same size\n    layout.linkSize(okButton, cancelButton);\n\n    layout.setVerticalGroup(layout\n      .createSequentialGroup()\n      .addComponent(sketchbookLocationLabel)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup()\n                  .addComponent(sketchbookLocationField)\n                  .addComponent(browseButton))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(languageLabel)\n                  .addComponent(languageSelectionBox)\n                  .addComponent(restartProcessingLabel))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER).\n                  addComponent(fontLabel)\n                  .addComponent(fontSelectionBox))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(fontSizelabel)\n                  .addComponent(fontSizeField)\n                  .addComponent(consoleFontSizeLabel)\n                  .addComponent(consoleFontSizeField))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(backgroundColorLabel)\n                  .addComponent(hashLabel)\n                  .addComponent(presentColorHex)\n                  .addComponent(presentColor))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(editorAntialiasBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(inputMethodBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n        .addGroup(layout.createParallelGroup()\n                    .addComponent(errorCheckerBox)\n                    .addComponent(warningsCheckerBox))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(codeCompletionBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(importSuggestionsBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup()\n                .addComponent(memoryOverrideBox)\n                .addComponent(memoryField))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(deletePreviousBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(checkUpdatesBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)\n                  .addComponent(displayLabel)\n                  .addComponent(displaySelectionBox))\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(autoAssociateBox)\n      .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n      .addComponent(morePreferenceLabel)\n      .addComponent(preferencePathLabel)\n      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)\n                  .addComponent(preferenceHintLabel)\n                  .addComponent(okButton)\n                  .addComponent(cancelButton))\n      .addContainerGap()\n      );\n    dialog.getRootPane().setDefaultButton(okButton);\n\n    if (Base.isWindows()){\n      autoAssociateBox.setVisible(true);\n    }\n    // closing the window is same as hitting cancel button\n\n    dialog.addWindowListener(new WindowAdapter() {\n      public void windowClosing(WindowEvent e) {\n        disposeFrame();\n      }\n    });\n\n    ActionListener disposer = new ActionListener() {\n      public void actionPerformed(ActionEvent actionEvent) {\n        disposeFrame();\n      }\n    };\n\n    Toolkit.registerWindowCloseKeys(dialog.getRootPane(), disposer);\n    Toolkit.setIcon(dialog);\n    dialog.pack();\n    dialog.setLocationRelativeTo(null);\n\n\n    // handle window closing commands for ctrl/cmd-W or hitting ESC.\n\n    pain.addKeyListener(new KeyAdapter() {\n        public void keyPressed(KeyEvent e) {\n          //System.out.println(e);\n          KeyStroke wc = Toolkit.WINDOW_CLOSE_KEYSTROKE;\n          if ((e.getKeyCode() == KeyEvent.VK_ESCAPE) ||\n              (KeyStroke.getKeyStrokeForEvent(e).equals(wc))) {\n            disposeFrame();\n          }\n        }\n      });\n  }","commit_id":"88337d7b8b36e22bd0ddeb95f7caa87439af6e91","url":"https://github.com/processing/processing"},{"original_method":"@Override\n    public void store() {\n        KeywordSearchSettings.setSkipKnown(skipNSRLCheckBox.isSelected());\n        KeywordSearchSettings.setUpdateFrequency(getSelectedTimeValue());\n    }","id":8373,"modified_method":"@Override\n    public void store() {\n        KeywordSearchSettings.setSkipKnown(skipNSRLCheckBox.isSelected());\n        KeywordSearchSettings.setUpdateFrequency(getSelectedTimeValue());\n        KeywordSearchSettings.setShowSnippets(showSnippetsCB.isSelected());\n    }","commit_id":"c88ea02a0724a04d45239ca7228211b674a6ead9","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        timeGroup = new javax.swing.ButtonGroup();\n        skipNSRLCheckBox = new javax.swing.JCheckBox();\n        filesIndexedLabel = new javax.swing.JLabel();\n        filesIndexedValue = new javax.swing.JLabel();\n        chunksLabel = new javax.swing.JLabel();\n        chunksValLabel = new javax.swing.JLabel();\n        settingsLabel = new javax.swing.JLabel();\n        informationLabel = new javax.swing.JLabel();\n        settingsSeparator = new javax.swing.JSeparator();\n        informationSeparator = new javax.swing.JSeparator();\n        frequencyLabel = new javax.swing.JLabel();\n        timeRadioButton1 = new javax.swing.JRadioButton();\n        timeRadioButton2 = new javax.swing.JRadioButton();\n        timeRadioButton3 = new javax.swing.JRadioButton();\n        timeRadioButton4 = new javax.swing.JRadioButton();\n\n        skipNSRLCheckBox.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.skipNSRLCheckBox.text\")); // NOI18N\n        skipNSRLCheckBox.setToolTipText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.skipNSRLCheckBox.toolTipText\")); // NOI18N\n\n        filesIndexedLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.filesIndexedLabel.text\")); // NOI18N\n\n        filesIndexedValue.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.filesIndexedValue.text\")); // NOI18N\n        filesIndexedValue.setMaximumSize(null);\n\n        chunksLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.chunksLabel.text\")); // NOI18N\n\n        chunksValLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.chunksValLabel.text\")); // NOI18N\n\n        settingsLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.settingsLabel.text\")); // NOI18N\n\n        informationLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.informationLabel.text\")); // NOI18N\n\n        frequencyLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.frequencyLabel.text\")); // NOI18N\n\n        timeRadioButton1.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.timeRadioButton1.text\")); // NOI18N\n        timeRadioButton1.setToolTipText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.timeRadioButton1.toolTipText\")); // NOI18N\n\n        timeRadioButton2.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.timeRadioButton2.text\")); // NOI18N\n        timeRadioButton2.setToolTipText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.timeRadioButton2.toolTipText\")); // NOI18N\n\n        timeRadioButton3.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.timeRadioButton3.text\")); // NOI18N\n        timeRadioButton3.setToolTipText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.timeRadioButton3.toolTipText\")); // NOI18N\n\n        timeRadioButton4.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.timeRadioButton4.text_1\")); // NOI18N\n        timeRadioButton4.setToolTipText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.timeRadioButton4.toolTipText\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(settingsLabel)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(settingsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(informationLabel)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(informationSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(10, 10, 10)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(filesIndexedLabel)\n                            .addGroup(layout.createSequentialGroup()\n                                .addGap(141, 141, 141)\n                                .addComponent(filesIndexedValue, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addComponent(skipNSRLCheckBox)\n                            .addComponent(frequencyLabel)\n                            .addGroup(layout.createSequentialGroup()\n                                .addGap(10, 10, 10)\n                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addComponent(timeRadioButton2)\n                                    .addComponent(timeRadioButton1)\n                                    .addComponent(timeRadioButton3)\n                                    .addComponent(timeRadioButton4)))\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(chunksLabel)\n                                .addGap(18, 18, 18)\n                                .addComponent(chunksValLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(settingsLabel)\n                    .addComponent(settingsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(skipNSRLCheckBox)\n                .addGap(13, 13, 13)\n                .addComponent(frequencyLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(timeRadioButton1)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(timeRadioButton2)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(timeRadioButton3)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(timeRadioButton4)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(informationLabel)\n                    .addComponent(informationSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(filesIndexedLabel)\n                    .addComponent(filesIndexedValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(chunksLabel)\n                    .addComponent(chunksValLabel))\n                .addContainerGap(30, Short.MAX_VALUE))\n        );\n    }","id":8374,"modified_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        timeGroup = new javax.swing.ButtonGroup();\n        skipNSRLCheckBox = new javax.swing.JCheckBox();\n        filesIndexedLabel = new javax.swing.JLabel();\n        filesIndexedValue = new javax.swing.JLabel();\n        chunksLabel = new javax.swing.JLabel();\n        chunksValLabel = new javax.swing.JLabel();\n        settingsLabel = new javax.swing.JLabel();\n        informationLabel = new javax.swing.JLabel();\n        settingsSeparator = new javax.swing.JSeparator();\n        informationSeparator = new javax.swing.JSeparator();\n        frequencyLabel = new javax.swing.JLabel();\n        timeRadioButton1 = new javax.swing.JRadioButton();\n        timeRadioButton2 = new javax.swing.JRadioButton();\n        timeRadioButton3 = new javax.swing.JRadioButton();\n        timeRadioButton4 = new javax.swing.JRadioButton();\n        showSnippetsCB = new javax.swing.JCheckBox();\n\n        skipNSRLCheckBox.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.skipNSRLCheckBox.text\")); // NOI18N\n        skipNSRLCheckBox.setToolTipText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.skipNSRLCheckBox.toolTipText\")); // NOI18N\n\n        filesIndexedLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.filesIndexedLabel.text\")); // NOI18N\n\n        filesIndexedValue.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.filesIndexedValue.text\")); // NOI18N\n        filesIndexedValue.setMaximumSize(null);\n\n        chunksLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.chunksLabel.text\")); // NOI18N\n\n        chunksValLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.chunksValLabel.text\")); // NOI18N\n\n        settingsLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.settingsLabel.text\")); // NOI18N\n\n        informationLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.informationLabel.text\")); // NOI18N\n\n        frequencyLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.frequencyLabel.text\")); // NOI18N\n\n        timeRadioButton1.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.timeRadioButton1.text\")); // NOI18N\n        timeRadioButton1.setToolTipText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.timeRadioButton1.toolTipText\")); // NOI18N\n\n        timeRadioButton2.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.timeRadioButton2.text\")); // NOI18N\n        timeRadioButton2.setToolTipText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.timeRadioButton2.toolTipText\")); // NOI18N\n\n        timeRadioButton3.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.timeRadioButton3.text\")); // NOI18N\n        timeRadioButton3.setToolTipText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.timeRadioButton3.toolTipText\")); // NOI18N\n\n        timeRadioButton4.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.timeRadioButton4.text_1\")); // NOI18N\n        timeRadioButton4.setToolTipText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.timeRadioButton4.toolTipText\")); // NOI18N\n\n        showSnippetsCB.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.showSnippetsCB.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(settingsLabel)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(settingsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(informationLabel)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(informationSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(10, 10, 10)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(skipNSRLCheckBox)\n                            .addComponent(showSnippetsCB)\n                            .addComponent(filesIndexedLabel)\n                            .addGroup(layout.createSequentialGroup()\n                                .addGap(141, 141, 141)\n                                .addComponent(filesIndexedValue, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addComponent(frequencyLabel)\n                            .addGroup(layout.createSequentialGroup()\n                                .addGap(10, 10, 10)\n                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addComponent(timeRadioButton2)\n                                    .addComponent(timeRadioButton1)\n                                    .addComponent(timeRadioButton3)\n                                    .addComponent(timeRadioButton4)))\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(chunksLabel)\n                                .addGap(18, 18, 18)\n                                .addComponent(chunksValLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(settingsLabel)\n                    .addComponent(settingsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(skipNSRLCheckBox)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(showSnippetsCB)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(frequencyLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(timeRadioButton1)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(timeRadioButton2)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(timeRadioButton3)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(timeRadioButton4)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(informationLabel)\n                    .addComponent(informationSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(filesIndexedLabel)\n                    .addComponent(filesIndexedValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(chunksLabel)\n                    .addComponent(chunksValLabel))\n                .addContainerGap(116, Short.MAX_VALUE))\n        );\n    }","commit_id":"c88ea02a0724a04d45239ca7228211b674a6ead9","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void activateWidgets() {\n        skipNSRLCheckBox.setSelected(KeywordSearchSettings.getSkipKnown());\n        boolean enable = !IngestManager.getDefault().isIngestRunning()\n                && !IngestManager.getDefault().isModuleRunning(KeywordSearchIngestModule.getDefault());\n        skipNSRLCheckBox.setEnabled(enable);\n        setTimeSettingEnabled(enable);\n\n        final UpdateFrequency curFreq = KeywordSearchSettings.getUpdateFrequency();\n        switch (curFreq) {\n            case FAST:\n                timeRadioButton1.setSelected(true);\n                break;\n            case AVG:\n                timeRadioButton2.setSelected(true);\n                break;\n            case SLOW:\n                timeRadioButton3.setSelected(true);\n                break;\n            case SLOWEST:\n                timeRadioButton4.setSelected(true);\n                break;\n            case DEFAULT:\n            default:\n                // default value\n                timeRadioButton3.setSelected(true);\n                break;\n        }\n\n    }","id":8375,"modified_method":"private void activateWidgets() {\n        skipNSRLCheckBox.setSelected(KeywordSearchSettings.getSkipKnown());\n        showSnippetsCB.setSelected(KeywordSearchSettings.getShowSnippets());\n        boolean enable = !IngestManager.getDefault().isIngestRunning()\n                && !IngestManager.getDefault().isModuleRunning(KeywordSearchIngestModule.getDefault());\n        skipNSRLCheckBox.setEnabled(enable);\n        setTimeSettingEnabled(enable);\n\n        final UpdateFrequency curFreq = KeywordSearchSettings.getUpdateFrequency();\n        switch (curFreq) {\n            case FAST:\n                timeRadioButton1.setSelected(true);\n                break;\n            case AVG:\n                timeRadioButton2.setSelected(true);\n                break;\n            case SLOW:\n                timeRadioButton3.setSelected(true);\n                break;\n            case SLOWEST:\n                timeRadioButton4.setSelected(true);\n                break;\n            case DEFAULT:\n            default:\n                // default value\n                timeRadioButton3.setSelected(true);\n                break;\n        }\n\n    }","commit_id":"c88ea02a0724a04d45239ca7228211b674a6ead9","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n    public Map<String, List<ContentHit>> performQuery() throws NoOpenCoreException {\n        Map<String, List<ContentHit>> results = new HashMap<String, List<ContentHit>>();\n        //in case of single term literal query there is only 1 term\n        results.put(keywordString, performLuceneQuery(true));\n\n        return results;\n    }","id":8376,"modified_method":"@Override\n    public Map<String, List<ContentHit>> performQuery() throws NoOpenCoreException {\n        Map<String, List<ContentHit>> results = new HashMap<String, List<ContentHit>>();\n        //in case of single term literal query there is only 1 term\n        boolean showSnippets = KeywordSearchSettings.getShowSnippets();\n        results.put(keywordString, performLuceneQuery(showSnippets));\n\n        return results;\n    }","commit_id":"c88ea02a0724a04d45239ca7228211b674a6ead9","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void customizeComponents() {\n        setName(\"Keyword List Configuration\");\n        tabbedPane.insertTab(\"Lists\", null, KeywordSearchConfigurationPanel1.getDefault(), \"List configuration\", 0);\n        tabbedPane.insertTab(\"General\", null, KeywordSearchConfigurationPanel2.getDefault(), \"General configuration\", 1);\n        \n    }","id":8377,"modified_method":"private void customizeComponents() {\n        setName(\"Advanced Keyword Search Configuration\");\n        tabbedPane.insertTab(\"Lists\", null, KeywordSearchConfigurationPanel1.getDefault(), \"List configuration\", 0);\n        tabbedPane.insertTab(\"Languages\", null, KeywordSearchConfigurationPanel3.getDefault(), \"Languages configuration\", 1);\n        tabbedPane.insertTab(\"General\", null, KeywordSearchConfigurationPanel2.getDefault(), \"General configuration\", 2);\n        \n    }","commit_id":"599be983b8f48b03307c9b9b256cb396636b48ee","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void activateWidgets() {\n        final KeywordSearchIngestService service = KeywordSearchIngestService.getDefault();        \n        skipNSRLCheckBox.setSelected(service.getSkipKnown());\n        reloadScriptCombo();\n        boolean enable = ! IngestManager.getDefault().isIngestRunning();\n        scriptCombo.setEnabled(enable);\n        //scriptCombo.setEnabled(false);\n        skipNSRLCheckBox.setEnabled(enable);\n    }","id":8378,"modified_method":"private void activateWidgets() {\n        final KeywordSearchIngestService service = KeywordSearchIngestService.getDefault();\n        skipNSRLCheckBox.setSelected(service.getSkipKnown());\n        boolean enable = !IngestManager.getDefault().isIngestRunning();\n        skipNSRLCheckBox.setEnabled(enable);\n    }","commit_id":"599be983b8f48b03307c9b9b256cb396636b48ee","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void customizeComponents() {\n        this.skipNSRLCheckBox.setSelected(KeywordSearchIngestService.getDefault().getSkipKnown());\n\n        try {\n            filesIndexedValue.setText(Integer.toString(KeywordSearch.getServer().queryNumIndexedFiles()));\n        } catch (SolrServerException ex) {\n            logger.log(Level.WARNING, \"Could not get number of indexed files\");\n\n        } catch (NoOpenCoreException ex) {\n            logger.log(Level.WARNING, \"Could not get number of indexed files\");\n        }\n\n        KeywordSearch.changeSupport.addPropertyChangeListener(KeywordSearch.NUM_FILES_CHANGE_EVT,\n                new PropertyChangeListener() {\n                    @Override\n                    public void propertyChange(PropertyChangeEvent evt) {\n                        String changed = evt.getPropertyName();\n                        Object newValue = evt.getNewValue();\n\n                        if (changed.equals(KeywordSearch.NUM_FILES_CHANGE_EVT)) {\n                            int newFilesIndexed = ((Integer) newValue).intValue();\n                            filesIndexedValue.setText(Integer.toString(newFilesIndexed));\n\n                        }\n                    }\n                });\n\n        List<StringExtract.StringExtractUnicodeTable.SCRIPT> supportedScripts = StringExtract.getSupportedScripts();\n        for (StringExtract.StringExtractUnicodeTable.SCRIPT s : supportedScripts) {\n            scriptCombo.addItem(s);\n        }\n        reloadScriptCombo();\n\n    }","id":8379,"modified_method":"private void customizeComponents() {\n        this.skipNSRLCheckBox.setSelected(KeywordSearchIngestService.getDefault().getSkipKnown());\n\n        try {\n            filesIndexedValue.setText(Integer.toString(KeywordSearch.getServer().queryNumIndexedFiles()));\n        } catch (SolrServerException ex) {\n            logger.log(Level.WARNING, \"Could not get number of indexed files\");\n\n        } catch (NoOpenCoreException ex) {\n            logger.log(Level.WARNING, \"Could not get number of indexed files\");\n        }\n\n        KeywordSearch.changeSupport.addPropertyChangeListener(KeywordSearch.NUM_FILES_CHANGE_EVT,\n                new PropertyChangeListener() {\n                    @Override\n                    public void propertyChange(PropertyChangeEvent evt) {\n                        String changed = evt.getPropertyName();\n                        Object newValue = evt.getNewValue();\n\n                        if (changed.equals(KeywordSearch.NUM_FILES_CHANGE_EVT)) {\n                            int newFilesIndexed = ((Integer) newValue).intValue();\n                            filesIndexedValue.setText(Integer.toString(newFilesIndexed));\n\n                        }\n                    }\n                });\n\n\n    }","commit_id":"599be983b8f48b03307c9b9b256cb396636b48ee","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        skipNSRLCheckBox = new javax.swing.JCheckBox();\n        filesIndexedLabel = new javax.swing.JLabel();\n        filesIndexedValue = new javax.swing.JLabel();\n        jSeparator1 = new javax.swing.JSeparator();\n        scriptLabel = new javax.swing.JLabel();\n        scriptCombo = new javax.swing.JComboBox();\n        jSeparator2 = new javax.swing.JSeparator();\n\n        skipNSRLCheckBox.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.skipNSRLCheckBox.text\")); // NOI18N\n        skipNSRLCheckBox.setToolTipText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.skipNSRLCheckBox.toolTipText\")); // NOI18N\n        skipNSRLCheckBox.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                skipNSRLCheckBoxActionPerformed(evt);\n            }\n        });\n\n        filesIndexedLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.filesIndexedLabel.text\")); // NOI18N\n\n        filesIndexedValue.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.filesIndexedValue.text\")); // NOI18N\n        filesIndexedValue.setMaximumSize(null);\n\n        scriptLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.scriptLabel.text\")); // NOI18N\n\n        scriptCombo.setToolTipText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.scriptCombo.toolTipText\")); // NOI18N\n        scriptCombo.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                scriptComboActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(scriptLabel)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(scriptCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(filesIndexedLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(filesIndexedValue, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addComponent(skipNSRLCheckBox))\n                        .addGap(0, 0, Short.MAX_VALUE)))\n                .addContainerGap())\n            .addComponent(jSeparator2)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGap(15, 15, 15)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(scriptLabel)\n                    .addComponent(scriptCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(4, 4, 4)\n                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(4, 4, 4)\n                .addComponent(skipNSRLCheckBox)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(filesIndexedValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(filesIndexedLabel))\n                .addContainerGap(187, Short.MAX_VALUE))\n        );\n    }","id":8380,"modified_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        langButtonGroup = new javax.swing.ButtonGroup();\n        skipNSRLCheckBox = new javax.swing.JCheckBox();\n        filesIndexedLabel = new javax.swing.JLabel();\n        filesIndexedValue = new javax.swing.JLabel();\n        jSeparator2 = new javax.swing.JSeparator();\n\n        skipNSRLCheckBox.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.skipNSRLCheckBox.text\")); // NOI18N\n        skipNSRLCheckBox.setToolTipText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.skipNSRLCheckBox.toolTipText\")); // NOI18N\n        skipNSRLCheckBox.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                skipNSRLCheckBoxActionPerformed(evt);\n            }\n        });\n\n        filesIndexedLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.filesIndexedLabel.text\")); // NOI18N\n\n        filesIndexedValue.setText(org.openide.util.NbBundle.getMessage(KeywordSearchConfigurationPanel2.class, \"KeywordSearchConfigurationPanel2.filesIndexedValue.text\")); // NOI18N\n        filesIndexedValue.setMaximumSize(null);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jSeparator2)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(skipNSRLCheckBox)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(filesIndexedLabel)\n                        .addGap(18, 18, 18)\n                        .addComponent(filesIndexedValue, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                .addContainerGap(205, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(skipNSRLCheckBox)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(filesIndexedLabel)\n                    .addComponent(filesIndexedValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap(51, Short.MAX_VALUE))\n        );\n    }","commit_id":"599be983b8f48b03307c9b9b256cb396636b48ee","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        listsScrollPane = new javax.swing.JScrollPane();\n        listsTable = new javax.swing.JTable();\n        jLabel1 = new javax.swing.JLabel();\n        jSeparator1 = new javax.swing.JSeparator();\n        languagesLabel = new javax.swing.JLabel();\n        languagesValLabel = new javax.swing.JLabel();\n        jSeparator2 = new javax.swing.JSeparator();\n\n        setPreferredSize(new java.awt.Dimension(172, 57));\n\n        listsScrollPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));\n\n        listsTable.setBackground(new java.awt.Color(240, 240, 240));\n        listsTable.setModel(new javax.swing.table.DefaultTableModel(\n            new Object [][] {\n\n            },\n            new String [] {\n\n            }\n        ));\n        listsTable.setShowHorizontalLines(false);\n        listsTable.setShowVerticalLines(false);\n        listsScrollPane.setViewportView(listsTable);\n\n        jLabel1.setText(org.openide.util.NbBundle.getMessage(KeywordSearchIngestSimplePanel.class, \"KeywordSearchIngestSimplePanel.jLabel1.text\")); // NOI18N\n\n        languagesLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchIngestSimplePanel.class, \"KeywordSearchIngestSimplePanel.languagesLabel.text\")); // NOI18N\n        languagesLabel.setToolTipText(org.openide.util.NbBundle.getMessage(KeywordSearchIngestSimplePanel.class, \"KeywordSearchIngestSimplePanel.languagesLabel.toolTipText\")); // NOI18N\n\n        languagesValLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchIngestSimplePanel.class, \"KeywordSearchIngestSimplePanel.languagesValLabel.text\")); // NOI18N\n        languagesValLabel.setToolTipText(org.openide.util.NbBundle.getMessage(KeywordSearchIngestSimplePanel.class, \"KeywordSearchIngestSimplePanel.languagesValLabel.toolTipText\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jSeparator1)\n            .addComponent(listsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)\n            .addComponent(jSeparator2)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(languagesLabel)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(10, 10, 10)\n                        .addComponent(languagesValLabel))\n                    .addComponent(jLabel1))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(languagesLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(languagesValLabel)\n                .addGap(9, 9, 9)\n                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jLabel1)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(listsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))\n        );\n    }","id":8381,"modified_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        listsScrollPane = new javax.swing.JScrollPane();\n        listsTable = new javax.swing.JTable();\n        jLabel1 = new javax.swing.JLabel();\n        languagesLabel = new javax.swing.JLabel();\n        languagesValLabel = new javax.swing.JLabel();\n        jSeparator2 = new javax.swing.JSeparator();\n\n        setPreferredSize(new java.awt.Dimension(300, 170));\n\n        listsScrollPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));\n        listsScrollPane.setPreferredSize(new java.awt.Dimension(300, 100));\n\n        listsTable.setBackground(new java.awt.Color(240, 240, 240));\n        listsTable.setModel(new javax.swing.table.DefaultTableModel(\n            new Object [][] {\n\n            },\n            new String [] {\n\n            }\n        ));\n        listsTable.setShowHorizontalLines(false);\n        listsTable.setShowVerticalLines(false);\n        listsScrollPane.setViewportView(listsTable);\n\n        jLabel1.setText(org.openide.util.NbBundle.getMessage(KeywordSearchIngestSimplePanel.class, \"KeywordSearchIngestSimplePanel.jLabel1.text\")); // NOI18N\n\n        languagesLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchIngestSimplePanel.class, \"KeywordSearchIngestSimplePanel.languagesLabel.text\")); // NOI18N\n        languagesLabel.setToolTipText(org.openide.util.NbBundle.getMessage(KeywordSearchIngestSimplePanel.class, \"KeywordSearchIngestSimplePanel.languagesLabel.toolTipText\")); // NOI18N\n\n        languagesValLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchIngestSimplePanel.class, \"KeywordSearchIngestSimplePanel.languagesValLabel.text\")); // NOI18N\n        languagesValLabel.setToolTipText(org.openide.util.NbBundle.getMessage(KeywordSearchIngestSimplePanel.class, \"KeywordSearchIngestSimplePanel.languagesValLabel.toolTipText\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jSeparator2)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(layout.createSequentialGroup()\n                                .addGap(10, 10, 10)\n                                .addComponent(languagesValLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                            .addGroup(layout.createSequentialGroup()\n                                .addComponent(languagesLabel)\n                                .addGap(0, 0, Short.MAX_VALUE)))\n                        .addContainerGap())\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(listsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)\n                            .addComponent(jLabel1))\n                        .addGap(0, 0, Short.MAX_VALUE))))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(languagesLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(languagesValLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jLabel1)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(listsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap())\n        );\n    }","commit_id":"599be983b8f48b03307c9b9b256cb396636b48ee","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Initializes buttons panel.\n     * @param uiContact the <tt>UIContact<\/tt> for which we initialize the\n     * button panel\n     */\n    private void initButtonsPanel(UIContact uiContact)\n    {\n        this.remove(chatButton);\n        this.remove(callButton);\n        this.remove(callVideoButton);\n        this.remove(desktopSharingButton);\n        this.remove(addContactButton);\n\n        if (!isSelected)\n            return;\n\n        int statusMessageLabelHeight = 0;\n        if (displayDetailsLabel.getText().length() > 0)\n            statusMessageLabelHeight = 20;\n        else\n            statusMessageLabelHeight = 15;\n\n        UIContactDetail imContact = null;\n        // For now we support instance messaging only for contacts in our\n        // contact list until it's implemented for external source contacts.\n        if (uiContact.getDescriptor() instanceof MetaContact)\n            imContact = uiContact.getDefaultContactDetail(\n                         OperationSetBasicInstantMessaging.class);\n\n        int x = (statusIcon == null ? 0 : statusIcon.getIconWidth())\n                + (statusLabel == null ? 0 : statusLabel.getIconTextGap())\n                + LEFT_BORDER\n                + STATUS_RIGHT_BORDER;\n\n        if (imContact != null)\n        {\n            constraints.anchor = GridBagConstraints.WEST;\n            constraints.fill = GridBagConstraints.NONE;\n            constraints.gridx = 1;\n            constraints.gridy = 2;\n            constraints.gridwidth = 1;\n            constraints.gridheight = 1;\n            constraints.weightx = 0f;\n            constraints.weighty = 0f;\n            this.chatButton.setBorder(null);\n            this.add(chatButton, constraints);\n\n            chatButton.setBounds(x,\n                nameLabel.getHeight() + statusMessageLabelHeight,\n                28, 28);\n\n            x += chatButton.getWidth();\n        }\n\n        UIContactDetail telephonyContact\n            = uiContact.getDefaultContactDetail(\n                OperationSetBasicTelephony.class);\n\n        // Check if contact has additional phone numbers, if yes show the\n        // call button\n        boolean hasPhone = false;\n\n        if(uiContact.getContactNode().getContactDescriptor().getDescriptor()\n            instanceof MetaContact)\n        {\n            MetaContact metaContact =\n                (MetaContact)uiContact.getContactNode().getContactDescriptor().\n                    getDescriptor();\n            Iterator<Contact> contacts = metaContact.getContacts();\n\n            while(contacts.hasNext() && !hasPhone)\n            {\n                Contact contact = contacts.next();\n                OperationSetServerStoredContactInfo infoOpSet =\n                    contact.getProtocolProvider().getOperationSet(\n                        OperationSetServerStoredContactInfo.class);\n                Iterator<GenericDetail> details = null;\n\n                if(infoOpSet != null)\n                {\n                    details = infoOpSet.getAllDetailsForContact(contact);\n\n                    while(details.hasNext())\n                    {\n                        GenericDetail d = details.next();\n                        if(d instanceof PhoneNumberDetail)\n                        {\n                            PhoneNumberDetail pnd = (PhoneNumberDetail)d;\n                            if(pnd.getNumber() != null &&\n                                pnd.getNumber().length() > 0)\n                            {\n                                hasPhone = true;\n                                break;\n                            }\n                         }\n                    }\n                }\n            }\n        }\n\n        // for SourceContact in history that do not support telephony, we\n        // show the button but disabled\n        List<ProtocolProviderService> providers\n            = GuiActivator.getOpSetRegisteredProviders(\n                OperationSetBasicTelephony.class,\n                null,\n                null);\n\n        if (telephonyContact != null ||\n            uiContact.getDescriptor() instanceof SourceContact ||\n            (hasPhone && providers.size() > 0))\n        {\n            constraints.anchor = GridBagConstraints.WEST;\n            constraints.fill = GridBagConstraints.NONE;\n            constraints.gridx = 2;\n            constraints.gridy = 2;\n            constraints.gridwidth = 1;\n            constraints.gridheight = 1;\n            constraints.weightx = 0f;\n            constraints.weighty = 0f;\n            this.callButton.setBorder(null);\n            this.add(callButton, constraints);\n\n            callButton.setBounds(x,\n                nameLabel.getHeight() + statusMessageLabelHeight, 28, 28);\n            callButton.setEnabled(telephonyContact != null || hasPhone);\n\n            x += callButton.getWidth();\n        }\n\n        UIContactDetail videoContact\n            = uiContact.getDefaultContactDetail(\n                OperationSetVideoTelephony.class);\n\n        if (videoContact != null)\n        {\n            constraints.anchor = GridBagConstraints.WEST;\n            constraints.fill = GridBagConstraints.NONE;\n            constraints.gridx = 3;\n            constraints.gridy = 2;\n            constraints.gridwidth = 1;\n            constraints.gridheight = 1;\n            constraints.weightx = 0f;\n            constraints.weighty = 0f;\n            this.callVideoButton.setBorder(null);\n            this.add(callVideoButton, constraints);\n\n            callVideoButton.setBounds(x,\n                nameLabel.getHeight() + statusMessageLabelHeight, 28, 28);\n\n            x += callVideoButton.getWidth();\n        }\n\n        UIContactDetail desktopContact\n            = uiContact.getDefaultContactDetail(\n                OperationSetDesktopSharingServer.class);\n\n        if (desktopContact != null)\n        {\n            constraints.anchor = GridBagConstraints.WEST;\n            constraints.fill = GridBagConstraints.NONE;\n            constraints.gridx = 4;\n            constraints.gridy = 2;\n            constraints.gridwidth = 1;\n            constraints.gridheight = 1;\n            constraints.weightx = 0f;\n            constraints.weighty = 0f;\n            this.desktopSharingButton.setBorder(null);\n            this.add(desktopSharingButton, constraints);\n\n            desktopSharingButton.setBounds(x,\n                nameLabel.getHeight() + statusMessageLabelHeight, 28, 28);\n\n            x += desktopSharingButton.getWidth();\n        }\n\n        if (uiContact.getDescriptor() instanceof SourceContact)\n        {\n            constraints.anchor = GridBagConstraints.WEST;\n            constraints.fill = GridBagConstraints.NONE;\n            constraints.gridx = 5;\n            constraints.gridy = 2;\n            constraints.gridwidth = 1;\n            constraints.gridheight = 1;\n            constraints.weightx = 0f;\n            constraints.weighty = 0f;\n            this.addContactButton.setBorder(null);\n            this.add(addContactButton, constraints);\n\n            addContactButton.setBounds(x,\n                nameLabel.getHeight() + statusMessageLabelHeight, 28, 28);\n\n            x += addContactButton.getWidth();\n        }\n\n        this.setBounds(0, 0, tree.getWidth(), getPreferredSize().height);\n    }","id":8382,"modified_method":"/**\n     * Initializes buttons panel.\n     * @param uiContact the <tt>UIContact<\/tt> for which we initialize the\n     * button panel\n     */\n    private void initButtonsPanel(UIContact uiContact)\n    {\n        this.remove(chatButton);\n        this.remove(callButton);\n        this.remove(callVideoButton);\n        this.remove(desktopSharingButton);\n        this.remove(addContactButton);\n\n        if (!isSelected)\n            return;\n\n        int statusMessageLabelHeight = 0;\n        if (displayDetailsLabel.getText().length() > 0)\n            statusMessageLabelHeight = 20;\n        else\n            statusMessageLabelHeight = 15;\n\n        UIContactDetail imContact = null;\n        // For now we support instance messaging only for contacts in our\n        // contact list until it's implemented for external source contacts.\n        if (uiContact.getDescriptor() instanceof MetaContact)\n            imContact = uiContact.getDefaultContactDetail(\n                         OperationSetBasicInstantMessaging.class);\n\n        int x = (statusIcon == null ? 0 : statusIcon.getIconWidth())\n                + (statusLabel == null ? 0 : statusLabel.getIconTextGap())\n                + LEFT_BORDER\n                + STATUS_RIGHT_BORDER;\n\n        if (imContact != null)\n        {\n            constraints.anchor = GridBagConstraints.WEST;\n            constraints.fill = GridBagConstraints.NONE;\n            constraints.gridx = 1;\n            constraints.gridy = 2;\n            constraints.gridwidth = 1;\n            constraints.gridheight = 1;\n            constraints.weightx = 0f;\n            constraints.weighty = 0f;\n            this.chatButton.setBorder(null);\n            this.add(chatButton, constraints);\n\n            chatButton.setBounds(x,\n                nameLabel.getHeight() + statusMessageLabelHeight,\n                28, 28);\n\n            x += chatButton.getWidth();\n        }\n\n        UIContactDetail telephonyContact\n            = uiContact.getDefaultContactDetail(\n                OperationSetBasicTelephony.class);\n\n        // Check if contact has additional phone numbers, if yes show the\n        // call button\n        boolean hasPhone = false;\n\n        if(uiContact.getContactNode().getContactDescriptor().getDescriptor()\n            instanceof MetaContact)\n        {\n            MetaContact metaContact =\n                (MetaContact)uiContact.getContactNode().getContactDescriptor().\n                    getDescriptor();\n            Iterator<Contact> contacts = metaContact.getContacts();\n\n            while(contacts.hasNext() && !hasPhone)\n            {\n                Contact contact = contacts.next();\n                OperationSetServerStoredContactInfo infoOpSet =\n                    contact.getProtocolProvider().getOperationSet(\n                        OperationSetServerStoredContactInfo.class);\n                Iterator<GenericDetail> details = null;\n\n                if(infoOpSet != null)\n                {\n                    details = infoOpSet.getAllDetailsForContact(contact);\n\n                    while(details.hasNext())\n                    {\n                        GenericDetail d = details.next();\n                        if(d instanceof PhoneNumberDetail && \n                            !(d instanceof PagerDetail) && \n                            !(d instanceof FaxDetail))\n                        {\n                            PhoneNumberDetail pnd = (PhoneNumberDetail)d;\n                            if(pnd.getNumber() != null &&\n                                pnd.getNumber().length() > 0)\n                            {\n                                hasPhone = true;\n                                break;\n                            }\n                         }\n                    }\n                }\n            }\n        }\n\n        // for SourceContact in history that do not support telephony, we\n        // show the button but disabled\n        List<ProtocolProviderService> providers\n            = GuiActivator.getOpSetRegisteredProviders(\n                OperationSetBasicTelephony.class,\n                null,\n                null);\n\n        if (telephonyContact != null ||\n            uiContact.getDescriptor() instanceof SourceContact ||\n            (hasPhone && providers.size() > 0))\n        {\n            constraints.anchor = GridBagConstraints.WEST;\n            constraints.fill = GridBagConstraints.NONE;\n            constraints.gridx = 2;\n            constraints.gridy = 2;\n            constraints.gridwidth = 1;\n            constraints.gridheight = 1;\n            constraints.weightx = 0f;\n            constraints.weighty = 0f;\n            this.callButton.setBorder(null);\n            this.add(callButton, constraints);\n\n            callButton.setBounds(x,\n                nameLabel.getHeight() + statusMessageLabelHeight, 28, 28);\n            callButton.setEnabled(telephonyContact != null || hasPhone);\n\n            x += callButton.getWidth();\n        }\n\n        UIContactDetail videoContact\n            = uiContact.getDefaultContactDetail(\n                OperationSetVideoTelephony.class);\n\n        if (videoContact != null)\n        {\n            constraints.anchor = GridBagConstraints.WEST;\n            constraints.fill = GridBagConstraints.NONE;\n            constraints.gridx = 3;\n            constraints.gridy = 2;\n            constraints.gridwidth = 1;\n            constraints.gridheight = 1;\n            constraints.weightx = 0f;\n            constraints.weighty = 0f;\n            this.callVideoButton.setBorder(null);\n            this.add(callVideoButton, constraints);\n\n            callVideoButton.setBounds(x,\n                nameLabel.getHeight() + statusMessageLabelHeight, 28, 28);\n\n            x += callVideoButton.getWidth();\n        }\n\n        UIContactDetail desktopContact\n            = uiContact.getDefaultContactDetail(\n                OperationSetDesktopSharingServer.class);\n\n        if (desktopContact != null)\n        {\n            constraints.anchor = GridBagConstraints.WEST;\n            constraints.fill = GridBagConstraints.NONE;\n            constraints.gridx = 4;\n            constraints.gridy = 2;\n            constraints.gridwidth = 1;\n            constraints.gridheight = 1;\n            constraints.weightx = 0f;\n            constraints.weighty = 0f;\n            this.desktopSharingButton.setBorder(null);\n            this.add(desktopSharingButton, constraints);\n\n            desktopSharingButton.setBounds(x,\n                nameLabel.getHeight() + statusMessageLabelHeight, 28, 28);\n\n            x += desktopSharingButton.getWidth();\n        }\n\n        if (uiContact.getDescriptor() instanceof SourceContact)\n        {\n            constraints.anchor = GridBagConstraints.WEST;\n            constraints.fill = GridBagConstraints.NONE;\n            constraints.gridx = 5;\n            constraints.gridy = 2;\n            constraints.gridwidth = 1;\n            constraints.gridheight = 1;\n            constraints.weightx = 0f;\n            constraints.weighty = 0f;\n            this.addContactButton.setBorder(null);\n            this.add(addContactButton, constraints);\n\n            addContactButton.setBounds(x,\n                nameLabel.getHeight() + statusMessageLabelHeight, 28, 28);\n\n            x += addContactButton.getWidth();\n        }\n\n        this.setBounds(0, 0, tree.getWidth(), getPreferredSize().height);\n    }","commit_id":"d5a74eae33338cd383aefe3f74f6f6f94ff2bbac","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Calls the given treeNode.\n     * @param treeNode the <tt>TreeNode<\/tt> to call\n     */\n    private void call(TreeNode treeNode)\n    {\n        List<UIContactDetail> telephonyContacts\n            = ((ContactNode) treeNode).getContactDescriptor()\n                .getContactDetailsForOperationSet(\n                    OperationSetBasicTelephony.class);\n\n        // Adds additional phone numbers found in contact information\n        ContactNode n = (ContactNode)treeNode;\n        MetaContact metaContact = null;\n\n        if(n.getContactDescriptor().getDescriptor() instanceof MetaContact)\n        {\n            metaContact = (MetaContact)n.getContactDescriptor().getDescriptor();\n            Iterator<Contact> contacts = metaContact.getContacts();\n\n            while(contacts.hasNext())\n            {\n                Contact contact = contacts.next();\n                OperationSetServerStoredContactInfo infoOpSet =\n                    contact.getProtocolProvider().getOperationSet(\n                        OperationSetServerStoredContactInfo.class);\n                Iterator<GenericDetail> details = null;\n                ArrayList<String> phones = new ArrayList<String>();\n\n                if(infoOpSet != null)\n                {\n                    details = infoOpSet.getAllDetailsForContact(contact);\n\n                    while(details.hasNext())\n                    {\n                        GenericDetail d = details.next();\n                        if(d instanceof PhoneNumberDetail)\n                        {\n                            PhoneNumberDetail pnd = (PhoneNumberDetail)d;\n                            if(pnd.getNumber() != null &&\n                                pnd.getNumber().length() > 0)\n                            {\n                                phones.add(pnd.getNumber());\n                                UIContactDetail cd =\n                                    new UIContactDetail(\n                                        pnd.getNumber(),\n                                        pnd.getNumber(),\n                                        null,\n                                        new ArrayList<String>(),\n                                        null,\n                                        null,\n                                        null)\n                                {\n                                    public PresenceStatus getPresenceStatus()\n                                    {\n                                        return null;\n                                    }\n                                };\n                                telephonyContacts.add(cd);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        ChooseCallAccountPopupMenu chooseAccountDialog = null;\n\n        if (telephonyContacts.size() == 1)\n        {\n            UIContactDetail detail = telephonyContacts.get(0);\n\n            ProtocolProviderService preferredProvider\n                = detail.getPreferredProtocolProvider(\n                    OperationSetBasicTelephony.class);\n\n            List<ProtocolProviderService> providers\n                = GuiActivator.getOpSetRegisteredProviders(\n                    OperationSetBasicTelephony.class,\n                    preferredProvider,\n                    detail.getPreferredProtocol(\n                        OperationSetBasicTelephony.class));\n\n            if (providers != null)\n            {\n                int providersCount = providers.size();\n\n                if (providersCount <= 0)\n                {\n                    new ErrorDialog(null,\n                        GuiActivator.getResources().getI18NString(\n                            \"service.gui.CALL_FAILED\"),\n                        GuiActivator.getResources().getI18NString(\n                            \"service.gui.NO_ONLINE_TELEPHONY_ACCOUNT\"))\n                    .showDialog();\n                }\n                else if (providersCount == 1)\n                {\n                    CallManager.createCall(\n                        providers.get(0), detail.getAddress());\n                }\n                else if (providersCount > 1)\n                    chooseAccountDialog = new ChooseCallAccountPopupMenu(\n                            tree, detail.getAddress(), providers);\n            }\n        }\n        else if (telephonyContacts.size() > 1)\n        {\n            chooseAccountDialog\n                = new ChooseCallAccountPopupMenu(tree, telephonyContacts);\n        }\n\n        // If the choose dialog is created we're going to show it.\n        if (chooseAccountDialog != null)\n        {\n            Point location = new Point(callButton.getX(),\n                callButton.getY() + callButton.getHeight());\n\n            SwingUtilities.convertPointToScreen(location, tree);\n\n            location.y = location.y\n                + tree.getPathBounds(tree.getSelectionPath()).y;\n\n            chooseAccountDialog.showPopupMenu(location.x + 8, location.y - 8);\n        }\n    }","id":8383,"modified_method":"/**\n     * Calls the given treeNode.\n     * @param treeNode the <tt>TreeNode<\/tt> to call\n     */\n    private void call(TreeNode treeNode)\n    {\n        List<UIContactDetail> telephonyContacts\n            = ((ContactNode) treeNode).getContactDescriptor()\n                .getContactDetailsForOperationSet(\n                    OperationSetBasicTelephony.class);\n\n        // Adds additional phone numbers found in contact information\n        ContactNode n = (ContactNode)treeNode;\n        MetaContact metaContact = null;\n\n        if(n.getContactDescriptor().getDescriptor() instanceof MetaContact)\n        {\n            metaContact = (MetaContact)n.getContactDescriptor().getDescriptor();\n            Iterator<Contact> contacts = metaContact.getContacts();\n\n            while(contacts.hasNext())\n            {\n                Contact contact = contacts.next();\n                OperationSetServerStoredContactInfo infoOpSet =\n                    contact.getProtocolProvider().getOperationSet(\n                        OperationSetServerStoredContactInfo.class);\n                Iterator<GenericDetail> details = null;\n                ArrayList<String> phones = new ArrayList<String>();\n\n                if(infoOpSet != null)\n                {\n                    details = infoOpSet.getAllDetailsForContact(contact);\n\n                    while(details.hasNext())\n                    {\n                        GenericDetail d = details.next();\n                        if(d instanceof PhoneNumberDetail && \n                            !(d instanceof PagerDetail) && \n                            !(d instanceof FaxDetail))\n                        {\n                            PhoneNumberDetail pnd = (PhoneNumberDetail)d;\n                            if(pnd.getNumber() != null &&\n                                pnd.getNumber().length() > 0)\n                            {\n                                phones.add(pnd.getNumber());\n                                UIContactDetail cd =\n                                    new UIContactDetail(\n                                        pnd.getNumber(),\n                                        pnd.getNumber() + \n                                        \" (\" + pnd.getDetailDisplayName() + \")\",\n                                        null,\n                                        new ArrayList<String>(),\n                                        null,\n                                        null,\n                                        null)\n                                {\n                                    public PresenceStatus getPresenceStatus()\n                                    {\n                                        return null;\n                                    }\n                                };\n                                telephonyContacts.add(cd);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        ChooseCallAccountPopupMenu chooseAccountDialog = null;\n\n        if (telephonyContacts.size() == 1)\n        {\n            UIContactDetail detail = telephonyContacts.get(0);\n\n            ProtocolProviderService preferredProvider\n                = detail.getPreferredProtocolProvider(\n                    OperationSetBasicTelephony.class);\n\n            List<ProtocolProviderService> providers\n                = GuiActivator.getOpSetRegisteredProviders(\n                    OperationSetBasicTelephony.class,\n                    preferredProvider,\n                    detail.getPreferredProtocol(\n                        OperationSetBasicTelephony.class));\n\n            if (providers != null)\n            {\n                int providersCount = providers.size();\n\n                if (providersCount <= 0)\n                {\n                    new ErrorDialog(null,\n                        GuiActivator.getResources().getI18NString(\n                            \"service.gui.CALL_FAILED\"),\n                        GuiActivator.getResources().getI18NString(\n                            \"service.gui.NO_ONLINE_TELEPHONY_ACCOUNT\"))\n                    .showDialog();\n                }\n                else if (providersCount == 1)\n                {\n                    CallManager.createCall(\n                        providers.get(0), detail.getAddress());\n                }\n                else if (providersCount > 1)\n                    chooseAccountDialog = new ChooseCallAccountPopupMenu(\n                            tree, detail.getAddress(), providers);\n            }\n        }\n        else if (telephonyContacts.size() > 1)\n        {\n            chooseAccountDialog\n                = new ChooseCallAccountPopupMenu(tree, telephonyContacts);\n        }\n\n        // If the choose dialog is created we're going to show it.\n        if (chooseAccountDialog != null)\n        {\n            Point location = new Point(callButton.getX(),\n                callButton.getY() + callButton.getHeight());\n\n            SwingUtilities.convertPointToScreen(location, tree);\n\n            location.y = location.y\n                + tree.getPathBounds(tree.getSelectionPath()).y;\n\n            chooseAccountDialog.showPopupMenu(location.x + 8, location.y - 8);\n        }\n    }","commit_id":"d5a74eae33338cd383aefe3f74f6f6f94ff2bbac","url":"https://github.com/jitsi/jitsi"},{"original_method":"public SmileysSelectorBox getSmileysBox()\n    {\n        return smileysBox;\n    }","id":8384,"modified_method":"/**\n     * Get the smileys box.\n     * \n     * @return the smileys box\n     */\n    public SmileysSelectorBox getSmileysBox()\n    {\n        return smileysBox;\n    }","commit_id":"d5a74eae33338cd383aefe3f74f6f6f94ff2bbac","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Initializes the menu, by adding all containing menu items.\n     */\n    private void init()\n    {\n        addContactItem.setText(GuiActivator.getResources()\n            .getI18NString(\"service.gui.ADD_CONTACT_TO\")\n                + \" \" + metaContact.getDisplayName());\n\n        //Initialize moveTo menu.\n        Iterator<MetaContactGroup> groups\n            = GuiActivator.getContactListService().getRoot().getSubgroups();\n\n        if(groups.hasNext())\n        {\n            JLabel infoLabel = new JLabel(\n                GuiActivator.getResources()\n                    .getI18NString(\"service.gui.SELECT_GROUP\"));\n\n            infoLabel.setBorder(BorderFactory.createEmptyBorder(0, 5, 0, 0));\n            infoLabel.setFont(infoLabel.getFont().deriveFont(Font.BOLD));\n\n            this.moveToMenu.add(infoLabel);\n            this.moveToMenu.addSeparator();\n        }\n\n        while (groups.hasNext())\n        {\n            MetaContactGroup group = groups.next();\n\n            JMenuItem menuItem = new JMenuItem(group.getGroupName());\n\n            menuItem.setName(moveToPrefix + group.getMetaUID());\n            menuItem.addActionListener(this);\n\n            this.moveToMenu.add(menuItem);\n        }\n\n        //Initialize removeContact menu.\n        Iterator<Contact> contacts = metaContact.getContacts();\n\n        if (metaContact.getContactCount() > 1)\n        {\n            JMenuItem allItem = new JMenuItem(allContactsString);\n            JMenuItem allItem1 = new JMenuItem(allContactsString);\n\n            allItem.addActionListener(this);\n            allItem1.addActionListener(this);\n\n            allItem.setName(removeContactPrefix + \"allContacts\");\n            allItem1.setName(moveSubcontactPrefix + \"allContacts\");\n\n            this.removeContactMenu.add(allItem);\n            this.moveSubcontactMenu.add(allItem1);\n            this.removeContactMenu.addSeparator();\n            this.moveSubcontactMenu.addSeparator();\n        }\n\n        List<ProtocolProviderService> providers =\n            CallManager.getTelephonyProviders();\n        boolean hasPhones = false;\n        boolean separator = false;\n\n        while (contacts.hasNext())\n        {\n            Contact contact = contacts.next();\n\n            ProtocolProviderService protocolProvider\n                = contact.getProtocolProvider();\n\n            String contactAddress = contact.getAddress();\n\n            Icon protocolIcon = new ImageIcon(\n                    createContactStatusImage(contact));\n\n            this.removeContactMenu.add(\n                createMenuItem( contactAddress,\n                            removeContactPrefix + contact.getAddress()\n                            + protocolProvider.getProtocolName(),\n                            protocolIcon));\n\n            this.moveSubcontactMenu.add(\n                createMenuItem( contactAddress,\n                            moveSubcontactPrefix + contact.getAddress()\n                            + protocolProvider.getProtocolName(),\n                            protocolIcon));\n\n            OperationSetServerStoredContactInfo infoOpSet =\n                contact.getProtocolProvider().getOperationSet(\n                    OperationSetServerStoredContactInfo.class);\n            Iterator<GenericDetail> details = null;\n            ArrayList<String> phones = new ArrayList<String>();\n\n            if(infoOpSet != null)\n            {\n                details = infoOpSet.getAllDetailsForContact(contact);\n\n                while(details.hasNext())\n                {\n                    GenericDetail d = details.next();\n                    if(d instanceof PhoneNumberDetail)\n                    {\n                        PhoneNumberDetail pnd = (PhoneNumberDetail)d;\n                        if(pnd.getNumber() != null &&\n                            pnd.getNumber().length() > 0)\n                        {\n                            phones.add(pnd.getNumber());\n                            hasPhones = true;\n                        }\n                    }\n                }\n            }\n\n            // add all the contacts that support telephony to the call menu\n            if (metaContact.getContactCount() > 1 || phones.size() > 0)\n            {\n                if (protocolProvider.getOperationSet(\n                        OperationSetBasicTelephony.class) != null &&\n                        hasContactCapabilities(contact,\n                                OperationSetBasicTelephony.class))\n                {\n                    callContactMenu.add(\n                        createMenuItem(contactAddress,\n                                       callContactPrefix + contact.getAddress()\n                                       + protocolProvider.getProtocolName(),\n                                       protocolIcon));\n                    separator = true;\n                }\n\n                if (protocolProvider.getOperationSet(\n                        OperationSetVideoTelephony.class) != null &&\n                        hasContactCapabilities(contact,\n                                OperationSetVideoTelephony.class))\n                {\n                    videoCallMenu.add(\n                        createMenuItem( contactAddress,\n                                        videoCallPrefix + contact.getAddress()\n                                        + protocolProvider.getProtocolName(),\n                                        protocolIcon));\n                }\n\n                if (protocolProvider.getOperationSet(\n                        OperationSetDesktopSharingServer.class) != null &&\n                        hasContactCapabilities(contact,\n                                OperationSetDesktopSharingServer.class))\n                {\n                    multiContactFullShareMenu.add(\n                        createMenuItem( contactAddress,\n                                        fullDesktopSharingPrefix\n                                        + contact.getAddress()\n                                        + protocolProvider.getProtocolName(),\n                                        protocolIcon));\n\n                    multiContactRegionShareMenu.add(\n                        createMenuItem( contactAddress,\n                                        regionDesktopSharingPrefix\n                                        + contact.getAddress()\n                                        + protocolProvider.getProtocolName(),\n                                        protocolIcon));\n                }\n\n                OperationSetExtendedAuthorizations authOpSet\n                    = protocolProvider.getOperationSet(\n                        OperationSetExtendedAuthorizations.class);\n\n                if (authOpSet != null\n                    && authOpSet.getSubscriptionStatus(contact) != null\n                    && !authOpSet.getSubscriptionStatus(contact)\n                        .equals(SubscriptionStatus.Subscribed))\n                {\n                    if (firstUnsubscribedContact == null)\n                        firstUnsubscribedContact = contact;\n\n                    multiContactRequestAuthMenu.add(\n                        createMenuItem( contactAddress,\n                                        requestAuthPrefix\n                                        + contact.getAddress()\n                                        + protocolProvider.getProtocolName(),\n                                        protocolIcon));\n                }\n            }\n\n            for(String phone : phones)\n            {\n                if(providers.size() > 0)\n                {\n                    JMenuItem menu = createMenuItem(phone,\n                        callPhonePrefix + phone,\n                        null);\n                    callContactMenu.add(menu);\n                    separator = true;\n                }\n            }\n\n            if(separator && contacts.hasNext())\n            {\n                callContactMenu.addSeparator();\n                separator = false;\n            }\n        }\n\n        // if a separator is the last item, remove it\n        Component c = null;\n\n        if(callContactMenu.getMenuComponentCount() > 0)\n            c = callContactMenu.getMenuComponent(\n                callContactMenu.getMenuComponentCount() - 1);\n\n        if(c != null && (c instanceof JSeparator))\n        {\n            callContactMenu.remove(c);\n        }\n\n        this.add(sendMessageItem);\n\n        if (metaContact.getDefaultContact(\n            OperationSetSmsMessaging.class) != null)\n        {\n            this.add(sendSmsItem);\n            sendSmsItem.addActionListener(this);\n            sendSmsItem.setName(\"sendSms\");\n        }\n\n        if (callContactMenu.getItemCount() > 1)\n        {\n            this.add(callContactMenu);\n        }\n        else\n        {\n            if((hasPhones && callContactMenu.getItemCount() > 0))\n            {\n                JMenuItem item = callContactMenu.getItem(0);\n                this.callItem.setName(item.getName());\n            }\n            else\n            {\n                this.callItem.setName(\"call\");\n            }\n\n            this.callItem.addActionListener(this);\n            this.add(callItem);\n        }\n\n        if (videoCallMenu.getItemCount() > 1)\n        {\n            this.add(videoCallMenu);\n        }\n        else\n        {\n            this.add(videoCallItem);\n            this.videoCallItem.setName(\"videoCall\");\n            this.videoCallItem.addActionListener(this);\n        }\n\n        if (multiContactFullShareMenu.getItemCount() > 1)\n        {\n            add(multiContactFullShareMenu);\n            add(multiContactRegionShareMenu);\n        }\n        else\n        {\n            fullShareMenuItem.setName(\"shareFullScreen\");\n            fullShareMenuItem.addActionListener(this);\n            add(fullShareMenuItem);\n\n            regionShareMenuItem.setName(\"shareRegion\");\n            regionShareMenuItem.addActionListener(this);\n            add(regionShareMenuItem);\n        }\n\n        add(sendFileItem);\n\n        addSeparator();\n\n        add(moveToMenu);\n        add(moveSubcontactMenu);\n\n        addSeparator();\n\n        if (!ConfigurationManager.isAddContactDisabled())\n            add(addContactItem);\n\n        addSeparator();\n\n        if (!ConfigurationManager.isRemoveContactDisabled())\n            add(removeContactMenu);\n\n        add(renameContactItem);\n\n        addSeparator();\n\n        add(viewHistoryItem);\n\n        addSeparator();\n\n        Contact defaultContact = metaContact.getDefaultContact();\n        int authRequestItemCount = multiContactRequestAuthMenu.getItemCount();\n        // If we have more than one request to make.\n        if (authRequestItemCount > 1)\n        {\n            this.add(multiContactRequestAuthMenu);\n        }\n        // If we have more than one protocol contacts and only one need\n        // authorization or we have only one contact that needs authorization.\n        else if (authRequestItemCount == 1\n            || (metaContact.getContactCount() == 1\n                && defaultContact.getProtocolProvider()\n                    .getOperationSet(OperationSetExtendedAuthorizations.class)\n                        != null)\n                && !defaultContact.getProtocolProvider()\n                    .getOperationSet(OperationSetExtendedAuthorizations.class)\n                        .getSubscriptionStatus(defaultContact).equals(\n                            SubscriptionStatus.Subscribed))\n        {\n            this.add(requestAuthMenuItem);\n            this.requestAuthMenuItem.setName(\"requestAuth\");\n            this.requestAuthMenuItem.addActionListener(this);\n        }\n\n        initPluginComponents();\n\n        sendMessageItem.setName(\"sendMessage\");\n        sendFileItem.setName(\"sendFile\");\n        moveToMenu.setName(\"moveToGroup\");\n        addContactItem.setName(\"addContact\");\n        renameContactItem.setName(\"renameContact\");\n        viewHistoryItem.setName(\"viewHistory\");\n\n        sendMessageItem.addActionListener(this);\n        sendFileItem.addActionListener(this);\n        renameContactItem.addActionListener(this);\n        viewHistoryItem.addActionListener(this);\n        addContactItem.addActionListener(this);\n\n        // Disable all menu items that do nothing.\n        if (metaContact.getDefaultContact(\n            OperationSetFileTransfer.class) == null)\n            this.sendFileItem.setEnabled(false);\n\n        if (metaContact.getDefaultContact(\n            OperationSetBasicTelephony.class) == null && !hasPhones)\n            this.callItem.setEnabled(false);\n\n        if (metaContact.getDefaultContact(\n            OperationSetVideoTelephony.class) == null)\n            this.videoCallItem.setEnabled(false);\n\n        if (metaContact.getDefaultContact(\n            OperationSetDesktopSharingServer.class) == null)\n        {\n            fullShareMenuItem.setEnabled(false);\n            regionShareMenuItem.setEnabled(false);\n        }\n\n        if (metaContact.getDefaultContact(\n            OperationSetBasicInstantMessaging.class) == null)\n            this.sendMessageItem.setEnabled(false);\n    }","id":8385,"modified_method":"/**\n     * Initializes the menu, by adding all containing menu items.\n     */\n    private void init()\n    {\n        addContactItem.setText(GuiActivator.getResources()\n            .getI18NString(\"service.gui.ADD_CONTACT_TO\")\n                + \" \" + metaContact.getDisplayName());\n\n        //Initialize moveTo menu.\n        Iterator<MetaContactGroup> groups\n            = GuiActivator.getContactListService().getRoot().getSubgroups();\n\n        if(groups.hasNext())\n        {\n            JLabel infoLabel = new JLabel(\n                GuiActivator.getResources()\n                    .getI18NString(\"service.gui.SELECT_GROUP\"));\n\n            infoLabel.setBorder(BorderFactory.createEmptyBorder(0, 5, 0, 0));\n            infoLabel.setFont(infoLabel.getFont().deriveFont(Font.BOLD));\n\n            this.moveToMenu.add(infoLabel);\n            this.moveToMenu.addSeparator();\n        }\n\n        while (groups.hasNext())\n        {\n            MetaContactGroup group = groups.next();\n\n            JMenuItem menuItem = new JMenuItem(group.getGroupName());\n\n            menuItem.setName(moveToPrefix + group.getMetaUID());\n            menuItem.addActionListener(this);\n\n            this.moveToMenu.add(menuItem);\n        }\n\n        //Initialize removeContact menu.\n        Iterator<Contact> contacts = metaContact.getContacts();\n\n        if (metaContact.getContactCount() > 1)\n        {\n            JMenuItem allItem = new JMenuItem(allContactsString);\n            JMenuItem allItem1 = new JMenuItem(allContactsString);\n\n            allItem.addActionListener(this);\n            allItem1.addActionListener(this);\n\n            allItem.setName(removeContactPrefix + \"allContacts\");\n            allItem1.setName(moveSubcontactPrefix + \"allContacts\");\n\n            this.removeContactMenu.add(allItem);\n            this.moveSubcontactMenu.add(allItem1);\n            this.removeContactMenu.addSeparator();\n            this.moveSubcontactMenu.addSeparator();\n        }\n\n        List<ProtocolProviderService> providers =\n            CallManager.getTelephonyProviders();\n        boolean hasPhones = false;\n        boolean separator = false;\n\n        while (contacts.hasNext())\n        {\n            Contact contact = contacts.next();\n\n            ProtocolProviderService protocolProvider\n                = contact.getProtocolProvider();\n\n            String contactAddress = contact.getAddress();\n\n            Icon protocolIcon = new ImageIcon(\n                    createContactStatusImage(contact));\n\n            this.removeContactMenu.add(\n                createMenuItem( contactAddress,\n                            removeContactPrefix + contact.getAddress()\n                            + protocolProvider.getProtocolName(),\n                            protocolIcon));\n\n            this.moveSubcontactMenu.add(\n                createMenuItem( contactAddress,\n                            moveSubcontactPrefix + contact.getAddress()\n                            + protocolProvider.getProtocolName(),\n                            protocolIcon));\n\n            OperationSetServerStoredContactInfo infoOpSet =\n                contact.getProtocolProvider().getOperationSet(\n                    OperationSetServerStoredContactInfo.class);\n            Iterator<GenericDetail> details = null;\n            ArrayList<String> phones = new ArrayList<String>();\n\n            if(infoOpSet != null)\n            {\n                details = infoOpSet.getAllDetailsForContact(contact);\n\n                while(details.hasNext())\n                {\n                    GenericDetail d = details.next();\n                    if(d instanceof PhoneNumberDetail && \n                        !(d instanceof PagerDetail) && \n                        !(d instanceof FaxDetail))\n                    {\n                        PhoneNumberDetail pnd = (PhoneNumberDetail)d;\n                        if(pnd.getNumber() != null &&\n                            pnd.getNumber().length() > 0)\n                        {\n                            phones.add(pnd.getNumber() \n                                + \" (\" + pnd.getDetailDisplayName() + \")\");\n                            hasPhones = true;\n                        }\n                    }\n                }\n            }\n\n            // add all the contacts that support telephony to the call menu\n            if (metaContact.getContactCount() > 1 || phones.size() > 0)\n            {\n                if (protocolProvider.getOperationSet(\n                        OperationSetBasicTelephony.class) != null &&\n                        hasContactCapabilities(contact,\n                                OperationSetBasicTelephony.class))\n                {\n                    callContactMenu.add(\n                        createMenuItem(contactAddress,\n                                       callContactPrefix + contact.getAddress()\n                                       + protocolProvider.getProtocolName(),\n                                       protocolIcon));\n                    separator = true;\n                }\n\n                if (protocolProvider.getOperationSet(\n                        OperationSetVideoTelephony.class) != null &&\n                        hasContactCapabilities(contact,\n                                OperationSetVideoTelephony.class))\n                {\n                    videoCallMenu.add(\n                        createMenuItem( contactAddress,\n                                        videoCallPrefix + contact.getAddress()\n                                        + protocolProvider.getProtocolName(),\n                                        protocolIcon));\n                }\n\n                if (protocolProvider.getOperationSet(\n                        OperationSetDesktopSharingServer.class) != null &&\n                        hasContactCapabilities(contact,\n                                OperationSetDesktopSharingServer.class))\n                {\n                    multiContactFullShareMenu.add(\n                        createMenuItem( contactAddress,\n                                        fullDesktopSharingPrefix\n                                        + contact.getAddress()\n                                        + protocolProvider.getProtocolName(),\n                                        protocolIcon));\n\n                    multiContactRegionShareMenu.add(\n                        createMenuItem( contactAddress,\n                                        regionDesktopSharingPrefix\n                                        + contact.getAddress()\n                                        + protocolProvider.getProtocolName(),\n                                        protocolIcon));\n                }\n\n                OperationSetExtendedAuthorizations authOpSet\n                    = protocolProvider.getOperationSet(\n                        OperationSetExtendedAuthorizations.class);\n\n                if (authOpSet != null\n                    && authOpSet.getSubscriptionStatus(contact) != null\n                    && !authOpSet.getSubscriptionStatus(contact)\n                        .equals(SubscriptionStatus.Subscribed))\n                {\n                    if (firstUnsubscribedContact == null)\n                        firstUnsubscribedContact = contact;\n\n                    multiContactRequestAuthMenu.add(\n                        createMenuItem( contactAddress,\n                                        requestAuthPrefix\n                                        + contact.getAddress()\n                                        + protocolProvider.getProtocolName(),\n                                        protocolIcon));\n                }\n            }\n\n            for(String phone : phones)\n            {\n                String p = phone.substring(0, phone.lastIndexOf(\"(\") - 1);\n                if(providers.size() > 0)\n                {\n                    JMenuItem menu = createMenuItem(phone,\n                        callPhonePrefix + p,\n                        null);\n                    callContactMenu.add(menu);\n                    separator = true;\n                }\n            }\n\n            if(separator && contacts.hasNext())\n            {\n                callContactMenu.addSeparator();\n                separator = false;\n            }\n        }\n\n        // if a separator is the last item, remove it\n        Component c = null;\n\n        if(callContactMenu.getMenuComponentCount() > 0)\n            c = callContactMenu.getMenuComponent(\n                callContactMenu.getMenuComponentCount() - 1);\n\n        if(c != null && (c instanceof JSeparator))\n        {\n            callContactMenu.remove(c);\n        }\n\n        this.add(sendMessageItem);\n\n        if (metaContact.getDefaultContact(\n            OperationSetSmsMessaging.class) != null)\n        {\n            this.add(sendSmsItem);\n            sendSmsItem.addActionListener(this);\n            sendSmsItem.setName(\"sendSms\");\n        }\n\n        if (callContactMenu.getItemCount() > 1)\n        {\n            this.add(callContactMenu);\n        }\n        else\n        {\n            if((hasPhones && callContactMenu.getItemCount() > 0))\n            {\n                JMenuItem item = callContactMenu.getItem(0);\n                this.callItem.setName(item.getName());\n            }\n            else\n            {\n                this.callItem.setName(\"call\");\n            }\n\n            this.callItem.addActionListener(this);\n            this.add(callItem);\n        }\n\n        if (videoCallMenu.getItemCount() > 1)\n        {\n            this.add(videoCallMenu);\n        }\n        else\n        {\n            this.add(videoCallItem);\n            this.videoCallItem.setName(\"videoCall\");\n            this.videoCallItem.addActionListener(this);\n        }\n\n        if (multiContactFullShareMenu.getItemCount() > 1)\n        {\n            add(multiContactFullShareMenu);\n            add(multiContactRegionShareMenu);\n        }\n        else\n        {\n            fullShareMenuItem.setName(\"shareFullScreen\");\n            fullShareMenuItem.addActionListener(this);\n            add(fullShareMenuItem);\n\n            regionShareMenuItem.setName(\"shareRegion\");\n            regionShareMenuItem.addActionListener(this);\n            add(regionShareMenuItem);\n        }\n\n        add(sendFileItem);\n\n        addSeparator();\n\n        add(moveToMenu);\n        add(moveSubcontactMenu);\n\n        addSeparator();\n\n        if (!ConfigurationManager.isAddContactDisabled())\n            add(addContactItem);\n\n        addSeparator();\n\n        if (!ConfigurationManager.isRemoveContactDisabled())\n            add(removeContactMenu);\n\n        add(renameContactItem);\n\n        addSeparator();\n\n        add(viewHistoryItem);\n\n        addSeparator();\n\n        Contact defaultContact = metaContact.getDefaultContact();\n        int authRequestItemCount = multiContactRequestAuthMenu.getItemCount();\n        // If we have more than one request to make.\n        if (authRequestItemCount > 1)\n        {\n            this.add(multiContactRequestAuthMenu);\n        }\n        // If we have more than one protocol contacts and only one need\n        // authorization or we have only one contact that needs authorization.\n        else if (authRequestItemCount == 1\n            || (metaContact.getContactCount() == 1\n                && defaultContact.getProtocolProvider()\n                    .getOperationSet(OperationSetExtendedAuthorizations.class)\n                        != null)\n                && !defaultContact.getProtocolProvider()\n                    .getOperationSet(OperationSetExtendedAuthorizations.class)\n                        .getSubscriptionStatus(defaultContact).equals(\n                            SubscriptionStatus.Subscribed))\n        {\n            this.add(requestAuthMenuItem);\n            this.requestAuthMenuItem.setName(\"requestAuth\");\n            this.requestAuthMenuItem.addActionListener(this);\n        }\n\n        initPluginComponents();\n\n        sendMessageItem.setName(\"sendMessage\");\n        sendFileItem.setName(\"sendFile\");\n        moveToMenu.setName(\"moveToGroup\");\n        addContactItem.setName(\"addContact\");\n        renameContactItem.setName(\"renameContact\");\n        viewHistoryItem.setName(\"viewHistory\");\n\n        sendMessageItem.addActionListener(this);\n        sendFileItem.addActionListener(this);\n        renameContactItem.addActionListener(this);\n        viewHistoryItem.addActionListener(this);\n        addContactItem.addActionListener(this);\n\n        // Disable all menu items that do nothing.\n        if (metaContact.getDefaultContact(\n            OperationSetFileTransfer.class) == null)\n            this.sendFileItem.setEnabled(false);\n\n        if (metaContact.getDefaultContact(\n            OperationSetBasicTelephony.class) == null && !hasPhones)\n            this.callItem.setEnabled(false);\n\n        if (metaContact.getDefaultContact(\n            OperationSetVideoTelephony.class) == null)\n            this.videoCallItem.setEnabled(false);\n\n        if (metaContact.getDefaultContact(\n            OperationSetDesktopSharingServer.class) == null)\n        {\n            fullShareMenuItem.setEnabled(false);\n            regionShareMenuItem.setEnabled(false);\n        }\n\n        if (metaContact.getDefaultContact(\n            OperationSetBasicInstantMessaging.class) == null)\n            this.sendMessageItem.setEnabled(false);\n    }","commit_id":"d5a74eae33338cd383aefe3f74f6f6f94ff2bbac","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns the tool tip opened on mouse over.\n     * @return the tool tip opened on mouse over\n     */\n    public ExtendedTooltip getToolTip()\n    {\n        ExtendedTooltip tip = new ExtendedTooltip(\n            GuiActivator.getUIService().getMainFrame(), true);\n\n        byte[] avatarImage = metaContact.getAvatar();\n\n        if (avatarImage != null && avatarImage.length > 0)\n            tip.setImage(new ImageIcon(avatarImage));\n\n        tip.setTitle(metaContact.getDisplayName());\n\n        Iterator<Contact> i = metaContact.getContacts();\n\n        String statusMessage = null;\n        Contact protocolContact;\n        while (i.hasNext())\n        {\n            protocolContact = i.next();\n\n            ImageIcon protocolStatusIcon\n                = ImageLoader.getIndexedProtocolIcon(\n                        ImageUtils.getBytesInImage(\n                            protocolContact.getPresenceStatus().getStatusIcon()),\n                        protocolContact.getProtocolProvider());\n\n            String contactAddress = protocolContact.getAddress();\n            //String statusMessage = protocolContact.getStatusMessage();\n\n            tip.addLine(protocolStatusIcon, contactAddress);\n            OperationSetServerStoredContactInfo infoOpSet =\n                protocolContact.getProtocolProvider().getOperationSet(\n                    OperationSetServerStoredContactInfo.class);\n\n            if(infoOpSet != null)\n            {\n                Iterator<GenericDetail> details =\n                    infoOpSet.getAllDetailsForContact(protocolContact);\n\n                while(details.hasNext())\n                {\n                    GenericDetail d = details.next();\n                    if(d instanceof PhoneNumberDetail)\n                    {\n                        PhoneNumberDetail pnd = (PhoneNumberDetail)d;\n                        if(pnd.getNumber() != null &&\n                            pnd.getNumber().length() > 0)\n                        {\n                            tip.addLine(null, pnd.getNumber());\n                        }\n                     }\n                }\n            }\n\n            // Set the first found status message.\n            if (statusMessage == null\n                && protocolContact.getStatusMessage() != null\n                && protocolContact.getStatusMessage().length() > 0)\n                statusMessage = protocolContact.getStatusMessage();\n        }\n\n        if (statusMessage != null)\n            tip.setBottomText(statusMessage);\n\n        return tip;\n    }","id":8386,"modified_method":"/**\n     * Returns the tool tip opened on mouse over.\n     * @return the tool tip opened on mouse over\n     */\n    public ExtendedTooltip getToolTip()\n    {\n        ExtendedTooltip tip = new ExtendedTooltip(\n            GuiActivator.getUIService().getMainFrame(), true);\n\n        byte[] avatarImage = metaContact.getAvatar();\n\n        if (avatarImage != null && avatarImage.length > 0)\n            tip.setImage(new ImageIcon(avatarImage));\n\n        tip.setTitle(metaContact.getDisplayName());\n\n        Iterator<Contact> i = metaContact.getContacts();\n\n        String statusMessage = null;\n        Contact protocolContact;\n        while (i.hasNext())\n        {\n            protocolContact = i.next();\n\n            ImageIcon protocolStatusIcon\n                = ImageLoader.getIndexedProtocolIcon(\n                        ImageUtils.getBytesInImage(\n                            protocolContact.getPresenceStatus().getStatusIcon()),\n                        protocolContact.getProtocolProvider());\n\n            String contactAddress = protocolContact.getAddress();\n            //String statusMessage = protocolContact.getStatusMessage();\n\n            tip.addLine(protocolStatusIcon, contactAddress);\n            OperationSetServerStoredContactInfo infoOpSet =\n                protocolContact.getProtocolProvider().getOperationSet(\n                    OperationSetServerStoredContactInfo.class);\n\n            if(infoOpSet != null)\n            {\n                Iterator<GenericDetail> details =\n                    infoOpSet.getAllDetailsForContact(protocolContact);\n\n                while(details.hasNext())\n                {\n                    GenericDetail d = details.next();\n                    if(d instanceof PhoneNumberDetail &&\n                        !(d instanceof FaxDetail) && \n                        !(d instanceof PagerDetail))\n                    {\n                        PhoneNumberDetail pnd = (PhoneNumberDetail)d;\n                        if(pnd.getNumber() != null &&\n                            pnd.getNumber().length() > 0)\n                        {\n                            tip.addLine(null, pnd.getNumber() + \n                                \" (\" + pnd.getDetailDisplayName() + \")\");\n                        }\n                     }\n                }\n            }\n\n            // Set the first found status message.\n            if (statusMessage == null\n                && protocolContact.getStatusMessage() != null\n                && protocolContact.getStatusMessage().length() > 0)\n                statusMessage = protocolContact.getStatusMessage();\n        }\n\n        if (statusMessage != null)\n            tip.setBottomText(statusMessage);\n\n        return tip;\n    }","commit_id":"d5a74eae33338cd383aefe3f74f6f6f94ff2bbac","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Sets the prefix to be used when calling this contact detail.\n     *\n     * @param the prefix to be used when calling this contact detail\n     */\n    public void setPrefix(String prefix)\n    {\n        this.prefix = prefix;\n    }","id":8387,"modified_method":"/**\n     * Sets the prefix to be used when calling this contact detail.\n     *\n     * @param prefix the prefix to be used when calling this contact detail\n     */\n    public void setPrefix(String prefix)\n    {\n        this.prefix = prefix;\n    }","commit_id":"d5a74eae33338cd383aefe3f74f6f6f94ff2bbac","url":"https://github.com/jitsi/jitsi"},{"original_method":"public static void main(String args[]) {\n        I2PAppContext ctx = I2PAppContext.getGlobalContext();\n        SessionKey key = ctx.keyGenerator().generateSessionKey();\n\t\tHash asdfs = HMACSHA256Generator.getInstance().calculate(key, \"qwerty\".getBytes());\n\t\t\t\n\t\tint times = 100000;\n\t\tlong shorttime = 0;\n\t\tlong medtime = 0;\n\t\tlong longtime = 0;\n\t\tlong minShort = 0;\n\t\tlong maxShort = 0;\n\t\tlong minMed = 0;\n\t\tlong maxMed = 0;\n\t\tlong minLong = 0;\n\t\tlong maxLong = 0;\n        \n\t\tlong shorttime1 = 0;\n\t\tlong medtime1 = 0;\n\t\tlong longtime1 = 0;\n\t\tlong minShort1 = 0;\n\t\tlong maxShort1 = 0;\n\t\tlong minMed1 = 0;\n\t\tlong maxMed1 = 0;\n\t\tlong minLong1 = 0;\n\t\tlong maxLong1 = 0;\n        \n\t\tbyte[] smess = new String(\"abc\").getBytes();\n\t\tStringBuffer buf = new StringBuffer();\n\t\tfor (int x = 0; x < 2*1024; x++) {\n\t\t\tbuf.append(\"a\");\n\t\t}\n\t\tbyte[] mmess = buf.toString().getBytes(); // new String(\"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\").getBytes();\n\t\tbuf = new StringBuffer();\n\t\tfor (int x = 0; x < 10000; x++) {\n\t\t\tbuf.append(\"a\");\n\t\t}\n\t\tbyte[] lmess = buf.toString().getBytes();\n        \n        HMACSHA256Generator.Buffer sbuf = ctx.hmac().createBuffer(smess.length);\n        HMACSHA256Generator.Buffer mbuf = ctx.hmac().createBuffer(mmess.length);\n        HMACSHA256Generator.Buffer lbuf = ctx.hmac().createBuffer(lmess.length);\n        \n\t\t// warm up the engines\n        ctx.hmac().calculate(key, smess, sbuf);\n        ctx.hmac().calculate(key, mmess, mbuf);\n        ctx.hmac().calculate(key, lmess, lbuf);\n        \n        long before = System.currentTimeMillis();\n        for (int x = 0; x < times; x++)\n            ctx.hmac().calculate(key, smess, sbuf);\n        long after = System.currentTimeMillis();\n        \n        display(times, before, after, smess.length, \"3 byte\");\n        \n        before = System.currentTimeMillis();\n        for (int x = 0; x < times; x++)\n            ctx.hmac().calculate(key, mmess, mbuf);\n        after = System.currentTimeMillis();\n\n        display(times, before, after, mmess.length, \"2KB\");\n        \n        before = System.currentTimeMillis();\n        for (int x = 0; x < times; x++)\n            ctx.hmac().calculate(key, lmess, lbuf);\n        after = System.currentTimeMillis();\n\n        display(times, before, after, lmess.length, \"10KB\");\n\t}","id":8388,"modified_method":"public static void main(String args[]) {\n        I2PAppContext ctx = I2PAppContext.getGlobalContext();\n        SessionKey key = ctx.keyGenerator().generateSessionKey();\n\t\tHash asdfs = HMACSHA256Generator.getInstance().calculate(key, \"qwerty\".getBytes());\n\t\t\t\n\t\tint times = 100000;\n\t\tlong shorttime = 0;\n\t\tlong medtime = 0;\n\t\tlong longtime = 0;\n\t\tlong minShort = 0;\n\t\tlong maxShort = 0;\n\t\tlong minMed = 0;\n\t\tlong maxMed = 0;\n\t\tlong minLong = 0;\n\t\tlong maxLong = 0;\n        \n\t\tlong shorttime1 = 0;\n\t\tlong medtime1 = 0;\n\t\tlong longtime1 = 0;\n\t\tlong minShort1 = 0;\n\t\tlong maxShort1 = 0;\n\t\tlong minMed1 = 0;\n\t\tlong maxMed1 = 0;\n\t\tlong minLong1 = 0;\n\t\tlong maxLong1 = 0;\n        \n\t\tbyte[] smess = new String(\"abc\").getBytes();\n\t\tStringBuffer buf = new StringBuffer();\n\t\tfor (int x = 0; x < 2*1024; x++) {\n\t\t\tbuf.append(\"a\");\n\t\t}\n\t\tbyte[] mmess = buf.toString().getBytes(); // new String(\"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\").getBytes();\n\t\tbuf = new StringBuffer();\n\t\tfor (int x = 0; x < 10000; x++) {\n\t\t\tbuf.append(\"a\");\n\t\t}\n\t\tbyte[] lmess = buf.toString().getBytes();\n\n\t\t// warm up the engines\n        ctx.hmac().calculate(key, smess);\n        ctx.hmac().calculate(key, mmess);\n        ctx.hmac().calculate(key, lmess);\n        \n        long before = System.currentTimeMillis();\n        for (int x = 0; x < times; x++)\n            ctx.hmac().calculate(key, smess);\n        long after = System.currentTimeMillis();\n        \n        display(times, before, after, smess.length, \"3 byte\");\n        \n        before = System.currentTimeMillis();\n        for (int x = 0; x < times; x++)\n            ctx.hmac().calculate(key, mmess);\n        after = System.currentTimeMillis();\n\n        display(times, before, after, mmess.length, \"2KB\");\n        \n        before = System.currentTimeMillis();\n        for (int x = 0; x < times; x++)\n            ctx.hmac().calculate(key, lmess);\n        after = System.currentTimeMillis();\n\n        display(times, before, after, lmess.length, \"10KB\");\n\t}","commit_id":"39343ce957c517cd8d532ab9995fef40a58796b6","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public static void main(String args[]) {\n\t\tHash asdfs = SHA256Generator.getInstance().calculateHash(\"qwerty\".getBytes());\n\t\t\t\n\t\tint times = 100;\n\t\tlong shorttime = 0;\n\t\tlong medtime = 0;\n\t\tlong longtime = 0;\n\t\tlong minShort = 0;\n\t\tlong maxShort = 0;\n\t\tlong minMed = 0;\n\t\tlong maxMed = 0;\n\t\tlong minLong = 0;\n\t\tlong maxLong = 0;\n        \n\t\tlong shorttime1 = 0;\n\t\tlong medtime1 = 0;\n\t\tlong longtime1 = 0;\n\t\tlong minShort1 = 0;\n\t\tlong maxShort1 = 0;\n\t\tlong minMed1 = 0;\n\t\tlong maxMed1 = 0;\n\t\tlong minLong1 = 0;\n\t\tlong maxLong1 = 0;\n        \n\t\tbyte[] smess = new String(\"abc\").getBytes();\n\t\tStringBuffer buf = new StringBuffer();\n\t\tfor (int x = 0; x < 10*1024; x++) {\n\t\t\tbuf.append(\"a\");\n\t\t}\n\t\tbyte[] mmess = buf.toString().getBytes(); // new String(\"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\").getBytes();\n\t\tbuf = new StringBuffer();\n\t\tfor (int x = 0; x < 1000000; x++) {\n\t\t\tbuf.append(\"a\");\n\t\t}\n\t\tbyte[] lmess = buf.toString().getBytes();\n        \n        SHA256EntryCache cache = new SHA256EntryCache();\n        SHA256EntryCache.CacheEntry scache = cache.acquire(smess.length);\n        SHA256EntryCache.CacheEntry mcache = cache.acquire(mmess.length);\n        SHA256EntryCache.CacheEntry lcache = cache.acquire(lmess.length);\n        \n\t\t// warm up the engines\n\t\tSHA256Generator.getInstance().calculateHash(smess);\n\t\tSHA256Generator.getInstance().calculateHash(mmess);\n\t\tSHA256Generator.getInstance().calculateHash(lmess);\n\t\t// now do it\n\t\tfor (int x = 0; x < times; x++) {\t\n\t\t\tlong startshort = System.currentTimeMillis();\n            boolean cacheOnly = false;\n            // no caching\n\t\t\tHash s = cacheOnly ? null : SHA256Generator.getInstance().calculateHash(smess);\n\t\t\tlong endshortstartmed = System.currentTimeMillis();\n\t\t\tHash m = cacheOnly ? null : SHA256Generator.getInstance().calculateHash(mmess);\n\t\t\tlong endmedstartlong = System.currentTimeMillis();\n\t\t\tHash l = cacheOnly ? null : SHA256Generator.getInstance().calculateHash(lmess);\n\t\t\tlong endlong = System.currentTimeMillis();\n            \n            // now do it with caching\n\t\t\tHash s1 = SHA256Generator.getInstance().calculateHash(smess, 0, smess.length, scache);\n\t\t\tlong endshortstartmed1 = System.currentTimeMillis();\n\t\t\tHash m1 = SHA256Generator.getInstance().calculateHash(mmess, 0, mmess.length, mcache);\n\t\t\tlong endmedstartlong1 = System.currentTimeMillis();\n\t\t\tHash l1 = SHA256Generator.getInstance().calculateHash(lmess, 0, lmess.length, lcache);\n\t\t\tlong endlong1 = System.currentTimeMillis();\n            \n            if (cacheOnly) {\n                // dont verify\n            } else {\n                if (!s.equals(s1) || !m.equals(m1) || !l.equals(l1)) {\n                    System.err.println(\"*ERR* match failed on \" + x \n                                       + \"s=\"+ s.equals(s1) + \" m=\" + m.equals(m1)\n                                       + \" l=\" + l.equals(l1));\n                    return;\n                }\n            }\n            \n\t\t\t//System.out.print(\".\");\n\t\t\tshorttime += endshortstartmed - startshort;\n\t\t\tmedtime += endmedstartlong - endshortstartmed;\n\t\t\tlongtime += endlong - endmedstartlong;\n            \n\t\t\tshorttime1 += endshortstartmed1 - endlong;\n\t\t\tmedtime1 += endmedstartlong1 - endshortstartmed1;\n\t\t\tlongtime1 += endlong1 - endmedstartlong1;\n\t\t\t\n\t\t\tif ((minShort == 0) && (minMed == 0) && (minLong == 0) ) {\n\t\t\t    minShort = endshortstartmed - startshort;\n\t\t\t    maxShort = endshortstartmed - startshort;\n\t\t\t    minMed = endmedstartlong - endshortstartmed;\n\t\t\t    maxMed = endmedstartlong - endshortstartmed;\n\t\t\t    minLong = endlong - endmedstartlong;\n\t\t\t    maxLong = endlong - endmedstartlong;\n                \n\t\t\t    minShort1 = endshortstartmed1 - endlong;\n\t\t\t    maxShort1 = endshortstartmed1 - endlong;\n\t\t\t    minMed1 = endmedstartlong1 - endshortstartmed1;\n\t\t\t    maxMed1 = endmedstartlong1 - endshortstartmed1;\n\t\t\t    minLong1 = endlong1 - endmedstartlong1;\n\t\t\t    maxLong1 = endlong1 - endmedstartlong1;\n\t\t\t} else {\n\t\t\t    if (minShort > endshortstartmed - startshort) minShort = endshortstartmed - startshort;\n\t\t\t    if (maxShort < endshortstartmed - startshort) maxShort = endshortstartmed - startshort;\n\t\t\t    if (minMed > endmedstartlong - endshortstartmed) minMed = endmedstartlong - endshortstartmed;\n\t\t\t    if (maxMed < endmedstartlong - endshortstartmed) maxMed = endmedstartlong - endshortstartmed;\n\t\t\t    if (minLong > endlong - endmedstartlong) minLong = endlong - endmedstartlong;\n\t\t\t    if (maxLong < endlong - endmedstartlong) maxLong = endlong - endmedstartlong;\n                \n\t\t\t    if (minShort1 > endshortstartmed1 - endlong) minShort1 = endshortstartmed1 - endlong;\n\t\t\t    if (maxShort1 < endshortstartmed1 - endlong) maxShort1 = endshortstartmed1 - endlong;\n\t\t\t    if (minMed1 > endmedstartlong1 - endshortstartmed1) minMed1 = endmedstartlong - endshortstartmed;\n\t\t\t    if (maxMed1 < endmedstartlong1 - endshortstartmed1) maxMed1 = endmedstartlong - endshortstartmed;\n\t\t\t    if (minLong1 > endlong1 - endmedstartlong1) minLong1 = endlong1 - endmedstartlong1;\n\t\t\t    if (maxLong1 < endlong1 - endmedstartlong1) maxLong1 = endlong1 - endmedstartlong1;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println();\n\t\tSystem.out.println(\"Short Message Time Average  : \" + (shorttime/times) + \"\\ttotal: \" + shorttime + \"\\tmin: \" + minShort + \"\\tmax: \" + maxShort + \"\\tBps: \" + (shorttime == 0 ? \"NaN\" : \"\"+(times*smess.length)/shorttime));\n\t\tSystem.out.println(\"Medium Message Time Average : \" + (medtime/times) + \"\\ttotal: \" + medtime + \"\\tmin: \" + minMed + \"\\tmax: \" + maxMed + \"\\tBps: \" + (medtime == 0 ? \"NaN\" : \"\"+(times*mmess.length*1000)/medtime));\n\t\tSystem.out.println(\"Long Message Time Average   : \" + (longtime/times) + \"\\ttotal: \" + longtime + \"\\tmin: \" + minLong + \"\\tmax: \" + maxLong + \"\\tBps: \" + (longtime == 0 ? \"NaN\" : \"\" + (times*lmess.length*1000)/longtime));\n        \n\t\tSystem.out.println(\"Short Message Time (cache)  : \" + (shorttime1/times) + \"\\ttotal: \" + shorttime1 + \"\\tmin: \" + minShort1 + \"\\tmax: \" + maxShort1 + \"\\tBps: \" + (shorttime1 == 0 ? \"NaN\" : \"\"+(times*smess.length)/shorttime1));\n\t\tSystem.out.println(\"Medium Message Time (cache) : \" + (medtime1/times) + \"\\ttotal: \" + medtime1 + \"\\tmin: \" + minMed1 + \"\\tmax: \" + maxMed1 + \"\\tBps: \" + (times*mmess.length*1000)/medtime1);\n\t\tSystem.out.println(\"Long Message Time (cache)   : \" + (longtime1/times) + \"\\ttotal: \" + longtime1 + \"\\tmin: \" + minLong1 + \"\\tmax: \" + maxLong1 + \"\\tBps: \" + (times*lmess.length*1000)/longtime1);\n\t}","id":8389,"modified_method":"public static void main(String args[]) {\n\t\tHash asdfs = SHA256Generator.getInstance().calculateHash(\"qwerty\".getBytes());\n\t\t\t\n\t\tint times = 100;\n\t\tlong shorttime = 0;\n\t\tlong medtime = 0;\n\t\tlong longtime = 0;\n\t\tlong minShort = 0;\n\t\tlong maxShort = 0;\n\t\tlong minMed = 0;\n\t\tlong maxMed = 0;\n\t\tlong minLong = 0;\n\t\tlong maxLong = 0;\n        \n\t\tlong shorttime1 = 0;\n\t\tlong medtime1 = 0;\n\t\tlong longtime1 = 0;\n\t\tlong minShort1 = 0;\n\t\tlong maxShort1 = 0;\n\t\tlong minMed1 = 0;\n\t\tlong maxMed1 = 0;\n\t\tlong minLong1 = 0;\n\t\tlong maxLong1 = 0;\n        \n\t\tbyte[] smess = new String(\"abc\").getBytes();\n\t\tStringBuffer buf = new StringBuffer();\n\t\tfor (int x = 0; x < 10*1024; x++) {\n\t\t\tbuf.append(\"a\");\n\t\t}\n\t\tbyte[] mmess = buf.toString().getBytes(); // new String(\"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\").getBytes();\n\t\tbuf = new StringBuffer();\n\t\tfor (int x = 0; x < 1000000; x++) {\n\t\t\tbuf.append(\"a\");\n\t\t}\n\t\tbyte[] lmess = buf.toString().getBytes();\n        \n\t\t// warm up the engines\n\t\tSHA256Generator.getInstance().calculateHash(smess);\n\t\tSHA256Generator.getInstance().calculateHash(mmess);\n\t\tSHA256Generator.getInstance().calculateHash(lmess);\n\t\t// now do it\n\t\tfor (int x = 0; x < times; x++) {\t\n\t\t\tlong startshort = System.currentTimeMillis();\n            boolean cacheOnly = false;\n            // no caching\n\t\t\tHash s = cacheOnly ? null : SHA256Generator.getInstance().calculateHash(smess);\n\t\t\tlong endshortstartmed = System.currentTimeMillis();\n\t\t\tHash m = cacheOnly ? null : SHA256Generator.getInstance().calculateHash(mmess);\n\t\t\tlong endmedstartlong = System.currentTimeMillis();\n\t\t\tHash l = cacheOnly ? null : SHA256Generator.getInstance().calculateHash(lmess);\n\t\t\tlong endlong = System.currentTimeMillis();\n\n            shorttime += endshortstartmed - startshort;\n\t\t\tmedtime += endmedstartlong - endshortstartmed;\n\t\t\tlongtime += endlong - endmedstartlong;\n            \n\t\t\tif ((minShort == 0) && (minMed == 0) && (minLong == 0) ) {\n\t\t\t    minShort = endshortstartmed - startshort;\n\t\t\t    maxShort = endshortstartmed - startshort;\n\t\t\t    minMed = endmedstartlong - endshortstartmed;\n\t\t\t    maxMed = endmedstartlong - endshortstartmed;\n\t\t\t    minLong = endlong - endmedstartlong;\n\t\t\t    maxLong = endlong - endmedstartlong;\n\t\t\t} else {\n\t\t\t    if (minShort > endshortstartmed - startshort) minShort = endshortstartmed - startshort;\n\t\t\t    if (maxShort < endshortstartmed - startshort) maxShort = endshortstartmed - startshort;\n\t\t\t    if (minMed > endmedstartlong - endshortstartmed) minMed = endmedstartlong - endshortstartmed;\n\t\t\t    if (maxMed < endmedstartlong - endshortstartmed) maxMed = endmedstartlong - endshortstartmed;\n\t\t\t    if (minLong > endlong - endmedstartlong) minLong = endlong - endmedstartlong;\n\t\t\t    if (maxLong < endlong - endmedstartlong) maxLong = endlong - endmedstartlong;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println();\n\t\tSystem.out.println(\"Short Message Time Average  : \" + (shorttime/times) + \"\\ttotal: \" + shorttime + \"\\tmin: \" + minShort + \"\\tmax: \" + maxShort + \"\\tBps: \" + (shorttime == 0 ? \"NaN\" : \"\"+(times*smess.length)/shorttime));\n\t\tSystem.out.println(\"Medium Message Time Average : \" + (medtime/times) + \"\\ttotal: \" + medtime + \"\\tmin: \" + minMed + \"\\tmax: \" + maxMed + \"\\tBps: \" + (medtime == 0 ? \"NaN\" : \"\"+(times*mmess.length*1000)/medtime));\n\t\tSystem.out.println(\"Long Message Time Average   : \" + (longtime/times) + \"\\ttotal: \" + longtime + \"\\tmin: \" + minLong + \"\\tmax: \" + maxLong + \"\\tBps: \" + (longtime == 0 ? \"NaN\" : \"\" + (times*lmess.length*1000)/longtime));\n\t}","commit_id":"39343ce957c517cd8d532ab9995fef40a58796b6","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public Destination lookup(String hostname) {\n        // If it's long, assume it's a key.\n        if (hostname.length() >= DEST_SIZE)\n            return lookupBase64(hostname);\n\n        hostname = hostname.toLowerCase();\n\n        // check the cache\n        String key = _hosts.getProperty(hostname);\n        if (key != null) {\n            _log.error(\"Found in cache: \" + hostname);\n            return lookupBase64(key);\n        }\n\n        List URLs = getURLs();\n        if (URLs.size() == 0)\n            return null;\n\n        // prevent lookup loops - this cannot be the only lookup service\n        for (int i = 0; i < URLs.size(); i++) { \n            String url = (String)URLs.get(i);\n            if (url.startsWith(\"http://\" + hostname + \"/\")) {\n                _log.error(\"Lookup loop: \" + hostname);\n                return null;\n            }\n        }\n\n        // lookup\n        for (int i = 0; i < URLs.size(); i++) { \n            String url = (String)URLs.get(i);\n            key = fetchAddr(url, hostname);\t  \t\n            if (key != null) {\n                _log.error(\"Success: \" + url + hostname);\n                _hosts.setProperty(hostname, key);  // cache\n                return lookupBase64(key);\n            }\n        }\n        return null;\n    }","id":8390,"modified_method":"public Destination lookup(String hostname) {\n        // If it's long, assume it's a key.\n        if (hostname.length() >= DEST_SIZE)\n            return lookupBase64(hostname);\n\n        hostname = hostname.toLowerCase();\n\n        // check the cache\n        Destination d = getCache(hostname);\n        if (d != null)\n            return d;\n\n        List URLs = getURLs();\n        if (URLs.size() == 0)\n            return null;\n\n        // prevent lookup loops - this cannot be the only lookup service\n        for (int i = 0; i < URLs.size(); i++) { \n            String url = (String)URLs.get(i);\n            if (url.startsWith(\"http://\" + hostname + \"/\")) {\n                _log.error(\"Lookup loop: \" + hostname);\n                return null;\n            }\n        }\n\n        // lookup\n        for (int i = 0; i < URLs.size(); i++) { \n            String url = (String)URLs.get(i);\n            String key = fetchAddr(url, hostname);\t  \t\n            if (key != null) {\n                _log.error(\"Success: \" + url + hostname);\n                d = lookupBase64(key);\n                putCache(hostname, d);\n                return d;\n            }\n        }\n        return null;\n    }","commit_id":"f6996c7d8b616d55657b5323e08ffbc19a40251d","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/** \n     * The naming service should only be constructed and accessed through the \n     * application context.  This constructor should only be used by the \n     * appropriate application context itself.\n     *\n     */\n    public EepGetNamingService(I2PAppContext context) {\n        super(context);\n        _hosts = new Properties();\n    }","id":8391,"modified_method":"/** \n     * The naming service should only be constructed and accessed through the \n     * application context.  This constructor should only be used by the \n     * appropriate application context itself.\n     *\n     */\n    public EepGetNamingService(I2PAppContext context) {\n        super(context);\n    }","commit_id":"f6996c7d8b616d55657b5323e08ffbc19a40251d","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/** \n     * The naming service should only be constructed and accessed through the \n     * application context.  This constructor should only be used by the \n     * appropriate application context itself.\n     *\n     */\n    public ExecNamingService(I2PAppContext context) {\n        super(context);\n        _hosts = new Properties();\n    }","id":8392,"modified_method":"/** \n     * The naming service should only be constructed and accessed through the \n     * application context.  This constructor should only be used by the \n     * appropriate application context itself.\n     *\n     */\n    public ExecNamingService(I2PAppContext context) {\n        super(context);\n    }","commit_id":"f6996c7d8b616d55657b5323e08ffbc19a40251d","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public Destination lookup(String hostname) {\n        // If it's long, assume it's a key.\n        if (hostname.length() >= DEST_SIZE)\n            return lookupBase64(hostname);\n\n        hostname = hostname.toLowerCase();\n\n        // check the cache\n        String key = _hosts.getProperty(hostname);\n        if (key != null) {\n            _log.error(\"Found in cache: \" + hostname);\n            return lookupBase64(key);\n        }\n\n        // lookup\n        key = fetchAddr(hostname);\t  \t\n        if (key != null) {\n            _log.error(\"Success: \" + hostname);\n            _hosts.setProperty(hostname, key);  // cache\n            return lookupBase64(key);\n        }\n        return null;\n    }","id":8393,"modified_method":"public Destination lookup(String hostname) {\n        // If it's long, assume it's a key.\n        if (hostname.length() >= DEST_SIZE)\n            return lookupBase64(hostname);\n\n        hostname = hostname.toLowerCase();\n\n        // check the cache\n        Destination d = getCache(hostname);\n        if (d != null)\n            return d;\n\n        // lookup\n        String key = fetchAddr(hostname);\t  \t\n        if (key != null) {\n            _log.error(\"Success: \" + hostname);\n            d = lookupBase64(key);\n            putCache(hostname, d);\n            return d;\n        }\n        return null;\n    }","commit_id":"f6996c7d8b616d55657b5323e08ffbc19a40251d","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public Destination lookup(String hostname) {\n        // If it's long, assume it's a key.\n        if (hostname.length() >= 516)\n            return lookupBase64(hostname);\n\n        // check the list each time, reloading the file on each\n        // lookup\n        \n        List filenames = getFilenames();\n        for (int i = 0; i < filenames.size(); i++) { \n            String hostsfile = (String)filenames.get(i);\n            Properties hosts = new Properties();\n            try {\n                File f = new File(hostsfile);\n                if ( (f.exists()) && (f.canRead()) ) {\n                    DataHelper.loadProps(hosts, f, true);\n                    \n                    String key = hosts.getProperty(hostname.toLowerCase());\n                    if ( (key != null) && (key.trim().length() > 0) ) {\n                        return lookupBase64(key);\n                    }\n                    \n                } else {\n                    _log.warn(\"Hosts file \" + hostsfile + \" does not exist.\");\n                }\n            } catch (Exception ioe) {\n                _log.error(\"Error loading hosts file \" + hostsfile, ioe);\n            }\n            // not found, continue to the next file\n        }\n        return null;\n    }","id":8394,"modified_method":"public Destination lookup(String hostname) {\n        Destination d = getCache(hostname);\n        if (d != null)\n            return d;\n\n        // If it's long, assume it's a key.\n        if (hostname.length() >= 516) {\n            d = lookupBase64(hostname);\n            // What the heck, cache these too\n            putCache(hostname, d);\n            return d;\n        }\n\n        List filenames = getFilenames();\n        for (int i = 0; i < filenames.size(); i++) { \n            String hostsfile = (String)filenames.get(i);\n            Properties hosts = new Properties();\n            try {\n                File f = new File(hostsfile);\n                if ( (f.exists()) && (f.canRead()) ) {\n                    DataHelper.loadProps(hosts, f, true);\n                    \n                    String key = hosts.getProperty(hostname.toLowerCase());\n                    if ( (key != null) && (key.trim().length() > 0) ) {\n                        d = lookupBase64(key);\n                        putCache(hostname, d);\n                        return d;\n                    }\n                    \n                } else {\n                    _log.warn(\"Hosts file \" + hostsfile + \" does not exist.\");\n                }\n            } catch (Exception ioe) {\n                _log.error(\"Error loading hosts file \" + hostsfile, ioe);\n            }\n            // not found, continue to the next file\n        }\n        return null;\n    }","commit_id":"f6996c7d8b616d55657b5323e08ffbc19a40251d","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/** \n     * The naming service should only be constructed and accessed through the \n     * application context.  This constructor should only be used by the \n     * appropriate application context itself.\n     *\n     */\n    protected NamingService(I2PAppContext context) {\n        _context = context;\n    }","id":8395,"modified_method":"/** \n     * The naming service should only be constructed and accessed through the \n     * application context.  This constructor should only be used by the \n     * appropriate application context itself.\n     *\n     */\n    protected NamingService(I2PAppContext context) {\n        _context = context;\n        _cache = new HashMap(CACHE_MAX_SIZE);\n    }","commit_id":"f6996c7d8b616d55657b5323e08ffbc19a40251d","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"@Override\n    public Destination lookup(String hostname) {\n        Destination d = getCache(hostname);\n        if (d != null)\n            return d;\n\n        // If it's long, assume it's a key.\n        if (hostname.length() >= 516) {\n            d = lookupBase64(hostname);\n            // What the heck, cache these too\n            putCache(hostname, d);\n            return d;\n        }\n\n        // Try Base32 decoding\n        if (hostname.length() == BASE32_HASH_LENGTH + 8 && hostname.endsWith(\".b32.i2p\") &&\n            Boolean.valueOf(_context.getProperty(PROP_B32, \"true\")).booleanValue()) {\n            d = LookupDest.lookupBase32Hash(_context, hostname.substring(0, BASE32_HASH_LENGTH));\n            if (d != null) {\n                putCache(hostname, d);\n                return d;\n            }\n        }\n\n        String key = hostname.toLowerCase();\n        synchronized(_bf) {\n            if (_isClosed)\n                return null;\n            for (String list : _lists) { \n                try {\n                    DestEntry de = getEntry(list, key);\n                    if (de != null) {\n                        d = de.dest;\n                        break;\n                    }\n                } catch (IOException ioe) {\n                    break;\n                }\n            }\n        }\n        if (d != null)\n            putCache(hostname, d);\n        return d;\n    }","id":8396,"modified_method":"@Override\n    public Destination lookup(String hostname) {\n        Destination d = super.lookup(hostname);\n        if (d != null)\n            return d;\n\n        String key = hostname.toLowerCase();\n        synchronized(_bf) {\n            if (_isClosed)\n                return null;\n            for (String list : _lists) { \n                try {\n                    DestEntry de = getEntry(list, key);\n                    if (de != null) {\n                        d = de.dest;\n                        break;\n                    }\n                } catch (IOException ioe) {\n                    break;\n                }\n            }\n        }\n        if (d != null)\n            putCache(hostname, d);\n        return d;\n    }","commit_id":"54fdfd823b73df1ef6e89b5190059c4dec370be3","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n     *  Create a new database and initialize it from the local files\n     *  privatehosts.txt, userhosts.txt, and hosts.txt,\n     *  creating a skiplist in the database for each.\n     */\n    private BlockFile init(RandomAccessFile f) throws IOException {\n        long start = _context.clock().now();\n        try {\n            BlockFile rv = new BlockFile(f, true);\n            SkipList hdr = rv.makeIndex(INFO_SKIPLIST, _stringSerializer, _infoSerializer);\n            Properties info = new Properties();\n            info.setProperty(PROP_VERSION, VERSION);\n            info.setProperty(PROP_CREATED, Long.toString(_context.clock().now()));\n            String list = _context.getProperty(PROP_HOSTS_FILE, DEFAULT_HOSTS_FILE);\n            info.setProperty(PROP_LISTS, list);\n            hdr.put(PROP_INFO, info);\n\n            // TODO all in one skiplist or separate?\n            int total = 0;\n            for (String hostsfile : getFilenames(list)) {\n                File file = new File(_context.getRouterDir(), hostsfile);\n                if ((!file.exists()) || !(file.canRead()))\n                    continue;\n                int count = 0;\n                BufferedReader in = null;\n                try {\n                    in = new BufferedReader(new InputStreamReader(new FileInputStream(file), \"UTF-8\"), 16*1024);\n                    String line = null;\n                    while ( (line = in.readLine()) != null) {\n                        if (line.startsWith(\"#\"))\n                            continue;\n                        int split = line.indexOf('=');\n                        if (split <= 0)\n                            continue;\n                        String key = line.substring(0, split).toLowerCase();\n                        if (line.indexOf('#') > 0)  // trim off any end of line comment\n                            line = line.substring(0, line.indexOf('#')).trim();\n                        String b64 = line.substring(split+1);   //.trim() ??????????????\n                        Destination d = lookupBase64(b64);\n                        if (d != null) {\n                            addEntry(rv, hostsfile, key, d, hostsfile);\n                            count++;\n                        }\n                    }\n                } catch (IOException ioe) {\n                    _log.error(\"Failed to read hosts from \" + file, ioe);\n                } finally {\n                    if (in != null) try { in.close(); } catch (IOException ioe) {}\n                }\n                total += count;\n                _log.error(\"Added \" + count + \" hosts from \" + file);\n                _lists.add(hostsfile);\n            }\n            _log.error(\"DB init took \" + DataHelper.formatDuration(_context.clock().now() - start));\n            if (total <= 0)\n                _log.error(\"Warning - initialized database with zero entries\");\n            return rv;\n        } catch (IOException e) {\n            throw e;\n        } catch (Error e) {\n            // blockfile noxiously converts IOEs to Errors with no message\n            throw new IOException(e.toString());\n        }\n    }","id":8397,"modified_method":"/**\n     *  Create a new database and initialize it from the local files\n     *  privatehosts.txt, userhosts.txt, and hosts.txt,\n     *  creating a skiplist in the database for each.\n     */\n    private BlockFile init(RandomAccessFile f) throws IOException {\n        long start = _context.clock().now();\n        try {\n            BlockFile rv = new BlockFile(f, true);\n            SkipList hdr = rv.makeIndex(INFO_SKIPLIST, _stringSerializer, _infoSerializer);\n            Properties info = new Properties();\n            info.setProperty(PROP_VERSION, VERSION);\n            info.setProperty(PROP_CREATED, Long.toString(_context.clock().now()));\n            String list = _context.getProperty(PROP_HOSTS_FILE, DEFAULT_HOSTS_FILE);\n            info.setProperty(PROP_LISTS, list);\n            hdr.put(PROP_INFO, info);\n\n            // TODO all in one skiplist or separate?\n            int total = 0;\n            for (String hostsfile : getFilenames(list)) {\n                File file = new File(_context.getRouterDir(), hostsfile);\n                if ((!file.exists()) || !(file.canRead()))\n                    continue;\n                int count = 0;\n                BufferedReader in = null;\n                try {\n                    in = new BufferedReader(new InputStreamReader(new FileInputStream(file), \"UTF-8\"), 16*1024);\n                    String line = null;\n                    while ( (line = in.readLine()) != null) {\n                        if (line.startsWith(\"#\"))\n                            continue;\n                        int split = line.indexOf('=');\n                        if (split <= 0)\n                            continue;\n                        String key = line.substring(0, split).toLowerCase();\n                        if (line.indexOf('#') > 0)  { // trim off any end of line comment\n                            line = line.substring(0, line.indexOf('#')).trim();\n                            if (line.length() < split + 1)\n                                continue;\n                        }\n                        String b64 = line.substring(split+1);   //.trim() ??????????????\n                        Destination d = lookupBase64(b64);\n                        if (d != null) {\n                            addEntry(rv, hostsfile, key, d, hostsfile);\n                            count++;\n                        }\n                    }\n                } catch (IOException ioe) {\n                    _log.error(\"Failed to read hosts from \" + file, ioe);\n                } finally {\n                    if (in != null) try { in.close(); } catch (IOException ioe) {}\n                }\n                total += count;\n                _log.logAlways(Log.INFO, \"Added \" + count + \" hosts from \" + file);\n                _lists.add(hostsfile);\n            }\n            _log.error(\"DB init took \" + DataHelper.formatDuration(_context.clock().now() - start));\n            if (total <= 0)\n                _log.error(\"Warning - initialized database with zero entries\");\n            return rv;\n        } catch (IOException e) {\n            throw e;\n        } catch (Error e) {\n            // blockfile noxiously converts IOEs to Errors with no message\n            throw new IOException(e.toString());\n        }\n    }","commit_id":"54fdfd823b73df1ef6e89b5190059c4dec370be3","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public static void main(String[] args) {\n        BlockfileNamingService bns = new BlockfileNamingService(I2PAppContext.getGlobalContext());\n        //System.out.println(\"zzz.i2p: \" + bns._lists.get(2).get(\"zzz.i2p\"));\n        System.out.println(\"zzz.i2p: \" + bns.lookup(\"zzz.i2p\"));\n        List<String> names = null;\n        try {\n            Properties props = new Properties();\n            DataHelper.loadProps(props, new File(\"hosts.txt\"), true);\n            names = new ArrayList(props.keySet());\n            Collections.shuffle(names);\n        } catch (IOException ioe) {\n            System.out.println(\"No hosts.txt to test with\");\n            bns.close();\n            return;\n        }\n\n        System.out.println(\"Testing with \" + names.size() + \" hostnames\");\n        int found = 0;\n        int notfound = 0;\n        long start = System.currentTimeMillis();\n        for (String name : names) {\n             Destination dest = bns.lookup(name);\n             if (dest != null)\n                 found++;\n             else\n                 notfound++;\n        }\n        System.out.println(\"BFNS took \" + DataHelper.formatDuration(System.currentTimeMillis() - start));\n        System.out.println(\"found \" + found + \" notfound \" + notfound);\nsynchronized(bns) {\ntry { bns.wait(); } catch (InterruptedException ie) {}\n}\n        bns.close();\n\n        HostsTxtNamingService htns = new HostsTxtNamingService(I2PAppContext.getGlobalContext());\n        found = 0;\n        notfound = 0;\n        start = System.currentTimeMillis();\n        for (String name : names) {\n             Destination dest = htns.lookup(name);\n             if (dest != null)\n                 found++;\n             else\n                 notfound++;\n        }\n        System.out.println(\"HTNS took \" + DataHelper.formatDuration(System.currentTimeMillis() - start));\n        System.out.println(\"found \" + found + \" notfound \" + notfound);\n    }","id":8398,"modified_method":"public static void main(String[] args) {\n        BlockfileNamingService bns = new BlockfileNamingService(I2PAppContext.getGlobalContext());\n        System.out.println(\"zzz.i2p: \" + bns.lookup(\"zzz.i2p\"));\n        List<String> names = null;\n        try {\n            Properties props = new Properties();\n            DataHelper.loadProps(props, new File(\"hosts.txt\"), true);\n            names = new ArrayList(props.keySet());\n            Collections.shuffle(names);\n        } catch (IOException ioe) {\n            System.out.println(\"No hosts.txt to test with\");\n            bns.close();\n            return;\n        }\n\n        System.out.println(\"Testing with \" + names.size() + \" hostnames\");\n        int found = 0;\n        int notfound = 0;\n        long start = System.currentTimeMillis();\n        for (String name : names) {\n             Destination dest = bns.lookup(name);\n             if (dest != null)\n                 found++;\n             else\n                 notfound++;\n        }\n        System.out.println(\"BFNS took \" + DataHelper.formatDuration(System.currentTimeMillis() - start));\n        System.out.println(\"found \" + found + \" notfound \" + notfound);\n        bns.close();\n\n        HostsTxtNamingService htns = new HostsTxtNamingService(I2PAppContext.getGlobalContext());\n        found = 0;\n        notfound = 0;\n        start = System.currentTimeMillis();\n        for (String name : names) {\n             Destination dest = htns.lookup(name);\n             if (dest != null)\n                 found++;\n             else\n                 notfound++;\n        }\n        System.out.println(\"HTNS took \" + DataHelper.formatDuration(System.currentTimeMillis() - start));\n        System.out.println(\"found \" + found + \" notfound \" + notfound);\n    }","commit_id":"54fdfd823b73df1ef6e89b5190059c4dec370be3","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"@Override\n    public Destination lookup(String hostname) {\n        return lookupBase64(hostname);\n    }","id":8399,"modified_method":"@Override\n    public Destination lookup(String hostname) {\n        Destination d = getCache(hostname);\n        if (d != null)\n            return d;\n\n        // If it's long, assume it's a key.\n        if (hostname.length() >= 516) {\n            d = lookupBase64(hostname);\n            // What the heck, cache these too\n            putCache(hostname, d);\n            return d;\n        }\n\n        // Try Base32 decoding\n        if (hostname.length() == BASE32_HASH_LENGTH + 8 && hostname.endsWith(\".b32.i2p\") &&\n            _context.getBooleanPropertyDefaultTrue(PROP_B32)) {\n            d = LookupDest.lookupBase32Hash(_context, hostname.substring(0, BASE32_HASH_LENGTH));\n            if (d != null) {\n                putCache(hostname, d);\n                return d;\n            }\n        }\n\n        return null;\n    }","commit_id":"54fdfd823b73df1ef6e89b5190059c4dec370be3","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"@Override\n    public Destination lookup(String hostname) {\n        Destination d = getCache(hostname);\n        if (d != null)\n            return d;\n\n        // If it's long, assume it's a key.\n        if (hostname.length() >= 516) {\n            d = lookupBase64(hostname);\n            // What the heck, cache these too\n            putCache(hostname, d);\n            return d;\n        }\n\n        // Try Base32 decoding\n        if (hostname.length() == BASE32_HASH_LENGTH + 8 && hostname.endsWith(\".b32.i2p\") &&\n            Boolean.valueOf(_context.getProperty(PROP_B32, \"true\")).booleanValue()) {\n            d = LookupDest.lookupBase32Hash(_context, hostname.substring(0, BASE32_HASH_LENGTH));\n            if (d != null) {\n                putCache(hostname, d);\n                return d;\n            }\n        }\n\n        List filenames = getFilenames();\n        for (int i = 0; i < filenames.size(); i++) { \n            String hostsfile = (String)filenames.get(i);\n            try {\n                File f = new File(_context.getRouterDir(), hostsfile);\n                if ( (f.exists()) && (f.canRead()) ) {\n                    String key = getKey(f, hostname.toLowerCase());\n                    if ( (key != null) && (key.trim().length() > 0) ) {\n                        d = lookupBase64(key);\n                        putCache(hostname, d);\n                        return d;\n                    }\n                    \n                } else {\n                    _log.warn(\"Hosts file \" + hostsfile + \" does not exist.\");\n                }\n            } catch (Exception ioe) {\n                _log.error(\"Error loading hosts file \" + hostsfile, ioe);\n            }\n            // not found, continue to the next file\n        }\n        return null;\n    }","id":8400,"modified_method":"@Override\n    public Destination lookup(String hostname) {\n        Destination d = super.lookup(hostname);\n        if (d != null)\n            return d;\n\n        List filenames = getFilenames();\n        for (int i = 0; i < filenames.size(); i++) { \n            String hostsfile = (String)filenames.get(i);\n            try {\n                File f = new File(_context.getRouterDir(), hostsfile);\n                if ( (f.exists()) && (f.canRead()) ) {\n                    String key = getKey(f, hostname.toLowerCase());\n                    if ( (key != null) && (key.trim().length() > 0) ) {\n                        d = lookupBase64(key);\n                        putCache(hostname, d);\n                        return d;\n                    }\n                    \n                } else {\n                    _log.warn(\"Hosts file \" + hostsfile + \" does not exist.\");\n                }\n            } catch (Exception ioe) {\n                _log.error(\"Error loading hosts file \" + hostsfile, ioe);\n            }\n            // not found, continue to the next file\n        }\n        return null;\n    }","commit_id":"54fdfd823b73df1ef6e89b5190059c4dec370be3","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n     * @param doInit should this context be used as the global one (if necessary)?\n     */\n    private I2PAppContext(boolean doInit, Properties envProps) {\n        if (doInit) {\n            synchronized (I2PAppContext.class) { \n                if (_globalAppContext == null)\n                    _globalAppContext = this;\n            }\n        }\n        _overrideProps = new I2PProperties();\n        if (envProps != null)\n            _overrideProps.putAll(envProps);\n        _statManager = null;\n        _sessionKeyManager = null;\n        _namingService = null;\n        _petnameDb = null;\n        _elGamalEngine = null;\n        _elGamalAESEngine = null;\n        _logManager = null;\n        _keyRing = null;\n        _statManagerInitialized = false;\n        _sessionKeyManagerInitialized = false;\n        _namingServiceInitialized = false;\n        _elGamalEngineInitialized = false;\n        _elGamalAESEngineInitialized = false;\n        _logManagerInitialized = false;\n        _keyRingInitialized = false;\n        _shutdownTasks = new ConcurrentHashSet(0);\n        initializeDirs();\n    }","id":8401,"modified_method":"/**\n     * @param doInit should this context be used as the global one (if necessary)?\n     */\n    private I2PAppContext(boolean doInit, Properties envProps) {\n        if (doInit) {\n            synchronized (I2PAppContext.class) { \n                if (_globalAppContext == null)\n                    _globalAppContext = this;\n            }\n        }\n        _overrideProps = new I2PProperties();\n        if (envProps != null)\n            _overrideProps.putAll(envProps);\n        _statManager = null;\n        _sessionKeyManager = null;\n        _namingService = null;\n        _elGamalEngine = null;\n        _elGamalAESEngine = null;\n        _logManager = null;\n        _keyRing = null;\n        _statManagerInitialized = false;\n        _sessionKeyManagerInitialized = false;\n        _namingServiceInitialized = false;\n        _elGamalEngineInitialized = false;\n        _elGamalAESEngineInitialized = false;\n        _logManagerInitialized = false;\n        _keyRingInitialized = false;\n        _shutdownTasks = new ConcurrentHashSet(0);\n        initializeDirs();\n    }","commit_id":"54fdfd823b73df1ef6e89b5190059c4dec370be3","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n     * Get a naming service instance. This method ensures that there\n     * will be only one naming service instance (singleton) as well as\n     * choose the implementation from the \"i2p.naming.impl\" system\n     * property.\n     */\n    public static final synchronized NamingService createInstance(I2PAppContext context) {\n        NamingService instance = null;\n        String impl = context.getProperty(PROP_IMPL, DEFAULT_IMPL);\n        try {\n            Class cls = Class.forName(impl);\n            Constructor con = cls.getConstructor(new Class[] { I2PAppContext.class });\n            instance = (NamingService)con.newInstance(new Object[] { context });\n        } catch (Exception ex) {\n            _log.error(\"Cannot loadNaming service implementation\", ex);\n            instance = new DummyNamingService(context); // fallback\n        }\n        return instance;\n    }","id":8402,"modified_method":"/**\n     * Get a naming service instance. This method ensures that there\n     * will be only one naming service instance (singleton) as well as\n     * choose the implementation from the \"i2p.naming.impl\" system\n     * property.\n     */\n    public static final synchronized NamingService createInstance(I2PAppContext context) {\n        NamingService instance = null;\n        String impl = context.getProperty(PROP_IMPL, DEFAULT_IMPL);\n        try {\n            Class cls = Class.forName(impl);\n            Constructor con = cls.getConstructor(new Class[] { I2PAppContext.class });\n            instance = (NamingService)con.newInstance(new Object[] { context });\n        } catch (Exception ex) {\n            _log.error(\"Cannot load naming service \" + impl, ex);\n            instance = new DummyNamingService(context); // fallback\n        }\n        return instance;\n    }","commit_id":"54fdfd823b73df1ef6e89b5190059c4dec370be3","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"@Override\n  public void configure(OETLProcessor iProcessor, ODocument iConfiguration, OCommandContext iContext) {\n    super.configure(iProcessor, iConfiguration, iContext);\n\n    if (iConfiguration.containsField(\"attributesAsNodes\"))\n      attributesAsNodes = (Boolean) iConfiguration.field(\"attributesAsNodes\");\n\n    if (iConfiguration.containsField(\"skipFirstLevels\"))\n      skipFirstLevels = (Integer) iConfiguration.field(\"skipFirstLevels\");\n  }","id":8403,"modified_method":"@Override\n  public void configure(OETLProcessor iProcessor, ODocument iConfiguration, OCommandContext iContext) {\n    super.configure(iProcessor, iConfiguration, iContext);\n\n    if (iConfiguration.containsField(\"rootNode\"))\n      rootNode = (String) iConfiguration.field(\"rootNode\");\n\n    if (iConfiguration.containsField(\"tagsAsAttribute\"))\n      tagsAsAttribute = (Collection<String>) iConfiguration.field(\"tagsAsAttribute\");\n  }","commit_id":"97330bbff00bc5a4aeb03d29b4c8e3f97ea965d9","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"private ODocument xml2doc(final Node xmlDocument) {\n    return xml2doc(xmlDocument, 0);\n  }","id":8404,"modified_method":"private Object xml2doc(final Node xmlDocument) {\n    return xml2doc(xmlDocument, \"\", 0);\n  }","commit_id":"97330bbff00bc5a4aeb03d29b4c8e3f97ea965d9","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n  public void extract(final Reader iReader) {\n    super.extract(iReader);\n\n    try {\n      final DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();\n      final DocumentBuilder dBuilder;\n      dBuilder = dbFactory.newDocumentBuilder();\n\n      final InputSource is = new InputSource(iReader);\n      final Document xmlDocument = dBuilder.parse(is);\n      xmlDocument.getDocumentElement().normalize();\n\n      final ODocument doc = xml2doc(xmlDocument);\n      next = new OExtractedItem(current++, doc);\n\n    } catch (ParserConfigurationException e) {\n      throw new OExtractorException(\"[XML extractor] error on creating XML parser\", e);\n    } catch (Exception e) {\n      throw new OExtractorException(\"[XML extractor] error on parsing XML\", e);\n    }\n\n  }","id":8405,"modified_method":"@Override\n  public void extract(final Reader iReader) {\n    super.extract(iReader);\n\n    try {\n      final DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();\n      final DocumentBuilder dBuilder;\n      dBuilder = dbFactory.newDocumentBuilder();\n\n      final InputSource is = new InputSource(iReader);\n      final Document xmlDocument = dBuilder.parse(is);\n      xmlDocument.getDocumentElement().normalize();\n\n      final Object res = xml2doc(xmlDocument);\n      if (res instanceof Collection)\n        items.addAll((Collection) res);\n      else\n        items.add(res);\n\n    } catch (ParserConfigurationException e) {\n      throw new OExtractorException(\"[XML extractor] error on creating XML parser\", e);\n    } catch (Exception e) {\n      throw new OExtractorException(\"[XML extractor] error on parsing XML\", e);\n    }\n\n  }","commit_id":"97330bbff00bc5a4aeb03d29b4c8e3f97ea965d9","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n  public boolean hasNext() {\n    return next != null;\n  }","id":8406,"modified_method":"@Override\n  public boolean hasNext() {\n    return current<items.size();\n  }","commit_id":"97330bbff00bc5a4aeb03d29b4c8e3f97ea965d9","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"private ODocument xml2doc(final Node xmlDocument, final int iLevel) {\n    final ODocument doc = new ODocument();\n\n    final NamedNodeMap attrs = xmlDocument.getAttributes();\n    if (attrs != null)\n      for (int i = 0; i<attrs.getLength(); ++i) {\n        final Node item = attrs.item(i);\n        switch (item.getNodeType()) {\n        case Node.ATTRIBUTE_NODE: {\n          final Attr attr = (Attr) item;\n          doc.field(attr.getName(), attr.getValue());\n          break;\n        }\n        }\n      }\n\n    final NodeList children = xmlDocument.getChildNodes();\n    if (children != null)\n      for (int i = 0; i<children.getLength(); ++i) {\n        final Node child = children.item(i);\n        switch (child.getNodeType()) {\n        case Node.ELEMENT_NODE: {\n          final Element element = (Element) child;\n          ODocument linked = xml2doc(element, iLevel + 1);\n\n          final Object previous = doc.field(element.getNodeName());\n          if (previous != null) {\n            List list;\n            if (previous instanceof List) {\n              list = (List) previous;\n            } else {\n              // TRANSFORM IN A LIST\n              list = new ArrayList();\n              list.add(previous);\n              doc.field(element.getNodeName(), list, OType.EMBEDDEDLIST);\n            }\n            list.add(linked);\n          } else\n            doc.field(element.getNodeName(), linked, OType.EMBEDDED);\n\n          break;\n        }\n        }\n      }\n    return doc;\n  }","id":8407,"modified_method":"private Object xml2doc(final Node xmlDocument, final String iPath, final int iLevel) {\n    final ODocument doc = new ODocument();\n    Object result = doc;\n\n    final NamedNodeMap attrs = xmlDocument.getAttributes();\n    if (attrs != null)\n      for (int i = 0; i<attrs.getLength(); ++i) {\n        final Node item = attrs.item(i);\n        switch (item.getNodeType()) {\n        case Node.ATTRIBUTE_NODE: {\n          final Attr attr = (Attr) item;\n          doc.field(attr.getName(), attr.getValue());\n          break;\n        }\n        }\n      }\n\n    final NodeList children = xmlDocument.getChildNodes();\n    if (children != null) {\n      for (int i = 0; i<children.getLength(); ++i) {\n        final Node child = children.item(i);\n        switch (child.getNodeType()) {\n        case Node.ELEMENT_NODE: {\n          final Element element = (Element) child;\n\n          final String path = iPath.isEmpty() ? element.getNodeName() : iPath + \".\" + element.getNodeName();\n\n          if (tagsAsAttribute.contains(iPath)) {\n\n            final NodeList subChildren = element.getChildNodes();\n            if (subChildren.getLength()>0) {\n              final Node fieldContent = subChildren.item(0);\n              doc.field(element.getNodeName(), fieldContent.getTextContent());\n            }\n\n          } else {\n\n            final Object sub = xml2doc(element, path, iLevel + 1);\n\n            final Object previous = doc.field(element.getNodeName());\n            if (previous != null) {\n              List list;\n              if (previous instanceof List) {\n                list = (List) previous;\n              } else {\n                // TRANSFORM IN A LIST\n                list = new ArrayList();\n                list.add(previous);\n                doc.field(element.getNodeName(), list, OType.EMBEDDEDLIST);\n              }\n              list.add(sub);\n            } else\n              doc.field(element.getNodeName(), sub, OType.EMBEDDED);\n\n            if (rootNode != null && rootNode.startsWith(path))\n              // SKIP\n              result = doc.field(element.getNodeName());\n          }\n\n          break;\n        }\n        }\n      }\n    }\n\n    return result;\n  }","commit_id":"97330bbff00bc5a4aeb03d29b4c8e3f97ea965d9","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n  public OExtractedItem next() {\n    if (!hasNext())\n      throw new NoSuchElementException(\"EOF\");\n\n    try {\n      return next;\n    } finally {\n      next = null;\n    }\n  }","id":8408,"modified_method":"@Override\n  public OExtractedItem next() {\n    if (!hasNext())\n      throw new NoSuchElementException(\"EOF\");\n\n    return new OExtractedItem(current, items.get((int) current++));\n  }","commit_id":"97330bbff00bc5a4aeb03d29b4c8e3f97ea965d9","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Test\n  public void testSimpleXml() {\n    process(\"{source: { file: { path: 'src/test/resources/simple.xml' } }, extractor : { xml: {} }, loader: { test: {} } }\");\n    assertEquals(1, getResult().size());\n    ODocument doc = getResult().get(0);\n\n    System.out.println(doc.toJSON(\"prettyPrint\"));\n  }","id":8409,"modified_method":"@Test\n  public void testSimpleXml() {\n    process(\"{source: { file: { path: 'src/test/resources/simple.xml' } }, extractor : { xml: {} }, loader: { test: {} } }\");\n    assertEquals(1, getResult().size());\n    ODocument doc = getResult().get(0);\n\n    assertNotNull(doc.field(\"a\"));\n    ODocument a = (ODocument) doc.field(\"a\");\n\n    assertNotNull(a.field(\"b\"));\n    ODocument b = (ODocument) a.field(\"b\");\n\n    assertNotNull(b.field(\"c\"));\n    Collection<ODocument> c = (Collection<ODocument>) b.field(\"c\");\n\n    assertEquals(2, c.size());\n    final Iterator<ODocument> it = c.iterator();\n\n    final ODocument ferrari = it.next();\n    assertNotNull(ferrari);\n    assertEquals(\"Ferrari\", ferrari.field(\"name\"));\n\n    final ODocument maserati = it.next();\n    assertNotNull(maserati);\n    assertEquals(\"Maserati\", maserati.field(\"name\"));\n\n    System.out.println(doc.toJSON(\"prettyPrint\"));\n  }","commit_id":"97330bbff00bc5a4aeb03d29b4c8e3f97ea965d9","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Test\n  public void testCollectionXml() {\n    process(\"{source: { file: { path: 'src/test/resources/music.xml' } }, extractor : { xml: {} }, loader: { test: {} } }\");\n    assertEquals(1, getResult().size());\n    ODocument doc = getResult().get(0);\n\n    System.out.println(doc.toJSON(\"prettyPrint\"));\n  }","id":8410,"modified_method":"@Test\n  public void testCollectionXml() {\n    process(\"{source: { file: { path: 'src/test/resources/music.xml' } }, extractor : { xml: { rootNode: 'CATALOG.CD', tagsAsAttribute: ['CATALOG.CD'] } }, loader: { test: {} } }\");\n    assertEquals(3, getResult().size());\n\n    final List<ODocument> cds = getResult();\n    final Iterator<ODocument> it = cds.iterator();\n\n    for (int i = 0; i<getResult().size(); ++i)\n      System.out.println(cds.get(i).toJSON(\"prettyPrint\"));\n\n    final ODocument doc1 = it.next();\n    assertNotNull(doc1);\n    assertEquals(\"Empire Burlesque\", doc1.field(\"TITLE\"));\n\n    final ODocument doc2 = it.next();\n    assertNotNull(doc2);\n    assertEquals(\"Hide your heart\", doc2.field(\"TITLE\"));\n\n    final ODocument doc3 = it.next();\n    assertNotNull(doc3);\n    assertEquals(\"Greatest Hits\", doc3.field(\"TITLE\"));\n  }","commit_id":"97330bbff00bc5a4aeb03d29b4c8e3f97ea965d9","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n  public void configure(OETLProcessor iProcessor, ODocument iConfiguration, OBasicCommandContext iContext) {\n    super.configure(iProcessor, iConfiguration, iContext);\n    url = iConfiguration.field(\"url\");\n    if (url == null || url.isEmpty())\n      throw new OConfigurationException(\"HTTP Source missing URL\");\n    if (iConfiguration.containsField(\"httpMethod\"))\n      httpMethod = iConfiguration.field(\"httpMethod\");\n  }","id":8411,"modified_method":"@Override\n  public void configure(OETLProcessor iProcessor, ODocument iConfiguration, OBasicCommandContext iContext) {\n    super.configure(iProcessor, iConfiguration, iContext);\n    url = iConfiguration.field(\"url\");\n    if (url == null || url.isEmpty())\n      throw new OConfigurationException(\"HTTP Source missing URL\");\n    if (iConfiguration.containsField(\"method\"))\n      method = iConfiguration.field(\"method\");\n\n    if (iConfiguration.containsField(\"headers\"))\n      headers = iConfiguration.field(\"headers\");\n  }","commit_id":"a04af95cb6e33ec2fadcb3face9c27c760bbf49c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n  public Reader read() {\n    try {\n      reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));\n      return reader;\n    } catch (Exception e) {\n      throw new OSourceException(\"[HTTP source] Error on reading by using \" + httpMethod + \" from URL: \" + url, e);\n    }\n  }","id":8412,"modified_method":"@Override\n  public Reader read() {\n    try {\n      reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));\n      return reader;\n    } catch (Exception e) {\n      throw new OSourceException(\"[HTTP source] Error on reading by using \" + method + \" from URL: \" + url, e);\n    }\n  }","commit_id":"a04af95cb6e33ec2fadcb3face9c27c760bbf49c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n  public void begin() {\n    try {\n      final URL obj = new URL(url);\n      conn = (HttpURLConnection) obj.openConnection();\n      conn.setRequestMethod(httpMethod);\n\n      for (Map.Entry<String, String> entry : headers.entrySet())\n        conn.setRequestProperty(entry.getKey(), entry.getValue());\n\n      final int responseCode = conn.getResponseCode();\n\n    } catch (Exception e) {\n      throw new OSourceException(\"[HTTP source] error on opening connection in \" + httpMethod + \" to URL: \" + url, e);\n    }\n  }","id":8413,"modified_method":"@Override\n  public void begin() {\n    try {\n      final URL obj = new URL(url);\n      conn = (HttpURLConnection) obj.openConnection();\n      conn.setRequestMethod(method);\n\n      if (headers != null)\n        for (String k : headers.fieldNames())\n          conn.setRequestProperty(k, (String) headers.field(k));\n\n      log(\"Connecting to %s (method=%s)\", url, method);\n\n      final int responseCode = conn.getResponseCode();\n\n      log(\"Connected: response code %d\", responseCode);\n\n    } catch (Exception e) {\n      throw new OSourceException(\"[HTTP source] error on opening connection in \" + method + \" to URL: \" + url, e);\n    }\n  }","commit_id":"a04af95cb6e33ec2fadcb3face9c27c760bbf49c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void extract(final Reader iReader) {\n    super.extract(iReader);\n    jsonReader = new OJSONReader(reader);\n    try {\n      char first = jsonReader.nextChar();\n      if (first == '[') {\n        collection = true;\n      } else if (first == '{') {\n        collection = false;\n      } else\n        throw new OExtractorException(\"[JSON extractor] found unexpected character '\" + first + \"' at the beginning of input\");\n\n    } catch (Exception e) {\n      throw new OExtractorException(e);\n    }\n  }","id":8414,"modified_method":"public void extract(final Reader iReader) {\n    super.extract(iReader);\n    jsonReader = new OJSONReader(reader);\n    try {\n      first = jsonReader.nextChar();\n      if (first == '[')\n        first = null;\n      else if (first == '{')\n        total = 1;\n      else\n        throw new OExtractorException(\"[JSON extractor] found unexpected character '\" + first + \"' at the beginning of input\");\n\n    } catch (Exception e) {\n      throw new OExtractorException(e);\n    }\n  }","commit_id":"a04af95cb6e33ec2fadcb3face9c27c760bbf49c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n  public boolean hasNext() {\n    if (jsonReader == null)\n      return false;\n\n    if (collection && jsonReader.lastChar() == ']') {\n      jsonReader = null;\n      return false;\n    }\n\n    try {\n      return jsonReader.hasNext();\n    } catch (Exception e) {\n      throw new OExtractorException(\"[JSON extractor] error on parsing next element\", e);\n    }\n  }","id":8415,"modified_method":"@Override\n  public boolean hasNext() {\n    if (jsonReader == null)\n      return false;\n\n    if (total == 1 && jsonReader.lastChar() == ']') {\n      jsonReader = null;\n      return false;\n    }\n\n    try {\n      return jsonReader.hasNext();\n    } catch (Exception e) {\n      throw new OExtractorException(\"[JSON extractor] error on parsing next element\", e);\n    }\n  }","commit_id":"a04af95cb6e33ec2fadcb3face9c27c760bbf49c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n  public Object next() {\n    if (!hasNext())\n      throw new NoSuchElementException(\"EOF\");\n\n    try {\n      final String value = jsonReader.readString(OJSONReader.END_OBJECT, true);\n      jsonReader.readNext(OJSONReader.NEXT_IN_ARRAY);\n      current++;\n      return new ODocument().fromJSON(value);\n    } catch (Exception e) {\n      throw new OExtractorException(\"[JSON extractor] error on extract json\", e);\n    }\n  }","id":8416,"modified_method":"@Override\n  public Object next() {\n    if (!hasNext())\n      throw new NoSuchElementException(\"EOF\");\n\n    try {\n      String value = jsonReader.readString(OJSONReader.END_OBJECT, true);\n      if (first != null) {\n        // USE THE FIRST CHAR READ\n        value = first + value;\n        first = null;\n      }\n      jsonReader.readNext(OJSONReader.NEXT_IN_ARRAY);\n      current++;\n      return new ODocument().fromJSON(value);\n    } catch (Exception e) {\n      throw new OExtractorException(\"[JSON extractor] error on extract json\", e);\n    }\n  }","commit_id":"a04af95cb6e33ec2fadcb3face9c27c760bbf49c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n  public void configure(final OETLProcessor iProcessor, final ODocument iConfiguration, OBasicCommandContext iContext) {\n    super.configure(iProcessor, iConfiguration, iContext);\n\n    joinFieldName = iConfiguration.field(\"joinFieldName\");\n\n    if (iConfiguration.containsField(\"lookup\"))\n      lookup = iConfiguration.field(\"lookup\");\n\n    if (iConfiguration.containsField(\"unresolvedLinkAction\"))\n      unresolvedLinkAction = ACTION.valueOf(iConfiguration.field(\"unresolvedLinkAction\").toString().toUpperCase());\n\n    db = processor.getDocumentDatabase();\n  }","id":8417,"modified_method":"@Override\n  public void configure(final OETLProcessor iProcessor, final ODocument iConfiguration, OBasicCommandContext iContext) {\n    super.configure(iProcessor, iConfiguration, iContext);\n\n    joinFieldName = iConfiguration.field(\"joinFieldName\");\n\n    if (iConfiguration.containsField(\"lookup\"))\n      lookup = iConfiguration.field(\"lookup\");\n\n    if (iConfiguration.containsField(\"unresolvedLinkAction\"))\n      unresolvedLinkAction = ACTION.valueOf(iConfiguration.field(\"unresolvedLinkAction\").toString().toUpperCase());\n\n    db = processor.getDocumentDatabase();\n    if( db == null )\n      throw new OTransformException(\"[Merge transformer] database is not configured\");\n  }","commit_id":"a04af95cb6e33ec2fadcb3face9c27c760bbf49c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void doExecute(@NotNull final AnActionEvent event) {\n    try {\n      ChangeListManagerImpl changeListManager = ChangeListManagerImpl.getInstanceImpl(AddToVcs_Action.this.project);\n      changeListManager.addUnversionedFiles(changeListManager.getDefaultChangeList(), VcsActionsHelper.getUnversionedFilesForModules(AddToVcs_Action.this.project, AddToVcs_Action.this.modules));\n    } catch (Throwable t) {\n      if (log.isErrorEnabled()) {\n        log.error(\"User's action execute method failed. Action:\" + \"AddToVcs\", t);\n      }\n    }\n  }","id":8418,"modified_method":"public void doExecute(@NotNull final AnActionEvent event) {\n    try {\n      List<VirtualFile> unversionedFiles = VcsActionsHelper.getUnversionedFilesForModules(AddToVcs_Action.this.project, AddToVcs_Action.this.modules);\n      if (ListSequence.fromList(unversionedFiles).isEmpty()) {\n        Messages.showInfoMessage(AddToVcs_Action.this.project, \"Nothing to add\", \"Add to VCS\");\n        return;\n      }\n      ChangeListManagerImpl changeListManager = ChangeListManagerImpl.getInstanceImpl(AddToVcs_Action.this.project);\n      changeListManager.addUnversionedFiles(changeListManager.getDefaultChangeList(), unversionedFiles);\n    } catch (Throwable t) {\n      if (log.isErrorEnabled()) {\n        log.error(\"User's action execute method failed. Action:\" + \"AddToVcs\", t);\n      }\n    }\n  }","commit_id":"5ecbf43d13bdff3f818c5b5069587727f9dd5568","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean isApplicable(AnActionEvent event) {\n    return ListSequence.fromList(VcsActionsHelper.getUnversionedFilesForModules(AddToVcs_Action.this.project, AddToVcs_Action.this.modules)).isNotEmpty();\n  }","id":8419,"modified_method":"public boolean isApplicable(AnActionEvent event) {\n    return true;\n  }","commit_id":"5ecbf43d13bdff3f818c5b5069587727f9dd5568","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean isApplicable(AnActionEvent event) {\n    return ListSequence.fromList(VcsActionsHelper.getUnversionedFilesForModules(IgnoreInVcs_Action.this.project, IgnoreInVcs_Action.this.modules)).isNotEmpty();\n  }","id":8420,"modified_method":"public boolean isApplicable(AnActionEvent event) {\n    return true;\n  }","commit_id":"5ecbf43d13bdff3f818c5b5069587727f9dd5568","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doExecute(@NotNull final AnActionEvent event) {\n    try {\n      IgnoreUnversionedDialog.ignoreSelectedFiles(IgnoreInVcs_Action.this.project, VcsActionsHelper.getUnversionedFilesForModules(IgnoreInVcs_Action.this.project, IgnoreInVcs_Action.this.modules));\n    } catch (Throwable t) {\n      if (log.isErrorEnabled()) {\n        log.error(\"User's action execute method failed. Action:\" + \"IgnoreInVcs\", t);\n      }\n    }\n  }","id":8421,"modified_method":"public void doExecute(@NotNull final AnActionEvent event) {\n    try {\n      List<VirtualFile> unversionedFiles = VcsActionsHelper.getUnversionedFilesForModules(IgnoreInVcs_Action.this.project, IgnoreInVcs_Action.this.modules);\n      if (ListSequence.fromList(unversionedFiles).isEmpty()) {\n        Messages.showInfoMessage(IgnoreInVcs_Action.this.project, \"Nothing to ignore\", \"Ignore..\");\n        return;\n      }\n      IgnoreUnversionedDialog.ignoreSelectedFiles(IgnoreInVcs_Action.this.project, unversionedFiles);\n    } catch (Throwable t) {\n      if (log.isErrorEnabled()) {\n        log.error(\"User's action execute method failed. Action:\" + \"IgnoreInVcs\", t);\n      }\n    }\n  }","commit_id":"5ecbf43d13bdff3f818c5b5069587727f9dd5568","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doExecute(@NotNull final AnActionEvent event) {\n    try {\n      ChangeListManagerImpl changeListManager = ChangeListManagerImpl.getInstanceImpl(AddToVcs_Action.this.project);\n      changeListManager.addUnversionedFiles(changeListManager.getDefaultChangeList(), VcsActionsHelper.getUnversionedFilesForModules(AddToVcs_Action.this.project, AddToVcs_Action.this.modules));\n    } catch (Throwable t) {\n      if (log.isErrorEnabled()) {\n        log.error(\"User's action execute method failed. Action:\" + \"AddToVcs\", t);\n      }\n    }\n  }","id":8422,"modified_method":"public void doExecute(@NotNull final AnActionEvent event) {\n    try {\n      List<VirtualFile> unversionedFiles = VcsActionsHelper.getUnversionedFilesForModules(AddToVcs_Action.this.project, AddToVcs_Action.this.modules);\n      if (ListSequence.fromList(unversionedFiles).isEmpty()) {\n        Messages.showInfoMessage(AddToVcs_Action.this.project, \"Nothing to add\", \"Add to VCS\");\n        return;\n      }\n      ChangeListManagerImpl changeListManager = ChangeListManagerImpl.getInstanceImpl(AddToVcs_Action.this.project);\n      changeListManager.addUnversionedFiles(changeListManager.getDefaultChangeList(), unversionedFiles);\n    } catch (Throwable t) {\n      if (log.isErrorEnabled()) {\n        log.error(\"User's action execute method failed. Action:\" + \"AddToVcs\", t);\n      }\n    }\n  }","commit_id":"0ae9be9d5cd168950fd4e103d858cfd6eb75f38f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean isApplicable(AnActionEvent event) {\n    return ListSequence.fromList(VcsActionsHelper.getUnversionedFilesForModules(AddToVcs_Action.this.project, AddToVcs_Action.this.modules)).isNotEmpty();\n  }","id":8423,"modified_method":"public boolean isApplicable(AnActionEvent event) {\n    return true;\n  }","commit_id":"0ae9be9d5cd168950fd4e103d858cfd6eb75f38f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doExecute(@NotNull final AnActionEvent event) {\n    try {\n      IgnoreUnversionedDialog.ignoreSelectedFiles(IgnoreInVcs_Action.this.project, VcsActionsHelper.getUnversionedFilesForModules(IgnoreInVcs_Action.this.project, IgnoreInVcs_Action.this.modules));\n    } catch (Throwable t) {\n      if (log.isErrorEnabled()) {\n        log.error(\"User's action execute method failed. Action:\" + \"IgnoreInVcs\", t);\n      }\n    }\n  }","id":8424,"modified_method":"public void doExecute(@NotNull final AnActionEvent event) {\n    try {\n      List<VirtualFile> unversionedFiles = VcsActionsHelper.getUnversionedFilesForModules(IgnoreInVcs_Action.this.project, IgnoreInVcs_Action.this.modules);\n      if (ListSequence.fromList(unversionedFiles).isEmpty()) {\n        Messages.showInfoMessage(IgnoreInVcs_Action.this.project, \"Nothing to ignore\", \"Ignore..\");\n        return;\n      }\n      IgnoreUnversionedDialog.ignoreSelectedFiles(IgnoreInVcs_Action.this.project, unversionedFiles);\n    } catch (Throwable t) {\n      if (log.isErrorEnabled()) {\n        log.error(\"User's action execute method failed. Action:\" + \"IgnoreInVcs\", t);\n      }\n    }\n  }","commit_id":"0ae9be9d5cd168950fd4e103d858cfd6eb75f38f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean isApplicable(AnActionEvent event) {\n    return ListSequence.fromList(VcsActionsHelper.getUnversionedFilesForModules(IgnoreInVcs_Action.this.project, IgnoreInVcs_Action.this.modules)).isNotEmpty();\n  }","id":8425,"modified_method":"public boolean isApplicable(AnActionEvent event) {\n    return true;\n  }","commit_id":"0ae9be9d5cd168950fd4e103d858cfd6eb75f38f","url":"https://github.com/JetBrains/MPS"},{"original_method":"@ProcessInput\n    public void process(StreamEvent event) {\n      String body = Bytes.toString(event.getBody());\n      LOG.trace(\"Points info: {}\", body);\n      pointsStore.write(getIdAsByte(UUID.randomUUID()), body);\n    }","id":8426,"modified_method":"@ProcessInput\n    public void process(StreamEvent event) {\n      String body = Bytes.toString(event.getBody());\n      LOG.trace(\"Points info: {}\", body);\n      pointsStore.write(getIdAsByte(UUID.randomUUID()), parseEvent(event));\n    }","commit_id":"6dd87fc4392fb407749dd1f7738f2f79ce7547ac","url":"https://github.com/caskdata/cdap"},{"original_method":"private static byte[] getIdAsByte(UUID uuid) {\n      ByteBuffer bb = ByteBuffer.wrap(new byte[16]);\n      bb.putLong(uuid.getMostSignificantBits());\n      bb.putLong(uuid.getLeastSignificantBits());\n      return bb.array();\n    }","id":8427,"modified_method":"private byte[] getIdAsByte(UUID uuid) {\n      ByteBuffer bb = ByteBuffer.wrap(new byte[16]);\n      bb.putLong(uuid.getMostSignificantBits());\n      bb.putLong(uuid.getLeastSignificantBits());\n      return bb.array();\n    }","commit_id":"6dd87fc4392fb407749dd1f7738f2f79ce7547ac","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public SparkSpecification configure() {\n      return SparkSpecification.Builder.with()\n        .setName(\"SparkKMeansProgram\")\n        .setDescription(\"Spark KMeans Program\")\n        .setMainClassName(SparkKMeansProgram.class.getName())\n        .build();\n    }","id":8428,"modified_method":"@Override\n    public void configure() {\n      setName(\"SparkKMeansProgram\");\n      setDescription(\"Spark KMeans Program\");\n      setMainClass(SparkKMeansProgram.class);\n    }","commit_id":"6dd87fc4392fb407749dd1f7738f2f79ce7547ac","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public FlowSpecification configure() {\n      return FlowSpecification.Builder.with()\n        .setName(\"PointsFlow\")\n        .setDescription(\"Reads points information and stores in dataset\")\n        .withFlowlets()\n        .add(\"reader\", new PointsReader())\n        .connect()\n        .fromStream(\"pointsStream\").to(\"reader\")\n        .build();\n    }","id":8429,"modified_method":"@Override\n    protected void configureFlow() {\n      setName(\"PointsFlow\");\n      setDescription(\"Reads points information and stores in dataset\");\n      addFlowlet(\"reader\", new PointsReader());\n      connectStream(\"pointsStream\", \"reader\");\n    }","commit_id":"6dd87fc4392fb407749dd1f7738f2f79ce7547ac","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void configure() {\n    setName(\"SparkKMeans\");\n    setDescription(\"Spark KMeans app\");\n\n    // Ingest data into the Application via a Stream\n    addStream(new Stream(\"pointsStream\"));\n\n    // Process points data in real-time using a Flow\n    addFlow(new PointsFlow());\n\n    // Run a Spark program on the acquired data\n    addSpark(new SparkKMeansSpecification());\n\n    // Retrieve the processed data using a Service\n    addService(new CentersService());\n\n    // Store input and processed data in ObjectStore Datasets\n    try {\n      ObjectStores.createObjectStore(getConfigurer(), \"points\", String.class);\n      ObjectStores.createObjectStore(getConfigurer(), \"centers\", String.class);\n    } catch (UnsupportedTypeException e) {\n      // This exception is thrown by ObjectStore if its parameter type cannot be\n      // (de)serialized (for example, if it is an interface and not a class, then there is\n      // no auto-magic way deserialize an object.) In this case that will not happen\n      // because String is an actual class.\n      throw new RuntimeException(e);\n    }\n  }","id":8430,"modified_method":"@Override\n  public void configure() {\n    setName(\"SparkKMeans\");\n    setDescription(\"Spark KMeans app\");\n\n    // Ingest data into the Application via a Stream\n    addStream(new Stream(\"pointsStream\"));\n\n    // Process points data in real-time using a Flow\n    addFlow(new PointsFlow());\n\n    // Run a Spark program on the acquired data\n    addSpark(new SparkKMeansSpecification());\n\n    // Retrieve the processed data using a Service\n    addService(new CentersService());\n\n    // Store input and processed data in ObjectStore Datasets\n    try {\n      ObjectStores.createObjectStore(getConfigurer(), \"points\", Point.class);\n      ObjectStores.createObjectStore(getConfigurer(), \"centers\", String.class);\n    } catch (UnsupportedTypeException e) {\n      // This exception is thrown by ObjectStore if its parameter type cannot be\n      // (de)serialized (for example, if it is an interface and not a class, then there is\n      // no auto-magic way deserialize an object.) In this case that will not happen\n      // because String is an actual class.\n      throw new RuntimeException(e);\n    }\n  }","commit_id":"6dd87fc4392fb407749dd1f7738f2f79ce7547ac","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void test() throws Exception {\n    // Deploy the Application\n    ApplicationManager appManager = deployApplication(SparkKMeansApp.class);\n\n    // Start the Flow\n    FlowManager flowManager = appManager.startFlow(\"PointsFlow\");\n    try {\n      // Send a few points to the stream\n      StreamWriter streamWriter = appManager.getStreamWriter(\"pointsStream\");\n      streamWriter.send(\"10.6 519.2 110.3\");\n      streamWriter.send(\"10.6 518.1 110.1\");\n      streamWriter.send(\"10.6 519.6 109.9\");\n      streamWriter.send(\"10.6 517.9 108.9\");\n      streamWriter.send(\"10.7 518 109.2\");\n\n      //  Wait for the events to be processed, or at most 5 seconds\n      RuntimeMetrics metrics = RuntimeStats.getFlowletMetrics(\"SparkKMeans\", \"PointsFlow\", \"reader\");\n      metrics.waitForProcessed(3, 5, TimeUnit.SECONDS);\n\n      // Start a Spark Program\n      SparkManager sparkManager = appManager.startSpark(\"SparkKMeansProgram\");\n      sparkManager.waitForFinish(60, TimeUnit.SECONDS);\n    } finally {\n      flowManager.stop();\n    }\n\n    // Start CentersService\n    ServiceManager serviceManager = appManager.startService(SparkKMeansApp.CentersService.SERVICE_NAME);\n\n    // Wait service startup\n    serviceManager.waitForStatus(true);\n\n    // Request data and verify it\n    String response = requestService(new URL(serviceManager.getServiceURL(), \"centers/1\"));\n    String[] coordinates = response.split(\",\");\n    Assert.assertTrue(coordinates.length == 3);\n    for (String coordinate : coordinates) {\n      double value = Double.parseDouble(coordinate);\n      Assert.assertTrue(value > 0);\n    }\n\n    // Request data by incorrect index and verify response\n    URL url = new URL(serviceManager.getServiceURL(), \"centers/10\");\n    HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n    try {\n      Assert.assertEquals(HttpURLConnection.HTTP_NO_CONTENT, conn.getResponseCode());\n    } finally {\n      conn.disconnect();\n    }\n\n    appManager.stopAll();\n  }","id":8431,"modified_method":"@Test\n  public void test() throws Exception {\n    // Deploy the Application\n    ApplicationManager appManager = deployApplication(SparkKMeansApp.class);\n    // Start the Flow\n    FlowManager flowManager = appManager.getFlowManager(\"PointsFlow\").start();\n    // Send a few points to the stream\n    StreamManager streamManager = getStreamManager(\"pointsStream\");\n    streamManager.send(\"10.6 519.2 110.3\");\n    streamManager.send(\"10.6 518.1 110.1\");\n    streamManager.send(\"10.6 519.6 109.9\");\n    streamManager.send(\"10.6 517.9 108.9\");\n    streamManager.send(\"10.7 518 109.2\");\n\n    //  Wait for the events to be processed, or at most 5 seconds\n    RuntimeMetrics metrics = RuntimeStats.getFlowletMetrics(\"SparkKMeans\", \"PointsFlow\", \"reader\");\n    metrics.waitForProcessed(3, 5, TimeUnit.SECONDS);\n\n    // Start a Spark Program\n    SparkManager sparkManager = appManager.getSparkManager(\"SparkKMeansProgram\").start();\n    sparkManager.waitForFinish(60, TimeUnit.SECONDS);\n\n    flowManager.stop();\n\n    // Start CentersService\n    ServiceManager serviceManager = appManager.getServiceManager(SparkKMeansApp.CentersService.SERVICE_NAME).start();\n\n    // Wait service startup\n    serviceManager.waitForStatus(true);\n\n    // Request data and verify it\n    String response = requestService(new URL(serviceManager.getServiceURL(15, TimeUnit.SECONDS), \"centers/1\"));\n    String[] coordinates = response.split(\",\");\n    Assert.assertTrue(coordinates.length == 3);\n    for (String coordinate : coordinates) {\n      double value = Double.parseDouble(coordinate);\n      Assert.assertTrue(value > 0);\n    }\n\n    // Request data by incorrect index and verify response\n    URL url = new URL(serviceManager.getServiceURL(15, TimeUnit.SECONDS), \"centers/10\");\n    HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n    try {\n      Assert.assertEquals(HttpURLConnection.HTTP_NO_CONTENT, conn.getResponseCode());\n    } finally {\n      conn.disconnect();\n    }\n  }","commit_id":"6dd87fc4392fb407749dd1f7738f2f79ce7547ac","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void addSpark(Spark spark) {\n    Preconditions.checkArgument(spark != null, \"Spark cannot be null.\");\n    DefaultSparkSpecification spec = new DefaultSparkSpecification(spark);\n    sparks.put(spec.getName(), spec);\n  }","id":8432,"modified_method":"@Override\n  public void addSpark(Spark spark) {\n    Preconditions.checkArgument(spark != null, \"Spark cannot be null.\");\n    DefaultSparkConfigurer configurer = new DefaultSparkConfigurer(spark);\n    spark.configure(configurer);\n    SparkSpecification spec = configurer.createSpecification();\n    sparks.put(spec.getName(), spec);\n  }","commit_id":"70e747270f72bdffe44b4778656a60fe43465943","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public SparkSpecification configure() {\n    return SparkSpecification.Builder.with()\n      .setName(NAME)\n      .setDescription(\"\")\n      .setMainClassName(FakeSparkProgram.class.getName())\n      .build();\n  }","id":8433,"modified_method":"@Override\n  public void configure() {\n    setName(NAME);\n    setDescription(\"\");\n    setMainClass(FakeSparkProgram.class);\n  }","commit_id":"70e747270f72bdffe44b4778656a60fe43465943","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public SparkSpecification configure() {\n      return SparkSpecification.Builder.with()\n        .setName(\"SparkComputeChars\")\n        .setDescription(\"Use Objectstore dataset as input job\")\n        .setMainClassName(ScalaCharCountProgram.class.getName())\n        .build();\n    }","id":8434,"modified_method":"@Override\n    public void configure() {\n      setName(\"SparkComputeChars\");\n      setDescription(\"Use Objectstore dataset as input job\");\n      setMainClass(ScalaCharCountProgram.class);\n    }","commit_id":"70e747270f72bdffe44b4778656a60fe43465943","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public SparkSpecification configure() {\n      return SparkSpecification.Builder.with()\n        .setName(\"SparkCharCountProgram\")\n        .setDescription(\"Use Objectstore dataset as input job\")\n        .setMainClassName(CharCountProgram.class.getName())\n        .build();\n    }","id":8435,"modified_method":"@Override\n    public void configure() {\n      setName(\"SparkCharCountProgram\");\n      setDescription(\"Use Objectstore dataset as input job\");\n      setMainClass(CharCountProgram.class);\n    }","commit_id":"70e747270f72bdffe44b4778656a60fe43465943","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public SparkSpecification configure() {\n      return SparkSpecification.Builder.with()\n        .setName(\"SparkKMeansProgram\")\n        .setDescription(\"Spark KMeans Program\")\n        .setMainClassName(SparkKMeansProgram.class.getName())\n        .build();\n    }","id":8436,"modified_method":"@Override\n    public void configure() {\n      setName(\"SparkKMeansProgram\");\n      setDescription(\"Spark KMeans Program\");\n      setMainClass(SparkKMeansProgram.class);\n    }","commit_id":"70e747270f72bdffe44b4778656a60fe43465943","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public SparkSpecification configure() {\n      return SparkSpecification.Builder.with()\n        .setName(\"SparkPageRankProgram\")\n        .setDescription(\"Spark Page Rank Program\")\n        .setMainClassName(SparkPageRankProgram.class.getName())\n        .build();\n    }","id":8437,"modified_method":"@Override\n    public void configure() {\n      setName(\"SparkPageRankProgram\");\n      setDescription(\"Spark Page Rank Program\");\n      setMainClass(SparkPageRankProgram.class);\n    }","commit_id":"70e747270f72bdffe44b4778656a60fe43465943","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public SparkSpecification deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\n    throws JsonParseException {\n    JsonObject jsonObj = json.getAsJsonObject();\n\n    String className = jsonObj.get(\"className\").getAsString();\n    String name = jsonObj.get(\"name\").getAsString();\n    String description = jsonObj.get(\"description\").getAsString();\n    String mainClassName = jsonObj.get(\"mainClassName\").getAsString();\n    Map<String, String> properties = deserializeMap(jsonObj.get(\"properties\"), context, String.class);\n\n    return new DefaultSparkSpecification(className, name, description, mainClassName, properties);\n  }","id":8438,"modified_method":"@Override\n  public SparkSpecification deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\n    throws JsonParseException {\n    JsonObject jsonObj = json.getAsJsonObject();\n\n    String className = jsonObj.get(\"className\").getAsString();\n    String name = jsonObj.get(\"name\").getAsString();\n    String description = jsonObj.get(\"description\").getAsString();\n    String mainClassName = jsonObj.get(\"mainClassName\").getAsString();\n    Map<String, String> properties = deserializeMap(jsonObj.get(\"properties\"), context, String.class);\n\n    return new SparkSpecification(className, name, description, mainClassName, properties);\n  }","commit_id":"70e747270f72bdffe44b4778656a60fe43465943","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public SparkSpecification configure() {\n      return SparkSpecification.Builder.with()\n        .setName(APP_SPARK_NAME)\n        .setDescription(\"Test Spark Metrics\")\n        .setMainClassName(SparkMetricsProgram.class.getName())\n        .build();\n    }","id":8439,"modified_method":"@Override\n    public void configure() {\n      setName(APP_SPARK_NAME);\n      setDescription(\"Test Spark Metrics\");\n      setMainClass(SparkMetricsProgram.class);\n    }","commit_id":"70e747270f72bdffe44b4778656a60fe43465943","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public SparkSpecification configure() {\n      return SparkSpecification.Builder.with()\n        .setName(\"SparkServiceProgram\")\n        .setDescription(\"Test Spark with Service\")\n        .setMainClassName(SparkServiceProgram.class.getName())\n        .build();\n    }","id":8440,"modified_method":"@Override\n    public void configure() {\n      setName(\"SparkServiceProgram\");\n      setDescription(\"Test Spark with Service\");\n      setMainClass(SparkServiceProgram.class);\n    }","commit_id":"70e747270f72bdffe44b4778656a60fe43465943","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public SparkSpecification configure() {\n      return SparkSpecification.Builder.with()\n        .setName(\"SparkStreamProgram\")\n        .setDescription(\"Test Spark with Streams\")\n        .setMainClassName(SparkStreamProgram.class.getName())\n        .build();\n    }","id":8441,"modified_method":"@Override\n    public void configure() {\n      setName(\"SparkStreamProgram\");\n      setDescription(\"Test Spark with Streams\");\n      setMainClass(SparkStreamProgram.class);\n    }","commit_id":"70e747270f72bdffe44b4778656a60fe43465943","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Get a map of metric / property info based on the given component name and property id.\n   * Note that the property id may map to multiple metrics if the property id is a category.\n   *\n   * @param componentName  the component name\n   * @param propertyId     the property id; may be a category\n   *\n   * @return a map of metrics\n   */\n  protected Map<String, PropertyInfo> getPropertyInfoMap(String componentName, String propertyId) {\n    Map<String, PropertyInfo> propertyInfoMap = new HashMap<String, PropertyInfo>();\n\n    getPropertyInfoMap(componentName, propertyId, propertyInfoMap);\n\n    return propertyInfoMap;\n  }","id":8442,"modified_method":"/**\n   * Get a map of metric / property info based on the given component name and property id.\n   * Note that the property id may map to multiple metrics if the property id is a category.\n   *\n   * @param componentName  the component name\n   * @param propertyId     the property id; may be a category\n   *\n   * @return a map of metrics\n   */\n  protected Map<String, PropertyInfo> getPropertyInfoMap(String componentName, String propertyId) {\n    Map<String, PropertyInfo> componentMetricMap = componentMetrics.get(componentName);\n    if (componentMetricMap == null) {\n      return Collections.emptyMap();\n    }\n\n    PropertyInfo propertyInfo = componentMetricMap.get(propertyId);\n    if (propertyInfo != null) {\n      return Collections.singletonMap(propertyId, propertyInfo);\n    }\n\n    if (!propertyId.endsWith(\"/\")){\n      propertyId += \"/\";\n    }\n    Map<String, PropertyInfo> propertyInfoMap = new HashMap<String, PropertyInfo>();\n    for (Map.Entry<String, PropertyInfo> entry : componentMetricMap.entrySet()) {\n      if (entry.getKey().startsWith(propertyId)) {\n        propertyInfoMap.put(entry.getKey(), entry.getValue());\n      }\n    }\n    return propertyInfoMap;\n  }","commit_id":"2a149112bb15091c8d5877160f098adf7639d5fc","url":"https://github.com/apache/ambari"},{"original_method":"public Set<String> checkPropertyIds(Set<String> propertyIds) {\n    if (!this.propertyIds.containsAll(propertyIds)) {\n      Set<String> unsupportedPropertyIds = new HashSet<String>(propertyIds);\n      unsupportedPropertyIds.removeAll(this.combinedIds);\n\n      // If the property id is not in the set of known property ids we may still allow it if\n      // its parent category is a known property. This allows for Map type properties where\n      // we want to treat property as a category and the entries as individual properties.\n      Set<String> categoryProperties = new HashSet<String>();\n      for (String unsupportedPropertyId : unsupportedPropertyIds) {\n        if (checkCategory(unsupportedPropertyId) || checkRegExp(unsupportedPropertyId)) {\n          categoryProperties.add(unsupportedPropertyId);\n        }\n      }\n      unsupportedPropertyIds.removeAll(categoryProperties);\n\n      return unsupportedPropertyIds;\n    }\n    return Collections.emptySet();\n  }","id":8443,"modified_method":"public Set<String> checkPropertyIds(Set<String> propertyIds) {\n    if (!this.propertyIds.containsAll(propertyIds)) {\n      Set<String> unsupportedPropertyIds = new HashSet<String>(propertyIds);\n      unsupportedPropertyIds.removeAll(this.combinedIds);\n\n      // If the property id is not in the set of known property ids we may still allow it if\n      // its parent category is a known property. This allows for Map type properties where\n      // we want to treat property as a category and the entries as individual properties.\n      Set<String> categoryProperties = new HashSet<String>();\n      for (String unsupportedPropertyId : unsupportedPropertyIds) {\n        String category = PropertyHelper.getPropertyCategory(unsupportedPropertyId);\n        while (category != null) {\n          if (this.propertyIds.contains(category)) {\n            categoryProperties.add(unsupportedPropertyId);\n          }\n          category = PropertyHelper.getPropertyCategory(category);\n        }\n      }\n      unsupportedPropertyIds.removeAll(categoryProperties);\n\n      return unsupportedPropertyIds;\n    }\n    return Collections.emptySet();\n  }","commit_id":"2a149112bb15091c8d5877160f098adf7639d5fc","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Get the set of property ids required to satisfy the given request.\n   *\n   * @param request              the request\n   * @param predicate            the predicate\n   *\n   * @return the set of property ids needed to satisfy the request\n   */\n  protected Set<String> getRequestPropertyIds(Request request, Predicate predicate) {\n    Set<String> propertyIds  = request.getPropertyIds();\n\n    // if no properties are specified, then return them all\n    if (propertyIds == null || propertyIds.isEmpty()) {\n      return new HashSet<String>(this.propertyIds);\n    }\n\n    propertyIds = new HashSet<String>(propertyIds);\n\n    if (predicate != null) {\n      propertyIds.addAll(PredicateHelper.getPropertyIds(predicate));\n    }\n\n    if (!this.combinedIds.containsAll(propertyIds)) {\n      Set<String> keepers = new HashSet<String>();\n      Set<String> unsupportedPropertyIds = new HashSet<String>(propertyIds);\n      unsupportedPropertyIds.removeAll(this.combinedIds);\n\n      for (String unsupportedPropertyId : unsupportedPropertyIds) {\n        if (checkCategory(unsupportedPropertyId) || checkRegExp(unsupportedPropertyId)) {\n          keepers.add(unsupportedPropertyId);\n        }\n      }\n      propertyIds.retainAll(this.combinedIds);\n      propertyIds.addAll(keepers);\n    }\n    return propertyIds;\n  }","id":8444,"modified_method":"/**\n   * Get the set of property ids required to satisfy the given request.\n   *\n   * @param request              the request\n   * @param predicate            the predicate\n   *\n   * @return the set of property ids needed to satisfy the request\n   */\n  protected Set<String> getRequestPropertyIds(Request request, Predicate predicate) {\n    Set<String> propertyIds  = request.getPropertyIds();\n\n    // if no properties are specified, then return them all\n    if (propertyIds == null || propertyIds.isEmpty()) {\n      return new HashSet<String>(this.propertyIds);\n    }\n\n    propertyIds = new HashSet<String>(propertyIds);\n\n    if (predicate != null) {\n      propertyIds.addAll(PredicateHelper.getPropertyIds(predicate));\n    }\n\n    if (!this.combinedIds.containsAll(propertyIds)) {\n      Set<String> keepers = new HashSet<String>();\n      Set<String> unsupportedPropertyIds = new HashSet<String>(propertyIds);\n      unsupportedPropertyIds.removeAll(this.combinedIds);\n\n      // Add the categories to account for map properties where the entries will not be\n      // in the provider property list ids but the map (category) might be.\n      for (String unsupportedPropertyId : unsupportedPropertyIds) {\n        String category = PropertyHelper.getPropertyCategory(unsupportedPropertyId);\n        while (category != null) {\n          if (this.propertyIds.contains(category)) {\n            keepers.add(unsupportedPropertyId);\n            break;\n          }\n          category = PropertyHelper.getPropertyCategory(category);\n        }\n      }\n      propertyIds.retainAll(this.combinedIds);\n      propertyIds.addAll(keepers);\n    }\n    return propertyIds;\n  }","commit_id":"2a149112bb15091c8d5877160f098adf7639d5fc","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Construct a provider.\n   *\n   * @param propertyIds  the properties associated with this provider\n   */\n  public BaseProvider(Set<String> propertyIds) {\n    this.propertyIds = new HashSet<String>(propertyIds);\n    this.categoryIds = PropertyHelper.getCategories(propertyIds);\n    this.combinedIds = new HashSet<String>(propertyIds);\n    this.combinedIds.addAll(this.categoryIds);\n    this.patterns = new HashMap<String, Pattern>();\n    for (String id : this.combinedIds) {\n      if (id.matches(\".*\\\\$\\\\d+.*\")) {\n        String pattern = id.replaceAll(\"\\\\$\\\\d+\", \"\\\\\\\\S+\");\n        patterns.put(id, Pattern.compile(pattern));\n      }\n    }\n  }","id":8445,"modified_method":"/**\n   * Construct a provider.\n   *\n   * @param propertyIds  the properties associated with this provider\n   */\n  public BaseProvider(Set<String> propertyIds) {\n    this.propertyIds = new HashSet<String>(propertyIds);\n    this.categoryIds = PropertyHelper.getCategories(propertyIds);\n    this.combinedIds = new HashSet<String>(propertyIds);\n    this.combinedIds.addAll(this.categoryIds);\n  }","commit_id":"2a149112bb15091c8d5877160f098adf7639d5fc","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Get the request objects containing all the information required to\n   * make single requests to the Ganglia rrd script.\n   * Requests are created per cluster name / temporal information but\n   * can span multiple resources and metrics.\n   *\n   * @param resources  the resources being populated\n   * @param request    the request\n   * @param ids        the relevant property ids\n   *\n   * @return a map of maps of rrd requests keyed by cluster name / temporal info\n   */\n  private Map<String, Map<TemporalInfo, RRDRequest>> getRRDRequests(Set<Resource> resources,\n                                                                    Request request,\n                                                                    Set<String> ids) {\n\n    Map<String, Map<TemporalInfo, RRDRequest>> requestMap =\n        new HashMap<String, Map<TemporalInfo, RRDRequest>>();\n\n    for (Resource resource : resources) {\n      String clusterName = (String) resource.getPropertyValue(clusterNamePropertyId);\n      Map<TemporalInfo, RRDRequest> requests = requestMap.get(clusterName);\n      if (requests == null) {\n        requests = new HashMap<TemporalInfo, RRDRequest>();\n        requestMap.put(clusterName, requests);\n      }\n\n      Set<String> gangliaClusterNames = getGangliaClusterNames(resource, clusterName);\n\n      for (String gangliaClusterName : gangliaClusterNames) {\n        ResourceKey key =\n            new ResourceKey(getHostName(resource), gangliaClusterName);\n\n        for (String id : ids) {\n          Map<String, PropertyInfo> propertyInfoMap = new HashMap<String, PropertyInfo>();\n\n          boolean containsRegExp = getPropertyInfoMap(getComponentName(resource), id, propertyInfoMap);\n\n          for (Map.Entry<String, PropertyInfo> entry : propertyInfoMap.entrySet()) {\n            String propertyId = entry.getKey();\n            PropertyInfo propertyInfo = entry.getValue();\n\n            TemporalInfo temporalInfo = request.getTemporalInfo(id);\n\n            if ((temporalInfo == null && propertyInfo.isPointInTime()) || (temporalInfo != null && propertyInfo.isTemporal())) {\n              RRDRequest rrdRequest = requests.get(temporalInfo);\n              if (rrdRequest == null) {\n                rrdRequest = new RRDRequest(clusterName, temporalInfo, containsRegExp);\n                requests.put(temporalInfo, rrdRequest);\n              }\n              rrdRequest.putResource(key, resource);\n              rrdRequest.putPropertyId(propertyInfo.getPropertyId(), propertyId);\n            }\n          }\n        }\n      }\n    }\n    return requestMap;\n  }","id":8446,"modified_method":"/**\n   * Get the request objects containing all the information required to\n   * make single requests to the Ganglia rrd script.\n   * Requests are created per cluster name / temporal information but\n   * can span multiple resources and metrics.\n   *\n   * @param resources  the resources being populated\n   * @param request    the request\n   * @param ids        the relevant property ids\n   *\n   * @return a map of maps of rrd requests keyed by cluster name / temporal info\n   */\n  private Map<String, Map<TemporalInfo, RRDRequest>> getRRDRequests(Set<Resource> resources,\n                                                                    Request request,\n                                                                    Set<String> ids) {\n\n    Map<String, Map<TemporalInfo, RRDRequest>> requestMap =\n        new HashMap<String, Map<TemporalInfo, RRDRequest>>();\n\n    for (Resource resource : resources) {\n      String clusterName = (String) resource.getPropertyValue(clusterNamePropertyId);\n      Map<TemporalInfo, RRDRequest> requests = requestMap.get(clusterName);\n      if (requests == null) {\n        requests = new HashMap<TemporalInfo, RRDRequest>();\n        requestMap.put(clusterName, requests);\n      }\n\n      Set<String> gangliaClusterNames = getGangliaClusterNames(resource, clusterName);\n\n      for (String gangliaClusterName : gangliaClusterNames) {\n        ResourceKey key =\n            new ResourceKey(getHostName(resource), gangliaClusterName);\n\n        for (String id : ids) {\n          Map<String, PropertyInfo> propertyInfoMap = getPropertyInfoMap(getComponentName(resource), id);\n\n          for (Map.Entry<String, PropertyInfo> entry : propertyInfoMap.entrySet()) {\n            String propertyId = entry.getKey();\n            PropertyInfo propertyInfo = entry.getValue();\n\n            TemporalInfo temporalInfo = request.getTemporalInfo(id);\n\n            if ((temporalInfo == null && propertyInfo.isPointInTime()) || (temporalInfo != null && propertyInfo.isTemporal())) {\n              RRDRequest rrdRequest = requests.get(temporalInfo);\n              if (rrdRequest == null) {\n                rrdRequest = new RRDRequest(clusterName, temporalInfo);\n                requests.put(temporalInfo, rrdRequest);\n              }\n              rrdRequest.putResource(key, resource);\n              rrdRequest.putPropertyId(propertyInfo.getPropertyId(), propertyId);\n            }\n          }\n        }\n      }\n    }\n    return requestMap;\n  }","commit_id":"2a149112bb15091c8d5877160f098adf7639d5fc","url":"https://github.com/apache/ambari"},{"original_method":"/**\n     * Populate the given resource with the given Ganglia metric.\n     *\n     * @param resource       the resource\n     * @param gangliaMetric  the Ganglia metrics\n     */\n    private void populateResource(Resource resource, GangliaMetric gangliaMetric) {\n      String metric_name = gangliaMetric.getMetric_name();\n\n      Set<String> propertyIdSet = metrics.get(metric_name);\n      List<String> parameterList  = new LinkedList<String>();\n\n      if (propertyIdSet == null) {\n        for (Map.Entry<String, Set<String>> entry : metrics.entrySet()) {\n\n          String key = entry.getKey();\n\n          Pattern pattern = Pattern.compile(key);\n          Matcher matcher = pattern.matcher(metric_name);\n\n          if (matcher.matches()) {\n            propertyIdSet = entry.getValue();\n            // get parameters\n            for (int i = 0; i < matcher.groupCount(); ++i) {\n              parameterList.add(matcher.group(i + 1));\n            }\n            break;\n          }\n        }\n      }\n      if (propertyIdSet != null) {\n        Map<String, PropertyInfo> metricsMap = getComponentMetrics().get(getComponentName(resource));\n        if (metricsMap != null) {\n          for (String propertyId : propertyIdSet) {\n            if (propertyId != null) {\n              if (metricsMap.containsKey(propertyId)){\n                if (propertyId.matches(\".*\\\\$\\\\d+.*\")) {\n                  int i = 1;\n                  for (String param : parameterList) {\n                    propertyId = propertyId.replace(\"$\" + i, param);\n                    ++i;\n                  }\n                }\n                resource.setProperty(propertyId, getValue(gangliaMetric, temporalInfo != null));\n              }\n            }\n          }\n        }\n      }\n    }","id":8447,"modified_method":"/**\n     * Populate the given resource with the given Ganglia metric.\n     *\n     * @param resource       the resource\n     * @param gangliaMetric  the Ganglia metrics\n     */\n    private void populateResource(Resource resource, GangliaMetric gangliaMetric) {\n      Set<String> propertyIdSet = metrics.get(gangliaMetric.getMetric_name());\n      if (propertyIdSet != null) {\n        Map<String, PropertyInfo> metricsMap = getComponentMetrics().get(getComponentName(resource));\n        if (metricsMap != null) {\n          for (String propertyId : propertyIdSet) {\n            if (propertyId != null) {\n              if (metricsMap.containsKey(propertyId)){\n                resource.setProperty(propertyId, getValue(gangliaMetric, temporalInfo != null));\n              }\n            }\n          }\n        }\n      }\n    }","commit_id":"2a149112bb15091c8d5877160f098adf7639d5fc","url":"https://github.com/apache/ambari"},{"original_method":"/**\n     * Populate the associated resources by making the rrd request.\n     *\n     * @return a collection of populated resources\n     *\n     * @throws SystemException if unable to populate the resources\n     */\n    public Collection<Resource> populateResources() throws SystemException {\n\n      String spec = getSpec(clusterName, clusterSet, hostSet,\n          containsRegExp ? Collections.<String>emptySet() : metrics.keySet(), temporalInfo);\n      BufferedReader reader = null;\n      try {\n        reader = new BufferedReader(new InputStreamReader(\n            getStreamProvider().readFrom(spec)));\n\n        int startTime = convertToNumber(reader.readLine()).intValue();\n\n        String dsName = reader.readLine();\n        while(! dsName.equals(\"[AMBARI_END]\")) {\n          GangliaMetric metric = new GangliaMetric();\n          List<GangliaMetric.TemporalMetric> listTemporalMetrics =\n              new ArrayList<GangliaMetric.TemporalMetric>();\n\n          metric.setDs_name(dsName);\n          metric.setCluster_name(reader.readLine());\n          metric.setHost_name(reader.readLine());\n          metric.setMetric_name(reader.readLine());\n\n          int time = convertToNumber(reader.readLine()).intValue();\n          int step = convertToNumber(reader.readLine()).intValue();\n\n          String val = reader.readLine();\n          while(! val.equals(\"[AMBARI_DP_END]\")) {\n            GangliaMetric.TemporalMetric tm = new GangliaMetric.TemporalMetric(val, time);\n            if (tm.isValid()) listTemporalMetrics.add(tm);\n            time += step;\n            val = reader.readLine();\n          }\n\n          metric.setDatapointsFromList(listTemporalMetrics);\n\n          ResourceKey key = new ResourceKey(metric.getHost_name(), metric.getCluster_name());\n          Set<Resource> resourceSet = resources.get(key);\n          if (resourceSet != null) {\n            for (Resource resource : resourceSet) {\n              populateResource(resource, metric);\n            }\n          }\n\n          dsName = reader.readLine();\n        }\n        int endTime = convertToNumber(reader.readLine()).intValue();\n\n        if (LOG.isInfoEnabled()) {\n          LOG.info(\"Ganglia resource population time: \" + (endTime - startTime));\n        }\n      } catch (IOException e) {\n        if (LOG.isErrorEnabled()) {\n          LOG.error(\"Caught exception getting Ganglia metrics : spec=\" + spec, e);\n        }\n      } finally {\n        if (reader != null) {\n          try {\n            reader.close();\n          } catch (IOException e) {\n            if (LOG.isWarnEnabled()) {\n              LOG.warn(\"Unable to close http input steam : spec=\" + spec, e);\n            }\n          }\n        }\n      }\n      //todo: filter out resources and return keepers\n      return Collections.emptySet();\n    }","id":8448,"modified_method":"/**\n     * Populate the associated resources by making the rrd request.\n     *\n     * @return a collection of populated resources\n     *\n     * @throws SystemException if unable to populate the resources\n     */\n    public Collection<Resource> populateResources() throws SystemException {\n\n      String spec = getSpec(clusterName, clusterSet, hostSet, metrics.keySet(), temporalInfo);\n      BufferedReader reader = null;\n      try {\n        reader = new BufferedReader(new InputStreamReader(\n            getStreamProvider().readFrom(spec)));\n\n        int startTime = convertToNumber(reader.readLine()).intValue();\n\n        String dsName = reader.readLine();\n        while(! dsName.equals(\"[AMBARI_END]\")) {\n          GangliaMetric metric = new GangliaMetric();\n          List<GangliaMetric.TemporalMetric> listTemporalMetrics =\n              new ArrayList<GangliaMetric.TemporalMetric>();\n\n          metric.setDs_name(dsName);\n          metric.setCluster_name(reader.readLine());\n          metric.setHost_name(reader.readLine());\n          metric.setMetric_name(reader.readLine());\n\n          int time = convertToNumber(reader.readLine()).intValue();\n          int step = convertToNumber(reader.readLine()).intValue();\n\n          String val = reader.readLine();\n          while(! val.equals(\"[AMBARI_DP_END]\")) {\n            GangliaMetric.TemporalMetric tm = new GangliaMetric.TemporalMetric(val, time);\n            if (tm.isValid()) listTemporalMetrics.add(tm);\n            time += step;\n            val = reader.readLine();\n          }\n\n          metric.setDatapointsFromList(listTemporalMetrics);\n\n          ResourceKey key = new ResourceKey(metric.getHost_name(), metric.getCluster_name());\n          Set<Resource> resourceSet = resources.get(key);\n          if (resourceSet != null) {\n            for (Resource resource : resourceSet) {\n              populateResource(resource, metric);\n            }\n          }\n\n          dsName = reader.readLine();\n        }\n        int endTime = convertToNumber(reader.readLine()).intValue();\n\n        if (LOG.isInfoEnabled()) {\n          LOG.info(\"Ganglia resource population time: \" + (endTime - startTime));\n        }\n      } catch (IOException e) {\n        if (LOG.isErrorEnabled()) {\n          LOG.error(\"Caught exception getting Ganglia metrics : spec=\" + spec, e);\n        }\n      } finally {\n        if (reader != null) {\n          try {\n            reader.close();\n          } catch (IOException e) {\n            if (LOG.isWarnEnabled()) {\n              LOG.warn(\"Unable to close http input steam : spec=\" + spec, e);\n            }\n          }\n        }\n      }\n      //todo: filter out resources and return keepers\n      return Collections.emptySet();\n    }","commit_id":"2a149112bb15091c8d5877160f098adf7639d5fc","url":"https://github.com/apache/ambari"},{"original_method":"private RRDRequest(String clusterName, TemporalInfo temporalInfo, boolean containsRegExp) {\n      this.clusterName  = clusterName;\n      this.temporalInfo = temporalInfo;\n      this.containsRegExp = containsRegExp;\n    }","id":8449,"modified_method":"private RRDRequest(String clusterName, TemporalInfo temporalInfo) {\n      this.clusterName  = clusterName;\n      this.temporalInfo = temporalInfo;\n    }","commit_id":"2a149112bb15091c8d5877160f098adf7639d5fc","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Get a map of metric / property info based on the given component name and property id.\n   * Note that the property id may map to multiple metrics if the property id is a category.\n   *\n   * @param componentName  the component name\n   * @param propertyId     the property id; may be a category\n   *\n   * @return a map of metrics\n   */\n  protected Map<String, PropertyInfo> getPropertyInfoMap(String componentName, String propertyId) {\n    Map<String, PropertyInfo> componentMetricMap = componentMetrics.get(componentName);\n    if (componentMetricMap == null) {\n      return Collections.emptyMap();\n    }\n\n    PropertyInfo propertyInfo = componentMetricMap.get(propertyId);\n    if (propertyInfo != null) {\n      return Collections.singletonMap(propertyId, propertyInfo);\n    }\n\n    if (!propertyId.endsWith(\"/\")){\n      propertyId += \"/\";\n    }\n    Map<String, PropertyInfo> propertyInfoMap = new HashMap<String, PropertyInfo>();\n    for (Map.Entry<String, PropertyInfo> entry : componentMetricMap.entrySet()) {\n      if (entry.getKey().startsWith(propertyId)) {\n        propertyInfoMap.put(entry.getKey(), entry.getValue());\n      }\n    }\n    return propertyInfoMap;\n  }","id":8450,"modified_method":"/**\n   * Get a map of metric / property info based on the given component name and property id.\n   * Note that the property id may map to multiple metrics if the property id is a category.\n   *\n   * @param componentName  the component name\n   * @param propertyId     the property id; may be a category\n   *\n   * @return a map of metrics\n   */\n  protected Map<String, PropertyInfo> getPropertyInfoMap(String componentName, String propertyId) {\n    Map<String, PropertyInfo> propertyInfoMap = new HashMap<String, PropertyInfo>();\n\n    getPropertyInfoMap(componentName, propertyId, propertyInfoMap);\n\n    return propertyInfoMap;\n  }","commit_id":"e4f576df19494b40071011438a364e3f6a33730d","url":"https://github.com/apache/ambari"},{"original_method":"public Set<String> checkPropertyIds(Set<String> propertyIds) {\n    if (!this.propertyIds.containsAll(propertyIds)) {\n      Set<String> unsupportedPropertyIds = new HashSet<String>(propertyIds);\n      unsupportedPropertyIds.removeAll(this.combinedIds);\n\n      // If the property id is not in the set of known property ids we may still allow it if\n      // its parent category is a known property. This allows for Map type properties where\n      // we want to treat property as a category and the entries as individual properties.\n      Set<String> categoryProperties = new HashSet<String>();\n      for (String unsupportedPropertyId : unsupportedPropertyIds) {\n        String category = PropertyHelper.getPropertyCategory(unsupportedPropertyId);\n        while (category != null) {\n          if (this.propertyIds.contains(category)) {\n            categoryProperties.add(unsupportedPropertyId);\n          }\n          category = PropertyHelper.getPropertyCategory(category);\n        }\n      }\n      unsupportedPropertyIds.removeAll(categoryProperties);\n\n      return unsupportedPropertyIds;\n    }\n    return Collections.emptySet();\n  }","id":8451,"modified_method":"public Set<String> checkPropertyIds(Set<String> propertyIds) {\n    if (!this.propertyIds.containsAll(propertyIds)) {\n      Set<String> unsupportedPropertyIds = new HashSet<String>(propertyIds);\n      unsupportedPropertyIds.removeAll(this.combinedIds);\n\n      // If the property id is not in the set of known property ids we may still allow it if\n      // its parent category is a known property. This allows for Map type properties where\n      // we want to treat property as a category and the entries as individual properties.\n      Set<String> categoryProperties = new HashSet<String>();\n      for (String unsupportedPropertyId : unsupportedPropertyIds) {\n        if (checkCategory(unsupportedPropertyId) || checkRegExp(unsupportedPropertyId)) {\n          categoryProperties.add(unsupportedPropertyId);\n        }\n      }\n      unsupportedPropertyIds.removeAll(categoryProperties);\n\n      return unsupportedPropertyIds;\n    }\n    return Collections.emptySet();\n  }","commit_id":"e4f576df19494b40071011438a364e3f6a33730d","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Construct a provider.\n   *\n   * @param propertyIds  the properties associated with this provider\n   */\n  public BaseProvider(Set<String> propertyIds) {\n    this.propertyIds = new HashSet<String>(propertyIds);\n    this.categoryIds = PropertyHelper.getCategories(propertyIds);\n    this.combinedIds = new HashSet<String>(propertyIds);\n    this.combinedIds.addAll(this.categoryIds);\n  }","id":8452,"modified_method":"/**\n   * Construct a provider.\n   *\n   * @param propertyIds  the properties associated with this provider\n   */\n  public BaseProvider(Set<String> propertyIds) {\n    this.propertyIds = new HashSet<String>(propertyIds);\n    this.categoryIds = PropertyHelper.getCategories(propertyIds);\n    this.combinedIds = new HashSet<String>(propertyIds);\n    this.combinedIds.addAll(this.categoryIds);\n    this.patterns = new HashMap<String, Pattern>();\n    for (String id : this.combinedIds) {\n      if (id.matches(\".*\\\\$\\\\d+.*\")) {\n        String pattern = id.replaceAll(\"\\\\$\\\\d+\", \"\\\\\\\\S+\");\n        patterns.put(id, Pattern.compile(pattern));\n      }\n    }\n  }","commit_id":"e4f576df19494b40071011438a364e3f6a33730d","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Get the set of property ids required to satisfy the given request.\n   *\n   * @param request              the request\n   * @param predicate            the predicate\n   *\n   * @return the set of property ids needed to satisfy the request\n   */\n  protected Set<String> getRequestPropertyIds(Request request, Predicate predicate) {\n    Set<String> propertyIds  = request.getPropertyIds();\n\n    // if no properties are specified, then return them all\n    if (propertyIds == null || propertyIds.isEmpty()) {\n      return new HashSet<String>(this.propertyIds);\n    }\n\n    propertyIds = new HashSet<String>(propertyIds);\n\n    if (predicate != null) {\n      propertyIds.addAll(PredicateHelper.getPropertyIds(predicate));\n    }\n\n    if (!this.combinedIds.containsAll(propertyIds)) {\n      Set<String> keepers = new HashSet<String>();\n      Set<String> unsupportedPropertyIds = new HashSet<String>(propertyIds);\n      unsupportedPropertyIds.removeAll(this.combinedIds);\n\n      // Add the categories to account for map properties where the entries will not be\n      // in the provider property list ids but the map (category) might be.\n      for (String unsupportedPropertyId : unsupportedPropertyIds) {\n        String category = PropertyHelper.getPropertyCategory(unsupportedPropertyId);\n        while (category != null) {\n          if (this.propertyIds.contains(category)) {\n            keepers.add(unsupportedPropertyId);\n            break;\n          }\n          category = PropertyHelper.getPropertyCategory(category);\n        }\n      }\n      propertyIds.retainAll(this.combinedIds);\n      propertyIds.addAll(keepers);\n    }\n    return propertyIds;\n  }","id":8453,"modified_method":"/**\n   * Get the set of property ids required to satisfy the given request.\n   *\n   * @param request              the request\n   * @param predicate            the predicate\n   *\n   * @return the set of property ids needed to satisfy the request\n   */\n  protected Set<String> getRequestPropertyIds(Request request, Predicate predicate) {\n    Set<String> propertyIds  = request.getPropertyIds();\n\n    // if no properties are specified, then return them all\n    if (propertyIds == null || propertyIds.isEmpty()) {\n      return new HashSet<String>(this.propertyIds);\n    }\n\n    propertyIds = new HashSet<String>(propertyIds);\n\n    if (predicate != null) {\n      propertyIds.addAll(PredicateHelper.getPropertyIds(predicate));\n    }\n\n    if (!this.combinedIds.containsAll(propertyIds)) {\n      Set<String> keepers = new HashSet<String>();\n      Set<String> unsupportedPropertyIds = new HashSet<String>(propertyIds);\n      unsupportedPropertyIds.removeAll(this.combinedIds);\n\n      for (String unsupportedPropertyId : unsupportedPropertyIds) {\n        if (checkCategory(unsupportedPropertyId) || checkRegExp(unsupportedPropertyId)) {\n          keepers.add(unsupportedPropertyId);\n        }\n      }\n      propertyIds.retainAll(this.combinedIds);\n      propertyIds.addAll(keepers);\n    }\n    return propertyIds;\n  }","commit_id":"e4f576df19494b40071011438a364e3f6a33730d","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Get the request objects containing all the information required to\n   * make single requests to the Ganglia rrd script.\n   * Requests are created per cluster name / temporal information but\n   * can span multiple resources and metrics.\n   *\n   * @param resources  the resources being populated\n   * @param request    the request\n   * @param ids        the relevant property ids\n   *\n   * @return a map of maps of rrd requests keyed by cluster name / temporal info\n   */\n  private Map<String, Map<TemporalInfo, RRDRequest>> getRRDRequests(Set<Resource> resources,\n                                                                    Request request,\n                                                                    Set<String> ids) {\n\n    Map<String, Map<TemporalInfo, RRDRequest>> requestMap =\n        new HashMap<String, Map<TemporalInfo, RRDRequest>>();\n\n    for (Resource resource : resources) {\n      String clusterName = (String) resource.getPropertyValue(clusterNamePropertyId);\n      Map<TemporalInfo, RRDRequest> requests = requestMap.get(clusterName);\n      if (requests == null) {\n        requests = new HashMap<TemporalInfo, RRDRequest>();\n        requestMap.put(clusterName, requests);\n      }\n\n      Set<String> gangliaClusterNames = getGangliaClusterNames(resource, clusterName);\n\n      for (String gangliaClusterName : gangliaClusterNames) {\n        ResourceKey key =\n            new ResourceKey(getHostName(resource), gangliaClusterName);\n\n        for (String id : ids) {\n          Map<String, PropertyInfo> propertyInfoMap = getPropertyInfoMap(getComponentName(resource), id);\n\n          for (Map.Entry<String, PropertyInfo> entry : propertyInfoMap.entrySet()) {\n            String propertyId = entry.getKey();\n            PropertyInfo propertyInfo = entry.getValue();\n\n            TemporalInfo temporalInfo = request.getTemporalInfo(id);\n\n            if ((temporalInfo == null && propertyInfo.isPointInTime()) || (temporalInfo != null && propertyInfo.isTemporal())) {\n              RRDRequest rrdRequest = requests.get(temporalInfo);\n              if (rrdRequest == null) {\n                rrdRequest = new RRDRequest(clusterName, temporalInfo);\n                requests.put(temporalInfo, rrdRequest);\n              }\n              rrdRequest.putResource(key, resource);\n              rrdRequest.putPropertyId(propertyInfo.getPropertyId(), propertyId);\n            }\n          }\n        }\n      }\n    }\n    return requestMap;\n  }","id":8454,"modified_method":"/**\n   * Get the request objects containing all the information required to\n   * make single requests to the Ganglia rrd script.\n   * Requests are created per cluster name / temporal information but\n   * can span multiple resources and metrics.\n   *\n   * @param resources  the resources being populated\n   * @param request    the request\n   * @param ids        the relevant property ids\n   *\n   * @return a map of maps of rrd requests keyed by cluster name / temporal info\n   */\n  private Map<String, Map<TemporalInfo, RRDRequest>> getRRDRequests(Set<Resource> resources,\n                                                                    Request request,\n                                                                    Set<String> ids) {\n\n    Map<String, Map<TemporalInfo, RRDRequest>> requestMap =\n        new HashMap<String, Map<TemporalInfo, RRDRequest>>();\n\n    for (Resource resource : resources) {\n      String clusterName = (String) resource.getPropertyValue(clusterNamePropertyId);\n      Map<TemporalInfo, RRDRequest> requests = requestMap.get(clusterName);\n      if (requests == null) {\n        requests = new HashMap<TemporalInfo, RRDRequest>();\n        requestMap.put(clusterName, requests);\n      }\n\n      Set<String> gangliaClusterNames = getGangliaClusterNames(resource, clusterName);\n\n      for (String gangliaClusterName : gangliaClusterNames) {\n        ResourceKey key =\n            new ResourceKey(getHostName(resource), gangliaClusterName);\n\n        for (String id : ids) {\n          Map<String, PropertyInfo> propertyInfoMap = new HashMap<String, PropertyInfo>();\n\n          boolean containsRegExp = getPropertyInfoMap(getComponentName(resource), id, propertyInfoMap);\n\n          for (Map.Entry<String, PropertyInfo> entry : propertyInfoMap.entrySet()) {\n            String propertyId = entry.getKey();\n            PropertyInfo propertyInfo = entry.getValue();\n\n            TemporalInfo temporalInfo = request.getTemporalInfo(id);\n\n            if ((temporalInfo == null && propertyInfo.isPointInTime()) || (temporalInfo != null && propertyInfo.isTemporal())) {\n              RRDRequest rrdRequest = requests.get(temporalInfo);\n              if (rrdRequest == null) {\n                rrdRequest = new RRDRequest(clusterName, temporalInfo, containsRegExp);\n                requests.put(temporalInfo, rrdRequest);\n              }\n              rrdRequest.putResource(key, resource);\n              rrdRequest.putPropertyId(propertyInfo.getPropertyId(), propertyId);\n            }\n          }\n        }\n      }\n    }\n    return requestMap;\n  }","commit_id":"e4f576df19494b40071011438a364e3f6a33730d","url":"https://github.com/apache/ambari"},{"original_method":"/**\n     * Populate the given resource with the given Ganglia metric.\n     *\n     * @param resource       the resource\n     * @param gangliaMetric  the Ganglia metrics\n     */\n    private void populateResource(Resource resource, GangliaMetric gangliaMetric) {\n      Set<String> propertyIdSet = metrics.get(gangliaMetric.getMetric_name());\n      if (propertyIdSet != null) {\n        Map<String, PropertyInfo> metricsMap = getComponentMetrics().get(getComponentName(resource));\n        if (metricsMap != null) {\n          for (String propertyId : propertyIdSet) {\n            if (propertyId != null) {\n              if (metricsMap.containsKey(propertyId)){\n                resource.setProperty(propertyId, getValue(gangliaMetric, temporalInfo != null));\n              }\n            }\n          }\n        }\n      }\n    }","id":8455,"modified_method":"/**\n     * Populate the given resource with the given Ganglia metric.\n     *\n     * @param resource       the resource\n     * @param gangliaMetric  the Ganglia metrics\n     */\n    private void populateResource(Resource resource, GangliaMetric gangliaMetric) {\n      String metric_name = gangliaMetric.getMetric_name();\n\n      Set<String> propertyIdSet = metrics.get(metric_name);\n      List<String> parameterList  = new LinkedList<String>();\n\n      if (propertyIdSet == null) {\n        for (Map.Entry<String, Set<String>> entry : metrics.entrySet()) {\n\n          String key = entry.getKey();\n\n          Pattern pattern = Pattern.compile(key);\n          Matcher matcher = pattern.matcher(metric_name);\n\n          if (matcher.matches()) {\n            propertyIdSet = entry.getValue();\n            // get parameters\n            for (int i = 0; i < matcher.groupCount(); ++i) {\n              parameterList.add(matcher.group(i + 1));\n            }\n            break;\n          }\n        }\n      }\n      if (propertyIdSet != null) {\n        Map<String, PropertyInfo> metricsMap = getComponentMetrics().get(getComponentName(resource));\n        if (metricsMap != null) {\n          for (String propertyId : propertyIdSet) {\n            if (propertyId != null) {\n              if (metricsMap.containsKey(propertyId)){\n                if (propertyId.matches(\".*\\\\$\\\\d+.*\")) {\n                  int i = 1;\n                  for (String param : parameterList) {\n                    propertyId = propertyId.replace(\"$\" + i, param);\n                    ++i;\n                  }\n                }\n                resource.setProperty(propertyId, getValue(gangliaMetric, temporalInfo != null));\n              }\n            }\n          }\n        }\n      }\n    }","commit_id":"e4f576df19494b40071011438a364e3f6a33730d","url":"https://github.com/apache/ambari"},{"original_method":"private RRDRequest(String clusterName, TemporalInfo temporalInfo) {\n      this.clusterName  = clusterName;\n      this.temporalInfo = temporalInfo;\n    }","id":8456,"modified_method":"private RRDRequest(String clusterName, TemporalInfo temporalInfo, boolean containsRegExp) {\n      this.clusterName  = clusterName;\n      this.temporalInfo = temporalInfo;\n      this.containsRegExp = containsRegExp;\n    }","commit_id":"e4f576df19494b40071011438a364e3f6a33730d","url":"https://github.com/apache/ambari"},{"original_method":"/**\n     * Populate the associated resources by making the rrd request.\n     *\n     * @return a collection of populated resources\n     *\n     * @throws SystemException if unable to populate the resources\n     */\n    public Collection<Resource> populateResources() throws SystemException {\n\n      String spec = getSpec(clusterName, clusterSet, hostSet, metrics.keySet(), temporalInfo);\n      BufferedReader reader = null;\n      try {\n        reader = new BufferedReader(new InputStreamReader(\n            getStreamProvider().readFrom(spec)));\n\n        int startTime = convertToNumber(reader.readLine()).intValue();\n\n        String dsName = reader.readLine();\n        while(! dsName.equals(\"[AMBARI_END]\")) {\n          GangliaMetric metric = new GangliaMetric();\n          List<GangliaMetric.TemporalMetric> listTemporalMetrics =\n              new ArrayList<GangliaMetric.TemporalMetric>();\n\n          metric.setDs_name(dsName);\n          metric.setCluster_name(reader.readLine());\n          metric.setHost_name(reader.readLine());\n          metric.setMetric_name(reader.readLine());\n\n          int time = convertToNumber(reader.readLine()).intValue();\n          int step = convertToNumber(reader.readLine()).intValue();\n\n          String val = reader.readLine();\n          while(! val.equals(\"[AMBARI_DP_END]\")) {\n            GangliaMetric.TemporalMetric tm = new GangliaMetric.TemporalMetric(val, time);\n            if (tm.isValid()) listTemporalMetrics.add(tm);\n            time += step;\n            val = reader.readLine();\n          }\n\n          metric.setDatapointsFromList(listTemporalMetrics);\n\n          ResourceKey key = new ResourceKey(metric.getHost_name(), metric.getCluster_name());\n          Set<Resource> resourceSet = resources.get(key);\n          if (resourceSet != null) {\n            for (Resource resource : resourceSet) {\n              populateResource(resource, metric);\n            }\n          }\n\n          dsName = reader.readLine();\n        }\n        int endTime = convertToNumber(reader.readLine()).intValue();\n\n        if (LOG.isInfoEnabled()) {\n          LOG.info(\"Ganglia resource population time: \" + (endTime - startTime));\n        }\n      } catch (IOException e) {\n        if (LOG.isErrorEnabled()) {\n          LOG.error(\"Caught exception getting Ganglia metrics : spec=\" + spec, e);\n        }\n      } finally {\n        if (reader != null) {\n          try {\n            reader.close();\n          } catch (IOException e) {\n            if (LOG.isWarnEnabled()) {\n              LOG.warn(\"Unable to close http input steam : spec=\" + spec, e);\n            }\n          }\n        }\n      }\n      //todo: filter out resources and return keepers\n      return Collections.emptySet();\n    }","id":8457,"modified_method":"/**\n     * Populate the associated resources by making the rrd request.\n     *\n     * @return a collection of populated resources\n     *\n     * @throws SystemException if unable to populate the resources\n     */\n    public Collection<Resource> populateResources() throws SystemException {\n\n      String spec = getSpec(clusterName, clusterSet, hostSet,\n          containsRegExp ? Collections.<String>emptySet() : metrics.keySet(), temporalInfo);\n      BufferedReader reader = null;\n      try {\n        reader = new BufferedReader(new InputStreamReader(\n            getStreamProvider().readFrom(spec)));\n\n        int startTime = convertToNumber(reader.readLine()).intValue();\n\n        String dsName = reader.readLine();\n        while(! dsName.equals(\"[AMBARI_END]\")) {\n          GangliaMetric metric = new GangliaMetric();\n          List<GangliaMetric.TemporalMetric> listTemporalMetrics =\n              new ArrayList<GangliaMetric.TemporalMetric>();\n\n          metric.setDs_name(dsName);\n          metric.setCluster_name(reader.readLine());\n          metric.setHost_name(reader.readLine());\n          metric.setMetric_name(reader.readLine());\n\n          int time = convertToNumber(reader.readLine()).intValue();\n          int step = convertToNumber(reader.readLine()).intValue();\n\n          String val = reader.readLine();\n          while(! val.equals(\"[AMBARI_DP_END]\")) {\n            GangliaMetric.TemporalMetric tm = new GangliaMetric.TemporalMetric(val, time);\n            if (tm.isValid()) listTemporalMetrics.add(tm);\n            time += step;\n            val = reader.readLine();\n          }\n\n          metric.setDatapointsFromList(listTemporalMetrics);\n\n          ResourceKey key = new ResourceKey(metric.getHost_name(), metric.getCluster_name());\n          Set<Resource> resourceSet = resources.get(key);\n          if (resourceSet != null) {\n            for (Resource resource : resourceSet) {\n              populateResource(resource, metric);\n            }\n          }\n\n          dsName = reader.readLine();\n        }\n        int endTime = convertToNumber(reader.readLine()).intValue();\n\n        if (LOG.isInfoEnabled()) {\n          LOG.info(\"Ganglia resource population time: \" + (endTime - startTime));\n        }\n      } catch (IOException e) {\n        if (LOG.isErrorEnabled()) {\n          LOG.error(\"Caught exception getting Ganglia metrics : spec=\" + spec, e);\n        }\n      } finally {\n        if (reader != null) {\n          try {\n            reader.close();\n          } catch (IOException e) {\n            if (LOG.isWarnEnabled()) {\n              LOG.warn(\"Unable to close http input steam : spec=\" + spec, e);\n            }\n          }\n        }\n      }\n      //todo: filter out resources and return keepers\n      return Collections.emptySet();\n    }","commit_id":"e4f576df19494b40071011438a364e3f6a33730d","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Get a map of metric / property info based on the given component name and property id.\n   * Note that the property id may map to multiple metrics if the property id is a category.\n   *\n   * @param componentName  the component name\n   * @param propertyId     the property id; may be a category\n   *\n   * @return a map of metrics\n   */\n  protected Map<String, PropertyInfo> getPropertyInfoMap(String componentName, String propertyId) {\n    Map<String, PropertyInfo> componentMetricMap = componentMetrics.get(componentName);\n    if (componentMetricMap == null) {\n      return Collections.emptyMap();\n    }\n\n    PropertyInfo propertyInfo = componentMetricMap.get(propertyId);\n    if (propertyInfo != null) {\n      return Collections.singletonMap(propertyId, propertyInfo);\n    }\n\n    if (!propertyId.endsWith(\"/\")){\n      propertyId += \"/\";\n    }\n    Map<String, PropertyInfo> propertyInfoMap = new HashMap<String, PropertyInfo>();\n    for (Map.Entry<String, PropertyInfo> entry : componentMetricMap.entrySet()) {\n      if (entry.getKey().startsWith(propertyId)) {\n        propertyInfoMap.put(entry.getKey(), entry.getValue());\n      }\n    }\n    return propertyInfoMap;\n  }","id":8458,"modified_method":"/**\n   * Get a map of metric / property info based on the given component name and property id.\n   * Note that the property id may map to multiple metrics if the property id is a category.\n   *\n   * @param componentName  the component name\n   * @param propertyId     the property id; may be a category\n   *\n   * @return a map of metrics\n   */\n  protected Map<String, PropertyInfo> getPropertyInfoMap(String componentName, String propertyId) {\n    Map<String, PropertyInfo> propertyInfoMap = new HashMap<String, PropertyInfo>();\n\n    getPropertyInfoMap(componentName, propertyId, propertyInfoMap);\n\n    return propertyInfoMap;\n  }","commit_id":"bd1aa86a143bd8c2e9b5bf248381cf0ff2659688","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Get the set of property ids required to satisfy the given request.\n   *\n   * @param request              the request\n   * @param predicate            the predicate\n   *\n   * @return the set of property ids needed to satisfy the request\n   */\n  protected Set<String> getRequestPropertyIds(Request request, Predicate predicate) {\n    Set<String> propertyIds  = request.getPropertyIds();\n\n    // if no properties are specified, then return them all\n    if (propertyIds == null || propertyIds.isEmpty()) {\n      return new HashSet<String>(this.propertyIds);\n    }\n\n    propertyIds = new HashSet<String>(propertyIds);\n\n    if (predicate != null) {\n      propertyIds.addAll(PredicateHelper.getPropertyIds(predicate));\n    }\n\n    if (!this.combinedIds.containsAll(propertyIds)) {\n      Set<String> keepers = new HashSet<String>();\n      Set<String> unsupportedPropertyIds = new HashSet<String>(propertyIds);\n      unsupportedPropertyIds.removeAll(this.combinedIds);\n\n      // Add the categories to account for map properties where the entries will not be\n      // in the provider property list ids but the map (category) might be.\n      for (String unsupportedPropertyId : unsupportedPropertyIds) {\n        String category = PropertyHelper.getPropertyCategory(unsupportedPropertyId);\n        while (category != null) {\n          if (this.propertyIds.contains(category)) {\n            keepers.add(unsupportedPropertyId);\n            break;\n          }\n          category = PropertyHelper.getPropertyCategory(category);\n        }\n      }\n      propertyIds.retainAll(this.combinedIds);\n      propertyIds.addAll(keepers);\n    }\n    return propertyIds;\n  }","id":8459,"modified_method":"/**\n   * Get the set of property ids required to satisfy the given request.\n   *\n   * @param request              the request\n   * @param predicate            the predicate\n   *\n   * @return the set of property ids needed to satisfy the request\n   */\n  protected Set<String> getRequestPropertyIds(Request request, Predicate predicate) {\n    Set<String> propertyIds  = request.getPropertyIds();\n\n    // if no properties are specified, then return them all\n    if (propertyIds == null || propertyIds.isEmpty()) {\n      return new HashSet<String>(this.propertyIds);\n    }\n\n    propertyIds = new HashSet<String>(propertyIds);\n\n    if (predicate != null) {\n      propertyIds.addAll(PredicateHelper.getPropertyIds(predicate));\n    }\n\n    if (!this.combinedIds.containsAll(propertyIds)) {\n      Set<String> keepers = new HashSet<String>();\n      Set<String> unsupportedPropertyIds = new HashSet<String>(propertyIds);\n      unsupportedPropertyIds.removeAll(this.combinedIds);\n\n      for (String unsupportedPropertyId : unsupportedPropertyIds) {\n        if (checkCategory(unsupportedPropertyId) || checkRegExp(unsupportedPropertyId)) {\n          keepers.add(unsupportedPropertyId);\n        }\n      }\n      propertyIds.retainAll(this.combinedIds);\n      propertyIds.addAll(keepers);\n    }\n    return propertyIds;\n  }","commit_id":"bd1aa86a143bd8c2e9b5bf248381cf0ff2659688","url":"https://github.com/apache/ambari"},{"original_method":"public Set<String> checkPropertyIds(Set<String> propertyIds) {\n    if (!this.propertyIds.containsAll(propertyIds)) {\n      Set<String> unsupportedPropertyIds = new HashSet<String>(propertyIds);\n      unsupportedPropertyIds.removeAll(this.combinedIds);\n\n      // If the property id is not in the set of known property ids we may still allow it if\n      // its parent category is a known property. This allows for Map type properties where\n      // we want to treat property as a category and the entries as individual properties.\n      Set<String> categoryProperties = new HashSet<String>();\n      for (String unsupportedPropertyId : unsupportedPropertyIds) {\n        String category = PropertyHelper.getPropertyCategory(unsupportedPropertyId);\n        while (category != null) {\n          if (this.propertyIds.contains(category)) {\n            categoryProperties.add(unsupportedPropertyId);\n          }\n          category = PropertyHelper.getPropertyCategory(category);\n        }\n      }\n      unsupportedPropertyIds.removeAll(categoryProperties);\n\n      return unsupportedPropertyIds;\n    }\n    return Collections.emptySet();\n  }","id":8460,"modified_method":"public Set<String> checkPropertyIds(Set<String> propertyIds) {\n    if (!this.propertyIds.containsAll(propertyIds)) {\n      Set<String> unsupportedPropertyIds = new HashSet<String>(propertyIds);\n      unsupportedPropertyIds.removeAll(this.combinedIds);\n\n      // If the property id is not in the set of known property ids we may still allow it if\n      // its parent category is a known property. This allows for Map type properties where\n      // we want to treat property as a category and the entries as individual properties.\n      Set<String> categoryProperties = new HashSet<String>();\n      for (String unsupportedPropertyId : unsupportedPropertyIds) {\n        if (checkCategory(unsupportedPropertyId) || checkRegExp(unsupportedPropertyId)) {\n          categoryProperties.add(unsupportedPropertyId);\n        }\n      }\n      unsupportedPropertyIds.removeAll(categoryProperties);\n\n      return unsupportedPropertyIds;\n    }\n    return Collections.emptySet();\n  }","commit_id":"bd1aa86a143bd8c2e9b5bf248381cf0ff2659688","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Construct a provider.\n   *\n   * @param propertyIds  the properties associated with this provider\n   */\n  public BaseProvider(Set<String> propertyIds) {\n    this.propertyIds = new HashSet<String>(propertyIds);\n    this.categoryIds = PropertyHelper.getCategories(propertyIds);\n    this.combinedIds = new HashSet<String>(propertyIds);\n    this.combinedIds.addAll(this.categoryIds);\n  }","id":8461,"modified_method":"/**\n   * Construct a provider.\n   *\n   * @param propertyIds  the properties associated with this provider\n   */\n  public BaseProvider(Set<String> propertyIds) {\n    this.propertyIds = new HashSet<String>(propertyIds);\n    this.categoryIds = PropertyHelper.getCategories(propertyIds);\n    this.combinedIds = new HashSet<String>(propertyIds);\n    this.combinedIds.addAll(this.categoryIds);\n    this.patterns = new HashMap<String, Pattern>();\n    for (String id : this.combinedIds) {\n      if (id.matches(\".*\\\\$\\\\d+.*\")) {\n        String pattern = id.replaceAll(\"\\\\$\\\\d+\", \"\\\\\\\\S+\");\n        patterns.put(id, Pattern.compile(pattern));\n      }\n    }\n  }","commit_id":"bd1aa86a143bd8c2e9b5bf248381cf0ff2659688","url":"https://github.com/apache/ambari"},{"original_method":"/**\n     * Populate the associated resources by making the rrd request.\n     *\n     * @return a collection of populated resources\n     *\n     * @throws SystemException if unable to populate the resources\n     */\n    public Collection<Resource> populateResources() throws SystemException {\n\n      String spec = getSpec(clusterName, clusterSet, hostSet, metrics.keySet(), temporalInfo);\n      BufferedReader reader = null;\n      try {\n        reader = new BufferedReader(new InputStreamReader(\n            getStreamProvider().readFrom(spec)));\n\n        int startTime = convertToNumber(reader.readLine()).intValue();\n\n        String dsName = reader.readLine();\n        while(! dsName.equals(\"[AMBARI_END]\")) {\n          GangliaMetric metric = new GangliaMetric();\n          List<GangliaMetric.TemporalMetric> listTemporalMetrics =\n              new ArrayList<GangliaMetric.TemporalMetric>();\n\n          metric.setDs_name(dsName);\n          metric.setCluster_name(reader.readLine());\n          metric.setHost_name(reader.readLine());\n          metric.setMetric_name(reader.readLine());\n\n          int time = convertToNumber(reader.readLine()).intValue();\n          int step = convertToNumber(reader.readLine()).intValue();\n\n          String val = reader.readLine();\n          while(! val.equals(\"[AMBARI_DP_END]\")) {\n            GangliaMetric.TemporalMetric tm = new GangliaMetric.TemporalMetric(val, time);\n            if (tm.isValid()) listTemporalMetrics.add(tm);\n            time += step;\n            val = reader.readLine();\n          }\n\n          metric.setDatapointsFromList(listTemporalMetrics);\n\n          ResourceKey key = new ResourceKey(metric.getHost_name(), metric.getCluster_name());\n          Set<Resource> resourceSet = resources.get(key);\n          if (resourceSet != null) {\n            for (Resource resource : resourceSet) {\n              populateResource(resource, metric);\n            }\n          }\n\n          dsName = reader.readLine();\n        }\n        int endTime = convertToNumber(reader.readLine()).intValue();\n\n        if (LOG.isInfoEnabled()) {\n          LOG.info(\"Ganglia resource population time: \" + (endTime - startTime));\n        }\n      } catch (IOException e) {\n        if (LOG.isErrorEnabled()) {\n          LOG.error(\"Caught exception getting Ganglia metrics : spec=\" + spec, e);\n        }\n      } finally {\n        if (reader != null) {\n          try {\n            reader.close();\n          } catch (IOException e) {\n            if (LOG.isWarnEnabled()) {\n              LOG.warn(\"Unable to close http input steam : spec=\" + spec, e);\n            }\n          }\n        }\n      }\n      //todo: filter out resources and return keepers\n      return Collections.emptySet();\n    }","id":8462,"modified_method":"/**\n     * Populate the associated resources by making the rrd request.\n     *\n     * @return a collection of populated resources\n     *\n     * @throws SystemException if unable to populate the resources\n     */\n    public Collection<Resource> populateResources() throws SystemException {\n\n      String spec = getSpec(clusterName, clusterSet, hostSet,\n          requestAll ? Collections.<String>emptySet() : metrics.keySet(), temporalInfo);\n      BufferedReader reader = null;\n      try {\n        reader = new BufferedReader(new InputStreamReader(\n            getStreamProvider().readFrom(spec)));\n\n        int startTime = convertToNumber(reader.readLine()).intValue();\n\n        String dsName = reader.readLine();\n        while(! dsName.equals(\"[AMBARI_END]\")) {\n          GangliaMetric metric = new GangliaMetric();\n          List<GangliaMetric.TemporalMetric> listTemporalMetrics =\n              new ArrayList<GangliaMetric.TemporalMetric>();\n\n          metric.setDs_name(dsName);\n          metric.setCluster_name(reader.readLine());\n          metric.setHost_name(reader.readLine());\n          metric.setMetric_name(reader.readLine());\n\n          int time = convertToNumber(reader.readLine()).intValue();\n          int step = convertToNumber(reader.readLine()).intValue();\n\n          String val = reader.readLine();\n          while(! val.equals(\"[AMBARI_DP_END]\")) {\n            GangliaMetric.TemporalMetric tm = new GangliaMetric.TemporalMetric(val, time);\n            if (tm.isValid()) listTemporalMetrics.add(tm);\n            time += step;\n            val = reader.readLine();\n          }\n\n          metric.setDatapointsFromList(listTemporalMetrics);\n\n          ResourceKey key = new ResourceKey(metric.getHost_name(), metric.getCluster_name());\n          Set<Resource> resourceSet = resources.get(key);\n          if (resourceSet != null) {\n            for (Resource resource : resourceSet) {\n              populateResource(resource, metric);\n            }\n          }\n\n          dsName = reader.readLine();\n        }\n        int endTime = convertToNumber(reader.readLine()).intValue();\n\n        if (LOG.isInfoEnabled()) {\n          LOG.info(\"Ganglia resource population time: \" + (endTime - startTime));\n        }\n      } catch (IOException e) {\n        if (LOG.isErrorEnabled()) {\n          LOG.error(\"Caught exception getting Ganglia metrics : spec=\" + spec, e);\n        }\n      } finally {\n        if (reader != null) {\n          try {\n            reader.close();\n          } catch (IOException e) {\n            if (LOG.isWarnEnabled()) {\n              LOG.warn(\"Unable to close http input steam : spec=\" + spec, e);\n            }\n          }\n        }\n      }\n      //todo: filter out resources and return keepers\n      return Collections.emptySet();\n    }","commit_id":"bd1aa86a143bd8c2e9b5bf248381cf0ff2659688","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Get the request objects containing all the information required to\n   * make single requests to the Ganglia rrd script.\n   * Requests are created per cluster name / temporal information but\n   * can span multiple resources and metrics.\n   *\n   * @param resources  the resources being populated\n   * @param request    the request\n   * @param ids        the relevant property ids\n   *\n   * @return a map of maps of rrd requests keyed by cluster name / temporal info\n   */\n  private Map<String, Map<TemporalInfo, RRDRequest>> getRRDRequests(Set<Resource> resources,\n                                                                    Request request,\n                                                                    Set<String> ids) {\n\n    Map<String, Map<TemporalInfo, RRDRequest>> requestMap =\n        new HashMap<String, Map<TemporalInfo, RRDRequest>>();\n\n    for (Resource resource : resources) {\n      String clusterName = (String) resource.getPropertyValue(clusterNamePropertyId);\n      Map<TemporalInfo, RRDRequest> requests = requestMap.get(clusterName);\n      if (requests == null) {\n        requests = new HashMap<TemporalInfo, RRDRequest>();\n        requestMap.put(clusterName, requests);\n      }\n\n      Set<String> gangliaClusterNames = getGangliaClusterNames(resource, clusterName);\n\n      for (String gangliaClusterName : gangliaClusterNames) {\n        ResourceKey key =\n            new ResourceKey(getHostName(resource), gangliaClusterName);\n\n        for (String id : ids) {\n          Map<String, PropertyInfo> propertyInfoMap = getPropertyInfoMap(getComponentName(resource), id);\n\n          for (Map.Entry<String, PropertyInfo> entry : propertyInfoMap.entrySet()) {\n            String propertyId = entry.getKey();\n            PropertyInfo propertyInfo = entry.getValue();\n\n            TemporalInfo temporalInfo = request.getTemporalInfo(id);\n\n            if ((temporalInfo == null && propertyInfo.isPointInTime()) || (temporalInfo != null && propertyInfo.isTemporal())) {\n              RRDRequest rrdRequest = requests.get(temporalInfo);\n              if (rrdRequest == null) {\n                rrdRequest = new RRDRequest(clusterName, temporalInfo);\n                requests.put(temporalInfo, rrdRequest);\n              }\n              rrdRequest.putResource(key, resource);\n              rrdRequest.putPropertyId(propertyInfo.getPropertyId(), propertyId);\n            }\n          }\n        }\n      }\n    }\n    return requestMap;\n  }","id":8463,"modified_method":"/**\n   * Get the request objects containing all the information required to\n   * make single requests to the Ganglia rrd script.\n   * Requests are created per cluster name / temporal information but\n   * can span multiple resources and metrics.\n   *\n   * @param resources  the resources being populated\n   * @param request    the request\n   * @param ids        the relevant property ids\n   *\n   * @return a map of maps of rrd requests keyed by cluster name / temporal info\n   */\n  private Map<String, Map<TemporalInfo, RRDRequest>> getRRDRequests(Set<Resource> resources,\n                                                                    Request request,\n                                                                    Set<String> ids) {\n\n    Map<String, Map<TemporalInfo, RRDRequest>> requestMap =\n        new HashMap<String, Map<TemporalInfo, RRDRequest>>();\n\n    for (Resource resource : resources) {\n      String clusterName = (String) resource.getPropertyValue(clusterNamePropertyId);\n      Map<TemporalInfo, RRDRequest> requests = requestMap.get(clusterName);\n      if (requests == null) {\n        requests = new HashMap<TemporalInfo, RRDRequest>();\n        requestMap.put(clusterName, requests);\n      }\n\n      Set<String> gangliaClusterNames = getGangliaClusterNames(resource, clusterName);\n\n      for (String gangliaClusterName : gangliaClusterNames) {\n        ResourceKey key =\n            new ResourceKey(getHostName(resource), gangliaClusterName);\n\n        for (String id : ids) {\n          Map<String, PropertyInfo> propertyInfoMap = new HashMap<String, PropertyInfo>();\n\n          boolean requestAll = getPropertyInfoMap(getComponentName(resource), id, propertyInfoMap);\n\n          for (Map.Entry<String, PropertyInfo> entry : propertyInfoMap.entrySet()) {\n            String propertyId = entry.getKey();\n            PropertyInfo propertyInfo = entry.getValue();\n\n            TemporalInfo temporalInfo = request.getTemporalInfo(id);\n\n            if ((temporalInfo == null && propertyInfo.isPointInTime()) || (temporalInfo != null && propertyInfo.isTemporal())) {\n              RRDRequest rrdRequest = requests.get(temporalInfo);\n              if (rrdRequest == null) {\n                rrdRequest = new RRDRequest(clusterName, temporalInfo);\n                requests.put(temporalInfo, rrdRequest);\n              }\n              rrdRequest.putResource(key, resource);\n              rrdRequest.putPropertyId(propertyInfo.getPropertyId(), propertyId);\n              rrdRequest.setRequestAllMetrics(requestAll);\n            }\n          }\n        }\n      }\n    }\n    return requestMap;\n  }","commit_id":"bd1aa86a143bd8c2e9b5bf248381cf0ff2659688","url":"https://github.com/apache/ambari"},{"original_method":"/**\n     * Populate the given resource with the given Ganglia metric.\n     *\n     * @param resource       the resource\n     * @param gangliaMetric  the Ganglia metrics\n     */\n    private void populateResource(Resource resource, GangliaMetric gangliaMetric) {\n      Set<String> propertyIdSet = metrics.get(gangliaMetric.getMetric_name());\n      if (propertyIdSet != null) {\n        Map<String, PropertyInfo> metricsMap = getComponentMetrics().get(getComponentName(resource));\n        if (metricsMap != null) {\n          for (String propertyId : propertyIdSet) {\n            if (propertyId != null) {\n              if (metricsMap.containsKey(propertyId)){\n                resource.setProperty(propertyId, getValue(gangliaMetric, temporalInfo != null));\n              }\n            }\n          }\n        }\n      }\n    }","id":8464,"modified_method":"/**\n     * Populate the given resource with the given Ganglia metric.\n     *\n     * @param resource       the resource\n     * @param gangliaMetric  the Ganglia metrics\n     */\n    private void populateResource(Resource resource, GangliaMetric gangliaMetric) {\n      String metric_name = gangliaMetric.getMetric_name();\n\n      Set<String> propertyIdSet = metrics.get(metric_name);\n      List<String> parameterList  = new LinkedList<String>();\n\n      if (propertyIdSet == null) {\n        for (Map.Entry<String, Set<String>> entry : metrics.entrySet()) {\n\n          String key = entry.getKey();\n\n          Pattern pattern = Pattern.compile(key);\n          Matcher matcher = pattern.matcher(metric_name);\n\n          if (matcher.matches()) {\n            propertyIdSet = entry.getValue();\n            // get parameters\n            for (int i = 0; i < matcher.groupCount(); ++i) {\n              parameterList.add(matcher.group(i + 1));\n            }\n            break;\n          }\n        }\n      }\n      if (propertyIdSet != null) {\n        Map<String, PropertyInfo> metricsMap = getComponentMetrics().get(getComponentName(resource));\n        if (metricsMap != null) {\n          for (String propertyId : propertyIdSet) {\n            if (propertyId != null) {\n              if (metricsMap.containsKey(propertyId)){\n                if (propertyId.matches(\".*\\\\$\\\\d+.*\")) {\n                  int i = 1;\n                  for (String param : parameterList) {\n                    propertyId = propertyId.replace(\"$\" + i, param);\n                    ++i;\n                  }\n                }\n                resource.setProperty(propertyId, getValue(gangliaMetric, temporalInfo != null));\n              }\n            }\n          }\n        }\n      }\n    }","commit_id":"bd1aa86a143bd8c2e9b5bf248381cf0ff2659688","url":"https://github.com/apache/ambari"},{"original_method":"public static void initialize() {\n    // Installs\n    addDependency(Role.NAGIOS_SERVER, RoleCommand.INSTALL, Role.HIVE_CLIENT,\n      RoleCommand.INSTALL);\n    addDependency(Role.NAGIOS_SERVER, RoleCommand.INSTALL, Role.HCAT,\n      RoleCommand.INSTALL);\n    addDependency(Role.NAGIOS_SERVER, RoleCommand.INSTALL, Role.MAPREDUCE_CLIENT,\n      RoleCommand.INSTALL);\n    addDependency(Role.NAGIOS_SERVER, RoleCommand.INSTALL, Role.OOZIE_CLIENT,\n      RoleCommand.INSTALL);\n\n    // Starts\n    addDependency(Role.SECONDARY_NAMENODE, RoleCommand.START, Role.NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.RESOURCEMANAGER, RoleCommand.START, Role.NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.RESOURCEMANAGER, RoleCommand.START, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.NODEMANAGER, RoleCommand.START, Role.NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.NODEMANAGER, RoleCommand.START, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.HISTORYSERVER, RoleCommand.START, Role.NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.HISTORYSERVER, RoleCommand.START, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.HBASE_MASTER, RoleCommand.START, Role.ZOOKEEPER_SERVER,\n        RoleCommand.START);\n    addDependency(Role.HBASE_MASTER, RoleCommand.START, Role.NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.HBASE_MASTER, RoleCommand.START, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.HBASE_REGIONSERVER, RoleCommand.START,\n        Role.HBASE_MASTER, RoleCommand.START);\n    addDependency(Role.JOBTRACKER, RoleCommand.START, Role.NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.JOBTRACKER, RoleCommand.START, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.TASKTRACKER, RoleCommand.START, Role.NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.TASKTRACKER, RoleCommand.START, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.OOZIE_SERVER, RoleCommand.START, Role.JOBTRACKER,\n        RoleCommand.START);\n    addDependency(Role.OOZIE_SERVER, RoleCommand.START, Role.TASKTRACKER,\n        RoleCommand.START);\n    addDependency(Role.HIVE_SERVER, RoleCommand.START, Role.TASKTRACKER,\n        RoleCommand.START);\n    addDependency(Role.HIVE_SERVER, RoleCommand.START, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.WEBHCAT_SERVER, RoleCommand.START, Role.TASKTRACKER,\n        RoleCommand.START);\n    addDependency(Role.WEBHCAT_SERVER, RoleCommand.START, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.WEBHCAT_SERVER, RoleCommand.START, Role.HIVE_SERVER,\n        RoleCommand.START);\n    addDependency(Role.HIVE_METASTORE, RoleCommand.START, Role.MYSQL_SERVER,\n        RoleCommand.START);\n    addDependency(Role.HIVE_SERVER, RoleCommand.START, Role.MYSQL_SERVER,\n        RoleCommand.START);\n    addDependency(Role.HUE_SERVER, RoleCommand.START, Role.HIVE_SERVER,\n      RoleCommand.START);\n    addDependency(Role.HUE_SERVER, RoleCommand.START, Role.HCAT,\n      RoleCommand.START);\n    addDependency(Role.HUE_SERVER, RoleCommand.START, Role.OOZIE_SERVER,\n      RoleCommand.START);\n\n    // Service checks\n    addDependency(Role.HDFS_SERVICE_CHECK, RoleCommand.EXECUTE, Role.NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.HDFS_SERVICE_CHECK, RoleCommand.EXECUTE, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.HDFS_SERVICE_CHECK, RoleCommand.EXECUTE, Role.SECONDARY_NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.MAPREDUCE_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.JOBTRACKER, RoleCommand.START);\n    addDependency(Role.MAPREDUCE_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.TASKTRACKER, RoleCommand.START);\n    addDependency(Role.RESOURCEMANAGER_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.RESOURCEMANAGER, RoleCommand.START);\n    addDependency(Role.OOZIE_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.OOZIE_SERVER, RoleCommand.START);\n    addDependency(Role.WEBHCAT_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.WEBHCAT_SERVER, RoleCommand.START);\n    addDependency(Role.HBASE_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.HBASE_MASTER, RoleCommand.START);\n    addDependency(Role.HBASE_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.HBASE_REGIONSERVER, RoleCommand.START);\n    addDependency(Role.HIVE_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.HIVE_SERVER, RoleCommand.START);\n    addDependency(Role.HIVE_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.HIVE_METASTORE, RoleCommand.START);\n    addDependency(Role.HCAT_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.HIVE_SERVER, RoleCommand.START);\n    addDependency(Role.PIG_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.JOBTRACKER, RoleCommand.START);\n    addDependency(Role.PIG_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.TASKTRACKER, RoleCommand.START);\n    addDependency(Role.PIG_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.RESOURCEMANAGER, RoleCommand.START);\n    addDependency(Role.PIG_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.NODEMANAGER, RoleCommand.START);\n    addDependency(Role.SQOOP_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.JOBTRACKER, RoleCommand.START);\n    addDependency(Role.SQOOP_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.TASKTRACKER, RoleCommand.START);\n    addDependency(Role.ZOOKEEPER_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.ZOOKEEPER_SERVER, RoleCommand.START);\n    addDependency(Role.ZOOKEEPER_QUORUM_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.ZOOKEEPER_SERVER, RoleCommand.START);\n    \n    addDependency(Role.ZOOKEEPER_SERVER, RoleCommand.STOP,\n        Role.HBASE_MASTER, RoleCommand.STOP);\n    addDependency(Role.ZOOKEEPER_SERVER, RoleCommand.STOP,\n        Role.HBASE_REGIONSERVER, RoleCommand.STOP);\n    addDependency(Role.NAMENODE, RoleCommand.STOP,\n        Role.HBASE_MASTER, RoleCommand.STOP);\n    addDependency(Role.DATANODE, RoleCommand.STOP,\n        Role.HBASE_MASTER, RoleCommand.STOP);\n    addDependency(Role.HBASE_MASTER, RoleCommand.STOP,\n        Role.HBASE_REGIONSERVER, RoleCommand.STOP);\n    addDependency(Role.NAMENODE, RoleCommand.STOP,\n        Role.JOBTRACKER, RoleCommand.STOP);\n    addDependency(Role.NAMENODE, RoleCommand.STOP,\n        Role.TASKTRACKER, RoleCommand.STOP);\n    addDependency(Role.NAMENODE, RoleCommand.STOP,\n        Role.RESOURCEMANAGER, RoleCommand.STOP);\n    addDependency(Role.NAMENODE, RoleCommand.STOP,\n        Role.NODEMANAGER, RoleCommand.STOP);\n    addDependency(Role.NAMENODE, RoleCommand.STOP,\n        Role.HISTORYSERVER, RoleCommand.STOP);\n    addDependency(Role.DATANODE, RoleCommand.STOP,\n        Role.JOBTRACKER, RoleCommand.STOP);\n    addDependency(Role.DATANODE, RoleCommand.STOP,\n        Role.TASKTRACKER, RoleCommand.STOP);\n    addDependency(Role.DATANODE, RoleCommand.STOP,\n        Role.RESOURCEMANAGER, RoleCommand.STOP);\n    addDependency(Role.DATANODE, RoleCommand.STOP,\n        Role.NODEMANAGER, RoleCommand.STOP);\n    addDependency(Role.DATANODE, RoleCommand.STOP,\n        Role.HISTORYSERVER, RoleCommand.STOP);\n\n    addDependency(Role.SECONDARY_NAMENODE, RoleCommand.UPGRADE,\n        Role.NAMENODE, RoleCommand.UPGRADE);\n    addDependency(Role.DATANODE, RoleCommand.UPGRADE,\n        Role.SECONDARY_NAMENODE, RoleCommand.UPGRADE);\n    addDependency(Role.HDFS_CLIENT, RoleCommand.UPGRADE,\n        Role.DATANODE, RoleCommand.UPGRADE);\n    addDependency(Role.JOBTRACKER, RoleCommand.UPGRADE,\n        Role.HDFS_CLIENT, RoleCommand.UPGRADE);\n    addDependency(Role.TASKTRACKER, RoleCommand.UPGRADE,\n        Role.JOBTRACKER, RoleCommand.UPGRADE);\n    addDependency(Role.MAPREDUCE_CLIENT, RoleCommand.UPGRADE,\n        Role.TASKTRACKER, RoleCommand.UPGRADE);\n    addDependency(Role.MAPREDUCE_CLIENT, RoleCommand.UPGRADE,\n        Role.TASKTRACKER, RoleCommand.UPGRADE);\n    addDependency(Role.ZOOKEEPER_SERVER, RoleCommand.UPGRADE,\n        Role.MAPREDUCE_CLIENT, RoleCommand.UPGRADE);\n    addDependency(Role.ZOOKEEPER_CLIENT, RoleCommand.UPGRADE,\n        Role.ZOOKEEPER_SERVER, RoleCommand.UPGRADE);\n    addDependency(Role.HBASE_MASTER, RoleCommand.UPGRADE,\n        Role.ZOOKEEPER_CLIENT, RoleCommand.UPGRADE);\n    addDependency(Role.HBASE_REGIONSERVER, RoleCommand.UPGRADE,\n        Role.HBASE_MASTER, RoleCommand.UPGRADE);\n    addDependency(Role.HBASE_CLIENT, RoleCommand.UPGRADE,\n        Role.HBASE_REGIONSERVER, RoleCommand.UPGRADE);\n    addDependency(Role.HIVE_SERVER, RoleCommand.UPGRADE,\n        Role.HBASE_CLIENT, RoleCommand.UPGRADE);\n    addDependency(Role.HIVE_METASTORE, RoleCommand.UPGRADE,\n        Role.HIVE_SERVER, RoleCommand.UPGRADE);\n    addDependency(Role.MYSQL_SERVER, RoleCommand.UPGRADE,\n        Role.HIVE_METASTORE, RoleCommand.UPGRADE);\n    addDependency(Role.HIVE_CLIENT, RoleCommand.UPGRADE,\n        Role.MYSQL_SERVER, RoleCommand.UPGRADE);\n    addDependency(Role.HCAT, RoleCommand.UPGRADE,\n        Role.HIVE_CLIENT, RoleCommand.UPGRADE);\n    addDependency(Role.OOZIE_SERVER, RoleCommand.UPGRADE,\n        Role.HCAT, RoleCommand.UPGRADE);\n    addDependency(Role.OOZIE_CLIENT, RoleCommand.UPGRADE,\n        Role.OOZIE_SERVER, RoleCommand.UPGRADE);\n    addDependency(Role.WEBHCAT_SERVER, RoleCommand.UPGRADE,\n        Role.OOZIE_CLIENT, RoleCommand.UPGRADE);\n    addDependency(Role.PIG, RoleCommand.UPGRADE,\n        Role.WEBHCAT_SERVER, RoleCommand.UPGRADE);\n    addDependency(Role.SQOOP, RoleCommand.UPGRADE,\n        Role.PIG, RoleCommand.UPGRADE);\n    addDependency(Role.NAGIOS_SERVER, RoleCommand.UPGRADE,\n        Role.SQOOP, RoleCommand.UPGRADE);\n    addDependency(Role.GANGLIA_SERVER, RoleCommand.UPGRADE,\n        Role.NAGIOS_SERVER, RoleCommand.UPGRADE);\n    addDependency(Role.GANGLIA_MONITOR, RoleCommand.UPGRADE,\n        Role.GANGLIA_SERVER, RoleCommand.UPGRADE);\n\n    extendTransitiveDependency();\n    }","id":8465,"modified_method":"public static void initialize() {\n    // Installs\n    addDependency(Role.NAGIOS_SERVER, RoleCommand.INSTALL, Role.HIVE_CLIENT,\n      RoleCommand.INSTALL);\n    addDependency(Role.NAGIOS_SERVER, RoleCommand.INSTALL, Role.HCAT,\n      RoleCommand.INSTALL);\n    addDependency(Role.NAGIOS_SERVER, RoleCommand.INSTALL, Role.MAPREDUCE_CLIENT,\n      RoleCommand.INSTALL);\n    addDependency(Role.NAGIOS_SERVER, RoleCommand.INSTALL, Role.OOZIE_CLIENT,\n      RoleCommand.INSTALL);\n\n    // Starts\n    addDependency(Role.SECONDARY_NAMENODE, RoleCommand.START, Role.NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.RESOURCEMANAGER, RoleCommand.START, Role.NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.RESOURCEMANAGER, RoleCommand.START, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.NODEMANAGER, RoleCommand.START, Role.NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.NODEMANAGER, RoleCommand.START, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.HISTORYSERVER, RoleCommand.START, Role.NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.HISTORYSERVER, RoleCommand.START, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.HBASE_MASTER, RoleCommand.START, Role.ZOOKEEPER_SERVER,\n        RoleCommand.START);\n    addDependency(Role.HBASE_MASTER, RoleCommand.START, Role.NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.HBASE_MASTER, RoleCommand.START, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.HBASE_REGIONSERVER, RoleCommand.START,\n        Role.HBASE_MASTER, RoleCommand.START);\n    addDependency(Role.JOBTRACKER, RoleCommand.START, Role.NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.JOBTRACKER, RoleCommand.START, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.TASKTRACKER, RoleCommand.START, Role.NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.TASKTRACKER, RoleCommand.START, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.OOZIE_SERVER, RoleCommand.START, Role.JOBTRACKER,\n        RoleCommand.START);\n    addDependency(Role.OOZIE_SERVER, RoleCommand.START, Role.TASKTRACKER,\n        RoleCommand.START);\n    addDependency(Role.HIVE_SERVER, RoleCommand.START, Role.TASKTRACKER,\n        RoleCommand.START);\n    addDependency(Role.HIVE_SERVER, RoleCommand.START, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.WEBHCAT_SERVER, RoleCommand.START, Role.TASKTRACKER,\n        RoleCommand.START);\n    addDependency(Role.WEBHCAT_SERVER, RoleCommand.START, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.WEBHCAT_SERVER, RoleCommand.START, Role.HIVE_SERVER,\n        RoleCommand.START);\n    addDependency(Role.HIVE_METASTORE, RoleCommand.START, Role.MYSQL_SERVER,\n        RoleCommand.START);\n    addDependency(Role.HIVE_SERVER, RoleCommand.START, Role.MYSQL_SERVER,\n        RoleCommand.START);\n    addDependency(Role.HUE_SERVER, RoleCommand.START, Role.HIVE_SERVER,\n      RoleCommand.START);\n    addDependency(Role.HUE_SERVER, RoleCommand.START, Role.HCAT,\n      RoleCommand.START);\n    addDependency(Role.HUE_SERVER, RoleCommand.START, Role.OOZIE_SERVER,\n        RoleCommand.START);\n    addDependency(Role.FLUME_SERVER, RoleCommand.START, Role.OOZIE_SERVER,\n        RoleCommand.START);\n\n    // Service checks\n    addDependency(Role.HDFS_SERVICE_CHECK, RoleCommand.EXECUTE, Role.NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.HDFS_SERVICE_CHECK, RoleCommand.EXECUTE, Role.DATANODE,\n        RoleCommand.START);\n    addDependency(Role.HDFS_SERVICE_CHECK, RoleCommand.EXECUTE, Role.SECONDARY_NAMENODE,\n        RoleCommand.START);\n    addDependency(Role.MAPREDUCE_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.JOBTRACKER, RoleCommand.START);\n    addDependency(Role.MAPREDUCE_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.TASKTRACKER, RoleCommand.START);\n    addDependency(Role.RESOURCEMANAGER_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.RESOURCEMANAGER, RoleCommand.START);\n    addDependency(Role.OOZIE_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.OOZIE_SERVER, RoleCommand.START);\n    addDependency(Role.WEBHCAT_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.WEBHCAT_SERVER, RoleCommand.START);\n    addDependency(Role.HBASE_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.HBASE_MASTER, RoleCommand.START);\n    addDependency(Role.HBASE_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.HBASE_REGIONSERVER, RoleCommand.START);\n    addDependency(Role.HIVE_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.HIVE_SERVER, RoleCommand.START);\n    addDependency(Role.HIVE_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.HIVE_METASTORE, RoleCommand.START);\n    addDependency(Role.HCAT_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.HIVE_SERVER, RoleCommand.START);\n    addDependency(Role.PIG_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.JOBTRACKER, RoleCommand.START);\n    addDependency(Role.PIG_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.TASKTRACKER, RoleCommand.START);\n    addDependency(Role.PIG_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.RESOURCEMANAGER, RoleCommand.START);\n    addDependency(Role.PIG_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.NODEMANAGER, RoleCommand.START);\n    addDependency(Role.SQOOP_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.JOBTRACKER, RoleCommand.START);\n    addDependency(Role.SQOOP_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.TASKTRACKER, RoleCommand.START);\n    addDependency(Role.ZOOKEEPER_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.ZOOKEEPER_SERVER, RoleCommand.START);\n    addDependency(Role.ZOOKEEPER_QUORUM_SERVICE_CHECK, RoleCommand.EXECUTE,\n        Role.ZOOKEEPER_SERVER, RoleCommand.START);\n    \n    addDependency(Role.ZOOKEEPER_SERVER, RoleCommand.STOP,\n        Role.HBASE_MASTER, RoleCommand.STOP);\n    addDependency(Role.ZOOKEEPER_SERVER, RoleCommand.STOP,\n        Role.HBASE_REGIONSERVER, RoleCommand.STOP);\n    addDependency(Role.NAMENODE, RoleCommand.STOP,\n        Role.HBASE_MASTER, RoleCommand.STOP);\n    addDependency(Role.DATANODE, RoleCommand.STOP,\n        Role.HBASE_MASTER, RoleCommand.STOP);\n    addDependency(Role.HBASE_MASTER, RoleCommand.STOP,\n        Role.HBASE_REGIONSERVER, RoleCommand.STOP);\n    addDependency(Role.NAMENODE, RoleCommand.STOP,\n        Role.JOBTRACKER, RoleCommand.STOP);\n    addDependency(Role.NAMENODE, RoleCommand.STOP,\n        Role.TASKTRACKER, RoleCommand.STOP);\n    addDependency(Role.NAMENODE, RoleCommand.STOP,\n        Role.RESOURCEMANAGER, RoleCommand.STOP);\n    addDependency(Role.NAMENODE, RoleCommand.STOP,\n        Role.NODEMANAGER, RoleCommand.STOP);\n    addDependency(Role.NAMENODE, RoleCommand.STOP,\n        Role.HISTORYSERVER, RoleCommand.STOP);\n    addDependency(Role.DATANODE, RoleCommand.STOP,\n        Role.JOBTRACKER, RoleCommand.STOP);\n    addDependency(Role.DATANODE, RoleCommand.STOP,\n        Role.TASKTRACKER, RoleCommand.STOP);\n    addDependency(Role.DATANODE, RoleCommand.STOP,\n        Role.RESOURCEMANAGER, RoleCommand.STOP);\n    addDependency(Role.DATANODE, RoleCommand.STOP,\n        Role.NODEMANAGER, RoleCommand.STOP);\n    addDependency(Role.DATANODE, RoleCommand.STOP,\n        Role.HISTORYSERVER, RoleCommand.STOP);\n\n    addDependency(Role.SECONDARY_NAMENODE, RoleCommand.UPGRADE,\n        Role.NAMENODE, RoleCommand.UPGRADE);\n    addDependency(Role.DATANODE, RoleCommand.UPGRADE,\n        Role.SECONDARY_NAMENODE, RoleCommand.UPGRADE);\n    addDependency(Role.HDFS_CLIENT, RoleCommand.UPGRADE,\n        Role.DATANODE, RoleCommand.UPGRADE);\n    addDependency(Role.JOBTRACKER, RoleCommand.UPGRADE,\n        Role.HDFS_CLIENT, RoleCommand.UPGRADE);\n    addDependency(Role.TASKTRACKER, RoleCommand.UPGRADE,\n        Role.JOBTRACKER, RoleCommand.UPGRADE);\n    addDependency(Role.MAPREDUCE_CLIENT, RoleCommand.UPGRADE,\n        Role.TASKTRACKER, RoleCommand.UPGRADE);\n    addDependency(Role.MAPREDUCE_CLIENT, RoleCommand.UPGRADE,\n        Role.TASKTRACKER, RoleCommand.UPGRADE);\n    addDependency(Role.ZOOKEEPER_SERVER, RoleCommand.UPGRADE,\n        Role.MAPREDUCE_CLIENT, RoleCommand.UPGRADE);\n    addDependency(Role.ZOOKEEPER_CLIENT, RoleCommand.UPGRADE,\n        Role.ZOOKEEPER_SERVER, RoleCommand.UPGRADE);\n    addDependency(Role.HBASE_MASTER, RoleCommand.UPGRADE,\n        Role.ZOOKEEPER_CLIENT, RoleCommand.UPGRADE);\n    addDependency(Role.HBASE_REGIONSERVER, RoleCommand.UPGRADE,\n        Role.HBASE_MASTER, RoleCommand.UPGRADE);\n    addDependency(Role.HBASE_CLIENT, RoleCommand.UPGRADE,\n        Role.HBASE_REGIONSERVER, RoleCommand.UPGRADE);\n    addDependency(Role.HIVE_SERVER, RoleCommand.UPGRADE,\n        Role.HBASE_CLIENT, RoleCommand.UPGRADE);\n    addDependency(Role.HIVE_METASTORE, RoleCommand.UPGRADE,\n        Role.HIVE_SERVER, RoleCommand.UPGRADE);\n    addDependency(Role.MYSQL_SERVER, RoleCommand.UPGRADE,\n        Role.HIVE_METASTORE, RoleCommand.UPGRADE);\n    addDependency(Role.HIVE_CLIENT, RoleCommand.UPGRADE,\n        Role.MYSQL_SERVER, RoleCommand.UPGRADE);\n    addDependency(Role.HCAT, RoleCommand.UPGRADE,\n        Role.HIVE_CLIENT, RoleCommand.UPGRADE);\n    addDependency(Role.OOZIE_SERVER, RoleCommand.UPGRADE,\n        Role.HCAT, RoleCommand.UPGRADE);\n    addDependency(Role.OOZIE_CLIENT, RoleCommand.UPGRADE,\n        Role.OOZIE_SERVER, RoleCommand.UPGRADE);\n    addDependency(Role.WEBHCAT_SERVER, RoleCommand.UPGRADE,\n        Role.OOZIE_CLIENT, RoleCommand.UPGRADE);\n    addDependency(Role.PIG, RoleCommand.UPGRADE,\n        Role.WEBHCAT_SERVER, RoleCommand.UPGRADE);\n    addDependency(Role.SQOOP, RoleCommand.UPGRADE,\n        Role.PIG, RoleCommand.UPGRADE);\n    addDependency(Role.NAGIOS_SERVER, RoleCommand.UPGRADE,\n        Role.SQOOP, RoleCommand.UPGRADE);\n    addDependency(Role.GANGLIA_SERVER, RoleCommand.UPGRADE,\n        Role.NAGIOS_SERVER, RoleCommand.UPGRADE);\n    addDependency(Role.GANGLIA_MONITOR, RoleCommand.UPGRADE,\n        Role.GANGLIA_SERVER, RoleCommand.UPGRADE);\n\n    extendTransitiveDependency();\n    }","commit_id":"bd1aa86a143bd8c2e9b5bf248381cf0ff2659688","url":"https://github.com/apache/ambari"},{"original_method":"@Override\n        public synchronized void coordinatorIsElected( InstanceId coordinatorId )\n        {\n            try\n            {\n                HighAvailabilityMemberState oldState = state;\n                InstanceId previousElected = context.getElectedMasterId();\n\n                // Check if same coordinator was elected\n//                if ( !coordinatorId.equals( previousElected ) )\n                {\n                    state = state.masterIsElected( context, coordinatorId );\n\n                    context.setElectedMasterId( coordinatorId );\n                    final HighAvailabilityMemberChangeEvent event = new HighAvailabilityMemberChangeEvent( oldState,\n                            state, coordinatorId,\n                            null );\n                    boolean successful = Listeners.notifyListeners( memberListeners,\n                            new Listeners.Notification<HighAvailabilityMemberListener>()\n                            {\n                                @Override\n                                public void notify( HighAvailabilityMemberListener listener )\n                                {\n                                    listener.masterIsElected( event );\n                                }\n                            } );\n                    \n                    if ( successful )\n                    {\n                        context.setAvailableHaMasterId( null );\n    \n                        if ( oldState.isAccessAllowed() && oldState != state )\n                        {\n                            availabilityGuard.deny(HighAvailabilityMemberStateMachine.this);\n                        }\n    \n                        logger.debug( \"Got masterIsElected(\" + coordinatorId + \"), changed \" + oldState + \" -> \" +\n                                state + \". Previous elected master is \" + previousElected );\n                    }\n                    else\n                    {\n                        logger.debug( \"Got masterIsElected(\" + coordinatorId +\n                                \"), but applying it was not successful so keeps state \" + oldState +\n                                \" even though the desired state transaction would have been to \" + state );\n                        state = oldState;\n                    }\n                }\n            }\n            catch ( Throwable t )\n            {\n                throw new RuntimeException( t );\n            }\n        }","id":8466,"modified_method":"@Override\n        public synchronized void coordinatorIsElected( InstanceId coordinatorId )\n        {\n            try\n            {\n                HighAvailabilityMemberState oldState = state;\n                InstanceId previousElected = context.getElectedMasterId();\n\n                // Check if same coordinator was elected\n//                if ( !coordinatorId.equals( previousElected ) )\n                {\n                    state = state.masterIsElected( context, coordinatorId );\n\n\n                    context.setElectedMasterId( coordinatorId );\n                    final HighAvailabilityMemberChangeEvent event = new HighAvailabilityMemberChangeEvent( oldState,\n                            state, coordinatorId,\n                            null );\n                    Listeners.notifyListeners( memberListeners,\n                            new Listeners.Notification<HighAvailabilityMemberListener>()\n                            {\n                                @Override\n                                public void notify( HighAvailabilityMemberListener listener )\n                                {\n                                    listener.masterIsElected( event );\n                                }\n                            } );\n                    context.setAvailableHaMasterId( null );\n\n                    if ( oldState.isAccessAllowed() && oldState != state )\n                    {\n                        availabilityGuard.deny(HighAvailabilityMemberStateMachine.this);\n                    }\n\n                    logger.debug( \"Got masterIsElected(\" + coordinatorId + \"), changed \" + oldState + \" -> \" +\n                            state + \". Previous elected master is \" + previousElected );\n                }\n            }\n            catch ( Throwable t )\n            {\n                throw new RuntimeException( t );\n            }\n        }","commit_id":"250bd99c7828ab57ce4603683b2890904312c7c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n        public synchronized void memberIsAvailable( String role, InstanceId instanceId, URI roleUri )\n        {\n            try\n            {\n                if ( role.equals( HighAvailabilityModeSwitcher.MASTER ) )\n                {\n//                    if ( !roleUri.equals( context.getAvailableHaMaster() ) )\n                    {\n                        HighAvailabilityMemberState oldState = state;\n                        context.setAvailableHaMasterId( roleUri );\n                        state = state.masterIsAvailable( context, instanceId, roleUri );\n                        logger.debug( \"Got masterIsAvailable(\" + instanceId + \"), moved to \" + state + \" from \" +\n                                oldState );\n                        final HighAvailabilityMemberChangeEvent event = new HighAvailabilityMemberChangeEvent( oldState,\n                                state, instanceId, roleUri );\n                        boolean successful = Listeners.notifyListeners( memberListeners,\n                                new Listeners.Notification<HighAvailabilityMemberListener>()\n                                {\n                                    @Override\n                                    public void notify( HighAvailabilityMemberListener listener )\n                                    {\n                                        listener.masterIsAvailable( event );\n                                    }\n                                } );\n\n                        if ( successful )\n                        {\n                            if ( oldState == HighAvailabilityMemberState.TO_MASTER && state ==\n                                    HighAvailabilityMemberState.MASTER )\n                            {\n                                availabilityGuard.grant(HighAvailabilityMemberStateMachine.this);\n                            }\n                        }\n                        else\n                        {\n                            logger.debug( \"Got masterIsAvailable(\" + instanceId +\n                                    \"), but applying it was not successful so keeps state \" + oldState +\n                                    \" even though the desired state transaction would have been to \" + state );\n                            state = oldState;\n                        }\n                    }\n                }\n                else if ( role.equals( HighAvailabilityModeSwitcher.SLAVE ) )\n                {\n                    HighAvailabilityMemberState oldState = state;\n                    state = state.slaveIsAvailable( context, instanceId, roleUri );\n                    logger.debug( \"Got slaveIsAvailable(\" + instanceId + \"), \" +\n                            \"moved to \" + state + \" from \" + oldState );\n                    final HighAvailabilityMemberChangeEvent event = new HighAvailabilityMemberChangeEvent( oldState,\n                            state, instanceId, roleUri );\n                    boolean successful = Listeners.notifyListeners( memberListeners,\n                            new Listeners.Notification<HighAvailabilityMemberListener>()\n                            {\n                                @Override\n                                public void notify( HighAvailabilityMemberListener listener )\n                                {\n                                    listener.slaveIsAvailable( event );\n                                }\n                            } );\n\n                    if ( successful )\n                    {\n                        if ( oldState == HighAvailabilityMemberState.TO_SLAVE &&\n                                state == HighAvailabilityMemberState.SLAVE )\n                        {\n                            availabilityGuard.grant(HighAvailabilityMemberStateMachine.this);\n                        }\n                    }\n                    else\n                    {\n                        logger.debug( \"Got slaveIsAvailable(\" + instanceId +\n                                \"), but applying it was not successful so keeps state \" + oldState +\n                                \" even though the desired state transaction would have been to \" + state );\n                        state = oldState;\n                    }\n                }\n            }\n            catch ( Throwable throwable )\n            {\n                logger.warn( \"Exception while receiving member availability notification\", throwable );\n            }\n        }","id":8467,"modified_method":"@Override\n        public synchronized void memberIsAvailable( String role, InstanceId instanceId, URI roleUri )\n        {\n            try\n            {\n                if ( role.equals( HighAvailabilityModeSwitcher.MASTER ) )\n                {\n//                    if ( !roleUri.equals( context.getAvailableHaMaster() ) )\n                    {\n                        HighAvailabilityMemberState oldState = state;\n                        context.setAvailableHaMasterId( roleUri );\n                        state = state.masterIsAvailable( context, instanceId, roleUri );\n                        logger.debug( \"Got masterIsAvailable(\" + instanceId + \"), moved to \" + state + \" from \" +\n                                oldState );\n                        final HighAvailabilityMemberChangeEvent event = new HighAvailabilityMemberChangeEvent( oldState,\n                                state, instanceId, roleUri );\n                        Listeners.notifyListeners( memberListeners,\n                                new Listeners.Notification<HighAvailabilityMemberListener>()\n                                {\n                                    @Override\n                                    public void notify( HighAvailabilityMemberListener listener )\n                                    {\n                                        listener.masterIsAvailable( event );\n                                    }\n                                } );\n\n                        if ( oldState == HighAvailabilityMemberState.TO_MASTER && state ==\n                                HighAvailabilityMemberState.MASTER )\n                        {\n                            availabilityGuard.grant(HighAvailabilityMemberStateMachine.this);\n                        }\n                    }\n                }\n                else if ( role.equals( HighAvailabilityModeSwitcher.SLAVE ) )\n                {\n                    HighAvailabilityMemberState oldState = state;\n                    state = state.slaveIsAvailable( context, instanceId, roleUri );\n                    logger.debug( \"Got slaveIsAvailable(\" + instanceId + \"), \" +\n                            \"moved to \" + state + \" from \" + oldState );\n                    final HighAvailabilityMemberChangeEvent event = new HighAvailabilityMemberChangeEvent( oldState,\n                            state, instanceId, roleUri );\n                    Listeners.notifyListeners( memberListeners,\n                            new Listeners.Notification<HighAvailabilityMemberListener>()\n                            {\n                                @Override\n                                public void notify( HighAvailabilityMemberListener listener )\n                                {\n                                    listener.slaveIsAvailable( event );\n                                }\n                            } );\n\n                    if ( oldState == HighAvailabilityMemberState.TO_SLAVE &&\n                            state == HighAvailabilityMemberState.SLAVE )\n                    {\n                        availabilityGuard.grant(HighAvailabilityMemberStateMachine.this);\n                    }\n                }\n            }\n            catch ( Throwable throwable )\n            {\n                logger.warn( \"Exception while receiving member availability notification\", throwable );\n            }\n        }","commit_id":"250bd99c7828ab57ce4603683b2890904312c7c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * @return {@code true} if all listeners succeeded, otherwise {@code false} if one or more failed.\n     */\n    public static <T> boolean notifyListeners(Iterable<T> listeners, Notification<T> notification)\n    {\n        boolean successful = true;\n        for( T listener : listeners )\n        {\n            synchronized( listener )\n            {\n                try\n                {\n                    notification.notify( listener );\n                }\n                catch( Throwable e )\n                {\n                    e.printStackTrace();\n                    successful = false;\n                }\n            }\n        }\n        return successful;\n    }","id":8468,"modified_method":"public static <T> void notifyListeners(Iterable<T> listeners, Notification<T> notification)\n    {\n        for( T listener : listeners )\n        {\n            synchronized( listener )\n            {\n                try\n                {\n                    notification.notify( listener );\n                }\n                catch( Throwable e )\n                {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }","commit_id":"250bd99c7828ab57ce4603683b2890904312c7c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n        public synchronized void coordinatorIsElected( InstanceId coordinatorId )\n        {\n            try\n            {\n                HighAvailabilityMemberState oldState = state;\n                InstanceId previousElected = context.getElectedMasterId();\n\n                // Check if same coordinator was elected\n//                if ( !coordinatorId.equals( previousElected ) )\n                {\n                    state = state.masterIsElected( context, coordinatorId );\n\n                    context.setElectedMasterId( coordinatorId );\n                    final HighAvailabilityMemberChangeEvent event = new HighAvailabilityMemberChangeEvent( oldState,\n                            state, coordinatorId,\n                            null );\n                    boolean successful = Listeners.notifyListeners( memberListeners,\n                            new Listeners.Notification<HighAvailabilityMemberListener>()\n                            {\n                                @Override\n                                public void notify( HighAvailabilityMemberListener listener )\n                                {\n                                    listener.masterIsElected( event );\n                                }\n                            } );\n                    \n                    if ( successful )\n                    {\n                        context.setAvailableHaMasterId( null );\n    \n                        if ( oldState.isAccessAllowed() && oldState != state )\n                        {\n                            availabilityGuard.deny(HighAvailabilityMemberStateMachine.this);\n                        }\n    \n                        logger.debug( \"Got masterIsElected(\" + coordinatorId + \"), changed \" + oldState + \" -> \" +\n                                state + \". Previous elected master is \" + previousElected );\n                    }\n                    else\n                    {\n                        logger.debug( \"Got masterIsElected(\" + coordinatorId +\n                                \"), but applying it was not successful so keeps state \" + oldState +\n                                \" even though the desired state transaction would have been to \" + state );\n                        state = oldState;\n                    }\n                }\n            }\n            catch ( Throwable t )\n            {\n                throw new RuntimeException( t );\n            }\n        }","id":8469,"modified_method":"@Override\n        public synchronized void coordinatorIsElected( InstanceId coordinatorId )\n        {\n            try\n            {\n                HighAvailabilityMemberState oldState = state;\n                InstanceId previousElected = context.getElectedMasterId();\n\n                // Check if same coordinator was elected\n//                if ( !coordinatorId.equals( previousElected ) )\n                {\n                    state = state.masterIsElected( context, coordinatorId );\n\n\n                    context.setElectedMasterId( coordinatorId );\n                    final HighAvailabilityMemberChangeEvent event = new HighAvailabilityMemberChangeEvent( oldState,\n                            state, coordinatorId,\n                            null );\n                    Listeners.notifyListeners( memberListeners,\n                            new Listeners.Notification<HighAvailabilityMemberListener>()\n                            {\n                                @Override\n                                public void notify( HighAvailabilityMemberListener listener )\n                                {\n                                    listener.masterIsElected( event );\n                                }\n                            } );\n                    context.setAvailableHaMasterId( null );\n\n                    if ( oldState.isAccessAllowed() && oldState != state )\n                    {\n                        availabilityGuard.deny(HighAvailabilityMemberStateMachine.this);\n                    }\n\n                    logger.debug( \"Got masterIsElected(\" + coordinatorId + \"), changed \" + oldState + \" -> \" +\n                            state + \". Previous elected master is \" + previousElected );\n                }\n            }\n            catch ( Throwable t )\n            {\n                throw new RuntimeException( t );\n            }\n        }","commit_id":"84a005a4d28647d37d0df76d4a7cf08e3989ceb1","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n        public synchronized void memberIsAvailable( String role, InstanceId instanceId, URI roleUri )\n        {\n            try\n            {\n                if ( role.equals( HighAvailabilityModeSwitcher.MASTER ) )\n                {\n//                    if ( !roleUri.equals( context.getAvailableHaMaster() ) )\n                    {\n                        HighAvailabilityMemberState oldState = state;\n                        context.setAvailableHaMasterId( roleUri );\n                        state = state.masterIsAvailable( context, instanceId, roleUri );\n                        logger.debug( \"Got masterIsAvailable(\" + instanceId + \"), moved to \" + state + \" from \" +\n                                oldState );\n                        final HighAvailabilityMemberChangeEvent event = new HighAvailabilityMemberChangeEvent( oldState,\n                                state, instanceId, roleUri );\n                        boolean successful = Listeners.notifyListeners( memberListeners,\n                                new Listeners.Notification<HighAvailabilityMemberListener>()\n                                {\n                                    @Override\n                                    public void notify( HighAvailabilityMemberListener listener )\n                                    {\n                                        listener.masterIsAvailable( event );\n                                    }\n                                } );\n\n                        if ( successful )\n                        {\n                            if ( oldState == HighAvailabilityMemberState.TO_MASTER && state ==\n                                    HighAvailabilityMemberState.MASTER )\n                            {\n                                availabilityGuard.grant(HighAvailabilityMemberStateMachine.this);\n                            }\n                        }\n                        else\n                        {\n                            logger.debug( \"Got masterIsAvailable(\" + instanceId +\n                                    \"), but applying it was not successful so keeps state \" + oldState +\n                                    \" even though the desired state transaction would have been to \" + state );\n                            state = oldState;\n                        }\n                    }\n                }\n                else if ( role.equals( HighAvailabilityModeSwitcher.SLAVE ) )\n                {\n                    HighAvailabilityMemberState oldState = state;\n                    state = state.slaveIsAvailable( context, instanceId, roleUri );\n                    logger.debug( \"Got slaveIsAvailable(\" + instanceId + \"), \" +\n                            \"moved to \" + state + \" from \" + oldState );\n                    final HighAvailabilityMemberChangeEvent event = new HighAvailabilityMemberChangeEvent( oldState,\n                            state, instanceId, roleUri );\n                    boolean successful = Listeners.notifyListeners( memberListeners,\n                            new Listeners.Notification<HighAvailabilityMemberListener>()\n                            {\n                                @Override\n                                public void notify( HighAvailabilityMemberListener listener )\n                                {\n                                    listener.slaveIsAvailable( event );\n                                }\n                            } );\n\n                    if ( successful )\n                    {\n                        if ( oldState == HighAvailabilityMemberState.TO_SLAVE &&\n                                state == HighAvailabilityMemberState.SLAVE )\n                        {\n                            availabilityGuard.grant(HighAvailabilityMemberStateMachine.this);\n                        }\n                    }\n                    else\n                    {\n                        logger.debug( \"Got slaveIsAvailable(\" + instanceId +\n                                \"), but applying it was not successful so keeps state \" + oldState +\n                                \" even though the desired state transaction would have been to \" + state );\n                        state = oldState;\n                    }\n                }\n            }\n            catch ( Throwable throwable )\n            {\n                logger.warn( \"Exception while receiving member availability notification\", throwable );\n            }\n        }","id":8470,"modified_method":"@Override\n        public synchronized void memberIsAvailable( String role, InstanceId instanceId, URI roleUri )\n        {\n            try\n            {\n                if ( role.equals( HighAvailabilityModeSwitcher.MASTER ) )\n                {\n//                    if ( !roleUri.equals( context.getAvailableHaMaster() ) )\n                    {\n                        HighAvailabilityMemberState oldState = state;\n                        context.setAvailableHaMasterId( roleUri );\n                        state = state.masterIsAvailable( context, instanceId, roleUri );\n                        logger.debug( \"Got masterIsAvailable(\" + instanceId + \"), moved to \" + state + \" from \" +\n                                oldState );\n                        final HighAvailabilityMemberChangeEvent event = new HighAvailabilityMemberChangeEvent( oldState,\n                                state, instanceId, roleUri );\n                        Listeners.notifyListeners( memberListeners,\n                                new Listeners.Notification<HighAvailabilityMemberListener>()\n                                {\n                                    @Override\n                                    public void notify( HighAvailabilityMemberListener listener )\n                                    {\n                                        listener.masterIsAvailable( event );\n                                    }\n                                } );\n\n                        if ( oldState == HighAvailabilityMemberState.TO_MASTER && state ==\n                                HighAvailabilityMemberState.MASTER )\n                        {\n                            availabilityGuard.grant(HighAvailabilityMemberStateMachine.this);\n                        }\n                    }\n                }\n                else if ( role.equals( HighAvailabilityModeSwitcher.SLAVE ) )\n                {\n                    HighAvailabilityMemberState oldState = state;\n                    state = state.slaveIsAvailable( context, instanceId, roleUri );\n                    logger.debug( \"Got slaveIsAvailable(\" + instanceId + \"), \" +\n                            \"moved to \" + state + \" from \" + oldState );\n                    final HighAvailabilityMemberChangeEvent event = new HighAvailabilityMemberChangeEvent( oldState,\n                            state, instanceId, roleUri );\n                    Listeners.notifyListeners( memberListeners,\n                            new Listeners.Notification<HighAvailabilityMemberListener>()\n                            {\n                                @Override\n                                public void notify( HighAvailabilityMemberListener listener )\n                                {\n                                    listener.slaveIsAvailable( event );\n                                }\n                            } );\n\n                    if ( oldState == HighAvailabilityMemberState.TO_SLAVE &&\n                            state == HighAvailabilityMemberState.SLAVE )\n                    {\n                        availabilityGuard.grant(HighAvailabilityMemberStateMachine.this);\n                    }\n                }\n            }\n            catch ( Throwable throwable )\n            {\n                logger.warn( \"Exception while receiving member availability notification\", throwable );\n            }\n        }","commit_id":"84a005a4d28647d37d0df76d4a7cf08e3989ceb1","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * @return {@code true} if all listeners succeeded, otherwise {@code false} if one or more failed.\n     */\n    public static <T> boolean notifyListeners(Iterable<T> listeners, Notification<T> notification)\n    {\n        boolean successful = true;\n        for( T listener : listeners )\n        {\n            synchronized( listener )\n            {\n                try\n                {\n                    notification.notify( listener );\n                }\n                catch( Throwable e )\n                {\n                    e.printStackTrace();\n                    successful = false;\n                }\n            }\n        }\n        return successful;\n    }","id":8471,"modified_method":"public static <T> void notifyListeners(Iterable<T> listeners, Notification<T> notification)\n    {\n        for( T listener : listeners )\n        {\n            synchronized( listener )\n            {\n                try\n                {\n                    notification.notify( listener );\n                }\n                catch( Throwable e )\n                {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }","commit_id":"84a005a4d28647d37d0df76d4a7cf08e3989ceb1","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tpublic boolean onSingleTap(PointF point, RotatedTileBox tileBox) {\n\t\tif(tileBox.getZoom() < 11) {\n\t\t\treturn false;\n\t\t}\n\t\tList<FavouritePoint> favs = new ArrayList<FavouritePoint>();\n\t\tgetFavoriteFromPoint(tileBox, point, favs);\n\t\tif(!favs.isEmpty() && (tileBox.getZoom() > 14 || favs.size() < 6)){\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tint i = 0;\n\t\t\tfor(FavouritePoint fav : favs) {\n\t\t\t\tif (i++ > 0) {\n\t\t\t\t\tres.append(\"\\n\\n\");\n\t\t\t\t}\n\t\t\t\tres.append(view.getContext().getString(R.string.favorite) + \" : \" + fav.getName());  //$NON-NLS-1$\n\t\t\t}\n\t\t\tAccessibleToast.makeText(view.getContext(), res.toString(), Toast.LENGTH_LONG).show();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}","id":8472,"modified_method":"@Override\n\tpublic boolean onSingleTap(PointF point, RotatedTileBox tileBox) {\n\t\tList<FavouritePoint> favs = new ArrayList<FavouritePoint>();\n\t\tgetFavoriteFromPoint(tileBox, point, favs);\n\t\tif(!favs.isEmpty() && (tileBox.getZoom() > 14 || favs.size() < 6)){\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tint i = 0;\n\t\t\tfor(FavouritePoint fav : favs) {\n\t\t\t\tif (i++ > 0) {\n\t\t\t\t\tres.append(\"\\n\\n\");\n\t\t\t\t}\n\t\t\t\tres.append(view.getContext().getString(R.string.favorite) + \" : \" + fav.getName());  //$NON-NLS-1$\n\t\t\t}\n\t\t\tAccessibleToast.makeText(view.getContext(), res.toString(), Toast.LENGTH_LONG).show();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}","commit_id":"8f879647509eb6822da027f0c6fa432ac9ea6af9","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void deleteFavoritesAction() {\n\t\tif (groupsToDelete.size() + favoritesToDelete.size() > 0) {\n\n\t\t\tBuilder b = new AlertDialog.Builder(getActivity());\n\t\t\tb.setMessage(getString(R.string.favorite_delete_multiple, favoritesToDelete.size(), groupsToDelete.size()));\n\t\t\tb.setPositiveButton(R.string.default_buttons_delete, new DialogInterface.OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\tif (actionMode != null) {\n\t\t\t\t\t\tactionMode.finish();\n\t\t\t\t\t}\n\t\t\t\t\tdeleteFavorites();\n\t\t\t\t}\n\t\t\t});\n\t\t\tb.setNegativeButton(R.string.default_buttons_cancel, null);\n\t\t\tb.show();\n\t\t}\n\t}","id":8473,"modified_method":"private void deleteFavoritesAction() {\n\t\tif (groupsToDelete.size() + favoritesSelected.size() > 0) {\n\n\t\t\tBuilder b = new AlertDialog.Builder(getActivity());\n\t\t\tb.setMessage(getString(R.string.favorite_delete_multiple, favoritesSelected.size(), groupsToDelete.size()));\n\t\t\tb.setPositiveButton(R.string.default_buttons_delete, new DialogInterface.OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\tif (actionMode != null) {\n\t\t\t\t\t\tactionMode.finish();\n\t\t\t\t\t}\n\t\t\t\t\tdeleteFavorites();\n\t\t\t\t}\n\t\t\t});\n\t\t\tb.setNegativeButton(R.string.default_buttons_cancel, null);\n\t\t\tb.show();\n\t\t}\n\t}","commit_id":"8f879647509eb6822da027f0c6fa432ac9ea6af9","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tpublic View getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView,\n\t\t\t\tViewGroup parent) {\n\t\t\tView row = convertView;\n\t\t\tif (row == null) {\n\t\t\t\tLayoutInflater inflater = getActivity().getLayoutInflater();\n\t\t\t\trow = inflater.inflate(R.layout.favourites_list_item, parent, false);\n\t\t\t}\n\n\t\t\tTextView label = (TextView) row.findViewById(R.id.favourite_label);\n\t\t\tImageView icon = (ImageView) row.findViewById(R.id.favourite_icon);\n\t\t\tfinal FavouritePoint model = (FavouritePoint) getChild(groupPosition, childPosition);\n\t\t\trow.setTag(model);\n\t\t\ticon.setImageDrawable(FavoriteImageDrawable.getOrCreate(getActivity(), model.getColor()));\n\t\t\tLatLon lastKnownMapLocation = getMyApplication().getSettings().getLastKnownMapLocation();\n\t\t\tint dist = (int) (MapUtils.getDistance(model.getLatitude(), model.getLongitude(),\n\t\t\t\t\tlastKnownMapLocation.getLatitude(), lastKnownMapLocation.getLongitude()));\n\t\t\tString distance = OsmAndFormatter.getFormattedDistance(dist, getMyApplication()) + \"  \";\n\t\t\tlabel.setText(distance + model.getName(), TextView.BufferType.SPANNABLE);\n\t\t\t((Spannable) label.getText()).setSpan(\n\t\t\t\t\tnew ForegroundColorSpan(getResources().getColor(R.color.color_distance)), 0, distance.length() - 1,\n\t\t\t\t\t0);\n\t\t\tfinal CheckBox ch = (CheckBox) row.findViewById(R.id.check_item);\n\t\t\tif (selectionMode) {\n\t\t\t\tch.setVisibility(View.VISIBLE);\n\t\t\t\tch.setChecked(favoritesToDelete.contains(model));\n\t\t\t\trow.findViewById(R.id.favourite_icon).setVisibility(View.GONE);\n\t\t\t\tch.setOnClickListener(new View.OnClickListener() {\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\t\tif (ch.isChecked()) {\n\t\t\t\t\t\t\tfavoritesToDelete.add(model);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfavoritesToDelete.remove(model);\n\t\t\t\t\t\t\tif (groupsToDelete.contains(model.getCategory())) {\n\t\t\t\t\t\t\t\tgroupsToDelete.remove(model.getCategory());\n\t\t\t\t\t\t\t\tfavouritesAdapter.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\trow.findViewById(R.id.favourite_icon).setVisibility(View.VISIBLE);\n\t\t\t\tch.setVisibility(View.GONE);\n\t\t\t}\n\t\t\treturn row;\n\t\t}","id":8474,"modified_method":"@Override\n\t\tpublic View getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView,\n\t\t\t\tViewGroup parent) {\n\t\t\tView row = convertView;\n\t\t\tif (row == null) {\n\t\t\t\tLayoutInflater inflater = getActivity().getLayoutInflater();\n\t\t\t\trow = inflater.inflate(R.layout.favourites_list_item, parent, false);\n\t\t\t}\n\n\t\t\tTextView label = (TextView) row.findViewById(R.id.favourite_label);\n\t\t\tImageView icon = (ImageView) row.findViewById(R.id.favourite_icon);\n\t\t\tfinal FavouritePoint model = (FavouritePoint) getChild(groupPosition, childPosition);\n\t\t\trow.setTag(model);\n\t\t\ticon.setImageDrawable(FavoriteImageDrawable.getOrCreate(getActivity(), model.getColor()));\n\t\t\tLatLon lastKnownMapLocation = getMyApplication().getSettings().getLastKnownMapLocation();\n\t\t\tint dist = (int) (MapUtils.getDistance(model.getLatitude(), model.getLongitude(),\n\t\t\t\t\tlastKnownMapLocation.getLatitude(), lastKnownMapLocation.getLongitude()));\n\t\t\tString distance = OsmAndFormatter.getFormattedDistance(dist, getMyApplication()) + \"  \";\n\t\t\tlabel.setText(distance + model.getName(), TextView.BufferType.SPANNABLE);\n\t\t\t((Spannable) label.getText()).setSpan(\n\t\t\t\t\tnew ForegroundColorSpan(getResources().getColor(R.color.color_distance)), 0, distance.length() - 1,\n\t\t\t\t\t0);\n\t\t\tfinal CheckBox ch = (CheckBox) row.findViewById(R.id.check_item);\n\t\t\tif (selectionMode) {\n\t\t\t\tch.setVisibility(View.VISIBLE);\n\t\t\t\tch.setChecked(favoritesSelected.contains(model));\n\t\t\t\trow.findViewById(R.id.favourite_icon).setVisibility(View.GONE);\n\t\t\t\tch.setOnClickListener(new View.OnClickListener() {\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\t\tif (ch.isChecked()) {\n\t\t\t\t\t\t\tfavoritesSelected.add(model);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfavoritesSelected.remove(model);\n\t\t\t\t\t\t\tif (groupsToDelete.contains(model.getCategory())) {\n\t\t\t\t\t\t\t\tgroupsToDelete.remove(model.getCategory());\n\t\t\t\t\t\t\t\tfavouritesAdapter.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\trow.findViewById(R.id.favourite_icon).setVisibility(View.VISIBLE);\n\t\t\t\tch.setVisibility(View.GONE);\n\t\t\t}\n\t\t\treturn row;\n\t\t}","commit_id":"8f879647509eb6822da027f0c6fa432ac9ea6af9","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void enterDeleteMode() {\n\t\tactionMode = getSherlockActivity().startActionMode(new Callback() {\n\n\t\t\t@Override\n\t\t\tpublic boolean onCreateActionMode(ActionMode mode, Menu menu) {\n\t\t\t\tselectionMode = true;\n\t\t\t\tcreateMenuItem(menu, DELETE_ACTION_ID, R.string.default_buttons_delete,\n\t\t\t\t\t\tR.drawable.ic_action_delete_light, R.drawable.ic_action_delete_dark,\n\t\t\t\t\t\tMenuItem.SHOW_AS_ACTION_IF_ROOM);\n\t\t\t\tfavoritesToDelete.clear();\n\t\t\t\tgroupsToDelete.clear();\n\t\t\t\tfavouritesAdapter.notifyDataSetInvalidated();\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic boolean onPrepareActionMode(ActionMode mode, Menu menu) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onDestroyActionMode(ActionMode mode) {\n\t\t\t\tselectionMode = false;\n\t\t\t\tfavouritesAdapter.notifyDataSetInvalidated();\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic boolean onActionItemClicked(ActionMode mode, MenuItem item) {\n\t\t\t\tif (item.getItemId() == DELETE_ACTION_ID) {\n\t\t\t\t\tdeleteFavoritesAction();\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t});\n\n\t}","id":8475,"modified_method":"private void enterDeleteMode() {\n\t\tactionMode = getSherlockActivity().startActionMode(new Callback() {\n\n\t\t\t@Override\n\t\t\tpublic boolean onCreateActionMode(ActionMode mode, Menu menu) {\n\t\t\t\tselectionMode = true;\n\t\t\t\tcreateMenuItem(menu, DELETE_ACTION_ID, R.string.default_buttons_delete,\n\t\t\t\t\t\tR.drawable.ic_action_delete_light, R.drawable.ic_action_delete_dark,\n\t\t\t\t\t\tMenuItem.SHOW_AS_ACTION_IF_ROOM);\n\t\t\t\tfavoritesSelected.clear();\n\t\t\t\tgroupsToDelete.clear();\n\t\t\t\tfavouritesAdapter.notifyDataSetInvalidated();\n\t\t\t\tupdateSelectionMode(mode);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic boolean onPrepareActionMode(ActionMode mode, Menu menu) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onDestroyActionMode(ActionMode mode) {\n\t\t\t\tselectionMode = false;\n\t\t\t\tfavouritesAdapter.notifyDataSetInvalidated();\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic boolean onActionItemClicked(ActionMode mode, MenuItem item) {\n\t\t\t\tif (item.getItemId() == DELETE_ACTION_ID) {\n\t\t\t\t\tdeleteFavoritesAction();\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t});\n\n\t}","commit_id":"8f879647509eb6822da027f0c6fa432ac9ea6af9","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tpublic View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {\n\t\t\tView row = convertView;\n\t\t\tif (row == null) {\n\t\t\t\tLayoutInflater inflater = getActivity().getLayoutInflater();\n\t\t\t\trow = inflater.inflate(R.layout.expandable_list_item_category, parent, false);\n\t\t\t\tfixBackgroundRepeat(row);\n\t\t\t}\n\t\t\tadjustIndicator(groupPosition, isExpanded, row);\n\t\t\tTextView label = (TextView) row.findViewById(R.id.category_name);\n\t\t\tfinal String model = getGroup(groupPosition);\n\t\t\tlabel.setText(model);\n\t\t\tfinal CheckBox ch = (CheckBox) row.findViewById(R.id.check_item);\n\n\t\t\tif (selectionMode) {\n\t\t\t\tch.setVisibility(View.VISIBLE);\n\t\t\t\tch.setChecked(groupsToDelete.contains(model));\n\n\t\t\t\tch.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\t\tif (ch.isChecked()) {\n\t\t\t\t\t\t\tgroupsToDelete.add(model);\n\t\t\t\t\t\t\tList<FavouritePoint> fvs = helper.getFavoriteGroups().get(model);\n\t\t\t\t\t\t\tif (fvs != null) {\n\t\t\t\t\t\t\t\tfavoritesToDelete.addAll(fvs);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfavouritesAdapter.notifyDataSetInvalidated();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgroupsToDelete.remove(model);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tch.setVisibility(View.GONE);\n\t\t\t}\n\t\t\treturn row;\n\t\t}","id":8476,"modified_method":"@Override\n\t\tpublic View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {\n\t\t\tView row = convertView;\n\t\t\tif (row == null) {\n\t\t\t\tLayoutInflater inflater = getActivity().getLayoutInflater();\n\t\t\t\trow = inflater.inflate(R.layout.expandable_list_item_category, parent, false);\n\t\t\t\tfixBackgroundRepeat(row);\n\t\t\t}\n\t\t\tadjustIndicator(groupPosition, isExpanded, row);\n\t\t\tTextView label = (TextView) row.findViewById(R.id.category_name);\n\t\t\tfinal String model = getGroup(groupPosition);\n\t\t\tlabel.setText(model);\n\t\t\tfinal CheckBox ch = (CheckBox) row.findViewById(R.id.check_item);\n\n\t\t\tif (selectionMode) {\n\t\t\t\tch.setVisibility(View.VISIBLE);\n\t\t\t\tch.setChecked(groupsToDelete.contains(model));\n\n\t\t\t\tch.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\t\tif (ch.isChecked()) {\n\t\t\t\t\t\t\tgroupsToDelete.add(model);\n\t\t\t\t\t\t\tList<FavouritePoint> fvs = helper.getFavoriteGroups().get(model);\n\t\t\t\t\t\t\tif (fvs != null) {\n\t\t\t\t\t\t\t\tfavoritesSelected.addAll(fvs);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfavouritesAdapter.notifyDataSetInvalidated();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgroupsToDelete.remove(model);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tch.setVisibility(View.GONE);\n\t\t\t}\n\t\t\treturn row;\n\t\t}","commit_id":"8f879647509eb6822da027f0c6fa432ac9ea6af9","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic boolean onChildClick(ExpandableListView parent, View v, int groupPosition, int childPosition, long id) {\n\t\tif (selectionMode) {\n\t\t\tCheckBox ch = (CheckBox) v.findViewById(R.id.check_item);\n\t\t\tFavouritePoint model = favouritesAdapter.getChild(groupPosition, childPosition);\n\t\t\tch.setChecked(!ch.isChecked());\n\t\t\tif (ch.isChecked()) {\n\t\t\t\tfavoritesToDelete.add(model);\n\t\t\t} else {\n\t\t\t\tfavoritesToDelete.remove(model);\n\t\t\t}\n\t\t} else {\n\t\t\tfinal QuickAction qa = new QuickAction(v);\n\t\t\tfinal OsmandSettings settings = getMyApplication().getSettings();\n\t\t\tfinal FavouritePoint point = (FavouritePoint) favouritesAdapter.getChild(groupPosition, childPosition);\n\t\t\tString name = getString(R.string.favorite) + \": \" + point.getName();\n\t\t\tLatLon location = new LatLon(point.getLatitude(), point.getLongitude());\n\t\t\tOnClickListener onshow = new OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\tsettings.SHOW_FAVORITES.set(true);\n\t\t\t\t}\n\t\t\t};\n\t\t\tMapActivityActions.createDirectionsActions(qa, location, point, name, settings.getLastKnownMapZoom(),\n\t\t\t\t\tgetActivity(), true, onshow, false);\n\t\t\tActionItem edit = new ActionItem();\n\t\t\tedit.setIcon(getResources().getDrawable(R.drawable.ic_action_edit_light));\n\t\t\tedit.setTitle(getString(R.string.favourites_context_menu_edit));\n\t\t\tedit.setOnClickListener(new OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\teditPoint(point);\n\t\t\t\t\tqa.dismiss();\n\t\t\t\t}\n\t\t\t});\n\t\t\tqa.addActionItem(edit);\n\n\t\t\tActionItem delete = new ActionItem();\n\t\t\tdelete.setTitle(getString(R.string.favourites_context_menu_delete));\n\t\t\tdelete.setIcon(getResources().getDrawable(R.drawable.ic_action_delete_light));\n\t\t\tdelete.setOnClickListener(new OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\tdeletePoint(point);\n\t\t\t\t\tqa.dismiss();\n\t\t\t\t}\n\t\t\t});\n\t\t\tqa.addActionItem(delete);\n\n\t\t\tqa.show();\n\t\t}\n\t\treturn true;\n\t}","id":8477,"modified_method":"@Override\n\tpublic boolean onChildClick(ExpandableListView parent, View v, int groupPosition, int childPosition, long id) {\n\t\tif (selectionMode) {\n\t\t\tCheckBox ch = (CheckBox) v.findViewById(R.id.check_item);\n\t\t\tFavouritePoint model = favouritesAdapter.getChild(groupPosition, childPosition);\n\t\t\tch.setChecked(!ch.isChecked());\n\t\t\tif (ch.isChecked()) {\n\t\t\t\tfavoritesSelected.add(model);\n\t\t\t} else {\n\t\t\t\tfavoritesSelected.remove(model);\n\t\t\t}\n\t\t\tupdateSelectionMode(actionMode);\n\t\t} else {\n\t\t\tfinal QuickAction qa = new QuickAction(v);\n\t\t\tfinal OsmandSettings settings = getMyApplication().getSettings();\n\t\t\tfinal FavouritePoint point = (FavouritePoint) favouritesAdapter.getChild(groupPosition, childPosition);\n\t\t\tString name = getString(R.string.favorite) + \": \" + point.getName();\n\t\t\tLatLon location = new LatLon(point.getLatitude(), point.getLongitude());\n\t\t\tOnClickListener onshow = new OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\tsettings.SHOW_FAVORITES.set(true);\n\t\t\t\t}\n\t\t\t};\n\t\t\tMapActivityActions.createDirectionsActions(qa, location, point, name, settings.getLastKnownMapZoom(),\n\t\t\t\t\tgetActivity(), true, onshow, false);\n\t\t\tActionItem edit = new ActionItem();\n\t\t\tedit.setIcon(getResources().getDrawable(R.drawable.ic_action_edit_light));\n\t\t\tedit.setTitle(getString(R.string.favourites_context_menu_edit));\n\t\t\tedit.setOnClickListener(new OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\teditPoint(point);\n\t\t\t\t\tqa.dismiss();\n\t\t\t\t}\n\t\t\t});\n\t\t\tqa.addActionItem(edit);\n\n\t\t\tActionItem delete = new ActionItem();\n\t\t\tdelete.setTitle(getString(R.string.favourites_context_menu_delete));\n\t\t\tdelete.setIcon(getResources().getDrawable(R.drawable.ic_action_delete_light));\n\t\t\tdelete.setOnClickListener(new OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\tdeletePoint(point);\n\t\t\t\t\tqa.dismiss();\n\t\t\t\t}\n\t\t\t});\n\t\t\tqa.addActionItem(delete);\n\n\t\t\tqa.show();\n\t\t}\n\t\treturn true;\n\t}","commit_id":"8f879647509eb6822da027f0c6fa432ac9ea6af9","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem item) {\n\t\tif (item.getItemId() == EXPORT_ID) {\n\t\t\texport();\n\t\t\treturn true;\n\t\t} else if (item.getItemId() == IMPORT_ID) {\n\t\t\timportFile();\n\t\t\treturn true;\n\t\t} else if (item.getItemId() == SHARE_ID) {\n\t\t\tshareFavourites();\n\t\t\treturn true;\n\t\t} else if (item.getItemId() == DELETE_ID) {\n\t\t\tenterDeleteMode();\n\t\t\treturn true;\n\t\t} else if (item.getItemId() == DELETE_ACTION_ID) {\n\t\t\tdeleteFavoritesAction();\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn super.onOptionsItemSelected(item);\n\t\t}\n\t}","id":8478,"modified_method":"@Override\n\tpublic boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem item) {\n\t\tif (item.getItemId() == EXPORT_ID) {\n\t\t\texport();\n\t\t\treturn true;\n\t\t} else if (item.getItemId() == IMPORT_ID) {\n\t\t\timportFile();\n\t\t\treturn true;\n\t\t} else if (item.getItemId() == SELECT_DESTINATIONS_ID) {\n\t\t\tselectDestinations();\n\t\t\treturn true;\n\t\t} else if (item.getItemId() == SHARE_ID) {\n\t\t\tshareFavourites();\n\t\t\treturn true;\n\t\t} else if (item.getItemId() == DELETE_ID) {\n\t\t\tenterDeleteMode();\n\t\t\treturn true;\n\t\t} else if (item.getItemId() == DELETE_ACTION_ID) {\n\t\t\tdeleteFavoritesAction();\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn super.onOptionsItemSelected(item);\n\t\t}\n\t}","commit_id":"8f879647509eb6822da027f0c6fa432ac9ea6af9","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n\t\tMenuItem mi = createMenuItem(menu, SEARCH_ID, R.string.export_fav, R.drawable.ic_action_search_light,\n\t\t\t\tR.drawable.ic_action_search_dark, MenuItem.SHOW_AS_ACTION_ALWAYS\n\t\t\t\t\t\t| MenuItem.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW);\n\t\tsearchView = new com.actionbarsherlock.widget.SearchView(getActivity());\n\t\tmi.setActionView(searchView);\n\t\tsearchView.setOnQueryTextListener(new OnQueryTextListener() {\n\n\n\t\t\t@Override\n\t\t\tpublic boolean onQueryTextSubmit(String query) {\n\t\t\t\tfavouritesAdapter.getFilter().filter(query);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic boolean onQueryTextChange(String newText) {\n\t\t\t\tfavouritesAdapter.getFilter().filter(newText);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n//\t\tmi.setOnActionExpandListener(new OnActionExpandListener() {\n//\t\t\t\n//\t\t\t@Override\n//\t\t\tpublic boolean onMenuItemActionExpand(MenuItem item) {\n//\t\t\t\treturn true;\n//\t\t\t}\n//\t\t\t\n//\t\t\t@Override\n//\t\t\tpublic boolean onMenuItemActionCollapse(MenuItem item) {\n//\t\t\t\treturn true;\n//\t\t\t}\n//\t\t});\n\t\tif (!mi.isActionViewExpanded()) {\n\t\t\tcreateMenuItem(menu, EXPORT_ID, R.string.export_fav, R.drawable.ic_action_gsave_light,\n\t\t\t\t\tR.drawable.ic_action_gsave_dark, MenuItem.SHOW_AS_ACTION_IF_ROOM);\n\t\t\tcreateMenuItem(menu, SHARE_ID, R.string.share_fav, R.drawable.ic_action_gshare_light,\n\t\t\t\t\tR.drawable.ic_action_gshare_dark, MenuItem.SHOW_AS_ACTION_IF_ROOM);\n\t\t\tcreateMenuItem(menu, IMPORT_ID, R.string.import_fav, R.drawable.ic_action_grefresh_light,\n\t\t\t\t\tR.drawable.ic_action_grefresh_dark, MenuItem.SHOW_AS_ACTION_IF_ROOM\n\t\t\t\t\t\t\t| MenuItem.SHOW_AS_ACTION_WITH_TEXT);\n\t\t\tcreateMenuItem(menu, DELETE_ID, R.string.default_buttons_delete, R.drawable.ic_action_delete_light,\n\t\t\t\t\tR.drawable.ic_action_delete_dark, MenuItem.SHOW_AS_ACTION_IF_ROOM);\n\t\t}\n\t}","id":8479,"modified_method":"@Override\n\tpublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n\t\tMenuItem mi = createMenuItem(menu, SEARCH_ID, R.string.export_fav, R.drawable.ic_action_search_light,\n\t\t\t\tR.drawable.ic_action_search_dark, MenuItem.SHOW_AS_ACTION_ALWAYS\n\t\t\t\t\t\t| MenuItem.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW);\n\t\tsearchView = new com.actionbarsherlock.widget.SearchView(getActivity());\n\t\tmi.setActionView(searchView);\n\t\tsearchView.setOnQueryTextListener(new OnQueryTextListener() {\n\n\n\t\t\t@Override\n\t\t\tpublic boolean onQueryTextSubmit(String query) {\n\t\t\t\tfavouritesAdapter.getFilter().filter(query);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic boolean onQueryTextChange(String newText) {\n\t\t\t\tfavouritesAdapter.getFilter().filter(newText);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n//\t\tmi.setOnActionExpandListener(new OnActionExpandListener() {\n//\t\t\t\n//\t\t\t@Override\n//\t\t\tpublic boolean onMenuItemActionExpand(MenuItem item) {\n//\t\t\t\treturn true;\n//\t\t\t}\n//\t\t\t\n//\t\t\t@Override\n//\t\t\tpublic boolean onMenuItemActionCollapse(MenuItem item) {\n//\t\t\t\treturn true;\n//\t\t\t}\n//\t\t});\n\t\tif (!mi.isActionViewExpanded()) {\n\t\t\tcreateMenuItem(menu, SHARE_ID, R.string.share_fav, R.drawable.ic_action_gshare_light,\n\t\t\t\t\tR.drawable.ic_action_gshare_dark, MenuItem.SHOW_AS_ACTION_IF_ROOM);\n\t\t\tcreateMenuItem(menu, SELECT_DESTINATIONS_ID, R.string.select_destination_and_intermediate_points, R.drawable.ic_action_flage_light,\n\t\t\t\t\tR.drawable.ic_action_flage_dark, MenuItem.SHOW_AS_ACTION_IF_ROOM);\n\t\t\tcreateMenuItem(menu, DELETE_ID, R.string.default_buttons_delete, R.drawable.ic_action_delete_light,\n\t\t\t\t\tR.drawable.ic_action_delete_dark, MenuItem.SHOW_AS_ACTION_IF_ROOM);\n\t\t\tcreateMenuItem(menu, EXPORT_ID, R.string.export_fav, R.drawable.ic_action_gsave_light,\n\t\t\t\t\tR.drawable.ic_action_gsave_dark, MenuItem.SHOW_AS_ACTION_IF_ROOM);\n\t\t\tcreateMenuItem(menu, IMPORT_ID, R.string.import_fav, R.drawable.ic_action_grefresh_light,\n\t\t\t\t\tR.drawable.ic_action_grefresh_dark, MenuItem.SHOW_AS_ACTION_IF_ROOM\n\t\t\t\t\t\t\t| MenuItem.SHOW_AS_ACTION_WITH_TEXT);\n\t\t\t\n\t\t}\n\t}","commit_id":"8f879647509eb6822da027f0c6fa432ac9ea6af9","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void deleteFavorites() {\n\t\tnew AsyncTask<Void, Object, String>() {\n\n\t\t\t@Override\n\t\t\tprotected void onPreExecute() {\n\t\t\t\tshowProgressBar();\n\t\t\t};\n\n\t\t\t@Override\n\t\t\tprotected void onPostExecute(String result) {\n\t\t\t\thideProgressBar();\n\t\t\t\tfavouritesAdapter.synchronizeGroups();\n\t\t\t\tfavouritesAdapter.sort(favoritesComparator);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tprotected void onProgressUpdate(Object... values) {\n\t\t\t\tfor (Object o : values) {\n\t\t\t\t\tif (o instanceof FavouritePoint) {\n\t\t\t\t\t\tfavouritesAdapter.deleteFavoritePoint((FavouritePoint) o);\n\t\t\t\t\t} else if (o instanceof String) {\n\t\t\t\t\t\tfavouritesAdapter.deleteCategory((String) o);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tprotected String doInBackground(Void... params) {\n\t\t\t\tfor (FavouritePoint fp : favoritesToDelete) {\n\t\t\t\t\thelper.deleteFavourite(fp);\n\t\t\t\t\tpublishProgress(fp);\n\t\t\t\t}\n\t\t\t\tfavoritesToDelete.clear();\n\t\t\t\tfor (String group : groupsToDelete) {\n\t\t\t\t\thelper.deleteGroup(group);\n\t\t\t\t\tpublishProgress(group);\n\t\t\t\t}\n\t\t\t\tgroupsToDelete.clear();\n\t\t\t\treturn getString(R.string.favourites_delete_multiple_succesful);\n\t\t\t}\n\n\t\t}.execute();\n\n\t}","id":8480,"modified_method":"private void deleteFavorites() {\n\t\tnew AsyncTask<Void, Object, String>() {\n\n\t\t\t@Override\n\t\t\tprotected void onPreExecute() {\n\t\t\t\tshowProgressBar();\n\t\t\t};\n\n\t\t\t@Override\n\t\t\tprotected void onPostExecute(String result) {\n\t\t\t\thideProgressBar();\n\t\t\t\tfavouritesAdapter.synchronizeGroups();\n\t\t\t\tfavouritesAdapter.sort(favoritesComparator);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tprotected void onProgressUpdate(Object... values) {\n\t\t\t\tfor (Object o : values) {\n\t\t\t\t\tif (o instanceof FavouritePoint) {\n\t\t\t\t\t\tfavouritesAdapter.deleteFavoritePoint((FavouritePoint) o);\n\t\t\t\t\t} else if (o instanceof String) {\n\t\t\t\t\t\tfavouritesAdapter.deleteCategory((String) o);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tprotected String doInBackground(Void... params) {\n\t\t\t\tfor (FavouritePoint fp : favoritesSelected) {\n\t\t\t\t\thelper.deleteFavourite(fp);\n\t\t\t\t\tpublishProgress(fp);\n\t\t\t\t}\n\t\t\t\tfavoritesSelected.clear();\n\t\t\t\tfor (String group : groupsToDelete) {\n\t\t\t\t\thelper.deleteGroup(group);\n\t\t\t\t\tpublishProgress(group);\n\t\t\t\t}\n\t\t\t\tgroupsToDelete.clear();\n\t\t\t\treturn getString(R.string.favourites_delete_multiple_succesful);\n\t\t\t}\n\n\t\t}.execute();\n\n\t}","commit_id":"8f879647509eb6822da027f0c6fa432ac9ea6af9","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic boolean onSingleTap(PointF point, RotatedTileBox tileBox) {\n\t\tif(tileBox.getZoom() < 11) {\n\t\t\treturn false;\n\t\t}\n\t\tList<WptPt> favs = new ArrayList<WptPt>();\n\t\tgetWptFromPoint(tileBox, point, favs);\n\t\tif(!favs.isEmpty() && (tileBox.getZoom() > 14 || favs.size() < 6)){\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tint i = 0;\n\t\t\tfor(WptPt fav : favs) {\n\t\t\t\tif (i++ > 0) {\n\t\t\t\t\tres.append(\"\\n\\n\");\n\t\t\t\t}\n\t\t\t\tres.append(view.getContext().getString(R.string.gpx_wpt) + \" : \" + fav.name);  //$NON-NLS-1$\n\t\t\t}\n\t\t\tAccessibleToast.makeText(view.getContext(), res.toString(), Toast.LENGTH_LONG).show();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}","id":8481,"modified_method":"@Override\n\tpublic boolean onSingleTap(PointF point, RotatedTileBox tileBox) {\n\t\tList<WptPt> gpxPoints = new ArrayList<WptPt>();\n\t\tgetWptFromPoint(tileBox, point, gpxPoints);\n\t\tif(!gpxPoints.isEmpty() && (tileBox.getZoom() > 14 || gpxPoints.size() < 6)){\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tint i = 0;\n\t\t\tfor(WptPt fav : gpxPoints) {\n\t\t\t\tif (i++ > 0) {\n\t\t\t\t\tres.append(\"\\n\\n\");\n\t\t\t\t}\n\t\t\t\tres.append(view.getContext().getString(R.string.gpx_wpt) + \" : \" + fav.name);  //$NON-NLS-1$\n\t\t\t}\n\t\t\tAccessibleToast.makeText(view.getContext(), res.toString(), Toast.LENGTH_LONG).show();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}","commit_id":"8f879647509eb6822da027f0c6fa432ac9ea6af9","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public static void openIntermediatePointsDialog(final MapActivity activity,\n\t\t\tfinal OsmandApplication app, final boolean changeOrder){\n\t\tTargetPointsHelper targets = app.getTargetPointsHelper();\n\t\tfinal List<LatLon> intermediates = targets.getIntermediatePointsWithTarget();\n\t\tfinal TIntArrayList originalPositions = new TIntArrayList(intermediates.size());\n\t\tfor(int j = 1; j <= intermediates.size(); j++) {\n\t\t\toriginalPositions.add(j);\n\t\t}\n\t\tfinal List<String> names = targets.getIntermediatePointNamesWithTarget();\n\t\tfinal boolean[] checkedIntermediates = new boolean[intermediates.size()];\n\t\tArrays.fill(checkedIntermediates, true);\n\t\tfinal ArrayAdapter<LatLon> listadapter = getListAdapter(app, activity, changeOrder, intermediates, originalPositions, names, checkedIntermediates);\n\t\tListView lv = new ListView(activity);\n\t\tView contentView = lv;\n\t\tfinal ProgressBar pb = new ProgressBar(activity);\n\t\tpb.setVisibility(View.GONE);\n\t\tfinal TextView textInfo = new TextView(activity);\n\t\ttextInfo.setText(R.string.intermediate_items_sort_return);\n\t\ttextInfo.setVisibility(View.GONE);\n\t\t\n\t\tif (changeOrder) {\n\t\t\tLinearLayout ll = new LinearLayout(activity);\n\t\t\tll.setOrientation(LinearLayout.VERTICAL);\n\t\t\tll.addView(lv);\n\t\t\tll.addView(pb);\n\t\t\tll.addView(textInfo);\n\t\t\tcontentView = ll;\n\t\t\t\n//\t\t\tlv.addFooterView(pb);\n//\t\t\tlv.addFooterView(textInfo);\n\t\t}\n\t\tlv.setAdapter(listadapter);\n\t\tlv.setOnItemClickListener(new OnItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n\t\t\t\tif (activity instanceof MapActivity) {\n\t\t\t\t\t// AnimateDraggingMapThread thread = mapActivity.getMapView().getAnimatedDraggingThread();\n\t\t\t\t\tLatLon pointToNavigate = intermediates.get(position);\n\t\t\t\t\tint fZoom = ((MapActivity) activity).getMapView().getZoom() < 15 ? 15 : ((MapActivity) activity).getMapView().getZoom();\n\t\t\t\t\t// thread.startMoving(pointToNavigate.getLatitude(), pointToNavigate.getLongitude(), fZoom, true);\n\t\t\t\t\t((MapActivity) activity).getMapView().setIntZoom(fZoom);\n\t\t\t\t\t((MapActivity) activity).getMapView().setLatLon(pointToNavigate.getLatitude(), pointToNavigate.getLongitude());\n\t\t\t\t\tlistadapter.notifyDataSetInvalidated();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tBuilder builder = new AccessibleAlertBuilder(activity);\n\t\tbuilder.setView(contentView);\n\t\tbuilder.setInverseBackgroundForced(true);\n\t\tlv.setBackgroundColor(Color.WHITE);\n\t\tbuilder.setPositiveButton(R.string.default_buttons_ok, new DialogInterface.OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\tif(changeOrder) {\n\t\t\t\t\tcommitChangePointsOrder(app, intermediates, names);\n\t\t\t\t} else {\n\t\t\t\t\tcommitPointsRemoval(app, checkedIntermediates);\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\t\tif (!changeOrder && intermediates.size()>1) {\n\t\t\tbuilder.setNeutralButton(R.string.intermediate_points_change_order, new DialogInterface.OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\topenIntermediatePointsDialog(activity, app, true);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if(intermediates.size()>1) {\n\t\t\tbuilder.setNeutralButton(R.string.intermediate_items_sort_by_distance,   new Dialog.OnClickListener() {\n                @Override\n                public void onClick(DialogInterface d, int which) {\n                    //Do nothing here. We override the onclick\n                }\n            });\n\t\t}\n\t\tAlertDialog dlg = builder.create();\n\t\tif (changeOrder) {\n\t\t\tapplySortTargets(dlg, activity, intermediates, originalPositions, names, listadapter, pb, textInfo);\n\t\t}\n\t\tdlg.show();\n\t}","id":8482,"modified_method":"public static void openIntermediatePointsDialog(final Activity activity,\n\t\t\tfinal OsmandApplication app, final boolean changeOrder){\n\t\tTargetPointsHelper targets = app.getTargetPointsHelper();\n\t\tfinal List<LatLon> intermediates = targets.getIntermediatePointsWithTarget();\n\t\tfinal TIntArrayList originalPositions = new TIntArrayList(intermediates.size());\n\t\tfor(int j = 1; j <= intermediates.size(); j++) {\n\t\t\toriginalPositions.add(j);\n\t\t}\n\t\tfinal List<String> names = targets.getIntermediatePointNamesWithTarget();\n\t\tfinal boolean[] checkedIntermediates = new boolean[intermediates.size()];\n\t\tArrays.fill(checkedIntermediates, true);\n\t\tfinal ArrayAdapter<LatLon> listadapter = getListAdapter(app, activity, changeOrder, intermediates, originalPositions, names, checkedIntermediates);\n\t\tListView lv = new ListView(activity);\n\t\tView contentView = lv;\n\t\tfinal ProgressBar pb = new ProgressBar(activity);\n\t\tpb.setVisibility(View.GONE);\n\t\tfinal TextView textInfo = new TextView(activity);\n\t\ttextInfo.setText(R.string.intermediate_items_sort_return);\n\t\ttextInfo.setVisibility(View.GONE);\n\t\t\n\t\tif (changeOrder) {\n\t\t\tLinearLayout ll = new LinearLayout(activity);\n\t\t\tll.setOrientation(LinearLayout.VERTICAL);\n\t\t\tll.addView(lv);\n\t\t\tll.addView(pb);\n\t\t\tll.addView(textInfo);\n\t\t\tcontentView = ll;\n\t\t\t\n//\t\t\tlv.addFooterView(pb);\n//\t\t\tlv.addFooterView(textInfo);\n\t\t}\n\t\tlv.setAdapter(listadapter);\n\t\tlv.setOnItemClickListener(new OnItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n\t\t\t\tif (activity instanceof MapActivity) {\n\t\t\t\t\t// AnimateDraggingMapThread thread = mapActivity.getMapView().getAnimatedDraggingThread();\n\t\t\t\t\tLatLon pointToNavigate = intermediates.get(position);\n\t\t\t\t\tint fZoom = ((MapActivity) activity).getMapView().getZoom() < 15 ? 15 : ((MapActivity) activity).getMapView().getZoom();\n\t\t\t\t\t// thread.startMoving(pointToNavigate.getLatitude(), pointToNavigate.getLongitude(), fZoom, true);\n\t\t\t\t\t((MapActivity) activity).getMapView().setIntZoom(fZoom);\n\t\t\t\t\t((MapActivity) activity).getMapView().setLatLon(pointToNavigate.getLatitude(), pointToNavigate.getLongitude());\n\t\t\t\t\tlistadapter.notifyDataSetInvalidated();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tBuilder builder = new AccessibleAlertBuilder(activity);\n\t\tbuilder.setView(contentView);\n\t\tbuilder.setInverseBackgroundForced(true);\n\t\tlv.setBackgroundColor(Color.WHITE);\n\t\tbuilder.setPositiveButton(R.string.default_buttons_ok, new DialogInterface.OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\tif(changeOrder) {\n\t\t\t\t\tcommitChangePointsOrder(app, intermediates, names);\n\t\t\t\t} else {\n\t\t\t\t\tcommitPointsRemoval(app, checkedIntermediates);\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\t\tif (!changeOrder && intermediates.size()>1) {\n\t\t\tbuilder.setNeutralButton(R.string.intermediate_points_change_order, new DialogInterface.OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\topenIntermediatePointsDialog(activity, app, true);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if(intermediates.size()>1) {\n\t\t\tbuilder.setNeutralButton(R.string.intermediate_items_sort_by_distance,   new Dialog.OnClickListener() {\n                @Override\n                public void onClick(DialogInterface d, int which) {\n                    //Do nothing here. We override the onclick\n                }\n            });\n\t\t}\n\t\tAlertDialog dlg = builder.create();\n\t\tif (changeOrder) {\n\t\t\tapplySortTargets(dlg, activity, intermediates, originalPositions, names, listadapter, pb, textInfo);\n\t\t}\n\t\tdlg.show();\n\t}","commit_id":"8f879647509eb6822da027f0c6fa432ac9ea6af9","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private static void applySortTargets(AlertDialog dlg, final MapActivity activity, final List<LatLon> intermediates,\n\t\t\tfinal TIntArrayList originalPositions, \n\t\t\tfinal List<String> names, final ArrayAdapter<LatLon> listadapter, final ProgressBar pb, final TextView textInfo) {\n\t\tdlg.setOnShowListener(new OnShowListener() {\n\t\t\t@Override\n\t\t\tpublic void onShow(DialogInterface dialog) {\n\t\t\t\t((AlertDialog) dialog).getButton(AlertDialog.BUTTON_NEUTRAL).setOnClickListener(new View.OnClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onClick(View v) {\n\n\t\t\t\t\t\tnew AsyncTask<Void, Void, int[]>() {\n\n\t\t\t\t\t\t\tprotected void onPreExecute() {\n\t\t\t\t\t\t\t\tpb.setVisibility(View.VISIBLE);\n\t\t\t\t\t\t\t\ttextInfo.setVisibility(View.VISIBLE);\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tprotected int[] doInBackground(Void[] params) {\n\t\t\t\t\t\t\t\tArrayList<LatLon> lt = new ArrayList<LatLon>(intermediates);\n\t\t\t\t\t\t\t\tLatLon start = new LatLon(activity.getMapView().getLatitude(), activity.getMapView().getLongitude());\n\t\t\t\t\t\t\t\tLatLon end = lt.remove(lt.size() - 1);\n\t\t\t\t\t\t\t\treturn new TspAnt().readGraph(lt, start, end).solve();\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tprotected void onPostExecute(int[] result) {\n\t\t\t\t\t\t\t\tpb.setVisibility(View.GONE);\n\t\t\t\t\t\t\t\tList<LatLon> alocs = new ArrayList<LatLon>();\n\t\t\t\t\t\t\t\tList<String> anames = new ArrayList<String>();\n\t\t\t\t\t\t\t\tTIntArrayList newOriginalPositions = new TIntArrayList();\n\t\t\t\t\t\t\t\tfor (int i = 0; i < result.length; i++) {\n\t\t\t\t\t\t\t\t\tif (result[i] > 0) {\n\t\t\t\t\t\t\t\t\t\tLatLon loc = intermediates.get(result[i] - 1);\n\t\t\t\t\t\t\t\t\t\talocs.add(loc);\n\t\t\t\t\t\t\t\t\t\tnewOriginalPositions.add(originalPositions.get(intermediates.indexOf(loc)));\n\t\t\t\t\t\t\t\t\t\tanames.add(names.get(result[i] - 1));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tintermediates.clear();\n\t\t\t\t\t\t\t\tintermediates.addAll(alocs);\n\t\t\t\t\t\t\t\tnames.clear();\n\t\t\t\t\t\t\t\tnames.addAll(anames);\n\t\t\t\t\t\t\t\toriginalPositions.clear();\n\t\t\t\t\t\t\t\toriginalPositions.addAll(newOriginalPositions);\n\t\t\t\t\t\t\t\tlistadapter.notifyDataSetChanged();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}.execute(new Void[0]);\n\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\t\t});\n\t}","id":8483,"modified_method":"private static void applySortTargets(AlertDialog dlg, final Activity activity, final List<LatLon> intermediates,\n\t\t\tfinal TIntArrayList originalPositions, \n\t\t\tfinal List<String> names, final ArrayAdapter<LatLon> listadapter, final ProgressBar pb, final TextView textInfo) {\n\t\tdlg.setOnShowListener(new OnShowListener() {\n\t\t\t@Override\n\t\t\tpublic void onShow(DialogInterface dialog) {\n\t\t\t\t((AlertDialog) dialog).getButton(AlertDialog.BUTTON_NEUTRAL).setOnClickListener(new View.OnClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onClick(View v) {\n\n\t\t\t\t\t\tnew AsyncTask<Void, Void, int[]>() {\n\n\t\t\t\t\t\t\tprotected void onPreExecute() {\n\t\t\t\t\t\t\t\tpb.setVisibility(View.VISIBLE);\n\t\t\t\t\t\t\t\ttextInfo.setVisibility(View.VISIBLE);\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tprotected int[] doInBackground(Void[] params) {\n\t\t\t\t\t\t\t\tArrayList<LatLon> lt = new ArrayList<LatLon>(intermediates);\n\t\t\t\t\t\t\t\tLatLon start ;\n\t\t\t\t\t\t\t\tif(activity instanceof MapActivity) {\n\t\t\t\t\t\t\t\t\tstart = new LatLon(((MapActivity) activity).getMapView().getLatitude(), ((MapActivity) activity).getMapView().getLongitude());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tstart = lt.get(0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tLatLon end = lt.remove(lt.size() - 1);\n\t\t\t\t\t\t\t\treturn new TspAnt().readGraph(lt, start, end).solve();\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tprotected void onPostExecute(int[] result) {\n\t\t\t\t\t\t\t\tpb.setVisibility(View.GONE);\n\t\t\t\t\t\t\t\tList<LatLon> alocs = new ArrayList<LatLon>();\n\t\t\t\t\t\t\t\tList<String> anames = new ArrayList<String>();\n\t\t\t\t\t\t\t\tTIntArrayList newOriginalPositions = new TIntArrayList();\n\t\t\t\t\t\t\t\tfor (int i = 0; i < result.length; i++) {\n\t\t\t\t\t\t\t\t\tif (result[i] > 0) {\n\t\t\t\t\t\t\t\t\t\tLatLon loc = intermediates.get(result[i] - 1);\n\t\t\t\t\t\t\t\t\t\talocs.add(loc);\n\t\t\t\t\t\t\t\t\t\tnewOriginalPositions.add(originalPositions.get(intermediates.indexOf(loc)));\n\t\t\t\t\t\t\t\t\t\tanames.add(names.get(result[i] - 1));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tintermediates.clear();\n\t\t\t\t\t\t\t\tintermediates.addAll(alocs);\n\t\t\t\t\t\t\t\tnames.clear();\n\t\t\t\t\t\t\t\tnames.addAll(anames);\n\t\t\t\t\t\t\t\toriginalPositions.clear();\n\t\t\t\t\t\t\t\toriginalPositions.addAll(newOriginalPositions);\n\t\t\t\t\t\t\t\tlistadapter.notifyDataSetChanged();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}.execute(new Void[0]);\n\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\t\t});\n\t}","commit_id":"8f879647509eb6822da027f0c6fa432ac9ea6af9","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void onCreate(Bundle icicle) {\n        //This has to be called before setContentView and you must use the\n        //class in com.actionbarsherlock.view and NOT android.view\n        requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);\n        getSherlock().setUiOptions(ActivityInfo.UIOPTION_SPLIT_ACTION_BAR_WHEN_NARROW);\n\t\tsuper.onCreate(icicle);\n\n\n\t\tsetContentView(R.layout.tab_content);\n\t\tgetSupportActionBar().setTitle(R.string.favourites_activity);\n\t\tsetSupportProgressBarIndeterminateVisibility(false);\n        TabHost tabHost = (TabHost)findViewById(android.R.id.tabhost);\n        tabHost.setup();\n\n        OsmandSettings settings = ((OsmandApplication) getApplication()).getSettings();\n        Integer tab = settings.FAVORITES_TAB.get();\n        ViewPager mViewPager = (ViewPager)findViewById(R.id.pager);\n        mTabsAdapter = new TabsAdapter(this, tabHost,  mViewPager, settings);\n\t\tmTabsAdapter.addTab(tabHost.newTabSpec(FAVOURITES_INFO).setIndicator(getString(R.string.my_favorites)),\n\t\t\t\tFavouritesTreeFragment.class, null);\n\t\tmTabsAdapter.addTab(tabHost.newTabSpec(TRACKS).setIndicator(getString(R.string.my_tracks)),\n\t\t\t\tFavouritesTreeFragment.class, null);\n\t\tmTabsAdapter.addTab(tabHost.newTabSpec(SELECTED_TRACK).setIndicator(getString(R.string.selected_track)),\n\t\t\t\tFavouritesTreeFragment.class, null);\n\t\ttabHost.setCurrentTab(tab);\n\t\t\n\t\t// getSupportActionBar().setIcon(R.drawable.tab_search_favorites_icon);\n\n\t}","id":8484,"modified_method":"@Override\n\tpublic void onCreate(Bundle icicle) {\n        //This has to be called before setContentView and you must use the\n        //class in com.actionbarsherlock.view and NOT android.view\n        requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);\n//        getSherlock().setUiOptions(ActivityInfo.UIOPTION_SPLIT_ACTION_BAR_WHEN_NARROW);\n\t\tsuper.onCreate(icicle);\n\n\n\t\tsetContentView(R.layout.tab_content);\n\t\tsetSupportProgressBarIndeterminateVisibility(false);\n        TabHost tabHost = (TabHost)findViewById(android.R.id.tabhost);\n        tabHost.setup();\n\n        OsmandSettings settings = ((OsmandApplication) getApplication()).getSettings();\n        Integer tab = settings.FAVORITES_TAB.get();\n        ViewPager mViewPager = (ViewPager)findViewById(R.id.pager);\n        mTabsAdapter = new TabsAdapter(this, tabHost,  mViewPager, settings);\n\t\tmTabsAdapter.addTab(tabHost.newTabSpec(FAVOURITES_INFO).setIndicator(getString(R.string.my_favorites)),\n\t\t\t\tFavouritesTreeFragment.class, null);\n\t\tmTabsAdapter.addTab(tabHost.newTabSpec(TRACKS).setIndicator(getString(R.string.my_tracks)),\n\t\t\t\tFavouritesTreeFragment.class, null);\n\t\tmTabsAdapter.addTab(tabHost.newTabSpec(SELECTED_TRACK).setIndicator(getString(R.string.selected_track)),\n\t\t\t\tFavouritesTreeFragment.class, null);\n\t\ttabHost.setCurrentTab(tab);\n\t\t\n\t\tgetSupportActionBar().setDisplayHomeAsUpEnabled(true);\n\t\tgetSupportActionBar().setTitle(\"\");\n\t\t// getSupportActionBar().setIcon(R.drawable.tab_search_favorites_icon);\n\n\t}","commit_id":"08a6083d6683ca56a67692d5b48cd350f24af997","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n\t\tcreateMenuItem(menu, EXPORT_ID, R.string.export_fav, R.drawable.ic_action_gsave_light, R.drawable.ic_action_gsave_dark,\n\t\t\t\tMenuItem.SHOW_AS_ACTION_IF_ROOM | MenuItem.SHOW_AS_ACTION_WITH_TEXT);\n\t\tcreateMenuItem(menu, SHARE_ID, R.string.share_fav, R.drawable.ic_action_gshare_light, R.drawable.ic_action_gshare_dark,\n\t\t\t\tMenuItem.SHOW_AS_ACTION_IF_ROOM | MenuItem.SHOW_AS_ACTION_WITH_TEXT);\n\t\tcreateMenuItem(menu, IMPORT_ID, R.string.import_fav, R.drawable.ic_action_grefresh_light, R.drawable.ic_action_grefresh_dark,\n\t\t\t\tMenuItem.SHOW_AS_ACTION_IF_ROOM | MenuItem.SHOW_AS_ACTION_WITH_TEXT);\n\t\tcreateMenuItem(menu, DELETE_ID, R.string.default_buttons_delete, R.drawable.ic_action_delete_light, R.drawable.ic_action_delete_dark,\n\t\t\t\tMenuItem.SHOW_AS_ACTION_IF_ROOM | MenuItem.SHOW_AS_ACTION_WITH_TEXT) ;\n\t}","id":8485,"modified_method":"@Override\n\tpublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n\t\tMenuItem mi = createMenuItem(menu, SEARCH_ID, R.string.export_fav, R.drawable.ic_action_search_light,\n\t\t\t\tR.drawable.ic_action_search_dark, MenuItem.SHOW_AS_ACTION_ALWAYS\n\t\t\t\t\t\t| MenuItem.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW);\n\t\tsearchView = new com.actionbarsherlock.widget.SearchView(getActivity());\n\t\tmi.setActionView(searchView);\n\t\tsearchView.setOnQueryTextListener(new OnQueryTextListener() {\n\n\t\t\t@Override\n\t\t\tpublic boolean onQueryTextSubmit(String query) {\n\t\t\t\tfavouritesAdapter.getFilter().filter(query);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic boolean onQueryTextChange(String newText) {\n\t\t\t\tfavouritesAdapter.getFilter().filter(newText);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\tcreateMenuItem(menu, EXPORT_ID, R.string.export_fav, R.drawable.ic_action_gsave_light,\n\t\t\t\tR.drawable.ic_action_gsave_dark, MenuItem.SHOW_AS_ACTION_IF_ROOM);\n\t\tcreateMenuItem(menu, SHARE_ID, R.string.share_fav, R.drawable.ic_action_gshare_light,\n\t\t\t\tR.drawable.ic_action_gshare_dark, MenuItem.SHOW_AS_ACTION_IF_ROOM);\n\t\tcreateMenuItem(menu, IMPORT_ID, R.string.import_fav, R.drawable.ic_action_grefresh_light,\n\t\t\t\tR.drawable.ic_action_grefresh_dark, MenuItem.SHOW_AS_ACTION_IF_ROOM | MenuItem.SHOW_AS_ACTION_WITH_TEXT);\n\t\tcreateMenuItem(menu, DELETE_ID, R.string.default_buttons_delete, R.drawable.ic_action_delete_light,\n\t\t\t\tR.drawable.ic_action_delete_dark, MenuItem.SHOW_AS_ACTION_IF_ROOM);\n\t}","commit_id":"08a6083d6683ca56a67692d5b48cd350f24af997","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n\t\tmenu.clear();\n\t\tMenuItem mi = createMenuItem(menu, SEARCH_ID, R.string.search_poi_filter, R.drawable.ic_action_search_dark,\n\t\t\t\tR.drawable.ic_action_search_dark, MenuItemCompat.SHOW_AS_ACTION_ALWAYS | MenuItemCompat.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW);\n\t\tsearchView = new SearchView(getActivity());\n\t\tFavoritesActivity.updateSearchView(getActivity(), searchView);\n\t\tMenuItemCompat.setActionView(mi, searchView);\n\t\tsearchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onQueryTextSubmit(String query) {\n\t\t\t\tfavouritesAdapter.getFilter().filter(query);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic boolean onQueryTextChange(String newText) {\n\t\t\t\tfavouritesAdapter.getFilter().filter(newText);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\tMenuItemCompat.setOnActionExpandListener(mi, new MenuItemCompat.OnActionExpandListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemActionExpand(MenuItem item) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemActionCollapse(MenuItem item) {\n\t\t\t\tfavouritesAdapter.setFilterResults(null);\n\t\t\t\tfavouritesAdapter.synchronizeGroups();\n\t\t\t\tfavouritesAdapter.notifyDataSetChanged();\n\t\t\t\t// Needed to hide intermediate progress bar after closing action mode\n\t\t\t\tnew Handler().postDelayed(new Runnable() {\n\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\thideProgressBar();\n\t\t\t\t\t}\n\t\t\t\t}, 100);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tif (AndroidUiHelper.isOrientationPortrait(getActivity())) {\n\t\t\tmenu = ((FavoritesActivity) getActivity()).getClearToolbar(true).getMenu();\n\t\t} else {\n\t\t\t((FavoritesActivity) getActivity()).getClearToolbar(false);\n\t\t}\n\n\n\n\t\tif (!MenuItemCompat.isActionViewExpanded(mi)) {\n\t\t\tcreateMenuItem(menu, SHARE_ID, R.string.shared_string_share, R.drawable.ic_action_gshare_dark,\n\t\t\t\t\tR.drawable.ic_action_gshare_dark, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\t\t\tcreateMenuItem(menu, SELECT_DESTINATIONS_ID, R.string.select_destination_and_intermediate_points, R.drawable.ic_action_intermediate,\n\t\t\t\t\tR.drawable.ic_action_intermediate, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\t\t\tcreateMenuItem(menu, DELETE_ID, R.string.shared_string_delete, R.drawable.ic_action_delete_dark,\n\t\t\t\t\tR.drawable.ic_action_delete_dark, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n//\t\t\tcreateMenuItem(menu, EXPORT_ID, R.string.shared_string_export, R.drawable.ic_action_gsave_light,\n//\t\t\t\t\tR.drawable.ic_action_gsave_dark, MenuItem.SHOW_AS_ACTION_IF_ROOM);\n\t\t\t\n\t\t}\n\t}","id":8486,"modified_method":"@Override\n\tpublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n\t\tmenu.clear();\n\t\tMenuItem mi = createMenuItem(menu, SEARCH_ID, R.string.search_poi_filter, R.drawable.ic_action_search_dark,\n\t\t\t\tR.drawable.ic_action_search_dark, MenuItemCompat.SHOW_AS_ACTION_ALWAYS | MenuItemCompat.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW);\n\t\tsearchView = new SearchView(getActivity());\n\t\tFavoritesActivity.updateSearchView(getActivity(), searchView);\n\t\tMenuItemCompat.setActionView(mi, searchView);\n\t\tsearchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onQueryTextSubmit(String query) {\n\t\t\t\tfavouritesAdapter.getFilter().filter(query);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic boolean onQueryTextChange(String newText) {\n\t\t\t\tfavouritesAdapter.getFilter().filter(newText);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\tMenuItemCompat.setOnActionExpandListener(mi, new MenuItemCompat.OnActionExpandListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemActionExpand(MenuItem item) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemActionCollapse(MenuItem item) {\n\t\t\t\tfavouritesAdapter.setFilterResults(null);\n\t\t\t\tfavouritesAdapter.synchronizeGroups();\n\t\t\t\tfavouritesAdapter.notifyDataSetChanged();\n\t\t\t\t// Needed to hide intermediate progress bar after closing action mode\n\t\t\t\tnew Handler().postDelayed(new Runnable() {\n\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\thideProgressBar();\n\t\t\t\t\t}\n\t\t\t\t}, 100);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tif (AndroidUiHelper.isOrientationPortrait(getActivity())) {\n\t\t\tmenu = ((FavoritesActivity) getActivity()).getClearToolbar(true).getMenu();\n\t\t} else {\n\t\t\t((FavoritesActivity) getActivity()).getClearToolbar(false);\n\t\t}\n\n\n\t\tif (!MenuItemCompat.isActionViewExpanded(mi)) {\n\t\t\tcreateMenuItem(menu, SHARE_ID, R.string.shared_string_share, R.drawable.ic_action_gshare_dark,\n\t\t\t\t\tR.drawable.ic_action_gshare_dark, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\t\t\tif (getSettings().USE_MAP_MARKERS.get()) {\n\t\t\t\tcreateMenuItem(menu, SELECT_MAP_MARKERS_ID, R.string.select_map_markers, R.drawable.ic_action_flag_dark,\n\t\t\t\t\t\tR.drawable.ic_action_flag_dark, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\t\t\t} else {\n\t\t\t\tcreateMenuItem(menu, SELECT_MAP_MARKERS_ID, R.string.select_destination_and_intermediate_points, R.drawable.ic_action_intermediate,\n\t\t\t\t\t\tR.drawable.ic_action_intermediate, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\t\t\t}\n\t\t\tcreateMenuItem(menu, DELETE_ID, R.string.shared_string_delete, R.drawable.ic_action_delete_dark,\n\t\t\t\t\tR.drawable.ic_action_delete_dark, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n//\t\t\tcreateMenuItem(menu, EXPORT_ID, R.string.shared_string_export, R.drawable.ic_action_gsave_light,\n//\t\t\t\t\tR.drawable.ic_action_gsave_dark, MenuItem.SHOW_AS_ACTION_IF_ROOM);\n\n\t\t}\n\t}","commit_id":"0739a11bef9a766a89b5f190cdc918588ef4dfcd","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic boolean onOptionsItemSelected(MenuItem item) {\n//\t\tif (item.getElementId() == EXPORT_ID) {\n//\t\t\texport();\n//\t\t\treturn true;\n//\t\t} else \n\t\tif (item.getItemId() == SELECT_DESTINATIONS_ID) {\n\t\t\tselectDestinations();\n\t\t\treturn true;\n\t\t} else if (item.getItemId() == SHARE_ID) {\n\t\t\tshareFavourites();\n\t\t\treturn true;\n\t\t} else if (item.getItemId() == DELETE_ID) {\n\t\t\tenterDeleteMode();\n\t\t\treturn true;\n\t\t} else if (item.getItemId() == DELETE_ACTION_ID) {\n\t\t\tdeleteFavoritesAction();\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn super.onOptionsItemSelected(item);\n\t\t}\n\t}","id":8487,"modified_method":"@Override\n\tpublic boolean onOptionsItemSelected(MenuItem item) {\n//\t\tif (item.getElementId() == EXPORT_ID) {\n//\t\t\texport();\n//\t\t\treturn true;\n//\t\t} else \n\t\tif (item.getItemId() == SELECT_MAP_MARKERS_ID) {\n\t\t\tselectMapMarkers();\n\t\t\treturn true;\n\t\t} else if (item.getItemId() == SHARE_ID) {\n\t\t\tshareFavourites();\n\t\t\treturn true;\n\t\t} else if (item.getItemId() == DELETE_ID) {\n\t\t\tenterDeleteMode();\n\t\t\treturn true;\n\t\t} else if (item.getItemId() == DELETE_ACTION_ID) {\n\t\t\tdeleteFavoritesAction();\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn super.onOptionsItemSelected(item);\n\t\t}\n\t}","commit_id":"0739a11bef9a766a89b5f190cdc918588ef4dfcd","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void generateGPX(List<MapMarker> markers) {\n\t\tfinal File dir = app.getAppPath(IndexConstants.GPX_INDEX_DIR + \"/map points\");\n\t\tif (!dir.exists()) {\n\t\t\tdir.mkdirs();\n\t\t}\n\t\tDate date = new Date();\n\t\tString fileName = DateFormat.format(\"yyyy-MM-dd\", date).toString() + \"_\" + new SimpleDateFormat(\"HH-mm_EEE\", Locale.US).format(date);\n\t\tFile fout = new File(dir, fileName + \".gpx\");\n\t\tint ind = 1;\n\t\twhile (fout.exists()) {\n\t\t\tfout = new File(dir, fileName + \"_\" + (++ind) + \".gpx\");\n\t\t}\n\t\tGPXFile file = new GPXFile();\n\t\tfor (MapMarker marker : markersHelper.getActiveMapMarkers()) {\n\t\t\tWptPt wpt = new WptPt();\n\t\t\twpt.lat = marker.getLatitude();\n\t\t\twpt.lon = marker.getLongitude();\n\t\t\twpt.setColor(mapActivity.getResources().getColor(getMapMarkerColorId(marker.colorIndex)));\n\t\t\t//wpt.name = desc;\n\t\t\t//wpt.link = r.getFileName();\n\t\t\t//wpt.time = r.getFile().lastModified();\n\t\t\t//wpt.category = r.getSearchHistoryType();\n\t\t\tfile.points.add(wpt);\n\t\t}\n\t\tGPXUtilities.writeGpxFile(fout, file, app);\n\t}","id":8488,"modified_method":"private void generateGPX(List<MapMarker> markers) {\n\t\tfinal File dir = app.getAppPath(IndexConstants.GPX_INDEX_DIR + \"/map points\");\n\t\tif (!dir.exists()) {\n\t\t\tdir.mkdirs();\n\t\t}\n\t\tDate date = new Date();\n\t\tString fileName = DateFormat.format(\"yyyy-MM-dd\", date).toString() + \"_\" + new SimpleDateFormat(\"HH-mm_EEE\", Locale.US).format(date);\n\t\tFile fout = new File(dir, fileName + \".gpx\");\n\t\tint ind = 1;\n\t\twhile (fout.exists()) {\n\t\t\tfout = new File(dir, fileName + \"_\" + (++ind) + \".gpx\");\n\t\t}\n\t\tGPXFile file = new GPXFile();\n\t\tfor (MapMarker marker : markersHelper.getActiveMapMarkers()) {\n\t\t\tWptPt wpt = new WptPt();\n\t\t\twpt.lat = marker.getLatitude();\n\t\t\twpt.lon = marker.getLongitude();\n\t\t\twpt.setColor(mapActivity.getResources().getColor(getMapMarkerColorId(marker.colorIndex)));\n\t\t\twpt.name = marker.getOnlyName();\n\t\t\t//wpt.link = r.getFileName();\n\t\t\t//wpt.time = r.getFile().lastModified();\n\t\t\t//wpt.category = r.getSearchHistoryType();\n\t\t\tfile.points.add(wpt);\n\t\t}\n\t\tGPXUtilities.writeGpxFile(fout, file, app);\n\t}","commit_id":"0739a11bef9a766a89b5f190cdc918588ef4dfcd","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Test\n  public void all_children() throws IOException {\n    userSession.anonymous().login()\n      .addProjectUuidPermissions(UserRole.USER, \"project-uuid\");\n\n    ComponentDto project = newProjectDto(\"project-uuid\");\n    SnapshotDto projectSnapshot = componentDb.insertProjectAndSnapshot(project);\n    SnapshotDto moduleSnapshot = componentDb.insertComponentAndSnapshot(newModuleDto(\"module-uuid-1\", project), projectSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 10), projectSnapshot);\n    for (int i = 2; i <= 9; i++) {\n      componentDb.insertComponentAndSnapshot(newFileDto(project, i), moduleSnapshot);\n    }\n    SnapshotDto directorySnapshot = componentDb.insertComponentAndSnapshot(newDirectory(project, \"directory-path-1\"), moduleSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 1), directorySnapshot);\n    db.commit();\n    componentDb.indexProjects();\n\n    InputStream responseStream = ws.newRequest()\n      .setMediaType(MediaTypes.PROTOBUF)\n      .setParam(PARAM_STRATEGY, \"all\")\n      .setParam(PARAM_BASE_COMPONENT_ID, \"module-uuid-1\")\n      .setParam(Param.PAGE, \"2\")\n      .setParam(Param.PAGE_SIZE, \"3\")\n      .setParam(Param.TEXT_QUERY, \"file-name\")\n      .setParam(Param.ASCENDING, \"true\")\n      .setParam(Param.SORT, \"path\")\n      .execute().getInputStream();\n    WsComponents.TreeWsResponse response = WsComponents.TreeWsResponse.parseFrom(responseStream);\n\n    assertThat(response.getComponentsCount()).isEqualTo(3);\n    assertThat(response.getPaging().getTotal()).isEqualTo(9);\n    assertThat(response.getComponentsList()).extracting(\"id\").containsExactly(\"file-uuid-4\", \"file-uuid-5\", \"file-uuid-6\");\n  }","id":8489,"modified_method":"@Test\n  public void all_children() throws IOException {\n    userSession.anonymous().login()\n      .addProjectUuidPermissions(UserRole.USER, \"project-uuid\");\n\n    ComponentDto project = newProjectDto(\"project-uuid\");\n    SnapshotDto projectSnapshot = componentDb.insertProjectAndSnapshot(project);\n    SnapshotDto moduleSnapshot = componentDb.insertComponentAndSnapshot(newModuleDto(\"module-uuid-1\", project), projectSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 10), projectSnapshot);\n    for (int i = 2; i <= 9; i++) {\n      componentDb.insertComponentAndSnapshot(newFileDto(project, i), moduleSnapshot);\n    }\n    SnapshotDto directorySnapshot = componentDb.insertComponentAndSnapshot(newDirectory(project, \"directory-path-1\"), moduleSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 1), directorySnapshot);\n    db.commit();\n    componentDb.indexProjects();\n\n    TreeWsResponse response = call(ws.newRequest()\n      .setParam(PARAM_STRATEGY, \"all\")\n      .setParam(PARAM_BASE_COMPONENT_ID, \"module-uuid-1\")\n      .setParam(Param.PAGE, \"2\")\n      .setParam(Param.PAGE_SIZE, \"3\")\n      .setParam(Param.TEXT_QUERY, \"file-name\")\n      .setParam(Param.ASCENDING, \"true\")\n      .setParam(Param.SORT, \"path\"));\n\n    assertThat(response.getComponentsCount()).isEqualTo(3);\n    assertThat(response.getPaging().getTotal()).isEqualTo(9);\n    assertThat(response.getComponentsList()).extracting(\"id\").containsExactly(\"file-uuid-4\", \"file-uuid-5\", \"file-uuid-6\");\n  }","commit_id":"356ecb6685cf76a4f4b7d0216bfcd6b7d819bd44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void all_children_by_file_qualifier() throws IOException {\n    ComponentDto project = newProjectDto().setUuid(\"project-uuid\");\n    SnapshotDto projectSnapshot = componentDb.insertProjectAndSnapshot(project);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 1), projectSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 2), projectSnapshot);\n    componentDb.insertComponentAndSnapshot(newModuleDto(\"module-uuid-1\", project), projectSnapshot);\n    db.commit();\n    componentDb.indexProjects();\n\n    InputStream responseStream = ws.newRequest()\n      .setMediaType(MediaTypes.PROTOBUF)\n      .setParam(PARAM_STRATEGY, \"all\")\n      .setParam(PARAM_QUALIFIERS, Qualifiers.FILE)\n      .setParam(PARAM_BASE_COMPONENT_ID, \"project-uuid\")\n      .execute().getInputStream();\n    WsComponents.TreeWsResponse response = WsComponents.TreeWsResponse.parseFrom(responseStream);\n\n    assertThat(response.getComponentsList()).extracting(\"id\").containsExactly(\"file-uuid-1\", \"file-uuid-2\");\n  }","id":8490,"modified_method":"@Test\n  public void all_children_by_file_qualifier() throws IOException {\n    ComponentDto project = newProjectDto().setUuid(\"project-uuid\");\n    SnapshotDto projectSnapshot = componentDb.insertProjectAndSnapshot(project);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 1), projectSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 2), projectSnapshot);\n    componentDb.insertComponentAndSnapshot(newModuleDto(\"module-uuid-1\", project), projectSnapshot);\n    db.commit();\n    componentDb.indexProjects();\n\n    TreeWsResponse response = call(ws.newRequest()\n      .setParam(PARAM_STRATEGY, \"all\")\n      .setParam(PARAM_QUALIFIERS, Qualifiers.FILE)\n      .setParam(PARAM_BASE_COMPONENT_ID, \"project-uuid\"));\n\n    assertThat(response.getComponentsList()).extracting(\"id\").containsExactly(\"file-uuid-1\", \"file-uuid-2\");\n  }","commit_id":"356ecb6685cf76a4f4b7d0216bfcd6b7d819bd44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void leaves_children() throws IOException {\n    ComponentDto project = newProjectDto().setUuid(\"project-uuid\");\n    SnapshotDto projectSnapshot = componentDb.insertProjectAndSnapshot(project);\n    SnapshotDto moduleSnapshot = componentDb.insertComponentAndSnapshot(newModuleDto(\"module-uuid-1\", project), projectSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 1), projectSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 2), moduleSnapshot);\n    SnapshotDto directorySnapshot = componentDb.insertComponentAndSnapshot(newDirectory(project, \"directory-path-1\"), moduleSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 3), directorySnapshot);\n    db.commit();\n    componentDb.indexProjects();\n\n    InputStream responseStream = ws.newRequest()\n      .setMediaType(MediaTypes.PROTOBUF)\n      .setParam(PARAM_STRATEGY, \"leaves\")\n      .setParam(PARAM_BASE_COMPONENT_ID, \"project-uuid\")\n      .setParam(PARAM_QUALIFIERS, Qualifiers.FILE)\n      .execute().getInputStream();\n    WsComponents.TreeWsResponse response = WsComponents.TreeWsResponse.parseFrom(responseStream);\n\n    assertThat(response.getComponentsCount()).isEqualTo(3);\n    assertThat(response.getPaging().getTotal()).isEqualTo(3);\n    assertThat(response.getComponentsList()).extracting(\"id\").containsExactly(\"file-uuid-1\", \"file-uuid-2\", \"file-uuid-3\");\n  }","id":8491,"modified_method":"@Test\n  public void leaves_children() throws IOException {\n    ComponentDto project = newProjectDto().setUuid(\"project-uuid\");\n    SnapshotDto projectSnapshot = componentDb.insertProjectAndSnapshot(project);\n    SnapshotDto moduleSnapshot = componentDb.insertComponentAndSnapshot(newModuleDto(\"module-uuid-1\", project), projectSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 1), projectSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 2), moduleSnapshot);\n    SnapshotDto directorySnapshot = componentDb.insertComponentAndSnapshot(newDirectory(project, \"directory-path-1\"), moduleSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 3), directorySnapshot);\n    db.commit();\n    componentDb.indexProjects();\n\n    TreeWsResponse response = call(ws.newRequest()\n      .setParam(PARAM_STRATEGY, \"leaves\")\n      .setParam(PARAM_BASE_COMPONENT_ID, \"project-uuid\")\n      .setParam(PARAM_QUALIFIERS, Qualifiers.FILE));\n\n    assertThat(response.getComponentsCount()).isEqualTo(3);\n    assertThat(response.getPaging().getTotal()).isEqualTo(3);\n    assertThat(response.getComponentsList()).extracting(\"id\").containsExactly(\"file-uuid-1\", \"file-uuid-2\", \"file-uuid-3\");\n  }","commit_id":"356ecb6685cf76a4f4b7d0216bfcd6b7d819bd44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void direct_children() throws IOException {\n    userSession.anonymous().login().addProjectUuidPermissions(UserRole.ADMIN, \"project-uuid\");\n    ComponentDto project = newProjectDto(\"project-uuid\");\n    SnapshotDto projectSnapshot = componentDb.insertProjectAndSnapshot(project);\n    SnapshotDto moduleSnapshot = componentDb.insertComponentAndSnapshot(newModuleDto(\"module-uuid-1\", project), projectSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 1), projectSnapshot);\n    for (int i = 2; i <= 9; i++) {\n      componentDb.insertComponentAndSnapshot(newFileDto(project, i), moduleSnapshot);\n    }\n    SnapshotDto directorySnapshot = componentDb.insertComponentAndSnapshot(newDirectory(project, \"directory-path-1\"), moduleSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 10), directorySnapshot);\n    db.commit();\n    componentDb.indexProjects();\n\n    InputStream responseStream = ws.newRequest()\n      .setMediaType(MediaTypes.PROTOBUF)\n      .setParam(PARAM_STRATEGY, \"children\")\n      .setParam(PARAM_BASE_COMPONENT_ID, \"module-uuid-1\")\n      .setParam(Param.PAGE, \"2\")\n      .setParam(Param.PAGE_SIZE, \"3\")\n      .setParam(Param.TEXT_QUERY, \"file-name\")\n      .setParam(Param.ASCENDING, \"false\")\n      .setParam(Param.SORT, \"name\")\n      .execute().getInputStream();\n    WsComponents.TreeWsResponse response = WsComponents.TreeWsResponse.parseFrom(responseStream);\n\n    assertThat(response.getComponentsCount()).isEqualTo(3);\n    assertThat(response.getPaging().getTotal()).isEqualTo(8);\n    assertThat(response.getComponentsList()).extracting(\"id\").containsExactly(\"file-uuid-6\", \"file-uuid-5\", \"file-uuid-4\");\n  }","id":8492,"modified_method":"@Test\n  public void direct_children() throws IOException {\n    userSession.anonymous().login().addProjectUuidPermissions(UserRole.ADMIN, \"project-uuid\");\n    ComponentDto project = newProjectDto(\"project-uuid\");\n    SnapshotDto projectSnapshot = componentDb.insertProjectAndSnapshot(project);\n    SnapshotDto moduleSnapshot = componentDb.insertComponentAndSnapshot(newModuleDto(\"module-uuid-1\", project), projectSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 1), projectSnapshot);\n    for (int i = 2; i <= 9; i++) {\n      componentDb.insertComponentAndSnapshot(newFileDto(project, i), moduleSnapshot);\n    }\n    SnapshotDto directorySnapshot = componentDb.insertComponentAndSnapshot(newDirectory(project, \"directory-path-1\"), moduleSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 10), directorySnapshot);\n    db.commit();\n    componentDb.indexProjects();\n\n    TreeWsResponse response = call(ws.newRequest()\n      .setParam(PARAM_STRATEGY, \"children\")\n      .setParam(PARAM_BASE_COMPONENT_ID, \"module-uuid-1\")\n      .setParam(Param.PAGE, \"2\")\n      .setParam(Param.PAGE_SIZE, \"3\")\n      .setParam(Param.TEXT_QUERY, \"file-name\")\n      .setParam(Param.ASCENDING, \"false\")\n      .setParam(Param.SORT, \"name\"));\n\n    assertThat(response.getComponentsCount()).isEqualTo(3);\n    assertThat(response.getPaging().getTotal()).isEqualTo(8);\n    assertThat(response.getComponentsList()).extracting(\"id\").containsExactly(\"file-uuid-6\", \"file-uuid-5\", \"file-uuid-4\");\n  }","commit_id":"356ecb6685cf76a4f4b7d0216bfcd6b7d819bd44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void all_children_sort_by_qualifier() throws IOException {\n    ComponentDto project = newProjectDto().setUuid(\"project-uuid\");\n    SnapshotDto projectSnapshot = componentDb.insertProjectAndSnapshot(project);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 2), projectSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 1), projectSnapshot);\n    ComponentDto module = newModuleDto(\"module-uuid-1\", project);\n    componentDb.insertComponentAndSnapshot(module, projectSnapshot);\n    componentDb.insertComponentAndSnapshot(newDirectory(project, \"path/directory/\", \"directory-uuid-1\"), projectSnapshot);\n    db.commit();\n    componentDb.indexProjects();\n\n    InputStream responseStream = ws.newRequest()\n      .setMediaType(MediaTypes.PROTOBUF)\n      .setParam(PARAM_STRATEGY, \"all\")\n      .setParam(Param.SORT, \"qualifier, name\")\n      .setParam(PARAM_BASE_COMPONENT_ID, \"project-uuid\")\n      .execute().getInputStream();\n    WsComponents.TreeWsResponse response = WsComponents.TreeWsResponse.parseFrom(responseStream);\n\n    assertThat(response.getComponentsList()).extracting(\"id\").containsExactly(\"module-uuid-1\", \"path/directory/\", \"file-uuid-1\", \"file-uuid-2\");\n  }","id":8493,"modified_method":"@Test\n  public void all_children_sort_by_qualifier() throws IOException {\n    ComponentDto project = newProjectDto().setUuid(\"project-uuid\");\n    SnapshotDto projectSnapshot = componentDb.insertProjectAndSnapshot(project);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 2), projectSnapshot);\n    componentDb.insertComponentAndSnapshot(newFileDto(project, 1), projectSnapshot);\n    ComponentDto module = newModuleDto(\"module-uuid-1\", project);\n    componentDb.insertComponentAndSnapshot(module, projectSnapshot);\n    componentDb.insertComponentAndSnapshot(newDirectory(project, \"path/directory/\", \"directory-uuid-1\"), projectSnapshot);\n    db.commit();\n    componentDb.indexProjects();\n\n    TreeWsResponse response = call(ws.newRequest()\n      .setParam(PARAM_STRATEGY, \"all\")\n      .setParam(Param.SORT, \"qualifier, name\")\n      .setParam(PARAM_BASE_COMPONENT_ID, \"project-uuid\"));\n\n    assertThat(response.getComponentsList()).extracting(\"id\").containsExactly(\"module-uuid-1\", \"path/directory/\", \"file-uuid-1\", \"file-uuid-2\");\n  }","commit_id":"356ecb6685cf76a4f4b7d0216bfcd6b7d819bd44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void direct_children_of_a_view() throws IOException {\n    ComponentDto view = newView(\"view-uuid\");\n    SnapshotDto viewSnapshot = componentDb.insertViewAndSnapshot(view);\n    ComponentDto project = newProjectDto(\"project-uuid-1\").setName(\"project-name\").setKey(\"project-key-1\");\n    componentDb.insertProjectAndSnapshot(project);\n    componentDb.insertComponentAndSnapshot(newProjectCopy(\"project-uuid-1-copy\", project, view), viewSnapshot);\n    componentDb.insertComponentAndSnapshot(newSubView(view, \"sub-view-uuid\", \"sub-view-key\").setName(\"sub-view-name\"), viewSnapshot);\n    db.commit();\n    componentDb.indexProjects();\n\n    InputStream responseStream = ws.newRequest()\n      .setMediaType(MediaTypes.PROTOBUF)\n      .setParam(PARAM_STRATEGY, \"children\")\n      .setParam(PARAM_BASE_COMPONENT_ID, \"view-uuid\")\n      .setParam(Param.TEXT_QUERY, \"name\")\n      .execute().getInputStream();\n    WsComponents.TreeWsResponse response = WsComponents.TreeWsResponse.parseFrom(responseStream);\n\n    assertThat(response.getComponentsList()).extracting(\"id\").containsExactly(\"project-uuid-1-copy\", \"sub-view-uuid\");\n    assertThat(response.getComponentsList()).extracting(\"refId\").containsExactly(\"project-uuid-1\", \"\");\n    assertThat(response.getComponentsList()).extracting(\"refKey\").containsExactly(\"project-key-1\", \"\");\n  }","id":8494,"modified_method":"@Test\n  public void direct_children_of_a_view() {\n    ComponentDto view = newView(\"view-uuid\");\n    SnapshotDto viewSnapshot = componentDb.insertViewAndSnapshot(view);\n    ComponentDto project = newProjectDto(\"project-uuid-1\").setName(\"project-name\").setKey(\"project-key-1\");\n    componentDb.insertProjectAndSnapshot(project);\n    componentDb.insertComponentAndSnapshot(newProjectCopy(\"project-uuid-1-copy\", project, view), viewSnapshot);\n    componentDb.insertComponentAndSnapshot(newSubView(view, \"sub-view-uuid\", \"sub-view-key\").setName(\"sub-view-name\"), viewSnapshot);\n    db.commit();\n    componentDb.indexProjects();\n\n    TreeWsResponse response = call(ws.newRequest()\n      .setParam(PARAM_STRATEGY, \"children\")\n      .setParam(PARAM_BASE_COMPONENT_ID, \"view-uuid\")\n      .setParam(Param.TEXT_QUERY, \"name\"));\n\n    assertThat(response.getComponentsList()).extracting(\"id\").containsExactly(\"project-uuid-1-copy\", \"sub-view-uuid\");\n    assertThat(response.getComponentsList()).extracting(\"refId\").containsExactly(\"project-uuid-1\", \"\");\n    assertThat(response.getComponentsList()).extracting(\"refKey\").containsExactly(\"project-key-1\", \"\");\n  }","commit_id":"356ecb6685cf76a4f4b7d0216bfcd6b7d819bd44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void empty_response_for_provisioned_project() throws IOException {\n    componentDb.insertComponent(newProjectDto(\"project-uuid\"));\n\n    InputStream responseStream = ws.newRequest()\n      .setMediaType(MediaTypes.PROTOBUF)\n      .setParam(PARAM_BASE_COMPONENT_ID, \"project-uuid\")\n      .execute().getInputStream();\n    WsComponents.TreeWsResponse response = WsComponents.TreeWsResponse.parseFrom(responseStream);\n\n    assertThat(response.getBaseComponent().getId()).isEqualTo(\"project-uuid\");\n    assertThat(response.getComponentsList()).isEmpty();\n    assertThat(response.getPaging().getTotal()).isEqualTo(0);\n    assertThat(response.getPaging().getPageSize()).isEqualTo(100);\n    assertThat(response.getPaging().getPageIndex()).isEqualTo(1);\n  }","id":8495,"modified_method":"@Test\n  public void empty_response_for_provisioned_project() {\n    componentDb.insertComponent(newProjectDto(\"project-uuid\"));\n\n    TreeWsResponse response = call(ws.newRequest()\n      .setParam(PARAM_BASE_COMPONENT_ID, \"project-uuid\"));\n\n    assertThat(response.getBaseComponent().getId()).isEqualTo(\"project-uuid\");\n    assertThat(response.getComponentsList()).isEmpty();\n    assertThat(response.getPaging().getTotal()).isEqualTo(0);\n    assertThat(response.getPaging().getPageSize()).isEqualTo(100);\n    assertThat(response.getPaging().getPageIndex()).isEqualTo(1);\n  }","commit_id":"356ecb6685cf76a4f4b7d0216bfcd6b7d819bd44","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void _createPluginsSummary(File pluginsDir) throws Exception {\n\t\tStringBundler sb = new StringBundler();\n\n\t\tsb.append(\"<plugins-summary>\\n\");\n\n\t\tDirectoryScanner ds = new DirectoryScanner();\n\n\t\tds.setBasedir(pluginsDir);\n\t\tds.setIncludes(\n\t\t\tnew String[] {\n\t\t\t\t\"**\\\\liferay-plugin-package.properties\",\n\t\t\t\t\"**\\\\liferay-plugin-package.xml\"\n\t\t\t});\n\n\t\tds.scan();\n\n\t\tString[] fileNames = ds.getIncludedFiles();\n\n\t\tArrays.sort(fileNames);\n\n\t\tfor (String fileName : fileNames) {\n\t\t\t_createPluginSummary(fileName, sb);\n\t\t}\n\n\t\tfor (String author : _distinctAuthors) {\n\t\t\tsb.append(\"\\t<author>\");\n\t\t\tsb.append(author);\n\t\t\tsb.append(\"<\/author>\\n\");\n\t\t}\n\n\t\tfor (String license : _distinctLicenses) {\n\t\t\tsb.append(\"\\t<license>\");\n\t\t\tsb.append(license);\n\t\t\tsb.append(\"<\/license>\\n\");\n\t\t}\n\n\t\tsb.append(\"<\/plugins-summary>\");\n\n\t\tFileUtil.write(\n\t\t\tpluginsDir + File.separator + \"summary.xml\", sb.toString());\n\t}","id":8496,"modified_method":"private void _createPluginsSummary() throws Exception {\n\t\tStringBundler sb = new StringBundler();\n\n\t\tsb.append(\"<plugins-summary>\\n\");\n\n\t\tDirectoryScanner directoryScanner = new DirectoryScanner();\n\n\t\tdirectoryScanner.setBasedir(_pluginsDir);\n\t\tdirectoryScanner.setExcludes(\n\t\t\tnew String[] {\"**\\\\tmp\\\\**\", \"**\\\\tools\\\\**\"});\n\t\tdirectoryScanner.setIncludes(\n\t\t\tnew String[] {\n\t\t\t\t\"**\\\\liferay-plugin-package.properties\",\n\t\t\t\t\"**\\\\liferay-plugin-package.xml\"\n\t\t\t});\n\n\t\tdirectoryScanner.scan();\n\n\t\tString[] fileNames = directoryScanner.getIncludedFiles();\n\n\t\tArrays.sort(fileNames);\n\n\t\tfor (String fileName : fileNames) {\n\t\t\tfileName = StringUtil.replace(\n\t\t\t\tfileName, StringPool.BACK_SLASH, StringPool.SLASH);\n\n\t\t\t_createPluginSummary(fileName, sb);\n\t\t}\n\n\t\tfor (String author : _distinctAuthors) {\n\t\t\tsb.append(\"\\t<author>\");\n\t\t\tsb.append(author);\n\t\t\tsb.append(\"<\/author>\\n\");\n\t\t}\n\n\t\tfor (String license : _distinctLicenses) {\n\t\t\tsb.append(\"\\t<license>\");\n\t\t\tsb.append(license);\n\t\t\tsb.append(\"<\/license>\\n\");\n\t\t}\n\n\t\tsb.append(\"<\/plugins-summary>\");\n\n\t\tFileUtil.write(_pluginsDir + \"/summary.xml\", sb.toString());\n\t}","commit_id":"5c82773fae316413acf58de2f666ba523f704cd5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PluginsSummaryBuilder(File pluginsDir) {\n\t\ttry {\n\t\t\t_createPluginsSummary(pluginsDir);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}","id":8497,"modified_method":"public PluginsSummaryBuilder(File pluginsDir) {\n\t\ttry {\n\t\t\t_pluginsDir = pluginsDir;\n\n\t\t\t_createPluginsSummary();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}","commit_id":"5c82773fae316413acf58de2f666ba523f704cd5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _createPluginSummary(String fileName, StringBundler sb)\n\t\tthrows Exception {\n\n\t\tString content = FileUtil.read(fileName);\n\n\t\tint x = fileName.indexOf(File.separatorChar);\n\n\t\tString type = fileName.substring(0, x);\n\n\t\tif (type.endsWith(\"s\")) {\n\t\t\ttype = type.substring(0, type.length() - 1);\n\t\t}\n\n\t\tx = fileName.indexOf(File.separator, x) + 1;\n\n\t\tint y = fileName.indexOf(File.separator, x);\n\n\t\tString artifactId = fileName.substring(x, y);\n\n\t\tString name = StringPool.BLANK;\n\t\tString tags = StringPool.BLANK;\n\t\tString shortDescription = StringPool.BLANK;\n\t\tString changeLog = StringPool.BLANK;\n\t\tString pageURL = StringPool.BLANK;\n\t\tString author = StringPool.BLANK;\n\t\tString licenses = StringPool.BLANK;\n\n\t\tif (fileName.endsWith(\".properties\")) {\n\t\t\tProperties properties = PropertiesUtil.load(content);\n\n\t\t\tname = _readProperty(properties, \"name\");\n\t\t\ttags = _readProperty(properties, \"tags\");\n\t\t\tshortDescription = _readProperty(properties, \"short-description\");\n\t\t\tchangeLog = _readProperty(properties, \"change-log\");\n\t\t\tpageURL = _readProperty(properties, \"page-url\");\n\t\t\tauthor = _readProperty(properties, \"author\");\n\t\t\tlicenses = _readProperty(properties, \"licenses\");\n\t\t}\n\t\telse {\n\t\t\tDocument document = SAXReaderUtil.read(content);\n\n\t\t\tElement rootElement = document.getRootElement();\n\n\t\t\tname = rootElement.elementText(\"name\");\n\t\t\ttags = _readList(rootElement.element(\"tags\"), \"tag\");\n\t\t\tshortDescription = rootElement.elementText(\"short-description\");\n\t\t\tchangeLog = rootElement.elementText(\"change-log\");\n\t\t\tpageURL = rootElement.elementText(\"page-url\");\n\t\t\tauthor = rootElement.elementText(\"author\");\n\t\t\tlicenses = _readList(rootElement.element(\"licenses\"), \"license\");\n\t\t}\n\n\t\t_distinctAuthors.add(author);\n\t\t_distinctLicenses.add(licenses);\n\n\t\tsb.append(\"\\t<plugin>\\n\");\n\t\tsb.append(\"\\t\\t<artifact-id>\");\n\t\tsb.append(artifactId);\n\t\tsb.append(\"<\/artifact-id>\\n\");\n\t\tsb.append(\"\\t\\t<name>\");\n\t\tsb.append(name);\n\t\tsb.append(\"<\/name>\\n\");\n\t\tsb.append(\"\\t\\t<type>\");\n\t\tsb.append(type);\n\t\tsb.append(\"<\/type>\\n\");\n\t\tsb.append(\"\\t\\t<tags>\");\n\t\tsb.append(tags);\n\t\tsb.append(\"<\/tags>\\n\");\n\t\tsb.append(\"\\t\\t<short-description>\");\n\t\tsb.append(shortDescription);\n\t\tsb.append(\"<\/short-description>\\n\");\n\t\tsb.append(\"\\t\\t<change-log>\");\n\t\tsb.append(changeLog);\n\t\tsb.append(\"<\/change-log>\\n\");\n\t\tsb.append(\"\\t\\t<page-url>\");\n\t\tsb.append(pageURL);\n\t\tsb.append(\"<\/page-url>\\n\");\n\t\tsb.append(\"\\t\\t<author>\");\n\t\tsb.append(author);\n\t\tsb.append(\"<\/author>\\n\");\n\t\tsb.append(\"\\t\\t<licenses>\");\n\t\tsb.append(licenses);\n\t\tsb.append(\"<\/licenses>\\n\");\n\t\tsb.append(\"\\t<\/plugin>\\n\");\n\t}","id":8498,"modified_method":"private void _createPluginSummary(String fileName, StringBundler sb)\n\t\tthrows Exception {\n\n\t\tString content = FileUtil.read(fileName);\n\n\t\tint x = fileName.indexOf(StringPool.SLASH);\n\n\t\tString type = fileName.substring(0, x);\n\n\t\tif (type.endsWith(\"s\")) {\n\t\t\ttype = type.substring(0, type.length() - 1);\n\t\t}\n\n\t\tx = fileName.indexOf(StringPool.SLASH, x) + 1;\n\n\t\tint y = fileName.indexOf(StringPool.SLASH, x);\n\n\t\tString artifactId = fileName.substring(x, y);\n\n\t\tString name = StringPool.BLANK;\n\t\tString tags = StringPool.BLANK;\n\t\tString shortDescription = StringPool.BLANK;\n\t\tString changeLog = StringPool.BLANK;\n\t\tString pageURL = StringPool.BLANK;\n\t\tString author = StringPool.BLANK;\n\t\tString licenses = StringPool.BLANK;\n\n\t\tif (fileName.endsWith(\".properties\")) {\n\t\t\tProperties properties = PropertiesUtil.load(content);\n\n\t\t\tname = _readProperty(properties, \"name\");\n\t\t\ttags = _readProperty(properties, \"tags\");\n\t\t\tshortDescription = _readProperty(properties, \"short-description\");\n\t\t\tchangeLog = _readProperty(properties, \"change-log\");\n\t\t\tpageURL = _readProperty(properties, \"page-url\");\n\t\t\tauthor = _readProperty(properties, \"author\");\n\t\t\tlicenses = _readProperty(properties, \"licenses\");\n\t\t}\n\t\telse {\n\t\t\tDocument document = SAXReaderUtil.read(content);\n\n\t\t\tElement rootElement = document.getRootElement();\n\n\t\t\tname = rootElement.elementText(\"name\");\n\t\t\ttags = _readList(rootElement.element(\"tags\"), \"tag\");\n\t\t\tshortDescription = rootElement.elementText(\"short-description\");\n\t\t\tchangeLog = rootElement.elementText(\"change-log\");\n\t\t\tpageURL = rootElement.elementText(\"page-url\");\n\t\t\tauthor = rootElement.elementText(\"author\");\n\t\t\tlicenses = _readList(rootElement.element(\"licenses\"), \"license\");\n\t\t}\n\n\t\t_distinctAuthors.add(author);\n\t\t_distinctLicenses.add(licenses);\n\n\t\tsb.append(\"\\t<plugin>\\n\");\n\n\t\t_writeElement(sb, \"artifact-id\", artifactId, 2);\n\t\t_writeElement(sb, \"name\", name, 2);\n\t\t_writeElement(sb, \"type\", type, 2);\n\t\t_writeElement(sb, \"tags\", tags, 2);\n\t\t_writeElement(sb, \"short-description\", shortDescription, 2);\n\t\t_writeElement(sb, \"change-log\", changeLog, 2);\n\t\t_writeElement(sb, \"page-url\", pageURL, 2);\n\t\t_writeElement(sb, \"author\", author, 2);\n\t\t_writeElement(sb, \"licenses\", licenses, 2);\n\n\t\tsb.append(\"\\t\\t<releng>\\n\");\n\t\tsb.append(_readReleng(fileName));\n\t\tsb.append(\"\\t\\t<\/releng>\\n\");\n\t\tsb.append(\"\\t<\/plugin>\\n\");\n\t}","commit_id":"5c82773fae316413acf58de2f666ba523f704cd5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n  @NotNull\n  public String getDescriptiveName(@NotNull final PsiElement element) {\n    if (ThrowSearchUtil.isSearchable(element)) {\n      return ThrowSearchUtil.getSearchableTypeName(element);\n    }\n    if (element instanceof PsiDirectory) {\n      return getPackageName((PsiDirectory)element, false);\n    }\n    if (element instanceof PsiPackage) {\n      return getPackageName((PsiPackage)element);\n    }\n    if (element instanceof PsiFile) {\n      return ((PsiFile)element).getVirtualFile().getPresentableUrl();\n    }\n    if (element instanceof PsiLabeledStatement) {\n      return ((PsiLabeledStatement)element).getLabelIdentifier().getText();\n    }\n    if (element instanceof PsiClass) {\n      if (element instanceof PsiAnonymousClass) {\n        return \"anonymous \" + ((PsiAnonymousClass)element).getBaseClassReference().getText();\n      }\n      else {\n        final PsiClass aClass = (PsiClass)element;\n        String qName =  aClass.getQualifiedName();\n        return qName == null ? aClass.getName() : qName;\n      }\n    }\n    if (element instanceof PsiMethod) {\n      PsiMethod psiMethod = (PsiMethod)element;\n      String formatted = PsiFormatUtil.formatMethod(psiMethod,\n                                                    PsiSubstitutor.EMPTY, PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_PARAMETERS,\n                                                    PsiFormatUtilBase.SHOW_TYPE | PsiFormatUtilBase.SHOW_RAW_NON_TOP_TYPE);\n      PsiClass psiClass = psiMethod.getContainingClass();\n      if (psiClass != null) {\n        return getContainingClassDescription(psiClass, formatted);\n      }\n\n      return formatted;\n    }\n    if (element instanceof PsiField) {\n      PsiField psiField = (PsiField)element;\n      String formatted = PsiFormatUtil.formatVariable(psiField, PsiFormatUtilBase.SHOW_NAME, PsiSubstitutor.EMPTY);\n      PsiClass psiClass = psiField.getContainingClass();\n      if (psiClass != null) {\n        return getContainingClassDescription(psiClass, formatted);\n      }\n\n      return formatted;\n    }\n    if (element instanceof PsiVariable) {\n      return PsiFormatUtil.formatVariable((PsiVariable)element, PsiFormatUtilBase.SHOW_NAME, PsiSubstitutor.EMPTY);\n    }\n    if (element instanceof PsiLiteralExpression) {\n      return element.getText();\n    }\n\n    return \"\";\n  }","id":8499,"modified_method":"@Override\n  @NotNull\n  public String getDescriptiveName(@NotNull final PsiElement element) {\n    if (ThrowSearchUtil.isSearchable(element)) {\n      return ThrowSearchUtil.getSearchableTypeName(element);\n    }\n    if (element instanceof PsiDirectory) {\n      return getPackageName((PsiDirectory)element, false);\n    }\n    if (element instanceof PsiPackage) {\n      return getPackageName((PsiPackage)element);\n    }\n    if (element instanceof PsiFile) {\n      return ((PsiFile)element).getVirtualFile().getPresentableUrl();\n    }\n    if (element instanceof PsiLabeledStatement) {\n      return ((PsiLabeledStatement)element).getLabelIdentifier().getText();\n    }\n    if (element instanceof PsiClass) {\n      if (element instanceof PsiAnonymousClass) {\n        String name = ((PsiAnonymousClass)element).getBaseClassReference().getReferenceName();\n        return \"anonymous \" + StringUtil.notNullize(name, \"class\");\n      }\n      else {\n        final PsiClass aClass = (PsiClass)element;\n        String qName =  aClass.getQualifiedName();\n        return qName == null ? aClass.getName() : qName;\n      }\n    }\n    if (element instanceof PsiMethod) {\n      PsiMethod psiMethod = (PsiMethod)element;\n      String formatted = PsiFormatUtil.formatMethod(psiMethod,\n                                                    PsiSubstitutor.EMPTY, PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_PARAMETERS,\n                                                    PsiFormatUtilBase.SHOW_TYPE | PsiFormatUtilBase.SHOW_RAW_NON_TOP_TYPE);\n      PsiClass psiClass = psiMethod.getContainingClass();\n      if (psiClass != null) {\n        return getContainingClassDescription(psiClass, formatted);\n      }\n\n      return formatted;\n    }\n    if (element instanceof PsiField) {\n      PsiField psiField = (PsiField)element;\n      String formatted = PsiFormatUtil.formatVariable(psiField, PsiFormatUtilBase.SHOW_NAME, PsiSubstitutor.EMPTY);\n      PsiClass psiClass = psiField.getContainingClass();\n      if (psiClass != null) {\n        return getContainingClassDescription(psiClass, formatted);\n      }\n\n      return formatted;\n    }\n    if (element instanceof PsiVariable) {\n      return PsiFormatUtil.formatVariable((PsiVariable)element, PsiFormatUtilBase.SHOW_NAME, PsiSubstitutor.EMPTY);\n    }\n    if (element instanceof PsiLiteralExpression) {\n      return element.getText();\n    }\n\n    return \"\";\n  }","commit_id":"37a5e4faf934caf2ba1299738dc6e3600972e7a6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public String getElementDescription(@NotNull final PsiElement element, @NotNull final ElementDescriptionLocation location) {\n    if (location instanceof UsageViewShortNameLocation) {\n      if (element instanceof PsiThrowStatement) {\n        return UsageViewBundle.message(\"usage.target.exception\");\n      }\n      else if (element instanceof PsiAnonymousClass) {\n        return \"anonymous \" + ((PsiAnonymousClass)element).getBaseClassReference().getText();\n      }\n    }\n\n    if (location instanceof UsageViewLongNameLocation) {\n      if (element instanceof PsiPackage) {\n        return ((PsiPackage)element).getQualifiedName();\n      }\n      else if (element instanceof PsiClass) {\n        if (element instanceof PsiAnonymousClass) {\n          return \"anonymous \" + ((PsiAnonymousClass)element).getBaseClassReference().getText();\n        }\n        else {\n          String ret = ((PsiClass)element).getQualifiedName(); // It happens for local classes\n          if (ret == null) {\n            ret = ((PsiClass)element).getName();\n          }\n          return ret;\n        }\n      }\n      else if (element instanceof PsiVariable) {\n        return ((PsiVariable)element).getName();\n      }\n      else if (element instanceof PsiMethod) {\n        PsiMethod psiMethod = (PsiMethod)element;\n        return PsiFormatUtil.formatMethod(psiMethod, PsiSubstitutor.EMPTY,\n                                          PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_PARAMETERS, PsiFormatUtilBase.SHOW_TYPE);\n      }\n    }\n\n    return null;\n  }","id":8500,"modified_method":"@Override\n  public String getElementDescription(@NotNull final PsiElement element, @NotNull final ElementDescriptionLocation location) {\n    if (location instanceof UsageViewShortNameLocation) {\n      if (element instanceof PsiThrowStatement) {\n        return UsageViewBundle.message(\"usage.target.exception\");\n      }\n      else if (element instanceof PsiAnonymousClass) {\n        String name = ((PsiAnonymousClass)element).getBaseClassReference().getReferenceName();\n        return \"anonymous \" + StringUtil.notNullize(name, \"class\");\n      }\n      else if (element instanceof PsiClassInitializer) {\n        boolean isStatic = ((PsiClassInitializer)element).hasModifierProperty(PsiModifier.STATIC);\n        return isStatic ? \"<clinit>\" : \"<init>\";\n      }\n    }\n\n    if (location instanceof UsageViewLongNameLocation) {\n      if (element instanceof PsiPackage) {\n        return ((PsiPackage)element).getQualifiedName();\n      }\n      else if (element instanceof PsiClass) {\n        if (element instanceof PsiAnonymousClass) {\n          String name = ((PsiAnonymousClass)element).getBaseClassReference().getReferenceName();\n          return \"anonymous \" + StringUtil.notNullize(name, \"class\");\n        }\n        else {\n          String ret = ((PsiClass)element).getQualifiedName(); // It happens for local classes\n          if (ret == null) {\n            ret = ((PsiClass)element).getName();\n          }\n          return ret;\n        }\n      }\n      else if (element instanceof PsiVariable) {\n        return ((PsiVariable)element).getName();\n      }\n      else if (element instanceof PsiMethod) {\n        PsiMethod psiMethod = (PsiMethod)element;\n        return PsiFormatUtil.formatMethod(psiMethod, PsiSubstitutor.EMPTY,\n                                          PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_PARAMETERS, PsiFormatUtilBase.SHOW_TYPE);\n      }\n    }\n\n    return null;\n  }","commit_id":"37a5e4faf934caf2ba1299738dc6e3600972e7a6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Deletes specified dataset module\n   * @param datasetModuleId {@link Id.DatasetModule} of the dataset module to delete\n   * @return true if deleted successfully, false if module didn't exist: nothing to delete\n   * @throws DatasetModuleConflictException when there are other modules depend on the specified one, in which case\n   *         deletion does NOT happen\n   */\n  public boolean deleteModule(final Id.DatasetModule datasetModuleId) throws DatasetModuleConflictException {\n    LOG.info(\"Deleting module {}\", datasetModuleId);\n    try {\n      return mdsDatasets.execute(new TxCallable<MDSDatasets, Boolean>() {\n        @Override\n        public Boolean call(MDSDatasets datasets) throws DatasetModuleConflictException, IOException {\n          DatasetModuleMeta module = datasets.getTypeMDS().getModule(datasetModuleId);\n\n          if (module == null) {\n            return false;\n          }\n\n          // cannot delete when there's module that uses it\n          if (module.getUsedByModules().size() > 0) {\n            String msg =\n              String.format(\"Cannot delete module %s: other modules depend on it. Delete them first\", module);\n            throw new DatasetModuleConflictException(msg);\n          }\n\n          Collection<DatasetSpecification> dependentInstances =\n            datasets.getInstanceMDS().getByTypes(datasetModuleId.getNamespace(),\n                                                 ImmutableSet.copyOf(module.getTypes()));\n          // cannot delete when there's instance that uses it\n          if (dependentInstances.size() > 0) {\n            String msg =\n              String.format(\"Cannot delete module %s: other instances depend on it. Delete them first\", module);\n            throw new DatasetModuleConflictException(msg);\n          }\n\n          // remove it from \"usedBy\" from other modules\n          for (String usedModuleName : module.getUsesModules()) {\n            Id.DatasetModule usedModuleId = Id.DatasetModule.from(datasetModuleId.getNamespace(), usedModuleName);\n            // not using getModuleWithFallback here because we want to know the namespace in which usedModule was found,\n            // so we can overwrite it in the MDS in the appropriate namespace\n            DatasetModuleMeta usedModule = datasets.getTypeMDS().getModule(usedModuleId);\n            // if the usedModule is not found in the current namespace, try finding it in the system namespace\n            if (usedModule == null) {\n              usedModuleId = Id.DatasetModule.from(Id.Namespace.SYSTEM, usedModuleName);\n              usedModule = datasets.getTypeMDS().getModule(usedModuleId);\n              Preconditions.checkState(usedModule != null, \"Could not find a module %s that the module %s uses.\",\n                                       usedModuleName, datasetModuleId.getId());\n            }\n            usedModule.removeUsedByModule(datasetModuleId.getId());\n            datasets.getTypeMDS().writeModule(usedModuleId.getNamespace(), usedModule);\n          }\n\n          datasets.getTypeMDS().deleteModule(datasetModuleId);\n          // Also delete module jar\n          Location moduleJarLocation = locationFactory.create(module.getJarLocation());\n          if (!moduleJarLocation.delete()) {\n            LOG.debug(\"Could not delete dataset module archive\");\n          }\n\n          return true;\n        }\n      });\n    } catch (TransactionFailureException e) {\n      if (e.getCause() != null && e.getCause() instanceof DatasetModuleConflictException) {\n        throw (DatasetModuleConflictException) e.getCause();\n      }\n      throw Throwables.propagate(e);\n    } catch (Exception e) {\n      LOG.error(\"Operation failed\", e);\n      throw Throwables.propagate(e);\n    }\n  }","id":8501,"modified_method":"/**\n   * Deletes specified dataset module\n   * @param datasetModuleId {@link Id.DatasetModule} of the dataset module to delete\n   * @return true if deleted successfully, false if module didn't exist: nothing to delete\n   * @throws DatasetModuleConflictException when there are other modules depend on the specified one, in which case\n   *         deletion does NOT happen\n   */\n  public boolean deleteModule(final Id.DatasetModule datasetModuleId) throws DatasetModuleConflictException {\n    LOG.info(\"Deleting module {}\", datasetModuleId);\n    try {\n      return mdsDatasets.execute(new TxCallable<MDSDatasets, Boolean>() {\n        @Override\n        public Boolean call(MDSDatasets datasets) throws DatasetModuleConflictException, IOException {\n          DatasetModuleMeta module = datasets.getTypeMDS().getModule(datasetModuleId);\n\n          if (module == null) {\n            return false;\n          }\n\n          // cannot delete when there's module that uses it\n          if (module.getUsedByModules().size() > 0) {\n            String msg =\n              String.format(\"Cannot delete module %s: other modules depend on it. Delete them first\", module);\n            throw new DatasetModuleConflictException(msg);\n          }\n\n          Collection<DatasetSpecification> dependentInstances =\n            datasets.getInstanceMDS().getByTypes(datasetModuleId.getNamespace(),\n                                                 ImmutableSet.copyOf(module.getTypes()));\n          // cannot delete when there's instance that uses it\n          if (dependentInstances.size() > 0) {\n            String msg =\n              String.format(\"Cannot delete module %s: other instances depend on it. Delete them first\", module);\n            throw new DatasetModuleConflictException(msg);\n          }\n\n          // remove it from \"usedBy\" from other modules\n          for (String usedModuleName : module.getUsesModules()) {\n            Id.DatasetModule usedModuleId = Id.DatasetModule.from(datasetModuleId.getNamespace(), usedModuleName);\n            // not using getModuleWithFallback here because we want to know the namespace in which usedModule was found,\n            // so we can overwrite it in the MDS in the appropriate namespace\n            DatasetModuleMeta usedModule = datasets.getTypeMDS().getModule(usedModuleId);\n            // if the usedModule is not found in the current namespace, try finding it in the system namespace\n            if (usedModule == null) {\n              usedModuleId = Id.DatasetModule.from(Id.Namespace.SYSTEM, usedModuleName);\n              usedModule = datasets.getTypeMDS().getModule(usedModuleId);\n              Preconditions.checkState(usedModule != null, \"Could not find a module %s that the module %s uses.\",\n                                       usedModuleName, datasetModuleId.getId());\n            }\n            usedModule.removeUsedByModule(datasetModuleId.getId());\n            datasets.getTypeMDS().writeModule(usedModuleId.getNamespace(), usedModule);\n          }\n\n          datasets.getTypeMDS().deleteModule(datasetModuleId);\n          // Also delete module jar\n          Location moduleJarLocation = locationFactory.create(module.getJarLocation());\n          if (!moduleJarLocation.delete()) {\n            LOG.debug(\"Could not delete dataset module archive\");\n          }\n\n          return true;\n        }\n      });\n    } catch (TransactionFailureException e) {\n      if (e.getCause() != null && e.getCause() instanceof DatasetModuleConflictException) {\n        throw (DatasetModuleConflictException) e.getCause();\n      }\n      throw Throwables.propagate(e);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Operation failed\", e);\n    }\n  }","commit_id":"feddca0fdde9c4a827df38b9d05114b5db444656","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public void add(DatasetDefinition def) {\n      String typeName = def.getName();\n      Id.DatasetType typeId = Id.DatasetType.from(namespaceId, typeName);\n      if (datasets.getTypeMDS().getType(typeId) != null && !allowDatasetUncheckedUpgrade) {\n        String msg = \"Cannot add dataset type: it already exists: \" + typeName;\n        LOG.error(msg);\n        throw new TypeConflictException(msg);\n      }\n      types.add(typeName);\n      registry.add(def);\n    }","id":8502,"modified_method":"@Override\n    public void add(DatasetDefinition def) {\n      String typeName = def.getName();\n      Id.DatasetType typeId = Id.DatasetType.from(namespaceId, typeName);\n      if (datasets.getTypeMDS().getType(typeId) != null && !allowDatasetUncheckedUpgrade) {\n        String msg = \"Cannot add dataset type: it already exists: \" + typeName;\n        throw new TypeConflictException(msg);\n      }\n      types.add(typeName);\n      registry.add(def);\n    }","commit_id":"feddca0fdde9c4a827df38b9d05114b5db444656","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  protected void startUp() throws Exception {\n    deleteSystemModules();\n    deployDefaultModules();\n    if (extensionModules != null && extensionModules.size() > 0) {\n      deployExtensionModules();\n    }\n  }","id":8503,"modified_method":"@Override\n  protected void startUp() throws Exception {\n    deleteSystemModules();\n    deployDefaultModules();\n    if (!extensionModules.isEmpty()) {\n      deployExtensionModules();\n    }\n  }","commit_id":"feddca0fdde9c4a827df38b9d05114b5db444656","url":"https://github.com/caskdata/cdap"},{"original_method":"private Map<String, DatasetModule> getExtensionModules(CConfiguration cConf) {\n    Map<String, DatasetModule> modules = Maps.newLinkedHashMap();\n    String moduleStr = cConf.get(Constants.Dataset.Extensions.EXT_MODULES);\n    if (moduleStr != null) {\n      String[] moduleNames = moduleStr.split(\",\");\n      for (String name : moduleNames) {\n        name = name.trim();\n        // create DatasetModule object\n        try {\n          Class tableModuleClass = Class.forName(name);\n          DatasetModule module = (DatasetModule) tableModuleClass.newInstance();\n          modules.put(name, module);\n        } catch (ClassNotFoundException|InstantiationException|IllegalAccessException ex) {\n          LOG.error(\"Failed to add \" + name + \" extension module: \" + ex.toString());\n        }\n      }\n    }\n    return modules;\n  }","id":8504,"modified_method":"private Map<String, DatasetModule> getExtensionModules(CConfiguration cConf) {\n    Map<String, DatasetModule> modules = new LinkedHashMap();\n    String moduleStr = cConf.get(Constants.Dataset.Extensions.MODULES);\n    if (moduleStr != null) {\n      for (String moduleName : Splitter.on(',').omitEmptyStrings().split(moduleStr)) {\n        // create DatasetModule object\n        try {\n          Class tableModuleClass = Class.forName(moduleName);\n          DatasetModule module = (DatasetModule) tableModuleClass.newInstance();\n          modules.put(moduleName, module);\n        } catch (ClassCastException|ClassNotFoundException|InstantiationException|IllegalAccessException ex) {\n          LOG.error(\"Failed to add {} extension module: {}\", moduleName, ex.toString());\n        }\n      }\n    }\n    return modules;\n  }","commit_id":"feddca0fdde9c4a827df38b9d05114b5db444656","url":"https://github.com/caskdata/cdap"},{"original_method":"private void deployDefaultModules() {\n    // adding default modules to be available in dataset manager service\n    for (Map.Entry<String, DatasetModule> module : defaultModules.entrySet()) {\n      try {\n        // NOTE: we assume default modules are always in classpath, hence passing null for jar location\n        // NOTE: we add default modules in the system namespace\n        Id.DatasetModule defaultModule = Id.DatasetModule.from(Id.Namespace.SYSTEM, module.getKey());\n        addModule(defaultModule, module.getValue().getClass().getName(), null);\n      } catch (DatasetModuleConflictException e) {\n        // perfectly fine: we need to add default modules only the very first time service is started\n        LOG.info(\"Not adding \" + module.getKey() + \" module: it already exists\");\n      } catch (Throwable th) {\n        LOG.error(\"Failed to add {} module. Aborting.\", module.getKey(), th);\n        throw Throwables.propagate(th);\n      }\n    }\n  }","id":8505,"modified_method":"private void deployDefaultModules() {\n    // adding default modules to be available in dataset manager service\n    for (Map.Entry<String, DatasetModule> module : defaultModules.entrySet()) {\n      try {\n        // NOTE: we assume default modules are always in classpath, hence passing null for jar location\n        // NOTE: we add default modules in the system namespace\n        Id.DatasetModule defaultModule = Id.DatasetModule.from(Id.Namespace.SYSTEM, module.getKey());\n        addModule(defaultModule, module.getValue().getClass().getName(), null);\n      } catch (DatasetModuleConflictException e) {\n        // perfectly fine: we need to add default modules only the very first time service is started\n        LOG.info(\"Not adding {} module: it already exists\", module.getKey());\n      } catch (Throwable th) {\n        String msg = String.format(\"Failed to add %s module. Aborting.\", module.getKey());\n        throw new RuntimeException(msg, th);\n      }\n    }\n  }","commit_id":"feddca0fdde9c4a827df38b9d05114b5db444656","url":"https://github.com/caskdata/cdap"},{"original_method":"private void deployExtensionModules() {\n    // adding any defined extension modules to be available in dataset manager service\n    for (Map.Entry<String, DatasetModule> module : extensionModules.entrySet()) {\n      try {\n        // NOTE: we assume extension modules are always in classpath, hence passing null for jar location\n        // NOTE: we add extension modules in the system namespace\n        Id.DatasetModule theModule = Id.DatasetModule.from(Id.Namespace.SYSTEM, module.getKey());\n        addModule(theModule, module.getValue().getClass().getName(), null);\n      } catch (DatasetModuleConflictException e) {\n        // perfectly fine: we need to add the modules only the very first time service is started\n        LOG.info(\"Not adding \" + module.getKey() + \" extension module: it already exists\");\n      } catch (Throwable th) {\n        LOG.error(\"Failed to add {} extension module. Aborting.\", module.getKey(), th);\n        throw Throwables.propagate(th);\n      }\n    }\n  }","id":8506,"modified_method":"private void deployExtensionModules() {\n    // adding any defined extension modules to be available in dataset manager service\n    for (Map.Entry<String, DatasetModule> module : extensionModules.entrySet()) {\n      try {\n        // NOTE: we assume extension modules are always in classpath, hence passing null for jar location\n        // NOTE: we add extension modules in the system namespace\n        Id.DatasetModule theModule = Id.DatasetModule.from(Id.Namespace.SYSTEM, module.getKey());\n        addModule(theModule, module.getValue().getClass().getName(), null);\n      } catch (DatasetModuleConflictException e) {\n        // perfectly fine: we need to add the modules only the very first time service is started\n        LOG.info(\"Not adding {} extension module: it already exists\", module.getKey());\n      } catch (Throwable th) {\n        String msg = String.format(\"Failed to add %s extension module. Aborting.\", module.getKey());\n        throw new RuntimeException(msg, th);\n      }\n    }\n  }","commit_id":"feddca0fdde9c4a827df38b9d05114b5db444656","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Add datasets module in a namespace\n   *\n   * @param datasetModuleId the {@link Id.DatasetModule} to add\n   * @param className module class\n   * @param jarLocation location of the module jar\n   */\n  public void addModule(final Id.DatasetModule datasetModuleId, final String className, final Location jarLocation)\n    throws DatasetModuleConflictException {\n\n    LOG.info(\"adding module: {}, className: {}, jarLocation: {}\",\n             datasetModuleId, className, jarLocation == null ? \"[local]\" : jarLocation.toURI());\n\n    try {\n      mdsDatasets.execute(new TxCallable<MDSDatasets, Void>() {\n        @Override\n        public Void call(MDSDatasets datasets) throws DatasetModuleConflictException {\n          DatasetModuleMeta existing = datasets.getTypeMDS().getModule(datasetModuleId);\n          if (existing != null && !allowDatasetUncheckedUpgrade) {\n            String msg = String.format(\"cannot add module %s, module with the same name already exists: %s\",\n                                       datasetModuleId, existing);\n            LOG.warn(msg);\n            throw new DatasetModuleConflictException(msg);\n          }\n\n          DatasetModule module;\n          File unpackedLocation = Files.createTempDir();\n          DependencyTrackingRegistry reg;\n          try {\n            // NOTE: if jarLocation is null, we assume that this is a system module, ie. always present in classpath\n            ClassLoader cl = getClass().getClassLoader();\n            if (jarLocation != null) {\n              BundleJarUtil.unpackProgramJar(jarLocation, unpackedLocation);\n              cl = ProgramClassLoader.create(cConf, unpackedLocation, getClass().getClassLoader());\n            }\n\n            Class clazz = ClassLoaders.loadClass(className, cl, this);\n            module = DatasetModules.getDatasetModule(clazz);\n            reg = new DependencyTrackingRegistry(datasetModuleId.getNamespace(), datasets);\n            module.register(reg);\n          } catch (Exception e) {\n            LOG.error(\"Could not instantiate instance of dataset module class {} for module {} using jarLocation {}\",\n                      className, datasetModuleId, jarLocation);\n            throw Throwables.propagate(e);\n          } finally {\n            try {\n              DirUtils.deleteDirectoryContents(unpackedLocation);\n            } catch (IOException e) {\n              LOG.warn(\"Failed to delete directory {}\", unpackedLocation, e);\n            }\n          }\n          // NOTE: we use set to avoid duplicated dependencies\n          // NOTE: we use LinkedHashSet to preserve order in which dependencies must be loaded\n          Set<String> moduleDependencies = Sets.newLinkedHashSet();\n          for (Id.DatasetType usedType : reg.getUsedTypes()) {\n            DatasetModuleMeta usedModule = datasets.getTypeMDS().getModuleByType(usedType);\n            Preconditions.checkState(usedModule != null,\n                                     String.format(\"Found a null used module for type %s for while adding module %s\",\n                                                   usedType, datasetModuleId));\n            // adding all used types and the module itself, in this very order to keep the order of loading modules\n            // for instantiating a type\n            moduleDependencies.addAll(usedModule.getUsesModules());\n            boolean added = moduleDependencies.add(usedModule.getName());\n            if (added) {\n              // also adding this module as a dependent for all modules it uses\n              usedModule.addUsedByModule(datasetModuleId.getId());\n              datasets.getTypeMDS().writeModule(usedType.getNamespace(), usedModule);\n            }\n          }\n\n          DatasetModuleMeta moduleMeta = new DatasetModuleMeta(datasetModuleId.getId(), className,\n                                                               jarLocation == null ? null : jarLocation.toURI(),\n                                                               reg.getTypes(), Lists.newArrayList(moduleDependencies));\n          datasets.getTypeMDS().writeModule(datasetModuleId.getNamespace(), moduleMeta);\n\n          return null;\n        }\n      });\n\n    } catch (TransactionFailureException e) {\n      Throwable cause = e.getCause();\n      if (cause != null) {\n        if (cause instanceof DatasetModuleConflictException) {\n          throw (DatasetModuleConflictException) cause;\n        } else if (cause instanceof TypeConflictException) {\n          throw new DatasetModuleConflictException(cause);\n        }\n      }\n      throw Throwables.propagate(e);\n    } catch (Exception e) {\n      LOG.error(\"Operation failed\", e);\n      throw Throwables.propagate(e);\n    }\n  }","id":8507,"modified_method":"/**\n   * Add datasets module in a namespace\n   *\n   * @param datasetModuleId the {@link Id.DatasetModule} to add\n   * @param className module class\n   * @param jarLocation location of the module jar\n   */\n  public void addModule(final Id.DatasetModule datasetModuleId, final String className, final Location jarLocation)\n    throws DatasetModuleConflictException {\n\n    LOG.info(\"adding module: {}, className: {}, jarLocation: {}\",\n             datasetModuleId, className, jarLocation == null ? \"[local]\" : jarLocation.toURI());\n\n    try {\n      mdsDatasets.execute(new TxCallable<MDSDatasets, Void>() {\n        @Override\n        public Void call(MDSDatasets datasets) throws DatasetModuleConflictException {\n          DatasetModuleMeta existing = datasets.getTypeMDS().getModule(datasetModuleId);\n          if (existing != null && !allowDatasetUncheckedUpgrade) {\n            String msg = String.format(\"cannot add module %s, module with the same name already exists: %s\",\n                                       datasetModuleId, existing);\n            throw new DatasetModuleConflictException(msg);\n          }\n\n          DatasetModule module;\n          File unpackedLocation = Files.createTempDir();\n          DependencyTrackingRegistry reg;\n          try {\n            // NOTE: if jarLocation is null, we assume that this is a system module, ie. always present in classpath\n            ClassLoader cl = getClass().getClassLoader();\n            if (jarLocation != null) {\n              BundleJarUtil.unpackProgramJar(jarLocation, unpackedLocation);\n              cl = ProgramClassLoader.create(cConf, unpackedLocation, getClass().getClassLoader());\n            }\n\n            Class clazz = ClassLoaders.loadClass(className, cl, this);\n            module = DatasetModules.getDatasetModule(clazz);\n            reg = new DependencyTrackingRegistry(datasetModuleId.getNamespace(), datasets);\n            module.register(reg);\n          } catch (Exception e) {\n            StringBuilder msg = new StringBuilder();\n            msg.append(\"Could not instantiate instance of dataset module class \")\n               .append(className)\n               .append(\" for module \")\n               .append(datasetModuleId)\n               .append(\" using jarLocation \")\n               .append(jarLocation);\n            throw new RuntimeException(msg.toString(), e);\n          } finally {\n            try {\n              DirUtils.deleteDirectoryContents(unpackedLocation);\n            } catch (IOException e) {\n              LOG.warn(\"Failed to delete directory {}\", unpackedLocation, e);\n            }\n          }\n          // NOTE: we use set to avoid duplicated dependencies\n          // NOTE: we use LinkedHashSet to preserve order in which dependencies must be loaded\n          Set<String> moduleDependencies = new LinkedHashSet();\n          for (Id.DatasetType usedType : reg.getUsedTypes()) {\n            DatasetModuleMeta usedModule = datasets.getTypeMDS().getModuleByType(usedType);\n            Preconditions.checkState(usedModule != null,\n                                     String.format(\"Found a null used module for type %s for while adding module %s\",\n                                                   usedType, datasetModuleId));\n            // adding all used types and the module itself, in this very order to keep the order of loading modules\n            // for instantiating a type\n            moduleDependencies.addAll(usedModule.getUsesModules());\n            boolean added = moduleDependencies.add(usedModule.getName());\n            if (added) {\n              // also adding this module as a dependent for all modules it uses\n              usedModule.addUsedByModule(datasetModuleId.getId());\n              datasets.getTypeMDS().writeModule(usedType.getNamespace(), usedModule);\n            }\n          }\n\n          DatasetModuleMeta moduleMeta = new DatasetModuleMeta(datasetModuleId.getId(), className,\n                                                               jarLocation == null ? null : jarLocation.toURI(),\n                                                               reg.getTypes(), Lists.newArrayList(moduleDependencies));\n          datasets.getTypeMDS().writeModule(datasetModuleId.getNamespace(), moduleMeta);\n\n          return null;\n        }\n      });\n\n    } catch (TransactionFailureException e) {\n      Throwable cause = e.getCause();\n      if (cause != null) {\n        if (cause instanceof DatasetModuleConflictException) {\n          throw (DatasetModuleConflictException) cause;\n        } else if (cause instanceof TypeConflictException) {\n          throw new DatasetModuleConflictException(cause);\n        }\n      }\n      throw Throwables.propagate(e);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Operation failed\", e);\n    }\n  }","commit_id":"feddca0fdde9c4a827df38b9d05114b5db444656","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Deletes all modules in a namespace, other than system.\n   * Presumes that the namespace has already been checked to be non-system.\n   *\n   * @param namespaceId the {@link Id.Namespace} to delete modules from.\n   */\n  public void deleteModules(final Id.Namespace namespaceId) throws DatasetModuleConflictException {\n    Preconditions.checkArgument(namespaceId != null && !Id.Namespace.SYSTEM.equals(namespaceId),\n                                \"Cannot delete modules from system namespace\");\n    LOG.warn(\"Deleting all modules from namespace {}\", namespaceId);\n    try {\n      mdsDatasets.execute(new TxCallable<MDSDatasets, Void>() {\n        @Override\n        public Void call(MDSDatasets datasets) throws DatasetModuleConflictException, IOException {\n          Set<String> typesToDelete = Sets.newHashSet();\n          List<Location> moduleLocations = Lists.newArrayList();\n          for (DatasetModuleMeta module : datasets.getTypeMDS().getModules(namespaceId)) {\n            typesToDelete.addAll(module.getTypes());\n            moduleLocations.add(locationFactory.create(module.getJarLocation()));\n          }\n\n          // check if there are any instances that use types of these modules?\n          Collection<DatasetSpecification> dependentInstances = datasets.getInstanceMDS().getByTypes(namespaceId,\n                                                                                                     typesToDelete);\n          // cannot delete when there's instance that uses it\n          if (dependentInstances.size() > 0) {\n            throw new DatasetModuleConflictException(\n              \"Cannot delete all modules: existing dataset instances depend on it. Delete them first\"\n            );\n          }\n\n          datasets.getTypeMDS().deleteModules(namespaceId);\n          // Delete module locations\n          for (Location moduleLocation : moduleLocations) {\n            if (!moduleLocation.delete()) {\n              LOG.debug(\"Could not delete dataset module archive - \" + moduleLocation.toURI().getPath());\n            }\n          }\n          return null;\n        }\n      });\n    } catch (TransactionFailureException e) {\n      if (e.getCause() != null && e.getCause() instanceof DatasetModuleConflictException) {\n        throw (DatasetModuleConflictException) e.getCause();\n      }\n      LOG.error(\"Failed to delete all modules from namespace {}\", namespaceId);\n      throw Throwables.propagate(e);\n    } catch (Exception e) {\n      LOG.error(\"Operation failed\", e);\n      throw Throwables.propagate(e);\n    }\n  }","id":8508,"modified_method":"/**\n   * Deletes all modules in a namespace, other than system.\n   * Presumes that the namespace has already been checked to be non-system.\n   *\n   * @param namespaceId the {@link Id.Namespace} to delete modules from.\n   */\n  public void deleteModules(final Id.Namespace namespaceId) throws DatasetModuleConflictException {\n    Preconditions.checkArgument(namespaceId != null && !Id.Namespace.SYSTEM.equals(namespaceId),\n                                \"Cannot delete modules from system namespace\");\n    LOG.warn(\"Deleting all modules from namespace {}\", namespaceId);\n    try {\n      mdsDatasets.execute(new TxCallable<MDSDatasets, Void>() {\n        @Override\n        public Void call(MDSDatasets datasets) throws DatasetModuleConflictException, IOException {\n          Set<String> typesToDelete = Sets.newHashSet();\n          List<Location> moduleLocations = Lists.newArrayList();\n          for (DatasetModuleMeta module : datasets.getTypeMDS().getModules(namespaceId)) {\n            typesToDelete.addAll(module.getTypes());\n            moduleLocations.add(locationFactory.create(module.getJarLocation()));\n          }\n\n          // check if there are any instances that use types of these modules?\n          Collection<DatasetSpecification> dependentInstances = datasets.getInstanceMDS().getByTypes(namespaceId,\n                                                                                                     typesToDelete);\n          // cannot delete when there's instance that uses it\n          if (dependentInstances.size() > 0) {\n            throw new DatasetModuleConflictException(\n              \"Cannot delete all modules: existing dataset instances depend on it. Delete them first\"\n            );\n          }\n\n          datasets.getTypeMDS().deleteModules(namespaceId);\n          // Delete module locations\n          for (Location moduleLocation : moduleLocations) {\n            if (!moduleLocation.delete()) {\n              LOG.debug(\"Could not delete dataset module archive - \" + moduleLocation.toURI().getPath());\n            }\n          }\n          return null;\n        }\n      });\n    } catch (TransactionFailureException e) {\n      if (e.getCause() != null && e.getCause() instanceof DatasetModuleConflictException) {\n        throw (DatasetModuleConflictException) e.getCause();\n      }\n      String msg = String.format(\"Failed to delete all modules from namespace %s\", namespaceId);\n      throw new RuntimeException(msg, e);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Operation failed\", e);\n    }\n  }","commit_id":"feddca0fdde9c4a827df38b9d05114b5db444656","url":"https://github.com/caskdata/cdap"},{"original_method":"private String getStreamConsumerFactoryName(CConfiguration cConf) {\n    String name = null;\n\n    if (cConf != null) {\n      name = cConf.get(Constants.Dataset.Extensions.EXT_STREAM_CONSUMER_FACTORY);\n      if (name != null) {\n        name = name.trim();\n      }\n    }\n    return name;\n  }","id":8509,"modified_method":"private String getStreamConsumerFactoryName(CConfiguration cConf) {\n    String name = null;\n\n    if (cConf != null) {\n      name = cConf.get(Constants.Dataset.Extensions.STREAM_CONSUMER_FACTORY);\n      if (name != null) {\n        name = name.trim();\n      }\n    }\n    return name;\n  }","commit_id":"feddca0fdde9c4a827df38b9d05114b5db444656","url":"https://github.com/caskdata/cdap"},{"original_method":"private String getDistributedTableModuleName(CConfiguration cConf) {\n    String name = null;\n      if (cConf != null) {\n        name = cConf.get(Constants.Dataset.Extensions.EXT_DISTMODE_TABLE);\n        if (name != null) {\n          name = name.trim();\n        }\n      }\n      return name;\n  }","id":8510,"modified_method":"private String getDistributedTableModuleName(CConfiguration cConf) {\n    String name = null;\n      if (cConf != null) {\n        name = cConf.get(Constants.Dataset.Extensions.DISTMODE_TABLE);\n        if (name != null) {\n          name = name.trim();\n        }\n      }\n      return name;\n  }","commit_id":"feddca0fdde9c4a827df38b9d05114b5db444656","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Finds the leader broker address for the given topic partition.\n   *\n   * @return the address for the leader broker or {@code null} if no leader is currently available.\n   */\n  @Nullable\n  private InetSocketAddress findLeader(String brokers, String topic, int partition) {\n    // Splits the broker list of format \"host:port,host:port\" into a map<host, port>\n    Map<String, String> brokerMap = Splitter.on(',').withKeyValueSeparator(\":\").split(brokers);\n\n    // Go through the broker list and try to find a leader for the given topic partition.\n    for (Map.Entry<String, String> broker : brokerMap.entrySet()) {\n      try {\n        SimpleConsumer consumer = new SimpleConsumer(broker.getKey(), Integer.parseInt(broker.getValue()), SO_TIMEOUT,\n                                                     KafkaConsumerConfigurer.DEFAULT_FETCH_SIZE, \"leaderLookup\");\n        try {\n          TopicMetadataRequest request = new TopicMetadataRequest(ImmutableList.of(topic));\n          TopicMetadataResponse response = consumer.send(request);\n          for (TopicMetadata topicData : response.topicsMetadata()) {\n            for (PartitionMetadata partitionData : topicData.partitionsMetadata()) {\n              if (partitionData.partitionId() == partition) {\n                Broker leader = partitionData.leader();\n                return new InetSocketAddress(leader.host(), leader.port());\n              }\n            }\n          }\n\n        } finally {\n          consumer.close();\n        }\n      } catch (Exception e) {\n        LOG.error(\"Failed to communicate with broker {}:{} for leader lookup for topic-partition {}-{}\",\n                  broker.getKey(), broker.getValue(), topic, partition, e);\n        Throwables.propagate(e);\n      }\n    }\n    return null;\n  }","id":8511,"modified_method":"/**\n   * Finds the leader broker address for the given topic partition.\n   *\n   * @return the address for the leader broker or {@code null} if no leader is currently available.\n   */\n  @Nullable\n  private InetSocketAddress findLeader(String brokers, String topic, int partition) throws Exception {\n    // Splits the broker list of format \"host:port,host:port\" into a map<host, port>\n    Map<String, String> brokerMap = Splitter.on(',').withKeyValueSeparator(\":\").split(brokers);\n\n    // Go through the broker list and try to find a leader for the given topic partition.\n    for (Map.Entry<String, String> broker : brokerMap.entrySet()) {\n      try {\n        SimpleConsumer consumer = new SimpleConsumer(broker.getKey(), Integer.parseInt(broker.getValue()), SO_TIMEOUT,\n                                                     KafkaConsumerConfigurer.DEFAULT_FETCH_SIZE, \"leaderLookup\");\n        try {\n          TopicMetadataRequest request = new TopicMetadataRequest(ImmutableList.of(topic));\n          TopicMetadataResponse response = consumer.send(request);\n          for (TopicMetadata topicData : response.topicsMetadata()) {\n            for (PartitionMetadata partitionData : topicData.partitionsMetadata()) {\n              if (partitionData.partitionId() == partition) {\n                Broker leader = partitionData.leader();\n                return new InetSocketAddress(leader.host(), leader.port());\n              }\n            }\n          }\n\n        } finally {\n          consumer.close();\n        }\n      } catch (Exception e) {\n        throw new Exception(\n          String.format(\"Failed to communicate with broker %s:%s for leader lookup for topic-partition %s-%s\",\n                        broker.getKey(), broker.getValue(), topic, partition), e);\n      }\n    }\n    return null;\n  }","commit_id":"d75be4fba909d56be736c68c901eb0a72451a541","url":"https://github.com/caskdata/cdap"},{"original_method":"private long getReadOffset(SimpleConsumer consumer, String topic, int partition, long time) {\n    OffsetRequest offsetRequest = new OffsetRequest(\n      ImmutableMap.of(new TopicAndPartition(topic, partition), new PartitionOffsetRequestInfo(time, 1)),\n      kafka.api.OffsetRequest.CurrentVersion(), consumer.clientId());\n\n    OffsetResponse response = consumer.getOffsetsBefore(offsetRequest);\n    if (response.hasError()) {\n      LOG.error(\"Failed to fetch offset from broker {}:{} for topic-partition {}-{} with error code {}\",\n                consumer.host(), consumer.port(), topic, partition, response.errorCode(topic, partition));\n      return 0L;\n    }\n    return response.offsets(topic, partition)[0];\n  }","id":8512,"modified_method":"private long getReadOffset(SimpleConsumer consumer, String topic, int partition, long time) {\n    OffsetRequest offsetRequest = new OffsetRequest(\n      ImmutableMap.of(new TopicAndPartition(topic, partition), new PartitionOffsetRequestInfo(time, 1)),\n      kafka.api.OffsetRequest.CurrentVersion(), consumer.clientId());\n\n    OffsetResponse response = consumer.getOffsetsBefore(offsetRequest);\n    if (response.hasError()) {\n      LOG.warn(\"Failed to fetch offset from broker {}:{} for topic-partition {}-{} with error code {}\",\n                consumer.host(), consumer.port(), topic, partition, response.errorCode(topic, partition));\n      return 0L;\n    }\n    return response.offsets(topic, partition)[0];\n  }","commit_id":"d75be4fba909d56be736c68c901eb0a72451a541","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Handles fetch failure.\n   *\n   * @param consumerInfo information on what and how to consume\n   * @param consumer consumer to talk to Kafka\n   * @param readOffset the beginning read offset\n   * @param errorCode error code for the fetch.\n   */\n  private void handleFetchError(KafkaConsumerInfo<Long> consumerInfo,\n                                SimpleConsumer consumer, long readOffset, short errorCode) {\n    TopicPartition topicPartition = consumerInfo.getTopicPartition();\n    String topic = topicPartition.getTopic();\n    int partition = topicPartition.getPartition();\n\n    LOG.error(\"Failed to fetch from broker {}:{} for topic-partition {}-{} with error code {}\",\n              consumer.host(), consumer.port(), topic, partition, errorCode);\n    if (errorCode == ErrorMapping.OffsetOutOfRangeCode()) {\n      // Get the earliest offset\n      long earliest = getReadOffset(consumer, topic, partition, kafka.api.OffsetRequest.EarliestTime());\n      // If the current read offset is smaller than the earliest one, use the earliest offset in next fetch\n      if (readOffset < earliest) {\n        consumerInfo.setReadOffset(earliest);\n      } else {\n        // Otherwise the read offset must be larger than the latest (otherwise it won't have the out of range error)\n        consumerInfo.setReadOffset(getReadOffset(consumer, topic, partition, kafka.api.OffsetRequest.LatestTime()));\n      }\n    } else {\n      // For other type of error, invalid it from cache so that a new one will be created in next iteration\n      kafkaConsumers.invalidate(topicPartition);\n    }\n  }","id":8513,"modified_method":"/**\n   * Handles fetch failure.\n   *\n   * @param consumerInfo information on what and how to consume\n   * @param consumer consumer to talk to Kafka\n   * @param readOffset the beginning read offset\n   * @param errorCode error code for the fetch.\n   */\n  private void handleFetchError(KafkaConsumerInfo<Long> consumerInfo,\n                                SimpleConsumer consumer, long readOffset, short errorCode) {\n    TopicPartition topicPartition = consumerInfo.getTopicPartition();\n    String topic = topicPartition.getTopic();\n    int partition = topicPartition.getPartition();\n\n    LOG.warn(\"Failed to fetch from broker {}:{} for topic-partition {}-{} with error code {}\",\n              consumer.host(), consumer.port(), topic, partition, errorCode);\n    if (errorCode == ErrorMapping.OffsetOutOfRangeCode()) {\n      // Get the earliest offset\n      long earliest = getReadOffset(consumer, topic, partition, kafka.api.OffsetRequest.EarliestTime());\n      // If the current read offset is smaller than the earliest one, use the earliest offset in next fetch\n      if (readOffset < earliest) {\n        consumerInfo.setReadOffset(earliest);\n      } else {\n        // Otherwise the read offset must be larger than the latest (otherwise it won't have the out of range error)\n        consumerInfo.setReadOffset(getReadOffset(consumer, topic, partition, kafka.api.OffsetRequest.LatestTime()));\n      }\n    } else {\n      // For other type of error, invalid it from cache so that a new one will be created in next iteration\n      kafkaConsumers.invalidate(topicPartition);\n    }\n  }","commit_id":"d75be4fba909d56be736c68c901eb0a72451a541","url":"https://github.com/caskdata/cdap"},{"original_method":"@Nullable\n  @Override\n  @SuppressWarnings(\"unchecked\")\n  public SourceState poll(Emitter<StructuredRecord> writer, SourceState currentState) throws InterruptedException {\n    try {\n      // Lets set the internal offset store\n      kafkaConsumer.saveState(currentState);\n      kafkaConsumer.pollMessages(writer);\n    } catch (Throwable t) {\n      LOG.error(\"Error encountered during poll to get message for Kafka source.\", t);\n      TimeUnit.SECONDS.sleep(EXCEPTION_SLEEP_IN_SEC);\n      return currentState;\n    }\n\n    // Update current state\n    return new SourceState(kafkaConsumer.getSavedState());\n  }","id":8514,"modified_method":"@Nullable\n  @Override\n  @SuppressWarnings(\"unchecked\")\n  public SourceState poll(Emitter<StructuredRecord> writer, SourceState currentState) throws InterruptedException {\n    try {\n      // Lets set the internal offset store\n      kafkaConsumer.saveState(currentState);\n      kafkaConsumer.pollMessages(writer);\n      logException = true;\n    } catch (Throwable t) {\n      if (logException) {\n        LOG.error(\"Error encountered during poll to get message for Kafka source.\", t);\n        logException = false;\n      }\n      TimeUnit.SECONDS.sleep(EXCEPTION_SLEEP_IN_SEC);\n      return currentState;\n    }\n\n    // Update current state\n    return new SourceState(kafkaConsumer.getSavedState());\n  }","commit_id":"d75be4fba909d56be736c68c901eb0a72451a541","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void initialize(RealtimeContext context) throws Exception {\n    super.initialize(context);\n\n    kafkaConsumer = new Kafka08SimpleApiConsumer(this);\n    kafkaConsumer.initialize(context);\n    if (!Strings.isNullOrEmpty(config.format)) {\n      FormatSpecification spec = config.getFormatSpec();\n      RecordFormat<ByteBuffer, StructuredRecord> format = RecordFormats.createInitializedFormat(spec);\n      format.initialize(spec);\n    }\n  }","id":8515,"modified_method":"@Override\n  public void initialize(RealtimeContext context) throws Exception {\n    super.initialize(context);\n\n    kafkaConsumer = new Kafka08SimpleApiConsumer(this);\n    kafkaConsumer.initialize(context);\n    if (!Strings.isNullOrEmpty(config.format)) {\n      FormatSpecification spec = config.getFormatSpec();\n      RecordFormat<ByteBuffer, StructuredRecord> format = RecordFormats.createInitializedFormat(spec);\n      format.initialize(spec);\n    }\n    logException = true;\n  }","commit_id":"d75be4fba909d56be736c68c901eb0a72451a541","url":"https://github.com/caskdata/cdap"},{"original_method":"private void reportIncrementalInfo(\n            @NotNull FunctionDescriptor sourceDescriptor,\n            @NotNull FunctionDescriptor targetDescriptor\n    ) {\n        IncrementalCompilationComponents incrementalCompilationComponents = state.getIncrementalCompilationComponents();\n        String moduleId = state.getModuleId();\n\n        if (incrementalCompilationComponents == null || moduleId == null) return;\n\n        String sourceFile = getFilePath(sourceDescriptor);\n        String targetFile = getFilePath(targetDescriptor);\n\n        if (sourceFile != null && targetFile != null) {\n            IncrementalCache incrementalCache = incrementalCompilationComponents.getIncrementalCache(moduleId);\n            InlineRegistering inlineRegistering = incrementalCache.getInlineRegistering();\n            inlineRegistering.registerInline(sourceFile, jvmSignature.toString(), targetFile);\n        }\n    }","id":8516,"modified_method":"private void reportIncrementalInfo(\n            @NotNull FunctionDescriptor sourceDescriptor,\n            @NotNull FunctionDescriptor targetDescriptor\n    ) {\n        IncrementalCompilationComponents incrementalCompilationComponents = state.getIncrementalCompilationComponents();\n        String moduleId = state.getModuleId();\n\n        if (incrementalCompilationComponents == null || moduleId == null) return;\n\n        String sourceFile = getFilePath(sourceDescriptor);\n        String targetFile = getFilePath(targetDescriptor);\n\n        if (sourceFile == null) {\n            DeclarationDescriptor containingDeclaration = sourceDescriptor.getContainingDeclaration();\n\n            if (containingDeclaration instanceof DeclarationDescriptorWithSource) {\n                DeclarationDescriptorWithSource withSource = (DeclarationDescriptorWithSource) containingDeclaration;\n                sourceFile = getFilePath(withSource);\n            }\n        }\n\n        assert sourceFile != null: \"No source file for inline fun: \" + jvmSignature;\n        assert targetFile != null: \"No target file for inline fun: \" + jvmSignature;\n\n        IncrementalCache incrementalCache = incrementalCompilationComponents.getIncrementalCache(moduleId);\n        InlineRegistering inlineRegistering = incrementalCache.getInlineRegistering();\n        inlineRegistering.registerInline(sourceFile, jvmSignature.toString(), targetFile);\n    }","commit_id":"039026ccddb6014b750bf023f8079d6dd3dac857","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Nullable\n    private static String getFilePath(@NotNull FunctionDescriptor descriptor) {\n        SourceElement source = descriptor.getSource();\n        if (!(source instanceof PsiSourceElement)) return null;\n\n        PsiElement psi = ((PsiSourceElement) source).getPsi();\n        if (psi == null) return null;\n\n        VirtualFile file = psi.getContainingFile().getVirtualFile();\n        if (file == null) return null;\n\n        return file.getCanonicalPath();\n    }","id":8517,"modified_method":"@Nullable\n    private static String getFilePath(@NotNull DeclarationDescriptorWithSource descriptor) {\n        SourceElement source = descriptor.getSource();\n        VirtualFile file = null;\n\n        if (source instanceof PsiSourceElement) {\n            file = getFile((PsiSourceElement) source);\n        } else if (source instanceof KotlinJvmBinarySourceElement) {\n            file = getFile((KotlinJvmBinarySourceElement) source);\n        }\n\n        if (file == null) return null;\n\n        return file.getCanonicalPath();\n    }","commit_id":"039026ccddb6014b750bf023f8079d6dd3dac857","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n\tpublic void visitAnnotation(@DottedClassName String annotationClassName, Map<String, ElementValue> map, boolean runtimeVisible) {\n\n\t\tString annotationClassSimpleName = simpleClassName(annotationClassName);\n\n\t\tif (annotationClassSimpleName.startsWith(\"DefaultAnnotation\")) {\n\n\t\t\tElementValue v = map.get(\"value\");\n\t\t\tif (!(v instanceof ClassElementValue))\n\t\t\t\treturn;\n\t\t\tClassElementValue value = (ClassElementValue) v;\n\t\t\tannotationClassSimpleName = annotationClassSimpleName.substring(\"DefaultAnnotation\".length());\n\n\t\t\tTarget annotationTarget = defaultKind.get(annotationClassSimpleName);\n\t\t\tif (annotationTarget != Target.METHOD)\n\t\t\t\treturn;\n\n\t\t\tif (simpleClassName(value.getClassString()).equals(\"CheckReturnValue\")) {\n\t\t\t\tCheckReturnValueAnnotation n = CheckReturnValueAnnotation.parse(getAnnotationParameterAsString(map, \"priority\"));\n\t\t\t\tif (n != null)\n\t\t\t\t\tAnalysisContext.currentAnalysisContext().getCheckReturnAnnotationDatabase().addDefaultAnnotation(\n\t\t\t\t\t        annotationTarget, getDottedClassName(), n);\n\n\t\t\t}\n\n\t\t}\n\n\t\tCheckReturnValueAnnotation n;\n\n\t\tif (annotationClassName.equals(javax.annotation.CheckReturnValue.class.getName())) {\n\t\t\tElementValue v = map.get(\"when\");\n\t\t\tif (v instanceof EnumElementValue) {\n\t\t\tEnumElementValue when = (EnumElementValue) v;\n\t\t\t\tString w = simpleClassName(when.getEnumValueString());\n\t\t\t\tif (w.equals(\"NEVER\") || w.equals(\"UNKNOWN\"))\n\t\t\t\t\tn = CheckReturnValueAnnotation.CHECK_RETURN_VALUE_IGNORE;\n\t\t\t\telse if (w.equals(\"MAYBE\")) \n\t\t\t\t\tn = CheckReturnValueAnnotation.CHECK_RETURN_VALUE_MEDIUM_BAD_PRACTICE;\n\t\t\t\t else if (w.equals(\"ALWAYS\")) \n\t\t\t\t\tn = CheckReturnValueAnnotation.CHECK_RETURN_VALUE_HIGH;\n\t\t\t\telse\n\t\t\t\t\treturn;\n\t\t\t} else\n\t\t\t\tn = CheckReturnValueAnnotation.CHECK_RETURN_VALUE_MEDIUM;\n\n\t\t} else if (annotationClassName.equals(edu.umd.cs.findbugs.annotations.CheckReturnValue.class.getName())) {\n\t\t\tn = CheckReturnValueAnnotation.parse(getAnnotationParameterAsString(map, \"priority\"));\n\t\t} else if (annotationClassSimpleName.equals(\"CheckReturnValue\")) {\n\t\t\tn = CheckReturnValueAnnotation.CHECK_RETURN_VALUE_MEDIUM;\n\t\t} else\n\t\t\treturn;\n\t\tif (n == null) \n\t\t\treturn;\n\t\tif (visitingMethod())\n\t\t\tAnalysisContext.currentAnalysisContext().getCheckReturnAnnotationDatabase().addDirectAnnotation(\n\t\t        XFactory.createXMethod(this), n);\n\t\telse\n\t\t\tAnalysisContext.currentAnalysisContext().getCheckReturnAnnotationDatabase().addDefaultAnnotation(\n\t\t\t\t\t Target.METHOD, getDottedClassName(), n);\n\t\t\t\n\t}","id":8518,"modified_method":"@Override\n\tpublic void visitAnnotation(@DottedClassName String annotationClassName, Map<String, ElementValue> map, boolean runtimeVisible) {\n\n\t\tString annotationClassSimpleName = simpleClassName(annotationClassName);\n\n\t\tif (annotationClassSimpleName.startsWith(\"DefaultAnnotation\")) {\n\t\t\tannotationClassSimpleName = annotationClassSimpleName.substring(\"DefaultAnnotation\".length());\n\n\t\t\tTarget annotationTarget = defaultKind.get(annotationClassSimpleName);\n\t\t\tif (annotationTarget != Target.METHOD)\n\t\t\t\treturn;\n\t\t\t\n\t\t\tElementValue v = map.get(\"value\");\n\t\t\tif (v instanceof ClassElementValue) {\n\t\t\t\thandleClassElementValue((ClassElementValue) v, map, annotationTarget);\n\t\t\t} else if (v instanceof ArrayElementValue) {\n\t\t\t\tfor(ElementValue v2 : ((ArrayElementValue)v).getElementValuesArray()) {\n\t\t\t\t\tif (v2 instanceof ClassElementValue)\n\t\t\t\t\t\thandleClassElementValue((ClassElementValue) v2, map, annotationTarget);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn;\n\t\t}\n\n\t\tCheckReturnValueAnnotation n;\n\n\t\tif (annotationClassName.equals(javax.annotation.CheckReturnValue.class.getName())) {\n\t\t\tElementValue v = map.get(\"when\");\n\t\t\tif (v instanceof EnumElementValue) {\n\t\t\tEnumElementValue when = (EnumElementValue) v;\n\t\t\t\tString w = simpleClassName(when.getEnumValueString());\n\t\t\t\tif (w.equals(\"NEVER\") || w.equals(\"UNKNOWN\"))\n\t\t\t\t\tn = CheckReturnValueAnnotation.CHECK_RETURN_VALUE_IGNORE;\n\t\t\t\telse if (w.equals(\"MAYBE\")) \n\t\t\t\t\tn = CheckReturnValueAnnotation.CHECK_RETURN_VALUE_MEDIUM_BAD_PRACTICE;\n\t\t\t\t else if (w.equals(\"ALWAYS\")) \n\t\t\t\t\tn = CheckReturnValueAnnotation.CHECK_RETURN_VALUE_HIGH;\n\t\t\t\telse\n\t\t\t\t\treturn;\n\t\t\t} else\n\t\t\t\tn = CheckReturnValueAnnotation.CHECK_RETURN_VALUE_MEDIUM;\n\n\t\t} else if (annotationClassName.equals(edu.umd.cs.findbugs.annotations.CheckReturnValue.class.getName())) {\n\t\t\tn = CheckReturnValueAnnotation.parse(getAnnotationParameterAsString(map, \"priority\"));\n\t\t} else if (annotationClassSimpleName.equals(\"CheckReturnValue\")) {\n\t\t\tn = CheckReturnValueAnnotation.CHECK_RETURN_VALUE_MEDIUM;\n\t\t} else\n\t\t\treturn;\n\t\tif (n == null) \n\t\t\treturn;\n\t\tif (visitingMethod())\n\t\t\tAnalysisContext.currentAnalysisContext().getCheckReturnAnnotationDatabase().addDirectAnnotation(\n\t\t        XFactory.createXMethod(this), n);\n\t\telse\n\t\t\tAnalysisContext.currentAnalysisContext().getCheckReturnAnnotationDatabase().addDefaultAnnotation(\n\t\t\t\t\t Target.METHOD, getDottedClassName(), n);\n\t\t\t\n\t}","commit_id":"6f6b4ae08bee3cb8c7e9a268b676878484312038","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n\tpublic void visitAnnotation(String annotationClass,\n\t\t\tMap<String, ElementValue> map, boolean runtimeVisible) {\n\n\t\tif (database == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tNullnessAnnotation n = NullnessAnnotation.Parser.parse(annotationClass);\n\t\tannotationClass = lastPortion(annotationClass);\n\t\tif (n == null) {\n\t\t\tif (annotationClass.startsWith(\"DefaultAnnotation\")) {\n\n\t\t\t\tElementValue v = map.get(\"value\");\n\t\t\t\tif (!(v instanceof ClassElementValue))\n\t\t\t\t\treturn;\n\t\t\t\tClassElementValue value = (ClassElementValue) v;\n\t\t\t\tannotationClass = annotationClass.substring(\"DefaultAnnotation\".length());\n\n\t\t\t\tAnnotationDatabase.Target annotationTarget = defaultKind.get(annotationClass);\n\n\t\t\t\tif (annotationTarget != null) {\n\t\t\t\t\tn = NullnessAnnotation.Parser.parse(value.getClassString());\n\t\t\t\t\tif (n != null)\n\t\t\t\t\t\tdatabase.addDefaultAnnotation(annotationTarget, getDottedClassName(), n);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (visitingMethod())\n\t\t\tdatabase.addDirectAnnotation(\n\t\t\t\t\t\t\tXFactory.createXMethod(this), n);\n\t\telse if (visitingField())\n\t\t\tdatabase.addDirectAnnotation(\n\t\t\t\t\t\t\tXFactory.createXField(this), n);\n\n\t}","id":8519,"modified_method":"@Override\n\tpublic void visitAnnotation(String annotationClass,\n\t\t\tMap<String, ElementValue> map, boolean runtimeVisible) {\n\n\t\tif (database == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tNullnessAnnotation n = NullnessAnnotation.Parser.parse(annotationClass);\n\t\tannotationClass = lastPortion(annotationClass);\n\t\tif (n == null) {\n\t\t\tif (annotationClass.startsWith(\"DefaultAnnotation\")) {\n\t\t\t\tannotationClass = annotationClass.substring(\"DefaultAnnotation\".length());\n\n\t\t\t\tTarget annotationTarget = defaultKind.get(annotationClass);\n\t\t\t\tif (annotationTarget != Target.METHOD)\n\t\t\t\t\treturn;\n\t\t\t\t\n\t\t\t\tElementValue v = map.get(\"value\");\n\t\t\t\tif (v instanceof ClassElementValue) {\n\t\t\t\t\thandleClassElementValue((ClassElementValue) v, annotationTarget);\n\t\t\t\t} else if (v instanceof ArrayElementValue) {\n\t\t\t\t\tfor(ElementValue v2 : ((ArrayElementValue)v).getElementValuesArray()) {\n\t\t\t\t\t\tif (v2 instanceof ClassElementValue)\n\t\t\t\t\t\t\thandleClassElementValue((ClassElementValue) v2, annotationTarget);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\telse if (visitingMethod())\n\t\t\tdatabase.addDirectAnnotation(\n\t\t\t\t\t\t\tXFactory.createXMethod(this), n);\n\t\telse if (visitingField())\n\t\t\tdatabase.addDirectAnnotation(\n\t\t\t\t\t\t\tXFactory.createXField(this), n);\n\n\t}","commit_id":"6f6b4ae08bee3cb8c7e9a268b676878484312038","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Nullable\n  @Override\n  public GraphAnswer performAction(@NotNull GraphAction action) {\n    if (action instanceof LinearBranchesExpansionAction) {\n      FragmentManager fragmentManager = myGraphModel.getFragmentManager();\n      if (((LinearBranchesExpansionAction)action).shouldExpand()) {\n        fragmentManager.showAll();\n      }\n      else {\n        fragmentManager.hideAll();\n      }\n    }\n    else if (action instanceof LongEdgesAction) {\n      myPrintCellModel.setLongEdgeVisibility(((LongEdgesAction)action).shouldShowLongEdges());\n    }\n    else if (action instanceof ClickGraphAction) {\n      myPrintCellModel.getCommitSelectController().deselectAll();\n      Node node = myGraphModel.getGraph().getCommitNodeInRow(((ClickGraphAction)action).getRow());\n      if (node != null) {\n        FragmentManager fragmentController = myGraphModel.getFragmentManager();\n        myPrintCellModel.getCommitSelectController().select(fragmentController.allCommitsCurrentBranch(node));\n      }\n    }\n    return null;\n  }","id":8520,"modified_method":"@Nullable\n  @Override\n  public GraphAnswer performAction(@NotNull GraphAction action) {\n    if (action instanceof LinearBranchesExpansionAction) {\n      FragmentManager fragmentManager = myGraphModel.getFragmentManager();\n      if (((LinearBranchesExpansionAction)action).shouldExpand()) {\n        fragmentManager.showAll();\n      }\n      else {\n        fragmentManager.hideAll();\n      }\n    }\n    else if (action instanceof LongEdgesAction) {\n      myPrintCellModel.setLongEdgeVisibility(((LongEdgesAction)action).shouldShowLongEdges());\n    }\n    else if (action instanceof ClickGraphAction) {\n      return handleClick((ClickGraphAction)action);\n    }\n    else if (action instanceof MouseOverAction) {\n      return handleMouseOver((MouseOverAction)action);\n    }\n    return null;\n  }","commit_id":"c152a2901b09f28d0d0c81ffce6d145d39fe67b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public GraphFacadeImpl(GraphModel graphModel, GraphPrintCellModel printCellModel) {\n    myGraphModel = graphModel;\n    myPrintCellModel = printCellModel;\n  }","id":8521,"modified_method":"public GraphFacadeImpl(@NotNull GraphModel graphModel, @NotNull GraphPrintCellModel printCellModel) {\n    myGraphModel = graphModel;\n    myPrintCellModel = printCellModel;\n    myGraphPainter = new SimpleGraphCellPainter();\n  }","commit_id":"c152a2901b09f28d0d0c81ffce6d145d39fe67b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public Set<Integer> getContainingBranches(int commitIndex) {\n      throw new UnsupportedOperationException();\n    }","id":8522,"modified_method":"@Override\n    public Set<Integer> getContainingBranches(int visibleRow) {\n      throw new UnsupportedOperationException();\n    }","commit_id":"c152a2901b09f28d0d0c81ffce6d145d39fe67b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean overNode(int position, int x, int y, int xOffset) {\n    int x0 = WIDTH_NODE * position + WIDTH_NODE / 2 + xOffset;\n    int y0 = HEIGHT_CELL / 2;\n    int r = CIRCLE_RADIUS;\n    return distance(x0, y0, x, y) <= r;\n  }","id":8523,"modified_method":"public static boolean overNode(int position, int x, int y) {\n    int x0 = WIDTH_NODE * position + WIDTH_NODE / 2;\n    int y0 = HEIGHT_CELL / 2;\n    int r = CIRCLE_RADIUS;\n    return distance(x0, y0, x, y) <= r;\n  }","commit_id":"c152a2901b09f28d0d0c81ffce6d145d39fe67b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean overUpEdge(ShortEdge edge, int x, int y, int offset) {\n    float thick = THICK_LINE;\n    int x1 = WIDTH_NODE * edge.getDownPosition() + WIDTH_NODE / 2 + offset;\n    int y1 = HEIGHT_CELL / 2;\n    int x2 = WIDTH_NODE * edge.getUpPosition() + WIDTH_NODE / 2 + offset;\n    int y2 = -HEIGHT_CELL / 2;\n    //return true;\n    return (distance(x1, y1, x, y) + distance(x2, y2, x, y) < distance(x1, y1, x2, y2) + thick);\n  }","id":8524,"modified_method":"public static boolean overUpEdge(ShortEdge edge, int x, int y) {\n    float thick = THICK_LINE;\n    int x1 = WIDTH_NODE * edge.getDownPosition() + WIDTH_NODE / 2;\n    int y1 = HEIGHT_CELL / 2;\n    int x2 = WIDTH_NODE * edge.getUpPosition() + WIDTH_NODE / 2;\n    int y2 = -HEIGHT_CELL / 2;\n    //return true;\n    return (distance(x1, y1, x, y) + distance(x2, y2, x, y) < distance(x1, y1, x2, y2) + thick);\n  }","commit_id":"c152a2901b09f28d0d0c81ffce6d145d39fe67b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static int getYInsideRow(MouseEvent e) {\n    return e.getY() - getRowIndex(e) * HEIGHT_CELL;\n  }","id":8525,"modified_method":"public static int getYInsideRow(@NotNull Point point) {\n    return point.y - getRowIndex(point) * HEIGHT_CELL;\n  }","commit_id":"c152a2901b09f28d0d0c81ffce6d145d39fe67b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static int getRowIndex(MouseEvent e) {\n    return e.getY() / HEIGHT_CELL;\n  }","id":8526,"modified_method":"public static int getRowIndex(@NotNull Point point) {\n    return point.y / HEIGHT_CELL;\n  }","commit_id":"c152a2901b09f28d0d0c81ffce6d145d39fe67b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean overDownEdge(ShortEdge edge, int x, int y, int offset) {\n    float thick = THICK_LINE;\n    int x1 = WIDTH_NODE * edge.getUpPosition() + WIDTH_NODE / 2 + offset;\n    int y1 = HEIGHT_CELL / 2;\n    int x2 = WIDTH_NODE * edge.getDownPosition() + WIDTH_NODE / 2 + offset;\n    int y2 = HEIGHT_CELL + HEIGHT_CELL / 2;\n    return distance(x1, y1, x, y) + distance(x2, y2, x, y) < distance(x1, y1, x2, y2) + thick;\n  }","id":8527,"modified_method":"public static boolean overDownEdge(ShortEdge edge, int x, int y) {\n    float thick = THICK_LINE;\n    int x1 = WIDTH_NODE * edge.getUpPosition() + WIDTH_NODE / 2;\n    int y1 = HEIGHT_CELL / 2;\n    int x2 = WIDTH_NODE * edge.getDownPosition() + WIDTH_NODE / 2;\n    int y2 = HEIGHT_CELL + HEIGHT_CELL / 2;\n    return distance(x1, y1, x, y) + distance(x2, y2, x, y) < distance(x1, y1, x2, y2) + thick;\n  }","commit_id":"c152a2901b09f28d0d0c81ffce6d145d39fe67b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  @Override\n  public GraphElement mouseOver(@NotNull GraphPrintCell row, int x, int y) {\n    for (SpecialPrintElement printElement : row.getSpecialPrintElements()) {\n      if (printElement.getType() == SpecialPrintElement.Type.COMMIT_NODE) {\n        if (PositionUtil.overNode(printElement.getPosition(), x, y, getXOffset())) {\n          return printElement.getGraphElement();\n        }\n      }\n    }\n    for (ShortEdge edge : row.getUpEdges()) {\n      if (PositionUtil.overUpEdge(edge, x, y, getXOffset())) {\n        return edge.getEdge();\n      }\n    }\n    for (ShortEdge edge : row.getDownEdges()) {\n      if (PositionUtil.overDownEdge(edge, x, y, getXOffset())) {\n        return edge.getEdge();\n      }\n    }\n\n    return null;\n  }","id":8528,"modified_method":"@Nullable\n  @Override\n  public GraphElement mouseOver(@NotNull GraphPrintCell row, int x, int y) {\n    for (SpecialPrintElement printElement : row.getSpecialPrintElements()) {\n      if (printElement.getType() == SpecialPrintElement.Type.COMMIT_NODE) {\n        if (PositionUtil.overNode(printElement.getPosition(), x, y)) {\n          return printElement.getGraphElement();\n        }\n      }\n    }\n    for (ShortEdge edge : row.getUpEdges()) {\n      if (PositionUtil.overUpEdge(edge, x, y)) {\n        return edge.getEdge();\n      }\n    }\n    for (ShortEdge edge : row.getDownEdges()) {\n      if (PositionUtil.overDownEdge(edge, x, y)) {\n        return edge.getEdge();\n      }\n    }\n\n    return null;\n  }","commit_id":"c152a2901b09f28d0d0c81ffce6d145d39fe67b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  @Override\n  public SpecialPrintElement mouseOverArrow(@NotNull GraphPrintCell row, int x, int y) {\n    for (SpecialPrintElement printElement : row.getSpecialPrintElements()) {\n      if (printElement.getType() != SpecialPrintElement.Type.COMMIT_NODE) {\n        if (PositionUtil.overNode(printElement.getPosition(), x, y, getXOffset())) {\n          return printElement;\n        }\n      }\n    }\n    return null;\n  }","id":8529,"modified_method":"@Nullable\n  @Override\n  public SpecialPrintElement mouseOverArrow(@NotNull GraphPrintCell row, int x, int y) {\n    for (SpecialPrintElement printElement : row.getSpecialPrintElements()) {\n      if (printElement.getType() != SpecialPrintElement.Type.COMMIT_NODE) {\n        if (PositionUtil.overNode(printElement.getPosition(), x, y)) {\n          return printElement;\n        }\n      }\n    }\n    return null;\n  }","commit_id":"c152a2901b09f28d0d0c81ffce6d145d39fe67b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void mouseMoved(MouseEvent e) {\n      Node jumpToNode = arrowToNode(e);\n      if (jumpToNode != null || isAboveLink(e)) {\n        setCursor(HAND_CURSOR);\n      }\n      else {\n        setCursor(DEFAULT_CURSOR);\n      }\n\n      if (jumpToNode == null) {\n        myUI.over(overCell(e));\n      } else {\n        myUI.over(null);\n      }\n    }","id":8530,"modified_method":"@Override\n    public void mouseMoved(MouseEvent e) {\n      if (isAboveLink(e)) {\n        setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n      }\n      else {\n        performAction(e, new PairFunction<Integer, Point, GraphAction>() {\n          @Override\n          public GraphAction fun(Integer row, Point point) {\n            return new MouseOverAction(row, point, getGraphPrintCellForRow(getModel(), row));\n          }\n        });\n      }\n    }","commit_id":"c152a2901b09f28d0d0c81ffce6d145d39fe67b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void mouseClicked(MouseEvent e) {\n      if (myLinkListener.onClick(e, e.getClickCount())) {\n        return;\n      }\n\n      if (e.getClickCount() == 1) {\n        Node jumpToNode = arrowToNode(e);\n        if (jumpToNode != null) {\n          jumpToRow(jumpToNode.getRowIndex());\n          return;\n        }\n        GraphElement graphElement = overCell(e);\n        myUI.click(graphElement);\n        if (graphElement == null) {\n          myUI.click(PositionUtil.getRowIndex(e));\n        }\n      }\n    }","id":8531,"modified_method":"@Override\n    public void mouseClicked(MouseEvent e) {\n      if (myLinkListener.onClick(e, e.getClickCount())) {\n        return;\n      }\n\n      if (e.getClickCount() == 1) {\n        performAction(e, new PairFunction<Integer, Point, GraphAction>() {\n          @Override\n          public GraphAction fun(Integer row, Point point) {\n            return new ClickGraphAction(row, point, getGraphPrintCellForRow(getModel(), row));\n          }\n        });\n      }\n    }","commit_id":"c152a2901b09f28d0d0c81ffce6d145d39fe67b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public VcsLogGraphTable(@NotNull VcsLogUI UI, final VcsLogDataHolder logDataHolder) {\n    super();\n    myUI = UI;\n\n    myGraphPainter = new SimpleGraphCellPainter(logDataHolder.isMultiRoot());\n\n    setDefaultRenderer(VirtualFile.class, new RootCellRenderer(myUI));\n    setDefaultRenderer(GraphCommitCell.class, new GraphCommitCellRender(myGraphPainter, logDataHolder, myUI.getColorManager()));\n    setDefaultRenderer(CommitCell.class, new CommitCellRender(myUI.getColorManager(), logDataHolder.getProject()));\n    setDefaultRenderer(String.class, new StringCellRenderer());\n\n    setRowHeight(HEIGHT_CELL);\n    setShowHorizontalLines(false);\n    setIntercellSpacing(new Dimension(0, 0));\n\n    getSelectionModel().addListSelectionListener(new ListSelectionListener() {\n      @Override\n      public void valueChanged(ListSelectionEvent e) {\n        int selectedRow = getSelectedRow();\n        if (selectedRow >= 0) {\n          myUI.click(selectedRow);\n        }\n      }\n    });\n\n    MouseAdapter mouseAdapter = new MyMouseAdapter();\n    addMouseMotionListener(mouseAdapter);\n    addMouseListener(mouseAdapter);\n\n    PopupHandler.installPopupHandler(this, VcsLogUI.POPUP_ACTION_GROUP, VcsLogUI.VCS_LOG_TABLE_PLACE);\n\n    getColumnModel().addColumnModelListener(new TableColumnModelListener() {\n      @Override\n      public void columnAdded(TableColumnModelEvent e) {\n        if (e.getToIndex() == AbstractVcsLogTableModel.ROOT_COLUMN) {\n          myGraphPainter.setRootColumn(getColumnModel().getColumn(AbstractVcsLogTableModel.ROOT_COLUMN));\n        }\n      }\n\n      @Override\n      public void columnRemoved(TableColumnModelEvent e) {\n      }\n\n      @Override\n      public void columnMoved(TableColumnModelEvent e) {\n      }\n\n      @Override\n      public void columnMarginChanged(ChangeEvent e) {\n      }\n\n      @Override\n      public void columnSelectionChanged(ListSelectionEvent e) {\n      }\n    });\n  }","id":8532,"modified_method":"public VcsLogGraphTable(@NotNull VcsLogUI UI, final VcsLogDataHolder logDataHolder) {\n    super();\n    myUI = UI;\n    myLogDataHolder = logDataHolder;\n\n    setDefaultRenderer(VirtualFile.class, new RootCellRenderer(myUI));\n    setDefaultRenderer(GraphCommitCell.class, new GraphCommitCellRender(new SimpleGraphCellPainter(), logDataHolder, myUI.getColorManager()));\n    setDefaultRenderer(CommitCell.class, new CommitCellRender(myUI.getColorManager(), logDataHolder.getProject()));\n    setDefaultRenderer(String.class, new StringCellRenderer());\n\n    setRowHeight(HEIGHT_CELL);\n    setShowHorizontalLines(false);\n    setIntercellSpacing(new Dimension(0, 0));\n\n    getSelectionModel().addListSelectionListener(new ListSelectionListener() {\n      @Override\n      public void valueChanged(ListSelectionEvent e) {\n        int selectedRow = getSelectedRow();\n        if (selectedRow >= 0) {\n          myUI.click(selectedRow);\n        }\n      }\n    });\n\n    MouseAdapter mouseAdapter = new MyMouseAdapter();\n    addMouseMotionListener(mouseAdapter);\n    addMouseListener(mouseAdapter);\n\n    PopupHandler.installPopupHandler(this, VcsLogUI.POPUP_ACTION_GROUP, VcsLogUI.VCS_LOG_TABLE_PLACE);\n  }","commit_id":"c152a2901b09f28d0d0c81ffce6d145d39fe67b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void click(int rowIndex) {\n    DataPack dataPack = myLogDataHolder.getDataPack();\n    dataPack.getGraphFacade().performAction(new ClickGraphAction(rowIndex, null));\n    updateUI();\n  }","id":8533,"modified_method":"public void click(int rowIndex) {\n    DataPack dataPack = myLogDataHolder.getDataPack();\n    dataPack.getGraphFacade().performAction(new ClickGraphAction(rowIndex, null, null));\n    updateUI();\n  }","commit_id":"c152a2901b09f28d0d0c81ffce6d145d39fe67b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public Comparable weigh(@NotNull final PsiElement element, @NotNull final ProximityLocation location) {\n    for (ForcedElementWeigher weigher : Extensions.getExtensions(ForcedElementWeigher.EP_NAME)) {\n      final Comparable weigh = weigher.getForcedWeigh(element);\n      if (weigh != null) return weigh;\n    }\n\n    Project project = location.getProject();\n    if (project == null || !SdkOrLibraryWeigher.isJdkElement(element, project)) {\n      return 0;\n    }\n\n    if (element instanceof PsiClass) {\n      @NonNls final String qname = ((PsiClass)element).getQualifiedName();\n      if (qname != null) {\n        String pkg = StringUtil.getPackageName(qname);\n        if (pkg.equals(\"java.lang\")) return 7;\n        if (pkg.equals(\"java.util\")) return 6;\n\n        if (qname.startsWith(\"java.lang\")) return 5;\n        if (qname.startsWith(\"java.util\")) return 4;\n\n        if (pkg.equals(\"javax.swing\")) return 3;\n        if (qname.startsWith(\"java.\")) return 2;\n        if (qname.startsWith(\"javax.\")) return 1;\n        if (qname.startsWith(\"com.\")) return -1;\n        if (qname.startsWith(\"net.\")) return -1;\n      }\n    }\n    if (element instanceof PsiMethod) {\n      final PsiMethod method = (PsiMethod)element;\n      if (\"finalize\".equals(method.getName()) || \"registerNatives\".equals(method.getName())) {\n        final PsiClass containingClass = method.getContainingClass();\n        if (containingClass != null && CommonClassNames.JAVA_LANG_OBJECT.equals(containingClass.getQualifiedName())) {\n          return -1;\n        }\n      }\n      if (\"subSequence\".equals(method.getName())) {\n        final PsiClass containingClass = method.getContainingClass();\n        if (containingClass != null && CommonClassNames.JAVA_LANG_STRING.equals(containingClass.getQualifiedName())) {\n          return -1;\n        }\n      }\n    }\n    return 0;\n  }","id":8534,"modified_method":"@Override\n  public Comparable weigh(@NotNull final PsiElement element, @NotNull final ProximityLocation location) {\n    for (ForcedElementWeigher weigher : Extensions.getExtensions(ForcedElementWeigher.EP_NAME)) {\n      final Comparable weigh = weigher.getForcedWeigh(element);\n      if (weigh != null) return weigh;\n    }\n\n    Project project = location.getProject();\n    if (project == null || !SdkOrLibraryWeigher.isJdkElement(element, project)) {\n      return 0;\n    }\n\n    if (element instanceof PsiClass) {\n      return getJdkClassProximity((PsiClass)element);\n    }\n    if (element instanceof PsiMethod) {\n      final PsiMethod method = (PsiMethod)element;\n      final PsiClass containingClass = method.getContainingClass();\n      if (containingClass != null) {\n        if (\"finalize\".equals(method.getName()) || \"registerNatives\".equals(method.getName())) {\n          if (CommonClassNames.JAVA_LANG_OBJECT.equals(containingClass.getQualifiedName())) {\n            return -1;\n          }\n        }\n        if (\"subSequence\".equals(method.getName())) {\n          if (CommonClassNames.JAVA_LANG_STRING.equals(containingClass.getQualifiedName())) {\n            return -1;\n          }\n        }\n        return getJdkClassProximity(method.getContainingClass());\n      }\n    }\n    if (element instanceof PsiField) {\n      return getJdkClassProximity(((PsiField)element).getContainingClass());\n    }\n    return 0;\n  }","commit_id":"5b950ff9dcf6954ef74926d5d1e46c288c10733b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n\tprotected String getPath(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tlong entryId = activity.getClassPK();\n\n\t\treturn addNoSuchEntryRedirect(\n\t\t\t\"/blogs/find_entry?entryId=\" + entryId, activity.getClassName(),\n\t\t\tentryId, serviceContext);\n\t}","id":8535,"modified_method":"@Override\n\tprotected String getPath(\n\t\tSocialActivity activity, ServiceContext serviceContext) {\n\n\t\treturn \"/blogs/find_entry?entryId=\" + activity.getClassPK();\n\t}","commit_id":"6070a7fd8a10b93cdf722e7a10f6737322a01192","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected String getPath(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tlong entryId = activity.getClassPK();\n\n\t\treturn addNoSuchEntryRedirect(\n\t\t\t\"/bookmarks/find_entry?entryId=\" + entryId, activity.getClassName(),\n\t\t\tentryId, serviceContext);\n\t}","id":8536,"modified_method":"@Override\n\tprotected String getPath(\n\t\tSocialActivity activity, ServiceContext serviceContext) {\n\n\t\treturn \"/bookmarks/find_entry?entryId=\" + activity.getClassPK();\n\t}","commit_id":"6070a7fd8a10b93cdf722e7a10f6737322a01192","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected String getPath(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tlong folderId = activity.getClassPK();\n\n\t\treturn addNoSuchEntryRedirect(\n\t\t\t\"/bookmarks/find_folder?folderId=\" + folderId,\n\t\t\tactivity.getClassName(), folderId, serviceContext);\n\t}","id":8537,"modified_method":"@Override\n\tprotected String getPath(\n\t\tSocialActivity activity, ServiceContext serviceContext) {\n\n\t\treturn \"/bookmarks/find_folder?folderId=\" + activity.getClassPK();\n\t}","commit_id":"6070a7fd8a10b93cdf722e7a10f6737322a01192","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected String getPath(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tlong entryId = activity.getClassPK();\n\n\t\treturn addNoSuchEntryRedirect(\n\t\t\t\"/document_library/find_file_entry?fileEntryId=\" + entryId,\n\t\t\tactivity.getClassName(), entryId, serviceContext);\n\t}","id":8538,"modified_method":"@Override\n\tprotected String getPath(\n\t\tSocialActivity activity, ServiceContext serviceContext) {\n\n\t\treturn \"/document_library/find_file_entry?fileEntryId=\" +\n\t\t\tactivity.getClassPK();\n\t}","commit_id":"6070a7fd8a10b93cdf722e7a10f6737322a01192","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getFolderLink(\n\t\t\tfinal FileEntry fileEntry, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tlong folderId = fileEntry.getFolderId();\n\n\t\tStringBundler sb = new StringBundler(8);\n\n\t\tsb.append(serviceContext.getPortalURL());\n\t\tsb.append(serviceContext.getPathMain());\n\t\tsb.append(\"/document_library/find_folder?groupId=\");\n\t\tsb.append(fileEntry.getRepositoryId());\n\t\tsb.append(\"&folderId=\");\n\t\tsb.append(folderId);\n\n\t\treturn addNoSuchEntryRedirect(\n\t\t\tsb.toString(), DLFolder.class.getName(), folderId, serviceContext);\n\t}","id":8539,"modified_method":"protected String getFolderLink(\n\t\tFileEntry fileEntry, ServiceContext serviceContext) {\n\n\t\tStringBundler sb = new StringBundler(6);\n\n\t\tsb.append(serviceContext.getPortalURL());\n\t\tsb.append(serviceContext.getPathMain());\n\t\tsb.append(\"/document_library/find_folder?groupId=\");\n\t\tsb.append(fileEntry.getRepositoryId());\n\t\tsb.append(\"&folderId=\");\n\t\tsb.append(fileEntry.getFolderId());\n\n\t\treturn sb.toString();\n\t}","commit_id":"6070a7fd8a10b93cdf722e7a10f6737322a01192","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected String getPath(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tlong folderID = activity.getClassPK();\n\n\t\treturn addNoSuchEntryRedirect(\n\t\t\t\"/document_library/find_folder?folderId=\" + folderID,\n\t\t\tactivity.getClassName(), folderID, serviceContext);\n\t}","id":8540,"modified_method":"@Override\n\tprotected String getPath(\n\t\tSocialActivity activity, ServiceContext serviceContext) {\n\n\t\treturn \"/document_library/find_folder?folderId=\" +\n\t\t\tactivity.getClassPK();\n\t}","commit_id":"6070a7fd8a10b93cdf722e7a10f6737322a01192","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected String getPath(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tlong folderId = activity.getClassPK();\n\n\t\treturn addNoSuchEntryRedirect(\n\t\t\t\"/journal/find_folder?folderId=\" + folderId,\n\t\t\tactivity.getClassName(), folderId, serviceContext);\n\t}","id":8541,"modified_method":"@Override\n\tprotected String getPath(\n\t\tSocialActivity activity, ServiceContext serviceContext) {\n\n\t\treturn \"/journal/find_folder?folderId=\" + activity.getClassPK();\n\t}","commit_id":"6070a7fd8a10b93cdf722e7a10f6737322a01192","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected String getPath(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tlong messageId = activity.getClassPK();\n\n\t\treturn addNoSuchEntryRedirect(\n\t\t\t\"/message_boards/find_message?messageId=\" + messageId,\n\t\t\tactivity.getClassName(), messageId, serviceContext);\n\t}","id":8542,"modified_method":"@Override\n\tprotected String getPath(\n\t\tSocialActivity activity, ServiceContext serviceContext) {\n\n\t\treturn \"/message_boards/find_message?messageId=\" +\n\t\t\tactivity.getClassPK();\n\t}","commit_id":"6070a7fd8a10b93cdf722e7a10f6737322a01192","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tMBMessage message = MBMessageLocalServiceUtil.getMessage(\n\t\t\tactivity.getClassPK());\n\n\t\tlong categoryId = message.getCategoryId();\n\n\t\tif (categoryId <= 0) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tStringBundler sb = new StringBundler(4);\n\n\t\tsb.append(serviceContext.getPortalURL());\n\t\tsb.append(serviceContext.getPathMain());\n\t\tsb.append(\"/message_boards/find_category?mbCategoryId=\");\n\t\tsb.append(categoryId);\n\n\t\tString pathWithRedirect = addNoSuchEntryRedirect(\n\t\t\tsb.toString(), activity.getClassName(), categoryId, serviceContext);\n\n\t\treturn wrapLink(pathWithRedirect, \"go-to-category\", serviceContext);\n\t}","id":8543,"modified_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tMBMessage message = MBMessageLocalServiceUtil.getMessage(\n\t\t\tactivity.getClassPK());\n\n\t\tif (message.getCategoryId() <= 0) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tStringBundler sb = new StringBundler(4);\n\n\t\tsb.append(serviceContext.getPortalURL());\n\t\tsb.append(serviceContext.getPathMain());\n\t\tsb.append(\"/message_boards/find_category?mbCategoryId=\");\n\t\tsb.append(message.getCategoryId());\n\n\t\tString categoryLink = sb.toString();\n\n\t\treturn wrapLink(categoryLink, \"go-to-category\", serviceContext);\n\t}","commit_id":"6070a7fd8a10b93cdf722e7a10f6737322a01192","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected String getPath(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tMBThread thread = MBThreadLocalServiceUtil.getThread(\n\t\t\tactivity.getClassPK());\n\n\t\tlong rootMessageId = thread.getRootMessageId();\n\n\t\treturn addNoSuchEntryRedirect(\n\t\t\t\"/message_boards/find_message?messageId=\" + rootMessageId,\n\t\t\tactivity.getClassName(), rootMessageId, serviceContext);\n\t}","id":8544,"modified_method":"@Override\n\tprotected String getPath(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tMBThread thread = MBThreadLocalServiceUtil.getThread(\n\t\t\tactivity.getClassPK());\n\n\t\treturn \"/message_boards/find_message?messageId=\" +\n\t\t\tthread.getRootMessageId();\n\t}","commit_id":"6070a7fd8a10b93cdf722e7a10f6737322a01192","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tMBMessage message = getMessage(activity);\n\n\t\tlong categoryId = message.getCategoryId();\n\n\t\tif (categoryId <= 0) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tStringBundler sb = new StringBundler(4);\n\n\t\tsb.append(serviceContext.getPortalURL());\n\t\tsb.append(serviceContext.getPathMain());\n\t\tsb.append(\"/message_boards/find_category?mbCategoryId=\");\n\t\tsb.append(categoryId);\n\n\t\tString pathWithRedirect = addNoSuchEntryRedirect(\n\t\t\tsb.toString(), activity.getClassName(), categoryId, serviceContext);\n\n\t\treturn wrapLink(pathWithRedirect, \"go-to-category\", serviceContext);\n\t}","id":8545,"modified_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tMBMessage message = getMessage(activity);\n\n\t\tif (message.getCategoryId() <= 0) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tStringBundler sb = new StringBundler(4);\n\n\t\tsb.append(serviceContext.getPortalURL());\n\t\tsb.append(serviceContext.getPathMain());\n\t\tsb.append(\"/message_boards/find_category?mbCategoryId=\");\n\t\tsb.append(message.getCategoryId());\n\n\t\tString categoryLink = sb.toString();\n\n\t\treturn wrapLink(categoryLink, \"go-to-category\", serviceContext);\n\t}","commit_id":"6070a7fd8a10b93cdf722e7a10f6737322a01192","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected String getPath(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tlong resourcePrimKey = activity.getClassPK();\n\n\t\treturn addNoSuchEntryRedirect(\n\t\t\t\"/wiki/find_page?pageResourcePrimKey=\" + resourcePrimKey,\n\t\t\tactivity.getClassName(), resourcePrimKey, serviceContext);\n\t}","id":8546,"modified_method":"@Override\n\tprotected String getPath(\n\t\tSocialActivity activity, ServiceContext serviceContext) {\n\n\t\treturn \"/wiki/find_page?pageResourcePrimKey=\" + activity.getClassPK();\n\t}","commit_id":"6070a7fd8a10b93cdf722e7a10f6737322a01192","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String getThreadMessagesRSS(\n\t\t\tlong threadId, int max, String type, double version,\n\t\t\tString displayStyle, String feedURL, String entryURL,\n\t\t\tThemeDisplay themeDisplay)\n\t\tthrows PortalException, SystemException {\n\n\t\tString name = StringPool.BLANK;\n\t\tString description = StringPool.BLANK;\n\n\t\tList<MBMessage> messages = new ArrayList<MBMessage>();\n\n\t\tMessageCreateDateComparator comparator =\n\t\t\tnew MessageCreateDateComparator(false, true);\n\n\t\tIterator<MBMessage> itr = mbMessageLocalService.getThreadMessages(\n\t\t\tthreadId, comparator).iterator();\n\n\t\twhile (itr.hasNext() && (messages.size() < max)) {\n\t\t\tMBMessage message = itr.next();\n\n\t\t\tif (MBMessagePermission.contains(\n\t\t\t\t\tgetPermissionChecker(), message, ActionKeys.VIEW)) {\n\n\t\t\t\tmessages.add(message);\n\t\t\t}\n\t\t}\n\n\t\tif (messages.size() > 0) {\n\t\t\tMBMessage message = messages.get(messages.size() - 1);\n\n\t\t\tname = message.getSubject();\n\t\t\tdescription = message.getSubject();\n\t\t}\n\n\t\treturn exportToRSS(\n\t\t\tname, description, type, version, displayStyle, feedURL, entryURL,\n\t\t\tmessages, themeDisplay);\n\t}","id":8547,"modified_method":"public String getThreadMessagesRSS(\n\t\t\tlong threadId, int max, String type, double version,\n\t\t\tString displayStyle, String feedURL, String entryURL,\n\t\t\tThemeDisplay themeDisplay)\n\t\tthrows PortalException, SystemException {\n\n\t\tString name = StringPool.BLANK;\n\t\tString description = StringPool.BLANK;\n\n\t\tList<MBMessage> messages = new ArrayList<MBMessage>();\n\n\t\tMessageCreateDateComparator comparator =\n\t\t\tnew MessageCreateDateComparator(false, true);\n\n\t\tMBThread thread = mbThreadLocalService.getThread(threadId);\n\n\t\tif (MBMessagePermission.contains(\n\t\t\t\t\tgetPermissionChecker(), thread.getRootMessageId(), ActionKeys.VIEW)) {\n\t\t\tIterator<MBMessage> itr = mbMessageLocalService.getThreadMessages(\n\t\t\t\tthreadId, comparator).iterator();\n\n\t\t\twhile (itr.hasNext() && (messages.size() < max)) {\n\t\t\t\tMBMessage message = itr.next();\n\n\t\t\t\tif (MBMessagePermission.contains(\n\t\t\t\t\t\tgetPermissionChecker(), message, ActionKeys.VIEW)) {\n\n\t\t\t\t\tmessages.add(message);\n\t\t\t\t}\n\t\t\t}\n        }\n\n\t\tif (messages.size() > 0) {\n\t\t\tMBMessage message = messages.get(messages.size() - 1);\n\n\t\t\tname = message.getSubject();\n\t\t\tdescription = message.getSubject();\n\t\t}\n\n\t\treturn exportToRSS(\n\t\t\tname, description, type, version, displayStyle, feedURL, entryURL,\n\t\t\tmessages, themeDisplay);\n\t}","commit_id":"93fcf027262ee2314631ba446be8cc2eea0d27b9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String getGroupMessagesRSS(\n\t\t\tlong groupId, int max, String type, double version,\n\t\t\tString displayStyle, String feedURL, String entryURL,\n\t\t\tThemeDisplay themeDisplay)\n\t\tthrows PortalException, SystemException {\n\n\t\tString name = StringPool.BLANK;\n\t\tString description = StringPool.BLANK;\n\n\t\tList<MBMessage> messages = new ArrayList<MBMessage>();\n\n\t\tint lastIntervalStart = 0;\n\t\tboolean listNotExhausted = true;\n\t\tMessageCreateDateComparator comparator =\n\t\t\tnew MessageCreateDateComparator(false, true);\n\n\t\twhile ((messages.size() < max) && listNotExhausted) {\n\t\t\tList<MBMessage> messageList =\n\t\t\t\tmbMessageLocalService.getGroupMessages(\n\t\t\t\t\tgroupId, lastIntervalStart, lastIntervalStart + max,\n\t\t\t\t\tcomparator);\n\n\t\t\tIterator<MBMessage> itr = messageList.iterator();\n\n\t\t\tlastIntervalStart += max;\n\t\t\tlistNotExhausted = (messageList.size() == max);\n\n\t\t\twhile (itr.hasNext() && (messages.size() < max)) {\n\t\t\t\tMBMessage message = itr.next();\n\n\t\t\t\tif (MBMessagePermission.contains(\n\t\t\t\t\t\tgetPermissionChecker(), message, ActionKeys.VIEW)) {\n\n\t\t\t\t\tmessages.add(message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (messages.size() > 0) {\n\t\t\tMBMessage message = messages.get(messages.size() - 1);\n\n\t\t\tname = message.getSubject();\n\t\t\tdescription = message.getSubject();\n\t\t}\n\n\t\treturn exportToRSS(\n\t\t\tname, description, type, version, displayStyle, feedURL, entryURL,\n\t\t\tmessages, themeDisplay);\n\t}","id":8548,"modified_method":"public String getGroupMessagesRSS(\n\t\t\tlong groupId, int max, String type, double version,\n\t\t\tString displayStyle, String feedURL, String entryURL,\n\t\t\tThemeDisplay themeDisplay)\n\t\tthrows PortalException, SystemException {\n\n\t\tString name = StringPool.BLANK;\n\t\tString description = StringPool.BLANK;\n\n\t\tList<MBMessage> messages = new ArrayList<MBMessage>();\n\n\t\tint lastIntervalStart = 0;\n\t\tboolean listNotExhausted = true;\n\t\tMessageCreateDateComparator comparator =\n\t\t\tnew MessageCreateDateComparator(false, true);\n\n\t\twhile ((messages.size() < max) && listNotExhausted) {\n\t\t\tList<MBMessage> messageList =\n\t\t\t\tmbMessageLocalService.getGroupMessages(\n\t\t\t\t\tgroupId, lastIntervalStart, lastIntervalStart + max,\n\t\t\t\t\tcomparator);\n\n\t\t\tIterator<MBMessage> itr = messageList.iterator();\n\n\t\t\tlastIntervalStart += max;\n\t\t\tlistNotExhausted = (messageList.size() == max);\n\n\t\t\twhile (itr.hasNext() && (messages.size() < max)) {\n\t\t\t\tMBMessage message = itr.next();\n\t\t\t\tMBThread thread = mbThreadLocalService.getThread(message.getThreadId());\n\n\t\t\t\tif (MBMessagePermission.contains(\n\t\t\t\t\t\tgetPermissionChecker(), message, ActionKeys.VIEW) && MBMessagePermission.contains(\n\t\t\t\t\tgetPermissionChecker(), thread.getRootMessageId(), ActionKeys.VIEW)) {\n\n\t\t\t\t\tmessages.add(message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (messages.size() > 0) {\n\t\t\tMBMessage message = messages.get(messages.size() - 1);\n\n\t\t\tname = message.getSubject();\n\t\t\tdescription = message.getSubject();\n\t\t}\n\n\t\treturn exportToRSS(\n\t\t\tname, description, type, version, displayStyle, feedURL, entryURL,\n\t\t\tmessages, themeDisplay);\n\t}","commit_id":"93fcf027262ee2314631ba446be8cc2eea0d27b9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String getCompanyMessagesRSS(\n\t\t\tlong companyId, int max, String type, double version,\n\t\t\tString displayStyle, String feedURL, String entryURL,\n\t\t\tThemeDisplay themeDisplay)\n\t\tthrows PortalException, SystemException {\n\n\t\tCompany company = companyPersistence.findByPrimaryKey(companyId);\n\n\t\tString name = company.getName();\n\t\tString description = company.getName();\n\n\t\tList<MBMessage> messages = new ArrayList<MBMessage>();\n\n\t\tint lastIntervalStart = 0;\n\t\tboolean listNotExhausted = true;\n\t\tMessageCreateDateComparator comparator =\n\t\t\tnew MessageCreateDateComparator(false, false);\n\n\t\twhile ((messages.size() < max) && listNotExhausted) {\n\t\t\tList<MBMessage> messageList =\n\t\t\t\tmbMessageLocalService.getCompanyMessages(\n\t\t\t\t\tcompanyId, lastIntervalStart, lastIntervalStart + max,\n\t\t\t\t\tcomparator);\n\n\t\t\tIterator<MBMessage> itr = messageList.iterator();\n\n\t\t\tlastIntervalStart += max;\n\t\t\tlistNotExhausted = (messageList.size() == max);\n\n\t\t\twhile (itr.hasNext() && (messages.size() < max)) {\n\t\t\t\tMBMessage message = itr.next();\n\n\t\t\t\tif (MBMessagePermission.contains(\n\t\t\t\t\t\tgetPermissionChecker(), message, ActionKeys.VIEW)) {\n\n\t\t\t\t\tmessages.add(message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn exportToRSS(\n\t\t\tname, description, type, version, displayStyle, feedURL, entryURL,\n\t\t\tmessages, themeDisplay);\n\t}","id":8549,"modified_method":"public String getCompanyMessagesRSS(\n\t\t\tlong companyId, int max, String type, double version,\n\t\t\tString displayStyle, String feedURL, String entryURL,\n\t\t\tThemeDisplay themeDisplay)\n\t\tthrows PortalException, SystemException {\n\n\t\tCompany company = companyPersistence.findByPrimaryKey(companyId);\n\n\t\tString name = company.getName();\n\t\tString description = company.getName();\n\n\t\tList<MBMessage> messages = new ArrayList<MBMessage>();\n\n\t\tint lastIntervalStart = 0;\n\t\tboolean listNotExhausted = true;\n\t\tMessageCreateDateComparator comparator =\n\t\t\tnew MessageCreateDateComparator(false, false);\n\n\t\twhile ((messages.size() < max) && listNotExhausted) {\n\t\t\tList<MBMessage> messageList =\n\t\t\t\tmbMessageLocalService.getCompanyMessages(\n\t\t\t\t\tcompanyId, lastIntervalStart, lastIntervalStart + max,\n\t\t\t\t\tcomparator);\n\n\t\t\tIterator<MBMessage> itr = messageList.iterator();\n\n\t\t\tlastIntervalStart += max;\n\t\t\tlistNotExhausted = (messageList.size() == max);\n\n\t\t\twhile (itr.hasNext() && (messages.size() < max)) {\n\t\t\t\tMBMessage message = itr.next();\n\t\t\t\tMBThread thread = mbThreadLocalService.getThread(message.getThreadId());\n\n\t\t\t\tif (MBMessagePermission.contains(\n\t\t\t\t\t\tgetPermissionChecker(), message, ActionKeys.VIEW) && MBMessagePermission.contains(\n\t\t\t\t\tgetPermissionChecker(), thread.getRootMessageId(), ActionKeys.VIEW)) {\n\n\t\t\t\t\tmessages.add(message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn exportToRSS(\n\t\t\tname, description, type, version, displayStyle, feedURL, entryURL,\n\t\t\tmessages, themeDisplay);\n\t}","commit_id":"93fcf027262ee2314631ba446be8cc2eea0d27b9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String getCategoryMessagesRSS(\n\t\t\tlong categoryId, int max, String type, double version,\n\t\t\tString displayStyle, String feedURL, String entryURL,\n\t\t\tThemeDisplay themeDisplay)\n\t\tthrows PortalException, SystemException {\n\n\t\tMBCategory category = mbCategoryLocalService.getCategory(\n\t\t\tcategoryId);\n\n\t\tString name = category.getName();\n\t\tString description = category.getDescription();\n\n\t\tList<MBMessage> messages = new ArrayList<MBMessage>();\n\n\t\tint lastIntervalStart = 0;\n\t\tboolean listNotExhausted = true;\n\t\tMessageCreateDateComparator comparator =\n\t\t\tnew MessageCreateDateComparator(false, false);\n\n\t\twhile ((messages.size() < max) && listNotExhausted) {\n\t\t\tList<MBMessage> messageList =\n\t\t\t\tmbMessageLocalService.getCategoryMessages(\n\t\t\t\t\tcategoryId, lastIntervalStart, lastIntervalStart + max,\n\t\t\t\t\tcomparator);\n\n\t\t\tIterator<MBMessage> itr = messageList.iterator();\n\n\t\t\tlastIntervalStart += max;\n\t\t\tlistNotExhausted = (messageList.size() == max);\n\n\t\t\twhile (itr.hasNext() && (messages.size() < max)) {\n\t\t\t\tMBMessage message = itr.next();\n\n\t\t\t\tif (MBMessagePermission.contains(\n\t\t\t\t\t\tgetPermissionChecker(), message, ActionKeys.VIEW)) {\n\n\t\t\t\t\tmessages.add(message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn exportToRSS(\n\t\t\tname, description, type, version, displayStyle, feedURL, entryURL,\n\t\t\tmessages, themeDisplay);\n\t}","id":8550,"modified_method":"public String getCategoryMessagesRSS(\n\t\t\tlong categoryId, int max, String type, double version,\n\t\t\tString displayStyle, String feedURL, String entryURL,\n\t\t\tThemeDisplay themeDisplay)\n\t\tthrows PortalException, SystemException {\n\n\t\tMBCategory category = mbCategoryLocalService.getCategory(\n\t\t\tcategoryId);\n\n\t\tString name = category.getName();\n\t\tString description = category.getDescription();\n\n\t\tList<MBMessage> messages = new ArrayList<MBMessage>();\n\n\t\tint lastIntervalStart = 0;\n\t\tboolean listNotExhausted = true;\n\t\tMessageCreateDateComparator comparator =\n\t\t\tnew MessageCreateDateComparator(false, false);\n\n\t\twhile ((messages.size() < max) && listNotExhausted) {\n\t\t\tList<MBMessage> messageList =\n\t\t\t\tmbMessageLocalService.getCategoryMessages(\n\t\t\t\t\tcategoryId, lastIntervalStart, lastIntervalStart + max,\n\t\t\t\t\tcomparator);\n\n\t\t\tIterator<MBMessage> itr = messageList.iterator();\n\n\t\t\tlastIntervalStart += max;\n\t\t\tlistNotExhausted = (messageList.size() == max);\n\n\t\t\twhile (itr.hasNext() && (messages.size() < max)) {\n\t\t\t\tMBMessage message = itr.next();\n\n\t\t\t\tMBThread thread = mbThreadLocalService.getThread(message.getThreadId());\n\n\t\t\t\tif (MBMessagePermission.contains(\n\t\t\t\t\t\tgetPermissionChecker(), message, ActionKeys.VIEW) && MBMessagePermission.contains(\n\t\t\t\t\tgetPermissionChecker(), thread.getRootMessageId(), ActionKeys.VIEW)) {\n\n\t\t\t\t\tmessages.add(message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn exportToRSS(\n\t\t\tname, description, type, version, displayStyle, feedURL, entryURL,\n\t\t\tmessages, themeDisplay);\n\t}","commit_id":"93fcf027262ee2314631ba446be8cc2eea0d27b9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String getGroupMessagesRSS(\n\t\t\tlong groupId, long userId, int max, String type, double version,\n\t\t\tString displayStyle, String feedURL, String entryURL,\n\t\t\tThemeDisplay themeDisplay)\n\t\tthrows PortalException, SystemException {\n\n\t\tString name = StringPool.BLANK;\n\t\tString description = StringPool.BLANK;\n\n\t\tList<MBMessage> messages = new ArrayList<MBMessage>();\n\n\t\tint lastIntervalStart = 0;\n\t\tboolean listNotExhausted = true;\n\t\tMessageCreateDateComparator comparator =\n\t\t\tnew MessageCreateDateComparator(false, true);\n\n\t\twhile ((messages.size() < max) && listNotExhausted) {\n\t\t\tList<MBMessage> messageList =\n\t\t\t\tmbMessageLocalService.getGroupMessages(\n\t\t\t\t\tgroupId, userId, lastIntervalStart, lastIntervalStart + max,\n\t\t\t\t\tcomparator);\n\n\t\t\tIterator<MBMessage> itr = messageList.iterator();\n\n\t\t\tlastIntervalStart += max;\n\t\t\tlistNotExhausted = (messageList.size() == max);\n\n\t\t\twhile (itr.hasNext() && (messages.size() < max)) {\n\t\t\t\tMBMessage message = itr.next();\n\n\t\t\t\tif (MBMessagePermission.contains(\n\t\t\t\t\t\tgetPermissionChecker(), message, ActionKeys.VIEW)) {\n\n\t\t\t\t\tmessages.add(message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (messages.size() > 0) {\n\t\t\tMBMessage message = messages.get(messages.size() - 1);\n\n\t\t\tname = message.getSubject();\n\t\t\tdescription = message.getSubject();\n\t\t}\n\n\t\treturn exportToRSS(\n\t\t\tname, description, type, version, displayStyle, feedURL, entryURL,\n\t\t\tmessages, themeDisplay);\n\t}","id":8551,"modified_method":"public String getGroupMessagesRSS(\n\t\t\tlong groupId, long userId, int max, String type, double version,\n\t\t\tString displayStyle, String feedURL, String entryURL,\n\t\t\tThemeDisplay themeDisplay)\n\t\tthrows PortalException, SystemException {\n\n\t\tString name = StringPool.BLANK;\n\t\tString description = StringPool.BLANK;\n\n\t\tList<MBMessage> messages = new ArrayList<MBMessage>();\n\n\t\tint lastIntervalStart = 0;\n\t\tboolean listNotExhausted = true;\n\t\tMessageCreateDateComparator comparator =\n\t\t\tnew MessageCreateDateComparator(false, true);\n\n\t\twhile ((messages.size() < max) && listNotExhausted) {\n\t\t\tList<MBMessage> messageList =\n\t\t\t\tmbMessageLocalService.getGroupMessages(\n\t\t\t\t\tgroupId, userId, lastIntervalStart, lastIntervalStart + max,\n\t\t\t\t\tcomparator);\n\n\t\t\tIterator<MBMessage> itr = messageList.iterator();\n\n\t\t\tlastIntervalStart += max;\n\t\t\tlistNotExhausted = (messageList.size() == max);\n\n\t\t\twhile (itr.hasNext() && (messages.size() < max)) {\n\t\t\t\tMBMessage message = itr.next();\n\n\t\t\t\tMBThread thread = mbThreadLocalService.getThread(message.getThreadId());\n\n\t\t\t\tif (MBMessagePermission.contains(\n\t\t\t\t\t\tgetPermissionChecker(), message, ActionKeys.VIEW) && MBMessagePermission.contains(\n\t\t\t\t\tgetPermissionChecker(), thread.getRootMessageId(), ActionKeys.VIEW)) {\n\n\t\t\t\t\tmessages.add(message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (messages.size() > 0) {\n\t\t\tMBMessage message = messages.get(messages.size() - 1);\n\n\t\t\tname = message.getSubject();\n\t\t\tdescription = message.getSubject();\n\t\t}\n\n\t\treturn exportToRSS(\n\t\t\tname, description, type, version, displayStyle, feedURL, entryURL,\n\t\t\tmessages, themeDisplay);\n\t}","commit_id":"93fcf027262ee2314631ba446be8cc2eea0d27b9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\r\n\tpublic void draw (SpriteBatch batch, float parentAlpha) {\r\n\t\tfinal Drawable knob = style.knob;\r\n\t\tfinal Drawable bg = style.background;\r\n\t\tfinal Drawable knobBefore = style.knobBefore;\r\n\t\tfinal Drawable knobAfter = style.knobAfter;\r\n\r\n\t\tColor color = getColor();\r\n\t\tfloat x = getX();\r\n\t\tfloat y = getY();\r\n\t\tfloat width = getWidth();\r\n\t\tfloat height = getHeight();\r\n\r\n\t\tbatch.setColor(color.r, color.g, color.b, color.a * parentAlpha);\r\n\r\n\t\tif (vertical) {\r\n\t\t\tbg.draw(batch, x + (int)((width - bg.getMinWidth()) * 0.5f), y, bg.getMinWidth(), height);\r\n\r\n\t\t\tfloat sliderPosHeight = height - (bg.getTopHeight() + bg.getBottomHeight());\r\n\t\t\tsliderPos = (value - min) / (max - min) * (sliderPosHeight - knob.getMinHeight());\r\n\t\t\tsliderPos = Math.max(0, sliderPos);\r\n\t\t\tsliderPos = Math.min(sliderPosHeight - knob.getMinHeight(), sliderPos) + bg.getBottomHeight();\r\n\r\n\t\t\tfloat knobHeightHalf = knob.getMinHeight() * 0.5f;\r\n\t\t\tif (knobBefore != null) {\r\n\t\t\t\tknobBefore.draw(batch, x + (int)((width - knobBefore.getMinWidth()) * 0.5f), y, knobBefore.getMinWidth(),\r\n\t\t\t\t\t(int)(sliderPos + knobHeightHalf));\r\n\t\t\t}\r\n\t\t\tif (knobAfter != null) {\r\n\t\t\t\tknobAfter.draw(batch, x + (int)((width - knobAfter.getMinWidth()) * 0.5f), y + (int)(sliderPos + knobHeightHalf),\r\n\t\t\t\t\tknobAfter.getMinWidth(), height - (int)(sliderPos + knobHeightHalf));\r\n\t\t\t}\r\n\t\t\tknob.draw(batch, x + (int)((width - knob.getMinWidth()) * 0.5f), (int)(y + sliderPos), knob.getMinWidth(),\r\n\t\t\t\tknob.getMinHeight());\r\n\t\t} else {\r\n\t\t\tbg.draw(batch, x, y + (int)((height - bg.getMinHeight()) * 0.5f), width, bg.getMinHeight());\r\n\r\n\t\t\tfloat sliderPosWidth = width - (bg.getLeftWidth() + bg.getRightWidth());\r\n\t\t\tsliderPos = (value - min) / (max - min) * (sliderPosWidth - knob.getMinWidth());\r\n\t\t\tsliderPos = Math.max(0, sliderPos);\r\n\t\t\tsliderPos = Math.min(sliderPosWidth - knob.getMinWidth(), sliderPos) + bg.getLeftWidth();\r\n\r\n\t\t\tfloat knobHeightHalf = knob.getMinHeight() * 0.5f;\r\n\t\t\tif (knobBefore != null) {\r\n\t\t\t\tknobBefore.draw(batch, x, y + (int)((height - knobBefore.getMinHeight()) * 0.5f), (int)(sliderPos + knobHeightHalf),\r\n\t\t\t\t\tknobBefore.getMinHeight());\r\n\t\t\t}\r\n\t\t\tif (knobAfter != null) {\r\n\t\t\t\tknobAfter.draw(batch, x + (int)(sliderPos + knobHeightHalf), y + (int)((height - knobAfter.getMinHeight()) * 0.5f),\r\n\t\t\t\t\twidth - (int)(sliderPos + knobHeightHalf), knobAfter.getMinHeight());\r\n\t\t\t}\r\n\t\t\tknob.draw(batch, (int)(x + sliderPos), (int)(y + (height - knob.getMinHeight()) * 0.5f), knob.getMinWidth(),\r\n\t\t\t\tknob.getMinHeight());\r\n\t\t}\r\n\t}","id":8552,"modified_method":"@Override\r\n\tpublic void draw (SpriteBatch batch, float parentAlpha) {\r\n\t\tfinal Drawable knob = style.knob;\r\n\t\tfinal Drawable bg = style.background;\r\n\t\tfinal Drawable knobBefore = style.knobBefore;\r\n\t\tfinal Drawable knobAfter = style.knobAfter;\r\n\r\n\t\tColor color = getColor();\r\n\t\tfloat x = getX();\r\n\t\tfloat y = getY();\r\n\t\tfloat width = getWidth();\r\n\t\tfloat height = getHeight();\r\n\t\tfloat knobHeight = knob == null ? 0 : knob.getMinHeight();\r\n\t\tfloat knobWidth = knob == null ? 0 : knob.getMinWidth();\r\n\r\n\t\tbatch.setColor(color.r, color.g, color.b, color.a * parentAlpha);\r\n\r\n\t\tif (vertical) {\r\n\t\t\tbg.draw(batch, x + (int)((width - bg.getMinWidth()) * 0.5f), y, bg.getMinWidth(), height);\r\n\r\n\t\t\tfloat sliderPosHeight = height - (bg.getTopHeight() + bg.getBottomHeight());\r\n\t\t\tsliderPos = (value - min) / (max - min) * (sliderPosHeight - knobHeight);\r\n\t\t\tsliderPos = Math.max(0, sliderPos);\r\n\t\t\tsliderPos = Math.min(sliderPosHeight - knobHeight, sliderPos) + bg.getBottomHeight();\r\n\r\n\t\t\tfloat knobHeightHalf = knobHeight * 0.5f;\r\n\t\t\tif (knobBefore != null) {\r\n\t\t\t\tknobBefore.draw(batch, x + (int)((width - knobBefore.getMinWidth()) * 0.5f), y, knobBefore.getMinWidth(),\r\n\t\t\t\t\t(int)(sliderPos + knobHeightHalf));\r\n\t\t\t}\r\n\t\t\tif (knobAfter != null) {\r\n\t\t\t\tknobAfter.draw(batch, x + (int)((width - knobAfter.getMinWidth()) * 0.5f), y + (int)(sliderPos + knobHeightHalf),\r\n\t\t\t\t\tknobAfter.getMinWidth(), height - (int)(sliderPos + knobHeightHalf));\r\n\t\t\t}\r\n\t\t\tif (knob != null) knob.draw(batch, x + (int)((width - knobWidth) * 0.5f), (int)(y + sliderPos), knobWidth, knobHeight);\r\n\t\t} else {\r\n\t\t\tbg.draw(batch, x, y + (int)((height - bg.getMinHeight()) * 0.5f), width, bg.getMinHeight());\r\n\r\n\t\t\tfloat sliderPosWidth = width - (bg.getLeftWidth() + bg.getRightWidth());\r\n\t\t\tsliderPos = (value - min) / (max - min) * (sliderPosWidth - knobWidth);\r\n\t\t\tsliderPos = Math.max(0, sliderPos);\r\n\t\t\tsliderPos = Math.min(sliderPosWidth - knobWidth, sliderPos) + bg.getLeftWidth();\r\n\r\n\t\t\tfloat knobHeightHalf = knobHeight * 0.5f;\r\n\t\t\tif (knobBefore != null) {\r\n\t\t\t\tknobBefore.draw(batch, x, y + (int)((height - knobBefore.getMinHeight()) * 0.5f), (int)(sliderPos + knobHeightHalf),\r\n\t\t\t\t\tknobBefore.getMinHeight());\r\n\t\t\t}\r\n\t\t\tif (knobAfter != null) {\r\n\t\t\t\tknobAfter.draw(batch, x + (int)(sliderPos + knobHeightHalf), y + (int)((height - knobAfter.getMinHeight()) * 0.5f),\r\n\t\t\t\t\twidth - (int)(sliderPos + knobHeightHalf), knobAfter.getMinHeight());\r\n\t\t\t}\r\n\t\t\tif (knob != null)\r\n\t\t\t\tknob.draw(batch, (int)(x + sliderPos), (int)(y + (height - knobHeight) * 0.5f), knobWidth, knobHeight);\r\n\t\t}\r\n\t}","commit_id":"8800a9253d104e8d2c884d7014cb58fb174afe3c","url":"https://github.com/libgdx/libgdx"},{"original_method":"public float getPrefHeight () {\r\n\t\tif (vertical)\r\n\t\t\treturn 140;\r\n\t\telse\r\n\t\t\treturn Math.max(style.knob.getMinHeight(), style.background.getMinHeight());\r\n\t}","id":8553,"modified_method":"public float getPrefHeight () {\r\n\t\tif (vertical)\r\n\t\t\treturn 140;\r\n\t\telse\r\n\t\t\treturn Math.max(style.knob == null ? 0 : style.knob.getMinHeight(), style.background.getMinHeight());\r\n\t}","commit_id":"8800a9253d104e8d2c884d7014cb58fb174afe3c","url":"https://github.com/libgdx/libgdx"},{"original_method":"public float getPrefWidth () {\r\n\t\tif (vertical)\r\n\t\t\treturn Math.max(style.knob.getMinWidth(), style.background.getMinWidth());\r\n\t\telse\r\n\t\t\treturn 140;\r\n\t}","id":8554,"modified_method":"public float getPrefWidth () {\r\n\t\tif (vertical)\r\n\t\t\treturn Math.max(style.knob == null ? 0 : style.knob.getMinWidth(), style.background.getMinWidth());\r\n\t\telse\r\n\t\t\treturn 140;\r\n\t}","commit_id":"8800a9253d104e8d2c884d7014cb58fb174afe3c","url":"https://github.com/libgdx/libgdx"},{"original_method":"void calculatePositionAndValue (float x, float y) {\r\n\t\tfinal Drawable knob = style.knob;\r\n\t\tfinal Drawable bg = style.background;\r\n\r\n\t\tfloat value;\r\n\t\tfloat oldPosition = sliderPos;\r\n\r\n\t\tif (vertical) {\r\n\t\t\tfloat height = getHeight() - bg.getTopHeight() - bg.getBottomHeight();\r\n\t\t\tsliderPos = y - bg.getBottomHeight() - knob.getMinHeight() * 0.5f;\r\n\t\t\tsliderPos = Math.max(0, sliderPos);\r\n\t\t\tsliderPos = Math.min(height - knob.getMinHeight(), sliderPos);\r\n\t\t\tvalue = min + (max - min) * (sliderPos / (height - knob.getMinHeight()));\r\n\t\t} else {\r\n\t\t\tfloat width = getWidth() - bg.getLeftWidth() - bg.getRightWidth();\r\n\t\t\tsliderPos = x - bg.getLeftWidth() - knob.getMinWidth() * 0.5f;\r\n\t\t\tsliderPos = Math.max(0, sliderPos);\r\n\t\t\tsliderPos = Math.min(width - knob.getMinWidth(), sliderPos);\r\n\t\t\tvalue = min + (max - min) * (sliderPos / (width - knob.getMinWidth()));\r\n\t\t}\r\n\r\n\t\tfloat oldValue = value;\r\n\t\tsetValue(value);\r\n\t\tif (value == oldValue) sliderPos = oldPosition;\r\n\t}","id":8555,"modified_method":"void calculatePositionAndValue (float x, float y) {\r\n\t\tfinal Drawable knob = style.knob;\r\n\t\tfinal Drawable bg = style.background;\r\n\r\n\t\tfloat value;\r\n\t\tfloat oldPosition = sliderPos;\r\n\r\n\t\tif (vertical) {\r\n\t\t\tfloat height = getHeight() - bg.getTopHeight() - bg.getBottomHeight();\r\n\t\t\tfloat knobHeight = knob == null ? 0 : knob.getMinHeight();\r\n\t\t\tsliderPos = y - bg.getBottomHeight() - knobHeight * 0.5f;\r\n\t\t\tsliderPos = Math.max(0, sliderPos);\r\n\t\t\tsliderPos = Math.min(height - knobHeight, sliderPos);\r\n\t\t\tvalue = min + (max - min) * (sliderPos / (height - knobHeight));\r\n\t\t} else {\r\n\t\t\tfloat width = getWidth() - bg.getLeftWidth() - bg.getRightWidth();\r\n\t\t\tfloat knobWidth = knob == null ? 0 : knob.getMinWidth();\r\n\t\t\tsliderPos = x - bg.getLeftWidth() - knobWidth * 0.5f;\r\n\t\t\tsliderPos = Math.max(0, sliderPos);\r\n\t\t\tsliderPos = Math.min(width - knobWidth, sliderPos);\r\n\t\t\tvalue = min + (max - min) * (sliderPos / (width - knobWidth));\r\n\t\t}\r\n\r\n\t\tfloat oldValue = value;\r\n\t\tsetValue(value);\r\n\t\tif (value == oldValue) sliderPos = oldPosition;\r\n\t}","commit_id":"8800a9253d104e8d2c884d7014cb58fb174afe3c","url":"https://github.com/libgdx/libgdx"},{"original_method":"public float getPrefWidth () {\r\n\t\tif (vertical)\r\n\t\t\treturn Math.max(style.knob.getMinWidth(), style.background.getMinWidth());\r\n\t\telse\r\n\t\t\treturn 140;\r\n\t}","id":8556,"modified_method":"public float getPrefWidth () {\r\n\t\tif (vertical)\r\n\t\t\treturn Math.max(style.knob == null ? 0 : style.knob.getMinWidth(), style.background.getMinWidth());\r\n\t\telse\r\n\t\t\treturn 140;\r\n\t}","commit_id":"6b6f87715b288e8a1cd526a076ad09d46227740c","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\r\n\tpublic void draw (SpriteBatch batch, float parentAlpha) {\r\n\t\tfinal Drawable knob = style.knob;\r\n\t\tfinal Drawable bg = style.background;\r\n\t\tfinal Drawable knobBefore = style.knobBefore;\r\n\t\tfinal Drawable knobAfter = style.knobAfter;\r\n\r\n\t\tColor color = getColor();\r\n\t\tfloat x = getX();\r\n\t\tfloat y = getY();\r\n\t\tfloat width = getWidth();\r\n\t\tfloat height = getHeight();\r\n\r\n\t\tbatch.setColor(color.r, color.g, color.b, color.a * parentAlpha);\r\n\r\n\t\tif (vertical) {\r\n\t\t\tbg.draw(batch, x + (int)((width - bg.getMinWidth()) * 0.5f), y, bg.getMinWidth(), height);\r\n\r\n\t\t\tfloat sliderPosHeight = height - (bg.getTopHeight() + bg.getBottomHeight());\r\n\t\t\t//this check is used for avoiding division by zero\r\n\t\t\tif(min != max) {\r\n\t\t\t\tsliderPos = (value - min) / (max - min) * (sliderPosHeight - knob.getMinHeight());\r\n\t\t\t\tsliderPos = Math.max(0, sliderPos);\r\n\t\t\t\tsliderPos = Math.min(sliderPosHeight - knob.getMinHeight(), sliderPos) + bg.getBottomHeight();\r\n\t\t\t}\r\n\t\t\tfloat knobHeightHalf = knob.getMinHeight() * 0.5f;\r\n\t\t\tif (knobBefore != null) {\r\n\t\t\t\tknobBefore.draw(batch, x + (int)((width - knobBefore.getMinWidth()) * 0.5f), y, knobBefore.getMinWidth(),\r\n\t\t\t\t\t(int)(sliderPos + knobHeightHalf));\r\n\t\t\t}\r\n\t\t\tif (knobAfter != null) {\r\n\t\t\t\tknobAfter.draw(batch, x + (int)((width - knobAfter.getMinWidth()) * 0.5f), y + (int)(sliderPos + knobHeightHalf),\r\n\t\t\t\t\tknobAfter.getMinWidth(), height - (int)(sliderPos + knobHeightHalf));\r\n\t\t\t}\r\n\t\t\tknob.draw(batch, x + (int)((width - knob.getMinWidth()) * 0.5f), (int)(y + sliderPos), knob.getMinWidth(),\r\n\t\t\t\tknob.getMinHeight());\r\n\t\t} else {\r\n\t\t\tbg.draw(batch, x, y + (int)((height - bg.getMinHeight()) * 0.5f), width, bg.getMinHeight());\r\n\r\n\t\t\tfloat sliderPosWidth = width - (bg.getLeftWidth() + bg.getRightWidth());\r\n\t\t\t//this check is used for avoiding division by zero\r\n\t\t\tif(min != max) {\r\n\t\t\t\tsliderPos = (value - min) / (max - min) * (sliderPosWidth - knob.getMinWidth());\r\n\t\t\t\tsliderPos = Math.max(0, sliderPos);\r\n\t\t\t\tsliderPos = Math.min(sliderPosWidth - knob.getMinWidth(), sliderPos) + bg.getLeftWidth();\r\n\t\t\t}\t\t\t\r\n\t\t\tfloat knobHeightHalf = knob.getMinHeight() * 0.5f;\r\n\t\t\tif (knobBefore != null) {\r\n\t\t\t\tknobBefore.draw(batch, x, y + (int)((height - knobBefore.getMinHeight()) * 0.5f), (int)(sliderPos + knobHeightHalf),\r\n\t\t\t\t\tknobBefore.getMinHeight());\r\n\t\t\t}\r\n\t\t\tif (knobAfter != null) {\r\n\t\t\t\tknobAfter.draw(batch, x + (int)(sliderPos + knobHeightHalf), y + (int)((height - knobAfter.getMinHeight()) * 0.5f),\r\n\t\t\t\t\twidth - (int)(sliderPos + knobHeightHalf), knobAfter.getMinHeight());\r\n\t\t\t}\r\n\t\t\tknob.draw(batch, (int)(x + sliderPos), (int)(y + (height - knob.getMinHeight()) * 0.5f), knob.getMinWidth(),\r\n\t\t\t\tknob.getMinHeight());\r\n\t\t}\r\n\t}","id":8557,"modified_method":"@Override\r\n\tpublic void draw (SpriteBatch batch, float parentAlpha) {\r\n\t\tfinal Drawable knob = style.knob;\r\n\t\tfinal Drawable bg = style.background;\r\n\t\tfinal Drawable knobBefore = style.knobBefore;\r\n\t\tfinal Drawable knobAfter = style.knobAfter;\r\n\r\n\t\tColor color = getColor();\r\n\t\tfloat x = getX();\r\n\t\tfloat y = getY();\r\n\t\tfloat width = getWidth();\r\n\t\tfloat height = getHeight();\r\n\t\tfloat knobHeight = knob == null ? 0 : knob.getMinHeight();\r\n\t\tfloat knobWidth = knob == null ? 0 : knob.getMinWidth();\r\n\t\tfloat value = getVisualValue();\r\n\r\n\t\tbatch.setColor(color.r, color.g, color.b, color.a * parentAlpha);\r\n\r\n\t\tif (vertical) {\r\n\t\t\tbg.draw(batch, x + (int)((width - bg.getMinWidth()) * 0.5f), y, bg.getMinWidth(), height);\r\n\r\n\t\t\tfloat sliderPosHeight = height - (bg.getTopHeight() + bg.getBottomHeight());\r\n\t\t\tif(min!=max){\r\n\t\t\t\tsliderPos = (value - min) / (max - min) * (sliderPosHeight - knobHeight);\r\n\t\t\t\tsliderPos = Math.max(0, sliderPos);\r\n\t\t\t\tsliderPos = Math.min(sliderPosHeight - knobHeight, sliderPos) + bg.getBottomHeight();\r\n\t\t\t}\r\n\t\t\tfloat knobHeightHalf = knobHeight * 0.5f;\r\n\t\t\tif (knobBefore != null) {\r\n\t\t\t\tknobBefore.draw(batch, x + (int)((width - knobBefore.getMinWidth()) * 0.5f), y, knobBefore.getMinWidth(),\r\n\t\t\t\t\t(int)(sliderPos + knobHeightHalf));\r\n\t\t\t}\r\n\t\t\tif (knobAfter != null) {\r\n\t\t\t\tknobAfter.draw(batch, x + (int)((width - knobAfter.getMinWidth()) * 0.5f), y + (int)(sliderPos + knobHeightHalf),\r\n\t\t\t\t\tknobAfter.getMinWidth(), height - (int)(sliderPos + knobHeightHalf));\r\n\t\t\t}\r\n\t\t\tif (knob != null) knob.draw(batch, x + (int)((width - knobWidth) * 0.5f), (int)(y + sliderPos), knobWidth, knobHeight);\r\n\t\t} else {\r\n\t\t\tbg.draw(batch, x, y + (int)((height - bg.getMinHeight()) * 0.5f), width, bg.getMinHeight());\r\n\r\n\t\t\tfloat sliderPosWidth = width - (bg.getLeftWidth() + bg.getRightWidth());\r\n\t\t\tif(min!=max){\r\n\t\t\t\tsliderPos = (value - min) / (max - min) * (sliderPosWidth - knobWidth);\r\n\t\t\t\tsliderPos = Math.max(0, sliderPos);\r\n\t\t\t\tsliderPos = Math.min(sliderPosWidth - knobWidth, sliderPos) + bg.getLeftWidth();\r\n\t\t\t}\r\n\t\t\tfloat knobHeightHalf = knobHeight * 0.5f;\r\n\t\t\tif (knobBefore != null) {\r\n\t\t\t\tknobBefore.draw(batch, x, y + (int)((height - knobBefore.getMinHeight()) * 0.5f), (int)(sliderPos + knobHeightHalf),\r\n\t\t\t\t\tknobBefore.getMinHeight());\r\n\t\t\t}\r\n\t\t\tif (knobAfter != null) {\r\n\t\t\t\tknobAfter.draw(batch, x + (int)(sliderPos + knobHeightHalf), y + (int)((height - knobAfter.getMinHeight()) * 0.5f),\r\n\t\t\t\t\twidth - (int)(sliderPos + knobHeightHalf), knobAfter.getMinHeight());\r\n\t\t\t}\r\n\t\t\tif (knob != null)\r\n\t\t\t\tknob.draw(batch, (int)(x + sliderPos), (int)(y + (height - knobHeight) * 0.5f), knobWidth, knobHeight);\r\n\t\t}\r\n\t}","commit_id":"6b6f87715b288e8a1cd526a076ad09d46227740c","url":"https://github.com/libgdx/libgdx"},{"original_method":"void calculatePositionAndValue (float x, float y) {\r\n\t\tfinal Drawable knob = style.knob;\r\n\t\tfinal Drawable bg = style.background;\r\n\r\n\t\tfloat value;\r\n\t\tfloat oldPosition = sliderPos;\r\n\r\n\t\tif (vertical) {\r\n\t\t\tfloat height = getHeight() - bg.getTopHeight() - bg.getBottomHeight();\r\n\t\t\tsliderPos = y - bg.getBottomHeight() - knob.getMinHeight() * 0.5f;\r\n\t\t\tsliderPos = Math.max(0, sliderPos);\r\n\t\t\tsliderPos = Math.min(height - knob.getMinHeight(), sliderPos);\r\n\t\t\tvalue = min + (max - min) * (sliderPos / (height - knob.getMinHeight()));\r\n\t\t} else {\r\n\t\t\tfloat width = getWidth() - bg.getLeftWidth() - bg.getRightWidth();\r\n\t\t\tsliderPos = x - bg.getLeftWidth() - knob.getMinWidth() * 0.5f;\r\n\t\t\tsliderPos = Math.max(0, sliderPos);\r\n\t\t\tsliderPos = Math.min(width - knob.getMinWidth(), sliderPos);\r\n\t\t\tvalue = min + (max - min) * (sliderPos / (width - knob.getMinWidth()));\r\n\t\t}\r\n\r\n\t\tfloat oldValue = value;\r\n\t\tsetValue(value);\r\n\t\tif (value == oldValue) sliderPos = oldPosition;\r\n\t}","id":8558,"modified_method":"void calculatePositionAndValue (float x, float y) {\r\n\t\tfinal Drawable knob = style.knob;\r\n\t\tfinal Drawable bg = style.background;\r\n\r\n\t\tfloat value;\r\n\t\tfloat oldPosition = sliderPos;\r\n\r\n\t\tif (vertical) {\r\n\t\t\tfloat height = getHeight() - bg.getTopHeight() - bg.getBottomHeight();\r\n\t\t\tfloat knobHeight = knob == null ? 0 : knob.getMinHeight();\r\n\t\t\tsliderPos = y - bg.getBottomHeight() - knobHeight * 0.5f;\r\n\t\t\tsliderPos = Math.max(0, sliderPos);\r\n\t\t\tsliderPos = Math.min(height - knobHeight, sliderPos);\r\n\t\t\tvalue = min + (max - min) * (sliderPos / (height - knobHeight));\r\n\t\t} else {\r\n\t\t\tfloat width = getWidth() - bg.getLeftWidth() - bg.getRightWidth();\r\n\t\t\tfloat knobWidth = knob == null ? 0 : knob.getMinWidth();\r\n\t\t\tsliderPos = x - bg.getLeftWidth() - knobWidth * 0.5f;\r\n\t\t\tsliderPos = Math.max(0, sliderPos);\r\n\t\t\tsliderPos = Math.min(width - knobWidth, sliderPos);\r\n\t\t\tvalue = min + (max - min) * (sliderPos / (width - knobWidth));\r\n\t\t}\r\n\r\n\t\tfloat oldValue = value;\r\n\t\tsetValue(value);\r\n\t\tif (value == oldValue) sliderPos = oldPosition;\r\n\t}","commit_id":"6b6f87715b288e8a1cd526a076ad09d46227740c","url":"https://github.com/libgdx/libgdx"},{"original_method":"/** Sets the slider position, rounded to the nearest step size and clamped to the minumum and maximim values. */\r\n\tpublic void setValue (float value) {\r\n\t\tif (value < min || value > max) throw new IllegalArgumentException(\"value must be >= min and <= max: \" + value);\r\n\t\tvalue = MathUtils.clamp(Math.round(value / stepSize) * stepSize, min, max);\r\n\t\tfloat oldValue = this.value;\r\n\t\tif (value == oldValue) return;\r\n\t\tthis.value = value;\r\n\t\tChangeEvent changeEvent = Pools.obtain(ChangeEvent.class);\r\n\t\tif (fire(changeEvent)) this.value = oldValue;\r\n\t\tPools.free(changeEvent);\r\n\t}","id":8559,"modified_method":"/** Sets the slider position, rounded to the nearest step size and clamped to the minumum and maximim values. */\r\n\tpublic void setValue (float value) {\r\n\t\tif (value < min || value > max) throw new IllegalArgumentException(\"value must be >= min and <= max: \" + value);\r\n\t\tvalue = MathUtils.clamp(Math.round(value / stepSize) * stepSize, min, max);\r\n\t\tfloat oldValue = this.value;\r\n\t\tif (value == oldValue) return;\r\n\t\tthis.value = value;\r\n\t\tChangeEvent changeEvent = Pools.obtain(ChangeEvent.class);\r\n\t\tif (fire(changeEvent))\r\n\t\t\tthis.value = oldValue;\r\n\t\telse if (animateDuration > 0) {\r\n\t\t\tanimateTime = animateDuration;\r\n\t\t\tanimateFromValue = getVisualValue();\r\n\t\t}\r\n\t\tPools.free(changeEvent);\r\n\t}","commit_id":"6b6f87715b288e8a1cd526a076ad09d46227740c","url":"https://github.com/libgdx/libgdx"},{"original_method":"public float getPrefHeight () {\r\n\t\tif (vertical)\r\n\t\t\treturn 140;\r\n\t\telse\r\n\t\t\treturn Math.max(style.knob.getMinHeight(), style.background.getMinHeight());\r\n\t}","id":8560,"modified_method":"public float getPrefHeight () {\r\n\t\tif (vertical)\r\n\t\t\treturn 140;\r\n\t\telse\r\n\t\t\treturn Math.max(style.knob == null ? 0 : style.knob.getMinHeight(), style.background.getMinHeight());\r\n\t}","commit_id":"6b6f87715b288e8a1cd526a076ad09d46227740c","url":"https://github.com/libgdx/libgdx"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.google.gwt.user.client.ui.RichTextArea#onBrowserEvent(com.google.gwt.user.client.Event)\n     */\n    public void onBrowserEvent(com.google.gwt.user.client.Event event)\n    {\n        // We need to preview the event due to a GWT bug.\n        // @see http://code.google.com/p/google-web-toolkit/issues/detail?id=729\n        if (!previewEvent(event)) {\n            return;\n        }\n        currentEvent = event.cast();\n        adjuster.onBeforeBrowserEvent();\n        if (currentEvent.getTypeInt() == Event.ONKEYDOWN) {\n            if (shortcutKeys.contains(ShortcutKeyFactory.createShortcutKey(currentEvent))) {\n                currentEvent.xPreventDefault();\n            }\n        }\n        super.onBrowserEvent(event);\n        adjuster.onBrowserEvent();\n        currentEvent = null;\n    }","id":8561,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.google.gwt.user.client.ui.RichTextArea#onBrowserEvent(com.google.gwt.user.client.Event)\n     */\n    public void onBrowserEvent(com.google.gwt.user.client.Event event)\n    {\n        // We need to preview the event due to a GWT bug.\n        // @see http://code.google.com/p/google-web-toolkit/issues/detail?id=729\n        if (!previewEvent(event)) {\n            return;\n        }\n        currentEvent = event.cast();\n        adjuster.onBeforeBrowserEvent();\n        super.onBrowserEvent(event);\n        adjuster.onBrowserEvent();\n        currentEvent = null;\n    }","commit_id":"455fa63b2a5a1937629c1bb5844ae045cd4f5074","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see Object#equals(Object)\n     */\n    public boolean equals(Object obj)\n    {\n        if (this == obj) {\n            return true;\n        }\n        if (obj == null || !(obj instanceof ShortcutKey)) {\n            return false;\n        }\n        final ShortcutKey other = (ShortcutKey) obj;\n        if (keyCode != other.keyCode || modifiers != other.modifiers) {\n            return false;\n        }\n        return true;\n    }","id":8562,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see Object#equals(Object)\n     */\n    public boolean equals(Object obj)\n    {\n        if (this == obj) {\n            return true;\n        }\n        if (obj == null || !(obj instanceof ShortcutKey)) {\n            return false;\n        }\n        final ShortcutKey other = (ShortcutKey) obj;\n        return keyCode == other.keyCode && modifiers == other.modifiers;\n    }","commit_id":"455fa63b2a5a1937629c1bb5844ae045cd4f5074","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Creates a new shortcut key.\n     * \n     * @param keyCode the Unicode character that was generated by the keyboard action.\n     * @param modifiers the modifier keys pressed at when the event occurred. This value is a combination of the bits\n     *            defined by {@link com.google.gwt.user.client.ui.KeyboardListener#MODIFIER_SHIFT},\n     *            {@link com.google.gwt.user.client.ui.KeyboardListener#MODIFIER_CTRL}, and\n     *            {@link com.google.gwt.user.client.ui.KeyboardListener#MODIFIER_ALT}.\n     */\n    public ShortcutKey(int keyCode, int modifiers)\n    {\n        this.keyCode = keyCode;\n        this.modifiers = modifiers;\n\n        final int prime = 31;\n        int thisHashCode = 1;\n        thisHashCode = prime * thisHashCode + keyCode;\n        thisHashCode = prime * thisHashCode + modifiers;\n        this.hashCode = thisHashCode;\n    }","id":8563,"modified_method":"/**\n     * Creates a new shortcut key.\n     * \n     * @param keyCode the Unicode character that was generated by the keyboard action.\n     * @param modifiers the modifier keys pressed at when the event occurred. This value is a combination of the bits\n     *            defined by {@link com.google.gwt.user.client.ui.KeyboardListener#MODIFIER_SHIFT},\n     *            {@link com.google.gwt.user.client.ui.KeyboardListener#MODIFIER_CTRL},\n     *            {@link com.google.gwt.user.client.ui.KeyboardListener#MODIFIER_ALT}, and\n     *            {@link com.google.gwt.user.client.ui.KeyboardListener#MODIFIER_META}\n     */\n    public ShortcutKey(int keyCode, int modifiers)\n    {\n        this.keyCode = keyCode;\n        this.modifiers = modifiers;\n\n        final int prime = 31;\n        int thisHashCode = 1;\n        thisHashCode = prime * thisHashCode + keyCode;\n        thisHashCode = prime * thisHashCode + modifiers;\n        this.hashCode = thisHashCode;\n    }","commit_id":"455fa63b2a5a1937629c1bb5844ae045cd4f5074","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractStatefulPlugin#destroy()\n     */\n    public void destroy()\n    {\n        if (bold != null) {\n            bold.removeFromParent();\n            bold.removeClickListener(this);\n            bold = null;\n            getTextArea().removeShortcutKey(boldKey);\n        }\n\n        if (italic != null) {\n            italic.removeFromParent();\n            italic.removeClickListener(this);\n            italic = null;\n            getTextArea().removeShortcutKey(italicKey);\n        }\n\n        if (underline != null) {\n            underline.removeFromParent();\n            underline.removeClickListener(this);\n            underline = null;\n            getTextArea().removeShortcutKey(underlineKey);\n        }\n\n        if (strikeThrough != null) {\n            strikeThrough.removeFromParent();\n            strikeThrough.removeClickListener(this);\n            strikeThrough = null;\n        }\n\n        if (teletype != null) {\n            teletype.removeFromParent();\n            teletype.removeClickListener(this);\n            teletype = null;\n        }\n\n        if (toolBarExtension.getFeatures().length > 0) {\n            getTextArea().removeMouseListener(this);\n            getTextArea().removeKeyboardListener(this);\n            getTextArea().getCommandManager().removeCommandListener(this);\n            toolBarExtension.clearFeatures();\n        }\n\n        super.destroy();\n    }","id":8564,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractStatefulPlugin#destroy()\n     */\n    public void destroy()\n    {\n        destroy(bold);\n        destroy(italic);\n        destroy(underline);\n        destroy(strikeThrough);\n        destroy(teletype);\n\n        if (toolBarExtension.getFeatures().length > 0) {\n            getTextArea().removeMouseListener(this);\n            getTextArea().removeKeyboardListener(this);\n            getTextArea().getCommandManager().removeCommandListener(this);\n            getTextArea().removeKeyboardListener(shortcutKeyManager);\n            shortcutKeyManager.clear();\n            toolBarExtension.clearFeatures();\n        }\n\n        super.destroy();\n    }","commit_id":"455fa63b2a5a1937629c1bb5844ae045cd4f5074","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see ClickListener#onClick(Widget)\n     */\n    public void onClick(Widget sender)\n    {\n        if (sender == bold) {\n            onBold();\n        } else if (sender == italic) {\n            onItalic();\n        } else if (sender == underline) {\n            onUnderline();\n        } else if (sender == strikeThrough) {\n            onStrikeThrough();\n        } else if (sender == teletype) {\n            onTeletype();\n        }\n    }","id":8565,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see ClickListener#onClick(Widget)\n     */\n    public void onClick(Widget sender)\n    {\n        if (sender == bold) {\n            onClick(bold, Command.BOLD);\n        } else if (sender == italic) {\n            onClick(italic, Command.ITALIC);\n        } else if (sender == underline) {\n            onClick(underline, Command.UNDERLINE);\n        } else if (sender == strikeThrough) {\n            onClick(strikeThrough, Command.STRIKE_THROUGH);\n        } else if (sender == teletype) {\n            onClick(teletype, Command.TELETYPE);\n        }\n    }","commit_id":"455fa63b2a5a1937629c1bb5844ae045cd4f5074","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractStatefulPlugin#init(Wysiwyg, RichTextArea, Config)\n     */\n    public void init(Wysiwyg wysiwyg, RichTextArea textArea, Config config)\n    {\n        super.init(wysiwyg, textArea, config);\n\n        if (getTextArea().getCommandManager().isSupported(Command.BOLD)) {\n            bold = new ToggleButton(Images.INSTANCE.bold().createImage(), this);\n            bold.setTitle(Strings.INSTANCE.bold());\n            boldKey = ShortcutKeyFactory.createCtrlShortcutKey('B');\n            getTextArea().addShortcutKey(boldKey);\n            toolBarExtension.addFeature(\"bold\", bold);\n        }\n\n        if (getTextArea().getCommandManager().isSupported(Command.ITALIC)) {\n            italic = new ToggleButton(Images.INSTANCE.italic().createImage(), this);\n            italic.setTitle(Strings.INSTANCE.italic());\n            italicKey = ShortcutKeyFactory.createCtrlShortcutKey('I');\n            getTextArea().addShortcutKey(italicKey);\n            toolBarExtension.addFeature(\"italic\", italic);\n        }\n\n        if (getTextArea().getCommandManager().isSupported(Command.UNDERLINE)) {\n            underline = new ToggleButton(Images.INSTANCE.underline().createImage(), this);\n            underline.setTitle(Strings.INSTANCE.underline());\n            underlineKey = ShortcutKeyFactory.createCtrlShortcutKey('U');\n            getTextArea().addShortcutKey(underlineKey);\n            toolBarExtension.addFeature(\"underline\", underline);\n        }\n\n        if (getTextArea().getCommandManager().isSupported(Command.STRIKE_THROUGH)) {\n            strikeThrough = new ToggleButton(Images.INSTANCE.strikeThrough().createImage(), this);\n            strikeThrough.setTitle(Strings.INSTANCE.strikeThrough());\n            toolBarExtension.addFeature(\"strikethrough\", strikeThrough);\n        }\n\n        if (getTextArea().getCommandManager().isSupported(Command.TELETYPE)) {\n            teletype = new ToggleButton(Images.INSTANCE.teletype().createImage(), this);\n            teletype.setTitle(Strings.INSTANCE.teletype());\n            toolBarExtension.addFeature(\"teletype\", teletype);\n        }\n\n        if (toolBarExtension.getFeatures().length > 0) {\n            getTextArea().addKeyboardListener(this);\n            getTextArea().addMouseListener(this);\n            getTextArea().getCommandManager().addCommandListener(this);\n            getUIExtensionList().add(toolBarExtension);\n        }\n    }","id":8566,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractStatefulPlugin#init(Wysiwyg, RichTextArea, Config)\n     */\n    public void init(Wysiwyg wysiwyg, RichTextArea textArea, Config config)\n    {\n        super.init(wysiwyg, textArea, config);\n\n        shortcutKeyManager = new ShortcutKeyManager();\n\n        bold = createFeature(\"bold\", Command.BOLD, Images.INSTANCE.bold().createImage(), Strings.INSTANCE.bold(), 'B');\n        italic =\n            createFeature(\"italic\", Command.ITALIC, Images.INSTANCE.italic().createImage(), Strings.INSTANCE.italic(),\n                'I');\n        underline =\n            createFeature(\"underline\", Command.UNDERLINE, Images.INSTANCE.underline().createImage(), Strings.INSTANCE\n                .underline(), 'U');\n        strikeThrough =\n            createFeature(\"strikethrough\", Command.STRIKE_THROUGH, Images.INSTANCE.strikeThrough().createImage(),\n                Strings.INSTANCE.strikeThrough());\n        teletype =\n            createFeature(\"teletype\", Command.TELETYPE, Images.INSTANCE.teletype().createImage(), Strings.INSTANCE\n                .teletype());\n\n        if (toolBarExtension.getFeatures().length > 0) {\n            getTextArea().addKeyboardListener(this);\n            getTextArea().addMouseListener(this);\n            getTextArea().getCommandManager().addCommandListener(this);\n            getTextArea().addKeyboardListener(shortcutKeyManager);\n            getUIExtensionList().add(toolBarExtension);\n        }\n    }","commit_id":"455fa63b2a5a1937629c1bb5844ae045cd4f5074","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractStatefulPlugin#update()\n     */\n    public void update()\n    {\n        if (bold != null) {\n            bold.setDown(getTextArea().getCommandManager().isExecuted(Command.BOLD));\n        }\n        if (italic != null) {\n            italic.setDown(getTextArea().getCommandManager().isExecuted(Command.ITALIC));\n        }\n        if (underline != null) {\n            underline.setDown(getTextArea().getCommandManager().isExecuted(Command.UNDERLINE));\n        }\n        if (strikeThrough != null) {\n            strikeThrough.setDown(getTextArea().getCommandManager().isExecuted(Command.STRIKE_THROUGH));\n        }\n        if (teletype != null) {\n            teletype.setDown(getTextArea().getCommandManager().isExecuted(Command.TELETYPE));\n        }\n    }","id":8567,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractStatefulPlugin#update()\n     */\n    public void update()\n    {\n        update(bold, Command.BOLD);\n        update(italic, Command.ITALIC);\n        update(underline, Command.UNDERLINE);\n        update(strikeThrough, Command.STRIKE_THROUGH);\n        update(teletype, Command.TELETYPE);\n    }","commit_id":"455fa63b2a5a1937629c1bb5844ae045cd4f5074","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#init(Wysiwyg, RichTextArea, Config)\n     */\n    public void init(Wysiwyg wysiwyg, RichTextArea textArea, Config config)\n    {\n        super.init(wysiwyg, textArea, config);\n\n        if (getTextArea().getCommandManager().isSupported(Command.UNDO)) {\n            undo = new PushButton(Images.INSTANCE.undo().createImage(), this);\n            undo.setTitle(Strings.INSTANCE.undo());\n            undoKey = ShortcutKeyFactory.createCtrlShortcutKey('Z');\n            textArea.addShortcutKey(undoKey);\n            toolBarExtension.addFeature(\"undo\", undo);\n        }\n\n        if (getTextArea().getCommandManager().isSupported(Command.REDO)) {\n            redo = new PushButton(Images.INSTANCE.redo().createImage(), this);\n            redo.setTitle(Strings.INSTANCE.redo());\n            redoKey = ShortcutKeyFactory.createCtrlShortcutKey('Y');\n            textArea.addShortcutKey(redoKey);\n            toolBarExtension.addFeature(\"redo\", redo);\n        }\n\n        if (toolBarExtension.getFeatures().length > 0) {\n            getTextArea().addKeyboardListener(this);\n            getUIExtensionList().add(toolBarExtension);\n        }\n    }","id":8568,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#init(Wysiwyg, RichTextArea, Config)\n     */\n    public void init(Wysiwyg wysiwyg, RichTextArea textArea, Config config)\n    {\n        super.init(wysiwyg, textArea, config);\n\n        shortcutKeyManager = new ShortcutKeyManager();\n        if (getTextArea().getCommandManager().isSupported(Command.UNDO)) {\n            undo = new PushButton(Images.INSTANCE.undo().createImage(), this);\n            undo.setTitle(Strings.INSTANCE.undo());\n            ClickCommand undoCommand = new ClickCommand(this, undo);\n            shortcutKeyManager.put(new ShortcutKey('Z', KeyboardListener.MODIFIER_CTRL), undoCommand);\n            shortcutKeyManager.put(new ShortcutKey('Z', KeyboardListener.MODIFIER_META), undoCommand);\n            toolBarExtension.addFeature(\"undo\", undo);\n        }\n\n        if (getTextArea().getCommandManager().isSupported(Command.REDO)) {\n            redo = new PushButton(Images.INSTANCE.redo().createImage(), this);\n            redo.setTitle(Strings.INSTANCE.redo());\n            ClickCommand redoCommand = new ClickCommand(this, redo);\n            shortcutKeyManager.put(new ShortcutKey('Y', KeyboardListener.MODIFIER_CTRL), redoCommand);\n            shortcutKeyManager.put(new ShortcutKey('Y', KeyboardListener.MODIFIER_META), redoCommand);\n            toolBarExtension.addFeature(\"redo\", redo);\n        }\n\n        if (toolBarExtension.getFeatures().length > 0) {\n            getTextArea().addKeyboardListener(shortcutKeyManager);\n            getUIExtensionList().add(toolBarExtension);\n        }\n    }","commit_id":"455fa63b2a5a1937629c1bb5844ae045cd4f5074","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see ClickListener#onClick(Widget)\n     */\n    public void onClick(Widget sender)\n    {\n        if (sender == undo) {\n            onUndo();\n        } else if (sender == redo) {\n            onRedo();\n        }\n    }","id":8569,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see ClickListener#onClick(Widget)\n     */\n    public void onClick(Widget sender)\n    {\n        if (sender == undo) {\n            onClick(undo, Command.UNDO);\n        } else if (sender == redo) {\n            onClick(redo, Command.REDO);\n        }\n    }","commit_id":"455fa63b2a5a1937629c1bb5844ae045cd4f5074","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#destroy()\n     */\n    public void destroy()\n    {\n        if (undo != null) {\n            undo.removeFromParent();\n            undo.removeClickListener(this);\n            undo = null;\n            getTextArea().removeShortcutKey(undoKey);\n        }\n\n        if (redo != null) {\n            redo.removeFromParent();\n            redo.removeClickListener(this);\n            redo = null;\n            getTextArea().removeShortcutKey(redoKey);\n        }\n\n        if (toolBarExtension.getFeatures().length > 0) {\n            getTextArea().removeKeyboardListener(this);\n            toolBarExtension.clearFeatures();\n        }\n\n        super.destroy();\n    }","id":8570,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#destroy()\n     */\n    public void destroy()\n    {\n        destroy(undo);\n        destroy(redo);\n\n        if (toolBarExtension.getFeatures().length > 0) {\n            getTextArea().removeKeyboardListener(shortcutKeyManager);\n            shortcutKeyManager.clear();\n            toolBarExtension.clearFeatures();\n        }\n\n        super.destroy();\n    }","commit_id":"455fa63b2a5a1937629c1bb5844ae045cd4f5074","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void testContinuation() throws Exception {\n        \n        doTestContinuation(\"books\");\n    }","id":8571,"modified_method":"@Test\n    public void testContinuation() throws Exception {\n        \n        doTestContinuation(\"/books\");\n    }","commit_id":"61adb143a0f5930357140c0d470e9b44957107f4","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    public void testGetBookNotFound() throws Exception {\n        WebClient wc = WebClient.create(\"http://localhost:\" + getPort() + \"/bookstore/books/notfound\");\n        wc.accept(\"text/plain\");\n        Response r = wc.get();\n        assertEquals(404, r.getStatus());\n    }","id":8572,"modified_method":"@Test\n    public void testGetBookNotFound() throws Exception {\n        WebClient wc = WebClient.create(\"http://localhost:\" + getPort() + getBaseAddress() + \"/books/notfound\");\n        wc.accept(\"text/plain\");\n        Response r = wc.get();\n        assertEquals(404, r.getStatus());\n    }","commit_id":"61adb143a0f5930357140c0d470e9b44957107f4","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    public void testGetBookNotFoundUnmapped() throws Exception {\n        WebClient wc = WebClient.create(\"http://localhost:\" + getPort() + \"/bookstore/books/notfound/unmapped\");\n        wc.accept(\"text/plain\");\n        Response r = wc.get();\n        assertEquals(500, r.getStatus());\n    }","id":8573,"modified_method":"@Test\n    public void testGetBookNotFoundUnmapped() throws Exception {\n        WebClient wc = \n            WebClient.create(\"http://localhost:\" + getPort() + getBaseAddress() + \"/books/notfound/unmapped\");\n        wc.accept(\"text/plain\");\n        Response r = wc.get();\n        assertEquals(500, r.getStatus());\n    }","commit_id":"61adb143a0f5930357140c0d470e9b44957107f4","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    public void testContinuationWithTimeHandlerResumeOnly() throws Exception {\n        \n        doTestContinuation(\"books/timeouthandlerresume\");\n    }","id":8574,"modified_method":"@Test\n    public void testContinuationWithTimeHandlerResumeOnly() throws Exception {\n        \n        doTestContinuation(\"/books/timeouthandlerresume\");\n    }","commit_id":"61adb143a0f5930357140c0d470e9b44957107f4","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    public void testImmediateResume() throws Exception {\n        WebClient wc = WebClient.create(\"http://localhost:\" + getPort() + \"/bookstore/books/resume\");\n        WebClient.getConfig(wc).getHttpConduit().getClient().setReceiveTimeout(1000000L);\n        wc.accept(\"text/plain\");\n        String str = wc.get(String.class);\n        assertEquals(\"immediateResume\", str);\n    }","id":8575,"modified_method":"@Test\n    public void testImmediateResume() throws Exception {\n        WebClient wc = WebClient.create(\"http://localhost:\" + getPort() + getBaseAddress() + \"/books/resume\");\n        WebClient.getConfig(wc).getHttpConduit().getClient().setReceiveTimeout(1000000L);\n        wc.accept(\"text/plain\");\n        String str = wc.get(String.class);\n        assertEquals(\"immediateResume\", str);\n    }","commit_id":"61adb143a0f5930357140c0d470e9b44957107f4","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    public void testDefaultTimeout() throws Exception {\n        WebClient wc = WebClient.create(\"http://localhost:\" + getPort() + \"/bookstore/books/defaulttimeout\");\n        WebClient.getConfig(wc).getHttpConduit().getClient().setReceiveTimeout(1000000L);\n        Response r = wc.get();\n        assertEquals(503, r.getStatus());\n    }","id":8576,"modified_method":"@Test\n    public void testDefaultTimeout() throws Exception {\n        WebClient wc = WebClient.create(\"http://localhost:\" + getPort() + getBaseAddress() + \"/books/defaulttimeout\");\n        WebClient.getConfig(wc).getHttpConduit().getClient().setReceiveTimeout(1000000L);\n        Response r = wc.get();\n        assertEquals(503, r.getStatus());\n    }","commit_id":"61adb143a0f5930357140c0d470e9b44957107f4","url":"https://github.com/apache/cxf"},{"original_method":"protected void doTestContinuation(String pathSegment) throws Exception {\n        final String port = getPort();\n        ThreadPoolExecutor executor = new ThreadPoolExecutor(5, 5, 0, TimeUnit.SECONDS,\n                                                             new ArrayBlockingQueue<Runnable>(10));\n        CountDownLatch startSignal = new CountDownLatch(1);\n        CountDownLatch doneSignal = new CountDownLatch(1);\n        List<BookWorker> workers = new ArrayList<BookWorker>(5);\n        for (int x = 1; x < 6; x++) {\n            workers.add(new BookWorker(\"http://localhost:\" + port + \"/bookstore/\" + pathSegment + \"/\" + x, \n                                       Integer.toString(x), \n                                       \"CXF in Action\" + x, startSignal, doneSignal));\n        }\n        for (BookWorker w : workers) {\n            executor.execute(w);\n        }\n        \n        startSignal.countDown();\n        doneSignal.await(60, TimeUnit.SECONDS);\n        executor.shutdownNow();       \n        assertEquals(\"Not all invocations have completed\", 0, doneSignal.getCount());\n        for (BookWorker w : workers) {\n            w.checkError();\n        }\n    }","id":8577,"modified_method":"protected void doTestContinuation(String pathSegment) throws Exception {\n        final String port = getPort();\n        ThreadPoolExecutor executor = new ThreadPoolExecutor(5, 5, 0, TimeUnit.SECONDS,\n                                                             new ArrayBlockingQueue<Runnable>(10));\n        CountDownLatch startSignal = new CountDownLatch(1);\n        CountDownLatch doneSignal = new CountDownLatch(1);\n        List<BookWorker> workers = new ArrayList<BookWorker>(5);\n        for (int x = 1; x < 6; x++) {\n            workers.add(new BookWorker(\"http://localhost:\" + port + getBaseAddress() + pathSegment + \"/\" + x, \n                                       Integer.toString(x), \n                                       \"CXF in Action\" + x, startSignal, doneSignal));\n        }\n        for (BookWorker w : workers) {\n            executor.execute(w);\n        }\n        \n        startSignal.countDown();\n        doneSignal.await(60, TimeUnit.SECONDS);\n        executor.shutdownNow();       \n        assertEquals(\"Not all invocations have completed\", 0, doneSignal.getCount());\n        for (BookWorker w : workers) {\n            w.checkError();\n        }\n    }","commit_id":"61adb143a0f5930357140c0d470e9b44957107f4","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    public void testContinuationWithTimeHandler() throws Exception {\n        \n        doTestContinuation(\"books/timeouthandler\");\n    }","id":8578,"modified_method":"@Test\n    public void testContinuationWithTimeHandler() throws Exception {\n        \n        doTestContinuation(\"/books/timeouthandler\");\n    }","commit_id":"61adb143a0f5930357140c0d470e9b44957107f4","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    public void testTimeoutAndCancel() throws Exception {\n        WebClient wc = WebClient.create(\"http://localhost:\" + getPort() + \"/bookstore/books/cancel\");\n        WebClient.getConfig(wc).getHttpConduit().getClient().setReceiveTimeout(1000000L);\n        Response r = wc.get();\n        assertEquals(503, r.getStatus());\n        String retryAfter = r.getHeaderString(HttpHeaders.RETRY_AFTER);\n        assertNotNull(retryAfter);\n        assertEquals(\"10\", retryAfter);\n    }","id":8579,"modified_method":"@Test\n    public void testTimeoutAndCancel() throws Exception {\n        doTestTimeoutAndCancel(getBaseAddress());\n    }","commit_id":"61adb143a0f5930357140c0d470e9b44957107f4","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    public void testContinuationSubresource() throws Exception {\n        \n        doTestContinuation(\"books/subresources\");\n    }","id":8580,"modified_method":"@Test\n    public void testContinuationSubresource() throws Exception {\n        \n        doTestContinuation(\"/books/subresources\");\n    }","commit_id":"61adb143a0f5930357140c0d470e9b44957107f4","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    public void testImmediateResumeSubresource() throws Exception {\n        WebClient wc = WebClient.create(\"http://localhost:\" + getPort() \n                                        + \"/bookstore/books/subresources/books/resume\");\n        WebClient.getConfig(wc).getHttpConduit().getClient().setReceiveTimeout(1000000L);\n        wc.accept(\"text/plain\");\n        String str = wc.get(String.class);\n        assertEquals(\"immediateResume\", str);\n    }","id":8581,"modified_method":"@Test\n    public void testImmediateResumeSubresource() throws Exception {\n        WebClient wc = WebClient.create(\"http://localhost:\" + getPort() \n                                        + getBaseAddress() + \"/books/subresources/books/resume\");\n        WebClient.getConfig(wc).getHttpConduit().getClient().setReceiveTimeout(1000000L);\n        wc.accept(\"text/plain\");\n        String str = wc.get(String.class);\n        assertEquals(\"immediateResume\", str);\n    }","commit_id":"61adb143a0f5930357140c0d470e9b44957107f4","url":"https://github.com/apache/cxf"},{"original_method":"public Object invoke(Exchange exchange, Object request) {\n        MessageContentsList responseList = checkExchangeForResponse(exchange);\n        if (responseList != null) {\n            return responseList; \n        }\n        AsyncResponse asyncResp = exchange.get(AsyncResponse.class);\n        if (asyncResp != null) {\n            AsyncResponseImpl asyncImpl = (AsyncResponseImpl)asyncResp;\n            asyncImpl.prepareContinuation();\n            try {\n                asyncImpl.handleTimeout();\n                return handleAsyncResponse(exchange, asyncImpl);\n            } catch (Throwable t) {\n                return handleAsyncFault(exchange, asyncImpl, t);\n            }\n        }\n        \n        ResourceProvider provider = getResourceProvider(exchange);\n        Object rootInstance = null;\n        try {\n            rootInstance = getServiceObject(exchange);\n            Object serviceObject = getActualServiceObject(exchange, rootInstance);\n            \n            return invoke(exchange, request, serviceObject);\n        } catch (WebApplicationException ex) {\n            responseList = checkExchangeForResponse(exchange);\n            if (responseList != null) {\n                return responseList; \n            }\n            return handleFault(ex, exchange.getInMessage());\n        } finally {\n            boolean suspended = exchange.getInMessage().getInterceptorChain().getState() == State.SUSPENDED;\n            if (exchange.isOneWay() || suspended) {\n                ServerProviderFactory.getInstance(exchange.getInMessage()).clearThreadLocalProxies();\n            }\n            if (!suspended && !isServiceObjectRequestScope(exchange.getInMessage())) {\n                provider.releaseInstance(exchange.getInMessage(), rootInstance);\n            } else {\n                persistRoots(exchange, rootInstance, provider);\n            }\n        }\n    }","id":8582,"modified_method":"public Object invoke(Exchange exchange, Object request) {\n        MessageContentsList responseList = checkExchangeForResponse(exchange);\n        if (responseList != null) {\n            return responseList; \n        }\n        AsyncResponse asyncResp = exchange.get(AsyncResponse.class);\n        if (asyncResp != null) {\n            AsyncResponseImpl asyncImpl = (AsyncResponseImpl)asyncResp;\n            asyncImpl.prepareContinuation();\n            try {\n                asyncImpl.handleTimeout();\n                return handleAsyncResponse(exchange, asyncImpl);\n            } catch (Throwable t) {\n                return handleAsyncFault(exchange, asyncImpl, t);\n            }\n        }\n        \n        ResourceProvider provider = getResourceProvider(exchange);\n        Object rootInstance = null;\n        try {\n            rootInstance = getServiceObject(exchange);\n            Object serviceObject = getActualServiceObject(exchange, rootInstance);\n            \n            return invoke(exchange, request, serviceObject);\n        } catch (WebApplicationException ex) {\n            responseList = checkExchangeForResponse(exchange);\n            if (responseList != null) {\n                return responseList; \n            }\n            return handleFault(ex, exchange.getInMessage());\n        } finally {\n            boolean suspended = PropertyUtils.isTrue(exchange.get(Message.SUSPENDED_INVOCATION))\n                || exchange.getInMessage().getInterceptorChain().getState() == State.SUSPENDED;\n            if (exchange.isOneWay() || suspended) {\n                ServerProviderFactory.getInstance(exchange.getInMessage()).clearThreadLocalProxies();\n            }\n            if (!suspended && !isServiceObjectRequestScope(exchange.getInMessage())) {\n                provider.releaseInstance(exchange.getInMessage(), rootInstance);\n            } else {\n                persistRoots(exchange, rootInstance, provider);\n            }\n        }\n    }","commit_id":"61adb143a0f5930357140c0d470e9b44957107f4","url":"https://github.com/apache/cxf"},{"original_method":"public synchronized boolean suspend(long timeout) {\n        \n        if (isPending) {\n            return false;\n        }\n        // Need to get the right message which is handled in the interceptor chain\n        inMessage.getExchange().getInMessage().getInterceptorChain().suspend();\n        updateContinuations(false);\n                \n        isNew = false;\n        isResumed = false;\n        isPending = true;\n        \n        if (timeout > 0) {\n            createTimerTask(timeout);\n        }\n        return true;\n    }","id":8583,"modified_method":"public synchronized boolean suspend(long timeout) {\n        \n        if (isPending) {\n            return false;\n        }\n        if (PhaseInterceptorChain.getCurrentMessage() == null) {\n            // the current thread is different to the one which holds a lock on PhaseInterceptorChain \n            inMessage.getExchange().put(Message.SUSPENDED_INVOCATION, true);\n        } else {\n            // Need to get the right message which is handled in the interceptor chain\n            inMessage.getExchange().getInMessage().getInterceptorChain().suspend();\n        }\n        updateContinuations(false);\n                \n        isNew = false;\n        isResumed = false;\n        isPending = true;\n        \n        if (timeout > 0) {\n            createTimerTask(timeout);\n        }\n        return true;\n    }","commit_id":"61adb143a0f5930357140c0d470e9b44957107f4","url":"https://github.com/apache/cxf"},{"original_method":"public boolean suspend(long timeout) {\n        if (isPending && timeout != 0) {\n            pendingTimeout += pendingTimeout + timeout;\n        } else {\n            pendingTimeout = timeout;\n        }\n        isNew = false;\n        \n        // Need to get the right message which is handled in the interceptor chain\n        message.getExchange().getInMessage().getInterceptorChain().suspend();\n        continuation.setTimeout(pendingTimeout);\n        if (!isPending) {\n            continuation.suspend();\n            isPending = true;\n        }\n        return true;\n    }","id":8584,"modified_method":"public boolean suspend(long timeout) {\n        if (isPending && timeout != 0) {\n            pendingTimeout += pendingTimeout + timeout;\n        } else {\n            pendingTimeout = timeout;\n        }\n        isNew = false;\n        \n        if (PhaseInterceptorChain.getCurrentMessage() == null) {\n            // the current thread is different to the one which holds a lock on PhaseInterceptorChain \n            message.getExchange().put(Message.SUSPENDED_INVOCATION, true);\n        } else {\n            // Need to get the right message which is handled in the interceptor chain\n            message.getExchange().getInMessage().getInterceptorChain().suspend();\n        }\n        continuation.setTimeout(pendingTimeout);\n        if (!isPending) {\n            continuation.suspend();\n            isPending = true;\n        }\n        return true;\n    }","commit_id":"61adb143a0f5930357140c0d470e9b44957107f4","url":"https://github.com/apache/cxf"},{"original_method":"public void handleMessage(final Message message) {\n        final Exchange exchange = message.getExchange();\n        final Endpoint endpoint = exchange.get(Endpoint.class);\n        final Service service = endpoint.getService();\n        final Invoker invoker = service.getInvoker();        \n\n        Runnable invocation = new Runnable() {\n\n            public void run() {\n                Exchange runableEx = message.getExchange();\n                Object result = invoker.invoke(runableEx, getInvokee(message));\n                if (!exchange.isOneWay()) {\n                    Endpoint ep = exchange.get(Endpoint.class);\n                    \n                    Message outMessage = runableEx.getOutMessage();\n                    if (outMessage == null) {\n                        outMessage = new MessageImpl();\n                        outMessage.setExchange(exchange);\n                        outMessage = ep.getBinding().createMessage(outMessage);\n                        exchange.setOutMessage(outMessage);\n                    }\n                    copyJaxwsProperties(message, outMessage);\n                    if (result != null) {\n                        MessageContentsList resList = null;\n                        if (result instanceof MessageContentsList) {\n                            resList = (MessageContentsList)result;\n                        } else if (result instanceof List) {\n                            resList = new MessageContentsList((List<?>)result);\n                        } else if (result.getClass().isArray()) {\n                            resList = new MessageContentsList((Object[])result);\n                        } else {\n                            outMessage.setContent(Object.class, result);                            \n                        }\n                        if (resList != null) {\n                            outMessage.setContent(List.class, resList);\n                        }\n                    }                    \n                }\n            }\n\n        };\n        \n        Executor executor = getExecutor(endpoint);\n        Executor executor2 = exchange.get(Executor.class);\n        if (executor2 == executor || executor == null) {\n            // already executing on the appropriate executor\n            invocation.run();\n        } else {\n            exchange.put(Executor.class, executor);\n            FutureTask<Object> o = new FutureTask<Object>(invocation, null) {\n                @Override\n                protected void done() {\n                    super.done();\n                    synchronized (this) {\n                        this.notifyAll();\n                    }\n                }\n            };\n            synchronized (o) {\n                executor.execute(o);\n                if (!o.isDone()) {\n                    try {\n                        o.wait();\n                    } catch (InterruptedException e) {\n                        //IGNORE\n                    }\n                }\n                try {\n                    o.get();\n                } catch (InterruptedException e) {\n                    throw new Fault(e);\n                } catch (ExecutionException e) {\n                    if (e.getCause() instanceof RuntimeException) {\n                        throw (RuntimeException)e.getCause();\n                    } else {\n                        throw new Fault(e.getCause());\n                    }\n                }\n            }\n        }\n    }","id":8585,"modified_method":"public void handleMessage(final Message message) {\n        final Exchange exchange = message.getExchange();\n        final Endpoint endpoint = exchange.get(Endpoint.class);\n        final Service service = endpoint.getService();\n        final Invoker invoker = service.getInvoker();        \n\n        Runnable invocation = new Runnable() {\n\n            public void run() {\n                Exchange runableEx = message.getExchange();\n                Object result = invoker.invoke(runableEx, getInvokee(message));\n                if (!exchange.isOneWay()) {\n                    Endpoint ep = exchange.get(Endpoint.class);\n                    \n                    Message outMessage = runableEx.getOutMessage();\n                    if (outMessage == null) {\n                        outMessage = new MessageImpl();\n                        outMessage.setExchange(exchange);\n                        outMessage = ep.getBinding().createMessage(outMessage);\n                        exchange.setOutMessage(outMessage);\n                    }\n                    copyJaxwsProperties(message, outMessage);\n                    if (result != null) {\n                        MessageContentsList resList = null;\n                        if (result instanceof MessageContentsList) {\n                            resList = (MessageContentsList)result;\n                        } else if (result instanceof List) {\n                            resList = new MessageContentsList((List<?>)result);\n                        } else if (result.getClass().isArray()) {\n                            resList = new MessageContentsList((Object[])result);\n                        } else {\n                            outMessage.setContent(Object.class, result);                            \n                        }\n                        if (resList != null) {\n                            outMessage.setContent(List.class, resList);\n                        }\n                    }                    \n                }\n            }\n\n        };\n        \n        Executor executor = getExecutor(endpoint);\n        Executor executor2 = exchange.get(Executor.class);\n        if (executor2 == executor || executor == null) {\n            // already executing on the appropriate executor\n            invocation.run();\n        } else {\n            exchange.put(Executor.class, executor);\n            FutureTask<Object> o = new FutureTask<Object>(invocation, null) {\n                @Override\n                protected void done() {\n                    super.done();\n                    synchronized (this) {\n                        this.notifyAll();\n                    }\n                }\n            };\n            synchronized (o) {\n                executor.execute(o);\n                if (!o.isDone()) {\n                    try {\n                        o.wait();\n                    } catch (InterruptedException e) {\n                        //IGNORE\n                    }\n                }\n                try {\n                    o.get();\n                } catch (InterruptedException e) {\n                    throw new Fault(e);\n                } catch (ExecutionException e) {\n                    if (e.getCause() instanceof RuntimeException) {\n                        throw (RuntimeException)e.getCause();\n                    } else {\n                        throw new Fault(e.getCause());\n                    }\n                } finally {\n                    if (PropertyUtils.isTrue(exchange.remove(Message.SUSPENDED_INVOCATION))) {    \n                        message.getInterceptorChain().suspend();\n                    }\n                }\n            }\n        }\n    }","commit_id":"61adb143a0f5930357140c0d470e9b44957107f4","url":"https://github.com/apache/cxf"},{"original_method":"public boolean suspend(long timeout) {\n            if (isPending && timeout != 0) {\n                long currentTimeout = context.getTimeout();\n                timeout = currentTimeout + timeout;\n            } else {\n                isPending = true;\n            }\n            isNew = false;\n            \n            // Need to get the right message which is handled in the interceptor chain\n            context.setTimeout(timeout);\n            inMessage.getExchange().getInMessage().getInterceptorChain().suspend();\n            \n            return true;\n        }","id":8586,"modified_method":"public boolean suspend(long timeout) {\n            if (isPending && timeout != 0) {\n                long currentTimeout = context.getTimeout();\n                timeout = currentTimeout + timeout;\n            } else {\n                isPending = true;\n            }\n            isNew = false;\n            \n            context.setTimeout(timeout);\n            if (PhaseInterceptorChain.getCurrentMessage() == null) {\n                // the current thread is different to the one which holds a lock on PhaseInterceptorChain \n                inMessage.getExchange().put(Message.SUSPENDED_INVOCATION, true);\n            } else {\n                // Need to get the right message which is handled in the interceptor chain\n                inMessage.getExchange().getInMessage().getInterceptorChain().suspend();\n            }\n            \n            return true;\n        }","commit_id":"61adb143a0f5930357140c0d470e9b44957107f4","url":"https://github.com/apache/cxf"},{"original_method":"private static void expectLog(Orchestrator orchestrator, String expectedLog) throws IOException {\n    File logFile = orchestrator.getServer().getLogs();\n    try (Stream<String> lines = Files.lines(logFile.toPath())) {\n      assertThat(lines.anyMatch(s -> containsIgnoreCase(s, expectedLog))).isTrue();\n    }\n  }","id":8587,"modified_method":"private static void expectLog(Orchestrator orchestrator, String expectedLog) throws IOException {\n    File logFile = orchestrator.getServer().getLogs();\n    try (Stream<String> lines = Files.lines(logFile.toPath())) {\n      assertThat(lines.anyMatch(s -> StringUtils.containsIgnoreCase(s, expectedLog))).isTrue();\n    }\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void updateKey(String projectOrModuleKey, String newKey) {\n    DbSession session = dbClient.openSession(false);\n    try {\n      ComponentDto projectOrModule = getByKey(session, projectOrModuleKey);\n      userSession.checkComponentUuidPermission(UserRole.ADMIN, projectOrModule.projectUuid());\n      dbClient.resourceKeyUpdaterDao().updateKey(projectOrModule.uuid(), newKey);\n      session.commit();\n\n      session.commit();\n    } finally {\n      session.close();\n    }\n  }","id":8588,"modified_method":"public void updateKey(String projectOrModuleKey, String newKey) {\n    DbSession dbSession = dbClient.openSession(false);\n    try {\n      updateKey(dbSession, projectOrModuleKey, newKey);\n    } finally {\n      dbSession.close();\n    }\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@CheckForNull\n  public ComponentDto getNullableByKey(String key) {\n    DbSession session = dbClient.openSession(false);\n    try {\n      Optional<ComponentDto> component = dbClient.componentDao().selectByKey(session, key);\n      return component.isPresent() ? component.get() : null;\n    } finally {\n      session.close();\n    }\n  }","id":8589,"modified_method":"@CheckForNull\n  public ComponentDto getNullableByKey(String key) {\n    DbSession session = dbClient.openSession(false);\n    try {\n      Optional<ComponentDto> component = dbClient.componentDao().selectByKey(session, key);\n      return component.orNull();\n    } finally {\n      session.close();\n    }\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void checkKeyFormat(String qualifier, String kee) {\n    if (!ComponentKeys.isValidModuleKey(kee)) {\n      throw new BadRequestException(formatMessage(\"Malformed key for %s: %s. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\",\n        qualifier, kee));\n    }\n  }","id":8590,"modified_method":"private void checkKeyFormat(String qualifier, String kee) {\n    checkRequest(isValidModuleKey(kee), formatMessage(\"Malformed key for %s: %s. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\",\n      qualifier, kee));\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void fail_to_create_new_component_on_invalid_key() {\n    userSessionRule.login(\"john\").setGlobalPermissions(PROVISIONING);\n\n    try {\n      service.create(NewComponent.create(\"struts?parent\", \"Struts project\"));\n      fail();\n    } catch (Exception e) {\n      assertThat(e).isInstanceOf(BadRequestException.class).hasMessage(\n        \"Malformed key for Project: struts?parent. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");\n    }\n  }","id":8591,"modified_method":"@Test\n  public void fail_to_create_new_component_on_invalid_key() {\n    userSession.login(\"john\").setGlobalPermissions(PROVISIONING);\n    expectedException.expect(BadRequestException.class);\n    expectedException.expectMessage(\"Malformed key for Project: struts?parent. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");\n\n    underTest.create(NewComponent.create(\"struts?parent\", \"Struts project\"));\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void create_developer() throws Exception {\n    // No permission should be required to create a developer\n    userSessionRule.anonymous();\n\n    String key = service.createDeveloper(dbTester.getSession(), NewComponent.create(\"DEV:jon.name@mail.com\", \"John\").setQualifier(\"DEV\")).getKey();\n    dbTester.getSession().commit();\n\n    ComponentDto dev = service.getNullableByKey(key);\n    assertThat(dev.key()).isEqualTo(\"DEV:jon.name@mail.com\");\n    assertThat(dev.deprecatedKey()).isEqualTo(\"DEV:jon.name@mail.com\");\n    assertThat(dev.uuid()).isNotNull();\n    assertThat(dev.projectUuid()).isEqualTo(dev.uuid());\n    assertThat(dev.moduleUuid()).isNull();\n    assertThat(dev.moduleUuidPath()).isEqualTo(\".\" + dev.uuid() + \".\");\n    assertThat(dev.name()).isEqualTo(\"John\");\n    assertThat(dev.longName()).isEqualTo(\"John\");\n    assertThat(dev.scope()).isEqualTo(\"PRJ\");\n    assertThat(dev.qualifier()).isEqualTo(\"DEV\");\n    assertThat(dev.getCreatedAt()).isNotNull();\n  }","id":8592,"modified_method":"@Test\n  public void create_developer() throws Exception {\n    // No permission should be required to create a developer\n    userSession.anonymous();\n\n    String key = underTest.createDeveloper(dbTester.getSession(), NewComponent.create(\"DEV:jon.name@mail.com\", \"John\").setQualifier(\"DEV\")).getKey();\n    dbTester.getSession().commit();\n\n    ComponentDto dev = underTest.getNullableByKey(key);\n    assertThat(dev.key()).isEqualTo(\"DEV:jon.name@mail.com\");\n    assertThat(dev.deprecatedKey()).isEqualTo(\"DEV:jon.name@mail.com\");\n    assertThat(dev.uuid()).isNotNull();\n    assertThat(dev.projectUuid()).isEqualTo(dev.uuid());\n    assertThat(dev.moduleUuid()).isNull();\n    assertThat(dev.moduleUuidPath()).isEqualTo(\".\" + dev.uuid() + \".\");\n    assertThat(dev.name()).isEqualTo(\"John\");\n    assertThat(dev.longName()).isEqualTo(\"John\");\n    assertThat(dev.scope()).isEqualTo(\"PRJ\");\n    assertThat(dev.qualifier()).isEqualTo(\"DEV\");\n    assertThat(dev.getCreatedAt()).isNotNull();\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void fail_to_create_new_component_on_invalid_branch() {\n    userSessionRule.login(\"john\").setGlobalPermissions(PROVISIONING);\n\n    try {\n      service.create(NewComponent.create(\"struts\", \"Struts project\").setBranch(\"origin?branch\"));\n      fail();\n    } catch (Exception e) {\n      assertThat(e).isInstanceOf(BadRequestException.class).hasMessage(\n        \"Malformed branch for Project: origin?branch. Allowed characters are alphanumeric, '-', '_', '.' and '/', with at least one non-digit.\");\n    }\n  }","id":8593,"modified_method":"@Test\n  public void fail_to_create_new_component_on_invalid_branch() {\n    expectedException.expect(BadRequestException.class);\n    expectedException.expectMessage(\"Malformed branch for Project: origin?branch. Allowed characters are alphanumeric, '-', '_', '.' and '/', with at least one non-digit.\");\n\n    userSession.login(\"john\").setGlobalPermissions(PROVISIONING);\n\n    underTest.create(NewComponent.create(\"struts\", \"Struts project\").setBranch(\"origin?branch\"));\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void fail_to_create_new_component_if_key_already_exists() {\n    userSessionRule.login(\"john\").setGlobalPermissions(PROVISIONING);\n\n    ComponentDto project = ComponentTesting.newProjectDto().setKey(\"struts\");\n    dbClient.componentDao().insert(session, project);\n    session.commit();\n\n    try {\n      service.create(NewComponent.create(\"struts\", \"Struts project\"));\n      fail();\n    } catch (Exception e) {\n      assertThat(e).isInstanceOf(BadRequestException.class).hasMessage(\"Could not create Project, key already exists: struts\");\n    }\n  }","id":8594,"modified_method":"@Test\n  public void fail_to_create_new_component_if_key_already_exists() {\n    expectedException.expect(BadRequestException.class);\n    expectedException.expectMessage(\"Could not create Project, key already exists: struts\");\n\n    userSession.login(\"john\").setGlobalPermissions(PROVISIONING);\n    ComponentDto project = ComponentTesting.newProjectDto().setKey(\"struts\");\n    dbClient.componentDao().insert(dbSession, project);\n    dbSession.commit();\n\n    underTest.create(NewComponent.create(\"struts\", \"Struts project\"));\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void create_view() {\n    userSessionRule.login(\"john\").setGlobalPermissions(PROVISIONING);\n\n    String key = service.create(NewComponent.create(\"all-project\", \"All Projects\").setQualifier(Qualifiers.VIEW)).getKey();\n\n    ComponentDto project = service.getNullableByKey(key);\n    assertThat(project.key()).isEqualTo(\"all-project\");\n    assertThat(project.deprecatedKey()).isEqualTo(\"all-project\");\n    assertThat(project.uuid()).isNotNull();\n    assertThat(project.projectUuid()).isEqualTo(project.uuid());\n    assertThat(project.moduleUuid()).isNull();\n    assertThat(project.moduleUuidPath()).isEqualTo(\".\" + project.uuid() + \".\");\n    assertThat(project.name()).isEqualTo(\"All Projects\");\n    assertThat(project.longName()).isEqualTo(\"All Projects\");\n    assertThat(project.scope()).isEqualTo(\"PRJ\");\n    assertThat(project.qualifier()).isEqualTo(\"VW\");\n    assertThat(project.getCreatedAt()).isNotNull();\n  }","id":8595,"modified_method":"@Test\n  public void create_view() {\n    userSession.login(\"john\").setGlobalPermissions(PROVISIONING);\n\n    String key = underTest.create(NewComponent.create(\"all-project\", \"All Projects\").setQualifier(Qualifiers.VIEW)).getKey();\n\n    ComponentDto project = underTest.getNullableByKey(key);\n    assertThat(project.key()).isEqualTo(\"all-project\");\n    assertThat(project.deprecatedKey()).isEqualTo(\"all-project\");\n    assertThat(project.uuid()).isNotNull();\n    assertThat(project.projectUuid()).isEqualTo(project.uuid());\n    assertThat(project.moduleUuid()).isNull();\n    assertThat(project.moduleUuidPath()).isEqualTo(\".\" + project.uuid() + \".\");\n    assertThat(project.name()).isEqualTo(\"All Projects\");\n    assertThat(project.longName()).isEqualTo(\"All Projects\");\n    assertThat(project.scope()).isEqualTo(\"PRJ\");\n    assertThat(project.qualifier()).isEqualTo(\"VW\");\n    assertThat(project.getCreatedAt()).isNotNull();\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void get_nullable_by_uuid() {\n    ComponentDto project = createProject();\n    assertThat(service.getByUuid(project.uuid())).isPresent();\n    assertThat(service.getByUuid(\"unknown\")).isAbsent();\n  }","id":8596,"modified_method":"@Test\n  public void get_nullable_by_uuid() {\n    ComponentDto project = createProject();\n    assertThat(underTest.getByUuid(project.uuid())).isPresent();\n    assertThat(underTest.getByUuid(\"unknown\")).isAbsent();\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void get_by_key() {\n    ComponentDto project = createProject();\n    assertThat(service.getByKey(project.getKey())).isNotNull();\n  }","id":8597,"modified_method":"@Test\n  public void get_by_key() {\n    ComponentDto project = createProject();\n    assertThat(underTest.getByKey(project.getKey())).isNotNull();\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_fail_on_components_not_found() {\n    String moduleKey = \"sample:root:module\";\n    String fileKey = \"sample:root:module:Foo.xoo\";\n\n    try {\n      service.componentUuids(Arrays.asList(moduleKey, fileKey));\n      Fail.fail(\"Should throw NotFoundException\");\n    } catch (NotFoundException notFound) {\n      assertThat(notFound.getMessage()).contains(moduleKey).contains(fileKey);\n    }\n  }","id":8598,"modified_method":"@Test\n  public void should_fail_on_components_not_found() {\n    String moduleKey = \"sample:root:module\";\n    String fileKey = \"sample:root:module:Foo.xoo\";\n\n    try {\n      underTest.componentUuids(Arrays.asList(moduleKey, fileKey));\n      Fail.fail(\"Should throw NotFoundException\");\n    } catch (NotFoundException notFound) {\n      assertThat(notFound.getMessage()).contains(moduleKey).contains(fileKey);\n    }\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void remove_duplicated_components_when_creating_project() throws Exception {\n    String projectKey = \"PROJECT_KEY\";\n\n    userSessionRule.login(\"john\").setGlobalPermissions(PROVISIONING);\n\n    DbSession session = mock(DbSession.class);\n\n    ComponentDao componentDao = mock(ComponentDao.class);\n    when(componentDao.selectByKey(session, projectKey)).thenReturn(Optional.<ComponentDto>absent());\n\n    DbClient dbClient = mock(DbClient.class);\n    when(dbClient.openSession(false)).thenReturn(session);\n    when(dbClient.componentDao()).thenReturn(componentDao);\n    when(dbClient.componentIndexDao()).thenReturn(mock(ResourceIndexDao.class));\n\n    doAnswer(new Answer<Object>() {\n      public Object answer(InvocationOnMock invocation) {\n        ((ComponentDto) invocation.getArguments()[1]).setId(1L);\n        return null;\n      }\n    }).when(componentDao).insert(eq(session), any(ComponentDto.class));\n\n    when(componentDao.selectComponentsHavingSameKeyOrderedById(session, projectKey)).thenReturn(newArrayList(\n      ComponentTesting.newProjectDto().setId(1L).setKey(projectKey),\n      ComponentTesting.newProjectDto().setId(2L).setKey(projectKey),\n      ComponentTesting.newProjectDto().setId(3L).setKey(projectKey)\n    ));\n\n    service = new ComponentService(dbClient, i18n, userSessionRule, System2.INSTANCE, new ComponentFinder(dbClient));\n    service.create(NewComponent.create(projectKey, projectKey));\n\n    verify(componentDao).delete(session, 2L);\n    verify(componentDao).delete(session, 3L);\n  }","id":8599,"modified_method":"@Test\n  public void remove_duplicated_components_when_creating_project() throws Exception {\n    String projectKey = \"PROJECT_KEY\";\n\n    userSession.login(\"john\").setGlobalPermissions(PROVISIONING);\n\n    DbSession session = mock(DbSession.class);\n\n    ComponentDao componentDao = mock(ComponentDao.class);\n    when(componentDao.selectByKey(session, projectKey)).thenReturn(Optional.<ComponentDto>absent());\n\n    DbClient dbClient = mock(DbClient.class);\n    when(dbClient.openSession(false)).thenReturn(session);\n    when(dbClient.componentDao()).thenReturn(componentDao);\n    when(dbClient.componentIndexDao()).thenReturn(mock(ResourceIndexDao.class));\n\n    doAnswer(invocation -> {\n      ((ComponentDto) invocation.getArguments()[1]).setId(1L);\n      return null;\n    }).when(componentDao).insert(eq(session), any(ComponentDto.class));\n\n    when(componentDao.selectComponentsHavingSameKeyOrderedById(session, projectKey)).thenReturn(newArrayList(\n      ComponentTesting.newProjectDto().setId(1L).setKey(projectKey),\n      ComponentTesting.newProjectDto().setId(2L).setKey(projectKey),\n      ComponentTesting.newProjectDto().setId(3L).setKey(projectKey)));\n\n    underTest = new ComponentService(dbClient, i18n, userSession, System2.INSTANCE, new ComponentFinder(dbClient));\n    underTest.create(NewComponent.create(projectKey, projectKey));\n\n    verify(componentDao).delete(session, 2L);\n    verify(componentDao).delete(session, 3L);\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void bulk_update_provisioned_project_key() {\n    ComponentDto provisionedProject = ComponentTesting.newProjectDto().setKey(\"provisionedProject\");\n    dbClient.componentDao().insert(session, provisionedProject);\n\n    session.commit();\n\n    userSessionRule.login(\"john\").addProjectUuidPermissions(UserRole.ADMIN, provisionedProject.uuid());\n    service.bulkUpdateKey(provisionedProject.key(), \"provisionedProject\", \"provisionedProject2\");\n    session.commit();\n\n    // Check project key has been updated\n    assertThat(service.getNullableByKey(provisionedProject.key())).isNull();\n    assertThat(service.getNullableByKey(\"provisionedProject2\")).isNotNull();\n  }","id":8600,"modified_method":"@Test\n  public void bulk_update_provisioned_project_key() {\n    ComponentDto provisionedProject = ComponentTesting.newProjectDto().setKey(\"provisionedProject\");\n    dbClient.componentDao().insert(dbSession, provisionedProject);\n\n    dbSession.commit();\n\n    userSession.login(\"john\").addProjectUuidPermissions(UserRole.ADMIN, provisionedProject.uuid());\n    underTest.bulkUpdateKey(provisionedProject.key(), \"provisionedProject\", \"provisionedProject2\");\n    dbSession.commit();\n\n    // Check project key has been updated\n    assertThat(underTest.getNullableByKey(provisionedProject.key())).isNull();\n    assertThat(underTest.getNullableByKey(\"provisionedProject2\")).isNotNull();\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test(expected = ForbiddenException.class)\n  public void fail_to_check_module_keys_before_renaming_without_admin_permission() {\n    ComponentDto project = createProject();\n    userSessionRule.login(\"john\").addProjectUuidPermissions(UserRole.USER, project.uuid());\n    service.checkModuleKeysBeforeRenaming(project.key(), \"sample\", \"sample2\");\n  }","id":8601,"modified_method":"@Test\n  public void fail_to_check_module_keys_before_renaming_without_admin_permission() {\n    expectedException.expect(ForbiddenException.class);\n\n    ComponentDto project = createProject();\n    userSession.login(\"john\").addProjectUuidPermissions(UserRole.USER, project.uuid());\n\n    underTest.checkModuleKeysBeforeRenaming(project.key(), \"sample\", \"sample2\");\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private ComponentDto createProject() {\n    ComponentDto project = ComponentTesting.newProjectDto().setKey(\"sample:root\");\n    dbClient.componentDao().insert(session, project);\n    session.commit();\n    return project;\n  }","id":8602,"modified_method":"private ComponentDto createProject() {\n    ComponentDto project = ComponentTesting.newProjectDto().setKey(\"sample:root\");\n    dbClient.componentDao().insert(dbSession, project);\n    dbSession.commit();\n    return project;\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void check_module_keys_before_renaming_return_duplicate_key() {\n    ComponentDto project = createProject();\n    ComponentDto module = ComponentTesting.newModuleDto(project).setKey(\"sample:root:module\");\n    dbClient.componentDao().insert(session, module);\n\n    ComponentDto module2 = ComponentTesting.newModuleDto(project).setKey(\"foo:module\");\n    dbClient.componentDao().insert(session, module2);\n\n    session.commit();\n\n    userSessionRule.login(\"john\").addProjectUuidPermissions(UserRole.ADMIN, project.uuid());\n    Map<String, String> result = service.checkModuleKeysBeforeRenaming(project.key(), \"sample:root\", \"foo\");\n\n    assertThat(result).hasSize(2);\n    assertThat(result.get(\"sample:root\")).isEqualTo(\"foo\");\n    assertThat(result.get(\"sample:root:module\")).isEqualTo(\"#duplicate_key#\");\n  }","id":8603,"modified_method":"@Test\n  public void check_module_keys_before_renaming_return_duplicate_key() {\n    ComponentDto project = createProject();\n    ComponentDto module = ComponentTesting.newModuleDto(project).setKey(\"sample:root:module\");\n    dbClient.componentDao().insert(dbSession, module);\n\n    ComponentDto module2 = ComponentTesting.newModuleDto(project).setKey(\"foo:module\");\n    dbClient.componentDao().insert(dbSession, module2);\n\n    dbSession.commit();\n\n    userSession.login(\"john\").addProjectUuidPermissions(UserRole.ADMIN, project.uuid());\n    Map<String, String> result = underTest.checkModuleKeysBeforeRenaming(project.key(), \"sample:root\", \"foo\");\n\n    assertThat(result).hasSize(2);\n    assertThat(result.get(\"sample:root\")).isEqualTo(\"foo\");\n    assertThat(result.get(\"sample:root:module\")).isEqualTo(\"#duplicate_key#\");\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void create_project() {\n    userSessionRule.login(\"john\").setGlobalPermissions(PROVISIONING);\n\n    String key = service.create(NewComponent.create(\"struts\", \"Struts project\")).getKey();\n\n    ComponentDto project = service.getNullableByKey(key);\n    assertThat(project.key()).isEqualTo(\"struts\");\n    assertThat(project.deprecatedKey()).isEqualTo(\"struts\");\n    assertThat(project.uuid()).isNotNull();\n    assertThat(project.projectUuid()).isEqualTo(project.uuid());\n    assertThat(project.moduleUuid()).isNull();\n    assertThat(project.moduleUuidPath()).isEqualTo(\".\" + project.uuid() + \".\");\n    assertThat(project.name()).isEqualTo(\"Struts project\");\n    assertThat(project.longName()).isEqualTo(\"Struts project\");\n    assertThat(project.scope()).isEqualTo(\"PRJ\");\n    assertThat(project.qualifier()).isEqualTo(\"TRK\");\n    assertThat(project.getCreatedAt()).isNotNull();\n  }","id":8604,"modified_method":"@Test\n  public void create_project() {\n    userSession.login(\"john\").setGlobalPermissions(PROVISIONING);\n\n    String key = underTest.create(NewComponent.create(\"struts\", \"Struts project\")).getKey();\n\n    ComponentDto project = underTest.getNullableByKey(key);\n    assertThat(project.key()).isEqualTo(\"struts\");\n    assertThat(project.deprecatedKey()).isEqualTo(\"struts\");\n    assertThat(project.uuid()).isNotNull();\n    assertThat(project.projectUuid()).isEqualTo(project.uuid());\n    assertThat(project.moduleUuid()).isNull();\n    assertThat(project.moduleUuidPath()).isEqualTo(\".\" + project.uuid() + \".\");\n    assertThat(project.name()).isEqualTo(\"Struts project\");\n    assertThat(project.longName()).isEqualTo(\"Struts project\");\n    assertThat(project.scope()).isEqualTo(\"PRJ\");\n    assertThat(project.qualifier()).isEqualTo(\"TRK\");\n    assertThat(project.getCreatedAt()).isNotNull();\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void check_module_keys_before_renaming() {\n    ComponentDto project = createProject();\n    ComponentDto module = ComponentTesting.newModuleDto(project).setKey(\"sample:root:module\");\n    dbClient.componentDao().insert(session, module);\n\n    ComponentDto file = ComponentTesting.newFileDto(module).setKey(\"sample:root:module:src/File.xoo\");\n    dbClient.componentDao().insert(session, file);\n\n    session.commit();\n\n    userSessionRule.login(\"john\").addProjectUuidPermissions(UserRole.ADMIN, project.uuid());\n    Map<String, String> result = service.checkModuleKeysBeforeRenaming(project.key(), \"sample\", \"sample2\");\n\n    assertThat(result).hasSize(2);\n    assertThat(result.get(\"sample:root\")).isEqualTo(\"sample2:root\");\n    assertThat(result.get(\"sample:root:module\")).isEqualTo(\"sample2:root:module\");\n  }","id":8605,"modified_method":"@Test\n  public void check_module_keys_before_renaming() {\n    ComponentDto project = createProject();\n    ComponentDto module = ComponentTesting.newModuleDto(project).setKey(\"sample:root:module\");\n    dbClient.componentDao().insert(dbSession, module);\n\n    ComponentDto file = ComponentTesting.newFileDto(module).setKey(\"sample:root:module:src/File.xoo\");\n    dbClient.componentDao().insert(dbSession, file);\n\n    dbSession.commit();\n\n    userSession.login(\"john\").addProjectUuidPermissions(UserRole.ADMIN, project.uuid());\n    Map<String, String> result = underTest.checkModuleKeysBeforeRenaming(project.key(), \"sample\", \"sample2\");\n\n    assertThat(result).hasSize(2);\n    assertThat(result.get(\"sample:root\")).isEqualTo(\"sample2:root\");\n    assertThat(result.get(\"sample:root:module\")).isEqualTo(\"sample2:root:module\");\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void get_nullable_by_key() {\n    ComponentDto project = createProject();\n    assertThat(service.getNullableByKey(project.getKey())).isNotNull();\n    assertThat(service.getNullableByKey(\"unknown\")).isNull();\n  }","id":8606,"modified_method":"@Test\n  public void get_nullable_by_key() {\n    ComponentDto project = createProject();\n    assertThat(underTest.getNullableByKey(project.getKey())).isNotNull();\n    assertThat(underTest.getNullableByKey(\"unknown\")).isNull();\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Before\n  public void setUp() {\n    when(i18n.message(Locale.getDefault(), \"qualifier.TRK\", \"Project\")).thenReturn(\"Project\");\n    service = new ComponentService(dbClient, i18n, userSessionRule, System2.INSTANCE, new ComponentFinder(dbClient));\n  }","id":8607,"modified_method":"@Before\n  public void setUp() {\n    i18n.put(\"qualifier.TRK\", \"Project\");\n\n    underTest = new ComponentService(dbClient, i18n, userSession, System2.INSTANCE, new ComponentFinder(dbClient));\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void get_by_uuid() {\n    ComponentDto project = createProject();\n    assertThat(service.getNonNullByUuid(project.uuid())).isNotNull();\n  }","id":8608,"modified_method":"@Test\n  public void get_by_uuid() {\n    ComponentDto project = createProject();\n    assertThat(underTest.getNonNullByUuid(project.uuid())).isNotNull();\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test(expected = ForbiddenException.class)\n  public void fail_to_bulk_update_project_key_without_admin_permission() {\n    ComponentDto project = createProject();\n    userSessionRule.login(\"john\").addProjectPermissions(UserRole.USER, project.key());\n    service.bulkUpdateKey(\"sample:root\", \"sample\", \"sample2\");\n  }","id":8609,"modified_method":"@Test\n  public void fail_to_bulk_update_project_key_without_admin_permission() {\n    expectedException.expect(ForbiddenException.class);\n\n    ComponentDto project = createProject();\n    userSession.login(\"john\").addProjectPermissions(UserRole.USER, project.key());\n    underTest.bulkUpdateKey(\"sample:root\", \"sample\", \"sample2\");\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void create_new_project_with_branch() {\n    userSessionRule.login(\"john\").setGlobalPermissions(PROVISIONING);\n\n    String key = service.create(NewComponent.create(\"struts\", \"Struts project\").setBranch(\"origin/branch\")).getKey();\n\n    ComponentDto project = service.getNullableByKey(key);\n    assertThat(project.key()).isEqualTo(\"struts:origin/branch\");\n    assertThat(project.deprecatedKey()).isEqualTo(\"struts:origin/branch\");\n  }","id":8610,"modified_method":"@Test\n  public void create_new_project_with_branch() {\n    userSession.login(\"john\").setGlobalPermissions(PROVISIONING);\n\n    String key = underTest.create(NewComponent.create(\"struts\", \"Struts project\").setBranch(\"origin/branch\")).getKey();\n\n    ComponentDto project = underTest.getNullableByKey(key);\n    assertThat(project.key()).isEqualTo(\"struts:origin/branch\");\n    assertThat(project.deprecatedKey()).isEqualTo(\"struts:origin/branch\");\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void bulk_update_project_key() {\n    ComponentDto project = createProject();\n    ComponentDto module = ComponentTesting.newModuleDto(project).setKey(\"sample:root:module\");\n    dbClient.componentDao().insert(session, module);\n\n    ComponentDto file = ComponentTesting.newFileDto(module).setKey(\"sample:root:module:src/File.xoo\");\n    dbClient.componentDao().insert(session, file);\n\n    session.commit();\n\n    userSessionRule.login(\"john\").addProjectUuidPermissions(UserRole.ADMIN, project.uuid());\n    service.bulkUpdateKey(project.key(), \"sample\", \"sample2\");\n    session.commit();\n\n    // Check project key has been updated\n    assertThat(service.getNullableByKey(project.key())).isNull();\n    assertThat(service.getNullableByKey(\"sample2:root\")).isNotNull();\n\n    // Check module key has been updated\n    assertThat(service.getNullableByKey(module.key())).isNull();\n    assertThat(service.getNullableByKey(\"sample2:root:module\")).isNotNull();\n\n    // Check file key has been updated\n    assertThat(service.getNullableByKey(file.key())).isNull();\n    assertThat(service.getNullableByKey(\"sample2:root:module:src/File.xoo\")).isNotNull();\n  }","id":8611,"modified_method":"@Test\n  public void bulk_update_project_key() {\n    ComponentDto project = createProject();\n    ComponentDto module = ComponentTesting.newModuleDto(project).setKey(\"sample:root:module\");\n    dbClient.componentDao().insert(dbSession, module);\n\n    ComponentDto file = ComponentTesting.newFileDto(module).setKey(\"sample:root:module:src/File.xoo\");\n    dbClient.componentDao().insert(dbSession, file);\n\n    dbSession.commit();\n\n    userSession.login(\"john\").addProjectUuidPermissions(UserRole.ADMIN, project.uuid());\n    underTest.bulkUpdateKey(project.key(), \"sample\", \"sample2\");\n    dbSession.commit();\n\n    // Check project key has been updated\n    assertThat(underTest.getNullableByKey(project.key())).isNull();\n    assertThat(underTest.getNullableByKey(\"sample2:root\")).isNotNull();\n\n    // Check module key has been updated\n    assertThat(underTest.getNullableByKey(module.key())).isNull();\n    assertThat(underTest.getNullableByKey(\"sample2:root:module\")).isNotNull();\n\n    // Check file key has been updated\n    assertThat(underTest.getNullableByKey(file.key())).isNull();\n    assertThat(underTest.getNullableByKey(\"sample2:root:module:src/File.xoo\")).isNotNull();\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_return_project_uuids() {\n    ComponentDto project = createProject();\n    String moduleKey = \"sample:root:module\";\n    ComponentDto module = ComponentTesting.newModuleDto(project).setKey(moduleKey);\n    dbClient.componentDao().insert(session, module);\n    String fileKey = \"sample:root:module:Foo.xoo\";\n    ComponentDto file = ComponentTesting.newFileDto(module).setKey(fileKey);\n    dbClient.componentDao().insert(session, file);\n    session.commit();\n\n    assertThat(service.componentUuids(Arrays.asList(moduleKey, fileKey))).hasSize(2);\n    assertThat(service.componentUuids(null)).isEmpty();\n    assertThat(service.componentUuids(Arrays.<String>asList())).isEmpty();\n  }","id":8612,"modified_method":"@Test\n  public void should_return_project_uuids() {\n    ComponentDto project = createProject();\n    String moduleKey = \"sample:root:module\";\n    ComponentDto module = ComponentTesting.newModuleDto(project).setKey(moduleKey);\n    dbClient.componentDao().insert(dbSession, module);\n    String fileKey = \"sample:root:module:Foo.xoo\";\n    ComponentDto file = ComponentTesting.newFileDto(module).setKey(fileKey);\n    dbClient.componentDao().insert(dbSession, file);\n    dbSession.commit();\n\n    assertThat(underTest.componentUuids(Arrays.asList(moduleKey, fileKey))).hasSize(2);\n    assertThat(underTest.componentUuids(null)).isEmpty();\n    assertThat(underTest.componentUuids(Arrays.<String>asList())).isEmpty();\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_fail_silently_on_components_not_found_if_told_so() {\n    String moduleKey = \"sample:root:module\";\n    String fileKey = \"sample:root:module:Foo.xoo\";\n\n    assertThat(service.componentUuids(session, Arrays.asList(moduleKey, fileKey), true)).isEmpty();\n  }","id":8613,"modified_method":"@Test\n  public void should_fail_silently_on_components_not_found_if_told_so() {\n    String moduleKey = \"sample:root:module\";\n    String fileKey = \"sample:root:module:Foo.xoo\";\n\n    assertThat(underTest.componentUuids(dbSession, Arrays.asList(moduleKey, fileKey), true)).isEmpty();\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  protected void configureModule() {\n    add(\n      ResourcesWs.class,\n      ComponentsWs.class,\n      EventsWs.class,\n      // actions\n      AppAction.class,\n      SearchAction.class,\n      TreeAction.class,\n      ShowAction.class,\n      SearchViewComponentsAction.class);\n  }","id":8614,"modified_method":"@Override\n  protected void configureModule() {\n    add(\n      ResourcesWs.class,\n      ComponentsWs.class,\n      EventsWs.class,\n      // actions\n      AppAction.class,\n      SearchAction.class,\n      TreeAction.class,\n      ShowAction.class,\n      SearchViewComponentsAction.class,\n      UpdateKeyAction.class);\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void verify_count_of_added_components() {\n    ComponentContainer container = new ComponentContainer();\n    new ComponentsWsModule().configure(container);\n    assertThat(container.size()).isEqualTo(8 + 2);\n  }","id":8615,"modified_method":"@Test\n  public void verify_count_of_added_components() {\n    ComponentContainer container = new ComponentContainer();\n    new ComponentsWsModule().configure(container);\n    assertThat(container.size()).isEqualTo(9 + 2);\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void updateKey(String projectUuid, String newKey) {\n    DbSession session = mybatis.openSession(true);\n    ResourceKeyUpdaterMapper mapper = session.getMapper(ResourceKeyUpdaterMapper.class);\n    try {\n      if (mapper.countResourceByKey(newKey) > 0) {\n        throw new IllegalStateException(\"Impossible to update key: a resource with \\\"\" + newKey + \"\\\" key already exists.\");\n      }\n\n      // must SELECT first everything\n      ResourceDto project = mapper.selectProject(projectUuid);\n      String projectOldKey = project.getKey();\n      List<ResourceDto> resources = mapper.selectProjectResources(projectUuid);\n      resources.add(project);\n\n      // and then proceed with the batch UPDATE at once\n      runBatchUpdateForAllResources(resources, projectOldKey, newKey, mapper);\n\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","id":8616,"modified_method":"public void updateKey(String projectUuid, String newKey) {\n    DbSession session = mybatis.openSession(true);\n    ResourceKeyUpdaterMapper mapper = session.getMapper(ResourceKeyUpdaterMapper.class);\n    try {\n      if (mapper.countResourceByKey(newKey) > 0) {\n        throw new IllegalArgumentException(\"Impossible to update key: a component with key \\\"\" + newKey + \"\\\" already exists.\");\n      }\n\n      // must SELECT first everything\n      ResourceDto project = mapper.selectProject(projectUuid);\n      String projectOldKey = project.getKey();\n      List<ResourceDto> resources = mapper.selectProjectResources(projectUuid);\n      resources.add(project);\n\n      // and then proceed with the batch UPDATE at once\n      runBatchUpdateForAllResources(resources, projectOldKey, newKey, mapper);\n\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldNotUpdateKey() {\n    db.prepareDbUnit(getClass(), \"shared.xml\");\n\n    thrown.expect(IllegalStateException.class);\n    thrown.expectMessage(\"Impossible to update key: a resource with \\\"org.struts:struts-ui\\\" key already exists.\");\n\n    underTest.updateKey(\"B\", \"org.struts:struts-ui\");\n  }","id":8617,"modified_method":"@Test\n  public void shouldNotUpdateKey() {\n    db.prepareDbUnit(getClass(), \"shared.xml\");\n\n    thrown.expect(IllegalArgumentException.class);\n    thrown.expectMessage(\"Impossible to update key: a component with key \\\"org.struts:struts-ui\\\" already exists.\");\n\n    underTest.updateKey(\"B\", \"org.struts:struts-ui\");\n  }","commit_id":"645d874eda971f79a0927aa6370adb9489f148b7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public int startRunnerWithArgs(String[] args, ArrayList listeners, String name, int count, boolean sendTree) {\n    myTestsListener = new SMTestListener();\n    myListeners = listeners;\n    setPrinter(new MockResultPrinter());\n    try {\n      Test suite = TestRunnerUtil.getTestSuite(this, args);\n      if (suite == null) return -1;\n      TestResult result = doRun(suite);\n      if (!result.wasSuccessful()) {\n        return -1;\n      }\n      return 0;\n    }\n    catch (Exception e) {\n      e.printStackTrace(System.err);\n      return -2;\n    }\n  }","id":8618,"modified_method":"public int startRunnerWithArgs(String[] args, String name, int count, boolean sendTree) {\n    setPrinter(new MockResultPrinter());\n    try {\n      Test suite = TestRunnerUtil.getTestSuite(this, args);\n      if (suite == null) return -1;\n      return doRun(suite).wasSuccessful() ? 0 : -1;\n    }\n    catch (Exception e) {\n      e.printStackTrace(System.err);\n      return -2;\n    }\n  }","commit_id":"ae1e09f0630b30e3012805d8f91673812828cdd0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Object getTestToStart(String[] args, String name) {\n    final Request request = JUnit4TestRunnerUtil.buildRequest(args, name, false);\n    if (request == null) return null;\n    final Runner testRunner = request.getRunner();\n    try {\n      return getDescription(request, testRunner);\n    }\n    catch (Exception e) {\n      //noinspection HardCodedStringLiteral\n      System.err.println(\"Internal Error occured.\");\n      e.printStackTrace(System.err);\n      return null;\n    }\n  }","id":8619,"modified_method":"public Object getTestToStart(String[] args, String name) {\n    final Request request = JUnit4TestRunnerUtil.buildRequest(args, name, false);\n    if (request == null) return null;\n    final Runner testRunner = request.getRunner();\n    try {\n      return getDescription(request, testRunner);\n    }\n    catch (Exception e) {\n      //noinspection HardCodedStringLiteral\n      System.err.println(\"Internal Error occurred.\");\n      e.printStackTrace(System.err);\n      return null;\n    }\n  }","commit_id":"ae1e09f0630b30e3012805d8f91673812828cdd0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public int startRunnerWithArgs(String[] args, ArrayList listeners, String name, int count, boolean sendTree) {\n    myTestsListener = new JUnit4TestListener();\n    try {\n      Result result;\n      if (count == 1) {\n        result = startRunnerWithArgs(args, listeners, name, sendTree, count);\n        if (result == null) {\n          return -1;\n        }\n      }\n      else {\n        if (count > 0) {\n          boolean success = true;\n          int i = 0;\n          while (i++ < count) {\n            result = startRunnerWithArgs(args, listeners, name, sendTree, count);\n            if (result == null) {\n              return -1;\n            }\n            success &= result.wasSuccessful();\n            sendTree = false;\n          }\n\n          return success ? 0 : -1;\n        }\n        else {\n          boolean success = true;\n          while (true) {\n            result = startRunnerWithArgs(args, listeners, name, sendTree, count);\n            if (result == null) {\n              return -1;\n            }\n            success &= result.wasSuccessful();\n            if (count == -2 && !success) {\n              return -1;\n            }\n          }\n        }\n      }\n      if (!result.wasSuccessful()) {\n        return -1;\n      }\n      return 0;\n    }\n    catch (Exception e) {\n      //noinspection HardCodedStringLiteral\n      System.err.println(\"Internal Error occured.\");\n      e.printStackTrace(System.err);\n      return -2;\n    }\n  }","id":8620,"modified_method":"public int startRunnerWithArgs(String[] args, String name, int count, boolean sendTree) {\n    try {\n      final Request request = JUnit4TestRunnerUtil.buildRequest(args, name, sendTree);\n      if (request == null) return -2;\n\n      final Runner testRunner = request.getRunner();\n      Description description = getDescription(request, testRunner);\n      if (description == null) {\n        return -2;\n      }\n\n      if (sendTree) {\n        do {\n          ((JUnit4TestListener)myTestsListener).sendTree(description);\n        }\n        while (--count > 0);\n      }\n\n      final JUnitCore runner = new JUnitCore();\n      runner.addListener(myTestsListener);\n      for (Iterator iterator = myListeners.iterator(); iterator.hasNext();) {\n        final IDEAJUnitListener junitListener = (IDEAJUnitListener)Class.forName((String)iterator.next()).newInstance();\n        runner.addListener(new MyCustomRunListenerWrapper(junitListener, description.getDisplayName()));\n      }\n      final Result result = runner.run(testRunner);\n      return result.wasSuccessful() ? 0 : -1;\n    }\n    catch (Exception e) {\n      return -2;\n    }\n  }","commit_id":"ae1e09f0630b30e3012805d8f91673812828cdd0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public int startRunnerWithArgs(String[] args, ArrayList listeners, String name, int count, boolean sendTree) {\n    Launcher launcher = LauncherFactory.create();\n    JUnit5TestExecutionListener listener = new JUnit5TestExecutionListener();\n    launcher.registerTestExecutionListeners(listener);\n    final String[] packageNameRef = new String[1];\n    final LauncherDiscoveryRequest discoveryRequest = JUnit5TestRunnerUtil.buildRequest(args, packageNameRef);\n    myTestPlan = launcher.discover(discoveryRequest);\n    listener.sendTree(myTestPlan, packageNameRef[0]);\n    launcher.execute(discoveryRequest);\n\n    return 0;\n  }","id":8621,"modified_method":"@Override\n  public int startRunnerWithArgs(String[] args, String name, int count, boolean sendTree) {\n    try {\n      Launcher launcher = LauncherFactory.create();\n      launcher.registerTestExecutionListeners(myListener);\n      final String[] packageNameRef = new String[1];\n      final LauncherDiscoveryRequest discoveryRequest = JUnit5TestRunnerUtil.buildRequest(args, packageNameRef);\n      myTestPlan = launcher.discover(discoveryRequest);\n      for (Object listenerClassName : myListeners) {\n        final IDEAJUnitListener junitListener = (IDEAJUnitListener)Class.forName((String)listenerClassName).newInstance();\n        launcher.registerTestExecutionListeners(new MyCustomListenerWrapper(junitListener));\n      }\n      if (sendTree) {\n        do {\n          myListener.sendTree(myTestPlan, packageNameRef[0]);\n        }\n        while (--count > 0);\n      }\n\n      launcher.execute(discoveryRequest);\n\n      return myListener.wasSuccessful() ? 0 : -1;\n    }\n    catch (Exception e) {\n      System.err.println(\"Internal Error occurred.\");\n      e.printStackTrace(System.err);\n      return -2;\n    }\n  }","commit_id":"ae1e09f0630b30e3012805d8f91673812828cdd0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void main(String[] args) throws Exception {\n    List argList = new ArrayList();\n    for (int i = 0; i < args.length; i++) {\n      final int count = RepeatCount.getCount(args[i]);\n      if (count != 0) {\n        JUnitStarter.ourCount = count;\n        continue;\n      }\n      argList.add(args[i]);\n    }\n    args = (String[])argList.toArray(new String[argList.size()]);\n    final String[] childTestDescription = {args[0]};\n    final String argentName = args[1];\n    final ArrayList listeners = new ArrayList();\n    for (int i = 2, argsLength = args.length; i < argsLength; i++) {\n      listeners.add(args[i]);\n    }\n    IdeaTestRunner testRunner = (IdeaTestRunner)JUnitStarter.getAgentClass(argentName).newInstance();\n    System.exit(testRunner.startRunnerWithArgs(childTestDescription, listeners, null, JUnitStarter.ourCount, false));\n  }","id":8622,"modified_method":"public static void main(String[] args) throws Exception {\n    List argList = new ArrayList();\n    for (int i = 0; i < args.length; i++) {\n      final int count = RepeatCount.getCount(args[i]);\n      if (count != 0) {\n        JUnitStarter.ourCount = count;\n        continue;\n      }\n      argList.add(args[i]);\n    }\n    args = (String[])argList.toArray(new String[argList.size()]);\n    final String[] childTestDescription = {args[0]};\n    final String argentName = args[1];\n    final ArrayList listeners = new ArrayList();\n    for (int i = 2, argsLength = args.length; i < argsLength; i++) {\n      listeners.add(args[i]);\n    }\n    IdeaTestRunner testRunner = (IdeaTestRunner)JUnitStarter.getAgentClass(argentName).newInstance();\n    System.exit(IdeaTestRunner.Repeater.startRunnerWithArgs(testRunner, childTestDescription, listeners, null, JUnitStarter.ourCount, false));\n  }","commit_id":"ae1e09f0630b30e3012805d8f91673812828cdd0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static int prepareStreamsAndStart(String[] args,\n                                            final String agentName,\n                                            ArrayList listeners,\n                                            String name) {\n    try {\n      IdeaTestRunner testRunner = (IdeaTestRunner)getAgentClass(agentName).newInstance();\n      if (ourCommandFileName != null) {\n        if (!\"none\".equals(ourForkMode) || ourWorkingDirs != null && new File(ourWorkingDirs).length() > 0) {\n          final List newArgs = new ArrayList();\n          newArgs.add(agentName);\n          newArgs.addAll(listeners);\n          return new JUnitForkedSplitter(ourWorkingDirs, ourForkMode, newArgs)\n            .startSplitting(args, name, ourCommandFileName, ourRepeatCount);\n        }\n      }\n      return testRunner.startRunnerWithArgs(args, listeners, name, ourCount, true);\n    }\n    catch (Exception e) {\n      e.printStackTrace(System.err);\n      return -2;\n    }\n\n  }","id":8623,"modified_method":"private static int prepareStreamsAndStart(String[] args,\n                                            final String agentName,\n                                            ArrayList listeners,\n                                            String name) {\n    try {\n      IdeaTestRunner testRunner = (IdeaTestRunner)getAgentClass(agentName).newInstance();\n      if (ourCommandFileName != null) {\n        if (!\"none\".equals(ourForkMode) || ourWorkingDirs != null && new File(ourWorkingDirs).length() > 0) {\n          final List newArgs = new ArrayList();\n          newArgs.add(agentName);\n          newArgs.addAll(listeners);\n          return new JUnitForkedSplitter(ourWorkingDirs, ourForkMode, newArgs)\n            .startSplitting(args, name, ourCommandFileName, ourRepeatCount);\n        }\n      }\n      return IdeaTestRunner.Repeater.startRunnerWithArgs(testRunner, args, listeners, name, ourCount, true);\n    }\n    catch (Exception e) {\n      e.printStackTrace(System.err);\n      return -2;\n    }\n\n  }","commit_id":"ae1e09f0630b30e3012805d8f91673812828cdd0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@SuppressWarnings(\"unchecked\")\n  public static List<Class<?>> getDaoClasses() {\n    return ImmutableList.of(\n        ActiveDashboardDao.class,\n        AuthorDao.class,\n        FilterDao.class,\n        DashboardDao.class,\n        DuplicationDao.class,\n        LoadedTemplateDao.class,\n        PropertiesDao.class,\n        PurgeDao.class,\n        ResourceIndexerDao.class,\n        ResourceDao.class,\n        ResourceKeyUpdaterDao.class,\n        ReviewCommentDao.class,\n        ReviewDao.class,\n        RuleDao.class);\n  }","id":8624,"modified_method":"@SuppressWarnings(\"unchecked\")\n  public static List<Class<?>> getDaoClasses() {\n    return ImmutableList.of(\n      ActiveDashboardDao.class,\n      AuthorDao.class,\n      FilterDao.class,\n      DashboardDao.class,\n      DuplicationDao.class,\n      LoadedTemplateDao.class,\n      PropertiesDao.class,\n      PurgeDao.class,\n      ResourceIndexerDao.class,\n      ResourceDao.class,\n      ResourceKeyUpdaterDao.class,\n      ReviewCommentDao.class,\n      ReviewDao.class,\n      RoleDao.class,\n      RuleDao.class,\n      UserDao.class);\n  }","commit_id":"5016b01b23344d65768d68ab03419caad3f57c4b","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public MyBatis start() {\n    LogFactory.useSlf4jLogging();\n    Configuration conf = new Configuration();\n    conf.setEnvironment(new Environment(\"production\", createTransactionFactory(), database.getDataSource()));\n    conf.setUseGeneratedKeys(true);\n    conf.setLazyLoadingEnabled(false);\n    conf.getVariables().setProperty(\"_true\", database.getDialect().getTrueSqlValue());\n    conf.getVariables().setProperty(\"_false\", database.getDialect().getFalseSqlValue());\n\n    loadAlias(conf, \"ActiveDashboard\", ActiveDashboardDto.class);\n    loadAlias(conf, \"Author\", AuthorDto.class);\n    loadAlias(conf, \"Filter\", FilterDto.class);\n    loadAlias(conf, \"Criterion\", CriterionDto.class);\n    loadAlias(conf, \"FilterColumn\", FilterColumnDto.class);\n    loadAlias(conf, \"Dashboard\", DashboardDto.class);\n    loadAlias(conf, \"Dependency\", DependencyDto.class);\n    loadAlias(conf, \"ResourceSnapshot\", ResourceSnapshotDto.class);\n    loadAlias(conf, \"DuplicationUnit\", DuplicationUnitDto.class);\n    loadAlias(conf, \"LoadedTemplate\", LoadedTemplateDto.class);\n    loadAlias(conf, \"Property\", PropertyDto.class);\n    loadAlias(conf, \"PurgeableSnapshot\", PurgeableSnapshotDto.class);\n    loadAlias(conf, \"Review\", ReviewDto.class);\n    loadAlias(conf, \"ReviewComment\", ReviewCommentDto.class);\n    loadAlias(conf, \"Resource\", ResourceDto.class);\n    loadAlias(conf, \"ResourceIndex\", ResourceIndexDto.class);\n    loadAlias(conf, \"Rule\", RuleDto.class);\n    loadAlias(conf, \"Snapshot\", SnapshotDto.class);\n    loadAlias(conf, \"SchemaMigration\", SchemaMigrationDto.class);\n    loadAlias(conf, \"Widget\", WidgetDto.class);\n    loadAlias(conf, \"WidgetProperty\", WidgetPropertyDto.class);\n\n    loadMapper(conf, ActiveDashboardMapper.class);\n    loadMapper(conf, AuthorMapper.class);\n    loadMapper(conf, FilterMapper.class);\n    loadMapper(conf, CriterionMapper.class);\n    loadMapper(conf, FilterColumnMapper.class);\n    loadMapper(conf, DashboardMapper.class);\n    loadMapper(conf, DependencyMapper.class);\n    loadMapper(conf, ResourceSnapshotMapper.class);\n    loadMapper(conf, DuplicationMapper.class);\n    loadMapper(conf, LoadedTemplateMapper.class);\n    loadMapper(conf, PropertiesMapper.class);\n    loadMapper(conf, PurgeMapper.class);\n    loadMapper(conf, PurgeVendorMapper.class);\n    loadMapper(conf, ResourceMapper.class);\n    loadMapper(conf, ResourceKeyUpdaterMapper.class);\n    loadMapper(conf, ReviewCommentMapper.class);\n    loadMapper(conf, ReviewMapper.class);\n    loadMapper(conf, ResourceIndexerMapper.class);\n    loadMapper(conf, RuleMapper.class);\n    loadMapper(conf, SchemaMigrationMapper.class);\n    loadMapper(conf, WidgetMapper.class);\n    loadMapper(conf, WidgetPropertyMapper.class);\n\n    sessionFactory = new SqlSessionFactoryBuilder().build(conf);\n    return this;\n  }","id":8625,"modified_method":"public MyBatis start() {\n    LogFactory.useSlf4jLogging();\n    Configuration conf = new Configuration();\n    conf.setEnvironment(new Environment(\"production\", createTransactionFactory(), database.getDataSource()));\n    conf.setUseGeneratedKeys(true);\n    conf.setLazyLoadingEnabled(false);\n    conf.getVariables().setProperty(\"_true\", database.getDialect().getTrueSqlValue());\n    conf.getVariables().setProperty(\"_false\", database.getDialect().getFalseSqlValue());\n\n    loadAlias(conf, \"ActiveDashboard\", ActiveDashboardDto.class);\n    loadAlias(conf, \"Author\", AuthorDto.class);\n    loadAlias(conf, \"Filter\", FilterDto.class);\n    loadAlias(conf, \"Criterion\", CriterionDto.class);\n    loadAlias(conf, \"FilterColumn\", FilterColumnDto.class);\n    loadAlias(conf, \"Dashboard\", DashboardDto.class);\n    loadAlias(conf, \"Dependency\", DependencyDto.class);\n    loadAlias(conf, \"DuplicationUnit\", DuplicationUnitDto.class);\n    loadAlias(conf, \"Group\", GroupDto.class);\n    loadAlias(conf, \"GroupRole\", GroupRoleDto.class);\n    loadAlias(conf, \"LoadedTemplate\", LoadedTemplateDto.class);\n    loadAlias(conf, \"Property\", PropertyDto.class);\n    loadAlias(conf, \"PurgeableSnapshot\", PurgeableSnapshotDto.class);\n    loadAlias(conf, \"Resource\", ResourceDto.class);\n    loadAlias(conf, \"ResourceIndex\", ResourceIndexDto.class);\n    loadAlias(conf, \"ResourceSnapshot\", ResourceSnapshotDto.class);\n    loadAlias(conf, \"Review\", ReviewDto.class);\n    loadAlias(conf, \"ReviewComment\", ReviewCommentDto.class);\n    loadAlias(conf, \"Rule\", RuleDto.class);\n    loadAlias(conf, \"Snapshot\", SnapshotDto.class);\n    loadAlias(conf, \"SchemaMigration\", SchemaMigrationDto.class);\n    loadAlias(conf, \"User\", UserDto.class);\n    loadAlias(conf, \"UserRole\", UserRoleDto.class);\n    loadAlias(conf, \"Widget\", WidgetDto.class);\n    loadAlias(conf, \"WidgetProperty\", WidgetPropertyDto.class);\n\n    loadMapper(conf, ActiveDashboardMapper.class);\n    loadMapper(conf, AuthorMapper.class);\n    loadMapper(conf, FilterMapper.class);\n    loadMapper(conf, CriterionMapper.class);\n    loadMapper(conf, FilterColumnMapper.class);\n    loadMapper(conf, DashboardMapper.class);\n    loadMapper(conf, DependencyMapper.class);\n    loadMapper(conf, DuplicationMapper.class);\n    loadMapper(conf, LoadedTemplateMapper.class);\n    loadMapper(conf, PropertiesMapper.class);\n    loadMapper(conf, PurgeMapper.class);\n    loadMapper(conf, PurgeVendorMapper.class);\n    loadMapper(conf, ResourceKeyUpdaterMapper.class);\n    loadMapper(conf, ResourceIndexerMapper.class);\n    loadMapper(conf, ResourceMapper.class);\n    loadMapper(conf, ResourceSnapshotMapper.class);\n    loadMapper(conf, ReviewCommentMapper.class);\n    loadMapper(conf, ReviewMapper.class);\n    loadMapper(conf, RoleMapper.class);\n    loadMapper(conf, RuleMapper.class);\n    loadMapper(conf, SchemaMigrationMapper.class);\n    loadMapper(conf, UserMapper.class);\n    loadMapper(conf, WidgetMapper.class);\n    loadMapper(conf, WidgetPropertyMapper.class);\n\n    sessionFactory = new SqlSessionFactoryBuilder().build(conf);\n    return this;\n  }","commit_id":"5016b01b23344d65768d68ab03419caad3f57c4b","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@SuppressWarnings({\"rawtypes\", \"unchecked\"})\n  public List getExtensions() {\n    List extensions = Lists.newLinkedList();\n\n    extensions.add(ProjectFileSystemLogger.class);\n\n    // maven\n    extensions.add(MavenInitializer.class);\n\n    // languages\n    extensions.add(Java.class);\n\n    // metrics\n    extensions.add(UserManagedMetrics.class);\n\n    // pages\n    extensions.add(TestsViewerDefinition.class);\n    extensions.add(Hotspots.class);\n    extensions.add(Lcom4Viewer.class);\n\n    // widgets\n    extensions.add(AlertsWidget.class);\n    extensions.add(CoverageWidget.class);\n    extensions.add(ItCoverageWidget.class);\n    extensions.add(CommentsDuplicationsWidget.class);\n    extensions.add(DescriptionWidget.class);\n    extensions.add(ComplexityWidget.class);\n    extensions.add(RulesWidget.class);\n    extensions.add(SizeWidget.class);\n    extensions.add(EventsWidget.class);\n    extensions.add(CustomMeasuresWidget.class);\n    extensions.add(TimelineWidget.class);\n    extensions.add(TimeMachineWidget.class);\n    extensions.add(HotspotMetricWidget.class);\n    extensions.add(HotspotMostViolatedResourcesWidget.class);\n    extensions.add(HotspotMostViolatedRulesWidget.class);\n    extensions.add(MyReviewsWidget.class);\n    extensions.add(ProjectReviewsWidget.class);\n    extensions.add(FalsePositiveReviewsWidget.class);\n    extensions.add(ReviewsPerDeveloperWidget.class);\n\n    // chart\n    extensions.add(XradarChart.class);\n    extensions.add(DistributionBarChart.class);\n    extensions.add(DistributionAreaChart.class);\n\n    // colorizers\n    extensions.add(JavaColorizerFormat.class);\n\n    // batch\n    extensions.add(ProfileSensor.class);\n    extensions.add(ProfileEventsSensor.class);\n    extensions.add(ProjectLinksSensor.class);\n    extensions.add(UnitTestDecorator.class);\n    extensions.add(VersionEventsSensor.class);\n    extensions.add(CheckAlertThresholds.class);\n    extensions.add(GenerateAlertEvents.class);\n    extensions.add(ViolationsDecorator.class);\n    extensions.add(WeightedViolationsDecorator.class);\n    extensions.add(ViolationsDensityDecorator.class);\n    extensions.add(LineCoverageDecorator.class);\n    extensions.add(CoverageDecorator.class);\n    extensions.add(BranchCoverageDecorator.class);\n    extensions.add(ItLineCoverageDecorator.class);\n    extensions.add(ItCoverageDecorator.class);\n    extensions.add(ItBranchCoverageDecorator.class);\n    extensions.add(ApplyProjectRolesDecorator.class);\n    extensions.add(ExcludedResourceFilter.class);\n    extensions.add(CommentDensityDecorator.class);\n    extensions.add(NoSonarFilter.class);\n    extensions.add(DirectoriesDecorator.class);\n    extensions.add(FilesDecorator.class);\n    extensions.add(CloseReviewsDecorator.class);\n    extensions.add(ReferenceAnalysis.class);\n    extensions.add(ManualMeasureDecorator.class);\n    extensions.add(ManualViolationInjector.class);\n    extensions.add(UpdateReviewsDecorator.class);\n\n    // time machine\n    extensions.add(TendencyDecorator.class);\n    extensions.add(VariationDecorator.class);\n    extensions.add(ViolationTrackingDecorator.class);\n    extensions.add(ViolationPersisterDecorator.class);\n    extensions.add(NewViolationsDecorator.class);\n    extensions.add(TimeMachineConfigurationPersister.class);\n    extensions.add(NewCoverageFileAnalyzer.class);\n    extensions.add(NewItCoverageFileAnalyzer.class);\n    extensions.add(NewCoverageAggregator.class);\n\n    return extensions;\n  }","id":8626,"modified_method":"@SuppressWarnings({\"rawtypes\", \"unchecked\"})\n  public List getExtensions() {\n    List extensions = Lists.newLinkedList();\n\n    extensions.add(ProjectFileSystemLogger.class);\n\n    // maven\n    extensions.add(MavenInitializer.class);\n\n    // languages\n    extensions.add(Java.class);\n\n    // metrics\n    extensions.add(UserManagedMetrics.class);\n\n    // pages\n    extensions.add(TestsViewerDefinition.class);\n    extensions.add(Hotspots.class);\n    extensions.add(Lcom4Viewer.class);\n\n    // widgets\n    extensions.add(AlertsWidget.class);\n    extensions.add(CoverageWidget.class);\n    extensions.add(ItCoverageWidget.class);\n    extensions.add(CommentsDuplicationsWidget.class);\n    extensions.add(DescriptionWidget.class);\n    extensions.add(ComplexityWidget.class);\n    extensions.add(RulesWidget.class);\n    extensions.add(SizeWidget.class);\n    extensions.add(EventsWidget.class);\n    extensions.add(CustomMeasuresWidget.class);\n    extensions.add(TimelineWidget.class);\n    extensions.add(TimeMachineWidget.class);\n    extensions.add(HotspotMetricWidget.class);\n    extensions.add(HotspotMostViolatedResourcesWidget.class);\n    extensions.add(HotspotMostViolatedRulesWidget.class);\n    extensions.add(MyReviewsWidget.class);\n    extensions.add(ProjectReviewsWidget.class);\n    extensions.add(FalsePositiveReviewsWidget.class);\n    extensions.add(ReviewsPerDeveloperWidget.class);\n    \n    // dashboards\n    extensions.add(SonarMainDashboard.class);\n    extensions.add(HotspotsDashboard.class);\n\n    // chart\n    extensions.add(XradarChart.class);\n    extensions.add(DistributionBarChart.class);\n    extensions.add(DistributionAreaChart.class);\n\n    // colorizers\n    extensions.add(JavaColorizerFormat.class);\n\n    // batch\n    extensions.add(ProfileSensor.class);\n    extensions.add(ProfileEventsSensor.class);\n    extensions.add(ProjectLinksSensor.class);\n    extensions.add(UnitTestDecorator.class);\n    extensions.add(VersionEventsSensor.class);\n    extensions.add(CheckAlertThresholds.class);\n    extensions.add(GenerateAlertEvents.class);\n    extensions.add(ViolationsDecorator.class);\n    extensions.add(WeightedViolationsDecorator.class);\n    extensions.add(ViolationsDensityDecorator.class);\n    extensions.add(LineCoverageDecorator.class);\n    extensions.add(CoverageDecorator.class);\n    extensions.add(BranchCoverageDecorator.class);\n    extensions.add(ItLineCoverageDecorator.class);\n    extensions.add(ItCoverageDecorator.class);\n    extensions.add(ItBranchCoverageDecorator.class);\n    extensions.add(ApplyProjectRolesDecorator.class);\n    extensions.add(ExcludedResourceFilter.class);\n    extensions.add(CommentDensityDecorator.class);\n    extensions.add(NoSonarFilter.class);\n    extensions.add(DirectoriesDecorator.class);\n    extensions.add(FilesDecorator.class);\n    extensions.add(CloseReviewsDecorator.class);\n    extensions.add(ReferenceAnalysis.class);\n    extensions.add(ManualMeasureDecorator.class);\n    extensions.add(ManualViolationInjector.class);\n    extensions.add(UpdateReviewsDecorator.class);\n\n    // time machine\n    extensions.add(TendencyDecorator.class);\n    extensions.add(VariationDecorator.class);\n    extensions.add(ViolationTrackingDecorator.class);\n    extensions.add(ViolationPersisterDecorator.class);\n    extensions.add(NewViolationsDecorator.class);\n    extensions.add(TimeMachineConfigurationPersister.class);\n    extensions.add(NewCoverageFileAnalyzer.class);\n    extensions.add(NewItCoverageFileAnalyzer.class);\n    extensions.add(NewCoverageAggregator.class);\n\n    return extensions;\n  }","commit_id":"a4bb86aa2c00cf675c1f93eb4d49ee45e48f6306","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public static List<Class> getDaoClasses() {\n    return Arrays.<Class>asList(RuleDao.class, DuplicationDao.class, ReviewDao.class);\n  }","id":8627,"modified_method":"public static List<Class<?>> getDaoClasses() {\n    return Arrays.<Class<?>> asList(RuleDao.class, DuplicationDao.class, ReviewDao.class, ActiveDashboardDao.class, DashboardDao.class,\n        LoadedTemplateDao.class);\n  }","commit_id":"a4bb86aa2c00cf675c1f93eb4d49ee45e48f6306","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public MyBatis start() throws IOException {\n    Configuration conf = new Configuration();\n    conf.setEnvironment(new Environment(\"production\", createTransactionFactory(), database.getDataSource()));\n    conf.setUseGeneratedKeys(true);\n    conf.setLazyLoadingEnabled(false);\n\n    loadAlias(conf, \"DuplicationUnit\", DuplicationUnit.class);\n    loadAlias(conf, \"Rule\", Rule.class);\n    loadAlias(conf, \"Review\", Review.class);\n    loadMapper(conf, DuplicationMapper.class);\n    loadMapper(conf, RuleMapper.class);\n    loadMapper(conf, ReviewMapper.class);\n\n    sessionFactory = new SqlSessionFactoryBuilder().build(conf);\n    return this;\n  }","id":8628,"modified_method":"public MyBatis start() throws IOException {\n    Configuration conf = new Configuration();\n    conf.setEnvironment(new Environment(\"production\", createTransactionFactory(), database.getDataSource()));\n    conf.setUseGeneratedKeys(true);\n    conf.setLazyLoadingEnabled(false);\n\n    loadAlias(conf, \"ActiveDashboard\", ActiveDashboard.class);\n    loadAlias(conf, \"Dashboard\", Dashboard.class);\n    loadAlias(conf, \"DuplicationUnit\", DuplicationUnit.class);\n    loadAlias(conf, \"LoadedTemplate\", LoadedTemplate.class);\n    loadAlias(conf, \"Review\", Review.class);\n    loadAlias(conf, \"Rule\", Rule.class);\n    loadAlias(conf, \"Widget\", Widget.class);\n    loadAlias(conf, \"WidgetProperty\", WidgetProperty.class);\n\n    loadMapper(conf, ActiveDashboardMapper.class);\n    loadMapper(conf, DashboardMapper.class);\n    loadMapper(conf, DuplicationMapper.class);\n    loadMapper(conf, LoadedTemplateMapper.class);\n    loadMapper(conf, ReviewMapper.class);\n    loadMapper(conf, RuleMapper.class);\n    loadMapper(conf, WidgetMapper.class);\n    loadMapper(conf, WidgetPropertyMapper.class);\n\n    sessionFactory = new SqlSessionFactoryBuilder().build(conf);\n    return this;\n  }","commit_id":"a4bb86aa2c00cf675c1f93eb4d49ee45e48f6306","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void executeStartupTasks() {\n    ComponentContainer startupContainer = servicesContainer.createChild();\n    try {\n      startupContainer.addSingleton(MavenRepository.class);\n      startupContainer.addSingleton(GwtPublisher.class);\n      startupContainer.addSingleton(RegisterMetrics.class);\n      startupContainer.addSingleton(RegisterRules.class);\n      startupContainer.addSingleton(RegisterProvidedProfiles.class);\n      startupContainer.addSingleton(EnableProfiles.class);\n      startupContainer.addSingleton(ActivateDefaultProfiles.class);\n      startupContainer.addSingleton(JdbcDriverDeployer.class);\n      startupContainer.addSingleton(ServerMetadataPersister.class);\n      startupContainer.addSingleton(RegisterQualityModels.class);\n      startupContainer.addSingleton(DeleteDeprecatedMeasures.class);\n      startupContainer.addSingleton(GeneratePluginIndex.class);\n      startupContainer.startComponents();\n\n      startupContainer.getComponentByType(ServerLifecycleNotifier.class).notifyStart();\n\n    } finally {\n      startupContainer.stopComponents();\n      servicesContainer.removeChild();\n      servicesContainer.getComponentByType(DatabaseSessionFactory.class).clear();\n    }\n  }","id":8629,"modified_method":"private void executeStartupTasks() {\n    ComponentContainer startupContainer = servicesContainer.createChild();\n    try {\n      startupContainer.addSingleton(MavenRepository.class);\n      startupContainer.addSingleton(GwtPublisher.class);\n      startupContainer.addSingleton(RegisterMetrics.class);\n      startupContainer.addSingleton(RegisterRules.class);\n      startupContainer.addSingleton(RegisterProvidedProfiles.class);\n      startupContainer.addSingleton(EnableProfiles.class);\n      startupContainer.addSingleton(ActivateDefaultProfiles.class);\n      startupContainer.addSingleton(JdbcDriverDeployer.class);\n      startupContainer.addSingleton(ServerMetadataPersister.class);\n      startupContainer.addSingleton(RegisterQualityModels.class);\n      startupContainer.addSingleton(DeleteDeprecatedMeasures.class);\n      startupContainer.addSingleton(GeneratePluginIndex.class);\n      startupContainer.addSingleton(RegisterProvidedDashboards.class);\n      startupContainer.startComponents();\n\n      startupContainer.getComponentByType(ServerLifecycleNotifier.class).notifyStart();\n\n    } finally {\n      startupContainer.stopComponents();\n      servicesContainer.removeChild();\n      servicesContainer.getComponentByType(DatabaseSessionFactory.class).clear();\n    }\n  }","commit_id":"a4bb86aa2c00cf675c1f93eb4d49ee45e48f6306","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private Verse _getVerse(\n\t\t\tString location, String versionId, String language) {\n\t\tWebCacheItem wci = new VerseWebCacheItem(location, versionId, language);\n\n\t\treturn (Verse)WebCachePoolUtil.get(\n\t\t\tRBVUtil.class.getName() + StringPool.PERIOD + location +\n\t\t\t\tStringPool.PERIOD + versionId,\n\t\t\twci);\n\t}","id":8630,"modified_method":"private Verse _getVerse(\n\t\tString location, String versionId, String language) {\n\n\t\tWebCacheItem webCacheItem = new VerseWebCacheItem(\n\t\t\tlocation, versionId, language);\n\n\t\treturn (Verse)WebCachePoolUtil.get(\n\t\t\tRBVUtil.class.getName() + StringPool.PERIOD + location +\n\t\t\t\tStringPool.PERIOD + versionId,\n\t\t\twebCacheItem);\n\t}","commit_id":"34b108933931bad819ca33a692bfb6e35b714736","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"/**\n\t * Metdod for getting Finnish Bible verses from uskonkirjat.net.\n\t * @author Janne Ohtonen\n\t * @throws WebCacheException\n\t */\n\tprivate Verse getUskonkirjat(Verse verse) throws WebCacheException {\n\t\ttry {\n\t\t\tString url =\n\t\t\t\t\"http://raamattu.uskonkirjat.net/servlet/biblesite.Bible?\" +\n\t\t\t\t\"formname=search&formrnd=1225797093590&search=&rng=0&ref=\" +\n\t\t\t\tHttpUtil.encodeURL(_location) +\n\t\t\t\t\"&ctx=0&submit2=Lue&mod1=FinPR&mod2=&mod3=\";\n\n\t\t\tString text = HttpUtil.URLtoString(url);\n\n\t\t\tint x = text.indexOf(\"<div class=\\\"text\\\">\");\n\t\t\tx = text.indexOf(\">\", x + 1);\n\n\t\t\tint y = text.lastIndexOf(\"<\/div>\");\n\n\t\t\ttext = text.substring(x + 1, y);\n\n\t\t\t// Strip HTML\n\t\t\ttext = HtmlUtil.stripHtml(text).trim();\n\n\t\t\t// Strip &nbsp; and other extra characters\n\t\t\ttext = StringUtil.replace(text, \"&nbsp;\", \"\");\n\t\t\ttext = StringUtil.replace(text, \"(\", \"\");\n\t\t\ttext = StringUtil.replace(text, \")\", \"\");\n\t\t\ttext = StringUtil.replace(text, \":\", \"\");\n\t\t\ttext = text.replaceAll(\"\\\\d+\", \"\");\n\n\t\t\t// Strip carriage returns\n\t\t\ttext = StringUtil.replace(text, \"\\n\", \"\");\n\n\t\t\t// Strip double spaces\n\t\t\twhile (text.indexOf(\"  \") != -1) {\n\t\t\t\ttext = StringUtil.replace(text, \"  \", \" \");\n\t\t\t}\n\n\t\t\t// Replace \" with &quot;\n\t\t\ttext = StringUtil.replace(text, \"\\\"\", \"&quot;\");\n\n\t\t\t// Trim\n\t\t\ttext = text.trim();\n\n\t\t\tverse = new Verse(_location, text);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new WebCacheException(\n\t\t\t\t_location + \" \" + _versionId + \" \" + e.toString());\n\t\t}\n\t\treturn verse;\n\t}","id":8631,"modified_method":"private Verse getUskonkirjat(Verse verse) throws Exception {\n\t\tStringBundler sb = new StringBundler();\n\n\t\tsb.append(\"http://raamattu.uskonkirjat.net/servlet/biblesite.Bible?\");\n\t\tsb.append(\"ctx=0&formname=search&formrnd=1225797093590&mod1=FinPR\");\n\t\tsb.append(\"&mod2=&mod3=&ref=\");\n\t\tsb.append(HttpUtil.encodeURL(_location));\n\t\tsb.append(\"&rng=0&search=&submit2=Lue\");\n\n\t\tString text = HttpUtil.URLtoString(sb.toString());\n\n\t\tint x = text.indexOf(\"<div class=\\\"text\\\">\");\n\t\tx = text.indexOf(\">\", x + 1);\n\n\t\tint y = text.lastIndexOf(\"<\/div>\");\n\n\t\ttext = text.substring(x + 1, y);\n\n\t\t// Strip HTML\n\n\t\ttext = HtmlUtil.stripHtml(text).trim();\n\n\t\t// Strip &nbsp; and other extra characters\n\n\t\ttext = StringUtil.replace(text, \"&nbsp;\", \"\");\n\t\ttext = StringUtil.replace(text, \"(\", \"\");\n\t\ttext = StringUtil.replace(text, \")\", \"\");\n\t\ttext = StringUtil.replace(text, \":\", \"\");\n\t\ttext = text.replaceAll(\"\\\\d+\", \"\");\n\n\t\t// Strip carriage returns\n\n\t\ttext = StringUtil.replace(text, \"\\n\", \"\");\n\n\t\t// Strip double spaces\n\n\t\twhile (text.indexOf(\"  \") != -1) {\n\t\t\ttext = StringUtil.replace(text, \"  \", \" \");\n\t\t}\n\n\t\t// Replace \" with &quot;\n\n\t\ttext = StringUtil.replace(text, \"\\\"\", \"&quot;\");\n\n\t\t// Trim\n\n\t\ttext = text.trim();\n\n\t\treturn new Verse(_location, text);\n\t}","commit_id":"34b108933931bad819ca33a692bfb6e35b714736","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"private Verse getBiblegateway(Verse verse) throws WebCacheException {\n\t\ttry {\n\t\t\tString url =\n\t\t\t\t\"http://www.biblegateway.com/passage/?search=\" +\n\t\t\t\t\tHttpUtil.encodeURL(_location) + \"&version=\" + _versionId;\n\n\t\t\tString text = HttpUtil.URLtoString(url);\n\n\t\t\tint x = text.indexOf(\"result-text-style\");\n\t\t\tx = text.indexOf(\">\", x);\n\n\t\t\tint y = text.indexOf(\"<\/div>\", x);\n\n\t\t\ttext = text.substring(x + 1, y);\n\n\t\t\ty = text.indexOf(\"Footnotes:\");\n\n\t\t\tif (y != -1) {\n\t\t\t\ttext = text.substring(0, y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ty = text.indexOf(\"Cross references:\");\n\n\t\t\t\tif (y != -1) {\n\t\t\t\t\ttext = text.substring(0, y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Strip everything between <span> and <\/span>\n\n\t\t\ttext = HtmlUtil.stripBetween(text, \"span\");\n\n\t\t\t// Strip everything between <sup> and <\/sup>\n\n\t\t\ttext = HtmlUtil.stripBetween(text, \"sup\");\n\n\t\t\t// Strip everything between <h4> and <\/h4>\n\n\t\t\ttext = HtmlUtil.stripBetween(text, \"h4\");\n\n\t\t\t// Strip everything between <h5> and <\/h5>\n\n\t\t\ttext = HtmlUtil.stripBetween(text, \"h5\");\n\n\t\t\t// Strip HTML\n\n\t\t\ttext = HtmlUtil.stripHtml(text).trim();\n\n\t\t\t// Strip &nbsp;\n\n\t\t\ttext = StringUtil.replace(text, \"&nbsp;\", \"\");\n\n\t\t\t// Strip carriage returns\n\n\t\t\ttext = StringUtil.replace(text, \"\\n\", \"\");\n\n\t\t\t// Strip double spaces\n\n\t\t\twhile (text.indexOf(\"  \") != -1) {\n\t\t\t\ttext = StringUtil.replace(text, \"  \", \" \");\n\t\t\t}\n\n\t\t\t// Replace \" with &quot;\n\n\t\t\ttext = StringUtil.replace(text, \"\\\"\", \"&quot;\");\n\n\t\t\t// Trim\n\n\t\t\ttext = text.trim();\n\n\t\t\tverse = new Verse(_location, text);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new WebCacheException(\n\t\t\t\t_location + \" \" + _versionId + \" \" + e.toString());\n\t\t}\n\n\t\treturn verse;\n\t}","id":8632,"modified_method":"private Verse getBiblegateway(Verse verse) throws Exception {\n\t\tStringBundler sb = new StringBundler();\n\n\t\tsb.append(\"http://www.biblegateway.com/passage/?search=\");\n\t\tsb.append(HttpUtil.encodeURL(_location));\n\t\tsb.append(\"&version=\");\n\t\tsb.append(_versionId);\n\n\t\tString text = HttpUtil.URLtoString(sb.toString());\n\n\t\tint x = text.indexOf(\"result-text-style\");\n\t\tx = text.indexOf(\">\", x);\n\n\t\tint y = text.indexOf(\"<\/div>\", x);\n\n\t\ttext = text.substring(x + 1, y);\n\n\t\ty = text.indexOf(\"Footnotes:\");\n\n\t\tif (y != -1) {\n\t\t\ttext = text.substring(0, y);\n\t\t}\n\t\telse {\n\t\t\ty = text.indexOf(\"Cross references:\");\n\n\t\t\tif (y != -1) {\n\t\t\t\ttext = text.substring(0, y);\n\t\t\t}\n\t\t}\n\n\t\t// Strip everything between <span> and <\/span>\n\n\t\ttext = HtmlUtil.stripBetween(text, \"span\");\n\n\t\t// Strip everything between <sup> and <\/sup>\n\n\t\ttext = HtmlUtil.stripBetween(text, \"sup\");\n\n\t\t// Strip everything between <h4> and <\/h4>\n\n\t\ttext = HtmlUtil.stripBetween(text, \"h4\");\n\n\t\t// Strip everything between <h5> and <\/h5>\n\n\t\ttext = HtmlUtil.stripBetween(text, \"h5\");\n\n\t\t// Strip HTML\n\n\t\ttext = HtmlUtil.stripHtml(text).trim();\n\n\t\t// Strip &nbsp;\n\n\t\ttext = StringUtil.replace(text, \"&nbsp;\", \"\");\n\n\t\t// Strip carriage returns\n\n\t\ttext = StringUtil.replace(text, \"\\n\", \"\");\n\n\t\t// Strip double spaces\n\n\t\twhile (text.indexOf(\"  \") != -1) {\n\t\t\ttext = StringUtil.replace(text, \"  \", \" \");\n\t\t}\n\n\t\t// Replace \" with &quot;\n\n\t\ttext = StringUtil.replace(text, \"\\\"\", \"&quot;\");\n\n\t\t// Trim\n\n\t\ttext = text.trim();\n\n\t\treturn new Verse(_location, text);\n\t}","commit_id":"34b108933931bad819ca33a692bfb6e35b714736","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public Object convert(String key) throws WebCacheException {\n\t\tVerse verse = null;\n\n\t\tif(_language.equalsIgnoreCase(\"fi\")) {\n\t\t\tverse = getUskonkirjat(verse);\n\t\t} else {\n\t\t\tverse = getBiblegateway(verse);\n\t\t}\n\n\t\treturn verse;\n\t}","id":8633,"modified_method":"public Object convert(String key) throws WebCacheException {\n\t\ttry {\n\t\t\tVerse verse = null;\n\n\t\t\tif (_language.equalsIgnoreCase(\"fi\")) {\n\t\t\t\tverse = getUskonkirjat(verse);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverse = getBiblegateway(verse);\n\t\t\t}\n\n\t\t\treturn verse;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new WebCacheException(\n\t\t\t\t_location + \" \" + _versionId + \" \" + e.toString());\n\t\t}\n\t}","commit_id":"34b108933931bad819ca33a692bfb6e35b714736","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public Object convert(String key) throws WebCacheException {\n\t\tWeather weather = null;\n\n\t\ttry {\n\t\t\tString xml = HttpUtil.URLtoString(\n\t\t\t\t\"http://www.google.com/ig/api?weather=\" +\n\t\t\t\t\tHttpUtil.encodeURL(_zip));\n\n\t\t\tDocument doc = SAXReaderUtil.read(xml);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\tElement weatherEl = root.element(\"weather\");\n\n\t\t\tElement currentConditionsEl = weatherEl.element(\n\t\t\t\t\"current_conditions\");\n\n\t\t\tElement temperatureEl = currentConditionsEl.element(\"temp_f\");\n\n\t\t\tfloat temperature = GetterUtil.getFloat(\n\t\t\t\ttemperatureEl.attributeValue(\"data\"));\n\n\t\t\tElement iconEl = currentConditionsEl.element(\"icon\");\n\n\t\t\tString iconURL = \"//www.google.com\" + iconEl.attributeValue(\"data\");\n\n\t\t\tweather = new Weather(_zip, iconURL, temperature);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new WebCacheException(_zip);\n\t\t}\n\n\t\treturn weather;\n\t}","id":8634,"modified_method":"public Object convert(String key) throws WebCacheException {\n\t\tWeather weather = null;\n\n\t\ttry {\n\t\t\tStringBundler sb = new StringBundler(5);\n\n\t\t\tsb.append(\"http://free.worldweatheronline.com/feed/weather.ashx?key=\");\n\t\t\tsb.append(PortletPropsValues.WORLD_WEATHER_ONLINE_API_KEY);\n\t\t\tsb.append(\"&q=\");\n\t\t\tsb.append(HttpUtil.encodeURL(_zip));\n\t\t\tsb.append(\"&format=xml\");\n\n\t\t\tString xml = HttpUtil.URLtoString(sb.toString());\n\n\t\t\tDocument doc = SAXReaderUtil.read(xml);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\tElement currentConditionEl = root.element(\"current_condition\");\n\n\t\t\tElement temperatureEl = currentConditionEl.element(\"temp_F\");\n\n\t\t\tfloat temperature = GetterUtil.getFloat(temperatureEl.getData());\n\n\t\t\tElement iconEl = currentConditionEl.element(\"weatherIconUrl\");\n\n\t\t\tString iconURL = iconEl.getText();\n\n\t\t\tweather = new Weather(_zip, iconURL, temperature);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new WebCacheException(_zip);\n\t\t}\n\n\t\treturn weather;\n\t}","commit_id":"e5b6e294ca59b77d142617844ffc4849ee6a9851","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"/**\n     * Signs the testerAgent off the icq servers\n     *\n     * @param bundleContext a valid OSGI bundle context.\n     * @throws Exception in case anything goes wrong\n     */\n    public void stop(BundleContext bundleContext) throws Exception\n    {\n        IcqSlickFixture.testerAgent.unregister();\n    }","id":8635,"modified_method":"/**\n     * Signs the testerAgent off the icq servers\n     *\n     * @param bundleContext a valid OSGI bundle context.\n     * @throws Exception in case anything goes wrong\n     */\n    public void stop(BundleContext bundleContext) throws Exception\n    {\n        if (IcqSlickFixture.testerAgent != null )\n            IcqSlickFixture.testerAgent.unregister();\n    }","commit_id":"700daa00cafbffe2abb6a89903caf0572e654041","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Start the Configuration Sevice Implementation Compatibility Kit.\n     *\n     * @param bundleContext BundleContext\n     * @throws Exception\n     */\n    public void start(BundleContext bundleContext) throws Exception\n    {\n        setName(\"IcqProtocolProviderSlick\");\n        Hashtable properties = new Hashtable();\n        properties.put(\"service.pid\", getName());\n\n        //store the bundle cache reference for usage by other others\n        IcqSlickFixture.bc = bundleContext;\n\n        //register our testing agent on icq.\n        IcqSlickFixture.testerAgent =\n            new IcqTesterAgent(System.getProperty(\n                TESTING_IMPL_ACCOUNT_ID_PROP_NAME, null));\n        if (!IcqSlickFixture.testerAgent.register(System.getProperty(\n                TESTING_IMPL_PWD_PROP_NAME, null)))\n            throw new Exception(\n                \"Registering the IcqTesterAgent on icq has failed.(Possible \"\n                +\"reasons: authetification failed, or Connection rate limit \"\n                +\"exceeded.)\");\n        IcqSlickFixture.testerAgent.setAuthorizationRequired();\n\n        //initialize the tested account's contact list so that it could be ready\n        //when testing starts.\n        initializeTestedContactList();\n\n\n        //As Tested account is not registered here we send him a message.\n        //Message will be delivered offline\n        //receive test is in TestOperationSetBasicInstantMessaging.testReceiveOfflineMessages()\n        String offlineMsgBody = \"This is a Test Message. Supposed to be delivered as offline message!\";\n        IcqSlickFixture.offlineMsgCollector =\n            new IcqSlickFixture.OfflineMsgCollector();\n        IcqSlickFixture.offlineMsgCollector.setMessageText(offlineMsgBody);\n      IcqSlickFixture.testerAgent.sendOfflineMessage(\n            System.getProperty(TESTED_IMPL_ACCOUNT_ID_PROP_NAME, null),\n              offlineMsgBody\n          );\n\n        //First test account installation so that the service that has been\n        //installed by it gets tested by the rest of the tests.\n        addTest(TestAccountInstallation.suite());\n\n        //This must remain second as that's where the protocol would be made\n        //to login/authenticate/signon its service provider.\n        addTest(TestProtocolProviderServiceIcqImpl.suite());\n\n        addTest(TestOperationSetPresence.suite());\n\n        addTest(TestOperationSetPersistentPresence.suite());\n\n        addTest(TestOperationSetBasicInstantMessaging.suite());\n\n        addTest(TestOperationSetTypingNotifications.suite());\n\n        //This must remain last since it tests account uninstallation and\n        //the accounts we use for testing won't be available after that.\n        addTest(TestAccountUninstallation.suite());\n\n        bundleContext.registerService(getClass().getName(), this, properties);\n\n        logger.debug(\"Successfully registered \" + getClass().getName());\n    }","id":8636,"modified_method":"/**\n     * Start the Configuration Sevice Implementation Compatibility Kit.\n     *\n     * @param bundleContext BundleContext\n     * @throws Exception\n     */\n    public void start(BundleContext bundleContext) throws Exception\n    {\n        setName(\"IcqProtocolProviderSlick\");\n        Hashtable properties = new Hashtable();\n        properties.put(\"service.pid\", getName());\n\n        //store the bundle cache reference for usage by other others\n        IcqSlickFixture.bc = bundleContext;\n\n        //identify our testing agent on icq - it MUST be defined.\n        String icqTestAgentName = System.getProperty(\n                TESTING_IMPL_ACCOUNT_ID_PROP_NAME, null);\n        \n        // we can only set up the real icq test suites when the\n        // accounts.properties file defines the two test accounts\n        if (icqTestAgentName != null) {\n            //it is defined, so register our testing agent on icq.\n            IcqSlickFixture.testerAgent =\n                    new IcqTesterAgent(icqTestAgentName);\n            if (!IcqSlickFixture.testerAgent.register(System.getProperty(\n                    TESTING_IMPL_PWD_PROP_NAME, null)))\n                throw new Exception(\n                    \"Registering the IcqTesterAgent on icq has failed.\"\n                    +\"(Possible reasons: authentification failed, or \"\n                    +\"Connection rate limit exceeded.)\");\n            IcqSlickFixture.testerAgent.setAuthorizationRequired();\n\n            //initialize the tested account's contact list so that\n            //it could be ready when testing starts.\n            initializeTestedContactList();\n\n\n            //As Tested account is not registered here we send him a message.\n            //Message will be delivered offline\n            //receive test is in TestOperationSetBasicInstantMessaging.testReceiveOfflineMessages()\n            String offlineMsgBody =\n                \"This is a Test Message. Supposed to be delivered as offline message!\";\n            IcqSlickFixture.offlineMsgCollector =\n                    new IcqSlickFixture.OfflineMsgCollector();\n            IcqSlickFixture.offlineMsgCollector.setMessageText(offlineMsgBody);\n            IcqSlickFixture.testerAgent.sendOfflineMessage(\n                    System.getProperty(TESTED_IMPL_ACCOUNT_ID_PROP_NAME, null),\n                    offlineMsgBody\n            );\n\n            //First test account installation so that the service that has\n            //been installed by it gets tested by the rest of the tests.\n            addTest(TestAccountInstallation.suite());\n\n            //This must remain second as that's where the protocol would be\n            //made to login/authenticate/signon its service provider.\n            addTest(TestProtocolProviderServiceIcqImpl.suite());\n\n            addTest(TestOperationSetPresence.suite());\n\n            addTest(TestOperationSetPersistentPresence.suite());\n\n            addTest(TestOperationSetBasicInstantMessaging.suite());\n\n            addTest(TestOperationSetTypingNotifications.suite());\n\n            //This must remain last since it tests account uninstallation and\n            //the accounts we use for testing won't be available after that.\n            addTest(TestAccountUninstallation.suite());\n        }\n        else {\n            //install a single test to fail in a meaningful way\n            addTest(\n                new TestAccountInvalidNotification(\"failIcqTesterAgentMissing\"));\n\n        }\n        \n        bundleContext.registerService(getClass().getName(), this, properties);\n\n        logger.debug(\"Successfully registered \" + getClass().getName());\n    }","commit_id":"700daa00cafbffe2abb6a89903caf0572e654041","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Unregisters the mock provider that we registered in <tt>start()<\/tt>.\n     *\n     * @param context a currently valid bundle context\n     */\n    public void stop(BundleContext context)\n    {\n        MclSlickFixture.mockPrServiceRegistration.unregister();\n        MclSlickFixture.mockP1ServiceRegistration.unregister();\n        MclSlickFixture.mockP2ServiceRegistration.unregister();\n    }","id":8637,"modified_method":"/**\n     * Unregisters the mock provider that we registered in <tt>start()<\/tt>.\n     *\n     * @param context a currently valid bundle context\n     */\n    public void stop(BundleContext context)\n    {\n        if (MclSlickFixture.mockPrServiceRegistration != null)\n            MclSlickFixture.mockPrServiceRegistration.unregister();\n        if (MclSlickFixture.mockP1ServiceRegistration != null)\n            MclSlickFixture.mockP1ServiceRegistration.unregister();\n        if (MclSlickFixture.mockP2ServiceRegistration != null)\n            MclSlickFixture.mockP2ServiceRegistration.unregister();\n    }","commit_id":"700daa00cafbffe2abb6a89903caf0572e654041","url":"https://github.com/jitsi/jitsi"},{"original_method":"private static long attemptTimeOnlyParse(BufferedString str) {\n    return 0;\n  }","id":8638,"modified_method":"private static long attemptTimeOnlyParse(BufferedString str) {\n    final byte[] buf = str.getBuffer();\n    int i=str.getOffset();\n    final int end = i+str.length();\n    while( i < end && buf[i] == ' ' ) i++;\n    if   ( i < end && buf[i] == '\"' ) i++;\n    if( end-i < 5 ) return Long.MIN_VALUE;\n    long t1 = parseTime(buf,i,end,1970,1,1); // Unix Epoch dates\n    if( t1 == Long.MIN_VALUE ) return Long.MIN_VALUE;\n    // Remove all TZ info; return bare msec from the morning of the epoch\n    return t1+getTimezone().getOffsetFromLocal(t1);\n  }","commit_id":"791614123118b6b58945c849220b37aa6cb73c07","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public static final boolean isTime(BufferedString str) {\n    return attemptTimeParse(str) != Long.MIN_VALUE;\n  }","id":8639,"modified_method":"public static boolean isTime(BufferedString str) {\n    return attemptTimeParse(str) != Long.MIN_VALUE;\n  }","commit_id":"791614123118b6b58945c849220b37aa6cb73c07","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/**\n   * Attempts to parse time. Expects at least:\n   * HH:mm:ss where : or . are accepted as delimiters\n   * Additionally the time can contain either 3 or 9 places for fractions of a second\n   * e.g. HH:mm:ss.SSS or HH:mm:ss.SSSnnnnnn\n   * Note that only millisecond accuracy is stored\n   * Additionally the time can end with AM|PM.\n   * When AM or PM is present, HH must be 1-12. When absent, HH must be 0-23.\n   * If the text doesn't fit this format it returns Long.MIN_VALUE to indicate failed parse\n   *\n   * @param buf - byte buffer containing text to parse\n   * @param i - index of expected start of time string in buffer\n   * @param end - index for end of time in buffer\n   * @param yyyy - 4 digit year\n   * @param MM - month of year (1-12)\n   * @param dd - day of of month (1-31)\n   * @return long representing time in currently timezone as milliseconds since UNIX epoch\n   *         or Long.MIN_VALUE to represent failed time parse\n   */\n  private static long parseTime(byte[] buf, int i, int end, int yyyy, int MM, int dd) {\n    int HH =0, mm=0, ss=0, SSS=0;\n    HH = digit(HH,buf[i++]);\n    HH = digit(HH,buf[i++]);\n    if(HH  < 0 || HH > 23 ) return Long.MIN_VALUE;\n    if( buf[i] != ':' && buf[i] != '.' ) return Long.MIN_VALUE;\n    ++i;\n    mm = digit(mm,buf[i++]);\n    mm = digit(mm,buf[i++]);\n    if( mm < 0 || mm > 59 ) return Long.MIN_VALUE;\n    if( buf[i] != ':' && buf[i] != '.' ) return Long.MIN_VALUE;\n    ++i;\n    ss = digit(ss,buf[i++]);\n    ss = digit(ss,buf[i++]);\n    if( ss < 0 || ss > 59 ) return Long.MIN_VALUE;\n    if( i<end && (buf[i] == ':' || buf[i] == '.' )) {\n      i++;\n      if( i<end ) SSS = digit(SSS,buf[i++]);\n      if( i<end ) SSS = digit(SSS,buf[i++]);\n      if( i<end ) SSS = digit(SSS,buf[i++]);\n      if( SSS < 0 || SSS > 999 ) return Long.MIN_VALUE;\n      if ((end - i) >= 6) // nanoseconds are included\n        i += 6; // ignore\n    }\n    if( i<end && buf[i] == '\"' ) i++;\n    if( i == end)\n      return new DateTime(yyyy,MM,dd,HH,mm,ss,getTimezone()).getMillis()+SSS;\n\n    // extract halfday of day, if present\n    if( buf[i] == ' ' ) ++i;\n    if( (buf[i] == 'A' || buf[i] == 'P') && buf[i+1] == 'M') {\n      if (HH < 1 || HH > 12) return Long.MIN_VALUE;\n      // convert 1-12 hours into 0-23\n      if (buf[i] == 'P') // PM\n        if (HH < 12) HH += 12;\n      else // AM\n        if (HH == 12) HH = 0;\n      i += 2;\n    } else return Long.MIN_VALUE;\n\n    if( i<end && buf[i] == '\"' ) i++;\n    if( i<end ) return Long.MIN_VALUE;\n    return new DateTime(yyyy,MM,dd,HH,mm,ss,getTimezone()).getMillis()+SSS;\n  }","id":8640,"modified_method":"/**\n   * Attempts to parse time. Expects at least:\n   * HH:mm:ss where : or . are accepted as delimiters\n   * Additionally the time can contain either 1 or 3 or 9 places for fractions of a second\n   * e.g. HH:mm:ss.SSS or HH:mm:ss.SSSnnnnnn\n   * Note that only millisecond accuracy is stored\n   * Additionally the time can end with AM|PM.\n   * When AM or PM is present, HH must be 1-12. When absent, HH must be 0-23.\n   * If the text doesn't fit this format it returns Long.MIN_VALUE to indicate failed parse\n   *\n   * @param buf - byte buffer containing text to parse\n   * @param i - index of expected start of time string in buffer\n   * @param end - index for end of time in buffer\n   * @param yyyy - 4 digit year\n   * @param MM - month of year (1-12)\n   * @param dd - day of of month (1-31)\n   * @return long representing time in currently timezone as milliseconds since UNIX epoch\n   *         or Long.MIN_VALUE to represent failed time parse\n   */\n  private static long parseTime(byte[] buf, int i, int end, int yyyy, int MM, int dd) {\n    int HH =0, mm=0, ss=0, SSS=0;\n    HH = digit(HH,buf[i++]);\n    HH = buf[i]>='0' && buf[i]<= '9' ? digit(HH,buf[i++]) : HH;\n    if(HH  < 0 || HH > 23 ) return Long.MIN_VALUE;\n    if( buf[i] != ':' && buf[i] != '.' ) return Long.MIN_VALUE;\n    ++i;\n    mm = digit(mm,buf[i++]);\n    mm = buf[i]>='0' && buf[i]<= '9' ? digit(mm,buf[i++]) : mm;\n    if( mm < 0 || mm > 59 ) return Long.MIN_VALUE;\n    if( i+2 >= buf.length ) return Long.MIN_VALUE;\n    if( buf[i] != ':' && buf[i] != '.' ) return Long.MIN_VALUE;\n    ++i;\n    ss = digit(ss,buf[i++]);\n    ss = buf[i]>='0' && buf[i]<= '9' ? digit(ss,buf[i++]) : ss;\n    if( ss < 0 || ss > 59 ) return Long.MIN_VALUE;\n    if( i<end && (buf[i] == ':' || buf[i] == '.' )) {\n      i++;\n      if( i<end ) SSS = digit(SSS,buf[i++]);\n      if( i<end ) SSS = digit(SSS,buf[i++]);\n      if( i<end ) SSS = digit(SSS,buf[i++]);\n      if( SSS < 0 || SSS > 999 ) return Long.MIN_VALUE;\n      if ((end - i) >= 6) // nanoseconds are included\n        i += 6; // ignore\n    }\n    if( i<end && buf[i] == '\"' ) i++;\n    if( i == end)\n      return new DateTime(yyyy,MM,dd,HH,mm,ss,getTimezone()).getMillis()+SSS;\n\n    // extract halfday of day, if present\n    if( buf[i] == ' ' ) ++i;\n    if( (buf[i] == 'A' || buf[i] == 'P') && buf[i+1] == 'M') {\n      if (HH < 1 || HH > 12) return Long.MIN_VALUE;\n      // convert 1-12 hours into 0-23\n      if (buf[i] == 'P') // PM\n        if (HH < 12) HH += 12;\n      else // AM\n        if (HH == 12) HH = 0;\n      i += 2;\n    } else return Long.MIN_VALUE;\n\n    if( i<end && buf[i] == '\"' ) i++;\n    if( i<end ) return Long.MIN_VALUE;\n    return new DateTime(yyyy,MM,dd,HH,mm,ss,getTimezone()).getMillis()+SSS;\n  }","commit_id":"791614123118b6b58945c849220b37aa6cb73c07","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public static long attemptTimeParse( BufferedString str ) {\n    try {\n      long t0 = attemptYearFirstTimeParse(str); // \"yyyy-MM-dd\" and time if present\n      if( t0 != Long.MIN_VALUE ) return t0;\n      long t2 = attemptDayFirstTimeParse(str); // \"dd-MMM-yy\" and time if present\n      if( t2 != Long.MIN_VALUE ) return t2;\n    } catch( org.joda.time.IllegalFieldValueException | // Not time at all\n             org.joda.time.IllegalInstantException      // Parsed as time, but falls into e.g. a daylight-savings hour hole\n             ie ) { } //FIXME should collect errors and report at end of parse\n    return Long.MIN_VALUE;\n  }","id":8641,"modified_method":"static long attemptTimeParse( BufferedString str ) {\n    try {\n      long t0 = attemptYearFirstTimeParse(str); // \"yyyy-MM-dd\" and time if present\n      if( t0 != Long.MIN_VALUE ) return t0;\n      long t2 = attemptDayFirstTimeParse(str); // \"dd-MMM-yy\" and time if present\n      if( t2 != Long.MIN_VALUE ) return t2;\n      long t3 = attemptTimeOnlyParse(str); // Time if present, no date\n      if( t3 != Long.MIN_VALUE ) return t3;\n    } catch( org.joda.time.IllegalFieldValueException | // Not time at all\n             org.joda.time.IllegalInstantException      // Parsed as time, but falls into e.g. a daylight-savings hour hole\n             ie ) { } //FIXME should collect errors and report at end of parse\n    return Long.MIN_VALUE;\n  }","commit_id":"791614123118b6b58945c849220b37aa6cb73c07","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/**\r\n   * Creates a new database instance and performs a query for the\r\n   * specified number of runs.\r\n   * @param queries queries to be evaluated\r\n   * @param r runs the number for the specified number of time without creating\r\n   *   a new database\r\n   * @throws BaseXException exception\r\n   */\r\n  protected void update(final int r, final String... queries)\r\n      throws BaseXException {\r\n\r\n    if(queries.length == 0) return;\r\n\r\n    out.print(\"* Queries: \" + queries[0]);\r\n    if(queries.length > 1)out.print(\", ...\");\r\n    if(r > 1) out.print(\" (\" + r + \"x)\");\r\n    out.println();\r\n\r\n    // minimum time for performing all queries\r\n    double time = Double.MAX_VALUE;\r\n    // number of updated nodes\r\n    int upd = 0;\r\n\r\n    // loop through global number of runs\r\n    for(int rr = 0; rr < runs; rr++) {\r\n      upd = 0;\r\n      double t = 0;\r\n      check();\r\n\r\n      // loop through all queries\r\n      for(final String q : queries) {\r\n        // loop through number of runs for a single query\r\n        for(int rn = 0; rn < r; rn++) {\r\n          session.execute(new XQuery(q));\r\n\r\n          final String inf = session.info().replaceAll(\"\\\\r?\\\\n\", \" \");\r\n          // get number of updated nodes\r\n          upd += Long.parseLong(inf.replaceAll(\".*Updated: ([^ ]+).*\", \"$1\"));\r\n          // get execution time\r\n          t += Double.parseDouble(inf.replaceAll(\".*Time: ([^ ]+).*\", \"$1\"));\r\n          if(t > totalMax) break;\r\n        }\r\n        if(t > totalMax) break;\r\n      }\r\n      //drop();\r\n\r\n      if(time > t) time = t;\r\n      if(t > totalMax) {\r\n        time = -1;\r\n        break;\r\n      }\r\n      if(t > max) break;\r\n    }\r\n    out.println(\"  Nodes: \" + upd);\r\n    out.println(\"  ms: \" + Math.round(time));\r\n  }","id":8642,"modified_method":"/**\r\n   * Creates a new database instance and performs a query for the\r\n   * specified number of runs.\r\n   * @param queries queries to be evaluated\r\n   * @param r runs the number for the specified number of time without creating\r\n   *   a new database\r\n   * @throws BaseXException exception\r\n   */\r\n  protected void update(final int r, final String... queries)\r\n      throws BaseXException {\r\n\r\n    if(queries.length == 0) return;\r\n\r\n    out.print(\"* Queries: \" + queries[0]);\r\n    if(queries.length > 1)out.print(\", ...\");\r\n    if(r > 1) out.print(\" (\" + r + \"x)\");\r\n    out.println();\r\n\r\n    // minimum time for performing all queries\r\n    double time = Double.MAX_VALUE;\r\n    // number of updated nodes\r\n    int upd = 0;\r\n\r\n    // loop through global number of runs\r\n    for(int rr = 0; rr < runs; ++rr) {\r\n      upd = 0;\r\n      double t = 0;\r\n      check();\r\n\r\n      // loop through all queries\r\n      for(final String q : queries) {\r\n        // loop through number of runs for a single query\r\n        for(int rn = 0; rn < r; ++rn) {\r\n          session.execute(new XQuery(q));\r\n\r\n          final String inf = session.info().replaceAll(\"\\\\r?\\\\n\", \" \");\r\n          // get number of updated nodes\r\n          upd += Long.parseLong(inf.replaceAll(\".*Updated: ([^ ]+).*\", \"$1\"));\r\n          // get execution time\r\n          t += Double.parseDouble(inf.replaceAll(\".*Time: ([^ ]+).*\", \"$1\"));\r\n          if(t > totalMax) break;\r\n        }\r\n        if(t > totalMax) break;\r\n      }\r\n      //drop();\r\n\r\n      if(time > t) time = t;\r\n      if(t > totalMax) {\r\n        time = -1;\r\n        break;\r\n      }\r\n      if(t > max) break;\r\n    }\r\n    out.println(\"  Nodes: \" + upd);\r\n    out.println(\"  ms: \" + Math.round(time));\r\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Searches for mp3 and jpg files on disk that can be used as sample data.\r\n   * @return mp3 and jpg file that were found\r\n   */\r\n  static File[] findFiles() {\r\n    System.out.println(\r\n        \"\\nsearching for mp3 and jpg files (needed for example queries) \");\r\n    final FileFinder ff = new FileFinder();\r\n    final FSWalker walker = new FSWalker(ff);\r\n    File mp3Directory = null;\r\n    File jpgDirectory = null;\r\n    try {\r\n      for(final File f : File.listRoots())\r\n        walker.traverse(f);\r\n    } catch(final RuntimeException ex) {\r\n      if(ff.mp3Dir != null)\r\n        mp3Directory = new File(ff.mp3Dir).getParentFile().getParentFile();\r\n      if(ff.jpgDir != null)\r\n        jpgDirectory = new File(ff.jpgDir).getParentFile().getParentFile();\r\n    }\r\n    if(mp3Directory == null || !mp3Directory.exists()) {\r\n      System.out.println(\"... no mp3 files found. skipping example queries\");\r\n    }\r\n    if(jpgDirectory == null || !mp3Directory.exists()) {\r\n      System.out.println(\"... no mp3 files found. skipping example queries\");\r\n    }\r\n    return new File[] { mp3Directory, jpgDirectory};\r\n  }","id":8643,"modified_method":"/**\r\n   * Searches for mp3 and jpg files on disk that can be used as sample data.\r\n   * @return mp3 and jpg file that were found\r\n   */\r\n  static File[] findFiles() {\r\n    System.out.println(\r\n        \"\\nsearching for mp3 and jpg files (needed for example queries) \");\r\n    final FileFinder ff = new FileFinder();\r\n    final FSWalker walker = new FSWalker(ff);\r\n    File mp3Directory = null;\r\n    File jpgDirectory = null;\r\n    try {\r\n      for(final File f : File.listRoots())\r\n        walker.traverse(f);\r\n    } catch(final RuntimeException ex) {\r\n      if(ff.mp3Dir != null)\r\n        mp3Directory = new File(ff.mp3Dir).getParentFile().getParentFile();\r\n      if(ff.jpgDir != null)\r\n        jpgDirectory = new File(ff.jpgDir).getParentFile().getParentFile();\r\n    }\r\n    if(mp3Directory == null || !mp3Directory.exists()) {\r\n      System.out.println(\"... no mp3 files found. skipping example queries\");\r\n    }\r\n    if(jpgDirectory == null || !jpgDirectory.exists()) {\r\n      System.out.println(\"... no jpg files found. skipping example queries\");\r\n    }\r\n    return new File[] { mp3Directory, jpgDirectory };\r\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Main method of the example class.\r\n   * @param args (ignored) command-line arguments\r\n   * @throws Exception exception\r\n   */\r\n  public static void main(final String[] args) throws Exception {\r\n    String xml;\r\n\r\n    // -------------------------------------------------------------------------\r\n\r\n    System.out.println(\r\n        \"* Serialize a single file (without metadata and contents)\");\r\n    xml = FSMLSerializer.serialize(FILE, false);\r\n    System.out.println(xml);\r\n\r\n    // -------------------------------------------------------------------------\r\n\r\n    System.out.println(\r\n        \"\\n* Serialize a single file (with metadata and text/xml contents)\");\r\n    final DeepFile deepFile = new DeepFile(FILE);\r\n    // Extracts metadata and text/xml contents\r\n    deepFile.extract();\r\n    // Serializes the deep file\r\n    xml = FSMLSerializer.serialize(deepFile);\r\n    System.out.println(xml);\r\n\r\n    // -------------------------------------------------------------------------\r\n\r\n    System.out.println(\"\\n\\n* Traverse a file system hierarchy (method 1)\");\r\n    // Creates the file system database\r\n    new CreateFS(DIR[0].getAbsolutePath(), DB[0]).execute(CONTEXT, System.out);\r\n    // Serializes the database\r\n    new XQuery(\"/\").execute(CONTEXT, System.out);\r\n    // Closes the database\r\n    new Close().execute(CONTEXT, System.out);\r\n\r\n    // -------------------------------------------------------------------------\r\n\r\n    System.out.println(\"\\n\\n* Traverse a file system hierarchy (method 2)\");\r\n    // Initializes the file system importer\r\n    final FSImporter importer = new FSImporter(CONTEXT);\r\n    // Creates the database\r\n    importer.createDB(DB[0]);\r\n    // Traverses the directory, extracts the metadata and text/xml contents and\r\n    // inserts everything into the database\r\n    new FSWalker(importer).traverse(DIR[0]);\r\n    // Creates indexes\r\n    new Optimize().execute(CONTEXT, System.out);\r\n    // Serializes the database\r\n    new XQuery(\"/\").execute(CONTEXT, System.out);\r\n    // Closes the database\r\n    new Close().execute(CONTEXT, System.out);\r\n\r\n    // -------------------------------------------------------------------------\r\n\r\n    System.out.println(\"\\n\\n* List available parsers\");\r\n    System.out.println(\"file suffix\\t| \\t java class\");\r\n    System.out.println(\"-----------------------------------------------------\");\r\n    final ParserRegistry registry = new ParserRegistry();\r\n    for(final String[] parser : registry.availableParsers()) {\r\n      System.out.println(parser[0] + (parser[0].length() > 7 ? \"\" : \"\\t\") +\r\n          \"\\t  \" + parser[1]);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n\r\n    System.out.println(\"\\n* Example queries ====================\");\r\n    if(DIR[1] != null) {\r\n      System.out.println(\"\\tcreating mp3 database...\");\r\n      new CreateFS(DIR[1].getAbsolutePath(), DB[1]).\r\n        execute(CONTEXT, System.out);\r\n      new Close().execute(CONTEXT, System.out);\r\n    }\r\n    if(DIR[2] != null) {\r\n      System.out.println(\"\\tcreating jpg database...\");\r\n      new CreateFS(DIR[2].getAbsolutePath(), DB[2]).\r\n        execute(CONTEXT, System.out);\r\n      new Close().execute(CONTEXT, System.out);\r\n    }\r\n    for(int i = 0; i < QUERIES.length; i++) {\r\n      if(DIR[INDEX[i]] == null) continue;\r\n      System.out.println(\"\\n\\n* \" + QUERIES[i][0]);\r\n      new Open(DB[INDEX[i]]).execute(CONTEXT, System.out);\r\n      new XQuery(QUERIES[i][1]).execute(CONTEXT, System.out);\r\n      new Close().execute(CONTEXT, System.out);\r\n    }\r\n  }","id":8644,"modified_method":"/**\r\n   * Main method of the example class.\r\n   * @param args (ignored) command-line arguments\r\n   * @throws Exception exception\r\n   */\r\n  public static void main(final String[] args) throws Exception {\r\n    String xml;\r\n\r\n    // -------------------------------------------------------------------------\r\n\r\n    System.out.println(\r\n        \"* Serialize a single file (without metadata and contents)\");\r\n    xml = FSMLSerializer.serialize(FILE, false);\r\n    System.out.println(xml);\r\n\r\n    // -------------------------------------------------------------------------\r\n\r\n    System.out.println(\r\n        \"\\n* Serialize a single file (with metadata and text/xml contents)\");\r\n    final DeepFile deepFile = new DeepFile(FILE);\r\n    // Extracts metadata and text/xml contents\r\n    deepFile.extract();\r\n    // Serializes the deep file\r\n    xml = FSMLSerializer.serialize(deepFile);\r\n    System.out.println(xml);\r\n\r\n    // -------------------------------------------------------------------------\r\n\r\n    System.out.println(\"\\n\\n* Traverse a file system hierarchy (method 1)\");\r\n    // Creates the file system database\r\n    new CreateFS(DIR[0].getAbsolutePath(), DB[0]).execute(CONTEXT, System.out);\r\n    // Serializes the database\r\n    new XQuery(\"/\").execute(CONTEXT, System.out);\r\n    // Closes the database\r\n    new Close().execute(CONTEXT, System.out);\r\n\r\n    // -------------------------------------------------------------------------\r\n\r\n    System.out.println(\"\\n\\n* Traverse a file system hierarchy (method 2)\");\r\n    // Initializes the file system importer\r\n    final FSImporter importer = new FSImporter(CONTEXT);\r\n    // Creates the database\r\n    importer.createDB(DB[0]);\r\n    // Traverses the directory, extracts the metadata and text/xml contents and\r\n    // inserts everything into the database\r\n    new FSWalker(importer).traverse(DIR[0]);\r\n    // Creates indexes\r\n    new Optimize().execute(CONTEXT, System.out);\r\n    // Serializes the database\r\n    new XQuery(\"/\").execute(CONTEXT, System.out);\r\n    // Closes the database\r\n    new Close().execute(CONTEXT, System.out);\r\n\r\n    // -------------------------------------------------------------------------\r\n\r\n    System.out.println(\"\\n\\n* List available parsers\");\r\n    System.out.println(\"file suffix\\t| \\t java class\");\r\n    System.out.println(\"-----------------------------------------------------\");\r\n    final ParserRegistry registry = new ParserRegistry();\r\n    for(final String[] parser : registry.availableParsers()) {\r\n      System.out.println(parser[0] + (parser[0].length() > 7 ? \"\" : \"\\t\") +\r\n          \"\\t  \" + parser[1]);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n\r\n    System.out.println(\"\\n* Example queries ====================\");\r\n    if(DIR[1] != null) {\r\n      System.out.println(\"\\tcreating mp3 database...\");\r\n      new CreateFS(DIR[1].getAbsolutePath(), DB[1]).\r\n        execute(CONTEXT, System.out);\r\n      new Close().execute(CONTEXT, System.out);\r\n    }\r\n    if(DIR[2] != null) {\r\n      System.out.println(\"\\tcreating jpg database...\");\r\n      new CreateFS(DIR[2].getAbsolutePath(), DB[2]).\r\n        execute(CONTEXT, System.out);\r\n      new Close().execute(CONTEXT, System.out);\r\n    }\r\n    for(int i = 0; i < QUERIES.length; ++i) {\r\n      if(DIR[INDEX[i]] == null) continue;\r\n      System.out.println(\"\\n\\n* \" + QUERIES[i][0]);\r\n      new Open(DB[INDEX[i]]).execute(CONTEXT, System.out);\r\n      new XQuery(QUERIES[i][1]).execute(CONTEXT, System.out);\r\n      new Close().execute(CONTEXT, System.out);\r\n    }\r\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Updates query times in submission.xml.\r\n   * @param args files with times\r\n   * @throws IOException IOException\r\n   */\r\n  private void updateTimes(final String[] args) throws IOException {\r\n    final BufferedReader[] bf = new BufferedReader[args.length];\r\n    for(int j = 0; j < bf.length; j++)\r\n      bf[j] = new BufferedReader(new FileReader(args[j]));\r\n\r\n    final int numdb = 10;\r\n    final double[] qut = new double[nqueries * numdb];\r\n    String l;\r\n    int i = 0;\r\n    while((l = bf[0].readLine()) != null) {\r\n      qut[i++] = Double.parseDouble(l.substring(0, l.indexOf(';')));\r\n    }\r\n    bf[0].close();\r\n\r\n    for(int j = 1; j < bf.length; j++) {\r\n      i = 0;\r\n      while((l = bf[j].readLine()) != null) {\r\n        qut[i] = Math.min(qut[i], Double.parseDouble(l));\r\n        i++;\r\n      }\r\n      bf[j].close();\r\n    }\r\n\r\n    final double[] tmp = new double[nqueries];\r\n    for(int j = 0; j < tmp.length; j++) {\r\n      for(int z = 0; z < numdb; z++) {\r\n        tmp[j] += qut[j + z * nqueries];\r\n      }\r\n    }\r\n\r\n    final BufferedReader br = new BufferedReader(new FileReader(SUBMISSION));\r\n    final PrintOutput o = new PrintOutput(SUBMISSIONU);\r\n    i = 0;\r\n    while((l = br.readLine()) != null) {\r\n      if(l.contains(\"<topic topic-id=\")) {\r\n        final int s = l.indexOf(\"total_time_ms=\\\"\") +\r\n          \"total_time_ms=\\\"\".length();\r\n        final int e = l.lastIndexOf('\"');\r\n        final double ti = Double.parseDouble(l.substring(s, e));\r\n        if(ti > tmp[i] || ti == 0) {\r\n          o.print(l.substring(0, s) + tmp[i] + l.substring(e));\r\n        } else {\r\n          o.print(l);\r\n        }\r\n        i++;\r\n      } else o.print(l);\r\n      o.print(NL);\n    }\r\n    br.close();\r\n    o.flush();\r\n    o.close();\r\n    Main.outln(\"Updated\");\r\n  }","id":8645,"modified_method":"/**\r\n   * Updates query times in submission.xml.\r\n   * @param args files with times\r\n   * @throws IOException IOException\r\n   */\r\n  private void updateTimes(final String[] args) throws IOException {\r\n    final BufferedReader[] bf = new BufferedReader[args.length];\r\n    for(int j = 0; j < bf.length; ++j)\r\n      bf[j] = new BufferedReader(new FileReader(args[j]));\r\n\r\n    final int numdb = 10;\r\n    final double[] qut = new double[nqueries * numdb];\r\n    String l;\r\n    int i = 0;\r\n    while((l = bf[0].readLine()) != null) {\r\n      qut[i++] = Double.parseDouble(l.substring(0, l.indexOf(';')));\r\n    }\r\n    bf[0].close();\r\n\r\n    for(int j = 1; j < bf.length; ++j) {\r\n      i = 0;\r\n      while((l = bf[j].readLine()) != null) {\r\n        qut[i] = Math.min(qut[i], Double.parseDouble(l));\r\n        i++;\r\n      }\r\n      bf[j].close();\r\n    }\r\n\r\n    final double[] tmp = new double[nqueries];\r\n    for(int j = 0; j < tmp.length; ++j) {\r\n      for(int z = 0; z < numdb; ++z) {\r\n        tmp[j] += qut[j + z * nqueries];\r\n      }\r\n    }\r\n\r\n    final BufferedReader br = new BufferedReader(new FileReader(SUBMISSION));\r\n    final PrintOutput o = new PrintOutput(SUBMISSIONU);\r\n    i = 0;\r\n    while((l = br.readLine()) != null) {\r\n      if(l.contains(\"<topic topic-id=\")) {\r\n        final int s = l.indexOf(\"total_time_ms=\\\"\") +\r\n          \"total_time_ms=\\\"\".length();\r\n        final int e = l.lastIndexOf('\"');\r\n        final double ti = Double.parseDouble(l.substring(s, e));\r\n        if(ti > tmp[i] || ti == 0) {\r\n          o.print(l.substring(0, s) + tmp[i] + l.substring(e));\r\n        } else {\r\n          o.print(l);\r\n        }\r\n        i++;\r\n      } else o.print(l);\r\n      o.print(NL);\n    }\r\n    br.close();\r\n    o.flush();\r\n    o.close();\r\n    Main.outln(\"Updated\");\r\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Second test, opening each databases before running the queries.\r\n   * @throws Exception exception\r\n   */\r\n  private void test() throws Exception {\r\n    session.execute(new Set(Prop.SERIALIZE, true));\r\n    // loop through all databases\r\n    for(int d = 0; d < databases.size(); d++) {\r\n      // open database and loop through all queries\r\n      session.execute(new Open(databases.get(d)));\r\n      for(int q = 0; q < queries.size(); q++) {\r\n        results[q] = addSortedServer(results[q], query(d, q));\r\n      }\r\n      session.execute(new Close());\r\n    }\r\n  }","id":8646,"modified_method":"/**\r\n   * Second test, opening each databases before running the queries.\r\n   * @throws Exception exception\r\n   */\r\n  private void test() throws Exception {\r\n    session.execute(new Set(Prop.SERIALIZE, true));\r\n    // loop through all databases\r\n    for(int d = 0; d < databases.size(); ++d) {\r\n      // open database and loop through all queries\r\n      session.execute(new Open(databases.get(d)));\r\n      for(int q = 0; q < queries.size(); ++q) {\r\n        results[q] = addSortedServer(results[q], query(d, q));\r\n      }\r\n      session.execute(new Close());\r\n    }\r\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Default constructor.\r\n   * @param args command-line arguments\r\n   * @throws Exception exception\r\n   */\r\n  private InexSubmit(final String[] args) throws Exception {\r\n    final Performance p = new Performance();\r\n    Main.outln(Main.name(InexSubmit.class));\r\n\r\n    // cache queries\r\n    final BufferedReader br = new BufferedReader(new FileReader(QUERIES));\r\n    queries = new StringList();\r\n    tid = new StringList();\r\n\r\n    String l;\r\n    while((l = br.readLine()) != null) {\r\n      final int i1 = l.indexOf(';');\r\n      final int i2 = l.indexOf(';', i1 + 1);\r\n      final int i3 = l.lastIndexOf(';');\r\n      tid.add(l.substring(i1 + 1, i2));\r\n      queries.add(l.substring(i3 + 1));\r\n    }\r\n    br.close();\r\n\r\n    // allocate space for query times\r\n    nqueries = queries.size();\r\n    qtimes = new double[nqueries];\r\n    results = new ItemIter[nqueries];\r\n    qressizes = new int[10 * nqueries];\r\n    qt = new double[10 * nqueries];\r\n\r\n    if(!parseArguments(args)) return;\r\n\r\n    final BufferedReader brt = new BufferedReader(new FileReader(TIMES));\r\n    while((l = brt.readLine()) != null) {\r\n      final int index = l.indexOf(';');\r\n      qt[c] = Double.parseDouble(l.substring(0, index));\r\n      qressizes[c++] = Integer.parseInt(l.substring(index + 1));\r\n    }\r\n    brt.close();\r\n\r\n    // cache database names\r\n    databases = new StringList();\r\n    for(final String s : List.list(ctx)) {\r\n      if(s.startsWith(DBPREFIX)) databases.add(s);\r\n    }\r\n\r\n    // run test\r\n    test();\r\n\r\n    openSubFile();\r\n    for(int i = 0; i < results.length; i++) {\r\n      createQueryEntryServer(i, results[i], 1500);\r\n    }\r\n    closeSubFile();\r\n\r\n    Main.outln(\"Total Time: \" + p);\r\n  }","id":8647,"modified_method":"/**\r\n   * Default constructor.\r\n   * @param args command-line arguments\r\n   * @throws Exception exception\r\n   */\r\n  private InexSubmit(final String[] args) throws Exception {\r\n    final Performance p = new Performance();\r\n    Main.outln(Main.name(InexSubmit.class));\r\n\r\n    // cache queries\r\n    final BufferedReader br = new BufferedReader(new FileReader(QUERIES));\r\n    queries = new StringList();\r\n    tid = new StringList();\r\n\r\n    String l;\r\n    while((l = br.readLine()) != null) {\r\n      final int i1 = l.indexOf(';');\r\n      final int i2 = l.indexOf(';', i1 + 1);\r\n      final int i3 = l.lastIndexOf(';');\r\n      tid.add(l.substring(i1 + 1, i2));\r\n      queries.add(l.substring(i3 + 1));\r\n    }\r\n    br.close();\r\n\r\n    // allocate space for query times\r\n    nqueries = queries.size();\r\n    qtimes = new double[nqueries];\r\n    results = new ItemIter[nqueries];\r\n    qressizes = new int[10 * nqueries];\r\n    qt = new double[10 * nqueries];\r\n\r\n    if(!parseArguments(args)) return;\r\n\r\n    final BufferedReader brt = new BufferedReader(new FileReader(TIMES));\r\n    while((l = brt.readLine()) != null) {\r\n      final int index = l.indexOf(';');\r\n      qt[c] = Double.parseDouble(l.substring(0, index));\r\n      qressizes[c++] = Integer.parseInt(l.substring(index + 1));\r\n    }\r\n    brt.close();\r\n\r\n    // cache database names\r\n    databases = new StringList();\r\n    for(final String s : List.list(ctx)) {\r\n      if(s.startsWith(DBPREFIX)) databases.add(s);\r\n    }\r\n\r\n    // run test\r\n    test();\r\n\r\n    openSubFile();\r\n    for(int i = 0; i < results.length; ++i) {\r\n      createQueryEntryServer(i, results[i], 1500);\r\n    }\r\n    closeSubFile();\r\n\r\n    Main.outln(\"Total Time: \" + p);\r\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Second test, opening each databases before running the queries.\r\n   * @throws Exception exception\r\n   */\r\n  private void test() throws Exception {\r\n    // loop through all databases\r\n    for(int d = 0; d < databases.size(); d++) {\r\n      // open database and loop through all queries\r\n      session.execute(new Open(databases.get(d)));\r\n      for(int q = 0; q < words.size(); q++) {\r\n        query(d, q);\r\n      }\r\n      session.execute(new Close());\r\n    }\r\n  }","id":8648,"modified_method":"/**\r\n   * Second test, opening each databases before running the queries.\r\n   * @throws Exception exception\r\n   */\r\n  private void test() throws Exception {\r\n    // loop through all databases\r\n    for(int d = 0; d < databases.size(); ++d) {\r\n      // open database and loop through all queries\r\n      session.execute(new Open(databases.get(d)));\r\n      for(int q = 0; q < words.size(); ++q) {\r\n        query(d, q);\r\n      }\r\n      session.execute(new Close());\r\n    }\r\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Default constructor.\r\n   * @param args command-line arguments\r\n   * @throws Exception exception\r\n   */\r\n  private InexTFCalc(final String[] args) throws Exception {\r\n    final Performance p = new Performance();\r\n    Main.outln(Main.name(InexTFCalc.class));\r\n    databases = new StringList();\r\n\r\n    if(!parseArguments(args)) return;\r\n\r\n    // cache queries\r\n    final BufferedReader br = new BufferedReader(new FileReader(WORDS));\r\n    words = new StringList();\r\n    String l;\r\n    while((l = br.readLine()) != null)\r\n        words.add(l);\r\n    br.close();\r\n\r\n    freq = new int[words.size()];\r\n\r\n    // cache database names\r\n    if(databases.size() == 0)\r\n      for(final String s : List.list(ctx))\r\n        if(s.startsWith(DBPREFIX)) databases.add(s);\r\n\r\n    Main.outln(\"=> % words on % databases: time in ms\\n\",\r\n        words.size(), databases.size());\r\n\r\n    // run test\r\n    test();\r\n\r\n    for(int i = 0; i < freq.length; i++)\r\n      res.println(words.get(i) + \";\" + freq[i]);\r\n    res.close();\r\n\r\n    Main.outln(\"Total Time: \" + p);\r\n  }","id":8649,"modified_method":"/**\r\n   * Default constructor.\r\n   * @param args command-line arguments\r\n   * @throws Exception exception\r\n   */\r\n  private InexTFCalc(final String[] args) throws Exception {\r\n    final Performance p = new Performance();\r\n    Main.outln(Main.name(InexTFCalc.class));\r\n    databases = new StringList();\r\n\r\n    if(!parseArguments(args)) return;\r\n\r\n    // cache queries\r\n    final BufferedReader br = new BufferedReader(new FileReader(WORDS));\r\n    words = new StringList();\r\n    String l;\r\n    while((l = br.readLine()) != null)\r\n        words.add(l);\r\n    br.close();\r\n\r\n    freq = new int[words.size()];\r\n\r\n    // cache database names\r\n    if(databases.size() == 0)\r\n      for(final String s : List.list(ctx))\r\n        if(s.startsWith(DBPREFIX)) databases.add(s);\r\n\r\n    Main.outln(\"=> % words on % databases: time in ms\\n\",\r\n        words.size(), databases.size());\r\n\r\n    // run test\r\n    test();\r\n\r\n    for(int i = 0; i < freq.length; ++i)\r\n      res.println(words.get(i) + \";\" + freq[i]);\r\n    res.close();\r\n\r\n    Main.outln(\"Total Time: \" + p);\r\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Second test, opening each databases before running the queries.\r\n   * @throws Exception exception\r\n   */\r\n  private void test() throws Exception {\r\n    // loop through all databases\r\n    for(int d = 0; d < databases.size(); d++) {\r\n      // open database and loop through all queries\r\n      session.execute(new Open(databases.get(d)));\r\n      for(int q = 0; q < queries.size(); q++) {\r\n        for(int r = 0; r < runs; r++) query(d, q, r == runs - 1);\r\n      }\r\n      session.execute(new Close());\r\n    }\r\n  }","id":8650,"modified_method":"/**\r\n   * Second test, opening each databases before running the queries.\r\n   * @throws Exception exception\r\n   */\r\n  private void test() throws Exception {\r\n    // loop through all databases\r\n    for(int d = 0; d < databases.size(); ++d) {\r\n      // open database and loop through all queries\r\n      session.execute(new Open(databases.get(d)));\r\n      for(int q = 0; q < queries.size(); ++q) {\r\n        for(int r = 0; r < runs; ++r) query(d, q, r == runs - 1);\r\n      }\r\n      session.execute(new Close());\r\n    }\r\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public void parse() throws IOException {\r\n    builder.startElem(DeepFS.FSML, atts.reset());\r\n\r\n    final BufferInput bi = new BufferInput(file.path());\r\n\r\n    //new FileReader(file.path()));\r\n    final TokenBuilder tb = new TokenBuilder();\r\n    bi.readLine(tb);\r\n    atts.add(DeepFS.BACKINGSTORE, replace(tb.finish(), '\\\\', '/'));\r\n    builder.startElem(DeepFS.DEEPFS, atts);\r\n\r\n    byte[][] old = {};\r\n    while(true) {\r\n      bi.readLine(tb);\r\n      if(tb.size() == 0) break;\r\n\r\n      final byte[][] entries = split(replace(tb.finish(), '\\\\', '/'), '\\t');\r\n      byte[] name = entries[0];\r\n\r\n      byte[] mtime = {};\r\n      try {\r\n        final String time = string(entries[2]) + ' ' + string(entries[3]);\r\n        mtime = token(DATE.parse(time).getTime());\r\n      } catch(final ParseException ex) {\r\n        Main.debug(ex);\r\n      }\r\n\r\n      if(indexOf(name, '/') != -1) {\r\n        // Directory\r\n        name = substring(name, 0, name.length - 1);\r\n        final byte[][] path = split(name, '/');\r\n\r\n        int i = -1;\r\n        while(++i < Math.min(old.length, path.length)) {\r\n          if(!eq(old[i], path[i])) break;\r\n        }\r\n        for(int j = i; j < old.length; j++) {\r\n          builder.endElem(DeepFS.DIR);\r\n        }\r\n        for(int j = i; j < path.length; j++) {\r\n          atts.reset();\r\n          atts.add(DeepFS.NAME, path[i]);\r\n          atts.add(DeepFS.MTIME, mtime);\r\n          builder.startElem(DeepFS.DIR, atts);\r\n        }\r\n        old = path;\r\n      } else {\r\n        // File\r\n        atts.reset();\r\n        atts.add(DeepFS.NAME, name);\r\n        atts.add(DeepFS.SIZE, entries[1]);\r\n        atts.add(DeepFS.MTIME, mtime);\r\n        builder.emptyElem(DeepFS.FILE, atts);\r\n      }\r\n    }\r\n    bi.close();\r\n    for(int j = old.length; j > 0; j--) builder.endElem(DeepFS.DIR);\r\n\r\n    builder.endElem(DeepFS.DEEPFS);\r\n    builder.endElem(DeepFS.FSML);\r\n    builder.meta.deepfs = true;\r\n  }","id":8651,"modified_method":"@Override\r\n  public void parse() throws IOException {\r\n    builder.startElem(DeepFS.FSML, atts.reset());\r\n\r\n    final BufferInput bi = new BufferInput(file.path());\r\n\r\n    //new FileReader(file.path()));\r\n    final TokenBuilder tb = new TokenBuilder();\r\n    bi.readLine(tb);\r\n    atts.add(DeepFS.BACKINGSTORE, replace(tb.finish(), '\\\\', '/'));\r\n    builder.startElem(DeepFS.DEEPFS, atts);\r\n\r\n    byte[][] old = {};\r\n    while(true) {\r\n      bi.readLine(tb);\r\n      if(tb.size() == 0) break;\r\n\r\n      final byte[][] entries = split(replace(tb.finish(), '\\\\', '/'), '\\t');\r\n      byte[] name = entries[0];\r\n\r\n      byte[] mtime = {};\r\n      try {\r\n        final String time = string(entries[2]) + ' ' + string(entries[3]);\r\n        mtime = token(DATE.parse(time).getTime());\r\n      } catch(final ParseException ex) {\r\n        Main.debug(ex);\r\n      }\r\n\r\n      if(indexOf(name, '/') != -1) {\r\n        // Directory\r\n        name = substring(name, 0, name.length - 1);\r\n        final byte[][] path = split(name, '/');\r\n\r\n        int i = -1;\r\n        while(++i < Math.min(old.length, path.length)) {\r\n          if(!eq(old[i], path[i])) break;\r\n        }\r\n        for(int j = i; j < old.length; ++j) {\r\n          builder.endElem(DeepFS.DIR);\r\n        }\r\n        for(int j = i; j < path.length; ++j) {\r\n          atts.reset();\r\n          atts.add(DeepFS.NAME, path[i]);\r\n          atts.add(DeepFS.MTIME, mtime);\r\n          builder.startElem(DeepFS.DIR, atts);\r\n        }\r\n        old = path;\r\n      } else {\r\n        // File\r\n        atts.reset();\r\n        atts.add(DeepFS.NAME, name);\r\n        atts.add(DeepFS.SIZE, entries[1]);\r\n        atts.add(DeepFS.MTIME, mtime);\r\n        builder.emptyElem(DeepFS.FILE, atts);\r\n      }\r\n    }\r\n    bi.close();\r\n    for(int j = old.length; j > 0; j--) builder.endElem(DeepFS.DIR);\r\n\r\n    builder.endElem(DeepFS.DEEPFS);\r\n    builder.endElem(DeepFS.FSML);\r\n    builder.meta.deepfs = true;\r\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Main method of the example class.\r\n   * @param args (ignored) command-line arguments\r\n   * @throws Exception exception\r\n   */\r\n  public static void main(final String[] args) throws Exception {\r\n    init(\"7: XQuery Type System\");\r\n\r\n    // Create a connection\r\n    XQConnection xqc = connect();\r\n\r\n    // Check sequence types\r\n    info(\"Check sequence types\");\r\n    XQExpression xqe = xqc.createExpression();\r\n    XQSequence xqs = xqe.executeQuery(\"1, 'hello', <xml/>\");\r\n\r\n    while(xqs.next()) {\r\n      XQItemType xqit = xqs.getItemType();\r\n      if(xqit.getItemKind() == XQItemType.XQITEMKIND_ATOMIC) {\r\n        // Check atomic type\r\n        switch(xqit.getBaseType()) {\r\n          // Check for string\r\n          case XQItemType.XQBASETYPE_INTEGER:\r\n            long l = xqs.getLong();\r\n            System.out.println(\"Integer: \" + l);\r\n            break;\r\n          // Check for integer\r\n          case XQItemType.XQBASETYPE_STRING:\r\n            String s = (String) xqs.getObject();\r\n            System.out.println(\"String: \" + s);\r\n            break;\r\n          // Any other type\r\n          default:\r\n            String a = xqs.getAtomicValue();\r\n            System.out.println(\"Atomic Value: \" + a);\r\n            break;\r\n        }\r\n      } else {\r\n        // Node type\r\n        System.out.println(\"Node: \" + xqs.getNode());\r\n      }\r\n    }\r\n\r\n    // Retrieve static result type\r\n    info(\"Retrieve static result type\");\r\n    XQPreparedExpression xqp = xqc.prepareExpression(\"1 + 2\");\r\n    XQSequenceType xqst = xqp.getStaticResultType();\r\n    System.out.println(\"Type: \" + xqst);\r\n\r\n    // Retrieve type of external variables\r\n    info(\"Retrieve type of external variables\");\r\n    xqp = xqc.prepareExpression(\r\n        \"declare variable $i as xs:integer external; $i+1\");\r\n    QName[] variables = xqp.getAllExternalVariables();\r\n    for(int i = 0; i < variables.length; i++) {\r\n      xqst = xqp.getStaticVariableType(variables[i]);\r\n      System.out.println(\"Variable $\" + variables[i] + \": \" + xqst);\r\n    }\r\n\r\n    // Close the connection\r\n    close(xqc);\r\n  }","id":8652,"modified_method":"/**\r\n   * Main method of the example class.\r\n   * @param args (ignored) command-line arguments\r\n   * @throws Exception exception\r\n   */\r\n  public static void main(final String[] args) throws Exception {\r\n    init(\"7: XQuery Type System\");\r\n\r\n    // Create a connection\r\n    XQConnection xqc = connect();\r\n\r\n    // Check sequence types\r\n    info(\"Check sequence types\");\r\n    XQExpression xqe = xqc.createExpression();\r\n    XQSequence xqs = xqe.executeQuery(\"1, 'hello', <xml/>\");\r\n\r\n    while(xqs.next()) {\r\n      XQItemType xqit = xqs.getItemType();\r\n      if(xqit.getItemKind() == XQItemType.XQITEMKIND_ATOMIC) {\r\n        // Check atomic type\r\n        switch(xqit.getBaseType()) {\r\n          // Check for string\r\n          case XQItemType.XQBASETYPE_INTEGER:\r\n            long l = xqs.getLong();\r\n            System.out.println(\"Integer: \" + l);\r\n            break;\r\n          // Check for integer\r\n          case XQItemType.XQBASETYPE_STRING:\r\n            String s = (String) xqs.getObject();\r\n            System.out.println(\"String: \" + s);\r\n            break;\r\n          // Any other type\r\n          default:\r\n            String a = xqs.getAtomicValue();\r\n            System.out.println(\"Atomic Value: \" + a);\r\n            break;\r\n        }\r\n      } else {\r\n        // Node type\r\n        System.out.println(\"Node: \" + xqs.getNode());\r\n      }\r\n    }\r\n\r\n    // Retrieve static result type\r\n    info(\"Retrieve static result type\");\r\n    XQPreparedExpression xqp = xqc.prepareExpression(\"1 + 2\");\r\n    XQSequenceType xqst = xqp.getStaticResultType();\r\n    System.out.println(\"Type: \" + xqst);\r\n\r\n    // Retrieve type of external variables\r\n    info(\"Retrieve type of external variables\");\r\n    xqp = xqc.prepareExpression(\r\n        \"declare variable $i as xs:integer external; $i+1\");\r\n    QName[] variables = xqp.getAllExternalVariables();\r\n    for(int i = 0; i < variables.length; ++i) {\r\n      xqst = xqp.getStaticVariableType(variables[i]);\r\n      System.out.println(\"Variable $\" + variables[i] + \": \" + xqst);\r\n    }\r\n\r\n    // Close the connection\r\n    close(xqc);\r\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Runs the example code.\r\n   * @param args (ignored) command-line arguments\r\n   * @throws IOException if an error occurs while serializing the results\r\n   * @throws QueryException if an error occurs while evaluating the query\r\n   */\r\n  public static void main(final String[] args)\r\n      throws IOException, QueryException {\r\n\r\n    /** Database context. */\r\n    Context context = new Context();\r\n\r\n    System.out.println(\"=== QueryBindExample ===\");\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Evaluate the specified XQuery\r\n    String query = \"declare variable $var external; $var\";\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Create a query processor\r\n    QueryProcessor processor = new QueryProcessor(query, context);\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Create the item to be bound\r\n    Item string = Str.get(\"Hello World!\\n\");\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Create a variable\r\n    Var var = new Var(new QNm(Token.token(\"var\")));\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Bind the item to the variable\r\n    var.bind(string, processor.ctx);\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Add the variable to the global context\r\n    processor.ctx.vars.addGlobal(var);\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Execute the query\r\n    Result result = processor.execute();\r\n\r\n    System.out.println(\"\\n* Execute query:\");\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Serialize all results to OUT, using the specified serializer\r\n    result.serialize(processor.getSerializer(System.out));\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Close the query processor\r\n    processor.close();\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Close the database context\r\n    context.close();\r\n  }","id":8653,"modified_method":"/**\r\n   * Runs the example code.\r\n   * @param args (ignored) command-line arguments\r\n   * @throws IOException if an error occurs while serializing the results\r\n   * @throws QueryException if an error occurs while evaluating the query\r\n   */\r\n  public static void main(final String[] args)\r\n      throws IOException, QueryException {\r\n\r\n    /** Database context. */\r\n    Context context = new Context();\r\n\r\n    System.out.println(\"=== QueryBindExample ===\");\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Evaluate the specified XQuery\r\n    String query = \"declare variable $var external; $var\";\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Create a query processor\r\n    QueryProcessor processor = new QueryProcessor(query, context);\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Create the item to be bound\r\n    Item string = Str.get(\"Hello World!\\n\");\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Binds a variable to the global context\r\n    processor.bind(\"var\", string);\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Execute the query\r\n    Result result = processor.execute();\r\n\r\n    System.out.println(\"\\n* Execute query:\");\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Serialize all results to OUT, using the specified serializer\r\n    result.serialize(processor.getSerializer(System.out));\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Close the query processor\r\n    processor.close();\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Close the database context\r\n    context.close();\r\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Runs the example code.\r\n   * @param args (ignored) command-line arguments\r\n   * @throws Exception exception\r\n   */\r\n  public static void main(final String[] args) throws Exception {\r\n    System.out.println(\"=== Local StressTest ===\");\r\n\r\n    // create test database\r\n    System.out.println(\"\\n* Create test database.\");\r\n    final CreateDB cmd = new CreateDB(\"test\", INPUT);\r\n    cmd.execute(CONTEXT);\r\n    System.out.print(cmd.info());\r\n\r\n    // run clients\r\n    System.out.println(\"\\n* Run \" + NCLIENTS + \" client threads.\");\r\n    final Client[] cl = new Client[NCLIENTS];\r\n    for(int i = 0; i < NCLIENTS; i++) {\r\n      cl[i] = new Client();\r\n      cl[i].start();\r\n    }\r\n    for(final Client c : cl) c.join();\r\n    dropDB();\r\n  }","id":8654,"modified_method":"/**\r\n   * Runs the example code.\r\n   * @param args (ignored) command-line arguments\r\n   * @throws Exception exception\r\n   */\r\n  public static void main(final String[] args) throws Exception {\r\n    System.out.println(\"=== Local StressTest ===\");\r\n\r\n    // create test database\r\n    System.out.println(\"\\n* Create test database.\");\r\n    final CreateDB cmd = new CreateDB(\"test\", INPUT);\r\n    cmd.execute(CONTEXT);\r\n    System.out.print(cmd.info());\r\n\r\n    // run clients\r\n    System.out.println(\"\\n* Run \" + NCLIENTS + \" client threads.\");\r\n    final Client[] cl = new Client[NCLIENTS];\r\n    for(int i = 0; i < NCLIENTS; ++i) {\r\n      cl[i] = new Client();\r\n      cl[i].start();\r\n    }\r\n    for(final Client c : cl) c.join();\r\n    dropDB();\r\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n    public void run() {\r\n      try {\r\n        // perform some queries\r\n        for(int i = 0; i < NQUERIES; i++) {\r\n          Performance.sleep((long) (50 * RND.nextDouble()));\r\n\r\n          // return nth text of the database\r\n          final int n = (RND.nextInt() & 0xFF) + 1;\r\n          final String qu = Main.info(QUERY, n);\r\n          final String result = new XQuery(qu).execute(CONTEXT);\r\n\r\n          if(VERBOSE) System.out.println(\"[\" + counter++ + \"] Thread \" +\r\n              getId() + \", Pos \" + n + \": \" + result);\r\n        }\r\n      } catch(final BaseXException ex) {\r\n        ex.printStackTrace();\r\n      }\r\n    }","id":8655,"modified_method":"@Override\r\n    public void run() {\r\n      try {\r\n        // perform some queries\r\n        for(int i = 0; i < NQUERIES; ++i) {\r\n          Performance.sleep((long) (50 * RND.nextDouble()));\r\n\r\n          // return nth text of the database\r\n          final int n = (RND.nextInt() & 0xFF) + 1;\r\n          final String qu = Main.info(QUERY, n);\r\n          final String result = new XQuery(qu).execute(CONTEXT);\r\n\r\n          if(VERBOSE) System.out.println(\"[\" + counter++ + \"] Thread \" +\r\n              getId() + \", Pos \" + n + \": \" + result);\r\n        }\r\n      } catch(final BaseXException ex) {\r\n        ex.printStackTrace();\r\n      }\r\n    }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n    public void run() {\r\n      try {\r\n        session = newSession();\r\n\r\n        // perform some queries\r\n        for(int i = 0; i < NQUERIES; i++) {\r\n          Performance.sleep((long) (50 * RND.nextDouble()));\r\n\r\n          // return nth text of the database\r\n          final int n = (RND.nextInt() & 0xFF) + 1;\r\n          final String qu = Main.info(QUERY, n);\r\n          final String result = session.execute(\"xquery \" + qu);\r\n\r\n          if(VERBOSE) System.out.println(\"[\" + counter++ + \"] Thread \" +\r\n              getId() + \", Pos \" + n + \": \" + result);\r\n        }\r\n        session.close();\r\n\r\n        // server is stopped after last client has finished\r\n        if(++finished == StressTest.NCLIENTS) stopServer();\r\n      } catch(final Exception ex) {\r\n        ex.printStackTrace();\r\n      }\r\n    }","id":8656,"modified_method":"@Override\r\n    public void run() {\r\n      try {\r\n        session = newSession();\r\n\r\n        // perform some queries\r\n        for(int i = 0; i < NQUERIES; ++i) {\r\n          Performance.sleep((long) (50 * RND.nextDouble()));\r\n\r\n          // return nth text of the database\r\n          final int n = (RND.nextInt() & 0xFF) + 1;\r\n          final String qu = Main.info(QUERY, n);\r\n          final String result = session.execute(\"xquery \" + qu);\r\n\r\n          if(VERBOSE) System.out.println(\"[\" + counter++ + \"] Thread \" +\r\n              getId() + \", Pos \" + n + \": \" + result);\r\n        }\r\n        session.close();\r\n\r\n        // server is stopped after last client has finished\r\n        if(++finished == StressTest.NCLIENTS) stopServer();\r\n      } catch(final Exception ex) {\r\n        ex.printStackTrace();\r\n      }\r\n    }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Runs the example code.\r\n   * @param args (ignored) command-line arguments\r\n   * @throws Exception exception\r\n   */\r\n  public static void main(final String[] args) throws Exception {\r\n    System.out.println(\"=== Server StressTest ===\");\r\n\r\n    // run server instance\r\n    System.out.println(\"\\n* Start server.\");\r\n    new BaseXServer(\"-z\");\r\n\r\n    // create test database\r\n    System.out.println(\"\\n* Create test database.\");\r\n\r\n    final ClientSession cs = newSession();\r\n    cs.execute(\"create db test \" + INPUT);\r\n    System.out.print(cs.info());\r\n    cs.close();\r\n\r\n    // run clients\r\n    System.out.println(\"\\n* Run \" + NCLIENTS + \" client threads.\");\r\n    for(int i = 0; i < NCLIENTS; i++) {\r\n      new Client().start();\r\n    }\r\n  }","id":8657,"modified_method":"/**\r\n   * Runs the example code.\r\n   * @param args (ignored) command-line arguments\r\n   * @throws Exception exception\r\n   */\r\n  public static void main(final String[] args) throws Exception {\r\n    System.out.println(\"=== Server StressTest ===\");\r\n\r\n    // run server instance\r\n    System.out.println(\"\\n* Start server.\");\r\n    new BaseXServer(\"-z\");\r\n\r\n    // create test database\r\n    System.out.println(\"\\n* Create test database.\");\r\n\r\n    final ClientSession cs = newSession();\r\n    cs.execute(\"create db test \" + INPUT);\r\n    System.out.print(cs.info());\r\n    cs.close();\r\n\r\n    // run clients\r\n    System.out.println(\"\\n* Run \" + NCLIENTS + \" client threads.\");\r\n    for(int i = 0; i < NCLIENTS; ++i) {\r\n      new Client().start();\r\n    }\r\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Performs test specific parsings.\n   * @param qctx query context\n   * @param root root nodes reference\n   * @throws Exception exception\n   */\n  @SuppressWarnings(\"unused\")\n  void parse(final QueryContext qctx, final Nodes root) throws Exception { }","id":8658,"modified_method":"/**\n   * Performs test specific parsings.\n   * @param qp query processor\n   * @param root root nodes reference\n   * @throws Exception exception\n   */\n  @SuppressWarnings(\"unused\")\n  void parse(final QueryProcessor qp, final Nodes root) throws Exception { }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Runs the test suite.\n   * @param args command-line arguments\n   * @throws Exception exception\n   */\n  void run(final String[] args) throws Exception {\n    final Args arg = new Args(args, this,\n        \" Test Suite [options] [pat]\" + NL +\n        \" [pat] perform only tests with the specified pattern\" + NL +\n        \" -c print compilation steps\" + NL +\n        \" -d show debugging info\" + NL +\n        \" -h show this help\" + NL +\n        \" -m minimum conformance\" + NL +\n        \" -p change path\" + NL +\n        \" -r create report\" + NL +\n        \" -v verbose output\");\n\n    while(arg.more()) {\n      if(arg.dash()) {\n        final char c = arg.next();\n        if(c == 'r') {\n          reporting = true;\n          currTime = true;\n        } else if(c == 'c') {\n          compile = true;\n        } else if(c == 'd') {\n          debug = true;\n        } else if(c == 'm') {\n          minimum = true;\n        } else if(c == 'p') {\n          path = arg.string() + \"/\";\n        } else if(c == 'v') {\n          verbose = true;\n        } else {\n          arg.check(false);\n        }\n      } else {\n        single = arg.string();\n        maxout = Integer.MAX_VALUE;\n      }\n    }\n    if(!arg.finish()) return;\n\n    queries = path + \"Queries/XQuery/\";\n    expected = path + \"ExpectedTestResults/\";\n    results = path + \"ReportingResults/Results/\";\n    report = path + \"ReportingResults/\";\n    sources = path + \"TestSources/\";\n\n    final SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n    final String dat = sdf.format(Calendar.getInstance().getTime());\n\n    final Performance perf = new Performance();\n    context.prop.set(Prop.MAINMEM, false);\n    context.prop.set(Prop.TABLEMEM, false);\n    context.prop.set(Prop.CHOP, false);\n\n    new Check(path + input).execute(context);\n    data = context.data;\n\n    final Nodes root = new Nodes(0, data);\n    Main.outln(NL + Main.name(this) + \" Test Suite \" +\n        text(\"/*:test-suite/@version\", root));\n\n    Main.outln(NL + \"Caching Sources...\");\n    for(final int s : nodes(\"//*:source\", root).nodes) {\n      final Nodes srcRoot = new Nodes(s, data);\n      final String val = (path + text(\"@FileName\", srcRoot)).replace('\\\\', '/');\n      srcs.put(text(\"@ID\", srcRoot), val);\n    }\n\n    Main.outln(\"Caching Modules...\");\n    for(final int s : nodes(\"//*:module\", root).nodes) {\n      final Nodes srcRoot = new Nodes(s, data);\n      final String val = (path + text(\"@FileName\", srcRoot)).replace('\\\\', '/');\n      mods.put(text(\"@ID\", srcRoot), val);\n    }\n\n    Main.outln(\"Caching Collections...\");\n    for(final int c : nodes(\"//*:collection\", root).nodes) {\n      final Nodes nodes = new Nodes(c, data);\n      final String cname = text(\"@ID\", nodes);\n\n      final TokenList dl = new TokenList();\n      final Nodes doc = nodes(\"*:input-document\", nodes);\n      for(int d = 0; d < doc.size(); d++) {\n        dl.add(token(sources + string(data.atom(doc.nodes[d])) + IO.XMLSUFFIX));\n      }\n      colls.put(cname, dl.toArray());\n    }\n    init(root);\n\n    if(reporting) {\n      Main.outln(\"Delete old results...\");\n      delete(new File[] { new File(results) });\n    }\n\n    if(verbose) Main.outln();\n    final Nodes nodes = minimum ?\n      nodes(\"//*:test-group[starts-with(@name, 'Minim')]//*:test-case\", root) :\n      nodes(\"//*:test-case\", root);\n\n    long total = nodes.size();\n    Main.out(\"Parsing \" + total + \" Queries\");\n    for(int t = 0; t < total; t++) {\n      if(!parse(new Nodes(nodes.nodes[t], data))) break;\n      if(!verbose && t % 500 == 0) Main.out(\".\");\n    }\n    Main.outln();\n    total = ok + ok2 + err + err2;\n\n    final String time = perf.getTimer();\n    Main.outln(\"Writing log file...\" + NL);\n    BufferedWriter bw = new BufferedWriter(\n        new OutputStreamWriter(new FileOutputStream(path + pathlog), UTF8));\n    bw.write(\"TEST RESULTS ==================================================\");\n    bw.write(NL + NL + \"Total #Queries: \" + total + NL);\n    bw.write(\"Correct / Empty Results: \" + ok + \" / \" + ok2 + NL);\n    bw.write(\"Conformance (w/Empty Results): \");\n    bw.write(pc(ok, total) + \" / \" + pc(ok + ok2, total) + NL);\n    bw.write(\"Wrong Results / Errors: \" + err + \" / \" + err2 + NL);\n    bw.write(\"WRONG =========================================================\");\n    bw.write(NL + NL + logErr + NL);\n    bw.write(\"WRONG (ERRORS) ================================================\");\n    bw.write(NL + NL + logErr2 + NL);\n    bw.write(\"CORRECT? (EMPTY) ==============================================\");\n    bw.write(NL + NL + logOK2 + NL);\n    bw.write(\"CORRECT =======================================================\");\n    bw.write(NL + NL + logOK + NL);\n    bw.write(\"===============================================================\");\n    bw.close();\n\n    bw = new BufferedWriter(new FileWriter(path + pathhis, true));\n    bw.write(dat + \"\\t\" + ok + \"\\t\" + ok2 + \"\\t\" + err + \"\\t\" + err2 + NL);\n    bw.close();\n\n    if(reporting) {\n      bw = new BufferedWriter(new OutputStreamWriter(\n          new FileOutputStream(report + NAME + IO.XMLSUFFIX), UTF8));\n      write(bw, report + NAME + \"Pre\" + IO.XMLSUFFIX);\n      bw.write(logReport.toString());\n      write(bw, report + NAME + \"Pos\" + IO.XMLSUFFIX);\n      bw.close();\n    }\n\n    Main.outln(\"Total #Queries: \" + total);\n    Main.outln(\"Correct / Empty results: \" + ok + \" / \" + ok2);\n    Main.out(\"Conformance (w/empty results): \");\n    Main.outln(pc(ok, total) + \" / \" + pc(ok + ok2, total));\n    Main.outln(\"Total Time: \" + time);\n\n    context.close();\n  }","id":8659,"modified_method":"/**\n   * Runs the test suite.\n   * @param args command-line arguments\n   * @throws Exception exception\n   */\n  void run(final String[] args) throws Exception {\n    final Args arg = new Args(args, this,\n        \" Test Suite [options] [pat]\" + NL +\n        \" [pat] perform only tests with the specified pattern\" + NL +\n        \" -c print compilation steps\" + NL +\n        \" -d show debugging info\" + NL +\n        \" -h show this help\" + NL +\n        \" -m minimum conformance\" + NL +\n        \" -p change path\" + NL +\n        \" -r create report\" + NL +\n        \" -v verbose output\");\n\n    while(arg.more()) {\n      if(arg.dash()) {\n        final char c = arg.next();\n        if(c == 'r') {\n          reporting = true;\n          currTime = true;\n        } else if(c == 'c') {\n          compile = true;\n        } else if(c == 'd') {\n          debug = true;\n        } else if(c == 'm') {\n          minimum = true;\n        } else if(c == 'p') {\n          path = arg.string() + \"/\";\n        } else if(c == 'v') {\n          verbose = true;\n        } else {\n          arg.check(false);\n        }\n      } else {\n        single = arg.string();\n        maxout = Integer.MAX_VALUE;\n      }\n    }\n    if(!arg.finish()) return;\n\n    queries = path + \"Queries/XQuery/\";\n    expected = path + \"ExpectedTestResults/\";\n    results = path + \"ReportingResults/Results/\";\n    report = path + \"ReportingResults/\";\n    sources = path + \"TestSources/\";\n\n    final SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n    final String dat = sdf.format(Calendar.getInstance().getTime());\n\n    final Performance perf = new Performance();\n    context.prop.set(Prop.MAINMEM, false);\n    context.prop.set(Prop.TABLEMEM, false);\n    context.prop.set(Prop.CHOP, false);\n\n    new Check(path + input).execute(context);\n    data = context.data;\n\n    final Nodes root = new Nodes(0, data);\n    Main.outln(NL + Main.name(this) + \" Test Suite \" +\n        text(\"/*:test-suite/@version\", root));\n\n    Main.outln(NL + \"Caching Sources...\");\n    for(final int s : nodes(\"//*:source\", root).nodes) {\n      final Nodes srcRoot = new Nodes(s, data);\n      final String val = (path + text(\"@FileName\", srcRoot)).replace('\\\\', '/');\n      srcs.put(text(\"@ID\", srcRoot), val);\n    }\n\n    Main.outln(\"Caching Modules...\");\n    for(final int s : nodes(\"//*:module\", root).nodes) {\n      final Nodes srcRoot = new Nodes(s, data);\n      final String val = (path + text(\"@FileName\", srcRoot)).replace('\\\\', '/');\n      mods.put(text(\"@ID\", srcRoot), val);\n    }\n\n    Main.outln(\"Caching Collections...\");\n    for(final int c : nodes(\"//*:collection\", root).nodes) {\n      final Nodes nodes = new Nodes(c, data);\n      final String cname = text(\"@ID\", nodes);\n\n      final TokenList dl = new TokenList();\n      final Nodes doc = nodes(\"*:input-document\", nodes);\n      for(int d = 0; d < doc.size(); ++d) {\n        dl.add(token(sources + string(data.atom(doc.nodes[d])) + IO.XMLSUFFIX));\n      }\n      colls.put(cname, dl.toArray());\n    }\n    init(root);\n\n    if(reporting) {\n      Main.outln(\"Delete old results...\");\n      delete(new File[] { new File(results) });\n    }\n\n    if(verbose) Main.outln();\n    final Nodes nodes = minimum ?\n      nodes(\"//*:test-group[starts-with(@name, 'Minim')]//*:test-case\", root) :\n      nodes(\"//*:test-case\", root);\n\n    long total = nodes.size();\n    Main.out(\"Parsing \" + total + \" Queries\");\n    for(int t = 0; t < total; ++t) {\n      if(!parse(new Nodes(nodes.nodes[t], data))) break;\n      if(!verbose && t % 500 == 0) Main.out(\".\");\n    }\n    Main.outln();\n    total = ok + ok2 + err + err2;\n\n    final String time = perf.getTimer();\n    Main.outln(\"Writing log file...\" + NL);\n    BufferedWriter bw = new BufferedWriter(\n        new OutputStreamWriter(new FileOutputStream(path + pathlog), UTF8));\n    bw.write(\"TEST RESULTS ==================================================\");\n    bw.write(NL + NL + \"Total #Queries: \" + total + NL);\n    bw.write(\"Correct / Empty Results: \" + ok + \" / \" + ok2 + NL);\n    bw.write(\"Conformance (w/Empty Results): \");\n    bw.write(pc(ok, total) + \" / \" + pc(ok + ok2, total) + NL);\n    bw.write(\"Wrong Results / Errors: \" + err + \" / \" + err2 + NL);\n    bw.write(\"WRONG =========================================================\");\n    bw.write(NL + NL + logErr + NL);\n    bw.write(\"WRONG (ERRORS) ================================================\");\n    bw.write(NL + NL + logErr2 + NL);\n    bw.write(\"CORRECT? (EMPTY) ==============================================\");\n    bw.write(NL + NL + logOK2 + NL);\n    bw.write(\"CORRECT =======================================================\");\n    bw.write(NL + NL + logOK + NL);\n    bw.write(\"===============================================================\");\n    bw.close();\n\n    bw = new BufferedWriter(new FileWriter(path + pathhis, true));\n    bw.write(dat + \"\\t\" + ok + \"\\t\" + ok2 + \"\\t\" + err + \"\\t\" + err2 + NL);\n    bw.close();\n\n    if(reporting) {\n      bw = new BufferedWriter(new OutputStreamWriter(\n          new FileOutputStream(report + NAME + IO.XMLSUFFIX), UTF8));\n      write(bw, report + NAME + \"Pre\" + IO.XMLSUFFIX);\n      bw.write(logReport.toString());\n      write(bw, report + NAME + \"Pos\" + IO.XMLSUFFIX);\n      bw.close();\n    }\n\n    Main.outln(\"Total #Queries: \" + total);\n    Main.outln(\"Correct / Empty results: \" + ok + \" / \" + ok2);\n    Main.out(\"Conformance (w/empty results): \");\n    Main.outln(pc(ok, total) + \" / \" + pc(ok + ok2, total));\n    Main.outln(\"Total Time: \" + time);\n\n    context.close();\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Initializes the input files, specified by the context nodes.\n   * @param nod variables\n   * @param var documents\n   * @param ctx query context\n   * @param first call\n   * @return string with input files\n   * @throws QueryException query exception\n   */\n  private byte[] file(final Nodes nod, final Nodes var,\n      final QueryContext ctx, final boolean first) throws QueryException {\n\n    final TokenBuilder tb = new TokenBuilder();\n    for(int c = 0; c < nod.size(); c++) {\n      final byte[] nm = data.atom(nod.nodes[c]);\n      String src = srcs.get(string(nm));\n      if(tb.size() != 0) tb.add(\", \");\n      tb.add(nm);\n\n      Expr expr = null;\n      if(src == null) {\n        expr = coll(nm, ctx);\n      } else {\n        // assign document\n        FunDef def = FunDef.DOC;\n        if(!first) {\n          def = FunDef.DB;\n          src = IO.get(src).dbname();\n        }\n        // [CG] XQuery/Query Info\n        expr = Fun.create(null, def, Str.get(src));\n      }\n      if(var != null) {\n        final Var v = new Var(new QNm(data.atom(var.nodes[c])));\n        ctx.vars.addGlobal(v.bind(expr, ctx));\n      }\n    }\n    return tb.finish();\n  }","id":8660,"modified_method":"/**\n   * Initializes the input files, specified by the context nodes.\n   * @param nod variables\n   * @param var documents\n   * @param qp query processor\n   * @param first call\n   * @return string with input files\n   * @throws QueryException query exception\n   */\n  private byte[] file(final Nodes nod, final Nodes var,\n      final QueryProcessor qp, final boolean first) throws QueryException {\n\n    final TokenBuilder tb = new TokenBuilder();\n    for(int c = 0; c < nod.size(); ++c) {\n      final byte[] nm = data.atom(nod.nodes[c]);\n      String src = srcs.get(string(nm));\n      if(tb.size() != 0) tb.add(\", \");\n      tb.add(nm);\n\n      Expr expr = null;\n      if(src == null) {\n        expr = coll(nm, qp);\n      } else {\n        // assign document\n        FunDef def = FunDef.DOC;\n        if(!first) {\n          def = FunDef.DB;\n          src = IO.get(src).dbname();\n        }\n        // [CG] XQuery/Query Info\n        expr = Fun.create(null, def, Str.get(src));\n      }\n      if(var != null) qp.bind(string(data.atom(var.nodes[c])), expr);\n    }\n    return tb.finish();\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Returns the resulting query text (text node or attribute value).\n   * @param qu query\n   * @param root root node\n   * @return attribute value\n   * @throws Exception exception\n   */\n  protected String text(final String qu, final Nodes root) throws Exception {\n    final Nodes n = nodes(qu, root);\n    final TokenBuilder sb = new TokenBuilder();\n    for(int i = 0; i < n.size(); i++) {\n      if(i != 0) sb.add('/');\n      sb.add(data.atom(n.nodes[i]));\n    }\n    return sb.toString();\n  }","id":8661,"modified_method":"/**\n   * Returns the resulting query text (text node or attribute value).\n   * @param qu query\n   * @param root root node\n   * @return attribute value\n   * @throws Exception exception\n   */\n  protected String text(final String qu, final Nodes root) throws Exception {\n    final Nodes n = nodes(qu, root);\n    final TokenBuilder sb = new TokenBuilder();\n    for(int i = 0; i < n.size(); ++i) {\n      if(i != 0) sb.add('/');\n      sb.add(data.atom(n.nodes[i]));\n    }\n    return sb.toString();\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Evaluates the the input files and assigns the result to the specified\n   * variables.\n   * @param nod variables\n   * @param var documents\n   * @param pth file path\n   * @param ctx query context\n   * @throws Exception exception\n   */\n  private void eval(final Nodes nod, final Nodes var, final String pth,\n      final QueryContext ctx) throws Exception {\n\n    for(int c = 0; c < nod.size(); c++) {\n      final String file = pth + string(data.atom(nod.nodes[c])) + IO.XQSUFFIX;\n      final String in = read(IO.get(queries + file));\n      final QueryProcessor xq = new QueryProcessor(in, context);\n      final Value val = xq.iter().finish();\n      final Var v = new Var(new QNm(data.atom(var.nodes[c])));\n      ctx.vars.addGlobal(v.bind(val, ctx));\n      xq.close();\n    }\n  }","id":8662,"modified_method":"/**\n   * Evaluates the the input files and assigns the result to the specified\n   * variables.\n   * @param nod variables\n   * @param var documents\n   * @param pth file path\n   * @param qp query processor\n   * @throws Exception exception\n   */\n  private void eval(final Nodes nod, final Nodes var, final String pth,\n      final QueryProcessor qp) throws Exception {\n\n    for(int c = 0; c < nod.size(); ++c) {\n      final String file = pth + string(data.atom(nod.nodes[c])) + IO.XQSUFFIX;\n      final String in = read(IO.get(queries + file));\n      final QueryProcessor xq = new QueryProcessor(in, context);\n      final Value val = xq.iter().finish();\n      qp.bind(string(data.atom(var.nodes[c])), val);\n      xq.close();\n    }\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Parses the specified test case.\n   * @param root root node\n   * @throws Exception exception\n   * @return true if the query, specified by {@link #single}, was evaluated\n   */\n  private boolean parse(final Nodes root) throws Exception {\n    final String pth = text(\"@FilePath\", root);\n    final String outname = text(\"@name\", root);\n    if(single != null && !outname.startsWith(single)) return true;\n\n    Performance perf = new Performance();\n    if(verbose) Main.out(\"- \" + outname);\n\n    boolean inspect = false;\n    boolean correct = true;\n\n    final Nodes nodes = states(root);\n    for(int n = 0; n < nodes.size(); n++) {\n      final Nodes state = new Nodes(nodes.nodes[n], nodes.data);\n\n      final String inname = text(\"*:query/@name\", state);\n      context.query = IO.get(queries + pth + inname + IO.XQSUFFIX);\n      final String in = read(context.query);\n      String error = null;\n      ItemIter iter = null;\n      boolean doc = true;\n\n      final TokenBuilder files = new TokenBuilder();\n      final CachedOutput co = new CachedOutput();\n\n      final Nodes cont = nodes(\"*:contextItem\", state);\n      Nodes curr = null;\n      if(cont.size() != 0) {\n        final Data d = Check.check(context,\n            srcs.get(string(data.atom(cont.nodes[0]))));\n        curr = new Nodes(d.doc(), d);\n        curr.doc = true;\n      }\n\n      context.prop.set(Prop.QUERYINFO, compile);\n      final QueryProcessor xq = new QueryProcessor(in, curr, context);\n      final QueryContext qctx = xq.ctx;\n      context.prop.set(Prop.QUERYINFO, false);\n\n      try {\n        files.add(file(nodes(\"*:input-file\", state),\n            nodes(\"*:input-file/@variable\", state), qctx, n == 0));\n        files.add(file(nodes(\"*:defaultCollection\", state),\n            null, qctx, n == 0));\n\n        var(nodes(\"*:input-URI\", state),\n            nodes(\"*:input-URI/@variable\", state), qctx);\n        eval(nodes(\"*:input-query/@name\", state),\n            nodes(\"*:input-query/@variable\", state), pth, qctx);\n\n        parse(qctx, state);\n\n        for(final int p : nodes(\"*:module\", root).nodes) {\n          final String ns = text(\"@namespace\", new Nodes(p, data));\n          final String f = mods.get(string(data.atom(p))) + IO.XQSUFFIX;\n          xq.module(ns, f);\n        }\n\n        // evaluate and serialize query\n        final SerializerProp sp = new SerializerProp();\n        sp.set(SerializerProp.S_INDENT, context.prop.is(Prop.CHOP) ?\n            DataText.YES : DataText.NO);\n        final XMLSerializer xml = new XMLSerializer(co, sp);\n\n        iter = ItemIter.get(xq.iter());\n        Item it;\n        while((it = iter.next()) != null) {\n          doc &= it.type == Type.DOC;\n          it.serialize(xml);\n        }\n        xml.close();\n      } catch(final QueryException ex) {\n        error = ex.getMessage();\n        if(error.startsWith(STOPPED)) {\n          error = error.substring(error.indexOf('\\n') + 1);\n        }\n        if(error.startsWith(\"[\")) {\n          error = error.replaceAll(\"\\\\[(.*?)\\\\] (.*)\", \"$1 $2\");\n        }\n      } catch(final Exception ex) {\n        error = ex.getMessage() != null ? ex.getMessage() : ex.toString();\n        System.err.print(\"\\n\" + inname + \": \");\n        ex.printStackTrace();\n      }\n\n      // print compilation steps\n      if(compile) {\n        Main.errln(\"---------------------------------------------------------\");\n        Main.err(xq.info());\n        Main.errln(in);\n      }\n\n      final Nodes outFiles = nodes(\"*:output-file/text()\", state);\n      final Nodes cmpFiles = nodes(\"*:output-file/@compare\", state);\n      boolean xml = false;\n      boolean frag = false;\n\n      final StringList result = new StringList();\n      for(int o = 0; o < outFiles.size(); o++) {\n        final String resFile = string(data.atom(outFiles.nodes[o]));\n        final IO exp = IO.get(expected + pth + resFile);\n        result.add(read(exp));\n        final byte[] type = data.atom(cmpFiles.nodes[o]);\n        xml |= eq(type, XML);\n        frag |= eq(type, FRAGMENT);\n      }\n      String expError = text(\"*:expected-error/text()\", state);\n\n      final StringBuilder log = new StringBuilder(pth + inname + IO.XQSUFFIX);\n      if(files.size() != 0) {\n        log.append(\" [\");\n        log.append(files);\n        log.append(\"]\");\n      }\n      log.append(NL);\n\n      /** Remove comments. */\n      log.append(norm(in));\n      log.append(NL);\n      final String logStr = log.toString();\n      // skip queries with variable results\n      final boolean print = currTime || !logStr.contains(\"current-\");\n\n      boolean correctError = false;\n      if(error != null && (outFiles.size() == 0 || !expError.isEmpty())) {\n        expError = error(pth + outname, expError);\n        final String code = error.substring(0, Math.min(8, error.length()));\n        for(final String er : SLASH.split(expError)) {\n          if(code.equals(er)) {\n            correctError = true;\n            break;\n          }\n        }\n      }\n\n      if(correctError) {\n        if(print) {\n          logOK.append(logStr);\n          logOK.append(\"[Right] \");\n          logOK.append(norm(error));\n          logOK.append(NL);\n          logOK.append(NL);\n          addLog(pth, outname + \".log\", error);\n        }\n        ok++;\n      } else if(error == null) {\n        int s = -1;\n        final int rs = result.size();\n        while(++s < rs) {\n          inspect |= s < cmpFiles.nodes.length &&\n            eq(data.atom(cmpFiles.nodes[s]), INSPECT);\n\n          if(result.get(s).equals(co.toString())) break;\n\n          if(xml || frag) {\n            iter.reset();\n\n            String ri = result.get(s).trim();\n            if(!doc) {\n              if(ri.startsWith(\"<?xml\")) ri = ri.replaceAll(\"^<.*?>\\\\s*\", \"\");\n              ri = \"<X>\" + ri + \"<\/X>\";\n            }\n\n            try {\n              final Data rdata = CreateDB.xml(IO.get(ri), context);\n              final ItemIter ir = new ItemIter();\n              for(int pre = doc ? 0 : 2; pre < rdata.meta.size;) {\n                ir.add(new DBNode(rdata, pre));\n                pre += rdata.size(pre, rdata.kind(pre));\n              }\n\n              // [CG] XQuery: check if null reference is safe\n              final boolean eq = FNSimple.deep(null, iter, ir);\n              if(!eq && debug) {\n                iter.reset();\n                ir.reset();\n                final XMLSerializer ser = new XMLSerializer(System.out);\n                Item it;\n                Main.outln(NL + \"=== \" + testid + \" ===\");\n                while((it = ir.next()) != null) it.serialize(ser);\n                Main.outln(NL + \"=== \" + NAME + \" ===\");\n                while((it = iter.next()) != null) it.serialize(ser);\n                Main.outln();\n              }\n              rdata.close();\n              if(eq) break;\n            } catch(final Throwable ex) {\n              ex.printStackTrace();\n            }\n          }\n        }\n        if((rs > 0 || !expError.isEmpty()) && s == rs && !inspect) {\n          if(print) {\n            if(outFiles.size() == 0) result.add(error(pth + outname, expError));\n            logErr.append(logStr);\n            logErr.append(\"[\" + testid + \" ] \");\n            logErr.append(norm(result.get(0)));\n            logErr.append(NL);\n            logErr.append(\"[Wrong] \");\n            logErr.append(norm(co.toString()));\n            logErr.append(NL);\n            logErr.append(NL);\n            addLog(pth, outname + (xml ? IO.XMLSUFFIX : \".txt\"),\n                co.toString());\n          }\n          correct = false;\n          err++;\n        } else {\n          if(print) {\n            logOK.append(logStr);\n            logOK.append(\"[Right] \");\n            logOK.append(norm(co.toString()));\n            logOK.append(NL);\n            logOK.append(NL);\n            addLog(pth, outname + (xml ? IO.XMLSUFFIX : \".txt\"),\n                co.toString());\n          }\n          ok++;\n        }\n      } else {\n        if(outFiles.size() == 0 || !expError.isEmpty()) {\n          if(print) {\n            logOK2.append(logStr);\n            logOK2.append(\"[\" + testid + \" ] \");\n            logOK2.append(norm(expError));\n            logOK2.append(NL);\n            logOK2.append(\"[Rght?] \");\n            logOK2.append(norm(error));\n            logOK2.append(NL);\n            logOK2.append(NL);\n            addLog(pth, outname + \".log\", error);\n          }\n          ok2++;\n        } else {\n          if(print) {\n            logErr2.append(logStr);\n            logErr2.append(\"[\" + testid + \" ] \");\n            logErr2.append(norm(result.get(0)));\n            logErr2.append(NL);\n            logErr2.append(\"[Wrong] \");\n            logErr2.append(norm(error));\n            logErr2.append(NL);\n            logErr2.append(NL);\n            addLog(pth, outname + \".log\", error);\n          }\n          correct = false;\n          err2++;\n        }\n      }\n      if(curr != null) Close.close(context, curr.data);\n      xq.close();\n    }\n\n    if(reporting) {\n      logReport.append(\"    <test-case name=\\\"\");\n      logReport.append(outname);\n      logReport.append(\"\\\" result='\");\n      logReport.append(correct ? \"pass\" : \"fail\");\n      if(inspect) logReport.append(\"' todo='inspect\");\n      logReport.append(\"'/>\");\n      logReport.append(NL);\n    }\n\n    if(verbose) {\n      final long t = perf.getTime();\n      if(t > 100000000) Main.out(\": \" + Performance.getTimer(t, 1));\n      Main.outln();\n    }\n    return single == null || !outname.equals(single);\n  }","id":8663,"modified_method":"/**\n   * Parses the specified test case.\n   * @param root root node\n   * @throws Exception exception\n   * @return true if the query, specified by {@link #single}, was evaluated\n   */\n  private boolean parse(final Nodes root) throws Exception {\n    final String pth = text(\"@FilePath\", root);\n    final String outname = text(\"@name\", root);\n    if(single != null && !outname.startsWith(single)) return true;\n\n    Performance perf = new Performance();\n    if(verbose) Main.out(\"- \" + outname);\n\n    boolean inspect = false;\n    boolean correct = true;\n\n    final Nodes nodes = states(root);\n    for(int n = 0; n < nodes.size(); ++n) {\n      final Nodes state = new Nodes(nodes.nodes[n], nodes.data);\n\n      final String inname = text(\"*:query/@name\", state);\n      context.query = IO.get(queries + pth + inname + IO.XQSUFFIX);\n      final String in = read(context.query);\n      String error = null;\n      ItemIter iter = null;\n      boolean doc = true;\n\n      final TokenBuilder files = new TokenBuilder();\n      // limit result sizes to 1MB\n      final CachedOutput co = new CachedOutput(1 << 19);\n\n      final Nodes cont = nodes(\"*:contextItem\", state);\n      Nodes curr = null;\n      if(cont.size() != 0) {\n        final Data d = Check.check(context,\n            srcs.get(string(data.atom(cont.nodes[0]))));\n        curr = new Nodes(d.doc(), d);\n        curr.doc = true;\n      }\n\n      context.prop.set(Prop.QUERYINFO, compile);\n      final QueryProcessor xq = new QueryProcessor(in, curr, context);\n      context.prop.set(Prop.QUERYINFO, false);\n\n      try {\n        files.add(file(nodes(\"*:input-file\", state),\n            nodes(\"*:input-file/@variable\", state), xq, n == 0));\n        files.add(file(nodes(\"*:defaultCollection\", state),\n            null, xq, n == 0));\n\n        var(nodes(\"*:input-URI\", state),\n            nodes(\"*:input-URI/@variable\", state), xq);\n        eval(nodes(\"*:input-query/@name\", state),\n            nodes(\"*:input-query/@variable\", state), pth, xq);\n\n        parse(xq, state);\n\n        for(final int p : nodes(\"*:module\", root).nodes) {\n          final String ns = text(\"@namespace\", new Nodes(p, data));\n          final String f = mods.get(string(data.atom(p))) + IO.XQSUFFIX;\n          xq.module(ns, f);\n        }\n\n        // evaluate and serialize query\n        final SerializerProp sp = new SerializerProp();\n        sp.set(SerializerProp.S_INDENT, context.prop.is(Prop.CHOP) ?\n            DataText.YES : DataText.NO);\n        final XMLSerializer xml = new XMLSerializer(co, sp);\n\n        iter = ItemIter.get(xq.iter());\n        Item it;\n        while((it = iter.next()) != null) {\n          doc &= it.type == Type.DOC;\n          it.serialize(xml);\n        }\n        xml.close();\n      } catch(final QueryException ex) {\n        error = ex.getMessage();\n        if(error.startsWith(STOPPED)) {\n          error = error.substring(error.indexOf('\\n') + 1);\n        }\n        if(error.startsWith(\"[\")) {\n          error = error.replaceAll(\"\\\\[(.*?)\\\\] (.*)\", \"$1 $2\");\n        }\n      } catch(final Exception ex) {\n        error = ex.getMessage() != null ? ex.getMessage() : ex.toString();\n        System.err.print(\"\\n\" + inname + \": \");\n        ex.printStackTrace();\n      }\n\n      // print compilation steps\n      if(compile) {\n        Main.errln(\"---------------------------------------------------------\");\n        Main.err(xq.info());\n        Main.errln(in);\n      }\n\n      final Nodes outFiles = nodes(\"*:output-file/text()\", state);\n      final Nodes cmpFiles = nodes(\"*:output-file/@compare\", state);\n      boolean xml = false;\n      boolean frag = false;\n\n      final TokenList result = new TokenList();\n      for(int o = 0; o < outFiles.size(); ++o) {\n        final String resFile = string(data.atom(outFiles.nodes[o]));\n        final IO exp = IO.get(expected + pth + resFile);\n        result.add(read(exp));\n        final byte[] type = data.atom(cmpFiles.nodes[o]);\n        xml |= eq(type, XML);\n        frag |= eq(type, FRAGMENT);\n      }\n      String expError = text(\"*:expected-error/text()\", state);\n\n      final StringBuilder log = new StringBuilder(pth + inname + IO.XQSUFFIX);\n      if(files.size() != 0) {\n        log.append(\" [\");\n        log.append(files);\n        log.append(\"]\");\n      }\n      log.append(NL);\n\n      /** Remove comments. */\n      log.append(norm(in));\n      log.append(NL);\n      final String logStr = log.toString();\n      // skip queries with variable results\n      final boolean print = currTime || !logStr.contains(\"current-\");\n\n      boolean correctError = false;\n      if(error != null && (outFiles.size() == 0 || !expError.isEmpty())) {\n        expError = error(pth + outname, expError);\n        final String code = error.substring(0, Math.min(8, error.length()));\n        for(final String er : SLASH.split(expError)) {\n          if(code.equals(er)) {\n            correctError = true;\n            break;\n          }\n        }\n      }\n\n      if(correctError) {\n        if(print) {\n          logOK.append(logStr);\n          logOK.append(\"[Right] \");\n          logOK.append(norm(error));\n          logOK.append(NL);\n          logOK.append(NL);\n          addLog(pth, outname + \".log\", error);\n        }\n        ok++;\n      } else if(error == null) {\n        int s = -1;\n        final int rs = result.size();\n        while(++s < rs) {\n          inspect |= s < cmpFiles.nodes.length &&\n            eq(data.atom(cmpFiles.nodes[s]), INSPECT);\n\n          final byte[] res = result.get(s);\n          if(res.length == co.size() && eq(res, co.toArray())) break;\n\n          if(xml || frag) {\n            iter.reset();\n\n            String ri = string(res).trim();\n            if(!doc) {\n              if(ri.startsWith(\"<?xml\")) ri = ri.replaceAll(\"^<.*?>\\\\s*\", \"\");\n              ri = \"<X>\" + ri + \"<\/X>\";\n            }\n\n            try {\n              final Data rdata = CreateDB.xml(IO.get(ri), context);\n              final ItemIter ir = new ItemIter();\n              for(int pre = doc ? 0 : 2; pre < rdata.meta.size;) {\n                ir.add(new DBNode(rdata, pre));\n                pre += rdata.size(pre, rdata.kind(pre));\n              }\n\n              // [CG] XQuery: check if null reference is safe\n              final boolean eq = FNSimple.deep(null, iter, ir);\n              if(!eq && debug) {\n                iter.reset();\n                ir.reset();\n                final XMLSerializer ser = new XMLSerializer(System.out);\n                Item it;\n                Main.outln(NL + \"=== \" + testid + \" ===\");\n                while((it = ir.next()) != null) it.serialize(ser);\n                Main.outln(NL + \"=== \" + NAME + \" ===\");\n                while((it = iter.next()) != null) it.serialize(ser);\n                Main.outln();\n              }\n              rdata.close();\n              if(eq) break;\n            } catch(final Throwable ex) {\n              ex.printStackTrace();\n            }\n          }\n        }\n        if((rs > 0 || !expError.isEmpty()) && s == rs && !inspect) {\n          if(print) {\n            if(outFiles.size() == 0) result.add(error(pth + outname, expError));\n            logErr.append(logStr);\n            logErr.append(\"[\" + testid + \" ] \");\n            logErr.append(norm(string(result.get(0))));\n            logErr.append(NL);\n            logErr.append(\"[Wrong] \");\n            logErr.append(norm(co.toString()));\n            logErr.append(NL);\n            logErr.append(NL);\n            addLog(pth, outname + (xml ? IO.XMLSUFFIX : \".txt\"),\n                co.toString());\n          }\n          correct = false;\n          err++;\n        } else {\n          if(print) {\n            logOK.append(logStr);\n            logOK.append(\"[Right] \");\n            logOK.append(norm(co.toString()));\n            logOK.append(NL);\n            logOK.append(NL);\n            addLog(pth, outname + (xml ? IO.XMLSUFFIX : \".txt\"),\n                co.toString());\n          }\n          ok++;\n        }\n      } else {\n        if(outFiles.size() == 0 || !expError.isEmpty()) {\n          if(print) {\n            logOK2.append(logStr);\n            logOK2.append(\"[\" + testid + \" ] \");\n            logOK2.append(norm(expError));\n            logOK2.append(NL);\n            logOK2.append(\"[Rght?] \");\n            logOK2.append(norm(error));\n            logOK2.append(NL);\n            logOK2.append(NL);\n            addLog(pth, outname + \".log\", error);\n          }\n          ok2++;\n        } else {\n          if(print) {\n            logErr2.append(logStr);\n            logErr2.append(\"[\" + testid + \" ] \");\n            logErr2.append(norm(string(result.get(0))));\n            logErr2.append(NL);\n            logErr2.append(\"[Wrong] \");\n            logErr2.append(norm(error));\n            logErr2.append(NL);\n            logErr2.append(NL);\n            addLog(pth, outname + \".log\", error);\n          }\n          correct = false;\n          err2++;\n        }\n      }\n      if(curr != null) Close.close(context, curr.data);\n      xq.close();\n    }\n\n    if(reporting) {\n      logReport.append(\"    <test-case name=\\\"\");\n      logReport.append(outname);\n      logReport.append(\"\\\" result='\");\n      logReport.append(correct ? \"pass\" : \"fail\");\n      if(inspect) logReport.append(\"' todo='inspect\");\n      logReport.append(\"'/>\");\n      logReport.append(NL);\n    }\n\n    if(verbose) {\n      final long t = perf.getTime();\n      if(t > 100000000) Main.out(\": \" + Performance.getTimer(t, 1));\n      Main.outln();\n    }\n    return single == null || !outname.equals(single);\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Normalizes the specified string.\n   * @param in input string\n   * @return result\n   */\n  private String norm(final String in) {\n    //if(1 == 1) return in;\n\n    final StringBuilder sb = new StringBuilder();\n    int m = 0;\n    boolean s = false;\n    final int cl = in.length();\n    for(int c = 0; c < cl; c++) {\n      final char ch = in.charAt(c);\n      if(ch == '(' && c + 1 < cl && in.charAt(c + 1) == ':') {\n        if(m == 0 && !s) {\n          sb.append(' ');\n          s = true;\n        }\n        m++;\n        c++;\n      } else if(m != 0 && ch == ':' && c + 1 < cl && in.charAt(c + 1) == ')') {\n        m--;\n        c++;\n      } else if(m == 0) {\n        if(!s || ch > ' ') sb.append(ch);\n        s = ch <= ' ';\n      }\n    }\n    final String res = sb.toString().replaceAll(\"(\\r|\\n)+\", \" \").trim();\n    return res.length() < maxout ? res : res.substring(0, maxout) + \"...\";\n  }","id":8664,"modified_method":"/**\n   * Normalizes the specified string.\n   * @param in input string\n   * @return result\n   */\n  private String norm(final String in) {\n    final StringBuilder sb = new StringBuilder();\n    int m = 0;\n    boolean s = false;\n    final int cl = in.length();\n    for(int c = 0; c < cl && sb.length() < maxout; ++c) {\n      final char ch = in.charAt(c);\n      if(ch == '(' && c + 1 < cl && in.charAt(c + 1) == ':') {\n        if(m == 0 && !s) {\n          sb.append(' ');\n          s = true;\n        }\n        m++;\n        c++;\n      } else if(m != 0 && ch == ':' && c + 1 < cl && in.charAt(c + 1) == ')') {\n        m--;\n        c++;\n      } else if(m == 0) {\n        if(!s || ch > ' ') sb.append(ch);\n        s = ch <= ' ';\n      }\n    }\n    if(sb.length() >= maxout) sb.append(\"...\");\n    return sb.toString().replaceAll(\"(\\r|\\n)+\", \" \").trim();\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Assigns the nodes to the specified variables.\n   * @param nod nodes\n   * @param var variables\n   * @param ctx query context\n   * @throws QueryException query exception\n   */\n  private void var(final Nodes nod, final Nodes var, final QueryContext ctx)\n      throws QueryException {\n\n    for(int c = 0; c < nod.size(); c++) {\n      final byte[] nm = data.atom(nod.nodes[c]);\n      final String src = srcs.get(string(nm));\n\n      Expr expr = null;\n      if(src == null) {\n        expr = coll(nm, ctx);\n      } else {\n        expr = Str.get(src);\n      }\n      final Var v = new Var(new QNm(data.atom(var.nodes[c])));\n      ctx.vars.addGlobal(v.bind(expr, ctx));\n    }\n  }","id":8665,"modified_method":"/**\n   * Assigns the nodes to the specified variables.\n   * @param nod nodes\n   * @param var variables\n   * @param qp query processor\n   * @throws QueryException query exception\n   */\n  private void var(final Nodes nod, final Nodes var, final QueryProcessor qp)\n      throws QueryException {\n\n    for(int c = 0; c < nod.size(); ++c) {\n      final byte[] nm = data.atom(nod.nodes[c]);\n      final String src = srcs.get(string(nm));\n\n      Expr expr = null;\n      if(src == null) {\n        expr = coll(nm, qp);\n      } else {\n        expr = Str.get(src);\n      }\n      qp.bind(string(data.atom(var.nodes[c])), expr);\n    }\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Assigns a collection.\n   * @param name collection name\n   * @param ctx query context\n   * @return expression\n   * @throws QueryException query exception\n   */\n  private Expr coll(final byte[] name, final QueryContext ctx)\n      throws QueryException {\n\n    // assign collection\n    final NodIter col = new NodIter();\n    for(final byte[] cl : colls.get(string(name))) {\n      if(new File(string(cl)).exists()) col.add(ctx.doc(cl, true, false, null));\n      else Main.errln(\"Warning: \\\"%\\\" not found.\", cl);\n    }\n    ctx.addColl(col, name);\n    return Uri.uri(name);\n  }","id":8666,"modified_method":"/**\n   * Assigns a collection.\n   * @param name collection name\n   * @param qp query processor\n   * @return expression\n   * @throws QueryException query exception\n   */\n  private Expr coll(final byte[] name, final QueryProcessor qp)\n      throws QueryException {\n\n    // assign collection\n    final NodIter col = new NodIter();\n    for(final byte[] cl : colls.get(string(name))) {\n      if(new File(string(cl)).exists()) {\n        col.add(qp.ctx.doc(cl, true, false, null));\n      } else {\n        Main.errln(\"Warning: \\\"%\\\" not found.\", cl);\n      }\n    }\n    qp.ctx.addColl(col, name);\n    return Uri.uri(name);\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Returns the contents of the specified file.\n   * @param f file to be read\n   * @return content\n   */\n  private String read(final IO f) {\n    try {\n      return string(f.content()).replaceAll(\"\\r\\n?\", \"\\n\");\n    } catch(final IOException ex) {\n      ex.printStackTrace();\n      return \"\";\n    }\n  }","id":8667,"modified_method":"/**\n   * Returns the contents of the specified file.\n   * @param f file to be read\n   * @return content\n   */\n  private String read(final IO f) {\n    try {\n      return TextInput.content(f).toString().replaceAll(\"\\r\\n?\", \"\\n\");\n    } catch(final IOException ex) {\n      ex.printStackTrace();\n      return \"\";\n    }\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Returns the resulting query text (text node or attribute value).\r\n   * @param qu query\r\n   * @param root root node\r\n   * @return attribute value\r\n   * @throws Exception exception\r\n   */\r\n  private String text(final String qu, final Nodes root) throws Exception {\r\n    final Nodes n = nodes(qu, root);\r\n    final TokenBuilder sb = new TokenBuilder();\r\n    for(int i = 0; i < n.size(); i++) {\r\n      if(i != 0) sb.add(\"/\");\r\n      sb.add(data.atom(n.nodes[i]));\r\n    }\r\n    return sb.toString();\r\n  }","id":8668,"modified_method":"/**\r\n   * Returns the resulting query text (text node or attribute value).\r\n   * @param qu query\r\n   * @param root root node\r\n   * @return attribute value\r\n   * @throws Exception exception\r\n   */\r\n  private String text(final String qu, final Nodes root) throws Exception {\r\n    final Nodes n = nodes(qu, root);\r\n    final TokenBuilder sb = new TokenBuilder();\r\n    for(int i = 0; i < n.size(); ++i) {\r\n      if(i != 0) sb.add(\"/\");\r\n      sb.add(data.atom(n.nodes[i]));\r\n    }\r\n    return sb.toString();\r\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  void parse(final QueryContext qctx, final Nodes root) throws Exception {\n    qctx.stop = stop;\n    qctx.thes = thes;\n\n    for(final String s : aux(\"stopwords\", root)) {\n      final String fn = stop2.get(s);\n      if(fn != null) {\n        if(qctx.ftopt.sw == null) qctx.ftopt.sw = new StopWords();\n        qctx.ftopt.sw.read(IO.get(fn), false);\n      }\n    }\n\n    for(final String s : aux(\"stemming-dictionary\", root)) {\n      final String fn = stem.get(s);\n      if(fn != null) {\n        if(qctx.ftopt.sd == null) qctx.ftopt.sd = new StemDir();\n        qctx.ftopt.sd.read(IO.get(fn));\n      }\n    }\n\n    for(final String s : aux(\"thesaurus\", root)) {\n      final String fn = thes2.get(s);\n      if(fn != null) {\n        if(qctx.ftopt.th == null) qctx.ftopt.th = new ThesQuery();\n        qctx.ftopt.th.add(new Thesaurus(IO.get(fn), context));\n      }\n    }\n  }","id":8669,"modified_method":"@Override\n  void parse(final QueryProcessor qp, final Nodes root) throws Exception {\n    final QueryContext ctx = qp.ctx;\n    ctx.stop = stop;\n    ctx.thes = thes;\n\n    for(final String s : aux(\"stopwords\", root)) {\n      final String fn = stop2.get(s);\n      if(fn != null) {\n        if(ctx.ftopt.sw == null) ctx.ftopt.sw = new StopWords();\n        ctx.ftopt.sw.read(IO.get(fn), false);\n      }\n    }\n\n    for(final String s : aux(\"stemming-dictionary\", root)) {\n      final String fn = stem.get(s);\n      if(fn != null) {\n        if(ctx.ftopt.sd == null) ctx.ftopt.sd = new StemDir();\n        ctx.ftopt.sd.read(IO.get(fn));\n      }\n    }\n\n    for(final String s : aux(\"thesaurus\", root)) {\n      final String fn = thes2.get(s);\n      if(fn != null) {\n        if(ctx.ftopt.th == null) ctx.ftopt.th = new ThesQuery();\n        ctx.ftopt.th.add(new Thesaurus(IO.get(fn), context));\n      }\n    }\n  }","commit_id":"3d101ef7645a75649bbfed41805d4d2c07d38b9c","url":"https://github.com/BaseXdb/basex"},{"original_method":"private static String parseContext(Map context) {\n        StringBuffer buf = new StringBuffer();\n        Set keySet = context.keySet();\n        Iterator i = keySet.iterator();\n\n        while (i.hasNext()) {\n            Object name = i.next();\n            Object value = context.get(name);\n\n            if (value != null && (value instanceof String) && ((String) value).length() == 0) continue;\n            buf.append(name + \"=\");\n            buf.append(value);\n            if (i.hasNext())\n                buf.append(\"&\");\n        }\n        return buf.toString();\n    }","id":8670,"modified_method":"private static String parseContext(Map context) {\n        StringBuffer buf = new StringBuffer();\n        Set keySet = context.keySet();\n        Iterator i = keySet.iterator();\n\n        while (i.hasNext()) {\n            String name = (String) i.next();\n            Object valueObj = context.get(name);\n\n            if (valueObj == null || (valueObj instanceof String) && ((String) valueObj).length() == 0) {\n                // not valid; do nothing\n            } else {\n                String value = valueObj.toString();\n\n                // URL enocde each field to make sure it can pass to payflow properly\n                try {\n                    name = URLEncoder.encode(name, \"UTF-8\");\n                    value = URLEncoder.encode(value, \"UTF-8\");\n                } catch (UnsupportedEncodingException e) {\n                    Debug.logError(e, module);\n                    continue;\n                }\n\n                buf.append(name).append(\"=\");\n                buf.append(value);\n                if (i.hasNext())\n                    buf.append(\"&\");\n            }\n        }\n        return buf.toString();\n    }","commit_id":"51fcbe1094c2b6a126782fb9b9ada2d4d6813f40","url":"https://github.com/apache/ofbiz"},{"original_method":"/**\n     * Authorize credit card payment service. Service wrapper around PayFlow Pro API.\n     * @param dctx Service Engine DispatchContext.\n     * @param context Map context of parameters.\n     * @return Response map, including RESPMSG, and RESULT keys.\n     */\n    public static Map ccProcessor(DispatchContext dctx, Map context) {\n        GenericValue paymentPref = (GenericValue) context.get(\"orderPaymentPreference\");\n        GenericValue authTrans = (GenericValue) context.get(\"authTrans\");\n        String orderId = (String) context.get(\"orderId\");\n        String cvv2 = (String) context.get(\"cardSecurityCode\");\n        Double processAmount = (Double) context.get(\"processAmount\");\n        GenericValue party = (GenericValue) context.get(\"billToParty\");\n        GenericValue cc = (GenericValue) context.get(\"creditCard\");\n        GenericValue ps = (GenericValue) context.get(\"billingAddress\");\n        String configString = (String) context.get(\"paymentConfig\");\n        if (configString == null) {\n            configString = \"payment.properties\";\n        }\n\n        if (authTrans == null){\n            authTrans = PaymentGatewayServices.getAuthTransaction(paymentPref);\n        }\n\n        // set the orderId as comment1 so we can query in PF Manager\n        boolean isReAuth = false;\n        Map data = UtilMisc.toMap(\"COMMENT1\", orderId);\n        data.put(\"PONUM\", orderId);\n        data.put(\"CUSTCODE\", party.getString(\"partyId\"));\n\n        // transaction type\n        if (UtilProperties.propertyValueEqualsIgnoreCase(configString, \"payment.verisign.preAuth\", \"Y\")) {\n            data.put(\"TRXTYPE\", \"A\");\n            // only support re-auth for auth types; sale types don't do it\n            if (authTrans != null) {\n                String refNum = authTrans.getString(\"referenceNum\");\n                data.put(\"ORIGID\", refNum);\n                isReAuth = true;\n            }\n        } else {\n            data.put(\"TRXTYPE\", \"S\");\n        }\n\n        // credit card tender\n        data.put(\"TENDER\", \"C\");\n\n        // card security code\n        if (UtilValidate.isNotEmpty(cvv2)) {\n            data.put(\"CVV2\", cvv2);\n        }\n\n        // set the amount\n        data.put(\"AMT\", processAmount.toString());\n\n        // get the payment information\n        data.put(\"ACCT\", cc.getString(\"cardNumber\"));\n\n        // name on card\n        String name = cc.getString(\"firstNameOnCard\") + \" \" + cc.getString(\"lastNameOnCard\");\n        data.put(\"FIRSTNAME\", cc.getString(\"firstNameOnCard\"));\n        data.put(\"LASTNAME\", cc.getString(\"lastNameOnCard\"));\n        data.put(\"COMMENT2\", name);\n        if (cc.get(\"expireDate\") != null) {\n            String exp = cc.getString(\"expireDate\");\n            String expDate = exp.substring(0, 2);\n\n            expDate = expDate + exp.substring(exp.length() - 2);\n            data.put(\"EXPDATE\", expDate);\n        }\n\n        // gather the address info\n        if (ps != null) {\n            String street = ps.getString(\"address1\") +\n                (ps.get(\"address2\") != null && ps.getString(\"address2\").length() > 0 ? \" \" +\n                    ps.getString(\"address2\") : \"\");\n\n            data.put(\"STREET\", street);\n            data.put(\"ZIP\", ps.getString(\"postalCode\"));\n        }\n\n        PFProAPI pn = init(configString);\n\n        // get the base params\n        StringBuffer params = makeBaseParams(configString);\n\n        // parse the context parameters\n        params.append(\"&\" + parseContext(data));\n\n        // transmit the request\n        if (Debug.verboseOn()) Debug.logVerbose(\"Sending to Verisign: \" + params.toString(), module);\n        String resp = pn.SubmitTransaction(params.toString());\n\n        if (Debug.verboseOn()) Debug.logVerbose(\"Response from Verisign: \" + resp, module);\n\n        // reset for next use\n        pn.DestroyContext();\n\n        // check the response\n        Map result = ServiceUtil.returnSuccess();\n        parseAuthResponse(resp, result, configString, isReAuth);\n        result.put(\"processAmount\", processAmount);\n        return result;\n    }","id":8671,"modified_method":"/**\n     * Authorize credit card payment service. Service wrapper around PayFlow Pro API.\n     * @param dctx Service Engine DispatchContext.\n     * @param context Map context of parameters.\n     * @return Response map, including RESPMSG, and RESULT keys.\n     */\n    public static Map ccProcessor(DispatchContext dctx, Map context) {\n        GenericValue paymentPref = (GenericValue) context.get(\"orderPaymentPreference\");\n        GenericValue authTrans = (GenericValue) context.get(\"authTrans\");\n        String orderId = (String) context.get(\"orderId\");\n        String cvv2 = (String) context.get(\"cardSecurityCode\");\n        Double processAmount = (Double) context.get(\"processAmount\");\n        GenericValue party = (GenericValue) context.get(\"billToParty\");\n        GenericValue cc = (GenericValue) context.get(\"creditCard\");\n        GenericValue ps = (GenericValue) context.get(\"billingAddress\");\n        String configString = (String) context.get(\"paymentConfig\");\n        if (configString == null) {\n            configString = \"payment.properties\";\n        }\n\n        if (authTrans == null){\n            authTrans = PaymentGatewayServices.getAuthTransaction(paymentPref);\n        }\n\n        // set the orderId as comment1 so we can query in PF Manager\n        boolean isReAuth = false;\n        Map data = UtilMisc.toMap(\"COMMENT1\", orderId);\n        data.put(\"PONUM\", orderId);\n        data.put(\"CUSTCODE\", party.getString(\"partyId\"));\n\n        // transaction type\n        if (UtilProperties.propertyValueEqualsIgnoreCase(configString, \"payment.verisign.preAuth\", \"Y\")) {\n            data.put(\"TRXTYPE\", \"A\");\n            // only support re-auth for auth types; sale types don't do it\n            if (authTrans != null) {\n                String refNum = authTrans.getString(\"referenceNum\");\n                data.put(\"ORIGID\", refNum);\n                isReAuth = true;\n            }\n        } else {\n            data.put(\"TRXTYPE\", \"S\");\n        }\n\n        // credit card tender\n        data.put(\"TENDER\", \"C\");\n\n        // card security code\n        if (UtilValidate.isNotEmpty(cvv2)) {\n            data.put(\"CVV2\", cvv2);\n        }\n\n        // set the amount\n        data.put(\"AMT\", processAmount.toString());\n\n        // get the payment information\n        data.put(\"ACCT\", cc.getString(\"cardNumber\"));\n\n        // name on card\n        String name = cc.getString(\"firstNameOnCard\") + \" \" + cc.getString(\"lastNameOnCard\");\n        data.put(\"FIRSTNAME\", cc.getString(\"firstNameOnCard\"));\n        data.put(\"LASTNAME\", cc.getString(\"lastNameOnCard\"));\n        data.put(\"COMMENT2\", name);\n        if (cc.get(\"expireDate\") != null) {\n            String exp = cc.getString(\"expireDate\");\n            String expDate = exp.substring(0, 2);\n\n            expDate = expDate + exp.substring(exp.length() - 2);\n            data.put(\"EXPDATE\", expDate);\n        }\n\n        // gather the address info\n        if (ps != null) {\n            String street = ps.getString(\"address1\") +\n                (ps.get(\"address2\") != null && ps.getString(\"address2\").length() > 0 ? \" \" +\n                    ps.getString(\"address2\") : \"\");\n\n            data.put(\"STREET\", street);\n            data.put(\"ZIP\", ps.getString(\"postalCode\"));\n        }\n\n        PFProAPI pn = init(configString);\n\n        // get the base params\n        StringBuffer params = makeBaseParams(configString);\n\n        // parse the context parameters\n        params.append(\"&\").append(parseContext(data));\n\n        // transmit the request\n        if (Debug.verboseOn()) Debug.logVerbose(\"Sending to Verisign: \" + params.toString(), module);\n        String resp;\n        if (UtilProperties.propertyValueEqualsIgnoreCase(configString, \"payment.verisign.enable_transmit\", \"true\")) {\n            resp = pn.SubmitTransaction(params.toString());\n        } else {\n            resp = \"RESULT=0&AUTHCODE=T&PNREF=\" + (new Date()).getTime() + \"&RESPMSG=Testing\";\n        } \n\n        if (Debug.verboseOn()) Debug.logVerbose(\"Response from Verisign: \" + resp, module);\n\n        // reset for next use\n        pn.DestroyContext();\n\n        // check the response\n        Map result = ServiceUtil.returnSuccess();\n        parseAuthResponse(resp, result, configString, isReAuth);\n        result.put(\"processAmount\", processAmount);\n        return result;\n    }","commit_id":"51fcbe1094c2b6a126782fb9b9ada2d4d6813f40","url":"https://github.com/apache/ofbiz"},{"original_method":"public static Map ccRefund(DispatchContext dctx, Map context) {\n        GenericValue paymentPref = (GenericValue) context.get(\"orderPaymentPreference\");\n        Double amount = (Double) context.get(\"refundAmount\");\n        String configString = (String) context.get(\"paymentConfig\");\n        if (configString == null) {\n            configString = \"payment.properties\";\n        }\n\n        GenericValue captureTrans = PaymentGatewayServices.getCaptureTransaction(paymentPref);\n\n\n        if (captureTrans == null) {\n            return ServiceUtil.returnError(\"No capture transaction found for the OrderPaymentPreference; cannot refund\");\n        }\n\n        // auth ref number\n        String refNum = captureTrans.getString(\"referenceNum\");\n        Map data = UtilMisc.toMap(\"ORIGID\", refNum);\n\n        // tx type (Credit)\n        data.put(\"TRXTYPE\", \"C\");\n\n        // credit card tender\n        data.put(\"TENDER\", \"C\");\n\n        // get the orderID\n        String orderId = paymentPref.getString(\"orderId\");\n        data.put(\"COMMENT1\", orderId);\n\n        // amount to capture\n        data.put(\"AMT\", amount.toString());\n\n        PFProAPI pn = init(configString);\n\n        // get the base params\n        StringBuffer params = makeBaseParams(configString);\n\n        // parse the context parameters\n        params.append(\"&\" + parseContext(data));\n\n        // transmit the request\n        if (Debug.verboseOn()) Debug.logVerbose(\"Sending to Verisign: \" + params.toString(), module);\n        String resp = pn.SubmitTransaction(params.toString());\n\n        if (Debug.verboseOn()) Debug.logVerbose(\"Response from Verisign: \" + resp, module);\n\n        // reset for next use\n        pn.DestroyContext();\n\n        // check the response\n        Map result = ServiceUtil.returnSuccess();\n        parseRefundResponse(resp, result, configString);\n        result.put(\"refundAmount\", amount);\n        return result;\n    }","id":8672,"modified_method":"public static Map ccRefund(DispatchContext dctx, Map context) {\n        GenericValue paymentPref = (GenericValue) context.get(\"orderPaymentPreference\");\n        Double amount = (Double) context.get(\"refundAmount\");\n        String configString = (String) context.get(\"paymentConfig\");\n        if (configString == null) {\n            configString = \"payment.properties\";\n        }\n\n        GenericValue captureTrans = PaymentGatewayServices.getCaptureTransaction(paymentPref);\n\n\n        if (captureTrans == null) {\n            return ServiceUtil.returnError(\"No capture transaction found for the OrderPaymentPreference; cannot refund\");\n        }\n\n        // auth ref number\n        String refNum = captureTrans.getString(\"referenceNum\");\n        Map data = UtilMisc.toMap(\"ORIGID\", refNum);\n\n        // tx type (Credit)\n        data.put(\"TRXTYPE\", \"C\");\n\n        // credit card tender\n        data.put(\"TENDER\", \"C\");\n\n        // get the orderID\n        String orderId = paymentPref.getString(\"orderId\");\n        data.put(\"COMMENT1\", orderId);\n\n        // amount to capture\n        data.put(\"AMT\", amount.toString());\n\n        PFProAPI pn = init(configString);\n\n        // get the base params\n        StringBuffer params = makeBaseParams(configString);\n\n        // parse the context parameters\n        params.append(\"&\").append(parseContext(data));\n\n        // transmit the request\n        if (Debug.verboseOn()) Debug.logVerbose(\"Sending to Verisign: \" + params.toString(), module);\n        String resp;\n        if (UtilProperties.propertyValueEqualsIgnoreCase(configString, \"payment.verisign.enable_transmit\", \"true\")) {\n            resp = pn.SubmitTransaction(params.toString());\n        } else {\n            resp = \"RESULT=0&AUTHCODE=T&PNREF=\" + (new Date()).getTime() + \"&RESPMSG=Testing\";\n        } \n\n        if (Debug.verboseOn()) Debug.logVerbose(\"Response from Verisign: \" + resp, module);\n\n        // reset for next use\n        pn.DestroyContext();\n\n        // check the response\n        Map result = ServiceUtil.returnSuccess();\n        parseRefundResponse(resp, result);\n        result.put(\"refundAmount\", amount);\n        return result;\n    }","commit_id":"51fcbe1094c2b6a126782fb9b9ada2d4d6813f40","url":"https://github.com/apache/ofbiz"},{"original_method":"private static void parseRefundResponse(String resp, Map result, String resource) {\n        Map parameters = new LinkedMap();\n        List params = StringUtil.split(resp, \"&\");\n        Iterator i = params.iterator();\n\n        while (i.hasNext()) {\n            String str = (String) i.next();\n\n            if (str.length() > 0) {\n                List kv = StringUtil.split(str, \"=\");\n                Object k = kv.get(0);\n                Object v = kv.get(1);\n\n                if (k != null && v != null)\n                    parameters.put(k, v);\n            }\n        }\n        String respCode = (String) parameters.get(\"RESULT\");\n\n        if (respCode.equals(\"0\")) {\n            result.put(\"refundResult\", Boolean.TRUE);\n            result.put(\"refundCode\", parameters.get(\"AUTHCODE\"));\n        } else {\n            result.put(\"refundResult\", Boolean.FALSE);\n        }\n        result.put(\"refundRefNum\", parameters.get(\"PNREF\"));\n        result.put(\"refundFlag\", parameters.get(\"RESULT\"));\n        result.put(\"refundMessage\", parameters.get(\"RESPMSG\"));\n    }","id":8673,"modified_method":"private static void parseRefundResponse(String resp, Map result) {\n        Map parameters = new LinkedMap();\n        List params = StringUtil.split(resp, \"&\");\n        Iterator i = params.iterator();\n\n        while (i.hasNext()) {\n            String str = (String) i.next();\n\n            if (str.length() > 0) {\n                List kv = StringUtil.split(str, \"=\");\n                Object k = kv.get(0);\n                Object v = kv.get(1);\n\n                if (k != null && v != null)\n                    parameters.put(k, v);\n            }\n        }\n        String respCode = (String) parameters.get(\"RESULT\");\n\n        if (respCode.equals(\"0\")) {\n            result.put(\"refundResult\", Boolean.TRUE);\n            result.put(\"refundCode\", parameters.get(\"AUTHCODE\"));\n        } else {\n            result.put(\"refundResult\", Boolean.FALSE);\n        }\n        result.put(\"refundRefNum\", parameters.get(\"PNREF\"));\n        result.put(\"refundFlag\", parameters.get(\"RESULT\"));\n        result.put(\"refundMessage\", parameters.get(\"RESPMSG\"));\n    }","commit_id":"51fcbe1094c2b6a126782fb9b9ada2d4d6813f40","url":"https://github.com/apache/ofbiz"},{"original_method":"private static void parseVoidResponse(String resp, Map result, String resource) {\n        Map parameters = new LinkedMap();\n        List params = StringUtil.split(resp, \"&\");\n        Iterator i = params.iterator();\n\n        while (i.hasNext()) {\n            String str = (String) i.next();\n\n            if (str.length() > 0) {\n                List kv = StringUtil.split(str, \"=\");\n                Object k = kv.get(0);\n                Object v = kv.get(1);\n\n                if (k != null && v != null)\n                    parameters.put(k, v);\n            }\n        }\n        String respCode = (String) parameters.get(\"RESULT\");\n\n        if (respCode.equals(\"0\")) {\n            result.put(\"releaseResult\", Boolean.TRUE);\n            result.put(\"releaseCode\", parameters.get(\"AUTHCODE\"));\n        } else {\n            result.put(\"releaseResult\", Boolean.FALSE);\n        }\n        result.put(\"releaseRefNum\", parameters.get(\"PNREF\"));\n        result.put(\"releaseFlag\", parameters.get(\"RESULT\"));\n        result.put(\"releaseMessage\", parameters.get(\"RESPMSG\"));\n    }","id":8674,"modified_method":"private static void parseVoidResponse(String resp, Map result) {\n        Map parameters = new LinkedMap();\n        List params = StringUtil.split(resp, \"&\");\n        Iterator i = params.iterator();\n\n        while (i.hasNext()) {\n            String str = (String) i.next();\n\n            if (str.length() > 0) {\n                List kv = StringUtil.split(str, \"=\");\n                Object k = kv.get(0);\n                Object v = kv.get(1);\n\n                if (k != null && v != null)\n                    parameters.put(k, v);\n            }\n        }\n        String respCode = (String) parameters.get(\"RESULT\");\n\n        if (respCode.equals(\"0\")) {\n            result.put(\"releaseResult\", Boolean.TRUE);\n            result.put(\"releaseCode\", parameters.get(\"AUTHCODE\"));\n        } else {\n            result.put(\"releaseResult\", Boolean.FALSE);\n        }\n        result.put(\"releaseRefNum\", parameters.get(\"PNREF\"));\n        result.put(\"releaseFlag\", parameters.get(\"RESULT\"));\n        result.put(\"releaseMessage\", parameters.get(\"RESPMSG\"));\n    }","commit_id":"51fcbe1094c2b6a126782fb9b9ada2d4d6813f40","url":"https://github.com/apache/ofbiz"},{"original_method":"public static Map ccVoid(DispatchContext dctx, Map context) {\n        GenericValue paymentPref = (GenericValue) context.get(\"orderPaymentPreference\");\n        GenericValue authTrans = (GenericValue) context.get(\"authTrans\");\n        Double amount = (Double) context.get(\"releaseAmount\");\n        String configString = (String) context.get(\"paymentConfig\");\n        if (configString == null) {\n            configString = \"payment.properties\";\n        }\n\n        if (authTrans == null){\n            authTrans = PaymentGatewayServices.getAuthTransaction(paymentPref);\n        }\n\n        if (authTrans == null) {\n            return ServiceUtil.returnError(\"No authorization transaction found for the OrderPaymentPreference; cannot capture\");\n        }\n\n        // auth ref number\n        String refNum = authTrans.getString(\"referenceNum\");\n        Map data = UtilMisc.toMap(\"ORIGID\", refNum);\n\n        // tx type (Void)\n        data.put(\"TRXTYPE\", \"V\");\n\n        // credit card tender\n        data.put(\"TENDER\", \"C\");\n\n        // get the orderID\n        String orderId = paymentPref.getString(\"orderId\");\n        data.put(\"COMMENT1\", orderId);\n\n        // amount to capture\n        data.put(\"AMT\", amount.toString());\n\n        PFProAPI pn = init(configString);\n\n        // get the base params\n        StringBuffer params = makeBaseParams(configString);\n\n        // parse the context parameters\n        params.append(\"&\" + parseContext(data));\n\n        // transmit the request\n        if (Debug.verboseOn()) Debug.logVerbose(\"Sending to Verisign: \" + params.toString(), module);\n        String resp = pn.SubmitTransaction(params.toString());\n\n        if (Debug.verboseOn()) Debug.logVerbose(\"Response from Verisign: \" + resp, module);\n\n        // reset for next use\n        pn.DestroyContext();\n\n        // check the response\n        Map result = ServiceUtil.returnSuccess();\n        parseVoidResponse(resp, result, configString);\n        result.put(\"releaseAmount\", amount);\n        return result;\n    }","id":8675,"modified_method":"public static Map ccVoid(DispatchContext dctx, Map context) {\n        GenericValue paymentPref = (GenericValue) context.get(\"orderPaymentPreference\");\n        GenericValue authTrans = (GenericValue) context.get(\"authTrans\");\n        Double amount = (Double) context.get(\"releaseAmount\");\n        String configString = (String) context.get(\"paymentConfig\");\n        if (configString == null) {\n            configString = \"payment.properties\";\n        }\n\n        if (authTrans == null){\n            authTrans = PaymentGatewayServices.getAuthTransaction(paymentPref);\n        }\n\n        if (authTrans == null) {\n            return ServiceUtil.returnError(\"No authorization transaction found for the OrderPaymentPreference; cannot capture\");\n        }\n\n        // auth ref number\n        String refNum = authTrans.getString(\"referenceNum\");\n        Map data = UtilMisc.toMap(\"ORIGID\", refNum);\n\n        // tx type (Void)\n        data.put(\"TRXTYPE\", \"V\");\n\n        // credit card tender\n        data.put(\"TENDER\", \"C\");\n\n        // get the orderID\n        String orderId = paymentPref.getString(\"orderId\");\n        data.put(\"COMMENT1\", orderId);\n\n        // amount to capture\n        data.put(\"AMT\", amount.toString());\n\n        PFProAPI pn = init(configString);\n\n        // get the base params\n        StringBuffer params = makeBaseParams(configString);\n\n        // parse the context parameters\n        params.append(\"&\").append(parseContext(data));\n\n        // transmit the request\n        if (Debug.verboseOn()) Debug.logVerbose(\"Sending to Verisign: \" + params.toString(), module);\n        String resp;\n        if (UtilProperties.propertyValueEqualsIgnoreCase(configString, \"payment.verisign.enable_transmit\", \"true\")) {\n            resp = pn.SubmitTransaction(params.toString());\n        } else {\n            resp = \"RESULT=0&AUTHCODE=T&PNREF=\" + (new Date()).getTime() + \"&RESPMSG=Testing\";\n        }\n\n        if (Debug.verboseOn()) Debug.logVerbose(\"Response from Verisign: \" + resp, module);\n\n        // reset for next use\n        pn.DestroyContext();\n\n        // check the response\n        Map result = ServiceUtil.returnSuccess();\n        parseVoidResponse(resp, result);\n        result.put(\"releaseAmount\", amount);\n        return result;\n    }","commit_id":"51fcbe1094c2b6a126782fb9b9ada2d4d6813f40","url":"https://github.com/apache/ofbiz"},{"original_method":"public static Map ccCapture(DispatchContext dctx, Map context) {\n        GenericValue paymentPref = (GenericValue) context.get(\"orderPaymentPreference\");\n        GenericValue authTrans = (GenericValue) context.get(\"authTrans\");\n        Double amount = (Double) context.get(\"captureAmount\");\n        String configString = (String) context.get(\"paymentConfig\");\n        if (configString == null) {\n            configString = \"payment.properties\";\n        }\n\n        if (authTrans == null){\n            authTrans = PaymentGatewayServices.getAuthTransaction(paymentPref);\n        }\n\n        if (authTrans == null) {\n            return ServiceUtil.returnError(\"No authorization transaction found for the OrderPaymentPreference; cannot capture\");\n        }\n\n        // auth ref number\n        String refNum = authTrans.getString(\"referenceNum\");\n        Map data = UtilMisc.toMap(\"ORIGID\", refNum);\n\n        // tx type (Delayed Capture)\n        data.put(\"TRXTYPE\", \"D\");\n\n        // credit card tender\n        data.put(\"TENDER\", \"C\");\n\n        // get the orderID\n        String orderId = paymentPref.getString(\"orderId\");\n        data.put(\"COMMENT1\", orderId);\n\n        // amount to capture\n        data.put(\"AMT\", amount.toString());\n\n        PFProAPI pn = init(configString);\n\n        // get the base params\n        StringBuffer params = makeBaseParams(configString);\n\n        // parse the context parameters\n        params.append(\"&\" + parseContext(data));\n\n        // transmit the request\n        if (Debug.verboseOn()) Debug.logVerbose(\"Sending to Verisign: \" + params.toString(), module);\n        String resp = pn.SubmitTransaction(params.toString());\n\n        if (Debug.verboseOn()) Debug.logVerbose(\"Response from Verisign: \" + resp, module);\n\n        // reset for next use\n        pn.DestroyContext();\n\n        // check the response\n        Map result = ServiceUtil.returnSuccess();\n        parseCaptureResponse(resp, result, configString);\n        result.put(\"captureAmount\", amount);\n        return result;\n    }","id":8676,"modified_method":"public static Map ccCapture(DispatchContext dctx, Map context) {\n        GenericValue paymentPref = (GenericValue) context.get(\"orderPaymentPreference\");\n        GenericValue authTrans = (GenericValue) context.get(\"authTrans\");\n        Double amount = (Double) context.get(\"captureAmount\");\n        String configString = (String) context.get(\"paymentConfig\");\n        if (configString == null) {\n            configString = \"payment.properties\";\n        }\n\n        if (authTrans == null){\n            authTrans = PaymentGatewayServices.getAuthTransaction(paymentPref);\n        }\n\n        if (authTrans == null) {\n            return ServiceUtil.returnError(\"No authorization transaction found for the OrderPaymentPreference; cannot capture\");\n        }\n\n        // auth ref number\n        String refNum = authTrans.getString(\"referenceNum\");\n        Map data = UtilMisc.toMap(\"ORIGID\", refNum);\n\n        // tx type (Delayed Capture)\n        data.put(\"TRXTYPE\", \"D\");\n\n        // credit card tender\n        data.put(\"TENDER\", \"C\");\n\n        // get the orderID\n        String orderId = paymentPref.getString(\"orderId\");\n        data.put(\"COMMENT1\", orderId);\n\n        // amount to capture\n        data.put(\"AMT\", amount.toString());\n\n        PFProAPI pn = init(configString);\n\n        // get the base params\n        StringBuffer params = makeBaseParams(configString);\n\n        // parse the context parameters\n        params.append(\"&\").append(parseContext(data));\n\n        // transmit the request\n        if (Debug.verboseOn()) Debug.logVerbose(\"Sending to Verisign: \" + params.toString(), module);\n        String resp;\n        if (UtilProperties.propertyValueEqualsIgnoreCase(configString, \"payment.verisign.enable_transmit\", \"true\")) {\n            resp = pn.SubmitTransaction(params.toString());\n        } else {\n            resp = \"RESULT=0&AUTHCODE=T&PNREF=\" + (new Date()).getTime() + \"&RESPMSG=Testing\";\n        }\n\n        if (Debug.verboseOn()) Debug.logVerbose(\"Response from Verisign: \" + resp, module);\n\n        // reset for next use\n        pn.DestroyContext();\n\n        // check the response\n        Map result = ServiceUtil.returnSuccess();\n        parseCaptureResponse(resp, result);\n        result.put(\"captureAmount\", amount);\n        return result;\n    }","commit_id":"51fcbe1094c2b6a126782fb9b9ada2d4d6813f40","url":"https://github.com/apache/ofbiz"},{"original_method":"private static void parseCaptureResponse(String resp, Map result, String resource) {\n        Map parameters = new LinkedMap();\n        List params = StringUtil.split(resp, \"&\");\n        Iterator i = params.iterator();\n\n        while (i.hasNext()) {\n            String str = (String) i.next();\n\n            if (str.length() > 0) {\n                List kv = StringUtil.split(str, \"=\");\n                Object k = kv.get(0);\n                Object v = kv.get(1);\n\n                if (k != null && v != null)\n                    parameters.put(k, v);\n            }\n        }\n        String respCode = (String) parameters.get(\"RESULT\");\n\n        if (respCode.equals(\"0\")) {\n            result.put(\"captureResult\", Boolean.TRUE);\n            result.put(\"captureCode\", parameters.get(\"AUTHCODE\"));\n        } else {\n            result.put(\"captureResult\", Boolean.FALSE);\n        }\n        result.put(\"captureRefNum\", parameters.get(\"PNREF\"));\n        result.put(\"captureFlag\", parameters.get(\"RESULT\"));\n        result.put(\"captureMessage\", parameters.get(\"RESPMSG\"));\n    }","id":8677,"modified_method":"private static void parseCaptureResponse(String resp, Map result) {\n        Map parameters = new LinkedMap();\n        List params = StringUtil.split(resp, \"&\");\n        Iterator i = params.iterator();\n\n        while (i.hasNext()) {\n            String str = (String) i.next();\n\n            if (str.length() > 0) {\n                List kv = StringUtil.split(str, \"=\");\n                Object k = kv.get(0);\n                Object v = kv.get(1);\n\n                if (k != null && v != null)\n                    parameters.put(k, v);\n            }\n        }\n        String respCode = (String) parameters.get(\"RESULT\");\n\n        if (respCode.equals(\"0\")) {\n            result.put(\"captureResult\", Boolean.TRUE);\n            result.put(\"captureCode\", parameters.get(\"AUTHCODE\"));\n        } else {\n            Debug.logWarning(\"In PayflowPro failing authorization; respCode/RESULT=\" + respCode + \"; PNREF=\" + parameters.get(\"PNREF\") + \"; AUTHCODE=\" + parameters.get(\"AUTHCODE\"), module);\n\n            result.put(\"captureResult\", Boolean.FALSE);\n        }\n        result.put(\"captureRefNum\", parameters.get(\"PNREF\"));\n        result.put(\"captureFlag\", parameters.get(\"RESULT\"));\n        result.put(\"captureMessage\", parameters.get(\"RESPMSG\"));\n    }","commit_id":"51fcbe1094c2b6a126782fb9b9ada2d4d6813f40","url":"https://github.com/apache/ofbiz"},{"original_method":"public synchronized void unregisterMBeanServer(ServiceReference ref) {\n        if (mbeanServer != null) {\n            try {\n                mbeanServer.removeNotificationListener(new ObjectName(\"JMImplementation:type=MBeanServerDelegate\"), this);\n                unregisterDomains();\n            } catch (Exception e) {\n                logger.warn(\"An error occurred during mbean server unregistration. This exception will be ignored.\", e);\n            }\n        }\n        mbeanServer = null;\n        bundleContext.ungetService(ref);\n    }","id":8678,"modified_method":"public synchronized void unregisterMBeanServer(ServiceReference ref) {\n        if (mbeanServer != null) {\n            try {\n                mbeanServer.removeNotificationListener(new ObjectName(\"JMImplementation:type=MBeanServerDelegate\"), this);\n                unregisterDomains();\n            } catch (Exception e) {\n                LOGGER.warn(\"An error occurred during mbean server unregistration. This exception will be ignored.\", e);\n            }\n        }\n        mbeanServer = null;\n        bundleContext.ungetService(ref);\n    }","commit_id":"2740d00a7bd3f89737c6365966e4e00a935aae0b","url":"https://github.com/fabric8io/fabric8"},{"original_method":"/**\n     * Receives notification of a Configuration that has changed.\n     *\n     * @param event The <code>ConfigurationEvent<\/code>.\n     */\n    @Override\n    public void configurationEvent(ConfigurationEvent event) {\n        try {\n            if (zooKeeper.isConnected()) {\n                Container current = getContainer();\n\n                String name = System.getProperty(SystemProperties.KARAF_NAME);\n                if (event.getPid().equals(SSH_PID) && event.getType() == ConfigurationEvent.CM_UPDATED) {\n                    Configuration config = configurationAdmin.getConfiguration(SSH_PID);\n                    int sshPort = Integer.parseInt((String) config.getProperties().get(SSH_KEY));\n                    String sshUrl = getSshUrl(name, sshPort);\n                    ZooKeeperUtils.set(zooKeeper, CONTAINER_SSH.getPath(name), sshUrl);\n                    fabricService.getPortService().unRegisterPort(current, SSH_PID);\n                    fabricService.getPortService().registerPort(current, SSH_PID, SSH_KEY, sshPort);\n                }\n                if (event.getPid().equals(HTTP_PID) && event.getType() == ConfigurationEvent.CM_UPDATED) {\n                    Configuration config = configurationAdmin.getConfiguration(HTTP_PID);\n                    int httpPort = Integer.parseInt((String) config.getProperties().get(HTTP_KEY));\n                    String httpUrl = getSshUrl(name, httpPort);\n                    ZooKeeperUtils.set(zooKeeper, CONTAINER_HTTP.getPath(name), httpUrl);\n                    fabricService.getPortService().unRegisterPort(current, HTTP_PID);\n                    fabricService.getPortService().registerPort(current, HTTP_PID, HTTP_KEY, httpPort);\n\n                }\n                if (event.getPid().equals(MANAGEMENT_PID) && event.getType() == ConfigurationEvent.CM_UPDATED) {\n                    Configuration config = configurationAdmin.getConfiguration(MANAGEMENT_PID);\n                    int rmiServerPort = Integer.parseInt((String) config.getProperties().get(RMI_SERVER_KEY));\n                    int rmiRegistryPort = Integer.parseInt((String) config.getProperties().get(RMI_REGISTRY_KEY));\n                    String sshUrl = getJmxUrl(name, rmiRegistryPort, rmiServerPort);\n                    ZooKeeperUtils.set(zooKeeper, CONTAINER_JMX.getPath(name), sshUrl);\n                    fabricService.getPortService().unRegisterPort(current, MANAGEMENT_PID);\n                    fabricService.getPortService().registerPort(current, MANAGEMENT_PID, RMI_SERVER_KEY, rmiServerPort);\n                    fabricService.getPortService().registerPort(current, MANAGEMENT_PID, RMI_REGISTRY_KEY, rmiRegistryPort);\n\n                }\n            }\n        } catch (Exception e) {\n\n        }\n    }","id":8679,"modified_method":"/**\n     * Receives notification of a Configuration that has changed.\n     *\n     * @param event The <code>ConfigurationEvent<\/code>.\n     */\n    @Override\n    public void configurationEvent(ConfigurationEvent event) {\n        try {\n            if (zooKeeper.isConnected()) {\n                Container current = getContainer();\n\n                String name = System.getProperty(SystemProperties.KARAF_NAME);\n                if (event.getPid().equals(SSH_PID) && event.getType() == ConfigurationEvent.CM_UPDATED) {\n                    Configuration config = configurationAdmin.getConfiguration(SSH_PID);\n                    int sshPort = Integer.parseInt((String) config.getProperties().get(SSH_KEY));\n                    String sshUrl = getSshUrl(name, sshPort);\n                    ZooKeeperUtils.set(zooKeeper, CONTAINER_SSH.getPath(name), sshUrl);\n                    if (fabricService.getPortService().lookupPort(current, SSH_PID, SSH_KEY) != sshPort) {\n                        fabricService.getPortService().unRegisterPort(current, SSH_PID);\n                        fabricService.getPortService().registerPort(current, SSH_PID, SSH_KEY, sshPort);\n                    }\n                }\n                if (event.getPid().equals(HTTP_PID) && event.getType() == ConfigurationEvent.CM_UPDATED) {\n                    Configuration config = configurationAdmin.getConfiguration(HTTP_PID);\n                    int httpPort = Integer.parseInt((String) config.getProperties().get(HTTP_KEY));\n                    String httpUrl = getSshUrl(name, httpPort);\n                    ZooKeeperUtils.set(zooKeeper, CONTAINER_HTTP.getPath(name), httpUrl);\n                    if (fabricService.getPortService().lookupPort(current, HTTP_PID, HTTP_KEY) != httpPort) {\n                        fabricService.getPortService().unRegisterPort(current, HTTP_PID);\n                        fabricService.getPortService().registerPort(current, HTTP_PID, HTTP_KEY, httpPort);\n                    }\n                }\n                if (event.getPid().equals(MANAGEMENT_PID) && event.getType() == ConfigurationEvent.CM_UPDATED) {\n                    Configuration config = configurationAdmin.getConfiguration(MANAGEMENT_PID);\n                    int rmiServerPort = Integer.parseInt((String) config.getProperties().get(RMI_SERVER_KEY));\n                    int rmiRegistryPort = Integer.parseInt((String) config.getProperties().get(RMI_REGISTRY_KEY));\n                    String jmxUrl = getJmxUrl(name, rmiRegistryPort, rmiServerPort);\n                    ZooKeeperUtils.set(zooKeeper, CONTAINER_JMX.getPath(name), jmxUrl);\n                    if (fabricService.getPortService().lookupPort(current, MANAGEMENT_PID, RMI_REGISTRY_KEY) != rmiRegistryPort\n                            || fabricService.getPortService().lookupPort(current, MANAGEMENT_PID, RMI_SERVER_KEY) != rmiServerPort) {\n                        fabricService.getPortService().unRegisterPort(current, MANAGEMENT_PID);\n                        fabricService.getPortService().registerPort(current, MANAGEMENT_PID, RMI_SERVER_KEY, rmiServerPort);\n                        fabricService.getPortService().registerPort(current, MANAGEMENT_PID, RMI_REGISTRY_KEY, rmiRegistryPort);\n                    }\n\n                }\n            }\n        } catch (Exception e) {\n\n        }\n    }","commit_id":"2740d00a7bd3f89737c6365966e4e00a935aae0b","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public void onDisconnected() {\n        logger.trace(\"onDisconnected\");\n        // noop\n    }","id":8680,"modified_method":"public void onDisconnected() {\n        LOGGER.trace(\"onDisconnected\");\n        // noop\n    }","commit_id":"2740d00a7bd3f89737c6365966e4e00a935aae0b","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public void destroy() {\n        logger.trace(\"destroy\");\n        try {\n            unregisterDomains();\n        } catch (ServiceException e) {\n            logger.trace(\"ZooKeeper is no longer available\", e);\n        } catch (Exception e) {\n            logger.warn(\"An error occurred during disconnecting to zookeeper. This exception will be ignored.\", e);\n        }\n    }","id":8681,"modified_method":"public void destroy() {\n        LOGGER.trace(\"destroy\");\n        try {\n            unregisterDomains();\n        } catch (ServiceException e) {\n            LOGGER.trace(\"ZooKeeper is no longer available\", e);\n        } catch (Exception e) {\n            LOGGER.warn(\"An error occurred during disconnecting to zookeeper. This exception will be ignored.\", e);\n        }\n    }","commit_id":"2740d00a7bd3f89737c6365966e4e00a935aae0b","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public synchronized void registerMBeanServer(ServiceReference ref) {\n        try {\n            String name = System.getProperty(SystemProperties.KARAF_NAME);\n            mbeanServer = (MBeanServer) bundleContext.getService(ref);\n            if (mbeanServer != null) {\n                mbeanServer.addNotificationListener(new ObjectName(\"JMImplementation:type=MBeanServerDelegate\"), this, null, name);\n                registerDomains();\n            }\n        } catch (Exception e) {\n            logger.warn(\"An error occurred during mbean server registration. This exception will be ignored.\", e);\n        }\n    }","id":8682,"modified_method":"public synchronized void registerMBeanServer(ServiceReference ref) {\n        try {\n            String name = System.getProperty(SystemProperties.KARAF_NAME);\n            mbeanServer = (MBeanServer) bundleContext.getService(ref);\n            if (mbeanServer != null) {\n                mbeanServer.addNotificationListener(new ObjectName(\"JMImplementation:type=MBeanServerDelegate\"), this, null, name);\n                registerDomains();\n            }\n        } catch (Exception e) {\n            LOGGER.warn(\"An error occurred during mbean server registration. This exception will be ignored.\", e);\n        }\n    }","commit_id":"2740d00a7bd3f89737c6365966e4e00a935aae0b","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public synchronized void onConnected() {\n        final String name = System.getProperty(SystemProperties.KARAF_NAME);\n        String version = System.getProperty(\"fabric.version\", ZkDefs.DEFAULT_VERSION);\n        String profiles = System.getProperty(\"fabric.profiles\");\n        logger.trace(\"onConnected\");\n\n        String nodeAlive = CONTAINER_ALIVE.getPath(name);\n        try {\n\n            if (profiles != null) {\n                String versionNode = CONFIG_CONTAINER.getPath(name);\n                String profileNode = CONFIG_VERSIONS_CONTAINER.getPath(version, name);\n                ZooKeeperUtils.createDefault(zooKeeper, versionNode, version);\n                ZooKeeperUtils.createDefault(zooKeeper, profileNode, profiles);\n            }\n\n            Stat stat = ZooKeeperUtils.exists(zooKeeper, nodeAlive);\n            if (stat != null) {\n                if (stat.getEphemeralOwner() != zooKeeper.getSessionId()) {\n                    zooKeeper.delete(nodeAlive);\n                    zooKeeper.createWithParents(nodeAlive, CreateMode.EPHEMERAL);\n                }\n            } else {\n                zooKeeper.createWithParents(nodeAlive, CreateMode.EPHEMERAL);\n            }\n\n            String domainsNode = CONTAINER_DOMAINS.getPath(name);\n            stat = ZooKeeperUtils.exists(zooKeeper, domainsNode);\n            if (stat != null) {\n                zooKeeper.deleteWithChildren(domainsNode);\n            }\n\n            ZooKeeperUtils.createDefault(zooKeeper, CONTAINER_RESOLVER.getPath(name), getContainerResolutionPolicy(zooKeeper, name));\n            ZooKeeperUtils.set(zooKeeper, CONTAINER_LOCAL_HOSTNAME.getPath(name), HostUtils.getLocalHostName());\n            ZooKeeperUtils.set(zooKeeper, CONTAINER_LOCAL_IP.getPath(name), HostUtils.getLocalIp());\n            ZooKeeperUtils.set(zooKeeper, CONTAINER_IP.getPath(name), getContainerPointer(zooKeeper, name));\n            ZooKeeperUtils.createDefault(zooKeeper, CONTAINER_GEOLOCATION.getPath(name), HostUtils.getGeoLocation());\n            //Check if there are addresses specified as system properties and use them if there is not an existing value in the registry.\n            //Mostly usable for adding values when creating containers without an existing ensemble.\n            for (String resolver : ZkDefs.VALID_RESOLVERS) {\n                String address = System.getProperty(resolver);\n                if (address != null && !address.isEmpty() && ZooKeeperUtils.exists(zooKeeper, CONTAINER_ADDRESS.getPath(name, resolver)) == null) {\n                    ZooKeeperUtils.set(zooKeeper, CONTAINER_ADDRESS.getPath(name, resolver), address);\n                }\n            }\n\n            //We are creating a dummy container object, since this might be called before the actual container is ready.\n            Container current = getContainer();\n\n            registerJmx(current);\n            registerSsh(current);\n            registerHttp(current);\n\n            //Set the port range values\n            String minimumPort = System.getProperty(ZkDefs.MINIMUM_PORT);\n            String maximumPort = System.getProperty(ZkDefs.MAXIMUM_PORT);\n            ZooKeeperUtils.createDefault(zooKeeper, CONTAINER_PORT_MIN.getPath(name), minimumPort);\n            ZooKeeperUtils.createDefault(zooKeeper, CONTAINER_PORT_MAX.getPath(name), maximumPort);\n\n            registerDomains();\n        } catch (Exception e) {\n            logger.warn(\"Error updating Fabric Container information. This exception will be ignored.\", e);\n        }\n    }","id":8683,"modified_method":"public synchronized void onConnected() {\n        final String name = System.getProperty(SystemProperties.KARAF_NAME);\n        String version = System.getProperty(\"fabric.version\", ZkDefs.DEFAULT_VERSION);\n        String profiles = System.getProperty(\"fabric.profiles\");\n        LOGGER.trace(\"onConnected\");\n\n        String nodeAlive = CONTAINER_ALIVE.getPath(name);\n        try {\n\n            if (profiles != null) {\n                String versionNode = CONFIG_CONTAINER.getPath(name);\n                String profileNode = CONFIG_VERSIONS_CONTAINER.getPath(version, name);\n                ZooKeeperUtils.createDefault(zooKeeper, versionNode, version);\n                ZooKeeperUtils.createDefault(zooKeeper, profileNode, profiles);\n            }\n\n            Stat stat = ZooKeeperUtils.exists(zooKeeper, nodeAlive);\n            if (stat != null) {\n                if (stat.getEphemeralOwner() != zooKeeper.getSessionId()) {\n                    zooKeeper.delete(nodeAlive);\n                    zooKeeper.createWithParents(nodeAlive, CreateMode.EPHEMERAL);\n                }\n            } else {\n                zooKeeper.createWithParents(nodeAlive, CreateMode.EPHEMERAL);\n            }\n\n            String domainsNode = CONTAINER_DOMAINS.getPath(name);\n            stat = ZooKeeperUtils.exists(zooKeeper, domainsNode);\n            if (stat != null) {\n                zooKeeper.deleteWithChildren(domainsNode);\n            }\n\n            ZooKeeperUtils.createDefault(zooKeeper, CONTAINER_RESOLVER.getPath(name), getContainerResolutionPolicy(zooKeeper, name));\n            ZooKeeperUtils.set(zooKeeper, CONTAINER_LOCAL_HOSTNAME.getPath(name), HostUtils.getLocalHostName());\n            ZooKeeperUtils.set(zooKeeper, CONTAINER_LOCAL_IP.getPath(name), HostUtils.getLocalIp());\n            ZooKeeperUtils.set(zooKeeper, CONTAINER_IP.getPath(name), getContainerPointer(zooKeeper, name));\n            ZooKeeperUtils.createDefault(zooKeeper, CONTAINER_GEOLOCATION.getPath(name), HostUtils.getGeoLocation());\n            //Check if there are addresses specified as system properties and use them if there is not an existing value in the registry.\n            //Mostly usable for adding values when creating containers without an existing ensemble.\n            for (String resolver : ZkDefs.VALID_RESOLVERS) {\n                String address = System.getProperty(resolver);\n                if (address != null && !address.isEmpty() && ZooKeeperUtils.exists(zooKeeper, CONTAINER_ADDRESS.getPath(name, resolver)) == null) {\n                    ZooKeeperUtils.set(zooKeeper, CONTAINER_ADDRESS.getPath(name, resolver), address);\n                }\n            }\n\n            //We are creating a dummy container object, since this might be called before the actual container is ready.\n            Container current = getContainer();\n\n            registerJmx(current);\n            registerSsh(current);\n            registerHttp(current);\n\n            //Set the port range values\n            String minimumPort = System.getProperty(ZkDefs.MINIMUM_PORT);\n            String maximumPort = System.getProperty(ZkDefs.MAXIMUM_PORT);\n            ZooKeeperUtils.createDefault(zooKeeper, CONTAINER_PORT_MIN.getPath(name), minimumPort);\n            ZooKeeperUtils.createDefault(zooKeeper, CONTAINER_PORT_MAX.getPath(name), maximumPort);\n\n            registerDomains();\n        } catch (Exception e) {\n            LOGGER.warn(\"Error updating Fabric Container information. This exception will be ignored.\", e);\n        }\n    }","commit_id":"2740d00a7bd3f89737c6365966e4e00a935aae0b","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Override\n    public synchronized void handleNotification(Notification notif, Object o) {\n        logger.trace(\"handleNotification[{}]\", notif);\n\n        // we may get notifications when zookeeper client is not really connected\n        // handle mbeans registration and de-registration events\n        if (isConnected() && mbeanServer != null && notif instanceof MBeanServerNotification) {\n            MBeanServerNotification notification = (MBeanServerNotification) notif;\n            String domain = notification.getMBeanName().getDomain();\n            String path = CONTAINER_DOMAIN.getPath((String) o, domain);\n            try {\n                if (MBeanServerNotification.REGISTRATION_NOTIFICATION.equals(notification.getType())) {\n                    if (domains.add(domain) && ZooKeeperUtils.exists(zooKeeper, path) == null) {\n                        ZooKeeperUtils.set(zooKeeper, path, \"\");\n                    }\n                } else if (MBeanServerNotification.UNREGISTRATION_NOTIFICATION.equals(notification.getType())) {\n                    domains.clear();\n                    domains.addAll(Arrays.asList(mbeanServer.getDomains()));\n                    if (!domains.contains(domain)) {\n                        // domain is no present any more\n                        zooKeeper.delete(path);\n                    }\n                }\n//            } catch (KeeperException.SessionExpiredException e) {\n//                logger.debug(\"Session expiry detected. Handling notification once again\", e);\n//                handleNotification(notif, o);\n            } catch (Exception e) {\n                logger.warn(\"Exception while jmx domain synchronization from event: \" + notif + \". This exception will be ignored.\", e);\n            }\n        }\n    }","id":8684,"modified_method":"@Override\n    public synchronized void handleNotification(Notification notif, Object o) {\n        LOGGER.trace(\"handleNotification[{}]\", notif);\n\n        // we may get notifications when zookeeper client is not really connected\n        // handle mbeans registration and de-registration events\n        if (isConnected() && mbeanServer != null && notif instanceof MBeanServerNotification) {\n            MBeanServerNotification notification = (MBeanServerNotification) notif;\n            String domain = notification.getMBeanName().getDomain();\n            String path = CONTAINER_DOMAIN.getPath((String) o, domain);\n            try {\n                if (MBeanServerNotification.REGISTRATION_NOTIFICATION.equals(notification.getType())) {\n                    if (domains.add(domain) && ZooKeeperUtils.exists(zooKeeper, path) == null) {\n                        ZooKeeperUtils.set(zooKeeper, path, \"\");\n                    }\n                } else if (MBeanServerNotification.UNREGISTRATION_NOTIFICATION.equals(notification.getType())) {\n                    domains.clear();\n                    domains.addAll(Arrays.asList(mbeanServer.getDomains()));\n                    if (!domains.contains(domain)) {\n                        // domain is no present any more\n                        ZooKeeperUtils.deleteSafe(zooKeeper, path);\n                    }\n                }\n//            } catch (KeeperException.SessionExpiredException e) {\n//                LOGGER.debug(\"Session expiry detected. Handling notification once again\", e);\n//                handleNotification(notif, o);\n            } catch (Exception e) {\n                LOGGER.warn(\"Exception while jmx domain synchronization from event: \" + notif + \". This exception will be ignored.\", e);\n            }\n        }\n    }","commit_id":"2740d00a7bd3f89737c6365966e4e00a935aae0b","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public AbstractDetailViewNode(EventDetailChart chart, T bundle, S parentEventNode) {\n        this.eventBundle = bundle;\n        this.parentNode = parentEventNode;\n        this.chart = chart;\n        descLOD.set(bundle.getDescriptionLOD());\n        sleuthkitCase = chart.getController().getAutopsyCase().getSleuthkitCase();\n        eventsModel = chart.getController().getEventsModel();\n\n        if (eventBundle.getEventIDsWithHashHits().isEmpty()) {\n            show(hashIV, false);\n        }\n        if (eventBundle.getEventIDsWithTags().isEmpty()) {\n            show(tagIV, false);\n        }\n        HBox.setHgrow(spacer, Priority.ALWAYS);\n        header = new HBox(getDescrLabel(), getCountLabel(), hashIV, tagIV, /*spacer,*/ minusButton, plusButton);\n\n        header.setMinWidth(USE_PREF_SIZE);\n        header.setPadding(new Insets(2, 5, 2, 5));\n        header.setAlignment(Pos.CENTER_LEFT);\n        //setup description label\n        evtColor = getEventType().getColor();\n        eventTypeImageView.setImage(getEventType().getFXImage());\n        descrLabel.setGraphic(eventTypeImageView);\n        descrLabel.setPrefWidth(USE_COMPUTED_SIZE);\n        descrLabel.setTextOverrun(OverrunStyle.CENTER_ELLIPSIS);\n        descrLabel.setMouseTransparent(true);\n\n        //set up subnode pane sizing contraints\n        subNodePane.setPrefHeight(USE_COMPUTED_SIZE);\n        subNodePane.setMinHeight(USE_PREF_SIZE);\n        subNodePane.setMinWidth(USE_PREF_SIZE);\n        subNodePane.setMaxHeight(USE_PREF_SIZE);\n        subNodePane.setMaxWidth(USE_PREF_SIZE);\n        subNodePane.setPickOnBounds(false);\n\n        setAlignment(Pos.TOP_LEFT);\n        setMinHeight(24);\n      \n        setPrefHeight(USE_COMPUTED_SIZE);\n        setMaxHeight(USE_PREF_SIZE);\n        setOnMouseClicked(new EventMouseHandler());\n\n        //set up mouse hover effect and tooltip\n        setOnMouseEntered((MouseEvent e) -> {\n            //defer tooltip creation till needed, this had a surprisingly large impact on speed of loading the chart\n            installTooltip();\n            showDescriptionLoDControls(true);\n            toFront();\n        });\n\n        setOnMouseExited((MouseEvent e) -> {\n            showDescriptionLoDControls(false);\n        });\n        setCursor(Cursor.HAND);\n\n        plusButton.disableProperty().bind(descLOD.isEqualTo(DescriptionLOD.FULL));\n        minusButton.disableProperty().bind(descLOD.isEqualTo(getEventBundle().getDescriptionLOD()));\n\n        plusButton.setOnMouseClicked(e -> {\n            final DescriptionLOD next = descLOD.get().next();\n            if (next != null) {\n                loadSubClusters(next);\n                descLOD.set(next);\n            }\n        });\n        minusButton.setOnMouseClicked(e -> {\n            final DescriptionLOD previous = descLOD.get().previous();\n            if (previous != null) {\n                loadSubClusters(previous);\n                descLOD.set(previous);\n            }\n        });\n\n        setBackground(new Background(new BackgroundFill(evtColor.deriveColor(0, 1, 1, .1), CORNER_RADII, Insets.EMPTY)));\n\n        setLayoutX(getChart().getXAxis().getDisplayPosition(new DateTime(eventBundle.getStartMillis())) - getLayoutXCompensation());\n    }","id":8685,"modified_method":"public AbstractDetailViewNode(EventDetailChart chart, T bundle, S parentEventNode) {\n        this.eventBundle = bundle;\n        this.parentNode = parentEventNode;\n        this.chart = chart;\n        descLOD.set(bundle.getDescriptionLOD());\n        sleuthkitCase = chart.getController().getAutopsyCase().getSleuthkitCase();\n        eventsModel = chart.getController().getEventsModel();\n        ImageView hashIV = new ImageView(HASH_PIN);\n        ImageView tagIV = new ImageView(TAG);\n        if (eventBundle.getEventIDsWithHashHits().isEmpty()) {\n            show(hashIV, false);\n        }\n        if (eventBundle.getEventIDsWithTags().isEmpty()) {\n            show(tagIV, false);\n        }\n\n        expandClusterAction = new ExpandClusterAction();\n        plusButton = ActionUtils.createButton(expandClusterAction, ActionUtils.ActionTextBehavior.HIDE);\n        configureLODButton(plusButton);\n\n        collapseClusterAction = new CollapseClusterAction();\n        minusButton = ActionUtils.createButton(collapseClusterAction, ActionUtils.ActionTextBehavior.HIDE);\n        configureLODButton(minusButton);\n\n        HBox.setHgrow(spacer, Priority.ALWAYS);\n        header = new HBox(getDescrLabel(), getCountLabel(), hashIV, tagIV, /*\n                 * spacer,\n                 */ minusButton, plusButton);\n\n        header.setMinWidth(USE_PREF_SIZE);\n        header.setPadding(new Insets(2, 5, 2, 5));\n        header.setAlignment(Pos.CENTER_LEFT);\n        //setup description label\n        evtColor = getEventType().getColor();\n\n        eventTypeImageView.setImage(getEventType().getFXImage());\n        descrLabel.setGraphic(eventTypeImageView);\n        descrLabel.setPrefWidth(USE_COMPUTED_SIZE);\n        descrLabel.setTextOverrun(OverrunStyle.CENTER_ELLIPSIS);\n        descrLabel.setMouseTransparent(true);\n\n        //set up subnode pane sizing contraints\n        subNodePane.setPrefHeight(USE_COMPUTED_SIZE);\n        subNodePane.setMinHeight(USE_PREF_SIZE);\n        subNodePane.setMinWidth(USE_PREF_SIZE);\n        subNodePane.setMaxHeight(USE_PREF_SIZE);\n        subNodePane.setMaxWidth(USE_PREF_SIZE);\n        subNodePane.setPickOnBounds(false);\n\n        setAlignment(Pos.TOP_LEFT);\n        setMinHeight(24);\n        setPrefHeight(USE_COMPUTED_SIZE);\n        setMaxHeight(USE_PREF_SIZE);\n        setOnMouseClicked(new EventMouseHandler());\n\n        //set up mouse hover effect and tooltip\n        setOnMouseEntered((MouseEvent e) -> {\n            //defer tooltip creation till needed, this had a surprisingly large impact on speed of loading the chart\n            installTooltip();\n            showDescriptionLoDControls(true);\n            toFront();\n        });\n\n        setOnMouseExited((MouseEvent e) -> {\n            showDescriptionLoDControls(false);\n        });\n        setCursor(Cursor.HAND);\n\n        setBackground(new Background(new BackgroundFill(evtColor.deriveColor(0, 1, 1, .1), CORNER_RADII, Insets.EMPTY)));\n\n        setLayoutX(getChart().getXAxis().getDisplayPosition(new DateTime(eventBundle.getStartMillis())) - getLayoutXCompensation());\n    }","commit_id":"634e12ef5ce7c383eb0d33ee8e4da492052b5362","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n        public void handle(MouseEvent t) {\n\n            if (t.getButton() == MouseButton.PRIMARY) {\n                t.consume();\n                if (t.isShiftDown()) {\n                    if (chart.selectedNodes.contains(AbstractDetailViewNode.this) == false) {\n                        chart.selectedNodes.add(AbstractDetailViewNode.this);\n                    }\n                } else if (t.isShortcutDown()) {\n                    chart.selectedNodes.removeAll(AbstractDetailViewNode.this);\n                } else if (t.getClickCount() > 1) {\n                    final DescriptionLOD next = descLOD.get().next();\n                    if (next != null) {\n                        loadSubClusters(next);\n                        descLOD.set(next);\n                    }\n                } else {\n                    chart.selectedNodes.setAll(AbstractDetailViewNode.this);\n                }\n\n            }\n        }","id":8686,"modified_method":"@Override\n        public void handle(MouseEvent t) {\n\n            if (t.getButton() == MouseButton.PRIMARY) {\n                t.consume();\n                if (t.isShiftDown()) {\n                    if (chart.selectedNodes.contains(AbstractDetailViewNode.this) == false) {\n                        chart.selectedNodes.add(AbstractDetailViewNode.this);\n                    }\n                } else if (t.isShortcutDown()) {\n                    chart.selectedNodes.removeAll(AbstractDetailViewNode.this);\n                } else if (t.getClickCount() > 1) {\n                    final DescriptionLOD next = descLOD.get().next();\n                    if (next != null) {\n                        loadSubClusters(next);\n                        descLOD.set(next);\n                    }\n                } else {\n                    chart.selectedNodes.setAll(AbstractDetailViewNode.this);\n                }\n                t.consume();\n            } else if (t.getButton() == MouseButton.SECONDARY) {\n                ContextMenu chartContextMenu = chart.getChartContextMenu(t);\n                if (contextMenu == null) {\n                    contextMenu = new ContextMenu();\n                    contextMenu.setAutoHide(true);\n\n                    contextMenu.getItems().add(ActionUtils.createMenuItem(expandClusterAction));\n                    contextMenu.getItems().add(ActionUtils.createMenuItem(collapseClusterAction));\n\n                    contextMenu.getItems().add(new SeparatorMenuItem());\n                    contextMenu.getItems().addAll(chartContextMenu.getItems());\n                }\n                contextMenu.show(AbstractDetailViewNode.this, t.getScreenX(), t.getScreenY());\n                t.consume();\n            }\n        }","commit_id":"634e12ef5ce7c383eb0d33ee8e4da492052b5362","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * @return the chartContextMenu\n     */\n    public ContextMenu getChartContextMenu() {\n        return chartContextMenu;\n    }","id":8687,"modified_method":"ContextMenu getChartContextMenu(MouseEvent clickEvent) throws MissingResourceException {\n        if (chartContextMenu != null) {\n            chartContextMenu.hide();\n        }\n        chartContextMenu = ActionUtils.createContextMenu(Arrays.asList(new Action(\n                NbBundle.getMessage(this.getClass(), \"EventDetailChart.chartContextMenu.placeMarker.name\")) {\n                    {\n                        setGraphic(new ImageView(new Image(\"/org/sleuthkit/autopsy/timeline/images/marker.png\", 16, 16, true, true, true))); // NON-NLS\n                        setEventHandler((ActionEvent t) -> {\n                            if (guideLine == null) {\n                                guideLine = new GuideLine(0, 0, 0, getHeight(), getXAxis());\n                                guideLine.relocate(clickEvent.getX(), 0);\n                                guideLine.endYProperty().bind(heightProperty().subtract(getXAxis().heightProperty().subtract(getXAxis().tickLengthProperty())));\n\n                                getChartChildren().add(guideLine);\n\n                                guideLine.setOnMouseClicked((MouseEvent event) -> {\n                                    if (event.getButton() == MouseButton.SECONDARY) {\n                                        clearGuideLine();\n                                        event.consume();\n                                    }\n                                });\n                            } else {\n                                guideLine.relocate(clickEvent.getX(), 0);\n                            }\n                        });\n                    }\n\n                }, new ActionGroup(\n                        NbBundle.getMessage(this.getClass(), \"EventDetailChart.contextMenu.zoomHistory.name\"),\n                        new Back(controller),\n                        new Forward(controller))));\n        chartContextMenu.setAutoHide(true);\n        return chartContextMenu;\n    }","commit_id":"634e12ef5ce7c383eb0d33ee8e4da492052b5362","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"EventDetailChart(DateAxis dateAxis, final Axis<EventCluster> verticalAxis, ObservableList<DetailViewNode<?>> selectedNodes) {\n        super(dateAxis, verticalAxis);\n        dateAxis.setAutoRanging(false);\n\n        //verticalAxis.setVisible(false);//TODO: why doesn't this hide the vertical axis, instead we have to turn off all parts individually? -jm\n        verticalAxis.setTickLabelsVisible(false);\n        verticalAxis.setTickMarkVisible(false);\n\n        setLegendVisible(false);\n        setPadding(Insets.EMPTY);\n        setAlternativeColumnFillVisible(true);\n\n        //all nodes are added to nodeGroup to facilitate scrolling rather than to getPlotChildren() directly\n        getPlotChildren().add(nodeGroup);\n\n        //bind listener to events that should trigger layout\n        widthProperty().addListener(layoutInvalidationListener);\n        heightProperty().addListener(layoutInvalidationListener);\n\n        bandByType.addListener(layoutInvalidationListener);\n        oneEventPerRow.addListener(layoutInvalidationListener);\n        truncateAll.addListener(layoutInvalidationListener);\n        truncateWidth.addListener(layoutInvalidationListener);\n        descrVisibility.addListener(layoutInvalidationListener);\n\n        //this is needed to allow non circular binding of the guideline and timerangRect heights to the height of the chart\n        boundsInLocalProperty().addListener((Observable observable) -> {\n            setPrefHeight(boundsInLocalProperty().get().getHeight());\n        });\n\n        //set up mouse listeners\n        final EventHandler<MouseEvent> clickHandler = (MouseEvent clickEvent) -> {\n            if (chartContextMenu != null) {\n                chartContextMenu.hide();\n            }\n            if (clickEvent.getButton() == MouseButton.SECONDARY && clickEvent.isStillSincePress()) {\n\n                chartContextMenu = ActionUtils.createContextMenu(Arrays.asList(new Action(\n                        NbBundle.getMessage(this.getClass(), \"EventDetailChart.chartContextMenu.placeMarker.name\")) {\n                            {\n                                setGraphic(new ImageView(new Image(\"/org/sleuthkit/autopsy/timeline/images/marker.png\", 16, 16, true, true, true))); // NON-NLS\n                                setEventHandler((ActionEvent t) -> {\n                                    if (guideLine == null) {\n                                        guideLine = new GuideLine(0, 0, 0, getHeight(), dateAxis);\n                                        guideLine.relocate(clickEvent.getX(), 0);\n                                        guideLine.endYProperty().bind(heightProperty().subtract(dateAxis.heightProperty().subtract(dateAxis.tickLengthProperty())));\n\n                                        getChartChildren().add(guideLine);\n\n                                        guideLine.setOnMouseClicked((MouseEvent event) -> {\n                                            if (event.getButton() == MouseButton.SECONDARY) {\n                                                clearGuideLine();\n                                                event.consume();\n                                            }\n                                        });\n                                    } else {\n                                        guideLine.relocate(clickEvent.getX(), 0);\n                                    }\n                                });\n                            }\n\n                        }, new ActionGroup(\n                                NbBundle.getMessage(this.getClass(), \"EventDetailChart.contextMenu.zoomHistory.name\"),\n                                new Back(controller),\n                                new Forward(controller))));\n                chartContextMenu.setAutoHide(true);\n                chartContextMenu.show(EventDetailChart.this, clickEvent.getScreenX(), clickEvent.getScreenY());\n                clickEvent.consume();\n            }\n        };\n\n        setOnMouseClicked(clickHandler);\n\n        //use one handler with an if chain because it maintains state\n        final ChartDragHandler<DateTime, EventDetailChart> dragHandler = new ChartDragHandler<>(this, getXAxis());\n        setOnMousePressed(dragHandler);\n        setOnMouseReleased(dragHandler);\n        setOnMouseDragged(dragHandler);\n\n        this.selectedNodes = selectedNodes;\n        this.selectedNodes.addListener((\n                ListChangeListener.Change<? extends DetailViewNode<?>> c) -> {\n                    while (c.next()) {\n                        c.getRemoved().forEach((DetailViewNode<?> t) -> {\n                            t.getEventBundle().getRanges().forEach((Range<Long> t1) -> {\n                                Line removedLine = projectionMap.remove(t1);\n                                getChartChildren().removeAll(removedLine);\n                            });\n\n                        });\n                        c.getAddedSubList().forEach((DetailViewNode<?> t) -> {\n\n                            for (Range<Long> range : t.getEventBundle().getRanges()) {\n\n                                Line line = new Line(dateAxis.localToParent(dateAxis.getDisplayPosition(new DateTime(range.lowerEndpoint(), TimeLineController.getJodaTimeZone())), 0).getX(), dateAxis.getLayoutY() + PROJECTED_LINE_Y_OFFSET,\n                                        dateAxis.localToParent(dateAxis.getDisplayPosition(new DateTime(range.upperEndpoint(), TimeLineController.getJodaTimeZone())), 0).getX(), dateAxis.getLayoutY() + PROJECTED_LINE_Y_OFFSET\n                                );\n                                line.setStroke(t.getEventType().getColor().deriveColor(0, 1, 1, .5));\n                                line.setStrokeWidth(PROJECTED_LINE_STROKE_WIDTH);\n                                line.setStrokeLineCap(StrokeLineCap.ROUND);\n                                projectionMap.put(range, line);\n                                getChartChildren().add(line);\n                            }\n                        });\n                    }\n\n                    this.controller.selectEventIDs(selectedNodes.stream()\n                            .flatMap(detailNode -> detailNode.getEventIDs().stream())\n                            .collect(Collectors.toList()));\n                });\n\n        requestChartLayout();\n    }","id":8688,"modified_method":"EventDetailChart(DateAxis dateAxis, final Axis<EventCluster> verticalAxis, ObservableList<DetailViewNode<?>> selectedNodes) {\n        super(dateAxis, verticalAxis);\n        dateAxis.setAutoRanging(false);\n\n        //verticalAxis.setVisible(false);//TODO: why doesn't this hide the vertical axis, instead we have to turn off all parts individually? -jm\n        verticalAxis.setTickLabelsVisible(false);\n        verticalAxis.setTickMarkVisible(false);\n\n        setLegendVisible(false);\n        setPadding(Insets.EMPTY);\n        setAlternativeColumnFillVisible(true);\n\n        //all nodes are added to nodeGroup to facilitate scrolling rather than to getPlotChildren() directly\n        getPlotChildren().add(nodeGroup);\n\n        //bind listener to events that should trigger layout\n        widthProperty().addListener(layoutInvalidationListener);\n        heightProperty().addListener(layoutInvalidationListener);\n\n        bandByType.addListener(layoutInvalidationListener);\n        oneEventPerRow.addListener(layoutInvalidationListener);\n        truncateAll.addListener(layoutInvalidationListener);\n        truncateWidth.addListener(layoutInvalidationListener);\n        descrVisibility.addListener(layoutInvalidationListener);\n\n        //this is needed to allow non circular binding of the guideline and timerangRect heights to the height of the chart\n        boundsInLocalProperty().addListener((Observable observable) -> {\n            setPrefHeight(boundsInLocalProperty().get().getHeight());\n        });\n\n        //set up mouse listeners\n        final EventHandler<MouseEvent> clickHandler = (MouseEvent clickEvent) -> {\n            if (chartContextMenu != null) {\n                chartContextMenu.hide();\n            }\n            if (clickEvent.getButton() == MouseButton.SECONDARY && clickEvent.isStillSincePress()) {\n                getChartContextMenu(clickEvent);\n                chartContextMenu.show(EventDetailChart.this, clickEvent.getScreenX(), clickEvent.getScreenY());\n                clickEvent.consume();\n            }\n        };\n\n        setOnMouseClicked(clickHandler);\n\n        //use one handler with an if chain because it maintains state\n        final ChartDragHandler<DateTime, EventDetailChart> dragHandler = new ChartDragHandler<>(this, getXAxis());\n        setOnMousePressed(dragHandler);\n        setOnMouseReleased(dragHandler);\n        setOnMouseDragged(dragHandler);\n\n        this.selectedNodes = selectedNodes;\n        this.selectedNodes.addListener((\n                ListChangeListener.Change<? extends DetailViewNode<?>> c) -> {\n                    while (c.next()) {\n                        c.getRemoved().forEach((DetailViewNode<?> t) -> {\n                            t.getEventBundle().getRanges().forEach((Range<Long> t1) -> {\n                                Line removedLine = projectionMap.remove(t1);\n                                getChartChildren().removeAll(removedLine);\n                            });\n\n                        });\n                        c.getAddedSubList().forEach((DetailViewNode<?> t) -> {\n\n                            for (Range<Long> range : t.getEventBundle().getRanges()) {\n\n                                Line line = new Line(dateAxis.localToParent(dateAxis.getDisplayPosition(new DateTime(range.lowerEndpoint(), TimeLineController.getJodaTimeZone())), 0).getX(), dateAxis.getLayoutY() + PROJECTED_LINE_Y_OFFSET,\n                                        dateAxis.localToParent(dateAxis.getDisplayPosition(new DateTime(range.upperEndpoint(), TimeLineController.getJodaTimeZone())), 0).getX(), dateAxis.getLayoutY() + PROJECTED_LINE_Y_OFFSET\n                                );\n                                line.setStroke(t.getEventType().getColor().deriveColor(0, 1, 1, .5));\n                                line.setStrokeWidth(PROJECTED_LINE_STROKE_WIDTH);\n                                line.setStrokeLineCap(StrokeLineCap.ROUND);\n                                projectionMap.put(range, line);\n                                getChartChildren().add(line);\n                            }\n                        });\n                    }\n\n                    this.controller.selectEventIDs(selectedNodes.stream()\n                            .flatMap(detailNode -> detailNode.getEventIDs().stream())\n                            .collect(Collectors.toList()));\n                });\n\n        requestChartLayout();\n    }","commit_id":"634e12ef5ce7c383eb0d33ee8e4da492052b5362","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"GuideLine(double startX, double startY, double endX, double endY, DateAxis axis) {\n        super(startX, startY, endX, endY);\n        dateAxis = axis;\n        setCursor(Cursor.E_RESIZE);\n        getStrokeDashArray().setAll(5.0, 5.0);\n        setStroke(Color.RED);\n        setOpacity(.5);\n        setStrokeWidth(3);\n\n        setOnMouseEntered((MouseEvent event) -> {\n            setTooltip();\n        });\n\n        setOnMousePressed((MouseEvent event) -> {\n            startLayoutX = getLayoutX();\n            dragStartX = event.getScreenX();\n        });\n        setOnMouseDragged((MouseEvent event) -> {\n            double dX = event.getScreenX() - dragStartX;\n\n            relocate(startLayoutX + dX, 0);\n        });\n    }","id":8689,"modified_method":"GuideLine(double startX, double startY, double endX, double endY, Axis<DateTime> axis) {\n        super(startX, startY, endX, endY);\n        dateAxis = axis;\n        setCursor(Cursor.E_RESIZE);\n        getStrokeDashArray().setAll(5.0, 5.0);\n        setStroke(Color.RED);\n        setOpacity(.5);\n        setStrokeWidth(3);\n\n        setOnMouseEntered((MouseEvent event) -> {\n            setTooltip();\n        });\n\n        setOnMousePressed((MouseEvent event) -> {\n            startLayoutX = getLayoutX();\n            dragStartX = event.getScreenX();\n        });\n        setOnMouseDragged((MouseEvent event) -> {\n            double dX = event.getScreenX() - dragStartX;\n\n            relocate(startLayoutX + dX, 0);\n        });\n    }","commit_id":"634e12ef5ce7c383eb0d33ee8e4da492052b5362","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n        public void handle(MouseEvent t) {\n\n            if (t.getButton() == MouseButton.PRIMARY) {\n                t.consume();\n                if (t.isShiftDown()) {\n                    if (chart.selectedNodes.contains(AbstractDetailViewNode.this) == false) {\n                        chart.selectedNodes.add(AbstractDetailViewNode.this);\n                    }\n                } else if (t.isShortcutDown()) {\n                    chart.selectedNodes.removeAll(AbstractDetailViewNode.this);\n                } else if (t.getClickCount() > 1) {\n                    final DescriptionLOD next = descLOD.get().next();\n                    if (next != null) {\n                        loadSubClusters(next);\n                        descLOD.set(next);\n                    }\n                } else {\n                    chart.selectedNodes.setAll(AbstractDetailViewNode.this);\n                }\n\n            }\n        }","id":8690,"modified_method":"@Override\n        public void handle(MouseEvent t) {\n\n            if (t.getButton() == MouseButton.PRIMARY) {\n                t.consume();\n                if (t.isShiftDown()) {\n                    if (chart.selectedNodes.contains(AbstractDetailViewNode.this) == false) {\n                        chart.selectedNodes.add(AbstractDetailViewNode.this);\n                    }\n                } else if (t.isShortcutDown()) {\n                    chart.selectedNodes.removeAll(AbstractDetailViewNode.this);\n                } else if (t.getClickCount() > 1) {\n                    final DescriptionLOD next = descLOD.get().next();\n                    if (next != null) {\n                        loadSubClusters(next);\n                        descLOD.set(next);\n                    }\n                } else {\n                    chart.selectedNodes.setAll(AbstractDetailViewNode.this);\n                }\n                t.consume();\n            } else if (t.getButton() == MouseButton.SECONDARY) {\n                ContextMenu chartContextMenu = chart.getChartContextMenu(t);\n                if (contextMenu == null) {\n                    contextMenu = new ContextMenu();\n                    contextMenu.setAutoHide(true);\n\n                    contextMenu.getItems().add(ActionUtils.createMenuItem(expandClusterAction));\n                    contextMenu.getItems().add(ActionUtils.createMenuItem(collapseClusterAction));\n\n                    contextMenu.getItems().add(new SeparatorMenuItem());\n                    contextMenu.getItems().addAll(chartContextMenu.getItems());\n                }\n                contextMenu.show(AbstractDetailViewNode.this, t.getScreenX(), t.getScreenY());\n                t.consume();\n            }\n        }","commit_id":"eadd7266edb7e7ad91c46c8d38e0ec06159f8aeb","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public AbstractDetailViewNode(EventDetailChart chart, T bundle, S parentEventNode) {\n        this.eventBundle = bundle;\n        this.parentNode = parentEventNode;\n        this.chart = chart;\n        descLOD.set(bundle.getDescriptionLOD());\n        sleuthkitCase = chart.getController().getAutopsyCase().getSleuthkitCase();\n        eventsModel = chart.getController().getEventsModel();\n\n        if (eventBundle.getEventIDsWithHashHits().isEmpty()) {\n            show(hashIV, false);\n        }\n        if (eventBundle.getEventIDsWithTags().isEmpty()) {\n            show(tagIV, false);\n        }\n        HBox.setHgrow(spacer, Priority.ALWAYS);\n        header = new HBox(getDescrLabel(), getCountLabel(), hashIV, tagIV, /*spacer,*/ minusButton, plusButton);\n\n        header.setMinWidth(USE_PREF_SIZE);\n        header.setPadding(new Insets(2, 5, 2, 5));\n        header.setAlignment(Pos.CENTER_LEFT);\n        //setup description label\n        evtColor = getEventType().getColor();\n        eventTypeImageView.setImage(getEventType().getFXImage());\n        descrLabel.setGraphic(eventTypeImageView);\n        descrLabel.setPrefWidth(USE_COMPUTED_SIZE);\n        descrLabel.setTextOverrun(OverrunStyle.CENTER_ELLIPSIS);\n        descrLabel.setMouseTransparent(true);\n\n        //set up subnode pane sizing contraints\n        subNodePane.setPrefHeight(USE_COMPUTED_SIZE);\n        subNodePane.setMinHeight(USE_PREF_SIZE);\n        subNodePane.setMinWidth(USE_PREF_SIZE);\n        subNodePane.setMaxHeight(USE_PREF_SIZE);\n        subNodePane.setMaxWidth(USE_PREF_SIZE);\n        subNodePane.setPickOnBounds(false);\n\n        setAlignment(Pos.TOP_LEFT);\n        setMinHeight(24);\n      \n        setPrefHeight(USE_COMPUTED_SIZE);\n        setMaxHeight(USE_PREF_SIZE);\n        setOnMouseClicked(new EventMouseHandler());\n\n        //set up mouse hover effect and tooltip\n        setOnMouseEntered((MouseEvent e) -> {\n            //defer tooltip creation till needed, this had a surprisingly large impact on speed of loading the chart\n            installTooltip();\n            showDescriptionLoDControls(true);\n            toFront();\n        });\n\n        setOnMouseExited((MouseEvent e) -> {\n            showDescriptionLoDControls(false);\n        });\n        setCursor(Cursor.HAND);\n\n        plusButton.disableProperty().bind(descLOD.isEqualTo(DescriptionLOD.FULL));\n        minusButton.disableProperty().bind(descLOD.isEqualTo(getEventBundle().getDescriptionLOD()));\n\n        plusButton.setOnMouseClicked(e -> {\n            final DescriptionLOD next = descLOD.get().next();\n            if (next != null) {\n                loadSubClusters(next);\n                descLOD.set(next);\n            }\n        });\n        minusButton.setOnMouseClicked(e -> {\n            final DescriptionLOD previous = descLOD.get().previous();\n            if (previous != null) {\n                loadSubClusters(previous);\n                descLOD.set(previous);\n            }\n        });\n\n        setBackground(new Background(new BackgroundFill(evtColor.deriveColor(0, 1, 1, .1), CORNER_RADII, Insets.EMPTY)));\n\n        setLayoutX(getChart().getXAxis().getDisplayPosition(new DateTime(eventBundle.getStartMillis())) - getLayoutXCompensation());\n    }","id":8691,"modified_method":"public AbstractDetailViewNode(EventDetailChart chart, T bundle, S parentEventNode) {\n        this.eventBundle = bundle;\n        this.parentNode = parentEventNode;\n        this.chart = chart;\n        descLOD.set(bundle.getDescriptionLOD());\n        sleuthkitCase = chart.getController().getAutopsyCase().getSleuthkitCase();\n        eventsModel = chart.getController().getEventsModel();\n        ImageView hashIV = new ImageView(HASH_PIN);\n        ImageView tagIV = new ImageView(TAG);\n        if (eventBundle.getEventIDsWithHashHits().isEmpty()) {\n            show(hashIV, false);\n        }\n        if (eventBundle.getEventIDsWithTags().isEmpty()) {\n            show(tagIV, false);\n        }\n\n        expandClusterAction = new ExpandClusterAction();\n        plusButton = ActionUtils.createButton(expandClusterAction, ActionUtils.ActionTextBehavior.HIDE);\n        configureLODButton(plusButton);\n\n        collapseClusterAction = new CollapseClusterAction();\n        minusButton = ActionUtils.createButton(collapseClusterAction, ActionUtils.ActionTextBehavior.HIDE);\n        configureLODButton(minusButton);\n\n        HBox.setHgrow(spacer, Priority.ALWAYS);\n        header = new HBox(getDescrLabel(), getCountLabel(), hashIV, tagIV, /*\n                 * spacer,\n                 */ minusButton, plusButton);\n\n        header.setMinWidth(USE_PREF_SIZE);\n        header.setPadding(new Insets(2, 5, 2, 5));\n        header.setAlignment(Pos.CENTER_LEFT);\n        //setup description label\n        evtColor = getEventType().getColor();\n\n        eventTypeImageView.setImage(getEventType().getFXImage());\n        descrLabel.setGraphic(eventTypeImageView);\n        descrLabel.setPrefWidth(USE_COMPUTED_SIZE);\n        descrLabel.setTextOverrun(OverrunStyle.CENTER_ELLIPSIS);\n        descrLabel.setMouseTransparent(true);\n\n        //set up subnode pane sizing contraints\n        subNodePane.setPrefHeight(USE_COMPUTED_SIZE);\n        subNodePane.setMinHeight(USE_PREF_SIZE);\n        subNodePane.setMinWidth(USE_PREF_SIZE);\n        subNodePane.setMaxHeight(USE_PREF_SIZE);\n        subNodePane.setMaxWidth(USE_PREF_SIZE);\n        subNodePane.setPickOnBounds(false);\n\n        setAlignment(Pos.TOP_LEFT);\n        setMinHeight(24);\n        setPrefHeight(USE_COMPUTED_SIZE);\n        setMaxHeight(USE_PREF_SIZE);\n        setOnMouseClicked(new EventMouseHandler());\n\n        //set up mouse hover effect and tooltip\n        setOnMouseEntered((MouseEvent e) -> {\n            //defer tooltip creation till needed, this had a surprisingly large impact on speed of loading the chart\n            installTooltip();\n            showDescriptionLoDControls(true);\n            toFront();\n        });\n\n        setOnMouseExited((MouseEvent e) -> {\n            showDescriptionLoDControls(false);\n        });\n        setCursor(Cursor.HAND);\n\n        setBackground(new Background(new BackgroundFill(evtColor.deriveColor(0, 1, 1, .1), CORNER_RADII, Insets.EMPTY)));\n\n        setLayoutX(getChart().getXAxis().getDisplayPosition(new DateTime(eventBundle.getStartMillis())) - getLayoutXCompensation());\n    }","commit_id":"eadd7266edb7e7ad91c46c8d38e0ec06159f8aeb","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"EventDetailChart(DateAxis dateAxis, final Axis<EventCluster> verticalAxis, ObservableList<DetailViewNode<?>> selectedNodes) {\n        super(dateAxis, verticalAxis);\n        dateAxis.setAutoRanging(false);\n\n        //verticalAxis.setVisible(false);//TODO: why doesn't this hide the vertical axis, instead we have to turn off all parts individually? -jm\n        verticalAxis.setTickLabelsVisible(false);\n        verticalAxis.setTickMarkVisible(false);\n\n        setLegendVisible(false);\n        setPadding(Insets.EMPTY);\n        setAlternativeColumnFillVisible(true);\n\n        //all nodes are added to nodeGroup to facilitate scrolling rather than to getPlotChildren() directly\n        getPlotChildren().add(nodeGroup);\n\n        //bind listener to events that should trigger layout\n        widthProperty().addListener(layoutInvalidationListener);\n        heightProperty().addListener(layoutInvalidationListener);\n\n        bandByType.addListener(layoutInvalidationListener);\n        oneEventPerRow.addListener(layoutInvalidationListener);\n        truncateAll.addListener(layoutInvalidationListener);\n        truncateWidth.addListener(layoutInvalidationListener);\n        descrVisibility.addListener(layoutInvalidationListener);\n\n        //this is needed to allow non circular binding of the guideline and timerangRect heights to the height of the chart\n        boundsInLocalProperty().addListener((Observable observable) -> {\n            setPrefHeight(boundsInLocalProperty().get().getHeight());\n        });\n\n        //set up mouse listeners\n        final EventHandler<MouseEvent> clickHandler = (MouseEvent clickEvent) -> {\n            if (chartContextMenu != null) {\n                chartContextMenu.hide();\n            }\n            if (clickEvent.getButton() == MouseButton.SECONDARY && clickEvent.isStillSincePress()) {\n\n                chartContextMenu = ActionUtils.createContextMenu(Arrays.asList(new Action(\n                        NbBundle.getMessage(this.getClass(), \"EventDetailChart.chartContextMenu.placeMarker.name\")) {\n                            {\n                                setGraphic(new ImageView(new Image(\"/org/sleuthkit/autopsy/timeline/images/marker.png\", 16, 16, true, true, true))); // NON-NLS\n                                setEventHandler((ActionEvent t) -> {\n                                    if (guideLine == null) {\n                                        guideLine = new GuideLine(0, 0, 0, getHeight(), dateAxis);\n                                        guideLine.relocate(clickEvent.getX(), 0);\n                                        guideLine.endYProperty().bind(heightProperty().subtract(dateAxis.heightProperty().subtract(dateAxis.tickLengthProperty())));\n\n                                        getChartChildren().add(guideLine);\n\n                                        guideLine.setOnMouseClicked((MouseEvent event) -> {\n                                            if (event.getButton() == MouseButton.SECONDARY) {\n                                                clearGuideLine();\n                                                event.consume();\n                                            }\n                                        });\n                                    } else {\n                                        guideLine.relocate(clickEvent.getX(), 0);\n                                    }\n                                });\n                            }\n\n                        }, new ActionGroup(\n                                NbBundle.getMessage(this.getClass(), \"EventDetailChart.contextMenu.zoomHistory.name\"),\n                                new Back(controller),\n                                new Forward(controller))));\n                chartContextMenu.setAutoHide(true);\n                chartContextMenu.show(EventDetailChart.this, clickEvent.getScreenX(), clickEvent.getScreenY());\n                clickEvent.consume();\n            }\n        };\n\n        setOnMouseClicked(clickHandler);\n\n        //use one handler with an if chain because it maintains state\n        final ChartDragHandler<DateTime, EventDetailChart> dragHandler = new ChartDragHandler<>(this, getXAxis());\n        setOnMousePressed(dragHandler);\n        setOnMouseReleased(dragHandler);\n        setOnMouseDragged(dragHandler);\n\n        this.selectedNodes = selectedNodes;\n        this.selectedNodes.addListener((\n                ListChangeListener.Change<? extends DetailViewNode<?>> c) -> {\n                    while (c.next()) {\n                        c.getRemoved().forEach((DetailViewNode<?> t) -> {\n                            t.getEventBundle().getRanges().forEach((Range<Long> t1) -> {\n                                Line removedLine = projectionMap.remove(t1);\n                                getChartChildren().removeAll(removedLine);\n                            });\n\n                        });\n                        c.getAddedSubList().forEach((DetailViewNode<?> t) -> {\n\n                            for (Range<Long> range : t.getEventBundle().getRanges()) {\n\n                                Line line = new Line(dateAxis.localToParent(dateAxis.getDisplayPosition(new DateTime(range.lowerEndpoint(), TimeLineController.getJodaTimeZone())), 0).getX(), dateAxis.getLayoutY() + PROJECTED_LINE_Y_OFFSET,\n                                        dateAxis.localToParent(dateAxis.getDisplayPosition(new DateTime(range.upperEndpoint(), TimeLineController.getJodaTimeZone())), 0).getX(), dateAxis.getLayoutY() + PROJECTED_LINE_Y_OFFSET\n                                );\n                                line.setStroke(t.getEventType().getColor().deriveColor(0, 1, 1, .5));\n                                line.setStrokeWidth(PROJECTED_LINE_STROKE_WIDTH);\n                                line.setStrokeLineCap(StrokeLineCap.ROUND);\n                                projectionMap.put(range, line);\n                                getChartChildren().add(line);\n                            }\n                        });\n                    }\n\n                    this.controller.selectEventIDs(selectedNodes.stream()\n                            .flatMap(detailNode -> detailNode.getEventIDs().stream())\n                            .collect(Collectors.toList()));\n                });\n\n        requestChartLayout();\n    }","id":8692,"modified_method":"EventDetailChart(DateAxis dateAxis, final Axis<EventCluster> verticalAxis, ObservableList<DetailViewNode<?>> selectedNodes) {\n        super(dateAxis, verticalAxis);\n        dateAxis.setAutoRanging(false);\n\n        //verticalAxis.setVisible(false);//TODO: why doesn't this hide the vertical axis, instead we have to turn off all parts individually? -jm\n        verticalAxis.setTickLabelsVisible(false);\n        verticalAxis.setTickMarkVisible(false);\n\n        setLegendVisible(false);\n        setPadding(Insets.EMPTY);\n        setAlternativeColumnFillVisible(true);\n\n        //all nodes are added to nodeGroup to facilitate scrolling rather than to getPlotChildren() directly\n        getPlotChildren().add(nodeGroup);\n\n        //bind listener to events that should trigger layout\n        widthProperty().addListener(layoutInvalidationListener);\n        heightProperty().addListener(layoutInvalidationListener);\n\n        bandByType.addListener(layoutInvalidationListener);\n        oneEventPerRow.addListener(layoutInvalidationListener);\n        truncateAll.addListener(layoutInvalidationListener);\n        truncateWidth.addListener(layoutInvalidationListener);\n        descrVisibility.addListener(layoutInvalidationListener);\n\n        //this is needed to allow non circular binding of the guideline and timerangRect heights to the height of the chart\n        boundsInLocalProperty().addListener((Observable observable) -> {\n            setPrefHeight(boundsInLocalProperty().get().getHeight());\n        });\n\n        //set up mouse listeners\n        final EventHandler<MouseEvent> clickHandler = (MouseEvent clickEvent) -> {\n            if (chartContextMenu != null) {\n                chartContextMenu.hide();\n            }\n            if (clickEvent.getButton() == MouseButton.SECONDARY && clickEvent.isStillSincePress()) {\n                getChartContextMenu(clickEvent);\n                chartContextMenu.show(EventDetailChart.this, clickEvent.getScreenX(), clickEvent.getScreenY());\n                clickEvent.consume();\n            }\n        };\n\n        setOnMouseClicked(clickHandler);\n\n        //use one handler with an if chain because it maintains state\n        final ChartDragHandler<DateTime, EventDetailChart> dragHandler = new ChartDragHandler<>(this, getXAxis());\n        setOnMousePressed(dragHandler);\n        setOnMouseReleased(dragHandler);\n        setOnMouseDragged(dragHandler);\n\n        this.selectedNodes = selectedNodes;\n        this.selectedNodes.addListener((\n                ListChangeListener.Change<? extends DetailViewNode<?>> c) -> {\n                    while (c.next()) {\n                        c.getRemoved().forEach((DetailViewNode<?> t) -> {\n                            t.getEventBundle().getRanges().forEach((Range<Long> t1) -> {\n                                Line removedLine = projectionMap.remove(t1);\n                                getChartChildren().removeAll(removedLine);\n                            });\n\n                        });\n                        c.getAddedSubList().forEach((DetailViewNode<?> t) -> {\n\n                            for (Range<Long> range : t.getEventBundle().getRanges()) {\n\n                                Line line = new Line(dateAxis.localToParent(dateAxis.getDisplayPosition(new DateTime(range.lowerEndpoint(), TimeLineController.getJodaTimeZone())), 0).getX(), dateAxis.getLayoutY() + PROJECTED_LINE_Y_OFFSET,\n                                        dateAxis.localToParent(dateAxis.getDisplayPosition(new DateTime(range.upperEndpoint(), TimeLineController.getJodaTimeZone())), 0).getX(), dateAxis.getLayoutY() + PROJECTED_LINE_Y_OFFSET\n                                );\n                                line.setStroke(t.getEventType().getColor().deriveColor(0, 1, 1, .5));\n                                line.setStrokeWidth(PROJECTED_LINE_STROKE_WIDTH);\n                                line.setStrokeLineCap(StrokeLineCap.ROUND);\n                                projectionMap.put(range, line);\n                                getChartChildren().add(line);\n                            }\n                        });\n                    }\n\n                    this.controller.selectEventIDs(selectedNodes.stream()\n                            .flatMap(detailNode -> detailNode.getEventIDs().stream())\n                            .collect(Collectors.toList()));\n                });\n\n        requestChartLayout();\n    }","commit_id":"eadd7266edb7e7ad91c46c8d38e0ec06159f8aeb","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * @return the chartContextMenu\n     */\n    public ContextMenu getChartContextMenu() {\n        return chartContextMenu;\n    }","id":8693,"modified_method":"ContextMenu getChartContextMenu(MouseEvent clickEvent) throws MissingResourceException {\n        if (chartContextMenu != null) {\n            chartContextMenu.hide();\n        }\n        chartContextMenu = ActionUtils.createContextMenu(Arrays.asList(new Action(\n                NbBundle.getMessage(this.getClass(), \"EventDetailChart.chartContextMenu.placeMarker.name\")) {\n                    {\n                        setGraphic(new ImageView(new Image(\"/org/sleuthkit/autopsy/timeline/images/marker.png\", 16, 16, true, true, true))); // NON-NLS\n                        setEventHandler((ActionEvent t) -> {\n                            if (guideLine == null) {\n                                guideLine = new GuideLine(0, 0, 0, getHeight(), getXAxis());\n                                guideLine.relocate(clickEvent.getX(), 0);\n                                guideLine.endYProperty().bind(heightProperty().subtract(getXAxis().heightProperty().subtract(getXAxis().tickLengthProperty())));\n\n                                getChartChildren().add(guideLine);\n\n                                guideLine.setOnMouseClicked((MouseEvent event) -> {\n                                    if (event.getButton() == MouseButton.SECONDARY) {\n                                        clearGuideLine();\n                                        event.consume();\n                                    }\n                                });\n                            } else {\n                                guideLine.relocate(clickEvent.getX(), 0);\n                            }\n                        });\n                    }\n\n                }, new ActionGroup(\n                        NbBundle.getMessage(this.getClass(), \"EventDetailChart.contextMenu.zoomHistory.name\"),\n                        new Back(controller),\n                        new Forward(controller))));\n        chartContextMenu.setAutoHide(true);\n        return chartContextMenu;\n    }","commit_id":"eadd7266edb7e7ad91c46c8d38e0ec06159f8aeb","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"GuideLine(double startX, double startY, double endX, double endY, DateAxis axis) {\n        super(startX, startY, endX, endY);\n        dateAxis = axis;\n        setCursor(Cursor.E_RESIZE);\n        getStrokeDashArray().setAll(5.0, 5.0);\n        setStroke(Color.RED);\n        setOpacity(.5);\n        setStrokeWidth(3);\n\n        setOnMouseEntered((MouseEvent event) -> {\n            setTooltip();\n        });\n\n        setOnMousePressed((MouseEvent event) -> {\n            startLayoutX = getLayoutX();\n            dragStartX = event.getScreenX();\n        });\n        setOnMouseDragged((MouseEvent event) -> {\n            double dX = event.getScreenX() - dragStartX;\n\n            relocate(startLayoutX + dX, 0);\n        });\n    }","id":8694,"modified_method":"GuideLine(double startX, double startY, double endX, double endY, Axis<DateTime> axis) {\n        super(startX, startY, endX, endY);\n        dateAxis = axis;\n        setCursor(Cursor.E_RESIZE);\n        getStrokeDashArray().setAll(5.0, 5.0);\n        setStroke(Color.RED);\n        setOpacity(.5);\n        setStrokeWidth(3);\n\n        setOnMouseEntered((MouseEvent event) -> {\n            setTooltip();\n        });\n\n        setOnMousePressed((MouseEvent event) -> {\n            startLayoutX = getLayoutX();\n            dragStartX = event.getScreenX();\n        });\n        setOnMouseDragged((MouseEvent event) -> {\n            double dX = event.getScreenX() - dragStartX;\n\n            relocate(startLayoutX + dX, 0);\n        });\n    }","commit_id":"eadd7266edb7e7ad91c46c8d38e0ec06159f8aeb","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public void stopAdapter(String namespace, String adapterName) throws AdapterNotFoundException {\n    AdapterSpecification adapterSpec = getAdapter(namespace, adapterName);\n    ApplicationSpecification appSpec = store.getApplication(Id.Application.from(namespace, adapterSpec.getType()));\n\n    checkWorkflow(adapterTypeInfos.get(adapterSpec.getType()).getProgramType());\n    Map<String, WorkflowSpecification> workflowSpecs = appSpec.getWorkflows();\n    for (Map.Entry<String, WorkflowSpecification> entry : workflowSpecs.entrySet()) {\n      Id.Program programId = Id.Program.from(namespace, appSpec.getName(), entry.getValue().getName());\n      scheduler.suspendSchedule(programId, SchedulableProgramType.WORKFLOW,\n                                constructScheduleName(programId, adapterName));\n    }\n  }","id":8695,"modified_method":"public void stopAdapter(String namespace, String adapterName) throws AdapterNotFoundException {\n    AdapterSpecification adapterSpec = getAdapter(namespace, adapterName);\n    ApplicationSpecification appSpec = store.getApplication(Id.Application.from(namespace, adapterSpec.getType()));\n\n    ProgramType programType = adapterTypeInfos.get(adapterSpec.getType()).getProgramType();\n    Preconditions.checkArgument(programType.equals(ProgramType.WORKFLOW),\n                                String.format(\"Unsupported program type %s for adapter\", programType.toString()));\n    Map<String, WorkflowSpecification> workflowSpecs = appSpec.getWorkflows();\n    for (Map.Entry<String, WorkflowSpecification> entry : workflowSpecs.entrySet()) {\n      Id.Program programId = Id.Program.from(namespace, appSpec.getName(), entry.getValue().getName());\n      scheduler.suspendSchedule(programId, SchedulableProgramType.WORKFLOW,\n                                constructScheduleName(programId, adapterName));\n    }\n  }","commit_id":"51ea5d17d768b310451b24c8f2f01b8fb02569b3","url":"https://github.com/caskdata/cdap"},{"original_method":"private void schedule(String namespaceId, ApplicationSpecification spec, AdapterTypeInfo adapterTypeInfo,\n                        AdapterSpecification adapterSpec) {\n    checkWorkflow(adapterTypeInfo.getProgramType());\n    Map<String, WorkflowSpecification> workflowSpecs = spec.getWorkflows();\n    for (Map.Entry<String, WorkflowSpecification> entry : workflowSpecs.entrySet()) {\n      Id.Program programId = Id.Program.from(namespaceId, spec.getName(), entry.getValue().getName());\n      addSchedule(programId, SchedulableProgramType.WORKFLOW, adapterSpec);\n    }\n  }","id":8696,"modified_method":"private void schedule(String namespaceId, ApplicationSpecification spec, AdapterTypeInfo adapterTypeInfo,\n                        AdapterSpecification adapterSpec) {\n    ProgramType programType = adapterTypeInfo.getProgramType();\n    // Only Workflows are supported to be scheduled in the current implementation\n    Preconditions.checkArgument(programType.equals(ProgramType.WORKFLOW),\n                                String.format(\"Unsupported program type %s for adapter\", programType.toString()));\n    Map<String, WorkflowSpecification> workflowSpecs = spec.getWorkflows();\n    for (Map.Entry<String, WorkflowSpecification> entry : workflowSpecs.entrySet()) {\n      Id.Program programId = Id.Program.from(namespaceId, spec.getName(), entry.getValue().getName());\n      addSchedule(programId, SchedulableProgramType.WORKFLOW, adapterSpec);\n    }\n  }","commit_id":"51ea5d17d768b310451b24c8f2f01b8fb02569b3","url":"https://github.com/caskdata/cdap"},{"original_method":"public void startAdapter(String namespace, String adapterName) throws AdapterNotFoundException {\n    AdapterSpecification adapterSpec = getAdapter(namespace, adapterName);\n    ApplicationSpecification appSpec = store.getApplication(Id.Application.from(namespace, adapterSpec.getType()));\n\n    checkWorkflow(adapterTypeInfos.get(adapterSpec.getType()).getProgramType());\n    Map<String, WorkflowSpecification> workflowSpecs = appSpec.getWorkflows();\n    for (Map.Entry<String, WorkflowSpecification> entry : workflowSpecs.entrySet()) {\n      Id.Program programId = Id.Program.from(namespace, appSpec.getName(), entry.getValue().getName());\n      scheduler.resumeSchedule(programId, SchedulableProgramType.WORKFLOW,\n                               constructScheduleName(programId, adapterName));\n    }\n  }","id":8697,"modified_method":"public void startAdapter(String namespace, String adapterName) throws AdapterNotFoundException {\n    AdapterSpecification adapterSpec = getAdapter(namespace, adapterName);\n    ApplicationSpecification appSpec = store.getApplication(Id.Application.from(namespace, adapterSpec.getType()));\n\n    ProgramType programType = adapterTypeInfos.get(adapterSpec.getType()).getProgramType();\n    Preconditions.checkArgument(programType.equals(ProgramType.WORKFLOW),\n                                String.format(\"Unsupported program type %s for adapter\", programType.toString()));\n    Map<String, WorkflowSpecification> workflowSpecs = appSpec.getWorkflows();\n    for (Map.Entry<String, WorkflowSpecification> entry : workflowSpecs.entrySet()) {\n      Id.Program programId = Id.Program.from(namespace, appSpec.getName(), entry.getValue().getName());\n      scheduler.resumeSchedule(programId, SchedulableProgramType.WORKFLOW,\n                               constructScheduleName(programId, adapterName));\n    }\n  }","commit_id":"51ea5d17d768b310451b24c8f2f01b8fb02569b3","url":"https://github.com/caskdata/cdap"},{"original_method":"private void unschedule(String namespaceId, ApplicationSpecification spec, AdapterTypeInfo adapterTypeInfo,\n                          AdapterSpecification adapterSpec) {\n    checkWorkflow(adapterTypeInfo.getProgramType());\n    Map<String, WorkflowSpecification> workflowSpecs = spec.getWorkflows();\n    for (Map.Entry<String, WorkflowSpecification> entry : workflowSpecs.entrySet()) {\n      Id.Program programId = Id.Program.from(namespaceId, adapterSpec.getType(), entry.getValue().getName());\n      deleteSchedule(programId, SchedulableProgramType.WORKFLOW,\n                     constructScheduleName(programId, adapterSpec.getName()));\n    }\n  }","id":8698,"modified_method":"private void unschedule(String namespaceId, ApplicationSpecification spec, AdapterTypeInfo adapterTypeInfo,\n                          AdapterSpecification adapterSpec) {\n    // Only Workflows are supported to be scheduled in the current implementation\n    ProgramType programType = adapterTypeInfo.getProgramType();\n    Preconditions.checkArgument(programType.equals(ProgramType.WORKFLOW),\n                                String.format(\"Unsupported program type %s for adapter\", programType.toString()));\n    Map<String, WorkflowSpecification> workflowSpecs = spec.getWorkflows();\n    for (Map.Entry<String, WorkflowSpecification> entry : workflowSpecs.entrySet()) {\n      Id.Program programId = Id.Program.from(namespaceId, adapterSpec.getType(), entry.getValue().getName());\n      deleteSchedule(programId, SchedulableProgramType.WORKFLOW,\n                     constructScheduleName(programId, adapterSpec.getName()));\n    }\n  }","commit_id":"51ea5d17d768b310451b24c8f2f01b8fb02569b3","url":"https://github.com/caskdata/cdap"},{"original_method":"private static void serializeResponseObjFieldsXML(StringBuilder sb, ResponseObject obj) {\n        boolean isAsync = false;\n        if (obj instanceof AsyncJobResponse)\n            isAsync = true;\n\n        //Field[] fields = obj.getClass().getDeclaredFields();\n        Field[] fields = getFlattenFields(obj.getClass());\n        for (Field field : fields) {\n            if ((field.getModifiers() & Modifier.TRANSIENT) != 0) {\n                continue; // skip transient fields\n            }\n\n            SerializedName serializedName = field.getAnnotation(SerializedName.class);\n            if (serializedName == null) {\n                continue; // skip fields w/o serialized name\n            }\n\n            field.setAccessible(true);\n            Object fieldValue = null;\n            try {\n                fieldValue = field.get(obj);\n            } catch (IllegalArgumentException e) {\n                throw new CloudRuntimeException(\"how illegal is it?\", e);\n            } catch (IllegalAccessException e) {\n                throw new CloudRuntimeException(\"come on...we set accessible already\", e);\n            }\n            if (fieldValue != null) {\n                if (fieldValue instanceof ResponseObject) {\n                    ResponseObject subObj = (ResponseObject) fieldValue;\n                    if (isAsync) {\n                        sb.append(\"<jobresult>\");\n                    }\n                    serializeResponseObjXML(sb, subObj);\n                    if (isAsync) {\n                        sb.append(\"<\/jobresult>\");\n                    }\n                } else if (fieldValue instanceof List<?>) {\n                    List<?> subResponseList = (List<Object>) fieldValue;                    \n                    boolean usedUuidList = false;\n                    for (Object value : subResponseList) {\n                        if (value instanceof ResponseObject) {\n                            ResponseObject subObj = (ResponseObject) value;\n                            if (serializedName != null) {\n                                subObj.setObjectName(serializedName.value());\n                            }\n                            serializeResponseObjXML(sb, subObj);\n                        } else if (value instanceof IdentityProxy) {\n                        \t// Only exception reponses carry a list of IdentityProxy objects.\n                        \tIdentityProxy idProxy = (IdentityProxy)value;                        \t\n                        \tString id = (idProxy.getValue() != null ? String.valueOf(idProxy.getValue()) : \"\");\n                        \tif(!id.isEmpty()) {\n                        \t\tIdentityDao identityDao = new IdentityDaoImpl();\n                        \t\tid = identityDao.getIdentityUuid(idProxy.getTableName(), id);\n                        \t}                        \t\n                        \tif(id != null && !id.isEmpty()) {\n                        \t\t// If this is the first IdentityProxy field encountered, put in a uuidList tag.\n                        \t\tif (!usedUuidList) {\n                        \t\t\tsb.append(\"<\" + serializedName.value() + \">\");\n                        \t\t\tusedUuidList = true;\n                        \t\t}\n                        \t\tsb.append(\"<\" + \"uuid\" + \">\" + id + \"<\/\" + \"uuid\" + \">\");                        \t\t\n                        \t}\n                        \t// Append the new idFieldName property also.\n                        \tString idFieldName = idProxy.getidFieldName();\n                        \tif (idFieldName != null) {\n                        \t\tsb.append(\"<\" + \"uuidProperty\" + \">\" + idFieldName + \"<\/\" + \"uuidProperty\" + \">\");                        \t\t\n                        \t}\n                        }                        \n                    }\n                    if (usedUuidList) {\n                    \t// close the uuidList.\n                    \tsb.append(\"<\/\" + serializedName.value() + \">\");\n                    }\n                } else if (fieldValue instanceof Date) {\n                    sb.append(\"<\" + serializedName.value() + \">\" + BaseCmd.getDateString((Date) fieldValue) + \"<\/\" + serializedName.value() + \">\");                \n                } else if (fieldValue instanceof IdentityProxy) {                \t\n                \tIdentityProxy idProxy = (IdentityProxy)fieldValue;\n                \tString id = (idProxy.getValue() != null ? String.valueOf(idProxy.getValue()) : \"\");\n                \tif(!id.isEmpty()) {\n                \t\tIdentityDao identityDao = new IdentityDaoImpl();\n                \t\tif(idProxy.getTableName() != null) {\n                \t\t    id = identityDao.getIdentityUuid(idProxy.getTableName(), id);\n                \t\t} else {\n                \t\t    s_logger.warn(\"IdentityProxy sanity check issue, invalid IdentityProxy table name found in class: \" + obj.getClass().getName());\n                \t\t}\n                \t}\n                \tif(id != null && !id.isEmpty())\n                \t\tsb.append(\"<\" + serializedName.value() + \">\" + id + \"<\/\" + serializedName.value() + \">\");\n                } else {\n                    String resultString = escapeSpecialXmlChars(fieldValue.toString());\n                    if (!(obj instanceof ExceptionResponse)) {\n                        resultString = encodeParam(resultString);\n                    }\n                    \n                    sb.append(\"<\" + serializedName.value() + \">\" + resultString + \"<\/\" + serializedName.value() + \">\");\n                }\n            }\n        }\n    }","id":8699,"modified_method":"private static void serializeResponseObjFieldsXML(StringBuilder sb, ResponseObject obj) {\n        boolean isAsync = false;\n        if (obj instanceof AsyncJobResponse)\n            isAsync = true;\n\n        //Field[] fields = obj.getClass().getDeclaredFields();\n        Field[] fields = getFlattenFields(obj.getClass());\n        for (Field field : fields) {\n            if ((field.getModifiers() & Modifier.TRANSIENT) != 0) {\n                continue; // skip transient fields\n            }\n\n            SerializedName serializedName = field.getAnnotation(SerializedName.class);\n            if (serializedName == null) {\n                continue; // skip fields w/o serialized name\n            }\n\n            field.setAccessible(true);\n            Object fieldValue = null;\n            try {\n                fieldValue = field.get(obj);\n            } catch (IllegalArgumentException e) {\n                throw new CloudRuntimeException(\"how illegal is it?\", e);\n            } catch (IllegalAccessException e) {\n                throw new CloudRuntimeException(\"come on...we set accessible already\", e);\n            }\n            if (fieldValue != null) {\n                if (fieldValue instanceof ResponseObject) {\n                    ResponseObject subObj = (ResponseObject) fieldValue;\n                    if (isAsync) {\n                        sb.append(\"<jobresult>\");\n                    }\n                    serializeResponseObjXML(sb, subObj);\n                    if (isAsync) {\n                        sb.append(\"<\/jobresult>\");\n                    }\n                } else if (fieldValue instanceof List<?>) {\n                    List<?> subResponseList = (List<Object>) fieldValue;                    \n                    boolean usedUuidList = false;\n                    for (Object value : subResponseList) {\n                        if (value instanceof ResponseObject) {\n                            ResponseObject subObj = (ResponseObject) value;\n                            if (serializedName != null) {\n                                subObj.setObjectName(serializedName.value());\n                            }\n                            serializeResponseObjXML(sb, subObj);\n                        } else if (value instanceof IdentityProxy) {\n                        \t// Only exception reponses carry a list of IdentityProxy objects.\n                        \tIdentityProxy idProxy = (IdentityProxy)value;                        \t\n                        \tString id = (idProxy.getValue() != null ? String.valueOf(idProxy.getValue()) : \"\");\n                        \tif(!id.isEmpty()) {\n                        \t\tIdentityDao identityDao = new IdentityDaoImpl();\n                        \t\tid = identityDao.getIdentityUuid(idProxy.getTableName(), id);\n                        \t}                        \t\n                        \tif(id != null && !id.isEmpty()) {\n                        \t\t// If this is the first IdentityProxy field encountered, put in a uuidList tag.\n                        \t\tif (!usedUuidList) {\n                        \t\t\tsb.append(\"<\").append(serializedName.value()).append(\">\");\n                        \t\t\tusedUuidList = true;\n                        \t\t}\n                        \t\tsb.append(\"<uuid>\").append(id).append(\"<\/uuid>\");                        \t\t\n                        \t}\n                        \t// Append the new idFieldName property also.\n                        \tString idFieldName = idProxy.getidFieldName();\n                        \tif (idFieldName != null) {\n                        \t\tsb.append(\"<uuidProperty>\").append(idFieldName).append(\"<\/uuidProperty>\");                        \t\t\n                        \t}\n                        }                        \n                    }\n                    if (usedUuidList) {\n                    \t// close the uuidList.\n                    \tsb.append(\"<\/\").append(serializedName.value()).append(\">\");\n                    }\n                } else if (fieldValue instanceof Date) {\n                    sb.append(\"<\").append(\">\").append(BaseCmd.getDateString((Date) fieldValue)).append(\"<\/\").append(serializedName.value()).append(\">\");                \n                } else if (fieldValue instanceof IdentityProxy) {                \t\n                \tIdentityProxy idProxy = (IdentityProxy)fieldValue;\n                \tString id = (idProxy.getValue() != null ? String.valueOf(idProxy.getValue()) : \"\");\n                \tif(!id.isEmpty()) {\n                \t\tIdentityDao identityDao = new IdentityDaoImpl();\n                \t\tif(idProxy.getTableName() != null) {\n                \t\t    id = identityDao.getIdentityUuid(idProxy.getTableName(), id);\n                \t\t} else {\n                \t\t    s_logger.warn(\"IdentityProxy sanity check issue, invalid IdentityProxy table name found in class: \" + obj.getClass().getName());\n                \t\t}\n                \t}\n                \tif(id != null && !id.isEmpty())\n                \t\tsb.append(\"<\").append(serializedName.value()).append(\">\").append(id).append(\"<\/\").append(serializedName.value()).append(\">\");\n                } else {\n                    String resultString = escapeSpecialXmlChars(fieldValue.toString());\n                    if (!(obj instanceof ExceptionResponse)) {\n                        resultString = encodeParam(resultString);\n                    }\n                    \n                    sb.append(\"<\").append(serializedName.value()).append(\">\").append(resultString).append(\"<\/\").append(serializedName.value()).append(\">\");\n                }\n            }\n        }\n    }","commit_id":"fe41325e969b08126f963f7877d13d3534089414","url":"https://github.com/apache/cloudstack"},{"original_method":"private static String toXMLSerializedString(ResponseObject result) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\");\n        sb.append(\"<\" + result.getResponseName() + \" cloud-stack-version=\\\"\" + ApiDBUtils.getVersion() + \"\\\">\");\n\n        if (result instanceof ListResponse) {\n            Integer count = ((ListResponse) result).getCount();\n\n            if (count != null && count != 0) {\n                sb.append(\"<\" + ApiConstants.COUNT + \">\" + ((ListResponse) result).getCount() + \"<\/\" + ApiConstants.COUNT + \">\");\n            }\n            List<? extends ResponseObject> responses = ((ListResponse) result).getResponses();\n            if ((responses != null) && !responses.isEmpty()) {\n                for (ResponseObject obj : responses) {\n                    serializeResponseObjXML(sb, obj);\n                }\n            }\n        } else {\n            if (result instanceof CreateCmdResponse || result instanceof AsyncJobResponse) {\n                serializeResponseObjFieldsXML(sb, result);\n            } else {\n                serializeResponseObjXML(sb, result);\n            }\n        }\n\n        sb.append(\"<\/\" + result.getResponseName() + \">\");\n        return sb.toString();\n    }","id":8700,"modified_method":"private static String toXMLSerializedString(ResponseObject result) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\");\n        sb.append(\"<\").append(result.getResponseName()).append(\" cloud-stack-version=\\\"\").append(ApiDBUtils.getVersion()).append(\"\\\">\");\n\n        if (result instanceof ListResponse) {\n            Integer count = ((ListResponse) result).getCount();\n\n            if (count != null && count != 0) {\n                sb.append(\"<\").append(ApiConstants.COUNT).append(\">\").append(((ListResponse) result).getCount()).\n                append(\"<\/\").append(ApiConstants.COUNT).append(\">\");\n            }\n            List<? extends ResponseObject> responses = ((ListResponse) result).getResponses();\n            if ((responses != null) && !responses.isEmpty()) {\n                for (ResponseObject obj : responses) {\n                    serializeResponseObjXML(sb, obj);\n                }\n            }\n        } else {\n            if (result instanceof CreateCmdResponse || result instanceof AsyncJobResponse) {\n                serializeResponseObjFieldsXML(sb, result);\n            } else {\n                serializeResponseObjXML(sb, result);\n            }\n        }\n\n        sb.append(\"<\/\").append(result.getResponseName()).append(\">\");\n        return sb.toString();\n    }","commit_id":"fe41325e969b08126f963f7877d13d3534089414","url":"https://github.com/apache/cloudstack"},{"original_method":"public static String toJSONSerializedString(ResponseObject result) {\n        if (result != null) {\n            Gson gson = ApiResponseGsonHelper.getBuilder().excludeFieldsWithModifiers(Modifier.TRANSIENT).create();\n            \t\n            StringBuilder sb = new StringBuilder();\n\n            sb.append(\"{ \\\"\" + result.getResponseName() + \"\\\" : \");\n            if (result instanceof ListResponse) {\n                List<? extends ResponseObject> responses = ((ListResponse) result).getResponses();\n                if ((responses != null) && !responses.isEmpty()) {\n\n                    Integer count = ((ListResponse) result).getCount();\n                    String jsonStr = gson.toJson(responses.get(0));                    \n                    jsonStr = unescape(jsonStr);\n\n                    if (count != null && count != 0) {\n                        sb.append(\"{ \\\"\" + ApiConstants.COUNT + \"\\\":\" + count + \" ,\\\"\" + responses.get(0).getObjectName() + \"\\\" : [  \" + jsonStr);\n                    }\n                    for (int i = 1; i < ((ListResponse) result).getResponses().size(); i++) {\n                        jsonStr = gson.toJson(responses.get(i));\n                        jsonStr = unescape(jsonStr);\n                        sb.append(\", \" + jsonStr);\n                    }\n                    sb.append(\" ] }\");\n                } else {\n                    sb.append(\"{ }\");\n                }\n            } else if (result instanceof SuccessResponse) {\n                sb.append(\"{ \\\"success\\\" : \\\"\" + ((SuccessResponse) result).getSuccess() + \"\\\"} \");\n            } else if (result instanceof ExceptionResponse) {            \t\n            \tString jsonErrorText = gson.toJson((ExceptionResponse) result);\n            \tjsonErrorText = unescape(jsonErrorText);\n            \tsb.append(jsonErrorText);            \t\n            } else {\n                String jsonStr = gson.toJson(result);\n                if ((jsonStr != null) && !\"\".equals(jsonStr)) {\n                    jsonStr = unescape(jsonStr);\n                    if (result instanceof AsyncJobResponse || result instanceof CreateCmdResponse) {\n                        sb.append(jsonStr);\n                    } else {\n                        sb.append(\" { \\\"\" + result.getObjectName() + \"\\\" : \" + jsonStr + \" } \");\n                    }\n                } else {\n                    sb.append(\"{ }\");\n                }\n            }\n            sb.append(\" }\");            \n            return sb.toString();\n        }\n        return null;\n    }","id":8701,"modified_method":"public static String toJSONSerializedString(ResponseObject result) {\n        if (result != null) {\n            Gson gson = ApiResponseGsonHelper.getBuilder().excludeFieldsWithModifiers(Modifier.TRANSIENT).create();\n            \t\n            StringBuilder sb = new StringBuilder();\n\n            sb.append(\"{ \\\"\").append(result.getResponseName()).append(\"\\\" : \");\n            if (result instanceof ListResponse) {\n                List<? extends ResponseObject> responses = ((ListResponse) result).getResponses();\n                if ((responses != null) && !responses.isEmpty()) {\n\n                    Integer count = ((ListResponse) result).getCount();\n                    String jsonStr = gson.toJson(responses.get(0));                    \n                    jsonStr = unescape(jsonStr);\n\n                    if (count != null && count != 0) {\n                        sb.append(\"{ \\\"\").append(ApiConstants.COUNT).append(\"\\\":\").append(count).append(\" ,\\\"\").\n                        append(responses.get(0).getObjectName()).append(\"\\\" : [  \").append(jsonStr);\n                    }\n                    for (int i = 1; i < ((ListResponse) result).getResponses().size(); i++) {\n                        jsonStr = gson.toJson(responses.get(i));\n                        jsonStr = unescape(jsonStr);\n                        sb.append(\", \").append(jsonStr);\n                    }\n                    sb.append(\" ] }\");\n                } else {\n                    sb.append(\"{ }\");\n                }\n            } else if (result instanceof SuccessResponse) {\n                sb.append(\"{ \\\"success\\\" : \\\"\").append(((SuccessResponse) result).getSuccess()).append(\"\\\"} \");\n            } else if (result instanceof ExceptionResponse) {            \t\n            \tString jsonErrorText = gson.toJson((ExceptionResponse) result);\n            \tjsonErrorText = unescape(jsonErrorText);\n            \tsb.append(jsonErrorText);            \t\n            } else {\n                String jsonStr = gson.toJson(result);\n                if ((jsonStr != null) && !\"\".equals(jsonStr)) {\n                    jsonStr = unescape(jsonStr);\n                    if (result instanceof AsyncJobResponse || result instanceof CreateCmdResponse) {\n                        sb.append(jsonStr);\n                    } else {\n                        sb.append(\" { \\\"\").append(result.getObjectName()).append(\"\\\" : \").append(jsonStr).append(\" } \");\n                    }\n                } else {\n                    sb.append(\"{ }\");\n                }\n            }\n            sb.append(\" }\");            \n            return sb.toString();\n        }\n        return null;\n    }","commit_id":"fe41325e969b08126f963f7877d13d3534089414","url":"https://github.com/apache/cloudstack"},{"original_method":"private static void serializeResponseObjXML(StringBuilder sb, ResponseObject obj) {\n        if (!(obj instanceof SuccessResponse) && !(obj instanceof ExceptionResponse)) {\n            sb.append(\"<\" + obj.getObjectName() + \">\");\n        }\n        serializeResponseObjFieldsXML(sb, obj);\n        if (!(obj instanceof SuccessResponse) && !(obj instanceof ExceptionResponse)) {\n            sb.append(\"<\/\" + obj.getObjectName() + \">\");\n        }\n    }","id":8702,"modified_method":"private static void serializeResponseObjXML(StringBuilder sb, ResponseObject obj) {\n        if (!(obj instanceof SuccessResponse) && !(obj instanceof ExceptionResponse)) {\n            sb.append(\"<\").append(obj.getObjectName()).append(\">\");\n        }\n        serializeResponseObjFieldsXML(sb, obj);\n        if (!(obj instanceof SuccessResponse) && !(obj instanceof ExceptionResponse)) {\n            sb.append(\"<\/\").append(obj.getObjectName()).append(\">\");\n        }\n    }","commit_id":"fe41325e969b08126f963f7877d13d3534089414","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public void init(byte[] ksBits, String ksPassword) {\n        s_logger.info(\"Start initializing SSL\");\n\n        if (ksBits == null) {\n            try {\n                s_logger.info(\"Initializing SSL from built-in default certificate\");\n\n                final Properties dbProps = DbProperties.getDbProperties();\n                char[] passphrase = dbProps.getProperty(\"db.cloud.keyStorePassphrase\").toCharArray();\n                KeyStore ks = KeyStore.getInstance(\"JKS\");\n\n                ks.load(new FileInputStream(\"certs/realhostip.keystore\"), passphrase);\n                // ks.load(ConsoleProxy.class.getResourceAsStream(\"/realhostip.keystore\"), passphrase);\n\n                s_logger.info(\"SSL certificate loaded\");\n\n                KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n                kmf.init(ks, passphrase);\n                s_logger.info(\"Key manager factory is initialized\");\n\n                TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n                tmf.init(ks);\n                s_logger.info(\"Trust manager factory is initialized\");\n\n                sslContext = SSLContext.getInstance(\"TLS\");\n                sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n                s_logger.info(\"SSL context is initialized\");\n            } catch (Exception ioe) {\n                s_logger.error(ioe.toString(), ioe);\n            }\n\n        } else {\n            char[] passphrase = ksPassword != null ? ksPassword.toCharArray() : null;\n            try {\n                s_logger.info(\"Initializing SSL from passed-in certificate\");\n\n                KeyStore ks = KeyStore.getInstance(\"JKS\");\n                ks.load(new ByteArrayInputStream(ksBits), passphrase);\n\n                KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n                kmf.init(ks, passphrase);\n                s_logger.info(\"Key manager factory is initialized\");\n\n                TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n                tmf.init(ks);\n                s_logger.info(\"Trust manager factory is initialized\");\n\n                sslContext = SSLContext.getInstance(\"TLS\");\n                sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n                s_logger.info(\"SSL context is initialized\");\n            } catch (Exception e) {\n                s_logger.error(\"Unable to init factory due to exception \", e);\n            }\n        }\n\n    }","id":8703,"modified_method":"@Override\n    public void init(byte[] ksBits, String ksPassword) {\n        s_logger.info(\"Start initializing SSL\");\n\n        if (ksBits == null) {\n            try {\n                s_logger.info(\"Initializing SSL from built-in default certificate\");\n\n                final String pass = DbProperties.getDbProperties().getProperty(\"db.cloud.keyStorePassphrase\");\n                char[] passphrase = \"vmops.com\".toCharArray();\n                if (pass != null) {\n                    passphrase = pass.toCharArray();\n                }\n                KeyStore ks = KeyStore.getInstance(\"JKS\");\n\n                ks.load(new FileInputStream(\"certs/realhostip.keystore\"), passphrase);\n                // ks.load(ConsoleProxy.class.getResourceAsStream(\"/realhostip.keystore\"), passphrase);\n\n                s_logger.info(\"SSL certificate loaded\");\n\n                KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n                kmf.init(ks, passphrase);\n                s_logger.info(\"Key manager factory is initialized\");\n\n                TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n                tmf.init(ks);\n                s_logger.info(\"Trust manager factory is initialized\");\n\n                sslContext = SSLContext.getInstance(\"TLS\");\n                sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n                s_logger.info(\"SSL context is initialized\");\n            } catch (Exception ioe) {\n                s_logger.error(ioe.toString(), ioe);\n            }\n\n        } else {\n            char[] passphrase = ksPassword != null ? ksPassword.toCharArray() : null;\n            try {\n                s_logger.info(\"Initializing SSL from passed-in certificate\");\n\n                KeyStore ks = KeyStore.getInstance(\"JKS\");\n                ks.load(new ByteArrayInputStream(ksBits), passphrase);\n\n                KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n                kmf.init(ks, passphrase);\n                s_logger.info(\"Key manager factory is initialized\");\n\n                TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n                tmf.init(ks);\n                s_logger.info(\"Trust manager factory is initialized\");\n\n                sslContext = SSLContext.getInstance(\"TLS\");\n                sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n                s_logger.info(\"SSL context is initialized\");\n            } catch (Exception e) {\n                s_logger.error(\"Unable to init factory due to exception \", e);\n            }\n        }\n\n    }","commit_id":"57c48414030a9961e82d7e6f39a24b84ccc7e371","url":"https://github.com/apache/cloudstack"},{"original_method":"public static SSLContext initSSLContext(boolean isClient) throws GeneralSecurityException, IOException {\n        InputStream stream;\n        SSLContext sslContext = null;\n        KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n        TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n        KeyStore ks = KeyStore.getInstance(\"JKS\");\n        TrustManager[] tms;\n\n        File confFile = PropertiesUtil.findConfigFile(\"db.properties\");\n        if (null != confFile && !isClient) {\n            final Properties dbProps = DbProperties.getDbProperties();\n            char[] passphrase = dbProps.getProperty(\"db.cloud.keyStorePassphrase\").toCharArray();\n            String confPath = confFile.getParent();\n            String keystorePath = confPath + keystoreFile;\n            if (new File(keystorePath).exists()) {\n                stream = new FileInputStream(keystorePath);\n            } else {\n                s_logger.warn(\"SSL: Fail to find the generated keystore. Loading fail-safe one to continue.\");\n                stream = NioConnection.class.getResourceAsStream(\"/cloud.keystore\");\n            }\n            ks.load(stream, passphrase);\n            stream.close();\n            kmf.init(ks, passphrase);\n            tmf.init(ks);\n            tms = tmf.getTrustManagers();\n        } else {\n            ks.load(null, null);\n            kmf.init(ks, null);\n            tms = new TrustManager[1];\n            tms[0] = new TrustAllManager();\n        }\n\n        sslContext = SSLContext.getInstance(\"TLS\");\n        sslContext.init(kmf.getKeyManagers(), tms, null);\n        if (s_logger.isTraceEnabled()) {\n            s_logger.trace(\"SSL: SSLcontext has been initialized\");\n        }\n\n        return sslContext;\n    }","id":8704,"modified_method":"public static SSLContext initSSLContext(boolean isClient) throws GeneralSecurityException, IOException {\n        InputStream stream;\n        SSLContext sslContext = null;\n        KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n        TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n        KeyStore ks = KeyStore.getInstance(\"JKS\");\n        TrustManager[] tms;\n\n        File confFile = PropertiesUtil.findConfigFile(\"db.properties\");\n        if (null != confFile && !isClient) {\n            final String pass = DbProperties.getDbProperties().getProperty(\"db.cloud.keyStorePassphrase\");\n            char[] passphrase = \"vmops.com\".toCharArray();\n            if (pass != null) {\n                passphrase = pass.toCharArray();\n            }\n            String confPath = confFile.getParent();\n            String keystorePath = confPath + keystoreFile;\n            if (new File(keystorePath).exists()) {\n                stream = new FileInputStream(keystorePath);\n            } else {\n                s_logger.warn(\"SSL: Fail to find the generated keystore. Loading fail-safe one to continue.\");\n                stream = NioConnection.class.getResourceAsStream(\"/cloud.keystore\");\n                passphrase = \"vmops.com\".toCharArray();\n            }\n            ks.load(stream, passphrase);\n            stream.close();\n            kmf.init(ks, passphrase);\n            tmf.init(ks);\n            tms = tmf.getTrustManagers();\n        } else {\n            ks.load(null, null);\n            kmf.init(ks, null);\n            tms = new TrustManager[1];\n            tms[0] = new TrustAllManager();\n        }\n\n        sslContext = SSLContext.getInstance(\"TLS\");\n        sslContext.init(kmf.getKeyManagers(), tms, null);\n        if (s_logger.isTraceEnabled()) {\n            s_logger.trace(\"SSL: SSLcontext has been initialized\");\n        }\n\n        return sslContext;\n    }","commit_id":"57c48414030a9961e82d7e6f39a24b84ccc7e371","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public void init(byte[] ksBits, String ksPassword) {\n        s_logger.info(\"Start initializing SSL\");\n\n        if (ksBits == null) {\n            try {\n                s_logger.info(\"Initializing SSL from built-in default certificate\");\n\n                final Properties dbProps = DbProperties.getDbProperties();\n                char[] passphrase = dbProps.getProperty(\"db.cloud.keyStorePassphrase\").toCharArray();\n                KeyStore ks = KeyStore.getInstance(\"JKS\");\n\n                ks.load(new FileInputStream(\"certs/realhostip.keystore\"), passphrase);\n                // ks.load(ConsoleProxy.class.getResourceAsStream(\"/realhostip.keystore\"), passphrase);\n\n                s_logger.info(\"SSL certificate loaded\");\n\n                KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n                kmf.init(ks, passphrase);\n                s_logger.info(\"Key manager factory is initialized\");\n\n                TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n                tmf.init(ks);\n                s_logger.info(\"Trust manager factory is initialized\");\n\n                sslContext = SSLContext.getInstance(\"TLS\");\n                sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n                s_logger.info(\"SSL context is initialized\");\n            } catch (Exception ioe) {\n                s_logger.error(ioe.toString(), ioe);\n            }\n\n        } else {\n            char[] passphrase = ksPassword != null ? ksPassword.toCharArray() : null;\n            try {\n                s_logger.info(\"Initializing SSL from passed-in certificate\");\n\n                KeyStore ks = KeyStore.getInstance(\"JKS\");\n                ks.load(new ByteArrayInputStream(ksBits), passphrase);\n\n                KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n                kmf.init(ks, passphrase);\n                s_logger.info(\"Key manager factory is initialized\");\n\n                TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n                tmf.init(ks);\n                s_logger.info(\"Trust manager factory is initialized\");\n\n                sslContext = SSLContext.getInstance(\"TLS\");\n                sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n                s_logger.info(\"SSL context is initialized\");\n            } catch (Exception e) {\n                s_logger.error(\"Unable to init factory due to exception \", e);\n            }\n        }\n\n    }","id":8705,"modified_method":"@Override\n    public void init(byte[] ksBits, String ksPassword) {\n        s_logger.info(\"Start initializing SSL\");\n\n        if (ksBits == null) {\n            try {\n                s_logger.info(\"Initializing SSL from built-in default certificate\");\n\n                final String pass = DbProperties.getDbProperties().getProperty(\"db.cloud.keyStorePassphrase\");\n                char[] passphrase = \"vmops.com\".toCharArray();\n                if (pass != null) {\n                    passphrase = pass.toCharArray();\n                }\n                KeyStore ks = KeyStore.getInstance(\"JKS\");\n\n                ks.load(new FileInputStream(\"certs/realhostip.keystore\"), passphrase);\n                // ks.load(ConsoleProxy.class.getResourceAsStream(\"/realhostip.keystore\"), passphrase);\n\n                s_logger.info(\"SSL certificate loaded\");\n\n                KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n                kmf.init(ks, passphrase);\n                s_logger.info(\"Key manager factory is initialized\");\n\n                TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n                tmf.init(ks);\n                s_logger.info(\"Trust manager factory is initialized\");\n\n                sslContext = SSLContext.getInstance(\"TLS\");\n                sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n                s_logger.info(\"SSL context is initialized\");\n            } catch (Exception ioe) {\n                s_logger.error(ioe.toString(), ioe);\n            }\n\n        } else {\n            char[] passphrase = ksPassword != null ? ksPassword.toCharArray() : null;\n            try {\n                s_logger.info(\"Initializing SSL from passed-in certificate\");\n\n                KeyStore ks = KeyStore.getInstance(\"JKS\");\n                ks.load(new ByteArrayInputStream(ksBits), passphrase);\n\n                KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n                kmf.init(ks, passphrase);\n                s_logger.info(\"Key manager factory is initialized\");\n\n                TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n                tmf.init(ks);\n                s_logger.info(\"Trust manager factory is initialized\");\n\n                sslContext = SSLContext.getInstance(\"TLS\");\n                sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n                s_logger.info(\"SSL context is initialized\");\n            } catch (Exception e) {\n                s_logger.error(\"Unable to init factory due to exception \", e);\n            }\n        }\n\n    }","commit_id":"865b2e6791a37371fff4c43c974c90f44d24c418","url":"https://github.com/apache/cloudstack"},{"original_method":"public static SSLContext initSSLContext(boolean isClient) throws GeneralSecurityException, IOException {\n        InputStream stream;\n        SSLContext sslContext = null;\n        KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n        TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n        KeyStore ks = KeyStore.getInstance(\"JKS\");\n        TrustManager[] tms;\n\n        File confFile = PropertiesUtil.findConfigFile(\"db.properties\");\n        if (null != confFile && !isClient) {\n            final Properties dbProps = DbProperties.getDbProperties();\n            char[] passphrase = dbProps.getProperty(\"db.cloud.keyStorePassphrase\").toCharArray();\n            String confPath = confFile.getParent();\n            String keystorePath = confPath + keystoreFile;\n            if (new File(keystorePath).exists()) {\n                stream = new FileInputStream(keystorePath);\n            } else {\n                s_logger.warn(\"SSL: Fail to find the generated keystore. Loading fail-safe one to continue.\");\n                stream = NioConnection.class.getResourceAsStream(\"/cloud.keystore\");\n            }\n            ks.load(stream, passphrase);\n            stream.close();\n            kmf.init(ks, passphrase);\n            tmf.init(ks);\n            tms = tmf.getTrustManagers();\n        } else {\n            ks.load(null, null);\n            kmf.init(ks, null);\n            tms = new TrustManager[1];\n            tms[0] = new TrustAllManager();\n        }\n\n        sslContext = SSLContext.getInstance(\"TLS\");\n        sslContext.init(kmf.getKeyManagers(), tms, null);\n        if (s_logger.isTraceEnabled()) {\n            s_logger.trace(\"SSL: SSLcontext has been initialized\");\n        }\n\n        return sslContext;\n    }","id":8706,"modified_method":"public static SSLContext initSSLContext(boolean isClient) throws GeneralSecurityException, IOException {\n        InputStream stream;\n        SSLContext sslContext = null;\n        KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n        TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n        KeyStore ks = KeyStore.getInstance(\"JKS\");\n        TrustManager[] tms;\n\n        File confFile = PropertiesUtil.findConfigFile(\"db.properties\");\n        if (null != confFile && !isClient) {\n            final String pass = DbProperties.getDbProperties().getProperty(\"db.cloud.keyStorePassphrase\");\n            char[] passphrase = \"vmops.com\".toCharArray();\n            if (pass != null) {\n                passphrase = pass.toCharArray();\n            }\n            String confPath = confFile.getParent();\n            String keystorePath = confPath + keystoreFile;\n            if (new File(keystorePath).exists()) {\n                stream = new FileInputStream(keystorePath);\n            } else {\n                s_logger.warn(\"SSL: Fail to find the generated keystore. Loading fail-safe one to continue.\");\n                stream = NioConnection.class.getResourceAsStream(\"/cloud.keystore\");\n                passphrase = \"vmops.com\".toCharArray();\n            }\n            ks.load(stream, passphrase);\n            stream.close();\n            kmf.init(ks, passphrase);\n            tmf.init(ks);\n            tms = tmf.getTrustManagers();\n        } else {\n            ks.load(null, null);\n            kmf.init(ks, null);\n            tms = new TrustManager[1];\n            tms[0] = new TrustAllManager();\n        }\n\n        sslContext = SSLContext.getInstance(\"TLS\");\n        sslContext.init(kmf.getKeyManagers(), tms, null);\n        if (s_logger.isTraceEnabled()) {\n            s_logger.trace(\"SSL: SSLcontext has been initialized\");\n        }\n\n        return sslContext;\n    }","commit_id":"865b2e6791a37371fff4c43c974c90f44d24c418","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    protected void connectSensors() {\n        super.connectSensors();\n        setAttribute(DB_URL, String.format(\"mysql://%s:%s/\", getAttribute(HOSTNAME), getAttribute(MYSQL_PORT)));\n        \n        /*        \n         * TODO status gives us things like:\n         *   Uptime: 2427  Threads: 1  Questions: 581  Slow queries: 0  Opens: 53  Flush tables: 1  Open tables: 35  Queries per second avg: 0.239\n         * So can extract lots of sensors from that.\n         */\n        Location machine = Iterables.get(getLocations(), 0, null);\n        \n        if (machine instanceof SshMachineLocation) {\n            String cmd = getDriver().getStatusCmd();\n            \n            feed = SshFeed.builder()\n                    .entity(this)\n                    .machine((SshMachineLocation)machine)\n                    .poll(new SshPollConfig<Boolean>(SERVICE_UP)\n                            .command(cmd)\n                            .onSuccess(new Function<SshPollValue, Boolean>() {\n                                public Boolean apply(SshPollValue input) {\n                                    return (input.getExitStatus() == 0);\n                                }})\n                            .onError(Functions.constant(false)))\n                    .build();\n        } else {\n            LOG.warn(\"Location(s) %s not an ssh-machine location, so not polling for status; setting serviceUp immediately\", getLocations());\n            setAttribute(SERVICE_UP, true);\n        }\n    }","id":8707,"modified_method":"@Override\n    protected void connectSensors() {\n        super.connectSensors();\n        setAttribute(DB_URL, String.format(\"mysql://%s:%s/\", getAttribute(HOSTNAME), getAttribute(MYSQL_PORT)));\n        \n        /*        \n         * TODO status gives us things like:\n         *   Uptime: 2427  Threads: 1  Questions: 581  Slow queries: 0  Opens: 53  Flush tables: 1  Open tables: 35  Queries per second avg: 0.239\n         * So can extract lots of sensors from that.\n         */\n        Location machine = Iterables.get(getLocations(), 0, null);\n        \n        if (machine instanceof SshMachineLocation) {\n            String cmd = getDriver().getStatusCmd();\n            \n            feed = SshFeed.builder()\n                    .entity(this)\n                    .machine((SshMachineLocation)machine)\n                    .poll(new SshPollConfig<Boolean>(SERVICE_UP)\n                            .command(cmd)\n                            .onSuccess(Functions.constant(true))\n                            .onFailure(Functions.constant(false))\n                            .onException(Functions.constant(false)))\n                    .build();\n        } else {\n            LOG.warn(\"Location(s) %s not an ssh-machine location, so not polling for status; setting serviceUp immediately\", getLocations());\n            setAttribute(SERVICE_UP, true);\n        }\n    }","commit_id":"2ac4d656c641ecf18fd60a45c4add26aa79612ad","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@Override\n    protected void connectSensors() {\n        super.connectSensors();\n        setAttribute(DB_URL, String.format(\"postgresql://%s:%s/\", getAttribute(HOSTNAME), getAttribute(POSTGRESQL_PORT)));\n\n        Location machine = Iterables.get(getLocations(), 0, null);\n\n        if (machine instanceof SshMachineLocation) {\n            String cmd = getDriver().getStatusCmd();\n\n            feed = SshFeed.builder()\n                    .entity(this)\n                    .machine((SshMachineLocation)machine)\n                    .poll(new SshPollConfig<Boolean>(SERVICE_UP)\n                            .command(cmd)\n                            .onSuccess(new Function<SshPollValue, Boolean>() {\n                                public Boolean apply(SshPollValue input) {\n                                    return (input.getExitStatus() == 0);\n                                }})\n                            .onError(Functions.constant(false)))\n                    .build();\n        } else {\n            LOG.warn(\"Location(s) %s not an ssh-machine location, so not polling for status; setting serviceUp immediately\", getLocations());\n            setAttribute(SERVICE_UP, true);\n        }\n    }","id":8708,"modified_method":"@Override\n    protected void connectSensors() {\n        super.connectSensors();\n        setAttribute(DB_URL, String.format(\"postgresql://%s:%s/\", getAttribute(HOSTNAME), getAttribute(POSTGRESQL_PORT)));\n\n        Location machine = Iterables.get(getLocations(), 0, null);\n\n        if (machine instanceof SshMachineLocation) {\n            String cmd = getDriver().getStatusCmd();\n\n            feed = SshFeed.builder()\n                    .entity(this)\n                    .machine((SshMachineLocation)machine)\n                    .poll(new SshPollConfig<Boolean>(SERVICE_UP)\n                            .command(cmd)\n                            .onSuccess(Functions.constant(true))\n                            .onFailure(Functions.constant(false))\n                            .onException(Functions.constant(false)))\n                    .build();\n        } else {\n            LOG.warn(\"Location(s) %s not an ssh-machine location, so not polling for status; setting serviceUp immediately\", getLocations());\n            setAttribute(SERVICE_UP, true);\n        }\n    }","commit_id":"2ac4d656c641ecf18fd60a45c4add26aa79612ad","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@Override\n    protected void connectSensors() {\n        String runDir = getParent().getRunDir();\n        String cmd = String.format(\"%s/sbin/rabbitmqctl list_queues -p /%s  | grep '%s'\", runDir, getVirtualHost(), getQueueName());\n        \n        sshFeed = SshFeed.builder()\n                .entity(this)\n                .machine(machine)\n                .poll(new SshPollConfig<Integer>(QUEUE_DEPTH_BYTES)\n                        .env(shellEnvironment)\n                        .command(cmd)\n                        .onSuccess(new Function<SshPollValue, Integer>() {\n                                @Override public Integer apply(SshPollValue input) {\n                                    if (input.getExitStatus() != 0) return -1;\n                                    return 0; // TODO parse out queue depth from output\n                                }}))\n                .poll(new SshPollConfig<Integer>(QUEUE_DEPTH_MESSAGES)\n                        .env(shellEnvironment)\n                        .command(cmd)\n                        .onSuccess(new Function<SshPollValue, Integer>() {\n                                @Override public Integer apply(SshPollValue input) {\n                                    if (input.getExitStatus() != 0) return -1;\n                                    return 0; // TODO parse out queue depth from output\n                                }}))\n                .build();\n    }","id":8709,"modified_method":"@Override\n    protected void connectSensors() {\n        String runDir = getParent().getRunDir();\n        String cmd = String.format(\"%s/sbin/rabbitmqctl list_queues -p /%s  | grep '%s'\", runDir, getVirtualHost(), getQueueName());\n        \n        sshFeed = SshFeed.builder()\n                .entity(this)\n                .machine(machine)\n                .poll(new SshPollConfig<Integer>(QUEUE_DEPTH_BYTES)\n                        .env(shellEnvironment)\n                        .command(cmd)\n                        .onFailure(Functions.constant(-1))\n                        .onSuccess(new Function<SshPollValue, Integer>() {\n                                @Override public Integer apply(SshPollValue input) {\n                                    return 0; // TODO parse out queue depth from output\n                                }}))\n                .poll(new SshPollConfig<Integer>(QUEUE_DEPTH_MESSAGES)\n                        .env(shellEnvironment)\n                        .command(cmd)\n                        .onFailure(Functions.constant(-1))\n                        .onSuccess(new Function<SshPollValue, Integer>() {\n                                @Override public Integer apply(SshPollValue input) {\n                                    return 0; // TODO parse out queue depth from output\n                                }}))\n                .build();\n    }","commit_id":"2ac4d656c641ecf18fd60a45c4add26aa79612ad","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@Override\n    protected void connectSensors() {\n        super.connectSensors();\n\n        connectServiceUpIsRunning();\n\n        // Find an SshMachineLocation for the UPTIME feed\n        Optional<Location> location = Iterables.tryFind(getLocations(), Predicates.instanceOf(SshMachineLocation.class));\n        if (!location.isPresent()) throw new IllegalStateException(\"Could not find SshMachineLocation in list of locations\");\n        SshMachineLocation machine = (SshMachineLocation) location.get();\n        String statsCommand = getDriver().getRunDir() + \"/bin/redis-cli info stats\";\n\n        sshFeed = SshFeed.builder()\n                .entity(this)\n                .machine(machine)\n                .poll(new SshPollConfig<Integer>(UPTIME)\n                        .command(getDriver().getRunDir() + \"/bin/redis-cli info server\")\n                        .onError(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"uptime_in_seconds\")))\n                .poll(new SshPollConfig<Integer>(TOTAL_CONNECTIONS_RECEIVED)\n                        .command(statsCommand)\n                        .onError(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"total_connections_received\")))\n                .poll(new SshPollConfig<Integer>(TOTAL_COMMANDS_PROCESSED)\n                        .command(statsCommand)\n                        .onError(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"total_commands_processed\")))\n                .poll(new SshPollConfig<Integer>(EXPIRED_KEYS)\n                        .command(statsCommand)\n                        .onError(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"expired_keys\")))\n                .poll(new SshPollConfig<Integer>(EVICTED_KEYS)\n                        .command(statsCommand)\n                        .onError(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"evicted_keys\")))\n                .poll(new SshPollConfig<Integer>(KEYSPACE_HITS)\n                        .command(statsCommand)\n                        .onError(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"keyspace_hits\")))\n                .poll(new SshPollConfig<Integer>(KEYSPACE_MISSES)\n                        .command(statsCommand)\n                        .onError(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"keyspace_misses\")))\n                .build();\n    }","id":8710,"modified_method":"@Override\n    protected void connectSensors() {\n        super.connectSensors();\n\n        connectServiceUpIsRunning();\n\n        // Find an SshMachineLocation for the UPTIME feed\n        Optional<Location> location = Iterables.tryFind(getLocations(), Predicates.instanceOf(SshMachineLocation.class));\n        if (!location.isPresent()) throw new IllegalStateException(\"Could not find SshMachineLocation in list of locations\");\n        SshMachineLocation machine = (SshMachineLocation) location.get();\n        String statsCommand = getDriver().getRunDir() + \"/bin/redis-cli info stats\";\n\n        sshFeed = SshFeed.builder()\n                .entity(this)\n                .machine(machine)\n                .poll(new SshPollConfig<Integer>(UPTIME)\n                        .command(getDriver().getRunDir() + \"/bin/redis-cli info server\")\n                        .onException(Functions.constant(-1))\n                        .onFailure(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"uptime_in_seconds\")))\n                .poll(new SshPollConfig<Integer>(TOTAL_CONNECTIONS_RECEIVED)\n                        .command(statsCommand)\n                        .onException(Functions.constant(-1))\n                        .onFailure(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"total_connections_received\")))\n                .poll(new SshPollConfig<Integer>(TOTAL_COMMANDS_PROCESSED)\n                        .command(statsCommand)\n                        .onException(Functions.constant(-1))\n                        .onFailure(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"total_commands_processed\")))\n                .poll(new SshPollConfig<Integer>(EXPIRED_KEYS)\n                        .command(statsCommand)\n                        .onException(Functions.constant(-1))\n                        .onFailure(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"expired_keys\")))\n                .poll(new SshPollConfig<Integer>(EVICTED_KEYS)\n                        .command(statsCommand)\n                        .onException(Functions.constant(-1))\n                        .onFailure(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"evicted_keys\")))\n                .poll(new SshPollConfig<Integer>(KEYSPACE_HITS)\n                        .command(statsCommand)\n                        .onException(Functions.constant(-1))\n                        .onFailure(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"keyspace_hits\")))\n                .poll(new SshPollConfig<Integer>(KEYSPACE_MISSES)\n                        .command(statsCommand)\n                        .onException(Functions.constant(-1))\n                        .onFailure(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"keyspace_misses\")))\n                .build();\n    }","commit_id":"2ac4d656c641ecf18fd60a45c4add26aa79612ad","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"private static Protos.Credential createCredential() {\n\n    if (!Configuration.containsKey(Constants.INTEGRATION_MESOS_PRINCIPAL)) {\n      return null;\n    }\n\n    try {\n      Protos.Credential.Builder credentialBuilder = Protos.Credential.newBuilder()\n          .setPrincipal(Configuration.get(Constants.INTEGRATION_MESOS_PRINCIPAL)).setSecret(\n              ByteString.copyFrom(\n                  Configuration.get(Constants.INTEGRATION_MESOS_SECRET).getBytes(\"UTF-8\")));\n\n      return credentialBuilder.build();\n    } catch (UnsupportedEncodingException ex) {\n      System.err.println(\"Failed to encode secret when creating Credential.\");\n    }\n    return null;\n  }","id":8711,"modified_method":"private static Protos.Credential createCredential() {\n\n    if (!Configuration.containsKey(Constants.INTEGRATION_MESOS_PRINCIPAL)) {\n      return null;\n    }\n\n    try {\n      Protos.Credential.Builder credentialBuilder = Protos.Credential.newBuilder()\n          .setPrincipal(Configuration.get(Constants.INTEGRATION_MESOS_PRINCIPAL)).setSecret(\n              ByteString.copyFrom(\n                  Configuration.get(Constants.INTEGRATION_MESOS_SECRET).getBytes(\"UTF-8\")));\n\n      return credentialBuilder.build();\n    } catch (UnsupportedEncodingException ex) {\n      LOG.error(String.format(\"Failed to encode secret when creating Credential: %s\",\n          ex.getMessage()));\n    }\n    return null;\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n    public void offerRescinded(SchedulerDriver driver, Protos.OfferID offerId) {\n      System.out.println(\"Offered \" + offerId.getValue() + \" rescinded.\");\n    }","id":8712,"modified_method":"@Override\n    public void offerRescinded(SchedulerDriver driver, Protos.OfferID offerId) {\n      LOG.info(String.format(\"Offered %s rescinded\", offerId.getValue()));\n    }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n    public void reregistered(SchedulerDriver driver, Protos.MasterInfo masterInfo) {\n      System.out.println(\"Registered framework with master \" + masterInfo.getHostname() + \":\"\n          + masterInfo.getPort() + \".\");\n    }","id":8713,"modified_method":"@Override\n    public void reregistered(SchedulerDriver driver, Protos.MasterInfo masterInfo) {\n      LOG.info(String.format(\"Registered framework with master %s:%d\",\n          masterInfo.getHostname(), masterInfo.getPort()));\n    }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"private static void usage() {\n    String name = AlluxioFramework.class.getName();\n    System.err.println(\"This is an implementation of a Mesos framework that is responsible for \"\n        + \"starting\\nAlluxio processes. The current implementation starts a single Alluxio master \"\n        + \"and\\n n Alluxio workers (one per Mesos slave).\");\n    System.err.println(\"Usage: \" + name + \" <hostname>\");\n  }","id":8714,"modified_method":"private static void usage() {\n    String name = AlluxioFramework.class.getName();\n    LOG.error(\"This is an implementation of a Mesos framework that is responsible for \"\n        + \"starting Alluxio processes. The current implementation starts a single Alluxio master \"\n        + \"and n Alluxio workers (one per Mesos slave).\");\n    LOG.error(\"Usage: \" + name + \" <hostname>\");\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n    public void resourceOffers(SchedulerDriver driver, List<Protos.Offer> offers) {\n      long masterCpu = Configuration.getInt(Constants.INTEGRATION_MASTER_RESOURCE_CPU);\n      long masterMem =\n          Configuration.getBytes(Constants.INTEGRATION_MASTER_RESOURCE_MEM) / Constants.MB;\n      long workerCpu = Configuration.getInt(Constants.INTEGRATION_WORKER_RESOURCE_CPU);\n      long workerMem =\n          Configuration.getBytes(Constants.INTEGRATION_WORKER_RESOURCE_MEM) / Constants.MB;\n\n      for (Protos.Offer offer : offers) {\n        Protos.Offer.Operation.Launch.Builder launch = Protos.Offer.Operation.Launch.newBuilder();\n        double offerCpu = 0;\n        double offerMem = 0;\n        for (Protos.Resource resource : offer.getResourcesList()) {\n          if (resource.getName().equals(Constants.MESOS_RESOURCE_CPUS)) {\n            offerCpu += resource.getScalar().getValue();\n          } else if (resource.getName().equals(Constants.MESOS_RESOURCE_MEM)) {\n            offerMem += resource.getScalar().getValue();\n          } else {\n            // Other resources are currently ignored.\n          }\n        }\n\n        System.out.println(\"Received offer \" + offer.getId().getValue() + \" with cpus: \" + offerCpu\n            + \" and mem: \" + offerMem + \"MB.\");\n\n        Protos.ExecutorInfo.Builder executorBuilder = Protos.ExecutorInfo.newBuilder();\n        List<Protos.Resource> resources;\n        if (!mMasterLaunched && offerCpu >= masterCpu && offerMem >= masterMem\n            && mMasterCount < Configuration\n            .getInt(Constants.INTEGRATION_MESOS_ALLUXIO_MASTER_NODE_COUNT) && OfferUtils\n            .hasAvailableMasterPorts(offer)) {\n          executorBuilder\n              .setName(\"Alluxio Master Executor\")\n              .setSource(\"master\")\n              .setExecutorId(Protos.ExecutorID.newBuilder().setValue(\"master\"))\n              .addAllResources(getExecutorResources())\n              .setCommand(\n                  Protos.CommandInfo\n                      .newBuilder()\n                      .setValue(\n                          \"export JAVA_HOME=\"\n                              + Configuration.get(Constants.INTEGRATION_MESOS_JRE_PATH)\n                              + \" && export PATH=$PATH:$JAVA_HOME/bin && \"\n                              + PathUtils.concatPath(\"alluxio\", \"integration\", \"bin\",\n                              \"alluxio-master-mesos.sh\"))\n                      .addAllUris(getExecutorDependencyURIList())\n                      .setEnvironment(\n                          Protos.Environment\n                              .newBuilder()\n                              .addVariables(\n                                  Protos.Environment.Variable.newBuilder()\n                                      .setName(\"ALLUXIO_UNDERFS_ADDRESS\")\n                                      .setValue(Configuration.get(Constants.UNDERFS_ADDRESS))\n                                      .build())\n                              .build()));\n          // pre-build resource list here, then use it to build Protos.Task later.\n          resources = getMasterRequiredResources(masterCpu, masterMem);\n          mMasterHostname = offer.getHostname();\n          mTaskName = Configuration.get(Constants.INTEGRATION_MESOS_ALLUXIO_MASTER_NAME);\n          mMasterCount++;\n          mMasterTaskId = mLaunchedTasks;\n\n        } else if (mMasterLaunched && !mWorkers.contains(offer.getHostname())\n            && offerCpu >= workerCpu && offerMem >= workerMem\n            && OfferUtils.hasAvailableWorkerPorts(offer)) {\n          final String memSize = FormatUtils.getSizeFromBytes((long) workerMem * Constants.MB);\n          executorBuilder\n              .setName(\"Alluxio Worker Executor\")\n              .setSource(\"worker\")\n              .setExecutorId(Protos.ExecutorID.newBuilder().setValue(\"worker\"))\n              .addAllResources(getExecutorResources())\n              .setCommand(\n                  Protos.CommandInfo\n                      .newBuilder()\n                      .setValue(\n                          \"export JAVA_HOME=\"\n                              + Configuration.get(Constants.INTEGRATION_MESOS_JRE_PATH)\n                              + \" && export PATH=$PATH:$JAVA_HOME/bin && \"\n                              + PathUtils.concatPath(\"alluxio\", \"integration\", \"bin\",\n                              \"alluxio-worker-mesos.sh\"))\n                      .addAllUris(getExecutorDependencyURIList())\n                      .setEnvironment(\n                          Protos.Environment\n                              .newBuilder()\n                              .addVariables(\n                                  Protos.Environment.Variable.newBuilder()\n                                      .setName(\"ALLUXIO_MASTER_HOSTNAME\").setValue(mMasterHostname)\n                                      .build())\n                              .addVariables(\n                                  Protos.Environment.Variable.newBuilder()\n                                      .setName(\"ALLUXIO_WORKER_MEMORY_SIZE\").setValue(memSize)\n                                      .build())\n                              .addVariables(\n                                  Protos.Environment.Variable.newBuilder()\n                                      .setName(\"ALLUXIO_UNDERFS_ADDRESS\")\n                                      .setValue(Configuration.get(Constants.UNDERFS_ADDRESS))\n                                      .build())\n                              .build()));\n          // pre-build resource list here, then use it to build Protos.Task later.\n          resources = getWorkerRequiredResources(workerCpu, workerMem);\n          mWorkers.add(offer.getHostname());\n          mTaskName = Configuration.get(Constants.INTEGRATION_MESOS_ALLUXIO_WORKER_NAME);\n        } else {\n          // The resource offer cannot be used to start either master or a worker.\n          driver.declineOffer(offer.getId());\n          continue;\n        }\n\n        Protos.TaskID taskId =\n            Protos.TaskID.newBuilder().setValue(String.valueOf(mLaunchedTasks)).build();\n\n        System.out.println(\"Launching task \" + taskId.getValue() + \" using offer \"\n            + offer.getId().getValue());\n\n        Protos.TaskInfo task =\n            Protos.TaskInfo\n                .newBuilder()\n                .setName(mTaskName)\n                .setTaskId(taskId)\n                .setSlaveId(offer.getSlaveId())\n                .addAllResources(resources)\n                .setExecutor(executorBuilder).build();\n\n        launch.addTaskInfos(Protos.TaskInfo.newBuilder(task));\n        mLaunchedTasks++;\n\n        // NOTE: We use the new API `acceptOffers` here to launch tasks.\n        // The 'launchTasks' API will be deprecated.\n        List<Protos.OfferID> offerIds = new ArrayList<Protos.OfferID>();\n        offerIds.add(offer.getId());\n        List<Protos.Offer.Operation> operations = new ArrayList<Protos.Offer.Operation>();\n        Protos.Offer.Operation operation =\n            Protos.Offer.Operation.newBuilder().setType(Protos.Offer.Operation.Type.LAUNCH)\n                .setLaunch(launch).build();\n        operations.add(operation);\n        Protos.Filters filters = Protos.Filters.newBuilder().setRefuseSeconds(1).build();\n        driver.acceptOffers(offerIds, operations, filters);\n      }\n    }","id":8715,"modified_method":"@Override\n    public void resourceOffers(SchedulerDriver driver, List<Protos.Offer> offers) {\n      long masterCpu = Configuration.getInt(Constants.INTEGRATION_MASTER_RESOURCE_CPU);\n      long masterMem =\n          Configuration.getBytes(Constants.INTEGRATION_MASTER_RESOURCE_MEM) / Constants.MB;\n      long workerCpu = Configuration.getInt(Constants.INTEGRATION_WORKER_RESOURCE_CPU);\n      long workerMem =\n          Configuration.getBytes(Constants.INTEGRATION_WORKER_RESOURCE_MEM) / Constants.MB;\n\n      LOG.info(String.format(\"Master launched %b, master count %d, \"\n          + \"requested master cpu %d and mem %d MB\",\n          mMasterLaunched, mMasterCount, masterCpu, masterMem));\n\n      for (Protos.Offer offer : offers) {\n        Protos.Offer.Operation.Launch.Builder launch = Protos.Offer.Operation.Launch.newBuilder();\n        double offerCpu = 0;\n        double offerMem = 0;\n        for (Protos.Resource resource : offer.getResourcesList()) {\n          if (resource.getName().equals(Constants.MESOS_RESOURCE_CPUS)) {\n            offerCpu += resource.getScalar().getValue();\n          } else if (resource.getName().equals(Constants.MESOS_RESOURCE_MEM)) {\n            offerMem += resource.getScalar().getValue();\n          } else {\n            // Other resources are currently ignored.\n          }\n        }\n\n        LOG.info(String.format(\"Received offer %s with cpus %f and mem %f MB and hasMasterPorts %b\",\n            offer.getId().getValue(), offerCpu, offerMem,\n            OfferUtils.hasAvailableMasterPorts(offer)));\n\n        Protos.ExecutorInfo.Builder executorBuilder = Protos.ExecutorInfo.newBuilder();\n        List<Protos.Resource> resources;\n        if (!mMasterLaunched && offerCpu >= masterCpu && offerMem >= masterMem\n            && mMasterCount < Configuration\n            .getInt(Constants.INTEGRATION_MESOS_ALLUXIO_MASTER_NODE_COUNT) && OfferUtils\n            .hasAvailableMasterPorts(offer)) {\n          LOG.debug(\"Creating Alluxio Master executor\");\n          executorBuilder\n              .setName(\"Alluxio Master Executor\")\n              .setSource(\"master\")\n              .setExecutorId(Protos.ExecutorID.newBuilder().setValue(\"master\"))\n              .addAllResources(getExecutorResources())\n              .setCommand(\n                  Protos.CommandInfo\n                      .newBuilder()\n                      .setValue(\n                          \"export JAVA_HOME=\"\n                              + Configuration.get(Constants.INTEGRATION_MESOS_JRE_PATH)\n                              + \" && export PATH=$PATH:$JAVA_HOME/bin && \"\n                              + PathUtils.concatPath(\"alluxio\", \"integration\", \"bin\",\n                              \"alluxio-master-mesos.sh\"))\n                      .addAllUris(getExecutorDependencyURIList())\n                      .setEnvironment(\n                          Protos.Environment\n                              .newBuilder()\n                              .addVariables(\n                                  Protos.Environment.Variable.newBuilder()\n                                      .setName(\"ALLUXIO_UNDERFS_ADDRESS\")\n                                      .setValue(Configuration.get(Constants.UNDERFS_ADDRESS))\n                                      .build())\n                              .build()));\n          // pre-build resource list here, then use it to build Protos.Task later.\n          resources = getMasterRequiredResources(masterCpu, masterMem);\n          mMasterHostname = offer.getHostname();\n          mTaskName = Configuration.get(Constants.INTEGRATION_MESOS_ALLUXIO_MASTER_NAME);\n          mMasterCount++;\n          mMasterTaskId = mLaunchedTasks;\n\n        } else if (mMasterLaunched && !mWorkers.contains(offer.getHostname())\n            && offerCpu >= workerCpu && offerMem >= workerMem\n            && OfferUtils.hasAvailableWorkerPorts(offer)) {\n          LOG.debug(\"Creating Alluxio Worker executor\");\n          final String memSize = FormatUtils.getSizeFromBytes((long) workerMem * Constants.MB);\n          executorBuilder\n              .setName(\"Alluxio Worker Executor\")\n              .setSource(\"worker\")\n              .setExecutorId(Protos.ExecutorID.newBuilder().setValue(\"worker\"))\n              .addAllResources(getExecutorResources())\n              .setCommand(\n                  Protos.CommandInfo\n                      .newBuilder()\n                      .setValue(\n                          \"export JAVA_HOME=\"\n                              + Configuration.get(Constants.INTEGRATION_MESOS_JRE_PATH)\n                              + \" && export PATH=$PATH:$JAVA_HOME/bin && \"\n                              + PathUtils.concatPath(\"alluxio\", \"integration\", \"bin\",\n                              \"alluxio-worker-mesos.sh\"))\n                      .addAllUris(getExecutorDependencyURIList())\n                      .setEnvironment(\n                          Protos.Environment\n                              .newBuilder()\n                              .addVariables(\n                                  Protos.Environment.Variable.newBuilder()\n                                      .setName(\"ALLUXIO_MASTER_HOSTNAME\").setValue(mMasterHostname)\n                                      .build())\n                              .addVariables(\n                                  Protos.Environment.Variable.newBuilder()\n                                      .setName(\"ALLUXIO_WORKER_MEMORY_SIZE\").setValue(memSize)\n                                      .build())\n                              .addVariables(\n                                  Protos.Environment.Variable.newBuilder()\n                                      .setName(\"ALLUXIO_UNDERFS_ADDRESS\")\n                                      .setValue(Configuration.get(Constants.UNDERFS_ADDRESS))\n                                      .build())\n                              .build()));\n          // pre-build resource list here, then use it to build Protos.Task later.\n          resources = getWorkerRequiredResources(workerCpu, workerMem);\n          mWorkers.add(offer.getHostname());\n          mTaskName = Configuration.get(Constants.INTEGRATION_MESOS_ALLUXIO_WORKER_NAME);\n        } else {\n          // The resource offer cannot be used to start either master or a worker.\n          LOG.info(String.format(\"Declining offer %s\", offer.getId().getValue()));\n          driver.declineOffer(offer.getId());\n          continue;\n        }\n\n        Protos.TaskID taskId =\n            Protos.TaskID.newBuilder().setValue(String.valueOf(mLaunchedTasks)).build();\n\n        LOG.info(String.format(\"Launching task %s using offer %s\",\n            taskId.getValue(), offer.getId().getValue()));\n\n        Protos.TaskInfo task =\n            Protos.TaskInfo\n                .newBuilder()\n                .setName(mTaskName)\n                .setTaskId(taskId)\n                .setSlaveId(offer.getSlaveId())\n                .addAllResources(resources)\n                .setExecutor(executorBuilder).build();\n\n        launch.addTaskInfos(Protos.TaskInfo.newBuilder(task));\n        mLaunchedTasks++;\n\n        // NOTE: We use the new API `acceptOffers` here to launch tasks.\n        // The 'launchTasks' API will be deprecated.\n        List<Protos.OfferID> offerIds = new ArrayList<Protos.OfferID>();\n        offerIds.add(offer.getId());\n        List<Protos.Offer.Operation> operations = new ArrayList<Protos.Offer.Operation>();\n        Protos.Offer.Operation operation =\n            Protos.Offer.Operation.newBuilder().setType(Protos.Offer.Operation.Type.LAUNCH)\n                .setLaunch(launch).build();\n        operations.add(operation);\n        Protos.Filters filters = Protos.Filters.newBuilder().setRefuseSeconds(1).build();\n        driver.acceptOffers(offerIds, operations, filters);\n      }\n    }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n    public void frameworkMessage(SchedulerDriver driver, Protos.ExecutorID executorId,\n        Protos.SlaveID slaveId, byte[] data) {\n      System.out.println(\"Executor: \" + executorId.getValue() + \", \" + \"Slave: \"\n          + slaveId.getValue() + \", \" + \"Data: \" + Arrays.toString(data) + \".\");\n    }","id":8716,"modified_method":"@Override\n    public void frameworkMessage(SchedulerDriver driver, Protos.ExecutorID executorId,\n                                 Protos.SlaveID slaveId, byte[] data) {\n      LOG.info(String.format(\"Executor: %s, slave: %s, data: %s\",\n          executorId.getValue(), slaveId.getValue(), Arrays.toString(data)));\n    }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n    public void error(SchedulerDriver driver, String message) {\n      System.out.println(\"Error: \" + message);\n    }","id":8717,"modified_method":"@Override\n    public void error(SchedulerDriver driver, String message) {\n      LOG.error(String.format(\"Error: %s\", message));\n    }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n    public void disconnected(SchedulerDriver driver) {\n      System.out.println(\"Disconnected from master.\");\n    }","id":8718,"modified_method":"@Override\n    public void disconnected(SchedulerDriver driver) {\n      LOG.info(\"Disconnected from master\");\n    }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n    public void statusUpdate(SchedulerDriver driver, Protos.TaskStatus status) {\n      String taskId = status.getTaskId().getValue();\n      Protos.TaskState state = status.getState();\n      System.out.printf(\"Task %s is in state %s%n\", taskId, state);\n      // TODO(jiri): Handle the case when an Alluxio master and/or worker task fails.\n      // In particular, we should enable support for the fault tolerant mode of Alluxio to account\n      // for Alluxio master process failures and keep track of the running number of Alluxio\n      // masters.\n\n      switch (status.getState()) {\n        case TASK_FAILED: // intend to fall through\n        case TASK_LOST: // intend to fall through\n        case TASK_ERROR:\n          if (status.getTaskId().getValue().equals(String.valueOf(mMasterTaskId))) {\n            mMasterCount--;\n          }\n          break;\n        case TASK_RUNNING:\n          if (status.getTaskId().getValue().equals(String.valueOf(mMasterTaskId))) {\n            mMasterLaunched = true;\n          }\n          break;\n        default:\n          break;\n      }\n    }","id":8719,"modified_method":"@Override\n    public void statusUpdate(SchedulerDriver driver, Protos.TaskStatus status) {\n      String taskId = status.getTaskId().getValue();\n      Protos.TaskState state = status.getState();\n      LOG.info(String.format(\"Task %s is in state %s\", taskId, state));\n      // TODO(jiri): Handle the case when an Alluxio master and/or worker task fails.\n      // In particular, we should enable support for the fault tolerant mode of Alluxio to account\n      // for Alluxio master process failures and keep track of the running number of Alluxio\n      // masters.\n\n      switch (status.getState()) {\n        case TASK_FAILED: // intend to fall through\n        case TASK_LOST: // intend to fall through\n        case TASK_ERROR:\n          if (status.getTaskId().getValue().equals(String.valueOf(mMasterTaskId))) {\n            mMasterCount--;\n          }\n          break;\n        case TASK_RUNNING:\n          if (status.getTaskId().getValue().equals(String.valueOf(mMasterTaskId))) {\n            mMasterLaunched = true;\n          }\n          break;\n        default:\n          break;\n      }\n    }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n    public void slaveLost(SchedulerDriver driver, Protos.SlaveID slaveId) {\n      // TODO(jiri): Handle lost Mesos slaves.\n      System.out.println(\"Executor \" + slaveId.getValue() + \" was lost.\");\n    }","id":8720,"modified_method":"@Override\n    public void slaveLost(SchedulerDriver driver, Protos.SlaveID slaveId) {\n      // TODO(jiri): Handle lost Mesos slaves.\n      LOG.info(String.format(\"Executor %s was lost\", slaveId.getValue()));\n    }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n    public void registered(SchedulerDriver driver, Protos.FrameworkID frameworkId,\n        Protos.MasterInfo masterInfo) {\n      System.out.println(\"Registered framework \" + frameworkId.getValue() + \" with master \"\n          + masterInfo.getHostname() + \":\" + masterInfo.getPort() + \".\");\n    }","id":8721,"modified_method":"@Override\n    public void registered(SchedulerDriver driver, Protos.FrameworkID frameworkId,\n                           Protos.MasterInfo masterInfo) {\n      LOG.info(String.format(\"Registered framework %s with master %s:%d\",\n          frameworkId.getValue(), masterInfo.getHostname(), masterInfo.getPort()));\n    }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n    public void executorLost(SchedulerDriver driver, Protos.ExecutorID executorId,\n        Protos.SlaveID slaveId, int status) {\n      System.out.println(\"Executor \" + executorId.getValue() + \" was lost.\");\n    }","id":8722,"modified_method":"@Override\n    public void executorLost(SchedulerDriver driver, Protos.ExecutorID executorId,\n        Protos.SlaveID slaveId, int status) {\n      LOG.info(String.format(\"Executor %s was lost\", executorId.getValue()));\n    }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void registered(ExecutorDriver driver, Protos.ExecutorInfo executorInfo,\n      Protos.FrameworkInfo frameworkInfo, Protos.SlaveInfo slaveInfo) {\n    System.out.println(\"Registered executor \" + executorInfo.getName() + \" with \"\n        + slaveInfo.getHostname() + \" through framework \" + frameworkInfo.getName() + \".\");\n  }","id":8723,"modified_method":"@Override\n  public void registered(ExecutorDriver driver, Protos.ExecutorInfo executorInfo,\n                         Protos.FrameworkInfo frameworkInfo, Protos.SlaveInfo slaveInfo) {\n    LOG.info(String.format(\"Registered executor %s with %s through framework %s\",\n        executorInfo.getName(), slaveInfo.getHostname(), frameworkInfo.getName()));\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void reregistered(ExecutorDriver driver, Protos.SlaveInfo slaveInfo) {\n    System.out.println(\"Re-registered executor with \" + slaveInfo.getHostname() + \".\");\n  }","id":8724,"modified_method":"@Override\n  public void reregistered(ExecutorDriver driver, Protos.SlaveInfo slaveInfo) {\n    LOG.info(String.format(\"Re-registered executor with %s\", slaveInfo.getHostname()));\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void killTask(ExecutorDriver driver, Protos.TaskID taskId) {\n    System.out.println(\"Killing task \" + taskId.getValue() + \".\");\n    // TODO(jiri): Implement.\n  }","id":8725,"modified_method":"@Override\n  public void killTask(ExecutorDriver driver, Protos.TaskID taskId) {\n    LOG.info(String.format(\"Killing task %s\", taskId.getValue()));\n    // TODO(jiri): Implement.\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void frameworkMessage(ExecutorDriver driver, byte[] data) {\n    System.out.println(\"Received a framework message.\");\n  }","id":8726,"modified_method":"@Override\n  public void frameworkMessage(ExecutorDriver driver, byte[] data) {\n    LOG.info(\"Received a framework message\");\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void shutdown(ExecutorDriver driver) {\n    System.out.println(\"Shutting down.\");\n    // TODO(jiri): Implement.\n  }","id":8727,"modified_method":"@Override\n  public void shutdown(ExecutorDriver driver) {\n    LOG.info(\"Shutting down\");\n    // TODO(jiri): Implement.\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void disconnected(ExecutorDriver driver) {\n    System.out.println(\"Executor has disconnected from the Mesos slave.\");\n  }","id":8728,"modified_method":"@Override\n  public void disconnected(ExecutorDriver driver) {\n    LOG.info(\"Executor has disconnected from the Mesos slave\");\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void error(ExecutorDriver driver, String message) {\n    System.out.println(\"A fatal error has occurred: \" + message + \".\");\n  }","id":8729,"modified_method":"@Override\n  public void error(ExecutorDriver driver, String message) {\n    LOG.error(String.format(\"A fatal error has occurred: %s\", message));\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void launchTask(final ExecutorDriver driver, final Protos.TaskInfo task) {\n    new Thread() {\n      public void run() {\n        try {\n          Protos.TaskStatus status =\n              Protos.TaskStatus.newBuilder().setTaskId(task.getTaskId())\n                  .setState(Protos.TaskState.TASK_RUNNING).build();\n\n          driver.sendStatusUpdate(status);\n\n          System.out.println(\"Launching task \" + task.getTaskId().getValue());\n\n          Thread.currentThread().setContextClassLoader(\n              UnderFileSystemRegistry.class.getClassLoader());\n\n          // TODO(jiri): Consider handling Format.main() failures gracefully.\n          Format.main(new String[] {\"master\"});\n          AlluxioMaster.main(new String[] {});\n\n          status =\n              Protos.TaskStatus.newBuilder().setTaskId(task.getTaskId())\n                  .setState(Protos.TaskState.TASK_FINISHED).build();\n\n          driver.sendStatusUpdate(status);\n        } catch (Exception e) {\n          e.printStackTrace();\n        }\n      }\n    }.start();\n  }","id":8730,"modified_method":"@Override\n  public void launchTask(final ExecutorDriver driver, final Protos.TaskInfo task) {\n    new Thread() {\n      public void run() {\n        try {\n          Protos.TaskStatus status =\n              Protos.TaskStatus.newBuilder().setTaskId(task.getTaskId())\n                  .setState(Protos.TaskState.TASK_RUNNING).build();\n\n          driver.sendStatusUpdate(status);\n\n          LOG.info(String.format(\"Launching task %s\", task.getTaskId().getValue()));\n\n          Thread.currentThread().setContextClassLoader(\n              UnderFileSystemRegistry.class.getClassLoader());\n\n          // TODO(jiri): Consider handling Format.main() failures gracefully.\n          Format.main(new String[] {\"master\"});\n          AlluxioMaster.main(new String[] {});\n\n          status =\n              Protos.TaskStatus.newBuilder().setTaskId(task.getTaskId())\n                  .setState(Protos.TaskState.TASK_FINISHED).build();\n\n          driver.sendStatusUpdate(status);\n        } catch (Exception e) {\n          e.printStackTrace();\n        }\n      }\n    }.start();\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void disconnected(ExecutorDriver driver) {\n    System.out.println(\"Executor has disconnected from the Mesos slave.\");\n  }","id":8731,"modified_method":"@Override\n  public void disconnected(ExecutorDriver driver) {\n    LOG.info(\"Executor has disconnected from the Mesos slave\");\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void launchTask(final ExecutorDriver driver, final Protos.TaskInfo task) {\n    new Thread() {\n      public void run() {\n        try {\n          Protos.TaskStatus status =\n              Protos.TaskStatus.newBuilder().setTaskId(task.getTaskId())\n                  .setState(Protos.TaskState.TASK_RUNNING).build();\n\n          driver.sendStatusUpdate(status);\n\n          System.out.println(\"Launching task \" + task.getTaskId().getValue());\n\n          Thread.currentThread().setContextClassLoader(\n              UnderFileSystemRegistry.class.getClassLoader());\n\n          // TODO(jiri): Consider handling Format.main() failures gracefully.\n          Format.main(new String[] {\"master\"});\n          AlluxioWorker.main(new String[] {});\n\n          status =\n              Protos.TaskStatus.newBuilder().setTaskId(task.getTaskId())\n                  .setState(Protos.TaskState.TASK_FINISHED).build();\n\n          driver.sendStatusUpdate(status);\n        } catch (Exception e) {\n          e.printStackTrace();\n        }\n      }\n    }.start();\n  }","id":8732,"modified_method":"@Override\n  public void launchTask(final ExecutorDriver driver, final Protos.TaskInfo task) {\n    new Thread() {\n      public void run() {\n        try {\n          Protos.TaskStatus status =\n              Protos.TaskStatus.newBuilder().setTaskId(task.getTaskId())\n                  .setState(Protos.TaskState.TASK_RUNNING).build();\n\n          driver.sendStatusUpdate(status);\n\n          LOG.info(String.format(\"Launching task %s\", task.getTaskId().getValue()));\n\n          Thread.currentThread().setContextClassLoader(\n              UnderFileSystemRegistry.class.getClassLoader());\n\n          // TODO(jiri): Consider handling Format.main() failures gracefully.\n          Format.main(new String[] {\"master\"});\n          AlluxioWorker.main(new String[] {});\n\n          status =\n              Protos.TaskStatus.newBuilder().setTaskId(task.getTaskId())\n                  .setState(Protos.TaskState.TASK_FINISHED).build();\n          driver.sendStatusUpdate(status);\n        } catch (Exception e) {\n          e.printStackTrace();\n        }\n      }\n    }.start();\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void shutdown(ExecutorDriver driver) {\n    System.out.println(\"Shutting down.\");\n    // TODO(jiri): Implement.\n  }","id":8733,"modified_method":"@Override\n  public void shutdown(ExecutorDriver driver) {\n    LOG.info(\"Shutting down\");\n    // TODO(jiri): Implement.\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void error(ExecutorDriver driver, String message) {\n    System.out.println(\"A fatal error has occurred: \" + message + \".\");\n  }","id":8734,"modified_method":"@Override\n  public void error(ExecutorDriver driver, String message) {\n    LOG.error(String.format(\"A fatal error has occurred: %s\", message));\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void registered(ExecutorDriver driver, Protos.ExecutorInfo executorInfo,\n      Protos.FrameworkInfo frameworkInfo, Protos.SlaveInfo slaveInfo) {\n    System.out.println(\"Registered executor \" + executorInfo.getName() + \" with \"\n        + slaveInfo.getHostname() + \" through framework \" + frameworkInfo.getName() + \".\");\n  }","id":8735,"modified_method":"@Override\n  public void registered(ExecutorDriver driver, Protos.ExecutorInfo executorInfo,\n                         Protos.FrameworkInfo frameworkInfo, Protos.SlaveInfo slaveInfo) {\n    LOG.info(String.format(\"Registered executor %s with %s through framework %s\",\n        executorInfo.getName(), slaveInfo.getHostname(), frameworkInfo.getName()));\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void reregistered(ExecutorDriver driver, Protos.SlaveInfo slaveInfo) {\n    System.out.println(\"Re-registered executor with \" + slaveInfo.getHostname() + \".\");\n  }","id":8736,"modified_method":"@Override\n  public void reregistered(ExecutorDriver driver, Protos.SlaveInfo slaveInfo) {\n    LOG.info(String.format(\"Re-registered executor with %s\", slaveInfo.getHostname()));\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void frameworkMessage(ExecutorDriver driver, byte[] data) {\n    System.out.println(\"Received a framework message.\");\n  }","id":8737,"modified_method":"@Override\n  public void frameworkMessage(ExecutorDriver driver, byte[] data) {\n    LOG.info(\"Received a framework message\");\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void killTask(ExecutorDriver driver, Protos.TaskID taskId) {\n    System.out.println(\"Killing task \" + taskId.getValue() + \".\");\n    // TODO(jiri): Implement.\n  }","id":8738,"modified_method":"@Override\n  public void killTask(ExecutorDriver driver, Protos.TaskID taskId) {\n    LOG.info(String.format(\"Killing task %s\", taskId.getValue()));\n    // TODO(jiri): Implement.\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"private static boolean hasAvailablePorts(int port, Protos.Value.Ranges ranges) {\n    for (Protos.Value.Range range : ranges.getRangeList()) {\n      if (port >= range.getBegin() && port <= range.getEnd()) {\n        return true;\n      }\n    }\n    return false;\n  }","id":8739,"modified_method":"private static boolean hasAvailablePorts(int port, Protos.Value.Ranges ranges) {\n    for (Protos.Value.Range range : ranges.getRangeList()) {\n      LOG.debug(String.format(\"Port range %s\", range));\n      if (port >= range.getBegin() && port <= range.getEnd()) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"598ff1c25a2606ccec21d494b66c78a21122ce83","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n        public void run() {\n            try {\n                ChangeSet changes = changeListener.getChanges(100);\n                while (!stopping) {\n                    EventFilter filter = filterRef.get();\n                    // FIXME don't rely on toString for session id\n                    if (changes != null &&\n                            !(filter.excludeLocal() && changes.isLocal(contentSession.toString()))) {\n                        String path = namePathMapper.getOakPath(filter.getPath());\n                        ImmutableTree beforeTree = getTree(changes.getBeforeState(), path);\n                        ImmutableTree afterTree = getTree(changes.getAfterState(), path);\n                        EventGeneratingNodeStateDiff diff = new EventGeneratingNodeStateDiff(\n                                changes.getCommitInfo(), beforeTree, afterTree);\n                        VisibleValidator visibleDiff = new VisibleValidator(diff, true, true);\n                        SecureValidator.compare(beforeTree, afterTree, visibleDiff);\n                        if (!stopping) {\n                            diff.sendEvents();\n                        }\n                    }\n                    changes = changeListener.getChanges(100);\n                }\n            } catch (Exception e) {\n                log.debug(\"Error while dispatching observation events\", e);\n            } finally {\n                mbean.unregister();\n                changeListener.dispose();\n            }\n        }","id":8740,"modified_method":"@Override\n        public void run() {\n            try {\n                ChangeSet changes = changeListener.getChanges(100);\n                while (!stopping) {\n                    EventFilter filter = filterRef.get();\n                    // FIXME don't rely on toString for session id\n                    if (changes != null &&\n                            !(filter.excludeLocal() && changes.isLocal(contentSession.toString()))) {\n                        String path = namePathMapper.getOakPath(filter.getPath());\n                        ImmutableTree beforeTree = getTree(changes.getBeforeState(), path);\n                        ImmutableTree afterTree = getTree(changes.getAfterState(), path);\n                        EventGeneratingValidator events = new EventGeneratingValidator(\n                                changes.getCommitInfo(), beforeTree, afterTree);\n                        VisibleValidator visibleEvents = new VisibleValidator(events, true, true);\n                        SecureValidator.compare(beforeTree, afterTree, visibleEvents);\n                    }\n                    changes = changeListener.getChanges(100);\n                }\n            } catch (Exception e) {\n                log.debug(\"Error while dispatching observation events\", e);\n            } finally {\n                mbean.unregister();\n                changeListener.dispose();\n            }\n        }","commit_id":"84d48d228dbcbf830ac1159fe4f45c0b266dd13f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public Validator childNodeAdded(String name, NodeState after) throws CommitFailedException {\n        if (canRead(beforeTree.getChild(name), afterTree.getChild(name))) {\n            Validator childValidator = validator.childNodeAdded(name, secureAfter(name, after));\n            return childValidator == null\n                ? null\n                : create(beforeTree.getChild(name), afterTree.getChild(name), childValidator);\n        } else {\n            return null;\n        }\n    }","id":8741,"modified_method":"@Override\n    public Validator childNodeAdded(String name, NodeState after) throws CommitFailedException {\n        if (canRead(beforeTree.getChild(name), afterTree.getChild(name))) {\n            Validator childValidator = validator.childNodeAdded(name, secure(after));\n            return childValidator == null\n                ? null\n                : create(beforeTree.getChild(name), afterTree.getChild(name), childValidator);\n        } else {\n            return null;\n        }\n    }","commit_id":"84d48d228dbcbf830ac1159fe4f45c0b266dd13f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public Validator childNodeDeleted(String name, NodeState before) throws CommitFailedException {\n        if (canRead(beforeTree.getChild(name), afterTree.getChild(name))) {\n            Validator childValidator = validator.childNodeDeleted(name, secureBefore(name, before));\n            return childValidator == null\n                ? null\n                : create(beforeTree.getChild(name), afterTree.getChild(name), childValidator);\n        } else {\n            return null;\n        }\n    }","id":8742,"modified_method":"@Override\n    public Validator childNodeDeleted(String name, NodeState before) throws CommitFailedException {\n        if (canRead(beforeTree.getChild(name), afterTree.getChild(name))) {\n            Validator childValidator = validator.childNodeDeleted(name, secure(before));\n            return childValidator == null\n                ? null\n                : create(beforeTree.getChild(name), afterTree.getChild(name), childValidator);\n        } else {\n            return null;\n        }\n    }","commit_id":"84d48d228dbcbf830ac1159fe4f45c0b266dd13f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public void enter(NodeState before, NodeState after) throws CommitFailedException {\n    }","id":8743,"modified_method":"@Override\n    public void enter(NodeState before, NodeState after) throws CommitFailedException {\n        validator.enter(secure(before), secure(after));\n    }","commit_id":"84d48d228dbcbf830ac1159fe4f45c0b266dd13f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"/**\n     * Secure the before state of a child node such that it only provides\n     * accessible child nodes and properties.\n     * @param name       name of the child node\n     * @param nodeState  before state of the child node\n     * @return  secured before state\n     */\n    @Nonnull\n    protected NodeState secureBefore(String name, NodeState nodeState) {\n        return nodeState;\n    }","id":8744,"modified_method":"/**\n     * Secure a node state such that it only provides accessible child nodes and properties.\n     * @param nodeState  unsecured node state\n     * @return  secured before state\n     */\n    @Nonnull\n    protected NodeState secure(NodeState nodeState) {\n        return nodeState;\n    }","commit_id":"84d48d228dbcbf830ac1159fe4f45c0b266dd13f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public Validator childNodeChanged(String name, NodeState before, NodeState after)\n            throws CommitFailedException {\n        Validator childValidator = validator.childNodeChanged(\n                name, secureBefore(name, before), secureAfter(name, after));\n        return childValidator == null\n            ? null\n            : create(beforeTree.getChild(name), afterTree.getChild(name), childValidator);\n    }","id":8745,"modified_method":"@Override\n    public Validator childNodeChanged(String name, NodeState before, NodeState after)\n            throws CommitFailedException {\n        Validator childValidator = validator.childNodeChanged(\n                name, secure(before), secure(after));\n        return childValidator == null\n            ? null\n            : create(beforeTree.getChild(name), afterTree.getChild(name), childValidator);\n    }","commit_id":"84d48d228dbcbf830ac1159fe4f45c0b266dd13f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public void leave(NodeState before, NodeState after) throws CommitFailedException {\n    }","id":8746,"modified_method":"@Override\n    public void leave(NodeState before, NodeState after) throws CommitFailedException {\n        validator.leave(secure(before), secure(after));\n    }","commit_id":"84d48d228dbcbf830ac1159fe4f45c0b266dd13f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    protected NodeState secureBefore(String name, NodeState nodeState) {\n        // TODO implement secureBefore\n        return nodeState;\n    }","id":8747,"modified_method":"@Override\n    protected NodeState secure(NodeState nodeState) {\n        // TODO implement secure\n        return nodeState;\n    }","commit_id":"84d48d228dbcbf830ac1159fe4f45c0b266dd13f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"private Object _convertListToArray(List<?> list, Class<?> componentType) {\n\t\tObject array = Array.newInstance(componentType, list.size());\n\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tObject entry = list.get(i);\n\n\t\t\tif (entry != null) {\n\t\t\t\tentry = TypeConverterManager.convertType(entry, componentType);\n\t\t\t}\n\n\t\t\tArray.set(array, i, entry);\n\t\t}\n\n\t\treturn array;\n\t}","id":8748,"modified_method":"private Object _convertListToArray(List<?> list, Class<?> componentType) {\n\t\tObject array = Array.newInstance(componentType, list.size());\n\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tObject entry = list.get(i);\n\n\t\t\tif (entry != null) {\n\t\t\t\tentry = _convertType(entry, componentType);\n\t\t\t}\n\n\t\t\tArray.set(array, i, entry);\n\t\t}\n\n\t\treturn array;\n\t}","commit_id":"59e3828b8f0bcc110cbe5d8cda26ed86e9a9bf02","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private Object _convertValueToParameterValue(\n\t\tObject value, Class<?> parameterType,\n\t\tClass<?>[] genericParameterTypes) {\n\n\t\tif (parameterType.isArray()) {\n\t\t\tList<?> list = null;\n\n\t\t\tif (value instanceof List) {\n\t\t\t\tlist = (List<?>)value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString stringValue = value.toString();\n\n\t\t\t\tstringValue = stringValue.trim();\n\n\t\t\t\tif (!stringValue.startsWith(StringPool.OPEN_BRACKET)) {\n\t\t\t\t\tstringValue = StringPool.OPEN_BRACKET.concat(\n\t\t\t\t\t\tstringValue).concat(StringPool.CLOSE_BRACKET);\n\t\t\t\t}\n\n\t\t\t\tlist = JSONFactoryUtil.looseDeserializeSafe(\n\t\t\t\t\tstringValue, ArrayList.class);\n\t\t\t}\n\n\t\t\treturn _convertListToArray(list, parameterType.getComponentType());\n\t\t}\n\t\telse if (parameterType.equals(Calendar.class)) {\n\t\t\tCalendar calendar = Calendar.getInstance();\n\n\t\t\tcalendar.setLenient(false);\n\n\t\t\tString stringValue = value.toString();\n\n\t\t\tstringValue = stringValue.trim();\n\n\t\t\tlong timeInMillis = GetterUtil.getLong(stringValue);\n\n\t\t\tcalendar.setTimeInMillis(timeInMillis);\n\n\t\t\treturn calendar;\n\t\t}\n\t\telse if (Collection.class.isAssignableFrom(parameterType)) {\n\t\t\tList<?> list = null;\n\n\t\t\tif (value instanceof List) {\n\t\t\t\tlist = (List<?>)value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString stringValue = value.toString();\n\n\t\t\t\tstringValue = stringValue.trim();\n\n\t\t\t\tif (!stringValue.startsWith(StringPool.OPEN_BRACKET)) {\n\t\t\t\t\tstringValue = StringPool.OPEN_BRACKET.concat(\n\t\t\t\t\t\tstringValue).concat(StringPool.CLOSE_BRACKET);\n\t\t\t\t}\n\n\t\t\t\tlist = JSONFactoryUtil.looseDeserializeSafe(\n\t\t\t\t\tstringValue, ArrayList.class);\n\t\t\t}\n\n\t\t\treturn _generifyList(list, genericParameterTypes);\n\t\t}\n\t\telse if (parameterType.equals(Locale.class)) {\n\t\t\tString stringValue = value.toString();\n\n\t\t\tstringValue = stringValue.trim();\n\n\t\t\treturn LocaleUtil.fromLanguageId(stringValue);\n\t\t}\n\t\telse if (parameterType.equals(Map.class)) {\n\t\t\tString stringValue = value.toString();\n\n\t\t\tstringValue = stringValue.trim();\n\n\t\t\tMap<?, ?> map = JSONFactoryUtil.looseDeserializeSafe(\n\t\t\t\tstringValue, HashMap.class);\n\n\t\t\treturn _generifyMap(map, genericParameterTypes);\n\t\t}\n\t\telse {\n\t\t\tObject parameterValue = null;\n\n\t\t\ttry {\n\t\t\t\tparameterValue = TypeConverterManager.convertType(\n\t\t\t\t\tvalue, parameterType);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tString stringValue = value.toString();\n\n\t\t\t\tstringValue = stringValue.trim();\n\n\t\t\t\tif (!stringValue.startsWith(StringPool.OPEN_CURLY_BRACE)) {\n\t\t\t\t\tthrow new ClassCastException(e.getMessage());\n\t\t\t\t}\n\n\t\t\t\tparameterValue = JSONFactoryUtil.looseDeserializeSafe(\n\t\t\t\t\tstringValue, parameterType);\n\t\t\t}\n\n\t\t\treturn parameterValue;\n\t\t}\n\t}","id":8749,"modified_method":"private Object _convertValueToParameterValue(\n\t\tObject value, Class<?> parameterType,\n\t\tClass<?>[] genericParameterTypes) {\n\n\t\tif (parameterType.isArray()) {\n\t\t\tList<?> list = null;\n\n\t\t\tif (value instanceof List) {\n\t\t\t\tlist = (List<?>)value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString stringValue = value.toString();\n\n\t\t\t\tstringValue = stringValue.trim();\n\n\t\t\t\tif (!stringValue.startsWith(StringPool.OPEN_BRACKET)) {\n\t\t\t\t\tstringValue = StringPool.OPEN_BRACKET.concat(\n\t\t\t\t\t\tstringValue).concat(StringPool.CLOSE_BRACKET);\n\t\t\t\t}\n\n\t\t\t\tlist = JSONFactoryUtil.looseDeserializeSafe(\n\t\t\t\t\tstringValue, ArrayList.class);\n\t\t\t}\n\n\t\t\treturn _convertListToArray(list, parameterType.getComponentType());\n\t\t}\n\t\telse if (parameterType.equals(Calendar.class)) {\n\t\t\tCalendar calendar = Calendar.getInstance();\n\n\t\t\tcalendar.setLenient(false);\n\n\t\t\tString stringValue = value.toString();\n\n\t\t\tstringValue = stringValue.trim();\n\n\t\t\tlong timeInMillis = GetterUtil.getLong(stringValue);\n\n\t\t\tcalendar.setTimeInMillis(timeInMillis);\n\n\t\t\treturn calendar;\n\t\t}\n\t\telse if (Collection.class.isAssignableFrom(parameterType)) {\n\t\t\tList<?> list = null;\n\n\t\t\tif (value instanceof List) {\n\t\t\t\tlist = (List<?>)value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString stringValue = value.toString();\n\n\t\t\t\tstringValue = stringValue.trim();\n\n\t\t\t\tif (!stringValue.startsWith(StringPool.OPEN_BRACKET)) {\n\t\t\t\t\tstringValue = StringPool.OPEN_BRACKET.concat(\n\t\t\t\t\t\tstringValue).concat(StringPool.CLOSE_BRACKET);\n\t\t\t\t}\n\n\t\t\t\tlist = JSONFactoryUtil.looseDeserializeSafe(\n\t\t\t\t\tstringValue, ArrayList.class);\n\t\t\t}\n\n\t\t\treturn _generifyList(list, genericParameterTypes);\n\t\t}\n\t\telse if (parameterType.equals(Locale.class)) {\n\t\t\tString stringValue = value.toString();\n\n\t\t\tstringValue = stringValue.trim();\n\n\t\t\treturn LocaleUtil.fromLanguageId(stringValue);\n\t\t}\n\t\telse if (parameterType.equals(Map.class)) {\n\t\t\tString stringValue = value.toString();\n\n\t\t\tstringValue = stringValue.trim();\n\n\t\t\tMap<?, ?> map = JSONFactoryUtil.looseDeserializeSafe(\n\t\t\t\tstringValue, HashMap.class);\n\n\t\t\treturn _generifyMap(map, genericParameterTypes);\n\t\t}\n\t\telse {\n\t\t\tObject parameterValue = null;\n\n\t\t\ttry {\n\t\t\t\tparameterValue = _convertType(value, parameterType);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tString stringValue = value.toString();\n\n\t\t\t\tstringValue = stringValue.trim();\n\n\t\t\t\tif (!stringValue.startsWith(StringPool.OPEN_CURLY_BRACE)) {\n\t\t\t\t\tthrow new ClassCastException(e.getMessage());\n\t\t\t\t}\n\n\t\t\t\tparameterValue = JSONFactoryUtil.looseDeserializeSafe(\n\t\t\t\t\tstringValue, parameterType);\n\t\t\t}\n\n\t\t\treturn parameterValue;\n\t\t}\n\t}","commit_id":"59e3828b8f0bcc110cbe5d8cda26ed86e9a9bf02","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private Map<?, ?> _generifyMap(Map<?, ?> map, Class<?>[] types) {\n\t\tif (types == null) {\n\t\t\treturn map;\n\t\t}\n\n\t\tif (types.length != 2) {\n\t\t\treturn map;\n\t\t}\n\n\t\tMap<Object, Object> newMap = new HashMap<Object, Object>(map.size());\n\n\t\tfor (Map.Entry<?, ?> entry : map.entrySet()) {\n\t\t\tObject key = TypeConverterManager.convertType(\n\t\t\t\tentry.getKey(), types[0]);\n\n\t\t\tObject value = entry.getValue();\n\n\t\t\tif (value != null) {\n\t\t\t\tvalue = TypeConverterManager.convertType(value, types[1]);\n\t\t\t}\n\n\t\t\tnewMap.put(key, value);\n\t\t}\n\n\t\treturn newMap;\n\t}","id":8750,"modified_method":"private Map<?, ?> _generifyMap(Map<?, ?> map, Class<?>[] types) {\n\t\tif (types == null) {\n\t\t\treturn map;\n\t\t}\n\n\t\tif (types.length != 2) {\n\t\t\treturn map;\n\t\t}\n\n\t\tMap<Object, Object> newMap = new HashMap<Object, Object>(map.size());\n\n\t\tfor (Map.Entry<?, ?> entry : map.entrySet()) {\n\t\t\tObject key = _convertType(entry.getKey(), types[0]);\n\n\t\t\tObject value = entry.getValue();\n\n\t\t\tif (value != null) {\n\t\t\t\tvalue = _convertType(value, types[1]);\n\t\t\t}\n\n\t\t\tnewMap.put(key, value);\n\t\t}\n\n\t\treturn newMap;\n\t}","commit_id":"59e3828b8f0bcc110cbe5d8cda26ed86e9a9bf02","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private List<?> _generifyList(List<?> list, Class<?>[] types) {\n\t\tif (types == null) {\n\t\t\treturn list;\n\t\t}\n\n\t\tif (types.length != 1) {\n\t\t\treturn list;\n\t\t}\n\n\t\tList<Object> newList = new ArrayList<Object>(list.size());\n\n\t\tfor (Object entry : list) {\n\t\t\tif (entry != null) {\n\t\t\t\tentry = TypeConverterManager.convertType(entry, types[0]);\n\t\t\t}\n\n\t\t\tnewList.add(entry);\n\t\t}\n\n\t\treturn newList;\n\t}","id":8751,"modified_method":"private List<?> _generifyList(List<?> list, Class<?>[] types) {\n\t\tif (types == null) {\n\t\t\treturn list;\n\t\t}\n\n\t\tif (types.length != 1) {\n\t\t\treturn list;\n\t\t}\n\n\t\tList<Object> newList = new ArrayList<Object>(list.size());\n\n\t\tfor (Object entry : list) {\n\t\t\tif (entry != null) {\n\t\t\t\tentry = _convertType(entry, types[0]);\n\t\t\t}\n\n\t\t\tnewList.add(entry);\n\t\t}\n\n\t\treturn newList;\n\t}","commit_id":"59e3828b8f0bcc110cbe5d8cda26ed86e9a9bf02","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\t\tpublic String toJSONString() {\n\t\t\tJSONSerializer jsonSerializer =\n\t\t\t\tJSONFactoryUtil.createJSONSerializer();\n\n\t\t\treturn jsonSerializer.serializeDeep(_resultsMap);\n\t\t}","id":8752,"modified_method":"@Override\n\t\tpublic String toJSONString() {\n\t\t\tJSONSerializer jsonSerializer =\n\t\t\t\tJSONFactoryUtil.createJSONSerializer();\n\n\t\t\tjsonSerializer.include(\"types\");\n\n\t\t\treturn jsonSerializer.serializeDeep(_resultsMap);\n\t\t}","commit_id":"59e3828b8f0bcc110cbe5d8cda26ed86e9a9bf02","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private String _formatType(Class<?> type, Class<?>[] genericTypes) {\n\t\tif (type.isArray()) {\n\t\t\tClass<?> componentType = type.getComponentType();\n\n\t\t\treturn _formatType(componentType, genericTypes) + \"[]\";\n\t\t}\n\n\t\tif (type.isPrimitive()) {\n\t\t\treturn type.getSimpleName();\n\t\t}\n\t\telse if (type.equals(Date.class)) {\n\t\t\treturn \"long\";\n\t\t}\n\t\telse if (type.equals(Locale.class) || type.equals(String.class)) {\n\t\t\treturn \"string\";\n\t\t}\n\t\telse if (type.equals(Object.class) || type.equals(Serializable.class)) {\n\t\t\treturn \"object\";\n\t\t}\n\n\t\tString typeName = type.getName();\n\n\t\tif (type.equals(List.class)) {\n\t\t\ttypeName = \"list\";\n\t\t}\n\t\telse if (type.equals(Map.class)) {\n\t\t\ttypeName = \"map\";\n\t\t}\n\t\telse {\n\t\t\t_types.add(type);\n\t\t}\n\n\t\tif (genericTypes == null) {\n\t\t\treturn \"object<\" + typeName + \">\";\n\t\t}\n\n\t\tStringBundler sb = new StringBundler(genericTypes.length * 2 + 1);\n\n\t\tsb.append(StringPool.LESS_THAN);\n\n\t\tfor (int i = 0; i < genericTypes.length; i++) {\n\t\t\tClass<?> genericType = genericTypes[i];\n\n\t\t\tif (i != 0) {\n\t\t\t\tsb.append(StringPool.COMMA);\n\t\t\t}\n\n\t\t\tsb.append(_formatType(genericType, null));\n\t\t}\n\n\t\tsb.append(StringPool.GREATER_THAN);\n\n\t\treturn typeName + sb.toString();\n\t}","id":8753,"modified_method":"private String _formatType(Class<?> type, Class<?>[] genericTypes) {\n\t\tif (type.isArray()) {\n\t\t\tClass<?> componentType = type.getComponentType();\n\n\t\t\treturn _formatType(componentType, genericTypes) + \"[]\";\n\t\t}\n\n\t\tif (type.isPrimitive()) {\n\t\t\treturn type.getSimpleName();\n\t\t}\n\n\t\tif (type.equals(File.class)) {\n\t\t\treturn \"file\";\n\t\t}\n\t\telse if (type.equals(Boolean.class)) {\n\t\t\treturn \"boolean\";\n\t\t}\n\t\telse if (type.equals(Date.class)) {\n\t\t\treturn \"long\";\n\t\t}\n\t\telse if (type.equals(Locale.class)) {\n\t\t\treturn \"string\";\n\t\t}\n\t\telse if (type.equals(TimeZone.class)) {\n\t\t\treturn \"string\";\n\t\t}\n\t\telse if (type.equals(String.class)) {\n\t\t\treturn \"string\";\n\t\t}\n\t\telse if (type.equals(Object.class) || type.equals(Serializable.class)) {\n\t\t\treturn \"map\";\n\t\t}\n\t\telse if (ReflectUtil.isSubclass(type, Number.class)) {\n\t\t\tString typeName = null;\n\n\t\t\tif (type == Integer.class) {\n\t\t\t\ttypeName = \"int\";\n\t\t\t}\n\t\t\telse if (type == Character.class) {\n\t\t\t\ttypeName = \"char\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttypeName = StringUtil.toLowerCase(type.getSimpleName());\n\t\t\t}\n\n\t\t\treturn typeName;\n\t\t}\n\n\t\tString typeName = type.getName();\n\n\t\tif ((type == List.class) || ReflectUtil.isSubclass(type, List.class)) {\n\t\t\ttypeName = \"list\";\n\t\t}\n\t\telse if ((type == Map.class) ||\n\t\t\t\t ReflectUtil.isSubclass(type, Map.class)) {\n\n\t\t\ttypeName = \"map\";\n\t\t}\n\t\telse if (type == Collection.class) {\n\t\t\ttypeName = \"list\";\n\t\t}\n\t\telse {\n\t\t\tif (!_types.contains(type)) {\n\t\t\t\t_types.add(type);\n\t\t\t}\n\t\t}\n\n\t\tif (genericTypes == null) {\n\t\t\treturn typeName;\n\t\t}\n\n\t\tStringBundler sb = new StringBundler(genericTypes.length * 2 + 1);\n\n\t\tsb.append(StringPool.LESS_THAN);\n\n\t\tfor (int i = 0; i < genericTypes.length; i++) {\n\t\t\tClass<?> genericType = genericTypes[i];\n\n\t\t\tif (i != 0) {\n\t\t\t\tsb.append(StringPool.COMMA);\n\t\t\t}\n\n\t\t\tsb.append(_formatType(genericType, null));\n\t\t}\n\n\t\tsb.append(StringPool.GREATER_THAN);\n\n\t\treturn typeName + sb.toString();\n\t}","commit_id":"59e3828b8f0bcc110cbe5d8cda26ed86e9a9bf02","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private List<Map<String, Object>> _buildJsonWebServiceActionMappingMaps()\n\t\tthrows PortalException {\n\n\t\tList<JSONWebServiceActionMapping> jsonWebServiceActionMappings =\n\t\t\tJSONWebServiceActionsManagerUtil.getJSONWebServiceActionMappings(\n\t\t\t\t_contextPath);\n\n\t\tList<Map<String, Object>> jsonWebServiceActionMappingMaps =\n\t\t\tnew ArrayList<Map<String, Object>>(\n\t\t\t\tjsonWebServiceActionMappings.size());\n\n\t\tfor (JSONWebServiceActionMapping jsonWebServiceActionMapping :\n\t\t\t\tjsonWebServiceActionMappings) {\n\n\t\t\tString path = jsonWebServiceActionMapping.getPath();\n\n\t\t\tif (!_isAcceptPath(path)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tMap<String, Object> jsonWebServiceActionMappingMap =\n\t\t\t\tnew LinkedHashMap<String, Object>();\n\n\t\t\tjsonWebServiceActionMappingMap.put(\n\t\t\t\t\"method\", jsonWebServiceActionMapping.getMethod());\n\n\t\t\tMethodParameter[] methodParameters =\n\t\t\t\tjsonWebServiceActionMapping.getMethodParameters();\n\n\t\t\tList<Map<String, String>> parametersList =\n\t\t\t\tnew ArrayList<Map<String, String>>(methodParameters.length);\n\n\t\t\tfor (MethodParameter methodParameter : methodParameters) {\n\t\t\t\tClass<?>[] genericTypes = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tgenericTypes = methodParameter.getGenericTypes();\n\t\t\t\t}\n\t\t\t\tcatch (ClassNotFoundException cnfe) {\n\t\t\t\t\tthrow new PortalException(cnfe);\n\t\t\t\t}\n\n\t\t\t\tMap<String, String> parameterMap =\n\t\t\t\t\tnew HashMap<String, String>();\n\n\t\t\t\tparameterMap.put(\"name\", methodParameter.getName());\n\t\t\t\tparameterMap.put(\n\t\t\t\t\t\"type\",\n\t\t\t\t\t_formatType(methodParameter.getType(), genericTypes));\n\n\t\t\t\tparametersList.add(parameterMap);\n\t\t\t}\n\n\t\t\tjsonWebServiceActionMappingMap.put(\"parameters\", parametersList);\n\n\t\t\tjsonWebServiceActionMappingMap.put(\"path\", path);\n\n\t\t\tMethod actionMethod = jsonWebServiceActionMapping.getActionMethod();\n\n\t\t\tjsonWebServiceActionMappingMap.put(\n\t\t\t\t\"response\", _formatType(actionMethod.getReturnType(), null));\n\n\t\t\tjsonWebServiceActionMappingMaps.add(jsonWebServiceActionMappingMap);\n\t\t}\n\n\t\treturn jsonWebServiceActionMappingMaps;\n\t}","id":8754,"modified_method":"private List<Map<String, Object>> _buildJsonWebServiceActionMappingMaps()\n\t\tthrows PortalException {\n\n\t\tList<JSONWebServiceActionMapping> jsonWebServiceActionMappings =\n\t\t\tJSONWebServiceActionsManagerUtil.getJSONWebServiceActionMappings(\n\t\t\t\t_contextPath);\n\n\t\tList<Map<String, Object>> jsonWebServiceActionMappingMaps =\n\t\t\tnew ArrayList<Map<String, Object>>(\n\t\t\t\tjsonWebServiceActionMappings.size());\n\n\t\tfor (JSONWebServiceActionMapping jsonWebServiceActionMapping :\n\t\t\t\tjsonWebServiceActionMappings) {\n\n\t\t\tString path = jsonWebServiceActionMapping.getPath();\n\n\t\t\tif (!_isAcceptPath(path)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tMap<String, Object> jsonWebServiceActionMappingMap =\n\t\t\t\tnew LinkedHashMap<String, Object>();\n\n\t\t\tjsonWebServiceActionMappingMap.put(\n\t\t\t\t\"method\", jsonWebServiceActionMapping.getMethod());\n\n\t\t\tJavadocMethod javadocMethod =\n\t\t\t\tJavadocManagerUtil.lookupJavadocMethod(\n\t\t\t\t\tjsonWebServiceActionMapping.getRealActionMethod());\n\n\t\t\tif (javadocMethod != null) {\n\t\t\t\tString methodComment = javadocMethod.getComment();\n\n\t\t\t\tif (methodComment != null) {\n\t\t\t\t\tjsonWebServiceActionMappingMap.put(\n\t\t\t\t\t\t\"description\", javadocMethod.getComment());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tMethodParameter[] methodParameters =\n\t\t\t\tjsonWebServiceActionMapping.getMethodParameters();\n\n\t\t\tList<Map<String, String>> parametersList =\n\t\t\t\tnew ArrayList<Map<String, String>>(methodParameters.length);\n\n\t\t\tfor (MethodParameter methodParameter : methodParameters) {\n\t\t\t\tClass<?>[] genericTypes = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tgenericTypes = methodParameter.getGenericTypes();\n\t\t\t\t}\n\t\t\t\tcatch (ClassNotFoundException cnfe) {\n\t\t\t\t\tthrow new PortalException(cnfe);\n\t\t\t\t}\n\n\t\t\t\tMap<String, String> parameterMap =\n\t\t\t\t\tnew HashMap<String, String>();\n\n\t\t\t\tparameterMap.put(\"name\", methodParameter.getName());\n\n\t\t\t\tparameterMap.put(\n\t\t\t\t\t\t\"type\", _formatType(\n\t\t\t\t\t\t\tmethodParameter.getType(), genericTypes));\n\n\t\t\t\tparametersList.add(parameterMap);\n\t\t\t}\n\n\t\t\tjsonWebServiceActionMappingMap.put(\"parameters\", parametersList);\n\n\t\t\tjsonWebServiceActionMappingMap.put(\"path\", path);\n\n\t\t\tMethod actionMethod = jsonWebServiceActionMapping.getActionMethod();\n\n\t\t\tMap<String, String> returnsMap =\n\t\t\t\tnew LinkedHashMap<String, String>();\n\n\t\t\tClass<?> realActionClass =\n\t\t\t\tjsonWebServiceActionMapping.getActionClass();\n\n\t\t\tMethod realActionMethod =\n\t\t\t\tjsonWebServiceActionMapping.getRealActionMethod();\n\n\t\t\tClass[] genericReturnTypes = null;\n\n\t\t\tType genericReturnType = realActionMethod.getGenericReturnType();\n\n\t\t\tif (genericReturnType instanceof ParameterizedType) {\n\t\t\t\tParameterizedType parameterizedType =\n\t\t\t\t\t(ParameterizedType)genericReturnType;\n\n\t\t\t\tType[] generics = parameterizedType.getActualTypeArguments();\n\n\t\t\t\tgenericReturnTypes = new Class[generics.length];\n\n\t\t\t\tfor (int i = 0; i < generics.length; i++) {\n\t\t\t\t\tType generic = generics[i];\n\n\t\t\t\t\tgenericReturnTypes[i] = ReflectUtil.getRawType(\n\t\t\t\t\t\tgeneric, realActionClass);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturnsMap.put(\n\t\t\t\t\"type\", _formatType(\n\t\t\t\t\tactionMethod.getReturnType(), genericReturnTypes));\n\n\t\t\tjsonWebServiceActionMappingMap.put(\"returns\", returnsMap);\n\n\t\t\tjsonWebServiceActionMappingMaps.add(jsonWebServiceActionMappingMap);\n\t\t}\n\n\t\treturn jsonWebServiceActionMappingMaps;\n\t}","commit_id":"59e3828b8f0bcc110cbe5d8cda26ed86e9a9bf02","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic Object invoke() throws Exception {\n\t\tMap<String, Object> resultsMap = new LinkedHashMap<String, Object>();\n\n\t\tList<Map<String, Object>> jsonWebServiceActionMappingMaps =\n\t\t\t_buildJsonWebServiceActionMappingMaps();\n\n\t\tresultsMap.put(\"actions\", jsonWebServiceActionMappingMaps);\n\n\t\tresultsMap.put(\"context\", _contextPath);\n\t\tresultsMap.put(\"basePath\", _basePath);\n\t\tresultsMap.put(\"baseURL\", _baseURL);\n\n\t\tif (_discover.length > 0) {\n\t\t\tresultsMap.put(\"discover\", _discover);\n\t\t}\n\n\t\treturn new DiscoveryContent(resultsMap);\n\t}","id":8755,"modified_method":"@Override\n\tpublic Object invoke() throws Exception {\n\t\tMap<String, Object> resultsMap = new LinkedHashMap<String, Object>();\n\n\t\tList<Map<String, Object>> jsonWebServiceActionMappingMaps =\n\t\t\t_buildJsonWebServiceActionMappingMaps();\n\n\t\tresultsMap.put(\"services\", jsonWebServiceActionMappingMaps);\n\n\t\tList<Map> types = _buildTypesList(_types);\n\n\t\tresultsMap.put(\"types\", types);\n\n\t\tresultsMap.put(\"context\", _contextPath);\n\t\tresultsMap.put(\"basePath\", _basePath);\n\t\tresultsMap.put(\"baseURL\", _baseURL);\n\t\tresultsMap.put(\"version\", \"7.0\");\t// todo add portal version\n\n\t\tif (_discover.length > 0) {\n\t\t\tresultsMap.put(\"discover\", _discover);\n\t\t}\n\n\t\treturn new DiscoveryContent(resultsMap);\n\t}","commit_id":"59e3828b8f0bcc110cbe5d8cda26ed86e9a9bf02","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private static Class<?>[] _loadGenericTypes(String[] signatures)\n\t\tthrows ClassNotFoundException {\n\n\t\tThread currentThread = Thread.currentThread();\n\n\t\tClassLoader contextClassLoader = currentThread.getContextClassLoader();\n\n\t\tClass<?>[] types = new Class<?>[signatures.length];\n\n\t\tfor (int i = 0; i < signatures.length; i++) {\n\t\t\tString className = signatures[i];\n\n\t\t\tchar c = className.charAt(0);\n\n\t\t\tif (c == 'B') {\n\t\t\t\ttypes[i] = byte.class;\n\t\t\t}\n\t\t\telse if (c == 'C') {\n\t\t\t\ttypes[i] = char.class;\n\t\t\t}\n\t\t\telse if (c == 'D') {\n\t\t\t\ttypes[i] = double.class;\n\t\t\t}\n\t\t\telse if (c == 'F') {\n\t\t\t\ttypes[i] = float.class;\n\t\t\t}\n\t\t\telse if (c == 'I') {\n\t\t\t\ttypes[i] = int.class;\n\t\t\t}\n\t\t\telse if (c == 'J') {\n\t\t\t\ttypes[i] = long.class;\n\t\t\t}\n\t\t\telse if (c == 'L') {\n\t\t\t\tclassName = className.substring(1, className.length() - 1);\n\t\t\t\tclassName = className.replace(CharPool.SLASH, CharPool.PERIOD);\n\n\t\t\t\ttypes[i] = contextClassLoader.loadClass(className);\n\t\t\t}\n\t\t\telse if (c == 'S') {\n\t\t\t\ttypes[i] = short.class;\n\t\t\t}\n\t\t\telse if (c == 'Z') {\n\t\t\t\ttypes[i] = boolean.class;\n\t\t\t}\n\t\t\telse if (c == 'V') {\n\t\t\t\ttypes[i] = void.class;\n\t\t\t}\n\t\t\telse if (c == CharPool.OPEN_BRACKET) {\n\t\t\t\tclassName = className.replace(CharPool.SLASH, CharPool.PERIOD);\n\n\t\t\t\ttry {\n\t\t\t\t\ttypes[i] = contextClassLoader.loadClass(className);\n\t\t\t\t}\n\t\t\t\tcatch (ClassNotFoundException cnfe) {\n\t\t\t\t\ttypes[i] = Class.forName(className);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new ClassNotFoundException(className);\n\t\t\t}\n\t\t}\n\n\t\treturn types;\n\t}","id":8756,"modified_method":"private static Class<?>[] _loadGenericTypes(String[] signatures)\n\t\tthrows ClassNotFoundException {\n\n\t\tThread currentThread = Thread.currentThread();\n\n\t\tClassLoader contextClassLoader = currentThread.getContextClassLoader();\n\n\t\tClass<?>[] types = new Class<?>[signatures.length];\n\n\t\tfor (int i = 0; i < signatures.length; i++) {\n\t\t\tString className = signatures[i];\n\n\t\t\tclassName = _signatureToClassName(className);\n\n\t\t\ttypes[i] = contextClassLoader.loadClass(className);\n\t\t}\n\n\t\treturn types;\n\t}","commit_id":"59e3828b8f0bcc110cbe5d8cda26ed86e9a9bf02","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private static String[] _extractTopLevelGenericSignatures(\n\t\tString signature) {\n\n\t\tif (signature == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tint leftBracketIndex = signature.indexOf(CharPool.LESS_THAN);\n\n\t\tif (leftBracketIndex == -1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tint rightBracketIndex = signature.lastIndexOf(CharPool.GREATER_THAN);\n\n\t\tif (rightBracketIndex == -1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tString generics = signature.substring(\n\t\t\tleftBracketIndex + 1, rightBracketIndex);\n\n\t\tStringBuilder sb = new StringBuilder(generics.length());\n\n\t\tArrayList<String> list = new ArrayList<String>();\n\n\t\tint level = 0;\n\n\t\tfor (int i = 0; i < generics.length(); i++) {\n\t\t\tchar c = generics.charAt(i);\n\n\t\t\tif (c == '<') {\n\t\t\t\tlevel++;\n\t\t\t}\n\t\t\telse if (c == '>') {\n\t\t\t\tlevel--;\n\t\t\t}\n\t\t\telse if (level == 0) {\n\t\t\t\tsb.append(c);\n\n\t\t\t\tif (c == ';') {\n\t\t\t\t\tlist.add(sb.toString());\n\n\t\t\t\t\tsb.setLength(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn list.toArray(new String[list.size()]);\n\t}","id":8757,"modified_method":"private static String[] _extractTopLevelGenericSignatures(\n\t\tString signature) {\n\n\t\tif (signature == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tint leftBracketIndex = signature.indexOf(CharPool.LESS_THAN);\n\n\t\tif (leftBracketIndex == -1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tint rightBracketIndex = signature.lastIndexOf(CharPool.GREATER_THAN);\n\n\t\tif (rightBracketIndex == -1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tString generics = signature.substring(\n\t\t\tleftBracketIndex + 1, rightBracketIndex);\n\n\t\tStringBuilder sb = new StringBuilder(generics.length());\n\n\t\tArrayList<String> list = new ArrayList<String>();\n\n\t\tint level = 0;\n\n\t\tfor (int i = 0; i < generics.length(); i++) {\n\t\t\tchar c = generics.charAt(i);\n\n\t\t\tif (c == '<') {\n\t\t\t\tlevel++;\n\t\t\t}\n\t\t\telse if (c == '>') {\n\t\t\t\tlevel--;\n\t\t\t}\n\t\t\telse if (level == 0) {\n\t\t\t\tsb.append(c);\n\n\t\t\t\tif (c == ';') {\n\t\t\t\t\tlist.add(sb.toString());\n\n\t\t\t\t\tsb.setLength(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (sb.length() > 0) {\n\t\t\tlist.add(sb.toString());\n\n\t\t\tsb.setLength(0);\n\t\t}\n\n\t\treturn list.toArray(new String[list.size()]);\n\t}","commit_id":"59e3828b8f0bcc110cbe5d8cda26ed86e9a9bf02","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private List<?> _generifyList(List<?> list, Class<?>[] types) {\n\t\tif (types == null) {\n\t\t\treturn list;\n\t\t}\n\n\t\tif (types.length != 1) {\n\t\t\treturn list;\n\t\t}\n\n\t\tList<Object> newList = new ArrayList<Object>(list.size());\n\n\t\tfor (Object entry : list) {\n\t\t\tif (entry != null) {\n\t\t\t\tentry = TypeConverterManager.convertType(entry, types[0]);\n\t\t\t}\n\n\t\t\tnewList.add(entry);\n\t\t}\n\n\t\treturn newList;\n\t}","id":8758,"modified_method":"private List<?> _generifyList(List<?> list, Class<?>[] types) {\n\t\tif (types == null) {\n\t\t\treturn list;\n\t\t}\n\n\t\tif (types.length != 1) {\n\t\t\treturn list;\n\t\t}\n\n\t\tList<Object> newList = new ArrayList<Object>(list.size());\n\n\t\tfor (Object entry : list) {\n\t\t\tif (entry != null) {\n\t\t\t\tentry = _convertType(entry, types[0]);\n\t\t\t}\n\n\t\t\tnewList.add(entry);\n\t\t}\n\n\t\treturn newList;\n\t}","commit_id":"b94c4267cb4436555b15b1908a6fd6b048a06967","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private Object _convertValueToParameterValue(\n\t\tObject value, Class<?> parameterType,\n\t\tClass<?>[] genericParameterTypes) {\n\n\t\tif (parameterType.isArray()) {\n\t\t\tList<?> list = null;\n\n\t\t\tif (value instanceof List) {\n\t\t\t\tlist = (List<?>)value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString stringValue = value.toString();\n\n\t\t\t\tstringValue = stringValue.trim();\n\n\t\t\t\tif (!stringValue.startsWith(StringPool.OPEN_BRACKET)) {\n\t\t\t\t\tstringValue = StringPool.OPEN_BRACKET.concat(\n\t\t\t\t\t\tstringValue).concat(StringPool.CLOSE_BRACKET);\n\t\t\t\t}\n\n\t\t\t\tlist = JSONFactoryUtil.looseDeserializeSafe(\n\t\t\t\t\tstringValue, ArrayList.class);\n\t\t\t}\n\n\t\t\treturn _convertListToArray(list, parameterType.getComponentType());\n\t\t}\n\t\telse if (parameterType.equals(Calendar.class)) {\n\t\t\tCalendar calendar = Calendar.getInstance();\n\n\t\t\tcalendar.setLenient(false);\n\n\t\t\tString stringValue = value.toString();\n\n\t\t\tstringValue = stringValue.trim();\n\n\t\t\tlong timeInMillis = GetterUtil.getLong(stringValue);\n\n\t\t\tcalendar.setTimeInMillis(timeInMillis);\n\n\t\t\treturn calendar;\n\t\t}\n\t\telse if (Collection.class.isAssignableFrom(parameterType)) {\n\t\t\tList<?> list = null;\n\n\t\t\tif (value instanceof List) {\n\t\t\t\tlist = (List<?>)value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString stringValue = value.toString();\n\n\t\t\t\tstringValue = stringValue.trim();\n\n\t\t\t\tif (!stringValue.startsWith(StringPool.OPEN_BRACKET)) {\n\t\t\t\t\tstringValue = StringPool.OPEN_BRACKET.concat(\n\t\t\t\t\t\tstringValue).concat(StringPool.CLOSE_BRACKET);\n\t\t\t\t}\n\n\t\t\t\tlist = JSONFactoryUtil.looseDeserializeSafe(\n\t\t\t\t\tstringValue, ArrayList.class);\n\t\t\t}\n\n\t\t\treturn _generifyList(list, genericParameterTypes);\n\t\t}\n\t\telse if (parameterType.equals(Locale.class)) {\n\t\t\tString stringValue = value.toString();\n\n\t\t\tstringValue = stringValue.trim();\n\n\t\t\treturn LocaleUtil.fromLanguageId(stringValue);\n\t\t}\n\t\telse if (parameterType.equals(Map.class)) {\n\t\t\tString stringValue = value.toString();\n\n\t\t\tstringValue = stringValue.trim();\n\n\t\t\tMap<?, ?> map = JSONFactoryUtil.looseDeserializeSafe(\n\t\t\t\tstringValue, HashMap.class);\n\n\t\t\treturn _generifyMap(map, genericParameterTypes);\n\t\t}\n\t\telse {\n\t\t\tObject parameterValue = null;\n\n\t\t\ttry {\n\t\t\t\tparameterValue = TypeConverterManager.convertType(\n\t\t\t\t\tvalue, parameterType);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tString stringValue = value.toString();\n\n\t\t\t\tstringValue = stringValue.trim();\n\n\t\t\t\tif (!stringValue.startsWith(StringPool.OPEN_CURLY_BRACE)) {\n\t\t\t\t\tthrow new ClassCastException(e.getMessage());\n\t\t\t\t}\n\n\t\t\t\tparameterValue = JSONFactoryUtil.looseDeserializeSafe(\n\t\t\t\t\tstringValue, parameterType);\n\t\t\t}\n\n\t\t\treturn parameterValue;\n\t\t}\n\t}","id":8759,"modified_method":"private Object _convertValueToParameterValue(\n\t\tObject value, Class<?> parameterType,\n\t\tClass<?>[] genericParameterTypes) {\n\n\t\tif (parameterType.isArray()) {\n\t\t\tList<?> list = null;\n\n\t\t\tif (value instanceof List) {\n\t\t\t\tlist = (List<?>)value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString stringValue = value.toString();\n\n\t\t\t\tstringValue = stringValue.trim();\n\n\t\t\t\tif (!stringValue.startsWith(StringPool.OPEN_BRACKET)) {\n\t\t\t\t\tstringValue = StringPool.OPEN_BRACKET.concat(\n\t\t\t\t\t\tstringValue).concat(StringPool.CLOSE_BRACKET);\n\t\t\t\t}\n\n\t\t\t\tlist = JSONFactoryUtil.looseDeserializeSafe(\n\t\t\t\t\tstringValue, ArrayList.class);\n\t\t\t}\n\n\t\t\treturn _convertListToArray(list, parameterType.getComponentType());\n\t\t}\n\t\telse if (parameterType.equals(Calendar.class)) {\n\t\t\tCalendar calendar = Calendar.getInstance();\n\n\t\t\tcalendar.setLenient(false);\n\n\t\t\tString stringValue = value.toString();\n\n\t\t\tstringValue = stringValue.trim();\n\n\t\t\tlong timeInMillis = GetterUtil.getLong(stringValue);\n\n\t\t\tcalendar.setTimeInMillis(timeInMillis);\n\n\t\t\treturn calendar;\n\t\t}\n\t\telse if (Collection.class.isAssignableFrom(parameterType)) {\n\t\t\tList<?> list = null;\n\n\t\t\tif (value instanceof List) {\n\t\t\t\tlist = (List<?>)value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString stringValue = value.toString();\n\n\t\t\t\tstringValue = stringValue.trim();\n\n\t\t\t\tif (!stringValue.startsWith(StringPool.OPEN_BRACKET)) {\n\t\t\t\t\tstringValue = StringPool.OPEN_BRACKET.concat(\n\t\t\t\t\t\tstringValue).concat(StringPool.CLOSE_BRACKET);\n\t\t\t\t}\n\n\t\t\t\tlist = JSONFactoryUtil.looseDeserializeSafe(\n\t\t\t\t\tstringValue, ArrayList.class);\n\t\t\t}\n\n\t\t\treturn _generifyList(list, genericParameterTypes);\n\t\t}\n\t\telse if (parameterType.equals(Locale.class)) {\n\t\t\tString stringValue = value.toString();\n\n\t\t\tstringValue = stringValue.trim();\n\n\t\t\treturn LocaleUtil.fromLanguageId(stringValue);\n\t\t}\n\t\telse if (parameterType.equals(Map.class)) {\n\t\t\tString stringValue = value.toString();\n\n\t\t\tstringValue = stringValue.trim();\n\n\t\t\tMap<?, ?> map = JSONFactoryUtil.looseDeserializeSafe(\n\t\t\t\tstringValue, HashMap.class);\n\n\t\t\treturn _generifyMap(map, genericParameterTypes);\n\t\t}\n\t\telse {\n\t\t\tObject parameterValue = null;\n\n\t\t\ttry {\n\t\t\t\tparameterValue = _convertType(value, parameterType);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tString stringValue = value.toString();\n\n\t\t\t\tstringValue = stringValue.trim();\n\n\t\t\t\tif (!stringValue.startsWith(StringPool.OPEN_CURLY_BRACE)) {\n\t\t\t\t\tthrow new ClassCastException(e.getMessage());\n\t\t\t\t}\n\n\t\t\t\tparameterValue = JSONFactoryUtil.looseDeserializeSafe(\n\t\t\t\t\tstringValue, parameterType);\n\t\t\t}\n\n\t\t\treturn parameterValue;\n\t\t}\n\t}","commit_id":"b94c4267cb4436555b15b1908a6fd6b048a06967","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private Object _convertListToArray(List<?> list, Class<?> componentType) {\n\t\tObject array = Array.newInstance(componentType, list.size());\n\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tObject entry = list.get(i);\n\n\t\t\tif (entry != null) {\n\t\t\t\tentry = TypeConverterManager.convertType(entry, componentType);\n\t\t\t}\n\n\t\t\tArray.set(array, i, entry);\n\t\t}\n\n\t\treturn array;\n\t}","id":8760,"modified_method":"private Object _convertListToArray(List<?> list, Class<?> componentType) {\n\t\tObject array = Array.newInstance(componentType, list.size());\n\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tObject entry = list.get(i);\n\n\t\t\tif (entry != null) {\n\t\t\t\tentry = _convertType(entry, componentType);\n\t\t\t}\n\n\t\t\tArray.set(array, i, entry);\n\t\t}\n\n\t\treturn array;\n\t}","commit_id":"b94c4267cb4436555b15b1908a6fd6b048a06967","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private Map<?, ?> _generifyMap(Map<?, ?> map, Class<?>[] types) {\n\t\tif (types == null) {\n\t\t\treturn map;\n\t\t}\n\n\t\tif (types.length != 2) {\n\t\t\treturn map;\n\t\t}\n\n\t\tMap<Object, Object> newMap = new HashMap<Object, Object>(map.size());\n\n\t\tfor (Map.Entry<?, ?> entry : map.entrySet()) {\n\t\t\tObject key = TypeConverterManager.convertType(\n\t\t\t\tentry.getKey(), types[0]);\n\n\t\t\tObject value = entry.getValue();\n\n\t\t\tif (value != null) {\n\t\t\t\tvalue = TypeConverterManager.convertType(value, types[1]);\n\t\t\t}\n\n\t\t\tnewMap.put(key, value);\n\t\t}\n\n\t\treturn newMap;\n\t}","id":8761,"modified_method":"private Map<?, ?> _generifyMap(Map<?, ?> map, Class<?>[] types) {\n\t\tif (types == null) {\n\t\t\treturn map;\n\t\t}\n\n\t\tif (types.length != 2) {\n\t\t\treturn map;\n\t\t}\n\n\t\tMap<Object, Object> newMap = new HashMap<Object, Object>(map.size());\n\n\t\tfor (Map.Entry<?, ?> entry : map.entrySet()) {\n\t\t\tObject key = _convertType(entry.getKey(), types[0]);\n\n\t\t\tObject value = entry.getValue();\n\n\t\t\tif (value != null) {\n\t\t\t\tvalue = _convertType(value, types[1]);\n\t\t\t}\n\n\t\t\tnewMap.put(key, value);\n\t\t}\n\n\t\treturn newMap;\n\t}","commit_id":"b94c4267cb4436555b15b1908a6fd6b048a06967","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private List<Map<String, Object>> _buildJsonWebServiceActionMappingMaps()\n\t\tthrows PortalException {\n\n\t\tList<JSONWebServiceActionMapping> jsonWebServiceActionMappings =\n\t\t\tJSONWebServiceActionsManagerUtil.getJSONWebServiceActionMappings(\n\t\t\t\t_contextPath);\n\n\t\tList<Map<String, Object>> jsonWebServiceActionMappingMaps =\n\t\t\tnew ArrayList<Map<String, Object>>(\n\t\t\t\tjsonWebServiceActionMappings.size());\n\n\t\tfor (JSONWebServiceActionMapping jsonWebServiceActionMapping :\n\t\t\t\tjsonWebServiceActionMappings) {\n\n\t\t\tString path = jsonWebServiceActionMapping.getPath();\n\n\t\t\tif (!_isAcceptPath(path)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tMap<String, Object> jsonWebServiceActionMappingMap =\n\t\t\t\tnew LinkedHashMap<String, Object>();\n\n\t\t\tjsonWebServiceActionMappingMap.put(\n\t\t\t\t\"method\", jsonWebServiceActionMapping.getMethod());\n\n\t\t\tMethodParameter[] methodParameters =\n\t\t\t\tjsonWebServiceActionMapping.getMethodParameters();\n\n\t\t\tList<Map<String, String>> parametersList =\n\t\t\t\tnew ArrayList<Map<String, String>>(methodParameters.length);\n\n\t\t\tfor (MethodParameter methodParameter : methodParameters) {\n\t\t\t\tClass<?>[] genericTypes = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tgenericTypes = methodParameter.getGenericTypes();\n\t\t\t\t}\n\t\t\t\tcatch (ClassNotFoundException cnfe) {\n\t\t\t\t\tthrow new PortalException(cnfe);\n\t\t\t\t}\n\n\t\t\t\tMap<String, String> parameterMap =\n\t\t\t\t\tnew HashMap<String, String>();\n\n\t\t\t\tparameterMap.put(\"name\", methodParameter.getName());\n\t\t\t\tparameterMap.put(\n\t\t\t\t\t\"type\",\n\t\t\t\t\t_formatType(methodParameter.getType(), genericTypes));\n\n\t\t\t\tparametersList.add(parameterMap);\n\t\t\t}\n\n\t\t\tjsonWebServiceActionMappingMap.put(\"parameters\", parametersList);\n\n\t\t\tjsonWebServiceActionMappingMap.put(\"path\", path);\n\n\t\t\tMethod actionMethod = jsonWebServiceActionMapping.getActionMethod();\n\n\t\t\tjsonWebServiceActionMappingMap.put(\n\t\t\t\t\"response\", _formatType(actionMethod.getReturnType(), null));\n\n\t\t\tjsonWebServiceActionMappingMaps.add(jsonWebServiceActionMappingMap);\n\t\t}\n\n\t\treturn jsonWebServiceActionMappingMaps;\n\t}","id":8762,"modified_method":"private List<Map<String, Object>> _buildJsonWebServiceActionMappingMaps()\n\t\tthrows PortalException {\n\n\t\tList<JSONWebServiceActionMapping> jsonWebServiceActionMappings =\n\t\t\tJSONWebServiceActionsManagerUtil.getJSONWebServiceActionMappings(\n\t\t\t\t_contextPath);\n\n\t\tList<Map<String, Object>> jsonWebServiceActionMappingMaps =\n\t\t\tnew ArrayList<Map<String, Object>>(\n\t\t\t\tjsonWebServiceActionMappings.size());\n\n\t\tfor (JSONWebServiceActionMapping jsonWebServiceActionMapping :\n\t\t\t\tjsonWebServiceActionMappings) {\n\n\t\t\tString path = jsonWebServiceActionMapping.getPath();\n\n\t\t\tif (!_isAcceptPath(path)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tMap<String, Object> jsonWebServiceActionMappingMap =\n\t\t\t\tnew LinkedHashMap<String, Object>();\n\n\t\t\tjsonWebServiceActionMappingMap.put(\n\t\t\t\t\"method\", jsonWebServiceActionMapping.getMethod());\n\n\t\t\tJavadocMethod javadocMethod =\n\t\t\t\tJavadocManagerUtil.lookupJavadocMethod(\n\t\t\t\t\tjsonWebServiceActionMapping.getRealActionMethod());\n\n\t\t\tif (javadocMethod != null) {\n\t\t\t\tString methodComment = javadocMethod.getComment();\n\n\t\t\t\tif (methodComment != null) {\n\t\t\t\t\tjsonWebServiceActionMappingMap.put(\n\t\t\t\t\t\t\"description\", javadocMethod.getComment());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tMethodParameter[] methodParameters =\n\t\t\t\tjsonWebServiceActionMapping.getMethodParameters();\n\n\t\t\tList<Map<String, String>> parametersList =\n\t\t\t\tnew ArrayList<Map<String, String>>(methodParameters.length);\n\n\t\t\tfor (MethodParameter methodParameter : methodParameters) {\n\t\t\t\tClass<?>[] genericTypes = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tgenericTypes = methodParameter.getGenericTypes();\n\t\t\t\t}\n\t\t\t\tcatch (ClassNotFoundException cnfe) {\n\t\t\t\t\tthrow new PortalException(cnfe);\n\t\t\t\t}\n\n\t\t\t\tMap<String, String> parameterMap =\n\t\t\t\t\tnew HashMap<String, String>();\n\n\t\t\t\tparameterMap.put(\"name\", methodParameter.getName());\n\n\t\t\t\tparameterMap.put(\n\t\t\t\t\t\t\"type\", _formatType(\n\t\t\t\t\t\t\tmethodParameter.getType(), genericTypes));\n\n\t\t\t\tparametersList.add(parameterMap);\n\t\t\t}\n\n\t\t\tjsonWebServiceActionMappingMap.put(\"parameters\", parametersList);\n\n\t\t\tjsonWebServiceActionMappingMap.put(\"path\", path);\n\n\t\t\tMethod actionMethod = jsonWebServiceActionMapping.getActionMethod();\n\n\t\t\tMap<String, String> returnsMap =\n\t\t\t\tnew LinkedHashMap<String, String>();\n\n\t\t\tClass<?> realActionClass =\n\t\t\t\tjsonWebServiceActionMapping.getActionClass();\n\n\t\t\tMethod realActionMethod =\n\t\t\t\tjsonWebServiceActionMapping.getRealActionMethod();\n\n\t\t\tClass[] genericReturnTypes = null;\n\n\t\t\tType genericReturnType = realActionMethod.getGenericReturnType();\n\n\t\t\tif (genericReturnType instanceof ParameterizedType) {\n\t\t\t\tParameterizedType parameterizedType =\n\t\t\t\t\t(ParameterizedType)genericReturnType;\n\n\t\t\t\tType[] generics = parameterizedType.getActualTypeArguments();\n\n\t\t\t\tgenericReturnTypes = new Class[generics.length];\n\n\t\t\t\tfor (int i = 0; i < generics.length; i++) {\n\t\t\t\t\tType generic = generics[i];\n\n\t\t\t\t\tgenericReturnTypes[i] = ReflectUtil.getRawType(\n\t\t\t\t\t\tgeneric, realActionClass);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturnsMap.put(\n\t\t\t\t\"type\", _formatType(\n\t\t\t\t\tactionMethod.getReturnType(), genericReturnTypes));\n\n\t\t\tjsonWebServiceActionMappingMap.put(\"returns\", returnsMap);\n\n\t\t\tjsonWebServiceActionMappingMaps.add(jsonWebServiceActionMappingMap);\n\t\t}\n\n\t\treturn jsonWebServiceActionMappingMaps;\n\t}","commit_id":"b94c4267cb4436555b15b1908a6fd6b048a06967","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic Object invoke() throws Exception {\n\t\tMap<String, Object> resultsMap = new LinkedHashMap<String, Object>();\n\n\t\tList<Map<String, Object>> jsonWebServiceActionMappingMaps =\n\t\t\t_buildJsonWebServiceActionMappingMaps();\n\n\t\tresultsMap.put(\"actions\", jsonWebServiceActionMappingMaps);\n\n\t\tresultsMap.put(\"context\", _contextPath);\n\t\tresultsMap.put(\"basePath\", _basePath);\n\t\tresultsMap.put(\"baseURL\", _baseURL);\n\n\t\tif (_discover.length > 0) {\n\t\t\tresultsMap.put(\"discover\", _discover);\n\t\t}\n\n\t\treturn new DiscoveryContent(resultsMap);\n\t}","id":8763,"modified_method":"@Override\n\tpublic Object invoke() throws Exception {\n\t\tMap<String, Object> resultsMap = new LinkedHashMap<String, Object>();\n\n\t\tList<Map<String, Object>> jsonWebServiceActionMappingMaps =\n\t\t\t_buildJsonWebServiceActionMappingMaps();\n\n\t\tresultsMap.put(\"services\", jsonWebServiceActionMappingMaps);\n\n\t\tList<Map> types = _buildTypesList(_types);\n\n\t\tresultsMap.put(\"types\", types);\n\n\t\tresultsMap.put(\"context\", _contextPath);\n\t\tresultsMap.put(\"basePath\", _basePath);\n\t\tresultsMap.put(\"baseURL\", _baseURL);\n\t\tresultsMap.put(\"version\", \"7.0\");\t// todo add portal version\n\n\t\tif (_discover.length > 0) {\n\t\t\tresultsMap.put(\"discover\", _discover);\n\t\t}\n\n\t\treturn new DiscoveryContent(resultsMap);\n\t}","commit_id":"b94c4267cb4436555b15b1908a6fd6b048a06967","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private String _formatType(Class<?> type, Class<?>[] genericTypes) {\n\t\tif (type.isArray()) {\n\t\t\tClass<?> componentType = type.getComponentType();\n\n\t\t\treturn _formatType(componentType, genericTypes) + \"[]\";\n\t\t}\n\n\t\tif (type.isPrimitive()) {\n\t\t\treturn type.getSimpleName();\n\t\t}\n\t\telse if (type.equals(Date.class)) {\n\t\t\treturn \"long\";\n\t\t}\n\t\telse if (type.equals(Locale.class) || type.equals(String.class)) {\n\t\t\treturn \"string\";\n\t\t}\n\t\telse if (type.equals(Object.class) || type.equals(Serializable.class)) {\n\t\t\treturn \"object\";\n\t\t}\n\n\t\tString typeName = type.getName();\n\n\t\tif (type.equals(List.class)) {\n\t\t\ttypeName = \"list\";\n\t\t}\n\t\telse if (type.equals(Map.class)) {\n\t\t\ttypeName = \"map\";\n\t\t}\n\t\telse {\n\t\t\t_types.add(type);\n\t\t}\n\n\t\tif (genericTypes == null) {\n\t\t\treturn \"object<\" + typeName + \">\";\n\t\t}\n\n\t\tStringBundler sb = new StringBundler(genericTypes.length * 2 + 1);\n\n\t\tsb.append(StringPool.LESS_THAN);\n\n\t\tfor (int i = 0; i < genericTypes.length; i++) {\n\t\t\tClass<?> genericType = genericTypes[i];\n\n\t\t\tif (i != 0) {\n\t\t\t\tsb.append(StringPool.COMMA);\n\t\t\t}\n\n\t\t\tsb.append(_formatType(genericType, null));\n\t\t}\n\n\t\tsb.append(StringPool.GREATER_THAN);\n\n\t\treturn typeName + sb.toString();\n\t}","id":8764,"modified_method":"private String _formatType(Class<?> type, Class<?>[] genericTypes) {\n\t\tif (type.isArray()) {\n\t\t\tClass<?> componentType = type.getComponentType();\n\n\t\t\treturn _formatType(componentType, genericTypes) + \"[]\";\n\t\t}\n\n\t\tif (type.isPrimitive()) {\n\t\t\treturn type.getSimpleName();\n\t\t}\n\n\t\tif (type.equals(File.class)) {\n\t\t\treturn \"file\";\n\t\t}\n\t\telse if (type.equals(Boolean.class)) {\n\t\t\treturn \"boolean\";\n\t\t}\n\t\telse if (type.equals(Date.class)) {\n\t\t\treturn \"long\";\n\t\t}\n\t\telse if (type.equals(Locale.class)) {\n\t\t\treturn \"string\";\n\t\t}\n\t\telse if (type.equals(TimeZone.class)) {\n\t\t\treturn \"string\";\n\t\t}\n\t\telse if (type.equals(String.class)) {\n\t\t\treturn \"string\";\n\t\t}\n\t\telse if (type.equals(Object.class) || type.equals(Serializable.class)) {\n\t\t\treturn \"map\";\n\t\t}\n\t\telse if (ReflectUtil.isSubclass(type, Number.class)) {\n\t\t\tString typeName = null;\n\n\t\t\tif (type == Integer.class) {\n\t\t\t\ttypeName = \"int\";\n\t\t\t}\n\t\t\telse if (type == Character.class) {\n\t\t\t\ttypeName = \"char\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttypeName = StringUtil.toLowerCase(type.getSimpleName());\n\t\t\t}\n\n\t\t\treturn typeName;\n\t\t}\n\n\t\tString typeName = type.getName();\n\n\t\tif ((type == List.class) || ReflectUtil.isSubclass(type, List.class)) {\n\t\t\ttypeName = \"list\";\n\t\t}\n\t\telse if ((type == Map.class) ||\n\t\t\t\t ReflectUtil.isSubclass(type, Map.class)) {\n\n\t\t\ttypeName = \"map\";\n\t\t}\n\t\telse if (type == Collection.class) {\n\t\t\ttypeName = \"list\";\n\t\t}\n\t\telse {\n\t\t\tif (!_types.contains(type)) {\n\t\t\t\t_types.add(type);\n\t\t\t}\n\t\t}\n\n\t\tif (genericTypes == null) {\n\t\t\treturn typeName;\n\t\t}\n\n\t\tStringBundler sb = new StringBundler(genericTypes.length * 2 + 1);\n\n\t\tsb.append(StringPool.LESS_THAN);\n\n\t\tfor (int i = 0; i < genericTypes.length; i++) {\n\t\t\tClass<?> genericType = genericTypes[i];\n\n\t\t\tif (i != 0) {\n\t\t\t\tsb.append(StringPool.COMMA);\n\t\t\t}\n\n\t\t\tsb.append(_formatType(genericType, null));\n\t\t}\n\n\t\tsb.append(StringPool.GREATER_THAN);\n\n\t\treturn typeName + sb.toString();\n\t}","commit_id":"b94c4267cb4436555b15b1908a6fd6b048a06967","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\t\tpublic String toJSONString() {\n\t\t\tJSONSerializer jsonSerializer =\n\t\t\t\tJSONFactoryUtil.createJSONSerializer();\n\n\t\t\treturn jsonSerializer.serializeDeep(_resultsMap);\n\t\t}","id":8765,"modified_method":"@Override\n\t\tpublic String toJSONString() {\n\t\t\tJSONSerializer jsonSerializer =\n\t\t\t\tJSONFactoryUtil.createJSONSerializer();\n\n\t\t\tjsonSerializer.include(\"types\");\n\n\t\t\treturn jsonSerializer.serializeDeep(_resultsMap);\n\t\t}","commit_id":"b94c4267cb4436555b15b1908a6fd6b048a06967","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private static String[] _extractTopLevelGenericSignatures(\n\t\tString signature) {\n\n\t\tif (signature == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tint leftBracketIndex = signature.indexOf(CharPool.LESS_THAN);\n\n\t\tif (leftBracketIndex == -1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tint rightBracketIndex = signature.lastIndexOf(CharPool.GREATER_THAN);\n\n\t\tif (rightBracketIndex == -1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tString generics = signature.substring(\n\t\t\tleftBracketIndex + 1, rightBracketIndex);\n\n\t\tStringBuilder sb = new StringBuilder(generics.length());\n\n\t\tArrayList<String> list = new ArrayList<String>();\n\n\t\tint level = 0;\n\n\t\tfor (int i = 0; i < generics.length(); i++) {\n\t\t\tchar c = generics.charAt(i);\n\n\t\t\tif (c == '<') {\n\t\t\t\tlevel++;\n\t\t\t}\n\t\t\telse if (c == '>') {\n\t\t\t\tlevel--;\n\t\t\t}\n\t\t\telse if (level == 0) {\n\t\t\t\tsb.append(c);\n\n\t\t\t\tif (c == ';') {\n\t\t\t\t\tlist.add(sb.toString());\n\n\t\t\t\t\tsb.setLength(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn list.toArray(new String[list.size()]);\n\t}","id":8766,"modified_method":"private static String[] _extractTopLevelGenericSignatures(\n\t\tString signature) {\n\n\t\tif (signature == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tint leftBracketIndex = signature.indexOf(CharPool.LESS_THAN);\n\n\t\tif (leftBracketIndex == -1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tint rightBracketIndex = signature.lastIndexOf(CharPool.GREATER_THAN);\n\n\t\tif (rightBracketIndex == -1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tString generics = signature.substring(\n\t\t\tleftBracketIndex + 1, rightBracketIndex);\n\n\t\tStringBuilder sb = new StringBuilder(generics.length());\n\n\t\tArrayList<String> list = new ArrayList<String>();\n\n\t\tint level = 0;\n\n\t\tfor (int i = 0; i < generics.length(); i++) {\n\t\t\tchar c = generics.charAt(i);\n\n\t\t\tif (c == '<') {\n\t\t\t\tlevel++;\n\t\t\t}\n\t\t\telse if (c == '>') {\n\t\t\t\tlevel--;\n\t\t\t}\n\t\t\telse if (level == 0) {\n\t\t\t\tsb.append(c);\n\n\t\t\t\tif (c == ';') {\n\t\t\t\t\tlist.add(sb.toString());\n\n\t\t\t\t\tsb.setLength(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (sb.length() > 0) {\n\t\t\tlist.add(sb.toString());\n\n\t\t\tsb.setLength(0);\n\t\t}\n\n\t\treturn list.toArray(new String[list.size()]);\n\t}","commit_id":"b94c4267cb4436555b15b1908a6fd6b048a06967","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private static Class<?>[] _loadGenericTypes(String[] signatures)\n\t\tthrows ClassNotFoundException {\n\n\t\tThread currentThread = Thread.currentThread();\n\n\t\tClassLoader contextClassLoader = currentThread.getContextClassLoader();\n\n\t\tClass<?>[] types = new Class<?>[signatures.length];\n\n\t\tfor (int i = 0; i < signatures.length; i++) {\n\t\t\tString className = signatures[i];\n\n\t\t\tchar c = className.charAt(0);\n\n\t\t\tif (c == 'B') {\n\t\t\t\ttypes[i] = byte.class;\n\t\t\t}\n\t\t\telse if (c == 'C') {\n\t\t\t\ttypes[i] = char.class;\n\t\t\t}\n\t\t\telse if (c == 'D') {\n\t\t\t\ttypes[i] = double.class;\n\t\t\t}\n\t\t\telse if (c == 'F') {\n\t\t\t\ttypes[i] = float.class;\n\t\t\t}\n\t\t\telse if (c == 'I') {\n\t\t\t\ttypes[i] = int.class;\n\t\t\t}\n\t\t\telse if (c == 'J') {\n\t\t\t\ttypes[i] = long.class;\n\t\t\t}\n\t\t\telse if (c == 'L') {\n\t\t\t\tclassName = className.substring(1, className.length() - 1);\n\t\t\t\tclassName = className.replace(CharPool.SLASH, CharPool.PERIOD);\n\n\t\t\t\ttypes[i] = contextClassLoader.loadClass(className);\n\t\t\t}\n\t\t\telse if (c == 'S') {\n\t\t\t\ttypes[i] = short.class;\n\t\t\t}\n\t\t\telse if (c == 'Z') {\n\t\t\t\ttypes[i] = boolean.class;\n\t\t\t}\n\t\t\telse if (c == 'V') {\n\t\t\t\ttypes[i] = void.class;\n\t\t\t}\n\t\t\telse if (c == CharPool.OPEN_BRACKET) {\n\t\t\t\tclassName = className.replace(CharPool.SLASH, CharPool.PERIOD);\n\n\t\t\t\ttry {\n\t\t\t\t\ttypes[i] = contextClassLoader.loadClass(className);\n\t\t\t\t}\n\t\t\t\tcatch (ClassNotFoundException cnfe) {\n\t\t\t\t\ttypes[i] = Class.forName(className);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new ClassNotFoundException(className);\n\t\t\t}\n\t\t}\n\n\t\treturn types;\n\t}","id":8767,"modified_method":"private static Class<?>[] _loadGenericTypes(String[] signatures)\n\t\tthrows ClassNotFoundException {\n\n\t\tThread currentThread = Thread.currentThread();\n\n\t\tClassLoader contextClassLoader = currentThread.getContextClassLoader();\n\n\t\tClass<?>[] types = new Class<?>[signatures.length];\n\n\t\tfor (int i = 0; i < signatures.length; i++) {\n\t\t\tString className = signatures[i];\n\n\t\t\tclassName = _signatureToClassName(className);\n\n\t\t\ttypes[i] = contextClassLoader.loadClass(className);\n\t\t}\n\n\t\treturn types;\n\t}","commit_id":"b94c4267cb4436555b15b1908a6fd6b048a06967","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void execute()\n        throws MojoExecutionException\n    {\n        touch( new File( outputDirectory ), \"touch.txt\" );\n\n        // This parameter should be aligned to the basedir as the parameter type is specified\n        // as java.io.File\n\n        if ( basedirAlignmentDirectory.getPath().equals( \"target/test-basedir-alignment\" ) )\n        {\n            throw new MojoExecutionException( \"basedirAlignmentDirectory not aligned\" );\n        }\n        \n        touch( basedirAlignmentDirectory, \"touch.txt\" );\n        \n        File outDir = new File( outputDirectory );\n\n        // Test parameter setting\n        if ( pluginItem != null )\n        {\n            touch( outDir, pluginItem );\n        }\n\n        if ( goalItem != null )\n        {\n            touch( outDir, goalItem );\n        }\n        \n        if ( artifactToFile != null )\n        {\n            Artifact artifact = (Artifact) pluginArtifacts.get( artifactToFile );\n            \n            File artifactFile = artifact.getFile();\n            \n            String filename = artifactFile.getAbsolutePath().replace('/', '_').replace(':', '_') + \".txt\";\n            \n            touch( outDir, filename );\n        }\n\n        project.getBuild().setFinalName( \"coreitified\" );\n    }","id":8768,"modified_method":"public void execute()\n        throws MojoExecutionException\n    {\n        if ( fail )\n        {\n            throw new MojoExecutionException( \"Failing per \\'fail\\' parameter (specified in pom or system properties)\" );\n        }\n        \n        touch( new File( outputDirectory ), \"touch.txt\" );\n\n        // This parameter should be aligned to the basedir as the parameter type is specified\n        // as java.io.File\n\n        if ( basedirAlignmentDirectory.getPath().equals( \"target/test-basedir-alignment\" ) )\n        {\n            throw new MojoExecutionException( \"basedirAlignmentDirectory not aligned\" );\n        }\n        \n        touch( basedirAlignmentDirectory, \"touch.txt\" );\n        \n        File outDir = new File( outputDirectory );\n\n        // Test parameter setting\n        if ( pluginItem != null )\n        {\n            touch( outDir, pluginItem );\n        }\n\n        if ( goalItem != null )\n        {\n            touch( outDir, goalItem );\n        }\n        \n        if ( artifactToFile != null )\n        {\n            Artifact artifact = (Artifact) pluginArtifacts.get( artifactToFile );\n            \n            File artifactFile = artifact.getFile();\n            \n            String filename = artifactFile.getAbsolutePath().replace('/', '_').replace(':', '_') + \".txt\";\n            \n            touch( outDir, filename );\n        }\n\n        project.getBuild().setFinalName( \"coreitified\" );\n    }","commit_id":"b69490b82874e311a1407921fc3ba1f913de7c75","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * Execute a task. Each task may be a phase in the lifecycle or the\n     * execution of a mojo.\n     *\n     * @param session\n     * @param project\n     * @param dispatcher\n     */\n    public MavenExecutionResponse execute( MavenSession session, MavenProject project, EventDispatcher dispatcher )\n        throws LifecycleExecutionException\n    {\n        List taskSegments = segmentTaskListByAggregationNeeds( session.getGoals(), session, project );\n\n        MavenExecutionResponse response = new MavenExecutionResponse();\n\n        response.setStart( new Date() );\n\n        try\n        {\n            for ( Iterator i = project.getBuildExtensions().iterator(); i.hasNext(); )\n            {\n                Extension extension = (Extension) i.next();\n                extensionManager.addExtension( extension, project, session.getLocalRepository() );\n            }\n\n            Map handlers = findArtifactTypeHandlers( project, session.getSettings(), session.getLocalRepository() );\n            artifactHandlerManager.addHandlers( handlers );\n\n            executeTaskSegments( taskSegments, session, project, dispatcher );\n        }\n        catch ( MojoExecutionException e )\n        {\n            response.setException( e );\n        }\n        catch ( ArtifactResolutionException e )\n        {\n            response.setException( e );\n        }\n        catch ( PlexusContainerException e )\n        {\n            throw new LifecycleExecutionException( \"Unable to initialise extensions\", e );\n        }\n        catch ( PluginManagerException e )\n        {\n            throw new LifecycleExecutionException( \"Unable to initialise extensions\", e );\n        }\n        catch ( PluginVersionResolutionException e )\n        {\n            throw new LifecycleExecutionException( \"Unable to initialise extensions\", e );\n        }\n        catch ( InvalidVersionSpecificationException e )\n        {\n            throw new LifecycleExecutionException( \"Unable to initialise extensions\", e );\n        }\n        finally\n        {\n            response.setFinish( new Date() );\n        }\n\n        return response;\n    }","id":8769,"modified_method":"/**\n     * Execute a task. Each task may be a phase in the lifecycle or the\n     * execution of a mojo.\n     *\n     * @param session\n     * @param project\n     * @param dispatcher\n     */\n    public MavenExecutionResponse execute( MavenSession session, ReactorManager rm, EventDispatcher dispatcher )\n        throws LifecycleExecutionException\n    {\n        MavenProject project = rm.getTopLevelProject();\n        \n        List taskSegments = segmentTaskListByAggregationNeeds( session.getGoals(), session, project );\n\n        MavenExecutionResponse response = new MavenExecutionResponse();\n\n        response.setStart( new Date() );\n\n        try\n        {\n            for ( Iterator i = project.getBuildExtensions().iterator(); i.hasNext(); )\n            {\n                Extension extension = (Extension) i.next();\n                extensionManager.addExtension( extension, project, session.getLocalRepository() );\n            }\n\n            Map handlers = findArtifactTypeHandlers( project, session.getSettings(), session.getLocalRepository() );\n            artifactHandlerManager.addHandlers( handlers );\n\n            executeTaskSegments( taskSegments, rm, session, project, dispatcher );\n            \n            if ( ReactorManager.FAIL_AT_END.equals( rm.getFailureBehavior() ) && rm.hasBuildFailures() )\n            {\n                response.setException( new ReactorException( \"One or more projects failed to build.\" ) );\n            }\n        }\n        catch ( MojoExecutionException e )\n        {\n            response.setException( e );\n        }\n        catch ( ArtifactResolutionException e )\n        {\n            response.setException( e );\n        }\n        catch ( PlexusContainerException e )\n        {\n            throw new LifecycleExecutionException( \"Unable to initialise extensions\", e );\n        }\n        catch ( PluginManagerException e )\n        {\n            throw new LifecycleExecutionException( \"Unable to initialise extensions\", e );\n        }\n        catch ( PluginVersionResolutionException e )\n        {\n            throw new LifecycleExecutionException( \"Unable to initialise extensions\", e );\n        }\n        catch ( InvalidVersionSpecificationException e )\n        {\n            throw new LifecycleExecutionException( \"Unable to initialise extensions\", e );\n        }\n        finally\n        {\n            response.setFinish( new Date() );\n        }\n\n        return response;\n    }","commit_id":"b69490b82874e311a1407921fc3ba1f913de7c75","url":"https://github.com/apache/maven"},{"original_method":"private void executeTaskSegments( List taskSegments, MavenSession session, MavenProject project,\n                                      EventDispatcher dispatcher )\n        throws PluginNotFoundException, MojoExecutionException, ArtifactResolutionException, LifecycleExecutionException\n    {\n        for ( Iterator it = taskSegments.iterator(); it.hasNext(); )\n        {\n            TaskSegment segment = (TaskSegment) it.next();\n\n            if ( segment.aggregate() )\n            {\n                line();\n\n                getLogger().info( \"Building \" + project.getName() );\n\n                getLogger().info( \"  \" + segment );\n\n                line();\n\n                // !! This is ripe for refactoring to an aspect.\n                // Event monitoring.\n                String event = MavenEvents.PROJECT_EXECUTION;\n\n                dispatcher.dispatchStart( event, project.getId() + \" ( \" + segment + \" )\" );\n\n                try\n                {\n                    // only call once, with the top-level project (assumed to be provided as a parameter)...\n                    for ( Iterator goalIterator = segment.getTasks().iterator(); goalIterator.hasNext(); )\n                    {\n                        String task = (String) goalIterator.next();\n\n                        executeGoal( task, session, project );\n                    }\n\n                    dispatcher.dispatchEnd( event, project.getId() + \" ( \" + segment + \" )\" );\n                }\n                catch ( LifecycleExecutionException e )\n                {\n                    dispatcher.dispatchError( event, project.getId() + \" ( \" + segment + \" )\", e );\n\n                    throw e;\n                }\n            }\n            else\n            {\n                List sortedProjects = session.getSortedProjects();\n\n                // iterate over projects, and execute on each...\n                for ( Iterator projectIterator = sortedProjects.iterator(); projectIterator.hasNext(); )\n                {\n                    MavenProject currentProject = (MavenProject) projectIterator.next();\n\n                    line();\n\n                    getLogger().info( \"Building \" + currentProject.getName() );\n\n                    getLogger().info( \"  \" + segment );\n\n                    line();\n\n                    // !! This is ripe for refactoring to an aspect.\n                    // Event monitoring.\n                    String event = MavenEvents.PROJECT_EXECUTION;\n\n                    dispatcher.dispatchStart( event, currentProject.getId() + \" ( \" + segment + \" )\" );\n\n                    try\n                    {\n                        for ( Iterator goalIterator = segment.getTasks().iterator(); goalIterator.hasNext(); )\n                        {\n                            String task = (String) goalIterator.next();\n\n                            executeGoal( task, session, currentProject );\n                        }\n\n                        dispatcher.dispatchEnd( event, currentProject.getId() + \" ( \" + segment + \" )\" );\n                    }\n                    catch ( LifecycleExecutionException e )\n                    {\n                        dispatcher.dispatchError( event, currentProject.getId() + \" ( \" + segment + \" )\", e );\n\n                        throw e;\n                    }\n                }\n            }\n        }\n    }","id":8770,"modified_method":"private void executeTaskSegments( List taskSegments, ReactorManager rm, MavenSession session, MavenProject project,\n                                     EventDispatcher dispatcher )\n        throws PluginNotFoundException, MojoExecutionException, ArtifactResolutionException, LifecycleExecutionException\n    {\n        for ( Iterator it = taskSegments.iterator(); it.hasNext(); )\n        {\n            TaskSegment segment = (TaskSegment) it.next();\n\n            if ( segment.aggregate() )\n            {\n                if ( !rm.isBlackListed( project.getId() ) )\n                {\n                    line();\n\n                    getLogger().info( \"Building \" + project.getName() );\n\n                    getLogger().info( \"  \" + segment );\n\n                    line();\n\n                    // !! This is ripe for refactoring to an aspect.\n                    // Event monitoring.\n                    String event = MavenEvents.PROJECT_EXECUTION;\n\n                    dispatcher.dispatchStart( event, project.getId() + \" ( \" + segment + \" )\" );\n\n                    try\n                    {\n                        // only call once, with the top-level project (assumed to be provided as a parameter)...\n                        for ( Iterator goalIterator = segment.getTasks().iterator(); goalIterator.hasNext(); )\n                        {\n                            String task = (String) goalIterator.next();\n\n                            try\n                            {\n                                executeGoal( task, session, project );\n                            }\n                            catch ( MojoExecutionException e )\n                            {\n                                handleExecutionFailure( rm, project, e, task );\n                            }\n                            catch ( ArtifactResolutionException e )\n                            {\n                                handleExecutionFailure( rm, project, e, task );\n                            }\n                        }\n\n                        dispatcher.dispatchEnd( event, project.getId() + \" ( \" + segment + \" )\" );\n                    }\n                    catch ( LifecycleExecutionException e )\n                    {\n                        dispatcher.dispatchError( event, project.getId() + \" ( \" + segment + \" )\", e );\n\n                        throw e;\n                    }\n                }\n                else\n                {\n                    line();\n\n                    getLogger().info( \"SKIPPING \" + project.getName() );\n\n                    getLogger().info( \"  \" + segment );\n                    \n                    getLogger().info( \"This project has been banned from further executions due to previous failures.\" );\n\n                    line();\n                }\n            }\n            else\n            {\n                List sortedProjects = session.getSortedProjects();\n\n                // iterate over projects, and execute on each...\n                for ( Iterator projectIterator = sortedProjects.iterator(); projectIterator.hasNext(); )\n                {\n                    MavenProject currentProject = (MavenProject) projectIterator.next();\n\n                    if ( !rm.isBlackListed( currentProject.getId() ) )\n                    {\n                        line();\n\n                        getLogger().info( \"Building \" + currentProject.getName() );\n\n                        getLogger().info( \"  \" + segment );\n\n                        line();\n\n                        // !! This is ripe for refactoring to an aspect.\n                        // Event monitoring.\n                        String event = MavenEvents.PROJECT_EXECUTION;\n\n                        dispatcher.dispatchStart( event, currentProject.getId() + \" ( \" + segment + \" )\" );\n\n                        try\n                        {\n                            for ( Iterator goalIterator = segment.getTasks().iterator(); goalIterator.hasNext(); )\n                            {\n                                String task = (String) goalIterator.next();\n\n                                try\n                                {\n                                    executeGoal( task, session, currentProject );\n                                }\n                                catch ( MojoExecutionException e )\n                                {\n                                    handleExecutionFailure( rm, project, e, task );\n                                }\n                                catch ( ArtifactResolutionException e )\n                                {\n                                    handleExecutionFailure( rm, project, e, task );\n                                }\n                            }\n\n                            dispatcher.dispatchEnd( event, currentProject.getId() + \" ( \" + segment + \" )\" );\n                        }\n                        catch ( LifecycleExecutionException e )\n                        {\n                            dispatcher.dispatchError( event, currentProject.getId() + \" ( \" + segment + \" )\", e );\n\n                            throw e;\n                        }\n                    }\n                    else\n                    {\n                        line();\n\n                        getLogger().info( \"SKIPPING \" + currentProject.getName() );\n\n                        getLogger().info( \"  \" + segment );\n                        \n                        getLogger().info( \"This project has been banned from further executions due to previous failures.\" );\n\n                        line();\n                    }\n                }\n            }\n        }\n    }","commit_id":"b69490b82874e311a1407921fc3ba1f913de7c75","url":"https://github.com/apache/maven"},{"original_method":"protected MavenSession createSession( MavenExecutionRequest request, List projects )\n    {\n        return new MavenSession( container, request.getSettings(), request.getLocalRepository(),\n                                 request.getEventDispatcher(), projects, request.getGoals(),\n                                 request.getBaseDirectory() );\n    }","id":8771,"modified_method":"protected MavenSession createSession( MavenExecutionRequest request, ReactorManager rpm )\n    {\n        return new MavenSession( container, request.getSettings(), request.getLocalRepository(),\n                                 request.getEventDispatcher(), rpm, request.getGoals(),\n                                 request.getBaseDirectory() );\n    }","commit_id":"b69490b82874e311a1407921fc3ba1f913de7c75","url":"https://github.com/apache/maven"},{"original_method":"protected void logSuccess( MavenExecutionResponse r )\n    {\n        line();\n\n        getLogger().info( \"BUILD SUCCESSFUL\" );\n\n        line();\n\n        stats( r.getStart(), r.getFinish() );\n\n        line();\n    }","id":8772,"modified_method":"protected void logSuccess( MavenExecutionResponse r, ReactorManager rm )\n    {\n        if ( rm.hasMultipleProjects() )\n        {\n            writeReactorSummary( rm );\n        }\n        \n        line();\n\n        getLogger().info( \"BUILD SUCCESSFUL\" );\n\n        line();\n\n        stats( r.getStart(), r.getFinish() );\n\n        line();\n    }","commit_id":"b69490b82874e311a1407921fc3ba1f913de7c75","url":"https://github.com/apache/maven"},{"original_method":"public MavenExecutionResponse execute( MavenExecutionRequest request )\n        throws ReactorException\n    {\n        if ( request.getSettings().isOffline() )\n        {\n            getLogger().info( \"Maven is running in offline mode.\" );\n        }\n\n        try\n        {\n            resolveParameters( request.getSettings() );\n        }\n        catch ( ComponentLookupException e )\n        {\n            throw new ReactorException( \"Unable to configure Maven for execution\", e );\n        }\n        catch ( ComponentLifecycleException e )\n        {\n            throw new ReactorException( \"Unable to configure Maven for execution\", e );\n        }\n\n        EventDispatcher dispatcher = request.getEventDispatcher();\n\n        String event = MavenEvents.REACTOR_EXECUTION;\n\n        dispatcher.dispatchStart( event, request.getBaseDirectory() );\n\n        List projects;\n\n        MavenProject topLevelProject;\n\n        try\n        {\n            List files = getProjectFiles( request );\n\n            projects = collectProjects( files, request.getLocalRepository(), request.isRecursive(),\n                                        request.getSettings() );\n            \n            // the reasoning here is that the list is still unsorted according to dependency, so the first project\n            // SHOULD BE the top-level, or the one we want to start with if we're doing an aggregated build.\n\n            if ( !projects.isEmpty() )\n            {\n                // TODO: !![jc; 28-jul-2005] check this; if we're using '-r' and there are aggregator tasks, this will result in weirdness.\n                topLevelProject = findTopLevelProject( projects, request.getPomFile() );\n                \n                projects = ProjectSorter.getSortedProjects( projects );\n            }\n            else\n            {\n                List externalProfiles = getActiveExternalProfiles( null, request.getSettings() );\n\n                topLevelProject = projectBuilder.buildStandaloneSuperProject( request.getLocalRepository(),\n                                                                              externalProfiles );\n                projects.add( topLevelProject );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new ReactorException( \"Error processing projects for the reactor: \", e );\n        }\n        catch ( ArtifactResolutionException e )\n        {\n            dispatcher.dispatchError( event, request.getBaseDirectory(), e );\n\n            MavenExecutionResponse response = new MavenExecutionResponse();\n            response.setStart( new Date() );\n            response.setFinish( new Date() );\n            response.setException( e );\n            logFailure( response, e, null );\n\n            return response;\n        }\n        catch ( ProjectBuildingException e )\n        {\n            dispatcher.dispatchError( event, request.getBaseDirectory(), e );\n\n            MavenExecutionResponse response = new MavenExecutionResponse();\n            response.setStart( new Date() );\n            response.setFinish( new Date() );\n            response.setException( e );\n            logFailure( response, e, null );\n\n            return response;\n        }\n        catch ( CycleDetectedException e )\n        {\n            dispatcher.dispatchError( event, request.getBaseDirectory(), e );\n\n            MavenExecutionResponse response = new MavenExecutionResponse();\n            response.setStart( new Date() );\n            response.setFinish( new Date() );\n            response.setException( e );\n            logFailure( response, e, null );\n\n            return response;\n        }\n\n        try\n        {\n            MavenSession session = createSession( request, projects );\n\n            try\n            {\n                MavenExecutionResponse response = lifecycleExecutor.execute( session, topLevelProject, dispatcher );\n\n                // TODO: is this perhaps more appropriate in the CLI?\n                if ( response.isExecutionFailure() )\n                {\n                    dispatcher.dispatchError( event, request.getBaseDirectory(), response.getException() );\n\n                    // TODO: yuck! Revisit when cleaning up the exception handling from the top down\n                    Throwable exception = response.getException();\n\n                    if ( exception instanceof MojoExecutionException )\n                    {\n                        if ( exception.getCause() == null )\n                        {\n                            MojoExecutionException e = (MojoExecutionException) exception;\n\n                            logFailure( response, e, e.getLongMessage() );\n                        }\n                        else\n                        {\n                            // TODO: throw exceptions like this, so \"failures\" are just that\n                            logError( response );\n                        }\n                    }\n                    else if ( exception instanceof ArtifactResolutionException )\n                    {\n                        logFailure( response, exception, null );\n                    }\n                    else\n                    {\n                        // TODO: this should be a \"FATAL\" exception, reported to the\n                        // developers - however currently a LOT of\n                        // \"user\" errors fall through the cracks (like invalid POMs, as\n                        // one example)\n                        logError( response );\n                    }\n\n                    return response;\n                }\n                else\n                {\n                    logSuccess( response );\n                }\n            }\n            catch ( LifecycleExecutionException e )\n            {\n                throw new ReactorException( \"Error executing project within the reactor\", e );\n            }\n\n            dispatcher.dispatchEnd( event, request.getBaseDirectory() );\n\n            // TODO: not really satisfactory\n            return null;\n        }\n        catch ( ReactorException e )\n        {\n            dispatcher.dispatchError( event, request.getBaseDirectory(), e );\n\n            throw e;\n        }\n    }","id":8773,"modified_method":"public MavenExecutionResponse execute( MavenExecutionRequest request )\n        throws ReactorException\n    {\n        if ( request.getSettings().isOffline() )\n        {\n            getLogger().info( \"Maven is running in offline mode.\" );\n        }\n\n        try\n        {\n            resolveParameters( request.getSettings() );\n        }\n        catch ( ComponentLookupException e )\n        {\n            throw new ReactorException( \"Unable to configure Maven for execution\", e );\n        }\n        catch ( ComponentLifecycleException e )\n        {\n            throw new ReactorException( \"Unable to configure Maven for execution\", e );\n        }\n\n        EventDispatcher dispatcher = request.getEventDispatcher();\n\n        String event = MavenEvents.REACTOR_EXECUTION;\n\n        dispatcher.dispatchStart( event, request.getBaseDirectory() );\n\n        ReactorManager rm;\n        \n        try\n        {\n            List files = getProjectFiles( request );\n\n            List projects = collectProjects( files, request.getLocalRepository(), request.isRecursive(),\n                                        request.getSettings() );\n            \n            // the reasoning here is that the list is still unsorted according to dependency, so the first project\n            // SHOULD BE the top-level, or the one we want to start with if we're doing an aggregated build.\n\n            if ( projects.isEmpty() )\n            {\n                List externalProfiles = getActiveExternalProfiles( null, request.getSettings() );\n\n                MavenProject superProject = projectBuilder.buildStandaloneSuperProject( request.getLocalRepository(),\n                                                                              externalProfiles );\n                projects.add( superProject );\n            }\n            \n            rm = new ReactorManager( projects );\n            \n            String requestFailureBehavior = request.getFailureBehavior();\n            \n            if ( requestFailureBehavior != null )\n            {\n                rm.setFailureBehavior( requestFailureBehavior );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new ReactorException( \"Error processing projects for the reactor: \", e );\n        }\n        catch ( ArtifactResolutionException e )\n        {\n            return dispatchErrorResponse( dispatcher, event, request.getBaseDirectory(), e );\n        }\n        catch ( ProjectBuildingException e )\n        {\n            return dispatchErrorResponse( dispatcher, event, request.getBaseDirectory(), e );\n        }\n        catch ( CycleDetectedException e )\n        {\n            return dispatchErrorResponse( dispatcher, event, request.getBaseDirectory(), e );\n        }\n\n        try\n        {\n            MavenSession session = createSession( request, rm );\n\n            try\n            {\n                MavenExecutionResponse response = lifecycleExecutor.execute( session, rm, dispatcher );\n\n                // TODO: is this perhaps more appropriate in the CLI?\n                if ( response.isExecutionFailure() )\n                {\n                    dispatcher.dispatchError( event, request.getBaseDirectory(), response.getException() );\n\n                    // TODO: yuck! Revisit when cleaning up the exception handling from the top down\n                    Throwable exception = response.getException();\n\n                    if ( ReactorManager.FAIL_AT_END.equals( rm.getFailureBehavior() ) && ( exception instanceof ReactorException ) )\n                    {\n                        logFailure( response, exception, null );\n                        \n                        if ( rm.hasMultipleProjects() )\n                        {\n                            writeReactorSummary( rm );\n                        }\n                    }\n                    else if ( exception instanceof MojoExecutionException )\n                    {\n                        if ( exception.getCause() == null )\n                        {\n                            MojoExecutionException e = (MojoExecutionException) exception;\n\n                            logFailure( response, e, e.getLongMessage() );\n                        }\n                        else\n                        {\n                            // TODO: throw exceptions like this, so \"failures\" are just that\n                            logError( response );\n                        }\n                    }\n                    else if ( exception instanceof ArtifactResolutionException )\n                    {\n                        logFailure( response, exception, null );\n                    }\n                    else\n                    {\n                        // TODO: this should be a \"FATAL\" exception, reported to the\n                        // developers - however currently a LOT of\n                        // \"user\" errors fall through the cracks (like invalid POMs, as\n                        // one example)\n                        logError( response );\n                    }\n\n                    return response;\n                }\n                else\n                {\n                    logSuccess( response, rm );\n                }\n            }\n            catch ( LifecycleExecutionException e )\n            {\n                throw new ReactorException( \"Error executing project within the reactor\", e );\n            }\n\n            dispatcher.dispatchEnd( event, request.getBaseDirectory() );\n\n            // TODO: not really satisfactory\n            return null;\n        }\n        catch ( ReactorException e )\n        {\n            dispatcher.dispatchError( event, request.getBaseDirectory(), e );\n\n            throw e;\n        }\n    }","commit_id":"b69490b82874e311a1407921fc3ba1f913de7c75","url":"https://github.com/apache/maven"},{"original_method":"public CLIManager()\n        {\n            options = new Options();\n            \n            options.addOption( OptionBuilder.withLongOpt( \"file\").hasArg().withDescription( \"Force the use of an alternate POM file.\" ).create( ALTERNATE_POM_FILE ) );\n            \n            options.addOption(\n                OptionBuilder.withLongOpt( \"define\" ).hasArg().withDescription( \"Define a system property\" ).create(\n                    SET_SYSTEM_PROPERTY ) );\n            options.addOption(\n                OptionBuilder.withLongOpt( \"offline\" ).withDescription( \"Work offline\" ).create( OFFLINE ) );\n//            options.addOption( OptionBuilder.withLongOpt( \"mojoDescriptors\" ).withDescription(\n//                \"Display available mojoDescriptors\" ).create( LIST_GOALS ) );\n            options.addOption(\n                OptionBuilder.withLongOpt( \"help\" ).withDescription( \"Display help information\" ).create( HELP ) );\n            options.addOption(\n                OptionBuilder.withLongOpt( \"version\" ).withDescription( \"Display version information\" ).create(\n                    VERSION ) );\n            options.addOption(\n                OptionBuilder.withLongOpt( \"debug\" ).withDescription( \"Produce execution debug output\" ).create(\n                    DEBUG ) );\n            options.addOption(\n                OptionBuilder.withLongOpt( \"errors\" ).withDescription( \"Produce execution error messages\" ).create(\n                    ERRORS ) );\n            options.addOption( OptionBuilder.withLongOpt( \"reactor\" ).withDescription(\n                \"Execute goals for project found in the reactor\" ).create( REACTOR ) );\n            options.addOption( OptionBuilder.withLongOpt( \"non-recursive\" ).withDescription(\n                \"Do not recurse into sub-projects\" ).create( NON_RECURSIVE ) );\n            options.addOption( OptionBuilder.withLongOpt( \"update-snapshots\" ).withDescription(\n                \"Update all snapshots regardless of repository policies\" ).create( UPDATE_SNAPSHOTS ) );\n            options.addOption( OptionBuilder.withLongOpt( \"activate-profiles\" ).withDescription(\n                \"Comma-delimited list of profiles to activate\" ).hasArg().create( ACTIVATE_PROFILES ) );\n\n            options.addOption( OptionBuilder.withLongOpt( \"batch-mode\" ).withDescription(\n                \"Run in non-interactive (batch) mode\" ).create( BATCH_MODE ) );\n\n            options.addOption( OptionBuilder.withLongOpt( \"check-plugin-updates\" ).withDescription(\n                \"Force upToDate check for any relevant registered plugins\" ).create( FORCE_PLUGIN_UPDATES ) );\n            options.addOption( OptionBuilder.withLongOpt( \"update-plugins\" ).withDescription(\n                \"Synonym for \" + FORCE_PLUGIN_UPDATES ).create( FORCE_PLUGIN_UPDATES2 ) );\n            options.addOption( OptionBuilder.withLongOpt( \"no-plugin-updates\" ).withDescription(\n                \"Suppress upToDate check for any relevant registered plugins\" ).create( SUPPRESS_PLUGIN_UPDATES ) );\n            options.addOption( OptionBuilder.withLongOpt( \"check-plugin-latest\" ).withDescription(\n                \"Force checking of LATEST metadata for plugin versions\" ).create( FORCE_PLUGIN_LATEST_CHECK ) );\n            options.addOption( OptionBuilder.withLongOpt( \"no-plugin-latest\" ).withDescription(\n                \"Suppress checking of LATEST metadata for plugin versions\" ).create( SUPPRESS_PLUGIN_LATEST_CHECK ) );\n\n            options.addOption( OptionBuilder.withLongOpt( \"no-plugin-registry\" ).withDescription(\n                \"Don't use ~/.m2/plugin-registry.xml for plugin versions\" ).create( SUPPRESS_PLUGIN_REGISTRY ) );\n\n            options.addOption( OptionBuilder.withLongOpt( \"strict-checksums\" ).withDescription(\n                \"Fail the build if checksums don't match\" ).create( CHECKSUM_FAILURE_POLICY ) );\n            options.addOption(\n                OptionBuilder.withLongOpt( \"lax-checksums\" ).withDescription( \"Warn if checksums don't match\" ).create(\n                    CHECKSUM_WARNING_POLICY ) );\n            \n            options.addOption( OptionBuilder.withLongOpt( \"settings\" )\n                .withDescription( \"Alternate path for the user settings file\" ).hasArg()\n                .create( ALTERNATE_USER_SETTINGS ) );\n        }","id":8774,"modified_method":"public CLIManager()\n        {\n            options = new Options();\n            \n            options.addOption( OptionBuilder.withLongOpt( \"file\").hasArg().withDescription( \"Force the use of an alternate POM file.\" ).create( ALTERNATE_POM_FILE ) );\n            \n            options.addOption(\n                OptionBuilder.withLongOpt( \"define\" ).hasArg().withDescription( \"Define a system property\" ).create(\n                    SET_SYSTEM_PROPERTY ) );\n            options.addOption(\n                OptionBuilder.withLongOpt( \"offline\" ).withDescription( \"Work offline\" ).create( OFFLINE ) );\n//            options.addOption( OptionBuilder.withLongOpt( \"mojoDescriptors\" ).withDescription(\n//                \"Display available mojoDescriptors\" ).create( LIST_GOALS ) );\n            options.addOption(\n                OptionBuilder.withLongOpt( \"help\" ).withDescription( \"Display help information\" ).create( HELP ) );\n            options.addOption(\n                OptionBuilder.withLongOpt( \"version\" ).withDescription( \"Display version information\" ).create(\n                    VERSION ) );\n            options.addOption(\n                OptionBuilder.withLongOpt( \"debug\" ).withDescription( \"Produce execution debug output\" ).create(\n                    DEBUG ) );\n            options.addOption(\n                OptionBuilder.withLongOpt( \"errors\" ).withDescription( \"Produce execution error messages\" ).create(\n                    ERRORS ) );\n            options.addOption( OptionBuilder.withLongOpt( \"reactor\" ).withDescription(\n                \"Execute goals for project found in the reactor\" ).create( REACTOR ) );\n            options.addOption( OptionBuilder.withLongOpt( \"non-recursive\" ).withDescription(\n                \"Do not recurse into sub-projects\" ).create( NON_RECURSIVE ) );\n            options.addOption( OptionBuilder.withLongOpt( \"update-snapshots\" ).withDescription(\n                \"Update all snapshots regardless of repository policies\" ).create( UPDATE_SNAPSHOTS ) );\n            options.addOption( OptionBuilder.withLongOpt( \"activate-profiles\" ).withDescription(\n                \"Comma-delimited list of profiles to activate\" ).hasArg().create( ACTIVATE_PROFILES ) );\n\n            options.addOption( OptionBuilder.withLongOpt( \"batch-mode\" ).withDescription(\n                \"Run in non-interactive (batch) mode\" ).create( BATCH_MODE ) );\n\n            options.addOption( OptionBuilder.withLongOpt( \"check-plugin-updates\" ).withDescription(\n                \"Force upToDate check for any relevant registered plugins\" ).create( FORCE_PLUGIN_UPDATES ) );\n            options.addOption( OptionBuilder.withLongOpt( \"update-plugins\" ).withDescription(\n                \"Synonym for \" + FORCE_PLUGIN_UPDATES ).create( FORCE_PLUGIN_UPDATES2 ) );\n            options.addOption( OptionBuilder.withLongOpt( \"no-plugin-updates\" ).withDescription(\n                \"Suppress upToDate check for any relevant registered plugins\" ).create( SUPPRESS_PLUGIN_UPDATES ) );\n            options.addOption( OptionBuilder.withLongOpt( \"check-plugin-latest\" ).withDescription(\n                \"Force checking of LATEST metadata for plugin versions\" ).create( FORCE_PLUGIN_LATEST_CHECK ) );\n            options.addOption( OptionBuilder.withLongOpt( \"no-plugin-latest\" ).withDescription(\n                \"Suppress checking of LATEST metadata for plugin versions\" ).create( SUPPRESS_PLUGIN_LATEST_CHECK ) );\n\n            options.addOption( OptionBuilder.withLongOpt( \"no-plugin-registry\" ).withDescription(\n                \"Don't use ~/.m2/plugin-registry.xml for plugin versions\" ).create( SUPPRESS_PLUGIN_REGISTRY ) );\n\n            options.addOption( OptionBuilder.withLongOpt( \"strict-checksums\" ).withDescription(\n                \"Fail the build if checksums don't match\" ).create( CHECKSUM_FAILURE_POLICY ) );\n            options.addOption(\n                OptionBuilder.withLongOpt( \"lax-checksums\" ).withDescription( \"Warn if checksums don't match\" ).create(\n                    CHECKSUM_WARNING_POLICY ) );\n            \n            options.addOption( OptionBuilder.withLongOpt( \"settings\" )\n                .withDescription( \"Alternate path for the user settings file\" ).hasArg()\n                .create( ALTERNATE_USER_SETTINGS ) );\n            \n            options.addOption( OptionBuilder.withLongOpt( \"fail-fast\" ).withDescription( \"Stop at first failure in reactorized builds\" ).create( FAIL_FAST ) );\n            \n            options.addOption( OptionBuilder.withLongOpt( \"fail-at-end\" ).withDescription( \"Only fail the build afterwards; allow all non-impacted builds to continue\" ).create( FAIL_AT_END ) );\n            \n            options.addOption( OptionBuilder.withLongOpt( \"fail-never\" ).withDescription( \"NEVER fail the build, regardless of project result\" ).create( FAIL_NEVER ) );\n        }","commit_id":"b69490b82874e311a1407921fc3ba1f913de7c75","url":"https://github.com/apache/maven"},{"original_method":"private static MavenExecutionRequest createRequest( Embedder embedder, CommandLine commandLine,\n                                                        Settings settings, EventDispatcher eventDispatcher,\n                                                        LoggerManager manager )\n        throws ComponentLookupException\n    {\n        MavenExecutionRequest request = null;\n\n        ArtifactRepository localRepository = createLocalRepository( embedder, settings, commandLine );\n\n        request = new DefaultMavenExecutionRequest( localRepository, settings, eventDispatcher,\n                                                    commandLine.getArgList(), userDir.getPath() );\n\n        // TODO [BP]: do we set one per mojo? where to do it?\n        Logger logger = manager.getLoggerForComponent( Mojo.ROLE );\n        if ( logger != null )\n        {\n            request.addEventMonitor( new DefaultEventMonitor( logger ) );\n        }\n\n        if ( commandLine.hasOption( CLIManager.NON_RECURSIVE ) )\n        {\n            request.setRecursive( false );\n        }\n        return request;\n    }","id":8775,"modified_method":"private static MavenExecutionRequest createRequest( Embedder embedder, CommandLine commandLine,\n                                                        Settings settings, EventDispatcher eventDispatcher,\n                                                        LoggerManager manager )\n        throws ComponentLookupException\n    {\n        MavenExecutionRequest request = null;\n\n        ArtifactRepository localRepository = createLocalRepository( embedder, settings, commandLine );\n\n        request = new DefaultMavenExecutionRequest( localRepository, settings, eventDispatcher,\n                                                    commandLine.getArgList(), userDir.getPath() );\n\n        // TODO [BP]: do we set one per mojo? where to do it?\n        Logger logger = manager.getLoggerForComponent( Mojo.ROLE );\n        if ( logger != null )\n        {\n            request.addEventMonitor( new DefaultEventMonitor( logger ) );\n        }\n\n        if ( commandLine.hasOption( CLIManager.NON_RECURSIVE ) )\n        {\n            request.setRecursive( false );\n        }\n        \n        if ( commandLine.hasOption( CLIManager.FAIL_FAST ) )\n        {\n            request.setFailureBehavior( ReactorManager.FAIL_FAST );\n        }\n        else if ( commandLine.hasOption( CLIManager.FAIL_AT_END ) )\n        {\n            request.setFailureBehavior( ReactorManager.FAIL_AT_END );\n        }\n        else if ( commandLine.hasOption( CLIManager.FAIL_NEVER ) )\n        {\n            request.setFailureBehavior( ReactorManager.FAIL_NEVER );\n        }\n        \n        return request;\n    }","commit_id":"b69490b82874e311a1407921fc3ba1f913de7c75","url":"https://github.com/apache/maven"},{"original_method":"public MavenSession( PlexusContainer container, Settings settings, ArtifactRepository localRepository,\n                         EventDispatcher eventDispatcher, List sortedProjects, List goals, String executionRootDir )\n    {\n        this.container = container;\n\n        this.settings = settings;\n\n        this.localRepository = localRepository;\n\n        this.eventDispatcher = eventDispatcher;\n\n        this.sortedProjects = sortedProjects;\n\n        this.goals = goals;\n\n        this.executionRootDir = executionRootDir;\n    }","id":8776,"modified_method":"public MavenSession( PlexusContainer container, Settings settings, ArtifactRepository localRepository,\n                         EventDispatcher eventDispatcher, ReactorManager rpm, List goals, String executionRootDir )\n    {\n        this.container = container;\n\n        this.settings = settings;\n\n        this.localRepository = localRepository;\n\n        this.eventDispatcher = eventDispatcher;\n\n        this.rpm = rpm;\n\n        this.goals = goals;\n\n        this.executionRootDir = executionRootDir;\n    }","commit_id":"b69490b82874e311a1407921fc3ba1f913de7c75","url":"https://github.com/apache/maven"},{"original_method":"public List getSortedProjects()\n    {\n        return sortedProjects;\n    }","id":8777,"modified_method":"public List getSortedProjects()\n    {\n        return rpm.getProjectsSortedByDependency();\n    }","commit_id":"b69490b82874e311a1407921fc3ba1f913de7c75","url":"https://github.com/apache/maven"},{"original_method":"private static MavenSession createSession( PlexusContainer container,\n                                               ArtifactRepository repo )\n    {\n        return new MavenSession( container, new Settings(), repo, new DefaultEventDispatcher(),\n                                 Collections.EMPTY_LIST, Collections.EMPTY_LIST, \".\" );\n    }","id":8778,"modified_method":"private static MavenSession createSession( PlexusContainer container,\n                                               ArtifactRepository repo ) throws CycleDetectedException\n    {\n        return new MavenSession( container, new Settings(), repo, new DefaultEventDispatcher(),\n                                 new ReactorManager( Collections.EMPTY_LIST ), Collections.EMPTY_LIST, \".\" );\n    }","commit_id":"b69490b82874e311a1407921fc3ba1f913de7c75","url":"https://github.com/apache/maven"},{"original_method":"public void update(AnActionEvent e) {\n    DebuggerTreeNodeImpl[] selectedNodes = getSelectedNodes(e.getDataContext());\n    boolean enabled = false;\n    if (selectedNodes != null && selectedNodes.length > 0) {\n      if (getPanel(e.getDataContext()) instanceof VariablesPanel) {\n        enabled = true;\n        for (DebuggerTreeNodeImpl node : selectedNodes) {\n          NodeDescriptorImpl descriptor = node.getDescriptor();\n          if (!(descriptor instanceof ValueDescriptorImpl)) {\n            enabled = false;\n            break;\n          }\n        }\n      }\n    }\n    else {\n      final Editor editor  = (Editor)e.getDataContext().getData(DataConstants.EDITOR);\n      enabled = DebuggerUtilsEx.getEditorText(editor) != null ;\n    }\n    e.getPresentation().setEnabled(enabled);\n  }","id":8779,"modified_method":"public void update(AnActionEvent e) {\n    DebuggerTreeNodeImpl[] selectedNodes = getSelectedNodes(e.getDataContext());\n    boolean enabled = false;\n    if (selectedNodes != null && selectedNodes.length > 0) {\n      if (getPanel(e.getDataContext()) instanceof VariablesPanel) {\n        enabled = true;\n        for (DebuggerTreeNodeImpl node : selectedNodes) {\n          NodeDescriptorImpl descriptor = node.getDescriptor();\n          if (!(descriptor instanceof ValueDescriptorImpl)) {\n            enabled = false;\n            break;\n          }\n        }\n      }\n    }\n    else {\n      final Editor editor = e.getData(DataKeys.EDITOR);\n      enabled = DebuggerUtilsEx.getEditorText(editor) != null;\n    }\n    e.getPresentation().setEnabled(enabled);\n    if (ActionPlaces.isPopupPlace(e.getPlace())) {\n      e.getPresentation().setVisible(enabled);\n    }\n  }","commit_id":"a6d34772cdebab47e483f6f764897f472c831170","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void actionPerformed(AnActionEvent e) {\n    final DebuggerContextImpl debuggerContext = getDebuggerContext(e.getDataContext());\n\n    if(debuggerContext == null) return;\n\n    final DebuggerSession session = debuggerContext.getDebuggerSession();\n    if(session == null) {\n      return;\n    }\n    final MainWatchPanel watchPanel = DebuggerPanelsManager.getInstance(debuggerContext.getProject()).getWatchPanel();\n\n    if(watchPanel == null) {\n      return;\n    }\n\n    final DebuggerTreeNodeImpl[] selectedNodes = getSelectedNodes(e.getDataContext());\n\n    if(selectedNodes != null && selectedNodes.length > 0) {\n      debuggerContext.getDebugProcess().getManagerThread().invokeLater(new AddToWatchesCommand(debuggerContext, selectedNodes, watchPanel));\n    }\n    else {\n      final Editor editor  = (Editor)e.getDataContext().getData(DataConstants.EDITOR);\n      final TextWithImports editorText = DebuggerUtilsEx.getEditorText(editor);\n      if(editorText != null) {\n        doAddWatch(watchPanel, editorText, null);\n      }\n    }\n  }","id":8780,"modified_method":"public void actionPerformed(AnActionEvent e) {\n    final DebuggerContextImpl debuggerContext = getDebuggerContext(e.getDataContext());\n\n    if(debuggerContext == null) return;\n\n    final DebuggerSession session = debuggerContext.getDebuggerSession();\n    if(session == null) {\n      return;\n    }\n    final MainWatchPanel watchPanel = DebuggerPanelsManager.getInstance(debuggerContext.getProject()).getWatchPanel();\n\n    if(watchPanel == null) {\n      return;\n    }\n\n    final DebuggerTreeNodeImpl[] selectedNodes = getSelectedNodes(e.getDataContext());\n\n    if(selectedNodes != null && selectedNodes.length > 0) {\n      debuggerContext.getDebugProcess().getManagerThread().invokeLater(new AddToWatchesCommand(debuggerContext, selectedNodes, watchPanel));\n    }\n    else {\n      final Editor editor = e.getData(DataKeys.EDITOR);\n      final TextWithImports editorText = DebuggerUtilsEx.getEditorText(editor);\n      if (editorText != null) {\n        doAddWatch(watchPanel, editorText, null);\n      }\n    }\n  }","commit_id":"a6d34772cdebab47e483f6f764897f472c831170","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void update(AnActionEvent event){\n    Presentation presentation = event.getPresentation();\n    final Project project = event.getData(DataKeys.PROJECT);\n    if (project == null) {\n      presentation.setEnabled(false);\n      return;\n    }\n\n    DebuggerContextImpl context = getDebuggerContext(event.getDataContext());\n\n    boolean toEnable = false;\n\n    if(context != null) {\n      DebuggerSession debuggerSession = context.getDebuggerSession();\n\n      toEnable = debuggerSession != null && debuggerSession.isPaused();\n    }\n\n    presentation.setEnabled(toEnable);\n    if (ActionPlaces.EDITOR_POPUP.equals(event.getPlace())) {\n      presentation.setVisible(toEnable);\n    }\n    else {\n      presentation.setVisible(true);\n    }\n  }","id":8781,"modified_method":"public void update(AnActionEvent event){\n    Presentation presentation = event.getPresentation();\n    final Project project = event.getData(DataKeys.PROJECT);\n    if (project == null) {\n      presentation.setEnabled(false);\n      return;\n    }\n\n    DebuggerContextImpl context = getDebuggerContext(event.getDataContext());\n\n    boolean toEnable = false;\n\n    if(context != null) {\n      DebuggerSession debuggerSession = context.getDebuggerSession();\n\n      toEnable = debuggerSession != null && debuggerSession.isPaused();\n    }\n\n    presentation.setEnabled(toEnable);\n    if (ActionPlaces.isPopupPlace(event.getPlace())) {\n      presentation.setVisible(toEnable);\n    }\n    else {\n      presentation.setVisible(true);\n    }\n  }","commit_id":"a6d34772cdebab47e483f6f764897f472c831170","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void showEvaluationDialog(Project project, TextWithImports defaultExpression, String dialogType) {\n    if(defaultExpression == null) {\n      defaultExpression = new TextWithImportsImpl(CodeFragmentKind.EXPRESSION, \"\");\n    }\n\n    final DialogWrapper dialog;\n    DebuggerSettings.getInstance().EVALUATION_DIALOG_TYPE = dialogType;\n    if(DebuggerSettings.EVALUATE_FRAGMENT.equals(dialogType)) {\n      dialog = new StatementEvaluationDialog(project, defaultExpression);\n    }\n    else {\n      dialog = new ExpressionEvaluationDialog(project, defaultExpression);\n    }\n\n    dialog.show();\n  }","id":8782,"modified_method":"public static void showEvaluationDialog(Project project, TextWithImports defaultExpression, String dialogType) {\n    if(defaultExpression == null) {\n      defaultExpression = new TextWithImportsImpl(CodeFragmentKind.EXPRESSION, \"\");\n    }\n\n    DebuggerSettings.getInstance().EVALUATION_DIALOG_TYPE = dialogType;\n    final DialogWrapper dialog;\n    if(DebuggerSettings.EVALUATE_FRAGMENT.equals(dialogType)) {\n      dialog = new StatementEvaluationDialog(project, defaultExpression);\n    }\n    else {\n      dialog = new ExpressionEvaluationDialog(project, defaultExpression);\n    }\n\n    dialog.show();\n  }","commit_id":"a6d34772cdebab47e483f6f764897f472c831170","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void actionPerformed(final AnActionEvent e) {\n    final Project project = e.getData(DataKeys.PROJECT);\n    final DataContext dataContext = e.getDataContext();\n    final DebuggerContextImpl context = DebuggerAction.getDebuggerContext(dataContext);\n\n    if(project == null || context == null) {\n      return;\n    }\n\n    final Editor editor = e.getData(DataKeys.EDITOR);\n\n    TextWithImports editorText = DebuggerUtilsEx.getEditorText(editor);\n    if (editorText == null) {\n      final DebuggerTreeNodeImpl selectedNode = DebuggerAction.getSelectedNode(dataContext);\n      final String actionName = e.getPresentation().getText();\n\n      if (selectedNode != null && selectedNode.getDescriptor() instanceof ValueDescriptorImpl) {\n        context.getDebugProcess().getManagerThread().invokeLater(new DebuggerContextCommandImpl(context) {\n          public void threadAction() {\n            final TextWithImports evaluationText;\n            try {\n              evaluationText = DebuggerTreeNodeExpression.createEvaluationText(selectedNode, context);\n              DebuggerInvocationUtil.invokeLater(project, new Runnable() {\n                public void run() {\n                  showEvaluationDialog(project, evaluationText);\n                }\n              });\n            }\n            catch (final EvaluateException e1) {\n              DebuggerInvocationUtil.invokeLater(project, new Runnable() {\n                public void run() {\n                  Messages.showErrorDialog(project, e1.getMessage(), actionName);\n                }\n              });\n            }\n          }\n\n          protected void commandCancelled() {\n            DebuggerInvocationUtil.invokeLater(project, new Runnable() {\n              public void run() {\n                if(selectedNode.getDescriptor() instanceof WatchItemDescriptor) {\n                  try {\n                    TextWithImports editorText = DebuggerTreeNodeExpression.createEvaluationText(selectedNode, context);\n                    showEvaluationDialog(project, editorText);\n                  }\n                  catch (EvaluateException e1) {\n                    Messages.showErrorDialog(project, e1.getMessage(), actionName);\n                  }\n                }\n              }\n            });\n          }\n        });\n        return;\n      }\n    }\n\n    showEvaluationDialog(project, editorText);\n  }","id":8783,"modified_method":"public void actionPerformed(final AnActionEvent e) {\n    final Project project = e.getData(DataKeys.PROJECT);\n    final DataContext dataContext = e.getDataContext();\n    final DebuggerContextImpl context = DebuggerAction.getDebuggerContext(dataContext);\n\n    if(project == null || context == null) {\n      return;\n    }\n\n    final Editor editor = e.getData(DataKeys.EDITOR);\n\n    TextWithImports editorText = DebuggerUtilsEx.getEditorText(editor);\n    if (editorText == null) {\n      final DebuggerTreeNodeImpl selectedNode = DebuggerAction.getSelectedNode(dataContext);\n      final String actionName = e.getPresentation().getText();\n\n      if (selectedNode != null && selectedNode.getDescriptor() instanceof ValueDescriptorImpl) {\n        context.getDebugProcess().getManagerThread().invokeLater(new DebuggerContextCommandImpl(context) {\n          public void threadAction() {\n            try {\n              final TextWithImports evaluationText = DebuggerTreeNodeExpression.createEvaluationText(selectedNode, context);\n              DebuggerInvocationUtil.invokeLater(project, new Runnable() {\n                public void run() {\n                  showEvaluationDialog(project, evaluationText);\n                }\n              });\n            }\n            catch (final EvaluateException e1) {\n              DebuggerInvocationUtil.invokeLater(project, new Runnable() {\n                public void run() {\n                  Messages.showErrorDialog(project, e1.getMessage(), actionName);\n                }\n              });\n            }\n          }\n\n          protected void commandCancelled() {\n            DebuggerInvocationUtil.invokeLater(project, new Runnable() {\n              public void run() {\n                if(selectedNode.getDescriptor() instanceof WatchItemDescriptor) {\n                  try {\n                    TextWithImports editorText = DebuggerTreeNodeExpression.createEvaluationText(selectedNode, context);\n                    showEvaluationDialog(project, editorText);\n                  }\n                  catch (EvaluateException e1) {\n                    Messages.showErrorDialog(project, e1.getMessage(), actionName);\n                  }\n                }\n              }\n            });\n          }\n        });\n        return;\n      }\n    }\n\n    showEvaluationDialog(project, editorText);\n  }","commit_id":"a6d34772cdebab47e483f6f764897f472c831170","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void update(AnActionEvent event){\n    Presentation presentation = event.getPresentation();\n    removeAll();\n    String context = event.getPlace();\n    Project project = (Project)event.getDataContext().getData(DataConstants.PROJECT);\n    if (project == null) {\n      presentation.setVisible(false);\n      presentation.setEnabled(false);\n      return;\n    }\n    presentation.setEnabled(true);\n    String[] groups = ToolManager.getInstance().getGroups();\n    for (String groupName : groups) {\n      if (groupName != null && groupName.trim().length() > 0) {\n        SimpleActionGroup subgroup = new SimpleActionGroup();\n        subgroup.getTemplatePresentation().setText(groupName, false);\n        subgroup.setPopup(true);\n        fillGroup(context, groupName, subgroup);\n        if (subgroup.getChildrenCount() > 0) {\n          add(subgroup);\n        }\n      }\n      else {\n        fillGroup(context, null, this);\n      }\n    }\n    presentation.setVisible(getChildrenCount() > 0);\n  }","id":8784,"modified_method":"public void update(AnActionEvent event){\n    Presentation presentation = event.getPresentation();\n    removeAll();\n    String context = event.getPlace();\n    Project project = event.getData(DataKeys.PROJECT);\n    if (project == null) {\n      presentation.setVisible(false);\n      presentation.setEnabled(false);\n      return;\n    }\n    presentation.setEnabled(true);\n    String[] groups = ToolManager.getInstance().getGroups();\n    for (String groupName : groups) {\n      if (groupName != null && groupName.trim().length() > 0) {\n        SimpleActionGroup subgroup = new SimpleActionGroup();\n        subgroup.getTemplatePresentation().setText(groupName, false);\n        subgroup.setPopup(true);\n        fillGroup(context, groupName, subgroup);\n        if (subgroup.getChildrenCount() > 0) {\n          add(subgroup);\n        }\n      }\n      else {\n        fillGroup(context, null, this);\n      }\n    }\n    presentation.setVisible(getChildrenCount() > 0);\n  }","commit_id":"a6d34772cdebab47e483f6f764897f472c831170","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void actionPerformed(AnActionEvent e) {\n    DataContext dataContext = e.getDataContext();\n    Project project = (Project)dataContext.getData(DataConstants.PROJECT);\n    if (project == null) { return; }\n\n    DebuggerSession debuggerSession = (DebuggerManagerEx.getInstanceEx(project)).getContext().getDebuggerSession();\n    if (debuggerSession == null || !debuggerSession.isPaused()) return;\n\n    Editor editor = (Editor)e.getDataContext().getData(DataConstants.EDITOR);\n\n    if(editor != null) {\n      LogicalPosition logicalPosition = editor.getCaretModel().getLogicalPosition();\n      ValueLookupManager.getInstance(project).showHint(editor, editor.logicalPositionToXY(logicalPosition), ValueHint.MOUSE_CLICK_HINT);\n    }\n  }","id":8785,"modified_method":"public void actionPerformed(AnActionEvent e) {\n    Project project = e.getData(DataKeys.PROJECT);\n    if (project == null) { return; }\n\n    DebuggerSession debuggerSession = DebuggerManagerEx.getInstanceEx(project).getContext().getDebuggerSession();\n    if (debuggerSession == null || !debuggerSession.isPaused()) return;\n\n    Editor editor = e.getData(DataKeys.EDITOR);\n\n    if(editor != null) {\n      LogicalPosition logicalPosition = editor.getCaretModel().getLogicalPosition();\n      ValueLookupManager.getInstance(project).showHint(editor, editor.logicalPositionToXY(logicalPosition), ValueHint.MOUSE_CLICK_HINT);\n    }\n  }","commit_id":"a6d34772cdebab47e483f6f764897f472c831170","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void update(AnActionEvent event){\n    Presentation presentation = event.getPresentation();\n    Project project = (Project)event.getDataContext().getData(DataConstants.PROJECT);\n    if (project == null) {\n      presentation.setEnabled(false);\n      return;\n    }\n\n    DebuggerSession debuggerSession = (DebuggerManagerEx.getInstanceEx(project)).getContext().getDebuggerSession();\n\n    boolean toEnable = debuggerSession != null && debuggerSession.isPaused();\n    presentation.setEnabled(toEnable);\n    if (ActionPlaces.EDITOR_POPUP.equals(event.getPlace())) {\n      presentation.setVisible(toEnable);\n    }\n    else {\n      presentation.setVisible(true);\n    }\n  }","id":8786,"modified_method":"public void update(AnActionEvent event){\n    Presentation presentation = event.getPresentation();\n    Project project = event.getData(DataKeys.PROJECT);\n    if (project == null) {\n      presentation.setEnabled(false);\n      return;\n    }\n\n    DebuggerSession debuggerSession = DebuggerManagerEx.getInstanceEx(project).getContext().getDebuggerSession();\n\n    boolean toEnable = debuggerSession != null && debuggerSession.isPaused();\n    presentation.setEnabled(toEnable);\n    if (ActionPlaces.isPopupPlace(event.getPlace())) {\n      presentation.setVisible(toEnable);\n    }\n    else {\n      presentation.setVisible(true);\n    }\n  }","commit_id":"a6d34772cdebab47e483f6f764897f472c831170","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void update(AnActionEvent event){\n    Presentation presentation = event.getPresentation();\n    DataContext dataContext = event.getDataContext();\n    Project project = (Project)dataContext.getData(DataConstants.PROJECT);\n    boolean enabled;\n\n    Editor editor = (Editor)dataContext.getData(DataConstants.EDITOR);\n\n    if (project == null || editor == null) {\n      enabled = false;\n    }\n    else {\n      PsiFile file = PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());\n      FileTypeManager fileTypeManager = FileTypeManager.getInstance();\n      if (file == null) {\n        enabled = false;\n      }\n      else {\n        final VirtualFile virtualFile = file.getVirtualFile();\n        FileType fileType = virtualFile != null ? fileTypeManager.getFileTypeByFile(virtualFile) : null;\n        if (DebuggerUtils.supportsJVMDebugging(fileType)) {\n          DebuggerSession debuggerSession = (DebuggerManagerEx.getInstanceEx(project)).getContext().getDebuggerSession();\n          enabled = debuggerSession != null && debuggerSession.isPaused();\n        }\n        else {\n          enabled = false;\n        }\n      }\n    }\n    if (ActionPlaces.EDITOR_POPUP.equals(event.getPlace())) {\n      presentation.setVisible(enabled);\n    }\n    else {\n      presentation.setEnabled(enabled);\n    }\n  }","id":8787,"modified_method":"public void update(AnActionEvent event){\n    Presentation presentation = event.getPresentation();\n    Project project = event.getData(DataKeys.PROJECT);\n    boolean enabled;\n\n    Editor editor = event.getData(DataKeys.EDITOR);\n\n    if (project == null || editor == null) {\n      enabled = false;\n    }\n    else {\n      PsiFile file = PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());\n      FileTypeManager fileTypeManager = FileTypeManager.getInstance();\n      if (file == null) {\n        enabled = false;\n      }\n      else {\n        final VirtualFile virtualFile = file.getVirtualFile();\n        FileType fileType = virtualFile != null ? fileTypeManager.getFileTypeByFile(virtualFile) : null;\n        if (DebuggerUtils.supportsJVMDebugging(fileType)) {\n          DebuggerSession debuggerSession = DebuggerManagerEx.getInstanceEx(project).getContext().getDebuggerSession();\n          enabled = debuggerSession != null && debuggerSession.isPaused();\n        }\n        else {\n          enabled = false;\n        }\n      }\n    }\n    if (ActionPlaces.isPopupPlace(event.getPlace())) {\n      presentation.setVisible(enabled);\n    }\n    else {\n      presentation.setEnabled(enabled);\n    }\n  }","commit_id":"a6d34772cdebab47e483f6f764897f472c831170","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void actionPerformed(AnActionEvent e) {\n    DataContext dataContext = e.getDataContext();\n    Project project = (Project)dataContext.getData(DataConstants.PROJECT);\n    if (project == null) {\n      return;\n    }\n    Editor editor = (Editor)dataContext.getData(DataConstants.EDITOR);\n    if (editor == null) {\n      return;\n    }\n    DebuggerContextImpl context = (DebuggerManagerEx.getInstanceEx(project)).getContext();\n    DebugProcessImpl debugProcess = context.getDebugProcess();\n    if (debugProcess == null) {\n      return;\n    }\n    context.getDebuggerSession().runToCursor(editor.getDocument(), editor.getCaretModel().getLogicalPosition().line, myIgnoreBreakpoints);\n  }","id":8788,"modified_method":"public void actionPerformed(AnActionEvent e) {\n    Project project = e.getData(DataKeys.PROJECT);\n    if (project == null) {\n      return;\n    }\n    Editor editor = e.getData(DataKeys.EDITOR);\n    if (editor == null) {\n      return;\n    }\n    DebuggerContextImpl context = DebuggerManagerEx.getInstanceEx(project).getContext();\n    DebugProcessImpl debugProcess = context.getDebugProcess();\n    if (debugProcess == null) {\n      return;\n    }\n    context.getDebuggerSession().runToCursor(editor.getDocument(), editor.getCaretModel().getLogicalPosition().line, myIgnoreBreakpoints);\n  }","commit_id":"a6d34772cdebab47e483f6f764897f472c831170","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void update(AnActionEvent event){\n    boolean toEnable = false;\n    PlaceInDocument place = getPlace(event);\n    if (place != null) {\n      final Project project = event.getData(DataKeys.PROJECT);\n      final Document document = place.getDocument();\n      final int offset = place.getOffset();\n      final BreakpointManager breakpointManager = DebuggerManagerEx.getInstanceEx(project).getBreakpointManager();\n      toEnable = breakpointManager.findBreakpoint(document, offset, LineBreakpoint.CATEGORY) != null || \n                 LineBreakpoint.canAddLineBreakpoint(project, document, document.getLineNumber(offset));\n    }\n\n    final Presentation presentation = event.getPresentation();\n    if (ActionPlaces.EDITOR_POPUP.equals(event.getPlace()) ||\n        ActionPlaces.PROJECT_VIEW_POPUP.equals(event.getPlace()) ||\n        ActionPlaces.STRUCTURE_VIEW_POPUP.equals(event.getPlace())) {\n      presentation.setVisible(toEnable);\n    }\n    else {\n      presentation.setEnabled(toEnable);\n    }\n  }","id":8789,"modified_method":"public void update(AnActionEvent event){\n    boolean toEnable = false;\n    PlaceInDocument place = getPlace(event);\n    if (place != null) {\n      final Project project = event.getData(DataKeys.PROJECT);\n      final Document document = place.getDocument();\n      final int offset = place.getOffset();\n      final BreakpointManager breakpointManager = DebuggerManagerEx.getInstanceEx(project).getBreakpointManager();\n      toEnable = breakpointManager.findBreakpoint(document, offset, LineBreakpoint.CATEGORY) != null ||\n                 LineBreakpoint.canAddLineBreakpoint(project, document, document.getLineNumber(offset));\n    }\n\n    final Presentation presentation = event.getPresentation();\n    if (ActionPlaces.isPopupPlace(event.getPlace())) {\n      presentation.setVisible(toEnable);\n    }\n    else {\n      presentation.setEnabled(toEnable);\n    }\n  }","commit_id":"a6d34772cdebab47e483f6f764897f472c831170","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void update(AnActionEvent event){\n    boolean toEnable = getPlace(event) != null;\n\n    if (ActionPlaces.EDITOR_POPUP.equals(event.getPlace()) ||\n        ActionPlaces.PROJECT_VIEW_POPUP.equals(event.getPlace()) ||\n        ActionPlaces.STRUCTURE_VIEW_POPUP.equals(event.getPlace()) ||\n        ActionPlaces.FAVORITES_VIEW_POPUP.equals(event.getPlace())) {\n      event.getPresentation().setVisible(toEnable);\n    }\n    else {\n      event.getPresentation().setEnabled(toEnable);\n    }\n  }","id":8790,"modified_method":"public void update(AnActionEvent event){\n    boolean toEnable = getPlace(event) != null;\n\n    if (ActionPlaces.isPopupPlace(event.getPlace())) {\n      event.getPresentation().setVisible(toEnable);\n    }\n    else {\n      event.getPresentation().setEnabled(toEnable);\n    }\n  }","commit_id":"a6d34772cdebab47e483f6f764897f472c831170","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public List<URI> getAcceptors()\n    {\n        // Only use 2f+1 acceptors\n        return toList( limit( commonState.configuration()\n                .getAllowedFailures() * 2 + 1, commonState.configuration().getMemberURIs() ) );\n    }","id":8791,"modified_method":"@Override\n    public List<URI> getAcceptors()\n    {\n        return commonState.configuration().getMemberURIs();\n    }","commit_id":"41af853f566a03817b76e1eb741d94676a5339f7","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public boolean equals( Object o )\n    {\n        if ( this == o )\n        {\n            return true;\n        }\n        if ( o == null || getClass() != o.getClass() )\n        {\n            return false;\n        }\n\n        ClusterConfiguration that = (ClusterConfiguration) o;\n\n        if ( allowedFailures != that.allowedFailures )\n        {\n            return false;\n        }\n        if ( !candidateMembers.equals( that.candidateMembers ) )\n        {\n            return false;\n        }\n        if ( !members.equals( that.members ) )\n        {\n            return false;\n        }\n        if ( !name.equals( that.name ) )\n        {\n            return false;\n        }\n        if ( !roles.equals( that.roles ) )\n        {\n            return false;\n        }\n\n        return true;\n    }","id":8792,"modified_method":"@Override\n    public boolean equals( Object o )\n    {\n        if ( this == o )\n        {\n            return true;\n        }\n        if ( o == null || getClass() != o.getClass() )\n        {\n            return false;\n        }\n\n        ClusterConfiguration that = (ClusterConfiguration) o;\n\n        if ( !candidateMembers.equals( that.candidateMembers ) )\n        {\n            return false;\n        }\n        if ( !members.equals( that.members ) )\n        {\n            return false;\n        }\n        if ( !name.equals( that.name ) )\n        {\n            return false;\n        }\n        if ( !roles.equals( that.roles ) )\n        {\n            return false;\n        }\n\n        return true;\n    }","commit_id":"41af853f566a03817b76e1eb741d94676a5339f7","url":"https://github.com/neo4j/neo4j"},{"original_method":"public int getAllowedFailures()\n    {\n        return allowedFailures;\n    }","id":8793,"modified_method":"public int getAllowedFailures()\n    {\n        assert members.size() > 0;\n        return (members.size() - 1) / 2;\n    }","commit_id":"41af853f566a03817b76e1eb741d94676a5339f7","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public int hashCode()\n    {\n        int result = name.hashCode();\n        result = 31 * result + candidateMembers.hashCode();\n        result = 31 * result + members.hashCode();\n        result = 31 * result + roles.hashCode();\n        result = 31 * result + allowedFailures;\n        return result;\n    }","id":8794,"modified_method":"@Override\n    public int hashCode()\n    {\n        int result = name.hashCode();\n        result = 31 * result + candidateMembers.hashCode();\n        result = 31 * result + members.hashCode();\n        result = 31 * result + roles.hashCode();\n        return result;\n    }","commit_id":"41af853f566a03817b76e1eb741d94676a5339f7","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public List<URI> getAcceptors()\n    {\n        // Only use 2f+1 acceptors\n        return toList( limit( commonState.configuration()\n                .getAllowedFailures() * 2 + 1, commonState.configuration().getMemberURIs() ) );\n    }","id":8795,"modified_method":"@Override\n    public List<URI> getAcceptors()\n    {\n        return commonState.configuration().getMemberURIs();\n    }","commit_id":"c497fcb7594c73c5779471ee553ea6ff1dcf0799","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public boolean equals( Object o )\n    {\n        if ( this == o )\n        {\n            return true;\n        }\n        if ( o == null || getClass() != o.getClass() )\n        {\n            return false;\n        }\n\n        ClusterConfiguration that = (ClusterConfiguration) o;\n\n        if ( allowedFailures != that.allowedFailures )\n        {\n            return false;\n        }\n        if ( !candidateMembers.equals( that.candidateMembers ) )\n        {\n            return false;\n        }\n        if ( !members.equals( that.members ) )\n        {\n            return false;\n        }\n        if ( !name.equals( that.name ) )\n        {\n            return false;\n        }\n        if ( !roles.equals( that.roles ) )\n        {\n            return false;\n        }\n\n        return true;\n    }","id":8796,"modified_method":"@Override\n    public boolean equals( Object o )\n    {\n        if ( this == o )\n        {\n            return true;\n        }\n        if ( o == null || getClass() != o.getClass() )\n        {\n            return false;\n        }\n\n        ClusterConfiguration that = (ClusterConfiguration) o;\n\n        if ( !candidateMembers.equals( that.candidateMembers ) )\n        {\n            return false;\n        }\n        if ( !members.equals( that.members ) )\n        {\n            return false;\n        }\n        if ( !name.equals( that.name ) )\n        {\n            return false;\n        }\n        if ( !roles.equals( that.roles ) )\n        {\n            return false;\n        }\n\n        return true;\n    }","commit_id":"c497fcb7594c73c5779471ee553ea6ff1dcf0799","url":"https://github.com/neo4j/neo4j"},{"original_method":"public int getAllowedFailures()\n    {\n        return allowedFailures;\n    }","id":8797,"modified_method":"public int getAllowedFailures()\n    {\n        assert members.size() > 0;\n        return (members.size() - 1) / 2;\n    }","commit_id":"c497fcb7594c73c5779471ee553ea6ff1dcf0799","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public int hashCode()\n    {\n        int result = name.hashCode();\n        result = 31 * result + candidateMembers.hashCode();\n        result = 31 * result + members.hashCode();\n        result = 31 * result + roles.hashCode();\n        result = 31 * result + allowedFailures;\n        return result;\n    }","id":8798,"modified_method":"@Override\n    public int hashCode()\n    {\n        int result = name.hashCode();\n        result = 31 * result + candidateMembers.hashCode();\n        result = 31 * result + members.hashCode();\n        result = 31 * result + roles.hashCode();\n        return result;\n    }","commit_id":"c497fcb7594c73c5779471ee553ea6ff1dcf0799","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public List<URI> getAcceptors()\n    {\n        // Only use 2f+1 acceptors\n        return toList( limit( commonState.configuration()\n                .getAllowedFailures() * 2 + 1, commonState.configuration().getMemberURIs() ) );\n    }","id":8799,"modified_method":"@Override\n    public List<URI> getAcceptors()\n    {\n        return commonState.configuration().getMemberURIs();\n    }","commit_id":"aca78999f4c8462978d2924b60d8128f7fc6dd48","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public int hashCode()\n    {\n        int result = name.hashCode();\n        result = 31 * result + candidateMembers.hashCode();\n        result = 31 * result + members.hashCode();\n        result = 31 * result + roles.hashCode();\n        result = 31 * result + allowedFailures;\n        return result;\n    }","id":8800,"modified_method":"@Override\n    public int hashCode()\n    {\n        int result = name.hashCode();\n        result = 31 * result + candidateMembers.hashCode();\n        result = 31 * result + members.hashCode();\n        result = 31 * result + roles.hashCode();\n        return result;\n    }","commit_id":"aca78999f4c8462978d2924b60d8128f7fc6dd48","url":"https://github.com/neo4j/neo4j"},{"original_method":"public int getAllowedFailures()\n    {\n        return allowedFailures;\n    }","id":8801,"modified_method":"public int getAllowedFailures()\n    {\n        assert members.size() > 0;\n        return (members.size() - 1) / 2;\n    }","commit_id":"aca78999f4c8462978d2924b60d8128f7fc6dd48","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public boolean equals( Object o )\n    {\n        if ( this == o )\n        {\n            return true;\n        }\n        if ( o == null || getClass() != o.getClass() )\n        {\n            return false;\n        }\n\n        ClusterConfiguration that = (ClusterConfiguration) o;\n\n        if ( allowedFailures != that.allowedFailures )\n        {\n            return false;\n        }\n        if ( !candidateMembers.equals( that.candidateMembers ) )\n        {\n            return false;\n        }\n        if ( !members.equals( that.members ) )\n        {\n            return false;\n        }\n        if ( !name.equals( that.name ) )\n        {\n            return false;\n        }\n        if ( !roles.equals( that.roles ) )\n        {\n            return false;\n        }\n\n        return true;\n    }","id":8802,"modified_method":"@Override\n    public boolean equals( Object o )\n    {\n        if ( this == o )\n        {\n            return true;\n        }\n        if ( o == null || getClass() != o.getClass() )\n        {\n            return false;\n        }\n\n        ClusterConfiguration that = (ClusterConfiguration) o;\n\n        if ( !candidateMembers.equals( that.candidateMembers ) )\n        {\n            return false;\n        }\n        if ( !members.equals( that.members ) )\n        {\n            return false;\n        }\n        if ( !name.equals( that.name ) )\n        {\n            return false;\n        }\n        if ( !roles.equals( that.roles ) )\n        {\n            return false;\n        }\n\n        return true;\n    }","commit_id":"aca78999f4c8462978d2924b60d8128f7fc6dd48","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n   @Category(BasicAcceptanceTest.class)\n   public void changePasswordSuccessful()\n   {\n      MyAccountPage myAccountPage = new LoginWorkFlow().signIn(\"translator\", \"translator\").goToMyProfile();\n      ChangePasswordPage changePasswordPage = myAccountPage.goToChangePassword();\n      changePasswordPage.enterOldPassword(\"translator\");\n      changePasswordPage.enterNewPassword(\"newpassword\");\n      changePasswordPage.enterConfirmNewPassword(\"newpassword\");\n      myAccountPage = changePasswordPage.changePassword();\n      assertThat(\"Confirmation message is displayed\", myAccountPage.getNotificationMessage(),\n            Matchers.equalTo(\"Your password has been successfully changed.\"));\n      HomePage homePage = myAccountPage.signOut();\n      assertThat(\"User is logged out\", !homePage.hasLoggedIn());\n      homePage = new LoginWorkFlow().signIn(\"translator\", \"newpassword\");\n      assertThat(\"User has logged in with the new password\", homePage.hasLoggedIn());\n   }","id":8803,"modified_method":"@Test\n   @Category(BasicAcceptanceTest.class)\n   public void changePasswordSuccessful()\n   {\n      MyAccountPage myAccountPage = new LoginWorkFlow().signIn(\"translator\", \"translator\").goToMyProfile();\n      myAccountPage = myAccountPage.goToChangePassword()\n            .enterOldPassword(\"translator\")\n            .enterNewPassword(\"newpassword\")\n            .enterConfirmNewPassword(\"newpassword\")\n            .changePassword();\n\n      assertThat(\"Confirmation message is displayed\", myAccountPage.getNotificationMessage(),\n            Matchers.equalTo(\"Your password has been successfully changed.\"));\n      HomePage homePage = myAccountPage.signOut();\n      assertThat(\"User is logged out\", !homePage.hasLoggedIn());\n      homePage = new LoginWorkFlow().signIn(\"translator\", \"newpassword\");\n      assertThat(\"User has logged in with the new password\", homePage.hasLoggedIn());\n   }","commit_id":"1c2e1c7b94dde130c01997ff43d228f8a8394717","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test\n   public void changePasswordAreOfRequiredLength()\n   {\n      String passwordSizeError = \"size must be between 6 and 20\";\n      String tooShort = \"test5\";\n      String tooLong = \"t12345678901234567890\";\n      MyAccountPage myAccountPage = new LoginWorkFlow().signIn(\"translator\", \"translator\").goToMyProfile();\n      ChangePasswordPage changePasswordPage = myAccountPage.goToChangePassword();\n      changePasswordPage = changePasswordPage.enterNewPassword(\"test5\").enterConfirmNewPassword(tooShort);\n      assertThat(\"Incorrect password message displayed\", changePasswordPage.waitForErrors(),\n            Matchers.hasItem(passwordSizeError));\n      changePasswordPage = changePasswordPage.enterNewPassword(tooLong).enterConfirmNewPassword(tooLong);\n      assertThat(\"Incorrect password message displayed\", changePasswordPage.waitForErrors(),\n            Matchers.hasItem(passwordSizeError));\n   }","id":8804,"modified_method":"@Test\n   public void changePasswordAreOfRequiredLength()\n   {\n      String passwordSizeError = \"size must be between 6 and 20\";\n      String tooShort = \"test5\";\n      String tooLong = \"t12345678901234567890\";\n      ChangePasswordPage changePasswordPage = new LoginWorkFlow().signIn(\"translator\", \"translator\")\n            .goToMyProfile()\n            .goToChangePassword()\n            .enterNewPassword(\"test5\")\n            .enterConfirmNewPassword(tooShort);\n\n      assertThat(\"Incorrect password message displayed\", changePasswordPage.waitForErrors(),\n            Matchers.hasItem(passwordSizeError));\n\n      changePasswordPage = changePasswordPage.enterNewPassword(tooLong).enterConfirmNewPassword(tooLong);\n\n      assertThat(\"Incorrect password message displayed\", changePasswordPage.waitForErrors(),\n            Matchers.hasItem(passwordSizeError));\n   }","commit_id":"1c2e1c7b94dde130c01997ff43d228f8a8394717","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test\n   public void changePasswordRequiredFieldsAreNotEmpty()\n   {\n      String emptyPassword = \"value is required\";\n      MyAccountPage myAccountPage = new LoginWorkFlow().signIn(\"translator\", \"translator\").goToMyProfile();\n      ChangePasswordPage changePasswordPage = myAccountPage.goToChangePassword();\n      changePasswordPage = changePasswordPage.changePasswordExpectingFailure();\n      assertThat(\"Incorrect password message displayed\", changePasswordPage.getErrors(),\n            Matchers.contains(emptyPassword, emptyPassword, emptyPassword));\n   }","id":8805,"modified_method":"@Test\n   public void changePasswordRequiredFieldsAreNotEmpty()\n   {\n      String emptyPassword = \"value is required\";\n      ChangePasswordPage changePasswordPage = new LoginWorkFlow().signIn(\"translator\", \"translator\")\n            .goToMyProfile()\n            .goToChangePassword()\n            .changePasswordExpectingFailure();\n\n      assertThat(\"Incorrect password message displayed\", changePasswordPage.getErrors(),\n            Matchers.contains(emptyPassword, emptyPassword, emptyPassword));\n   }","commit_id":"1c2e1c7b94dde130c01997ff43d228f8a8394717","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test\n   public void changePasswordCancel()\n   {\n      MyAccountPage myAccountPage = new LoginWorkFlow().signIn(\"translator\", \"translator\").goToMyProfile();\n      ChangePasswordPage changePasswordPage = myAccountPage.goToChangePassword();\n      changePasswordPage.enterOldPassword(\"translator\");\n      changePasswordPage.enterNewPassword(\"notnewpassword\");\n      changePasswordPage.enterConfirmNewPassword(\"notnewpassword\");\n      myAccountPage = changePasswordPage.cancelChangePassword();\n      HomePage homePage = myAccountPage.signOut();\n      assertThat(\"User is logged out\", !homePage.hasLoggedIn());\n      homePage = new LoginWorkFlow().signIn(\"translator\", \"translator\");\n      assertThat(\"User has logged in with the original password\", homePage.hasLoggedIn());\n   }","id":8806,"modified_method":"@Test\n   public void changePasswordCancel()\n   {\n      MyAccountPage myAccountPage = new LoginWorkFlow().signIn(\"translator\", \"translator\").goToMyProfile()\n            .goToChangePassword()\n            .enterOldPassword(\"translator\")\n            .enterNewPassword(\"notnewpassword\")\n            .enterConfirmNewPassword(\"notnewpassword\")\n            .cancelChangePassword();\n\n      HomePage homePage = myAccountPage.signOut();\n      assertThat(\"User is logged out\", !homePage.hasLoggedIn());\n      homePage = new LoginWorkFlow().signIn(\"translator\", \"translator\");\n      assertThat(\"User has logged in with the original password\", homePage.hasLoggedIn());\n   }","commit_id":"1c2e1c7b94dde130c01997ff43d228f8a8394717","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test\n   public void changePasswordConfirmationMismatch()\n   {\n      String incorrectPassword = \"Passwords do not match\";\n      MyAccountPage myAccountPage = new LoginWorkFlow().signIn(\"translator\", \"translator\").goToMyProfile();\n      ChangePasswordPage changePasswordPage = myAccountPage.goToChangePassword();\n      changePasswordPage.enterOldPassword(\"translator\");\n      changePasswordPage.enterNewPassword(\"somenewpassword\");\n      changePasswordPage.enterConfirmNewPassword(\"differentpassword\");\n      changePasswordPage = changePasswordPage.changePasswordExpectingFailure();\n      assertThat(\"Incorrect password message displayed\", changePasswordPage.getErrors(),\n            Matchers.contains(incorrectPassword));\n   }","id":8807,"modified_method":"@Test\n   public void changePasswordConfirmationMismatch()\n   {\n      String incorrectPassword = \"Passwords do not match\";\n      ChangePasswordPage changePasswordPage = new LoginWorkFlow().signIn(\"translator\", \"translator\")\n            .goToMyProfile()\n            .goToChangePassword()\n            .enterOldPassword(\"translator\")\n            .enterNewPassword(\"somenewpassword\")\n            .enterConfirmNewPassword(\"differentpassword\")\n            .changePasswordExpectingFailure();\n\n      assertThat(\"Incorrect password message displayed\", changePasswordPage.getErrors(),\n            Matchers.contains(incorrectPassword));\n   }","commit_id":"1c2e1c7b94dde130c01997ff43d228f8a8394717","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test\n   public void changePasswordCurrentPasswordFailure()\n   {\n      String incorrectPassword = \"Old password is incorrect, please check and try again.\";\n      MyAccountPage myAccountPage = new LoginWorkFlow().signIn(\"translator\", \"translator\").goToMyProfile();\n      ChangePasswordPage changePasswordPage = myAccountPage.goToChangePassword();\n      changePasswordPage.enterOldPassword(\"nottherightpassword\");\n      changePasswordPage.enterNewPassword(\"somenewpassword\");\n      changePasswordPage.enterConfirmNewPassword(\"somenewpassword\");\n      changePasswordPage = changePasswordPage.changePasswordExpectingFailure();\n      assertThat(\"Incorrect password message displayed\", changePasswordPage.getErrors(),\n            Matchers.contains(incorrectPassword));\n   }","id":8808,"modified_method":"@Test\n   public void changePasswordCurrentPasswordFailure()\n   {\n      String incorrectPassword = \"Old password is incorrect, please check and try again.\";\n      MyAccountPage myAccountPage = new LoginWorkFlow().signIn(\"translator\", \"translator\").goToMyProfile();\n         ChangePasswordPage changePasswordPage = myAccountPage.goToChangePassword()\n            .enterOldPassword(\"nottherightpassword\")\n            .enterNewPassword(\"somenewpassword\")\n            .enterConfirmNewPassword(\"somenewpassword\")\n            .changePasswordExpectingFailure();\n\n      assertThat(\"Incorrect password message displayed\", changePasswordPage.getErrors(),\n            Matchers.contains(incorrectPassword));\n   }","commit_id":"1c2e1c7b94dde130c01997ff43d228f8a8394717","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test\n   @Category(BasicAcceptanceTest.class)\n   public void changePasswordSuccessful()\n   {\n      MyAccountPage myAccountPage = new LoginWorkFlow().signIn(\"translator\", \"translator\").goToMyProfile();\n      myAccountPage = myAccountPage.goToChangePassword()\n            .enterOldPassword(\"translator\")\n            .enterNewPassword(\"newpassword\")\n            .enterConfirmNewPassword(\"newpassword\")\n            .changePassword();\n\n      assertThat(\"Confirmation message is displayed\", myAccountPage.getNotificationMessage(),\n            Matchers.equalTo(\"Your password has been successfully changed.\"));\n      HomePage homePage = myAccountPage.signOut();\n      assertThat(\"User is logged out\", !homePage.hasLoggedIn());\n      homePage = new LoginWorkFlow().signIn(\"translator\", \"newpassword\");\n      assertThat(\"User has logged in with the new password\", homePage.hasLoggedIn());\n   }","id":8809,"modified_method":"@Test\n   @Category(BasicAcceptanceTest.class)\n   public void changePasswordSuccessful()\n   {\n      MyAccountPage myAccountPage = new LoginWorkFlow().signIn(\"translator\", \"translator\")\n            .goToMyProfile()\n            .goToChangePassword()\n            .enterOldPassword(\"translator\")\n            .enterNewPassword(\"newpassword\")\n            .enterConfirmNewPassword(\"newpassword\")\n            .changePassword();\n\n      assertThat(\"Confirmation message is displayed\", myAccountPage.getNotificationMessage(),\n            Matchers.equalTo(\"Your password has been successfully changed.\"));\n\n      HomePage homePage = myAccountPage.signOut();\n      assertThat(\"User is logged out\", !homePage.hasLoggedIn());\n      homePage = new LoginWorkFlow().signIn(\"translator\", \"newpassword\");\n      assertThat(\"User has logged in with the new password\", homePage.hasLoggedIn());\n   }","commit_id":"4f1b4259a19327bd4798dbaf698a7092857ae399","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test\n   public void changePasswordCurrentPasswordFailure()\n   {\n      String incorrectPassword = \"Old password is incorrect, please check and try again.\";\n      MyAccountPage myAccountPage = new LoginWorkFlow().signIn(\"translator\", \"translator\").goToMyProfile();\n         ChangePasswordPage changePasswordPage = myAccountPage.goToChangePassword()\n            .enterOldPassword(\"nottherightpassword\")\n            .enterNewPassword(\"somenewpassword\")\n            .enterConfirmNewPassword(\"somenewpassword\")\n            .changePasswordExpectingFailure();\n\n      assertThat(\"Incorrect password message displayed\", changePasswordPage.getErrors(),\n            Matchers.contains(incorrectPassword));\n   }","id":8810,"modified_method":"@Test\n   public void changePasswordCurrentPasswordFailure()\n   {\n      String incorrectPassword = \"Old password is incorrect, please check and try again.\";\n      ChangePasswordPage changePasswordPage = new LoginWorkFlow().signIn(\"translator\", \"translator\")\n            .goToMyProfile()\n            .goToChangePassword()\n            .enterOldPassword(\"nottherightpassword\")\n            .enterNewPassword(\"somenewpassword\")\n            .enterConfirmNewPassword(\"somenewpassword\")\n            .changePasswordExpectingFailure();\n\n      assertThat(\"Incorrect password message displayed\", changePasswordPage.getErrors(),\n            Matchers.contains(incorrectPassword));\n   }","commit_id":"4f1b4259a19327bd4798dbaf698a7092857ae399","url":"https://github.com/zanata/zanata-server"},{"original_method":"private void displayProperties( Node node, Output out,\n\t\tboolean displayProperties, boolean displayValues, boolean verbose,\n\t\tString filter ) throws ShellException, RemoteException\n\t{\n\t\tif ( !displayProperties )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tint longestKey = this.findLongestKey( node );\n\t\tPattern propertyKeyPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tfor ( String key : node.getPropertyKeys() )\n\t\t{\n\t\t\tif ( propertyKeyPattern != null &&\n\t\t\t\t!propertyKeyPattern.matcher( key ).matches() )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tout.print( \"*\" + key );\n\t\t\tif ( displayValues )\n\t\t\t{\n\t\t\t\tthis.printMany( out, \" \", longestKey - key.length() + 1 );\n\t\t\t\tObject value = node.getProperty( key );\n\t\t\t\tout.print( \"=[\" + value + \"]\" );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tout.print( \" (\" + this.getNiceType( value ) + \")\" );\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println( \"\" );\n\t\t}\n\t}","id":8811,"modified_method":"private void displayProperties( NodeOrRelationship thing, Output out,\n\t\tboolean displayProperties, boolean displayValues, boolean verbose,\n\t\tString filter ) throws ShellException, RemoteException\n\t{\n\t\tif ( !displayProperties )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tint longestKey = this.findLongestKey( thing );\n\t\tPattern propertyKeyPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tfor ( String key : thing.getPropertyKeys() )\n\t\t{\n\t\t\tif ( propertyKeyPattern != null &&\n\t\t\t\t!propertyKeyPattern.matcher( key ).matches() )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tout.print( \"*\" + key );\n\t\t\tif ( displayValues )\n\t\t\t{\n\t\t\t\tthis.printMany( out, \" \", longestKey - key.length() + 1 );\n\t\t\t\tObject value = thing.getProperty( key );\n\t\t\t\tout.print( \"=[\" + value + \"]\" );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tout.print( \" (\" + this.getNiceType( value ) + \")\" );\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println( \"\" );\n\t\t}\n\t}","commit_id":"ec2a58ab950c0eb5b4ed840f991ae72cb44d2453","url":"https://github.com/neo4j/neo4j"},{"original_method":"private int findLongestKey( Node node )\n\t{\n\t\tint length = 0;\n\t\tfor ( String key : node.getPropertyKeys() )\n\t\t{\n\t\t\tif ( key.length() > length )\n\t\t\t{\n\t\t\t\tlength = key.length();\n\t\t\t}\n\t\t}\n\t\treturn length;\n\t}","id":8812,"modified_method":"private int findLongestKey( NodeOrRelationship thing )\n\t{\n\t\tint length = 0;\n\t\tfor ( String key : thing.getPropertyKeys() )\n\t\t{\n\t\t\tif ( key.length() > length )\n\t\t\t{\n\t\t\t\tlength = key.length();\n\t\t\t}\n\t\t}\n\t\treturn length;\n\t}","commit_id":"ec2a58ab950c0eb5b4ed840f991ae72cb44d2453","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n\t * Constructs a new \"ls\" application.\n\t */\n\tpublic Ls()\n\t{\n\t\tthis.addValueType( \"d\", new OptionContext( OptionValueType.MUST,\n\t\t\t\"Direction filter for relationships: \" +\n\t\t\tthis.directionAlternatives() ) );\n\t\tthis.addValueType( \"v\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Verbose mode\" ) );\n\t\tthis.addValueType( \"q\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Quiet mode\" ) );\n\t\tthis.addValueType( \"p\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Lists properties\" ) );\n\t\tthis.addValueType( \"r\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Lists relationships\" ) );\n\t\tthis.addValueType( \"f\", new OptionContext( OptionValueType.MUST,\n\t\t\t\"Filters property keys/relationship types (regexp string)\" ) );\n\t}","id":8813,"modified_method":"/**\n\t * Constructs a new \"ls\" application.\n\t */\n\tpublic Ls()\n\t{\n\t\tsuper();\n\t\tthis.addValueType( \"d\", new OptionContext( OptionValueType.MUST,\n\t\t\t\"Direction filter for relationships: \" +\n\t\t\tthis.directionAlternatives() ) );\n\t\tthis.addValueType( \"v\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Verbose mode\" ) );\n\t\tthis.addValueType( \"q\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Quiet mode\" ) );\n\t\tthis.addValueType( \"p\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Lists properties\" ) );\n\t\tthis.addValueType( \"r\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Lists relationships\" ) );\n\t\tthis.addValueType( \"f\", new OptionContext( OptionValueType.MUST,\n\t\t\t\"Filters property keys/relationship types (regexp string)\" ) );\n\t\tthis.addValueType( \"e\", new OptionContext( OptionValueType.MUST,\n\t\t\t\"Temporarily select a connected relationship to do the\" +\n\t\t\t\"operation on\" ) );\n\t}","commit_id":"ec2a58ab950c0eb5b4ed840f991ae72cb44d2453","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void displayRelationships( AppCommandParser parser, Node node,\n\t\tOutput out, boolean displayRelationships, boolean verbose, \n\t\tString filter ) throws ShellException, RemoteException\n\t{\n\t\tif ( !displayRelationships )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tString directionFilter = parser.options().get( \"d\" );\n\t\tDirection direction = this.getDirection( directionFilter );\n\t\tboolean displayOutgoing = directionFilter == null ||\n\t\t\tdirection == Direction.OUTGOING;\n\t\tboolean displayIncoming = directionFilter == null ||\n\t\t\tdirection == Direction.INCOMING;\n\t\tPattern filterPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tif ( displayOutgoing )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.OUTGOING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = new StringBuffer( \n\t\t\t\t\tgetDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" --[\" ).append( rel.getType().name() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append( \"]--> \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getEndNode() ) );\n\t\t\t\tout.println( buf );\n\t\t\t}\n\t\t}\n\t\tif ( displayIncoming )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.INCOMING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = \n\t\t\t\t\tnew StringBuffer( getDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" <--[\" ).append( rel.getType() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append(  \"]-- \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getStartNode() ) );\n\t\t\t\tout.println( buf );\n\t\t\t}\n\t\t}\n\t}","id":8814,"modified_method":"private void displayRelationships( AppCommandParser parser,\n\t\tNodeOrRelationship thing, Output out, boolean displayRelationships,\n\t\tboolean verbose, String filter ) throws ShellException, RemoteException\n\t{\n\t\tif ( !displayRelationships )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tString directionFilter = parser.options().get( \"d\" );\n\t\tDirection direction = this.getDirection( directionFilter );\n\t\tboolean displayOutgoing = directionFilter == null ||\n\t\t\tdirection == Direction.OUTGOING;\n\t\tboolean displayIncoming = directionFilter == null ||\n\t\t\tdirection == Direction.INCOMING;\n\t\tPattern filterPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tif ( displayOutgoing )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tthing.getRelationships( Direction.OUTGOING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = new StringBuffer( \n\t\t\t\t\tgetDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" --[\" ).append( rel.getType().name() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append( \"]--> \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getEndNode() ) );\n\t\t\t\tout.println( buf );\n\t\t\t}\n\t\t}\n\t\tif ( displayIncoming )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tthing.getRelationships( Direction.INCOMING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = \n\t\t\t\t\tnew StringBuffer( getDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" <--[\" ).append( rel.getType() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append(  \"]-- \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getStartNode() ) );\n\t\t\t\tout.println( buf );\n\t\t\t}\n\t\t}\n\t}","commit_id":"ec2a58ab950c0eb5b4ed840f991ae72cb44d2453","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tboolean verbose = parser.options().containsKey( \"v\" );\n\t\tboolean displayValues = verbose || !parser.options().containsKey( \"q\" );\n\t\tboolean displayProperties =\n\t\t\tverbose || parser.options().containsKey( \"p\" );\n\t\tboolean displayRelationships =\n\t\t\tverbose || parser.options().containsKey( \"r\" );\n\t\tString filter = parser.options().get( \"f\" );\n\t\tif ( !displayProperties && !displayRelationships )\n\t\t{\n\t\t\tdisplayProperties = true;\n\t\t\tdisplayRelationships = true;\n\t\t}\n\t\t\n\t\tNode node = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnode = this.getCurrentNode( session );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode = this.getNodeById(\n\t\t\t\tLong.parseLong( parser.arguments().get( 0 ) ) );\n\t\t}\n\t\t\n\t\tthis.displayProperties( node, out, displayProperties, displayValues,\n\t\t\tverbose, filter );\n\t\tthis.displayRelationships( parser, node, out, displayRelationships, \n\t\t\tverbose, filter );\n\t\treturn null;\n\t}","id":8815,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session,\n\t\tOutput out ) throws ShellException, RemoteException\n\t{\n\t\tboolean verbose = parser.options().containsKey( \"v\" );\n\t\tboolean displayValues = verbose || !parser.options().containsKey( \"q\" );\n\t\tboolean displayProperties =\n\t\t\tverbose || parser.options().containsKey( \"p\" );\n\t\tboolean displayRelationships =\n\t\t\tverbose || parser.options().containsKey( \"r\" );\n\t\tString filter = parser.options().get( \"f\" );\n\t\tif ( !displayProperties && !displayRelationships )\n\t\t{\n\t\t\tdisplayProperties = true;\n\t\t\tdisplayRelationships = true;\n\t\t}\n\t\t\n\t\tNode node = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnode = this.getCurrentNode( session );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode = this.getNodeById(\n\t\t\t\tLong.parseLong( parser.arguments().get( 0 ) ) );\n\t\t}\n\t\t\n\t\tNodeOrRelationship thing = getNodeOrRelationship( node, parser );\n\t\tthis.displayProperties( thing, out, displayProperties, displayValues,\n\t\t\tverbose, filter );\n\t\tthis.displayRelationships( parser, thing, out, displayRelationships, \n\t\t\tverbose, filter );\n\t\treturn null;\n\t}","commit_id":"ec2a58ab950c0eb5b4ed840f991ae72cb44d2453","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException\n\t{\n\t\tif ( parser.arguments().size() != 2 )\n\t\t{\n\t\t\tthrow new ShellException(\n\t\t\t\t\"Must supply <from-key> <to-key> arguments\" );\n\t\t}\n\t\tString fromKey = parser.arguments().get( 0 );\n\t\tString toKey = parser.arguments().get( 1 );\n\t\tboolean mayOverwrite = parser.options().containsKey( \"o\" );\n\t\tNode currentNode = this.getCurrentNode( session );\n\t\tif ( !currentNode.hasProperty( fromKey ) )\n\t\t{\n\t\t\tthrow new ShellException( \"Property '\" + fromKey +\n\t\t\t\t\"' doesn't exist\" );\n\t\t}\n\t\tif ( currentNode.hasProperty( toKey ) )\n\t\t{\n\t\t\tif ( !mayOverwrite )\n\t\t\t{\n\t\t\t\tthrow new ShellException( \"Property '\" + toKey +\n\t\t\t\t\t\"' already exists, supply -o flag to overwrite\" );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcurrentNode.removeProperty( toKey );\n\t\t\t}\n\t\t}\n\t\t\n\t\tObject value = currentNode.removeProperty( fromKey );\n\t\tcurrentNode.setProperty( toKey, value );\n\t\treturn null;\n\t}","id":8816,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException\n\t{\n\t\tif ( parser.arguments().size() < 2 )\n\t\t{\n\t\t\tthrow new ShellException( \"Must supply <from-key> <to-key> \" +\n\t\t\t\t\"arguments, like: mv name \\\"given name\\\"\" );\n\t\t}\n\t\tString fromKey = parser.arguments().get( 0 );\n\t\tString toKey = parser.arguments().get( 1 );\n\t\tboolean mayOverwrite = parser.options().containsKey( \"o\" );\n\t\tNode node = this.getCurrentNode( session );\n\t\tNodeOrRelationship thing = getNodeOrRelationship( node, parser );\n\t\tif ( !thing.hasProperty( fromKey ) )\n\t\t{\n\t\t\tthrow new ShellException( \"Property '\" + fromKey +\n\t\t\t\t\"' doesn't exist\" );\n\t\t}\n\t\tif ( thing.hasProperty( toKey ) )\n\t\t{\n\t\t\tif ( !mayOverwrite )\n\t\t\t{\n\t\t\t\tthrow new ShellException( \"Property '\" + toKey +\n\t\t\t\t\t\"' already exists, supply -o flag to overwrite\" );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthing.removeProperty( toKey );\n\t\t\t}\n\t\t}\n\t\t\n\t\tObject value = thing.removeProperty( fromKey );\n\t\tthing.setProperty( toKey, value );\n\t\treturn null;\n\t}","commit_id":"ec2a58ab950c0eb5b4ed840f991ae72cb44d2453","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session,\n\t\tOutput out ) throws ShellException\n\t{\n\t\ttry\n\t\t{\n\t\t\tString key = parser.arguments().get( 0 );\n\t\t\tif ( this.getCurrentNode( session ).removeProperty( key ) == null )\n\t\t\t{\n\t\t\t\tout.println( \"Property '\" + key + \"' not found\" );\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tcatch ( RemoteException e )\n\t\t{\n\t\t\tthrow new ShellException( e );\n\t\t}\n\t}","id":8817,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session,\n\t\tOutput out ) throws ShellException\n\t{\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tthrow new ShellException( \"Must supply the property key to \" +\n\t\t\t\t\"remove, like: rm title\" );\n\t\t}\n\t\t\n\t\ttry\n\t\t{\n\t\t\tString key = parser.arguments().get( 0 );\n\t\t\tNode node = this.getCurrentNode( session );\n\t\t\tNodeOrRelationship thing = getNodeOrRelationship( node, parser );\n\t\t\tif ( thing.removeProperty( key ) == null )\n\t\t\t{\n\t\t\t\tout.println( \"Property '\" + key + \"' not found\" );\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tcatch ( RemoteException e )\n\t\t{\n\t\t\tthrow new ShellException( e );\n\t\t}\n\t}","commit_id":"ec2a58ab950c0eb5b4ed840f991ae72cb44d2453","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session,\n\t\tOutput out ) throws ShellException\n\t{\n\t\tString key = parser.arguments().get( 0 );\n\t\t\n\t\tClass<?> type = this.getValueType( parser );\n\t\tObject value = null;\n\t\ttry\n\t\t{\n\t\t\tvalue = type.getConstructor( String.class ).newInstance(\n\t\t\t\tparser.arguments().get( 1 ) );\n\t\t}\n\t\tcatch ( Exception e )\n\t\t{\n\t\t\tthrow new ShellException( e );\n\t\t}\n\t\t\n\t\tthis.getCurrentNode( session ).setProperty( key, value );\n\t\treturn null;\n\t}","id":8818,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session,\n\t\tOutput out ) throws ShellException\n\t{\n\t\tif ( parser.arguments().size() < 2 )\n\t\t{\n\t\t\tthrow new ShellException( \"Must supply key and value, \" +\n\t\t\t\t\"like: set -t String title \\\"This is a neo node\\\"\" );\n\t\t}\n\t\t\n\t\tString key = parser.arguments().get( 0 );\n\t\tClass<?> type = this.getValueType( parser );\n\t\tObject value = null;\n\t\ttry\n\t\t{\n\t\t\tvalue = type.getConstructor( String.class ).newInstance(\n\t\t\t\tparser.arguments().get( 1 ) );\n\t\t}\n\t\tcatch ( Exception e )\n\t\t{\n\t\t\tthrow new ShellException( e );\n\t\t}\n\t\t\n\t\tNode node = this.getCurrentNode( session );\n\t\tNodeOrRelationship thing = getNodeOrRelationship( node, parser );\n\t\tthing.setProperty( key, value );\n\t\treturn null;\n\t}","commit_id":"ec2a58ab950c0eb5b4ed840f991ae72cb44d2453","url":"https://github.com/neo4j/neo4j"},{"original_method":"private int findLongestKey( Node node )\n\t{\n\t\tint length = 0;\n\t\tfor ( String key : node.getPropertyKeys() )\n\t\t{\n\t\t\tif ( key.length() > length )\n\t\t\t{\n\t\t\t\tlength = key.length();\n\t\t\t}\n\t\t}\n\t\treturn length;\n\t}","id":8819,"modified_method":"private int findLongestKey( NodeOrRelationship thing )\n\t{\n\t\tint length = 0;\n\t\tfor ( String key : thing.getPropertyKeys() )\n\t\t{\n\t\t\tif ( key.length() > length )\n\t\t\t{\n\t\t\t\tlength = key.length();\n\t\t\t}\n\t\t}\n\t\treturn length;\n\t}","commit_id":"073bc23a1aa0bb4f989537e0d894d9e2a29f7fce","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void displayRelationships( AppCommandParser parser, Node node,\n\t\tOutput out, boolean displayRelationships, boolean verbose, \n\t\tString filter ) throws ShellException, RemoteException\n\t{\n\t\tif ( !displayRelationships )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tString directionFilter = parser.options().get( \"d\" );\n\t\tDirection direction = this.getDirection( directionFilter );\n\t\tboolean displayOutgoing = directionFilter == null ||\n\t\t\tdirection == Direction.OUTGOING;\n\t\tboolean displayIncoming = directionFilter == null ||\n\t\t\tdirection == Direction.INCOMING;\n\t\tPattern filterPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tif ( displayOutgoing )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.OUTGOING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = new StringBuffer( \n\t\t\t\t\tgetDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" --[\" ).append( rel.getType().name() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append( \"]--> \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getEndNode() ) );\n\t\t\t\tout.println( buf );\n\t\t\t}\n\t\t}\n\t\tif ( displayIncoming )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.INCOMING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = \n\t\t\t\t\tnew StringBuffer( getDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" <--[\" ).append( rel.getType() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append(  \"]-- \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getStartNode() ) );\n\t\t\t\tout.println( buf );\n\t\t\t}\n\t\t}\n\t}","id":8820,"modified_method":"private void displayRelationships( AppCommandParser parser,\n\t\tNodeOrRelationship thing, Output out, boolean displayRelationships,\n\t\tboolean verbose, String filter ) throws ShellException, RemoteException\n\t{\n\t\tif ( !displayRelationships )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tString directionFilter = parser.options().get( \"d\" );\n\t\tDirection direction = this.getDirection( directionFilter );\n\t\tboolean displayOutgoing = directionFilter == null ||\n\t\t\tdirection == Direction.OUTGOING;\n\t\tboolean displayIncoming = directionFilter == null ||\n\t\t\tdirection == Direction.INCOMING;\n\t\tPattern filterPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tif ( displayOutgoing )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tthing.getRelationships( Direction.OUTGOING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = new StringBuffer( \n\t\t\t\t\tgetDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" --[\" ).append( rel.getType().name() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append( \"]--> \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getEndNode() ) );\n\t\t\t\tout.println( buf );\n\t\t\t}\n\t\t}\n\t\tif ( displayIncoming )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tthing.getRelationships( Direction.INCOMING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = \n\t\t\t\t\tnew StringBuffer( getDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" <--[\" ).append( rel.getType() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append(  \"]-- \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getStartNode() ) );\n\t\t\t\tout.println( buf );\n\t\t\t}\n\t\t}\n\t}","commit_id":"073bc23a1aa0bb4f989537e0d894d9e2a29f7fce","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tboolean verbose = parser.options().containsKey( \"v\" );\n\t\tboolean displayValues = verbose || !parser.options().containsKey( \"q\" );\n\t\tboolean displayProperties =\n\t\t\tverbose || parser.options().containsKey( \"p\" );\n\t\tboolean displayRelationships =\n\t\t\tverbose || parser.options().containsKey( \"r\" );\n\t\tString filter = parser.options().get( \"f\" );\n\t\tif ( !displayProperties && !displayRelationships )\n\t\t{\n\t\t\tdisplayProperties = true;\n\t\t\tdisplayRelationships = true;\n\t\t}\n\t\t\n\t\tNode node = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnode = this.getCurrentNode( session );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode = this.getNodeById(\n\t\t\t\tLong.parseLong( parser.arguments().get( 0 ) ) );\n\t\t}\n\t\t\n\t\tthis.displayProperties( node, out, displayProperties, displayValues,\n\t\t\tverbose, filter );\n\t\tthis.displayRelationships( parser, node, out, displayRelationships, \n\t\t\tverbose, filter );\n\t\treturn null;\n\t}","id":8821,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session,\n\t\tOutput out ) throws ShellException, RemoteException\n\t{\n\t\tboolean verbose = parser.options().containsKey( \"v\" );\n\t\tboolean displayValues = verbose || !parser.options().containsKey( \"q\" );\n\t\tboolean displayProperties =\n\t\t\tverbose || parser.options().containsKey( \"p\" );\n\t\tboolean displayRelationships =\n\t\t\tverbose || parser.options().containsKey( \"r\" );\n\t\tString filter = parser.options().get( \"f\" );\n\t\tif ( !displayProperties && !displayRelationships )\n\t\t{\n\t\t\tdisplayProperties = true;\n\t\t\tdisplayRelationships = true;\n\t\t}\n\t\t\n\t\tNode node = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnode = this.getCurrentNode( session );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode = this.getNodeById(\n\t\t\t\tLong.parseLong( parser.arguments().get( 0 ) ) );\n\t\t}\n\t\t\n\t\tNodeOrRelationship thing = getNodeOrRelationship( node, parser );\n\t\tthis.displayProperties( thing, out, displayProperties, displayValues,\n\t\t\tverbose, filter );\n\t\tthis.displayRelationships( parser, thing, out, displayRelationships, \n\t\t\tverbose, filter );\n\t\treturn null;\n\t}","commit_id":"073bc23a1aa0bb4f989537e0d894d9e2a29f7fce","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void displayProperties( Node node, Output out,\n\t\tboolean displayProperties, boolean displayValues, boolean verbose,\n\t\tString filter ) throws ShellException, RemoteException\n\t{\n\t\tif ( !displayProperties )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tint longestKey = this.findLongestKey( node );\n\t\tPattern propertyKeyPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tfor ( String key : node.getPropertyKeys() )\n\t\t{\n\t\t\tif ( propertyKeyPattern != null &&\n\t\t\t\t!propertyKeyPattern.matcher( key ).matches() )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tout.print( \"*\" + key );\n\t\t\tif ( displayValues )\n\t\t\t{\n\t\t\t\tthis.printMany( out, \" \", longestKey - key.length() + 1 );\n\t\t\t\tObject value = node.getProperty( key );\n\t\t\t\tout.print( \"=[\" + value + \"]\" );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tout.print( \" (\" + this.getNiceType( value ) + \")\" );\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println( \"\" );\n\t\t}\n\t}","id":8822,"modified_method":"private void displayProperties( NodeOrRelationship thing, Output out,\n\t\tboolean displayProperties, boolean displayValues, boolean verbose,\n\t\tString filter ) throws ShellException, RemoteException\n\t{\n\t\tif ( !displayProperties )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tint longestKey = this.findLongestKey( thing );\n\t\tPattern propertyKeyPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tfor ( String key : thing.getPropertyKeys() )\n\t\t{\n\t\t\tif ( propertyKeyPattern != null &&\n\t\t\t\t!propertyKeyPattern.matcher( key ).matches() )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tout.print( \"*\" + key );\n\t\t\tif ( displayValues )\n\t\t\t{\n\t\t\t\tthis.printMany( out, \" \", longestKey - key.length() + 1 );\n\t\t\t\tObject value = thing.getProperty( key );\n\t\t\t\tout.print( \"=[\" + value + \"]\" );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tout.print( \" (\" + this.getNiceType( value ) + \")\" );\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println( \"\" );\n\t\t}\n\t}","commit_id":"073bc23a1aa0bb4f989537e0d894d9e2a29f7fce","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n\t * Constructs a new \"ls\" application.\n\t */\n\tpublic Ls()\n\t{\n\t\tthis.addValueType( \"d\", new OptionContext( OptionValueType.MUST,\n\t\t\t\"Direction filter for relationships: \" +\n\t\t\tthis.directionAlternatives() ) );\n\t\tthis.addValueType( \"v\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Verbose mode\" ) );\n\t\tthis.addValueType( \"q\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Quiet mode\" ) );\n\t\tthis.addValueType( \"p\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Lists properties\" ) );\n\t\tthis.addValueType( \"r\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Lists relationships\" ) );\n\t\tthis.addValueType( \"f\", new OptionContext( OptionValueType.MUST,\n\t\t\t\"Filters property keys/relationship types (regexp string)\" ) );\n\t}","id":8823,"modified_method":"/**\n\t * Constructs a new \"ls\" application.\n\t */\n\tpublic Ls()\n\t{\n\t\tsuper();\n\t\tthis.addValueType( \"d\", new OptionContext( OptionValueType.MUST,\n\t\t\t\"Direction filter for relationships: \" +\n\t\t\tthis.directionAlternatives() ) );\n\t\tthis.addValueType( \"v\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Verbose mode\" ) );\n\t\tthis.addValueType( \"q\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Quiet mode\" ) );\n\t\tthis.addValueType( \"p\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Lists properties\" ) );\n\t\tthis.addValueType( \"r\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Lists relationships\" ) );\n\t\tthis.addValueType( \"f\", new OptionContext( OptionValueType.MUST,\n\t\t\t\"Filters property keys/relationship types (regexp string)\" ) );\n\t\tthis.addValueType( \"e\", new OptionContext( OptionValueType.MUST,\n\t\t\t\"Temporarily select a connected relationship to do the\" +\n\t\t\t\"operation on\" ) );\n\t}","commit_id":"073bc23a1aa0bb4f989537e0d894d9e2a29f7fce","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException\n\t{\n\t\tif ( parser.arguments().size() != 2 )\n\t\t{\n\t\t\tthrow new ShellException(\n\t\t\t\t\"Must supply <from-key> <to-key> arguments\" );\n\t\t}\n\t\tString fromKey = parser.arguments().get( 0 );\n\t\tString toKey = parser.arguments().get( 1 );\n\t\tboolean mayOverwrite = parser.options().containsKey( \"o\" );\n\t\tNode currentNode = this.getCurrentNode( session );\n\t\tif ( !currentNode.hasProperty( fromKey ) )\n\t\t{\n\t\t\tthrow new ShellException( \"Property '\" + fromKey +\n\t\t\t\t\"' doesn't exist\" );\n\t\t}\n\t\tif ( currentNode.hasProperty( toKey ) )\n\t\t{\n\t\t\tif ( !mayOverwrite )\n\t\t\t{\n\t\t\t\tthrow new ShellException( \"Property '\" + toKey +\n\t\t\t\t\t\"' already exists, supply -o flag to overwrite\" );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcurrentNode.removeProperty( toKey );\n\t\t\t}\n\t\t}\n\t\t\n\t\tObject value = currentNode.removeProperty( fromKey );\n\t\tcurrentNode.setProperty( toKey, value );\n\t\treturn null;\n\t}","id":8824,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException\n\t{\n\t\tif ( parser.arguments().size() < 2 )\n\t\t{\n\t\t\tthrow new ShellException( \"Must supply <from-key> <to-key> \" +\n\t\t\t\t\"arguments, like: mv name \\\"given name\\\"\" );\n\t\t}\n\t\tString fromKey = parser.arguments().get( 0 );\n\t\tString toKey = parser.arguments().get( 1 );\n\t\tboolean mayOverwrite = parser.options().containsKey( \"o\" );\n\t\tNode node = this.getCurrentNode( session );\n\t\tNodeOrRelationship thing = getNodeOrRelationship( node, parser );\n\t\tif ( !thing.hasProperty( fromKey ) )\n\t\t{\n\t\t\tthrow new ShellException( \"Property '\" + fromKey +\n\t\t\t\t\"' doesn't exist\" );\n\t\t}\n\t\tif ( thing.hasProperty( toKey ) )\n\t\t{\n\t\t\tif ( !mayOverwrite )\n\t\t\t{\n\t\t\t\tthrow new ShellException( \"Property '\" + toKey +\n\t\t\t\t\t\"' already exists, supply -o flag to overwrite\" );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthing.removeProperty( toKey );\n\t\t\t}\n\t\t}\n\t\t\n\t\tObject value = thing.removeProperty( fromKey );\n\t\tthing.setProperty( toKey, value );\n\t\treturn null;\n\t}","commit_id":"073bc23a1aa0bb4f989537e0d894d9e2a29f7fce","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session,\n\t\tOutput out ) throws ShellException\n\t{\n\t\ttry\n\t\t{\n\t\t\tString key = parser.arguments().get( 0 );\n\t\t\tif ( this.getCurrentNode( session ).removeProperty( key ) == null )\n\t\t\t{\n\t\t\t\tout.println( \"Property '\" + key + \"' not found\" );\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tcatch ( RemoteException e )\n\t\t{\n\t\t\tthrow new ShellException( e );\n\t\t}\n\t}","id":8825,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session,\n\t\tOutput out ) throws ShellException\n\t{\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tthrow new ShellException( \"Must supply the property key to \" +\n\t\t\t\t\"remove, like: rm title\" );\n\t\t}\n\t\t\n\t\ttry\n\t\t{\n\t\t\tString key = parser.arguments().get( 0 );\n\t\t\tNode node = this.getCurrentNode( session );\n\t\t\tNodeOrRelationship thing = getNodeOrRelationship( node, parser );\n\t\t\tif ( thing.removeProperty( key ) == null )\n\t\t\t{\n\t\t\t\tout.println( \"Property '\" + key + \"' not found\" );\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tcatch ( RemoteException e )\n\t\t{\n\t\t\tthrow new ShellException( e );\n\t\t}\n\t}","commit_id":"073bc23a1aa0bb4f989537e0d894d9e2a29f7fce","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session,\n\t\tOutput out ) throws ShellException\n\t{\n\t\tString key = parser.arguments().get( 0 );\n\t\t\n\t\tClass<?> type = this.getValueType( parser );\n\t\tObject value = null;\n\t\ttry\n\t\t{\n\t\t\tvalue = type.getConstructor( String.class ).newInstance(\n\t\t\t\tparser.arguments().get( 1 ) );\n\t\t}\n\t\tcatch ( Exception e )\n\t\t{\n\t\t\tthrow new ShellException( e );\n\t\t}\n\t\t\n\t\tthis.getCurrentNode( session ).setProperty( key, value );\n\t\treturn null;\n\t}","id":8826,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session,\n\t\tOutput out ) throws ShellException\n\t{\n\t\tif ( parser.arguments().size() < 2 )\n\t\t{\n\t\t\tthrow new ShellException( \"Must supply key and value, \" +\n\t\t\t\t\"like: set -t String title \\\"This is a neo node\\\"\" );\n\t\t}\n\t\t\n\t\tString key = parser.arguments().get( 0 );\n\t\tClass<?> type = this.getValueType( parser );\n\t\tObject value = null;\n\t\ttry\n\t\t{\n\t\t\tvalue = type.getConstructor( String.class ).newInstance(\n\t\t\t\tparser.arguments().get( 1 ) );\n\t\t}\n\t\tcatch ( Exception e )\n\t\t{\n\t\t\tthrow new ShellException( e );\n\t\t}\n\t\t\n\t\tNode node = this.getCurrentNode( session );\n\t\tNodeOrRelationship thing = getNodeOrRelationship( node, parser );\n\t\tthing.setProperty( key, value );\n\t\treturn null;\n\t}","commit_id":"073bc23a1aa0bb4f989537e0d894d9e2a29f7fce","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void displayProperties( Node node, Output out,\n\t\tboolean displayProperties, boolean displayValues, boolean verbose,\n\t\tString filter ) throws ShellException, RemoteException\n\t{\n\t\tif ( !displayProperties )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tint longestKey = this.findLongestKey( node );\n\t\tPattern propertyKeyPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tfor ( String key : node.getPropertyKeys() )\n\t\t{\n\t\t\tif ( propertyKeyPattern != null &&\n\t\t\t\t!propertyKeyPattern.matcher( key ).matches() )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tout.print( \"*\" + key );\n\t\t\tif ( displayValues )\n\t\t\t{\n\t\t\t\tthis.printMany( out, \" \", longestKey - key.length() + 1 );\n\t\t\t\tObject value = node.getProperty( key );\n\t\t\t\tout.print( \"=[\" + value + \"]\" );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tout.print( \" (\" + this.getNiceType( value ) + \")\" );\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println( \"\" );\n\t\t}\n\t}","id":8827,"modified_method":"private void displayProperties( NodeOrRelationship thing, Output out,\n\t\tboolean displayProperties, boolean displayValues, boolean verbose,\n\t\tString filter ) throws ShellException, RemoteException\n\t{\n\t\tif ( !displayProperties )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tint longestKey = this.findLongestKey( thing );\n\t\tPattern propertyKeyPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tfor ( String key : thing.getPropertyKeys() )\n\t\t{\n\t\t\tif ( propertyKeyPattern != null &&\n\t\t\t\t!propertyKeyPattern.matcher( key ).matches() )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tout.print( \"*\" + key );\n\t\t\tif ( displayValues )\n\t\t\t{\n\t\t\t\tthis.printMany( out, \" \", longestKey - key.length() + 1 );\n\t\t\t\tObject value = thing.getProperty( key );\n\t\t\t\tout.print( \"=[\" + value + \"]\" );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tout.print( \" (\" + this.getNiceType( value ) + \")\" );\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println( \"\" );\n\t\t}\n\t}","commit_id":"0d4406fb8804d7e94a76c8d03779a50f668e602f","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException, RemoteException\n\t{\n\t\tboolean verbose = parser.options().containsKey( \"v\" );\n\t\tboolean displayValues = verbose || !parser.options().containsKey( \"q\" );\n\t\tboolean displayProperties =\n\t\t\tverbose || parser.options().containsKey( \"p\" );\n\t\tboolean displayRelationships =\n\t\t\tverbose || parser.options().containsKey( \"r\" );\n\t\tString filter = parser.options().get( \"f\" );\n\t\tif ( !displayProperties && !displayRelationships )\n\t\t{\n\t\t\tdisplayProperties = true;\n\t\t\tdisplayRelationships = true;\n\t\t}\n\t\t\n\t\tNode node = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnode = this.getCurrentNode( session );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode = this.getNodeById(\n\t\t\t\tLong.parseLong( parser.arguments().get( 0 ) ) );\n\t\t}\n\t\t\n\t\tthis.displayProperties( node, out, displayProperties, displayValues,\n\t\t\tverbose, filter );\n\t\tthis.displayRelationships( parser, node, out, displayRelationships, \n\t\t\tverbose, filter );\n\t\treturn null;\n\t}","id":8828,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session,\n\t\tOutput out ) throws ShellException, RemoteException\n\t{\n\t\tboolean verbose = parser.options().containsKey( \"v\" );\n\t\tboolean displayValues = verbose || !parser.options().containsKey( \"q\" );\n\t\tboolean displayProperties =\n\t\t\tverbose || parser.options().containsKey( \"p\" );\n\t\tboolean displayRelationships =\n\t\t\tverbose || parser.options().containsKey( \"r\" );\n\t\tString filter = parser.options().get( \"f\" );\n\t\tif ( !displayProperties && !displayRelationships )\n\t\t{\n\t\t\tdisplayProperties = true;\n\t\t\tdisplayRelationships = true;\n\t\t}\n\t\t\n\t\tNode node = null;\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tnode = this.getCurrentNode( session );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode = this.getNodeById(\n\t\t\t\tLong.parseLong( parser.arguments().get( 0 ) ) );\n\t\t}\n\t\t\n\t\tNodeOrRelationship thing = getNodeOrRelationship( node, parser );\n\t\tthis.displayProperties( thing, out, displayProperties, displayValues,\n\t\t\tverbose, filter );\n\t\tthis.displayRelationships( parser, thing, out, displayRelationships, \n\t\t\tverbose, filter );\n\t\treturn null;\n\t}","commit_id":"0d4406fb8804d7e94a76c8d03779a50f668e602f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void displayRelationships( AppCommandParser parser, Node node,\n\t\tOutput out, boolean displayRelationships, boolean verbose, \n\t\tString filter ) throws ShellException, RemoteException\n\t{\n\t\tif ( !displayRelationships )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tString directionFilter = parser.options().get( \"d\" );\n\t\tDirection direction = this.getDirection( directionFilter );\n\t\tboolean displayOutgoing = directionFilter == null ||\n\t\t\tdirection == Direction.OUTGOING;\n\t\tboolean displayIncoming = directionFilter == null ||\n\t\t\tdirection == Direction.INCOMING;\n\t\tPattern filterPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tif ( displayOutgoing )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.OUTGOING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = new StringBuffer( \n\t\t\t\t\tgetDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" --[\" ).append( rel.getType().name() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append( \"]--> \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getEndNode() ) );\n\t\t\t\tout.println( buf );\n\t\t\t}\n\t\t}\n\t\tif ( displayIncoming )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tnode.getRelationships( Direction.INCOMING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = \n\t\t\t\t\tnew StringBuffer( getDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" <--[\" ).append( rel.getType() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append(  \"]-- \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getStartNode() ) );\n\t\t\t\tout.println( buf );\n\t\t\t}\n\t\t}\n\t}","id":8829,"modified_method":"private void displayRelationships( AppCommandParser parser,\n\t\tNodeOrRelationship thing, Output out, boolean displayRelationships,\n\t\tboolean verbose, String filter ) throws ShellException, RemoteException\n\t{\n\t\tif ( !displayRelationships )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tString directionFilter = parser.options().get( \"d\" );\n\t\tDirection direction = this.getDirection( directionFilter );\n\t\tboolean displayOutgoing = directionFilter == null ||\n\t\t\tdirection == Direction.OUTGOING;\n\t\tboolean displayIncoming = directionFilter == null ||\n\t\t\tdirection == Direction.INCOMING;\n\t\tPattern filterPattern = filter == null ? null :\n\t\t\tPattern.compile( filter );\n\t\tif ( displayOutgoing )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tthing.getRelationships( Direction.OUTGOING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = new StringBuffer( \n\t\t\t\t\tgetDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" --[\" ).append( rel.getType().name() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append( \"]--> \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getEndNode() ) );\n\t\t\t\tout.println( buf );\n\t\t\t}\n\t\t}\n\t\tif ( displayIncoming )\n\t\t{\n\t\t\tfor ( Relationship rel :\n\t\t\t\tthing.getRelationships( Direction.INCOMING ) )\n\t\t\t{\n\t\t\t\tif ( filterPattern != null && !filterPattern.matcher(\n\t\t\t\t\trel.getType().name() ).matches() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringBuffer buf = \n\t\t\t\t\tnew StringBuffer( getDisplayNameForCurrentNode() );\n\t\t\t\tbuf.append( \" <--[\" ).append( rel.getType() );\n\t\t\t\tif ( verbose )\n\t\t\t\t{\n\t\t\t\t\tbuf.append( \", \" ).append( rel.getId() );\n\t\t\t\t}\n\t\t\t\tbuf.append(  \"]-- \" );\n\t\t\t\tbuf.append( getDisplayNameForNode( rel.getStartNode() ) );\n\t\t\t\tout.println( buf );\n\t\t\t}\n\t\t}\n\t}","commit_id":"0d4406fb8804d7e94a76c8d03779a50f668e602f","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n\t * Constructs a new \"ls\" application.\n\t */\n\tpublic Ls()\n\t{\n\t\tthis.addValueType( \"d\", new OptionContext( OptionValueType.MUST,\n\t\t\t\"Direction filter for relationships: \" +\n\t\t\tthis.directionAlternatives() ) );\n\t\tthis.addValueType( \"v\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Verbose mode\" ) );\n\t\tthis.addValueType( \"q\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Quiet mode\" ) );\n\t\tthis.addValueType( \"p\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Lists properties\" ) );\n\t\tthis.addValueType( \"r\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Lists relationships\" ) );\n\t\tthis.addValueType( \"f\", new OptionContext( OptionValueType.MUST,\n\t\t\t\"Filters property keys/relationship types (regexp string)\" ) );\n\t}","id":8830,"modified_method":"/**\n\t * Constructs a new \"ls\" application.\n\t */\n\tpublic Ls()\n\t{\n\t\tsuper();\n\t\tthis.addValueType( \"d\", new OptionContext( OptionValueType.MUST,\n\t\t\t\"Direction filter for relationships: \" +\n\t\t\tthis.directionAlternatives() ) );\n\t\tthis.addValueType( \"v\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Verbose mode\" ) );\n\t\tthis.addValueType( \"q\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Quiet mode\" ) );\n\t\tthis.addValueType( \"p\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Lists properties\" ) );\n\t\tthis.addValueType( \"r\", new OptionContext( OptionValueType.NONE,\n\t\t\t\"Lists relationships\" ) );\n\t\tthis.addValueType( \"f\", new OptionContext( OptionValueType.MUST,\n\t\t\t\"Filters property keys/relationship types (regexp string)\" ) );\n\t\tthis.addValueType( \"e\", new OptionContext( OptionValueType.MUST,\n\t\t\t\"Temporarily select a connected relationship to do the\" +\n\t\t\t\"operation on\" ) );\n\t}","commit_id":"0d4406fb8804d7e94a76c8d03779a50f668e602f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private int findLongestKey( Node node )\n\t{\n\t\tint length = 0;\n\t\tfor ( String key : node.getPropertyKeys() )\n\t\t{\n\t\t\tif ( key.length() > length )\n\t\t\t{\n\t\t\t\tlength = key.length();\n\t\t\t}\n\t\t}\n\t\treturn length;\n\t}","id":8831,"modified_method":"private int findLongestKey( NodeOrRelationship thing )\n\t{\n\t\tint length = 0;\n\t\tfor ( String key : thing.getPropertyKeys() )\n\t\t{\n\t\t\tif ( key.length() > length )\n\t\t\t{\n\t\t\t\tlength = key.length();\n\t\t\t}\n\t\t}\n\t\treturn length;\n\t}","commit_id":"0d4406fb8804d7e94a76c8d03779a50f668e602f","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException\n\t{\n\t\tif ( parser.arguments().size() != 2 )\n\t\t{\n\t\t\tthrow new ShellException(\n\t\t\t\t\"Must supply <from-key> <to-key> arguments\" );\n\t\t}\n\t\tString fromKey = parser.arguments().get( 0 );\n\t\tString toKey = parser.arguments().get( 1 );\n\t\tboolean mayOverwrite = parser.options().containsKey( \"o\" );\n\t\tNode currentNode = this.getCurrentNode( session );\n\t\tif ( !currentNode.hasProperty( fromKey ) )\n\t\t{\n\t\t\tthrow new ShellException( \"Property '\" + fromKey +\n\t\t\t\t\"' doesn't exist\" );\n\t\t}\n\t\tif ( currentNode.hasProperty( toKey ) )\n\t\t{\n\t\t\tif ( !mayOverwrite )\n\t\t\t{\n\t\t\t\tthrow new ShellException( \"Property '\" + toKey +\n\t\t\t\t\t\"' already exists, supply -o flag to overwrite\" );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcurrentNode.removeProperty( toKey );\n\t\t\t}\n\t\t}\n\t\t\n\t\tObject value = currentNode.removeProperty( fromKey );\n\t\tcurrentNode.setProperty( toKey, value );\n\t\treturn null;\n\t}","id":8832,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session, Output out )\n\t\tthrows ShellException\n\t{\n\t\tif ( parser.arguments().size() < 2 )\n\t\t{\n\t\t\tthrow new ShellException( \"Must supply <from-key> <to-key> \" +\n\t\t\t\t\"arguments, like: mv name \\\"given name\\\"\" );\n\t\t}\n\t\tString fromKey = parser.arguments().get( 0 );\n\t\tString toKey = parser.arguments().get( 1 );\n\t\tboolean mayOverwrite = parser.options().containsKey( \"o\" );\n\t\tNode node = this.getCurrentNode( session );\n\t\tNodeOrRelationship thing = getNodeOrRelationship( node, parser );\n\t\tif ( !thing.hasProperty( fromKey ) )\n\t\t{\n\t\t\tthrow new ShellException( \"Property '\" + fromKey +\n\t\t\t\t\"' doesn't exist\" );\n\t\t}\n\t\tif ( thing.hasProperty( toKey ) )\n\t\t{\n\t\t\tif ( !mayOverwrite )\n\t\t\t{\n\t\t\t\tthrow new ShellException( \"Property '\" + toKey +\n\t\t\t\t\t\"' already exists, supply -o flag to overwrite\" );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthing.removeProperty( toKey );\n\t\t\t}\n\t\t}\n\t\t\n\t\tObject value = thing.removeProperty( fromKey );\n\t\tthing.setProperty( toKey, value );\n\t\treturn null;\n\t}","commit_id":"0d4406fb8804d7e94a76c8d03779a50f668e602f","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session,\n\t\tOutput out ) throws ShellException\n\t{\n\t\ttry\n\t\t{\n\t\t\tString key = parser.arguments().get( 0 );\n\t\t\tif ( this.getCurrentNode( session ).removeProperty( key ) == null )\n\t\t\t{\n\t\t\t\tout.println( \"Property '\" + key + \"' not found\" );\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tcatch ( RemoteException e )\n\t\t{\n\t\t\tthrow new ShellException( e );\n\t\t}\n\t}","id":8833,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session,\n\t\tOutput out ) throws ShellException\n\t{\n\t\tif ( parser.arguments().isEmpty() )\n\t\t{\n\t\t\tthrow new ShellException( \"Must supply the property key to \" +\n\t\t\t\t\"remove, like: rm title\" );\n\t\t}\n\t\t\n\t\ttry\n\t\t{\n\t\t\tString key = parser.arguments().get( 0 );\n\t\t\tNode node = this.getCurrentNode( session );\n\t\t\tNodeOrRelationship thing = getNodeOrRelationship( node, parser );\n\t\t\tif ( thing.removeProperty( key ) == null )\n\t\t\t{\n\t\t\t\tout.println( \"Property '\" + key + \"' not found\" );\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tcatch ( RemoteException e )\n\t\t{\n\t\t\tthrow new ShellException( e );\n\t\t}\n\t}","commit_id":"0d4406fb8804d7e94a76c8d03779a50f668e602f","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session,\n\t\tOutput out ) throws ShellException\n\t{\n\t\tString key = parser.arguments().get( 0 );\n\t\t\n\t\tClass<?> type = this.getValueType( parser );\n\t\tObject value = null;\n\t\ttry\n\t\t{\n\t\t\tvalue = type.getConstructor( String.class ).newInstance(\n\t\t\t\tparser.arguments().get( 1 ) );\n\t\t}\n\t\tcatch ( Exception e )\n\t\t{\n\t\t\tthrow new ShellException( e );\n\t\t}\n\t\t\n\t\tthis.getCurrentNode( session ).setProperty( key, value );\n\t\treturn null;\n\t}","id":8834,"modified_method":"@Override\n\tprotected String exec( AppCommandParser parser, Session session,\n\t\tOutput out ) throws ShellException\n\t{\n\t\tif ( parser.arguments().size() < 2 )\n\t\t{\n\t\t\tthrow new ShellException( \"Must supply key and value, \" +\n\t\t\t\t\"like: set -t String title \\\"This is a neo node\\\"\" );\n\t\t}\n\t\t\n\t\tString key = parser.arguments().get( 0 );\n\t\tClass<?> type = this.getValueType( parser );\n\t\tObject value = null;\n\t\ttry\n\t\t{\n\t\t\tvalue = type.getConstructor( String.class ).newInstance(\n\t\t\t\tparser.arguments().get( 1 ) );\n\t\t}\n\t\tcatch ( Exception e )\n\t\t{\n\t\t\tthrow new ShellException( e );\n\t\t}\n\t\t\n\t\tNode node = this.getCurrentNode( session );\n\t\tNodeOrRelationship thing = getNodeOrRelationship( node, parser );\n\t\tthing.setProperty( key, value );\n\t\treturn null;\n\t}","commit_id":"0d4406fb8804d7e94a76c8d03779a50f668e602f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private synchronized void lookupValues(RowMetaInterface rowMeta, Object[] row) throws KettleException\n    {\n        // OK, now do the lookup.\n        // We need the lookupvalues for that.\n        Object[] lookupRow = new Object[data.lookupParameterRowMeta.size()];\n        int lookupIndex = 0;\n        \n        for (int i=0;i<meta.getKeyStream().length;i++)\n        {\n            if (data.keynrs[i]>=0)\n            {\n                lookupRow[lookupIndex] = row[ data.keynrs[i] ];\n                lookupIndex++;\n            }\n            if (data.keynrs2[i]>=0)\n            {\n                lookupRow[lookupIndex] = row[ data.keynrs2[i] ];\n                lookupIndex++;\n            }\n        }\n        \n        data.db.setValues(data.lookupParameterRowMeta, lookupRow, data.prepStatementLookup);\n\t\t\n\t\tif (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"InsertUpdate.Log.ValuesSetForLookup\")+data.lookupParameterRowMeta.getString(lookupRow)); //$NON-NLS-1$\r\n\t\tObject[] add = data.db.getLookup(data.prepStatementLookup);\r\n        incrementLinesInput();\n\t\t\n\t\tif (add==null) \n\t\t{\n\t\t\t/* nothing was found:\n\t\t\t *  \n\t\t\t * INSERT ROW\n\t\t\t *\n\t\t\t */\n\t\t\tif (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"InsertUpdate.InsertRow\")+rowMeta.getString(row)); //$NON-NLS-1$\n\n\t\t\t// The values to insert are those in the update section (all fields should be specified)\n            // For the others, we have no definite mapping!\n            //\n            Object[] insertRow = new Object[data.valuenrs.length];\n            for (int i=0;i<data.valuenrs.length;i++)\n            {\n                insertRow[i] = row[ data.valuenrs[i] ];\n            }\n            \n            // Set the values on the prepared statement...\n\t\t\tdata.db.setValuesInsert(data.insertRowMeta, insertRow);\n            \n\t\t\t// Insert the row\n            data.db.insertRow();\n            \n            incrementLinesOutput();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (!meta.isUpdateBypassed())\n\t\t\t{\n\t\t\t\tif (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"InsertUpdate.Log.FoundRowForUpdate\")+rowMeta.getString(row)); //$NON-NLS-1$\n\t\t\t\t\n                /* Row was found:\n                 *  \n                 * UPDATE row or do nothing?\n                 *\n                 */\n                boolean update = false;\n                for (int i=0;i<data.valuenrs.length;i++)\n                {\n            \t\tif ( meta.getUpdate()[i].booleanValue() ) \n            \t\t{\n                        ValueMetaInterface valueMeta = rowMeta.getValueMeta( data.valuenrs[i] );\r\n                        ValueMetaInterface retMeta = data.db.getReturnRowMeta().getValueMeta(i);\r\n                        \n                        Object rowvalue = row[ data.valuenrs[i] ];\n                        Object retvalue = add[ i ];\n                    \n                        if ( valueMeta.compare(rowvalue, retMeta, retvalue)!=0 )\n                        {\n                            update=true;\n                        }\n            \t\t}\n                }\n                if (update)\n                {\n                    // Create the update row...\n                    Object[] updateRow = new Object[data.updateParameterRowMeta.size()];\n                    int j = 0;\n                    for (int i=0;i<data.valuenrs.length;i++)\n                    {\n                \t\tif( meta.getUpdate()[i].booleanValue() ) \n                \t\t{\n                            updateRow[j] = row[ data.valuenrs[i] ]; // the setters\n                            j++;\n                \t\t}\n                    }\n                    // add the where clause parameters, they are exactly the same for lookup and update\n                    for (int i=0;i<lookupRow.length;i++)\n                    {\n                        updateRow[j+i] = lookupRow[i];\n                    }\n                    \n                    if (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"InsertUpdate.Log.UpdateRow\")+data.lookupParameterRowMeta.getString(lookupRow)); //$NON-NLS-1$\n                    data.db.setValues(data.updateParameterRowMeta, updateRow, data.prepStatementUpdate);\n                    data.db.insertRow(data.prepStatementUpdate);\n                    incrementLinesUpdated();\n                }\n                else\n                {\n                    incrementLinesSkipped();\n                }\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"InsertUpdate.Log.UpdateBypassed\")+rowMeta.getString(row)); //$NON-NLS-1$\n\t\t\t\tincrementLinesSkipped();\n\t\t\t}\n\t\t}\n\t}","id":8835,"modified_method":"private synchronized void lookupValues(RowMetaInterface rowMeta, Object[] row) throws KettleException\n    {\n        // OK, now do the lookup.\n        // We need the lookupvalues for that.\n        Object[] lookupRow = new Object[data.lookupParameterRowMeta.size()];\n        int lookupIndex = 0;\n        \n        for (int i=0;i<data.keynrs.length;i++)\n        {\n            if (data.keynrs[i]>=0){\n                lookupRow[lookupIndex] = row[ data.keynrs[i] ];\n                lookupIndex++;\n            }\n            if (data.keynrs2[i]>=0){\n                lookupRow[lookupIndex] = row[ data.keynrs2[i] ];\n                lookupIndex++;\n            }\n        }\n        \n        data.db.setValues(data.lookupParameterRowMeta, lookupRow, data.prepStatementLookup);\n\t\t\n\t\tif (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"InsertUpdate.Log.ValuesSetForLookup\")+data.lookupParameterRowMeta.getString(lookupRow)); //$NON-NLS-1$\r\n\t\tObject[] add = data.db.getLookup(data.prepStatementLookup);\r\n        incrementLinesInput();\n\t\t\n\t\tif (add==null) \n\t\t{\n\t\t\t/* nothing was found:\n\t\t\t *  \n\t\t\t * INSERT ROW\n\t\t\t *\n\t\t\t */\n\t\t\tif (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"InsertUpdate.InsertRow\")+rowMeta.getString(row)); //$NON-NLS-1$\n\n\t\t\t// The values to insert are those in the update section (all fields should be specified)\n            // For the others, we have no definite mapping!\n            //\n            Object[] insertRow = new Object[data.valuenrs.length];\n            for (int i=0;i<data.valuenrs.length;i++)\n            {\n                insertRow[i] = row[ data.valuenrs[i] ];\n            }\n            \n            // Set the values on the prepared statement...\n\t\t\tdata.db.setValuesInsert(data.insertRowMeta, insertRow);\n            \n\t\t\t// Insert the row\n            data.db.insertRow();\n            \n            incrementLinesOutput();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (!meta.isUpdateBypassed())\n\t\t\t{\n\t\t\t\tif (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"InsertUpdate.Log.FoundRowForUpdate\")+rowMeta.getString(row)); //$NON-NLS-1$\n\t\t\t\t\n                /* Row was found:\n                 *  \n                 * UPDATE row or do nothing?\n                 *\n                 */\n                boolean update = false;\n                for (int i=0;i<data.valuenrs.length;i++)\n                {\n            \t\tif ( meta.getUpdate()[i].booleanValue() ) \n            \t\t{\n                        ValueMetaInterface valueMeta = rowMeta.getValueMeta( data.valuenrs[i] );\r\n                        ValueMetaInterface retMeta = data.db.getReturnRowMeta().getValueMeta(i);\r\n                        \n                        Object rowvalue = row[ data.valuenrs[i] ];\n                        Object retvalue = add[ i ];\n                    \n                        if ( valueMeta.compare(rowvalue, retMeta, retvalue)!=0 )\n                        {\n                            update=true;\n                        }\n            \t\t}\n                }\n                if (update)\n                {\n                    // Create the update row...\n                    Object[] updateRow = new Object[data.updateParameterRowMeta.size()];\n                    int j = 0;\n                    for (int i=0;i<data.valuenrs.length;i++)\n                    {\n                \t\tif( meta.getUpdate()[i].booleanValue() ) \n                \t\t{\n                            updateRow[j] = row[ data.valuenrs[i] ]; // the setters\n                            j++;\n                \t\t}\n                    }\n                    // add the where clause parameters, they are exactly the same for lookup and update\n                    for (int i=0;i<lookupRow.length;i++)\n                    {\n                        updateRow[j+i] = lookupRow[i];\n                    }\n                    \n                    if (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"InsertUpdate.Log.UpdateRow\")+data.lookupParameterRowMeta.getString(lookupRow)); //$NON-NLS-1$\n                    data.db.setValues(data.updateParameterRowMeta, updateRow, data.prepStatementUpdate);\n                    data.db.insertRow(data.prepStatementUpdate);\n                    incrementLinesUpdated();\n                }\n                else\n                {\n                    incrementLinesSkipped();\n                }\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"InsertUpdate.Log.UpdateBypassed\")+rowMeta.getString(row)); //$NON-NLS-1$\n\t\t\t\tincrementLinesSkipped();\n\t\t\t}\n\t\t}\n\t}","commit_id":"416ff318ea00c63007336f8388c2292cf5131f9f","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void setLookup(RowMetaInterface rowMeta) throws KettleDatabaseException\n    {\n        data.lookupParameterRowMeta = new RowMeta();\n        data.lookupReturnRowMeta = new RowMeta();\n        \n        DatabaseMeta databaseMeta = meta.getDatabaseMeta();\n        \n        String sql = \"SELECT \";\n\n        for (int i = 0; i < meta.getUpdateLookup().length; i++)\n        {\n            if (i != 0) sql += \", \";\n            sql += databaseMeta.quoteField(meta.getUpdateLookup()[i]);\n            data.lookupReturnRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getUpdateStream()[i]).clone() );\n        }\n\n        sql += \" FROM \" + data.schemaTable + \" WHERE \";\n\n        for (int i = 0; i < meta.getKeyLookup().length; i++)\n        {\n            if (i != 0) sql += \" AND \";\n            sql += databaseMeta.quoteField(meta.getKeyLookup()[i]);\n            if (\"BETWEEN\".equalsIgnoreCase(meta.getKeyCondition()[i]))\n            {\n                sql += \" BETWEEN ? AND ? \";\n                data.lookupParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\n                data.lookupParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream2()[i]) );\n            }\n            else\n            {\n                if (\"IS NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]) || \"IS NOT NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]))\n                {\n                    sql += \" \" + meta.getKeyCondition()[i] + \" \";\n                }\n                else\n                {\n                    sql += \" \" + meta.getKeyCondition()[i] + \" ? \";\n                    data.lookupParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\n                }\n            }\n        }\n        \n        try\n        {\n            if(log.isDetailed()) logDetailed(\"Setting preparedStatement to [\" + sql + \"]\");\n            data.prepStatementLookup = data.db.getConnection().prepareStatement(databaseMeta.stripCR(sql));\n        }\n        catch (SQLException ex)\n        {\n            throw new KettleDatabaseException(\"Unable to prepare statement for SQL statement [\" + sql + \"]\", ex);\n        }\n    }","id":8836,"modified_method":"public void setLookup(RowMetaInterface rowMeta) throws KettleDatabaseException\n    {\n        data.lookupParameterRowMeta = new RowMeta();\r\n        data.lookupReturnRowMeta = new RowMeta();\r\n        \r\n        DatabaseMeta databaseMeta = meta.getDatabaseMeta();\r\n        \r\n        String sql = \"SELECT \";\r\n\r\n        for (int i = 0; i < meta.getUpdateLookup().length; i++)\r\n        {\r\n            if (i != 0) sql += \", \";\r\n            sql += databaseMeta.quoteField(meta.getUpdateLookup()[i]);\r\n            data.lookupReturnRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getUpdateStream()[i]).clone() );\r\n        }\r\n\r\n        sql += \" FROM \" + data.schemaTable + \" WHERE \";\r\n\r\n        for (int i = 0; i < meta.getKeyLookup().length; i++)\r\n        {\r\n            if (i != 0){\r\n            \tsql += \" AND \";\r\n            } \r\n            \r\n            sql += \" ( ( \";\r\n            \r\n            sql += databaseMeta.quoteField(meta.getKeyLookup()[i]);\r\n            if (\"BETWEEN\".equalsIgnoreCase(meta.getKeyCondition()[i]))\r\n            {\r\n                sql += \" BETWEEN ? AND ? \";\r\n                data.lookupParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\r\n                data.lookupParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream2()[i]) );\r\n            }\r\n            else\r\n            {\r\n                if (\"IS NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]) || \"IS NOT NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]))\r\n                {\r\n                    sql += \" \" + meta.getKeyCondition()[i] + \" \";\r\n                }\r\n                else if (\"= ~NULL\".equalsIgnoreCase(meta.getKeyCondition()[i])){\r\n                \t\r\n                \tsql += \" IS NULL AND \";\r\n                    \r\n                \tif (databaseMeta.requiresCastToVariousForIsNull()) {\r\n                        sql += \" CAST(? AS VARCHAR(256)) IS NULL \";\r\n                    }\r\n                    else{\r\n                        sql += \" ? IS NULL \";\r\n                    }\r\n                \t// null check\r\n                    data.lookupParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\r\n                    sql += \" ) OR ( \"+ databaseMeta.quoteField(meta.getKeyLookup()[i])+\" = ? \";\r\n                    // equality check, cloning so auto-rename because of adding same fieldname does not cause problems\r\n                    data.lookupParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]).clone() );\r\n                \t\r\n                }\r\n                else\r\n                {\r\n                    sql += \" \" + meta.getKeyCondition()[i] + \" ? \";\r\n                    data.lookupParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\r\n                }\r\n            }\r\n            sql += \" ) ) \";\r\n        }\r\n        \r\n        try\r\n        {\r\n            if(log.isDetailed()) logDetailed(\"Setting preparedStatement to [\" + sql + \"]\");\r\n            data.prepStatementLookup = data.db.getConnection().prepareStatement(databaseMeta.stripCR(sql));\r\n        }\r\n        catch (SQLException ex)\r\n        {\r\n            throw new KettleDatabaseException(\"Unable to prepare statement for SQL statement [\" + sql + \"]\", ex);\r\n        }\n    }","commit_id":"416ff318ea00c63007336f8388c2292cf5131f9f","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n\t{\n\t\tmeta=(InsertUpdateMeta)smi;\n\t\tdata=(InsertUpdateData)sdi;\n\t\t\n\t\tboolean sendToErrorRow=false;\n\t\tString errorMessage = null;\n\n\t\tObject[] r=getRow();       // Get row from input rowset & set row busy!\n\t\tif (r==null)          // no more input to be expected...\n\t\t{\n\t\t\tsetOutputDone();\n\t\t\treturn false;\n\t\t}\n        \n        if (first)\n        {\n            first=false;\n            \n            data.outputRowMeta = getInputRowMeta().clone();\n            meta.getFields(data.outputRowMeta, getStepname(), null, null, this);\n            \n            data.schemaTable = meta.getDatabaseMeta().getQuotedSchemaTableCombination(environmentSubstitute(meta.getSchemaName()), \n            \t\t                                                                  environmentSubstitute(meta.getTableName()));\n            \n            // lookup the values!\n            if (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"InsertUpdate.Log.CheckingRow\")+getInputRowMeta().getString(r)); //$NON-NLS-1$\n            \n            data.keynrs  = new int[meta.getKeyStream().length];\n            data.keynrs2 = new int[meta.getKeyStream().length];\n            for (int i=0;i<meta.getKeyStream().length;i++)\n            {\n                data.keynrs[i]=getInputRowMeta().indexOfValue(meta.getKeyStream()[i]);\n                if (data.keynrs[i]<0 &&  // couldn't find field!\n                    !\"IS NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]) &&   // No field needed! //$NON-NLS-1$\n                    !\"IS NOT NULL\".equalsIgnoreCase(meta.getKeyCondition()[i])  // No field needed! //$NON-NLS-1$\n                   )\n                {\n                    throw new KettleStepException(BaseMessages.getString(PKG, \"InsertUpdate.Exception.FieldRequired\",meta.getKeyStream()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n                }\n                data.keynrs2[i]=getInputRowMeta().indexOfValue(meta.getKeyStream2()[i]);\n                if (data.keynrs2[i]<0 &&  // couldn't find field!\n                    \"BETWEEN\".equalsIgnoreCase(meta.getKeyCondition()[i])   // 2 fields needed! //$NON-NLS-1$\n                   )\n                {\n                    throw new KettleStepException(BaseMessages.getString(PKG, \"InsertUpdate.Exception.FieldRequired\",meta.getKeyStream2()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n                }\n                \n                if (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"InsertUpdate.Log.FieldHasDataNumbers\",meta.getKeyStream()[i])+data.keynrs[i]); //$NON-NLS-1$ //$NON-NLS-2$\n            }\n            \n            // Cache the position of the compare fields in Row row\n            //\n            data.valuenrs = new int[meta.getUpdateLookup().length];\n            for (int i=0;i<meta.getUpdateLookup().length;i++)\n            {\n                data.valuenrs[i]=getInputRowMeta().indexOfValue(meta.getUpdateStream()[i]);\n                if (data.valuenrs[i]<0)  // couldn't find field!\n                {\n                    throw new KettleStepException(BaseMessages.getString(PKG, \"InsertUpdate.Exception.FieldRequired\",meta.getUpdateStream()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n                }\n                if (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"InsertUpdate.Log.FieldHasDataNumbers\",meta.getUpdateStream()[i])+data.valuenrs[i]); //$NON-NLS-1$ //$NON-NLS-2$\n            }\n            \n            setLookup(getInputRowMeta());\n            \n            data.insertRowMeta = new RowMeta();\n            \n            // Insert the update fields: just names.  Type doesn't matter!\n            for (int i=0;i<meta.getUpdateLookup().length;i++) \n            {\n                ValueMetaInterface insValue = data.insertRowMeta.searchValueMeta( meta.getUpdateLookup()[i]); \n                if (insValue==null) // Don't add twice!\n                {\n                    // we already checked that this value exists so it's probably safe to ignore lookup failure...\n                    ValueMetaInterface insertValue = getInputRowMeta().searchValueMeta( meta.getUpdateStream()[i] ).clone();\n                    insertValue.setName(meta.getUpdateLookup()[i]);\n                    data.insertRowMeta.addValueMeta( insertValue );\n                }\n                else\n                {\n                    throw new KettleStepException(\"The same column can't be inserted into the target row twice: \"+insValue.getName()); // TODO i18n\n                }\n            }\n            data.db.prepareInsert(data.insertRowMeta, environmentSubstitute(meta.getSchemaName()), \n            \t\t                                  environmentSubstitute(meta.getTableName()));\n            \n            if (!meta.isUpdateBypassed())\n            {\n                List<String> updateColumns = new ArrayList<String>();\n                for(int i=0;i<meta.getUpdate().length;i++) {\n                    if(meta.getUpdate()[i].booleanValue()) {\n                        updateColumns.add(meta.getUpdateLookup()[i]);\n                    }\n                }\n                prepareUpdate(getInputRowMeta());\n            }\n        }\n\n\t\t    \n\t\ttry\n\t\t{\n\t\t\tlookupValues(getInputRowMeta(), r); // add new values to the row in rowset[0].\n            putRow(data.outputRowMeta, r);      // Nothing changed to the input, return the same row, pass a \"cloned\" metadata row.\n\t\t\t\n\t\t\tif (checkFeedback(getLinesRead())) \r\n\t\t\t{\r\n\t\t\t\tif(log.isBasic()) logBasic(BaseMessages.getString(PKG, \"InsertUpdate.Log.LineNumber\")+getLinesRead()); //$NON-NLS-1$\r\n\t\t\t}\n\t\t}\n\t\tcatch(KettleException e)\n\t\t{\n\t\t\tif (getStepMeta().isDoingErrorHandling())\n\t        {\n                sendToErrorRow = true;\n                errorMessage = e.toString();\n\t        }\n\t        else\n\t        {\n\t\t\t\tthrow new KettleStepException(BaseMessages.getString(PKG, \"InsertUpdate.Log.ErrorInStep\"), e); //$NON-NLS-1$\n\t        }\n\t\t\t \n\t\t\t if (sendToErrorRow)\n\t         {\n\t\t\t\t // Simply add this row to the error row\n\t             putError(getInputRowMeta(), r, 1, errorMessage, null, \"ISU001\");\n\t         }\n\t\t}\n\t\n\t\treturn true;\n\t}","id":8837,"modified_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n\t{\n\t\tmeta=(InsertUpdateMeta)smi;\n\t\tdata=(InsertUpdateData)sdi;\n\t\t\n\t\tboolean sendToErrorRow=false;\n\t\tString errorMessage = null;\n\n\t\tObject[] r=getRow();       // Get row from input rowset & set row busy!\n\t\tif (r==null)          // no more input to be expected...\n\t\t{\n\t\t\tsetOutputDone();\n\t\t\treturn false;\n\t\t}\n        \n        if (first)\n        {\n            first=false;\n            \n            data.outputRowMeta = getInputRowMeta().clone();\n            meta.getFields(data.outputRowMeta, getStepname(), null, null, this);\n            \n            data.schemaTable = meta.getDatabaseMeta().getQuotedSchemaTableCombination(environmentSubstitute(meta.getSchemaName()), \n            \t\t                                                                  environmentSubstitute(meta.getTableName()));\n            \n            // lookup the values!\n            if (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"InsertUpdate.Log.CheckingRow\")+getInputRowMeta().getString(r)); //$NON-NLS-1$\n\r\n            ArrayList<Integer> keynrs = new ArrayList<Integer>(meta.getKeyStream().length);\r\n            ArrayList<Integer> keynrs2 = new ArrayList<Integer>(meta.getKeyStream().length);\r\n            \n            for (int i=0;i<meta.getKeyStream().length;i++)\n            {\n            \tint keynr = getInputRowMeta().indexOfValue(meta.getKeyStream()[i]);\r\n            \t\n                if (keynr<0 &&  // couldn't find field!\n                    !\"IS NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]) &&   // No field needed! //$NON-NLS-1$\n                    !\"IS NOT NULL\".equalsIgnoreCase(meta.getKeyCondition()[i])  // No field needed! //$NON-NLS-1$\n                   )\n                {\n                    throw new KettleStepException(BaseMessages.getString(PKG, \"InsertUpdate.Exception.FieldRequired\",meta.getKeyStream()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n                }\r\n                keynrs.add(keynr);\r\n                \r\n                // this operator needs two bindings\r\n                if (\"= ~NULL\".equalsIgnoreCase(meta.getKeyCondition()[i])){\r\n                \tkeynrs.add(keynr);\r\n                \tkeynrs2.add(-1);\r\n                }\r\n                \n                int keynr2 = getInputRowMeta().indexOfValue(meta.getKeyStream2()[i]);\n                if (keynr2<0 &&  // couldn't find field!\n                    \"BETWEEN\".equalsIgnoreCase(meta.getKeyCondition()[i])   // 2 fields needed! //$NON-NLS-1$\n                   )\n                {\n                    throw new KettleStepException(BaseMessages.getString(PKG, \"InsertUpdate.Exception.FieldRequired\",meta.getKeyStream2()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n                }\n                keynrs2.add(keynr2);\r\n                \n                if (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"InsertUpdate.Log.FieldHasDataNumbers\",meta.getKeyStream()[i])+\"\"+keynrs.get(keynrs.size()-1)); //$NON-NLS-1$ //$NON-NLS-2$\n            }\n            \r\n            data.keynrs  = ArrayUtils.toPrimitive(keynrs.toArray(new Integer[0]));\r\n            data.keynrs2 = ArrayUtils.toPrimitive(keynrs2.toArray(new Integer[0]));            \r\n            \n            // Cache the position of the compare fields in Row row\n            //\n            data.valuenrs = new int[meta.getUpdateLookup().length];\n            for (int i=0;i<meta.getUpdateLookup().length;i++)\n            {\n                data.valuenrs[i]=getInputRowMeta().indexOfValue(meta.getUpdateStream()[i]);\n                if (data.valuenrs[i]<0)  // couldn't find field!\n                {\n                    throw new KettleStepException(BaseMessages.getString(PKG, \"InsertUpdate.Exception.FieldRequired\",meta.getUpdateStream()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n                }\n                if (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"InsertUpdate.Log.FieldHasDataNumbers\",meta.getUpdateStream()[i])+data.valuenrs[i]); //$NON-NLS-1$ //$NON-NLS-2$\n            }\n            \n            setLookup(getInputRowMeta());\n            \n            data.insertRowMeta = new RowMeta();\n            \n            // Insert the update fields: just names.  Type doesn't matter!\n            for (int i=0;i<meta.getUpdateLookup().length;i++) \n            {\n                ValueMetaInterface insValue = data.insertRowMeta.searchValueMeta( meta.getUpdateLookup()[i]); \n                if (insValue==null) // Don't add twice!\n                {\n                    // we already checked that this value exists so it's probably safe to ignore lookup failure...\n                    ValueMetaInterface insertValue = getInputRowMeta().searchValueMeta( meta.getUpdateStream()[i] ).clone();\n                    insertValue.setName(meta.getUpdateLookup()[i]);\n                    data.insertRowMeta.addValueMeta( insertValue );\n                }\n                else\n                {\n                    throw new KettleStepException(\"The same column can't be inserted into the target row twice: \"+insValue.getName()); // TODO i18n\n                }\n            }\n            data.db.prepareInsert(data.insertRowMeta, environmentSubstitute(meta.getSchemaName()), \n            \t\t                                  environmentSubstitute(meta.getTableName()));\n            \n            if (!meta.isUpdateBypassed())\n            {\n                List<String> updateColumns = new ArrayList<String>();\n                for(int i=0;i<meta.getUpdate().length;i++) {\n                    if(meta.getUpdate()[i].booleanValue()) {\n                        updateColumns.add(meta.getUpdateLookup()[i]);\n                    }\n                }\n                prepareUpdate(getInputRowMeta());\n            }\n        }\n\n\t\t    \n\t\ttry\n\t\t{\n\t\t\tlookupValues(getInputRowMeta(), r); // add new values to the row in rowset[0].\n            putRow(data.outputRowMeta, r);      // Nothing changed to the input, return the same row, pass a \"cloned\" metadata row.\n\t\t\t\n\t\t\tif (checkFeedback(getLinesRead())) \r\n\t\t\t{\r\n\t\t\t\tif(log.isBasic()) logBasic(BaseMessages.getString(PKG, \"InsertUpdate.Log.LineNumber\")+getLinesRead()); //$NON-NLS-1$\r\n\t\t\t}\n\t\t}\n\t\tcatch(KettleException e)\n\t\t{\n\t\t\tif (getStepMeta().isDoingErrorHandling())\n\t        {\n                sendToErrorRow = true;\n                errorMessage = e.toString();\n\t        }\n\t        else\n\t        {\n\t\t\t\tthrow new KettleStepException(BaseMessages.getString(PKG, \"InsertUpdate.Log.ErrorInStep\"), e); //$NON-NLS-1$\n\t        }\n\t\t\t \n\t\t\t if (sendToErrorRow)\n\t         {\n\t\t\t\t // Simply add this row to the error row\n\t             putError(getInputRowMeta(), r, 1, errorMessage, null, \"ISU001\");\n\t         }\n\t\t}\n\t\n\t\treturn true;\n\t}","commit_id":"416ff318ea00c63007336f8388c2292cf5131f9f","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void prepareUpdate(RowMetaInterface rowMeta) throws KettleDatabaseException\n    {\n        DatabaseMeta databaseMeta = meta.getDatabaseMeta();\n        data.updateParameterRowMeta = new RowMeta();\n        \n        String sql = \"UPDATE \" + data.schemaTable + Const.CR;\n        sql += \"SET \";\n        \r\n        boolean comma=false;\r\n        \n        for (int i=0;i<meta.getUpdateLookup().length;i++)\n        {\n    \t\tif ( meta.getUpdate()[i].booleanValue() ) {\n                if (comma) sql+= \",   \";\r\n                else comma=true;\r\n                \n                sql += databaseMeta.quoteField(meta.getUpdateLookup()[i]);\n                sql += \" = ?\" + Const.CR;\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getUpdateStream()[i]).clone() );\n    \t\t}\n        }\n\n        sql += \"WHERE \";\n\n        for (int i=0;i<meta.getKeyLookup().length;i++)\n        {\n            if (i!=0) sql += \"AND   \";\n            sql += databaseMeta.quoteField(meta.getKeyLookup()[i]);\n            if (\"BETWEEN\".equalsIgnoreCase(meta.getKeyCondition()[i]))\n            {\n                sql += \" BETWEEN ? AND ? \";\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream2()[i]) );\n            }\n            else\n            if (\"IS NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]) || \"IS NOT NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]))\n            {\n                sql += \" \"+meta.getKeyCondition()[i]+\" \";\n            }\n            else\n            {\n                sql += \" \"+meta.getKeyCondition()[i]+\" ? \";\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]).clone() );\n            }\n        }\n\n        try\n        {\n        \tif(log.isDetailed()) logDetailed(\"Setting update preparedStatement to [\"+sql+\"]\");\n            data.prepStatementUpdate=data.db.getConnection().prepareStatement(databaseMeta.stripCR(sql));\n        }\n        catch(SQLException ex) \n        {\n            throw new KettleDatabaseException(\"Unable to prepare statement for SQL statement [\" + sql + \"]\", ex);\n        }\n    }","id":8838,"modified_method":"public void prepareUpdate(RowMetaInterface rowMeta) throws KettleDatabaseException\n    {\n        DatabaseMeta databaseMeta = meta.getDatabaseMeta();\n        data.updateParameterRowMeta = new RowMeta();\n        \n        String sql = \"UPDATE \" + data.schemaTable + Const.CR;\n        sql += \"SET \";\n        \r\n        boolean comma=false;\r\n        \n        for (int i=0;i<meta.getUpdateLookup().length;i++)\n        {\n    \t\tif ( meta.getUpdate()[i].booleanValue() ) {\n                if (comma) sql+= \",   \";\r\n                else comma=true;\r\n                \n                sql += databaseMeta.quoteField(meta.getUpdateLookup()[i]);\n                sql += \" = ?\" + Const.CR;\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getUpdateStream()[i]).clone() );\n    \t\t}\n        }\n\n        sql += \"WHERE \";\n\n        for (int i=0;i<meta.getKeyLookup().length;i++)\n        {\n            if (i!=0) sql += \"AND   \";\r\n            sql += \" ( ( \";\n            sql += databaseMeta.quoteField(meta.getKeyLookup()[i]);\n            if (\"BETWEEN\".equalsIgnoreCase(meta.getKeyCondition()[i]))\n            {\n                sql += \" BETWEEN ? AND ? \";\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream2()[i]) );\n            }\n            else\n            if (\"IS NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]) || \"IS NOT NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]))\n            {\n                sql += \" \"+meta.getKeyCondition()[i]+\" \";\n            }\r\n            else if (\"= ~NULL\".equalsIgnoreCase(meta.getKeyCondition()[i])){\r\n            \t\r\n            \tsql += \" IS NULL AND \";\r\n                \r\n            \tif (databaseMeta.requiresCastToVariousForIsNull()) {\r\n                    sql += \"CAST(? AS VARCHAR(256)) IS NULL\";\r\n                }\r\n                else{\r\n                    sql += \"? IS NULL\";\r\n                }\r\n            \t// null check\r\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\r\n                sql += \" ) OR ( \"+ databaseMeta.quoteField(meta.getKeyLookup()[i])+\" = ?\";\r\n                // equality check, cloning so auto-rename because of adding same fieldname does not cause problems\r\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]).clone() );\r\n            \t\r\n            }              \n            else\n            {\n                sql += \" \"+meta.getKeyCondition()[i]+\" ? \";\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]).clone() );\n            }\r\n            sql += \" ) ) \";\n        }\n\n        try\n        {\n        \tif(log.isDetailed()) logDetailed(\"Setting update preparedStatement to [\"+sql+\"]\");\n            data.prepStatementUpdate=data.db.getConnection().prepareStatement(databaseMeta.stripCR(sql));\n        }\n        catch(SQLException ex) \n        {\n            throw new KettleDatabaseException(\"Unable to prepare statement for SQL statement [\" + sql + \"]\", ex);\n        }\n    }","commit_id":"416ff318ea00c63007336f8388c2292cf5131f9f","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String open()\n\t{\n\t\tShell parent = getParent();\n\t\tDisplay display = parent.getDisplay();\n\n\t\tshell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\n \t\tprops.setLook(shell);\n        setShellImage(shell, input);\n\n\t\tModifyListener lsMod = new ModifyListener()\n\t\t{\n\t\t\tpublic void modifyText(ModifyEvent e)\n\t\t\t{\n\t\t\t\tinput.setChanged();\n\t\t\t}\n\t\t};\r\n\t\tModifyListener lsTableMod = new ModifyListener() {\r\n\t\t\tpublic void modifyText(ModifyEvent arg0) {\r\n\t\t\t\tinput.setChanged();\r\n\t\t\t\tsetTableFieldCombo();\r\n\t\t\t}\r\n\t\t};\r\n\t\tSelectionListener lsSelection = new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t{\r\n\t\t\t\tinput.setChanged();\r\n\t\t\t\tsetTableFieldCombo();\r\n\t\t\t}\r\n\t\t};\n\t\tchanged = input.hasChanged();\n\n\t\tFormLayout formLayout = new FormLayout();\n\t\tformLayout.marginWidth = Const.FORM_MARGIN;\n\t\tformLayout.marginHeight = Const.FORM_MARGIN;\n\n\t\tshell.setLayout(formLayout);\n\t\tshell.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.Shell.Title\")); //$NON-NLS-1$\n\n\t\tint middle = props.getMiddlePct();\n\t\tint margin = Const.MARGIN;\n\n\t\t// Stepname line\n\t\twlStepname = new Label(shell, SWT.RIGHT);\n\t\twlStepname.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.Stepname.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlStepname);\n\t\tfdlStepname = new FormData();\n\t\tfdlStepname.left = new FormAttachment(0, 0);\n\t\tfdlStepname.right = new FormAttachment(middle, -margin);\n\t\tfdlStepname.top = new FormAttachment(0, margin);\n\t\twlStepname.setLayoutData(fdlStepname);\n\t\twStepname = new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n\t\twStepname.setText(stepname);\n \t\tprops.setLook(wStepname);\n\t\twStepname.addModifyListener(lsMod);\n\t\tfdStepname = new FormData();\n\t\tfdStepname.left = new FormAttachment(middle, 0);\n\t\tfdStepname.top = new FormAttachment(0, margin);\n\t\tfdStepname.right = new FormAttachment(100, 0);\n\t\twStepname.setLayoutData(fdStepname);\n\n\t\t// Connection line\n\t\twConnection = addConnectionLine(shell, wStepname, middle, margin);\n\t\tif (input.getDatabaseMeta()==null && transMeta.nrDatabases()==1) wConnection.select(0);\n\t\twConnection.addModifyListener(lsMod);\r\n\t\twConnection.addSelectionListener(lsSelection);\n\n        // Schema line...\n        wlSchema=new Label(shell, SWT.RIGHT);\n        wlSchema.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.TargetSchema.Label\")); //$NON-NLS-1$\n        props.setLook(wlSchema);\n        fdlSchema=new FormData();\n        fdlSchema.left = new FormAttachment(0, 0);\n        fdlSchema.right= new FormAttachment(middle, -margin);\n        fdlSchema.top  = new FormAttachment(wConnection, margin*2);\n        wlSchema.setLayoutData(fdlSchema);\r\n        \r\n\t\twbSchema=new Button(shell, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbSchema);\r\n \t\twbSchema.setText(BaseMessages.getString(PKG, \"System.Button.Browse\"));\r\n \t\tfdbSchema=new FormData();\r\n \t\tfdbSchema.top  = new FormAttachment(wConnection, 2*margin);\r\n \t\tfdbSchema.right= new FormAttachment(100, 0);\r\n\t\twbSchema.setLayoutData(fdbSchema);\n\n        wSchema=new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wSchema);\n        wSchema.addModifyListener(lsTableMod);\n        fdSchema=new FormData();\n        fdSchema.left = new FormAttachment(middle, 0);\n        fdSchema.top  = new FormAttachment(wConnection, margin*2);\n        fdSchema.right= new FormAttachment(wbSchema, -margin);\n        wSchema.setLayoutData(fdSchema);\n\n\t\t// Table line...\n\t\twlTable = new Label(shell, SWT.RIGHT);\n\t\twlTable.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.TargetTable.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlTable);\n\t\tfdlTable = new FormData();\n\t\tfdlTable.left = new FormAttachment(0, 0);\n\t\tfdlTable.right = new FormAttachment(middle, -margin);\n\t\tfdlTable.top = new FormAttachment(wbSchema, margin);\n\t\twlTable.setLayoutData(fdlTable);\n\n\t\twbTable = new Button(shell, SWT.PUSH | SWT.CENTER);\n \t\tprops.setLook(wbTable);\n\t\twbTable.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbTable = new FormData();\n\t\tfdbTable.right = new FormAttachment(100, 0);\n\t\tfdbTable.top = new FormAttachment(wbSchema, margin);\n\t\twbTable.setLayoutData(fdbTable);\n\n\t\twTable = new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wTable);\n\t\twTable.addModifyListener(lsTableMod);\n\t\tfdTable = new FormData();\n\t\tfdTable.left = new FormAttachment(middle, 0);\n\t\tfdTable.top = new FormAttachment(wbSchema, margin);\n\t\tfdTable.right = new FormAttachment(wbTable, -margin);\n\t\twTable.setLayoutData(fdTable);\n\n\t\t// Commit line\n\t\twlCommit = new Label(shell, SWT.RIGHT);\n\t\twlCommit.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.CommitSize.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlCommit);\n\t\tfdlCommit = new FormData();\n\t\tfdlCommit.left = new FormAttachment(0, 0);\n\t\tfdlCommit.top = new FormAttachment(wTable, margin);\n\t\tfdlCommit.right = new FormAttachment(middle, -margin);\n\t\twlCommit.setLayoutData(fdlCommit);\n\t\twCommit = new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wCommit);\n\t\twCommit.addModifyListener(lsMod);\n\t\tfdCommit = new FormData();\n\t\tfdCommit.left = new FormAttachment(middle, 0);\n\t\tfdCommit.top = new FormAttachment(wTable, margin);\n\t\tfdCommit.right = new FormAttachment(100, 0);\n\t\twCommit.setLayoutData(fdCommit);\n\n\t\t// UpdateBypassed line\n\t\twlUpdateBypassed = new Label(shell, SWT.RIGHT);\n\t\twlUpdateBypassed.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.UpdateBypassed.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlUpdateBypassed);\n\t\tfdlUpdateBypassed = new FormData();\n\t\tfdlUpdateBypassed.left = new FormAttachment(0, 0);\n\t\tfdlUpdateBypassed.top = new FormAttachment(wCommit, margin);\n\t\tfdlUpdateBypassed.right = new FormAttachment(middle, -margin);\n\t\twlUpdateBypassed.setLayoutData(fdlUpdateBypassed);\n\t\twUpdateBypassed = new Button(shell, SWT.CHECK);\n \t\tprops.setLook(wUpdateBypassed);\n\t\tfdUpdateBypassed = new FormData();\n\t\tfdUpdateBypassed.left = new FormAttachment(middle, 0);\n\t\tfdUpdateBypassed.top = new FormAttachment(wCommit, margin);\n\t\tfdUpdateBypassed.right = new FormAttachment(100, 0);\n\t\twUpdateBypassed.setLayoutData(fdUpdateBypassed);\n\n\t\twlKey = new Label(shell, SWT.NONE);\n\t\twlKey.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.Keys.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlKey);\n\t\tfdlKey = new FormData();\n\t\tfdlKey.left = new FormAttachment(0, 0);\n\t\tfdlKey.top = new FormAttachment(wUpdateBypassed, margin);\n\t\twlKey.setLayoutData(fdlKey);\n\n\t\tint nrKeyCols = 4;\n\t\tint nrKeyRows = (input.getKeyStream() != null ? input.getKeyStream().length : 1);\n\n\t\tciKey = new ColumnInfo[nrKeyCols];\n\t\tciKey[0] = new ColumnInfo(BaseMessages.getString(PKG, \"InsertUpdateDialog.ColumnInfo.TableField\"),  ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciKey[1] = new ColumnInfo(BaseMessages.getString(PKG, \"InsertUpdateDialog.ColumnInfo.Comparator\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"=\", \"<>\", \"<\", \"<=\", //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$\n\t\t\t\t\">\", \">=\", \"LIKE\", \"BETWEEN\", \"IS NULL\", \"IS NOT NULL\" }); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$\n\t\tciKey[2] = new ColumnInfo(BaseMessages.getString(PKG, \"InsertUpdateDialog.ColumnInfo.StreamField1\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciKey[3] = new ColumnInfo(BaseMessages.getString(PKG, \"InsertUpdateDialog.ColumnInfo.StreamField2\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\ttableFieldColumns.add(ciKey[0]);\n\t\twKey = new TableView(transMeta, shell, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL, ciKey,\n\t\t\t\tnrKeyRows, lsMod, props);\n\n\t\twGet = new Button(shell, SWT.PUSH);\n\t\twGet.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.GetFields.Button\")); //$NON-NLS-1$\n\t\tfdGet = new FormData();\n\t\tfdGet.right = new FormAttachment(100, 0);\n\t\tfdGet.top = new FormAttachment(wlKey, margin);\n\t\twGet.setLayoutData(fdGet);\n\n\t\tfdKey = new FormData();\n\t\tfdKey.left = new FormAttachment(0, 0);\n\t\tfdKey.top = new FormAttachment(wlKey, margin);\n\t\tfdKey.right = new FormAttachment(wGet, -margin);\n\t\tfdKey.bottom = new FormAttachment(wlKey, 190);\n\t\twKey.setLayoutData(fdKey);\n\n\n\t\t// THE BUTTONS\n\t\twOK = new Button(shell, SWT.PUSH);\n\t\twOK.setText(BaseMessages.getString(PKG, \"System.Button.OK\")); //$NON-NLS-1$\n\t\twSQL = new Button(shell, SWT.PUSH);\n\t\twSQL.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.SQL.Button\")); //$NON-NLS-1$\n\t\twCancel = new Button(shell, SWT.PUSH);\n\t\twCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\")); //$NON-NLS-1$\n\n\t\tsetButtonPositions(new Button[] { wOK, wCancel , wSQL }, margin, null);\n\n\t\t\n\t\t// THE UPDATE/INSERT TABLE\n\t\twlReturn = new Label(shell, SWT.NONE);\n\t\twlReturn.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.UpdateFields.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlReturn);\n\t\tfdlReturn = new FormData();\n\t\tfdlReturn.left = new FormAttachment(0, 0);\n\t\tfdlReturn.top = new FormAttachment(wKey, margin);\n\t\twlReturn.setLayoutData(fdlReturn);\n\n\t\tint UpInsCols = 3;\n\t\tint UpInsRows = (input.getUpdateLookup() != null ? input.getUpdateLookup().length : 1);\n\n\t\tciReturn = new ColumnInfo[UpInsCols];\n\t\tciReturn[0] = new ColumnInfo(BaseMessages.getString(PKG, \"InsertUpdateDialog.ColumnInfo.TableField\"),  ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciReturn[1] = new ColumnInfo(BaseMessages.getString(PKG, \"InsertUpdateDialog.ColumnInfo.StreamField\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciReturn[2] = new ColumnInfo(BaseMessages.getString(PKG, \"InsertUpdateDialog.ColumnInfo.Update\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] {\"Y\",\"N\"}); //$NON-NLS-1$\n\t\ttableFieldColumns.add(ciReturn[0]);\n\t\twReturn = new TableView(transMeta, shell, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL,\n\t\t\t\tciReturn, UpInsRows, lsMod, props);\n\n\t\twGetLU = new Button(shell, SWT.PUSH);\n\t\twGetLU.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.GetAndUpdateFields.Label\")); //$NON-NLS-1$\n\t\tfdGetLU = new FormData();\n\t\tfdGetLU.top   = new FormAttachment(wlReturn, margin);\n\t\tfdGetLU.right = new FormAttachment(100, 0);\n\t\twGetLU.setLayoutData(fdGetLU);\r\n\t\t\r\n\t\t\r\n\t\twDoMapping = new Button(shell, SWT.PUSH);\r\n\t\twDoMapping.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.EditMapping.Label\")); //$NON-NLS-1$\r\n\t\tfdDoMapping = new FormData();\r\n\t\tfdDoMapping.top   = new FormAttachment(wGetLU, margin);\r\n\t\tfdDoMapping.right = new FormAttachment(100, 0);\r\n\t\twDoMapping.setLayoutData(fdDoMapping);\r\n\r\n\t\twDoMapping.addListener(SWT.Selection, new Listener() { \tpublic void handleEvent(Event arg0) { generateMappings();}});\r\n\n\n\t\tfdReturn = new FormData();\n\t\tfdReturn.left = new FormAttachment(0, 0);\n\t\tfdReturn.top = new FormAttachment(wlReturn, margin);\n\t\tfdReturn.right = new FormAttachment(wGetLU, -margin);\n\t\tfdReturn.bottom = new FormAttachment(wOK, -2*margin);\n\t\twReturn.setLayoutData(fdReturn);\r\n\t\t\r\n\t\t\r\n\t    // \r\n        // Search the fields in the background\r\n        //\r\n        \r\n        final Runnable runnable = new Runnable()\r\n        {\r\n            public void run()\r\n            {\r\n                StepMeta stepMeta = transMeta.findStep(stepname);\r\n                if (stepMeta!=null)\r\n                {\r\n                    try\r\n                    {\r\n                    \tRowMetaInterface row = transMeta.getPrevStepFields(stepMeta);\r\n                        \r\n                        // Remember these fields...\r\n                        for (int i=0;i<row.size();i++)\r\n                        {\r\n                        \tinputFields.put(row.getValueMeta(i).getName(), Integer.valueOf(i));\r\n                        }\r\n                        \r\n                        setComboBoxes(); \r\n                    }\r\n                    catch(KettleException e)\r\n                    {\r\n                        logError(BaseMessages.getString(PKG, \"System.Dialog.GetFieldsFailed.Message\"));\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        new Thread(runnable).start();\n\t\t\n\t\t// Add listeners\n\t\tlsOK = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tok();\n\t\t\t}\n\t\t};\n\t\tlsGet = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tget();\n\t\t\t}\n\t\t};\n\t\tlsGetLU = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tgetUpdate();\n\t\t\t}\n\t\t};\n\t\tlsSQL = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tcreate();\n\t\t\t}\n\t\t};\n\t\tlsCancel = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tcancel();\n\t\t\t}\n\t\t};\n\n\t\twOK.addListener(SWT.Selection, lsOK);\n\t\twGet.addListener(SWT.Selection, lsGet);\n\t\twGetLU.addListener(SWT.Selection, lsGetLU);\n\t\twSQL.addListener(SWT.Selection, lsSQL);\n\t\twCancel.addListener(SWT.Selection, lsCancel);\n\n\t\tlsDef = new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\n\n\t\twStepname.addSelectionListener(lsDef);\n        wSchema.addSelectionListener(lsDef);\n        wTable.addSelectionListener(lsDef);\n        wCommit.addSelectionListener(lsDef);\n\n\t\t// Detect X or ALT-F4 or something that kills this window...\n\t\tshell.addShellListener(new ShellAdapter()\n\t\t{\n\t\t\tpublic void shellClosed(ShellEvent e)\n\t\t\t{\n\t\t\t\tcancel();\n\t\t\t}\n\t\t});\n\n\t\twbSchema.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tgetSchemaNames();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\n\t\twbTable.addSelectionListener(new SelectionAdapter()\n\t\t{\n\t\t\tpublic void widgetSelected(SelectionEvent e)\n\t\t\t{\n\t\t\t\tgetTableName();\n\t\t\t}\n\t\t});\n\n\t\t// Set the shell size, based upon previous time...\n\t\tsetSize();\n\n\t\tgetData();\r\n\t\tsetTableFieldCombo();\n\t\tinput.setChanged(changed);\n\n\t\tshell.open();\n\t\twhile (!shell.isDisposed())\n\t\t{\n\t\t\tif (!display.readAndDispatch())\n\t\t\t\tdisplay.sleep();\n\t\t}\n\t\treturn stepname;\n\t}","id":8839,"modified_method":"public String open()\n\t{\n\t\tShell parent = getParent();\n\t\tDisplay display = parent.getDisplay();\n\n\t\tshell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\n \t\tprops.setLook(shell);\n        setShellImage(shell, input);\n\n\t\tModifyListener lsMod = new ModifyListener()\n\t\t{\n\t\t\tpublic void modifyText(ModifyEvent e)\n\t\t\t{\n\t\t\t\tinput.setChanged();\n\t\t\t}\n\t\t};\r\n\t\tModifyListener lsTableMod = new ModifyListener() {\r\n\t\t\tpublic void modifyText(ModifyEvent arg0) {\r\n\t\t\t\tinput.setChanged();\r\n\t\t\t\tsetTableFieldCombo();\r\n\t\t\t}\r\n\t\t};\r\n\t\tSelectionListener lsSelection = new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t{\r\n\t\t\t\tinput.setChanged();\r\n\t\t\t\tsetTableFieldCombo();\r\n\t\t\t}\r\n\t\t};\n\t\tchanged = input.hasChanged();\n\n\t\tFormLayout formLayout = new FormLayout();\n\t\tformLayout.marginWidth = Const.FORM_MARGIN;\n\t\tformLayout.marginHeight = Const.FORM_MARGIN;\n\n\t\tshell.setLayout(formLayout);\n\t\tshell.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.Shell.Title\")); //$NON-NLS-1$\n\n\t\tint middle = props.getMiddlePct();\n\t\tint margin = Const.MARGIN;\n\n\t\t// Stepname line\n\t\twlStepname = new Label(shell, SWT.RIGHT);\n\t\twlStepname.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.Stepname.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlStepname);\n\t\tfdlStepname = new FormData();\n\t\tfdlStepname.left = new FormAttachment(0, 0);\n\t\tfdlStepname.right = new FormAttachment(middle, -margin);\n\t\tfdlStepname.top = new FormAttachment(0, margin);\n\t\twlStepname.setLayoutData(fdlStepname);\n\t\twStepname = new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n\t\twStepname.setText(stepname);\n \t\tprops.setLook(wStepname);\n\t\twStepname.addModifyListener(lsMod);\n\t\tfdStepname = new FormData();\n\t\tfdStepname.left = new FormAttachment(middle, 0);\n\t\tfdStepname.top = new FormAttachment(0, margin);\n\t\tfdStepname.right = new FormAttachment(100, 0);\n\t\twStepname.setLayoutData(fdStepname);\n\n\t\t// Connection line\n\t\twConnection = addConnectionLine(shell, wStepname, middle, margin);\n\t\tif (input.getDatabaseMeta()==null && transMeta.nrDatabases()==1) wConnection.select(0);\n\t\twConnection.addModifyListener(lsMod);\r\n\t\twConnection.addSelectionListener(lsSelection);\n\n        // Schema line...\n        wlSchema=new Label(shell, SWT.RIGHT);\n        wlSchema.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.TargetSchema.Label\")); //$NON-NLS-1$\n        props.setLook(wlSchema);\n        fdlSchema=new FormData();\n        fdlSchema.left = new FormAttachment(0, 0);\n        fdlSchema.right= new FormAttachment(middle, -margin);\n        fdlSchema.top  = new FormAttachment(wConnection, margin*2);\n        wlSchema.setLayoutData(fdlSchema);\r\n        \r\n\t\twbSchema=new Button(shell, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbSchema);\r\n \t\twbSchema.setText(BaseMessages.getString(PKG, \"System.Button.Browse\"));\r\n \t\tfdbSchema=new FormData();\r\n \t\tfdbSchema.top  = new FormAttachment(wConnection, 2*margin);\r\n \t\tfdbSchema.right= new FormAttachment(100, 0);\r\n\t\twbSchema.setLayoutData(fdbSchema);\n\n        wSchema=new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wSchema);\n        wSchema.addModifyListener(lsTableMod);\n        fdSchema=new FormData();\n        fdSchema.left = new FormAttachment(middle, 0);\n        fdSchema.top  = new FormAttachment(wConnection, margin*2);\n        fdSchema.right= new FormAttachment(wbSchema, -margin);\n        wSchema.setLayoutData(fdSchema);\n\n\t\t// Table line...\n\t\twlTable = new Label(shell, SWT.RIGHT);\n\t\twlTable.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.TargetTable.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlTable);\n\t\tfdlTable = new FormData();\n\t\tfdlTable.left = new FormAttachment(0, 0);\n\t\tfdlTable.right = new FormAttachment(middle, -margin);\n\t\tfdlTable.top = new FormAttachment(wbSchema, margin);\n\t\twlTable.setLayoutData(fdlTable);\n\n\t\twbTable = new Button(shell, SWT.PUSH | SWT.CENTER);\n \t\tprops.setLook(wbTable);\n\t\twbTable.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbTable = new FormData();\n\t\tfdbTable.right = new FormAttachment(100, 0);\n\t\tfdbTable.top = new FormAttachment(wbSchema, margin);\n\t\twbTable.setLayoutData(fdbTable);\n\n\t\twTable = new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wTable);\n\t\twTable.addModifyListener(lsTableMod);\n\t\tfdTable = new FormData();\n\t\tfdTable.left = new FormAttachment(middle, 0);\n\t\tfdTable.top = new FormAttachment(wbSchema, margin);\n\t\tfdTable.right = new FormAttachment(wbTable, -margin);\n\t\twTable.setLayoutData(fdTable);\n\n\t\t// Commit line\n\t\twlCommit = new Label(shell, SWT.RIGHT);\n\t\twlCommit.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.CommitSize.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlCommit);\n\t\tfdlCommit = new FormData();\n\t\tfdlCommit.left = new FormAttachment(0, 0);\n\t\tfdlCommit.top = new FormAttachment(wTable, margin);\n\t\tfdlCommit.right = new FormAttachment(middle, -margin);\n\t\twlCommit.setLayoutData(fdlCommit);\n\t\twCommit = new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wCommit);\n\t\twCommit.addModifyListener(lsMod);\n\t\tfdCommit = new FormData();\n\t\tfdCommit.left = new FormAttachment(middle, 0);\n\t\tfdCommit.top = new FormAttachment(wTable, margin);\n\t\tfdCommit.right = new FormAttachment(100, 0);\n\t\twCommit.setLayoutData(fdCommit);\n\n\t\t// UpdateBypassed line\n\t\twlUpdateBypassed = new Label(shell, SWT.RIGHT);\n\t\twlUpdateBypassed.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.UpdateBypassed.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlUpdateBypassed);\n\t\tfdlUpdateBypassed = new FormData();\n\t\tfdlUpdateBypassed.left = new FormAttachment(0, 0);\n\t\tfdlUpdateBypassed.top = new FormAttachment(wCommit, margin);\n\t\tfdlUpdateBypassed.right = new FormAttachment(middle, -margin);\n\t\twlUpdateBypassed.setLayoutData(fdlUpdateBypassed);\n\t\twUpdateBypassed = new Button(shell, SWT.CHECK);\n \t\tprops.setLook(wUpdateBypassed);\n\t\tfdUpdateBypassed = new FormData();\n\t\tfdUpdateBypassed.left = new FormAttachment(middle, 0);\n\t\tfdUpdateBypassed.top = new FormAttachment(wCommit, margin);\n\t\tfdUpdateBypassed.right = new FormAttachment(100, 0);\n\t\twUpdateBypassed.setLayoutData(fdUpdateBypassed);\n\n\t\twlKey = new Label(shell, SWT.NONE);\n\t\twlKey.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.Keys.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlKey);\n\t\tfdlKey = new FormData();\n\t\tfdlKey.left = new FormAttachment(0, 0);\n\t\tfdlKey.top = new FormAttachment(wUpdateBypassed, margin);\n\t\twlKey.setLayoutData(fdlKey);\n\n\t\tint nrKeyCols = 4;\n\t\tint nrKeyRows = (input.getKeyStream() != null ? input.getKeyStream().length : 1);\n\n\t\tciKey = new ColumnInfo[nrKeyCols];\n\t\tciKey[0] = new ColumnInfo(BaseMessages.getString(PKG, \"InsertUpdateDialog.ColumnInfo.TableField\"),  ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciKey[1] = new ColumnInfo(BaseMessages.getString(PKG, \"InsertUpdateDialog.ColumnInfo.Comparator\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"=\", \"= ~NULL\", \"<>\", \"<\", \"<=\", //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$\n\t\t\t\t\">\", \">=\", \"LIKE\", \"BETWEEN\", \"IS NULL\", \"IS NOT NULL\" }); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$\n\t\tciKey[2] = new ColumnInfo(BaseMessages.getString(PKG, \"InsertUpdateDialog.ColumnInfo.StreamField1\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciKey[3] = new ColumnInfo(BaseMessages.getString(PKG, \"InsertUpdateDialog.ColumnInfo.StreamField2\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\ttableFieldColumns.add(ciKey[0]);\n\t\twKey = new TableView(transMeta, shell, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL, ciKey,\n\t\t\t\tnrKeyRows, lsMod, props);\n\n\t\twGet = new Button(shell, SWT.PUSH);\n\t\twGet.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.GetFields.Button\")); //$NON-NLS-1$\n\t\tfdGet = new FormData();\n\t\tfdGet.right = new FormAttachment(100, 0);\n\t\tfdGet.top = new FormAttachment(wlKey, margin);\n\t\twGet.setLayoutData(fdGet);\n\n\t\tfdKey = new FormData();\n\t\tfdKey.left = new FormAttachment(0, 0);\n\t\tfdKey.top = new FormAttachment(wlKey, margin);\n\t\tfdKey.right = new FormAttachment(wGet, -margin);\n\t\tfdKey.bottom = new FormAttachment(wlKey, 190);\n\t\twKey.setLayoutData(fdKey);\n\n\n\t\t// THE BUTTONS\n\t\twOK = new Button(shell, SWT.PUSH);\n\t\twOK.setText(BaseMessages.getString(PKG, \"System.Button.OK\")); //$NON-NLS-1$\n\t\twSQL = new Button(shell, SWT.PUSH);\n\t\twSQL.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.SQL.Button\")); //$NON-NLS-1$\n\t\twCancel = new Button(shell, SWT.PUSH);\n\t\twCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\")); //$NON-NLS-1$\n\n\t\tsetButtonPositions(new Button[] { wOK, wCancel , wSQL }, margin, null);\n\n\t\t\n\t\t// THE UPDATE/INSERT TABLE\n\t\twlReturn = new Label(shell, SWT.NONE);\n\t\twlReturn.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.UpdateFields.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlReturn);\n\t\tfdlReturn = new FormData();\n\t\tfdlReturn.left = new FormAttachment(0, 0);\n\t\tfdlReturn.top = new FormAttachment(wKey, margin);\n\t\twlReturn.setLayoutData(fdlReturn);\n\n\t\tint UpInsCols = 3;\n\t\tint UpInsRows = (input.getUpdateLookup() != null ? input.getUpdateLookup().length : 1);\n\n\t\tciReturn = new ColumnInfo[UpInsCols];\n\t\tciReturn[0] = new ColumnInfo(BaseMessages.getString(PKG, \"InsertUpdateDialog.ColumnInfo.TableField\"),  ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciReturn[1] = new ColumnInfo(BaseMessages.getString(PKG, \"InsertUpdateDialog.ColumnInfo.StreamField\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciReturn[2] = new ColumnInfo(BaseMessages.getString(PKG, \"InsertUpdateDialog.ColumnInfo.Update\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] {\"Y\",\"N\"}); //$NON-NLS-1$\n\t\ttableFieldColumns.add(ciReturn[0]);\n\t\twReturn = new TableView(transMeta, shell, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL,\n\t\t\t\tciReturn, UpInsRows, lsMod, props);\n\n\t\twGetLU = new Button(shell, SWT.PUSH);\n\t\twGetLU.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.GetAndUpdateFields.Label\")); //$NON-NLS-1$\n\t\tfdGetLU = new FormData();\n\t\tfdGetLU.top   = new FormAttachment(wlReturn, margin);\n\t\tfdGetLU.right = new FormAttachment(100, 0);\n\t\twGetLU.setLayoutData(fdGetLU);\r\n\t\t\r\n\t\t\r\n\t\twDoMapping = new Button(shell, SWT.PUSH);\r\n\t\twDoMapping.setText(BaseMessages.getString(PKG, \"InsertUpdateDialog.EditMapping.Label\")); //$NON-NLS-1$\r\n\t\tfdDoMapping = new FormData();\r\n\t\tfdDoMapping.top   = new FormAttachment(wGetLU, margin);\r\n\t\tfdDoMapping.right = new FormAttachment(100, 0);\r\n\t\twDoMapping.setLayoutData(fdDoMapping);\r\n\r\n\t\twDoMapping.addListener(SWT.Selection, new Listener() { \tpublic void handleEvent(Event arg0) { generateMappings();}});\r\n\n\n\t\tfdReturn = new FormData();\n\t\tfdReturn.left = new FormAttachment(0, 0);\n\t\tfdReturn.top = new FormAttachment(wlReturn, margin);\n\t\tfdReturn.right = new FormAttachment(wGetLU, -margin);\n\t\tfdReturn.bottom = new FormAttachment(wOK, -2*margin);\n\t\twReturn.setLayoutData(fdReturn);\r\n\t\t\r\n\t\t\r\n\t    // \r\n        // Search the fields in the background\r\n        //\r\n        \r\n        final Runnable runnable = new Runnable()\r\n        {\r\n            public void run()\r\n            {\r\n                StepMeta stepMeta = transMeta.findStep(stepname);\r\n                if (stepMeta!=null)\r\n                {\r\n                    try\r\n                    {\r\n                    \tRowMetaInterface row = transMeta.getPrevStepFields(stepMeta);\r\n                        \r\n                        // Remember these fields...\r\n                        for (int i=0;i<row.size();i++)\r\n                        {\r\n                        \tinputFields.put(row.getValueMeta(i).getName(), Integer.valueOf(i));\r\n                        }\r\n                        \r\n                        setComboBoxes(); \r\n                    }\r\n                    catch(KettleException e)\r\n                    {\r\n                        logError(BaseMessages.getString(PKG, \"System.Dialog.GetFieldsFailed.Message\"));\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        new Thread(runnable).start();\n\t\t\n\t\t// Add listeners\n\t\tlsOK = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tok();\n\t\t\t}\n\t\t};\n\t\tlsGet = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tget();\n\t\t\t}\n\t\t};\n\t\tlsGetLU = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tgetUpdate();\n\t\t\t}\n\t\t};\n\t\tlsSQL = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tcreate();\n\t\t\t}\n\t\t};\n\t\tlsCancel = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tcancel();\n\t\t\t}\n\t\t};\n\n\t\twOK.addListener(SWT.Selection, lsOK);\n\t\twGet.addListener(SWT.Selection, lsGet);\n\t\twGetLU.addListener(SWT.Selection, lsGetLU);\n\t\twSQL.addListener(SWT.Selection, lsSQL);\n\t\twCancel.addListener(SWT.Selection, lsCancel);\n\n\t\tlsDef = new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\n\n\t\twStepname.addSelectionListener(lsDef);\n        wSchema.addSelectionListener(lsDef);\n        wTable.addSelectionListener(lsDef);\n        wCommit.addSelectionListener(lsDef);\n\n\t\t// Detect X or ALT-F4 or something that kills this window...\n\t\tshell.addShellListener(new ShellAdapter()\n\t\t{\n\t\t\tpublic void shellClosed(ShellEvent e)\n\t\t\t{\n\t\t\t\tcancel();\n\t\t\t}\n\t\t});\n\n\t\twbSchema.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tgetSchemaNames();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\n\t\twbTable.addSelectionListener(new SelectionAdapter()\n\t\t{\n\t\t\tpublic void widgetSelected(SelectionEvent e)\n\t\t\t{\n\t\t\t\tgetTableName();\n\t\t\t}\n\t\t});\n\n\t\t// Set the shell size, based upon previous time...\n\t\tsetSize();\n\n\t\tgetData();\r\n\t\tsetTableFieldCombo();\n\t\tinput.setChanged(changed);\n\n\t\tshell.open();\n\t\twhile (!shell.isDisposed())\n\t\t{\n\t\t\tif (!display.readAndDispatch())\n\t\t\t\tdisplay.sleep();\n\t\t}\n\t\treturn stepname;\n\t}","commit_id":"416ff318ea00c63007336f8388c2292cf5131f9f","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private synchronized Object[] lookupValues(RowMetaInterface rowMeta, Object[] row) throws KettleException\n\t{\n        Object[] outputRow=row;\r\n        Object[] add;\r\n        \n        // Create the output row and copy the input values\n        if (!Const.isEmpty( meta.getIgnoreFlagField())) // add flag field!\n        {\n    \t\toutputRow = new Object[data.outputRowMeta.size()];\n            for (int i=0;i<rowMeta.size();i++)\n            {\n                outputRow[i] = row[i];\n            }\n        }\n        \n        // OK, now do the lookup.\n        // We need the lookupvalues for that.\n        Object[] lookupRow = new Object[data.lookupParameterRowMeta.size()];\n        int lookupIndex = 0;\n        \n\t\tfor (int i=0;i<meta.getKeyStream().length;i++)\n\t\t{\n\t\t\tif (data.keynrs[i]>=0)\n\t\t\t{\n\t\t\t\tlookupRow[lookupIndex] = row[ data.keynrs[i] ];\n                lookupIndex++;\n\t\t\t}\n\t\t\tif (data.keynrs2[i]>=0)\n\t\t\t{\n                lookupRow[lookupIndex] = row[ data.keynrs2[i] ];\n                lookupIndex++;\n\t\t\t}\n\t\t}\n\t\tRowMetaInterface returnRowMeta=null;;\r\n\t\tif(!meta.isSkipLookup())\r\n\t\t{\n\t\t\tdata.db.setValues(data.lookupParameterRowMeta, lookupRow, data.prepStatementLookup);\n\t\t\tif (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"Update.Log.ValuesSetForLookup\", data.lookupParameterRowMeta.getString(lookupRow), rowMeta.getString(row))); //$NON-NLS-1$ //$NON-NLS-2$\r\n\t\t\tadd = data.db.getLookup(data.prepStatementLookup);\r\n\t\t\treturnRowMeta = data.db.getReturnRowMeta();\r\n\t\t}else add=null;\n\t\t\t\r\n\t\tincrementLinesInput();\n\t\t\r\n\t\tif (add==null && !meta.isSkipLookup()) \n\t\t{\n\t\t\t/* nothing was found: throw error!\n\t\t\t */\n            if (!meta.isErrorIgnored())\n            {\n                if (getStepMeta().isDoingErrorHandling())\n                {\n                    outputRow=null;\n                    if (data.stringErrorKeyNotFound==null)\n                    {\n                        data.stringErrorKeyNotFound=BaseMessages.getString(PKG, \"Update.Exception.KeyCouldNotFound\")+data.lookupParameterRowMeta.getString(lookupRow);\n                        data.stringFieldnames=\"\";\n                        for (int i=0;i<data.lookupParameterRowMeta.size();i++) \n                        {\n                            if (i>0) data.stringFieldnames+=\", \";\n                            data.stringFieldnames+=data.lookupParameterRowMeta.getValueMeta(i).getName();\n                        }\n                    }\n                    putError(rowMeta, row, 1L, data.stringErrorKeyNotFound, data.stringFieldnames, \"UPD001\");\n                }\n                else\n                {\n                    throw new KettleDatabaseException(BaseMessages.getString(PKG, \"Update.Exception.KeyCouldNotFound\")+data.lookupParameterRowMeta.getString(lookupRow)); //$NON-NLS-1$\n                }\n            }\n            else\n            {\n                if (log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"Update.Log.KeyCouldNotFound\")+data.lookupParameterRowMeta.getString(lookupRow)); //$NON-NLS-1$\n                if (!Const.isEmpty( meta.getIgnoreFlagField())) // set flag field!\n                {\n                    outputRow[rowMeta.size()] = Boolean.FALSE;\n                }\n            }\n\t\t}\n\t\telse\n\t\t{\t\t\r\n\t\t\tif(!meta.isSkipLookup()) \r\n\t\t\t{\r\n\t\t\t\tif (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"Update.Log.FoundRow\")+data.lookupReturnRowMeta.getString(add)); //$NON-NLS-1$\r\n\t\t\t}\n\t\t\t\n\t\t\t/* Row was found:\n\t\t\t *  \n\t\t\t * UPDATE row or do nothing?\n\t\t\t *\n\t\t\t */\n\t\t\tboolean update = false;\r\n\t\t\t\r\n\t\t\tif(meta.isSkipLookup()) \r\n\t\t\t{\r\n\t\t\t\t// Update fields directly\r\n\t\t\t\tupdate=true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\n\t\t\t\tfor (int i=0;i<data.valuenrs.length;i++)\n\t\t\t\t{\n\t                ValueMetaInterface valueMeta = rowMeta.getValueMeta( data.valuenrs[i] );\n\t\t\t\t\tObject rowvalue = row[ data.valuenrs[i] ];\r\n\t\t\t\t\tValueMetaInterface returnValueMeta = returnRowMeta.getValueMeta( i );\n\t\t\t\t\tObject retvalue = add[ i ];\n\t                \n\t                if ( valueMeta.compare(rowvalue, returnValueMeta, retvalue)!=0 )\n\t\t\t\t\t{\n\t\t\t\t\t\tupdate=true;\n\t\t\t\t\t}\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\n\t\t\tif (update)\n\t\t\t{\n                // Create the update row...\n                Object[] updateRow = new Object[data.updateParameterRowMeta.size()];\n                for (int i=0;i<data.valuenrs.length;i++)\n                {\n                    updateRow[i] = row[ data.valuenrs[i] ]; // the setters\n                }\n                // add the where clause parameters, they are exactly the same for lookup and update\n                for (int i=0;i<lookupRow.length;i++)\n                {\n                    updateRow[data.valuenrs.length+i] = lookupRow[i];\n                }\n                \n\t\t\t\tif (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"Update.Log.UpdateRow\")+data.lookupParameterRowMeta.getString(lookupRow)); //$NON-NLS-1$\n\t\t\t\tdata.db.setValues(data.updateParameterRowMeta, updateRow, data.prepStatementUpdate);\n\t\t\t\tdata.db.insertRow(data.prepStatementUpdate);\n\t\t\t\tincrementLinesUpdated();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tincrementLinesSkipped();\n\t\t\t}\n            \n            if (!Const.isEmpty(meta.getIgnoreFlagField())) // add flag field!\n            {\n            \toutputRow[rowMeta.size()] = Boolean.TRUE;\n            }\n\t\t}\n        \n        return outputRow;\n\t}","id":8840,"modified_method":"private synchronized Object[] lookupValues(RowMetaInterface rowMeta, Object[] row) throws KettleException\n\t{\n        Object[] outputRow=row;\r\n        Object[] add;\r\n        \n        // Create the output row and copy the input values\n        if (!Const.isEmpty( meta.getIgnoreFlagField())) // add flag field!\n        {\n    \t\toutputRow = new Object[data.outputRowMeta.size()];\n            for (int i=0;i<rowMeta.size();i++)\n            {\n                outputRow[i] = row[i];\n            }\n        }\n        \n        // OK, now do the lookup.\n        // We need the lookupvalues for that.\n        Object[] lookupRow = new Object[data.lookupParameterRowMeta.size()];\n        int lookupIndex = 0;\n        \n\t\tfor (int i=0;i<data.keynrs.length;i++)\n\t\t{\n\t\t\tif (data.keynrs[i]>=0)\n\t\t\t{\n\t\t\t\tlookupRow[lookupIndex] = row[ data.keynrs[i] ];\n                lookupIndex++;\n\r\n\t\t\t}\n\t\t\tif (data.keynrs2[i]>=0)\n\t\t\t{\n                lookupRow[lookupIndex] = row[ data.keynrs2[i] ];\n                lookupIndex++;\n\t\t\t}\r\n\t\t}\n\t\tRowMetaInterface returnRowMeta=null;;\r\n\t\tif(!meta.isSkipLookup())\r\n\t\t{\n\t\t\tdata.db.setValues(data.lookupParameterRowMeta, lookupRow, data.prepStatementLookup);\n\t\t\tif (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"Update.Log.ValuesSetForLookup\", data.lookupParameterRowMeta.getString(lookupRow), rowMeta.getString(row))); //$NON-NLS-1$ //$NON-NLS-2$\r\n\t\t\tadd = data.db.getLookup(data.prepStatementLookup);\r\n\t\t\treturnRowMeta = data.db.getReturnRowMeta();\r\n\t\t}else add=null;\n\t\t\t\r\n\t\tincrementLinesInput();\n\t\t\r\n\t\tif (add==null && !meta.isSkipLookup()) \n\t\t{\n\t\t\t/* nothing was found: throw error!\n\t\t\t */\n            if (!meta.isErrorIgnored())\n            {\n                if (getStepMeta().isDoingErrorHandling())\n                {\n                    outputRow=null;\n                    if (data.stringErrorKeyNotFound==null)\n                    {\n                        data.stringErrorKeyNotFound=BaseMessages.getString(PKG, \"Update.Exception.KeyCouldNotFound\")+data.lookupParameterRowMeta.getString(lookupRow);\n                        data.stringFieldnames=\"\";\n                        for (int i=0;i<data.lookupParameterRowMeta.size();i++) \n                        {\n                            if (i>0) data.stringFieldnames+=\", \";\n                            data.stringFieldnames+=data.lookupParameterRowMeta.getValueMeta(i).getName();\n                        }\n                    }\n                    putError(rowMeta, row, 1L, data.stringErrorKeyNotFound, data.stringFieldnames, \"UPD001\");\n                }\n                else\n                {\n                    throw new KettleDatabaseException(BaseMessages.getString(PKG, \"Update.Exception.KeyCouldNotFound\")+data.lookupParameterRowMeta.getString(lookupRow)); //$NON-NLS-1$\n                }\n            }\n            else\n            {\n                if (log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"Update.Log.KeyCouldNotFound\")+data.lookupParameterRowMeta.getString(lookupRow)); //$NON-NLS-1$\n                if (!Const.isEmpty( meta.getIgnoreFlagField())) // set flag field!\n                {\n                    outputRow[rowMeta.size()] = Boolean.FALSE;\n                }\n            }\n\t\t}\n\t\telse\n\t\t{\t\t\r\n\t\t\tif(!meta.isSkipLookup()) \r\n\t\t\t{\r\n\t\t\t\tif (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"Update.Log.FoundRow\")+data.lookupReturnRowMeta.getString(add)); //$NON-NLS-1$\r\n\t\t\t}\n\t\t\t\n\t\t\t/* Row was found:\n\t\t\t *  \n\t\t\t * UPDATE row or do nothing?\n\t\t\t *\n\t\t\t */\n\t\t\tboolean update = false;\r\n\t\t\t\r\n\t\t\tif(meta.isSkipLookup()) \r\n\t\t\t{\r\n\t\t\t\t// Update fields directly\r\n\t\t\t\tupdate=true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\n\t\t\t\tfor (int i=0;i<data.valuenrs.length;i++)\n\t\t\t\t{\n\t                ValueMetaInterface valueMeta = rowMeta.getValueMeta( data.valuenrs[i] );\n\t\t\t\t\tObject rowvalue = row[ data.valuenrs[i] ];\r\n\t\t\t\t\tValueMetaInterface returnValueMeta = returnRowMeta.getValueMeta( i );\n\t\t\t\t\tObject retvalue = add[ i ];\n\t                \n\t                if ( valueMeta.compare(rowvalue, returnValueMeta, retvalue)!=0 )\n\t\t\t\t\t{\n\t\t\t\t\t\tupdate=true;\n\t\t\t\t\t}\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\n\t\t\tif (update)\n\t\t\t{\n                // Create the update row...\n                Object[] updateRow = new Object[data.updateParameterRowMeta.size()];\n                for (int i=0;i<data.valuenrs.length;i++)\n                {\n                    updateRow[i] = row[ data.valuenrs[i] ]; // the setters\n                }\n                // add the where clause parameters, they are exactly the same for lookup and update\n                for (int i=0;i<lookupRow.length;i++)\n                {\n                    updateRow[data.valuenrs.length+i] = lookupRow[i];\n                }\n                \n\t\t\t\tif (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"Update.Log.UpdateRow\")+data.lookupParameterRowMeta.getString(lookupRow)); //$NON-NLS-1$\n\t\t\t\tdata.db.setValues(data.updateParameterRowMeta, updateRow, data.prepStatementUpdate);\n\t\t\t\tdata.db.insertRow(data.prepStatementUpdate);\n\t\t\t\tincrementLinesUpdated();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tincrementLinesSkipped();\n\t\t\t}\n            \n            if (!Const.isEmpty(meta.getIgnoreFlagField())) // add flag field!\n            {\n            \toutputRow[rowMeta.size()] = Boolean.TRUE;\n            }\n\t\t}\n        \n        return outputRow;\n\t}","commit_id":"d4db75c428c70eb840d5948a388e73d5942154b9","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n\t{\n\t\tmeta=(UpdateMeta)smi;\n\t\tdata=(UpdateData)sdi;\n\t\t\n\t\tboolean sendToErrorRow=false;\n\t\tString errorMessage = null;\n\n\t\tObject[] r=getRow();       // Get row from input rowset & set row busy!\n\t\tif (r==null)  // no more input to be expected...\n\t\t{\n\t\t\tsetOutputDone();\n\t\t\treturn false;\n\t\t}\n        \n        if (first)\n        {\n            first=false;\n            \n            // What's the output Row format?\n            data.outputRowMeta = getInputRowMeta().clone();\n            meta.getFields(data.outputRowMeta, getStepname(), null, null, this);\n            \n            data.schemaTable = meta.getDatabaseMeta().getQuotedSchemaTableCombination(environmentSubstitute(meta.getSchemaName()), \n            \t\t                                                                  environmentSubstitute(meta.getTableName()));\n                        \n            // lookup the values!\n            if (log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"Update.Log.CheckingRow\")+getInputRowMeta().getString(r)); //$NON-NLS-1$\n            \n            data.keynrs  = new int[meta.getKeyStream().length];\n            data.keynrs2 = new int[meta.getKeyStream().length];\n            for (int i=0;i<meta.getKeyStream().length;i++)\n            {\n                data.keynrs[i]=getInputRowMeta().indexOfValue(meta.getKeyStream()[i]);\n                if (data.keynrs[i]<0 &&  // couldn't find field!\n                    !\"IS NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]) &&   // No field needed! //$NON-NLS-1$\n                    !\"IS NOT NULL\".equalsIgnoreCase(meta.getKeyCondition()[i])  // No field needed! //$NON-NLS-1$\n                   )\n                {\n                    throw new KettleStepException(BaseMessages.getString(PKG, \"Update.Exception.FieldRequired\",meta.getKeyStream()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n                }\n                data.keynrs2[i]=getInputRowMeta().indexOfValue(meta.getKeyStream2()[i]);\n                if (data.keynrs2[i]<0 &&  // couldn't find field!\n                    \"BETWEEN\".equalsIgnoreCase(meta.getKeyCondition()[i])   // 2 fields needed! //$NON-NLS-1$\n                   )\n                {\n                    throw new KettleStepException(BaseMessages.getString(PKG, \"Update.Exception.FieldRequired\",meta.getKeyStream2()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n                }\n                \n                if (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"Update.Log.FieldHasDataNumbers\",meta.getKeyStream()[i])+\"\"+data.keynrs[i]); //$NON-NLS-1$ //$NON-NLS-2$\n            }\n            // Cache the position of the compare fields in Row row\n            //\n            data.valuenrs = new int[meta.getUpdateLookup().length];\n            for (int i=0;i<meta.getUpdateLookup().length;i++)\n            {\n                data.valuenrs[i]=getInputRowMeta().indexOfValue(meta.getUpdateStream()[i]);\n                if (data.valuenrs[i]<0)  // couldn't find field!\n                {\n                    throw new KettleStepException(BaseMessages.getString(PKG, \"Update.Exception.FieldRequired\",meta.getUpdateStream()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n                }\n                if (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"Update.Log.FieldHasDataNumbers\",meta.getUpdateStream()[i])+\"\"+data.valuenrs[i]); //$NON-NLS-1$ //$NON-NLS-2$\n            }\n            if(meta.isSkipLookup())\r\n            {\r\n            \t// We skip lookup\r\n            \t// but we need fields for update\r\n            \t data.lookupParameterRowMeta = new RowMeta();\r\n\t        \t for (int i = 0; i < meta.getKeyLookup().length; i++)\r\n\t             {\r\n\t                 if (\"BETWEEN\".equalsIgnoreCase(meta.getKeyCondition()[i]))\r\n\t                 {\r\n\t                     data.lookupParameterRowMeta.addValueMeta( getInputRowMeta().searchValueMeta(meta.getKeyStream()[i]) );\r\n\t                     data.lookupParameterRowMeta.addValueMeta( getInputRowMeta().searchValueMeta(meta.getKeyStream2()[i]) );\r\n\t                 }\r\n\t                 else\r\n\t                 {\r\n\t                     if (!\"IS NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]) && !\"IS NOT NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]))\r\n\t                     {\r\n\t                         data.lookupParameterRowMeta.addValueMeta( getInputRowMeta().searchValueMeta(meta.getKeyStream()[i]) );\r\n\t                     }\r\n\t                 }\r\n\t             }\r\n            }\r\n            else\r\n            {\r\n            \tsetLookup(getInputRowMeta());\r\n            }\r\n            prepareUpdate(getInputRowMeta());\n        }\n        \n        try\n        {\n\t\t\tObject[] outputRow = lookupValues(getInputRowMeta(), r); // add new values to the row in rowset[0].\n\t        if (outputRow!=null) putRow(data.outputRowMeta, outputRow); // copy non-ignored rows to output rowset(s);\n\t        if (checkFeedback(getLinesRead())) \r\n\t        {\r\n\t        \tif(log.isBasic()) logBasic(BaseMessages.getString(PKG, \"Update.Log.LineNumber\")+getLinesRead()); //$NON-NLS-1$\r\n\t        }\n        }\n        catch(KettleException e)\n\t\t{\n\t\t\tif (getStepMeta().isDoingErrorHandling())\n\t        {\n                sendToErrorRow = true;\n                errorMessage = e.toString();\n\t        }\n\t        else\n\t        {\n\t\t\t\tlogError(BaseMessages.getString(PKG, \"Update.Log.ErrorInStep\"), e); //$NON-NLS-1$\n\t\t\t\tsetErrors(1);\n\t\t\t\tstopAll();\n\t\t\t\tsetOutputDone();  // signal end to receiver(s)\n\t\t\t\treturn false;\n\t        }\n\t\t\t \n\t\t\t if (sendToErrorRow)\n\t         {\n\t\t\t\t // Simply add this row to the error row\n\t             putError(getInputRowMeta(), r, 1, errorMessage, null, \"UPD001\");\n\t         }\n\t\t}\n\t\n\t\treturn true;\n\t}","id":8841,"modified_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n\t{\n\t\tmeta=(UpdateMeta)smi;\n\t\tdata=(UpdateData)sdi;\n\t\t\n\t\tboolean sendToErrorRow=false;\n\t\tString errorMessage = null;\n\n\t\tObject[] r=getRow();       // Get row from input rowset & set row busy!\n\t\tif (r==null)  // no more input to be expected...\n\t\t{\n\t\t\tsetOutputDone();\n\t\t\treturn false;\n\t\t}\n        \n        if (first)\n        {\n            first=false;\n            \n            // What's the output Row format?\n            data.outputRowMeta = getInputRowMeta().clone();\n            meta.getFields(data.outputRowMeta, getStepname(), null, null, this);\n            \n            data.schemaTable = meta.getDatabaseMeta().getQuotedSchemaTableCombination(environmentSubstitute(meta.getSchemaName()), \n            \t\t                                                                  environmentSubstitute(meta.getTableName()));\n                        \n            // lookup the values!\n            if (log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"Update.Log.CheckingRow\")+getInputRowMeta().getString(r)); //$NON-NLS-1$\n            \r\n            ArrayList<Integer> keynrs = new ArrayList<Integer>(meta.getKeyStream().length);\r\n            ArrayList<Integer> keynrs2 = new ArrayList<Integer>(meta.getKeyStream().length);\r\n            \n             \n            for (int i=0;i<meta.getKeyStream().length;i++)\n            {\n                int keynr=getInputRowMeta().indexOfValue(meta.getKeyStream()[i]);\r\n                \r\n                if (keynr<0 &&  // couldn't find field!\n                    !\"IS NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]) &&   // No field needed! //$NON-NLS-1$\n                    !\"IS NOT NULL\".equalsIgnoreCase(meta.getKeyCondition()[i])  // No field needed! //$NON-NLS-1$\n                   )\n                {\n                    throw new KettleStepException(BaseMessages.getString(PKG, \"Update.Exception.FieldRequired\",meta.getKeyStream()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n                }\r\n                keynrs.add(keynr);\r\n                \r\n                // this operator needs two bindings\r\n                if (\"= ~NULL\".equalsIgnoreCase(meta.getKeyCondition()[i])){\r\n                \tkeynrs.add(keynr);\r\n                \tkeynrs2.add(-1);\r\n                }\r\n                \n                int keynr2=getInputRowMeta().indexOfValue(meta.getKeyStream2()[i]);\n                if (keynr2<0 &&  // couldn't find field!\n                    \"BETWEEN\".equalsIgnoreCase(meta.getKeyCondition()[i])   // 2 fields needed! //$NON-NLS-1$\n                   )\n                {\n                    throw new KettleStepException(BaseMessages.getString(PKG, \"Update.Exception.FieldRequired\",meta.getKeyStream2()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n                }\r\n                keynrs2.add(keynr2);\n\r\n                if (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"Update.Log.FieldHasDataNumbers\",meta.getKeyStream()[i])+\"\"+keynrs.get(keynrs.size()-1)); //$NON-NLS-1$ //$NON-NLS-2$\n            }\r\n            \r\n            data.keynrs  = ArrayUtils.toPrimitive(keynrs.toArray(new Integer[0]));\r\n            data.keynrs2 = ArrayUtils.toPrimitive(keynrs2.toArray(new Integer[0]));\r\n            \n            // Cache the position of the compare fields in Row row\n            //\n            data.valuenrs = new int[meta.getUpdateLookup().length];\n            for (int i=0;i<meta.getUpdateLookup().length;i++)\n            {\n                data.valuenrs[i]=getInputRowMeta().indexOfValue(meta.getUpdateStream()[i]);\n                if (data.valuenrs[i]<0)  // couldn't find field!\n                {\n                    throw new KettleStepException(BaseMessages.getString(PKG, \"Update.Exception.FieldRequired\",meta.getUpdateStream()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n                }\n                if (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"Update.Log.FieldHasDataNumbers\",meta.getUpdateStream()[i])+\"\"+data.valuenrs[i]); //$NON-NLS-1$ //$NON-NLS-2$\n            }\n            if(meta.isSkipLookup())\r\n            {\r\n            \t// We skip lookup\r\n            \t// but we need fields for update\r\n            \t data.lookupParameterRowMeta = new RowMeta();\r\n\t        \t for (int i = 0; i < meta.getKeyLookup().length; i++)\r\n\t             {\r\n\t                 if (\"BETWEEN\".equalsIgnoreCase(meta.getKeyCondition()[i]))\r\n\t                 {\r\n\t                     data.lookupParameterRowMeta.addValueMeta( getInputRowMeta().searchValueMeta(meta.getKeyStream()[i]) );\r\n\t                     data.lookupParameterRowMeta.addValueMeta( getInputRowMeta().searchValueMeta(meta.getKeyStream2()[i]) );\r\n\t                 }\r\n\t                 else\r\n\t                 {\r\n\t                     if (\"= ~NULL\".equalsIgnoreCase(meta.getKeyCondition()[i])){\r\n\t                    \t data.lookupParameterRowMeta.addValueMeta( getInputRowMeta().searchValueMeta(meta.getKeyStream()[i]) );\r\n\t                    \t data.lookupParameterRowMeta.addValueMeta( getInputRowMeta().searchValueMeta(meta.getKeyStream()[i]).clone() );\r\n\t                     }\r\n\t                     else if (!\"IS NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]) && !\"IS NOT NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]))\r\n\t                     {\r\n\t                         data.lookupParameterRowMeta.addValueMeta( getInputRowMeta().searchValueMeta(meta.getKeyStream()[i]) );\r\n\t                     }\r\n\t                     \r\n\t                 }\r\n\t             }\r\n            }\r\n            else\r\n            {\r\n            \tsetLookup(getInputRowMeta());\r\n            }\r\n            prepareUpdate(getInputRowMeta());\n        }\n        \n        try\n        {\n\t\t\tObject[] outputRow = lookupValues(getInputRowMeta(), r); // add new values to the row in rowset[0].\n\t        if (outputRow!=null) putRow(data.outputRowMeta, outputRow); // copy non-ignored rows to output rowset(s);\n\t        if (checkFeedback(getLinesRead())) \r\n\t        {\r\n\t        \tif(log.isBasic()) logBasic(BaseMessages.getString(PKG, \"Update.Log.LineNumber\")+getLinesRead()); //$NON-NLS-1$\r\n\t        }\n        }\n        catch(KettleException e)\n\t\t{\n\t\t\tif (getStepMeta().isDoingErrorHandling())\n\t        {\n                sendToErrorRow = true;\n                errorMessage = e.toString();\n\t        }\n\t        else\n\t        {\n\t\t\t\tlogError(BaseMessages.getString(PKG, \"Update.Log.ErrorInStep\"), e); //$NON-NLS-1$\n\t\t\t\tsetErrors(1);\n\t\t\t\tstopAll();\n\t\t\t\tsetOutputDone();  // signal end to receiver(s)\n\t\t\t\treturn false;\n\t        }\n\t\t\t \n\t\t\t if (sendToErrorRow)\n\t         {\n\t\t\t\t // Simply add this row to the error row\n\t             putError(getInputRowMeta(), r, 1, errorMessage, null, \"UPD001\");\n\t         }\n\t\t}\n\t\n\t\treturn true;\n\t}","commit_id":"d4db75c428c70eb840d5948a388e73d5942154b9","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void prepareUpdate(RowMetaInterface rowMeta) throws KettleDatabaseException\n    {\n        DatabaseMeta databaseMeta = meta.getDatabaseMeta();\n        data.updateParameterRowMeta = new RowMeta();\n        \n        String sql = \"UPDATE \" + data.schemaTable + Const.CR;\n        sql += \"SET \";\n\n        for (int i=0;i<meta.getUpdateLookup().length;i++)\n        {\n            if (i!=0) sql+= \",   \";\n            sql += databaseMeta.quoteField(meta.getUpdateLookup()[i]);\n            sql += \" = ?\" + Const.CR;\n            data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getUpdateStream()[i]) );\n        }\n\n        sql += \"WHERE \";\n\n        for (int i=0;i<meta.getKeyLookup().length;i++)\n        {\n            if (i!=0) sql += \"AND   \";\n            sql += databaseMeta.quoteField(meta.getKeyLookup()[i]);\n            if (\"BETWEEN\".equalsIgnoreCase(meta.getKeyCondition()[i]))\n            {\n                sql += \" BETWEEN ? AND ? \";\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream2()[i]) );\n            }\n            else\n            if (\"IS NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]) || \"IS NOT NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]))\n            {\n                sql += \" \"+meta.getKeyCondition()[i]+\" \";\n            }\n            else\n            {\n                sql += \" \"+meta.getKeyCondition()[i]+\" ? \";\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\n            }\n        }\n\n        try\n        {            \n        \tif(log.isDetailed()) logDetailed(\"Setting update preparedStatement to [\"+sql+\"]\");\n            data.prepStatementUpdate=data.db.getConnection().prepareStatement(databaseMeta.stripCR(sql));\n        }\n        catch(SQLException ex) \n        {\n            throw new KettleDatabaseException(\"Unable to prepare statement for SQL statement [\" + sql + \"]\", ex);\n        }\n    }","id":8842,"modified_method":"public void prepareUpdate(RowMetaInterface rowMeta) throws KettleDatabaseException\n    {\n        DatabaseMeta databaseMeta = meta.getDatabaseMeta();\n        data.updateParameterRowMeta = new RowMeta();\n        \n        String sql = \"UPDATE \" + data.schemaTable + Const.CR;\n        sql += \"SET \";\n\n        for (int i=0;i<meta.getUpdateLookup().length;i++)\n        {\n            if (i!=0) sql+= \",   \";\n            sql += databaseMeta.quoteField(meta.getUpdateLookup()[i]);\n            sql += \" = ?\" + Const.CR;\n            data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getUpdateStream()[i]) );\n        }\n\n        sql += \"WHERE \";\n\n        for (int i=0;i<meta.getKeyLookup().length;i++)\n        {\n            if (i!=0) sql += \"AND   \";\r\n            sql += \" ( ( \";\n            sql += databaseMeta.quoteField(meta.getKeyLookup()[i]);\n            if (\"BETWEEN\".equalsIgnoreCase(meta.getKeyCondition()[i]))\n            {\n                sql += \" BETWEEN ? AND ? \";\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream2()[i]) );\n            }\n            else if (\"IS NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]) || \"IS NOT NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]))\n            {\n                sql += \" \"+meta.getKeyCondition()[i]+\" \";\n            }\r\n            else if (\"= ~NULL\".equalsIgnoreCase(meta.getKeyCondition()[i])){\r\n            \t\r\n            \tsql += \" IS NULL AND \";\r\n                \r\n            \tif (databaseMeta.requiresCastToVariousForIsNull()) {\r\n                    sql += \"CAST(? AS VARCHAR(256)) IS NULL\";\r\n                }\r\n                else{\r\n                    sql += \"? IS NULL\";\r\n                }\r\n            \t// null check\r\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\r\n                sql += \" ) OR ( \"+ databaseMeta.quoteField(meta.getKeyLookup()[i])+\" = ?\";\r\n                // equality check, cloning so auto-rename because of adding same fieldname does not cause problems\r\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]).clone() );\r\n            \t\r\n            }            \n            else\n            {\n                sql += \" \"+meta.getKeyCondition()[i]+\" ? \";\n                data.updateParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\n            }\r\n            sql += \" ) ) \";\n        }\n        try\n        {            \n        \tif(log.isDetailed()) logDetailed(\"Setting update preparedStatement to [\"+sql+\"]\");\n            data.prepStatementUpdate=data.db.getConnection().prepareStatement(databaseMeta.stripCR(sql));\n        }\n        catch(SQLException ex) \n        {\n            throw new KettleDatabaseException(\"Unable to prepare statement for SQL statement [\" + sql + \"]\", ex);\n        }\n    }","commit_id":"d4db75c428c70eb840d5948a388e73d5942154b9","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void setLookup(RowMetaInterface rowMeta) throws KettleDatabaseException\n    {\n        data.lookupParameterRowMeta = new RowMeta();\n        data.lookupReturnRowMeta = new RowMeta();\n        \n        DatabaseMeta databaseMeta = meta.getDatabaseMeta();\n        \n        String sql = \"SELECT \";\n\n        for (int i = 0; i < meta.getUpdateLookup().length; i++)\n        {\n            if (i != 0) sql += \", \";\n            sql += databaseMeta.quoteField(meta.getUpdateLookup()[i]);\n            data.lookupReturnRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getUpdateStream()[i]) );\n        }\n\n        sql += \" FROM \" + data.schemaTable + \" WHERE \";\n\n        for (int i = 0; i < meta.getKeyLookup().length; i++)\n        {\n            if (i != 0) sql += \" AND \";\n            sql += databaseMeta.quoteField(meta.getKeyLookup()[i]);\n            if (\"BETWEEN\".equalsIgnoreCase(meta.getKeyCondition()[i]))\n            {\n                sql += \" BETWEEN ? AND ? \";\n                data.lookupParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\n                data.lookupParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream2()[i]) );\n            }\n            else\n            {\n                if (\"IS NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]) || \"IS NOT NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]))\n                {\n                    sql += \" \" + meta.getKeyCondition()[i] + \" \";\n                }\n                else\n                {\n                    sql += \" \" + meta.getKeyCondition()[i] + \" ? \";\n                    data.lookupParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\n                }\n            }\n        }\n        \n        try\n        {\n            if(log.isDetailed()) logDetailed(\"Setting preparedStatement to [\" + sql + \"]\");\n            data.prepStatementLookup = data.db.getConnection().prepareStatement(databaseMeta.stripCR(sql));\n        }\n        catch (SQLException ex)\n        {\n            throw new KettleDatabaseException(\"Unable to prepare statement for SQL statement [\" + sql + \"]\", ex);\n        }\r\n        \n    }","id":8843,"modified_method":"public void setLookup(RowMetaInterface rowMeta) throws KettleDatabaseException\n    {\n        data.lookupParameterRowMeta = new RowMeta();\n        data.lookupReturnRowMeta = new RowMeta();\n        \n        DatabaseMeta databaseMeta = meta.getDatabaseMeta();\n        \n        String sql = \"SELECT \";\n\n        for (int i = 0; i < meta.getUpdateLookup().length; i++)\n        {\n            if (i != 0) sql += \", \";\n            sql += databaseMeta.quoteField(meta.getUpdateLookup()[i]);\n            data.lookupReturnRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getUpdateStream()[i]) );\n        }\n\n        sql += \" FROM \" + data.schemaTable + \" WHERE \";\n\n        for (int i = 0; i < meta.getKeyLookup().length; i++)\n        {\n            if (i != 0){\r\n            \tsql += \" AND \";\r\n            } \r\n            \r\n            sql += \" ( ( \";\r\n            \n            sql += databaseMeta.quoteField(meta.getKeyLookup()[i]);\n            if (\"BETWEEN\".equalsIgnoreCase(meta.getKeyCondition()[i]))\n            {\n                sql += \" BETWEEN ? AND ? \";\n                data.lookupParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\n                data.lookupParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream2()[i]) );\n            }\n            else\n            {\n                if (\"IS NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]) || \"IS NOT NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]))\n                {\n                    sql += \" \" + meta.getKeyCondition()[i] + \" \";\n                }\r\n                else if (\"= ~NULL\".equalsIgnoreCase(meta.getKeyCondition()[i])){\r\n                \t\r\n                \tsql += \" IS NULL AND \";\r\n                    \r\n                \tif (databaseMeta.requiresCastToVariousForIsNull()) {\r\n                        sql += \"CAST(? AS VARCHAR(256)) IS NULL\";\r\n                    }\r\n                    else{\r\n                        sql += \"? IS NULL\";\r\n                    }\r\n                \t// null check\r\n                    data.lookupParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\r\n                    sql += \" ) OR ( \"+ databaseMeta.quoteField(meta.getKeyLookup()[i])+\" = ?\";\r\n                    // equality check, cloning so auto-rename because of adding same fieldname does not cause problems\r\n                    data.lookupParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]).clone() );\r\n                \t\r\n                }\n                else\n                {\n                    sql += \" \" + meta.getKeyCondition()[i] + \" ? \";\n                    data.lookupParameterRowMeta.addValueMeta( rowMeta.searchValueMeta(meta.getKeyStream()[i]) );\n                }\n            }\r\n            sql += \" ) ) \";\n        }\n        \n        try\n        {\n            if(log.isDetailed()) logDetailed(\"Setting preparedStatement to [\" + sql + \"]\");\n            data.prepStatementLookup = data.db.getConnection().prepareStatement(databaseMeta.stripCR(sql));\n        }\n        catch (SQLException ex)\n        {\n            throw new KettleDatabaseException(\"Unable to prepare statement for SQL statement [\" + sql + \"]\", ex);\n        }\r\n        \n    }","commit_id":"d4db75c428c70eb840d5948a388e73d5942154b9","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String open()\n\t{\n\t\tShell parent = getParent();\n\t\tDisplay display = parent.getDisplay();\n\n\t\tshell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\n \t\tprops.setLook(shell);\n        setShellImage(shell, input);\n\n\t\tModifyListener lsMod = new ModifyListener() \n\t\t{\n\t\t\tpublic void modifyText(ModifyEvent e) \n\t\t\t{\n\t\t\t\tinput.setChanged();\n\t\t\t}\n\t\t};\r\n\t\tModifyListener lsTableMod = new ModifyListener() {\r\n\t\t\tpublic void modifyText(ModifyEvent arg0) {\r\n\t\t\t\tinput.setChanged();\r\n\t\t\t\tsetTableFieldCombo();\r\n\t\t\t}\r\n\t\t};\r\n\t\tSelectionListener lsSelection = new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t{\r\n\t\t\t\tinput.setChanged();\r\n\t\t\t\tsetTableFieldCombo();\r\n\t\t\t}\r\n\t\t};\n\t\tchanged = input.hasChanged();\n\n\t\tFormLayout formLayout = new FormLayout ();\n\t\tformLayout.marginWidth  = Const.FORM_MARGIN;\n\t\tformLayout.marginHeight = Const.FORM_MARGIN;\n\n\t\tshell.setLayout(formLayout);\n\t\tshell.setText(BaseMessages.getString(PKG, \"UpdateDialog.Shell.Title\")); //$NON-NLS-1$\n\t\t\n\t\tint middle = props.getMiddlePct();\n\t\tint margin = Const.MARGIN;\n\n\t\t// Stepname line\n\t\twlStepname=new Label(shell, SWT.RIGHT);\n\t\twlStepname.setText(BaseMessages.getString(PKG, \"UpdateDialog.Stepname.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlStepname);\n\t\tfdlStepname=new FormData();\n\t\tfdlStepname.left = new FormAttachment(0, 0);\n\t\tfdlStepname.right= new FormAttachment(middle, -margin);\n\t\tfdlStepname.top  = new FormAttachment(0, margin);\n\t\twlStepname.setLayoutData(fdlStepname);\n\t\twStepname=new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n\t\twStepname.setText(stepname);\n \t\tprops.setLook(wStepname);\n\t\twStepname.addModifyListener(lsMod);\n\t\tfdStepname=new FormData();\n\t\tfdStepname.left = new FormAttachment(middle, 0);\n\t\tfdStepname.top  = new FormAttachment(0, margin);\n\t\tfdStepname.right= new FormAttachment(100, 0);\n\t\twStepname.setLayoutData(fdStepname);\n\n\t\t// Connection line\n\t\twConnection = addConnectionLine(shell, wStepname, middle, margin);\n\t\tif (input.getDatabaseMeta()==null && transMeta.nrDatabases()==1) wConnection.select(0);\n\t\twConnection.addModifyListener(lsMod);\r\n\t\twConnection.addSelectionListener(lsSelection);\n\t\t\n        // Schema line...\n        wlSchema=new Label(shell, SWT.RIGHT);\n        wlSchema.setText(BaseMessages.getString(PKG, \"UpdateDialog.TargetSchema.Label\")); //$NON-NLS-1$\n        props.setLook(wlSchema);\n        fdlSchema=new FormData();\n        fdlSchema.left = new FormAttachment(0, 0);\n        fdlSchema.right= new FormAttachment(middle, -margin);\n        fdlSchema.top  = new FormAttachment(wConnection, margin*2);\n        wlSchema.setLayoutData(fdlSchema);\r\n        \r\n    \twbSchema=new Button(shell, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbSchema);\r\n \t\twbSchema.setText(BaseMessages.getString(PKG, \"System.Button.Browse\"));\r\n \t\tfdbSchema=new FormData();\r\n \t\tfdbSchema.top  = new FormAttachment(wConnection, 2*margin);\r\n \t\tfdbSchema.right= new FormAttachment(100, 0);\r\n\t\twbSchema.setLayoutData(fdbSchema);\n\n        wSchema=new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wSchema);\n        wSchema.addModifyListener(lsTableMod);\n        fdSchema=new FormData();\n        fdSchema.left = new FormAttachment(middle, 0);\n        fdSchema.top  = new FormAttachment(wConnection, margin*2);\n        fdSchema.right= new FormAttachment(wbSchema, -margin);\n        wSchema.setLayoutData(fdSchema);\n\n\t\t// Table line...\n\t\twlTable=new Label(shell, SWT.RIGHT);\n\t\twlTable.setText(BaseMessages.getString(PKG, \"UpdateDialog.TargetTable.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlTable);\n\t\tfdlTable=new FormData();\n\t\tfdlTable.left = new FormAttachment(0, 0);\n\t\tfdlTable.right= new FormAttachment(middle, -margin);\n\t\tfdlTable.top  = new FormAttachment(wbSchema, margin);\n\t\twlTable.setLayoutData(fdlTable);\n\n\t\twbTable=new Button(shell, SWT.PUSH| SWT.CENTER);\n \t\tprops.setLook(wbTable);\n\t\twbTable.setText(BaseMessages.getString(PKG, \"UpdateDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbTable=new FormData();\n\t\tfdbTable.right= new FormAttachment(100, 0);\n\t\tfdbTable.top  = new FormAttachment(wbSchema, margin);\n\t\twbTable.setLayoutData(fdbTable);\n\n\t\twTable=new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wTable);\n\t\twTable.addModifyListener(lsTableMod);\n\t\tfdTable=new FormData();\n\t\tfdTable.left = new FormAttachment(middle, 0);\n\t\tfdTable.top  = new FormAttachment(wbSchema, margin);\n\t\tfdTable.right= new FormAttachment(wbTable, -margin);\n\t\twTable.setLayoutData(fdTable);\n\n\t\t// Commit line\n\t\twlCommit = new Label(shell, SWT.RIGHT);\n\t\twlCommit.setText(BaseMessages.getString(PKG, \"UpdateDialog..Commit.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlCommit);\n\t\tfdlCommit = new FormData();\n\t\tfdlCommit.left = new FormAttachment(0, 0);\n\t\tfdlCommit.top = new FormAttachment(wTable, margin);\n\t\tfdlCommit.right = new FormAttachment(middle, -margin);\n\t\twlCommit.setLayoutData(fdlCommit);\n\t\twCommit = new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wCommit);\n\t\twCommit.addModifyListener(lsMod);\n\t\tfdCommit = new FormData();\n\t\tfdCommit.left = new FormAttachment(middle, 0);\n\t\tfdCommit.top = new FormAttachment(wTable, margin);\n\t\tfdCommit.right = new FormAttachment(100, 0);\n\t\twCommit.setLayoutData(fdCommit);\n        \n\t\t// UsePart update\r\n\t\twlSkipLookup=new Label(shell, SWT.RIGHT);\r\n\t\twlSkipLookup.setText(BaseMessages.getString(PKG, \"UpdateDialog.SkipLookup.Label\"));\r\n \t\tprops.setLook(wlSkipLookup);\r\n\t\tfdlSkipLookup=new FormData();\r\n\t\tfdlSkipLookup.left  = new FormAttachment(0, 0);\r\n\t\tfdlSkipLookup.top   = new FormAttachment(wCommit, margin);\r\n\t\tfdlSkipLookup.right = new FormAttachment(middle, -margin);\r\n\t\twlSkipLookup.setLayoutData(fdlSkipLookup);\r\n\t\twSkipLookup=new Button(shell, SWT.CHECK);\r\n\t\twSkipLookup.setToolTipText(BaseMessages.getString(PKG, \"UpdateDialog.SkipLookup.Tooltip\"));\r\n \t\tprops.setLook(wSkipLookup);\r\n\t\tfdSkipLookup=new FormData();\r\n\t\tfdSkipLookup.left  = new FormAttachment(middle, 0);\r\n\t\tfdSkipLookup.top   = new FormAttachment(wCommit, margin);\r\n\t\tfdSkipLookup.right = new FormAttachment(100, 0);\r\n\t\twSkipLookup.setLayoutData(fdSkipLookup);\r\n\t\twSkipLookup.addSelectionListener(new SelectionAdapter() \r\n        {\r\n            public void widgetSelected(SelectionEvent e) \r\n            {\r\n                input.setChanged();\r\n                setActiveIgnoreLookup();\r\n            }\r\n        }\r\n    );\t\t\r\n\t\t\n        wlErrorIgnored=new Label(shell, SWT.RIGHT);\n        wlErrorIgnored.setText(BaseMessages.getString(PKG, \"UpdateDialog.ErrorIgnored.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlErrorIgnored);\n        fdlErrorIgnored=new FormData();\n        fdlErrorIgnored.left = new FormAttachment(0, 0);\n        fdlErrorIgnored.top  = new FormAttachment(wSkipLookup, margin);\n        fdlErrorIgnored.right= new FormAttachment(middle, -margin);\n        wlErrorIgnored.setLayoutData(fdlErrorIgnored);\n        \n        wErrorIgnored=new Button(shell, SWT.CHECK );\n \t\tprops.setLook(        wErrorIgnored);\n        wErrorIgnored.setToolTipText(BaseMessages.getString(PKG, \"UpdateDialog.ErrorIgnored.ToolTip\")); //$NON-NLS-1$\n        fdErrorIgnored=new FormData();\n        fdErrorIgnored.left = new FormAttachment(middle, 0);\n        fdErrorIgnored.top  = new FormAttachment(wSkipLookup, margin);\n        wErrorIgnored.setLayoutData(fdErrorIgnored);\n        wErrorIgnored.addSelectionListener(new SelectionAdapter() \n            {\n                public void widgetSelected(SelectionEvent e) \n                {\n                    input.setChanged();\n                    setFlags();\n                }\n            }\n        );\n\n        wlIgnoreFlagField=new Label(shell, SWT.LEFT);\n        wlIgnoreFlagField.setText(BaseMessages.getString(PKG, \"UpdateDialog.FlagField.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(        wlIgnoreFlagField);\n        fdlIgnoreFlagField=new FormData();\n        fdlIgnoreFlagField.left = new FormAttachment(wErrorIgnored, margin);\n        fdlIgnoreFlagField.top  = new FormAttachment(wSkipLookup, margin);\n        wlIgnoreFlagField.setLayoutData(fdlIgnoreFlagField);\n        wIgnoreFlagField=new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(        wIgnoreFlagField);\n        wIgnoreFlagField.addModifyListener(lsMod);\n        fdIgnoreFlagField=new FormData();\n        fdIgnoreFlagField.left = new FormAttachment(wlIgnoreFlagField, margin);\n        fdIgnoreFlagField.top  = new FormAttachment(wSkipLookup, margin);\n        fdIgnoreFlagField.right= new FormAttachment(100, 0);\n        wIgnoreFlagField.setLayoutData(fdIgnoreFlagField);\n\n\n\t\twlKey=new Label(shell, SWT.NONE);\n\t\twlKey.setText(BaseMessages.getString(PKG, \"UpdateDialog.Key.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlKey);\n\t\tfdlKey=new FormData();\n\t\tfdlKey.left  = new FormAttachment(0, 0);\n\t\tfdlKey.top   = new FormAttachment(wIgnoreFlagField, margin);\n\t\twlKey.setLayoutData(fdlKey);\n\n\t\tint nrKeyCols=4;\n\t\tint nrKeyRows=(input.getKeyStream()!=null?input.getKeyStream().length:1);\n\t\t\n\t\tciKey=new ColumnInfo[nrKeyCols];\n\t\tciKey[0]=new ColumnInfo(BaseMessages.getString(PKG, \"UpdateDialog.ColumnInfo.TableField\"),    ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciKey[1]=new ColumnInfo(BaseMessages.getString(PKG, \"UpdateDialog.ColumnInfo.Comparator\"),    ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"=\", \"<>\", \"<\", \"<=\", \">\", \">=\", \"LIKE\", \"BETWEEN\", \"IS NULL\", \"IS NOT NULL\" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ //$NON-NLS-8$ //$NON-NLS-9$ //$NON-NLS-10$ //$NON-NLS-11$\n\t\tciKey[2]=new ColumnInfo(BaseMessages.getString(PKG, \"UpdateDialog.ColumnInfo.StreamField1\"),  ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciKey[3]=new ColumnInfo(BaseMessages.getString(PKG, \"UpdateDialog.ColumnInfo.StreamField2\"),  ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\ttableFieldColumns.add(ciKey[0]);\n\t\twKey=new TableView(transMeta, shell, \n\t\t\t\t\t\t      SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL, \n\t\t\t\t\t\t      ciKey, \n\t\t\t\t\t\t      nrKeyRows,  \n\t\t\t\t\t\t      lsMod,\n\t\t\t\t\t\t      props\n\t\t\t\t\t\t      );\n\n\t\twGet = new Button(shell, SWT.PUSH);\n\t\twGet.setText(BaseMessages.getString(PKG, \"UpdateDialog.GetFields.Button\")); //$NON-NLS-1$\n\t\tfdGet = new FormData();\n\t\tfdGet.right = new FormAttachment(100, 0);\n\t\tfdGet.top = new FormAttachment(wlKey, margin);\n\t\twGet.setLayoutData(fdGet);\n\n\t\tfdKey = new FormData();\n\t\tfdKey.left = new FormAttachment(0, 0);\n\t\tfdKey.top = new FormAttachment(wlKey, margin);\n\t\tfdKey.right = new FormAttachment(wGet, -margin);\n\t\tfdKey.bottom = new FormAttachment(wlKey, 190);\n\t\twKey.setLayoutData(fdKey);\n\n\t\t// THE BUTTONS\n\t\twOK=new Button(shell, SWT.PUSH);\n\t\twOK.setText(BaseMessages.getString(PKG, \"System.Button.OK\")); //$NON-NLS-1$\n\t\twSQL=new Button(shell, SWT.PUSH);\n\t\twSQL.setText(BaseMessages.getString(PKG, \"UpdateDialog.SQL.Button\")); //$NON-NLS-1$\n\t\twCancel=new Button(shell, SWT.PUSH);\n\t\twCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\")); //$NON-NLS-1$\n\n\t\tsetButtonPositions(new Button[] { wOK, wCancel , wSQL }, margin, null);\n\n\t\t\n\t\t// THE UPDATE/INSERT TABLE\n\t\twlReturn=new Label(shell, SWT.NONE);\n\t\twlReturn.setText(BaseMessages.getString(PKG, \"UpdateDialog.Return.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlReturn);\n\t\tfdlReturn=new FormData();\n\t\tfdlReturn.left  = new FormAttachment(0, 0);\n\t\tfdlReturn.top   = new FormAttachment(wKey, margin);\n\t\twlReturn.setLayoutData(fdlReturn);\n\t\t\n\t\tint UpInsCols=2;\n\t\tint UpInsRows= (input.getUpdateLookup()!=null?input.getUpdateLookup().length:1);\n\t\t\n\t\tciReturn=new ColumnInfo[UpInsCols];\n\t\tciReturn[0]=new ColumnInfo(BaseMessages.getString(PKG, \"UpdateDialog.ColumnInfo.TableField\"),  ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciReturn[1]=new ColumnInfo(BaseMessages.getString(PKG, \"UpdateDialog.ColumnInfo.StreamField\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\ttableFieldColumns.add(ciReturn[0]);\n\t\twReturn=new TableView(transMeta, shell, \n\t\t\t\t\t\t\t  SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL, \n\t\t\t\t\t\t\t  ciReturn, \n\t\t\t\t\t\t\t  UpInsRows,  \n\t\t\t\t\t\t\t  lsMod,\n\t\t\t\t\t\t\t  props\n\t\t\t\t\t\t\t  );\n\n\t\twGetLU = new Button(shell, SWT.PUSH);\n\t\twGetLU.setText(BaseMessages.getString(PKG, \"UpdateDialog.GetAndUpdateFields\")); //$NON-NLS-1$\n\t\tfdGetLU = new FormData();\n\t\tfdGetLU.top   = new FormAttachment(wlReturn, margin);\n\t\tfdGetLU.right = new FormAttachment(100, 0);\n\t\twGetLU.setLayoutData(fdGetLU);\n\n\t\tfdReturn = new FormData();\n\t\tfdReturn.left = new FormAttachment(0, 0);\n\t\tfdReturn.top = new FormAttachment(wlReturn, margin);\n\t\tfdReturn.right = new FormAttachment(wGetLU, -margin);\n\t\tfdReturn.bottom = new FormAttachment(wOK, -2*margin);\n\t\twReturn.setLayoutData(fdReturn);\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t    // \r\n        // Search the fields in the background\r\n        //\r\n        \r\n        final Runnable runnable = new Runnable()\r\n        {\r\n            public void run()\r\n            {\r\n                StepMeta stepMeta = transMeta.findStep(stepname);\r\n                if (stepMeta!=null)\r\n                {\r\n                    try\r\n                    {\r\n                    \tRowMetaInterface row = transMeta.getPrevStepFields(stepMeta);\r\n                        \r\n                        // Remember these fields...\r\n                        for (int i=0;i<row.size();i++)\r\n                        {\r\n                        \tinputFields.put(row.getValueMeta(i).getName(), Integer.valueOf(i));\r\n                        }\r\n                        \r\n                        setComboBoxes(); \r\n                    }\r\n                    catch(KettleException e)\r\n                    {\r\n                        logError(BaseMessages.getString(PKG, \"System.Dialog.GetFieldsFailed.Message\"));\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        new Thread(runnable).start();\n\n\n\t\t// Add listeners\n\t\tlsOK       = new Listener() { public void handleEvent(Event e) { ok();        } };\n\t\tlsGet      = new Listener() { public void handleEvent(Event e) { get();       } };\n\t\tlsGetLU    = new Listener() { public void handleEvent(Event e) { getUpdate(); } };\n\t\tlsSQL      = new Listener() { public void handleEvent(Event e) { create();    } };\n\t\tlsCancel   = new Listener() { public void handleEvent(Event e) { cancel();    } };\n\t\t\n\t\twOK.addListener    (SWT.Selection, lsOK    );\n\t\twGet.addListener   (SWT.Selection, lsGet   );\n\t\twGetLU.addListener (SWT.Selection, lsGetLU );\n\t\twSQL.addListener   (SWT.Selection, lsSQL   );\n\t\twCancel.addListener(SWT.Selection, lsCancel);\n\t\t\n\t\tlsDef=new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\n\t\t\n        wStepname.addSelectionListener( lsDef );\n        wSchema.addSelectionListener( lsDef );\n        wTable.addSelectionListener( lsDef );\n        wCommit.addSelectionListener( lsDef );\n\t\twIgnoreFlagField.addSelectionListener( lsDef );\n        \n\t\t// Detect X or ALT-F4 or something that kills this window...\n\t\tshell.addShellListener(\tnew ShellAdapter() { public void shellClosed(ShellEvent e) { cancel(); } } );\n\t\twbSchema.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tgetSchemaNames();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\n\t\twbTable.addSelectionListener\n\t\t(\n\t\t\tnew SelectionAdapter()\n\t\t\t{\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \n\t\t\t\t{\n\t\t\t\t\tgetTableName();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t// Set the shell size, based upon previous time...\n\t\tsetSize();\n\t\tgetData();\r\n\t\tsetActiveIgnoreLookup();\r\n\t\tsetTableFieldCombo();\n\t\tinput.setChanged(changed);\n\n\t\tshell.open();\n\t\twhile (!shell.isDisposed())\n\t\t{\n\t\t\t\tif (!display.readAndDispatch()) display.sleep();\n\t\t}\n\t\treturn stepname;\n\t}","id":8844,"modified_method":"public String open()\n\t{\n\t\tShell parent = getParent();\n\t\tDisplay display = parent.getDisplay();\n\n\t\tshell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\n \t\tprops.setLook(shell);\n        setShellImage(shell, input);\n\n\t\tModifyListener lsMod = new ModifyListener() \n\t\t{\n\t\t\tpublic void modifyText(ModifyEvent e) \n\t\t\t{\n\t\t\t\tinput.setChanged();\n\t\t\t}\n\t\t};\r\n\t\tModifyListener lsTableMod = new ModifyListener() {\r\n\t\t\tpublic void modifyText(ModifyEvent arg0) {\r\n\t\t\t\tinput.setChanged();\r\n\t\t\t\tsetTableFieldCombo();\r\n\t\t\t}\r\n\t\t};\r\n\t\tSelectionListener lsSelection = new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t{\r\n\t\t\t\tinput.setChanged();\r\n\t\t\t\tsetTableFieldCombo();\r\n\t\t\t}\r\n\t\t};\n\t\tchanged = input.hasChanged();\n\n\t\tFormLayout formLayout = new FormLayout ();\n\t\tformLayout.marginWidth  = Const.FORM_MARGIN;\n\t\tformLayout.marginHeight = Const.FORM_MARGIN;\n\n\t\tshell.setLayout(formLayout);\n\t\tshell.setText(BaseMessages.getString(PKG, \"UpdateDialog.Shell.Title\")); //$NON-NLS-1$\n\t\t\n\t\tint middle = props.getMiddlePct();\n\t\tint margin = Const.MARGIN;\n\n\t\t// Stepname line\n\t\twlStepname=new Label(shell, SWT.RIGHT);\n\t\twlStepname.setText(BaseMessages.getString(PKG, \"UpdateDialog.Stepname.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlStepname);\n\t\tfdlStepname=new FormData();\n\t\tfdlStepname.left = new FormAttachment(0, 0);\n\t\tfdlStepname.right= new FormAttachment(middle, -margin);\n\t\tfdlStepname.top  = new FormAttachment(0, margin);\n\t\twlStepname.setLayoutData(fdlStepname);\n\t\twStepname=new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n\t\twStepname.setText(stepname);\n \t\tprops.setLook(wStepname);\n\t\twStepname.addModifyListener(lsMod);\n\t\tfdStepname=new FormData();\n\t\tfdStepname.left = new FormAttachment(middle, 0);\n\t\tfdStepname.top  = new FormAttachment(0, margin);\n\t\tfdStepname.right= new FormAttachment(100, 0);\n\t\twStepname.setLayoutData(fdStepname);\n\n\t\t// Connection line\n\t\twConnection = addConnectionLine(shell, wStepname, middle, margin);\n\t\tif (input.getDatabaseMeta()==null && transMeta.nrDatabases()==1) wConnection.select(0);\n\t\twConnection.addModifyListener(lsMod);\r\n\t\twConnection.addSelectionListener(lsSelection);\n\t\t\n        // Schema line...\n        wlSchema=new Label(shell, SWT.RIGHT);\n        wlSchema.setText(BaseMessages.getString(PKG, \"UpdateDialog.TargetSchema.Label\")); //$NON-NLS-1$\n        props.setLook(wlSchema);\n        fdlSchema=new FormData();\n        fdlSchema.left = new FormAttachment(0, 0);\n        fdlSchema.right= new FormAttachment(middle, -margin);\n        fdlSchema.top  = new FormAttachment(wConnection, margin*2);\n        wlSchema.setLayoutData(fdlSchema);\r\n        \r\n    \twbSchema=new Button(shell, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbSchema);\r\n \t\twbSchema.setText(BaseMessages.getString(PKG, \"System.Button.Browse\"));\r\n \t\tfdbSchema=new FormData();\r\n \t\tfdbSchema.top  = new FormAttachment(wConnection, 2*margin);\r\n \t\tfdbSchema.right= new FormAttachment(100, 0);\r\n\t\twbSchema.setLayoutData(fdbSchema);\n\n        wSchema=new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wSchema);\n        wSchema.addModifyListener(lsTableMod);\n        fdSchema=new FormData();\n        fdSchema.left = new FormAttachment(middle, 0);\n        fdSchema.top  = new FormAttachment(wConnection, margin*2);\n        fdSchema.right= new FormAttachment(wbSchema, -margin);\n        wSchema.setLayoutData(fdSchema);\n\n\t\t// Table line...\n\t\twlTable=new Label(shell, SWT.RIGHT);\n\t\twlTable.setText(BaseMessages.getString(PKG, \"UpdateDialog.TargetTable.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlTable);\n\t\tfdlTable=new FormData();\n\t\tfdlTable.left = new FormAttachment(0, 0);\n\t\tfdlTable.right= new FormAttachment(middle, -margin);\n\t\tfdlTable.top  = new FormAttachment(wbSchema, margin);\n\t\twlTable.setLayoutData(fdlTable);\n\n\t\twbTable=new Button(shell, SWT.PUSH| SWT.CENTER);\n \t\tprops.setLook(wbTable);\n\t\twbTable.setText(BaseMessages.getString(PKG, \"UpdateDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbTable=new FormData();\n\t\tfdbTable.right= new FormAttachment(100, 0);\n\t\tfdbTable.top  = new FormAttachment(wbSchema, margin);\n\t\twbTable.setLayoutData(fdbTable);\n\n\t\twTable=new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wTable);\n\t\twTable.addModifyListener(lsTableMod);\n\t\tfdTable=new FormData();\n\t\tfdTable.left = new FormAttachment(middle, 0);\n\t\tfdTable.top  = new FormAttachment(wbSchema, margin);\n\t\tfdTable.right= new FormAttachment(wbTable, -margin);\n\t\twTable.setLayoutData(fdTable);\n\n\t\t// Commit line\n\t\twlCommit = new Label(shell, SWT.RIGHT);\n\t\twlCommit.setText(BaseMessages.getString(PKG, \"UpdateDialog..Commit.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlCommit);\n\t\tfdlCommit = new FormData();\n\t\tfdlCommit.left = new FormAttachment(0, 0);\n\t\tfdlCommit.top = new FormAttachment(wTable, margin);\n\t\tfdlCommit.right = new FormAttachment(middle, -margin);\n\t\twlCommit.setLayoutData(fdlCommit);\n\t\twCommit = new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wCommit);\n\t\twCommit.addModifyListener(lsMod);\n\t\tfdCommit = new FormData();\n\t\tfdCommit.left = new FormAttachment(middle, 0);\n\t\tfdCommit.top = new FormAttachment(wTable, margin);\n\t\tfdCommit.right = new FormAttachment(100, 0);\n\t\twCommit.setLayoutData(fdCommit);\n        \n\t\t// UsePart update\r\n\t\twlSkipLookup=new Label(shell, SWT.RIGHT);\r\n\t\twlSkipLookup.setText(BaseMessages.getString(PKG, \"UpdateDialog.SkipLookup.Label\"));\r\n \t\tprops.setLook(wlSkipLookup);\r\n\t\tfdlSkipLookup=new FormData();\r\n\t\tfdlSkipLookup.left  = new FormAttachment(0, 0);\r\n\t\tfdlSkipLookup.top   = new FormAttachment(wCommit, margin);\r\n\t\tfdlSkipLookup.right = new FormAttachment(middle, -margin);\r\n\t\twlSkipLookup.setLayoutData(fdlSkipLookup);\r\n\t\twSkipLookup=new Button(shell, SWT.CHECK);\r\n\t\twSkipLookup.setToolTipText(BaseMessages.getString(PKG, \"UpdateDialog.SkipLookup.Tooltip\"));\r\n \t\tprops.setLook(wSkipLookup);\r\n\t\tfdSkipLookup=new FormData();\r\n\t\tfdSkipLookup.left  = new FormAttachment(middle, 0);\r\n\t\tfdSkipLookup.top   = new FormAttachment(wCommit, margin);\r\n\t\tfdSkipLookup.right = new FormAttachment(100, 0);\r\n\t\twSkipLookup.setLayoutData(fdSkipLookup);\r\n\t\twSkipLookup.addSelectionListener(new SelectionAdapter() \r\n        {\r\n            public void widgetSelected(SelectionEvent e) \r\n            {\r\n                input.setChanged();\r\n                setActiveIgnoreLookup();\r\n            }\r\n        }\r\n    );\t\t\r\n\t\t\n        wlErrorIgnored=new Label(shell, SWT.RIGHT);\n        wlErrorIgnored.setText(BaseMessages.getString(PKG, \"UpdateDialog.ErrorIgnored.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlErrorIgnored);\n        fdlErrorIgnored=new FormData();\n        fdlErrorIgnored.left = new FormAttachment(0, 0);\n        fdlErrorIgnored.top  = new FormAttachment(wSkipLookup, margin);\n        fdlErrorIgnored.right= new FormAttachment(middle, -margin);\n        wlErrorIgnored.setLayoutData(fdlErrorIgnored);\n        \n        wErrorIgnored=new Button(shell, SWT.CHECK );\n \t\tprops.setLook(        wErrorIgnored);\n        wErrorIgnored.setToolTipText(BaseMessages.getString(PKG, \"UpdateDialog.ErrorIgnored.ToolTip\")); //$NON-NLS-1$\n        fdErrorIgnored=new FormData();\n        fdErrorIgnored.left = new FormAttachment(middle, 0);\n        fdErrorIgnored.top  = new FormAttachment(wSkipLookup, margin);\n        wErrorIgnored.setLayoutData(fdErrorIgnored);\n        wErrorIgnored.addSelectionListener(new SelectionAdapter() \n            {\n                public void widgetSelected(SelectionEvent e) \n                {\n                    input.setChanged();\n                    setFlags();\n                }\n            }\n        );\n\n        wlIgnoreFlagField=new Label(shell, SWT.LEFT);\n        wlIgnoreFlagField.setText(BaseMessages.getString(PKG, \"UpdateDialog.FlagField.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(        wlIgnoreFlagField);\n        fdlIgnoreFlagField=new FormData();\n        fdlIgnoreFlagField.left = new FormAttachment(wErrorIgnored, margin);\n        fdlIgnoreFlagField.top  = new FormAttachment(wSkipLookup, margin);\n        wlIgnoreFlagField.setLayoutData(fdlIgnoreFlagField);\n        wIgnoreFlagField=new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(        wIgnoreFlagField);\n        wIgnoreFlagField.addModifyListener(lsMod);\n        fdIgnoreFlagField=new FormData();\n        fdIgnoreFlagField.left = new FormAttachment(wlIgnoreFlagField, margin);\n        fdIgnoreFlagField.top  = new FormAttachment(wSkipLookup, margin);\n        fdIgnoreFlagField.right= new FormAttachment(100, 0);\n        wIgnoreFlagField.setLayoutData(fdIgnoreFlagField);\n\n\n\t\twlKey=new Label(shell, SWT.NONE);\n\t\twlKey.setText(BaseMessages.getString(PKG, \"UpdateDialog.Key.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlKey);\n\t\tfdlKey=new FormData();\n\t\tfdlKey.left  = new FormAttachment(0, 0);\n\t\tfdlKey.top   = new FormAttachment(wIgnoreFlagField, margin);\n\t\twlKey.setLayoutData(fdlKey);\n\n\t\tint nrKeyCols=4;\n\t\tint nrKeyRows=(input.getKeyStream()!=null?input.getKeyStream().length:1);\n\t\t\n\t\tciKey=new ColumnInfo[nrKeyCols];\n\t\tciKey[0]=new ColumnInfo(BaseMessages.getString(PKG, \"UpdateDialog.ColumnInfo.TableField\"),    ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciKey[1]=new ColumnInfo(BaseMessages.getString(PKG, \"UpdateDialog.ColumnInfo.Comparator\"),    ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"=\", \"= ~NULL\", \"<>\", \"<\", \"<=\", \">\", \">=\", \"LIKE\", \"BETWEEN\", \"IS NULL\", \"IS NOT NULL\" } ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ //$NON-NLS-8$ //$NON-NLS-9$ //$NON-NLS-10$ //$NON-NLS-11$ //$NON-NLS-12$\n\t\tciKey[2]=new ColumnInfo(BaseMessages.getString(PKG, \"UpdateDialog.ColumnInfo.StreamField1\"),  ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciKey[3]=new ColumnInfo(BaseMessages.getString(PKG, \"UpdateDialog.ColumnInfo.StreamField2\"),  ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\ttableFieldColumns.add(ciKey[0]);\n\t\twKey=new TableView(transMeta, shell, \n\t\t\t\t\t\t      SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL, \n\t\t\t\t\t\t      ciKey, \n\t\t\t\t\t\t      nrKeyRows,  \n\t\t\t\t\t\t      lsMod,\n\t\t\t\t\t\t      props\n\t\t\t\t\t\t      );\n\n\t\twGet = new Button(shell, SWT.PUSH);\n\t\twGet.setText(BaseMessages.getString(PKG, \"UpdateDialog.GetFields.Button\")); //$NON-NLS-1$\n\t\tfdGet = new FormData();\n\t\tfdGet.right = new FormAttachment(100, 0);\n\t\tfdGet.top = new FormAttachment(wlKey, margin);\n\t\twGet.setLayoutData(fdGet);\n\n\t\tfdKey = new FormData();\n\t\tfdKey.left = new FormAttachment(0, 0);\n\t\tfdKey.top = new FormAttachment(wlKey, margin);\n\t\tfdKey.right = new FormAttachment(wGet, -margin);\n\t\tfdKey.bottom = new FormAttachment(wlKey, 190);\n\t\twKey.setLayoutData(fdKey);\n\n\t\t// THE BUTTONS\n\t\twOK=new Button(shell, SWT.PUSH);\n\t\twOK.setText(BaseMessages.getString(PKG, \"System.Button.OK\")); //$NON-NLS-1$\n\t\twSQL=new Button(shell, SWT.PUSH);\n\t\twSQL.setText(BaseMessages.getString(PKG, \"UpdateDialog.SQL.Button\")); //$NON-NLS-1$\n\t\twCancel=new Button(shell, SWT.PUSH);\n\t\twCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\")); //$NON-NLS-1$\n\n\t\tsetButtonPositions(new Button[] { wOK, wCancel , wSQL }, margin, null);\n\n\t\t\n\t\t// THE UPDATE/INSERT TABLE\n\t\twlReturn=new Label(shell, SWT.NONE);\n\t\twlReturn.setText(BaseMessages.getString(PKG, \"UpdateDialog.Return.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlReturn);\n\t\tfdlReturn=new FormData();\n\t\tfdlReturn.left  = new FormAttachment(0, 0);\n\t\tfdlReturn.top   = new FormAttachment(wKey, margin);\n\t\twlReturn.setLayoutData(fdlReturn);\n\t\t\n\t\tint UpInsCols=2;\n\t\tint UpInsRows= (input.getUpdateLookup()!=null?input.getUpdateLookup().length:1);\n\t\t\n\t\tciReturn=new ColumnInfo[UpInsCols];\n\t\tciReturn[0]=new ColumnInfo(BaseMessages.getString(PKG, \"UpdateDialog.ColumnInfo.TableField\"),  ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciReturn[1]=new ColumnInfo(BaseMessages.getString(PKG, \"UpdateDialog.ColumnInfo.StreamField\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\ttableFieldColumns.add(ciReturn[0]);\n\t\twReturn=new TableView(transMeta, shell, \n\t\t\t\t\t\t\t  SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL, \n\t\t\t\t\t\t\t  ciReturn, \n\t\t\t\t\t\t\t  UpInsRows,  \n\t\t\t\t\t\t\t  lsMod,\n\t\t\t\t\t\t\t  props\n\t\t\t\t\t\t\t  );\n\n\t\twGetLU = new Button(shell, SWT.PUSH);\n\t\twGetLU.setText(BaseMessages.getString(PKG, \"UpdateDialog.GetAndUpdateFields\")); //$NON-NLS-1$\n\t\tfdGetLU = new FormData();\n\t\tfdGetLU.top   = new FormAttachment(wlReturn, margin);\n\t\tfdGetLU.right = new FormAttachment(100, 0);\n\t\twGetLU.setLayoutData(fdGetLU);\n\n\t\tfdReturn = new FormData();\n\t\tfdReturn.left = new FormAttachment(0, 0);\n\t\tfdReturn.top = new FormAttachment(wlReturn, margin);\n\t\tfdReturn.right = new FormAttachment(wGetLU, -margin);\n\t\tfdReturn.bottom = new FormAttachment(wOK, -2*margin);\n\t\twReturn.setLayoutData(fdReturn);\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t    // \r\n        // Search the fields in the background\r\n        //\r\n        \r\n        final Runnable runnable = new Runnable()\r\n        {\r\n            public void run()\r\n            {\r\n                StepMeta stepMeta = transMeta.findStep(stepname);\r\n                if (stepMeta!=null)\r\n                {\r\n                    try\r\n                    {\r\n                    \tRowMetaInterface row = transMeta.getPrevStepFields(stepMeta);\r\n                        \r\n                        // Remember these fields...\r\n                        for (int i=0;i<row.size();i++)\r\n                        {\r\n                        \tinputFields.put(row.getValueMeta(i).getName(), Integer.valueOf(i));\r\n                        }\r\n                        \r\n                        setComboBoxes(); \r\n                    }\r\n                    catch(KettleException e)\r\n                    {\r\n                        logError(BaseMessages.getString(PKG, \"System.Dialog.GetFieldsFailed.Message\"));\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        new Thread(runnable).start();\n\n\n\t\t// Add listeners\n\t\tlsOK       = new Listener() { public void handleEvent(Event e) { ok();        } };\n\t\tlsGet      = new Listener() { public void handleEvent(Event e) { get();       } };\n\t\tlsGetLU    = new Listener() { public void handleEvent(Event e) { getUpdate(); } };\n\t\tlsSQL      = new Listener() { public void handleEvent(Event e) { create();    } };\n\t\tlsCancel   = new Listener() { public void handleEvent(Event e) { cancel();    } };\n\t\t\n\t\twOK.addListener    (SWT.Selection, lsOK    );\n\t\twGet.addListener   (SWT.Selection, lsGet   );\n\t\twGetLU.addListener (SWT.Selection, lsGetLU );\n\t\twSQL.addListener   (SWT.Selection, lsSQL   );\n\t\twCancel.addListener(SWT.Selection, lsCancel);\n\t\t\n\t\tlsDef=new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\n\t\t\n        wStepname.addSelectionListener( lsDef );\n        wSchema.addSelectionListener( lsDef );\n        wTable.addSelectionListener( lsDef );\n        wCommit.addSelectionListener( lsDef );\n\t\twIgnoreFlagField.addSelectionListener( lsDef );\n        \n\t\t// Detect X or ALT-F4 or something that kills this window...\n\t\tshell.addShellListener(\tnew ShellAdapter() { public void shellClosed(ShellEvent e) { cancel(); } } );\n\t\twbSchema.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tgetSchemaNames();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\n\t\twbTable.addSelectionListener\n\t\t(\n\t\t\tnew SelectionAdapter()\n\t\t\t{\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \n\t\t\t\t{\n\t\t\t\t\tgetTableName();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t// Set the shell size, based upon previous time...\n\t\tsetSize();\n\t\tgetData();\r\n\t\tsetActiveIgnoreLookup();\r\n\t\tsetTableFieldCombo();\n\t\tinput.setChanged(changed);\n\n\t\tshell.open();\n\t\twhile (!shell.isDisposed())\n\t\t{\n\t\t\t\tif (!display.readAndDispatch()) display.sleep();\n\t\t}\n\t\treturn stepname;\n\t}","commit_id":"d4db75c428c70eb840d5948a388e73d5942154b9","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void addInterpreterButton(final JPanel locationPanel, final LabeledComponent<TextFieldWithBrowseButton> location) {\n    final JButton interpreterButton = new FixedSizeButton(location);\n    interpreterButton.putClientProperty(\"JButton.buttonType\", null);\n    interpreterButton.setIcon(PythonIcons.Python.Python);\n    interpreterButton.putClientProperty(\"JButton.buttonType\", \"square\");\n    interpreterButton.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(ActionEvent e) {\n        final DialogBuilder builder = new DialogBuilder();\n        final JPanel panel = new JPanel();\n        final LabeledComponent<PythonSdkChooserCombo> interpreterCombo = createInterpreterCombo();\n        if (mySdk != null) {\n          mySdkCombo.getComboBox().setSelectedItem(mySdk);\n        }\n        panel.add(interpreterCombo);\n        builder.setCenterPanel(panel);\n        builder.setTitle(\"Select Python Interpreter\");\n        if (builder.showAndGet()) {\n          mySdk = (Sdk)mySdkCombo.getComboBox().getSelectedItem();\n        }\n      }\n    });\n    locationPanel.add(interpreterButton, BorderLayout.EAST);\n  }","id":8845,"modified_method":"private void addInterpreterButton(final JPanel locationPanel, final LabeledComponent<TextFieldWithBrowseButton> location) {\n    final JButton interpreterButton = new FixedSizeButton(location);\n    if (SystemInfo.isMac && !UIUtil.isUnderDarcula())\n      interpreterButton.putClientProperty(\"JButton.buttonType\", null);\n    interpreterButton.setIcon(PythonIcons.Python.Python);\n    interpreterButton.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(ActionEvent e) {\n        final DialogBuilder builder = new DialogBuilder();\n        final JPanel panel = new JPanel();\n        final LabeledComponent<PythonSdkChooserCombo> interpreterCombo = createInterpreterCombo();\n        if (mySdk != null) {\n          mySdkCombo.getComboBox().setSelectedItem(mySdk);\n        }\n        panel.add(interpreterCombo);\n        builder.setCenterPanel(panel);\n        builder.setTitle(\"Select Python Interpreter\");\n        if (builder.showAndGet()) {\n          mySdk = (Sdk)mySdkCombo.getComboBox().getSelectedItem();\n        }\n      }\n    });\n    locationPanel.add(interpreterButton, BorderLayout.EAST);\n  }","commit_id":"9073a859021468b3c2f4a6493fdeecfa9e580005","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private LabeledComponent<PythonSdkChooserCombo> createInterpreterCombo() {\n    final Project project = ProjectManager.getInstance().getDefaultProject();\n    final List<Sdk> sdks = PyConfigurableInterpreterList.getInstance(project).getAllPythonSdks();\n    VirtualEnvProjectFilter.removeAllAssociated(sdks);\n    Sdk compatibleSdk = sdks.isEmpty() ? null : sdks.iterator().next();\n    DirectoryProjectGenerator generator = getProjectGenerator();\n    if (generator instanceof PyFrameworkProjectGenerator && !((PyFrameworkProjectGenerator)generator).supportsPython3()) {\n      if (compatibleSdk != null && PythonSdkType.getLanguageLevelForSdk(compatibleSdk).isPy3K()) {\n        Sdk python2Sdk = PythonSdkType.findPython2Sdk(sdks);\n        if (python2Sdk != null) {\n          compatibleSdk = python2Sdk;\n        }\n      }\n    }\n\n    final Sdk preferred = compatibleSdk;\n    mySdkCombo = new PythonSdkChooserCombo(project, sdks, sdk -> sdk == preferred);\n    mySdkCombo.putClientProperty(\"JButton.buttonType\", null);\n    mySdkCombo.setButtonIcon(PythonIcons.Python.InterpreterGear);\n    mySdkCombo.putClientProperty(\"JButton.buttonType\", \"square\");\n\n    return LabeledComponent.create(mySdkCombo, \"Interpreter\", BorderLayout.WEST);\n  }","id":8846,"modified_method":"@NotNull\n  private LabeledComponent<PythonSdkChooserCombo> createInterpreterCombo() {\n    final Project project = ProjectManager.getInstance().getDefaultProject();\n    final List<Sdk> sdks = PyConfigurableInterpreterList.getInstance(project).getAllPythonSdks();\n    VirtualEnvProjectFilter.removeAllAssociated(sdks);\n    Sdk compatibleSdk = sdks.isEmpty() ? null : sdks.iterator().next();\n    DirectoryProjectGenerator generator = getProjectGenerator();\n    if (generator instanceof PyFrameworkProjectGenerator && !((PyFrameworkProjectGenerator)generator).supportsPython3()) {\n      if (compatibleSdk != null && PythonSdkType.getLanguageLevelForSdk(compatibleSdk).isPy3K()) {\n        Sdk python2Sdk = PythonSdkType.findPython2Sdk(sdks);\n        if (python2Sdk != null) {\n          compatibleSdk = python2Sdk;\n        }\n      }\n    }\n\n    final Sdk preferred = compatibleSdk;\n    mySdkCombo = new PythonSdkChooserCombo(project, sdks, sdk -> sdk == preferred);\n    if (SystemInfo.isMac && !UIUtil.isUnderDarcula())\n      mySdkCombo.putClientProperty(\"JButton.buttonType\", null);\n    mySdkCombo.setButtonIcon(PythonIcons.Python.InterpreterGear);\n\n    return LabeledComponent.create(mySdkCombo, \"Interpreter\", BorderLayout.WEST);\n  }","commit_id":"9073a859021468b3c2f4a6493fdeecfa9e580005","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void layoutPanel() {\n    myCoursesComboBox = new ComboBox<CourseInfo>();\n\n    final LabeledComponent<ComboBox> coursesCombo = LabeledComponent.create(myCoursesComboBox, \"Courses:\", BorderLayout.WEST);\n\n    myRefreshButton = new FixedSizeButton(coursesCombo);\n    myRefreshButton.putClientProperty(\"JButton.buttonType\", null);\n    myRefreshButton.setIcon(AllIcons.Actions.Refresh);\n    myRefreshButton.putClientProperty(\"JButton.buttonType\", \"square\");\n    myBrowseButton = new FixedSizeButton(coursesCombo);\n\n    final JPanel comboPanel = new JPanel(new BorderLayout());\n    comboPanel.add(coursesCombo, BorderLayout.CENTER);\n    comboPanel.add(myRefreshButton, BorderLayout.EAST);\n\n    final JPanel coursesPanel = new JPanel(new BorderLayout());\n    coursesPanel.add(comboPanel, BorderLayout.CENTER);\n    coursesPanel.add(myBrowseButton, BorderLayout.EAST);\n\n    add(coursesPanel);\n    myAnchor = coursesCombo;\n\n    final JPanel panel = new JPanel(new BorderLayout());\n    final JLabel invisibleLabel = new JLabel();\n    invisibleLabel.setPreferredSize(new JLabel(\"Location: \").getPreferredSize());\n    panel.add(invisibleLabel, BorderLayout.WEST);\n\n    myInfoPanel = new JPanel(new VerticalFlowLayout());\n    myAuthorLabel = new JLabel();\n    myDescriptionPane = new JTextPane();\n    myDescriptionPane.setEditable(true);\n    myDescriptionPane.setEnabled(true);\n    myAuthorLabel.setEnabled(true);\n    myDescriptionPane.setPreferredSize(new Dimension(150, 150));\n    myDescriptionPane.setFont(coursesCombo.getFont());\n    myInfoPanel.add(myAuthorLabel);\n    myInfoPanel.add(myDescriptionPane);\n    myInfoPanel.setBorder(BorderFactory.createLineBorder(new JBColor(10067616, 10067616)));\n\n    panel.add(myInfoPanel, BorderLayout.CENTER);\n    add(panel);\n  }","id":8847,"modified_method":"private void layoutPanel() {\n    myCoursesComboBox = new ComboBox<CourseInfo>();\n\n    final LabeledComponent<ComboBox> coursesCombo = LabeledComponent.create(myCoursesComboBox, \"Courses:\", BorderLayout.WEST);\n\n    myRefreshButton = new FixedSizeButton(coursesCombo);\n    if (SystemInfo.isMac && !UIUtil.isUnderDarcula())\n      myRefreshButton.putClientProperty(\"JButton.buttonType\", null);\n    myRefreshButton.setIcon(AllIcons.Actions.Refresh);\n    myBrowseButton = new FixedSizeButton(coursesCombo);\n\n    final JPanel comboPanel = new JPanel(new BorderLayout());\n    comboPanel.add(coursesCombo, BorderLayout.CENTER);\n    comboPanel.add(myRefreshButton, BorderLayout.EAST);\n\n    final JPanel coursesPanel = new JPanel(new BorderLayout());\n    coursesPanel.add(comboPanel, BorderLayout.CENTER);\n    coursesPanel.add(myBrowseButton, BorderLayout.EAST);\n\n    add(coursesPanel);\n    myAnchor = coursesCombo;\n\n    final JPanel panel = new JPanel(new BorderLayout());\n    final JLabel invisibleLabel = new JLabel();\n    invisibleLabel.setPreferredSize(new JLabel(\"Location: \").getPreferredSize());\n    panel.add(invisibleLabel, BorderLayout.WEST);\n\n    myInfoPanel = new JPanel(new VerticalFlowLayout());\n    myAuthorLabel = new JLabel();\n    myDescriptionPane = new JTextPane();\n    myDescriptionPane.setEditable(true);\n    myDescriptionPane.setEnabled(true);\n    myAuthorLabel.setEnabled(true);\n    myDescriptionPane.setPreferredSize(new Dimension(150, 150));\n    myDescriptionPane.setFont(coursesCombo.getFont());\n    myInfoPanel.add(myAuthorLabel);\n    myInfoPanel.add(myDescriptionPane);\n    myInfoPanel.setBorder(BorderFactory.createLineBorder(new JBColor(10067616, 10067616)));\n\n    panel.add(myInfoPanel, BorderLayout.CENTER);\n    add(panel);\n  }","commit_id":"9073a859021468b3c2f4a6493fdeecfa9e580005","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void setupBrowseButton() {\n    myBrowseButton.putClientProperty(\"JButton.buttonType\", null);\n    myBrowseButton.setIcon(InteractiveLearningIcons.InterpreterGear);\n    myBrowseButton.putClientProperty(\"JButton.buttonType\", \"square\");\n    final FileChooserDescriptor fileChooser = new FileChooserDescriptor(true, false, false, true, false, false) {\n      @Override\n      public boolean isFileVisible(VirtualFile file, boolean showHiddenFiles) {\n        return file.isDirectory() || StudyUtils.isZip(file.getName());\n      }\n\n      @Override\n      public boolean isFileSelectable(VirtualFile file) {\n        return StudyUtils.isZip(file.getName());\n      }\n    };\n    myBrowseButton.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        final BaseListPopupStep<String> popupStep = new BaseListPopupStep<String>(\"\", \"Add local course\", LOGIN_TO_STEPIC) {\n          @Override\n          public PopupStep onChosen(final String selectedValue, boolean finalChoice) {\n            return doFinalStep(() -> {\n              if (\"Add local course\".equals(selectedValue)) {\n\n                Project[] projects = ProjectManager.getInstance().getOpenProjects();\n                FileChooser.chooseFile(fileChooser, null, projects.length == 0 ? null : projects[0].getBaseDir(),\n                                       file -> {\n                                         String fileName = file.getPath();\n                                         int oldSize = myAvailableCourses.size();\n                                         CourseInfo courseInfo = myGenerator.addLocalCourse(fileName);\n                                         if (courseInfo != null) {\n                                           if (oldSize != myAvailableCourses.size()) {\n                                             myCoursesComboBox.addItem(courseInfo);\n                                           }\n                                           myCoursesComboBox.setSelectedItem(courseInfo);\n                                           setOK();\n                                         }\n                                         else {\n                                           setError(INVALID_COURSE);\n                                           myCoursesComboBox.removeAllItems();\n                                           myCoursesComboBox.addItem(CourseInfo.INVALID_COURSE);\n                                           for (CourseInfo course : myAvailableCourses) {\n                                             myCoursesComboBox.addItem(course);\n                                           }\n                                           myCoursesComboBox.setSelectedItem(CourseInfo.INVALID_COURSE);\n                                         }\n                                       });\n              }\n              else if (LOGIN_TO_STEPIC.equals(selectedValue)) {\n                showLoginDialog(true, \"Signing In And Getting Stepik Course List\");\n              }\n            });\n          }\n        };\n        final ListPopup popup = JBPopupFactory.getInstance().createListPopup(popupStep);\n        popup.showInScreenCoordinates(myBrowseButton, myBrowseButton.getLocationOnScreen());\n      }\n    });\n  }","id":8848,"modified_method":"private void setupBrowseButton() {\n    if (SystemInfo.isMac && !UIUtil.isUnderDarcula())\n      myBrowseButton.putClientProperty(\"JButton.buttonType\", null);\n    myBrowseButton.setIcon(InteractiveLearningIcons.InterpreterGear);\n    final FileChooserDescriptor fileChooser = new FileChooserDescriptor(true, false, false, true, false, false) {\n      @Override\n      public boolean isFileVisible(VirtualFile file, boolean showHiddenFiles) {\n        return file.isDirectory() || StudyUtils.isZip(file.getName());\n      }\n\n      @Override\n      public boolean isFileSelectable(VirtualFile file) {\n        return StudyUtils.isZip(file.getName());\n      }\n    };\n    myBrowseButton.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        final BaseListPopupStep<String> popupStep = new BaseListPopupStep<String>(\"\", \"Add local course\", LOGIN_TO_STEPIC) {\n          @Override\n          public PopupStep onChosen(final String selectedValue, boolean finalChoice) {\n            return doFinalStep(() -> {\n              if (\"Add local course\".equals(selectedValue)) {\n\n                Project[] projects = ProjectManager.getInstance().getOpenProjects();\n                FileChooser.chooseFile(fileChooser, null, projects.length == 0 ? null : projects[0].getBaseDir(),\n                                       file -> {\n                                         String fileName = file.getPath();\n                                         int oldSize = myAvailableCourses.size();\n                                         CourseInfo courseInfo = myGenerator.addLocalCourse(fileName);\n                                         if (courseInfo != null) {\n                                           if (oldSize != myAvailableCourses.size()) {\n                                             myCoursesComboBox.addItem(courseInfo);\n                                           }\n                                           myCoursesComboBox.setSelectedItem(courseInfo);\n                                           setOK();\n                                         }\n                                         else {\n                                           setError(INVALID_COURSE);\n                                           myCoursesComboBox.removeAllItems();\n                                           myCoursesComboBox.addItem(CourseInfo.INVALID_COURSE);\n                                           for (CourseInfo course : myAvailableCourses) {\n                                             myCoursesComboBox.addItem(course);\n                                           }\n                                           myCoursesComboBox.setSelectedItem(CourseInfo.INVALID_COURSE);\n                                         }\n                                       });\n              }\n              else if (LOGIN_TO_STEPIC.equals(selectedValue)) {\n                showLoginDialog(true, \"Signing In And Getting Stepik Course List\");\n              }\n            });\n          }\n        };\n        final ListPopup popup = JBPopupFactory.getInstance().createListPopup(popupStep);\n        popup.showInScreenCoordinates(myBrowseButton, myBrowseButton.getLocationOnScreen());\n      }\n    });\n  }","commit_id":"9073a859021468b3c2f4a6493fdeecfa9e580005","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * @return Returns the message text.\n     */\n    public String getMessageText() {\n        return _messageText;\n    }","id":8849,"modified_method":"/**\n     * @return Returns the message text.\n     */\n    public String getMessageText() {\n        return m_messageText;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param password\n     *            The password to set.\n     */\n    public void setPassword(String password) {\n        _password = password;\n    }","id":8850,"modified_method":"/**\n     * @param password\n     *            The password to set.\n     */\n    public void setPassword(String password) {\n        m_password = password;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the mailer.\n     */\n    public String getMailer() {\n        return _mailer;\n    }","id":8851,"modified_method":"/**\n     * @return Returns the mailer.\n     */\n    public String getMailer() {\n        return m_mailer;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the user.\n     */\n    public String getUser() {\n        return _user;\n    }","id":8852,"modified_method":"/**\n     * @return Returns the user.\n     */\n    public String getUser() {\n        return m_user;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param messageText\n     *            Sets the message text.\n     */\n    public void setMessageText(String messageText) {\n        _messageText = messageText;\n    }","id":8853,"modified_method":"/**\n     * @param messageText\n     *            Sets the message text.\n     */\n    public void setMessageText(String messageText) {\n        m_messageText = messageText;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param file\n     *            Sets the file name to be attached to the messaget.\n     */\n    public void setFileName(String fileName) {\n        this._fileName = fileName;\n    }","id":8854,"modified_method":"/**\n     * @param file\n     *            Sets the file name to be attached to the messaget.\n     */\n    public void setFileName(String fileName) {\n        m_fileName = fileName;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the file name attachment.\n     */\n    public String getFileName() {\n        return _fileName;\n    }","id":8855,"modified_method":"/**\n     * @return Returns the file name attachment.\n     */\n    public String getFileName() {\n        return m_fileName;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param user\n     *            The user to set.\n     */\n    public void setUser(String user) {\n        _user = user;\n    }","id":8856,"modified_method":"/**\n     * @param user\n     *            The user to set.\n     */\n    public void setUser(String user) {\n        m_user = user;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the from address.\n     */\n    public String getFrom() {\n        return _from;\n    }","id":8857,"modified_method":"/**\n     * @return Returns the from address.\n     */\n    public String getFrom() {\n        return m_from;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n\t * @param mailHost The _useMailHost to set.\n\t */\n\tpublic void setUseJMTA(boolean useMTA) {\n\t\t_useJMTA = useMTA;\n\t}","id":8858,"modified_method":"/**\n\t * @param mailHost The _useMailHost to set.\n\t */\n\tpublic void setUseJMTA(boolean useMTA) {\n\t\tm_useJMTA = useMTA;\n\t}","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the authenticate boolean.\n     */\n    public boolean isAuthenticate() {\n        return _authenticate;\n    }","id":8859,"modified_method":"/**\n     * @return Returns the authenticate boolean.\n     */\n    public boolean isAuthenticate() {\n        return m_authenticate;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param authenticate\n     *            The authenticate boolean to set.\n     */\n    public void setAuthenticate(boolean authenticate) {\n        _authenticate = authenticate;\n    }","id":8860,"modified_method":"/**\n     * @param authenticate\n     *            The authenticate boolean to set.\n     */\n    public void setAuthenticate(boolean authenticate) {\n        m_authenticate = authenticate;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the To address.\n     */\n    public String getTo() {\n        return _to;\n    }","id":8861,"modified_method":"/**\n     * @return Returns the To address.\n     */\n    public String getTo() {\n        return m_to;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the password.\n     */\n    public String getPassword() {\n        return _password;\n    }","id":8862,"modified_method":"/**\n     * @return Returns the password.\n     */\n    public String getPassword() {\n        return m_password;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the mail host.\n     */\n    public String getMailHost() {\n        return _mailHost;\n    }","id":8863,"modified_method":"/**\n     * @return Returns the mail host.\n     */\n    public String getMailHost() {\n        return m_mailHost;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param text\n     * @param subject\n     * @param to\n     * \n     */\n    public void mailSend() throws JavaMailerException {\n        \n        Properties props = System.getProperties();\n        \n        if (_mailHost != null)\n            props.put(\"mail.smtp.host\", _mailHost);\n        \n        if (_authenticate)\n            props.put(\"mail.smtp.auth\", \"true\");\n        \n        // Get a Session object\n        Session session = Session.getInstance(props, null);\n        session.setDebug(DEFAULT_MAILER_DEBUG);\n        \n        // construct the message\n        Message message = new MimeMessage(session);\n        \n        try {\n            buildMsgHeader(log(), message);\n            \n            if (_fileName != null) {\n                MimeBodyPart mbp1 = new MimeBodyPart(); // for message text\n                // _msg.setText(_messageText);\n                mbp1.setText(_messageText);\n                \n                MimeMultipart mp = new MimeMultipart();\n                mp.addBodyPart(mbp1);\n                \n                log().debug(\"_file is not null\");\n                mimeAttachFile(mp);\n                \n                message.setContent(mp);\n            } else {\n                message.setText(_messageText);\n            }\n            \n            message.setHeader(\"X-Mailer\", _mailer);\n            message.setSentDate(new Date());\n            \n            if (isUseJMTA()) {\n                //JMTA.send(message);\n                // replace above with this so we have no compile time dependency on JMTA\n                Transport  aTransport = session.getTransport( \"mta\" );\n                aTransport.sendMessage( message, null );\n            } else {\n                localMtaSend(session, message);\n            }\n            \n        } catch (AddressException e) {\n            throw new JavaMailerException(\"Java Mailer Addressing exception: \", e);\n        } catch (MessagingException e) {\n            ThreadCategory.getInstance(getClass()).error(\"Java Mailer messaging exception: \", e);\n            throw new JavaMailerException(\"Java Mailer messaging exception: \", e);\n        }\n    }","id":8864,"modified_method":"/**\n     * Sends a message based on properties set on this bean.\n     */\n    public void mailSend() throws JavaMailerException {\n        checkEnvelopeAndContents();\n        \n        Properties props = System.getProperties();\n        \n        props.put(\"mail.smtp.auth\", new Boolean(isAuthenticate()).toString());\n        \n        Session session = Session.getInstance(props, null);\n        session.setDebugOut(new PrintStream(new LoggingByteArrayOutputStream(log()), true));\n        session.setDebug(isDebug());\n        \n        sendMessage(session, buildMessage(session));\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param to\n     *            Sets the To address.\n     */\n    public void setTo(String to) {\n        _to = to;\n    }","id":8865,"modified_method":"/**\n     * @param to\n     *            Sets the To address.\n     */\n    public void setTo(String to) {\n        m_to = to;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n\t * @return Returns the _useMailHost.\n\t */\n\tpublic boolean isUseJMTA() {\n\t\treturn _useJMTA;\n\t}","id":8866,"modified_method":"/**\n\t * @return Returns the _useMailHost.\n\t */\n\tpublic boolean isUseJMTA() {\n\t\treturn m_useJMTA;\n\t}","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param mailer\n     *            Sets the mailer.\n     */\n    public void setMailer(String mailer) {\n        _mailer = mailer;\n    }","id":8867,"modified_method":"/**\n     * @param mailer\n     *            Sets the mailer.\n     */\n    public void setMailer(String mailer) {\n        m_mailer = mailer;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the message Subject.\n     */\n    public String getSubject() {\n        return _subject;\n    }","id":8868,"modified_method":"/**\n     * @return Returns the message Subject.\n     */\n    public String getSubject() {\n        return m_subject;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param from\n     *            The from address to set.\n     */\n    public void setFrom(String from) {\n        _from = from;\n    }","id":8869,"modified_method":"/**\n     * @param from\n     *            The from address to set.\n     */\n    public void setFrom(String from) {\n        m_from = from;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param session\n     * @param _msg\n     * @throws JavaMailerException\n     */\n    private void localMtaSend(Session session, Message _msg) throws JavaMailerException {\n        Transport t = null;\n        try {\n            t = (Transport)session.getTransport(_transport);\n            if (_authenticate)\n                t.connect(_mailHost, _user, _password);\n            else\n                t.connect();\n            \n            t.sendMessage(_msg, _msg.getAllRecipients());\n        } catch (NoSuchProviderException e) {\n            throw new JavaMailerException(\"Couldn't get a transport: \", e);\n        } catch (MessagingException e) {\n            ThreadCategory.getInstance(getClass()).error(\"Java Mailer messaging exception: \", e);\n            throw new JavaMailerException(\"Java Mailer messaging exception: \", e);\n        } finally {\n            try {\n                if (t != null) {\n                    t.close();\n                }\n            } catch (MessagingException e1) {\n                throw new JavaMailerException(\"Java Mailer messaging exception on transport close: \", e1);\n            }\n        }\n    }","id":8870,"modified_method":"/**\n     * Send message.\n     * \n     * @param session\n     * @param message\n     * @throws JavaMailerException\n     */\n    private void sendMessage(Session session, Message message) throws JavaMailerException {\n        Transport t = null;\n        try {\n            t = session.getTransport(getTransport());\n            log().debug(\"for transport name '\" + getTransport() + \"' got: \" + t.getClass().getName() + \"@\" + Integer.toHexString(t.hashCode()));\n            \n            LoggingTransportListener listener = new LoggingTransportListener(log());\n            t.addTransportListener(listener);\n            \n            if (t.getURLName().getProtocol().equals(\"mta\")) {\n                // JMTA throws an AuthenticationFailedException if we call connect()\n                log().debug(\"transport is 'mta', not trying to connect()\");\n            } else if (isAuthenticate()) {\n                log().debug(\"authenticating to \" + getMailHost());\n                t.connect(getMailHost(), getUser(), getPassword());\n            } else {\n                log().debug(\"not authenticating to \" + getMailHost());\n                t.connect(getMailHost(), null, null);\n            }\n            \n            t.sendMessage(message, message.getAllRecipients());\n            listener.assertAllMessagesDelivered();\n        } catch (NoSuchProviderException e) {\n            log().error(\"Couldn't get a transport: \" + e, e);\n            throw new JavaMailerException(\"Couldn't get a transport: \" + e, e);\n        } catch (MessagingException e) {\n            log().error(\"Java Mailer messaging exception: \" + e, e);\n            throw new JavaMailerException(\"Java Mailer messaging exception: \" + e, e);\n        } finally {\n            try {\n                if (t != null && t.isConnected()) {\n                    t.close();\n                }\n            } catch (MessagingException e) {\n                throw new JavaMailerException(\"Java Mailer messaging exception on transport close: \" + e, e);\n            }\n        }\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param mail_host\n     *            Sets the mail host.\n     */\n    public void setMailHost(String mail_host) {\n        _mailHost = mail_host;\n    }","id":8871,"modified_method":"/**\n     * @param mail_host\n     *            Sets the mail host.\n     */\n    public void setMailHost(String mail_host) {\n        m_mailHost = mail_host;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param subject\n     *            Sets the message Subject.\n     */\n    public void setSubject(String subject) {\n        _subject = subject;\n    }","id":8872,"modified_method":"/**\n     * @param subject\n     *            Sets the message Subject.\n     */\n    public void setSubject(String subject) {\n        m_subject = subject;\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public final void testJavaMailerWithFileAttachment() {\n        \n        JavaMailer jm = new JavaMailer();\n\n        jm.setFrom(\"brozow@opennms.org\");\n        try {\n            jm.setMessageText(\"Test message with file attachment from testJavaMailer: \"+InetAddress.getLocalHost());\n        } catch (UnknownHostException e) {\n            log().error(\"Host Name exception: \"+e.getMessage());\n        }\n        jm.setSubject(\"Testing JavaMailer\");\n        jm.setTo(\"brozow@opennms.org\");\n        \n        jm.setFileName(\"/etc/motd\");\n        try {\n            jm.mailSend();\n        } catch (JavaMailerException e) {\n            log().error(\"JavaMailerException exception: \"+e.getMessage());\n        }\n        \n    }","id":8873,"modified_method":"public final void testJavaMailerWithFileAttachment() throws Exception {\n        JavaMailer jm = createMailer(\"Test message with file attachment from testJavaMailer\");\n        \n        jm.setFileName(\"/etc/motd\");\n        \n        jm.mailSend();\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public final void testJavaMailerWithoutFileAttachment()  {\n        \n        JavaMailer jm = new JavaMailer();\n        \n        jm.setFrom(\"brozow@opennms.org\");\n        try {\n            jm.setMessageText(\"Test message from testJavaMailer: \"+InetAddress.getLocalHost());\n        } catch (UnknownHostException e) {\n            log().error(\"Host Name exception: \"+e.getMessage());\n        }\n        jm.setSubject(\"Testing JavaMailer\");\n        jm.setTo(\"brozow@opennms.org\");\n        try {\n            jm.mailSend();\n        } catch (JavaMailerException e) {\n            log().error(\"JavaMailerException exception: \"+e.getMessage());\n        }\n        \n    }","id":8874,"modified_method":"public final void testJavaMailerWithoutMTA() throws Exception {\n        JavaMailer jm = createMailer(\"Test message from testJavaMailer without MTA\");\n        \n        jm.setUseJMTA(false);\n        jm.setMailHost(\"mail.opennms.org\");\n        \n        jm.mailSend();\n    }","commit_id":"e42f07f1a15415b74c0f56254fbec69e0b80839a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the message Subject.\n     */\n    public String getSubject() {\n        return _subject;\n    }","id":8875,"modified_method":"/**\n     * @return Returns the message Subject.\n     */\n    public String getSubject() {\n        return m_subject;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the from address.\n     */\n    public String getFrom() {\n        return _from;\n    }","id":8876,"modified_method":"/**\n     * @return Returns the from address.\n     */\n    public String getFrom() {\n        return m_from;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the password.\n     */\n    public String getPassword() {\n        return _password;\n    }","id":8877,"modified_method":"/**\n     * @return Returns the password.\n     */\n    public String getPassword() {\n        return m_password;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the message text.\n     */\n    public String getMessageText() {\n        return _messageText;\n    }","id":8878,"modified_method":"/**\n     * @return Returns the message text.\n     */\n    public String getMessageText() {\n        return m_messageText;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the To address.\n     */\n    public String getTo() {\n        return _to;\n    }","id":8879,"modified_method":"/**\n     * @return Returns the To address.\n     */\n    public String getTo() {\n        return m_to;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param from\n     *            The from address to set.\n     */\n    public void setFrom(String from) {\n        _from = from;\n    }","id":8880,"modified_method":"/**\n     * @param from\n     *            The from address to set.\n     */\n    public void setFrom(String from) {\n        m_from = from;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param text\n     * @param subject\n     * @param to\n     * \n     */\n    public void mailSend() throws JavaMailerException {\n        \n        Properties props = System.getProperties();\n        \n        if (_mailHost != null)\n            props.put(\"mail.smtp.host\", _mailHost);\n        \n        if (_authenticate)\n            props.put(\"mail.smtp.auth\", \"true\");\n        \n        // Get a Session object\n        Session session = Session.getInstance(props, null);\n        session.setDebug(DEFAULT_MAILER_DEBUG);\n        \n        // construct the message\n        Message message = new MimeMessage(session);\n        \n        try {\n            buildMsgHeader(log(), message);\n            \n            if (_fileName != null) {\n                MimeBodyPart mbp1 = new MimeBodyPart(); // for message text\n                // _msg.setText(_messageText);\n                mbp1.setText(_messageText);\n                \n                MimeMultipart mp = new MimeMultipart();\n                mp.addBodyPart(mbp1);\n                \n                log().debug(\"_file is not null\");\n                mimeAttachFile(mp);\n                \n                message.setContent(mp);\n            } else {\n                message.setText(_messageText);\n            }\n            \n            message.setHeader(\"X-Mailer\", _mailer);\n            message.setSentDate(new Date());\n            \n            if (isUseJMTA()) {\n                //JMTA.send(message);\n                // replace above with this so we have no compile time dependency on JMTA\n                Transport  aTransport = session.getTransport( \"mta\" );\n                aTransport.sendMessage( message, null );\n            } else {\n                localMtaSend(session, message);\n            }\n            \n        } catch (AddressException e) {\n            throw new JavaMailerException(\"Java Mailer Addressing exception: \", e);\n        } catch (MessagingException e) {\n            ThreadCategory.getInstance(getClass()).error(\"Java Mailer messaging exception: \", e);\n            throw new JavaMailerException(\"Java Mailer messaging exception: \", e);\n        }\n    }","id":8881,"modified_method":"/**\n     * Sends a message based on properties set on this bean.\n     */\n    public void mailSend() throws JavaMailerException {\n        checkEnvelopeAndContents();\n        \n        Properties props = System.getProperties();\n        \n        props.put(\"mail.smtp.auth\", new Boolean(isAuthenticate()).toString());\n        \n        Session session = Session.getInstance(props, null);\n        session.setDebugOut(new PrintStream(new LoggingByteArrayOutputStream(log()), true));\n        session.setDebug(isDebug());\n        \n        sendMessage(session, buildMessage(session));\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param password\n     *            The password to set.\n     */\n    public void setPassword(String password) {\n        _password = password;\n    }","id":8882,"modified_method":"/**\n     * @param password\n     *            The password to set.\n     */\n    public void setPassword(String password) {\n        m_password = password;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n\t * @return Returns the _useMailHost.\n\t */\n\tpublic boolean isUseJMTA() {\n\t\treturn _useJMTA;\n\t}","id":8883,"modified_method":"/**\n\t * @return Returns the _useMailHost.\n\t */\n\tpublic boolean isUseJMTA() {\n\t\treturn m_useJMTA;\n\t}","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param messageText\n     *            Sets the message text.\n     */\n    public void setMessageText(String messageText) {\n        _messageText = messageText;\n    }","id":8884,"modified_method":"/**\n     * @param messageText\n     *            Sets the message text.\n     */\n    public void setMessageText(String messageText) {\n        m_messageText = messageText;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the mail host.\n     */\n    public String getMailHost() {\n        return _mailHost;\n    }","id":8885,"modified_method":"/**\n     * @return Returns the mail host.\n     */\n    public String getMailHost() {\n        return m_mailHost;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param mailer\n     *            Sets the mailer.\n     */\n    public void setMailer(String mailer) {\n        _mailer = mailer;\n    }","id":8886,"modified_method":"/**\n     * @param mailer\n     *            Sets the mailer.\n     */\n    public void setMailer(String mailer) {\n        m_mailer = mailer;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param authenticate\n     *            The authenticate boolean to set.\n     */\n    public void setAuthenticate(boolean authenticate) {\n        _authenticate = authenticate;\n    }","id":8887,"modified_method":"/**\n     * @param authenticate\n     *            The authenticate boolean to set.\n     */\n    public void setAuthenticate(boolean authenticate) {\n        m_authenticate = authenticate;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the file name attachment.\n     */\n    public String getFileName() {\n        return _fileName;\n    }","id":8888,"modified_method":"/**\n     * @return Returns the file name attachment.\n     */\n    public String getFileName() {\n        return m_fileName;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the mailer.\n     */\n    public String getMailer() {\n        return _mailer;\n    }","id":8889,"modified_method":"/**\n     * @return Returns the mailer.\n     */\n    public String getMailer() {\n        return m_mailer;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param file\n     *            Sets the file name to be attached to the messaget.\n     */\n    public void setFileName(String fileName) {\n        this._fileName = fileName;\n    }","id":8890,"modified_method":"/**\n     * @param file\n     *            Sets the file name to be attached to the messaget.\n     */\n    public void setFileName(String fileName) {\n        m_fileName = fileName;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param subject\n     *            Sets the message Subject.\n     */\n    public void setSubject(String subject) {\n        _subject = subject;\n    }","id":8891,"modified_method":"/**\n     * @param subject\n     *            Sets the message Subject.\n     */\n    public void setSubject(String subject) {\n        m_subject = subject;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the authenticate boolean.\n     */\n    public boolean isAuthenticate() {\n        return _authenticate;\n    }","id":8892,"modified_method":"/**\n     * @return Returns the authenticate boolean.\n     */\n    public boolean isAuthenticate() {\n        return m_authenticate;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param to\n     *            Sets the To address.\n     */\n    public void setTo(String to) {\n        _to = to;\n    }","id":8893,"modified_method":"/**\n     * @param to\n     *            Sets the To address.\n     */\n    public void setTo(String to) {\n        m_to = to;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param mail_host\n     *            Sets the mail host.\n     */\n    public void setMailHost(String mail_host) {\n        _mailHost = mail_host;\n    }","id":8894,"modified_method":"/**\n     * @param mail_host\n     *            Sets the mail host.\n     */\n    public void setMailHost(String mail_host) {\n        m_mailHost = mail_host;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param session\n     * @param _msg\n     * @throws JavaMailerException\n     */\n    private void localMtaSend(Session session, Message _msg) throws JavaMailerException {\n        Transport t = null;\n        try {\n            t = (Transport)session.getTransport(_transport);\n            if (_authenticate)\n                t.connect(_mailHost, _user, _password);\n            else\n                t.connect();\n            \n            t.sendMessage(_msg, _msg.getAllRecipients());\n        } catch (NoSuchProviderException e) {\n            throw new JavaMailerException(\"Couldn't get a transport: \", e);\n        } catch (MessagingException e) {\n            ThreadCategory.getInstance(getClass()).error(\"Java Mailer messaging exception: \", e);\n            throw new JavaMailerException(\"Java Mailer messaging exception: \", e);\n        } finally {\n            try {\n                if (t != null) {\n                    t.close();\n                }\n            } catch (MessagingException e1) {\n                throw new JavaMailerException(\"Java Mailer messaging exception on transport close: \", e1);\n            }\n        }\n    }","id":8895,"modified_method":"/**\n     * Send message.\n     * \n     * @param session\n     * @param message\n     * @throws JavaMailerException\n     */\n    private void sendMessage(Session session, Message message) throws JavaMailerException {\n        Transport t = null;\n        try {\n            t = session.getTransport(getTransport());\n            log().debug(\"for transport name '\" + getTransport() + \"' got: \" + t.getClass().getName() + \"@\" + Integer.toHexString(t.hashCode()));\n            \n            LoggingTransportListener listener = new LoggingTransportListener(log());\n            t.addTransportListener(listener);\n            \n            if (t.getURLName().getProtocol().equals(\"mta\")) {\n                // JMTA throws an AuthenticationFailedException if we call connect()\n                log().debug(\"transport is 'mta', not trying to connect()\");\n            } else if (isAuthenticate()) {\n                log().debug(\"authenticating to \" + getMailHost());\n                t.connect(getMailHost(), getUser(), getPassword());\n            } else {\n                log().debug(\"not authenticating to \" + getMailHost());\n                t.connect(getMailHost(), null, null);\n            }\n            \n            t.sendMessage(message, message.getAllRecipients());\n            listener.assertAllMessagesDelivered();\n        } catch (NoSuchProviderException e) {\n            log().error(\"Couldn't get a transport: \" + e, e);\n            throw new JavaMailerException(\"Couldn't get a transport: \" + e, e);\n        } catch (MessagingException e) {\n            log().error(\"Java Mailer messaging exception: \" + e, e);\n            throw new JavaMailerException(\"Java Mailer messaging exception: \" + e, e);\n        } finally {\n            try {\n                if (t != null && t.isConnected()) {\n                    t.close();\n                }\n            } catch (MessagingException e) {\n                throw new JavaMailerException(\"Java Mailer messaging exception on transport close: \" + e, e);\n            }\n        }\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n\t * @param mailHost The _useMailHost to set.\n\t */\n\tpublic void setUseJMTA(boolean useMTA) {\n\t\t_useJMTA = useMTA;\n\t}","id":8896,"modified_method":"/**\n\t * @param mailHost The _useMailHost to set.\n\t */\n\tpublic void setUseJMTA(boolean useMTA) {\n\t\tm_useJMTA = useMTA;\n\t}","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @return Returns the user.\n     */\n    public String getUser() {\n        return _user;\n    }","id":8897,"modified_method":"/**\n     * @return Returns the user.\n     */\n    public String getUser() {\n        return m_user;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param user\n     *            The user to set.\n     */\n    public void setUser(String user) {\n        _user = user;\n    }","id":8898,"modified_method":"/**\n     * @param user\n     *            The user to set.\n     */\n    public void setUser(String user) {\n        m_user = user;\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public final void testJavaMailerWithFileAttachment() {\n        \n        JavaMailer jm = new JavaMailer();\n\n        jm.setFrom(\"brozow@opennms.org\");\n        try {\n            jm.setMessageText(\"Test message with file attachment from testJavaMailer: \"+InetAddress.getLocalHost());\n        } catch (UnknownHostException e) {\n            log().error(\"Host Name exception: \"+e.getMessage());\n        }\n        jm.setSubject(\"Testing JavaMailer\");\n        jm.setTo(\"brozow@opennms.org\");\n        \n        jm.setFileName(\"/etc/motd\");\n        try {\n            jm.mailSend();\n        } catch (JavaMailerException e) {\n            log().error(\"JavaMailerException exception: \"+e.getMessage());\n        }\n        \n    }","id":8899,"modified_method":"public final void testJavaMailerWithFileAttachment() throws Exception {\n        JavaMailer jm = createMailer(\"Test message with file attachment from testJavaMailer\");\n        \n        jm.setFileName(\"/etc/motd\");\n        \n        jm.mailSend();\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public final void testJavaMailerWithoutFileAttachment()  {\n        \n        JavaMailer jm = new JavaMailer();\n        \n        jm.setFrom(\"brozow@opennms.org\");\n        try {\n            jm.setMessageText(\"Test message from testJavaMailer: \"+InetAddress.getLocalHost());\n        } catch (UnknownHostException e) {\n            log().error(\"Host Name exception: \"+e.getMessage());\n        }\n        jm.setSubject(\"Testing JavaMailer\");\n        jm.setTo(\"brozow@opennms.org\");\n        try {\n            jm.mailSend();\n        } catch (JavaMailerException e) {\n            log().error(\"JavaMailerException exception: \"+e.getMessage());\n        }\n        \n    }","id":8900,"modified_method":"public final void testJavaMailerWithoutMTA() throws Exception {\n        JavaMailer jm = createMailer(\"Test message from testJavaMailer without MTA\");\n        \n        jm.setUseJMTA(false);\n        jm.setMailHost(\"mail.opennms.org\");\n        \n        jm.mailSend();\n    }","commit_id":"16ba00ed01b4f46deea5b2a01d78505ebdf34236","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n  @CheckForNull\n  public String debtSubCharacteristicKey() {\n    throw new UnsupportedOperationException(\"TODO\");\n  }","id":8901,"modified_method":"@Override\n  @CheckForNull\n  public String debtSubCharacteristicKey(){\n    return (String) fields.get(RuleField.SUB_CHARACTERISTIC.key());\n  }","commit_id":"cce5960df81c865c074c3c5dfc011714d0fb6220","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  @CheckForNull\n  public DebtRemediationFunction debtRemediationFunction() {\n    throw new UnsupportedOperationException(\"TODO\");\n  }","id":8902,"modified_method":"@Override\n  @CheckForNull\n  public DebtRemediationFunction debtRemediationFunction() {\n    final String function = (String) this.fields.get(RuleField.DEBT_FUNCTION_TYPE.key());\n    if(function == null || function.isEmpty()){\n      return null;\n    } else {\n      return new DebtRemediationFunction() {\n        @Override\n        public Type type() {\n          return Type.valueOf(function.toUpperCase());\n        }\n\n        @Override\n        public String coefficient() {\n          return (String) fields.get(RuleField.DEBT_FUNCTION_COEFFICIENT.key());\n        }\n\n        @Override\n        public String offset() {\n          return (String) fields.get(RuleField.DEBT_FUNCTION_OFFSET.key());\n        }\n      };\n    }\n  }","commit_id":"cce5960df81c865c074c3c5dfc011714d0fb6220","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private RuleDto newRuleDto(RuleKey ruleKey) {\n    return new RuleDto()\n      .setRuleKey(ruleKey.rule())\n      .setRepositoryKey(ruleKey.repository())\n      .setName(\"Rule \" + ruleKey.rule())\n      .setDescription(\"Description \" + ruleKey.rule())\n      .setStatus(RuleStatus.READY.toString())\n      .setConfigKey(\"InternalKey\" + ruleKey.rule())\n      .setSeverity(Severity.INFO)\n      .setCardinality(Cardinality.SINGLE)\n      .setLanguage(\"js\")\n      .setRemediationFunction(\"linear\")\n      .setDefaultRemediationFunction(\"linear_offset\")\n      .setRemediationCoefficient(\"1h\")\n      .setDefaultRemediationCoefficient(\"5d\")\n      .setRemediationOffset(\"5min\")\n      .setDefaultRemediationOffset(\"10h\")\n      .setEffortToFixDescription(ruleKey.repository() + \".\" + ruleKey.rule() + \".effortToFix\");\n  }","id":8903,"modified_method":"private RuleDto newRuleDto(RuleKey ruleKey) {\n    return new RuleDto()\n      .setRuleKey(ruleKey.rule())\n      .setRepositoryKey(ruleKey.repository())\n      .setName(\"Rule \" + ruleKey.rule())\n      .setDescription(\"Description \" + ruleKey.rule())\n      .setStatus(RuleStatus.READY.toString())\n      .setConfigKey(\"InternalKey\" + ruleKey.rule())\n      .setSeverity(Severity.INFO)\n      .setCardinality(Cardinality.SINGLE)\n      .setLanguage(\"js\")\n      .setRemediationFunction(\"LINEAR\")\n      .setDefaultRemediationFunction(\"linear_offset\")\n      .setRemediationCoefficient(\"1h\")\n      .setDefaultRemediationCoefficient(\"5d\")\n      .setRemediationOffset(\"5min\")\n      .setDefaultRemediationOffset(\"10h\")\n      .setEffortToFixDescription(ruleKey.repository() + \".\" + ruleKey.rule() + \".effortToFix\");\n  }","commit_id":"cce5960df81c865c074c3c5dfc011714d0fb6220","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public UpdateRequest normalize(RuleDto rule) {\n    try {\n      XContentBuilder document = jsonBuilder().startObject();\n      indexField(RuleField.KEY.key(), rule.getRuleKey(), document);\n      indexField(RuleField.REPOSITORY.key(), rule.getRepositoryKey(), document);\n      indexField(RuleField.NAME.key(), rule.getName(), document);\n      indexField(RuleField.CREATED_AT.key(), rule.getCreatedAt(), document);\n      indexField(RuleField.UPDATED_AT.key(), rule.getUpdatedAt(), document);\n      indexField(RuleField.HTML_DESCRIPTION.key(), rule.getDescription(), document);\n      indexField(RuleField.SEVERITY.key(), rule.getSeverityString(), document);\n      indexField(RuleField.STATUS.key(), rule.getStatus(), document);\n      indexField(RuleField.LANGUAGE.key(), rule.getLanguage(), document);\n      indexField(RuleField.INTERNAL_KEY.key(), rule.getConfigKey(), document);\n      indexField(RuleField.TEMPLATE.key(), rule.getCardinality() == Cardinality.MULTIPLE, document);\n      indexField(RuleField.DEBT_FUNCTION.key(), rule.getDefaultRemediationFunction(),document);\n\n\n\n\n      document.array(RuleField.TAGS.key(), rule.getTags().toArray(new String[rule.getTags().size()]));\n      document.array(RuleField.SYSTEM_TAGS.key(), rule.getSystemTags().toArray(new String[rule.getSystemTags().size()]));\n      document.startObject(RuleField.PARAMS.key()).endObject();\n      document.startObject(RuleField.ACTIVE.key()).endObject();\n\n    /* Done normalizing for Rule */\n      document.endObject();\n\n    /* Creating updateRequest */\n      UpdateRequest request = new UpdateRequest().doc(document);\n      request.docAsUpsert(true);\n      return request;\n    } catch (Exception e) {\n      throw new IllegalStateException(String.format(\"Could not normalize RuleDto with key %s\", rule.getKey().toString()), e);\n    }\n  }","id":8904,"modified_method":"@Override\n  public UpdateRequest normalize(RuleDto rule) {\n    try {\n      XContentBuilder document = jsonBuilder().startObject();\n      indexField(RuleField.KEY.key(), rule.getRuleKey(), document);\n      indexField(RuleField.REPOSITORY.key(), rule.getRepositoryKey(), document);\n      indexField(RuleField.NAME.key(), rule.getName(), document);\n      indexField(RuleField.CREATED_AT.key(), rule.getCreatedAt(), document);\n      indexField(RuleField.UPDATED_AT.key(), rule.getUpdatedAt(), document);\n      indexField(RuleField.HTML_DESCRIPTION.key(), rule.getDescription(), document);\n      indexField(RuleField.SEVERITY.key(), rule.getSeverityString(), document);\n      indexField(RuleField.STATUS.key(), rule.getStatus(), document);\n      indexField(RuleField.LANGUAGE.key(), rule.getLanguage(), document);\n      indexField(RuleField.INTERNAL_KEY.key(), rule.getConfigKey(), document);\n      indexField(RuleField.TEMPLATE.key(), rule.getCardinality() == Cardinality.MULTIPLE, document);\n\n      //TODO Change on key when available\n      String subChar = null;\n      if(rule.getDefaultSubCharacteristicId() != null){\n        subChar = rule.getDefaultSubCharacteristicId().toString();\n      }\n      if(rule.getSubCharacteristicId() != null){\n        subChar = rule.getSubCharacteristicId().toString();\n      }\n      indexField(RuleField.SUB_CHARACTERISTIC.key(),subChar,document);\n\n      String dType = null, dCoefficient = null, dOffset = null;\n      if(rule.getDefaultRemediationFunction() != null){\n        dType = rule.getDefaultRemediationFunction();\n        dCoefficient = rule.getDefaultRemediationCoefficient();\n        dOffset= rule.getDefaultRemediationOffset();\n      }\n      if(rule.getRemediationFunction() != null){\n        dType = rule.getRemediationFunction();\n        dCoefficient = rule.getRemediationCoefficient();\n        dOffset= rule.getRemediationOffset();\n      }\n      indexField(RuleField.DEBT_FUNCTION_TYPE.key(), dType, document);\n      indexField(RuleField.DEBT_FUNCTION_COEFFICIENT.key(), dCoefficient, document);\n      indexField(RuleField.DEBT_FUNCTION_OFFSET.key(), dOffset, document);\n\n\n\n\n      document.array(RuleField.TAGS.key(), rule.getTags().toArray(new String[rule.getTags().size()]));\n      document.array(RuleField.SYSTEM_TAGS.key(), rule.getSystemTags().toArray(new String[rule.getSystemTags().size()]));\n      document.startObject(RuleField.PARAMS.key()).endObject();\n      document.startObject(RuleField.ACTIVE.key()).endObject();\n\n    /* Done normalizing for Rule */\n      document.endObject();\n\n    /* Creating updateRequest */\n      UpdateRequest request = new UpdateRequest().doc(document);\n      request.docAsUpsert(true);\n      return request;\n    } catch (Exception e) {\n      throw new IllegalStateException(String.format(\"Could not normalize RuleDto with key %s\", rule.getKey().toString()), e);\n    }\n  }","commit_id":"cce5960df81c865c074c3c5dfc011714d0fb6220","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void search_no_rules() throws Exception {\n\n    MockUserSession.set();\n    WsTester.TestRequest request = wsTester.newGetRequest(\"api/rules2\", \"search\");\n    System.out.println(\"request.toString() = \" + request.toString());\n\n    WsTester.Result result = request.execute();\n\n    result.assertJson(this.getClass(), \"search_no_rules.json\");\n  }","id":8905,"modified_method":"@Test\n  public void search_no_rules() throws Exception {\n\n    MockUserSession.set();\n    WsTester.TestRequest request = wsTester.newGetRequest(\"api/rules2\", \"search\");\n\n    WsTester.Result result = request.execute();\n\n    result.assertJson(this.getClass(), \"search_no_rules.json\");\n  }","commit_id":"cce5960df81c865c074c3c5dfc011714d0fb6220","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeRules(RuleResult result, JsonWriter json) {\n\n    json.name(\"rules\").beginArray();\n    for (Rule rule : result.getHits()) {\n      json.beginObject();\n      json\n        .prop(\"repo\", rule.key().repository())\n        .prop(\"key\", rule.key().toString())\n        .prop(\"lang\", rule.language())\n        .prop(\"name\", rule.name())\n        .prop(\"htmlDesc\", rule.htmlDescription())\n        .prop(\"status\", rule.status().toString())\n        .prop(\"template\", rule.template())\n        .prop(\"internalKey\", rule.internalKey())\n        .prop(\"severity\", rule.severity())\n        .name(\"tags\").beginArray().values(rule.tags()).endArray()\n        .name(\"sysTags\").beginArray().values(rule.systemTags()).endArray();\n      json.name(\"params\").beginArray();\n      for (RuleParam param : rule.params()) {\n        json\n          .beginObject()\n          .prop(\"key\", param.key())\n          .prop(\"desc\", param.description())\n          .prop(\"defaultValue\", param.defaultValue())\n          .endObject();\n      }\n      json.endArray();\n      json.name(\"actives\").beginArray();\n\n      for (ActiveRule activeRule : result.getActiveRules()) {\n        json\n          .beginObject()\n          .prop(\"key\",activeRule.key().toString())\n          .prop(\"inherit\", activeRule.inheritance().name())\n          .prop(\"severity\", activeRule.severity());\n        if(activeRule.parentKey() != null){\n          json.prop(\"parent\",activeRule.parentKey().toString());\n        }\n\n        json\n          .name(\"params\").beginArray();\n        for (Map.Entry<String, String> param : activeRule.params().entrySet()) {\n          json.beginObject()\n            .prop(\"key\", param.getKey())\n            .prop(\"value\", param.getValue())\n            .endObject();\n        }\n        json.endArray();\n        json.endObject();\n      }\n      json.endArray();\n      json.endObject();\n    }\n    json.endArray();\n  }","id":8906,"modified_method":"private void writeRules(RuleResult result, JsonWriter json) {\n\n    json.name(\"rules\").beginArray();\n    for (Rule rule : result.getHits()) {\n      json.beginObject();\n      json\n        .prop(\"repo\", rule.key().repository())\n        .prop(\"key\", rule.key().toString())\n        .prop(\"lang\", rule.language())\n        .prop(\"name\", rule.name())\n        .prop(\"htmlDesc\", rule.htmlDescription())\n        .prop(\"status\", rule.status().toString())\n        .prop(\"template\", rule.template())\n        .prop(\"internalKey\", rule.internalKey())\n        .prop(\"severity\", rule.severity())\n        .name(\"tags\").beginArray().values(rule.tags()).endArray()\n        .name(\"sysTags\").beginArray().values(rule.systemTags()).endArray();\n      if(rule.debtSubCharacteristicKey() != null && !rule.debtSubCharacteristicKey().isEmpty()){\n        json\n          .prop(\"debtSubCharacteristicKey\", rule.debtSubCharacteristicKey());\n      }\n      if(rule.debtRemediationFunction() != null){\n        json\n          .prop(\"debtRemediationFunctionType\", rule.debtRemediationFunction().type().name())\n          .prop(\"debtRemediationFunctionCoefficient\", rule.debtRemediationFunction().coefficient())\n          .prop(\"debtRemediationFunctionOffset\", rule.debtRemediationFunction().offset());\n      }\n      json.name(\"params\").beginArray();\n      for (RuleParam param : rule.params()) {\n        json\n          .beginObject()\n          .prop(\"key\", param.key())\n          .prop(\"desc\", param.description())\n          .prop(\"defaultValue\", param.defaultValue())\n          .endObject();\n      }\n      json.endArray();\n      json.name(\"actives\").beginArray();\n\n      for (ActiveRule activeRule : result.getActiveRules()) {\n        json\n          .beginObject()\n          .prop(\"key\",activeRule.key().toString())\n          .prop(\"inherit\", activeRule.inheritance().name())\n          .prop(\"severity\", activeRule.severity());\n        if(activeRule.parentKey() != null){\n          json.prop(\"parent\",activeRule.parentKey().toString());\n        }\n\n        json\n          .name(\"params\").beginArray();\n        for (Map.Entry<String, String> param : activeRule.params().entrySet()) {\n          json.beginObject()\n            .prop(\"key\", param.getKey())\n            .prop(\"value\", param.getValue())\n            .endObject();\n        }\n        json.endArray();\n        json.endObject();\n      }\n      json.endArray();\n      json.endObject();\n    }\n    json.endArray();\n  }","commit_id":"cce5960df81c865c074c3c5dfc011714d0fb6220","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public RuleKey key() {\n    return RuleKey.of((String) fields.get(\"repositoryKey\"), (String) fields.get(\"key\"));\n  }","id":8907,"modified_method":"@Override\n  public RuleKey key() {\n    return RuleKey.of((String) fields.get(RuleField.REPOSITORY.key()),\n      (String) fields.get(RuleField.KEY.key()));\n  }","commit_id":"44c4b0ce45089c1a72006b88b71bb3a4b9a5bd7e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public Date createdAt() {\n    return (Date) fields.get(\"createdAt\");\n  }","id":8908,"modified_method":"@Override\n  public Date createdAt() {\n    return (Date) fields.get(RuleField.CREATED_AT.key());\n  }","commit_id":"44c4b0ce45089c1a72006b88b71bb3a4b9a5bd7e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public String severity() {\n    return (String) fields.get(\"severity\");\n  }","id":8909,"modified_method":"@Override\n  public String severity() {\n    return (String) fields.get(RuleField.SEVERITY.key());\n  }","commit_id":"44c4b0ce45089c1a72006b88b71bb3a4b9a5bd7e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public String description() {\n    return (String) fields.get(\"desc\");\n  }","id":8910,"modified_method":"@Override\n  public String description() {\n    return (String) fields.get(RuleField.DESCRIPTION.key());\n  }","commit_id":"44c4b0ce45089c1a72006b88b71bb3a4b9a5bd7e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public String name() {\n    return (String) fields.get(\"name\");\n  }","id":8911,"modified_method":"@Override\n  public String name() {\n    return (String) fields.get(RuleField.NAME.key());\n  }","commit_id":"44c4b0ce45089c1a72006b88b71bb3a4b9a5bd7e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public Date updatedAt() {\n    return (Date) fields.get(\"updatedAt\");\n  }","id":8912,"modified_method":"@Override\n  public Date updatedAt() {\n    return (Date) fields.get(RuleField.UDPATED_AT.key());\n  }","commit_id":"44c4b0ce45089c1a72006b88b71bb3a4b9a5bd7e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public RuleStatus status() {\n    return RuleStatus.valueOf((String) fields.get(\"status\"));\n  }","id":8913,"modified_method":"@Override\n  public RuleStatus status() {\n    return RuleStatus.valueOf((String) fields.get(RuleField.STATUS.key()));\n  }","commit_id":"44c4b0ce45089c1a72006b88b71bb3a4b9a5bd7e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  @SuppressWarnings(\"unchecked\")\n  public List<String> tags() {\n    return (List<String>) fields.get(\"tags\");\n  }","id":8914,"modified_method":"@Override\n  @SuppressWarnings(\"unchecked\")\n  public List<String> tags() {\n    return (List<String>) fields.get(RuleField.TAGS.key());\n  }","commit_id":"44c4b0ce45089c1a72006b88b71bb3a4b9a5bd7e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public boolean template() {\n    throw new UnsupportedOperationException();\n  }","id":8915,"modified_method":"@Override\n  public boolean template() {\n    return (Boolean) fields.get(RuleField.TEMPLATE.key());\n  }","commit_id":"44c4b0ce45089c1a72006b88b71bb3a4b9a5bd7e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  @SuppressWarnings(\"unchecked\")\n  public List<String> systemTags() {\n    return (List<String>) fields.get(\"sysTags\");\n  }","id":8916,"modified_method":"@Override\n  @SuppressWarnings(\"unchecked\")\n  public List<String> systemTags() {\n    return (List<String>) fields.get(RuleField.SYSTEM_TAGS.key());\n  }","commit_id":"44c4b0ce45089c1a72006b88b71bb3a4b9a5bd7e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public String language() {\n    return (String) fields.get(\"lang\");\n  }","id":8917,"modified_method":"@Override\n  public String language() {\n    return (String) fields.get(RuleField.LANGUAGE.key());\n  }","commit_id":"44c4b0ce45089c1a72006b88b71bb3a4b9a5bd7e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public Results search(RuleQuery query, QueryOptions options) {\n\n    throw new UnsupportedOperationException(\"TODO\");\n\n  }","id":8918,"modified_method":"public Results search(RuleQuery query, QueryOptions options) {\n\n//    QueryBuilder qb;\n//    if(query.getQueryText() != null && !query.getQueryText().isEmpty()){\n//      qb = QueryBuilders.multiMatchQuery(\"test\", \"toto\");\n//    } else {\n//      qb = QueryBuilders.matchAllQuery();\n//    }\n//\n//    SearchResponse esResult = getClient()\n//      .prepareSearch(this.getIndexName())\n//      .setQuery(qb)\n//      .get();\n//\n      Results results = new Results();\n    return results;\n  }","commit_id":"44c4b0ce45089c1a72006b88b71bb3a4b9a5bd7e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  protected XContentBuilder getMapping() {\n    try {\n      XContentBuilder mapping = jsonBuilder().startObject()\n        .startObject(this.getType())\n        .field(\"dynamic\", true)\n        .startObject(\"properties\");\n\n      addMatchField(mapping, \"id\", \"string\");\n      addMatchField(mapping, \"key\", \"string\");\n      addMatchField(mapping, \"repositoryKey\", \"string\");\n      addMatchField(mapping, \"severity\", \"string\");\n\n      mapping.startObject(\"active\")\n        .field(\"type\", \"nested\")\n        .field(\"dynamic\", true)\n        .endObject();\n\n      return mapping.endObject()\n        .endObject().endObject();\n\n    } catch (IOException e) {\n      LOG.error(\"Could not create mapping for {}\", this.getIndexName());\n      return null;\n    }\n  }","id":8919,"modified_method":"@Override\n  protected XContentBuilder getMapping() {\n    try {\n      XContentBuilder mapping = jsonBuilder().startObject()\n        .startObject(this.getType())\n        .field(\"dynamic\", true)\n        .startObject(\"properties\");\n\n      addMatchField(mapping, RuleField.KEY.key(), \"string\");\n      addMatchField(mapping, RuleField.REPOSITORY.key(), \"string\");\n      addMatchField(mapping, RuleField.SEVERITY.key(), \"string\");\n\n      mapping.startObject(\"active\")\n        .field(\"type\", \"nested\")\n        .field(\"dynamic\", true)\n        .endObject();\n\n      return mapping.endObject()\n        .endObject().endObject();\n\n    } catch (IOException e) {\n      LOG.error(\"Could not create mapping for {}\", this.getIndexName());\n      return null;\n    }\n  }","commit_id":"44c4b0ce45089c1a72006b88b71bb3a4b9a5bd7e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void test_dao_queue_es_search_loop() {\n\n    RuleDao dao = tester.get(RuleDao.class);\n    ActiveRuleDao adao = tester.get(ActiveRuleDao.class);\n    RuleIndex index = tester.get(RuleIndex.class);\n\n    dao.insert(dto);\n\n    Hit hit = index.getByKey(dto.getKey());\n    assertThat(hit.getFields().get(RuleNormalizer.RuleFields.RULE_KEY.key())).isEqualTo(dto.getRuleKey().toString());\n  }","id":8920,"modified_method":"@Test\n  public void test_dao_queue_es_search_loop() {\n\n    RuleDao dao = tester.get(RuleDao.class);\n    ActiveRuleDao adao = tester.get(ActiveRuleDao.class);\n    RuleIndex index = tester.get(RuleIndex.class);\n\n    dao.insert(dto);\n\n    Hit hit = index.getByKey(dto.getKey());\n    assertThat(hit.getFields().get(RuleNormalizer.RuleField.KEY.key())).isEqualTo(dto.getRuleKey().toString());\n  }","commit_id":"44c4b0ce45089c1a72006b88b71bb3a4b9a5bd7e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public XContentBuilder normalize(RuleDto rule) throws IOException {\n\n    XContentBuilder document = jsonBuilder().startObject();\n\n    indexField(RuleFields.KEY.key(), rule.getKey(), document);\n    indexField(RuleFields.NAME.key(), rule.getName(), document);\n    indexField(RuleFields.CREATED_AT.key(), rule.getCreatedAt(), document);\n    indexField(RuleFields.RULE_KEY.key(), rule.getRuleKey(), document);\n    indexField(RuleFields.REPOSITORY_KEY.key(), rule.getRepositoryKey(), document);\n\n    // document.startArray(\"active\");\n    // for (ActiveRuleDto activeRule : activeRuleDao.selectByRuleId(rule.getId())) {\n    // document.startObject();\n    // Map<String, Object> activeRuleProperties = BeanUtils.describe(activeRule);\n    // for (Entry<String, Object> activeRuleProp : activeRuleProperties.entrySet()) {\n    // LOG.trace(\"NORMALIZING: --- {} -> {}\", activeRuleProp.getKey(), activeRuleProp.getValue());\n    // document.field(activeRuleProp.getKey(), activeRuleProp.getValue());\n    // }\n    // document.endObject();\n    // }\n    // document.endArray();\n\n    return document.endObject();\n  }","id":8921,"modified_method":"@Override\n  public XContentBuilder normalize(RuleDto rule) throws IOException {\n\n    XContentBuilder document = jsonBuilder().startObject();\n\n\n    indexField(RuleField.KEY.key(), rule.getRuleKey(), document);\n    indexField(RuleField.REPOSITORY.key(), rule.getRepositoryKey(), document);\n    indexField(RuleField.NAME.key(), rule.getName(), document);\n    indexField(RuleField.CREATED_AT.key(), rule.getCreatedAt(), document);\n    indexField(RuleField.UDPATED_AT.key(), rule.getUpdatedAt(), document);\n    indexField(RuleField.DESCRIPTION.key(), rule.getDescription(), document);\n    indexField(RuleField.SEVERITY.key(), rule.getSeverityString(), document);\n    indexField(RuleField.STATUS.key(), rule.getStatus(), document);\n    indexField(RuleField.LANGUAGE.key(), rule.getLanguage(), document);\n    indexField(RuleField.INTERNAL_KEY.key(), rule.getConfigKey(), document);\n    indexField(RuleField.TEMPLATE.key(), rule.getCardinality()==Cardinality.MULTIPLE, document);\n\n    indexField(RuleField.TAGS.key(), rule.getName(), document);\n    indexField(RuleField.SYSTEM_TAGS.key(), rule.getName(), document);\n\n    // document.startArray(\"active\");\n    // for (ActiveRuleDto activeRule : activeRuleDao.selectByRuleId(rule.getId())) {\n    // document.startObject();\n    // Map<String, Object> activeRuleProperties = BeanUtils.describe(activeRule);\n    // for (Entry<String, Object> activeRuleProp : activeRuleProperties.entrySet()) {\n    // LOG.trace(\"NORMALIZING: --- {} -> {}\", activeRuleProp.getKey(), activeRuleProp.getValue());\n    // document.field(activeRuleProp.getKey(), activeRuleProp.getValue());\n    // }\n    // document.endObject();\n    // }\n    // document.endArray();\n\n    return document.endObject();\n  }","commit_id":"44c4b0ce45089c1a72006b88b71bb3a4b9a5bd7e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void enableRemoteStaging(\n\t\t\tlong userId, long scopeGroupId, long liveGroupId,\n\t\t\tboolean branchingPublic, boolean branchingPrivate,\n\t\t\tString remoteAddress, long remoteGroupId, int remotePort,\n\t\t\tboolean secureConnection, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tGroup liveGroup = GroupLocalServiceUtil.getGroup(liveGroupId);\n\n\t\tvalidate(remoteAddress, remoteGroupId, remotePort, secureConnection);\n\n\t\tif (liveGroup.hasStagingGroup()) {\n\t\t\tdisableStaging(scopeGroupId, liveGroupId, serviceContext);\n\t\t}\n\n\t\tUnicodeProperties typeSettingsProperties =\n\t\t\tliveGroup.getTypeSettingsProperties();\n\n\t\ttypeSettingsProperties.setProperty(\n\t\t\t\"branchingPrivate\", String.valueOf(branchingPrivate));\n\t\ttypeSettingsProperties.setProperty(\n\t\t\t\"branchingPublic\", String.valueOf(branchingPublic));\n\t\ttypeSettingsProperties.setProperty(\"remoteAddress\", remoteAddress);\n\t\ttypeSettingsProperties.setProperty(\n\t\t\t\"remoteGroupId\", String.valueOf(remoteGroupId));\n\t\ttypeSettingsProperties.setProperty(\n\t\t\t\"remotePort\", String.valueOf(remotePort));\n\t\ttypeSettingsProperties.setProperty(\n\t\t\t\"secureConnection\", String.valueOf(secureConnection));\n\t\ttypeSettingsProperties.setProperty(\"staged\", Boolean.TRUE.toString());\n\t\ttypeSettingsProperties.setProperty(\n\t\t\t\"stagedRemotely\", Boolean.TRUE.toString());\n\n\t\tsetCommonStagingOptions(\n\t\t\tliveGroup, typeSettingsProperties, serviceContext);\n\n\t\tGroupLocalServiceUtil.updateGroup(\n\t\t\tliveGroup.getGroupId(), typeSettingsProperties.toString());\n\n\t\tif (branchingPublic) {\n\t\t\tLayoutSetBranchLocalServiceUtil.addLayoutSetBranch(\n\t\t\t\tserviceContext.getUserId(), liveGroup.getGroupId(), false,\n\t\t\t\tLayoutSetBranchConstants.MASTER_BRANCH_NAME,\n\t\t\t\tLayoutSetBranchConstants.MASTER_BRANCH_NAME.concat(\n\t\t\t\t\t\" branch of \").concat(liveGroup.getDescriptiveName()),\n\t\t\t\tserviceContext);\n\t\t}\n\n\t\tif (branchingPrivate) {\n\t\t\tLayoutSetBranchLocalServiceUtil.addLayoutSetBranch(\n\t\t\t\tserviceContext.getUserId(), liveGroup.getGroupId(), true,\n\t\t\t\tLayoutSetBranchConstants.MASTER_BRANCH_NAME,\n\t\t\t\tLayoutSetBranchConstants.MASTER_BRANCH_NAME.concat(\n\t\t\t\t\t\" branch of \").concat(liveGroup.getDescriptiveName()),\n\t\t\t\tserviceContext);\n\t\t}\n\t}","id":8922,"modified_method":"public void enableRemoteStaging(\n\t\t\tlong userId, long scopeGroupId, long liveGroupId,\n\t\t\tboolean branchingPublic, boolean branchingPrivate,\n\t\t\tString remoteAddress, long remoteGroupId, int remotePort,\n\t\t\tboolean secureConnection, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tGroup liveGroup = GroupLocalServiceUtil.getGroup(liveGroupId);\n\n\t\tvalidate(remoteAddress, remoteGroupId, remotePort, secureConnection);\n\n\t\tif (liveGroup.hasStagingGroup()) {\n\t\t\tdisableStaging(scopeGroupId, liveGroupId, serviceContext);\n\t\t}\n\n\t\tUnicodeProperties typeSettingsProperties =\n\t\t\tliveGroup.getTypeSettingsProperties();\n\n\t\ttypeSettingsProperties.setProperty(\n\t\t\t\"branchingPrivate\", String.valueOf(branchingPrivate));\n\t\ttypeSettingsProperties.setProperty(\n\t\t\t\"branchingPublic\", String.valueOf(branchingPublic));\n\t\ttypeSettingsProperties.setProperty(\"remoteAddress\", remoteAddress);\n\t\ttypeSettingsProperties.setProperty(\n\t\t\t\"remoteGroupId\", String.valueOf(remoteGroupId));\n\t\ttypeSettingsProperties.setProperty(\n\t\t\t\"remotePort\", String.valueOf(remotePort));\n\t\ttypeSettingsProperties.setProperty(\n\t\t\t\"secureConnection\", String.valueOf(secureConnection));\n\t\ttypeSettingsProperties.setProperty(\"staged\", Boolean.TRUE.toString());\n\t\ttypeSettingsProperties.setProperty(\n\t\t\t\"stagedRemotely\", Boolean.TRUE.toString());\n\n\t\tsetCommonStagingOptions(\n\t\t\tliveGroup, typeSettingsProperties, serviceContext);\n\n\t\tGroupLocalServiceUtil.updateGroup(\n\t\t\tliveGroup.getGroupId(), typeSettingsProperties.toString());\n\n\t\tif (branchingPublic) {\n\t\t\tLocale defaultLocale = LocaleUtil.getDefault();\n\n\t\t\tString description = LanguageUtil.format(\n\t\t\t\tdefaultLocale,\n\t\t\t\tLayoutSetBranchConstants.MASTER_BRANCH_DESCRIPTION,\n\t\t\t\tliveGroup.getDescriptiveName());\n\n\t\t\tLayoutSetBranchLocalServiceUtil.addLayoutSetBranch(\n\t\t\t\tserviceContext.getUserId(), liveGroup.getGroupId(), false,\n\t\t\t\tLayoutSetBranchConstants.MASTER_BRANCH_NAME, description,\n\t\t\t\tserviceContext);\n\t\t}\n\n\t\tif (branchingPrivate) {\n\t\t\tLocale defaultLocale = LocaleUtil.getDefault();\n\n\t\t\tString description = LanguageUtil.format(\n\t\t\t\tdefaultLocale,\n\t\t\t\tLayoutSetBranchConstants.MASTER_BRANCH_DESCRIPTION,\n\t\t\t\tliveGroup.getDescriptiveName());\n\n\t\t\tLayoutSetBranchLocalServiceUtil.addLayoutSetBranch(\n\t\t\t\tserviceContext.getUserId(), liveGroup.getGroupId(), true,\n\t\t\t\tLayoutSetBranchConstants.MASTER_BRANCH_NAME,\n\t\t\t\tdescription, serviceContext);\n\t\t}\n\t}","commit_id":"0495e83e6ed163475841cf1cd6be62ee6796e618","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void enableLocalStaging(\n\t\t\tlong userId, long scopeGroupId, long liveGroupId,\n\t\t\tboolean branchingPublic, boolean branchingPrivate,\n\t\t\tServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tGroup liveGroup = GroupLocalServiceUtil.getGroup(liveGroupId);\n\n\t\tif (liveGroup.isStagedRemotely()) {\n\t\t\tdisableStaging(scopeGroupId, liveGroupId, serviceContext);\n\t\t}\n\n\t\tUnicodeProperties typeSettingsProperties =\n\t\t\tliveGroup.getTypeSettingsProperties();\n\n\t\ttypeSettingsProperties.setProperty(\n\t\t\t\"staged\", Boolean.TRUE.toString());\n\t\ttypeSettingsProperties.setProperty(\n\t\t\t\"stagedRemotely\", String.valueOf(false));\n\n\t\tsetCommonStagingOptions(\n\t\t\tliveGroup, typeSettingsProperties, serviceContext);\n\n\t\tif (!liveGroup.hasStagingGroup()) {\n\t\t\tserviceContext.setAttribute(\"staging\", String.valueOf(true));\n\n\t\t\tGroup stagingGroup = GroupLocalServiceUtil.addGroup(\n\t\t\t\tuserId, liveGroup.getClassName(), liveGroup.getClassPK(),\n\t\t\t\tliveGroup.getGroupId(), liveGroup.getDescriptiveName(),\n\t\t\t\tliveGroup.getDescription(), liveGroup.getType(),\n\t\t\t\tliveGroup.getFriendlyURL(), false, liveGroup.isActive(),\n\t\t\t\tserviceContext);\n\n\t\t\tif (branchingPublic) {\n\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\"branchingPublic\", String.valueOf(branchingPublic));\n\n\t\t\t\tLayoutSetBranchLocalServiceUtil.addLayoutSetBranch(\n\t\t\t\t\tuserId, stagingGroup.getGroupId(), false,\n\t\t\t\t\tLayoutSetBranchConstants.MASTER_BRANCH_NAME,\n\t\t\t\t\tLayoutSetBranchConstants.MASTER_BRANCH_NAME.concat(\n\t\t\t\t\t\t\" branch of \").concat(\n\t\t\t\t\t\t\tstagingGroup.getDescriptiveName()), serviceContext);\n\t\t\t}\n\n\t\t\tif (branchingPrivate) {\n\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\"branchingPrivate\", String.valueOf(branchingPrivate));\n\n\t\t\t\tLayoutSetBranchLocalServiceUtil.addLayoutSetBranch(\n\t\t\t\t\tuserId, stagingGroup.getGroupId(), true,\n\t\t\t\t\tLayoutSetBranchConstants.MASTER_BRANCH_NAME,\n\t\t\t\t\tLayoutSetBranchConstants.MASTER_BRANCH_NAME.concat(\n\t\t\t\t\t\t\" branch of \").concat(\n\t\t\t\t\t\t\tstagingGroup.getDescriptiveName()), serviceContext);\n\t\t\t}\n\n\t\t\tGroupLocalServiceUtil.updateGroup(\n\t\t\t\tliveGroup.getGroupId(), typeSettingsProperties.toString());\n\n\t\t\tif (liveGroup.hasPrivateLayouts()) {\n\t\t\t\tMap<String, String[]> parameterMap = getStagingParameters();\n\n\t\t\t\tpublishLayouts(\n\t\t\t\t\tuserId, liveGroup.getGroupId(), stagingGroup.getGroupId(),\n\t\t\t\t\ttrue, parameterMap, null, null);\n\t\t\t}\n\n\t\t\tif (liveGroup.hasPublicLayouts()) {\n\t\t\t\tMap<String, String[]> parameterMap = getStagingParameters();\n\n\t\t\t\tpublishLayouts(\n\t\t\t\t\tuserId, liveGroup.getGroupId(), stagingGroup.getGroupId(),\n\t\t\t\t\tfalse, parameterMap, null, null);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tGroupLocalServiceUtil.updateGroup(\n\t\t\t\tliveGroup.getGroupId(), typeSettingsProperties.toString());\n\n\t\t\tif (!branchingPublic) {\n\t\t\t\tLayoutSetBranchLocalServiceUtil.deleteLayoutSetBranches(\n\t\t\t\t\tliveGroup.getStagingGroup().getGroupId(), true);\n\t\t\t}\n\t\t}\n\t}","id":8923,"modified_method":"public void enableLocalStaging(\n\t\t\tlong userId, long scopeGroupId, long liveGroupId,\n\t\t\tboolean branchingPublic, boolean branchingPrivate,\n\t\t\tServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tGroup liveGroup = GroupLocalServiceUtil.getGroup(liveGroupId);\n\n\t\tif (liveGroup.isStagedRemotely()) {\n\t\t\tdisableStaging(scopeGroupId, liveGroupId, serviceContext);\n\t\t}\n\n\t\tUnicodeProperties typeSettingsProperties =\n\t\t\tliveGroup.getTypeSettingsProperties();\n\n\t\ttypeSettingsProperties.setProperty(\n\t\t\t\"staged\", Boolean.TRUE.toString());\n\t\ttypeSettingsProperties.setProperty(\n\t\t\t\"stagedRemotely\", String.valueOf(false));\n\n\t\tsetCommonStagingOptions(\n\t\t\tliveGroup, typeSettingsProperties, serviceContext);\n\n\t\tif (!liveGroup.hasStagingGroup()) {\n\t\t\tserviceContext.setAttribute(\"staging\", String.valueOf(true));\n\n\t\t\tGroup stagingGroup = GroupLocalServiceUtil.addGroup(\n\t\t\t\tuserId, liveGroup.getClassName(), liveGroup.getClassPK(),\n\t\t\t\tliveGroup.getGroupId(), liveGroup.getDescriptiveName(),\n\t\t\t\tliveGroup.getDescription(), liveGroup.getType(),\n\t\t\t\tliveGroup.getFriendlyURL(), false, liveGroup.isActive(),\n\t\t\t\tserviceContext);\n\n\t\t\tif (branchingPublic) {\n\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\"branchingPublic\", String.valueOf(branchingPublic));\n\n\t\t\t\tLocale defaultLocale = LocaleUtil.getDefault();\n\n\t\t\t\tString description = LanguageUtil.format(\n\t\t\t\t\tdefaultLocale,\n\t\t\t\t\tLayoutSetBranchConstants.MASTER_BRANCH_DESCRIPTION,\n\t\t\t\t\tstagingGroup.getDescriptiveName());\n\n\t\t\t\tLayoutSetBranchLocalServiceUtil.addLayoutSetBranch(\n\t\t\t\t\tuserId, stagingGroup.getGroupId(), false,\n\t\t\t\t\tLayoutSetBranchConstants.MASTER_BRANCH_NAME,\n\t\t\t\t\tdescription, serviceContext);\n\t\t\t}\n\n\t\t\tif (branchingPrivate) {\n\t\t\t\ttypeSettingsProperties.setProperty(\n\t\t\t\t\t\"branchingPrivate\", String.valueOf(branchingPrivate));\n\n\t\t\t\tLocale defaultLocale = LocaleUtil.getDefault();\n\n\t\t\t\tString description = LanguageUtil.format(\n\t\t\t\t\tdefaultLocale,\n\t\t\t\t\tLayoutSetBranchConstants.MASTER_BRANCH_DESCRIPTION,\n\t\t\t\t\tstagingGroup.getDescriptiveName());\n\n\t\t\t\tLayoutSetBranchLocalServiceUtil.addLayoutSetBranch(\n\t\t\t\t\tuserId, stagingGroup.getGroupId(), true,\n\t\t\t\t\tLayoutSetBranchConstants.MASTER_BRANCH_NAME,\n\t\t\t\t\tdescription, serviceContext);\n\t\t\t}\n\n\t\t\tGroupLocalServiceUtil.updateGroup(\n\t\t\t\tliveGroup.getGroupId(), typeSettingsProperties.toString());\n\n\t\t\tif (liveGroup.hasPrivateLayouts()) {\n\t\t\t\tMap<String, String[]> parameterMap = getStagingParameters();\n\n\t\t\t\tpublishLayouts(\n\t\t\t\t\tuserId, liveGroup.getGroupId(), stagingGroup.getGroupId(),\n\t\t\t\t\ttrue, parameterMap, null, null);\n\t\t\t}\n\n\t\t\tif (liveGroup.hasPublicLayouts()) {\n\t\t\t\tMap<String, String[]> parameterMap = getStagingParameters();\n\n\t\t\t\tpublishLayouts(\n\t\t\t\t\tuserId, liveGroup.getGroupId(), stagingGroup.getGroupId(),\n\t\t\t\t\tfalse, parameterMap, null, null);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tGroupLocalServiceUtil.updateGroup(\n\t\t\t\tliveGroup.getGroupId(), typeSettingsProperties.toString());\n\n\t\t\tif (!branchingPublic) {\n\t\t\t\tLayoutSetBranchLocalServiceUtil.deleteLayoutSetBranches(\n\t\t\t\t\tliveGroup.getStagingGroup().getGroupId(), true);\n\t\t\t}\n\t\t}\n\t}","commit_id":"0495e83e6ed163475841cf1cd6be62ee6796e618","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public List<Container> allocateAndWaitForContainers(int nContainer,\n      int memory, MockNM nm) throws Exception {\n    // AM request for containers\n    allocate(\"ANY\", memory, nContainer, null);\n    // kick the scheduler\n    nm.nodeHeartbeat(true);\n    List<Container> conts =\n        allocate(new ArrayList<ResourceRequest>(), null)\n            .getAllocatedContainers();\n    while (conts.size() < nContainer) {\n      nm.nodeHeartbeat(true);\n      conts.addAll(allocate(new ArrayList<ResourceRequest>(),\n          new ArrayList<ContainerId>()).getAllocatedContainers());\n      Thread.sleep(500);\n    }\n    return conts;\n  }","id":8924,"modified_method":"public List<Container> allocateAndWaitForContainers(int nContainer,\n      int memory, MockNM nm) throws Exception {\n    return allocateAndWaitForContainers(\"ANY\", nContainer, memory, nm);\n  }","commit_id":"df9e7280db58baddd02d6e23d3685efb8d5f1b97","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testApplicationPriorityAllocation() throws Exception {\n\n    Configuration conf = new Configuration();\n    conf.setClass(YarnConfiguration.RM_SCHEDULER, CapacityScheduler.class,\n        ResourceScheduler.class);\n    // Set Max Application Priority as 10\n    conf.setInt(YarnConfiguration.MAX_CLUSTER_LEVEL_APPLICATION_PRIORITY, 10);\n    MockRM rm = new MockRM(conf);\n    rm.start();\n\n    Priority appPriority1 = Priority.newInstance(5);\n    MockNM nm1 = rm.registerNode(\"127.0.0.1:1234\", 16 * GB);\n    RMApp app1 = rm.submitApp(1 * GB, appPriority1);\n\n    // kick the scheduler, 1 GB given to AM1, remaining 15GB on nm1\n    MockAM am1 = MockRM.launchAM(app1, rm, nm1);\n    am1.registerAppAttempt();\n\n    // add request for containers\n    am1.addRequests(new String[]{\"127.0.0.1\", \"127.0.0.2\"}, 2 * GB, 1, 7);\n    AllocateResponse alloc1Response = am1.schedule(); // send the request\n\n    // kick the scheduler, 7 containers will be allocated for App1\n    nm1.nodeHeartbeat(true);\n    while (alloc1Response.getAllocatedContainers().size() < 1) {\n      LOG.info(\"Waiting for containers to be created for app 1...\");\n      Thread.sleep(100);\n      alloc1Response = am1.schedule();\n    }\n\n    List<Container> allocated1 = alloc1Response.getAllocatedContainers();\n    Assert.assertEquals(7, allocated1.size());\n    Assert.assertEquals(2 * GB, allocated1.get(0).getResource().getMemory());\n\n    // check node report, 15 GB used (1 AM and 7 containers) and 1 GB available\n    SchedulerNodeReport report_nm1 = rm.getResourceScheduler().getNodeReport(\n        nm1.getNodeId());\n    Assert.assertEquals(15 * GB, report_nm1.getUsedResource().getMemory());\n    Assert.assertEquals(1 * GB, report_nm1.getAvailableResource().getMemory());\n\n    // Submit the second app App2 with priority 8 (Higher than App1)\n    Priority appPriority2 = Priority.newInstance(8);\n    RMApp app2 = rm.submitApp(1 * GB, appPriority2);\n\n    // kick the scheduler, 1 GB which was free is given to AM of App2\n    nm1.nodeHeartbeat(true);\n    MockAM am2 = rm.sendAMLaunched(app2.getCurrentAppAttempt()\n        .getAppAttemptId());\n    am2.registerAppAttempt();\n\n    // check node report, 16 GB used and 0 GB available\n    report_nm1 = rm.getResourceScheduler().getNodeReport(nm1.getNodeId());\n    Assert.assertEquals(16 * GB, report_nm1.getUsedResource().getMemory());\n    Assert.assertEquals(0 * GB, report_nm1.getAvailableResource().getMemory());\n\n    // get scheduler\n    CapacityScheduler cs = (CapacityScheduler) rm.getResourceScheduler();\n\n    // get scheduler app\n    FiCaSchedulerApp schedulerAppAttempt = cs.getSchedulerApplications()\n        .get(app1.getApplicationId()).getCurrentAppAttempt();\n\n    // kill 2 containers to free up some space\n    int counter = 0;\n    for (Container c : allocated1) {\n      if (++counter > 2) {\n        break;\n      }\n      cs.killContainer(schedulerAppAttempt.getRMContainer(c.getId()));\n    }\n\n    // check node report, 12 GB used and 4 GB available\n    report_nm1 = rm.getResourceScheduler().getNodeReport(nm1.getNodeId());\n    Assert.assertEquals(12 * GB, report_nm1.getUsedResource().getMemory());\n    Assert.assertEquals(4 * GB, report_nm1.getAvailableResource().getMemory());\n\n    // add request for containers App1\n    am1.addRequests(new String[]{\"127.0.0.1\", \"127.0.0.2\"}, 2 * GB, 1, 10);\n    am1.schedule(); // send the request for App1\n\n    // add request for containers App2\n    am2.addRequests(new String[]{\"127.0.0.1\", \"127.0.0.2\"}, 2 * GB, 1, 3);\n    AllocateResponse alloc1Response4 = am2.schedule(); // send the request\n\n    // kick the scheduler, since App2 priority is more than App1, it will get\n    // remaining cluster space.\n    nm1.nodeHeartbeat(true);\n    while (alloc1Response4.getAllocatedContainers().size() < 1) {\n      LOG.info(\"Waiting for containers to be created for app 2...\");\n      Thread.sleep(100);\n      alloc1Response4 = am2.schedule();\n    }\n\n    // check node report, 16 GB used and 0 GB available\n    report_nm1 = rm.getResourceScheduler().getNodeReport(nm1.getNodeId());\n    Assert.assertEquals(16 * GB, report_nm1.getUsedResource().getMemory());\n    Assert.assertEquals(0 * GB, report_nm1.getAvailableResource().getMemory());\n\n    rm.stop();\n  }","id":8925,"modified_method":"@Test\n  public void testApplicationPriorityAllocation() throws Exception {\n\n    Configuration conf = new Configuration();\n    conf.setClass(YarnConfiguration.RM_SCHEDULER, CapacityScheduler.class,\n        ResourceScheduler.class);\n    // Set Max Application Priority as 10\n    conf.setInt(YarnConfiguration.MAX_CLUSTER_LEVEL_APPLICATION_PRIORITY, 10);\n    MockRM rm = new MockRM(conf);\n    rm.start();\n\n    Priority appPriority1 = Priority.newInstance(5);\n    MockNM nm1 = rm.registerNode(\"127.0.0.1:1234\", 16 * GB);\n    RMApp app1 = rm.submitApp(1 * GB, appPriority1);\n\n    // kick the scheduler, 1 GB given to AM1, remaining 15GB on nm1\n    MockAM am1 = MockRM.launchAM(app1, rm, nm1);\n    am1.registerAppAttempt();\n\n    // allocate 7 containers for App1\n    List<Container> allocated1 = am1.allocateAndWaitForContainers(\"127.0.0.1\",\n        7, 2 * GB, nm1);\n\n    Assert.assertEquals(7, allocated1.size());\n    Assert.assertEquals(2 * GB, allocated1.get(0).getResource().getMemory());\n\n    // check node report, 15 GB used (1 AM and 7 containers) and 1 GB available\n    SchedulerNodeReport report_nm1 = rm.getResourceScheduler().getNodeReport(\n        nm1.getNodeId());\n    Assert.assertEquals(15 * GB, report_nm1.getUsedResource().getMemory());\n    Assert.assertEquals(1 * GB, report_nm1.getAvailableResource().getMemory());\n\n    // Submit the second app App2 with priority 8 (Higher than App1)\n    Priority appPriority2 = Priority.newInstance(8);\n    RMApp app2 = rm.submitApp(1 * GB, appPriority2);\n\n    // kick the scheduler, 1 GB which was free is given to AM of App2\n    MockAM am2 = MockRM.launchAM(app2, rm, nm1);\n    am2.registerAppAttempt();\n\n    // check node report, 16 GB used and 0 GB available\n    report_nm1 = rm.getResourceScheduler().getNodeReport(nm1.getNodeId());\n    Assert.assertEquals(16 * GB, report_nm1.getUsedResource().getMemory());\n    Assert.assertEquals(0 * GB, report_nm1.getAvailableResource().getMemory());\n\n    // get scheduler\n    CapacityScheduler cs = (CapacityScheduler) rm.getResourceScheduler();\n\n    // get scheduler app\n    FiCaSchedulerApp schedulerAppAttempt = cs.getSchedulerApplications()\n        .get(app1.getApplicationId()).getCurrentAppAttempt();\n\n    // kill 2 containers of App1 to free up some space\n    int counter = 0;\n    for (Container c : allocated1) {\n      if (++counter > 2) {\n        break;\n      }\n      cs.killContainer(schedulerAppAttempt.getRMContainer(c.getId()));\n    }\n\n    // check node report, 12 GB used and 4 GB available\n    report_nm1 = rm.getResourceScheduler().getNodeReport(nm1.getNodeId());\n    Assert.assertEquals(12 * GB, report_nm1.getUsedResource().getMemory());\n    Assert.assertEquals(4 * GB, report_nm1.getAvailableResource().getMemory());\n\n    // send updated request for App1\n    am1.allocate(\"127.0.0.1\", 2 * GB, 10, new ArrayList<ContainerId>());\n\n    // kick the scheduler, since App2 priority is more than App1, it will get\n    // remaining cluster space.\n    List<Container> allocated2 = am2.allocateAndWaitForContainers(\"127.0.0.1\",\n        2, 2 * GB, nm1);\n\n    // App2 has got 2 containers now.\n    Assert.assertEquals(2, allocated2.size());\n\n    // check node report, 16 GB used and 0 GB available\n    report_nm1 = rm.getResourceScheduler().getNodeReport(nm1.getNodeId());\n    Assert.assertEquals(16 * GB, report_nm1.getUsedResource().getMemory());\n    Assert.assertEquals(0 * GB, report_nm1.getAvailableResource().getMemory());\n\n    rm.stop();\n  }","commit_id":"df9e7280db58baddd02d6e23d3685efb8d5f1b97","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testPriorityWithPendingApplications() throws Exception {\n\n    Configuration conf = new Configuration();\n    conf.setClass(YarnConfiguration.RM_SCHEDULER, CapacityScheduler.class,\n        ResourceScheduler.class);\n    // Set Max Application Priority as 10\n    conf.setInt(YarnConfiguration.MAX_CLUSTER_LEVEL_APPLICATION_PRIORITY, 10);\n    MockRM rm = new MockRM(conf);\n    rm.start();\n\n    Priority appPriority1 = Priority.newInstance(5);\n    MockNM nm1 = rm.registerNode(\"127.0.0.1:1234\", 8 * GB);\n    RMApp app1 = rm.submitApp(1 * GB, appPriority1);\n\n    // kick the scheduler, 1 GB given to AM1, remaining 7GB on nm1\n    MockAM am1 = MockRM.launchAM(app1, rm, nm1);\n    am1.registerAppAttempt();\n\n    // add request for containers\n    am1.addRequests(new String[]{\"127.0.0.1\", \"127.0.0.2\"}, 1 * GB, 1, 7);\n    AllocateResponse alloc1Response = am1.schedule(); // send the request\n\n    // kick the scheduler, 7 containers will be allocated for App1\n    nm1.nodeHeartbeat(true);\n    while (alloc1Response.getAllocatedContainers().size() < 1) {\n      LOG.info(\"Waiting for containers to be created for app 1...\");\n      Thread.sleep(100);\n      alloc1Response = am1.schedule();\n    }\n\n    List<Container> allocated1 = alloc1Response.getAllocatedContainers();\n    Assert.assertEquals(7, allocated1.size());\n    Assert.assertEquals(1 * GB, allocated1.get(0).getResource().getMemory());\n\n    // check node report, 8 GB used (1 AM and 7 containers) and 0 GB available\n    SchedulerNodeReport report_nm1 = rm.getResourceScheduler().getNodeReport(\n        nm1.getNodeId());\n    Assert.assertEquals(8 * GB, report_nm1.getUsedResource().getMemory());\n    Assert.assertEquals(0 * GB, report_nm1.getAvailableResource().getMemory());\n\n    // Submit the second app App2 with priority 7\n    Priority appPriority2 = Priority.newInstance(7);\n    RMApp app2 = rm.submitApp(1 * GB, appPriority2);\n\n    // Submit the third app App3 with priority 8\n    Priority appPriority3 = Priority.newInstance(8);\n    RMApp app3 = rm.submitApp(1 * GB, appPriority3);\n\n    // Submit the second app App4 with priority 6\n    Priority appPriority4 = Priority.newInstance(6);\n    RMApp app4 = rm.submitApp(1 * GB, appPriority4);\n\n    // Only one app can run as AM resource limit restricts it. Kill app1,\n    // If app3 (highest priority among rest) gets active, it indicates that\n    // priority is working with pendingApplications.\n    rm.killApp(app1.getApplicationId());\n\n    // kick the scheduler, app3 (high among pending) gets free space\n    nm1.nodeHeartbeat(true);\n    MockAM am3 = rm.sendAMLaunched(app3.getCurrentAppAttempt()\n        .getAppAttemptId());\n    am3.registerAppAttempt();\n\n    // check node report, 1 GB used and 7 GB available\n    report_nm1 = rm.getResourceScheduler().getNodeReport(nm1.getNodeId());\n    Assert.assertEquals(1 * GB, report_nm1.getUsedResource().getMemory());\n    Assert.assertEquals(7 * GB, report_nm1.getAvailableResource().getMemory());\n\n    rm.stop();\n  }","id":8926,"modified_method":"@Test\n  public void testPriorityWithPendingApplications() throws Exception {\n\n    Configuration conf = new Configuration();\n    conf.setClass(YarnConfiguration.RM_SCHEDULER, CapacityScheduler.class,\n        ResourceScheduler.class);\n    // Set Max Application Priority as 10\n    conf.setInt(YarnConfiguration.MAX_CLUSTER_LEVEL_APPLICATION_PRIORITY, 10);\n    MockRM rm = new MockRM(conf);\n    rm.start();\n\n    Priority appPriority1 = Priority.newInstance(5);\n    MockNM nm1 = rm.registerNode(\"127.0.0.1:1234\", 8 * GB);\n    RMApp app1 = rm.submitApp(1 * GB, appPriority1);\n\n    // kick the scheduler, 1 GB given to AM1, remaining 7GB on nm1\n    MockAM am1 = MockRM.launchAM(app1, rm, nm1);\n    am1.registerAppAttempt();\n\n    // kick the scheduler, 7 containers will be allocated for App1\n    List<Container> allocated1 = am1.allocateAndWaitForContainers(\"127.0.0.1\",\n        7, 1 * GB, nm1);\n\n    Assert.assertEquals(7, allocated1.size());\n    Assert.assertEquals(1 * GB, allocated1.get(0).getResource().getMemory());\n\n    // check node report, 8 GB used (1 AM and 7 containers) and 0 GB available\n    SchedulerNodeReport report_nm1 = rm.getResourceScheduler().getNodeReport(\n        nm1.getNodeId());\n    Assert.assertEquals(8 * GB, report_nm1.getUsedResource().getMemory());\n    Assert.assertEquals(0 * GB, report_nm1.getAvailableResource().getMemory());\n\n    // Submit the second app App2 with priority 7\n    Priority appPriority2 = Priority.newInstance(7);\n    RMApp app2 = rm.submitApp(1 * GB, appPriority2);\n\n    // Submit the third app App3 with priority 8\n    Priority appPriority3 = Priority.newInstance(8);\n    RMApp app3 = rm.submitApp(1 * GB, appPriority3);\n\n    // Submit the second app App4 with priority 6\n    Priority appPriority4 = Priority.newInstance(6);\n    RMApp app4 = rm.submitApp(1 * GB, appPriority4);\n\n    // Only one app can run as AM resource limit restricts it. Kill app1,\n    // If app3 (highest priority among rest) gets active, it indicates that\n    // priority is working with pendingApplications.\n    rm.killApp(app1.getApplicationId());\n\n    // kick the scheduler, app3 (high among pending) gets free space\n    MockAM am3 = MockRM.launchAM(app3, rm, nm1);\n    am3.registerAppAttempt();\n\n    // check node report, 1 GB used and 7 GB available\n    report_nm1 = rm.getResourceScheduler().getNodeReport(nm1.getNodeId());\n    Assert.assertEquals(1 * GB, report_nm1.getUsedResource().getMemory());\n    Assert.assertEquals(7 * GB, report_nm1.getAvailableResource().getMemory());\n\n    rm.stop();\n  }","commit_id":"df9e7280db58baddd02d6e23d3685efb8d5f1b97","url":"https://github.com/apache/hadoop"},{"original_method":"public boolean execute(final MethodReferencesSearch.SearchParameters searchParameters, final Processor<PsiReference> consumer) {\n    final PsiMethod method = searchParameters.getMethod();\n    final String propertyName = getPropertyName(method);\n    if (propertyName == null) return true;\n\n    SearchScope searchScope = PsiUtil.restrictScopeToGroovyFiles(new Computable<SearchScope>() {\n      public SearchScope compute() {\n        return searchParameters.getScope();\n      }\n    });\n\n    final PsiSearchHelper helper = PsiManager.getInstance(method.getProject()).getSearchHelper();\n    final TextOccurenceProcessor processor = new TextOccurenceProcessor() {\n      public boolean execute(PsiElement element, int offsetInElement) {\n        final PsiReference[] refs = element.getReferences();\n        for (PsiReference ref : refs) {\n          if (ref.getRangeInElement().contains(offsetInElement)) {\n            if (ref.isReferenceTo(method)) {\n              return consumer.process(ref);\n            }\n          }\n        }\n        return true;\n      }\n    };\n\n    return helper.processElementsWithWord(processor,\n        searchScope,\n        propertyName,\n        UsageSearchContext.IN_CODE,\n        false);\n  }","id":8927,"modified_method":"public boolean execute(final MethodReferencesSearch.SearchParameters searchParameters, final Processor<PsiReference> consumer) {\n    final PsiMethod method = searchParameters.getMethod();\n    final String propertyName = getPropertyName(method);\n    if (propertyName == null) return true;\n\n    SearchScope searchScope = PsiUtil.restrictScopeToGroovyFiles(new Computable<SearchScope>() {\n      public SearchScope compute() {\n        return searchParameters.getScope();\n      }\n    });\n\n    final PsiSearchHelper helper = PsiManager.getInstance(method.getProject()).getSearchHelper();\n    final TextOccurenceProcessor processor = new TextOccurenceProcessor() {\n      public boolean execute(PsiElement element, int offsetInElement) {\n        final PsiReference[] refs = element.getReferences();\n        for (PsiReference ref : refs) {\n          if (ReferenceRange.containsOffsetInElement(ref, offsetInElement)) {\n            if (ref.isReferenceTo(method)) {\n              return consumer.process(ref);\n            }\n          }\n        }\n        return true;\n      }\n    };\n\n    return helper.processElementsWithWord(processor,\n                                          searchScope,\n                                          propertyName,\n                                          UsageSearchContext.IN_CODE,\n                                          false);\n  }","commit_id":"018f8e25fc7699d80d97c0269276bee3aad10c8d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean execute(final ReferencesSearch.SearchParameters p, final Processor<PsiReference> consumer) {\n    final PsiElement refElement = p.getElementToSearch();\n\n    String text = ApplicationManager.getApplication().runReadAction(new Computable<String>() {\n      public String compute() {\n        String text = null;\n        if (refElement instanceof PsiFile) {\n          final VirtualFile vFile = ((PsiFile)refElement).getVirtualFile();\n          if (vFile != null) {\n            text = vFile.getNameWithoutExtension();\n          }\n        }\n        else if (refElement instanceof PsiNamedElement) {\n          text = ((PsiNamedElement)refElement).getName();\n          if (refElement instanceof PsiMetaOwner) {\n            final PsiMetaData metaData = ((PsiMetaOwner)refElement).getMetaData();\n            if (metaData != null) text = metaData.getName();\n          }\n        }\n\n        if (text == null && refElement instanceof PsiMetaOwner) {\n          final PsiMetaData metaData = ((PsiMetaOwner)refElement).getMetaData();\n          if (metaData != null) text = metaData.getName();\n        }\n        return text;\n      }\n    });\n    if (StringUtil.isEmpty(text)) return true;\n    if (DEBUG) System.out.println(\"Searching for :\"+text);\n\n    SearchScope searchScope = ApplicationManager.getApplication().runReadAction(new Computable<SearchScope>() {\n      public SearchScope compute() {\n        return p.getEffectiveSearchScope();\n      }\n    });\n    final boolean ignoreInjectedPsi = searchScope instanceof LocalSearchScope && ((LocalSearchScope)searchScope).isIgnoreInjectedPsi();\n\n    final TextOccurenceProcessor processor = new TextOccurenceProcessor() {\n      public boolean execute(PsiElement element, int offsetInElement) {\n        ProgressManager.checkCanceled();\n        if (DEBUG) {\n          System.out.println(\"!!! About to check \"+element);\n        }\n        if (ignoreInjectedPsi && element instanceof PsiLanguageInjectionHost) return true;\n        final PsiReference[] refs = element.getReferences();\n        for (PsiReference ref : refs) {\n          if (DEBUG) {\n            System.out.println(\"!!!!!!!!!!!!!! Ref \"+ref);\n          }\n          if (ref.getRangeInElement().contains(offsetInElement)) {\n            if (DEBUG) {\n              System.out.println(\"!!!!!!!!!!!!!!!!!!!!! Ref \"+ref + \" contains\");\n            }\n            if (ref.isReferenceTo(refElement)) {\n              if (DEBUG) {\n                System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!   Found ref \"+ref);\n              }\n              return consumer.process(ref);\n            }\n          }\n        }\n        return true;\n      }\n    };\n\n    short searchContext = UsageSearchContext.IN_CODE | UsageSearchContext.IN_FOREIGN_LANGUAGES | UsageSearchContext.IN_COMMENTS;\n\n    final PsiSearchHelper helper = PsiManager.getInstance(refElement.getProject()).getSearchHelper();\n    return helper.processElementsWithWord(processor, searchScope, text, searchContext, \n                                          refElement.getLanguage().isCaseSensitive());\n  }","id":8928,"modified_method":"public boolean execute(final ReferencesSearch.SearchParameters p, final Processor<PsiReference> consumer) {\n    final PsiElement refElement = p.getElementToSearch();\n\n    String text = ApplicationManager.getApplication().runReadAction(new Computable<String>() {\n      public String compute() {\n        String text = null;\n        if (refElement instanceof PsiFile) {\n          final VirtualFile vFile = ((PsiFile)refElement).getVirtualFile();\n          if (vFile != null) {\n            text = vFile.getNameWithoutExtension();\n          }\n        }\n        else if (refElement instanceof PsiNamedElement) {\n          text = ((PsiNamedElement)refElement).getName();\n          if (refElement instanceof PsiMetaOwner) {\n            final PsiMetaData metaData = ((PsiMetaOwner)refElement).getMetaData();\n            if (metaData != null) text = metaData.getName();\n          }\n        }\n\n        if (text == null && refElement instanceof PsiMetaOwner) {\n          final PsiMetaData metaData = ((PsiMetaOwner)refElement).getMetaData();\n          if (metaData != null) text = metaData.getName();\n        }\n        return text;\n      }\n    });\n    if (StringUtil.isEmpty(text)) return true;\n    if (DEBUG) System.out.println(\"Searching for :\" + text);\n\n    SearchScope searchScope = ApplicationManager.getApplication().runReadAction(new Computable<SearchScope>() {\n      public SearchScope compute() {\n        return p.getEffectiveSearchScope();\n      }\n    });\n    final boolean ignoreInjectedPsi = searchScope instanceof LocalSearchScope && ((LocalSearchScope)searchScope).isIgnoreInjectedPsi();\n\n    final TextOccurenceProcessor processor = new TextOccurenceProcessor() {\n      public boolean execute(PsiElement element, int offsetInElement) {\n        ProgressManager.checkCanceled();\n        if (DEBUG) {\n          System.out.println(\"!!! About to check \" + element);\n        }\n        if (ignoreInjectedPsi && element instanceof PsiLanguageInjectionHost) return true;\n        final PsiReference[] refs = element.getReferences();\n        for (PsiReference ref : refs) {\n          if (DEBUG) {\n            System.out.println(\"!!!!!!!!!!!!!! Ref \" + ref);\n          }\n          if (ReferenceRange.containsOffsetInElement(ref, offsetInElement)) {\n            if (DEBUG) {\n              System.out.println(\"!!!!!!!!!!!!!!!!!!!!! Ref \" + ref + \" contains\");\n            }\n            if (ref.isReferenceTo(refElement)) {\n              if (DEBUG) {\n                System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!   Found ref \" + ref);\n              }\n              return consumer.process(ref);\n            }\n          }\n        }\n        return true;\n      }\n    };\n\n    short searchContext = UsageSearchContext.IN_CODE | UsageSearchContext.IN_FOREIGN_LANGUAGES | UsageSearchContext.IN_COMMENTS;\n\n    final PsiSearchHelper helper = PsiManager.getInstance(refElement.getProject()).getSearchHelper();\n    return helper.processElementsWithWord(processor, searchScope, text, searchContext,\n                                          refElement.getLanguage().isCaseSensitive());\n  }","commit_id":"018f8e25fc7699d80d97c0269276bee3aad10c8d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Info(@NotNull PsiElement elementAtPointer, int startOffset, int endOffset ) {\n      myElementAtPointer = elementAtPointer;\n      myStartOffset = startOffset;\n      myEndOffset = endOffset;\n    }","id":8929,"modified_method":"public Info(@NotNull PsiElement elementAtPointer, List<TextRange> ranges) {\n      myElementAtPointer = elementAtPointer;\n      myRanges = ranges;\n    }","commit_id":"018f8e25fc7699d80d97c0269276bee3aad10c8d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public InfoSingle(final PsiReference ref, @NotNull final PsiElement targetElement) {\n      super(ref.getElement(), ref.getElement().getTextRange().getStartOffset() + ref.getRangeInElement().getStartOffset(),\n            ref.getElement().getTextRange().getStartOffset() + ref.getRangeInElement().getEndOffset());\n      myTargetElement = targetElement;\n    }","id":8930,"modified_method":"public InfoSingle(final PsiReference ref, @NotNull final PsiElement targetElement) {\n      super(ref.getElement(), ReferenceRange.getAbsoluteRanges(ref));\n      myTargetElement = targetElement;\n    }","commit_id":"018f8e25fc7699d80d97c0269276bee3aad10c8d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Info(@NotNull PsiElement elementAtPointer ) {\n      this(elementAtPointer, elementAtPointer.getTextOffset(), elementAtPointer.getTextOffset() + elementAtPointer.getTextLength());\n    }","id":8931,"modified_method":"public Info(@NotNull PsiElement elementAtPointer) {\n      this(elementAtPointer, Collections.singletonList(new TextRange(elementAtPointer.getTextOffset(),\n                                                                     elementAtPointer.getTextOffset() + elementAtPointer.getTextLength())));\n    }","commit_id":"018f8e25fc7699d80d97c0269276bee3aad10c8d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isValid(Document document) {\n      return new TextRange(0, document.getTextLength()).containsRange(myStartOffset, myEndOffset);\n    }","id":8932,"modified_method":"public boolean isValid(Document document) {\n      return rangesAreCorrect(document);\n    }","commit_id":"018f8e25fc7699d80d97c0269276bee3aad10c8d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isValid(Document document) {\n      return myTargetElement.isValid() &&\n             myTargetElement != myElementAtPointer &&\n             myTargetElement != myElementAtPointer.getParent() &&\n             new TextRange(0, document.getTextLength()).containsRange(myStartOffset, myEndOffset)\n          /* && targetNavigateable(myTargetElement)*/;\n    }","id":8933,"modified_method":"public boolean isValid(Document document) {\n      if (!myTargetElement.isValid()) return false;\n      if (myTargetElement == myElementAtPointer || myTargetElement == myElementAtPointer.getParent()) return false;\n\n      return rangesAreCorrect(document);\n    }","commit_id":"018f8e25fc7699d80d97c0269276bee3aad10c8d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void disposeHighlighter() {\n    if (myHighlighter != null) {\n      myHighlighterView.getMarkupModel().removeHighlighter(myHighlighter);\n      Component internalComponent = myHighlighterView.getContentComponent();\n      internalComponent.setCursor(myStoredCursor);\n      internalComponent.removeKeyListener(myEditorKeyListener);\n      myHighlighterView.getScrollingModel().removeVisibleAreaListener(myVisibleAreaListener);\n      myFileEditorManager.removeFileEditorManagerListener(myFileEditorManagerListener);\n      HintManager.getInstance().hideAllHints();\n      myHighlighter = null;\n      myHighlighterView = null;\n      myStoredCursor = null;\n    }\n    myStoredInfo = null;\n  }","id":8934,"modified_method":"private void disposeHighlighter() {\n    if (myHighlighter != null) {\n      myHighlighter.deinstall();\n      HintManager.getInstance().hideAllHints();\n      myHighlighter = null;\n    }\n  }","commit_id":"018f8e25fc7699d80d97c0269276bee3aad10c8d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"boolean isSimilarTo(final Info that) {\n      return Comparing.equal(myElementAtPointer, that.myElementAtPointer) &&\n             myStartOffset == that.myStartOffset &&\n             myEndOffset == that.myEndOffset;\n    }","id":8935,"modified_method":"boolean isSimilarTo(final Info that) {\n      return Comparing.equal(myElementAtPointer, that.myElementAtPointer) && myRanges.equals(that.myRanges);\n    }","commit_id":"018f8e25fc7699d80d97c0269276bee3aad10c8d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void showHint(Info info) {\n      if (myDisposed) return;\n      Component internalComponent = myEditor.getContentComponent();\n      if (myHighlighter != null) {\n        if (!info.isSimilarTo(myStoredInfo)) {\n          disposeHighlighter();\n        } else {\n          // highlighter already set\n          internalComponent.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n          return;\n        }\n      }\n\n      if (info.isValid(myEditor.getDocument())) {\n        installLinkHighlighter(info);\n\n        internalComponent.addKeyListener(myEditorKeyListener);\n        myEditor.getScrollingModel().addVisibleAreaListener(myVisibleAreaListener);\n        myStoredCursor = internalComponent.getCursor();\n        myStoredInfo = info;\n        internalComponent.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n        myFileEditorManager.addFileEditorManagerListener(myFileEditorManagerListener);\n\n        String text = info.getInfo();\n\n        if (text == null) return;\n\n        JLabel label = HintUtil.createInformationLabel(text);\n        label.setUI(new MultiLineLabelUI());\n        Font FONT = UIUtil.getLabelFont();\n        label.setFont(FONT);\n        final LightweightHint hint = new LightweightHint(label);\n        final HintManagerImpl hintManager = HintManagerImpl.getInstanceImpl();\n        label.addMouseMotionListener(new MouseMotionAdapter() {\n          public void mouseMoved(MouseEvent e) {\n            hintManager.hideAllHints();\n          }\n        });\n        Point p = HintManagerImpl.getHintPosition(hint, myEditor, myPosition, HintManager.ABOVE);\n        hintManager.showEditorHint(hint, myEditor, p,\n                                   HintManager.HIDE_BY_ANY_KEY | HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_SCROLLING,\n                                   0, false);\n      }\n    }","id":8936,"modified_method":"private void showHint(Info info) {\n      if (myDisposed) return;\n      Component internalComponent = myEditor.getContentComponent();\n      if (myHighlighter != null) {\n        if (!info.isSimilarTo(myHighlighter.getStoredInfo())) {\n          disposeHighlighter();\n        }\n        else {\n          // highlighter already set\n          internalComponent.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n          return;\n        }\n      }\n\n      if (info.isValid(myEditor.getDocument())) {\n        myHighlighter = installHightlighterSet(info, myEditor);\n\n        String text = info.getInfo();\n\n        if (text == null) return;\n\n        JLabel label = HintUtil.createInformationLabel(text);\n        label.setUI(new MultiLineLabelUI());\n        Font FONT = UIUtil.getLabelFont();\n        label.setFont(FONT);\n        final LightweightHint hint = new LightweightHint(label);\n        final HintManagerImpl hintManager = HintManagerImpl.getInstanceImpl();\n        label.addMouseMotionListener(new MouseMotionAdapter() {\n          public void mouseMoved(MouseEvent e) {\n            hintManager.hideAllHints();\n          }\n        });\n        Point p = HintManagerImpl.getHintPosition(hint, myEditor, myPosition, HintManager.ABOVE);\n        hintManager.showEditorHint(hint, myEditor, p,\n                                   HintManager.HIDE_BY_ANY_KEY | HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_SCROLLING,\n                                   0, false);\n      }\n    }","commit_id":"018f8e25fc7699d80d97c0269276bee3aad10c8d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void processReferences(final CompletionParameters parameters, final CompletionResultSet result, final CompletionData completionData,\n                                       final PairConsumer<PsiReference, CompletionResultSet> consumer) {\n    final int startOffset = parameters.getOffset();\n    final PsiReference ref = ApplicationManager.getApplication().runReadAction(new Computable<PsiReference>() {\n      public PsiReference compute() {\n        return parameters.getPosition().getContainingFile().findReferenceAt(startOffset);\n      }\n    });\n    if (ref instanceof PsiMultiReference) {\n      for (final PsiReference reference : completionData.getReferences((PsiMultiReference)ref)) {\n        processReference(result, startOffset, consumer, reference);\n      }\n    }\n    else if (ref instanceof PsiDynaReference) {\n      int offset = startOffset - ref.getElement().getTextRange().getStartOffset();\n      for (final PsiReference reference : ((PsiDynaReference<?>)ref).getReferences()) {\n        if (reference.getRangeInElement().contains(offset)) {\n          processReference(result, startOffset, consumer, reference);\n        }\n      }\n    }\n    else if (ref != null) {\n      processReference(result, startOffset, consumer, ref);\n    }\n  }","id":8937,"modified_method":"public static void processReferences(final CompletionParameters parameters,\n                                       final CompletionResultSet result,\n                                       final CompletionData completionData,\n                                       final PairConsumer<PsiReference, CompletionResultSet> consumer) {\n    final int startOffset = parameters.getOffset();\n    final PsiReference ref = ApplicationManager.getApplication().runReadAction(new Computable<PsiReference>() {\n      public PsiReference compute() {\n        return parameters.getPosition().getContainingFile().findReferenceAt(startOffset);\n      }\n    });\n    if (ref instanceof PsiMultiReference) {\n      for (final PsiReference reference : completionData.getReferences((PsiMultiReference)ref)) {\n        processReference(result, startOffset, consumer, reference);\n      }\n    }\n    else if (ref instanceof PsiDynaReference) {\n      int offset = startOffset - ref.getElement().getTextRange().getStartOffset();\n      for (final PsiReference reference : ((PsiDynaReference<?>)ref).getReferences()) {\n        if (ReferenceRange.containsOffsetInElement(reference, offset)) {\n          processReference(result, startOffset, consumer, reference);\n        }\n      }\n    }\n    else if (ref != null) {\n      processReference(result, startOffset, consumer, ref);\n    }\n  }","commit_id":"018f8e25fc7699d80d97c0269276bee3aad10c8d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean execute(PsiElement element, int offsetInElement) {\n    final PsiReference[] refs = element.getReferences();\n    for (PsiReference ref : refs) {\n      if (ref.getRangeInElement().contains(offsetInElement)) {\n        for (PsiMethod method : myMethods) {\n          if (!method.isValid()) {\n            continue;\n          }\n\n          if (ref instanceof ResolvingHint && !((ResolvingHint)ref).canResolveTo(method)) {\n            return true;\n          }\n          if (ref.isReferenceTo(method)) {\n            return myConsumer.process(ref);\n          }\n          PsiElement refElement = ref.resolve();\n\n          if (refElement instanceof PsiMethod) {\n            PsiMethod refMethod = (PsiMethod)refElement;\n            PsiClass refMethodClass = refMethod.getContainingClass();\n            if (refMethodClass == null) continue;\n\n            if (!refMethod.hasModifierProperty(PsiModifier.STATIC)) {\n              PsiSubstitutor substitutor = TypeConversionUtil.getClassSubstitutor(myContainingClass, refMethodClass, PsiSubstitutor.EMPTY);\n              if (substitutor != null) {\n                MethodSignature superSignature = method.getSignature(substitutor);\n                MethodSignature refSignature = refMethod.getSignature(PsiSubstitutor.EMPTY);\n\n                if (MethodSignatureUtil.isSubsignature(superSignature, refSignature)) {\n                  if (!myConsumer.process(ref)) return false;\n                }\n              }\n            }\n\n            if (!myStrictSignatureSearch) {\n              PsiManager manager = method.getManager();\n              if (manager.areElementsEquivalent(refMethodClass, myContainingClass)) {\n                if (!myConsumer.process(ref)) return false;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return true;\n  }","id":8938,"modified_method":"public boolean execute(PsiElement element, int offsetInElement) {\n    final PsiReference[] refs = element.getReferences();\n    for (PsiReference ref : refs) {\n      if (ReferenceRange.containsOffsetInElement(ref, offsetInElement)) {\n        for (PsiMethod method : myMethods) {\n          if (!method.isValid()) {\n            continue;\n          }\n\n          if (ref instanceof ResolvingHint && !((ResolvingHint)ref).canResolveTo(method)) {\n            return true;\n          }\n          if (ref.isReferenceTo(method)) {\n            return myConsumer.process(ref);\n          }\n          PsiElement refElement = ref.resolve();\n\n          if (refElement instanceof PsiMethod) {\n            PsiMethod refMethod = (PsiMethod)refElement;\n            PsiClass refMethodClass = refMethod.getContainingClass();\n            if (refMethodClass == null) continue;\n\n            if (!refMethod.hasModifierProperty(PsiModifier.STATIC)) {\n              PsiSubstitutor substitutor = TypeConversionUtil.getClassSubstitutor(myContainingClass, refMethodClass, PsiSubstitutor.EMPTY);\n              if (substitutor != null) {\n                MethodSignature superSignature = method.getSignature(substitutor);\n                MethodSignature refSignature = refMethod.getSignature(PsiSubstitutor.EMPTY);\n\n                if (MethodSignatureUtil.isSubsignature(superSignature, refSignature)) {\n                  if (!myConsumer.process(ref)) return false;\n                }\n              }\n            }\n\n            if (!myStrictSignatureSearch) {\n              PsiManager manager = method.getManager();\n              if (manager.areElementsEquivalent(refMethodClass, myContainingClass)) {\n                if (!myConsumer.process(ref)) return false;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return true;\n  }","commit_id":"018f8e25fc7699d80d97c0269276bee3aad10c8d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean execute(final ReferencesSearch.SearchParameters queryParameters, final Processor<PsiReference> consumer) {\n    final PsiElement refElement = queryParameters.getElementToSearch();\n    if (refElement instanceof Property) {\n      final String name = ((Property)refElement).getName();\n      if (name == null) return true;\n      final List<String> words = StringUtil.getWordsIn(name);\n      if (words.isEmpty()) return true;\n      final String lastWord = words.get(words.size() - 1);\n\n      SearchScope searchScope = ApplicationManager.getApplication().runReadAction(new Computable<SearchScope>() {\n        public SearchScope compute() {\n          return queryParameters.getEffectiveSearchScope();\n        }\n      });\n      if (searchScope instanceof GlobalSearchScope) {\n        searchScope = GlobalSearchScope.getScopeRestrictedByFileTypes((GlobalSearchScope)searchScope, StdFileTypes.JSP, StdFileTypes.JSPX);\n      }\n      final PsiSearchHelper helper = PsiManager.getInstance(refElement.getProject()).getSearchHelper();\n      final TextOccurenceProcessor processor = new TextOccurenceProcessor() {\n        public boolean execute(PsiElement element, int offsetInElement) {\n          ProgressManager.checkCanceled();\n          final PsiReference[] refs = element.getReferences();\n          for (PsiReference ref : refs) {\n            if (ref.getRangeInElement().contains(offsetInElement) && ref.isReferenceTo(refElement)) {\n              return consumer.process(ref);\n            }\n            ProgressManager.checkCanceled();\n          }\n          return true;\n        }\n      };\n\n      if (!helper.processElementsWithWord(processor, searchScope, lastWord, UsageSearchContext.IN_FOREIGN_LANGUAGES, false)) {\n        return false;\n      }\n    }\n\n    return true;\n  }","id":8939,"modified_method":"public boolean execute(final ReferencesSearch.SearchParameters queryParameters, final Processor<PsiReference> consumer) {\n    final PsiElement refElement = queryParameters.getElementToSearch();\n    if (refElement instanceof Property) {\n      final String name = ((Property)refElement).getName();\n      if (name == null) return true;\n      final List<String> words = StringUtil.getWordsIn(name);\n      if (words.isEmpty()) return true;\n      final String lastWord = words.get(words.size() - 1);\n\n      SearchScope searchScope = ApplicationManager.getApplication().runReadAction(new Computable<SearchScope>() {\n        public SearchScope compute() {\n          return queryParameters.getEffectiveSearchScope();\n        }\n      });\n      if (searchScope instanceof GlobalSearchScope) {\n        searchScope = GlobalSearchScope.getScopeRestrictedByFileTypes((GlobalSearchScope)searchScope, StdFileTypes.JSP, StdFileTypes.JSPX);\n      }\n      final PsiSearchHelper helper = PsiManager.getInstance(refElement.getProject()).getSearchHelper();\n      final TextOccurenceProcessor processor = new TextOccurenceProcessor() {\n        public boolean execute(PsiElement element, int offsetInElement) {\n          ProgressManager.checkCanceled();\n          final PsiReference[] refs = element.getReferences();\n          for (PsiReference ref : refs) {\n            if (ReferenceRange.containsOffsetInElement(ref, offsetInElement) && ref.isReferenceTo(refElement)) {\n              return consumer.process(ref);\n            }\n            ProgressManager.checkCanceled();\n          }\n          return true;\n        }\n      };\n\n      if (!helper.processElementsWithWord(processor, searchScope, lastWord, UsageSearchContext.IN_FOREIGN_LANGUAGES, false)) {\n        return false;\n      }\n    }\n\n    return true;\n  }","commit_id":"018f8e25fc7699d80d97c0269276bee3aad10c8d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static PsiReference[] getReferencesFromProviders(PsiElement context, @NotNull Class clazz){\n    ProgressManager.checkCanceled();\n    assert context.isValid() : \"Invalid context: \" + context;\n\n    final List<Trinity<PsiReferenceProvider, ProcessingContext, Double>> providers = getInstance(context.getProject()).getPairsByElement(context, clazz);\n    if (providers.isEmpty()) {\n      return PsiReference.EMPTY_ARRAY;\n    }\n\n    final Trinity<PsiReferenceProvider, ProcessingContext, Double> firstProvider = providers.get(0);\n    if (providers.size() == 1) {\n      return firstProvider.getFirst().getReferencesByElement(context, firstProvider.getSecond());\n    }\n\n    ((SmartList<Trinity<PsiReferenceProvider, ProcessingContext, Double>>)providers).sort(PRIORITY_COMPARATOR);\n\n    if (LegacyCompletionContributor.DEBUG) {\n      System.out.println(\"ReferenceProvidersRegistry.getReferencesFromProviders\");\n      System.out.println(\"providers = \" + providers);\n    }\n\n    List<PsiReference> result = new ArrayList<PsiReference>();\n    final double maxPriority = firstProvider.getThird();\n    next: for (Trinity<PsiReferenceProvider, ProcessingContext, Double> trinity : providers) {\n      final PsiReference[] refs = trinity.getFirst().getReferencesByElement(context, trinity.getSecond());\n      if (trinity.getThird().doubleValue() != maxPriority) {\n        for (PsiReference ref : refs) {\n          for (PsiReference reference : result) {\n            if (ref != null && reference.getRangeInElement().contains(ref.getRangeInElement())) {\n              continue next;\n            }\n          }\n        }\n      }\n      for (PsiReference ref : refs) {\n        if (ref != null) {\n          result.add(ref);\n        }\n      }\n    }\n    return ContainerUtil.toArray(result, new PsiReference[result.size()]);\n  }","id":8940,"modified_method":"public static PsiReference[] getReferencesFromProviders(PsiElement context, @NotNull Class clazz) {\n    ProgressManager.checkCanceled();\n    assert context.isValid() : \"Invalid context: \" + context;\n\n    final List<Trinity<PsiReferenceProvider, ProcessingContext, Double>> providers =\n      getInstance(context.getProject()).getPairsByElement(context, clazz);\n    if (providers.isEmpty()) {\n      return PsiReference.EMPTY_ARRAY;\n    }\n\n    final Trinity<PsiReferenceProvider, ProcessingContext, Double> firstProvider = providers.get(0);\n    if (providers.size() == 1) {\n      return firstProvider.getFirst().getReferencesByElement(context, firstProvider.getSecond());\n    }\n\n    ((SmartList<Trinity<PsiReferenceProvider, ProcessingContext, Double>>)providers).sort(PRIORITY_COMPARATOR);\n\n    if (LegacyCompletionContributor.DEBUG) {\n      System.out.println(\"ReferenceProvidersRegistry.getReferencesFromProviders\");\n      System.out.println(\"providers = \" + providers);\n    }\n\n    List<PsiReference> result = new ArrayList<PsiReference>();\n    final double maxPriority = firstProvider.getThird();\n    next:\n    for (Trinity<PsiReferenceProvider, ProcessingContext, Double> trinity : providers) {\n      final PsiReference[] refs = trinity.getFirst().getReferencesByElement(context, trinity.getSecond());\n      if (trinity.getThird().doubleValue() != maxPriority) {\n        for (PsiReference ref : refs) {\n          for (PsiReference reference : result) {\n            if (ref != null && ReferenceRange.containsRangeInElement(reference, ref.getRangeInElement())) {\n              continue next;\n            }\n          }\n        }\n      }\n      for (PsiReference ref : refs) {\n        if (ref != null) {\n          result.add(ref);\n        }\n      }\n    }\n    return ContainerUtil.toArray(result, new PsiReference[result.size()]);\n  }","commit_id":"018f8e25fc7699d80d97c0269276bee3aad10c8d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void addReferences(int offset, PsiElement element, final Collection<PsiReference> outReferences) {\n    for (final PsiReference reference : element.getReferences()) {\n      if (reference == null) {\n        LOG.error(element);\n      }\n      final TextRange range = reference.getRangeInElement();\n      if (range.getStartOffset() <= offset && offset <= range.getEndOffset()) {\n        outReferences.add(reference);\n      }\n    }\n  }","id":8941,"modified_method":"private static void addReferences(int offset, PsiElement element, final Collection<PsiReference> outReferences) {\n    for (final PsiReference reference : element.getReferences()) {\n      if (reference == null) {\n        LOG.error(element);\n      }\n      for (TextRange range : ReferenceRange.getRanges(reference)) {\n        if (range.getStartOffset() <= offset && offset <= range.getEndOffset()) {\n          outReferences.add(reference);\n        }\n      }\n    }\n  }","commit_id":"018f8e25fc7699d80d97c0269276bee3aad10c8d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean execute(final ReferencesSearch.SearchParameters queryParameters, final Processor<PsiReference> consumer) {\n    final PsiElement refElement = queryParameters.getElementToSearch();\n    if (!(refElement instanceof PsiMethod)) return true;\n    final PsiMethod method = (PsiMethod)refElement;\n    final String propertyName = ApplicationManager.getApplication().runReadAction(new Computable<String>() {\n      public String compute() {\n        if (!method.isValid()) return null;\n        return PropertyUtil.getPropertyName(method);\n      }\n    });\n    if (StringUtil.isEmptyOrSpaces(propertyName)) {\n      return true;\n    }\n    SearchScope searchScope = ApplicationManager.getApplication().runReadAction(new Computable<SearchScope>() {\n      public SearchScope compute() {\n        SearchScope searchScope = queryParameters.getEffectiveSearchScope();\n        if (searchScope instanceof GlobalSearchScope) {\n          searchScope = GlobalSearchScope.getScopeRestrictedByFileTypes((GlobalSearchScope)searchScope,\n                                                                        StdFileTypes.JSP,\n                                                                        StdFileTypes.JSPX,\n                                                                        StdFileTypes.XML,\n                                                                        StdFileTypes.XHTML);\n        }\n        return searchScope;\n      }\n    });\n\n    final PsiSearchHelper helper = PsiManager.getInstance(refElement.getProject()).getSearchHelper();\n    final TextOccurenceProcessor processor = new TextOccurenceProcessor() {\n      public boolean execute(PsiElement element, int offsetInElement) {\n        final PsiReference[] refs = element.getReferences();\n        for (PsiReference ref : refs) {\n          if (ref.getRangeInElement().contains(offsetInElement)) {\n            if (ref.isReferenceTo(refElement)) {\n              return consumer.process(ref);\n            }\n          }\n        }\n        return true;\n      }\n    };\n\n    return helper.processElementsWithWord(processor, searchScope, propertyName, UsageSearchContext.IN_FOREIGN_LANGUAGES, false);\n  }","id":8942,"modified_method":"public boolean execute(final ReferencesSearch.SearchParameters queryParameters, final Processor<PsiReference> consumer) {\n    final PsiElement refElement = queryParameters.getElementToSearch();\n    if (!(refElement instanceof PsiMethod)) return true;\n    final PsiMethod method = (PsiMethod)refElement;\n    final String propertyName = ApplicationManager.getApplication().runReadAction(new Computable<String>() {\n      public String compute() {\n        if (!method.isValid()) return null;\n        return PropertyUtil.getPropertyName(method);\n      }\n    });\n    if (StringUtil.isEmptyOrSpaces(propertyName)) {\n      return true;\n    }\n    SearchScope searchScope = ApplicationManager.getApplication().runReadAction(new Computable<SearchScope>() {\n      public SearchScope compute() {\n        SearchScope searchScope = queryParameters.getEffectiveSearchScope();\n        if (searchScope instanceof GlobalSearchScope) {\n          searchScope = GlobalSearchScope.getScopeRestrictedByFileTypes((GlobalSearchScope)searchScope,\n                                                                        StdFileTypes.JSP,\n                                                                        StdFileTypes.JSPX,\n                                                                        StdFileTypes.XML,\n                                                                        StdFileTypes.XHTML);\n        }\n        return searchScope;\n      }\n    });\n\n    final PsiSearchHelper helper = PsiManager.getInstance(refElement.getProject()).getSearchHelper();\n    final TextOccurenceProcessor processor = new TextOccurenceProcessor() {\n      public boolean execute(PsiElement element, int offsetInElement) {\n        final PsiReference[] refs = element.getReferences();\n        for (PsiReference ref : refs) {\n          if (ReferenceRange.containsOffsetInElement(ref, offsetInElement)) {\n            if (ref.isReferenceTo(refElement)) {\n              return consumer.process(ref);\n            }\n          }\n        }\n        return true;\n      }\n    };\n\n    return helper.processElementsWithWord(processor, searchScope, propertyName, UsageSearchContext.IN_FOREIGN_LANGUAGES, false);\n  }","commit_id":"018f8e25fc7699d80d97c0269276bee3aad10c8d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public CollectionElementInvocationHandler(final Type type, @NotNull final XmlTag tag,\n                                            final AbstractCollectionChildDescription description,\n                                            final DomInvocationHandler parent) {\n    super(type, new PhysicalDomParentStrategy(tag) {\n      @NotNull\n      public DomParentStrategy clearXmlElement() {\n        throw new UnsupportedOperationException();\n      }\n\n      public boolean isValid() {\n        return getXmlElement().isValid();\n      }\n    }, description.createEvaluatedXmlName(parent, tag), (AbstractDomChildDescriptionImpl)description, parent.getManager(), true);\n    myTagQName = tag.getName();\n  }","id":8943,"modified_method":"public CollectionElementInvocationHandler(final Type type, @NotNull final XmlTag tag,\n                                            final AbstractCollectionChildDescription description,\n                                            final DomInvocationHandler parent) {\n    super(type, new PhysicalDomParentStrategy(tag), description.createEvaluatedXmlName(parent, tag), (AbstractDomChildDescriptionImpl)description, parent.getManager(), true);\n    myTagQName = tag.getName();\n  }","commit_id":"3709c9fbd83f8c36fb9b3162478e3e973435cd15","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean isValid() {\n    return super.isValid() && myTagQName.equals(getXmlTag().getName());\n  }","id":8944,"modified_method":"@Override\n  public boolean isValid() {\n    if (!super.isValid()) return false;\n    final XmlTag tag = getXmlTag();\n    if (tag == null || !myTagQName.equals(tag.getName())) return false;\n    return true;\n  }","commit_id":"3709c9fbd83f8c36fb9b3162478e3e973435cd15","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public final void checkInitialized() {\n    if (myInitialized) return;\n    if (myComputing.get() == Boolean.TRUE) return;\n\n    myComputing.set(Boolean.TRUE);\n    try {\n      synchronized (myInvocationHandler) {\n        if (myInitialized) return;\n        myStaticGenericInfo.buildMethodMaps();\n        myAttributes = myStaticGenericInfo.getAttributes();\n        myFixeds = myStaticGenericInfo.getFixed();\n        myCollections = myStaticGenericInfo.getCollections();\n      }\n\n      DomExtensionsRegistrarImpl registrar = runDomExtenders();\n\n      synchronized (myInvocationHandler) {\n        if (myInitialized) return;\n        if (registrar != null) {\n          final List<DomExtensionImpl> attributes = registrar.getAttributes();\n          if (!attributes.isEmpty()) {\n            myAttributes = new ChildrenDescriptionsHolder<AttributeChildDescriptionImpl>(myStaticGenericInfo.getAttributes());\n            for (final DomExtensionImpl extension : attributes) {\n              myAttributes.addDescription(extension.addAnnotations(new AttributeChildDescriptionImpl(extension.getXmlName(), extension.getType())));\n            }\n          }\n          final List<DomExtensionImpl> fixeds = registrar.getFixeds();\n          if (!fixeds.isEmpty()) {\n            myFixeds = new ChildrenDescriptionsHolder<FixedChildDescriptionImpl>(myStaticGenericInfo.getFixed());\n            for (final DomExtensionImpl extension : fixeds) {\n              myFixeds.addDescription(extension.addAnnotations(new FixedChildDescriptionImpl(extension.getXmlName(), extension.getType(), extension.getCount(), ArrayUtil.EMPTY_COLLECTION_ARRAY)));\n            }\n          }\n          final List<DomExtensionImpl> collections = registrar.getCollections();\n          if (!collections.isEmpty()) {\n            myCollections = new ChildrenDescriptionsHolder<CollectionChildDescriptionImpl>(myStaticGenericInfo.getCollections());\n            for (final DomExtensionImpl extension : collections) {\n              myCollections.addDescription(extension.addAnnotations(new CollectionChildDescriptionImpl(extension.getXmlName(), extension.getType(), Collections.EMPTY_LIST, Collections.EMPTY_LIST, Collections.EMPTY_LIST, Collections.EMPTY_LIST, Collections.EMPTY_LIST, Collections.EMPTY_LIST)));\n            }\n          }\n          final DomExtensionImpl extension = registrar.getCustomChildrenType();\n          if (extension != null) {\n            myCustomChildren = new CustomDomChildrenDescriptionImpl(null, extension.getType());\n          }\n        }\n        myInitialized = true;\n      }\n    }\n    finally {\n      myComputing.set(null);\n    }\n  }","id":8945,"modified_method":"public final void checkInitialized() {\n    if (myInitialized) return;\n    if (myComputing.get() == Boolean.TRUE) return;\n\n    myComputing.set(Boolean.TRUE);\n    try {\n      synchronized (myInvocationHandler) {\n        if (myInitialized) return;\n        myStaticGenericInfo.buildMethodMaps();\n        myAttributes = myStaticGenericInfo.getAttributes();\n        myFixeds = myStaticGenericInfo.getFixed();\n        myCollections = myStaticGenericInfo.getCollections();\n      }\n\n      final CustomDomChildrenDescriptionImpl description = myStaticGenericInfo.getCustomNameChildrenDescription();\n      final List<XmlTag> customTags = description == null ? null : CustomDomChildrenDescriptionImpl.CUSTOM_TAGS_GETTER.fun(myInvocationHandler);\n\n      DomExtensionsRegistrarImpl registrar = runDomExtenders();\n\n      synchronized (myInvocationHandler) {\n        if (myInitialized) return;\n        if (registrar != null) {\n          final List<DomExtensionImpl> fixeds = registrar.getFixeds();\n          final List<DomExtensionImpl> collections = registrar.getCollections();\n          if (!fixeds.isEmpty() || !collections.isEmpty()) {\n            if (customTags != null) {\n              for (final XmlTag tag : customTags) {\n                final DomInvocationHandler handler = myInvocationHandler.getManager().getCachedHandler(tag);\n                if (handler != null) {\n                  handler.detach();\n                }\n              }\n            }\n          }\n\n\n          final List<DomExtensionImpl> attributes = registrar.getAttributes();\n          if (!attributes.isEmpty()) {\n            myAttributes = new ChildrenDescriptionsHolder<AttributeChildDescriptionImpl>(myStaticGenericInfo.getAttributes());\n            for (final DomExtensionImpl extension : attributes) {\n              myAttributes.addDescription(extension.addAnnotations(new AttributeChildDescriptionImpl(extension.getXmlName(), extension.getType())));\n            }\n          }\n          if (!fixeds.isEmpty()) {\n            myFixeds = new ChildrenDescriptionsHolder<FixedChildDescriptionImpl>(myStaticGenericInfo.getFixed());\n            for (final DomExtensionImpl extension : fixeds) {\n              myFixeds.addDescription(extension.addAnnotations(new FixedChildDescriptionImpl(extension.getXmlName(), extension.getType(), extension.getCount(), ArrayUtil.EMPTY_COLLECTION_ARRAY)));\n            }\n          }\n          if (!collections.isEmpty()) {\n            myCollections = new ChildrenDescriptionsHolder<CollectionChildDescriptionImpl>(myStaticGenericInfo.getCollections());\n            for (final DomExtensionImpl extension : collections) {\n              myCollections.addDescription(extension.addAnnotations(new CollectionChildDescriptionImpl(extension.getXmlName(), extension.getType(), Collections.EMPTY_LIST, Collections.EMPTY_LIST, Collections.EMPTY_LIST, Collections.EMPTY_LIST, Collections.EMPTY_LIST, Collections.EMPTY_LIST)));\n            }\n          }\n\n          final DomExtensionImpl extension = registrar.getCustomChildrenType();\n          if (extension != null) {\n            myCustomChildren = new CustomDomChildrenDescriptionImpl(null, extension.getType());\n          }\n        }\n        myInitialized = true;\n      }\n    }\n    finally {\n      myComputing.set(null);\n    }\n  }","commit_id":"3709c9fbd83f8c36fb9b3162478e3e973435cd15","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean isAvailable(@NotNull Project project, Editor editor, PsiFile file) {\n    PsiClass containingClass = myField == null ? null : myField.getContainingClass();\n    return myField != null\n           && myField.getManager().isInProject(myField)\n           && !myField.hasModifierProperty(PsiModifier.STATIC)\n           && myField.isValid()\n           && !myField.hasInitializer()\n           && containingClass != null\n           && containingClass.getName() != null;\n  }","id":8946,"modified_method":"@Override\n  public boolean isAvailable(@NotNull Project project, Editor editor, PsiFile file) {\n    if (myField == null || myField.hasModifierProperty(PsiModifier.STATIC) || !myField.isValid() || myField.hasInitializer()) {\n      return false;\n    }\n\n    final PsiClass containingClass = myField.getContainingClass();\n    if (containingClass == null || containingClass.getName() == null){\n      return false;\n    }\n\n    final PsiManager manager = myField.getManager();\n    return manager != null && manager.isInProject(myField);\n  }","commit_id":"8ab72023cb301bcd0270e56cefaff34376bb8e91","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void invoke(@NotNull final Project project, final Editor editor, final PsiFile file) throws IncorrectOperationException {\n    if (!CodeInsightUtilBase.prepareFileForWrite(file)) return;\n\n    final PsiClass myClass = myField.getContainingClass();\n\n    if (myClass.getConstructors().length == 0) {\n      createDefaultConstructor(myClass, project, editor, file);\n    }\n\n    final List<PsiMethod> constructors = choose(filterIfFieldAlreadyAssigned(myField, myClass.getConstructors()), project);\n\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        final List<PsiExpressionStatement> statements = addFieldInitialization(constructors, myField, project);\n        final PsiExpressionStatement highestStatement = getHighestElement(statements);\n        if (highestStatement == null) return;\n\n        final PsiAssignmentExpression expression = (PsiAssignmentExpression)highestStatement.getExpression();\n        final PsiElement rightExpression = expression.getRExpression();\n\n        final TextRange expressionRange = rightExpression.getTextRange();\n        editor.getCaretModel().moveToOffset(expressionRange.getStartOffset());\n        editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n        editor.getSelectionModel().setSelection(expressionRange.getStartOffset(), expressionRange.getEndOffset());\n      }\n    });\n  }","id":8947,"modified_method":"@Override\n  public void invoke(@NotNull final Project project, final Editor editor, final PsiFile file) throws IncorrectOperationException {\n    if (!CodeInsightUtilBase.prepareFileForWrite(file)) return;\n\n    final PsiClass myClass = myField.getContainingClass();\n    if (myClass == null) {\n      return;\n    }\n    if (myClass.getConstructors().length == 0) {\n      createDefaultConstructor(myClass, project, editor, file);\n    }\n\n    final List<PsiMethod> constructors = choose(filterIfFieldAlreadyAssigned(myField, myClass.getConstructors()), project);\n\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        final List<PsiExpressionStatement> statements = addFieldInitialization(constructors, myField, project);\n        final PsiExpressionStatement highestStatement = getHighestElement(statements);\n        if (highestStatement == null) return;\n\n        final PsiAssignmentExpression expression = (PsiAssignmentExpression)highestStatement.getExpression();\n        final PsiElement rightExpression = expression.getRExpression();\n\n        final TextRange expressionRange = rightExpression.getTextRange();\n        editor.getCaretModel().moveToOffset(expressionRange.getStartOffset());\n        editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n        editor.getSelectionModel().setSelection(expressionRange.getStartOffset(), expressionRange.getEndOffset());\n      }\n    });\n  }","commit_id":"8ab72023cb301bcd0270e56cefaff34376bb8e91","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {\n    final Project project = ((IOperationContext) MapSequence.fromMap(_params).get(\"operationContext\")).getProject();\n    final boolean isInEnumConstant = ModelAccess.instance().runReadAction(new Computable<Boolean>() {\n      public Boolean compute() {\n        return (SNodeOperations.getNodeAncestor(((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367388b3L, \"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration\"), true, false) != null);\n      }\n    });\n    if (isInEnumConstant) {\n      new OverrideImplementMethodInEnumConstantAction(project, ((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), ((EditorContext) MapSequence.fromMap(_params).get(\"editorContext\")), false).run();\n    } else {\n      new OverrideImplementMethodAction(project, ((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), ((EditorContext) MapSequence.fromMap(_params).get(\"editorContext\")), false).run();\n    }\n  }","id":8948,"modified_method":"@Override\n  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {\n    final boolean isInEnumConstant = new ModelAccessHelper(((MPSProject) MapSequence.fromMap(_params).get(\"project\")).getModelAccess()).runReadAction(new Computable<Boolean>() {\n      public Boolean compute() {\n        return (SNodeOperations.getNodeAncestor(((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367388b3L, \"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration\"), true, false) != null);\n      }\n    });\n    if (isInEnumConstant) {\n      new OverrideImplementMethodInEnumConstantAction(((MPSProject) MapSequence.fromMap(_params).get(\"project\")), ((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), ((EditorContext) MapSequence.fromMap(_params).get(\"editorContext\")), false).run();\n    } else {\n      new OverrideImplementMethodAction(((MPSProject) MapSequence.fromMap(_params).get(\"project\")), ((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), ((EditorContext) MapSequence.fromMap(_params).get(\"editorContext\")), false).run();\n    }\n  }","commit_id":"0e2fdb99dc4b6cf0c21430996042cc5778539c01","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {\n    if (!(super.collectActionData(event, _params))) {\n      return false;\n    }\n    {\n      SNode node = event.getData(MPSCommonDataKeys.NODE);\n      MapSequence.fromMap(_params).put(\"selectedNode\", node);\n      if (node == null) {\n        return false;\n      }\n    }\n    {\n      EditorContext p = event.getData(MPSEditorDataKeys.EDITOR_CONTEXT);\n      MapSequence.fromMap(_params).put(\"editorContext\", p);\n      if (p == null) {\n        return false;\n      }\n    }\n    {\n      IOperationContext p = event.getData(MPSCommonDataKeys.OPERATION_CONTEXT);\n      MapSequence.fromMap(_params).put(\"operationContext\", p);\n      if (p == null) {\n        return false;\n      }\n    }\n    return true;\n  }","id":8949,"modified_method":"@Override\n  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {\n    if (!(super.collectActionData(event, _params))) {\n      return false;\n    }\n    {\n      SNode node = event.getData(MPSCommonDataKeys.NODE);\n      MapSequence.fromMap(_params).put(\"selectedNode\", node);\n      if (node == null) {\n        return false;\n      }\n    }\n    {\n      EditorContext p = event.getData(MPSEditorDataKeys.EDITOR_CONTEXT);\n      MapSequence.fromMap(_params).put(\"editorContext\", p);\n      if (p == null) {\n        return false;\n      }\n    }\n    {\n      MPSProject p = event.getData(MPSCommonDataKeys.MPS_PROJECT);\n      MapSequence.fromMap(_params).put(\"project\", p);\n      if (p == null) {\n        return false;\n      }\n    }\n    return true;\n  }","commit_id":"0e2fdb99dc4b6cf0c21430996042cc5778539c01","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {\n    if (!(super.collectActionData(event, _params))) {\n      return false;\n    }\n    {\n      SNode node = event.getData(MPSCommonDataKeys.NODE);\n      MapSequence.fromMap(_params).put(\"selectedNode\", node);\n      if (node == null) {\n        return false;\n      }\n    }\n    {\n      EditorContext p = event.getData(MPSEditorDataKeys.EDITOR_CONTEXT);\n      MapSequence.fromMap(_params).put(\"editorContext\", p);\n      if (p == null) {\n        return false;\n      }\n    }\n    {\n      IOperationContext p = event.getData(MPSCommonDataKeys.OPERATION_CONTEXT);\n      MapSequence.fromMap(_params).put(\"operationContext\", p);\n      if (p == null) {\n        return false;\n      }\n    }\n    return true;\n  }","id":8950,"modified_method":"@Override\n  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {\n    if (!(super.collectActionData(event, _params))) {\n      return false;\n    }\n    {\n      SNode node = event.getData(MPSCommonDataKeys.NODE);\n      MapSequence.fromMap(_params).put(\"selectedNode\", node);\n      if (node == null) {\n        return false;\n      }\n    }\n    {\n      EditorContext p = event.getData(MPSEditorDataKeys.EDITOR_CONTEXT);\n      MapSequence.fromMap(_params).put(\"editorContext\", p);\n      if (p == null) {\n        return false;\n      }\n    }\n    {\n      MPSProject p = event.getData(MPSCommonDataKeys.MPS_PROJECT);\n      MapSequence.fromMap(_params).put(\"project\", p);\n      if (p == null) {\n        return false;\n      }\n    }\n    return true;\n  }","commit_id":"0e2fdb99dc4b6cf0c21430996042cc5778539c01","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {\n    final Project project = ((IOperationContext) MapSequence.fromMap(_params).get(\"operationContext\")).getProject();\n    final boolean isInEnumConstant = ModelAccess.instance().runReadAction(new Computable<Boolean>() {\n      public Boolean compute() {\n        return (SNodeOperations.getNodeAncestor(((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367388b3L, \"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration\"), true, false) != null);\n      }\n    });\n    if (isInEnumConstant) {\n      new OverrideImplementMethodInEnumConstantAction(project, ((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), ((EditorContext) MapSequence.fromMap(_params).get(\"editorContext\")), false).run();\n    } else {\n      new OverrideImplementMethodAction(project, ((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), ((EditorContext) MapSequence.fromMap(_params).get(\"editorContext\")), false).run();\n    }\n\n  }","id":8951,"modified_method":"@Override\n  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {\n    final boolean isInEnumConstant = new ModelAccessHelper(((MPSProject) MapSequence.fromMap(_params).get(\"project\")).getModelAccess()).runReadAction(new Computable<Boolean>() {\n      public Boolean compute() {\n        return (SNodeOperations.getNodeAncestor(((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367388b3L, \"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration\"), true, false) != null);\n      }\n    });\n    if (isInEnumConstant) {\n      new OverrideImplementMethodInEnumConstantAction(((MPSProject) MapSequence.fromMap(_params).get(\"project\")), ((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), ((EditorContext) MapSequence.fromMap(_params).get(\"editorContext\")), false).run();\n    } else {\n      new OverrideImplementMethodAction(((MPSProject) MapSequence.fromMap(_params).get(\"project\")), ((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), ((EditorContext) MapSequence.fromMap(_params).get(\"editorContext\")), false).run();\n    }\n\n  }","commit_id":"0e2fdb99dc4b6cf0c21430996042cc5778539c01","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {\n    if (!(super.collectActionData(event, _params))) {\n      return false;\n    }\n    {\n      SNode node = event.getData(MPSCommonDataKeys.NODE);\n      MapSequence.fromMap(_params).put(\"selectedNode\", node);\n      if (node == null) {\n        return false;\n      }\n    }\n    {\n      EditorContext p = event.getData(MPSEditorDataKeys.EDITOR_CONTEXT);\n      MapSequence.fromMap(_params).put(\"editorContext\", p);\n      if (p == null) {\n        return false;\n      }\n    }\n    {\n      IOperationContext p = event.getData(MPSCommonDataKeys.OPERATION_CONTEXT);\n      MapSequence.fromMap(_params).put(\"operationContext\", p);\n      if (p == null) {\n        return false;\n      }\n    }\n    return true;\n  }","id":8952,"modified_method":"@Override\n  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {\n    if (!(super.collectActionData(event, _params))) {\n      return false;\n    }\n    {\n      SNode node = event.getData(MPSCommonDataKeys.NODE);\n      MapSequence.fromMap(_params).put(\"selectedNode\", node);\n      if (node == null) {\n        return false;\n      }\n    }\n    {\n      EditorContext p = event.getData(MPSEditorDataKeys.EDITOR_CONTEXT);\n      MapSequence.fromMap(_params).put(\"editorContext\", p);\n      if (p == null) {\n        return false;\n      }\n    }\n    {\n      MPSProject p = event.getData(MPSCommonDataKeys.MPS_PROJECT);\n      MapSequence.fromMap(_params).put(\"project\", p);\n      if (p == null) {\n        return false;\n      }\n    }\n    return true;\n  }","commit_id":"0e2fdb99dc4b6cf0c21430996042cc5778539c01","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {\n    final Project project = ((IOperationContext) MapSequence.fromMap(_params).get(\"operationContext\")).getProject();\n    final boolean isInEnumConstant = ModelAccess.instance().runReadAction(new Computable<Boolean>() {\n      public Boolean compute() {\n        return (SNodeOperations.getNodeAncestor(((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367388b3L, \"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration\"), true, false) != null);\n      }\n    });\n    if (isInEnumConstant) {\n      new OverrideImplementMethodInEnumConstantAction(project, ((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), ((EditorContext) MapSequence.fromMap(_params).get(\"editorContext\")), true).run();\n    } else {\n      new OverrideImplementMethodAction(project, ((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), ((EditorContext) MapSequence.fromMap(_params).get(\"editorContext\")), true).run();\n    }\n  }","id":8953,"modified_method":"@Override\n  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {\n    final boolean isInEnumConstant = new ModelAccessHelper(((MPSProject) MapSequence.fromMap(_params).get(\"project\")).getModelAccess()).runReadAction(new Computable<Boolean>() {\n      public Boolean compute() {\n        return (SNodeOperations.getNodeAncestor(((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367388b3L, \"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration\"), true, false) != null);\n      }\n    });\n    if (isInEnumConstant) {\n      new OverrideImplementMethodInEnumConstantAction(((MPSProject) MapSequence.fromMap(_params).get(\"project\")), ((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), ((EditorContext) MapSequence.fromMap(_params).get(\"editorContext\")), true).run();\n    } else {\n      new OverrideImplementMethodAction(((MPSProject) MapSequence.fromMap(_params).get(\"project\")), ((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), ((EditorContext) MapSequence.fromMap(_params).get(\"editorContext\")), true).run();\n    }\n  }","commit_id":"0e2fdb99dc4b6cf0c21430996042cc5778539c01","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {\n    if (!(super.collectActionData(event, _params))) {\n      return false;\n    }\n    {\n      SNode node = event.getData(MPSCommonDataKeys.NODE);\n      MapSequence.fromMap(_params).put(\"selectedNode\", node);\n      if (node == null) {\n        return false;\n      }\n    }\n    {\n      EditorContext p = event.getData(MPSEditorDataKeys.EDITOR_CONTEXT);\n      MapSequence.fromMap(_params).put(\"editorContext\", p);\n      if (p == null) {\n        return false;\n      }\n    }\n    {\n      IOperationContext p = event.getData(MPSCommonDataKeys.OPERATION_CONTEXT);\n      MapSequence.fromMap(_params).put(\"operationContext\", p);\n      if (p == null) {\n        return false;\n      }\n    }\n    return true;\n  }","id":8954,"modified_method":"@Override\n  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {\n    if (!(super.collectActionData(event, _params))) {\n      return false;\n    }\n    {\n      SNode node = event.getData(MPSCommonDataKeys.NODE);\n      if (node == null) {\n        return false;\n      }\n    }\n    {\n      EditorContext p = event.getData(MPSEditorDataKeys.EDITOR_CONTEXT);\n      if (p == null) {\n        return false;\n      }\n    }\n    {\n      MPSProject p = event.getData(MPSCommonDataKeys.MPS_PROJECT);\n      if (p == null) {\n        return false;\n      }\n    }\n    return true;\n  }","commit_id":"0e2fdb99dc4b6cf0c21430996042cc5778539c01","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {\n    final Project project = ((IOperationContext) MapSequence.fromMap(_params).get(\"operationContext\")).getProject();\n    new OverrideImplementMethodAction(project, ((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), ((EditorContext) MapSequence.fromMap(_params).get(\"editorContext\")), true).run();\n  }","id":8955,"modified_method":"@Override\n  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {\n    new OverrideImplementMethodAction(event.getData(MPSCommonDataKeys.MPS_PROJECT), event.getData(MPSCommonDataKeys.NODE), event.getData(MPSEditorDataKeys.EDITOR_CONTEXT), true).run();\n  }","commit_id":"0e2fdb99dc4b6cf0c21430996042cc5778539c01","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public boolean isApplicable(AnActionEvent event, final Map<String, Object> _params) {\n    return SNodeOperations.isInstanceOf(((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, \"jetbrains.mps.baseLanguage.structure.ClassConcept\")) && ListSequence.fromList(((List<SNode>) BHReflection.invoke(SNodeOperations.cast(((SNode) MapSequence.fromMap(_params).get(\"selectedNode\")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, \"jetbrains.mps.baseLanguage.structure.ClassConcept\")), SMethodTrimmedId.create(\"getMethodsToOverride\", null, \"4GM03FJm3zL\")))).isNotEmpty();\n  }","id":8956,"modified_method":"@Override\n  public boolean isApplicable(AnActionEvent event, final Map<String, Object> _params) {\n    return SNodeOperations.isInstanceOf(event.getData(MPSCommonDataKeys.NODE), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, \"jetbrains.mps.baseLanguage.structure.ClassConcept\")) && ListSequence.fromList(((List<SNode>) BHReflection.invoke(SNodeOperations.cast(event.getData(MPSCommonDataKeys.NODE), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, \"jetbrains.mps.baseLanguage.structure.ClassConcept\")), SMethodTrimmedId.create(\"getMethodsToOverride\", null, \"4GM03FJm3zL\")))).isNotEmpty();\n  }","commit_id":"0e2fdb99dc4b6cf0c21430996042cc5778539c01","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void unscheduleReports() throws Exception {\n        for (ReportDefinition reportDef : m_reportDefinitionBuilder.buildReportDefinitions()) {\n            m_scheduler.deleteJob(reportDef.getDescription(), Scheduler.DEFAULT_GROUP);\n        }\n    }","id":8957,"modified_method":"public void unscheduleReports() throws Exception {\n        \n        synchronized (m_scheduler) {\n            for (ReportDefinition reportDef : m_reportDefinitionBuilder.buildReportDefinitions()) {\n                m_scheduler.deleteJob(reportDef.getDescription(), Scheduler.DEFAULT_GROUP);\n            }\n        }\n    }","commit_id":"1e143b3d091f0f306c1528e504c01616ed11d843","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@EventHandler(uei=EventConstants.RELOAD_DAEMON_CONFIG_UEI)\n    public void handleReloadConfigEvent(Event e) {\n        \n        if (isReloadConfigEventTarget(e)) {\n            log().info(\"handleReloadConfigEvent: reloading configuration...\");\n            EventBuilder ebldr = null;\n            try {\n                log().debug(\"handleReloadConfigEvent: remarshaling config...\");\n                m_reportDefinitionBuilder.reload();\n                log().debug(\"handleReloadConfigEvent: config remarshaled, unscheduling current reports...\");\n                unscheduleReports();\n                log().debug(\"handleReloadConfigEvent: reports unscheduled, rescheduling...\");\n                start();\n                log().debug(\"handleRelodConfigEvent: reports rescheduled.\");\n                ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_SUCCESSFUL_UEI, \"Statsd\");\n                ebldr.addParam(EventConstants.PARM_DAEMON_NAME, \"Statsd\");\n            } catch (Exception exception) {\n                log().error(\"handleReloadConfigurationEvent: Error reloading configuration:\"+exception, exception);\n                ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_FAILED_UEI, \"Statsd\");\n                ebldr.addParam(EventConstants.PARM_DAEMON_NAME, \"Statsd\");\n                ebldr.addParam(EventConstants.PARM_REASON, exception.getLocalizedMessage().substring(1, 128));\n            }\n            if (ebldr != null) {\n                getEventForwarder().sendNow(ebldr.getEvent());\n            }\n        }\n        \n    }","id":8958,"modified_method":"@EventHandler(uei=EventConstants.RELOAD_DAEMON_CONFIG_UEI)\n    public void handleReloadConfigEvent(Event e) {\n        \n        if (isReloadConfigEventTarget(e)) {\n            log().info(\"handleReloadConfigEvent: reloading configuration...\");\n            EventBuilder ebldr = null;\n\n            log().debug(\"handleReloadConfigEvent: acquiring lock...\");\n            synchronized (m_scheduler) {\n                try {\n                    log().debug(\"handleReloadConfigEvent: lock acquired, unscheduling current reports...\");\n                    unscheduleReports();\n                    m_reportDefinitionBuilder.reload();\n                    log().debug(\"handleReloadConfigEvent: config remarshaled, unscheduling current reports...\");\n                    log().debug(\"handleReloadConfigEvent: reports unscheduled, rescheduling...\");\n                    start();\n                    log().debug(\"handleRelodConfigEvent: reports rescheduled.\");\n                    ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_SUCCESSFUL_UEI, \"Statsd\");\n                    ebldr.addParam(EventConstants.PARM_DAEMON_NAME, \"Statsd\");\n                } catch (Exception exception) {\n                    log().error(\"handleReloadConfigurationEvent: Error reloading configuration:\"+exception, exception);\n                    ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_FAILED_UEI, \"Statsd\");\n                    ebldr.addParam(EventConstants.PARM_DAEMON_NAME, \"Statsd\");\n                    ebldr.addParam(EventConstants.PARM_REASON, exception.getLocalizedMessage().substring(1, 128));\n                }\n                if (ebldr != null) {\n                    getEventForwarder().sendNow(ebldr.getEvent());\n                }\n            }\n            log().debug(\"handleReloadConfigEvent: lock released.\");\n        }\n        \n    }","commit_id":"1e143b3d091f0f306c1528e504c01616ed11d843","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void scheduleReport(ReportDefinition reportDef) throws ClassNotFoundException, NoSuchMethodException, ParseException, SchedulerException {\n        MethodInvokingJobDetailFactoryBean jobFactory = new MethodInvokingJobDetailFactoryBean();\n        jobFactory.setTargetObject(this);\n        jobFactory.setTargetMethod(\"runReport\");\n        jobFactory.setArguments(new Object[] { reportDef });\n        jobFactory.setConcurrent(false);\n        jobFactory.setBeanName(reportDef.getDescription());\n        jobFactory.afterPropertiesSet();\n        JobDetail jobDetail = (JobDetail) jobFactory.getObject();\n        \n        CronTriggerBean cronReportTrigger = new CronTriggerBean();\n        cronReportTrigger.setBeanName(reportDef.getDescription());\n        cronReportTrigger.setJobDetail(jobDetail);\n        cronReportTrigger.setCronExpression(reportDef.getCronExpression());\n        cronReportTrigger.afterPropertiesSet();\n        \n        m_scheduler.scheduleJob(cronReportTrigger.getJobDetail(), cronReportTrigger);\n        log().debug(\"Schedule report \" + cronReportTrigger);\n    }","id":8959,"modified_method":"private void scheduleReport(ReportDefinition reportDef) throws ClassNotFoundException, NoSuchMethodException, ParseException, SchedulerException {\n        \n        //this is most likely reentrant since the method is private and called from start via plural version.\n        synchronized (m_scheduler) {\n            \n            MethodInvokingJobDetailFactoryBean jobFactory = new MethodInvokingJobDetailFactoryBean();\n            jobFactory.setTargetObject(this);\n            jobFactory.setTargetMethod(\"runReport\");\n            jobFactory.setArguments(new Object[] { reportDef });\n            jobFactory.setConcurrent(false);\n            jobFactory.setBeanName(reportDef.getDescription());\n            jobFactory.afterPropertiesSet();\n            JobDetail jobDetail = (JobDetail) jobFactory.getObject();\n            \n            CronTriggerBean cronReportTrigger = new CronTriggerBean();\n            cronReportTrigger.setBeanName(reportDef.getDescription());\n            cronReportTrigger.setJobDetail(jobDetail);\n            cronReportTrigger.setCronExpression(reportDef.getCronExpression());\n            cronReportTrigger.afterPropertiesSet();\n            \n            m_scheduler.scheduleJob(cronReportTrigger.getJobDetail(), cronReportTrigger);\n            log().debug(\"Schedule report \" + cronReportTrigger);\n            \n        }\n    }","commit_id":"1e143b3d091f0f306c1528e504c01616ed11d843","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void start() throws Exception {\n        log().info(\"start: scheduling Reports...\");\n        for (ReportDefinition reportDef : m_reportDefinitionBuilder.buildReportDefinitions()) {\n            log().debug(\"start: scheduling Report: \"+reportDef+\"...\");\n            scheduleReport(reportDef);\n        }\n        log().info(\"start: \"+m_scheduler.getJobNames(Scheduler.DEFAULT_GROUP).length+\" jobs scheduled.\");\n    }","id":8960,"modified_method":"public void start() throws Exception {\n        log().debug(\"start: acquiring lock...\");\n        synchronized (m_scheduler) {\n            log().info(\"start: lock acquired (may have reentered), scheduling Reports...\");\n            for (ReportDefinition reportDef : m_reportDefinitionBuilder.buildReportDefinitions()) {\n                log().debug(\"start: scheduling Report: \"+reportDef+\"...\");\n                scheduleReport(reportDef);\n            }\n            log().info(\"start: \"+m_scheduler.getJobNames(Scheduler.DEFAULT_GROUP).length+\" jobs scheduled.\");\n        }\n        log().debug(\"start: lock released (unless reentrant).\");\n    }","commit_id":"1e143b3d091f0f306c1528e504c01616ed11d843","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@EventHandler(uei=EventConstants.RELOAD_DAEMON_CONFIG_UEI)\n    public void handleReloadConfigEvent(Event e) {\n        \n        if (isReloadConfigEventTarget(e)) {\n            log().info(\"handleReloadConfigEvent: reloading configuration...\");\n            EventBuilder ebldr = null;\n            try {\n                log().debug(\"handleReloadConfigEvent: remarshaling config...\");\n                m_reportDefinitionBuilder.reload();\n                log().debug(\"handleReloadConfigEvent: config remarshaled, unscheduling current reports...\");\n                unscheduleReports();\n                log().debug(\"handleReloadConfigEvent: reports unscheduled, rescheduling...\");\n                start();\n                log().debug(\"handleRelodConfigEvent: reports rescheduled.\");\n                ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_SUCCESSFUL_UEI, \"Statsd\");\n                ebldr.addParam(EventConstants.PARM_DAEMON_NAME, \"Statsd\");\n            } catch (Exception exception) {\n                log().error(\"handleReloadConfigurationEvent: Error reloading configuration:\"+exception, exception);\n                ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_FAILED_UEI, \"Statsd\");\n                ebldr.addParam(EventConstants.PARM_DAEMON_NAME, \"Statsd\");\n                ebldr.addParam(EventConstants.PARM_REASON, exception.getLocalizedMessage().substring(1, 128));\n            }\n            if (ebldr != null) {\n                getEventForwarder().sendNow(ebldr.getEvent());\n            }\n        }\n        \n    }","id":8961,"modified_method":"@EventHandler(uei=EventConstants.RELOAD_DAEMON_CONFIG_UEI)\n    public void handleReloadConfigEvent(Event e) {\n        \n        if (isReloadConfigEventTarget(e)) {\n            log().info(\"handleReloadConfigEvent: reloading configuration...\");\n            EventBuilder ebldr = null;\n\n            log().debug(\"handleReloadConfigEvent: acquiring lock...\");\n            synchronized (m_scheduler) {\n                try {\n                    log().debug(\"handleReloadConfigEvent: lock acquired, unscheduling current reports...\");\n                    unscheduleReports();\n                    m_reportDefinitionBuilder.reload();\n                    log().debug(\"handleReloadConfigEvent: config remarshaled, unscheduling current reports...\");\n                    log().debug(\"handleReloadConfigEvent: reports unscheduled, rescheduling...\");\n                    start();\n                    log().debug(\"handleRelodConfigEvent: reports rescheduled.\");\n                    ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_SUCCESSFUL_UEI, \"Statsd\");\n                    ebldr.addParam(EventConstants.PARM_DAEMON_NAME, \"Statsd\");\n                } catch (Exception exception) {\n                    log().error(\"handleReloadConfigurationEvent: Error reloading configuration:\"+exception, exception);\n                    ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_FAILED_UEI, \"Statsd\");\n                    ebldr.addParam(EventConstants.PARM_DAEMON_NAME, \"Statsd\");\n                    ebldr.addParam(EventConstants.PARM_REASON, exception.getLocalizedMessage().substring(1, 128));\n                }\n                if (ebldr != null) {\n                    getEventForwarder().sendNow(ebldr.getEvent());\n                }\n            }\n            log().debug(\"handleReloadConfigEvent: lock released.\");\n        }\n        \n    }","commit_id":"b98d21921c6ce59845e9ba3780d51b7544a8531c","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void scheduleReport(ReportDefinition reportDef) throws ClassNotFoundException, NoSuchMethodException, ParseException, SchedulerException {\n        MethodInvokingJobDetailFactoryBean jobFactory = new MethodInvokingJobDetailFactoryBean();\n        jobFactory.setTargetObject(this);\n        jobFactory.setTargetMethod(\"runReport\");\n        jobFactory.setArguments(new Object[] { reportDef });\n        jobFactory.setConcurrent(false);\n        jobFactory.setBeanName(reportDef.getDescription());\n        jobFactory.afterPropertiesSet();\n        JobDetail jobDetail = (JobDetail) jobFactory.getObject();\n        \n        CronTriggerBean cronReportTrigger = new CronTriggerBean();\n        cronReportTrigger.setBeanName(reportDef.getDescription());\n        cronReportTrigger.setJobDetail(jobDetail);\n        cronReportTrigger.setCronExpression(reportDef.getCronExpression());\n        cronReportTrigger.afterPropertiesSet();\n        \n        m_scheduler.scheduleJob(cronReportTrigger.getJobDetail(), cronReportTrigger);\n        log().debug(\"Schedule report \" + cronReportTrigger);\n    }","id":8962,"modified_method":"private void scheduleReport(ReportDefinition reportDef) throws ClassNotFoundException, NoSuchMethodException, ParseException, SchedulerException {\n        \n        //this is most likely reentrant since the method is private and called from start via plural version.\n        synchronized (m_scheduler) {\n            \n            MethodInvokingJobDetailFactoryBean jobFactory = new MethodInvokingJobDetailFactoryBean();\n            jobFactory.setTargetObject(this);\n            jobFactory.setTargetMethod(\"runReport\");\n            jobFactory.setArguments(new Object[] { reportDef });\n            jobFactory.setConcurrent(false);\n            jobFactory.setBeanName(reportDef.getDescription());\n            jobFactory.afterPropertiesSet();\n            JobDetail jobDetail = (JobDetail) jobFactory.getObject();\n            \n            CronTriggerBean cronReportTrigger = new CronTriggerBean();\n            cronReportTrigger.setBeanName(reportDef.getDescription());\n            cronReportTrigger.setJobDetail(jobDetail);\n            cronReportTrigger.setCronExpression(reportDef.getCronExpression());\n            cronReportTrigger.afterPropertiesSet();\n            \n            m_scheduler.scheduleJob(cronReportTrigger.getJobDetail(), cronReportTrigger);\n            log().debug(\"Schedule report \" + cronReportTrigger);\n            \n        }\n    }","commit_id":"b98d21921c6ce59845e9ba3780d51b7544a8531c","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void start() throws Exception {\n        log().info(\"start: scheduling Reports...\");\n        for (ReportDefinition reportDef : m_reportDefinitionBuilder.buildReportDefinitions()) {\n            log().debug(\"start: scheduling Report: \"+reportDef+\"...\");\n            scheduleReport(reportDef);\n        }\n        log().info(\"start: \"+m_scheduler.getJobNames(Scheduler.DEFAULT_GROUP).length+\" jobs scheduled.\");\n    }","id":8963,"modified_method":"public void start() throws Exception {\n        log().debug(\"start: acquiring lock...\");\n        synchronized (m_scheduler) {\n            log().info(\"start: lock acquired (may have reentered), scheduling Reports...\");\n            for (ReportDefinition reportDef : m_reportDefinitionBuilder.buildReportDefinitions()) {\n                log().debug(\"start: scheduling Report: \"+reportDef+\"...\");\n                scheduleReport(reportDef);\n            }\n            log().info(\"start: \"+m_scheduler.getJobNames(Scheduler.DEFAULT_GROUP).length+\" jobs scheduled.\");\n        }\n        log().debug(\"start: lock released (unless reentrant).\");\n    }","commit_id":"b98d21921c6ce59845e9ba3780d51b7544a8531c","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void unscheduleReports() throws Exception {\n        for (ReportDefinition reportDef : m_reportDefinitionBuilder.buildReportDefinitions()) {\n            m_scheduler.deleteJob(reportDef.getDescription(), Scheduler.DEFAULT_GROUP);\n        }\n    }","id":8964,"modified_method":"public void unscheduleReports() throws Exception {\n        \n        synchronized (m_scheduler) {\n            for (ReportDefinition reportDef : m_reportDefinitionBuilder.buildReportDefinitions()) {\n                m_scheduler.deleteJob(reportDef.getDescription(), Scheduler.DEFAULT_GROUP);\n            }\n        }\n    }","commit_id":"b98d21921c6ce59845e9ba3780d51b7544a8531c","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@EventHandler(uei=EventConstants.RELOAD_DAEMON_CONFIG_UEI)\n    public void handleReloadConfigEvent(Event e) {\n        \n        if (isReloadConfigEventTarget(e)) {\n            log().info(\"handleReloadConfigEvent: reloading configuration...\");\n            EventBuilder ebldr = null;\n            try {\n                log().debug(\"handleReloadConfigEvent: remarshaling config...\");\n                m_reportDefinitionBuilder.reload();\n                log().debug(\"handleReloadConfigEvent: config remarshaled, unscheduling current reports...\");\n                unscheduleReports();\n                log().debug(\"handleReloadConfigEvent: reports unscheduled, rescheduling...\");\n                start();\n                log().debug(\"handleRelodConfigEvent: reports rescheduled.\");\n                ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_SUCCESSFUL_UEI, \"Statsd\");\n                ebldr.addParam(EventConstants.PARM_DAEMON_NAME, \"Statsd\");\n            } catch (Exception exception) {\n                log().error(\"handleReloadConfigurationEvent: Error reloading configuration:\"+exception, exception);\n                ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_FAILED_UEI, \"Statsd\");\n                ebldr.addParam(EventConstants.PARM_DAEMON_NAME, \"Statsd\");\n                ebldr.addParam(EventConstants.PARM_REASON, exception.getLocalizedMessage().substring(1, 128));\n            }\n            if (ebldr != null) {\n                getEventForwarder().sendNow(ebldr.getEvent());\n            }\n        }\n        \n    }","id":8965,"modified_method":"@EventHandler(uei=EventConstants.RELOAD_DAEMON_CONFIG_UEI)\n    public void handleReloadConfigEvent(Event e) {\n        \n        if (isReloadConfigEventTarget(e)) {\n            log().info(\"handleReloadConfigEvent: reloading configuration...\");\n            EventBuilder ebldr = null;\n\n            log().debug(\"handleReloadConfigEvent: acquiring lock...\");\n            synchronized (m_scheduler) {\n                try {\n                    log().debug(\"handleReloadConfigEvent: lock acquired, unscheduling current reports...\");\n                    unscheduleReports();\n                    m_reportDefinitionBuilder.reload();\n                    log().debug(\"handleReloadConfigEvent: config remarshaled, unscheduling current reports...\");\n                    log().debug(\"handleReloadConfigEvent: reports unscheduled, rescheduling...\");\n                    start();\n                    log().debug(\"handleRelodConfigEvent: reports rescheduled.\");\n                    ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_SUCCESSFUL_UEI, \"Statsd\");\n                    ebldr.addParam(EventConstants.PARM_DAEMON_NAME, \"Statsd\");\n                } catch (Exception exception) {\n                    log().error(\"handleReloadConfigurationEvent: Error reloading configuration:\"+exception, exception);\n                    ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_FAILED_UEI, \"Statsd\");\n                    ebldr.addParam(EventConstants.PARM_DAEMON_NAME, \"Statsd\");\n                    ebldr.addParam(EventConstants.PARM_REASON, exception.getLocalizedMessage().substring(1, 128));\n                }\n                if (ebldr != null) {\n                    getEventForwarder().sendNow(ebldr.getEvent());\n                }\n            }\n            log().debug(\"handleReloadConfigEvent: lock released.\");\n        }\n        \n    }","commit_id":"d3da7a211088fb5c5e50373dfae7aa776163558a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void scheduleReport(ReportDefinition reportDef) throws ClassNotFoundException, NoSuchMethodException, ParseException, SchedulerException {\n        MethodInvokingJobDetailFactoryBean jobFactory = new MethodInvokingJobDetailFactoryBean();\n        jobFactory.setTargetObject(this);\n        jobFactory.setTargetMethod(\"runReport\");\n        jobFactory.setArguments(new Object[] { reportDef });\n        jobFactory.setConcurrent(false);\n        jobFactory.setBeanName(reportDef.getDescription());\n        jobFactory.afterPropertiesSet();\n        JobDetail jobDetail = (JobDetail) jobFactory.getObject();\n        \n        CronTriggerBean cronReportTrigger = new CronTriggerBean();\n        cronReportTrigger.setBeanName(reportDef.getDescription());\n        cronReportTrigger.setJobDetail(jobDetail);\n        cronReportTrigger.setCronExpression(reportDef.getCronExpression());\n        cronReportTrigger.afterPropertiesSet();\n        \n        m_scheduler.scheduleJob(cronReportTrigger.getJobDetail(), cronReportTrigger);\n        log().debug(\"Schedule report \" + cronReportTrigger);\n    }","id":8966,"modified_method":"private void scheduleReport(ReportDefinition reportDef) throws ClassNotFoundException, NoSuchMethodException, ParseException, SchedulerException {\n        \n        //this is most likely reentrant since the method is private and called from start via plural version.\n        synchronized (m_scheduler) {\n            \n            MethodInvokingJobDetailFactoryBean jobFactory = new MethodInvokingJobDetailFactoryBean();\n            jobFactory.setTargetObject(this);\n            jobFactory.setTargetMethod(\"runReport\");\n            jobFactory.setArguments(new Object[] { reportDef });\n            jobFactory.setConcurrent(false);\n            jobFactory.setBeanName(reportDef.getDescription());\n            jobFactory.afterPropertiesSet();\n            JobDetail jobDetail = (JobDetail) jobFactory.getObject();\n            \n            CronTriggerBean cronReportTrigger = new CronTriggerBean();\n            cronReportTrigger.setBeanName(reportDef.getDescription());\n            cronReportTrigger.setJobDetail(jobDetail);\n            cronReportTrigger.setCronExpression(reportDef.getCronExpression());\n            cronReportTrigger.afterPropertiesSet();\n            \n            m_scheduler.scheduleJob(cronReportTrigger.getJobDetail(), cronReportTrigger);\n            log().debug(\"Schedule report \" + cronReportTrigger);\n            \n        }\n    }","commit_id":"d3da7a211088fb5c5e50373dfae7aa776163558a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void start() throws Exception {\n        log().info(\"start: scheduling Reports...\");\n        for (ReportDefinition reportDef : m_reportDefinitionBuilder.buildReportDefinitions()) {\n            log().debug(\"start: scheduling Report: \"+reportDef+\"...\");\n            scheduleReport(reportDef);\n        }\n        log().info(\"start: \"+m_scheduler.getJobNames(Scheduler.DEFAULT_GROUP).length+\" jobs scheduled.\");\n    }","id":8967,"modified_method":"public void start() throws Exception {\n        log().debug(\"start: acquiring lock...\");\n        synchronized (m_scheduler) {\n            log().info(\"start: lock acquired (may have reentered), scheduling Reports...\");\n            for (ReportDefinition reportDef : m_reportDefinitionBuilder.buildReportDefinitions()) {\n                log().debug(\"start: scheduling Report: \"+reportDef+\"...\");\n                scheduleReport(reportDef);\n            }\n            log().info(\"start: \"+m_scheduler.getJobNames(Scheduler.DEFAULT_GROUP).length+\" jobs scheduled.\");\n        }\n        log().debug(\"start: lock released (unless reentrant).\");\n    }","commit_id":"d3da7a211088fb5c5e50373dfae7aa776163558a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void unscheduleReports() throws Exception {\n        for (ReportDefinition reportDef : m_reportDefinitionBuilder.buildReportDefinitions()) {\n            m_scheduler.deleteJob(reportDef.getDescription(), Scheduler.DEFAULT_GROUP);\n        }\n    }","id":8968,"modified_method":"public void unscheduleReports() throws Exception {\n        \n        synchronized (m_scheduler) {\n            for (ReportDefinition reportDef : m_reportDefinitionBuilder.buildReportDefinitions()) {\n                m_scheduler.deleteJob(reportDef.getDescription(), Scheduler.DEFAULT_GROUP);\n            }\n        }\n    }","commit_id":"d3da7a211088fb5c5e50373dfae7aa776163558a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n  public void testSupportedFreezeTrue() {\n    OLocalPaginatedStorage storage = Mockito.mock(OLocalPaginatedStorage.class);\n    ODistributedStorage ds = new ODistributedStorage(Mockito.mock(OServer.class), storage);\n\n    ds.freeze(true);\n\n    Mockito.verify(storage).freeze(true);\n  }","id":8969,"modified_method":"@Test\n  public void testSupportedFreezeTrue() {\n    OLocalPaginatedStorage storage = Mockito.mock(OLocalPaginatedStorage.class);\n    OServer mockServer = Mockito.mock(OServer.class);\n    Mockito.when(mockServer.getDistributedManager()).thenReturn(Mockito.mock(ODistributedServerManager.class));\n    ODistributedStorage ds = new ODistributedStorage(mockServer, storage);\n\n    ds.freeze(true);\n\n    Mockito.verify(storage).freeze(true);\n  }","commit_id":"67a827e2d8332808f93e5d46c5d2e383e7437e02","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Test(expected = UnsupportedOperationException.class)\n  public void testUnsupportedFreeze() {\n    ODistributedStorage ds = new ODistributedStorage(Mockito.mock(OServer.class), Mockito.mock(ODirectMemoryStorage.class));\n\n    ds.freeze(false);\n  }","id":8970,"modified_method":"@Test(expected = UnsupportedOperationException.class)\n  public void testUnsupportedFreeze() {\n    ODirectMemoryStorage storage = Mockito.mock(ODirectMemoryStorage.class);\n    OServer mockServer = Mockito.mock(OServer.class);\n    Mockito.when(mockServer.getDistributedManager()).thenReturn(Mockito.mock(ODistributedServerManager.class));\n    ODistributedStorage ds = new ODistributedStorage(mockServer, storage);\n\n\n    ds.freeze(false);\n  }","commit_id":"67a827e2d8332808f93e5d46c5d2e383e7437e02","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Test\n  public void testSupportedRelease() {\n    OLocalPaginatedStorage storage = Mockito.mock(OLocalPaginatedStorage.class);\n    ODistributedStorage ds = new ODistributedStorage(Mockito.mock(OServer.class), storage);\n\n    ds.release();\n\n    Mockito.verify(storage).release();\n  }","id":8971,"modified_method":"@Test\n  public void testSupportedRelease() {\n    OLocalPaginatedStorage storage = Mockito.mock(OLocalPaginatedStorage.class);\n    OServer mockServer = Mockito.mock(OServer.class);\n    Mockito.when(mockServer.getDistributedManager()).thenReturn(Mockito.mock(ODistributedServerManager.class));\n    ODistributedStorage ds = new ODistributedStorage(mockServer, storage);\n\n    ds.release();\n\n    Mockito.verify(storage).release();\n  }","commit_id":"67a827e2d8332808f93e5d46c5d2e383e7437e02","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Test(expected = UnsupportedOperationException.class)\n  public void testUnsupportedRelease() {\n    ODistributedStorage ds = new ODistributedStorage(Mockito.mock(OServer.class), Mockito.mock(ODirectMemoryStorage.class));\n\n    ds.release();\n  }","id":8972,"modified_method":"@Test(expected = UnsupportedOperationException.class)\n  public void testUnsupportedRelease() {\n    ODirectMemoryStorage storage = Mockito.mock(ODirectMemoryStorage.class);\n    OServer mockServer = Mockito.mock(OServer.class);\n    Mockito.when(mockServer.getDistributedManager()).thenReturn(Mockito.mock(ODistributedServerManager.class));\n    ODistributedStorage ds = new ODistributedStorage(mockServer, storage);\n\n    ds.release();\n  }","commit_id":"67a827e2d8332808f93e5d46c5d2e383e7437e02","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Test\n  public void testSupportedFreezeFalse() {\n    OLocalPaginatedStorage storage = Mockito.mock(OLocalPaginatedStorage.class);\n    ODistributedStorage ds = new ODistributedStorage(Mockito.mock(OServer.class), storage);\n\n    ds.freeze(false);\n\n    Mockito.verify(storage).freeze(false);\n  }","id":8973,"modified_method":"@Test\n  public void testSupportedFreezeFalse() {\n    OLocalPaginatedStorage storage = Mockito.mock(OLocalPaginatedStorage.class);\n    OServer mockServer = Mockito.mock(OServer.class);\n    Mockito.when(mockServer.getDistributedManager()).thenReturn(Mockito.mock(ODistributedServerManager.class));\n    ODistributedStorage ds = new ODistributedStorage(mockServer, storage);\n\n    ds.freeze(false);\n\n    Mockito.verify(storage).freeze(false);\n  }","commit_id":"67a827e2d8332808f93e5d46c5d2e383e7437e02","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@AdviseWith(adviceClasses = {EnableClusterLinkAdvice.class})\n\t@Test\n\tpublic void testExecuteWithCallBack2() throws Exception {\n\t\tClusterExecutorImpl clusterExecutorImpl = null;\n\n\t\ttry {\n\t\t\tclusterExecutorImpl = getClusterExecutorImpl(false, false);\n\n\t\t\t// TimeoutException\n\n\t\t\tClusterRequest clusterRequest = ClusterRequest.createUnicastRequest(\n\t\t\t\tnull, new AddressImpl(new MockAddress()));\n\n\t\t\tMockClusterResponseCallback mockClusterResponseCallback =\n\t\t\t\tnew MockClusterResponseCallback();\n\n\t\t\tclusterExecutorImpl.execute(\n\t\t\t\tclusterRequest, mockClusterResponseCallback, 1000,\n\t\t\t\tTimeUnit.MILLISECONDS);\n\n\t\t\tTimeoutException timeoutException =\n\t\t\t\tmockClusterResponseCallback.waitTimeoutException();\n\n\t\t\tAssert.assertNotNull(timeoutException);\n\n\t\t\t// InterruptedException\n\n\t\t\tclusterExecutorImpl.execute(\n\t\t\t\tclusterRequest, mockClusterResponseCallback);\n\n\t\t\tField field = ReflectionUtil.getDeclaredField(\n\t\t\t\tClusterExecutorImpl.class, \"_executorService\");\n\n\t\t\tExecutorService executorService = (ExecutorService)field.get(\n\t\t\t\tclusterExecutorImpl);\n\n\t\t\texecutorService.shutdownNow();\n\n\t\t\tInterruptedException interruptedException =\n\t\t\t\tmockClusterResponseCallback.waitInterruptedException();\n\n\t\t\tAssert.assertNotNull(interruptedException);\n\t\t}\n\t\tfinally {\n\t\t\tif (clusterExecutorImpl != null) {\n\t\t\t\tclusterExecutorImpl.destroy();\n\t\t\t}\n\t\t}\n\t}","id":8974,"modified_method":"@AdviseWith(adviceClasses = {EnableClusterLinkAdvice.class})\n\t@Test\n\tpublic void testExecuteWithCallBack2() throws Exception {\n\t\tClusterExecutorImpl clusterExecutorImpl = null;\n\n\t\ttry {\n\t\t\tclusterExecutorImpl = getClusterExecutorImpl(false, false);\n\n\t\t\tString timestamp = String.valueOf(System.currentTimeMillis());\n\n\t\t\tMethodHandler methodHandler = new MethodHandler(\n\t\t\t\ttestMethod1MethodKey, timestamp);\n\n\t\t\tAddress address = clusterExecutorImpl.getLocalClusterNodeAddress();\n\n\t\t\tClusterRequest clusterRequest = ClusterRequest.createUnicastRequest(\n\t\t\t\tmethodHandler, address);\n\n\t\t\tMockClusterResponseCallback mockClusterResponseCallback =\n\t\t\t\tnew MockClusterResponseCallback();\n\n\t\t\tclusterExecutorImpl.execute(\n\t\t\t\tclusterRequest, mockClusterResponseCallback, 1000,\n\t\t\t\tTimeUnit.MILLISECONDS);\n\n\t\t\tClusterNodeResponses clusterNodeResponses =\n\t\t\t\tmockClusterResponseCallback.waitMessage();\n\n\t\t\tassertFutureClusterResponsesWithoutException(\n\t\t\t\tclusterNodeResponses, clusterRequest.getUuid(), timestamp,\n\t\t\t\taddress);\n\n\t\t\t// TimeoutException\n\n\t\t\tclusterRequest = ClusterRequest.createUnicastRequest(\n\t\t\t\tnull, new AddressImpl(new MockAddress()));\n\n\t\t\tclusterExecutorImpl.execute(\n\t\t\t\tclusterRequest, mockClusterResponseCallback, 1000,\n\t\t\t\tTimeUnit.MILLISECONDS);\n\n\t\t\tTimeoutException timeoutException =\n\t\t\t\tmockClusterResponseCallback.waitTimeoutException();\n\n\t\t\tAssert.assertNotNull(timeoutException);\n\n\t\t\t// InterruptedException\n\n\t\t\tclusterExecutorImpl.execute(\n\t\t\t\tclusterRequest, mockClusterResponseCallback);\n\n\t\t\tField field = ReflectionUtil.getDeclaredField(\n\t\t\t\tClusterExecutorImpl.class, \"_executorService\");\n\n\t\t\tExecutorService executorService = (ExecutorService)field.get(\n\t\t\t\tclusterExecutorImpl);\n\n\t\t\texecutorService.shutdownNow();\n\n\t\t\tInterruptedException interruptedException =\n\t\t\t\tmockClusterResponseCallback.waitInterruptedException();\n\n\t\t\tAssert.assertNotNull(interruptedException);\n\t\t}\n\t\tfinally {\n\t\t\tif (clusterExecutorImpl != null) {\n\t\t\t\tclusterExecutorImpl.destroy();\n\t\t\t}\n\t\t}\n\t}","commit_id":"640589c82b85a3efc1288ff4a3ffbb4cbb5c7d1a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected Object invokeComponentInstance(MuleEvent event) throws Exception\n    {\n        LifecycleAdapter componentLifecycleAdapter = null;\n        try\n        {\n            componentLifecycleAdapter = borrowComponentLifecycleAdaptor();\n            return componentLifecycleAdapter.invoke(event);\n        }\n        finally\n        {\n            returnComponentLifecycleAdaptor(componentLifecycleAdapter);\n        }\n    }","id":8975,"modified_method":"protected Object invokeComponentInstance(MuleEvent event) throws Exception\n    {\n        LifecycleAdapter componentLifecycleAdapter = null;\n        try\n        {\n            componentLifecycleAdapter = borrowComponentLifecycleAdaptor();\n            return componentLifecycleAdapter.invoke(event);\n        }\n        finally\n        {\n            if (componentLifecycleAdapter != null)\n            {\n                returnComponentLifecycleAdaptor(componentLifecycleAdapter);\n            }\n        }\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testInitialisationFailure() throws Exception\n    {\n        AbstractObjectFactory factory = (AbstractObjectFactory) getObjectFactory();\n\n        try\n        {\n            factory.initialise();\n            fail(\"expected InitialisationException\");\n        }\n        catch (InitialisationException iex)\n        {\n            // OK\n        }\n\n        try\n        {\n            factory.getInstance();\n            fail(\"expected InitialisationException\");\n        }\n        catch (InitialisationException iex)\n        {\n            // OK\n        }\n    }","id":8976,"modified_method":"public void testInitialisationFailure() throws Exception\n    {\n        AbstractObjectFactory factory = getUninitialisedObjectFactory();\n\n        try\n        {\n            factory.initialise();\n            fail(\"expected InitialisationException\");\n        }\n        catch (InitialisationException iex)\n        {\n            // OK\n        }\n\n        try\n        {\n            factory.getInstance();\n            fail(\"expected InitialisationException\");\n        }\n        catch (InitialisationException iex)\n        {\n            // OK\n        }\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testDispose() throws Exception\n    {\n        AbstractObjectFactory factory = (AbstractObjectFactory) getObjectFactory();\n        factory.setObjectClass(Object.class);\n        //Will init the object\n        muleContext.getRegistry().applyProcessorsAndLifecycle(factory);\n        factory.dispose();\n\n        assertNull(factory.getObjectClass());\n\n        try\n        {\n            factory.getInstance();\n            fail(\"expected InitialisationException\");\n        }\n        catch (InitialisationException iex)\n        {\n            // OK\n        }\n    }","id":8977,"modified_method":"public void testDispose() throws Exception\n    {\n        AbstractObjectFactory factory = getUninitialisedObjectFactory();\n        factory.setObjectClass(Object.class);\n        //Will init the object\n        muleContext.getRegistry().applyProcessorsAndLifecycle(factory);\n        factory.dispose();\n\n        assertNull(factory.getObjectClass());\n\n        try\n        {\n            factory.getInstance();\n            fail(\"expected InitialisationException\");\n        }\n        catch (InitialisationException iex)\n        {\n            // OK\n        }\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testInitialiseWithClass() throws Exception\n    {\n        AbstractObjectFactory factory = (AbstractObjectFactory) getObjectFactory();\n        factory.setObjectClass(Object.class);\n        //Will init the object        \n        muleContext.getRegistry().applyProcessorsAndLifecycle(factory);\n\n        assertNotNull(factory.getInstance());\n    }","id":8978,"modified_method":"public void testInitialiseWithClass() throws Exception\n    {\n        AbstractObjectFactory factory = getUninitialisedObjectFactory();\n        factory.setObjectClass(Object.class);\n\n        // Will init the object        \n        muleContext.getRegistry().applyProcessorsAndLifecycle(factory);\n\n        assertNotNull(factory.getInstance());\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testInitialiseWithClassName() throws Exception\n    {\n        AbstractObjectFactory factory = (AbstractObjectFactory) getObjectFactory();\n        factory.setObjectClassName(Object.class.getName());\n        //Will init the object\n        muleContext.getRegistry().applyProcessorsAndLifecycle(factory);\n        assertNotNull(factory.getInstance());\n    }","id":8979,"modified_method":"public void testInitialiseWithClassName() throws Exception\n    {\n        AbstractObjectFactory factory = getUninitialisedObjectFactory();\n        factory.setObjectClassName(Object.class.getName());\n\n        // Will init the object\n        muleContext.getRegistry().applyProcessorsAndLifecycle(factory);\n        assertNotNull(factory.getInstance());\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public abstract ObjectFactory getObjectFactory();","id":8980,"modified_method":"public abstract AbstractObjectFactory getUninitialisedObjectFactory();","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"protected void applyInitialisationPolicy() throws Exception\n    {\n        if (poolingProfile != null)\n        {\n            int numToBorrow = 0;\n            int initPolicy = poolingProfile.getInitialisationPolicy();\n\n            if (initPolicy == PoolingProfile.INITIALISE_ALL)\n            {\n                numToBorrow = poolingProfile.getMaxActive();\n            }\n            else if (initPolicy == PoolingProfile.INITIALISE_ONE)\n            {\n                numToBorrow = 1;\n            }\n\n            List holderList = new ArrayList(numToBorrow);\n            try\n            {\n                for (int t = 0; t < numToBorrow; t++)\n                {\n                    holderList.add(getPooledObjectFactory().makeObject());\n                }\n            }\n            finally\n            {\n                for (int t = 0; t < holderList.size(); t++)\n                {\n                    Object obj = holderList.get(t);\n                    if (obj != null)\n                    {\n                        this.returnObject(obj);\n                    }\n                }\n            }\n        }\n    }","id":8981,"modified_method":"protected void applyInitialisationPolicy() throws Exception\n    {\n        if (poolingProfile != null)\n        {\n            int numToBorrow = 0;\n            int initPolicy = poolingProfile.getInitialisationPolicy();\n\n            if (initPolicy == PoolingProfile.INITIALISE_ALL)\n            {\n                numToBorrow = poolingProfile.getMaxActive();\n            }\n            else if (initPolicy == PoolingProfile.INITIALISE_ONE)\n            {\n                numToBorrow = 1;\n            }\n\n            List<Object> holderList = new ArrayList<Object>(numToBorrow);\n            try\n            {\n                for (int t = 0; t < numToBorrow; t++)\n                {\n                    holderList.add(getPooledObjectFactory().makeObject());\n                }\n            }\n            finally\n            {\n                for (int t = 0; t < holderList.size(); t++)\n                {\n                    Object obj = holderList.get(t);\n                    if (obj != null)\n                    {\n                        this.returnObject(obj);\n                    }\n                }\n            }\n        }\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public Borrower(PooledJavaComponent component, long time)\n        {\n            super(\"Borrower\");\n            if (component == null)\n            {\n                throw new IllegalArgumentException(\"Pool cannot be null\");\n            }\n            this.component = component;\n            if (time < 500)\n            {\n                time = 500;\n            }\n            this.time = time;\n        }","id":8982,"modified_method":"public Borrower(PooledJavaComponent component, long time)\n        {\n            super();\n            if (component == null)\n            {\n                throw new IllegalArgumentException(\"Pool cannot be null\");\n            }\n            this.component = component;\n            if (time < 500)\n            {\n                time = 500;\n            }\n            this.time = time;\n        }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testLifecycle() throws Exception\n    {\n        PooledJavaComponent component = new PooledJavaComponent(getObjectFactory(), getDefaultPoolingProfile());\n        component.setService(getTestService());\n        component.setMuleContext(muleContext);\n        component.initialise();\n        component.start();\n        assertNotSame(component.borrowComponentLifecycleAdaptor(), component.borrowComponentLifecycleAdaptor());\n        component.stop();\n        component.start();\n        assertNotSame(((DefaultLifecycleAdapter) component.borrowComponentLifecycleAdaptor()).componentObject.get(),\n            ((DefaultLifecycleAdapter) component.borrowComponentLifecycleAdaptor()).componentObject.get());\n    }","id":8983,"modified_method":"public void testCreateLifecycleAdapters() throws Exception\n    {\n        PooledJavaComponent component = createPooledComponent();\n        assertEquals(0, component.lifecycleAdapterPool.getNumActive());\n\n        LifecycleAdapter borrowed = component.borrowComponentLifecycleAdaptor();\n        assertNotNull(borrowed);\n        assertEquals(1, component.lifecycleAdapterPool.getNumActive());\n        \n        component.returnComponentLifecycleAdaptor(borrowed);\n        assertEquals(0, component.lifecycleAdapterPool.getNumActive());\n\n        borrowed = component.borrowComponentLifecycleAdaptor();\n        assertNotNull(borrowed);\n        assertEquals(1, component.lifecycleAdapterPool.getNumActive());\n        \n        Object borrowed2 = component.borrowComponentLifecycleAdaptor();\n        assertNotNull(borrowed2);\n        assertEquals(2, component.lifecycleAdapterPool.getNumActive());\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testGrowOnExhaust() throws Exception\n    {\n        PoolingProfile pp = getDefaultPoolingProfile();\n        pp.setExhaustedAction(PoolingProfile.WHEN_EXHAUSTED_GROW);\n        PooledJavaComponent component = new PooledJavaComponent(getObjectFactory(), pp);\n        component.setMuleContext(muleContext);\n        component.setService(getTestService());\n        component.initialise();\n        component.start();\n\n        Object borrowed = component.borrowComponentLifecycleAdaptor();\n        borrowed = component.borrowComponentLifecycleAdaptor();\n        borrowed = component.borrowComponentLifecycleAdaptor();\n        assertEquals(3, component.lifecycleAdapterPool.getNumActive());\n        // assertEquals(3, pool.getMaxSize());\n\n        // Should now grow\n        borrowed = component.borrowComponentLifecycleAdaptor();\n        assertNotNull(borrowed);\n\n        assertEquals(4, component.lifecycleAdapterPool.getNumActive());\n    }","id":8984,"modified_method":"public void testGrowOnExhaust() throws Exception\n    {\n        PoolingProfile pp = createDefaultPoolingProfile();\n        pp.setExhaustedAction(PoolingProfile.WHEN_EXHAUSTED_GROW);\n        \n        PooledJavaComponent component = createPooledComponent(pp);\n\n        borrowLifecycleAdaptersUntilPoolIsFull(component);\n\n        // Should now grow\n        Object borrowed = component.borrowComponentLifecycleAdaptor();\n        assertNotNull(borrowed);\n        assertEquals(MAX_ACTIVE + 1, component.lifecycleAdapterPool.getNumActive());\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public void run()\n        {\n            try\n            {\n                LifecycleAdapter object = component.borrowComponentLifecycleAdaptor();\n                try\n                {\n                    sleep(time);\n                }\n                catch (InterruptedException e)\n                {\n                    // ignore\n                }\n                component.returnComponentLifecycleAdaptor(object);\n            }\n            catch (Exception e)\n            {\n                fail(\"Borrower thread failed:\\n\" + ExceptionUtils.getStackTrace(e));\n            }\n        }","id":8985,"modified_method":"public void run()\n        {\n            try\n            {\n                LifecycleAdapter object = component.borrowComponentLifecycleAdaptor();\n                try\n                {\n                    Thread.sleep(time);\n                }\n                catch (InterruptedException e)\n                {\n                    // ignore\n                }\n                component.returnComponentLifecycleAdaptor(object);\n            }\n            catch (Exception e)\n            {\n                fail(\"Borrower thread failed:\\n\" + ExceptionUtils.getStackTrace(e));\n            }\n        }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testBlockOnExhaust() throws Exception\n    {\n        PoolingProfile pp = getDefaultPoolingProfile();\n        pp.setExhaustedAction(PoolingProfile.WHEN_EXHAUSTED_WAIT);\n        PooledJavaComponent component = new PooledJavaComponent(getObjectFactory(), pp);\n        component.setService(getTestService());\n        component.setMuleContext(muleContext);\n        component.initialise();\n        component.start();\n\n        Object borrowed = null;\n\n        assertEquals(0, component.lifecycleAdapterPool.getNumActive());\n\n        borrowed = component.borrowComponentLifecycleAdaptor();\n        borrowed = component.borrowComponentLifecycleAdaptor();\n        assertEquals(2, component.lifecycleAdapterPool.getNumActive());\n\n        // TODO\n        // long starttime = System.currentTimeMillis();\n        long borrowerWait = 500;\n        Borrower borrower = new Borrower(component, borrowerWait);\n        borrower.start();\n        // Make sure the borrower borrows first\n        try\n        {\n            Thread.sleep(200);\n        }\n        catch (InterruptedException e)\n        {\n            // ignore\n        }\n\n        borrowed = component.borrowComponentLifecycleAdaptor();\n        // TODO\n        // long totalTime = System.currentTimeMillis() - starttime;\n        // Need to allow for alittle variance in system time\n        // This is unreliable\n        // assertTrue(totalTime < (borrowerWait + 300) && totalTime >\n        // (borrowerWait -300));\n\n        assertNotNull(borrowed);\n    }","id":8986,"modified_method":"public void testBlockOnExhaust() throws Exception\n    {\n        PoolingProfile pp = createDefaultPoolingProfile();\n        pp.setExhaustedAction(PoolingProfile.WHEN_EXHAUSTED_WAIT);\n        \n        PooledJavaComponent component = createPooledComponent(pp);\n        assertEquals(0, component.lifecycleAdapterPool.getNumActive());\n\n        // borrow all but one lifecycle adapters\n        int oneRemainingInPool = (MAX_ACTIVE - 1);\n        for (int i = 0; i < oneRemainingInPool; i++)\n        {\n            LifecycleAdapter borrowed = component.borrowComponentLifecycleAdaptor();\n            assertNotNull(borrowed);\n            assertEquals(component.lifecycleAdapterPool.getNumActive(), i + 1);\n        }\n        assertEquals(oneRemainingInPool, component.lifecycleAdapterPool.getNumActive());\n        \n        long startTime = System.currentTimeMillis();\n        int borrowerWait = 500;\n        Borrower borrower = new Borrower(component, borrowerWait);\n        new Thread(borrower, \"BorrowThread\").start();\n\n        // Make sure the borrower borrows first\n        try\n        {\n            Thread.sleep(200);\n        }\n        catch (InterruptedException e)\n        {\n            // ignore\n        }\n\n        // this will get an object from the pool eventually, after Borrower has returned it\n        Object borrowed = component.borrowComponentLifecycleAdaptor();\n        assertNotNull(borrowed);\n        long totalTime = System.currentTimeMillis() - startTime;\n        assertTrue(totalTime > borrowerWait);\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testComponentCreation() throws Exception\n    {\n        PrototypeObjectFactory objectFactory = getObjectFactory();\n        objectFactory.setObjectClass(Orange.class);\n        objectFactory.initialise();\n\n        PoolingProfile pp = getDefaultPoolingProfile();\n        pp.setExhaustedAction(PoolingProfile.WHEN_EXHAUSTED_FAIL);\n\n        PooledJavaComponent component = new PooledJavaComponent(objectFactory, pp);\n        component.setMuleContext(muleContext);\n        assertNotNull(component.getObjectFactory());\n        assertEquals(objectFactory, component.getObjectFactory());\n        assertEquals(Orange.class, component.getObjectFactory().getObjectClass());\n        assertEquals(Orange.class, component.getObjectType());\n        assertNotNull(component.getPoolingProfile());\n        assertEquals(pp, component.getPoolingProfile());\n        assertEquals(PoolingProfile.WHEN_EXHAUSTED_FAIL, component.getPoolingProfile().getExhaustedAction());\n    }","id":8987,"modified_method":"public void testComponentCreation() throws Exception\n    {\n        PrototypeObjectFactory objectFactory = getDefaultObjectFactory();\n\n        PoolingProfile pp = createDefaultPoolingProfile();\n        pp.setExhaustedAction(PoolingProfile.WHEN_EXHAUSTED_FAIL);\n\n        PooledJavaComponent component = new PooledJavaComponent(objectFactory, pp);\n        component.setMuleContext(muleContext);\n        assertNotNull(component.getObjectFactory());\n        assertEquals(objectFactory, component.getObjectFactory());\n        assertEquals(Orange.class, component.getObjectType());\n\n        assertNotNull(component.getPoolingProfile());\n        assertEquals(pp, component.getPoolingProfile());\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testObjectUniqueness() throws Exception\n    {\n        PoolingProfile pp = getDefaultPoolingProfile();\n        pp.setExhaustedAction(PoolingProfile.WHEN_EXHAUSTED_FAIL);\n        PooledJavaComponent component = new PooledJavaComponent(new PrototypeObjectFactory(UniqueComponent.class), pp);\n        component.setMuleContext(muleContext);\n        component.setService(getTestService());\n        component.initialise();\n        component.start();\n\n        assertEquals(0, component.lifecycleAdapterPool.getNumActive());\n\n        Object obj;\n\n        obj = ((DefaultLifecycleAdapter) component.borrowComponentLifecycleAdaptor()).componentObject.get();\n        assertNotNull(obj);\n        assertTrue(\"Object should be of type UniqueComponent\", obj instanceof UniqueComponent);\n        String id1 = ((UniqueComponent) obj).getId();\n        assertNotNull(id1);\n\n        obj = ((DefaultLifecycleAdapter) component.borrowComponentLifecycleAdaptor()).componentObject.get();\n        assertNotNull(obj);\n        assertTrue(\"Object should be of type UniqueComponent\", obj instanceof UniqueComponent);\n        String id2 = ((UniqueComponent) obj).getId();\n        assertNotNull(id2);\n\n        obj = ((DefaultLifecycleAdapter) component.borrowComponentLifecycleAdaptor()).componentObject.get();\n        assertNotNull(obj);\n        assertTrue(\"Object should be of type UniqueComponent\", obj instanceof UniqueComponent);\n        String id3 = ((UniqueComponent) obj).getId();\n        assertNotNull(id3);\n\n        assertFalse(\"Service IDs \" + id1 + \" and \" + id2 + \" should be different\", id1.equals(id2));\n        assertFalse(\"Service IDs \" + id2 + \" and \" + id3 + \" should be different\", id2.equals(id3));\n    }","id":8988,"modified_method":"public void ___testObjectUniqueness() throws Exception\n    {\n        ObjectFactory objectFactory = new PrototypeObjectFactory(UniqueComponent.class);\n        \n        PooledJavaComponent component = createPooledComponent(objectFactory);\n        assertEquals(0, component.lifecycleAdapterPool.getNumActive());\n\n        String id1 = getIdFromObjectCreatedByPool(component);\n        String id2 = getIdFromObjectCreatedByPool(component);\n        String id3 = getIdFromObjectCreatedByPool(component);\n\n        assertFalse(\"Service IDs \" + id1 + \" and \" + id2 + \" should be different\", id1.equals(id2));\n        assertFalse(\"Service IDs \" + id2 + \" and \" + id3 + \" should be different\", id2.equals(id3));\n        assertFalse(\"Service IDs \" + id1 + \" and \" + id3 + \" should be different\", id1.equals(id3));\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testFailOnExhaust() throws Exception\n    {\n        PoolingProfile pp = getDefaultPoolingProfile();\n        pp.setExhaustedAction(PoolingProfile.WHEN_EXHAUSTED_WAIT);\n        PooledJavaComponent component = new PooledJavaComponent(getObjectFactory(), pp);\n        component.setMuleContext(muleContext);\n        component.setService(getTestService());\n        component.initialise();\n        component.start();\n\n        Object borrowed = null;\n\n        for (int i = 0; i < MAX_ACTIVE; i++)\n        {\n            borrowed = component.borrowComponentLifecycleAdaptor();\n            assertNotNull(borrowed);\n            assertEquals(component.lifecycleAdapterPool.getNumActive(), i + 1);\n        }\n\n        try\n        {\n            borrowed = component.borrowComponentLifecycleAdaptor();\n            fail(\"Should throw an Exception\");\n        }\n        catch (Exception e)\n        {\n            // expected\n        }\n    }","id":8989,"modified_method":"public void testFailOnExhaust() throws Exception\n    {\n        PoolingProfile pp = createDefaultPoolingProfile();\n        pp.setExhaustedAction(PoolingProfile.WHEN_EXHAUSTED_FAIL);\n        \n        PooledJavaComponent component = createPooledComponent(pp);\n        borrowLifecycleAdaptersUntilPoolIsFull(component);\n\n        try\n        {\n            component.borrowComponentLifecycleAdaptor();\n            fail(\"Should throw an Exception\");\n        }\n        catch (NoSuchElementException nse)\n        {\n            // expected\n        }\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testDisposingFactoryDisposesObject() throws Exception\n    {\n        PooledJavaComponent component = new PooledJavaComponent(new PrototypeObjectFactory(WaterMelon.class),\n            getDefaultPoolingProfile());\n        component.setMuleContext(muleContext);\n        component.setService(getTestService());\n        component.initialise();\n        component.start();\n\n        DefaultLifecycleAdapter lifecycleAdapter = (DefaultLifecycleAdapter) component.borrowComponentLifecycleAdaptor();\n        component.returnComponentLifecycleAdaptor(lifecycleAdapter);\n        component.dispose();\n\n        assertNull(lifecycleAdapter.componentObject.get());\n    }","id":8990,"modified_method":"public void testDisposingFactoryDisposesObject() throws Exception\n    {\n        ObjectFactory objectFactory = new PrototypeObjectFactory(WaterMelon.class);\n        PooledJavaComponent component = createPooledComponent(objectFactory);\n\n        DefaultLifecycleAdapter lifecycleAdapter = (DefaultLifecycleAdapter) component.borrowComponentLifecycleAdaptor();\n        component.returnComponentLifecycleAdaptor(lifecycleAdapter);\n        component.dispose();\n\n        assertNull(lifecycleAdapter.componentObject.get());\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testBlockExpiryOnExhaust() throws Exception\n    {\n        PoolingProfile pp = getDefaultPoolingProfile();\n        pp.setExhaustedAction(PoolingProfile.WHEN_EXHAUSTED_WAIT);\n        PooledJavaComponent component = new PooledJavaComponent(getObjectFactory(), pp);\n        component.setService(getTestService());\n        component.setMuleContext(muleContext);\n        component.initialise();\n        component.start();\n\n        Object borrowed = null;\n\n        assertEquals(0, component.lifecycleAdapterPool.getNumActive());\n        borrowed = component.borrowComponentLifecycleAdaptor();\n        assertNotNull(borrowed);\n        borrowed = component.borrowComponentLifecycleAdaptor();\n        assertNotNull(borrowed);\n        borrowed = component.borrowComponentLifecycleAdaptor();\n        assertNotNull(borrowed);\n        assertEquals(3, component.lifecycleAdapterPool.getNumActive());\n\n        // TODO\n        // long starttime = System.currentTimeMillis();\n        try\n        {\n            borrowed = component.borrowComponentLifecycleAdaptor();\n            fail(\"Should throw an Exception\");\n        }\n        catch (Exception e)\n        {\n            // TODO\n            // long totalTime = System.currentTimeMillis() - starttime;\n            // Need to allow for alittle variance in system time\n            // This is unreliable\n            // assertTrue(totalTime < (DEFAULT_WAIT + 300) && totalTime >\n            // (DEFAULT_WAIT - 300));\n        }\n    }","id":8991,"modified_method":"public void testBlockExpiryOnExhaust() throws Exception\n    {\n        PoolingProfile pp = createDefaultPoolingProfile();\n        pp.setExhaustedAction(PoolingProfile.WHEN_EXHAUSTED_WAIT);\n        \n        PooledJavaComponent component = createPooledComponent(pp);\n        assertEquals(0, component.lifecycleAdapterPool.getNumActive());\n        \n        borrowLifecycleAdaptersUntilPoolIsFull(component);\n\n        long startTime = System.currentTimeMillis();\n        try\n        {\n            component.borrowComponentLifecycleAdaptor();\n            fail(\"Should throw an Exception\");\n        }\n        catch (NoSuchElementException e)\n        {\n            long totalTime = System.currentTimeMillis() - startTime;\n            assertTrue(totalTime >= MAX_WAIT);\n        }\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testClearPool() throws Exception\n    {\n        PoolingProfile pp = getDefaultPoolingProfile();\n        pp.setExhaustedAction(PoolingProfile.WHEN_EXHAUSTED_FAIL);\n        PooledJavaComponent component = new PooledJavaComponent(getObjectFactory(), pp);\n        component.setMuleContext(muleContext);\n        component.setService(getTestService());\n        component.initialise();\n        component.start();\n\n        LifecycleAdapter borrowed = component.borrowComponentLifecycleAdaptor();\n        assertEquals(1, component.lifecycleAdapterPool.getNumActive());\n        component.returnComponentLifecycleAdaptor(borrowed);\n\n        component.stop();\n        component.start();\n        assertEquals(0, component.lifecycleAdapterPool.getNumActive());\n    }","id":8992,"modified_method":"public void testClearPool() throws Exception\n    {\n        PoolingProfile pp = createDefaultPoolingProfile();\n        pp.setExhaustedAction(PoolingProfile.WHEN_EXHAUSTED_FAIL);\n        \n        PooledJavaComponent component = createPooledComponent(pp);\n\n        LifecycleAdapter borrowed = component.borrowComponentLifecycleAdaptor();\n        assertEquals(1, component.lifecycleAdapterPool.getNumActive());\n        component.returnComponentLifecycleAdaptor(borrowed);\n        assertEquals(0, component.lifecycleAdapterPool.getNumActive());\n\n        component.stop();\n        component.start();\n        assertEquals(0, component.lifecycleAdapterPool.getNumActive());\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"protected PrototypeObjectFactory getObjectFactory()\n    {\n        return new PrototypeObjectFactory(Orange.class);\n    }","id":8993,"modified_method":"private PrototypeObjectFactory getDefaultObjectFactory() throws InitialisationException\n    {\n        PrototypeObjectFactory objectFactory = new PrototypeObjectFactory(Orange.class);\n        objectFactory.initialise();\n        return objectFactory;\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public PrototypeObjectFactory(Class objectClass, Map properties)\n    {\n        super(objectClass, properties);\n    }","id":8994,"modified_method":"public PrototypeObjectFactory(Class<?> objectClass, Map properties)\n    {\n        super(objectClass, properties);\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"public PrototypeObjectFactory(Class objectClass)\n    {\n        super(objectClass);\n    }","id":8995,"modified_method":"public PrototypeObjectFactory(Class<?> objectClass)\n    {\n        super(objectClass);\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public void testGetObjectClass() throws Exception\n    {\n        PrototypeObjectFactory factory = (PrototypeObjectFactory) getObjectFactory();\n        factory.setObjectClass(Object.class);\n        muleContext.getRegistry().applyProcessorsAndLifecycle(factory);\n        assertEquals(Object.class, factory.getObjectClass());\n    }","id":8996,"modified_method":"@Override\n    public void testGetObjectClass() throws Exception\n    {\n        PrototypeObjectFactory factory = (PrototypeObjectFactory) getUninitialisedObjectFactory();\n        factory.setObjectClass(Object.class);\n        muleContext.getRegistry().applyProcessorsAndLifecycle(factory);\n        \n        assertEquals(Object.class, factory.getObjectClass());\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public void testGet() throws Exception\n    {\n        PrototypeObjectFactory factory = (PrototypeObjectFactory) getObjectFactory();\n        factory.setObjectClass(Object.class);\n        muleContext.getRegistry().applyProcessorsAndLifecycle(factory);\n        assertNotSame(factory.getInstance(), factory.getInstance());\n    }","id":8997,"modified_method":"@Override\n    public void testGet() throws Exception\n    {\n        PrototypeObjectFactory factory = (PrototypeObjectFactory) getUninitialisedObjectFactory();\n        factory.setObjectClass(Object.class);\n        muleContext.getRegistry().applyProcessorsAndLifecycle(factory);\n        \n        assertNotSame(factory.getInstance(), factory.getInstance());\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public ObjectFactory getObjectFactory()\n    {\n        return new PrototypeObjectFactory();\n    }","id":8998,"modified_method":"@Override\n    public AbstractObjectFactory getUninitialisedObjectFactory()\n    {\n        return new PrototypeObjectFactory();\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public void testGet() throws Exception\n    {\n        SingletonObjectFactory factory = (SingletonObjectFactory) getObjectFactory();\n        factory.setObjectClass(Object.class);\n        factory.setMuleContext(muleContext);\n        factory.initialise();\n        assertSame(factory.getInstance(), factory.getInstance());\n    }","id":8999,"modified_method":"@Override\n    public void testGet() throws Exception\n    {\n        SingletonObjectFactory factory = (SingletonObjectFactory) getUninitialisedObjectFactory();\n        factory.setObjectClass(Object.class);\n        factory.setMuleContext(muleContext);\n        factory.initialise();\n        \n        assertSame(factory.getInstance(), factory.getInstance());\n    }","commit_id":"1befc2f2bdd37d580d6693da2d706680cd0e44f6","url":"https://github.com/mulesoft/mule"}]