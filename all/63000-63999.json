[{"original_method":"public void testConfigureCommentsSingleApprover() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\"));\n\t}","id":63000,"modified_method":"public void testConfigureCommentsSingleApprover() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\"));\n\t}","commit_id":"90fa75485dba9a559397b0603ddb8e1986a9c111","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_ViewCommentAssignedToMe() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Page Comments Test Page\");\n\t\tselenium.clickAt(\"link=Page Comments Test Page\",\n\t\t\tRuntimeVariables.replace(\"Page Comments Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Pending (Review)\"));\n\t\tassertFalse(selenium.isTextPresent(\"PC Comment\"));\n\t}","id":63001,"modified_method":"public void testGuest_ViewCommentAssignedToMe() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Page Comments Test Page\",\n\t\t\tRuntimeVariables.replace(\"Page Comments Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Pending (Review)\"));\n\t\tassertFalse(selenium.isTextPresent(\"PC Comment\"));\n\t}","commit_id":"90fa75485dba9a559397b0603ddb8e1986a9c111","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_ViewCommentAssignedToMyRoles()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Page Comments Test Page\");\n\t\tselenium.clickAt(\"link=Page Comments Test Page\",\n\t\t\tRuntimeVariables.replace(\"Page Comments Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Pending (Review)\"));\n\t\tassertFalse(selenium.isTextPresent(\"PC Comment\"));\n\t}","id":63002,"modified_method":"public void testGuest_ViewCommentAssignedToMyRoles()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Page Comments Test Page\",\n\t\t\tRuntimeVariables.replace(\"Page Comments Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Pending (Review)\"));\n\t\tassertFalse(selenium.isTextPresent(\"PC Comment\"));\n\t}","commit_id":"90fa75485dba9a559397b0603ddb8e1986a9c111","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_ViewCommentCompleted() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Page Comments Test Page\");\n\t\tselenium.clickAt(\"link=Page Comments Test Page\",\n\t\t\tRuntimeVariables.replace(\"Page Comments Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"PC Comment\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Pending (Review)\"));\n\t}","id":63003,"modified_method":"public void testGuest_ViewCommentCompleted() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Page Comments Test Page\",\n\t\t\tRuntimeVariables.replace(\"Page Comments Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"PC Comment\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Pending (Review)\"));\n\t}","commit_id":"90fa75485dba9a559397b0603ddb8e1986a9c111","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCommentAssignedToMe() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Page Comments Test Page\");\n\t\tselenium.clickAt(\"link=Page Comments Test Page\",\n\t\t\tRuntimeVariables.replace(\"Page Comments Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//strong[@class='workflow-status-pending']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PC Comment\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[2]/a\", \"PC Comment\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"There are no completed tasks.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","id":63004,"modified_method":"public void testViewCommentAssignedToMe() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Page Comments Test Page\",\n\t\t\tRuntimeVariables.replace(\"Page Comments Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//strong[@class='workflow-status-pending']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PC Comment\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[2]/a\", \"PC Comment\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"There are no completed tasks.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","commit_id":"90fa75485dba9a559397b0603ddb8e1986a9c111","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCommentAssignedToMyRoles() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Page Comments Test Page\");\n\t\tselenium.clickAt(\"link=Page Comments Test Page\",\n\t\t\tRuntimeVariables.replace(\"Page Comments Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//strong[@class='workflow-status-pending']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PC Comment\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Pending\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[2]/a\", \"PC Comment\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"There are no completed tasks.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","id":63005,"modified_method":"public void testViewCommentAssignedToMyRoles() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Page Comments Test Page\",\n\t\t\tRuntimeVariables.replace(\"Page Comments Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//strong[@class='workflow-status-pending']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PC Comment\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Pending\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[2]/a\", \"PC Comment\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"There are no completed tasks.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","commit_id":"90fa75485dba9a559397b0603ddb8e1986a9c111","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCommentCompleted() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Page Comments Test Page\");\n\t\tselenium.clickAt(\"link=Page Comments Test Page\",\n\t\t\tRuntimeVariables.replace(\"Page Comments Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"PC Comment\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Pending (Review)\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[2]\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[2]/a\", \"PC Comment\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t}","id":63006,"modified_method":"public void testViewCommentCompleted() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Page Comments Test Page\",\n\t\t\tRuntimeVariables.replace(\"Page Comments Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"PC Comment\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Pending (Review)\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[2]\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[2]/a\", \"PC Comment\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t}","commit_id":"90fa75485dba9a559397b0603ddb8e1986a9c111","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddAppointmentEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Test Event\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"This is a test event!\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"This is a test event!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@id='_8_timeZoneSensitiveCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Time Zone Sensitive Checkbox\"));\n\t\tselenium.select(\"//select[@id='_8_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"Link=Test Event\"));\n\t}","id":63007,"modified_method":"public void testAddAppointmentEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Test Event\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"This is a test event!\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"This is a test event!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@id='_8_timeZoneSensitiveCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Time Zone Sensitive Checkbox\"));\n\t\tselenium.select(\"//select[@id='_8_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Event\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Test Event')]/td[2]/a\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddConcertEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Caedmon's Call Concert!\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"I love this band guys! Everyone should see them! I've never seen them before. :(\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"I love this band guys! Everyone should see them! I've never seen them before. :(\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@id='_8_timeZoneSensitiveCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Time Zone Sensitive Checkbox\"));\n\t\tselenium.select(\"//select[@id='_8_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Concert\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"Link=Caedmon's Call Concert!\"));\n\t}","id":63008,"modified_method":"public void testAddConcertEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Caedmon's Call Concert!\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"I love this band guys! Everyone should see them! I've never seen them before. :(\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"I love this band guys! Everyone should see them! I've never seen them before. :(\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@id='_8_timeZoneSensitiveCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Time Zone Sensitive Checkbox\"));\n\t\tselenium.select(\"//select[@id='_8_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Concert\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isTextPresent(\"Caedmon's Call Concert!\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDailyRepeatingEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div/div/span[2]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Repeat Daily\"));\n\t\tselenium.waitForVisible(\"//input[@name='_8_dailyType']\");\n\t\tselenium.clickAt(\"//input[@name='_8_dailyType']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.type(\"//input[@id='_8_dailyInterval']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.clickAt(\"//input[@name='_8_endDateType' and @value='2']\",\n\t\t\tRuntimeVariables.replace(\"End by\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2011\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 1, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 1, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isVisible(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 5, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 5, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isVisible(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2011\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2011\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 1, 2011);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 1, 2011);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementNotPresent(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Repeating Test Event\"));\n\t}","id":63009,"modified_method":"public void testAddDailyRepeatingEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div/div/span[2]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Repeat Daily\"));\n\t\tselenium.waitForVisible(\"//input[@name='_8_dailyType']\");\n\t\tselenium.clickAt(\"//input[@name='_8_dailyType']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.type(\"//input[@id='_8_dailyInterval']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.clickAt(\"//input[@name='_8_endDateType' and @value='2']\",\n\t\t\tRuntimeVariables.replace(\"End by\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2011\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 1, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 1, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='event-title']/a\",\n\t\t\t\"Repeating Test Event\");\n\t\tassertEquals(RuntimeVariables.replace(\"Repeating Test Event\"),\n\t\t\tselenium.getText(\"//div[@class='event-title']/a\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 5, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 5, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='event-title']/a\",\n\t\t\t\"Repeating Test Event\");\n\t\tassertEquals(RuntimeVariables.replace(\"Repeating Test Event\"),\n\t\t\tselenium.getText(\"//div[@class='event-title']/a\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2011\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2011\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 1, 2011);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 1, 2011);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForTextNotPresent(\"//div[@class='event-title']/a\");\n\t\tassertFalse(selenium.isTextPresent(\"//div[@class='event-title']/a\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddInvalidDurationEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_8_durationHour']\",\n\t\t\tRuntimeVariables.replace(\"label=0\"));\n\t\tselenium.select(\"//select[@id='_8_durationMinute']\",\n\t\t\tRuntimeVariables.replace(\"label=:00\"));\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Invalid Duration Test Event\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a longer duration.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":63010,"modified_method":"public void testAddInvalidDurationEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_8_durationHour']\",\n\t\t\tRuntimeVariables.replace(\"label=0\"));\n\t\tselenium.select(\"//select[@id='_8_durationMinute']\",\n\t\t\tRuntimeVariables.replace(\"label=:00\"));\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Invalid Duration Test Event\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a longer duration.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddInvalidEndDateEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Invalid End Date Test Event\"));\n\t\tselenium.clickAt(\"//input[@name='_8_recurrenceType' and @value='3']\",\n\t\t\tRuntimeVariables.replace(\"Repeat Daily\"));\n\t\tselenium.waitForVisible(\"//input[@id='_8_dailyInterval']\");\n\t\tselenium.type(\"//input[@id='_8_dailyInterval']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.clickAt(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"End Date Month\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tassertFalse(selenium.isPartialText(\"//select[@id='_8_endDateDay']\", \"30\"));\n\t}","id":63011,"modified_method":"public void testAddInvalidEndDateEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Invalid End Date Test Event\"));\n\t\tselenium.clickAt(\"//input[@name='_8_recurrenceType' and @value='3']\",\n\t\t\tRuntimeVariables.replace(\"Repeat Daily\"));\n\t\tselenium.waitForVisible(\"//input[@id='_8_dailyInterval']\");\n\t\tselenium.type(\"//input[@id='_8_dailyInterval']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.clickAt(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"End Date Month\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tassertNotEquals(\"30\", selenium.getValue(\"//select[@id='_8_endDateDay']\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddInvalidRepeatEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@id='_8_allDayCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"All Day Event Checkbox\"));\n\t\tselenium.waitForVisible(\"//input[@id='_8_title']\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Invalid Repeat Test Event\"));\n\t\tselenium.select(\"//select[@id='_8_startDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.select(\"//select[@id='_8_startDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=25\"));\n\t\tselenium.select(\"//select[@id='_8_startDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2009\"));\n\t\tselenium.clickAt(\"//input[@name='_8_recurrenceType' and @value='3']\",\n\t\t\tRuntimeVariables.replace(\"Repeat Daily\"));\n\t\tselenium.waitForVisible(\"//input[@id='_8_dailyInterval']\");\n\t\tselenium.type(\"//input[@id='_8_dailyInterval']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.clickAt(\"//input[@name='_8_endDateType' and @value='2']\",\n\t\t\tRuntimeVariables.replace(\"End by\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=23\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2009\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid end date.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":63012,"modified_method":"public void testAddInvalidRepeatEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@id='_8_allDayCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"All Day Event Checkbox\"));\n\t\tselenium.waitForVisible(\"//input[@id='_8_title']\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Invalid Repeat Test Event\"));\n\t\tselenium.select(\"//select[@id='_8_startDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.select(\"//select[@id='_8_startDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=25\"));\n\t\tselenium.select(\"//select[@id='_8_startDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2009\"));\n\t\tselenium.clickAt(\"//input[@name='_8_recurrenceType' and @value='3']\",\n\t\t\tRuntimeVariables.replace(\"Repeat Daily\"));\n\t\tselenium.waitForVisible(\"//input[@id='_8_dailyInterval']\");\n\t\tselenium.type(\"//input[@id='_8_dailyInterval']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.clickAt(\"//input[@name='_8_endDateType' and @value='2']\",\n\t\t\tRuntimeVariables.replace(\"End by\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=23\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2009\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid end date.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddInvalidStartDateEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Invalid Start Date Test Event\"));\n\t\tselenium.clickAt(\"//select[@id='_8_startDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"Start Date\"));\n\t\tselenium.waitForVisible(\"//select[@id='_8_startDateMonth']\");\n\t\tselenium.select(\"//select[@id='_8_startDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.select(\"//select[@id='_8_startDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tassertFalse(selenium.isPartialText(\"//select[@id='_8_startDateDay']\",\n\t\t\t\t\"30\"));\n\t}","id":63013,"modified_method":"public void testAddInvalidStartDateEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Invalid Start Date Test Event\"));\n\t\tselenium.clickAt(\"//select[@id='_8_startDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"Start Date\"));\n\t\tselenium.waitForVisible(\"//select[@id='_8_startDateMonth']\");\n\t\tselenium.select(\"//select[@id='_8_startDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.select(\"//select[@id='_8_startDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tassertNotEquals(\"30\",\n\t\t\tselenium.getValue(\"//select[@id='_8_startDateDay']\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMonthlyDateRepeatingEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div/div/span[4]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Repeat Monthly\"));\n\t\tselenium.waitForVisible(\"//span[2]/span[1]/span/span/input\");\n\t\tselenium.clickAt(\"//span[2]/span[1]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForVisible(\"//select[@id='_8_monthlyPos']\");\n\t\tselenium.select(\"//select[@id='_8_monthlyPos']\",\n\t\t\tRuntimeVariables.replace(\"label=First\"));\n\t\tselenium.select(\"//select[@id='_8_monthlyDay1']\",\n\t\t\tRuntimeVariables.replace(\"label=Thursday\"));\n\t\tselenium.type(\"//input[@id='_8_monthlyInterval1']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2011\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//td[3]/div/table/tbody/tr[3]/td[5]/a\");\n\t\tselenium.clickAt(\"//td[3]/div/table/tbody/tr[3]/td[5]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isVisible(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\"//td[5]/div/table/tbody/tr[3]/td[5]/a\");\n\t\tselenium.clickAt(\"//td[5]/div/table/tbody/tr[3]/td[5]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isVisible(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\"//td[5]/div/table/tbody/tr[4]/td[5]/a/span\");\n\t\tselenium.clickAt(\"//td[5]/div/table/tbody/tr[4]/td[5]/a/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementNotPresent(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Repeating Test Event\"));\n\t}","id":63014,"modified_method":"public void testAddMonthlyDateRepeatingEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div/div/span[4]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Repeat Monthly\"));\n\t\tselenium.waitForVisible(\"//span[2]/span[1]/span/span/input\");\n\t\tselenium.clickAt(\"//span[2]/span[1]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForVisible(\"//select[@id='_8_monthlyPos']\");\n\t\tselenium.select(\"//select[@id='_8_monthlyPos']\",\n\t\t\tRuntimeVariables.replace(\"label=First\"));\n\t\tselenium.select(\"//select[@id='_8_monthlyDay1']\",\n\t\t\tRuntimeVariables.replace(\"label=Thursday\"));\n\t\tselenium.type(\"//input[@id='_8_monthlyInterval1']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2011\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//td[3]/div/table/tbody/tr[3]/td[5]/a\");\n\t\tselenium.clickAt(\"//td[3]/div/table/tbody/tr[3]/td[5]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='event-title']/a\",\n\t\t\t\"Repeating Test Event\");\n\t\tassertEquals(RuntimeVariables.replace(\"Repeating Test Event\"),\n\t\t\tselenium.getText(\"//div[@class='event-title']/a\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\"//td[5]/div/table/tbody/tr[3]/td[5]/a\");\n\t\tselenium.clickAt(\"//td[5]/div/table/tbody/tr[3]/td[5]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='event-title']/a\",\n\t\t\t\"Repeating Test Event\");\n\t\tassertEquals(RuntimeVariables.replace(\"Repeating Test Event\"),\n\t\t\tselenium.getText(\"//div[@class='event-title']/a\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\"//td[5]/div/table/tbody/tr[4]/td[5]/a/span\");\n\t\tselenium.clickAt(\"//td[5]/div/table/tbody/tr[4]/td[5]/a/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForTextNotPresent(\"//div[@class='event-title']/a\");\n\t\tassertFalse(selenium.isTextPresent(\"//div[@class='event-title']/a\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMonthlyDayRepeatingEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div/div/span[4]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Repeat Monthly\"));\n\t\tselenium.waitForVisible(\"//input[@name='_8_monthlyType']\");\n\t\tselenium.clickAt(\"//input[@name='_8_monthlyType']\",\n\t\t\tRuntimeVariables.replace(\"Day\"));\n\t\tselenium.type(\"//input[@id='_8_monthlyDay0']\",\n\t\t\tRuntimeVariables.replace(\"15\"));\n\t\tselenium.type(\"//input[@id='_8_monthlyInterval0']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2011\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(2, 15, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(2, 15, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isVisible(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 15, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 15, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isVisible(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(2, 16, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(2, 16, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementNotPresent(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Repeating Test Event\"));\n\t}","id":63015,"modified_method":"public void testAddMonthlyDayRepeatingEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div/div/span[4]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Repeat Monthly\"));\n\t\tselenium.waitForVisible(\"//input[@name='_8_monthlyType']\");\n\t\tselenium.clickAt(\"//input[@name='_8_monthlyType']\",\n\t\t\tRuntimeVariables.replace(\"Day\"));\n\t\tselenium.type(\"//input[@id='_8_monthlyDay0']\",\n\t\t\tRuntimeVariables.replace(\"15\"));\n\t\tselenium.type(\"//input[@id='_8_monthlyInterval0']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2011\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(2, 15, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(2, 15, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='event-title']/a\",\n\t\t\t\"Repeating Test Event\");\n\t\tassertEquals(RuntimeVariables.replace(\"Repeating Test Event\"),\n\t\t\tselenium.getText(\"//div[@class='event-title']/a\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 15, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 15, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='event-title']/a\",\n\t\t\t\"Repeating Test Event\");\n\t\tassertEquals(RuntimeVariables.replace(\"Repeating Test Event\"),\n\t\t\tselenium.getText(\"//div[@class='event-title']/a\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(2, 16, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(2, 16, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForTextNotPresent(\"//div[@class='event-title']/a\");\n\t\tassertFalse(selenium.isTextPresent(\"//div[@class='event-title']/a\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullTitleEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":63016,"modified_method":"public void testAddNullTitleEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddRepeatingEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Repeating Test Event\"));\n\t\tselenium.clickAt(\"//input[@id='_8_allDayCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"All Day Event\"));\n\t\tselenium.clickAt(\"//input[@id='_8_timeZoneSensitiveCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.select(\"//select[@id='_8_startDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_startDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_startDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2010\"));\n\t\tselenium.select(\"//select[@id='_8_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Event\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isVisible(\"link=Repeating Test Event\"));\n\t}","id":63017,"modified_method":"public void testAddRepeatingEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Repeating Test Event\"));\n\t\tselenium.clickAt(\"//input[@id='_8_allDayCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"All Day Event\"));\n\t\tselenium.clickAt(\"//input[@id='_8_timeZoneSensitiveCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.select(\"//select[@id='_8_startDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_startDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_startDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2010\"));\n\t\tselenium.select(\"//select[@id='_8_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Event\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//tr[contains(.,'Repeating Test Event')]/td[3]/a\",\n\t\t\t\"Repeating Test Event\");\n\t\tassertEquals(RuntimeVariables.replace(\"Repeating Test Event\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Repeating Test Event')]/td[3]/a\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddTemporaryEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Temporary Event\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"This is a temporary event!\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"This is a temporary event!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@id='_8_timeZoneSensitiveCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Time Zone Sensitive Checkbox\"));\n\t\tselenium.select(\"//select[@id='_8_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"Link=Temporary Event\"));\n\t}","id":63018,"modified_method":"public void testAddTemporaryEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Temporary Event\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"This is a temporary event!\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"This is a temporary event!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@id='_8_timeZoneSensitiveCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Time Zone Sensitive Checkbox\"));\n\t\tselenium.select(\"//select[@id='_8_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Temporary Event\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Temporary Event')]/td[2]/a\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddVacationEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Off to Yosemite!\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Looking forward to camping!\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Looking forward to camping!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@id='_8_timeZoneSensitiveCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Time Zone Sensitive Checkbox\"));\n\t\tselenium.select(\"//select[@id='_8_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Vacation\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"Link=Off to Yosemite!\"));\n\t}","id":63019,"modified_method":"public void testAddVacationEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Off to Yosemite!\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Looking forward to camping!\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Looking forward to camping!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@id='_8_timeZoneSensitiveCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Time Zone Sensitive Checkbox\"));\n\t\tselenium.select(\"//select[@id='_8_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Vacation\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Off to Yosemite!\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Off to Yosemite!')]/td[2]/a\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWeekDayRepeatingEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div/div/span[2]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Repeat Daily\"));\n\t\tselenium.waitForVisible(\"//div[2]/span[3]/span/span/input\");\n\t\tselenium.clickAt(\"//div[2]/span[3]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Every weekday\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2011\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 1, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 5, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isVisible(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 5, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 5, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isVisible(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 6, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 6, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementNotPresent(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Repeating Test Event\"));\n\t}","id":63020,"modified_method":"public void testAddWeekDayRepeatingEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div/div/span[2]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Repeat Daily\"));\n\t\tselenium.waitForVisible(\"//div[2]/span[3]/span/span/input\");\n\t\tselenium.clickAt(\"//div[2]/span[3]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Every weekday\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2011\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 1, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 5, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='event-title']/a\",\n\t\t\t\"Repeating Test Event\");\n\t\tassertEquals(RuntimeVariables.replace(\"Repeating Test Event\"),\n\t\t\tselenium.getText(\"//div[@class='event-title']/a\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 5, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 5, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='event-title']/a\",\n\t\t\t\"Repeating Test Event\");\n\t\tassertEquals(RuntimeVariables.replace(\"Repeating Test Event\"),\n\t\t\tselenium.getText(\"//div[@class='event-title']/a\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 6, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 6, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForTextNotPresent(\"//div[@class='event-title']/a\");\n\t\tassertFalse(selenium.isTextPresent(\"//div[@class='event-title']/a\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWeeklyRepeatingEvent() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Calendar\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Events\",\n\t\t\t\t\tRuntimeVariables.replace(\"Events\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//div/div/span[3]/span/span/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Repeat Weekly\"));\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_8_weeklyInterval']\");\n\t\t\t\tselenium.type(\"//input[@id='_8_weeklyInterval']\",\n\t\t\t\t\tRuntimeVariables.replace(\"1\"));\n\n\t\t\t\tboolean sundayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos1Checkbox\");\n\n\t\t\t\tif (!sundayChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos1Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sunday Checkbox\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean mondayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos2Checkbox\");\n\n\t\t\t\tif (!mondayChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos2Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Monday Checkbox\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean tuesdayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos3Checkbox\");\n\n\t\t\t\tif (!tuesdayChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos3Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Tuesday Checkbox\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean wednesdayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos4Checkbox\");\n\n\t\t\t\tif (!wednesdayChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos4Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wednesday Checkbox\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean thursdayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos5Checkbox\");\n\n\t\t\t\tif (thursdayChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos5Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Thursday Checkbox\"));\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean fridayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos6Checkbox\");\n\n\t\t\t\tif (!fridayChecked) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos6Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Friday Checkbox\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean saturdayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos7Checkbox\");\n\n\t\t\t\tif (!saturdayChecked) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos7Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Saturday Checkbox\"));\n\n\t\t\tcase 8:\n\t\t\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\t\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\t\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=2011\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\t\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 7, 2010);')]\");\n\t\t\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 7, 2010);')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"link=Repeating Test Event\");\n\t\t\t\tassertTrue(selenium.isVisible(\"link=Repeating Test Event\"));\n\t\t\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\t\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 14, 2010);')]\");\n\t\t\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 14, 2010);')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"link=Repeating Test Event\");\n\t\t\t\tassertTrue(selenium.isVisible(\"link=Repeating Test Event\"));\n\t\t\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\t\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 15, 2010);')]\");\n\t\t\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 15, 2010);')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForElementNotPresent(\"link=Repeating Test Event\");\n\t\t\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\t\t\"link=Repeating Test Event\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":63021,"modified_method":"public void testAddWeeklyRepeatingEvent() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Calendar\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Events\",\n\t\t\t\t\tRuntimeVariables.replace(\"Events\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//div/div/span[3]/span/span/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Repeat Weekly\"));\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_8_weeklyInterval']\");\n\t\t\t\tselenium.type(\"//input[@id='_8_weeklyInterval']\",\n\t\t\t\t\tRuntimeVariables.replace(\"1\"));\n\n\t\t\t\tboolean sundayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos1Checkbox\");\n\n\t\t\t\tif (!sundayChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos1Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sunday Checkbox\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean mondayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos2Checkbox\");\n\n\t\t\t\tif (!mondayChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos2Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Monday Checkbox\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean tuesdayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos3Checkbox\");\n\n\t\t\t\tif (!tuesdayChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos3Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Tuesday Checkbox\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean wednesdayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos4Checkbox\");\n\n\t\t\t\tif (!wednesdayChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos4Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wednesday Checkbox\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean thursdayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos5Checkbox\");\n\n\t\t\t\tif (thursdayChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos5Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Thursday Checkbox\"));\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean fridayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos6Checkbox\");\n\n\t\t\t\tif (!fridayChecked) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos6Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Friday Checkbox\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean saturdayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos7Checkbox\");\n\n\t\t\t\tif (!saturdayChecked) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos7Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Saturday Checkbox\"));\n\n\t\t\tcase 8:\n\t\t\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\t\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\t\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=2011\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\t\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 7, 2010);')]\");\n\t\t\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 7, 2010);')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForText(\"//div[@class='event-title']/a\",\n\t\t\t\t\t\"Repeating Test Event\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Repeating Test Event\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='event-title']/a\"));\n\t\t\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\t\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 14, 2010);')]\");\n\t\t\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 14, 2010);')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForText(\"//div[@class='event-title']/a\",\n\t\t\t\t\t\"Repeating Test Event\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Repeating Test Event\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='event-title']/a\"));\n\t\t\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\t\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 15, 2010);')]\");\n\t\t\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 15, 2010);')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForTextNotPresent(\"//div[@class='event-title']/a\");\n\t\t\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\t\t\"//div[@class='event-title']/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddYearlyDateRepeatingEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@name='_8_recurrenceType' and @value='6']\");\n\t\tselenium.clickAt(\"//input[@name='_8_recurrenceType' and @value='6']\",\n\t\t\tRuntimeVariables.replace(\"Repeat Yearly\"));\n\t\tselenium.waitForVisible(\"//input[@name='_8_yearlyType']\");\n\t\tselenium.clickAt(\"//input[@name='_8_yearlyType']\",\n\t\t\tRuntimeVariables.replace(\"Every\"));\n\t\tselenium.select(\"//select[@id='_8_yearlyMonth0']\",\n\t\t\tRuntimeVariables.replace(\"label=May\"));\n\t\tselenium.type(\"//input[@id='_8_yearlyDay0']\",\n\t\t\tRuntimeVariables.replace(\"31\"));\n\t\tselenium.type(\"//input[@id='_8_yearlyInterval0']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2013\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Repeating Test Event\");\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2011\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2011\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2011);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2011);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isVisible(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2012\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2012\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2012);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2012);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isVisible(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2013\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2013\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2013);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2013);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementNotPresent(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Repeating Test Event\"));\n\t}","id":63022,"modified_method":"public void testAddYearlyDateRepeatingEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@name='_8_recurrenceType' and @value='6']\");\n\t\tselenium.clickAt(\"//input[@name='_8_recurrenceType' and @value='6']\",\n\t\t\tRuntimeVariables.replace(\"Repeat Yearly\"));\n\t\tselenium.waitForVisible(\"//input[@name='_8_yearlyType']\");\n\t\tselenium.clickAt(\"//input[@name='_8_yearlyType']\",\n\t\t\tRuntimeVariables.replace(\"Every\"));\n\t\tselenium.select(\"//select[@id='_8_yearlyMonth0']\",\n\t\t\tRuntimeVariables.replace(\"label=May\"));\n\t\tselenium.type(\"//input[@id='_8_yearlyDay0']\",\n\t\t\tRuntimeVariables.replace(\"31\"));\n\t\tselenium.type(\"//input[@id='_8_yearlyInterval0']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2013\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2010\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2010);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Repeating Test Event\");\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2011\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2011\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2011);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2011);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='event-title']/a\",\n\t\t\t\"Repeating Test Event\");\n\t\tassertEquals(RuntimeVariables.replace(\"Repeating Test Event\"),\n\t\t\tselenium.getText(\"//div[@class='event-title']/a\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2012\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2012\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2012);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2012);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='event-title']/a\",\n\t\t\t\"Repeating Test Event\");\n\t\tassertEquals(RuntimeVariables.replace(\"Repeating Test Event\"),\n\t\t\tselenium.getText(\"//div[@class='event-title']/a\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2013\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2013\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2013);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2013);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForTextNotPresent(\"//div[@class='event-title']/a\");\n\t\tassertFalse(selenium.isTextPresent(\"//div[@class='event-title']/a\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddYearlyDayRepeatingEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@name='_8_recurrenceType' and @value='6']\");\n\t\tselenium.clickAt(\"//input[@name='_8_recurrenceType' and @value='6']\",\n\t\t\tRuntimeVariables.replace(\"Repeat Yearly\"));\n\t\tselenium.waitForVisible(\"//div[5]/span[2]/span[1]/span/span/input\");\n\t\tselenium.clickAt(\"//div[5]/span[2]/span[1]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.select(\"//select[@id='_8_yearlyPos']\",\n\t\t\tRuntimeVariables.replace(\"label=Second\"));\n\t\tselenium.select(\"//select[@id='_8_yearlyDay1']\",\n\t\t\tRuntimeVariables.replace(\"label=Monday\"));\n\t\tselenium.select(\"//select[@id='_8_yearlyMonth1']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.type(\"//input[@id='_8_yearlyInterval1']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2013\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2011\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2011\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 14, 2011);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 14, 2011);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isVisible(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2012\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2012\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 13, 2012);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 13, 2012);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isVisible(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2012\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2012\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 6, 2012);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 6, 2012);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementNotPresent(\"link=Repeating Test Event\");\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Repeating Test Event\"));\n\t}","id":63023,"modified_method":"public void testAddYearlyDayRepeatingEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@name='_8_recurrenceType' and @value='6']\");\n\t\tselenium.clickAt(\"//input[@name='_8_recurrenceType' and @value='6']\",\n\t\t\tRuntimeVariables.replace(\"Repeat Yearly\"));\n\t\tselenium.waitForVisible(\"//div[5]/span[2]/span[1]/span/span/input\");\n\t\tselenium.clickAt(\"//div[5]/span[2]/span[1]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.select(\"//select[@id='_8_yearlyPos']\",\n\t\t\tRuntimeVariables.replace(\"label=Second\"));\n\t\tselenium.select(\"//select[@id='_8_yearlyDay1']\",\n\t\t\tRuntimeVariables.replace(\"label=Monday\"));\n\t\tselenium.select(\"//select[@id='_8_yearlyMonth1']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.type(\"//input[@id='_8_yearlyInterval1']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2013\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2011\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2011\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 14, 2011);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 14, 2011);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='event-title']/a\",\n\t\t\t\"Repeating Test Event\");\n\t\tassertEquals(RuntimeVariables.replace(\"Repeating Test Event\"),\n\t\t\tselenium.getText(\"//div[@class='event-title']/a\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2012\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2012\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 13, 2012);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 13, 2012);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='event-title']/a\",\n\t\t\t\"Repeating Test Event\");\n\t\tassertEquals(RuntimeVariables.replace(\"Repeating Test Event\"),\n\t\t\tselenium.getText(\"//div[@class='event-title']/a\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForPartialText(\"//select\", \"2012\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"2012\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 6, 2012);')]\");\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 6, 2012);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForTextNotPresent(\"//div[@class='event-title']/a\");\n\t\tassertFalse(selenium.isTextPresent(\"//div[@class='event-title']/a\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Events\");\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Event\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t}","id":63024,"modified_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Events\");\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Caedmon's Call Concert!\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edited Test Event\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Edited Test Event')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Off to Yosemite!\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Off to Yosemite!')]/td[3]/a\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteTemporaryEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Temporary Event\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[4]\"));\n\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[4]\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Temporary Event\"));\n\t}","id":63025,"modified_method":"public void testDeleteTemporaryEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Temporary Event\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Temporary Event')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[4]\"));\n\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[4]\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"//tr[@class='results-row last portlet-section-alternate-hover']/td[2]/a\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Event\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[3]\"));\n\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[3]\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Event\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test event! This test event has been edited.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"This is a test event! This test event has been edited.\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.select(\"//select[@name='_8_startDateHour']\",\n\t\t\tRuntimeVariables.replace(\"label=5\"));\n\t\tselenium.select(\"//select[@name='_8_startDateAmPm']\",\n\t\t\tRuntimeVariables.replace(\"label=AM\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Event\"));\n\t}","id":63026,"modified_method":"public void testEditEvent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Event\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Test Event')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[3]\"));\n\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[3]\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Event\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test event! This test event has been edited.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_8_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"This is a test event! This test event has been edited.\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.select(\"//select[@name='_8_startDateHour']\",\n\t\t\tRuntimeVariables.replace(\"label=5\"));\n\t\tselenium.select(\"//select[@name='_8_startDateAmPm']\",\n\t\t\tRuntimeVariables.replace(\"label=AM\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edited Test Event\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Edited Test Event')]/td[2]/a\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGetAppointmentEvents() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Day\", RuntimeVariables.replace(\"Day\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Event\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Off to Yosemite!\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Week\", RuntimeVariables.replace(\"Week\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Event\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Off to Yosemite!\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Month\", RuntimeVariables.replace(\"Month\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Event\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Off to Yosemite!\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Event\"));\n\t}","id":63027,"modified_method":"public void testGetAppointmentEvents() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Day\", RuntimeVariables.replace(\"Day\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Event\"),\n\t\t\tselenium.getText(\"//div[@class='event-title']/a\"));\n\t\tassertFalse(selenium.isTextPresent(\"//div[@class='event-title']/a\"));\n\t\tassertFalse(selenium.isTextPresent(\"//div[@class='event-title']/a\"));\n\t\tselenium.clickAt(\"link=Week\", RuntimeVariables.replace(\"Week\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Event\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tselenium.clickAt(\"link=Month\", RuntimeVariables.replace(\"Month\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Event\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Event\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Test Event')]/td[3]/a\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGetConcertEvents() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Day\", RuntimeVariables.replace(\"Day\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Concert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Off to Yosemite!\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Test Event\"));\n\t\tselenium.clickAt(\"link=Week\", RuntimeVariables.replace(\"Week\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Concert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Off to Yosemite!\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Test Event\"));\n\t\tselenium.clickAt(\"link=Month\", RuntimeVariables.replace(\"Month\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Concert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Off to Yosemite!\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Test Event\"));\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t}","id":63028,"modified_method":"public void testGetConcertEvents() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Day\", RuntimeVariables.replace(\"Day\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Concert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Caedmon's Call Concert!\"),\n\t\t\tselenium.getText(\"//div[@class='event-title']/a\"));\n\t\tassertFalse(selenium.isTextPresent(\"//div[@class='event-title']/a\"));\n\t\tassertFalse(selenium.isTextPresent(\"//div[@class='event-title']/a\"));\n\t\tselenium.clickAt(\"link=Week\", RuntimeVariables.replace(\"Week\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Concert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Caedmon's Call Concert!\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tselenium.clickAt(\"link=Month\", RuntimeVariables.replace(\"Month\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Concert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Caedmon's Call Concert!\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Caedmon's Call Concert!\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGetVacationEvents() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Day\", RuntimeVariables.replace(\"Day\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Vacation\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Test Event\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Week\", RuntimeVariables.replace(\"Week\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Vacation\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Test Event\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Month\", RuntimeVariables.replace(\"Month\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Vacation\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Test Event\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t}","id":63029,"modified_method":"public void testGetVacationEvents() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Day\", RuntimeVariables.replace(\"Day\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Vacation\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Off to Yosemite!\"),\n\t\t\tselenium.getText(\"//div[@class='event-title']/a\"));\n\t\tassertFalse(selenium.isTextPresent(\"//div[@class='event-title']/a\"));\n\t\tassertFalse(selenium.isTextPresent(\"//div[@class='event-title']/a\"));\n\t\tselenium.clickAt(\"link=Week\", RuntimeVariables.replace(\"Week\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Vacation\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Off to Yosemite!\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tselenium.clickAt(\"link=Month\", RuntimeVariables.replace(\"Month\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Vacation\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Off to Yosemite!\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td/a\"));\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//tr[contains(.,'Off to Yosemite!')]/td[3]/a\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLAR() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//menu/span/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//menu/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Export / Import\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_importFileName']\");\n\t\tselenium.type(\"//input[@id='_86_importFileName']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\calendar\\\\dependencies\\\\Selenium-Calendar.portlet.lar\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Delete portlet data before importing Checkbox\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":63030,"modified_method":"public void testImportLAR() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Calendar\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//menu/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//menu/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Export / Import\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Import\",\n\t\t\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_86_importFileName']\");\n\t\t\t\tselenium.uploadFile(\"//input[@id='_86_importFileName']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\calendar\\\\dependencies\\\\Selenium-Calendar.portlet.lar\"));\n\n\t\t\t\tboolean deletePortletCheckbox = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\");\n\n\t\t\t\tif (deletePortletCheckbox) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete Portlet Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSetTimezone() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Account\",\n\t\t\tRuntimeVariables.replace(\"My Account\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_2_displaySettingsLink']\",\n\t\t\t\t\"Display Settings\"));\n\t\tselenium.clickAt(\"//a[@id='_2_displaySettingsLink']\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\"//select[@name='_2_timeZoneId']\");\n\t\tselenium.select(\"//select[@name='_2_timeZoneId']\",\n\t\t\tRuntimeVariables.replace(\"label=(UTC -08:00) Pacific Standard Time\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"(UTC -08:00) Pacific Standard Time\",\n\t\t\tselenium.getSelectedLabel(\"//select[@name='_2_timeZoneId']\"));\n\t}","id":63031,"modified_method":"public void testSetTimezone() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Account\",\n\t\t\tRuntimeVariables.replace(\"My Account\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_2_displaySettingsLink']\",\n\t\t\t\t\"Display Settings\"));\n\t\tselenium.clickAt(\"//a[@id='_2_displaySettingsLink']\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\"//select[@name='_2_timeZoneId']\");\n\t\tselenium.select(\"//select[@name='_2_timeZoneId']\",\n\t\t\tRuntimeVariables.replace(\"label=(UTC -08:00) Pacific Standard Time\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"(UTC -08:00) Pacific Standard Time\",\n\t\t\tselenium.getSelectedLabel(\"//select[@name='_2_timeZoneId']\"));\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownEventCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Calendar\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Events\",\n\t\t\t\t\tRuntimeVariables.replace(\"Events\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean event1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean event2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean event3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean event4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean event5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":63032,"modified_method":"public void testTearDownEventCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\t\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Calendar\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Events\",\n\t\t\t\t\tRuntimeVariables.replace(\"Events\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean event1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean event2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean event3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean event4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean event5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"a1c713b2d8569f4a08ee8bbb367f3ea199eaa42b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddChildPageBreadcrumb() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Manage\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_manageContent']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_manageContent']/a/span\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//li[contains(@class,'manage-page')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\t\t\tselenium.getText(\"//li[contains(@class,'manage-page')]/a\"));\n\t\t\t\tselenium.clickAt(\"//li[contains(@class,'manage-page')]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForVisible(\"//iframe[@id='manageContentDialog']\");\n\t\t\t\tselenium.selectFrame(\"//iframe[@id='manageContentDialog']\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\t\t\tselenium.waitForText(\"//a[@class='layout-tree']\", \"Public Pages\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Public Pages\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='layout-tree']\"));\n\n\t\t\t\tboolean welcome1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcome1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.waitForVisible(\"//li/ul/li[1]/div/div[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Welcome\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li[1]/div/div[3]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb Test Page\"),\n\t\t\t\t\tselenium.getText(\"//ul/li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.clickAt(\"//ul/li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Breadcrumb Test Page\"));\n\t\t\t\tselenium.waitForValue(\"//div[1]/fieldset/div/span[1]/span/span/span/input\",\n\t\t\t\t\t\"Breadcrumb Test Page\");\n\t\t\t\tassertEquals(\"Breadcrumb Test Page\",\n\t\t\t\t\tselenium.getValue(\n\t\t\t\t\t\t\"//div[1]/fieldset/div/span[1]/span/span/span/input\"));\n\t\t\t\tselenium.waitForVisible(\"//div/span/button[1]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\t\t\tselenium.getText(\"//div/span/button[1]\"));\n\t\t\t\tselenium.clickAt(\"//div/span/button[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_88_addLayoutName_en_US']\");\n\t\t\t\tselenium.type(\"//input[@id='_88_addLayoutName_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully. The page will be refreshed when you close this dialog. Alternatively you can hide this dialog.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\t\tboolean welcome2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcome2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.waitForText(\"//li/ul/li[1]/div/div[3]/a\", \"Welcome\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Welcome\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li[1]/div/div[3]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb Test Page\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li[2]/div/div[3]/a\"));\n\n\t\t\t\tboolean childPagePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (childPagePresent) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li/ul/li[2]/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.waitForText(\"//li[2]/ul/li[1]/div/div[3]/a\",\n\t\t\t\t\t\"Child Test Page\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\t\t\tselenium.getText(\"//li[2]/ul/li[1]/div/div[3]/a\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.mouseOver(\"link=Breadcrumb Test Page\");\n\t\t\t\tselenium.waitForVisible(\"link=Child Test Page\");\n\t\t\t\tassertTrue(selenium.isVisible(\"link=Child Test Page\"));\n\t\t\t\tselenium.clickAt(\"link=Child Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\t\t\tselenium.getText(\"//nav/ul/li[3]/span/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":63033,"modified_method":"public void testAddChildPageBreadcrumb() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Manage\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_manageContent']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_manageContent']/a/span\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//li[contains(@class,'manage-page')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\t\t\tselenium.getText(\"//li[contains(@class,'manage-page')]/a\"));\n\t\t\t\tselenium.clickAt(\"//li[contains(@class,'manage-page')]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForVisible(\"//iframe[@id='manageContentDialog']\");\n\t\t\t\tselenium.selectFrame(\"//iframe[@id='manageContentDialog']\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\t\t\tselenium.waitForText(\"//a[@class='layout-tree']\", \"Public Pages\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Public Pages\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='layout-tree']\"));\n\n\t\t\t\tboolean welcome1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcome1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.waitForVisible(\"//li/ul/li[1]/div/div[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Welcome\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li[1]/div/div[3]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb Test Page\"),\n\t\t\t\t\tselenium.getText(\"//ul/li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.clickAt(\"//ul/li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Breadcrumb Test Page\"));\n\t\t\t\tselenium.waitForValue(\"//div[1]/fieldset/div/span[1]/span/span/span/input\",\n\t\t\t\t\t\"Breadcrumb Test Page\");\n\t\t\t\tassertEquals(\"Breadcrumb Test Page\",\n\t\t\t\t\tselenium.getValue(\n\t\t\t\t\t\t\"//div[1]/fieldset/div/span[1]/span/span/span/input\"));\n\t\t\t\tselenium.waitForVisible(\"//div/span/button[1]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\t\t\tselenium.getText(\"//div/span/button[1]\"));\n\t\t\t\tselenium.clickAt(\"//div/span/button[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_88_addLayoutName_en_US']\");\n\t\t\t\tselenium.type(\"//input[@id='_88_addLayoutName_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully. The page will be refreshed when you close this dialog. Alternatively you can hide this dialog.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\t\tboolean welcome2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcome2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.waitForText(\"//li/ul/li[1]/div/div[3]/a\", \"Welcome\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Welcome\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li[1]/div/div[3]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb Test Page\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li[2]/div/div[3]/a\"));\n\n\t\t\t\tboolean childPagePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (childPagePresent) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li/ul/li[2]/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.waitForText(\"//li[2]/ul/li[1]/div/div[3]/a\",\n\t\t\t\t\t\"Child Test Page\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\t\t\tselenium.getText(\"//li[2]/ul/li[1]/div/div[3]/a\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.mouseOver(\"link=Breadcrumb Test Page\");\n\t\t\t\tselenium.waitForVisible(\"link=Child Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Child Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//nav[@id='breadcrumbs']/ul/li[@class='last']/span/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"536f8ed1d1c3bdab0887c2dc22e21ba3872ac9d1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletBreadcrumb2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Breadcrumb Test Page\",\n\t\t\tRuntimeVariables.replace(\"Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"b\"));\n\t\tselenium.waitForVisible(\"//li[@title='Breadcrumb']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Breadcrumb']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t}","id":63034,"modified_method":"public void testAddPortletBreadcrumb2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Breadcrumb Test Page\",\n\t\t\tRuntimeVariables.replace(\"Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"b\"));\n\t\tselenium.waitForVisible(\"//li[@title='Breadcrumb']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Breadcrumb']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//div[1]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[1]/section\"));\n\t\tselenium.waitForVisible(\"//div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t}","commit_id":"536f8ed1d1c3bdab0887c2dc22e21ba3872ac9d1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletBreadcrumb3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Breadcrumb Test Page\",\n\t\t\tRuntimeVariables.replace(\"Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"b\"));\n\t\tselenium.waitForVisible(\"//li[@title='Breadcrumb']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Breadcrumb']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t\tselenium.waitForVisible(\"//div[3]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[3]/div/section\"));\n\t}","id":63035,"modified_method":"public void testAddPortletBreadcrumb3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Breadcrumb Test Page\",\n\t\t\tRuntimeVariables.replace(\"Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"b\"));\n\t\tselenium.waitForVisible(\"//li[@title='Breadcrumb']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Breadcrumb']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//div[1]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[1]/section\"));\n\t\tselenium.waitForVisible(\"//div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t\tselenium.waitForVisible(\"//div[3]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[3]/section\"));\n\t}","commit_id":"536f8ed1d1c3bdab0887c2dc22e21ba3872ac9d1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletBreadcrumbChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.mouseOver(\"link=Breadcrumb Test Page\");\n\t\tselenium.waitForVisible(\"link=Child Test Page\");\n\t\tselenium.clickAt(\"link=Child Test Page\",\n\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"b\"));\n\t\tselenium.waitForVisible(\"//li[@title='Breadcrumb']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Breadcrumb']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Liferay\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div/ul[@class='breadcrumbs breadcrumbs-horizontal lfr-component']/li[1]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div/ul[@class='breadcrumbs breadcrumbs-horizontal lfr-component']/li[2]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div/ul[@class='breadcrumbs breadcrumbs-horizontal lfr-component']/li[3]/span/a\"));\n\t}","id":63036,"modified_method":"public void testAddPortletBreadcrumbChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.mouseOver(\"link=Breadcrumb Test Page\");\n\t\tselenium.waitForVisible(\"link=Child Test Page\");\n\t\tselenium.clickAt(\"link=Child Test Page\",\n\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"b\"));\n\t\tselenium.waitForVisible(\"//li[@title='Breadcrumb']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Breadcrumb']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.mouseOver(\"link=Breadcrumb Test Page\");\n\t\tselenium.waitForVisible(\"link=Child Test Page\");\n\t\tselenium.clickAt(\"link=Child Test Page\",\n\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Liferay\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/ul/li[@class='first']/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb Test Page\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-body']/ul/li[2]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/ul/li[@class='last']/span/a\"));\n\t}","commit_id":"536f8ed1d1c3bdab0887c2dc22e21ba3872ac9d1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletBreadcrumbChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.mouseOver(\"link=Breadcrumb Test Page\");\n\t\tselenium.waitForVisible(\"link=Child Test Page\");\n\t\tselenium.clickAt(\"link=Child Test Page\",\n\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"b\"));\n\t\tselenium.waitForVisible(\"//li[@title='Breadcrumb']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Breadcrumb']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Liferay\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div/ul[@class='breadcrumbs breadcrumbs-horizontal lfr-component']/li[1]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div/ul[@class='breadcrumbs breadcrumbs-horizontal lfr-component']/li[2]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div/ul[@class='breadcrumbs breadcrumbs-horizontal lfr-component']/li[3]/span/a\"));\n\t}","id":63037,"modified_method":"public void testAddPortletBreadcrumbChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.mouseOver(\"link=Breadcrumb Test Page\");\n\t\tselenium.waitForVisible(\"link=Child Test Page\");\n\t\tselenium.clickAt(\"link=Child Test Page\",\n\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"b\"));\n\t\tselenium.waitForVisible(\"//li[@title='Breadcrumb']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Breadcrumb']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.mouseOver(\"link=Breadcrumb Test Page\");\n\t\tselenium.waitForVisible(\"link=Child Test Page\");\n\t\tselenium.clickAt(\"link=Child Test Page\",\n\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Liferay\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/ul/li[@class='first']/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb Test Page\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-body']/ul/li[2]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/ul/li[@class='last']/span/a\"));\n\t}","commit_id":"536f8ed1d1c3bdab0887c2dc22e21ba3872ac9d1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertConfigurePortletDisplayStyle1()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Liferay\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div/ul[@class='breadcrumbs breadcrumbs-horizontal lfr-component']/li[1]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div/ul[@class='breadcrumbs breadcrumbs-horizontal lfr-component']/li[2]/span/a\"));\n\t}","id":63038,"modified_method":"public void testAssertConfigurePortletDisplayStyle1()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Liferay\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/ul/li[@class='first']/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/ul/li[@class='last']/span/a\"));\n\t}","commit_id":"536f8ed1d1c3bdab0887c2dc22e21ba3872ac9d1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertConfigurePortletDisplayStyle2()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Liferay\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div/ul[@class='breadcrumbs breadcrumbs-vertical lfr-component']/li[1]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div/ul[@class='breadcrumbs breadcrumbs-vertical lfr-component']/li[2]/span/a\"));\n\t}","id":63039,"modified_method":"public void testAssertConfigurePortletDisplayStyle2()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Liferay\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/ul/li[@class='first']/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/ul/li[@class='last']/span/a\"));\n\t}","commit_id":"536f8ed1d1c3bdab0887c2dc22e21ba3872ac9d1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletDisplayStyle1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Breadcrumb Test Page\");\n\t\tselenium.clickAt(\"link=Breadcrumb Test Page\",\n\t\t\tRuntimeVariables.replace(\"Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_displayStyle']\");\n\t\tselenium.select(\"//select[@id='_86_displayStyle']\",\n\t\t\tRuntimeVariables.replace(\"Horizontal\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Horizontal\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_displayStyle']\"));\n\t}","id":63040,"modified_method":"public void testConfigurePortletDisplayStyle1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Breadcrumb Test Page\",\n\t\t\tRuntimeVariables.replace(\"Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_displayStyle']\");\n\t\tselenium.select(\"//select[@id='_86_displayStyle']\",\n\t\t\tRuntimeVariables.replace(\"Horizontal\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Horizontal\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_displayStyle']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"536f8ed1d1c3bdab0887c2dc22e21ba3872ac9d1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletDisplayStyle2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Breadcrumb Test Page\");\n\t\tselenium.clickAt(\"link=Breadcrumb Test Page\",\n\t\t\tRuntimeVariables.replace(\"Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_displayStyle']\");\n\t\tselenium.select(\"//select[@id='_86_displayStyle']\",\n\t\t\tRuntimeVariables.replace(\"Vertical\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Vertical\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_displayStyle']\"));\n\t}","id":63041,"modified_method":"public void testConfigurePortletDisplayStyle2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Breadcrumb Test Page\",\n\t\t\tRuntimeVariables.replace(\"Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_displayStyle']\");\n\t\tselenium.select(\"//select[@id='_86_displayStyle']\",\n\t\t\tRuntimeVariables.replace(\"Vertical\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Vertical\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_displayStyle']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"536f8ed1d1c3bdab0887c2dc22e21ba3872ac9d1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewPortletBreadcrumb() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Breadcrumb Test Page\",\n\t\t\tRuntimeVariables.replace(\"Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Liferay\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div/ul[@class='breadcrumbs breadcrumbs-horizontal lfr-component']/li[1]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div/ul[@class='breadcrumbs breadcrumbs-horizontal lfr-component']/li[2]/span/a\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//div[@class='portlet-body']/ul/li[3]\"));\n\t\tselenium.mouseOver(\"link=Breadcrumb Test Page\");\n\t\tselenium.waitForVisible(\"link=Child Test Page\");\n\t\tselenium.clickAt(\"link=Child Test Page\",\n\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Liferay\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div/ul[@class='breadcrumbs breadcrumbs-horizontal lfr-component']/li[1]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div/ul[@class='breadcrumbs breadcrumbs-horizontal lfr-component']/li[2]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div/ul[@class='breadcrumbs breadcrumbs-horizontal lfr-component']/li[3]/span/a\"));\n\t}","id":63042,"modified_method":"public void testViewPortletBreadcrumb() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Breadcrumb Test Page\",\n\t\t\tRuntimeVariables.replace(\"Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Liferay\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/ul/li[@class='first']/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/ul/li[@class='last']/span/a\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//div[@class='portlet-body']/ul/li[3]\"));\n\t\tselenium.mouseOver(\"link=Breadcrumb Test Page\");\n\t\tselenium.waitForVisible(\"link=Child Test Page\");\n\t\tselenium.clickAt(\"link=Child Test Page\",\n\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Liferay\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/ul/li[@class='first']/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb Test Page\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-body']/ul/li[2]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/ul/li[@class='last']/span/a\"));\n\t}","commit_id":"536f8ed1d1c3bdab0887c2dc22e21ba3872ac9d1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testApproveBlogsEntryActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Approve\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Approve\"));\n\t\tselenium.waitForVisible(\"//div[3]/span/span/button\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[2]\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t}","id":63043,"modified_method":"public void testApproveBlogsEntryActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[contains(.,'Review')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Approve\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Approve\"));\n\t\tselenium.waitForVisible(\"//div[3]/span/span/button\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"//div[@id='workflowMyTasksPanel']/div[2]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='workflowMyRolesTasksPanel']/div[2]/div\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[contains(.,'Review')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[5]/a\"));\n\t}","commit_id":"1ee48bd2a4657636df7b57e820bd8d64891c365e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssignToMeBlogsEntryActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Assign to Me\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Assign to Me\"));\n\t\tselenium.waitForVisible(\"//div[3]/span/span/button\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","id":63044,"modified_method":"public void testAssignToMeBlogsEntryActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[contains(.,'Review')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Assign to Me\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Assign to Me\"));\n\t\tselenium.waitForVisible(\"//div[3]/span/span/button\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[contains(.,'Review')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","commit_id":"1ee48bd2a4657636df7b57e820bd8d64891c365e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssignToMeBlogsEntryActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Assign to Me\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Assign to Me\"));\n\t\tselenium.waitForVisible(\"//div[3]/span/span/button\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","id":63045,"modified_method":"public void testAssignToMeBlogsEntryActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[contains(.,'Review')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Assign to Me\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Assign to Me\"));\n\t\tselenium.waitForVisible(\"//div[3]/span/span/button\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[contains(.,'Review')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","commit_id":"1ee48bd2a4657636df7b57e820bd8d64891c365e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureBlogsEntrySingleApprover()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t}","id":63046,"modified_method":"public void testConfigureBlogsEntrySingleApprover()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t}","commit_id":"1ee48bd2a4657636df7b57e820bd8d64891c365e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureBlogsEntrySingleApprover()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t}","id":63047,"modified_method":"public void testConfigureBlogsEntrySingleApprover()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t}","commit_id":"1ee48bd2a4657636df7b57e820bd8d64891c365e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureBlogsEntrySingleApprover()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t}","id":63048,"modified_method":"public void testConfigureBlogsEntrySingleApprover()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t}","commit_id":"1ee48bd2a4657636df7b57e820bd8d64891c365e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_ViewBlogsEntryAssignedToMe()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Pending Approval\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t}","id":63049,"modified_method":"public void testGuest_ViewBlogsEntryAssignedToMe()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Pending Approval\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t}","commit_id":"1ee48bd2a4657636df7b57e820bd8d64891c365e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_ViewBlogsEntryAssignedToMyRoles()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Pending Approval\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t}","id":63050,"modified_method":"public void testGuest_ViewBlogsEntryAssignedToMyRoles()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Pending Approval\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t}","commit_id":"1ee48bd2a4657636df7b57e820bd8d64891c365e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_ViewBlogsEntryCompleted() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t\tassertFalse(selenium.isTextPresent(\"Pending Approval\"));\n\t}","id":63051,"modified_method":"public void testGuest_ViewBlogsEntryCompleted() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/div/p\"));\n\t\tassertFalse(selenium.isTextPresent(\"Pending Approval\"));\n\t}","commit_id":"1ee48bd2a4657636df7b57e820bd8d64891c365e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","id":63052,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"1ee48bd2a4657636df7b57e820bd8d64891c365e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","id":63053,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"1ee48bd2a4657636df7b57e820bd8d64891c365e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","id":63054,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"1ee48bd2a4657636df7b57e820bd8d64891c365e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewBlogsEntryAssignedToMe() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div[@class='entry-content']/h3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"There are no completed tasks.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","id":63055,"modified_method":"public void testViewBlogsEntryAssignedToMe() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div[@class='entry-content']/h3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/div/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[contains(.,'Review')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"There are no completed tasks.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","commit_id":"1ee48bd2a4657636df7b57e820bd8d64891c365e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewBlogsEntryAssignedToMyRoles() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div[@class='entry-content']/h3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"There are no completed tasks.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","id":63056,"modified_method":"public void testViewBlogsEntryAssignedToMyRoles() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div[@class='entry-content']/h3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/div/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[contains(.,'Review')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[5]/a\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"There are no completed tasks.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","commit_id":"1ee48bd2a4657636df7b57e820bd8d64891c365e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewBlogsEntryCompleted() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t\tassertFalse(selenium.isTextPresent(\"Pending Approval\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[2]\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t}","id":63057,"modified_method":"public void testViewBlogsEntryCompleted() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/div/p\"));\n\t\tassertFalse(selenium.isTextPresent(\"Pending Approval\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"//div[@id='workflowMyTasksPanel']/div[2]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='workflowMyRolesTasksPanel']/div[2]/div\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[contains(.,'Review')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Review')]/td[5]/a\"));\n\t}","commit_id":"1ee48bd2a4657636df7b57e820bd8d64891c365e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void dump() {\n    LoggerFactory.getLogger(getClass()).debug(\"{} measures to dump\", unsavedMeasuresByResource.size());\n    Map<Resource, Collection<Measure>> map = unsavedMeasuresByResource.asMap();\n    for (Map.Entry<Resource, Collection<Measure>> entry : map.entrySet()) {\n      Resource resource = entry.getKey();\n      Snapshot snapshot = resourcePersister.getSnapshot(entry.getKey());\n      for (Measure measure : entry.getValue()) {\n        if (shouldPersistMeasure(resource, measure)) {\n          MeasureModel model = createModel(measure);\n          model.setSnapshotId(snapshot.getId());\n          model.save(session);\n        }\n      }\n    }\n\n    session.commit();\n    unsavedMeasuresByResource.clear();\n  }","id":63058,"modified_method":"public void dump() {\n    LoggerFactory.getLogger(getClass()).debug(\"{} measures to dump\", unsavedMeasuresByResource.size());\n\n    Map<Resource, Collection<Measure>> map = unsavedMeasuresByResource.asMap();\n    for (Map.Entry<Resource, Collection<Measure>> entry : map.entrySet()) {\n      Resource resource = entry.getKey();\n      Snapshot snapshot = resourcePersister.getSnapshot(entry.getKey());\n      for (Measure measure : entry.getValue()) {\n        if (shouldPersistMeasure(resource, measure)) {\n          MeasureModel model = createModel(measure).setSnapshotId(snapshot.getId());\n          model.save(session);\n        }\n      }\n    }\n\n    session.commit();\n    unsavedMeasuresByResource.clear();\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"MeasureModel createModel(Measure measure) {\n    return mergeModel(measure, new MeasureModel());\n  }","id":63059,"modified_method":"private MeasureModel createModel(Measure measure) {\n    return mergeModel(measure, new MeasureModel());\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"MeasureModel mergeModel(Measure measure, MeasureModel merge) {\n    merge.setMetricId(measure.getMetric().getId());// we assume that the index has updated the metric\n    merge.setDescription(measure.getDescription());\n    merge.setData(measure.getData());\n    merge.setAlertStatus(measure.getAlertStatus());\n    merge.setAlertText(measure.getAlertText());\n    merge.setTendency(measure.getTendency());\n    merge.setVariationValue1(measure.getVariation1());\n    merge.setVariationValue2(measure.getVariation2());\n    merge.setVariationValue3(measure.getVariation3());\n    merge.setVariationValue4(measure.getVariation4());\n    merge.setVariationValue5(measure.getVariation5());\n    merge.setUrl(measure.getUrl());\n    merge.setCharacteristic(measure.getCharacteristic());\n    merge.setPersonId(measure.getPersonId());\n    if (measure.getValue() != null) {\n      merge.setValue(measure.getValue().doubleValue());\n    } else {\n      merge.setValue(null);\n    }\n    if (measure instanceof RuleMeasure) {\n      RuleMeasure ruleMeasure = (RuleMeasure) measure;\n      merge.setRulePriority(ruleMeasure.getSeverity());\n      if (ruleMeasure.getRule() != null) {\n        Rule ruleWithId = ruleFinder.findByKey(ruleMeasure.getRule().getRepositoryKey(), ruleMeasure.getRule().getKey());\n        if (ruleWithId != null) {\n          merge.setRuleId(ruleWithId.getId());\n        } else {\n          throw new SonarException(\"Can not save a measure with unknown rule \" + ruleMeasure);\n        }\n      }\n    }\n    return merge;\n  }","id":63060,"modified_method":"private MeasureModel mergeModel(Measure measure, MeasureModel merge) {\n    merge.setMetricId(measure.getMetric().getId()); // we assume that the index has updated the metric\n    merge.setDescription(measure.getDescription());\n    merge.setData(measure.getData());\n    merge.setAlertStatus(measure.getAlertStatus());\n    merge.setAlertText(measure.getAlertText());\n    merge.setTendency(measure.getTendency());\n    merge.setVariationValue1(measure.getVariation1());\n    merge.setVariationValue2(measure.getVariation2());\n    merge.setVariationValue3(measure.getVariation3());\n    merge.setVariationValue4(measure.getVariation4());\n    merge.setVariationValue5(measure.getVariation5());\n    merge.setUrl(measure.getUrl());\n    merge.setCharacteristic(measure.getCharacteristic());\n    merge.setPersonId(measure.getPersonId());\n    if (measure.getValue() != null) {\n      merge.setValue(measure.getValue().doubleValue());\n    } else {\n      merge.setValue(null);\n    }\n    if (measure instanceof RuleMeasure) {\n      RuleMeasure ruleMeasure = (RuleMeasure) measure;\n      merge.setRulePriority(ruleMeasure.getSeverity());\n      if (ruleMeasure.getRule() != null) {\n        Rule ruleWithId = ruleFinder.findByKey(ruleMeasure.getRule().getRepositoryKey(), ruleMeasure.getRule().getKey());\n        if (ruleWithId == null) {\n          throw new SonarException(\"Can not save a measure with unknown rule \" + ruleMeasure);\n        }\n        merge.setRuleId(ruleWithId.getId());\n      }\n    }\n    return merge;\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void saveMeasure(Resource resource, Measure measure) {\n    boolean saveLater = (measure.getPersistenceMode().useMemory() && delayedMode);\n    if (saveLater) {\n      unsavedMeasuresByResource.put(resource, measure);\n\n    } else {\n      Snapshot snapshot = resourcePersister.getSnapshotOrFail(resource);\n      MeasureModel model = null;\n      if (measure.getId() != null) {\n        // update\n        model = session.reattach(MeasureModel.class, measure.getId());\n        model = mergeModel(measure, model);\n        model.save(session);\n\n      } else if (shouldPersistMeasure(resource, measure)) {\n        // insert\n        model = createModel(measure);\n        model.setSnapshotId(snapshot.getId());\n        model.save(session);\n        measure.setId(model.getId()); // could be removed\n      }\n      if (model != null) {\n        memoryOptimizer.evictDataMeasure(measure, model);\n      }\n    }\n  }","id":63061,"modified_method":"public void saveMeasure(Resource resource, Measure measure) {\n    if (shouldSaveLater(measure)) {\n      unsavedMeasuresByResource.put(resource, measure);\n      return;\n    }\n\n    if (measure.getId() != null) { // update\n      MeasureModel model = session.reattach(MeasureModel.class, measure.getId());\n      model = mergeModel(measure, model);\n\n      model.save(session);\n      memoryOptimizer.evictDataMeasure(measure, model);\n    } else if (shouldPersistMeasure(resource, measure)) { // insert\n      Snapshot snapshot = resourcePersister.getSnapshotOrFail(resource);\n      MeasureModel model = createModel(measure).setSnapshotId(snapshot.getId());\n\n      model.save(session);\n      memoryOptimizer.evictDataMeasure(measure, model);\n    }\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"static boolean shouldPersistMeasure(Resource resource, Measure measure) {\n    Metric metric = measure.getMetric();\n    return measure.getPersistenceMode().useDatabase() &&\n        !(ResourceUtils.isEntity(resource) && isBestValueMeasure(measure, metric));\n  }","id":63062,"modified_method":"@VisibleForTesting\n  static boolean shouldPersistMeasure(Resource resource, Measure measure) {\n    return measure.getPersistenceMode().useDatabase() &&\n      !(ResourceUtils.isEntity(resource) && isBestValueMeasure(measure, measure.getMetric()));\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldNotSaveBestValues() {\n    JavaFile file = new JavaFile(\"org.foo.MyClass\");\n\n    Measure measure = new Measure(coverage).setValue(0.0);\n    assertThat(MeasurePersister.shouldPersistMeasure(file, measure), is(true));\n\n    measure = new Measure(coverage).setValue(75.8);\n    assertThat(MeasurePersister.shouldPersistMeasure(file, measure), is(true));\n\n    measure = new Measure(coverage).setValue(100.0);\n    assertThat(MeasurePersister.shouldPersistMeasure(file, measure), is(false));\n  }","id":63063,"modified_method":"@Test\n  public void shouldNotSaveBestValues() {\n    Measure measure = new Measure(coverage()).setValue(0.0);\n    assertThat(MeasurePersister.shouldPersistMeasure(aFile, measure)).isTrue();\n\n    measure = new Measure(coverage()).setValue(75.8);\n    assertThat(MeasurePersister.shouldPersistMeasure(aFile, measure)).isTrue();\n\n    measure = new Measure(coverage()).setValue(100.0);\n    assertThat(MeasurePersister.shouldPersistMeasure(aFile, measure)).isFalse();\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldRegisterPersistedMeasureToMemoryOptimizer() {\n    Measure measure = new Measure(ncloc).setValue(1234.0);\n\n    measurePersister.saveMeasure(project, measure);\n\n    verify(memoryOptimizer).evictDataMeasure(eq(measure), (MeasureModel)anyObject());\n  }","id":63064,"modified_method":"@Test\n  public void shouldRegisterPersistedMeasureToMemoryOptimizer() {\n    Measure measure = new Measure(ncloc()).setValue(1234.0);\n    measurePersister.saveMeasure(project, measure);\n\n    verify(memoryOptimizer).evictDataMeasure(eq(measure), any(MeasureModel.class));\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Before\n  public void mockResourcePersister() {\n    setupData(\"shared\");\n    resourcePersister = mock(ResourcePersister.class);\n    projectSnapshot = getSession().getSingleResult(Snapshot.class, \"id\", PROJECT_SNAPSHOT_ID);\n    packageSnapshot = getSession().getSingleResult(Snapshot.class, \"id\", PACKAGE_SNAPSHOT_ID);\n    fileSnapshot = getSession().getSingleResult(Snapshot.class, \"id\", FILE_SNAPSHOT_ID);\n    ncloc = getSession().getSingleResult(Metric.class, \"key\", \"ncloc\");\n    coverage = getSession().getSingleResult(Metric.class, \"key\", \"coverage\");\n    when(resourcePersister.getSnapshotOrFail(eq(project))).thenReturn(projectSnapshot);\n    when(resourcePersister.getSnapshotOrFail(eq(aPackage))).thenReturn(packageSnapshot);\n    when(resourcePersister.getSnapshotOrFail(eq(aFile))).thenReturn(fileSnapshot);\n    when(resourcePersister.getSnapshot(project)).thenReturn(projectSnapshot);\n    when(resourcePersister.getSnapshot(aPackage)).thenReturn(packageSnapshot);\n    when(resourcePersister.getSnapshot(aFile)).thenReturn(fileSnapshot);\n    memoryOptimizer = mock(MemoryOptimizer.class);\n    measurePersister = new MeasurePersister(getSession(), resourcePersister, new DefaultRuleFinder(getSessionFactory()), memoryOptimizer);\n  }","id":63065,"modified_method":"@Before\n  public void mockResourcePersister() {\n    when(resourcePersister.getSnapshotOrFail(project)).thenReturn(projectSnapshot);\n    when(resourcePersister.getSnapshot(project)).thenReturn(projectSnapshot);\n    when(resourcePersister.getSnapshot(aPackage)).thenReturn(packageSnapshot);\n\n    measurePersister = new MeasurePersister(getSession(), resourcePersister, null, memoryOptimizer);\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldInsertMeasure() {\n    Measure measure = new Measure(ncloc).setValue(1234.0);\n\n    measurePersister.saveMeasure(project, measure);\n\n    checkTables(\"shouldInsertMeasure\", \"project_measures\");\n  }","id":63066,"modified_method":"@Test\n  public void shouldInsertMeasure() {\n    setupData(\"shared\");\n\n    Measure measure = new Measure(ncloc()).setValue(1234.0);\n    measurePersister.saveMeasure(project, measure);\n\n    checkTables(\"shouldInsertMeasure\", \"project_measures\");\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldNotSaveMemoryOnlyMeasures() {\n    Measure measure = new Measure(\"ncloc\").setPersistenceMode(PersistenceMode.MEMORY);\n    assertThat(MeasurePersister.shouldPersistMeasure(aPackage, measure), is(false));\n  }","id":63067,"modified_method":"@Test\n  public void shouldNotSaveMemoryOnlyMeasures() {\n    Measure measure = new Measure(\"ncloc\").setPersistenceMode(PersistenceMode.MEMORY);\n    assertThat(MeasurePersister.shouldPersistMeasure(aPackage, measure)).isFalse();\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldAlwaysPersistNonFileMeasures() {\n    assertThat(MeasurePersister.shouldPersistMeasure(project, new Measure(CoreMetrics.LINES, 200.0)), is(true));\n    assertThat(MeasurePersister.shouldPersistMeasure(aPackage, new Measure(CoreMetrics.LINES, 200.0)), is(true));\n  }","id":63068,"modified_method":"@Test\n  public void shouldAlwaysPersistNonFileMeasures() {\n    assertThat(MeasurePersister.shouldPersistMeasure(project, new Measure(CoreMetrics.LINES, 200.0))).isTrue();\n    assertThat(MeasurePersister.shouldPersistMeasure(aPackage, new Measure(CoreMetrics.LINES, 200.0))).isTrue();\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldNotSaveBestValueMeasuresInDelayedMode() {\n    measurePersister.setDelayedMode(true);\n\n    measurePersister.saveMeasure(aFile, new Measure(coverage).setValue(100.0));\n\n    assertThat(getSession().getResults(MeasureModel.class, \"metricId\", COVERAGE_METRIC_ID, \"snapshotId\", FILE_SNAPSHOT_ID).size(), is(0));\n\n    measurePersister.dump();\n\n    // not saved because it's a best value measure\n    assertThat(getSession().getResults(MeasureModel.class, \"metricId\", COVERAGE_METRIC_ID, \"snapshotId\", FILE_SNAPSHOT_ID).size(), is(0));\n  }","id":63069,"modified_method":"@Test\n  public void shouldNotSaveBestValueMeasuresInDelayedMode() {\n    measurePersister.setDelayedMode(true);\n    measurePersister.saveMeasure(aFile, new Measure(coverage()).setValue(100.0));\n\n    assertThat(getSession().getResults(MeasureModel.class, \"metricId\", COVERAGE_METRIC_ID, \"snapshotId\", FILE_SNAPSHOT_ID)).isEmpty();\n\n    measurePersister.dump();\n\n    assertThat(getSession().getResults(MeasureModel.class, \"metricId\", COVERAGE_METRIC_ID, \"snapshotId\", FILE_SNAPSHOT_ID)).isEmpty();\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldNotPersistSomeFileMeasuresWithBestValue() {\n    JavaFile file = new JavaFile(\"org.foo.Bar\");\n\n    // must persist:\n    assertThat(MeasurePersister.shouldPersistMeasure(file, new Measure(CoreMetrics.LINES, 200.0)), is(true));\n    assertThat(MeasurePersister.shouldPersistMeasure(file, new Measure(CoreMetrics.DUPLICATED_LINES_DENSITY, 3.0)), is(true));\n\n\n    // must not persist:\n    Measure duplicatedLines = new Measure(CoreMetrics.DUPLICATED_LINES_DENSITY, 0.0);\n    assertThat(MeasurePersister.shouldPersistMeasure(file, duplicatedLines), is(false));\n\n    duplicatedLines.setVariation1(0.0);\n    assertThat(MeasurePersister.shouldPersistMeasure(file, duplicatedLines), is(false));\n\n    duplicatedLines.setVariation1(-3.0);\n    assertThat(MeasurePersister.shouldPersistMeasure(file, duplicatedLines), is(true));\n  }","id":63070,"modified_method":"@Test\n  public void shouldNotPersistSomeFileMeasuresWithBestValue() {\n    assertThat(MeasurePersister.shouldPersistMeasure(aFile, new Measure(CoreMetrics.LINES, 200.0))).isTrue();\n    assertThat(MeasurePersister.shouldPersistMeasure(aFile, new Measure(CoreMetrics.DUPLICATED_LINES_DENSITY, 3.0))).isTrue();\n\n    Measure duplicatedLines = new Measure(CoreMetrics.DUPLICATED_LINES_DENSITY, 0.0);\n    assertThat(MeasurePersister.shouldPersistMeasure(aFile, duplicatedLines)).isFalse();\n\n    duplicatedLines.setVariation1(0.0);\n    assertThat(MeasurePersister.shouldPersistMeasure(aFile, duplicatedLines)).isFalse();\n\n    duplicatedLines.setVariation1(-3.0);\n    assertThat(MeasurePersister.shouldPersistMeasure(aFile, duplicatedLines)).isTrue();\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldNotDelaySavingWithDatabaseOnlyMeasure() {\n    measurePersister.setDelayedMode(true);\n\n    measurePersister.saveMeasure(project, new Measure(ncloc).setValue(1234.0).setPersistenceMode(PersistenceMode.DATABASE)); // database only\n    measurePersister.saveMeasure(aPackage, new Measure(ncloc).setValue(50.0)); // database + memory\n\n    // no dump => the db-only measure is saved\n\n    checkTables(\"shouldNotDelaySavingWithDatabaseOnlyMeasure\", \"project_measures\");\n  }","id":63071,"modified_method":"@Test\n  public void shouldNotDelaySavingWithDatabaseOnlyMeasure() {\n    setupData(\"shared\");\n\n    measurePersister.setDelayedMode(true);\n    measurePersister.saveMeasure(project, new Measure(ncloc()).setValue(1234.0).setPersistenceMode(PersistenceMode.DATABASE)); // database\n    measurePersister.saveMeasure(aPackage, new Measure(ncloc()).setValue(50.0)); // database + memory\n\n    checkTables(\"shouldNotDelaySavingWithDatabaseOnlyMeasure\", \"project_measures\");\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldAddDelayedMeasureSeveralTimes() {\n    measurePersister.setDelayedMode(true);\n    Measure measure = new Measure(ncloc).setValue(200.0);\n    measurePersister.saveMeasure(project, measure);\n\n    measure.setValue(300.0);\n    measurePersister.saveMeasure(project, measure);\n\n    measurePersister.dump();\n\n    List<MeasureModel> coverageMeasures = getSession().getResults(MeasureModel.class, \"snapshotId\", PROJECT_SNAPSHOT_ID, \"metricId\", 1);\n    assertThat(coverageMeasures.size(), is(1));\n    assertThat(coverageMeasures.get(0).getValue(), is(300.0));\n  }","id":63072,"modified_method":"@Test\n  public void shouldAddDelayedMeasureSeveralTimes() {\n    Measure measure = new Measure(ncloc()).setValue(200.0);\n\n    measurePersister.setDelayedMode(true);\n    measurePersister.saveMeasure(project, measure);\n\n    measure.setValue(300.0);\n    measurePersister.saveMeasure(project, measure);\n    measurePersister.dump();\n\n    List<MeasureModel> coverageMeasures = getSession().getResults(MeasureModel.class, \"snapshotId\", PROJECT_SNAPSHOT_ID, \"metricId\", 1);\n    assertThat(coverageMeasures).onProperty(\"value\").containsExactly(300.0);\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldDelaySaving() {\n    measurePersister.setDelayedMode(true);\n\n    measurePersister.saveMeasure(project, new Measure(ncloc).setValue(1234.0));\n    measurePersister.saveMeasure(aPackage, new Measure(ncloc).setValue(50.0));\n\n    assertThat(getSession().getResults(MeasureModel.class, \"metricId\", 1).size(), is(0));\n\n    measurePersister.dump();\n    checkTables(\"shouldDelaySaving\", \"project_measures\");\n  }","id":63073,"modified_method":"@Test\n  public void shouldDelaySaving() {\n    setupData(\"shared\");\n\n    measurePersister.setDelayedMode(true);\n    measurePersister.saveMeasure(project, new Measure(ncloc()).setValue(1234.0));\n    measurePersister.saveMeasure(aPackage, new Measure(ncloc()).setValue(50.0));\n\n    assertThat(getSession().getResults(MeasureModel.class, \"metricId\", 1)).isEmpty();\n\n    measurePersister.dump();\n    checkTables(\"shouldDelaySaving\", \"project_measures\");\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void nullValueAndNullVariationsShouldBeConsideredAsBestValue() {\n    Measure measure = new Measure(CoreMetrics.NEW_VIOLATIONS_KEY);\n    assertThat(MeasurePersister.isBestValueMeasure(measure, CoreMetrics.NEW_VIOLATIONS), is(true));\n  }","id":63074,"modified_method":"@Test\n  public void nullValueAndNullVariationsShouldBeConsideredAsBestValue() {\n    Measure measure = new Measure(CoreMetrics.NEW_VIOLATIONS_KEY);\n\n    assertThat(MeasurePersister.isBestValueMeasure(measure, CoreMetrics.NEW_VIOLATIONS)).isTrue();\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldUpdateMeasure() {\n    Measure measure = new Measure(coverage).setValue(12.5);\n    measure.setId(1L);\n\n    measurePersister.saveMeasure(project, measure);\n\n    checkTables(\"shouldUpdateMeasure\", \"project_measures\");\n  }","id":63075,"modified_method":"@Test\n  public void shouldUpdateMeasure() {\n    setupData(\"shared\");\n\n    Measure measure = new Measure(coverage()).setValue(12.5).setId(1L);\n    measurePersister.saveMeasure(project, measure);\n\n    checkTables(\"shouldUpdateMeasure\", \"project_measures\");\n  }","commit_id":"111cf7219f5a4439687f2cd836fb8e498e545773","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@NotNull\n  public FormattingModel createModel(final PsiElement element, final CodeStyleSettings settings) {\n    return new XslTextFormattingModel(myBuilder.createModel(element, settings), settings);\n  }","id":63076,"modified_method":"@NotNull\n  public FormattingModel createModel(final PsiElement element, final CodeStyleSettings settings) {\n    FormattingModel baseModel = myBuilder.createModel(element, settings);\n    return new DelegatingFormattingModel(baseModel, getDelegatingBlock(settings, baseModel));\n  }","commit_id":"7f5b30058f5a71ec7c5a65fdeabeaee9866e8243","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void setUp() throws Exception {\n    if(!Disposer.getTree().isEmpty()) {\n      Disposer.assertIsEmpty();\n      fail(\"Clean leftovers from previous tests\");\n      Disposer.getTree().clearAll();\n    }\n    myRoot = new MyDisposable(\"root\");\n\n    myFolder1 = new MyDisposable(\"folder1\");\n    myFolder2 = new MyDisposable(\"folder2\");\n\n    myLeaf1 = new MyDisposable(\"leaf1\");\n    myLeaf2 = new MyDisposable(\"leaf2\");\n\n    myDisposeActions.clear();\n  }","id":63077,"modified_method":"protected void setUp() throws Exception {\n    //if(!Disposer.getTree().isEmpty()) {\n    //  Disposer.assertIsEmpty();\n    //  fail(\"Clean leftovers from previous tests\");\n      Disposer.getTree().clearAll();\n    //}\n    myRoot = new MyDisposable(\"root\");\n\n    myFolder1 = new MyDisposable(\"folder1\");\n    myFolder2 = new MyDisposable(\"folder2\");\n\n    myLeaf1 = new MyDisposable(\"leaf1\");\n    myLeaf2 = new MyDisposable(\"leaf2\");\n\n    myDisposeActions.clear();\n  }","commit_id":"7a2f6a90e8128162c1c0d20e57d4dfc50625513e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public int hashCode() {\n    return (myContext == null ? 0 : myContext.hashCode()) + 10 * mySourceElement.hashCode() + 20 * getClass().getName().hashCode();\n  }","id":63078,"modified_method":"public int hashCode() {\n    return (myContext == null ? 0 : myContext.hashCode()) + 10 * (mySourceElement == null ? 0 : mySourceElement.hashCode()) + 20 * getClass().getName().hashCode();\n  }","commit_id":"3db4e32bb15b8c8cb2ede6c0685dd48c1032c576","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void disposePlugins() {\n    for (Project p : ProjectManager.getInstance().getOpenProjects()) {\n      p.getComponent(RunConfigurationsReloader.class).disposeRunConfigurations();\n    }\n\n    for (Project p : ProjectManager.getInstance().getOpenProjects()) {\n      p.getComponent(ProjectPluginManager.class).disposePlugins();\n    }\n    myPluginManager.disposePlugins();\n  }","id":63079,"modified_method":"private void disposePlugins() {\n    ApplicationRunConfigurationsReloader.getInstance().dispose();\n\n    for (Project p : ProjectManager.getInstance().getOpenProjects()) {\n      p.getComponent(ProjectPluginManager.class).disposePlugins();\n    }\n    myPluginManager.disposePlugins();\n  }","commit_id":"3db4e32bb15b8c8cb2ede6c0685dd48c1032c576","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void loadPlugins() {\n    myPluginManager.loadPlugins();\n    for (Project p : ProjectManager.getInstance().getOpenProjects()) {\n      p.getComponent(ProjectPluginManager.class).loadPlugins();\n    }\n\n    for (Project p : ProjectManager.getInstance().getOpenProjects()) {\n      p.getComponent(RunConfigurationsReloader.class).initRunConfigurations();\n    }\n  }","id":63080,"modified_method":"private void loadPlugins() {\n    myPluginManager.loadPlugins();\n    for (Project p : ProjectManager.getInstance().getOpenProjects()) {\n      p.getComponent(ProjectPluginManager.class).loadPlugins();\n    }\n\n    ApplicationRunConfigurationsReloader.getInstance().init();\n  }","commit_id":"3db4e32bb15b8c8cb2ede6c0685dd48c1032c576","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void disposeRunConfigurations() {\n    //assert ThreadUtils.isEventDispatchThread() : \"should be called from EDT only\";\n    assert !myProject.isDisposed();\n    if (!myLoaded) return;\n\n    ExecutionManager executionManager = myProject.getComponent(ExecutionManager.class);\n    RunContentManagerImpl contentManager = (RunContentManagerImpl) executionManager.getContentManager();\n    for (RunContentDescriptor d : contentManager.getAllDescriptors()) {\n      if (d.getAttachedContent() == null) {\n        LOG.warning(\"Attached content of descriptor \" + d.getDisplayName() + \" is null.\");\n      } else if (d.getAttachedContent().getManager() == null) {\n        LOG.warning(\"Manager of attached content of descriptor \" + d.getDisplayName() + \" is null.\");\n      } else {\n        d.getAttachedContent().getManager().removeAllContents(true);\n      }\n    }\n\n    synchronized (myConfigurationsLock) {\n      final ExtensionPoint<RuntimeConfigurationProducer> epCreator = Extensions.getArea(null).getExtensionPoint(RuntimeConfigurationProducer.RUNTIME_CONFIGURATION_PRODUCER);\n      RuntimeConfigurationProducer[] extensions = epCreator.getExtensions();\n      for (RuntimeConfigurationProducer producer : extensions) {\n        epCreator.unregisterExtension(producer);\n        myRegisteredCreators.remove(producer);\n      }\n\n      Collections.reverse(mySortedConfigurations);\n\n      Element newState = new Element(\"root\");\n      try {\n        getRunManager().writeExternal(newState);\n        myState = newState;\n      } catch (WriteExternalException e) {\n        LOG.error(e);\n      }\n\n      getRunManager().clearAll();\n\n      final ExtensionPoint<ConfigurationType> epConfigurationType = Extensions.getArea(null).getExtensionPoint(ConfigurationType.CONFIGURATION_TYPE_EP);\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          for (ConfigurationType ct : mySortedConfigurations) {\n            epConfigurationType.unregisterExtension(ct);\n          }\n        }\n      });\n      mySortedConfigurations.clear();\n    }\n\n    mySharedState = getSharedConfigurationManager().getState();\n    reInitializeRunManager();\n\n    myLoaded = false;\n  }","id":63081,"modified_method":"void disposeRunConfigurations() {\n    //assert ThreadUtils.isEventDispatchThread() : \"should be called from EDT only\";\n    assert !myProject.isDisposed();\n\n    ExecutionManager executionManager = myProject.getComponent(ExecutionManager.class);\n    RunContentManagerImpl contentManager = (RunContentManagerImpl) executionManager.getContentManager();\n    for (RunContentDescriptor d : contentManager.getAllDescriptors()) {\n      if (d.getAttachedContent() == null) {\n        LOG.warning(\"Attached content of descriptor \" + d.getDisplayName() + \" is null.\");\n      } else if (d.getAttachedContent().getManager() == null) {\n        LOG.warning(\"Manager of attached content of descriptor \" + d.getDisplayName() + \" is null.\");\n      } else {\n        d.getAttachedContent().getManager().removeAllContents(true);\n      }\n    }\n\n    Element newState = new Element(\"root\");\n    try {\n      getRunManager().writeExternal(newState);\n      myState = newState;\n    } catch (WriteExternalException e) {\n      LOG.error(e);\n    }\n\n    getRunManager().clearAll();\n\n    mySharedState = getSharedConfigurationManager().getState();\n    reInitializeManagers();\n  }","commit_id":"3db4e32bb15b8c8cb2ede6c0685dd48c1032c576","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void initRunConfigurations() {\n    //assert ThreadUtils.isEventDispatchThread() : \"should be called from EDT only\";\n    if (myProject.isDisposed()) return;\n    if (myLoaded) return;\n    if (IdeMain.getTestMode() != TestMode.NO_TEST) return;\n\n    final ExtensionPoint<ConfigurationType> epConfigType = Extensions.getArea(null).getExtensionPoint(ConfigurationType.CONFIGURATION_TYPE_EP);\n    synchronized (myConfigurationsLock) {\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          mySortedConfigurations = createConfigs(myProject);\n          for (ConfigurationType ct : mySortedConfigurations) {\n            epConfigType.registerExtension(ct);\n          }\n        }\n      });\n    }\n\n    final ConfigurationType[] configurationTypes = getConfigurationTypes();\n    getRunManager().initializeConfigurationTypes(configurationTypes);\n\n    reInitializeRunManager();\n\n    ModelAccess.instance().runReadAction(new Runnable() {\n      public void run() {\n        createCreators(myProject);\n      }\n    });\n\n    if (myState != null) {\n      try {\n        getRunManager().readExternal(myState);\n      } catch (InvalidDataException e) {\n        LOG.error(e);\n      }\n    }\n\n    if (mySharedState != null) {\n      try {\n        getSharedConfigurationManager().readExternal(mySharedState);\n      } catch (InvalidDataException e) {\n        LOG.error(e);\n      }\n    }\n\n    myLoaded = true;\n  }","id":63082,"modified_method":"void initRunConfigurations() {\n    //assert ThreadUtils.isEventDispatchThread() : \"should be called from EDT only\";\n    if (myProject.isDisposed()) return;\n\n    getRunManager().initializeConfigurationTypes(getConfigurationTypes());\n\n    reInitializeManagers();\n\n    if (myState != null) {\n      try {\n        getRunManager().readExternal(myState);\n      } catch (InvalidDataException e) {\n        LOG.error(e);\n      }\n    }\n\n    if (mySharedState != null) {\n      try {\n        getSharedConfigurationManager().readExternal(mySharedState);\n      } catch (InvalidDataException e) {\n        LOG.error(e);\n      }\n    }\n  }","commit_id":"3db4e32bb15b8c8cb2ede6c0685dd48c1032c576","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void reInitializeRunManager() {\n    Element newState = new Element(\"root\");\n    Element newSharedState = new Element(\"root\");\n    try {\n      getRunManager().writeExternal(newState);\n      getSharedConfigurationManager().writeExternal(newSharedState);\n      getRunManager().readExternal(newState);\n      getSharedConfigurationManager().readExternal(newSharedState);\n    } catch (WriteExternalException wee) {\n      LOG.error(wee);\n    } catch (InvalidDataException ide) {\n      LOG.error(ide);\n    }\n  }","id":63083,"modified_method":"private void reInitializeManagers() {\n    Element newState = new Element(\"root\");\n    Element newSharedState = new Element(\"root\");\n    try {\n      getRunManager().writeExternal(newState);\n      getSharedConfigurationManager().writeExternal(newSharedState);\n      getRunManager().readExternal(newState);\n      getSharedConfigurationManager().readExternal(newSharedState);\n    } catch (WriteExternalException wee) {\n      LOG.error(wee);\n    } catch (InvalidDataException ide) {\n      LOG.error(ide);\n    }\n  }","commit_id":"3db4e32bb15b8c8cb2ede6c0685dd48c1032c576","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ConfigurationType[] getConfigurationTypes() {\n    final ConfigurationType[] configurationTypes = Extensions.getExtensions(ConfigurationType.CONFIGURATION_TYPE_EP);\n    final List<ConfigurationType> result = new ArrayList<ConfigurationType>();\n    Set<String> uniqTypes = new HashSet<String>();\n    for (ConfigurationType type : configurationTypes) {\n      if (!uniqTypes.contains(type.getClass().getName())) {\n        result.add(type);\n        uniqTypes.add(type.getClass().getName());\n      }\n    }\n    return result.toArray(new ConfigurationType[result.size()]);\n  }","id":63084,"modified_method":"private static ConfigurationType[] getConfigurationTypes() {\n    final ConfigurationType[] configurationTypes = Extensions.getExtensions(ConfigurationType.CONFIGURATION_TYPE_EP);\n    final List<ConfigurationType> result = new ArrayList<ConfigurationType>();\n    Set<String> uniqTypes = new HashSet<String>();\n    for (ConfigurationType type : configurationTypes) {\n      if (!uniqTypes.contains(type.getClass().getName())) {\n        result.add(type);\n        uniqTypes.add(type.getClass().getName());\n      }\n    }\n    return result.toArray(new ConfigurationType[result.size()]);\n  }","commit_id":"3db4e32bb15b8c8cb2ede6c0685dd48c1032c576","url":"https://github.com/JetBrains/MPS"},{"original_method":"public RunConfigurationsReloader(Project project, MPSProject mpsProject) {\n    myProject = project;\n    myMpsProject = mpsProject;\n  }","id":63085,"modified_method":"public RunConfigurationsReloader(Project project) {\n    myProject = project;\n  }","commit_id":"3db4e32bb15b8c8cb2ede6c0685dd48c1032c576","url":"https://github.com/JetBrains/MPS"},{"original_method":"/**\n     * @param updateSeq Update sequence.\n     * @return {@code True} if entry has been transitioned to state EVICTED.\n     */\n    boolean tryEvict(boolean updateSeq) {\n        // Attempt to evict partition entries from cache.\n        if (state.getReference() == RENTING && state.getStamp() == 0 && !groupReserved())\n            clearAll();\n\n        if (map.isEmpty() && !groupReserved() && state.compareAndSet(RENTING, EVICTED, 0, 0)) {\n            if (log.isDebugEnabled())\n                log.debug(\"Evicted partition: \" + this);\n\n            if (!GridQueryProcessor.isEnabled(cctx.config()))\n                clearSwap();\n\n            if (cctx.isDrEnabled())\n                cctx.dr().partitionEvicted(id);\n\n            cctx.dataStructures().onPartitionEvicted(id);\n\n            rent.onDone();\n\n            ((GridDhtPreloader)cctx.preloader()).onPartitionEvicted(this, updateSeq);\n\n            clearDeferredDeletes();\n\n            return true;\n        }\n\n        return false;\n    }","id":63086,"modified_method":"/**\n     * @param updateSeq Update sequence.\n     * @return {@code True} if entry has been transitioned to state EVICTED.\n     */\n    boolean tryEvict(boolean updateSeq) {\n        if (state.getReference() != RENTING || state.getStamp() != 0 || groupReserved())\n            return false;\n\n        // Attempt to evict partition entries from cache.\n        clearAll();\n\n        if (map.isEmpty() && state.compareAndSet(RENTING, EVICTED, 0, 0)) {\n            if (log.isDebugEnabled())\n                log.debug(\"Evicted partition: \" + this);\n\n            if (!GridQueryProcessor.isEnabled(cctx.config()))\n                clearSwap();\n\n            if (cctx.isDrEnabled())\n                cctx.dr().partitionEvicted(id);\n\n            cctx.dataStructures().onPartitionEvicted(id);\n\n            rent.onDone();\n\n            ((GridDhtPreloader)cctx.preloader()).onPartitionEvicted(this, updateSeq);\n\n            clearDeferredDeletes();\n\n            return true;\n        }\n\n        return false;\n    }","commit_id":"7e3f924b2f6f2dcc0a942cdc569b7e27647de5cb","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Registers all the given partitions for this reservation.\n     *\n     * @param parts Partitions.\n     * @return {@code true} If registration succeeded and this reservation can be published.\n     */\n    public boolean register(Collection<? extends GridReservable> parts) {\n        assert !F.isEmpty(parts) : \"empty partitions list\";\n\n        GridDhtLocalPartition[] arr = new GridDhtLocalPartition[parts.size()];\n\n        int i = 0;\n        int prevPart = -1;\n        boolean sorted = true; // Most probably it is a sorted list.\n\n        for (GridReservable part : parts) {\n            arr[i] = (GridDhtLocalPartition)part;\n\n            if (sorted) { // Make sure it will be a sorted array.\n                int id = arr[i].id();\n\n                if (id <= prevPart)\n                    sorted = false;\n\n                prevPart = id;\n            }\n\n            i++;\n        }\n\n        if (!sorted)\n            Arrays.sort(arr);\n\n        i = 0;\n        prevPart = -1;\n\n        // Register in correct sort order.\n        for (GridDhtLocalPartition part : arr) {\n            if (prevPart == part.id())\n                throw new IllegalStateException(\"Duplicated partitions.\");\n\n            prevPart = part.id();\n\n            if (!part.addReservation(this)) {\n                if (i != 0)\n                    throw new IllegalStateException(\n                        \"Trying to reserve different sets of partitions for the same topology version.\");\n\n                return false;\n            }\n\n            i++;\n        }\n\n        if (!this.parts.compareAndSet(null, arr))\n            throw new IllegalStateException(\"Partitions can be registered only once.\");\n\n        return true;\n    }","id":63087,"modified_method":"/**\n     * Registers all the given partitions for this reservation.\n     *\n     * @param parts Partitions.\n     * @return {@code true} If registration succeeded and this reservation can be published.\n     */\n    public boolean register(Collection<? extends GridReservable> parts) {\n        assert !F.isEmpty(parts) : \"empty partitions list\";\n\n        GridDhtLocalPartition[] arr = new GridDhtLocalPartition[parts.size()];\n\n        int i = 0;\n        int prevPart = -1;\n        boolean sorted = true; // Most probably it is a sorted list.\n\n        for (GridReservable part : parts) {\n            arr[i] = (GridDhtLocalPartition)part;\n\n            if (sorted) { // Make sure it will be a sorted array.\n                int id = arr[i].id();\n\n                if (id <= prevPart)\n                    sorted = false;\n\n                prevPart = id;\n            }\n\n            i++;\n        }\n\n        if (!sorted)\n            Arrays.sort(arr);\n\n        i = 0;\n        prevPart = -1;\n\n        // Register in correct sort order.\n        for (GridDhtLocalPartition part : arr) {\n            if (prevPart == part.id())\n                throw new IllegalStateException(\"Duplicated partitions.\");\n\n            prevPart = part.id();\n\n            if (!part.addReservation(this)) {\n                if (i != 0)\n                    throw new IllegalStateException(\n                        \"Trying to reserve different sets of partitions for the same topology version.\");\n\n                return false;\n            }\n\n            i++;\n        }\n\n        if (!this.parts.compareAndSet(null, arr))\n            throw new IllegalStateException(\"Partitions can be registered only once.\");\n\n        assert reservations.get() != -1 : \"all the partitions must be reserved before register, we can't be invalidated\";\n\n        return true;\n    }","commit_id":"7e3f924b2f6f2dcc0a942cdc569b7e27647de5cb","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Must be checked in {@link GridDhtLocalPartition#tryEvict(boolean)}.\n     * If returns {@code true} then probably partition will be evicted (or at least cleared),\n     * so this reservation object becomes invalid and must be dropped from the partition.\n     * Also this means that after returning {@code true} here method {@link #reserve()} can not\n     * return {@code true} anymore.\n     *\n     * @return {@code true} If this reservation is NOT reserved and partition CAN be evicted.\n     */\n    public boolean canEvict() {\n        int r = reservations.get();\n\n        assert r >= -1 : r;\n\n        if (r != 0)\n            return r == -1;\n\n        if (reservations.compareAndSet(0, -1)) {\n            unregister();\n\n            return true;\n        }\n\n        return false;\n    }","id":63088,"modified_method":"/**\n     * Must be checked in {@link GridDhtLocalPartition#tryEvict(boolean)}.\n     * If returns {@code true} then probably partition will be evicted (or at least cleared),\n     * so this reservation object becomes invalid and must be dropped from the partition.\n     * Also this means that after returning {@code true} here method {@link #reserve()} can not\n     * return {@code true} anymore.\n     *\n     * @return {@code true} If this reservation is NOT reserved and partition CAN be evicted.\n     */\n    public boolean canEvict() {\n        assert parts.get() != null : \"all parts must be reserved before registration\";\n\n        int r = reservations.get();\n\n        assert r >= -1 : r;\n\n        if (r != 0)\n            return r == -1;\n\n        if (reservations.compareAndSet(0, -1)) {\n            unregister();\n\n            return true;\n        }\n\n        return false;\n    }","commit_id":"7e3f924b2f6f2dcc0a942cdc569b7e27647de5cb","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Must be called when this reservation is published.\n     *\n     * @param unpublish Closure to unpublish this reservation when it will become invalid.\n     */\n    public void onPublish(CI1<GridDhtPartitionsReservation> unpublish) {\n        assert unpublish != null;\n        assert this.unpublish == null;\n\n        this.unpublish = unpublish;\n\n        if (reservations.get() == -1)\n            unregister();\n    }","id":63089,"modified_method":"/**\n     * Must be called when this reservation is published.\n     *\n     * @param unpublish Closure to unpublish this reservation when it will become invalid.\n     */\n    public void onPublish(CI1<GridDhtPartitionsReservation> unpublish) {\n        assert unpublish != null;\n\n        if (!this.unpublish.compareAndSet(null, unpublish))\n            throw new IllegalStateException(\"Unpublishing closure can be set only once.\");\n\n        if (reservations.get() == -1)\n            unregister();\n    }","commit_id":"7e3f924b2f6f2dcc0a942cdc569b7e27647de5cb","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Unregisters this reservation from all the partitions.\n     */\n    private void unregister() {\n        GridDhtLocalPartition[] arr = parts.get();\n\n        if (!F.isEmpty(arr) && unpublish != null && parts.compareAndSet(arr, EMPTY)) {\n            // Reverse order makes sure that addReservation on the same topVer reservation will fail on the first partition.\n            for (int i = arr.length - 1; i >= 0; i--) {\n                GridDhtLocalPartition part = arr[i];\n\n                part.removeReservation(this);\n\n                tryEvict(part);\n            }\n\n            unpublish.apply(this);\n        }\n    }","id":63090,"modified_method":"/**\n     * Unregisters from all the partitions and unpublishes this reservation.\n     */\n    private void unregister() {\n        GridDhtLocalPartition[] arr = parts.get();\n\n        // Unregister from partitions.\n        if (!F.isEmpty(arr) && parts.compareAndSet(arr, EMPTY)) {\n            // Reverse order makes sure that addReservation on the same topVer reservation will fail on the first partition.\n            for (int i = arr.length - 1; i >= 0; i--) {\n                GridDhtLocalPartition part = arr[i];\n\n                part.removeReservation(this);\n\n                tryEvict(part);\n            }\n        }\n\n        // Unpublish.\n        CI1<GridDhtPartitionsReservation> u = unpublish.get();\n\n        if (u != null && unpublish.compareAndSet(u, null))\n            u.apply(this);\n    }","commit_id":"7e3f924b2f6f2dcc0a942cdc569b7e27647de5cb","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * JUnit.\n     *\n     * @throws Exception If failed.\n     */\n    public void testRestarts() throws Exception {\n        int duration = 150 * 1000;\n        int qryThreadNum = 4;\n        int restartThreadsNum = 2; // 4 + 2 = 6 nodes\n        final int nodeLifeTime = 2 * 1000;\n        final int logFreq = 50;\n\n        startGridsMultiThreaded(GRID_CNT);\n\n        final AtomicIntegerArray locks = new AtomicIntegerArray(GRID_CNT);\n\n        fillCaches();\n\n        final List<List<?>> pRes = grid(0).cache(\"pu\").query(new SqlFieldsQuery(PARTITIONED_QRY)).getAll();\n\n        Thread.sleep(3000);\n\n        assertEquals(pRes, grid(0).cache(\"pu\").query(new SqlFieldsQuery(PARTITIONED_QRY)).getAll());\n\n        final List<List<?>> rRes = grid(0).cache(\"co\").query(new SqlFieldsQuery(REPLICATED_QRY)).getAll();\n\n        final AtomicInteger qryCnt = new AtomicInteger();\n\n        final AtomicBoolean qrysDone = new AtomicBoolean();\n\n        IgniteInternalFuture<?> fut1 = multithreadedAsync(new CAX() {\n            @Override public void applyx() throws IgniteCheckedException {\n                GridRandom rnd = new GridRandom();\n\n                while (!qrysDone.get()) {\n                    int g;\n\n                    do {\n                        g = rnd.nextInt(locks.length());\n                    }\n                    while (!locks.compareAndSet(g, 0, 1));\n\n                    if (rnd.nextBoolean()) { // Partitioned query.\n                        IgniteCache<?,?> cache = grid(g).cache(\"pu\");\n\n                        assertEquals(pRes, cache.query(new SqlFieldsQuery(PARTITIONED_QRY)).getAll());\n                    }\n                    else { // Replicated query.\n                        IgniteCache<?,?> cache = grid(g).cache(\"co\");\n\n                        assertEquals(rRes, cache.query(new SqlFieldsQuery(REPLICATED_QRY)).getAll());\n                    }\n\n                    locks.set(g, 0);\n\n                    int c = qryCnt.incrementAndGet();\n\n                    if (c % logFreq == 0)\n                        info(\"Executed queries: \" + c);\n                }\n            }\n        }, qryThreadNum);\n\n        final AtomicInteger restartCnt = new AtomicInteger();\n\n        final AtomicBoolean restartsDone = new AtomicBoolean();\n\n        IgniteInternalFuture<?> fut2 = multithreadedAsync(new Callable<Object>() {\n            @SuppressWarnings({\"BusyWait\"})\n            @Override public Object call() throws Exception {\n                GridRandom rnd = new GridRandom();\n\n                while (!restartsDone.get()) {\n                    int g;\n\n                    do {\n                        g = rnd.nextInt(locks.length());\n                    }\n                    while (!locks.compareAndSet(g, 0, -1));\n\n                    stopGrid(g);\n\n                    Thread.sleep(rnd.nextInt(nodeLifeTime));\n\n                    startGrid(g);\n\n                    Thread.sleep(rnd.nextInt(nodeLifeTime));\n\n                    locks.set(g, 0);\n\n                    int c = restartCnt.incrementAndGet();\n\n                    if (c % logFreq == 0)\n                        info(\"Node restarts: \" + c);\n                }\n\n                return true;\n            }\n        }, restartThreadsNum);\n\n        Thread.sleep(duration);\n\n        info(\"Stopping..\");\n\n        restartsDone.set(true);\n\n        fut2.get();\n\n        info(\"Restarts stopped.\");\n\n        qrysDone.set(true);\n\n        fut1.get();\n\n        info(\"Queries stopped.\");\n    }","id":63091,"modified_method":"/**\n     * JUnit.\n     *\n     * @throws Exception If failed.\n     */\n    public void testRestarts() throws Exception {\n        int duration = 150 * 1000;\n        int qryThreadNum = 4;\n        int restartThreadsNum = 2; // 4 + 2 = 6 nodes\n        final int nodeLifeTime = 2 * 1000;\n        final int logFreq = 10;\n\n        startGridsMultiThreaded(GRID_CNT);\n\n        final AtomicIntegerArray locks = new AtomicIntegerArray(GRID_CNT);\n\n        fillCaches();\n\n        final List<List<?>> pRes = grid(0).cache(\"pu\").query(new SqlFieldsQuery(PARTITIONED_QRY)).getAll();\n\n        Thread.sleep(3000);\n\n        assertEquals(pRes, grid(0).cache(\"pu\").query(new SqlFieldsQuery(PARTITIONED_QRY)).getAll());\n\n        final List<List<?>> rRes = grid(0).cache(\"co\").query(new SqlFieldsQuery(REPLICATED_QRY)).getAll();\n\n        final AtomicInteger qryCnt = new AtomicInteger();\n\n        final AtomicBoolean qrysDone = new AtomicBoolean();\n\n        IgniteInternalFuture<?> fut1 = multithreadedAsync(new CAX() {\n            @Override public void applyx() throws IgniteCheckedException {\n                GridRandom rnd = new GridRandom();\n\n                while (!qrysDone.get()) {\n                    int g;\n\n                    do {\n                        g = rnd.nextInt(locks.length());\n                    }\n                    while (!locks.compareAndSet(g, 0, 1));\n\n                    if (rnd.nextBoolean()) { // Partitioned query.\n                        IgniteCache<?,?> cache = grid(g).cache(\"pu\");\n\n                        assertEquals(pRes, cache.query(new SqlFieldsQuery(PARTITIONED_QRY)).getAll());\n                    }\n                    else { // Replicated query.\n                        IgniteCache<?,?> cache = grid(g).cache(\"co\");\n\n                        assertEquals(rRes, cache.query(new SqlFieldsQuery(REPLICATED_QRY)).getAll());\n                    }\n\n                    locks.set(g, 0);\n\n                    int c = qryCnt.incrementAndGet();\n\n                    if (c % logFreq == 0)\n                        info(\"Executed queries: \" + c);\n                }\n            }\n        }, qryThreadNum);\n\n        final AtomicInteger restartCnt = new AtomicInteger();\n\n        final AtomicBoolean restartsDone = new AtomicBoolean();\n\n        IgniteInternalFuture<?> fut2 = multithreadedAsync(new Callable<Object>() {\n            @SuppressWarnings({\"BusyWait\"})\n            @Override public Object call() throws Exception {\n                GridRandom rnd = new GridRandom();\n\n                while (!restartsDone.get()) {\n                    int g;\n\n                    do {\n                        g = rnd.nextInt(locks.length());\n                    }\n                    while (!locks.compareAndSet(g, 0, -1));\n\n                    stopGrid(g);\n\n                    Thread.sleep(rnd.nextInt(nodeLifeTime));\n\n                    startGrid(g);\n\n                    Thread.sleep(rnd.nextInt(nodeLifeTime));\n\n                    locks.set(g, 0);\n\n                    int c = restartCnt.incrementAndGet();\n\n                    if (c % logFreq == 0)\n                        info(\"Node restarts: \" + c);\n                }\n\n                return true;\n            }\n        }, restartThreadsNum);\n\n        Thread.sleep(duration);\n\n        info(\"Stopping..\");\n\n        restartsDone.set(true);\n\n        fut2.get();\n\n        info(\"Restarts stopped.\");\n\n        qrysDone.set(true);\n\n        fut1.get();\n\n        info(\"Queries stopped.\");\n    }","commit_id":"7e3f924b2f6f2dcc0a942cdc569b7e27647de5cb","url":"https://github.com/apache/ignite"},{"original_method":"public static void marshal_2687243112288328542(ExportLabelContext ctx) {\n    SLinkOperations.setTarget(ctx.getKeeper(), MetaAdapterFactory.getReferenceLink(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x254b015f7d0f9f20L, 0x254b015f7d15de42L, \"clazz\"), ctx.getOutput());\n  }","id":63092,"modified_method":"public static void marshal_2687243112288328542(ExportLabelContext ctx) {\n    SPropertyOperations.set(ctx.getKeeper(), MetaAdapterFactory.getProperty(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x254b015f7d0f9f20L, 0x509450762bec97f8L, \"className\"), SPropertyOperations.getString(ctx.getOutput(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n  }","commit_id":"476c2d1bc135d902b831c87b12e8a49e7c4ddf82","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void unmarshal_2687243112288328544(ExportLabelContext ctx) {\n    SPropertyOperations.set(ctx.getOutput(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"), SPropertyOperations.getString(SLinkOperations.getTarget(ctx.getKeeper(), MetaAdapterFactory.getReferenceLink(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x254b015f7d0f9f20L, 0x254b015f7d15de42L, \"clazz\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n  }","id":63093,"modified_method":"public static void unmarshal_2687243112288328544(ExportLabelContext ctx) {\n    SPropertyOperations.set(ctx.getOutput(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"), SPropertyOperations.getString(ctx.getKeeper(), MetaAdapterFactory.getProperty(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x254b015f7d0f9f20L, 0x509450762bec97f8L, \"className\")));\n  }","commit_id":"476c2d1bc135d902b831c87b12e8a49e7c4ddf82","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String packageName(@NotNull SNode node) {\n    return SModelOperations.getModelName(SNodeOperations.getModel(node));\n  }","id":63094,"modified_method":"public static String packageName(@NotNull SNode node) {\n    String packageName = SModelOperations.getModelName(SNodeOperations.getModel(node));\n    return (packageName != null ? packageName : \"\");\n  }","commit_id":"4db95bd97049397a0a2da8c89e87620456931515","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String fqClassName(@NotNull SModel model, @NotNull String shortClassName) {\n    String packageName = packageName(model);\n    if (packageName == null || packageName.length() == 0) {\n      return shortClassName;\n    }\n    return packageName + \".\" + shortClassName;\n  }","id":63095,"modified_method":"public static String fqClassName(@NotNull SModel model, @NotNull String shortClassName) {\n    String packageName = packageName(model);\n    if (packageName == null || packageName.length() == 0) {\n      return shortClassName;\n    }\n    return packageName + '.' + shortClassName;\n  }","commit_id":"6813cdee23f2920fe3c95578485ce2fcfa6c7720","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static boolean isJavaIdentifier(@NotNull String text) {\n    int len = text.length();\n    if (len == 0) return false;\n\n    if (!isJavaIdentifierStart(text.charAt(0))) return false;\n\n    for (int i = 1; i < len; i++) {\n      if (!isJavaIdentifierPart(text.charAt(i))) return false;\n    }\n\n    return !(JAVA_KEYWORDS.contains(text));\n  }","id":63096,"modified_method":"public static boolean isJavaIdentifier(@NotNull String text) {\n    int len = text.length();\n    if (len == 0) return false;\n\n    if (!Character.isJavaIdentifierStart(text.charAt(0))) {\n      return false;\n    }\n\n    for (int i = 1; i < len; i++) {\n      if (!Character.isJavaIdentifierPart(text.charAt(i))) {\n        return false;\n      }\n    }\n\n    return !(JAVA_KEYWORDS.contains(text));\n  }","commit_id":"6813cdee23f2920fe3c95578485ce2fcfa6c7720","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String packageNameForModelUID(@NotNull SModelReference modelReference) {\n    String packageName = modelReference.getModelName();\n    int atIndex = packageName.indexOf('@');\n    return atIndex == -1 ? packageName : packageName.substring(0, atIndex);\n  }","id":63097,"modified_method":"public static String packageNameForModelUID(@NotNull SModelReference modelReference) {\n    return SModelStereotype.withoutStereotype(modelReference.getModelName());\n  }","commit_id":"6813cdee23f2920fe3c95578485ce2fcfa6c7720","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void updateFields() {\n    ModelAccess.instance().runReadAction(new Runnable() {\n      @Override\n      public void run() {\n        SModel model = myModelReference.resolve(MPSModuleRepository.getInstance());\n        if (model == null) {\n          LOG.error(new Throwable(\"Model resolve failed for SModelReference: \" + myModelReference.toString()));\n          myName = \"\";\n          myPath = \"\";\n        } else {\n          myName = JavaNameUtil.shortName(String.valueOf(model.getModelName()));\n          myPath = MODEL_PREFIX + NiceReferenceSerializer.serializeModel(model);\n        }\n      }\n    });\n  }","id":63098,"modified_method":"private void updateFields() {\n    myFileSystem.getRepository().getModelAccess().runReadAction(new Runnable() {\n      @Override\n      public void run() {\n        SModel model = myModelReference.resolve(myFileSystem.getRepository());\n        if (model == null) {\n          LOG.error(new Throwable(\"Model resolve failed for SModelReference: \" + myModelReference.toString()));\n          myName = \"\";\n          myPath = \"\";\n        } else {\n          myName = NameUtil.shortNameFromLongName(model.getModelName());\n          myPath = MODEL_PREFIX + NiceReferenceSerializer.serializeModel(model);\n        }\n      }\n    });\n  }","commit_id":"6813cdee23f2920fe3c95578485ce2fcfa6c7720","url":"https://github.com/JetBrains/MPS"},{"original_method":"MPSModelVirtualFile(SModelReference modelReference) {\n    myModelReference = modelReference;\n    updateFields();\n  }","id":63099,"modified_method":"MPSModelVirtualFile(@NotNull SModelReference modelReference, @NotNull MPSNodesVirtualFileSystem vfs) {\n    myModelReference = modelReference;\n    myFileSystem = vfs;\n    updateFields();\n  }","commit_id":"6813cdee23f2920fe3c95578485ce2fcfa6c7720","url":"https://github.com/JetBrains/MPS"},{"original_method":"@NotNull\n  @Override\n  public VirtualFileSystem getFileSystem() {\n    return MPSNodesVirtualFileSystem.getInstance();\n  }","id":63100,"modified_method":"@NotNull\n  @Override\n  public VirtualFileSystem getFileSystem() {\n    return myFileSystem;\n  }","commit_id":"6813cdee23f2920fe3c95578485ce2fcfa6c7720","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public VirtualFile getParent() {\n    // hack\n    return ModelAccess.instance().runReadAction(new Computable<VirtualFile>() {\n      @Override\n      public VirtualFile compute() {\n        if (myModelReference == null) return null;\n        SModel model = myModelReference.resolve(MPSModuleRepository.getInstance());\n        if (model == null) return null;\n        DataSource ds = model.getSource();\n        if (ds instanceof FileDataSource) {\n          return VirtualFileUtils.getVirtualFile(((FileDataSource) ds).getFile());\n        } else if (ds instanceof FolderDataSource) {\n          return VirtualFileUtils.getVirtualFile(((FolderDataSource) ds).getFolder());\n        } else {\n          return null;\n        }\n      }\n    });\n  }","id":63101,"modified_method":"@Override\n  public VirtualFile getParent() {\n    // hack\n    return new ModelAccessHelper(myFileSystem.getRepository()).runReadAction(new Computable<VirtualFile>() {\n      @Override\n      public VirtualFile compute() {\n        SModel model = myModelReference.resolve(myFileSystem.getRepository());\n        if (model == null) {\n          return null;\n        }\n        DataSource ds = model.getSource();\n        if (ds instanceof FileDataSource) {\n          return VirtualFileUtils.getVirtualFile(((FileDataSource) ds).getFile());\n        } else if (ds instanceof FolderDataSource) {\n          return VirtualFileUtils.getVirtualFile(((FolderDataSource) ds).getFolder());\n        } else {\n          return null;\n        }\n      }\n    });\n  }","commit_id":"6813cdee23f2920fe3c95578485ce2fcfa6c7720","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  @Nullable\n  public VirtualFile getParent() {\n    // Returning the parent of this node's model virtual file\n    // i.e. a real directory wherein the model file lives\n    // Needed for idea scope to work (see PsiSearchScopeUtil.isInScope)\n    if (myNode == null || myNode.getModelReference() == null) return null;\n    final SRepository repo = MPSModuleRepository.getInstance();\n    return new ModelAccessHelper(repo).runReadAction(new Computable<VirtualFile>() {\n      @Override\n      public VirtualFile compute() {\n        org.jetbrains.mps.openapi.model.SModelReference modelRef = myNode.getModelReference();\n        if (modelRef.resolve(repo) == null) {\n          return null;\n        }\n        MPSModelVirtualFile modelVFile = myFileSystem.getFileFor(modelRef);\n        if (modelVFile != null) {\n          return modelVFile.getParent();\n        }\n        return null;\n      }\n    });\n  }","id":63102,"modified_method":"@Override\n  @Nullable\n  public VirtualFile getParent() {\n    // Returning the parent of this node's model virtual file\n    // i.e. a real directory wherein the model file lives\n    // Needed for idea scope to work (see PsiSearchScopeUtil.isInScope)\n    // but why it's not MPSModelVirtualFile that serves as parent for node VF?\n    if (myNode == null || myNode.getModelReference() == null) return null;\n    return new ModelAccessHelper(myFileSystem.getRepository()).runReadAction(new Computable<VirtualFile>() {\n      @Override\n      public VirtualFile compute() {\n        org.jetbrains.mps.openapi.model.SModelReference modelRef = myNode.getModelReference();\n        if (modelRef.resolve(myFileSystem.getRepository()) == null) {\n          return null;\n        }\n        MPSModelVirtualFile modelVFile = myFileSystem.getFileFor(modelRef);\n        if (modelVFile != null) {\n          return modelVFile.getParent();\n        }\n        return null;\n      }\n    });\n  }","commit_id":"6813cdee23f2920fe3c95578485ce2fcfa6c7720","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode getNode() {\n    return myNode.resolve(MPSModuleRepository.getInstance());\n  }","id":63103,"modified_method":"public SNode getNode() {\n    return myNode.resolve(myFileSystem.getRepository());\n  }","commit_id":"6813cdee23f2920fe3c95578485ce2fcfa6c7720","url":"https://github.com/JetBrains/MPS"},{"original_method":"MPSNodeVirtualFile(@NotNull SNodeReference nodePointer, @NotNull MPSNodesVirtualFileSystem vfs) {\n    myNode = nodePointer;\n    myFileSystem = vfs;\n    SModel model = nodePointer.getModelReference() == null ? null : nodePointer.getModelReference().resolve(MPSModuleRepository.getInstance());\n    if (model != null) {\n      myTimeStamp = model.getSource().getTimestamp();\n    }\n    updateFields();\n  }","id":63104,"modified_method":"MPSNodeVirtualFile(@NotNull SNodeReference nodePointer, @NotNull MPSNodesVirtualFileSystem vfs) {\n    myNode = nodePointer;\n    myFileSystem = vfs;\n    updateFields();\n  }","commit_id":"6813cdee23f2920fe3c95578485ce2fcfa6c7720","url":"https://github.com/JetBrains/MPS"},{"original_method":"void updateFields() {\n    ModelAccess.instance().runReadAction(new Runnable() {\n      @Override\n      public void run() {\n        SNode node = myNode.resolve(MPSModuleRepository.getInstance());\n        if (node == null) {\n          LOG.error(new Throwable(\"Cannot find node for passed SNodeReference: \" + myNode.toString()));\n          myName = myPresentationName = \"\";\n          myPath = \"\";\n        } else {\n          myName = myPresentationName = String.valueOf(node.getPresentation());\n          if (node.getModel() != null && node.getModel().getModule() instanceof TransientSModule) {\n            // it's common to open same node from different generation steps (transient models)\n            // and to tell nodes from different steps we append model's identification\n            final String s = SModelStereotype.getStereotype(node.getModel());\n            if (!s.isEmpty()) {\n              myPresentationName = myName + '@' + s;\n            }\n          }\n          myPath = NODE_PREFIX + NiceReferenceSerializer.serializeNode(node);\n        }\n      }\n    });\n  }","id":63105,"modified_method":"void updateFields() {\n    myFileSystem.getRepository().getModelAccess().runReadAction(new Runnable() {\n      @Override\n      public void run() {\n        SNode node = myNode.resolve(myFileSystem.getRepository());\n        if (node == null) {\n          LOG.error(new Throwable(\"Cannot find node for passed SNodeReference: \" + myNode.toString()));\n          myName = myPresentationName = \"\";\n          myPath = \"\";\n        } else {\n          myName = myPresentationName = String.valueOf(node.getPresentation());\n          if (node.getModel() != null && node.getModel().getModule() instanceof TransientSModule) {\n            // it's common to open same node from different generation steps (transient models)\n            // and to tell nodes from different steps we append model's identification\n            final String s = SModelStereotype.getStereotype(node.getModel());\n            if (!s.isEmpty()) {\n              myPresentationName = myName + '@' + s;\n            }\n          }\n          myPath = NODE_PREFIX + NiceReferenceSerializer.serializeNode(node);\n          myTimeStamp = node.getModel().getSource().getTimestamp();\n        }\n      }\n    });\n  }","commit_id":"6813cdee23f2920fe3c95578485ce2fcfa6c7720","url":"https://github.com/JetBrains/MPS"},{"original_method":"public MPSNodesVirtualFileSystem(MPSCoreComponents coreComponents) {\n    // FIXME this component shall be ProjectComponent, pass MPSProject.getRepository(); initialize in projectOpened()\n    myRepositoryListener = new MyRepositoryListener(coreComponents.getModuleRepository());\n  }","id":63106,"modified_method":"public MPSNodesVirtualFileSystem(MPSCoreComponents coreComponents) {\n    // FIXME this component shall be ProjectComponent, pass MPSProject.getRepository(); initialize in projectOpened()\n    myRepository = coreComponents.getModuleRepository();\n    myRepositoryListener = new MyRepositoryListener(myRepository);\n  }","commit_id":"6813cdee23f2920fe3c95578485ce2fcfa6c7720","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void initComponent() {\n    GlobalSModelEventsManager.getInstance().addGlobalCommandListener(myCommandListener);\n    GlobalSModelEventsManager.getInstance().addGlobalModelListener(myModelListener);\n\n    // FIXME use mpsProject.getRepository once it's capable to send events\n    new RepoListenerRegistrar(MPSModuleRepository.getInstance(), myRepositoryListener).attach();\n  }","id":63107,"modified_method":"@Override\n  public void initComponent() {\n    // can change to openapi.CommandListener once have visitor support for new model events\n    GlobalSModelEventsManager.getInstance().addGlobalCommandListener(myCommandListener);\n    // can't change to repository listener as it doesn't react to model import changes\n    GlobalSModelEventsManager.getInstance().addGlobalModelListener(myModelListener);\n\n    // FIXME use mpsProject.getRepository or myRepository once it's capable to send module add/remove events\n    assert myRepository == MPSModuleRepository.getInstance();\n    new RepoListenerRegistrar(myRepository, myRepositoryListener).attach();\n  }","commit_id":"6813cdee23f2920fe3c95578485ce2fcfa6c7720","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void disposeComponent() {\n    // FIXME use mpsProject.getRepository once it's capable to send events\n    new RepoListenerRegistrar(MPSModuleRepository.getInstance(), myRepositoryListener).detach();\n\n    GlobalSModelEventsManager.getInstance().removeGlobalModelListener(myModelListener);\n    GlobalSModelEventsManager.getInstance().removeGlobalCommandListener(myCommandListener);\n    myDisposed = true;\n  }","id":63108,"modified_method":"@Override\n  public void disposeComponent() {\n    new RepoListenerRegistrar(myRepository, myRepositoryListener).detach();\n\n    GlobalSModelEventsManager.getInstance().removeGlobalModelListener(myModelListener);\n    GlobalSModelEventsManager.getInstance().removeGlobalCommandListener(myCommandListener);\n    myDisposed = true;\n  }","commit_id":"6813cdee23f2920fe3c95578485ce2fcfa6c7720","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public void visitPropertyEvent(final SModelPropertyEvent event) {\n      if (!SNodeUtil.isAccessible(event.getNode(), MPSModuleRepository.getInstance())) return;\n\n      MPSNodeVirtualFile vf = getVirtualFile(new jetbrains.mps.smodel.SNodePointer(event.getModel().getReference(), event.getNode().getNodeId()));\n      if (!(event.getNode().getModel() != null && event.getNode().getParent() == null) || vf == null)\n        return;\n      String newName = event.getNode().getPresentation();\n      if (!newName.equals(vf.getName())) {\n        myRenamedFiles.add(new Pair<MPSNodeVirtualFile, String>(vf, newName));\n      }\n    }","id":63109,"modified_method":"@Override\n    public void visitPropertyEvent(final SModelPropertyEvent event) {\n      MPSNodeVirtualFile vf = getVirtualFile(new jetbrains.mps.smodel.SNodePointer(event.getModel().getReference(), event.getNode().getNodeId()));\n      if (!(event.getNode().getModel() != null && event.getNode().getParent() == null) || vf == null)\n        return;\n      String newName = event.getNode().getPresentation();\n      if (!newName.equals(vf.getName())) {\n        myRenamedFiles.add(new Pair<MPSNodeVirtualFile, String>(vf, newName));\n      }\n    }","commit_id":"6813cdee23f2920fe3c95578485ce2fcfa6c7720","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  @Nullable\n  public VirtualFile findFileByPath(final @NotNull @NonNls String path) {\n    return ModelAccess.instance().runReadAction(new Computable<VirtualFile>() {\n      @Override\n      public VirtualFile compute() {\n        try {\n          if (path.startsWith(MPSNodeVirtualFile.NODE_PREFIX)) {\n            SNode node = NiceReferenceSerializer.deserializeNode(MPSModuleRepository.getInstance(), path.substring(MPSNodeVirtualFile.NODE_PREFIX.length()));\n            if (node == null) {\n              return null;\n            }\n            return getFileFor(node);\n          } else if (path.startsWith(MPSModelVirtualFile.MODEL_PREFIX)) {\n            SModel model =\n                NiceReferenceSerializer.deserializeModel(MPSModuleRepository.getInstance(), path.substring(MPSModelVirtualFile.MODEL_PREFIX.length()));\n            if (model == null) {\n              return null;\n            }\n            return getFileFor(model.getReference());\n          }\n        } catch (IllegalArgumentException e) {\n          // ignore, parse model ref exception\n        }\n        return null;\n      }\n    });\n  }","id":63110,"modified_method":"@Override\n  @Nullable\n  public VirtualFile findFileByPath(final @NotNull @NonNls String path) {\n    return new ModelAccessHelper(myRepository).runReadAction(new Computable<VirtualFile>() {\n      @Override\n      public VirtualFile compute() {\n        try {\n          if (path.startsWith(MPSNodeVirtualFile.NODE_PREFIX)) {\n            SNode node = NiceReferenceSerializer.deserializeNode(myRepository, path.substring(MPSNodeVirtualFile.NODE_PREFIX.length()));\n            if (node == null) {\n              return null;\n            }\n            return getFileFor(node);\n          } else if (path.startsWith(MPSModelVirtualFile.MODEL_PREFIX)) {\n            SModel model =\n                NiceReferenceSerializer.deserializeModel(myRepository, path.substring(MPSModelVirtualFile.MODEL_PREFIX.length()));\n            if (model == null) {\n              return null;\n            }\n            return getFileFor(model.getReference());\n          }\n        } catch (IllegalArgumentException e) {\n          // ignore, parse model ref exception\n        }\n        return null;\n      }\n    });\n  }","commit_id":"6813cdee23f2920fe3c95578485ce2fcfa6c7720","url":"https://github.com/JetBrains/MPS"},{"original_method":"public MPSModelVirtualFile getFileFor(@NotNull final SModelReference modelReference) {\n    if (myModelVirtualFiles.containsKey(modelReference)) return myModelVirtualFiles.get(modelReference);\n\n    final MPSModelVirtualFile vf = new MPSModelVirtualFile(modelReference);\n    myModelVirtualFiles.put(modelReference, vf);\n\n    return vf;\n  }","id":63111,"modified_method":"public MPSModelVirtualFile getFileFor(@NotNull final SModelReference modelReference) {\n    if (myModelVirtualFiles.containsKey(modelReference)) {\n      return myModelVirtualFiles.get(modelReference);\n    }\n\n    final MPSModelVirtualFile vf = new MPSModelVirtualFile(modelReference, this);\n    myModelVirtualFiles.put(modelReference, vf);\n\n    return vf;\n  }","commit_id":"6813cdee23f2920fe3c95578485ce2fcfa6c7720","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String packageName(@NotNull SNode node) {\n    return SModelOperations.getModelName(SNodeOperations.getModel(node));\n  }","id":63112,"modified_method":"public static String packageName(@NotNull SNode node) {\n    String packageName = SModelOperations.getModelName(SNodeOperations.getModel(node));\n    return (packageName != null ? packageName : \"\");\n  }","commit_id":"768b48b6158efabad0021d65f7fc582ba3b79040","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String getModelName() {\n    return myNodeResult.getNodeReference().getModelReference().getModelName();\n  }","id":63113,"modified_method":"public String getModelName() {\n    SModelReference modelReference = myNodeResult.getNodeReference().getModelReference();\n    return modelReference.getModuleReference() == null\n        ? modelReference.getModelName()\n        : modelReference.getModuleReference().getModuleName() + \"/\" + myNodeResult.getNodeReference().getModelReference().getModelName();\n  }","commit_id":"f39235de730071682178a1756d280b3898a94f8c","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected void copyTemplates(\n\t\t\tActionRequest actionRequest, long structureId, long newStructureId)\n\t\tthrows Exception {\n\n\t\tlong classNameId = PortalUtil.getClassNameId(DDMStructure.class);\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tDDMTemplate.class.getName(), actionRequest);\n\n\t\tboolean copyDisplayTemplates = ParamUtil.getBoolean(\n\t\t\tactionRequest, \"copyDisplayTemplates\");\n\n\t\tif (copyDisplayTemplates) {\n\t\t\tDDMTemplateServiceUtil.copyTemplates(\n\t\t\t\tclassNameId, structureId, newStructureId,\n\t\t\t\tDDMTemplateConstants.TEMPLATE_TYPE_DISPLAY, serviceContext);\n\t\t}\n\n\t\tboolean copyFormTemplates = ParamUtil.getBoolean(\n\t\t\tactionRequest, \"copyFormTemplates\");\n\n\t\tif (copyFormTemplates) {\n\t\t\tDDMTemplateServiceUtil.copyTemplates(\n\t\t\t\tclassNameId, structureId, newStructureId,\n\t\t\t\tDDMTemplateConstants.TEMPLATE_TYPE_FORM, serviceContext);\n\t\t}\n\t}","id":63114,"modified_method":"protected void copyTemplates(\n\t\t\tActionRequest actionRequest, long oldClassPK, long newClassPK)\n\t\tthrows Exception {\n\n\t\tlong classNameId = PortalUtil.getClassNameId(DDMStructure.class);\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tDDMTemplate.class.getName(), actionRequest);\n\n\t\tboolean copyDisplayTemplates = ParamUtil.getBoolean(\n\t\t\tactionRequest, \"copyDisplayTemplates\");\n\n\t\tif (copyDisplayTemplates) {\n\t\t\tDDMTemplateServiceUtil.copyTemplates(\n\t\t\t\tclassNameId, oldClassPK, newClassPK,\n\t\t\t\tDDMTemplateConstants.TEMPLATE_TYPE_DISPLAY, serviceContext);\n\t\t}\n\n\t\tboolean copyFormTemplates = ParamUtil.getBoolean(\n\t\t\tactionRequest, \"copyFormTemplates\");\n\n\t\tif (copyFormTemplates) {\n\t\t\tDDMTemplateServiceUtil.copyTemplates(\n\t\t\t\tclassNameId, oldClassPK, newClassPK,\n\t\t\t\tDDMTemplateConstants.TEMPLATE_TYPE_FORM, serviceContext);\n\t\t}\n\t}","commit_id":"84ba3e2d90f444fa8c1e53ff5ddcc61ca1042417","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Copies the template, creating a new template with all the values\n\t * extracted from the original one. This method supports defining a new name\n\t * and description.\n\t *\n\t * @param  userId the primary key of the template's creator/owner\n\t * @param  templateId the primary key of the template to be copied\n\t * @param  nameMap the new template's locales and localized names\n\t * @param  descriptionMap the new template's locales and localized\n\t *         descriptions\n\t * @param  serviceContext the service context to be applied. Can set the\n\t *         UUID, creation date, modification date, guest permissions, and\n\t *         group permissions for the template.\n\t * @return the new template\n\t * @throws PortalException if a portal exception occurred\n\t * @throws SystemException if a system exception occurred\n\t */\n\t@Override\n\tpublic DDMTemplate copyTemplate(\n\t\t\tlong userId, long templateId, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, ServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\tDDMTemplate template = ddmTemplatePersistence.findByPrimaryKey(\n\t\t\ttemplateId);\n\n\t\tFile smallImageFile = copySmallImage(template);\n\n\t\treturn addTemplate(\n\t\t\tuserId, template.getGroupId(), template.getClassNameId(),\n\t\t\ttemplate.getClassPK(), null, nameMap, descriptionMap,\n\t\t\ttemplate.getType(), template.getMode(), template.getLanguage(),\n\t\t\ttemplate.getScript(), template.isCacheable(),\n\t\t\ttemplate.isSmallImage(), template.getSmallImageURL(),\n\t\t\tsmallImageFile, serviceContext);\n\t}","id":63115,"modified_method":"/**\n\t * Copies the template, creating a new template with all the values\n\t * extracted from the original one. This method supports defining a new name\n\t * and description.\n\t *\n\t * @param  userId the primary key of the template's creator/owner\n\t * @param  templateId the primary key of the template to be copied\n\t * @param  nameMap the new template's locales and localized names\n\t * @param  descriptionMap the new template's locales and localized\n\t *         descriptions\n\t * @param  serviceContext the service context to be applied. Can set the\n\t *         UUID, creation date, modification date, guest permissions, and\n\t *         group permissions for the template.\n\t * @return the new template\n\t * @throws PortalException if a portal exception occurred\n\t * @throws SystemException if a system exception occurred\n\t */\n\t@Override\n\tpublic DDMTemplate copyTemplate(\n\t\t\tlong userId, long templateId, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, ServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\tDDMTemplate template = ddmTemplatePersistence.findByPrimaryKey(\n\t\t\ttemplateId);\n\n\t\treturn copyTemplate(\n\t\t\tuserId, template, template.getClassPK(), nameMap, descriptionMap,\n\t\t\tserviceContext);\n\t}","commit_id":"84ba3e2d90f444fa8c1e53ff5ddcc61ca1042417","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic DDMTemplate copyTemplate(\n\t\t\tlong userId, long templateId, ServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\tDDMTemplate template = ddmTemplatePersistence.findByPrimaryKey(\n\t\t\ttemplateId);\n\n\t\tFile smallImageFile = copySmallImage(template);\n\n\t\treturn addTemplate(\n\t\t\tuserId, template.getGroupId(), template.getClassNameId(),\n\t\t\ttemplate.getClassPK(), null, template.getNameMap(),\n\t\t\ttemplate.getDescriptionMap(), template.getType(),\n\t\t\ttemplate.getMode(), template.getLanguage(), template.getScript(),\n\t\t\ttemplate.isCacheable(), template.isSmallImage(),\n\t\t\ttemplate.getSmallImageURL(), smallImageFile, serviceContext);\n\t}","id":63116,"modified_method":"@Override\n\tpublic DDMTemplate copyTemplate(\n\t\t\tlong userId, long templateId, ServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\tDDMTemplate template = ddmTemplatePersistence.findByPrimaryKey(\n\t\t\ttemplateId);\n\n\t\treturn copyTemplate(\n\t\t\tuserId, template, template.getClassPK(), template.getNameMap(),\n\t\t\ttemplate.getDescriptionMap(), serviceContext);\n\t}","commit_id":"84ba3e2d90f444fa8c1e53ff5ddcc61ca1042417","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Copies all the templates matching the class name ID, class PK, and type.\n\t * This method creates new templates, extracting all the values from the old\n\t * ones and updating their class PKs.\n\t *\n\t * @param  userId the primary key of the template's creator/owner\n\t * @param  classNameId the primary key of the class name for the template's\n\t *         related model\n\t * @param  oldClassPK the primary key of the old template's related entity\n\t * @param  newClassPK the primary key of the new template's related entity\n\t * @param  type the template's type. For more information, see {@link\n\t *         com.liferay.portlet.dynamicdatamapping.model.DDMTemplateConstants}.\n\t * @param  serviceContext the service context to be applied. Can set the\n\t *         creation date, modification date, guest permissions, and group\n\t *         permissions for the new templates.\n\t * @return the new templates\n\t * @throws PortalException if a portal exception occurred\n\t * @throws SystemException if a system exception occurred\n\t */\n\t@Override\n\tpublic List<DDMTemplate> copyTemplates(\n\t\t\tlong userId, long classNameId, long oldClassPK, long newClassPK,\n\t\t\tString type, ServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\tList<DDMTemplate> newTemplates = new ArrayList<DDMTemplate>();\n\n\t\tList<DDMTemplate> oldTemplates = ddmTemplatePersistence.findByC_C_T(\n\t\t\tclassNameId, oldClassPK, type);\n\n\t\tfor (DDMTemplate oldTemplate : oldTemplates) {\n\t\t\tDDMTemplate newTemplate = copyTemplate(\n\t\t\t\tuserId, oldTemplate.getTemplateId(), serviceContext);\n\n\t\t\tnewTemplates.add(newTemplate);\n\t\t}\n\n\t\treturn newTemplates;\n\t}","id":63117,"modified_method":"/**\n\t * Copies all the templates matching the class name ID, class PK, and type.\n\t * This method creates new templates, extracting all the values from the old\n\t * ones and updating their class PKs.\n\t *\n\t * @param  userId the primary key of the template's creator/owner\n\t * @param  classNameId the primary key of the class name for the template's\n\t *         related model\n\t * @param  oldClassPK the primary key of the old template's related entity\n\t * @param  newClassPK the primary key of the new template's related entity\n\t * @param  type the template's type. For more information, see {@link\n\t *         com.liferay.portlet.dynamicdatamapping.model.DDMTemplateConstants}.\n\t * @param  serviceContext the service context to be applied. Can set the\n\t *         creation date, modification date, guest permissions, and group\n\t *         permissions for the new templates.\n\t * @return the new templates\n\t * @throws PortalException if a portal exception occurred\n\t * @throws SystemException if a system exception occurred\n\t */\n\t@Override\n\tpublic List<DDMTemplate> copyTemplates(\n\t\t\tlong userId, long classNameId, long oldClassPK, long newClassPK,\n\t\t\tString type, ServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\tList<DDMTemplate> newTemplates = new ArrayList<DDMTemplate>();\n\n\t\tList<DDMTemplate> oldTemplates = ddmTemplatePersistence.findByC_C_T(\n\t\t\tclassNameId, oldClassPK, type);\n\n\t\tfor (DDMTemplate oldTemplate : oldTemplates) {\n\t\t\tDDMTemplate newTemplate = copyTemplate(\n\t\t\t\tuserId, oldTemplate, newClassPK, oldTemplate.getNameMap(),\n\t\t\t\toldTemplate.getDescriptionMap(), serviceContext);\n\n\t\t\tnewTemplates.add(newTemplate);\n\t\t}\n\n\t\treturn newTemplates;\n\t}","commit_id":"84ba3e2d90f444fa8c1e53ff5ddcc61ca1042417","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public Object[] get(PsiElement context, CompletionContext completionContext) {\n    if(context == null || !context.isValid()) return ArrayUtil.EMPTY_OBJECT_ARRAY;\n\n    final List<PsiClass> classesList = new ArrayList<PsiClass>();\n    final PsiManager manager = context.getManager();\n    final PsiShortNamesCache cache = manager.getShortNamesCache();\n    // Optimization:\n    final String prefix = context.getUserData(CompletionUtil.COMPLETION_PREFIX);\n\n    if(myPrefixStr != prefix){\n      myMatcher = new Perl5Matcher();\n      myPattern = CompletionUtil.createCampelHumpsMatcher(prefix);\n    }\n\n    final GlobalSearchScope scope = context.getContainingFile().getResolveScope();\n\n    final String[] names = cache.getAllClassNames(true);\n    for (final String name : names) {\n      if (prefix != null && !(CompletionUtil.checkName(name, prefix) || myMatcher.matches(name, myPattern))) continue;\n      classesList.addAll(Arrays.asList(cache.getClassesByName(name, scope)));\n    }\n\n    Collections.sort(classesList, new Comparator<PsiClass>() {\n      public int compare(PsiClass psiClass, PsiClass psiClass1) {\n        if(manager.areElementsEquivalent(psiClass, psiClass1)) return 0;\n\n        return getClassIndex(psiClass) - getClassIndex(psiClass1);\n      }\n\n      private int getClassIndex(PsiClass psiClass){\n        if(psiClass.getManager().isInProject(psiClass)) return 2;\n        final String qualifiedName = psiClass.getQualifiedName();\n        if(qualifiedName.startsWith(\"java.\") || qualifiedName.startsWith(\"javax.\")) return 1;\n        return 0;\n      }\n\n      public boolean equals(Object o) {\n        return o == this;\n      }\n    });\n\n    return classesList.toArray(PsiClass.EMPTY_ARRAY);\n  }","id":63118,"modified_method":"public Object[] get(PsiElement context, CompletionContext completionContext) {\n    if(context == null || !context.isValid()) return ArrayUtil.EMPTY_OBJECT_ARRAY;\n\n    final List<PsiClass> classesList = new ArrayList<PsiClass>();\n    final PsiManager manager = context.getManager();\n    final PsiShortNamesCache cache = manager.getShortNamesCache();\n    // Optimization:\n    final String prefix = context.getUserData(CompletionUtil.COMPLETION_PREFIX);\n\n    if(myPrefixStr != prefix){\n      myMatcher = new Perl5Matcher();\n      myPattern = CompletionUtil.createCampelHumpsMatcher(prefix);\n    }\n\n    final GlobalSearchScope scope = context.getContainingFile().getResolveScope();\n    final String[] names = cache.getAllClassNames(true);\n    \n    boolean lookingForAnnotations = false;\n    final PsiElement prevSibling = context.getParent().getPrevSibling();\n    if (prevSibling instanceof PsiJavaToken && \n        ((PsiJavaToken)prevSibling).getTokenType() == JavaTokenType.AT) {\n      lookingForAnnotations = true;\n    }\n\n    for (final String name : names) {\n      if (prefix != null && !(CompletionUtil.checkName(name, prefix) || myMatcher.matches(name, myPattern))) continue;\n      final PsiClass[] classesByName = cache.getClassesByName(name, scope);\n      \n      if (lookingForAnnotations) {\n        for (PsiClass psiClass : classesByName) {\n          if (psiClass.isAnnotationType()) {\n            classesList.add(psiClass);\n          }\n        }\n      } else {\n        classesList.addAll(Arrays.asList(classesByName));\n      }\n    }\n\n    Collections.sort(classesList, new Comparator<PsiClass>() {\n      public int compare(PsiClass psiClass, PsiClass psiClass1) {\n        if(manager.areElementsEquivalent(psiClass, psiClass1)) return 0;\n\n        return getClassIndex(psiClass) - getClassIndex(psiClass1);\n      }\n\n      private int getClassIndex(PsiClass psiClass){\n        if(psiClass.getManager().isInProject(psiClass)) return 2;\n        final String qualifiedName = psiClass.getQualifiedName();\n        if(qualifiedName.startsWith(\"java.\") || qualifiedName.startsWith(\"javax.\")) return 1;\n        return 0;\n      }\n\n      public boolean equals(Object o) {\n        return o == this;\n      }\n    });\n\n    return classesList.toArray(PsiClass.EMPTY_ARRAY);\n  }","commit_id":"22be6bc37b5b584c6ed16b71fd4e97b97db86070","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean isNonOpenable(PsiMember member) {\n    return member.getContainingFile().getVirtualFile() == null;\n  }","id":63119,"modified_method":"private static boolean isOpenable(PsiMember member) {\n    return member.getContainingFile().getVirtualFile() != null;\n  }","commit_id":"58b111fc88666b9e7e160c1290c2a44d502fa642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  @NotNull\n  public NavigationItem[] getItemsByName(String name, final String pattern, Project project, boolean includeNonProjectItems) {\n    GlobalSearchScope scope = includeNonProjectItems ? GlobalSearchScope.allScope(project) : GlobalSearchScope.projectScope(project);\n    PsiShortNamesCache cache = PsiShortNamesCache.getInstance(project);\n\n    PsiMethod[] methods = cache.getMethodsByName(name, scope);\n    methods = filterInheritedMethods(methods);\n    PsiField[] fields = cache.getFieldsByName(name, scope);\n    PsiClass[] classes = cache.getClassesByName(name, scope);\n\n    List<PsiMember> result = new ArrayList<PsiMember>();\n    ContainerUtil.addAll(result, methods);\n    ContainerUtil.addAll(result, fields);\n    ContainerUtil.addAll(result, classes);\n    filterOutNonOpenable(result);\n    PsiMember[] array = result.toArray(new PsiMember[result.size()]);\n    Arrays.sort(array, MyComparator.INSTANCE);\n    return array;\n  }","id":63120,"modified_method":"@Override\n  @NotNull\n  public NavigationItem[] getItemsByName(String name, final String pattern, Project project, boolean includeNonProjectItems) {\n    GlobalSearchScope scope = includeNonProjectItems ? GlobalSearchScope.allScope(project) : GlobalSearchScope.projectScope(project);\n    PsiShortNamesCache cache = PsiShortNamesCache.getInstance(project);\n\n    List<PsiMember> result = new ArrayList<PsiMember>();\n    for (PsiMethod method : cache.getMethodsByName(name, scope)) {\n      if (!method.isConstructor() && isOpenable(method) && !hasSuperMethod(method)) {\n        result.add(method);\n      }\n    }\n    for (PsiField field : cache.getFieldsByName(name, scope)) {\n      if (isOpenable(field)) {\n        result.add(field);\n      }\n    }\n    for (PsiClass aClass : cache.getClassesByName(name, scope)) {\n      if (isOpenable(aClass)) {\n        result.add(aClass);\n      }\n    }\n    PsiMember[] array = result.toArray(new PsiMember[result.size()]);\n    Arrays.sort(array, MyComparator.INSTANCE);\n    return array;\n  }","commit_id":"58b111fc88666b9e7e160c1290c2a44d502fa642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Object[] get(PsiElement context, CompletionContext completionContext) {\n    if(context == null || !context.isValid()) return ArrayUtil.EMPTY_OBJECT_ARRAY;\n\n    final PsiManager manager = context.getManager();\n    final Set<PsiClass> classesSet = new THashSet<PsiClass>(new TObjectHashingStrategy<PsiClass>() {\n      public int computeHashCode(final PsiClass object) {\n        final String name = object.getQualifiedName();\n        return name != null ? name.hashCode() : 0;\n      }\n\n      public boolean equals(final PsiClass o1, final PsiClass o2) {\n        return manager.areElementsEquivalent(o1, o2);\n      }\n    });\n\n    final PsiShortNamesCache cache = manager.getShortNamesCache();\n\n    final GlobalSearchScope scope = context.getContainingFile().getResolveScope();\n    final String[] names = cache.getAllClassNames(true);\n    \n    boolean lookingForAnnotations = false;\n    final PsiElement prevSibling = context.getParent().getPrevSibling();\n    if (prevSibling instanceof PsiJavaToken && \n        ((PsiJavaToken)prevSibling).getTokenType() == JavaTokenType.AT) {\n      lookingForAnnotations = true;\n    }\n\n    for (final String name : names) {\n      if (!completionContext.prefixMatches(name)) continue;\n      final PsiClass[] classesByName = cache.getClassesByName(name, scope);\n      \n      for (PsiClass psiClass : classesByName) {\n        if (lookingForAnnotations && !psiClass.isAnnotationType()) {\n          continue;\n        }\n        if (CompletionUtil.isInExcludedPackage(psiClass)) {\n          continue;\n        }\n        classesSet.add(psiClass);\n      }\n    }\n\n    List<PsiClass> classesList = new ArrayList<PsiClass>(classesSet);\n\n    Collections.sort(classesList, new Comparator<PsiClass>() {\n      public int compare(PsiClass psiClass, PsiClass psiClass1) {\n        if(manager.areElementsEquivalent(psiClass, psiClass1)) return 0;\n\n        return getClassIndex(psiClass) - getClassIndex(psiClass1);\n      }\n\n      private int getClassIndex(PsiClass psiClass){\n        if(psiClass.getManager().isInProject(psiClass)) return 2;\n        final String qualifiedName = psiClass.getQualifiedName();\n        if(qualifiedName.startsWith(JAVA_PACKAGE_PREFIX) ||\n           qualifiedName.startsWith(JAVAX_PACKAGE_PREFIX)) return 1;\n        return 0;\n      }\n\n      public boolean equals(Object o) {\n        return o == this;\n      }\n    });\n\n    return classesList.toArray(PsiClass.EMPTY_ARRAY);\n  }","id":63121,"modified_method":"public Object[] get(final PsiElement context, CompletionContext completionContext) {\n    if(context == null || !context.isValid()) return ArrayUtil.EMPTY_OBJECT_ARRAY;\n\n    String prefix = context.getText().substring(0, completionContext.startOffset - context.getTextRange().getStartOffset());\n    final int i = prefix.lastIndexOf('.');\n    String packagePrefix = \"\";\n    if (i > 0) {\n      packagePrefix = prefix.substring(0, i);\n    }\n\n    final PsiManager manager = context.getManager();\n    final Set<PsiClass> classesSet = new THashSet<PsiClass>(new TObjectHashingStrategy<PsiClass>() {\n      public int computeHashCode(final PsiClass object) {\n        final String name = object.getQualifiedName();\n        return name != null ? name.hashCode() : 0;\n      }\n\n      public boolean equals(final PsiClass o1, final PsiClass o2) {\n        return manager.areElementsEquivalent(o1, o2);\n      }\n    });\n\n    final PsiShortNamesCache cache = manager.getShortNamesCache();\n\n    final GlobalSearchScope scope = context.getContainingFile().getResolveScope();\n    final String[] names = cache.getAllClassNames(true);\n    \n    boolean lookingForAnnotations = false;\n    final PsiElement prevSibling = context.getParent().getPrevSibling();\n    if (prevSibling instanceof PsiJavaToken && \n        ((PsiJavaToken)prevSibling).getTokenType() == JavaTokenType.AT) {\n      lookingForAnnotations = true;\n    }\n\n    for (final String name : names) {\n      if (!completionContext.prefixMatches(name)) continue;\n\n      for (PsiClass psiClass : cache.getClassesByName(name, scope)) {\n        if (lookingForAnnotations && !psiClass.isAnnotationType()) continue;\n\n        if (CompletionUtil.isInExcludedPackage(psiClass)) continue;\n\n        final String qualifiedName = psiClass.getQualifiedName();\n        if (qualifiedName == null || !qualifiedName.startsWith(packagePrefix)) continue;\n\n        if (!myFilter.isAcceptable(psiClass, context)) continue;\n\n        classesSet.add(psiClass);\n      }\n    }\n\n    List<PsiClass> classesList = new ArrayList<PsiClass>(classesSet);\n\n    Collections.sort(classesList, new Comparator<PsiClass>() {\n      public int compare(PsiClass psiClass, PsiClass psiClass1) {\n        if(manager.areElementsEquivalent(psiClass, psiClass1)) return 0;\n\n        return getClassIndex(psiClass) - getClassIndex(psiClass1);\n      }\n\n      private int getClassIndex(PsiClass psiClass){\n        if(psiClass.getManager().isInProject(psiClass)) return 2;\n        final String qualifiedName = psiClass.getQualifiedName();\n        if(qualifiedName.startsWith(JAVA_PACKAGE_PREFIX) ||\n           qualifiedName.startsWith(JAVAX_PACKAGE_PREFIX)) return 1;\n        return 0;\n      }\n\n      public boolean equals(Object o) {\n        return o == this;\n      }\n    });\n\n    return ContainerUtil.map2Array(classesList, SimpleLookupItem.class, new NotNullFunction<PsiClass, SimpleLookupItem>() {\n      @NotNull\n      public SimpleLookupItem fun(final PsiClass psiClass) {\n        final SimpleLookupItem item = new SimpleLookupItem(psiClass);\n        if (context instanceof XmlElement) {\n          item.setInsertHandler(INSERT_HANDLER);\n        }\n        return item;\n      }\n    });\n  }","commit_id":"6a1a820b67c3e78904d48c355e700b9a5a9e4922","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean isNonImportedClassEntered(LookupImpl lookup) {\n    if (lookup.isSelectionTouched() || !lookup.isCompletion()) return false;\n\n    CompletionProcess process = CompletionService.getCompletionService().getCurrentCompletion();\n    if (process == null || !process.isAutopopupCompletion()) return false;\n\n    LookupElement item = lookup.getCurrentItem();\n    if (item == null) return false;\n\n    PsiFile file = lookup.getPsiFile();\n    if (file == null) return false;\n    \n    Object o = item.getObject();\n    if (o instanceof PsiClass && ((PsiClass)o).getName().length() > lookup.itemPattern(item).length()) {\n      if (PsiShortNamesCache.getInstance(file.getProject()).getClassesByName(lookup.itemPattern(item), file.getResolveScope()).length > 0) {\n        return true;\n      }\n    }\n    \n    return false;\n  }","id":63122,"modified_method":"public static boolean isNonImportedClassEntered(LookupImpl lookup) {\n    if (lookup.isSelectionTouched() || !lookup.isCompletion()) return false;\n\n    CompletionProcess process = CompletionService.getCompletionService().getCurrentCompletion();\n    if (process == null || !process.isAutopopupCompletion()) return false;\n\n    LookupElement item = lookup.getCurrentItem();\n    if (item == null) return false;\n\n    PsiFile file = lookup.getPsiFile();\n    if (file == null) return false;\n    \n    Object o = item.getObject();\n    if (o instanceof PsiClass && ((PsiClass)o).getName().length() > lookup.itemPattern(item).length()) {\n      for (PsiClass aClass : PsiShortNamesCache.getInstance(file.getProject()).getClassesByName(lookup.itemPattern(item), file.getResolveScope())) {\n        if (!isObfuscated(aClass)) {\n          return true;\n        }\n      }\n    }\n    \n    return false;\n  }","commit_id":"2fd1cd738eb33b92005bd41406f20d94df73b9dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected JComponent createComponent() {\n    final Function1<IdeaWidgetFactory.TwoColumnPanel, IdeaWidgetFactory.TwoColumnPanel> _function = new Function1<IdeaWidgetFactory.TwoColumnPanel, IdeaWidgetFactory.TwoColumnPanel>() {\n      @Override\n      public IdeaWidgetFactory.TwoColumnPanel apply(@Extension final IdeaWidgetFactory.TwoColumnPanel it) {\n        IdeaWidgetFactory.TwoColumnPanel _xblockexpression = null;\n        {\n          final Function1<GridBagConstraints, JComponent> _function = new Function1<GridBagConstraints, JComponent>() {\n            @Override\n            public JComponent apply(final GridBagConstraints it) {\n              return GeneratorFacetForm.this._ideaWidgetFactory.separator(\"General\");\n            }\n          };\n          it.row(it, _function);\n          GeneratorFacetForm.this.createGeneralSection(it);\n          final Function1<GridBagConstraints, JComponent> _function_1 = new Function1<GridBagConstraints, JComponent>() {\n            @Override\n            public JComponent apply(final GridBagConstraints it) {\n              return GeneratorFacetForm.this._ideaWidgetFactory.label(\" \");\n            }\n          };\n          it.row(it, _function_1);\n          final Function1<GridBagConstraints, JComponent> _function_2 = new Function1<GridBagConstraints, JComponent>() {\n            @Override\n            public JComponent apply(final GridBagConstraints it) {\n              return GeneratorFacetForm.this._ideaWidgetFactory.separator(\"Output Folder\");\n            }\n          };\n          it.row(it, _function_2);\n          GeneratorFacetForm.this.createOutputSection(it);\n          _xblockexpression = it.expand(it, GridBagConstraints.VERTICAL);\n        }\n        return _xblockexpression;\n      }\n    };\n    return this._ideaWidgetFactory.twoColumnPanel(_function);\n  }","id":63123,"modified_method":"protected JComponent createComponent() {\n    final Function1<IdeaWidgetFactory.TwoColumnPanel, IdeaWidgetFactory.TwoColumnPanel> _function = new Function1<IdeaWidgetFactory.TwoColumnPanel, IdeaWidgetFactory.TwoColumnPanel>() {\n      @Override\n      public IdeaWidgetFactory.TwoColumnPanel apply(@Extension final IdeaWidgetFactory.TwoColumnPanel it) {\n        IdeaWidgetFactory.TwoColumnPanel _xblockexpression = null;\n        {\n          final Function1<GridBagConstraints, JComponent> _function = new Function1<GridBagConstraints, JComponent>() {\n            @Override\n            public JComponent apply(final GridBagConstraints it) {\n              return GeneratorFacetForm.this._ideaWidgetFactory.separator(\"General\");\n            }\n          };\n          it.row(it, _function);\n          GeneratorFacetForm.this.createGeneralSection(it);\n          final Function1<GridBagConstraints, JComponent> _function_1 = new Function1<GridBagConstraints, JComponent>() {\n            @Override\n            public JComponent apply(final GridBagConstraints it) {\n              return GeneratorFacetForm.this._ideaWidgetFactory.label(\" \");\n            }\n          };\n          it.row(it, _function_1);\n          final Function1<GridBagConstraints, JComponent> _function_2 = new Function1<GridBagConstraints, JComponent>() {\n            @Override\n            public JComponent apply(final GridBagConstraints it) {\n              return GeneratorFacetForm.this._ideaWidgetFactory.separator(\"Output Folder\");\n            }\n          };\n          it.row(it, _function_2);\n          GeneratorFacetForm.this.createOutputSection(it);\n          final Function1<GridBagConstraints, JComponent> _function_3 = new Function1<GridBagConstraints, JComponent>() {\n            @Override\n            public JComponent apply(final GridBagConstraints it) {\n              JLabel _xblockexpression = null;\n              {\n                GeneratorFacetForm.this._ideaWidgetFactory.expand(it, GridBagConstraints.VERTICAL);\n                _xblockexpression = GeneratorFacetForm.this._ideaWidgetFactory.label(\"\");\n              }\n              return _xblockexpression;\n            }\n          };\n          _xblockexpression = it.row(it, _function_3);\n        }\n        return _xblockexpression;\n      }\n    };\n    return this._ideaWidgetFactory.twoColumnPanel(_function);\n  }","commit_id":"742deb492ca1f83f166b59f1bb0c790a549c66e6","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tprotected XtendGeneratorConfigurationState createNewDefaultState() {\n\t\tXtendGeneratorConfigurationState xtendGeneratorConfigurationState = new XtendGeneratorConfigurationState();\n\t\tinitDefaults(xtendGeneratorConfigurationState);\n\t\treturn xtendGeneratorConfigurationState;\n\t}","id":63124,"modified_method":"@Override\n\tprotected XtendGeneratorConfigurationState createNewDefaultState() {\n\t\tXtendGeneratorConfigurationState configurationState = new XtendGeneratorConfigurationState();\n\t\tinitDefaults(configurationState);\n\t\treturn configurationState;\n\t}","commit_id":"742deb492ca1f83f166b59f1bb0c790a549c66e6","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  public void getData(final GeneratorConfigurationState data) {\n    super.getData(data);\n    if ((data instanceof XtendGeneratorConfigurationState)) {\n      boolean _isSelected = this.useJavasSourcelevel.isSelected();\n      ((XtendGeneratorConfigurationState)data).setUseJavasSourcelevel(_isSelected);\n      boolean _isSelected_1 = this.generateGeneratedAnno.isSelected();\n      ((XtendGeneratorConfigurationState)data).setGenerateGeneratedAnno(_isSelected_1);\n      boolean _isSelected_2 = this.generateSuppressWarnAnno.isSelected();\n      ((XtendGeneratorConfigurationState)data).setGenerateSuppressWarnAnno(_isSelected_2);\n      boolean _isSelected_3 = this.ignoreGeneratedJava.isSelected();\n      ((XtendGeneratorConfigurationState)data).setIgnoreGeneratedJava(_isSelected_3);\n    }\n  }","id":63125,"modified_method":"@Override\n  public void getData(final GeneratorConfigurationState data) {\n    super.getData(data);\n    if ((data instanceof XtendGeneratorConfigurationState)) {\n      boolean _isSelected = this.useJavaCompilerCompliance.isSelected();\n      ((XtendGeneratorConfigurationState)data).setUseJavaCompilerCompliance(_isSelected);\n      Object _selectedItem = this.targetJavaVersion.getSelectedItem();\n      String _string = _selectedItem.toString();\n      ((XtendGeneratorConfigurationState)data).setTargetJavaVersion(_string);\n      boolean _isSelected_1 = this.generateSuppressWarnings.isSelected();\n      ((XtendGeneratorConfigurationState)data).setGenerateSuppressWarnings(_isSelected_1);\n      boolean _isSelected_2 = this.generateGeneratedAnnotation.isSelected();\n      ((XtendGeneratorConfigurationState)data).setGenerateGeneratedAnnotation(_isSelected_2);\n      boolean _isSelected_3 = this.includeDateInGenerated.isSelected();\n      ((XtendGeneratorConfigurationState)data).setIncludeDateInGenerated(_isSelected_3);\n      String _text = this.generatedAnnotationComment.getText();\n      ((XtendGeneratorConfigurationState)data).setGeneratedAnnotationComment(_text);\n      boolean _isSelected_4 = this.installDslAsPrimarySource.isSelected();\n      ((XtendGeneratorConfigurationState)data).setInstallDslAsPrimarySource(_isSelected_4);\n    }\n  }","commit_id":"742deb492ca1f83f166b59f1bb0c790a549c66e6","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  public void setData(final GeneratorConfigurationState data) {\n    super.setData(data);\n    if ((data instanceof XtendGeneratorConfigurationState)) {\n      boolean _isUseJavasSourcelevel = ((XtendGeneratorConfigurationState)data).isUseJavasSourcelevel();\n      this.useJavasSourcelevel.setSelected(_isUseJavasSourcelevel);\n      boolean _isGenerateGeneratedAnno = ((XtendGeneratorConfigurationState)data).isGenerateGeneratedAnno();\n      this.generateGeneratedAnno.setSelected(_isGenerateGeneratedAnno);\n      boolean _isGenerateSuppressWarnAnno = ((XtendGeneratorConfigurationState)data).isGenerateSuppressWarnAnno();\n      this.generateSuppressWarnAnno.setSelected(_isGenerateSuppressWarnAnno);\n      boolean _isIgnoreGeneratedJava = ((XtendGeneratorConfigurationState)data).isIgnoreGeneratedJava();\n      this.ignoreGeneratedJava.setSelected(_isIgnoreGeneratedJava);\n    }\n  }","id":63126,"modified_method":"@Override\n  public void setData(final GeneratorConfigurationState data) {\n    super.setData(data);\n    if ((data instanceof XtendGeneratorConfigurationState)) {\n      boolean _isUseJavaCompilerCompliance = ((XtendGeneratorConfigurationState)data).isUseJavaCompilerCompliance();\n      this.useJavaCompilerCompliance.setSelected(_isUseJavaCompilerCompliance);\n      String _targetJavaVersion = ((XtendGeneratorConfigurationState)data).getTargetJavaVersion();\n      this.targetJavaVersion.setSelectedItem(_targetJavaVersion);\n      boolean _isGenerateSuppressWarnings = ((XtendGeneratorConfigurationState)data).isGenerateSuppressWarnings();\n      this.generateSuppressWarnings.setSelected(_isGenerateSuppressWarnings);\n      boolean _isGenerateGeneratedAnnotation = ((XtendGeneratorConfigurationState)data).isGenerateGeneratedAnnotation();\n      this.generateGeneratedAnnotation.setSelected(_isGenerateGeneratedAnnotation);\n      boolean _isIncludeDateInGenerated = ((XtendGeneratorConfigurationState)data).isIncludeDateInGenerated();\n      this.includeDateInGenerated.setSelected(_isIncludeDateInGenerated);\n      String _generatedAnnotationComment = ((XtendGeneratorConfigurationState)data).getGeneratedAnnotationComment();\n      this.generatedAnnotationComment.setText(_generatedAnnotationComment);\n      boolean _isInstallDslAsPrimarySource = ((XtendGeneratorConfigurationState)data).isInstallDslAsPrimarySource();\n      this.installDslAsPrimarySource.setSelected(_isInstallDslAsPrimarySource);\n    }\n  }","commit_id":"742deb492ca1f83f166b59f1bb0c790a549c66e6","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  public boolean isModified(final GeneratorConfigurationState data) {\n    boolean _isModified = super.isModified(data);\n    boolean _not = (!_isModified);\n    if (_not) {\n      if ((data instanceof XtendGeneratorConfigurationState)) {\n        boolean _isSelected = this.useJavasSourcelevel.isSelected();\n        boolean _isUseJavasSourcelevel = ((XtendGeneratorConfigurationState)data).isUseJavasSourcelevel();\n        boolean _tripleNotEquals = (Boolean.valueOf(_isSelected) != Boolean.valueOf(_isUseJavasSourcelevel));\n        if (_tripleNotEquals) {\n          return true;\n        }\n        boolean _isSelected_1 = this.generateGeneratedAnno.isSelected();\n        boolean _isGenerateGeneratedAnno = ((XtendGeneratorConfigurationState)data).isGenerateGeneratedAnno();\n        boolean _tripleNotEquals_1 = (Boolean.valueOf(_isSelected_1) != Boolean.valueOf(_isGenerateGeneratedAnno));\n        if (_tripleNotEquals_1) {\n          return true;\n        }\n        boolean _isSelected_2 = this.generateSuppressWarnAnno.isSelected();\n        boolean _isGenerateSuppressWarnAnno = ((XtendGeneratorConfigurationState)data).isGenerateSuppressWarnAnno();\n        boolean _tripleNotEquals_2 = (Boolean.valueOf(_isSelected_2) != Boolean.valueOf(_isGenerateSuppressWarnAnno));\n        if (_tripleNotEquals_2) {\n          return true;\n        }\n        boolean _isSelected_3 = this.ignoreGeneratedJava.isSelected();\n        boolean _isIgnoreGeneratedJava = ((XtendGeneratorConfigurationState)data).isIgnoreGeneratedJava();\n        boolean _tripleNotEquals_3 = (Boolean.valueOf(_isSelected_3) != Boolean.valueOf(_isIgnoreGeneratedJava));\n        if (_tripleNotEquals_3) {\n          return true;\n        }\n      }\n    }\n    return true;\n  }","id":63127,"modified_method":"@Override\n  public boolean isModified(final GeneratorConfigurationState data) {\n    boolean _isModified = super.isModified(data);\n    boolean _not = (!_isModified);\n    if (_not) {\n      if ((data instanceof XtendGeneratorConfigurationState)) {\n        boolean _isSelected = this.useJavaCompilerCompliance.isSelected();\n        boolean _isUseJavaCompilerCompliance = ((XtendGeneratorConfigurationState)data).isUseJavaCompilerCompliance();\n        boolean _tripleNotEquals = (Boolean.valueOf(_isSelected) != Boolean.valueOf(_isUseJavaCompilerCompliance));\n        if (_tripleNotEquals) {\n          return true;\n        }\n        boolean _isSelected_1 = this.generateGeneratedAnnotation.isSelected();\n        boolean _isGenerateGeneratedAnnotation = ((XtendGeneratorConfigurationState)data).isGenerateGeneratedAnnotation();\n        boolean _tripleNotEquals_1 = (Boolean.valueOf(_isSelected_1) != Boolean.valueOf(_isGenerateGeneratedAnnotation));\n        if (_tripleNotEquals_1) {\n          return true;\n        }\n        boolean _isSelected_2 = this.generateSuppressWarnings.isSelected();\n        boolean _isGenerateSuppressWarnings = ((XtendGeneratorConfigurationState)data).isGenerateSuppressWarnings();\n        boolean _tripleNotEquals_2 = (Boolean.valueOf(_isSelected_2) != Boolean.valueOf(_isGenerateSuppressWarnings));\n        if (_tripleNotEquals_2) {\n          return true;\n        }\n        boolean _isSelected_3 = this.installDslAsPrimarySource.isSelected();\n        boolean _isInstallDslAsPrimarySource = ((XtendGeneratorConfigurationState)data).isInstallDslAsPrimarySource();\n        boolean _tripleNotEquals_3 = (Boolean.valueOf(_isSelected_3) != Boolean.valueOf(_isInstallDslAsPrimarySource));\n        if (_tripleNotEquals_3) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }","commit_id":"742deb492ca1f83f166b59f1bb0c790a549c66e6","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  public IdeaWidgetFactory.TwoColumnPanel createOutputSection(@Extension final IdeaWidgetFactory.TwoColumnPanel it) {\n    IdeaWidgetFactory.TwoColumnPanel _xblockexpression = null;\n    {\n      super.createOutputSection(it);\n      final Function1<GridBagConstraints, JComponent> _function = new Function1<GridBagConstraints, JComponent>() {\n        @Override\n        public JComponent apply(final GridBagConstraints it) {\n          JCheckBox _checkBox = XtendFacetForm.this._ideaWidgetFactory.checkBox(\"Ignore generated Java source when debugging (Use for Android)\");\n          return XtendFacetForm.this.ignoreGeneratedJava = _checkBox;\n        }\n      };\n      _xblockexpression = it.row(it, _function);\n    }\n    return _xblockexpression;\n  }","id":63128,"modified_method":"@Override\n  public IdeaWidgetFactory.TwoColumnPanel createOutputSection(@Extension final IdeaWidgetFactory.TwoColumnPanel it) {\n    IdeaWidgetFactory.TwoColumnPanel _xblockexpression = null;\n    {\n      super.createOutputSection(it);\n      final Function1<GridBagConstraints, JComponent> _function = new Function1<GridBagConstraints, JComponent>() {\n        @Override\n        public JComponent apply(final GridBagConstraints it) {\n          JCheckBox _checkBox = XtendFacetForm.this._ideaWidgetFactory.checkBox(\"Ignore generated Java source when debugging (Use for Android)\");\n          return XtendFacetForm.this.installDslAsPrimarySource = _checkBox;\n        }\n      };\n      it.row(it, _function);\n      final Function1<GridBagConstraints, JComponent> _function_1 = new Function1<GridBagConstraints, JComponent>() {\n        @Override\n        public JComponent apply(final GridBagConstraints it) {\n          JCheckBox _xblockexpression = null;\n          {\n            XtendFacetForm.this._ideaWidgetFactory.indent(it);\n            JCheckBox _checkBox = XtendFacetForm.this._ideaWidgetFactory.checkBox(\"Hide synthetic local variables in the debugger\");\n            _xblockexpression = XtendFacetForm.this.hideLocalSyntheticVariables = _checkBox;\n          }\n          return _xblockexpression;\n        }\n      };\n      _xblockexpression = it.row(it, _function_1);\n    }\n    return _xblockexpression;\n  }","commit_id":"742deb492ca1f83f166b59f1bb0c790a549c66e6","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  public IdeaWidgetFactory.TwoColumnPanel createGeneralSection(@Extension final IdeaWidgetFactory.TwoColumnPanel it) {\n    IdeaWidgetFactory.TwoColumnPanel _xblockexpression = null;\n    {\n      super.createGeneralSection(it);\n      final Function1<GridBagConstraints, JComponent> _function = new Function1<GridBagConstraints, JComponent>() {\n        @Override\n        public JComponent apply(final GridBagConstraints it) {\n          JCheckBox _checkBox = XtendFacetForm.this._ideaWidgetFactory.checkBox(\"Use source compatibility level from Java settings\");\n          return XtendFacetForm.this.useJavasSourcelevel = _checkBox;\n        }\n      };\n      it.row(it, _function);\n      final Function1<GridBagConstraints, JComponent> _function_1 = new Function1<GridBagConstraints, JComponent>() {\n        @Override\n        public JComponent apply(final GridBagConstraints it) {\n          JCheckBox _checkBox = XtendFacetForm.this._ideaWidgetFactory.checkBox(\"Generate @SuppressWarnings annotations\");\n          return XtendFacetForm.this.generateSuppressWarnAnno = _checkBox;\n        }\n      };\n      it.row(it, _function_1);\n      final Function1<GridBagConstraints, JComponent> _function_2 = new Function1<GridBagConstraints, JComponent>() {\n        @Override\n        public JComponent apply(final GridBagConstraints it) {\n          JCheckBox _checkBox = XtendFacetForm.this._ideaWidgetFactory.checkBox(\"Generate @Generated annotations\");\n          return XtendFacetForm.this.generateGeneratedAnno = _checkBox;\n        }\n      };\n      _xblockexpression = it.row(it, _function_2);\n    }\n    return _xblockexpression;\n  }","id":63129,"modified_method":"@Override\n  public IdeaWidgetFactory.TwoColumnPanel createGeneralSection(@Extension final IdeaWidgetFactory.TwoColumnPanel it) {\n    IdeaWidgetFactory.TwoColumnPanel _xblockexpression = null;\n    {\n      super.createGeneralSection(it);\n      final Function1<GridBagConstraints, JComponent> _function = new Function1<GridBagConstraints, JComponent>() {\n        @Override\n        public JComponent apply(final GridBagConstraints it) {\n          JCheckBox _checkBox = XtendFacetForm.this._ideaWidgetFactory.checkBox(\"Use source compatibility level from Java settings\");\n          return XtendFacetForm.this.useJavaCompilerCompliance = _checkBox;\n        }\n      };\n      it.row(it, _function);\n      final Function1<GridBagConstraints, JComponent> _function_1 = new Function1<GridBagConstraints, JComponent>() {\n        @Override\n        public JComponent apply(final GridBagConstraints it) {\n          JPanel _xblockexpression = null;\n          {\n            XtendFacetForm.this._ideaWidgetFactory.indent(it);\n            final Function1<GridBagConstraints, JComponent> _function = new Function1<GridBagConstraints, JComponent>() {\n              @Override\n              public JComponent apply(final GridBagConstraints it) {\n                return XtendFacetForm.this._ideaWidgetFactory.label(\"Source compatibility level of generated code:\");\n              }\n            };\n            final Function1<GridBagConstraints, JComponent> _function_1 = new Function1<GridBagConstraints, JComponent>() {\n              @Override\n              public JComponent apply(final GridBagConstraints it) {\n                JComboBox _xblockexpression = null;\n                {\n                  XtendFacetForm.this._ideaWidgetFactory.expand(it, GridBagConstraints.HORIZONTAL);\n                  JComboBox _jComboBox = new JComboBox(((String[]) ((String[])Conversions.unwrapArray(Collections.<String>unmodifiableList(CollectionLiterals.<String>newArrayList(\"Java 6\", \"Java 7\")), String.class))));\n                  _xblockexpression = XtendFacetForm.this.targetJavaVersion = _jComboBox;\n                }\n                return _xblockexpression;\n              }\n            };\n            _xblockexpression = XtendFacetForm.this._ideaWidgetFactory.container(_function, _function_1);\n          }\n          return _xblockexpression;\n        }\n      };\n      it.row(it, _function_1);\n      final Function1<GridBagConstraints, JComponent> _function_2 = new Function1<GridBagConstraints, JComponent>() {\n        @Override\n        public JComponent apply(final GridBagConstraints it) {\n          JCheckBox _checkBox = XtendFacetForm.this._ideaWidgetFactory.checkBox(\"Generate @SuppressWarnings annotations\");\n          return XtendFacetForm.this.generateSuppressWarnings = _checkBox;\n        }\n      };\n      it.row(it, _function_2);\n      final Function1<GridBagConstraints, JComponent> _function_3 = new Function1<GridBagConstraints, JComponent>() {\n        @Override\n        public JComponent apply(final GridBagConstraints it) {\n          JCheckBox _checkBox = XtendFacetForm.this._ideaWidgetFactory.checkBox(\"Generate @Generated annotations\");\n          return XtendFacetForm.this.generateGeneratedAnnotation = _checkBox;\n        }\n      };\n      it.row(it, _function_3);\n      final Function1<GridBagConstraints, JComponent> _function_4 = new Function1<GridBagConstraints, JComponent>() {\n        @Override\n        public JComponent apply(final GridBagConstraints it) {\n          JCheckBox _xblockexpression = null;\n          {\n            XtendFacetForm.this._ideaWidgetFactory.indent(it);\n            JCheckBox _checkBox = XtendFacetForm.this._ideaWidgetFactory.checkBox(\"Include current time information\");\n            _xblockexpression = XtendFacetForm.this.includeDateInGenerated = _checkBox;\n          }\n          return _xblockexpression;\n        }\n      };\n      it.row(it, _function_4);\n      final Function1<GridBagConstraints, JComponent> _function_5 = new Function1<GridBagConstraints, JComponent>() {\n        @Override\n        public JComponent apply(final GridBagConstraints it) {\n          JPanel _xblockexpression = null;\n          {\n            XtendFacetForm.this._ideaWidgetFactory.indent(it);\n            final Function1<GridBagConstraints, JComponent> _function = new Function1<GridBagConstraints, JComponent>() {\n              @Override\n              public JComponent apply(final GridBagConstraints it) {\n                return XtendFacetForm.this._ideaWidgetFactory.label(\"Comment:\");\n              }\n            };\n            final Function1<GridBagConstraints, JComponent> _function_1 = new Function1<GridBagConstraints, JComponent>() {\n              @Override\n              public JComponent apply(final GridBagConstraints it) {\n                JBTextField _xblockexpression = null;\n                {\n                  XtendFacetForm.this._ideaWidgetFactory.expand(it, GridBagConstraints.HORIZONTAL);\n                  it.anchor = GridBagConstraints.WEST;\n                  JBTextField _jBTextField = new JBTextField(20);\n                  _xblockexpression = XtendFacetForm.this.generatedAnnotationComment = _jBTextField;\n                }\n                return _xblockexpression;\n              }\n            };\n            _xblockexpression = XtendFacetForm.this._ideaWidgetFactory.container(_function, _function_1);\n          }\n          return _xblockexpression;\n        }\n      };\n      _xblockexpression = it.row(it, _function_5);\n    }\n    return _xblockexpression;\n  }","commit_id":"742deb492ca1f83f166b59f1bb0c790a549c66e6","url":"https://github.com/eclipse/xtext"},{"original_method":"@Pure\n  public boolean isGenerateGeneratedAnno() {\n    return this.generateGeneratedAnno;\n  }","id":63130,"modified_method":"@Pure\n  public boolean isGenerateGeneratedAnnotation() {\n    return this.generateGeneratedAnnotation;\n  }","commit_id":"742deb492ca1f83f166b59f1bb0c790a549c66e6","url":"https://github.com/eclipse/xtext"},{"original_method":"public void setIgnoreGeneratedJava(final boolean ignoreGeneratedJava) {\n    this.ignoreGeneratedJava = ignoreGeneratedJava;\n  }","id":63131,"modified_method":"public void setIncludeDateInGenerated(final boolean includeDateInGenerated) {\n    this.includeDateInGenerated = includeDateInGenerated;\n  }","commit_id":"742deb492ca1f83f166b59f1bb0c790a549c66e6","url":"https://github.com/eclipse/xtext"},{"original_method":"public void setGenerateSuppressWarnAnno(final boolean generateSuppressWarnAnno) {\n    this.generateSuppressWarnAnno = generateSuppressWarnAnno;\n  }","id":63132,"modified_method":"public void setGenerateSuppressWarnings(final boolean generateSuppressWarnings) {\n    this.generateSuppressWarnings = generateSuppressWarnings;\n  }","commit_id":"742deb492ca1f83f166b59f1bb0c790a549c66e6","url":"https://github.com/eclipse/xtext"},{"original_method":"@Pure\n  public boolean isGenerateSuppressWarnAnno() {\n    return this.generateSuppressWarnAnno;\n  }","id":63133,"modified_method":"@Pure\n  public boolean isGenerateSuppressWarnings() {\n    return this.generateSuppressWarnings;\n  }","commit_id":"742deb492ca1f83f166b59f1bb0c790a549c66e6","url":"https://github.com/eclipse/xtext"},{"original_method":"public void setGenerateGeneratedAnno(final boolean generateGeneratedAnno) {\n    this.generateGeneratedAnno = generateGeneratedAnno;\n  }","id":63134,"modified_method":"public void setGenerateGeneratedAnnotation(final boolean generateGeneratedAnnotation) {\n    this.generateGeneratedAnnotation = generateGeneratedAnnotation;\n  }","commit_id":"742deb492ca1f83f166b59f1bb0c790a549c66e6","url":"https://github.com/eclipse/xtext"},{"original_method":"private void printContainers(ReplicationControllerListSchema replicationControllers, PrintStream out) {\n        TablePrinter table = new TablePrinter();\n        table.columns(\"id\", \"labels\", \"replicas\", \"replica selector\");\n        List<ReplicationControllerSchema> items = replicationControllers.getItems();\n        if (items == null) {\n            items = Collections.EMPTY_LIST;\n        }\n        Filter<ReplicationControllerSchema> filter = KubernetesHelpers.createReplicationControllerFilter(filterText);\n        for (ReplicationControllerSchema item : items) {\n            if (filter.matches(item)) {\n                String id = item.getId();\n                String labels = KubernetesHelpers.toLabelsString(item.getLabels());\n                ControllerDesiredState desiredState = item.getDesiredState();\n                if (desiredState != null) {\n                    String selector = KubernetesHelpers.toLabelsString(desiredState.getReplicaSelector());\n                    table.row(id, labels, toPositiveNonZeroText(desiredState.getReplicas()), selector);\n                } else {\n                    table.row(id, labels);\n                }\n            }\n        }\n        table.print();\n    }","id":63135,"modified_method":"private void printContainers(ReplicationControllerListSchema replicationControllers, PrintStream out) {\n        TablePrinter table = new TablePrinter();\n        table.columns(\"id\", \"labels\", \"replicas\", \"replica selector\");\n        List<ReplicationControllerSchema> items = replicationControllers.getItems();\n        if (items == null) {\n            items = Collections.EMPTY_LIST;\n        }\n        Filter<ReplicationControllerSchema> filter = KubernetesHelpers.createReplicationControllerFilter(filterText);\n        for (ReplicationControllerSchema item : items) {\n            if (filter.matches(item)) {\n                String id = item.getId();\n                String labels = KubernetesHelpers.toLabelsString(item.getLabels());\n                Integer replicas = null;\n                ControllerDesiredState desiredState = item.getDesiredState();\n                ControllerCurrentState currentState = item.getCurrentState();\n                String selector = null;\n                if (desiredState != null) {\n                    selector = KubernetesHelpers.toLabelsString(desiredState.getReplicaSelector());\n                }\n                if (currentState != null) {\n                    replicas = currentState.getReplicas();\n                }\n                table.row(id, labels, toPositiveNonZeroText(replicas), selector);\n            }\n        }\n        table.print();\n    }","commit_id":"b50d391efada43c29fc095925fd40f1347eae309","url":"https://github.com/fabric8io/fabric8"},{"original_method":"/**\n\t *  Tests whether the podcasts folder exists\n\t *  and create it if it does not\n\t *  \n\t * @return true if exists, false otherwise\n\t */\n\tpublic boolean checkPodcastFolder () {\n\t\tString siteCollection = contentHostingService.getSiteCollection( getSiteId() );\n\t\tString podcastsCollection = siteCollection + COLLECTION_PODCASTS + Entity.SEPARATOR;\n\t\t\n\t\ttry {\n\t\t\tcontentHostingService.checkCollection(podcastsCollection);\t\t\n\t\t\tpodcastCollection =  true;\n\t\t}\n\t\tcatch(Exception ex){\n\t\t//catch (IdUnusedException ex) {\n\t\t\ttry {\n\t\t\t\t// TODO: Does not exist. Create podcasts folder\n\t\t\t\tResourcePropertiesEdit resourceProperties = contentHostingService.newResourceProperties();\n\t\t\t\t\n\t\t\t\tresourceProperties.addProperty(ResourceProperties.PROP_DISPLAY_NAME, COLLECTION_PODCASTS_TITLE);\n\t\t\t\tresourceProperties.addProperty(ResourceProperties.PROP_DESCRIPTION, COLLECTION_PODCASTS_DESCRIPTION);\n\t\t\t\t\n\t\t\t\tContentCollection collection = contentHostingService.addCollection(podcastsCollection, resourceProperties);\n\t\t\t\t\n\t\t\t\tcontentHostingService.setPubView(collection.getId(), true);\n\t\t\t\t\n\t\t\t\tContentCollectionEdit edit = contentHostingService.editCollection(collection.getId());\n\n\t\t\t\tcontentHostingService.commitCollection(edit);\n\t\t\t\t\n\t\t\t\tpodcastCollection = true;\n\t\t\t}\n\t\t\tcatch (IdUnusedException e) {\n\t\t\t\t// TODO: user must have renamed/deleted podcast folder, recreate\n\t\t\t\tSystem.out.println(\"Problem creating podcasts folder\");\n\t\t\t}\n\t\t\tcatch (TypeException e) {\n\t\t\t}\n\t\t\tcatch (InUseException e) {\n\t\t\t}\n\t\t\tcatch (PermissionException e) {\n\t\t\t}\n\t\t\tcatch (IdInvalidException e) {\n\t\t\t}\n\t\t\tcatch (InconsistentException e) {\n\t\t\t}\n\t\t\tcatch (IdUsedException e) {\n\t\t\t}\n\t\t}\n\n\t\treturn podcastCollection;\n\t}","id":63136,"modified_method":"/**\n\t *  Tests whether the podcasts folder exists\n\t *  and create it if it does not\n\t *  \n\t * @return true if exists, false otherwise\n\t */\n\tpublic boolean checkPodcastFolder () {\n\t\tboolean podcastCollection = false;\n\t\tString siteCollection = contentHostingService.getSiteCollection( getSiteId() );\n\t\tString podcastsCollection = siteCollection + COLLECTION_PODCASTS + Entity.SEPARATOR;\n\t\t\n\t\ttry {\n\t\t\tcontentHostingService.checkCollection(podcastsCollection);\t\t\n\t\t\tpodcastCollection =  true;\n\t\t}\n\t\tcatch(Exception ex){\n\t\t//catch (IdUnusedException ex) {\n\t\t\ttry {\n\t\t\t\t// TODO: Does not exist. Create podcasts folder\n\t\t\t\tResourcePropertiesEdit resourceProperties = contentHostingService.newResourceProperties();\n\t\t\t\t\n\t\t\t\tresourceProperties.addProperty(ResourceProperties.PROP_DISPLAY_NAME, COLLECTION_PODCASTS_TITLE);\n\t\t\t\tresourceProperties.addProperty(ResourceProperties.PROP_DESCRIPTION, COLLECTION_PODCASTS_DESCRIPTION);\n\t\t\t\t\n\t\t\t\tContentCollection collection = contentHostingService.addCollection(podcastsCollection, resourceProperties);\n\t\t\t\t\n\t\t\t\tcontentHostingService.setPubView(collection.getId(), true);\n\t\t\t\t\n\t\t\t\tContentCollectionEdit edit = contentHostingService.editCollection(collection.getId());\n\n\t\t\t\tcontentHostingService.commitCollection(edit);\n\t\t\t\t\n\t\t\t\tpodcastCollection = true;\n\t\t\t}\n\t\t\tcatch (IdUnusedException e) {\n\t\t\t\t// TODO: user must have renamed/deleted podcast folder, recreate\n\t\t\t\tSystem.out.println(\"Problem creating podcasts folder\");\n\t\t\t}\n\t\t\tcatch (TypeException e) {\n\t\t\t}\n\t\t\tcatch (InUseException e) {\n\t\t\t}\n\t\t\tcatch (PermissionException e) {\n\t\t\t}\n\t\t\tcatch (IdInvalidException e) {\n\t\t\t}\n\t\t\tcatch (InconsistentException e) {\n\t\t\t}\n\t\t\tcatch (IdUsedException e) {\n\t\t\t}\n\t\t}\n\n\t\treturn podcastCollection;\n\t}","commit_id":"181446c61b575470c6770e0327be2317c6543d89","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void revisePodcast(String resourceId, String title, Date date, String description, byte[] body, \n            String filename) {\n\t\t\n\t\ttry {\n\t\t\t/* try2: just remove and add\n\t\t\tif (body == null) {\n\t\t\t\t// the file contents are not what have changed, so get them\n\n\t\t\t}\n\t\t\tremovePodcast(resourceId);\n\t\t\t\n\t\t\taddPodcast(title, date, description, body, filename);\n*/\n\t\t\t// get Resource to modify\n\t\t\tContentResourceEdit podcastEditable = null;\n\t\t\n\t\t\tpodcastEditable = contentHostingService.editResource(resourceId);\n\t\t\tResourcePropertiesEdit podcastResourceEditable = podcastEditable.getPropertiesEdit();\n\n\t\t\tif (! title.equals(podcastResourceEditable.getProperty(ResourceProperties.PROP_DISPLAY_NAME))) {\n\t\t\t\tpodcastResourceEditable.removeProperty(ResourceProperties.PROP_DISPLAY_NAME);\n\t\t\t\tpodcastResourceEditable.addProperty(ResourceProperties.PROP_DISPLAY_NAME, title);\n\t\t\t\n\t\t\t}\n\n\t\t\tif (! description.equals(podcastResourceEditable.getProperty(ResourceProperties.PROP_DESCRIPTION))) {\n\t\t\t\tpodcastResourceEditable.removeProperty(ResourceProperties.PROP_DESCRIPTION);\n\t\t\t\tpodcastResourceEditable.addProperty(ResourceProperties.PROP_DESCRIPTION, description);\n\t\t\n\t\t\t}\n\n\t\t\tif (date != null) {\n\t\t\t\tpodcastResourceEditable.removeProperty(DISPLAY_DATE);\n\t\t\t\tSimpleDateFormat formatter = new SimpleDateFormat(\"yyyyMMddHHmmssSSS\");\n\t\t\t\tpodcastResourceEditable.addProperty(DISPLAY_DATE, formatter.format(date));\n\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (! filename.equals(podcastResourceEditable.getProperty(ResourceProperties.PROP_ORIGINAL_FILENAME))) {\n\t\t\t\tpodcastResourceEditable.removeProperty(ResourceProperties.PROP_ORIGINAL_FILENAME);\n\t\t\t\tpodcastResourceEditable.addProperty(ResourceProperties.PROP_ORIGINAL_FILENAME, Validator.escapeResourceName(filename) );\n\n\t\t\t\tpodcastResourceEditable.removeProperty(ResourceProperties.PROP_CONTENT_LENGTH);\n\t\t\t\tpodcastResourceEditable.addProperty(ResourceProperties.PROP_CONTENT_LENGTH, new Integer(body.length).toString());\n\t\t\t}\n\n\t\t\tcontentHostingService.commitResource(podcastEditable);\n\n\t\t} catch (PermissionException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (IdUnusedException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (TypeException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (InUseException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (OverQuotaException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (ServerOverloadException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} \n\t}","id":63137,"modified_method":"public void revisePodcast(String resourceId, String title, Date date, String description, byte[] body, \n            String filename) {\n\t\t\n\t\ttry {\n\t\t\t// get Resource to modify\n\t\t\tContentResourceEdit podcastEditable = null;\n\t\t\n\t\t\tpodcastEditable = contentHostingService.editResource(resourceId);\n\t\t\tResourcePropertiesEdit podcastResourceEditable = podcastEditable.getPropertiesEdit();\n\n\t\t\tif (! title.equals(podcastResourceEditable.getProperty(ResourceProperties.PROP_DISPLAY_NAME))) {\n\t\t\t\tpodcastResourceEditable.removeProperty(ResourceProperties.PROP_DISPLAY_NAME);\n\t\t\t\tpodcastResourceEditable.addProperty(ResourceProperties.PROP_DISPLAY_NAME, title);\n\t\t\t\n\t\t\t}\n\n\t\t\tif (! description.equals(podcastResourceEditable.getProperty(ResourceProperties.PROP_DESCRIPTION))) {\n\t\t\t\tpodcastResourceEditable.removeProperty(ResourceProperties.PROP_DESCRIPTION);\n\t\t\t\tpodcastResourceEditable.addProperty(ResourceProperties.PROP_DESCRIPTION, description);\n\t\t\n\t\t\t}\n\n\t\t\tif (date != null) {\n\t\t\t\tpodcastResourceEditable.removeProperty(DISPLAY_DATE);\n\t\t\t\tSimpleDateFormat formatter = new SimpleDateFormat(\"yyyyMMddHHmmssSSS\");\n\t\t\t\tpodcastResourceEditable.addProperty(DISPLAY_DATE, formatter.format(date));\n\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (! filename.equals(podcastResourceEditable.getProperty(ResourceProperties.PROP_ORIGINAL_FILENAME))) {\n\t\t\t\tpodcastResourceEditable.removeProperty(ResourceProperties.PROP_ORIGINAL_FILENAME);\n\t\t\t\tpodcastResourceEditable.addProperty(ResourceProperties.PROP_ORIGINAL_FILENAME, Validator.escapeResourceName(filename) );\n\n\t\t\t\tpodcastResourceEditable.removeProperty(ResourceProperties.PROP_CONTENT_LENGTH);\n\t\t\t\tpodcastResourceEditable.addProperty(ResourceProperties.PROP_CONTENT_LENGTH, new Integer(body.length).toString());\n\t\t\t}\n\n\t\t\tcontentHostingService.commitResource(podcastEditable);\n\n\t\t} catch (PermissionException e) {\n\t\t\tLOG.trace(\"Expected PermissionException: \" + e.getMessage(), e);\n\t\t} catch (IdUnusedException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (TypeException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (InUseException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (OverQuotaException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (ServerOverloadException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} \n\t}","commit_id":"181446c61b575470c6770e0327be2317c6543d89","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t *  Add a podcast to the site's resources\n\t *  \n\t *  @param title\n\t *  \t\t\tthe title of this podcast resource\n\t *  @param displayDate\n\t *  \t\t\tthe display date for this podcast resource\n\t *  @param description\n\t *  \t\t\tthe description of this podcast resource\n\t *  @param body\n\t *  \t\t\tthe bytes of this podcast\n\t */\n\tpublic void addPodcast(String title, Date displayDate, String description, byte[] body, \n\t\t\t               String filename) {\n\t\tString siteCollection = contentHostingService.getSiteCollection( getSiteId() );\n\n\t\ttry {\n\t\t\tResourcePropertiesEdit resourceProperties = contentHostingService.newResourceProperties();\n\t\t\tString resourceCollection = siteCollection + COLLECTION_PODCASTS + Entity.SEPARATOR;\n\t\t\t\n\t\t\t//TODO: may need additional properties here\n\t\t\tresourceProperties.addProperty(ResourceProperties.PROP_IS_COLLECTION, Boolean.FALSE.toString() );\n\t\t\tresourceProperties.addProperty(ResourceProperties.PROP_DISPLAY_NAME, title);\n\t\t\tresourceProperties.addProperty(ResourceProperties.PROP_DESCRIPTION, description);\n\t\t\tSimpleDateFormat formatter = new SimpleDateFormat(\"yyyyMMddHHmmssSSS\");\n\t\t\tresourceProperties.addProperty(DISPLAY_DATE, formatter.format(displayDate));\n\t\t\tresourceProperties.addProperty(ResourceProperties.PROP_ORIGINAL_FILENAME, filename);\n\t\t\tresourceProperties.addProperty(ResourceProperties.PROP_CONTENT_LENGTH, new Integer(body.length).toString());\n\t\t\t\n\t\t\tcontentHostingService.addResource(Validator.escapeResourceName(title), resourceCollection, 0,\n\t\t\t\t\tResourceProperties.FILE_TYPE, body, resourceProperties, NotificationService.NOTI_NONE);\n\t\t}\n\t\tcatch (OverQuotaException e) {\n\t\t\t\n\t\t}\n\t\tcatch (IdInvalidException e) {\n\t\t\t\n\t\t}\n\t\tcatch (ServerOverloadException e) {\n\t\t\t\n\t\t}\n\t\tcatch (InconsistentException e) {\n\t\t\t\n\t\t}\n\t\tcatch (IdLengthException e) {\n\t\t\t\n\t\t}\n\t\tcatch (PermissionException e) {\n\t\t\t\n\t\t}\n\t\tcatch (IdUniquenessException e) {\n\t\t\t\n\t\t}\n\t}","id":63138,"modified_method":"/**\n\t *  Add a podcast to the site's resources\n\t *  \n\t *  @param title\n\t *  \t\t\tthe title of this podcast resource\n\t *  @param displayDate\n\t *  \t\t\tthe display date for this podcast resource\n\t *  @param description\n\t *  \t\t\tthe description of this podcast resource\n\t *  @param body\n\t *  \t\t\tthe bytes of this podcast\n\t */\n\tpublic void addPodcast(String title, Date displayDate, String description, byte[] body, \n\t\t\t               String filename, String contentType) {\n\t\tString siteCollection = contentHostingService.getSiteCollection( getSiteId() );\n\n\t\ttry {\n\t\t\tResourcePropertiesEdit resourceProperties = contentHostingService.newResourceProperties();\n\t\t\tString resourceCollection = siteCollection + COLLECTION_PODCASTS + Entity.SEPARATOR;\n\t\t\t\n\t\t\t//TODO: may need additional properties here\n\t\t\tresourceProperties.addProperty(ResourceProperties.PROP_IS_COLLECTION, Boolean.FALSE.toString() );\n\t\t\tresourceProperties.addProperty(ResourceProperties.PROP_DISPLAY_NAME, title);\n\t\t\tresourceProperties.addProperty(ResourceProperties.PROP_DESCRIPTION, description);\n\t\t\tSimpleDateFormat formatter = new SimpleDateFormat(\"yyyyMMddHHmmssSSS\");\n\t\t\tresourceProperties.addProperty(DISPLAY_DATE, formatter.format(displayDate));\n\t\t\tresourceProperties.addProperty(ResourceProperties.PROP_ORIGINAL_FILENAME, filename);\n\t\t\tresourceProperties.addProperty(ResourceProperties.PROP_CONTENT_LENGTH, new Integer(body.length).toString());\n\t\t\t\n\t\t\tcontentHostingService.addResource(Validator.escapeResourceName(title), resourceCollection, 0,\n\t\t\t\t\tcontentType, body, resourceProperties, NotificationService.NOTI_NONE);\n\t\t}\n\t\tcatch (OverQuotaException e) {\n\t\t\t\n\t\t}\n\t\tcatch (IdInvalidException e) {\n\t\t\t\n\t\t}\n\t\tcatch (ServerOverloadException e) {\n\t\t\t\n\t\t}\n\t\tcatch (InconsistentException e) {\n\t\t\t\n\t\t}\n\t\tcatch (IdLengthException e) {\n\t\t\t\n\t\t}\n\t\tcatch (PermissionException e) {\n\t\t\t\n\t\t}\n\t\tcatch (IdUniquenessException e) {\n\t\t\t\n\t\t}\n\t}","commit_id":"181446c61b575470c6770e0327be2317c6543d89","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public boolean getPodcastFolderExists() {\n\t\tpodcastFolderExists=false;\n\t\t  \n\t\t  if (resourceToolExists) {\n\t\t\t  // we know resources tool exists, but need to know if podcast folder does\n\t\t\t  podcastFolderExists = podcastService.checkPodcastFolder();\n\t\t  }\n\t\t  \n\t\t  return podcastFolderExists;\n\t  }","id":63139,"modified_method":"public boolean getPodcastFolderExists() {\n\t\tboolean podcastFolderExists=false;\n\t\t  \n\t\t  if (getResourceToolExists()) {\n\t\t\t  // we know resources tool exists, but need to know if podcast folder does\n\t\t\t  podcastFolderExists = podcastService.checkPodcastFolder();\n\t\t  }\n\t\t  \n\t\t  return podcastFolderExists;\n\t  }","commit_id":"181446c61b575470c6770e0327be2317c6543d89","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * Creates a BufferedInputStream to get ready to upload file selected.\n\t * Used by Add Podcast and Revise Podcast pages.\n\t * \n\t * @param event ValueChangeEvent object generated by selecting a file to upload.\n\t * @throws AbortProcessingException\n\t */\n\tpublic void processFileUpload (ValueChangeEvent event)\n            throws AbortProcessingException\n    {\n\t   UIComponent component = event.getComponent();\n\n\t    Object newValue = event.getNewValue();\n        Object oldValue = event.getOldValue();\n        PhaseId phaseId = event.getPhaseId();\n        Object source = event.getSource();\n        System.out.println(\"processFileUpload() event: \" + event + \" component: \"\n                + component + \" newValue: \" + newValue + \" oldValue: \" + oldValue\n                + \" phaseId: \" + phaseId + \" source: \" + source);\n\n        if (newValue instanceof String) return;\n        if (newValue == null) return;\n\n        // must be a FileItem\n        try\n        {\n            FileItem item = (FileItem) event.getNewValue();\n\t        String fieldName = item.getFieldName();\n\t        filename = item.getName();\n\t        fileSize = item.getSize();\n\t        System.out.println(\"processFileUpload(): item: \" + item + \" fieldname: \" + fieldName + \" filename: \" + filename + \" length: \" + fileSize);\n\n\t        // Read the file as a stream (may be more memory-efficient)\n\t        fileAsStream = new BufferedInputStream(item.getInputStream());\n\n\t        // Read the contents as a byte array\n\t        // Just need to upload in preparation for depositing into Resources\n\t        //fileContents = item.get();\n\n        }\n        catch (Exception ex)\n        {\n            // handle exception\n            System.out.println(\"Houston, we have a problem.\");\n            ex.printStackTrace();\n        }\n    }","id":63140,"modified_method":"/**\n\t * Creates a BufferedInputStream to get ready to upload file selected.\n\t * Used by Add Podcast and Revise Podcast pages.\n\t * \n\t * @param event ValueChangeEvent object generated by selecting a file to upload.\n\t * @throws AbortProcessingException\n\t */\n\tpublic void processFileUpload (ValueChangeEvent event)\n            throws AbortProcessingException\n    {\n\t   UIComponent component = event.getComponent();\n\n\t    Object newValue = event.getNewValue();\n        Object oldValue = event.getOldValue();\n        PhaseId phaseId = event.getPhaseId();\n        Object source = event.getSource();\n        System.out.println(\"processFileUpload() event: \" + event + \" component: \"\n                + component + \" newValue: \" + newValue + \" oldValue: \" + oldValue\n                + \" phaseId: \" + phaseId + \" source: \" + source);\n\n        if (newValue instanceof String) return;\n        if (newValue == null) return;\n\n        // must be a FileItem\n        try\n        {\n            FileItem item = (FileItem) event.getNewValue();\n\t        String fieldName = item.getFieldName();\n\t        filename = item.getName();\n\t        fileSize = item.getSize();\n\t        fileContentType = item.getContentType();\n\t        System.out.println(\"processFileUpload(): item: \" + item + \" fieldname: \" + fieldName + \" filename: \" + filename + \" length: \" + fileSize);\n\n\t        // Read the file as a stream (may be more memory-efficient)\n\t        fileAsStream = new BufferedInputStream(item.getInputStream());\n\n\t        // Read the contents as a byte array\n\t        // Just need to upload in preparation for depositing into Resources\n\t        //fileContents = item.get();\n\n        }\n        catch (Exception ex)\n        {\n            // handle exception\n            System.out.println(\"Houston, we have a problem.\");\n            ex.printStackTrace();\n        }\n    }","commit_id":"181446c61b575470c6770e0327be2317c6543d89","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * Resources/podcasts exists, but are there any actual podcasts\n\t * \n\t * @return true if there are podcasts, false otherwise\n\t */\n\tpublic boolean getActPodcastsExist() {\n\t\tif (!getPodcastFolderExists()) {\n\t\t\t// if for some reason there is not a podcast folder\n\t\t\t// for example, was renamed in Resources\n\t\t\tactPodcastsExist = false;\n\t\t}\n\t\telse  {\n\t\t\t// ask the service if there is anything in the podcast folder\n\t\t\tactPodcastsExist = podcastService.checkForActualPodcasts();\n\t\t}\n\n\t\treturn actPodcastsExist;\n\t}","id":63141,"modified_method":"/**\n\t * Resources/podcasts exists, but are there any actual podcasts\n\t * \n\t * @return true if there are podcasts, false otherwise\n\t */\n\tpublic boolean getActPodcastsExist() {\n\t\tboolean actPodcastsExist = false;\n\n\t\tif (!getPodcastFolderExists()) {\n\t\t\t// if for some reason there is not a podcast folder\n\t\t\t// for example, was renamed in Resources\n\t\t\tactPodcastsExist = false;\n\t\t}\n\t\telse  {\n\t\t\t// ask the service if there is anything in the podcast folder\n\t\t\tactPodcastsExist = podcastService.checkForActualPodcasts();\n\t\t}\n\n\t\treturn actPodcastsExist;\n\t}","commit_id":"181446c61b575470c6770e0327be2317c6543d89","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public podHomeBean() {\n\t\tresourceToolExists=false;\n\t\tpodcastFolderExists = false;\n\t\tactPodcastsExist = false;\n\t\tpodcastResourceCheckFirstTry=true;\n\t\tcanUpdateSite = false;\n\t\tcanUpdateSiteFirstTry=true;\n\t}","id":63142,"modified_method":"public podHomeBean() {\n\t}","commit_id":"181446c61b575470c6770e0327be2317c6543d89","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * Performs the actual adding of a podcast. Calls PodcastService to actually add the podcast.\n\t * \n\t * @return String Sent to return to main page.\n\t */\n\tpublic String processAdd() {\n\t\tbyte[] fileContents = new byte[(int) fileSize];\n\t\t\n\t\ttry {\n\t\t\tfileAsStream.read(fileContents);\n\t\t}\n\t\tcatch (IOException ioe) {\n\t\t\tSystem.out.println(\"What happened to the fileStream?\");\n\t\t}\n\t\t\n\t\tpodcastService.addPodcast(title, date, description, fileContents, filename);\n\n\t\ttitle=\"\";\n\t\tdate = null;\n\t\tdescription=\"\";\n\t\tfileAsStream = null;\n\t\tfilename=\"\";\n\t\treturn \"cancel\";\n\t}","id":63143,"modified_method":"/**\n\t * Performs the actual adding of a podcast. Calls PodcastService to actually add the podcast.\n\t * \n\t * @return String Sent to return to main page.\n\t */\n\tpublic String processAdd() {\n\t\tbyte[] fileContents = new byte[(int) fileSize];\n\t\tString whereToGo = \"podcastAdd\";\n\t\t\n\t\tif (OKtoAdd() ) {\n\t\t\ttry {\n\t\t\t\tfileAsStream.read(fileContents);\n\t\t\t}\n\t\t\tcatch (IOException ioe) {\n\t\t\t\tSystem.out.println(\"What happened to the fileStream?\");\n\t\t\t}\n\t\t\n\t\t\tpodcastService.addPodcast(title, date, description, fileContents, filename, fileContentType);\n\n\t\t\tdisplayNoFileErrMsg = false;\n\t\t\tdisplayNoDateErrMsg = false;\n\t\t\tdisplayNoTitleErrMsg = false;\n\t\t\twhereToGo = \"cancel\";\n\t\t}\n\t\t\n\t\ttitle=\"\";\n\t\tdate = null;\n\t\tdescription=\"\";\n\t\tfileAsStream = null;\n\t\tfilename=\"\";\n\t\treturn whereToGo;\n\t}","commit_id":"181446c61b575470c6770e0327be2317c6543d89","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n     *   Determines if Resource tool part of the site. Needed to store podcasts.\n     *   Since multiple ui items need to be removed, set boolean variable so \n     *   only need to check actual resource once \n     *  \n     * @return true if Resource tool exists so entire page can display\n     *         false if does not exist so just error message displays\n     */\n\tpublic boolean getResourceToolExists() {\n\t\tif (podcastResourceCheckFirstTry) {\n\t\t\tpodcastResourceCheckFirstTry=false;\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tSite thisSite = SiteService.getSite(ToolManager.getCurrentPlacement().getContext());\n\t\t\t\tList pageList = thisSite.getPages();\n\t\t\t\tIterator iterator = pageList.iterator();\n\n\t\t\t\twhile(iterator.hasNext())\n\t\t\t\t{\n\t\t\t\t\tSitePage pgelement = (SitePage) iterator.next();\n\n\t\t\t\t\tif (pgelement.getTitle().equals(\"Resources\"))\n\t\t\t\t\t{\n\t\t\t\t\t\tresourceToolExists = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch(Exception e)\n\t\t\t{\n\t\t\t\treturn resourceToolExists;\n\t\t\t}\n\t    \n\t\t\tif(!resourceToolExists)\n\t\t\t{\n\t\t\t\tsetErrorMessage(NO_RESOURCES_ERR_MSG);\n\t\t\t}\n\t\t}\n\t\t\n\t    return resourceToolExists;\n\t}","id":63144,"modified_method":"/**\n     *   Determines if Resource tool part of the site. Needed to store podcasts.\n     *   Since multiple ui items need to be removed, set boolean variable so \n     *   only need to check actual resource once \n     *  \n     * @return true if Resource tool exists so entire page can display\n     *         false if does not exist so just error message displays\n     */\n\tpublic boolean getResourceToolExists() {\n\t\tboolean resourceToolExists = false;\n\t\ttry\n\t\t{\n\t\t\tSite thisSite = SiteService.getSite(ToolManager.getCurrentPlacement().getContext());\n\t\t\tList pageList = thisSite.getPages();\n\t\t\tIterator iterator = pageList.iterator();\n\n\t\t\twhile(iterator.hasNext())\n\t\t\t{\n\t\t\t\tSitePage pgelement = (SitePage) iterator.next();\n\n\t\t\t\tif (pgelement.getTitle().equals(\"Resources\"))\n\t\t\t\t{\n\t\t\t\t\tresourceToolExists = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\treturn resourceToolExists;\n\t\t}\n\t    \n\t\tif(!resourceToolExists && (!FacesContext.getCurrentInstance().getMessages().hasNext() ) )\n\t\t{\n\t\t\tsetErrorMessage(NO_RESOURCES_ERR_MSG);\n\t\t}\n    return resourceToolExists;\n\t}","commit_id":"181446c61b575470c6770e0327be2317c6543d89","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * Erases bean values since no podcast is to be added.\n\t * \n\t * @return String Sent to return to main page.\n\t */\n\tpublic String processCancelAdd() {\n\t\tdate = null;\n\t\ttitle=\"\";\n\t\tdescription=\"\";\n\t\tfileAsStream = null;\n\t\tfilename=\"\";\n\t\treturn \"cancel\";\n\t}","id":63145,"modified_method":"/**\n\t * Erases bean values since no podcast is to be added.\n\t * \n\t * @return String Sent to return to main page.\n\t */\n\tpublic String processCancelAdd() {\n\t\tdate = null;\n\t\ttitle=\"\";\n\t\tdescription=\"\";\n\t\tfileAsStream = null;\n\t\tfilename=\"\";\n\t\tdisplayNoFileErrMsg = false;\n\t\tdisplayNoDateErrMsg = false;\n\t\treturn \"cancel\";\n\t}","commit_id":"181446c61b575470c6770e0327be2317c6543d89","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * Returns boolean if user can update podcasts. Used to display modification options on\n\t * main page.\n\t * \n\t * @return true if user can modify, false otherwise.\n\t */\n\tpublic boolean getCanUpdateSite() {\n\t\tif (canUpdateSiteFirstTry) {\n\t\t\tcanUpdateSite = podcastService.canUpdateSite();\n\t\t}\n\n\t\treturn canUpdateSite;\n\t}","id":63146,"modified_method":"/**\n\t * Returns boolean if user can update podcasts. Used to display modification options on\n\t * main page.\n\t * \n\t * @return true if user can modify, false otherwise.\n\t */\n\tpublic boolean getCanUpdateSite() {\n\t\treturn podcastService.canUpdateSite();\n\t}","commit_id":"181446c61b575470c6770e0327be2317c6543d89","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t\t * @return Returns the fileURL.\n\t\t */\n\t\tpublic String getFileURL() {\n\t\t\tString temp = podcastService.getPodcastFileURL(resourceId);\n\t\t\ttemp = temp.substring(0, temp.lastIndexOf(SLASH));\n\n\t\t\treturn temp + SLASH + getFilename();\n\t\t}","id":63147,"modified_method":"/**\n\t\t * @return Returns the fileURL.\n\t\t */\n\t\tpublic String getFileURL() {\n\t\t\treturn podcastService.getPodcastFileURL(resourceId);\n\t\t}","commit_id":"181446c61b575470c6770e0327be2317c6543d89","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t\t * Returns the file URL for the podcast. If errors, return empty\n\t\t * string.\n\t\t */\n\t\tpublic String getFileURL() {\n\t\t\ttry {\n//\t\t\t\treturn podcastService.getPodcastFileURL(resourceId);\n\t\t\t\t/* SAK-13059: added url escaping filename due to files with spaces\n\t\t\t\t *   and other non-friendly url characters need to be but if entire\n\t\t\t\t *   url returned by podcastService is escaped, it is interpreted as\n\t\t\t\t *   a relative url and not an absolute one.\n\t\t\t\t */ \n\t\t\t\tString fullUrl = podcastService.getPodcastFileURL(resourceId);\n\t\t\t\tString filenameEscaped = Validator.escapeUrl(filename);\n\t\t\t\t\n\t\t\t\treturn fullUrl.substring(0, fullUrl.lastIndexOf(Entity.SEPARATOR) + 1) + filenameEscaped;\n\t\t\t} \n\t\t\tcatch (PermissionException e) {\n\t\t\t\tLOG.info(\"PermissionException getting file URL for \"\n\t\t\t\t\t\t+ resourceId + \"while displaying podcast file for site \" + podcastService.getSiteId(), e);\n\t\t\t\tsetErrorMessage(PERMISSION_ALERT);\n\n\t\t\t} \n\t\t\tcatch (IdUnusedException e) {\n\t\t\t\tLOG.info(\"IdUnusedException getting file URL for \" + resourceId\n\t\t\t\t\t\t+ \" while displaying podcast file for site \" + podcastService.getSiteId(), e);\n\t\t\t\tsetErrorMessage(ID_UNUSED_ALERT);\n\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t}","id":63148,"modified_method":"/**\n\t\t * Returns the file URL for the podcast. If errors, return empty\n\t\t * string.\n\t\t */\n\t\tpublic String getFileURL() {\n\t\t\ttry {\n\t\t\t\treturn podcastService.getPodcastFileURL(resourceId);\n\t\t\t} \n\t\t\tcatch (PermissionException e) {\n\t\t\t\tLOG.info(\"PermissionException getting file URL for \"\n\t\t\t\t\t\t+ resourceId + \"while displaying podcast file for site \" + podcastService.getSiteId(), e);\n\t\t\t\tsetErrorMessage(PERMISSION_ALERT);\n\n\t\t\t} \n\t\t\tcatch (IdUnusedException e) {\n\t\t\t\tLOG.info(\"IdUnusedException getting file URL for \" + resourceId\n\t\t\t\t\t\t+ \" while displaying podcast file for site \" + podcastService.getSiteId(), e);\n\t\t\t\tsetErrorMessage(ID_UNUSED_ALERT);\n\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t}","commit_id":"66052728d038cf566ac4630158a32fbd27bfb517","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t\t * Returns the file URL for the podcast. If errors, return empty\n\t\t * string.\n\t\t */\n\t\tpublic String getFileURL() {\n\t\t\ttry {\n\t\t\t\treturn podcastService.getPodcastFileURL(resourceId);\n\t\t\t\t\n\t\t\t} \n\t\t\tcatch (PermissionException e) {\n\t\t\t\tLOG.info(\"PermissionException getting file URL for \"\n\t\t\t\t\t\t+ resourceId + \"while displaying podcast file for site \" + podcastService.getSiteId(), e);\n\t\t\t\tsetErrorMessage(PERMISSION_ALERT);\n\n\t\t\t} \n\t\t\tcatch (IdUnusedException e) {\n\t\t\t\tLOG.info(\"IdUnusedException getting file URL for \" + resourceId\n\t\t\t\t\t\t+ \" while displaying podcast file for site \" + podcastService.getSiteId(), e);\n\t\t\t\tsetErrorMessage(ID_UNUSED_ALERT);\n\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t}","id":63149,"modified_method":"/**\n\t\t * Returns the file URL for the podcast. If errors, return empty\n\t\t * string.\n\t\t */\n\t\tpublic String getFileURL() {\n\t\t\ttry {\n//\t\t\t\treturn podcastService.getPodcastFileURL(resourceId);\n\t\t\t\t/* SAK-13059: added url escaping filename due to files with spaces\n\t\t\t\t *   and other non-friendly url characters need to be but if entire\n\t\t\t\t *   url returned by podcastService is escaped, it is interpreted as\n\t\t\t\t *   a relative url and not an absolute one.\n\t\t\t\t */ \n\t\t\t\tString fullUrl = podcastService.getPodcastFileURL(resourceId);\n\t\t\t\tString filenameEscaped = Validator.escapeUrl(filename);\n\t\t\t\t\n\t\t\t\treturn fullUrl.substring(0, fullUrl.lastIndexOf(Entity.SEPARATOR) + 1) + filenameEscaped;\n\t\t\t} \n\t\t\tcatch (PermissionException e) {\n\t\t\t\tLOG.info(\"PermissionException getting file URL for \"\n\t\t\t\t\t\t+ resourceId + \"while displaying podcast file for site \" + podcastService.getSiteId(), e);\n\t\t\t\tsetErrorMessage(PERMISSION_ALERT);\n\n\t\t\t} \n\t\t\tcatch (IdUnusedException e) {\n\t\t\t\tLOG.info(\"IdUnusedException getting file URL for \" + resourceId\n\t\t\t\t\t\t+ \" while displaying podcast file for site \" + podcastService.getSiteId(), e);\n\t\t\t\tsetErrorMessage(ID_UNUSED_ALERT);\n\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t}","commit_id":"2e1ffe495a1a769e2a5c612d7ad2f9ffa50ae6e1","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public BlockMetadataManager(TachyonConf tachyonConf) {\n    // Initialize storage tiers\n    int totalTiers = tachyonConf.getInt(Constants.WORKER_MAX_TIERED_STORAGE_LEVEL, 1);\n    mAliasToTiers = new HashMap<Integer, StorageTier>(totalTiers);\n    mTiers = new ArrayList<StorageTier>(totalTiers);\n    for (int i = 0; i < totalTiers; i ++) {\n      int tierAlias = i + 1;\n      StorageTier tier = new StorageTier(tachyonConf, tierAlias);\n      mTiers.add(tier);\n      mAliasToTiers.put(tierAlias, tier);\n    }\n  }","id":63150,"modified_method":"public BlockMetadataManager(TachyonConf tachyonConf) {\n    // Initialize storage tiers\n    int totalTiers = tachyonConf.getInt(Constants.WORKER_MAX_TIERED_STORAGE_LEVEL, 1);\n    mAliasToTiers = new HashMap<Integer, StorageTier>(totalTiers);\n    mTiers = new ArrayList<StorageTier>(totalTiers);\n    for (int i = 0; i < totalTiers; i ++) {\n      // TODO: Change the following calculation to get alias\n      int tierAlias = i + 1;\n      StorageTier tier = new StorageTier(tachyonConf, i, tierAlias);\n      mTiers.add(tier);\n      mAliasToTiers.put(tierAlias, tier);\n    }\n  }","commit_id":"c52a045966a220f083e9217c7bd0db5a18078faf","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Gets the amount of available space in given location in bytes.\n   *\n   * @param location location the check available bytes\n   * @return available bytes\n   */\n  public synchronized long getAvailableBytes(BlockStoreLocation location) {\n    long spaceAvailable = 0;\n\n    if (location.equals(BlockStoreLocation.anyTier())) {\n      for (StorageTier tier : getTiers()) {\n        spaceAvailable += tier.getAvailableBytes();\n      }\n      return spaceAvailable;\n    }\n\n    int tierAlias = location.tierAlias();\n    StorageTier tier = getTier(tierAlias);\n    // TODO: This should probably be max of the capacity bytes in the dirs?\n    if (location.equals(BlockStoreLocation.anyDirInTier(tierAlias))) {\n      return tier.getAvailableBytes();\n    }\n\n    int dirIndex = location.dir();\n    StorageDir dir = tier.getDir(dirIndex);\n    return dir.getAvailableBytes();\n  }","id":63151,"modified_method":"/**\n   * Gets the amount of available space in given location in bytes.\n   *\n   * @param location location the check available bytes\n   * @return available bytes\n   */\n  public synchronized long getAvailableBytes(BlockStoreLocation location) throws IOException {\n    long spaceAvailable = 0;\n\n    if (location.equals(BlockStoreLocation.anyTier())) {\n      for (StorageTier tier : mTiers) {\n        spaceAvailable += tier.getAvailableBytes();\n      }\n      return spaceAvailable;\n    }\n\n    int tierAlias = location.tierAlias();\n    StorageTier tier = getTier(tierAlias);\n    // TODO: This should probably be max of the capacity bytes in the dirs?\n    if (location.equals(BlockStoreLocation.anyDirInTier(tierAlias))) {\n      return tier.getAvailableBytes();\n    }\n\n    int dirIndex = location.dir();\n    StorageDir dir = tier.getDir(dirIndex);\n    return dir.getAvailableBytes();\n  }","commit_id":"c52a045966a220f083e9217c7bd0db5a18078faf","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Aborts a temp block.\n   *\n   * @param tempBlockMeta the meta data of the temp block to add\n   * @return true if success, false otherwise\n   */\n  public synchronized boolean abortTempBlockMeta(TempBlockMeta tempBlockMeta) {\n    StorageDir dir = tempBlockMeta.getParentDir();\n    return dir.removeTempBlockMeta(tempBlockMeta);\n  }","id":63152,"modified_method":"/**\n   * Aborts a temp block.\n   *\n   * @param tempBlockMeta the meta data of the temp block to add\n   * @throws IOException\n   */\n  public synchronized void abortTempBlockMeta(TempBlockMeta tempBlockMeta) throws IOException {\n    StorageDir dir = tempBlockMeta.getParentDir();\n    dir.removeTempBlockMeta(tempBlockMeta);\n  }","commit_id":"c52a045966a220f083e9217c7bd0db5a18078faf","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Adds a temp block.\n   *\n   * @param tempBlockMeta the meta data of the temp block to add\n   * @return true if success, false otherwise\n   */\n  public synchronized boolean addTempBlockMeta(TempBlockMeta tempBlockMeta) {\n    StorageDir dir = tempBlockMeta.getParentDir();\n    return dir.addTempBlockMeta(tempBlockMeta);\n  }","id":63153,"modified_method":"/**\n   * Adds a temp block.\n   *\n   * @param tempBlockMeta the meta data of the temp block to add\n   */\n  public synchronized void addTempBlockMeta(TempBlockMeta tempBlockMeta) throws IOException {\n    StorageDir dir = tempBlockMeta.getParentDir();\n    dir.addTempBlockMeta(tempBlockMeta);\n  }","commit_id":"c52a045966a220f083e9217c7bd0db5a18078faf","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Gets the StorageTier given its tierAlias.\n   *\n   * @param tierAlias the alias of this tier\n   * @return the StorageTier object associated with the alias\n   */\n  public synchronized StorageTier getTier(int tierAlias) {\n    return mAliasToTiers.get(tierAlias);\n  }","id":63154,"modified_method":"/**\n   * Gets the StorageTier given its tierAlias.\n   *\n   * @param tierAlias the alias of this tier\n   * @return the StorageTier object associated with the alias\n   * @throws IOException if tierAlias is not found\n   */\n  public synchronized StorageTier getTier(int tierAlias) throws IOException {\n    StorageTier tier = mAliasToTiers.get(tierAlias);\n    if (tier == null) {\n      throw new IOException(\"Cannot find tier with alias \" + tierAlias);\n    }\n    return tier;\n  }","commit_id":"c52a045966a220f083e9217c7bd0db5a18078faf","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Commits a temp block.\n   *\n   * @param tempBlockMeta the meta data of the temp block to commit\n   * @return true if success, false otherwise\n   */\n  public synchronized boolean commitTempBlockMeta(TempBlockMeta tempBlockMeta) {\n    BlockMeta block = new BlockMeta(tempBlockMeta);\n    StorageDir dir = tempBlockMeta.getParentDir();\n    return dir.removeTempBlockMeta(tempBlockMeta) && dir.addBlockMeta(block).isPresent();\n\n  }","id":63155,"modified_method":"/**\n   * Commits a temp block.\n   *\n   * @param tempBlockMeta the meta data of the temp block to commit\n   * @throws IOException\n   */\n  public synchronized void commitTempBlockMeta(TempBlockMeta tempBlockMeta) throws IOException {\n    BlockMeta block = new BlockMeta(Preconditions.checkNotNull(tempBlockMeta));\n    StorageDir dir = tempBlockMeta.getParentDir();\n    dir.removeTempBlockMeta(tempBlockMeta);\n    dir.addBlockMeta(block);\n  }","commit_id":"c52a045966a220f083e9217c7bd0db5a18078faf","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Gets the metadata of a temp block.\n   *\n   * @param blockId the ID of the temp block\n   * @return metadata of the block or absent\n   */\n  public synchronized Optional<TempBlockMeta> getTempBlockMeta(long blockId) {\n    for (StorageTier tier : mTiers) {\n      for (StorageDir dir : tier.getStorageDirs()) {\n        if (dir.hasTempBlockMeta(blockId)) {\n          return dir.getTempBlockMeta(blockId);\n        }\n      }\n    }\n    return Optional.absent();\n  }","id":63156,"modified_method":"/**\n   * Gets the metadata of a temp block.\n   *\n   * @param blockId the ID of the temp block\n   * @return metadata of the block or null\n   * @throws IOException\n   */\n  public synchronized TempBlockMeta getTempBlockMeta(long blockId) throws IOException {\n    for (StorageTier tier : mTiers) {\n      for (StorageDir dir : tier.getStorageDirs()) {\n        if (dir.hasTempBlockMeta(blockId)) {\n          return dir.getTempBlockMeta(blockId);\n        }\n      }\n    }\n    throw new IOException(\"Failed to get BlockWriter: temp blockId \" + blockId + \"not found\");\n  }","commit_id":"c52a045966a220f083e9217c7bd0db5a18078faf","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Moves the metadata of an existing block to another location.\n   *\n   * @param blockId the block ID\n   * @return the new block metadata if success, absent otherwise\n   */\n  public synchronized Optional<BlockMeta> moveBlockMeta(long userId, long blockId,\n      BlockStoreLocation newLocation) {\n    // Check if the blockId is valid.\n    BlockMeta block = getBlockMeta(blockId).orNull();\n    if (block == null) {\n      LOG.error(\"No block found for block ID {}\", blockId);\n      return Optional.absent();\n    }\n\n    // If move target can be any tier, then simply return the current block meta.\n    if (newLocation.equals(BlockStoreLocation.anyTier())) {\n      return Optional.of(block);\n    }\n\n    int newTierAlias = newLocation.tierAlias();\n    StorageTier newTier = getTier(newTierAlias);\n    StorageDir newDir = null;\n    if (newLocation.equals(BlockStoreLocation.anyDirInTier(newTierAlias))) {\n      for (StorageDir dir : newTier.getStorageDirs()) {\n        if (dir.getAvailableBytes() > block.getBlockSize()) {\n          newDir = dir;\n        }\n      }\n    } else {\n      newDir = newTier.getDir(newLocation.dir());\n    }\n\n    if (newDir == null) {\n      return Optional.absent();\n    }\n    StorageDir oldDir = block.getParentDir();\n    if (!oldDir.removeBlockMeta(block)) {\n      return Optional.absent();\n    }\n    return newDir.addBlockMeta(block);\n  }","id":63157,"modified_method":"/**\n   * Moves the metadata of an existing block to another location or throws IOExceptions.\n   *\n   * @param blockId the block ID\n   * @param newLocation new location of the block\n   * @return the new block metadata if success, absent otherwise\n   * @throws IOException if this block is not found\n   */\n  public synchronized BlockMeta moveBlockMeta(long blockId, BlockStoreLocation newLocation)\n      throws IOException {\n    // Check if the blockId is valid.\n    BlockMeta blockMeta = getBlockMeta(blockId);\n\n    // If move target can be any tier, then simply return the current block meta.\n    if (newLocation.equals(BlockStoreLocation.anyTier())) {\n      return blockMeta;\n    }\n\n    int newTierAlias = newLocation.tierAlias();\n    StorageTier newTier = getTier(newTierAlias);\n    StorageDir newDir = null;\n    if (newLocation.equals(BlockStoreLocation.anyDirInTier(newTierAlias))) {\n      for (StorageDir dir : newTier.getStorageDirs()) {\n        if (dir.getAvailableBytes() >= blockMeta.getBlockSize()) {\n          newDir = dir;\n        }\n      }\n    } else {\n      newDir = newTier.getDir(newLocation.dir());\n    }\n\n    if (newDir == null) {\n      throw new IOException(\"Failed to move BlockMeta: newLocation \" + newLocation\n          + \" has not enough space for \" + blockMeta.getBlockSize() + \" bytes\");\n    }\n    StorageDir oldDir = blockMeta.getParentDir();\n    oldDir.removeBlockMeta(blockMeta);\n    newDir.addBlockMeta(blockMeta);\n    return blockMeta;\n  }","commit_id":"c52a045966a220f083e9217c7bd0db5a18078faf","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Remove the metadata of a specific block.\n   *\n   * @param block the meta data of the block to remove\n   * @return true if success, false otherwise\n   */\n  public synchronized boolean removeBlockMeta(BlockMeta block) {\n    StorageDir dir = block.getParentDir();\n    return dir.removeBlockMeta(block);\n  }","id":63158,"modified_method":"/**\n   * Remove the metadata of a specific block.\n   *\n   * @param block the meta data of the block to remove\n   * @throws IOException\n   */\n  public synchronized void removeBlockMeta(BlockMeta block) throws IOException {\n    StorageDir dir = block.getParentDir();\n    dir.removeBlockMeta(block);\n  }","commit_id":"c52a045966a220f083e9217c7bd0db5a18078faf","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Gets the metadata of a block given its blockId.\n   *\n   * @param blockId the block ID\n   * @return metadata of the block or absent\n   */\n  public synchronized Optional<BlockMeta> getBlockMeta(long blockId) {\n    for (StorageTier tier : mTiers) {\n      for (StorageDir dir : tier.getStorageDirs()) {\n        if (dir.hasBlockMeta(blockId)) {\n          return tier.getBlockMeta(blockId);\n        }\n      }\n    }\n    return Optional.absent();\n  }","id":63159,"modified_method":"/**\n   * Gets the metadata of a block given its blockId or throws IOException.\n   *\n   * @param blockId the block ID\n   * @return metadata of the block or null\n   * @throws IOException if no BlockMeta for this blockId is found\n   */\n  public synchronized BlockMeta getBlockMeta(long blockId) throws IOException {\n    for (StorageTier tier : mTiers) {\n      for (StorageDir dir : tier.getStorageDirs()) {\n        if (dir.hasBlockMeta(blockId)) {\n          return dir.getBlockMeta(blockId);\n        }\n      }\n    }\n    throw new IOException(\"Failed to get BlockMeta: blockId \" + blockId + \" not found\");\n  }","commit_id":"c52a045966a220f083e9217c7bd0db5a18078faf","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Move the metadata of a specific block to another tier.\n   *\n   * @param blockId the block ID\n   * @return the new block metadata if success, absent otherwise\n   */\n  public synchronized Optional<BlockMeta> moveBlockMeta(long userId, long blockId, int newTierAlias) {\n    StorageTier tier = getTier(newTierAlias);\n    if (tier == null) {\n      LOG.error(\"tierAlias must be valid: {}\", newTierAlias);\n      return Optional.absent();\n    }\n    Optional<BlockMeta> optionalBlock = getBlockMeta(blockId);\n    if (!optionalBlock.isPresent()) {\n      LOG.error(\"No block found for block ID {}\", blockId);\n      return Optional.absent();\n    }\n    Preconditions.checkState(removeBlockMeta(blockId));\n    return tier.addBlockMeta(userId, blockId, newTierAlias);\n  }","id":63160,"modified_method":"/**\n   * Moves the metadata of an existing block to another location.\n   *\n   * @param blockId the block ID\n   * @return the new block metadata if success, absent otherwise\n   */\n  public synchronized Optional<BlockMeta> moveBlockMeta(long userId, long blockId,\n      BlockStoreLocation newLocation) {\n    // Check if the blockId is valid.\n    BlockMeta block = getBlockMeta(blockId).orNull();\n    if (block == null) {\n      LOG.error(\"No block found for block ID {}\", blockId);\n      return Optional.absent();\n    }\n\n    // If move target can be any tier, then simply return the current block meta.\n    if (newLocation == BlockStoreLocation.anyTier()) {\n      return Optional.of(block);\n    }\n\n    int newTierAlias = newLocation.tier();\n    StorageTier newTier = getTier(newTierAlias);\n    StorageDir newDir = null;\n    if (newLocation == BlockStoreLocation.anyDirInTier(newTierAlias)) {\n      for (StorageDir dir : newTier.getStorageDirs()) {\n        if (dir.getAvailableBytes() > block.getBlockSize()) {\n          newDir = dir;\n        }\n      }\n    } else {\n      newDir = newTier.getDir(newLocation.dir());\n    }\n\n    if (newDir == null) {\n      return Optional.absent();\n    }\n    StorageDir oldDir = block.getParentDir();\n    if (!oldDir.removeBlockMeta(block)) {\n      return Optional.absent();\n    }\n    return newDir.addBlockMeta(block);\n  }","commit_id":"26983c3055cb9701eebb436728263f5f8ee2ae75","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Get the metadata of a specific block.\n   *\n   * @param blockId the block ID\n   * @return metadata of the block or absent\n   */\n  public synchronized Optional<BlockMeta> getBlockMeta(long blockId) {\n    for (StorageTier tier : mTiers.values()) {\n      Optional<BlockMeta> optionalBlock = tier.getBlockMeta(blockId);\n      if (optionalBlock.isPresent()) {\n        return optionalBlock;\n      }\n    }\n    return Optional.absent();\n  }","id":63161,"modified_method":"/**\n   * Gets the metadata of a block given its blockId.\n   *\n   * @param blockId the block ID\n   * @return metadata of the block or absent\n   */\n  public synchronized Optional<BlockMeta> getBlockMeta(long blockId) {\n    for (StorageTier tier : mTiers) {\n      for (StorageDir dir : tier.getStorageDirs()) {\n        if (dir.hasBlockMeta(blockId)) {\n          return tier.getBlockMeta(blockId);\n        }\n      }\n    }\n    return Optional.absent();\n  }","commit_id":"26983c3055cb9701eebb436728263f5f8ee2ae75","url":"https://github.com/amplab/tachyon"},{"original_method":"public BlockMetadataManager(TachyonConf tachyonConf) {\n    // Initialize storage tiers\n    int totalTiers = tachyonConf.getInt(Constants.WORKER_MAX_TIERED_STORAGE_LEVEL, 1);\n    mTiers = new HashMap<Integer, StorageTier>(totalTiers);\n    for (int i = 0; i < totalTiers; i ++) {\n      mTiers.put(i, new StorageTier(tachyonConf, i));\n    }\n  }","id":63162,"modified_method":"public BlockMetadataManager(TachyonConf tachyonConf) {\n    // Initialize storage tiers\n    int totalTiers = tachyonConf.getInt(Constants.WORKER_MAX_TIERED_STORAGE_LEVEL, 1);\n    mTiers = new ArrayList<StorageTier>(totalTiers);\n    for (int i = 0; i < totalTiers; i ++) {\n      mTiers.add(new StorageTier(tachyonConf, i));\n    }\n  }","commit_id":"26983c3055cb9701eebb436728263f5f8ee2ae75","url":"https://github.com/amplab/tachyon"},{"original_method":"public synchronized StorageTier getTier(int tierAlias) {\n    return mTiers.get(tierAlias);\n  }","id":63163,"modified_method":"/**\n   * Gets the StorageTier given its tierAlias.\n   *\n   * @param tierAlias the alias of this tier\n   * @return the StorageTier object associated with the alias\n   */\n  public synchronized StorageTier getTier(int tierAlias) {\n    return mTiers.get(tierAlias);\n  }","commit_id":"26983c3055cb9701eebb436728263f5f8ee2ae75","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Gets the metadata of a temp block.\n   *\n   * @param blockId the ID of the temp block\n   * @return metadata of the block or absent\n   */\n  public synchronized Optional<TempBlockMeta> getTempBlockMeta(long blockId) {\n    for (StorageTier tier : mTiers.values()) {\n      for (StorageDir dir : tier.getStorageDirs()) {\n        Optional<TempBlockMeta> optionalTempBlock = dir.getTempBlockMeta(blockId);\n        if (optionalTempBlock.isPresent()) {\n          return optionalTempBlock;\n        }\n      }\n    }\n    return Optional.absent();\n  }","id":63164,"modified_method":"/**\n   * Gets the metadata of a temp block.\n   *\n   * @param blockId the ID of the temp block\n   * @return metadata of the block or absent\n   */\n  public synchronized Optional<TempBlockMeta> getTempBlockMeta(long blockId) {\n    for (StorageTier tier : mTiers) {\n      for (StorageDir dir : tier.getStorageDirs()) {\n        if (dir.hasTempBlockMeta(blockId)) {\n          return dir.getTempBlockMeta(blockId);\n        }\n      }\n    }\n    return Optional.absent();\n  }","commit_id":"26983c3055cb9701eebb436728263f5f8ee2ae75","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Remove the metadata of a specific block.\n   *\n   * @param blockId the block ID\n   * @return true if success, false otherwise\n   */\n  public synchronized boolean removeBlockMeta(long blockId) {\n    for (StorageTier tier : mTiers.values()) {\n      if (tier.removeBlockMeta(blockId)) {\n        return true;\n      }\n    }\n    return false;\n  }","id":63165,"modified_method":"/**\n   * Remove the metadata of a specific block.\n   *\n   * @param blockId the block ID\n   * @return true if success, false otherwise\n   */\n  public synchronized boolean removeBlockMeta(long blockId) {\n    for (StorageTier tier : mTiers) {\n      for (StorageDir dir : tier.getStorageDirs()) {\n        if (dir.hasBlockMeta(blockId)) {\n          return dir.removeBlockMeta(blockId);\n        }\n      }\n    }\n    return false;\n  }","commit_id":"26983c3055cb9701eebb436728263f5f8ee2ae75","url":"https://github.com/amplab/tachyon"},{"original_method":"public synchronized Set<StorageTier> getTiers() {\n    return new HashSet<StorageTier>(mTiers.values());\n  }","id":63166,"modified_method":"/**\n   * Gets the list of StorageTier managed.\n   *\n   * @return the list of StorageTiers\n   */\n  public synchronized List<StorageTier> getTiers() {\n    return mTiers;\n  }","commit_id":"26983c3055cb9701eebb436728263f5f8ee2ae75","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Remove a block from this storage dir.\n   *\n   * @param blockId the block ID\n   * @return true if success, false otherwise\n   */\n  public boolean removeBlockMeta(long blockId) {\n    if (!hasBlockMeta(blockId)) {\n      return false;\n    }\n    BlockMeta block = mBlockIdToBlockMap.remove(blockId);\n    Preconditions.checkNotNull(block);\n    for (Map.Entry<Long, Set<Long>> entry : mUserIdToBlockIdsMap.entrySet()) {\n      Long userId = entry.getKey();\n      Set<Long> userBlocks = entry.getValue();\n      if (userBlocks.contains(blockId)) {\n        Preconditions.checkState(userBlocks.remove(blockId));\n        if (userBlocks.isEmpty()) {\n          mUserIdToBlockIdsMap.remove(userId);\n        }\n        mAvailableBytes += block.getBlockSize();\n        Preconditions.checkState(mCapacityBytes >= 0, \"Capacity bytes should always be \"\n            + \"non-negative\");\n        return true;\n      }\n    }\n    return false;\n  }","id":63167,"modified_method":"/**\n   * Remove a block from this storage dir.\n   *\n   * @param blockId the block ID\n   * @return true if success, false otherwise\n   */\n  public boolean removeBlockMeta(long blockId) {\n    if (!hasBlockMeta(blockId)) {\n      return false;\n    }\n    BlockMeta block = getBlockMeta(blockId).get();\n    return removeBlockMeta(block);\n  }","commit_id":"26983c3055cb9701eebb436728263f5f8ee2ae75","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Add the metadata of a new block into this storage dir.\n   *\n   * @param userId the user ID\n   * @param blockId the block ID\n   * @param blockSize the block size in bytes\n   * @return the BlockMeta or absent\n   */\n  public Optional<BlockMeta> addBlockMeta(long userId, long blockId, long blockSize) {\n    if (getAvailableBytes() < blockSize) {\n      LOG.error(\"Fail to create blockId {} in dir {}: {} bytes required, but {} bytes available\",\n          blockId, toString(), blockSize, getAvailableBytes());\n      return Optional.absent();\n    }\n    if (hasBlockMeta(blockId)) {\n      LOG.error(\"Fail to create blockId {} in dir {}: blockId exists\", blockId, toString());\n      return Optional.absent();\n    }\n    Set<Long> userBlocks = mUserIdToBlockIdsMap.get(userId);\n    if (null == userBlocks) {\n      mUserIdToBlockIdsMap.put(userId, Sets.newHashSet(blockId));\n    } else {\n      userBlocks.add(blockId);\n    }\n    BlockMeta block = new BlockMeta(blockId, blockSize, this);\n    mBlockIdToBlockMap.put(userId, block);\n    mAvailableBytes -= blockSize;\n    Preconditions.checkState(mAvailableBytes >= 0, \"Available bytes should always be non-negative\");\n    return Optional.of(block);\n  }","id":63168,"modified_method":"/**\n   * Add the metadata of a new block into this storage dir.\n   *\n   * @param userId the user ID\n   * @param blockId the block ID\n   * @param blockSize the block size in bytes\n   * @return the BlockMeta or absent\n   */\n  public Optional<BlockMeta> addBlockMeta(long userId, long blockId, long blockSize) {\n    BlockMeta block = new BlockMeta(blockId, blockSize, this);\n    return addBlockMeta(block);\n  }","commit_id":"26983c3055cb9701eebb436728263f5f8ee2ae75","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Remove a block from this storage dir.\n   *\n   * @param blockId the block ID\n   * @return true if success, false otherwise\n   */\n  public boolean removeTempBlockMeta(long blockId) {\n    if (!hasTempBlockMeta(blockId)) {\n      return false;\n    }\n    TempBlockMeta tempBlockMeta = mBlockIdToTempBlockMap.remove(blockId);\n    Preconditions.checkNotNull(tempBlockMeta);\n    for (Map.Entry<Long, Set<Long>> entry : mUserIdToBlockIdsMap.entrySet()) {\n      Long userId = entry.getKey();\n      Set<Long> userBlocks = entry.getValue();\n      if (userBlocks.contains(blockId)) {\n        Preconditions.checkState(userBlocks.remove(blockId));\n        if (userBlocks.isEmpty()) {\n          mUserIdToBlockIdsMap.remove(userId);\n        }\n        mAvailableBytes += tempBlockMeta.getBlockSize();\n        Preconditions.checkState(mCapacityBytes >= 0, \"Capacity bytes should always be \"\n            + \"non-negative\");\n        return true;\n      }\n    }\n    return false;\n  }","id":63169,"modified_method":"/**\n   * Remove a block from this storage dir.\n   *\n   * @param blockId the block ID\n   * @return true if success, false otherwise\n   */\n  public boolean removeTempBlockMeta(long blockId) {\n    if (!hasTempBlockMeta(blockId)) {\n      return false;\n    }\n    TempBlockMeta block = getTempBlockMeta(blockId).get();\n    return removeTempBlockMeta(block);\n  }","commit_id":"26983c3055cb9701eebb436728263f5f8ee2ae75","url":"https://github.com/amplab/tachyon"},{"original_method":"public StorageDir(StorageTier tier, int dirId, long capacityBytes, String dirPath) {\n    mTier = Preconditions.checkNotNull(tier);\n    mDirId = dirId;\n    mCapacityBytes = capacityBytes;\n    mAvailableBytes = capacityBytes;\n    mDirPath = dirPath;\n    mBlockIdToBlockMap = new HashMap<Long, BlockMeta>(200);\n    mUserIdToBlockIdsMap = new HashMap<Long, Set<Long>>(20);\n  }","id":63170,"modified_method":"public StorageDir(StorageTier tier, int dirId, long capacityBytes, String dirPath) {\n    mTier = Preconditions.checkNotNull(tier);\n    mDirId = dirId;\n    mCapacityBytes = capacityBytes;\n    mAvailableBytes = capacityBytes;\n    mDirPath = dirPath;\n    mBlockIdToBlockMap = new HashMap<Long, BlockMeta>(200);\n  }","commit_id":"26983c3055cb9701eebb436728263f5f8ee2ae75","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Add the metadata of a new block into this storage dir.\n   *\n   * @param tempBlockMeta\n   * @return the BlockMeta or absent\n   */\n  public boolean addTempBlockMeta(TempBlockMeta tempBlockMeta) {\n    long userId = tempBlockMeta.getUserId();\n    long blockId = tempBlockMeta.getBlockId();\n    long blockSize = tempBlockMeta.getBlockSize();\n    mBlockIdToTempBlockMap.put(blockId, tempBlockMeta);\n    Set<Long> userTempBlocks = mUserIdToTempBlockIdsMap.get(userId);\n    if (null == userTempBlocks) {\n      mUserIdToBlockIdsMap.put(userId, Sets.newHashSet(blockId));\n    } else {\n      userTempBlocks.add(blockId);\n    }\n    mAvailableBytes -= blockSize;\n    return true;\n  }","id":63171,"modified_method":"/**\n   * Add the metadata of a new block into this storage dir.\n   *\n   * @param tempBlockMeta\n   * @return the BlockMeta or absent\n   */\n  public boolean addTempBlockMeta(TempBlockMeta tempBlockMeta) {\n    long userId = tempBlockMeta.getUserId();\n    long blockId = tempBlockMeta.getBlockId();\n    long blockSize = tempBlockMeta.getBlockSize();\n    mBlockIdToTempBlockMap.put(blockId, tempBlockMeta);\n    Set<Long> userTempBlocks = mUserIdToTempBlockIdsMap.get(userId);\n    if (null == userTempBlocks) {\n      mUserIdToTempBlockIdsMap.put(userId, Sets.newHashSet(blockId));\n    } else {\n      userTempBlocks.add(blockId);\n    }\n    mAvailableBytes -= blockSize;\n    return true;\n  }","commit_id":"26983c3055cb9701eebb436728263f5f8ee2ae75","url":"https://github.com/amplab/tachyon"},{"original_method":"public StorageTier(TachyonConf tachyonConf, int tierAlias) {\n    mTierAlias = tierAlias;\n    String tierDirPathConf =\n        String.format(Constants.WORKER_TIERED_STORAGE_LEVEL_DIRS_PATH_FORMAT, tierAlias);\n    String[] dirPaths = tachyonConf.get(tierDirPathConf, \"/mnt/ramdisk\").split(\",\");\n\n    String tierDirCapacityConf =\n        String.format(Constants.WORKER_TIERED_STORAGE_LEVEL_DIRS_QUOTA_FORMAT, tierAlias);\n    String[] dirQuotas = tachyonConf.get(tierDirCapacityConf, \"0\").split(\",\");\n\n    mIdToStorageDirMap = new ArrayList<StorageDir>(dirPaths.length);\n\n    for (int i = 0; i < dirPaths.length; i ++) {\n      int index = i >= dirQuotas.length ? dirQuotas.length - 1 : i;\n      long capacity = CommonUtils.parseSpaceSize(dirQuotas[index]);\n      mIdToStorageDirMap.add(new StorageDir(this, i, capacity, dirPaths[i]));\n    }\n  }","id":63172,"modified_method":"public StorageTier(TachyonConf tachyonConf, int tierAlias) {\n    mTierAlias = tierAlias;\n    String tierDirPathConf =\n        String.format(Constants.WORKER_TIERED_STORAGE_LEVEL_DIRS_PATH_FORMAT, tierAlias);\n    String[] dirPaths = tachyonConf.get(tierDirPathConf, \"/mnt/ramdisk\").split(\",\");\n\n    String tierDirCapacityConf =\n        String.format(Constants.WORKER_TIERED_STORAGE_LEVEL_DIRS_QUOTA_FORMAT, tierAlias);\n    String[] dirQuotas = tachyonConf.get(tierDirCapacityConf, \"0\").split(\",\");\n\n    mDirs = new ArrayList<StorageDir>(dirPaths.length);\n\n    for (int i = 0; i < dirPaths.length; i ++) {\n      int index = i >= dirQuotas.length ? dirQuotas.length - 1 : i;\n      long capacity = CommonUtils.parseSpaceSize(dirQuotas[index]);\n      mDirs.add(new StorageDir(this, i, capacity, dirPaths[i]));\n    }\n  }","commit_id":"26983c3055cb9701eebb436728263f5f8ee2ae75","url":"https://github.com/amplab/tachyon"},{"original_method":"public Optional<BlockMeta> getBlockMeta(long blockId) {\n    for (StorageDir dir : mIdToStorageDirMap) {\n      Optional<BlockMeta> optionalBlock = dir.getBlockMeta(blockId);\n      if (optionalBlock.isPresent()) {\n        return optionalBlock;\n      }\n    }\n    return Optional.absent();\n  }","id":63173,"modified_method":"public Optional<BlockMeta> getBlockMeta(long blockId) {\n    for (StorageDir dir : mDirs) {\n      Optional<BlockMeta> optionalBlock = dir.getBlockMeta(blockId);\n      if (optionalBlock.isPresent()) {\n        return optionalBlock;\n      }\n    }\n    return Optional.absent();\n  }","commit_id":"26983c3055cb9701eebb436728263f5f8ee2ae75","url":"https://github.com/amplab/tachyon"},{"original_method":"public Set<StorageDir> getStorageDirs() {\n    return new HashSet<StorageDir>(mIdToStorageDirMap);\n  }","id":63174,"modified_method":"public Set<StorageDir> getStorageDirs() {\n    return new HashSet<StorageDir>(mDirs);\n  }","commit_id":"26983c3055cb9701eebb436728263f5f8ee2ae75","url":"https://github.com/amplab/tachyon"},{"original_method":"public long getAvailableBytes() {\n    long availableBytes = 0;\n    for (StorageDir dir : mIdToStorageDirMap) {\n      availableBytes += dir.getAvailableBytes();\n    }\n    return availableBytes;\n  }","id":63175,"modified_method":"public long getAvailableBytes() {\n    long availableBytes = 0;\n    for (StorageDir dir : mDirs) {\n      availableBytes += dir.getAvailableBytes();\n    }\n    return availableBytes;\n  }","commit_id":"26983c3055cb9701eebb436728263f5f8ee2ae75","url":"https://github.com/amplab/tachyon"},{"original_method":"public long getCapacityBytes() {\n    long capacityBytes = 0;\n    for (StorageDir dir : mIdToStorageDirMap) {\n      capacityBytes += dir.getCapacityBytes();\n    }\n    return capacityBytes;\n  }","id":63176,"modified_method":"public long getCapacityBytes() {\n    long capacityBytes = 0;\n    for (StorageDir dir : mDirs) {\n      capacityBytes += dir.getCapacityBytes();\n    }\n    return capacityBytes;\n  }","commit_id":"26983c3055cb9701eebb436728263f5f8ee2ae75","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n    public void transferPerfTest() throws Exception {\n        final int max = 5000000;\n        final AtomicLong i = new AtomicLong(0);\n        final CountDownLatch latch = new CountDownLatch(1);\n\n        Executors.newSingleThreadExecutor().execute(new Runnable() {\n            public void run() {\n                System.out.println(\"Starting loop\");\n                while (i.incrementAndGet() < max) {\n                    Transfer in = new Transfer();\n                    in.setDeliveryTag(new Buffer((\"\" + i.get()).getBytes()));\n                    in.setDeliveryID(i.get() + 1);\n                    in.setHandle(0L);\n                    in.setMessageFormat(0L);\n                    try {\n                        Transfer out = writeRead(in);\n                    } catch (Exception e) {\n                        latch.countDown();\n                        e.printStackTrace();\n                        return;\n                    }\n                }\n                System.out.println(\"Finished loop\");\n                latch.countDown();\n            }\n        });\n\n        int last = 0;\n        while (latch.await(5, TimeUnit.SECONDS) == false) {\n            int sample = i.intValue() - last;\n            last = last + sample;\n            System.out.println(\"msgs/s : \" + (sample / 5));\n        }\n        Assert.assertTrue(i.get() == max);\n    }","id":63177,"modified_method":"@Test\n    public void transferPerfTest() throws Exception {\n        final int max = 10000000;\n        final AtomicLong i = new AtomicLong(0);\n        final CountDownLatch latch = new CountDownLatch(1);\n\n        Executors.newSingleThreadExecutor().execute(new Runnable() {\n            public void run() {\n                System.out.println(\"Starting loop\");\n                while (i.incrementAndGet() < max) {\n                    Transfer in = new Transfer();\n                    in.setDeliveryTag(new Buffer((\"\" + i.get()).getBytes()));\n                    in.setDeliveryID(i.get() + 1);\n                    in.setHandle(0L);\n                    in.setMessageFormat(0L);\n                    try {\n                        Transfer out = writeRead(in, false);\n                    } catch (Exception e) {\n                        latch.countDown();\n                        e.printStackTrace();\n                        return;\n                    }\n                }\n                System.out.println(\"Finished loop\");\n                latch.countDown();\n            }\n        });\n\n        int last = 0;\n        while (latch.await(1, TimeUnit.SECONDS) == false) {\n            last = printMsgsPerSec(i.intValue(), last);\n        }\n        last = printMsgsPerSec(i.intValue(), last);\n        Assert.assertTrue(i.get() == max);\n    }","commit_id":"72774bad93da3dcfa26083d17ccf51a59383683a","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public void generateDescribedFields() {\n        Log.info(\"\");\n        Log.info(\"Generating %s\", cls().binaryName());\n\n        for ( Object obj : type.getEncodingOrDescriptorOrFieldOrChoiceOrDoc() ) {\n            if ( obj instanceof Field ) {\n                Field field = (Field) obj;\n                String fieldType = field.getType();\n                String fieldName = sanitize(field.getName());\n\n                Log.info(\"Field type for field %s : %s\", fieldName, fieldType);\n\n                if (fieldType.equals(\"*\")) {\n                    fieldType = generator.getAmqpBaseType();\n                    /*\n                    if ( field.getRequires() != null ) {\n                        String requiredType = field.getRequires();\n                        if (generator.getProvides().contains(requiredType)) {\n                            fieldType = generator.getInterfaces() + \".\" + toJavaClassName(requiredType);\n                        }\n                    }\n                    */\n                } else if (generator.getDescribed().containsKey(fieldType)) {\n                    fieldType = generator.getDescribedJavaClass().get(field.getType());\n                } else if (generator.getRestricted().containsKey(fieldType)) {\n                    fieldType = generator.getRestrictedMapping().get(field.getType());\n                }\n\n                if ( fieldType != null ) {\n                    boolean array = false;\n                    if ( field.getMultiple() != null && field.getMultiple().equals(\"true\") ) {\n                        array = true;\n                    }\n\n                    Log.info(\"Using field type %s\", fieldType);\n\n                    Class clazz = generator.getMapping().get(fieldType);\n                    JClass c = null;\n                    if (fieldType.equals(generator.getAmqpBaseType())) {\n                        c = cm.ref(fieldType);\n                    } else if ( clazz == null ) {\n                        c = cm._getClass(fieldType);\n                    } else {\n                        if (array) {\n                            c = cm.ref(generator.getPrimitiveJavaClass().get(fieldType));\n                        } else {\n                            c = cm.ref(clazz.getName());\n                        }\n                    }\n                    if ( array ) {\n                        c = c.array();\n                    }\n                    Log.info(\"%s %s\", c.binaryName(), fieldName);\n                    Attribute attribute = new Attribute();\n                    attribute.attribute = cls().field(JMod.PROTECTED, c, fieldName);\n\n                    attribute.type = fieldType;\n\n                    String doc = field.getName() + \":\" + field.getType();\n\n                    if ( field.getLabel() != null ) {\n                        doc += \" - \" + field.getLabel();\n                    }\n                    attribute.attribute.javadoc().add(doc);\n\n                    attribute.getter = cls().method(JMod.PUBLIC, attribute.attribute.type(), \"get\" + toJavaClassName(fieldName));\n                    attribute.getter.body()._return(_this().ref(attribute.attribute));\n\n                    attribute.setter = cls().method(JMod.PUBLIC, cm.VOID, \"set\" + toJavaClassName(fieldName));\n                    JVar param = attribute.setter.param(attribute.attribute.type(), fieldName);\n                    attribute.setter.body().assign(_this().ref(attribute.attribute), param);\n\n                    amqpFields.add(attribute);\n                } else {\n                    Log.info(\"Skipping field %s, type not found\", field.getName());\n                }\n            }\n        }\n\n        fillInReadMethod();\n        fillInWriteMethod();\n        fillInSizeMethod();\n        generateToString();\n\n        count = cls().method(JMod.PUBLIC, cm.INT, \"count\");\n        count().body()._return(lit(amqpFields.size()));\n    }","id":63178,"modified_method":"public void generateDescribedFields() {\n        Log.info(\"\");\n        Log.info(\"Generating %s\", cls().binaryName());\n\n        for ( Object obj : type.getEncodingOrDescriptorOrFieldOrChoiceOrDoc() ) {\n            if ( obj instanceof Field ) {\n                Field field = (Field) obj;\n                String fieldType = field.getType();\n                String fieldName = sanitize(field.getName());\n\n                Log.info(\"Field type for field %s : %s\", fieldName, fieldType);\n\n                if (fieldType.equals(\"*\")) {\n                    fieldType = generator.getAmqpBaseType();\n                    /*\n                    if ( field.getRequires() != null ) {\n                        String requiredType = field.getRequires();\n                        if (generator.getProvides().contains(requiredType)) {\n                            fieldType = generator.getInterfaces() + \".\" + toJavaClassName(requiredType);\n                        }\n                    }\n                    */\n                } else if (generator.getDescribed().containsKey(fieldType)) {\n                    fieldType = generator.getDescribedJavaClass().get(field.getType());\n                } else if (generator.getRestricted().containsKey(fieldType)) {\n                    fieldType = generator.getRestrictedMapping().get(field.getType());\n                }\n\n                if ( fieldType != null ) {\n                    boolean array = false;\n                    if ( field.getMultiple() != null && field.getMultiple().equals(\"true\") ) {\n                        array = true;\n                    }\n\n                    Log.info(\"Using field type %s\", fieldType);\n\n                    Class clazz = generator.getMapping().get(fieldType);\n                    JClass c = null;\n                    if (fieldType.equals(generator.getAmqpBaseType())) {\n                        c = cm.ref(fieldType);\n                    } else if ( clazz == null ) {\n                        c = cm._getClass(fieldType);\n                    } else {\n                        if (array) {\n                            c = cm.ref(generator.getPrimitiveJavaClass().get(fieldType));\n                        } else {\n                            c = cm.ref(clazz.getName());\n                        }\n                    }\n                    if ( array ) {\n                        c = c.array();\n                    }\n                    Log.info(\"%s %s\", c.binaryName(), fieldName);\n                    Attribute attribute = new Attribute();\n                    attribute.attribute = cls().field(JMod.PROTECTED, c, fieldName);\n\n                    attribute.type = fieldType;\n\n                    String doc = field.getName() + \":\" + field.getType();\n\n                    if ( field.getLabel() != null ) {\n                        doc += \" - \" + field.getLabel();\n                    }\n                    attribute.attribute.javadoc().add(doc);\n\n                    attribute.getter = cls().method(JMod.PUBLIC, attribute.attribute.type(), \"get\" + toJavaClassName(fieldName));\n                    attribute.getter.body()._return(_this().ref(attribute.attribute));\n\n                    attribute.setter = cls().method(JMod.PUBLIC, cm.VOID, \"set\" + toJavaClassName(fieldName));\n                    JVar param = attribute.setter.param(attribute.attribute.type(), fieldName);\n                    attribute.setter.body().assign(_this().ref(attribute.attribute), param);\n\n                    amqpFields.add(attribute);\n                } else {\n                    Log.info(\"Skipping field %s, type not found\", field.getName());\n                }\n            }\n        }\n\n        generateCount();\n        fillInReadMethod();\n        fillInWriteMethod();\n        fillInSizeMethod();\n        generateToString();\n    }","commit_id":"72774bad93da3dcfa26083d17ccf51a59383683a","url":"https://github.com/fabric8io/fabric8"},{"original_method":"private void fillInWriteMethod() {\n        writeConstructor().body().block().invoke(ref(\"out\"), \"writeByte\").arg(generator.registry().cls().staticRef(\"DESCRIBED_FORMAT_CODE\"));\n        writeConstructor().body().block().staticInvoke(cm.ref(generator.getPrimitiveJavaClass().get(\"ulong\")), \"write\").arg(ref(\"NUMERIC_ID\")).arg(ref(\"out\"));\n        writeConstructor().body()._return(cast(cm.BYTE, lit(0)));\n\n        write().body().invoke(\"writeConstructor\").arg(ref(\"out\"));\n        write().body().invoke(\"writeBody\").arg(cast(cm.BYTE, lit((byte) 0))).arg(ref(\"out\"));\n\n        writeBody().body().decl(cm.LONG, \"fieldSize\", _this().invoke(\"sizeOfFields\"));\n\n        writeBody().body().staticInvoke(cm.ref(generator.getMarshaller() + \".DescribedTypeSupport\"), \"writeListHeader\").arg(ref(\"fieldSize\")).arg(_this().invoke(\"count\")).arg(ref(\"out\"));\n\n        for (Attribute attribute : amqpFields) {\n            if (attribute.attribute.type().isArray()) {\n                writeBody().body().block().staticInvoke(cm.ref(\"AMQPArray\"), \"write\").arg(_this().ref(attribute.attribute.name())).arg(ref(\"out\"));\n            } else if (generator.getMapping().get(attribute.type) != null) {\n                writeBody().body().block().staticInvoke(cm.ref(generator.getPrimitiveJavaClass().get(attribute.type)), \"write\").arg(_this().ref(attribute.attribute.name())).arg(ref(\"out\"));\n            } else {\n                JConditional conditional = writeBody.body()\n                        ._if(ref(attribute.attribute.name()).ne(_null()));\n                conditional._then()\n                        .invoke(ref(attribute.attribute.name()), \"write\").arg(ref(\"out\"));\n                conditional._else().invoke(ref(\"out\"), \"writeByte\").arg(generator.registry().cls().staticRef(\"NULL_FORMAT_CODE\"));\n            }\n        }\n    }","id":63179,"modified_method":"private void fillInWriteMethod() {\n        writeConstructor().body().block().invoke(ref(\"out\"), \"writeByte\").arg(generator.registry().cls().staticRef(\"DESCRIBED_FORMAT_CODE\"));\n        writeConstructor().body().block().staticInvoke(cm.ref(generator.getPrimitiveJavaClass().get(\"ulong\")), \"write\").arg(ref(\"NUMERIC_ID\")).arg(ref(\"out\"));\n        writeConstructor().body()._return(cast(cm.BYTE, lit(0)));\n\n        write().body().invoke(\"writeConstructor\").arg(ref(\"out\"));\n        write().body().invoke(\"writeBody\").arg(cast(cm.BYTE, lit((byte) 0))).arg(ref(\"out\"));\n\n        writeBody().body().decl(cm.LONG, \"fieldSize\", _this().invoke(\"sizeOfFields\"));\n        writeBody().body().decl(cm.INT, \"count\", _this().invoke(\"count\"));\n\n        writeBody().body().staticInvoke(cm.ref(generator.getMarshaller() + \".DescribedTypeSupport\"), \"writeListHeader\").arg(ref(\"fieldSize\")).arg(ref(\"count\")).arg(ref(\"out\"));\n\n        for (Attribute attribute : amqpFields) {\n            writeBody().body().assign(ref(\"count\"), ref(\"count\").minus(lit(1)));\n            JBlock ifBody = writeBody().body()._if(ref(\"count\").gte(lit(0)))._then();\n            if (attribute.attribute.type().isArray()) {\n                ifBody.staticInvoke(cm.ref(\"AMQPArray\"), \"write\").arg(_this().ref(attribute.attribute.name())).arg(ref(\"out\"));\n            } else if (generator.getMapping().get(attribute.type) != null) {\n                ifBody.staticInvoke(cm.ref(generator.getPrimitiveJavaClass().get(attribute.type)), \"write\").arg(_this().ref(attribute.attribute.name())).arg(ref(\"out\"));\n            } else {\n                JConditional conditional = ifBody\n                        ._if(ref(attribute.attribute.name()).ne(_null()));\n                conditional._then()\n                        .invoke(ref(attribute.attribute.name()), \"write\").arg(ref(\"out\"));\n                conditional._else().invoke(ref(\"out\"), \"writeByte\").arg(generator.registry().cls().staticRef(\"NULL_FORMAT_CODE\"));\n            }\n        }\n    }","commit_id":"72774bad93da3dcfa26083d17ccf51a59383683a","url":"https://github.com/fabric8io/fabric8"},{"original_method":"private void fillInSizeMethod() {\n        size().body()._return(invoke(\"sizeOfConstructor\").plus(invoke(\"sizeOfBody\")));\n        sizeOfConstructor().body()._return(ref(\"NUMERIC_ID_SIZE\"));\n        JMethod sizeOfFields = cls().method(JMod.PRIVATE, cm.LONG, \"sizeOfFields\");\n\n        sizeOfFields.body().decl(cm.LONG, \"fieldSize\", lit(0L));\n\n        for (Attribute attribute : amqpFields) {\n            if (generator.getMapping().get(attribute.type) != null) {\n                if (attribute.attribute.type().isArray()) {\n                    sizeOfFields.body().assign(ref(\"fieldSize\"), ref(\"fieldSize\").plus(\n                            generator.registry().cls().staticInvoke(\"instance\")\n                            .invoke(\"sizer\")\n                            .invoke(\"sizeOfArray\")\n                                .arg(ref(attribute.attribute.name()))));\n\n                } else {\n                    sizeOfFields.body().assign(ref(\"fieldSize\"), ref(\"fieldSize\").plus(\n                            generator.registry().cls().staticInvoke(\"instance\")\n                                    .invoke(\"sizer\")\n                                    .invoke(\"sizeOf\" + toJavaClassName(attribute.type))\n                                        .arg(ref(attribute.attribute.name()))));\n                }\n            } else {\n                if (attribute.attribute.type().isArray()) {\n                    sizeOfFields.body().assign(ref(\"fieldSize\"), ref(\"fieldSize\").plus(\n                            generator.registry().cls().staticInvoke(\"instance\")\n                                    .invoke(\"sizer\")\n                                    .invoke(\"sizeOfArray\")\n                                    .arg(ref(attribute.attribute.name()))));\n                } else {\n\n                    JConditional conditional = sizeOfFields.body()\n                            ._if(ref(attribute.attribute.name()).ne(_null()));\n\n                    conditional._then()\n                            .assign(\n                                    ref(\"fieldSize\"), ref(\"fieldSize\").plus(\n                                    ref(attribute.attribute.name()).invoke(\"size\")));\n\n                    conditional._else()\n                            .assign(ref(\"fieldSize\"), ref(\"fieldSize\").plus(lit(1L)));\n                }\n            }\n        }\n\n        sizeOfFields.body()._return(ref(\"fieldSize\"));\n        sizeOfBody().body()._return(cm.ref(generator.getMarshaller()+ \".DescribedTypeSupport\").staticInvoke(\"fullSizeOfList\").arg(_this().invoke(\"sizeOfFields\")).arg(_this().invoke(\"count\")));\n    }","id":63180,"modified_method":"private void fillInSizeMethod() {\n        size().body()._return(invoke(\"sizeOfConstructor\").plus(invoke(\"sizeOfBody\")));\n        sizeOfConstructor().body()._return(ref(\"NUMERIC_ID_SIZE\"));\n        JMethod sizeOfFields = cls().method(JMod.PRIVATE, cm.LONG, \"sizeOfFields\");\n\n        sizeOfFields.body().decl(cm.LONG, \"fieldSize\", lit(0L));\n        sizeOfFields.body().decl(cm.INT, \"count\", _this().invoke(count));\n\n        for (Attribute attribute : amqpFields) {\n            sizeOfFields.body().assign(ref(\"count\"), ref(\"count\").minus(lit(1)));\n            JBlock ifBody = sizeOfFields.body()._if(ref(\"count\").gte(lit(0)))._then();\n            if (generator.getMapping().get(attribute.type) != null) {\n                if (attribute.attribute.type().isArray()) {\n                    ifBody.assign(ref(\"fieldSize\"), ref(\"fieldSize\").plus(\n                            generator.registry().cls().staticInvoke(\"instance\")\n                            .invoke(\"sizer\")\n                            .invoke(\"sizeOfArray\")\n                                .arg(ref(attribute.attribute.name()))));\n\n                } else {\n                    ifBody.assign(ref(\"fieldSize\"), ref(\"fieldSize\").plus(\n                            generator.registry().cls().staticInvoke(\"instance\")\n                                    .invoke(\"sizer\")\n                                    .invoke(\"sizeOf\" + toJavaClassName(attribute.type))\n                                        .arg(ref(attribute.attribute.name()))));\n                }\n            } else {\n                if (attribute.attribute.type().isArray()) {\n                    ifBody.assign(ref(\"fieldSize\"), ref(\"fieldSize\").plus(\n                            generator.registry().cls().staticInvoke(\"instance\")\n                                    .invoke(\"sizer\")\n                                    .invoke(\"sizeOfArray\")\n                                    .arg(ref(attribute.attribute.name()))));\n                } else {\n\n                    JConditional conditional = ifBody\n                            ._if(ref(attribute.attribute.name()).ne(_null()));\n\n                    conditional._then()\n                            .assign(\n                                    ref(\"fieldSize\"), ref(\"fieldSize\").plus(\n                                    ref(attribute.attribute.name()).invoke(\"size\")));\n\n                    conditional._else()\n                            .assign(ref(\"fieldSize\"), ref(\"fieldSize\").plus(lit(1L)));\n                }\n            }\n        }\n\n        sizeOfFields.body()._return(ref(\"fieldSize\"));\n        sizeOfBody().body()._return(cm.ref(generator.getMarshaller()+ \".DescribedTypeSupport\").staticInvoke(\"fullSizeOfList\").arg(_this().invoke(\"sizeOfFields\")).arg(_this().invoke(\"count\")));\n    }","commit_id":"72774bad93da3dcfa26083d17ccf51a59383683a","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public static int getListWidth(byte formatCode) {\n        if (formatCode == LIST_LIST8_CODE) {\n            return LIST_LIST8_WIDTH;\n        }\n        return LIST_LIST32_CODE;\n    }","id":63181,"modified_method":"public static int getListWidth(byte formatCode) {\n        if (formatCode == LIST_LIST0_CODE) {\n            return LIST_LIST0_WIDTH;\n        }\n        if (formatCode == LIST_LIST8_CODE) {\n            return LIST_LIST8_WIDTH;\n        }\n        return LIST_LIST32_CODE;\n    }","commit_id":"72774bad93da3dcfa26083d17ccf51a59383683a","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public static byte getListEncoding(long fieldSize, long count) {\n        if (fieldSize <= (255 - LIST_LIST8_WIDTH)) {\n            return LIST_LIST8_CODE;\n        }\n        return LIST_LIST32_CODE;\n    }","id":63182,"modified_method":"public static byte getListEncoding(long fieldSize, long count) {\n        if (count == 0) {\n            return LIST_LIST0_CODE;\n        }\n        if (fieldSize <= (255 - LIST_LIST8_WIDTH)) {\n            return LIST_LIST8_CODE;\n        }\n        return LIST_LIST32_CODE;\n    }","commit_id":"72774bad93da3dcfa26083d17ccf51a59383683a","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public static long readListHeader(DataInput in) throws Exception {\n        byte formatCode = (byte)in.readUnsignedByte();\n\n        if (formatCode == LIST_LIST8_CODE) {\n            in.readUnsignedByte();\n            return in.readUnsignedByte();\n        } else if (formatCode == LIST_LIST32_CODE) {\n            TypeRegistry.instance().encoder().readUInt(in);\n            return TypeRegistry.instance().encoder().readUInt(in);\n        } else if (formatCode == TypeRegistry.NULL_FORMAT_CODE) {\n            return 0;\n        } else {\n            throw new RuntimeException(String.format(\"Unknown format code (0x%x) for list type\", formatCode));\n        }\n\n    }","id":63183,"modified_method":"public static long readListHeader(DataInput in) throws Exception {\n        byte formatCode = (byte)in.readUnsignedByte();\n\n        if (formatCode == LIST_LIST0_CODE) {\n            return 0;\n        } else if (formatCode == LIST_LIST8_CODE) {\n            in.readUnsignedByte();\n            return in.readUnsignedByte();\n        } else if (formatCode == LIST_LIST32_CODE) {\n            TypeRegistry.instance().encoder().readUInt(in);\n            return TypeRegistry.instance().encoder().readUInt(in);\n        } else if (formatCode == TypeRegistry.NULL_FORMAT_CODE) {\n            return 0;\n        } else {\n            throw new RuntimeException(String.format(\"Unknown format code (0x%x) for list type\", formatCode));\n        }\n\n    }","commit_id":"72774bad93da3dcfa26083d17ccf51a59383683a","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public static void writeListHeader(long size, long count, DataOutput out) throws Exception {\n        byte formatCode = getListEncoding(size, count);\n        out.writeByte(formatCode);\n        if (formatCode == LIST_LIST8_CODE) {\n            out.writeByte((byte)encodedListSize(size, count));\n            out.writeByte((byte)count);\n        } else {\n            TypeRegistry.instance().encoder().writeUInt(encodedListSize(size, count), out);\n            TypeRegistry.instance().encoder().writeUInt((long)count, out);\n        }\n    }","id":63184,"modified_method":"public static void writeListHeader(long size, long count, DataOutput out) throws Exception {\n        byte formatCode = getListEncoding(size, count);\n        out.writeByte(formatCode);\n        if (formatCode == LIST_LIST0_CODE) {\n            // do nothing...\n        } else if (formatCode == LIST_LIST8_CODE) {\n            out.writeByte((byte)encodedListSize(size, count));\n            out.writeByte((byte)count);\n        } else {\n            TypeRegistry.instance().encoder().writeUInt(encodedListSize(size, count), out);\n            TypeRegistry.instance().encoder().writeUInt((long)count, out);\n        }\n    }","commit_id":"72774bad93da3dcfa26083d17ccf51a59383683a","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public static <T extends AmqpType> T writeRead(T value) throws Exception {\n        byte b[] = write(value);\n        T rc = (T)read(b);\n        if (value.size() < 32 && !(value instanceof Transfer)) {\n            System.out.printf(\"%s : %s -> %s -> %s\\n\", value.getClass().getSimpleName(), value, string(b), rc);\n        }\n        return rc;\n    }","id":63185,"modified_method":"public static <T extends AmqpType> T writeRead(T value) throws Exception {\n        return writeRead(value, true);\n    }","commit_id":"72774bad93da3dcfa26083d17ccf51a59383683a","url":"https://github.com/fabric8io/fabric8"},{"original_method":"private String uploadMultiPartReport(File report, String relativeUrl) {\n    LOG.debug(\"Publish results\");\n    long startTime = System.currentTimeMillis();\n    URL url;\n    try {\n      url = new URL(serverClient.getURL() + relativeUrl);\n    } catch (MalformedURLException e) {\n      throw new IllegalArgumentException(\"Invalid URL\", e);\n    }\n    HttpRequest request = HttpRequest.post(url);\n    request.trustAllCerts();\n    request.trustAllHosts();\n    request.header(\"User-Agent\", format(\"SonarQube %s\", server.getVersion()));\n    request.basic(serverClient.getLogin(), serverClient.getPassword());\n    request.part(\"report\", null, \"application/octet-stream\", report);\n    if (!request.ok()) {\n      int responseCode = request.code();\n      if (responseCode == 401) {\n        throw new IllegalStateException(format(serverClient.getMessageWhenNotAuthorized(), CoreProperties.LOGIN, CoreProperties.PASSWORD));\n      }\n      if (responseCode == 403) {\n        // SONAR-4397 Details are in response content\n        throw new IllegalStateException(request.body());\n      }\n      throw new IllegalStateException(format(\"Fail to execute request [code=%s, url=%s]: %s\", responseCode, url, request.body()));\n    }\n    long stopTime = System.currentTimeMillis();\n    LOG.info(\"Analysis reports sent to server in \" + (stopTime - startTime) + \"ms\");\n    String responseStr = request.body();\n    SubmitResponse response = new Gson().fromJson(responseStr, SubmitResponse.class);\n    return response.getTaskId();\n  }","id":63186,"modified_method":"private String uploadMultiPartReport(File report, String relativeUrl) {\n    LOG.debug(\"Publish results\");\n    long startTime = System.currentTimeMillis();\n    URL url;\n    try {\n      url = new URL(serverClient.getURL() + relativeUrl);\n    } catch (MalformedURLException e) {\n      throw new IllegalArgumentException(\"Invalid URL\", e);\n    }\n    HttpRequest request = HttpRequest.post(url);\n    request.trustAllCerts();\n    request.trustAllHosts();\n    request.header(\"User-Agent\", format(\"SonarQube %s\", server.getVersion()));\n    request.basic(serverClient.getLogin(), serverClient.getPassword());\n    request.part(\"report\", null, \"application/octet-stream\", report);\n    if (!request.ok()) {\n      throw serverClient.handleHttpException(url.toString(), request.code(), request.body(), null);\n    }\n    long stopTime = System.currentTimeMillis();\n    LOG.info(\"Analysis reports sent to server in \" + (stopTime - startTime) + \"ms\");\n    String responseStr = request.body();\n    SubmitResponse response = new Gson().fromJson(responseStr, SubmitResponse.class);\n    return response.getTaskId();\n  }","commit_id":"d4ae9085f2cfaded243f2dba6d30ea7dfa887d89","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * @throws IllegalStateException on I/O error, not limited to the network connection and if HTTP response code > 400 and wrapHttpException is true\n   * @throws HttpDownloader.HttpException if HTTP response code > 400 and wrapHttpException is false\n   */\n  public InputStream load(String pathStartingWithSlash, String requestMethod, boolean wrapHttpException, @Nullable Integer connectTimeoutMs,\n    @Nullable Integer readTimeoutMs) {\n    URI uri = getURI(pathStartingWithSlash);\n\n    try {\n      if (Strings.isNullOrEmpty(getLogin())) {\n        return downloader.newInputSupplier(uri, requestMethod, connectTimeoutMs, readTimeoutMs).getInput();\n      } else {\n        return downloader.newInputSupplier(uri, requestMethod, getLogin(), getPassword(), connectTimeoutMs, readTimeoutMs).getInput();\n      }\n    } catch (HttpDownloader.HttpException e) {\n      if (wrapHttpException) {\n        throw handleHttpException(e);\n      } else {\n        throw e;\n      }\n    } catch (IOException e) {\n      throw new IllegalStateException(String.format(\"Unable to request: %s\", uri), e);\n    }\n  }","id":63187,"modified_method":"/**\n   * @throws IllegalStateException on I/O error, not limited to the network connection and if HTTP response code > 400 and wrapHttpException is true\n   * @throws HttpDownloader.HttpException if HTTP response code > 400 and wrapHttpException is false\n   */\n  public InputStream load(String pathStartingWithSlash, String requestMethod, boolean wrapHttpException, @Nullable Integer connectTimeoutMs,\n    @Nullable Integer readTimeoutMs) {\n    URI uri = getURI(pathStartingWithSlash);\n\n    try {\n      if (Strings.isNullOrEmpty(getLogin())) {\n        return downloader.newInputSupplier(uri, requestMethod, connectTimeoutMs, readTimeoutMs).getInput();\n      } else {\n        return downloader.newInputSupplier(uri, requestMethod, getLogin(), getPassword(), connectTimeoutMs, readTimeoutMs).getInput();\n      }\n    } catch (HttpDownloader.HttpException he) {\n      if (wrapHttpException) {\n        throw handleHttpException(he.getUri().toString(), he.getResponseCode(), he.getResponseContent(), he);\n      } else {\n        throw he;\n      }\n    } catch (IOException e) {\n      throw new IllegalStateException(String.format(\"Unable to request: %s\", uri), e);\n    }\n  }","commit_id":"d4ae9085f2cfaded243f2dba6d30ea7dfa887d89","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void download(String pathStartingWithSlash, File toFile, @Nullable Integer connectTimeoutMillis, @Nullable Integer readTimeoutMillis) {\n    try {\n      InputStream is = load(pathStartingWithSlash, GET, false, connectTimeoutMillis, readTimeoutMillis);\n      Files.copy(is, toFile.toPath(), StandardCopyOption.REPLACE_EXISTING);\n    } catch (HttpDownloader.HttpException he) {\n      throw handleHttpException(he);\n    } catch (IOException e) {\n      throw new IllegalStateException(String.format(\"Unable to download '%s' to: %s\", pathStartingWithSlash, toFile), e);\n    }\n  }","id":63188,"modified_method":"public void download(String pathStartingWithSlash, File toFile, @Nullable Integer connectTimeoutMillis, @Nullable Integer readTimeoutMillis) {\n    try {\n      InputStream is = load(pathStartingWithSlash, GET, false, connectTimeoutMillis, readTimeoutMillis);\n      Files.copy(is, toFile.toPath(), StandardCopyOption.REPLACE_EXISTING);\n    } catch (HttpDownloader.HttpException he) {\n      throw handleHttpException(he.getUri().toString(), he.getResponseCode(), he.getResponseContent(), he);\n    } catch (IOException e) {\n      throw new IllegalStateException(String.format(\"Unable to download '%s' to: %s\", pathStartingWithSlash, toFile), e);\n    }\n  }","commit_id":"d4ae9085f2cfaded243f2dba6d30ea7dfa887d89","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public RuntimeException handleHttpException(HttpDownloader.HttpException he) {\n    if (he.getResponseCode() == 401) {\n      return MessageException.of(String.format(getMessageWhenNotAuthorized(), CoreProperties.LOGIN, CoreProperties.PASSWORD), he);\n    }\n    if (he.getResponseCode() == 403) {\n      // SONAR-4397 Details are in response content\n      return MessageException.of(tryParseAsJsonError(he.getResponseContent()), he);\n    }\n    return MessageException.of(String.format(\"Fail to execute request [code=%s, url=%s]: %s\", he.getResponseCode(), he.getUri(), he.getResponseContent()), he);\n  }","id":63189,"modified_method":"public RuntimeException handleHttpException(String url, int responseCode, String responseContent, Exception he) {\n    if (responseCode == 401) {\n      return MessageException.of(String.format(getMessageWhenNotAuthorized(), CoreProperties.LOGIN, CoreProperties.PASSWORD), he);\n    }\n    if (responseCode == 403) {\n      // SONAR-4397 Details are in response content\n      return MessageException.of(tryParseAsJsonError(responseContent), he);\n    }\n    return MessageException.of(String.format(\"Fail to execute request [code=%s, url=%s]: %s\", responseCode, url, responseContent), he);\n  }","commit_id":"d4ae9085f2cfaded243f2dba6d30ea7dfa887d89","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n    public void runActivity(@NotNull Project project) {\n      VcsProjectLog projectLog = getInstance(project);\n\n      MessageBusConnection connection = project.getMessageBus().connect(project);\n      connection.subscribe(ProjectLevelVcsManager.VCS_CONFIGURATION_CHANGED, new VcsListener() {\n        @Override\n        public void directoryMappingChanged() {\n          projectLog.recreateLog();\n        }\n      });\n      if (projectLog.hasDvcsRoots()) {\n        ApplicationManager.getApplication().invokeLater(new Runnable() {\n          @Override\n          public void run() {\n            projectLog.createLog();\n          }\n        });\n      }\n    }","id":63190,"modified_method":"@Override\n    public void runActivity(@NotNull Project project) {\n      VcsProjectLog projectLog = getInstance(project);\n\n      MessageBusConnection connection = project.getMessageBus().connect(project);\n      connection.subscribe(ProjectLevelVcsManager.VCS_CONFIGURATION_CHANGED, projectLog::recreateLog);\n      if (projectLog.hasDvcsRoots()) {\n        ApplicationManager.getApplication().invokeLater(projectLog::createLog);\n      }\n    }","commit_id":"98f7c0abea61db1f7a19747be4adecc5e0c003a5","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@CalledInAwt\n  private void createLog() {\n    VcsLogManager logManager = myLogManager.getValue();\n\n    myMessageBus.syncPublisher(VCS_PROJECT_LOG_CHANGED).logCreated();\n\n    if (PostponableLogRefresher.keepUpToDate()) {\n      new HeavyAwareExecutor(myProject).execute(new Runnable() {\n        @Override\n        public void run() {\n          logManager.scheduleInitialization();\n        }\n      });\n    }\n  }","id":63191,"modified_method":"@CalledInAwt\n  private void createLog() {\n    VcsLogManager logManager = myLogManager.getValue();\n\n    myMessageBus.syncPublisher(VCS_PROJECT_LOG_CHANGED).logCreated();\n\n    if (PostponableLogRefresher.keepUpToDate()) {\n      new HeavyAwareExecutor(myProject).execute(logManager::scheduleInitialization);\n    }\n  }","commit_id":"98f7c0abea61db1f7a19747be4adecc5e0c003a5","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@CalledInAny\n  private void recreateLog() {\n    ApplicationManager.getApplication().invokeLater(new Runnable() {\n      @Override\n      public void run() {\n        disposeLog();\n\n        if (hasDvcsRoots()) {\n          createLog();\n        }\n      }\n    });\n  }","id":63192,"modified_method":"@CalledInAny\n  private void recreateLog() {\n    ApplicationManager.getApplication().invokeLater(() -> {\n      disposeLog();\n\n      if (hasDvcsRoots()) {\n        createLog();\n      }\n    });\n  }","commit_id":"98f7c0abea61db1f7a19747be4adecc5e0c003a5","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Test\n    public void testCamelOperator() throws Exception {\n        final MockEndpoint mockEndpoint1 = camelContext.getEndpoint(\"mock:results1\", MockEndpoint.class);\n        final MockEndpoint mockEndpoint2 = camelContext.getEndpoint(\"mock:results2\", MockEndpoint.class);\n        final MockEndpoint mockEndpoint3 = camelContext.getEndpoint(\"mock:results3\", MockEndpoint.class);\n        final MockEndpoint mockEndpoint4 = camelContext.getEndpoint(\"mock:results4\", MockEndpoint.class);\n        mockEndpoint1.expectedMessageCount(2);\n        mockEndpoint2.expectedMessageCount(1);\n        mockEndpoint3.expectedMessageCount(1);\n        mockEndpoint4.expectedMessageCount(2);\n\n        // Define an InOnly route\n        ConnectableObservable<Exchange> inOnly = reactiveCamel.from(\"direct:start\")\n            .lift(new CamelOperator(mockEndpoint1))\n            .lift(new CamelOperator(camelContext, \"log:inOnly\"))\n            .debounce(1, TimeUnit.SECONDS)\n            .lift(reactiveCamel.to(mockEndpoint2))\n            .lift(reactiveCamel.to(\"mock:results3\"))\n            .publish();\n\n        // Start the route\n        Subscription inSubscription = inOnly.connect();\n\n        // Send two test messages\n        producerTemplate.sendBody(\"direct:start\", \"<test1/>\");\n        producerTemplate.sendBody(\"direct:start\", \"<test2/>\");\n\n        // Define an InOut route\n        ConnectableObservable<Exchange> inOut = reactiveCamel.from(\"restlet:http://localhost:9080/test?restletMethod=POST\")\n            .map(new Func1<Exchange, Exchange>() { // Convert body to String\n                @Override\n                public Exchange call(Exchange exchange) {\n                    exchange.getIn().setBody(exchange.getIn().getBody(String.class));\n                    return exchange;\n                }\n            })\n            .lift(reactiveCamel.to(\"log:inOut\"))\n            .map(new Func1<Exchange, Exchange>() { // Change body for response\n                @Override\n                public Exchange call(Exchange exchange) {\n                    exchange.getIn().setBody(exchange.getIn().getBody(String.class) + \" back\");\n                    return exchange;\n                }\n            })\n            .lift(reactiveCamel.to(mockEndpoint4))\n            .publish();\n\n        // Start the route\n        Subscription inoutSubscription = inOut.connect();\n\n        // Send two messages and check the responses\n        given().body(\"hello\").when().post(\"http://localhost:9080/test\").then().assertThat().body(containsString(\"hello back\"));\n        given().body(\"holla\").when().post(\"http://localhost:9080/test\").then().assertThat().body(containsString(\"holla back\"));\n\n        mockEndpoint1.assertIsSatisfied();\n        mockEndpoint2.assertIsSatisfied();\n        mockEndpoint3.assertIsSatisfied();\n        mockEndpoint4.assertIsSatisfied();\n\n        // Stop the route\n        inSubscription.unsubscribe();\n\n        // Stop the route\n        inoutSubscription.unsubscribe();\n    }","id":63193,"modified_method":"@Test\n    public void testCamelOperator() throws Exception {\n        final MockEndpoint mockEndpoint1 = camelContext.getEndpoint(\"mock:results1\", MockEndpoint.class);\n        final MockEndpoint mockEndpoint2 = camelContext.getEndpoint(\"mock:results2\", MockEndpoint.class);\n        final MockEndpoint mockEndpoint3 = camelContext.getEndpoint(\"mock:results3\", MockEndpoint.class);\n        final MockEndpoint mockEndpoint4 = camelContext.getEndpoint(\"mock:results4\", MockEndpoint.class);\n        mockEndpoint1.expectedMessageCount(2);\n        mockEndpoint2.expectedMessageCount(1);\n        mockEndpoint3.expectedMessageCount(1);\n        mockEndpoint4.expectedMessageCount(2);\n\n        // Define an InOnly route\n        ConnectableObservable<Exchange> inOnly = reactiveCamel.from(\"direct:start\")\n            .lift(new CamelOperator(mockEndpoint1))\n            .lift(new CamelOperator(camelContext, \"log:inOnly\"))\n            .debounce(1, TimeUnit.SECONDS)\n            .lift(reactiveCamel.to(mockEndpoint2))\n            .lift(reactiveCamel.to(\"mock:results3\"))\n            .publish();\n\n        // Start the route\n        Subscription inSubscription = inOnly.connect();\n\n        // Send two test messages\n        producerTemplate.sendBody(\"direct:start\", \"<test1/>\");\n        producerTemplate.sendBody(\"direct:start\", \"<test2/>\");\n\n        // Define an InOut route\n        ConnectableObservable<Exchange> inOut = reactiveCamel.from(\"restlet:http://localhost:9080/test?restletMethod=POST\")\n            .map(exchange -> {\n                    exchange.getIn().setBody(exchange.getIn().getBody(String.class));\n                    return exchange;\n                })\n            .lift(reactiveCamel.to(\"log:inOut\"))\n            .map(exchange -> {\n                    exchange.getIn().setBody(exchange.getIn().getBody(String.class) + \" back\");\n                    return exchange;\n                })\n            .lift(reactiveCamel.to(mockEndpoint4))\n            .publish();\n\n        // Start the route\n        Subscription inoutSubscription = inOut.connect();\n\n        // Send two messages and check the responses\n        given().body(\"hello\").when().post(\"http://localhost:9080/test\").then().assertThat().body(containsString(\"hello back\"));\n        given().body(\"holla\").when().post(\"http://localhost:9080/test\").then().assertThat().body(containsString(\"holla back\"));\n\n        mockEndpoint1.assertIsSatisfied();\n        mockEndpoint2.assertIsSatisfied();\n        mockEndpoint3.assertIsSatisfied();\n        mockEndpoint4.assertIsSatisfied();\n\n        // Stop the route\n        inSubscription.unsubscribe();\n\n        // Stop the route\n        inoutSubscription.unsubscribe();\n    }","commit_id":"fd659c108272b1873abdf1244fc300e824d051da","url":"https://github.com/apache/camel"},{"original_method":"@Override\n        protected void configure(Observable<String> observable) {\n            // lets process the messages using the RX API\n            observable.map(new Func1<String, String>() {\n                @Override\n                public String call(String body) {\n                    return \"Hello \" + body;\n                }\n            }).subscribe(new Action1<String>() {\n                @Override\n                public void call(String body) {\n                    template.sendBody(resultEndpoint, body);\n                }\n            });\n        }","id":63194,"modified_method":"@Override\n        protected void configure(Observable<String> observable) {\n            // lets process the messages using the RX API\n            observable.map(body -> \"Hello \" + body).subscribe(body -> {\n                    template.sendBody(resultEndpoint, body);\n                });\n        }","commit_id":"fd659c108272b1873abdf1244fc300e824d051da","url":"https://github.com/apache/camel"},{"original_method":"@Override\n        protected void configure(Observable<Message> observable) {\n            // lets process the messages using the RX API\n            observable.map(new Func1<Message, String>() {\n                @Override\n                public String call(Message message) {\n                    return \"Hello \" + message.getBody(String.class);\n                }\n            }).subscribe(new Action1<String>() {\n                @Override\n                public void call(String body) {\n                    template.sendBody(resultEndpoint, body);\n                }\n            });\n        }","id":63195,"modified_method":"@Override\n        protected void configure(Observable<Message> observable) {\n            // lets process the messages using the RX API\n            observable.map(message -> \"Hello \" + message.getBody(String.class)).subscribe(body -> {\n                    template.sendBody(resultEndpoint, body);\n                });\n        }","commit_id":"fd659c108272b1873abdf1244fc300e824d051da","url":"https://github.com/apache/camel"},{"original_method":"/**\n     * Return a newly created {@link Observable} without conversion\n     */\n    protected Observable<Exchange> createEndpointObservable(final Endpoint endpoint) {\n        return new EndpointObservable<Exchange>(endpoint, new EndpointSubscribeFunc<Exchange>(endpoint, new Func1<Exchange, Exchange>() {\n            @Override\n            public Exchange call(Exchange exchange) {\n                return exchange;\n            }\n        }));\n    }","id":63196,"modified_method":"/**\n     * Return a newly created {@link Observable} without conversion\n     */\n    protected Observable<Exchange> createEndpointObservable(final Endpoint endpoint) {\n        return new EndpointObservable<Exchange>(endpoint, new EndpointSubscribeFunc<Exchange>(endpoint, exchange -> exchange));\n    }","commit_id":"fd659c108272b1873abdf1244fc300e824d051da","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testSendObservableToEndpoint() throws Exception {\n        Order[] expectedBodies = {new Order(\"o1\", 1.10), new Order(\"o2\", 2.20), new Order(\"o3\", 3.30)};\n        Observable<Order> someObservable = Observable.from(expectedBodies);\n\n        final MockEndpoint mockEndpoint = camelContext.getEndpoint(\"mock:results\", MockEndpoint.class);\n        mockEndpoint.expectedBodiesReceived((Object[]) expectedBodies);\n\n        mockEndpoint.whenAnyExchangeReceived(new Processor() {\n            @Override\n            public void process(Exchange exchange) throws Exception {\n                exchange.addOnCompletion(onCompletion);\n            }\n        });\n\n        // lets send events on the observable to the camel endpoint\n        reactiveCamel.sendTo(someObservable, \"mock:results\");\n\n        mockEndpoint.assertIsSatisfied();\n\n        Assert.assertEquals(3, onCompletion.getDone());\n    }","id":63197,"modified_method":"@Test\n    public void testSendObservableToEndpoint() throws Exception {\n        Order[] expectedBodies = {new Order(\"o1\", 1.10), new Order(\"o2\", 2.20), new Order(\"o3\", 3.30)};\n        Observable<Order> someObservable = Observable.from(expectedBodies);\n\n        final MockEndpoint mockEndpoint = camelContext.getEndpoint(\"mock:results\", MockEndpoint.class);\n        mockEndpoint.expectedBodiesReceived((Object[]) expectedBodies);\n\n        mockEndpoint.whenAnyExchangeReceived(exchange -> exchange.addOnCompletion(onCompletion));\n\n        // lets send events on the observable to the camel endpoint\n        reactiveCamel.sendTo(someObservable, \"mock:results\");\n\n        mockEndpoint.assertIsSatisfied();\n\n        Assert.assertEquals(3, onCompletion.getDone());\n    }","commit_id":"fd659c108272b1873abdf1244fc300e824d051da","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testConsume() throws Exception {\n        final MockEndpoint mockEndpoint = camelContext.getEndpoint(\"mock:results\", MockEndpoint.class);\n        mockEndpoint.expectedMessageCount(4);\n\n        Observable<Message> observableMessage = reactiveCamel.toObservable(\n                \"timer://foo?fixedRate=true&period=100\");\n\n        // transform the stream\n        Observable<String> observable = observableMessage.map(new Func1<Message, String>() {\n            @Override\n            public String call(Message message) {\n                return \"Transformed value: headers \" + message.getHeaders();\n            }\n        });\n\n        observable.take(4).subscribe(new Action1<String>() {\n            @Override\n            public void call(String body) {\n                LOG.info(body);\n                producerTemplate.sendBody(mockEndpoint, body);\n            }\n        });\n\n        mockEndpoint.assertIsSatisfied();\n    }","id":63198,"modified_method":"@Test\n    public void testConsume() throws Exception {\n        final MockEndpoint mockEndpoint = camelContext.getEndpoint(\"mock:results\", MockEndpoint.class);\n        mockEndpoint.expectedMessageCount(4);\n\n        Observable<Message> observableMessage = reactiveCamel.toObservable(\n                \"timer://foo?fixedRate=true&period=100\");\n\n        // transform the stream\n        Observable<String> observable = observableMessage.map(message -> \"Transformed value: headers \" + message.getHeaders());\n\n        observable.take(4).subscribe(body -> {\n                LOG.info(body);\n                producerTemplate.sendBody(mockEndpoint, body);\n            });\n\n        mockEndpoint.assertIsSatisfied();\n    }","commit_id":"fd659c108272b1873abdf1244fc300e824d051da","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testConsume() throws Exception {\n        final MockEndpoint mockEndpoint = camelContext.getEndpoint(\"mock:results\", MockEndpoint.class);\n        mockEndpoint.expectedBodiesReceived(\"b\", \"d\");\n\n        // lets consume, filter and map events\n        Observable<Order> observable = reactiveCamel.toObservable(\"seda:orders\", Order.class);\n        Observable<String> largeOrderIds = observable.filter(new Func1<Order, Boolean>() {\n            @Override\n            public Boolean call(Order order) {\n                return order.getAmount() > 100.0;\n            }\n        }).map(new Func1<Order, String>() {\n            @Override\n            public String call(Order order) {\n                return order.getId();\n            }\n        });\n\n\n        // lets route the largeOrderIds to the mock endpoint for testing\n        largeOrderIds.take(2).subscribe(new Action1<String>() {\n            @Override\n            public void call(String body) {\n                LOG.info(\"Processing  \" + body);\n                producerTemplate.sendBody(mockEndpoint, body);\n            }\n        });\n\n\n        // now lets send some orders in\n        Order[] orders = {new Order(\"a\", 49.95), new Order(\"b\", 125.50), new Order(\"c\", 22.95),\n            new Order(\"d\", 259.95), new Order(\"e\", 1.25)};\n        for (Order order : orders) {\n            producerTemplate.sendBody(\"seda:orders\", order);\n        }\n\n        mockEndpoint.assertIsSatisfied();\n    }","id":63199,"modified_method":"@Test\n    public void testConsume() throws Exception {\n        final MockEndpoint mockEndpoint = camelContext.getEndpoint(\"mock:results\", MockEndpoint.class);\n        mockEndpoint.expectedBodiesReceived(\"b\", \"d\");\n\n        // lets consume, filter and map events\n        Observable<Order> observable = reactiveCamel.toObservable(\"seda:orders\", Order.class);\n        Observable<String> largeOrderIds = observable.filter(order -> order.getAmount() > 100.0).map(order -> order.getId());\n\n        // lets route the largeOrderIds to the mock endpoint for testing\n        largeOrderIds.take(2).subscribe(body -> {\n                LOG.info(\"Processing  \" + body);\n                producerTemplate.sendBody(mockEndpoint, body);\n            });\n\n        // now lets send some orders in\n        Order[] orders = {new Order(\"a\", 49.95), new Order(\"b\", 125.50), new Order(\"c\", 22.95),\n            new Order(\"d\", 259.95), new Order(\"e\", 1.25)};\n        for (Order order : orders) {\n            producerTemplate.sendBody(\"seda:orders\", order);\n        }\n\n        mockEndpoint.assertIsSatisfied();\n    }","commit_id":"fd659c108272b1873abdf1244fc300e824d051da","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testConsume() throws Exception {\n        final MockEndpoint mockEndpoint = camelContext.getEndpoint(\"mock:results\", MockEndpoint.class);\n        mockEndpoint.expectedMessageCount(4);\n\n        Observable<Message> observable = reactiveCamel.toObservable(\"timer://foo?fixedRate=true&period=100\");\n        observable.take(4).subscribe(new Action1<Message>() {\n            @Override\n            public void call(Message message) {\n                String body = \"Processing message headers \" + message.getHeaders();\n                LOG.info(body);\n                producerTemplate.sendBody(mockEndpoint, body);\n            }\n        });\n\n        mockEndpoint.assertIsSatisfied();\n    }","id":63200,"modified_method":"@Test\n    public void testConsume() throws Exception {\n        final MockEndpoint mockEndpoint = camelContext.getEndpoint(\"mock:results\", MockEndpoint.class);\n        mockEndpoint.expectedMessageCount(4);\n\n        Observable<Message> observable = reactiveCamel.toObservable(\"timer://foo?fixedRate=true&period=100\");\n        observable.take(4).subscribe(message -> {\n                String body = \"Processing message headers \" + message.getHeaders();\n                LOG.info(body);\n                producerTemplate.sendBody(mockEndpoint, body);\n            });\n\n        mockEndpoint.assertIsSatisfied();\n    }","commit_id":"fd659c108272b1873abdf1244fc300e824d051da","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testConsumeUoW() throws Exception {\n        final MockEndpoint mockEndpoint = camelContext.getEndpoint(\"mock:results\", MockEndpoint.class);\n        mockEndpoint.expectedBodiesReceivedInAnyOrder(\"Hello World\", \"Bye World\");\n\n        Observable<Message> observable = reactiveCamel.toObservable(\"file://target/foo?move=done\");\n        observable.subscribe(new Action1<Message>() {\n            @Override\n            public void call(Message message) {\n                String body = message.getBody(String.class);\n                producerTemplate.sendBody(\"mock:results\", body);\n            }\n        });\n\n        producerTemplate.sendBodyAndHeader(\"file://target/foo\", \"Hello World\", Exchange.FILE_NAME, \"hello.txt\");\n        producerTemplate.sendBodyAndHeader(\"file://target/foo\", \"Bye World\", Exchange.FILE_NAME, \"bye.txt\");\n\n        mockEndpoint.expectedFileExists(\"target/foo/done/hello.txt\");\n        mockEndpoint.expectedFileExists(\"target/foo/done/bye.txt\");\n\n        mockEndpoint.assertIsSatisfied();\n    }","id":63201,"modified_method":"@Test\n    public void testConsumeUoW() throws Exception {\n        final MockEndpoint mockEndpoint = camelContext.getEndpoint(\"mock:results\", MockEndpoint.class);\n        mockEndpoint.expectedBodiesReceivedInAnyOrder(\"Hello World\", \"Bye World\");\n\n        Observable<Message> observable = reactiveCamel.toObservable(\"file://target/foo?move=done\");\n        observable.subscribe(message -> {\n                String body = message.getBody(String.class);\n                producerTemplate.sendBody(\"mock:results\", body);\n            });\n\n        producerTemplate.sendBodyAndHeader(\"file://target/foo\", \"Hello World\", Exchange.FILE_NAME, \"hello.txt\");\n        producerTemplate.sendBodyAndHeader(\"file://target/foo\", \"Bye World\", Exchange.FILE_NAME, \"bye.txt\");\n\n        mockEndpoint.expectedFileExists(\"target/foo/done/hello.txt\");\n        mockEndpoint.expectedFileExists(\"target/foo/done/bye.txt\");\n\n        mockEndpoint.assertIsSatisfied();\n    }","commit_id":"fd659c108272b1873abdf1244fc300e824d051da","url":"https://github.com/apache/camel"},{"original_method":"private void updateStatus(PsiFile file) {\n    if (isStateChangeable(file)) {\n      if (PowerSaveMode.isEnabled()) {\n        myCurrentIcon = AllIcons.Ide.HectorNo;\n        myToolTipText = \"Code analysis is disabled in power save mode.\\n\";\n      }\n      else if (HighlightingLevelManager.getInstance(myProject).shouldInspect(file)) {\n        myCurrentIcon = AllIcons.Ide.HectorOn;\n        myToolTipText = \"Current inspection profile: \" +\n                        InspectionProjectProfileManager.getInstance(file.getProject()).getCurrentProfile().getName() +\n                        \".\\n\";\n      }\n      else if (HighlightingLevelManager.getInstance(myProject).shouldHighlight(file)) {\n        myCurrentIcon = AllIcons.Ide.HectorSyntax;\n        myToolTipText = \"Highlighting level is: Syntax.\\n\";\n      }\n      else {\n        myCurrentIcon = AllIcons.Ide.HectorOff;\n        myToolTipText = \"Inspections are off.\\n\";\n      }\n      myToolTipText += UIBundle.message(\"popup.hints.panel.click.to.configure.highlighting.tooltip.text\");\n    }\n    else {\n      myCurrentIcon = AllIcons.Ide.HectorNo;\n      myToolTipText = null;\n    }\n\n    if (!ApplicationManager.getApplication().isUnitTestMode() && myStatusBar != null) {\n      myStatusBar.updateWidget(ID());\n    }\n  }","id":63202,"modified_method":"private void updateStatus(PsiFile file) {\n    if (isDisposed()) return;\n    if (isStateChangeable(file)) {\n      if (PowerSaveMode.isEnabled()) {\n        myCurrentIcon = AllIcons.Ide.HectorNo;\n        myToolTipText = \"Code analysis is disabled in power save mode.\\n\";\n      }\n      else if (HighlightingLevelManager.getInstance(myProject).shouldInspect(file)) {\n        myCurrentIcon = AllIcons.Ide.HectorOn;\n        myToolTipText = \"Current inspection profile: \" +\n                        InspectionProjectProfileManager.getInstance(file.getProject()).getCurrentProfile().getName() +\n                        \".\\n\";\n      }\n      else if (HighlightingLevelManager.getInstance(myProject).shouldHighlight(file)) {\n        myCurrentIcon = AllIcons.Ide.HectorSyntax;\n        myToolTipText = \"Highlighting level is: Syntax.\\n\";\n      }\n      else {\n        myCurrentIcon = AllIcons.Ide.HectorOff;\n        myToolTipText = \"Inspections are off.\\n\";\n      }\n      myToolTipText += UIBundle.message(\"popup.hints.panel.click.to.configure.highlighting.tooltip.text\");\n    }\n    else {\n      myCurrentIcon = AllIcons.Ide.HectorNo;\n      myToolTipText = null;\n    }\n\n    if (!ApplicationManager.getApplication().isUnitTestMode() && myStatusBar != null) {\n      myStatusBar.updateWidget(ID());\n    }\n  }","commit_id":"1966a7d8f9493786b710bd93a396b8e08c247da2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void updateStatus() {\n    updateStatus(getCurrentFile());\n  }","id":63203,"modified_method":"public void updateStatus() {\n    UIUtil.invokeLaterIfNeeded(() -> updateStatus(getCurrentFile()));\n  }","commit_id":"1966a7d8f9493786b710bd93a396b8e08c247da2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public TogglePopupHintsPanel(@NotNull final Project project) {\n    super(project);\n    myCurrentIcon = AllIcons.Ide.HectorNo;\n    myConnection.subscribe(PowerSaveMode.TOPIC, new PowerSaveMode.Listener() {\n      @Override\n      public void powerSaveStateChanged() {\n        updateStatus();\n      }\n    });\n  }","id":63204,"modified_method":"public TogglePopupHintsPanel(@NotNull final Project project) {\n    super(project);\n    myCurrentIcon = AllIcons.Ide.HectorNo;\n    myConnection.subscribe(PowerSaveMode.TOPIC, this::updateStatus);\n  }","commit_id":"1966a7d8f9493786b710bd93a396b8e08c247da2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void inspectionProfilesInitialized() {\n    UIUtil.invokeLaterIfNeeded(new Runnable() {\n      @Override\n      public void run() {\n        if (myProject.isDisposed()) return;\n        StatusBar statusBar = WindowManager.getInstance().getStatusBar(myProject);\n        myTogglePopupHintsPanel = new TogglePopupHintsPanel(myProject);\n        statusBar.addWidget(myTogglePopupHintsPanel, myProject);\n        updateStatusBar();\n\n        stopDaemonAndRestartAllFiles(\"Inspection profiles activated\");\n      }\n    });\n  }","id":63205,"modified_method":"private void inspectionProfilesInitialized() {\n    UIUtil.invokeLaterIfNeeded(() -> {\n      if (myProject.isDisposed()) return;\n      StatusBar statusBar = WindowManager.getInstance().getStatusBar(myProject);\n      myTogglePopupHintsPanel = new TogglePopupHintsPanel(myProject);\n      statusBar.addWidget(myTogglePopupHintsPanel, myProject);\n      updateStatusBar();\n\n      stopDaemonAndRestartAllFiles(\"Inspection profiles activated\");\n    });\n  }","commit_id":"52e139227938f981cbb77b544c216c168d987e52","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MyEditorMouseListener(@NotNull TooltipController tooltipController) {\n      myTooltipController = tooltipController;\n    }","id":63206,"modified_method":"MyEditorMouseListener(@NotNull TooltipController tooltipController) {\n      myTooltipController = tooltipController;\n    }","commit_id":"52e139227938f981cbb77b544c216c168d987e52","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void queueElement(@NotNull PsiElement child, final boolean whitespaceOptimizationAllowed, @NotNull PsiTreeChangeEvent event) {\n    PsiFile file = event.getFile();\n    if (file == null) file = child.getContainingFile();\n    if (file == null) {\n      myFileStatusMap.markAllFilesDirty(child);\n      return;\n    }\n\n    if (!child.isValid()) return;\n    Document document = PsiDocumentManager.getInstance(myProject).getCachedDocument(file);\n    if (document != null) {\n      List<Pair<PsiElement, Boolean>> toUpdate = changedElements.get(document);\n      if (toUpdate == null) {\n        toUpdate = new SmartList<Pair<PsiElement, Boolean>>();\n        changedElements.put(document, toUpdate);\n      }\n      toUpdate.add(Pair.create(child, whitespaceOptimizationAllowed));\n    }\n  }","id":63207,"modified_method":"private void queueElement(@NotNull PsiElement child, final boolean whitespaceOptimizationAllowed, @NotNull PsiTreeChangeEvent event) {\n    PsiFile file = event.getFile();\n    if (file == null) file = child.getContainingFile();\n    if (file == null) {\n      myFileStatusMap.markAllFilesDirty(child);\n      return;\n    }\n\n    if (!child.isValid()) return;\n    Document document = PsiDocumentManager.getInstance(myProject).getCachedDocument(file);\n    if (document != null) {\n      List<Pair<PsiElement, Boolean>> toUpdate = changedElements.get(document);\n      if (toUpdate == null) {\n        toUpdate = new SmartList<>();\n        changedElements.put(document, toUpdate);\n      }\n      toUpdate.add(Pair.create(child, whitespaceOptimizationAllowed));\n    }\n  }","commit_id":"52e139227938f981cbb77b544c216c168d987e52","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void updateChangesForDocument(@NotNull final Document document) {\n    if (DaemonListeners.isUnderIgnoredAction(null) || myProject.isDisposed()) return;\n    List<Pair<PsiElement, Boolean>> toUpdate = changedElements.get(document);\n    if (toUpdate == null) {\n      // The document has been changed, but psi hasn't\n      // We may still need to rehighlight the file if there were changes inside highlighted ranges.\n      if (UpdateHighlightersUtil.isWhitespaceOptimizationAllowed(document)) return;\n\n      // don't create PSI for files in other projects\n      PsiElement file = PsiDocumentManager.getInstance(myProject).getCachedPsiFile(document);\n      if (file == null) return;\n\n      toUpdate = Collections.singletonList(Pair.create(file, true));\n    }\n    Application application = ApplicationManager.getApplication();\n    final Editor editor = FileEditorManager.getInstance(myProject).getSelectedTextEditor();\n    if (editor != null && !application.isUnitTestMode()) {\n      application.invokeLater(new Runnable() {\n        @Override\n        public void run() {\n          if (!editor.isDisposed()) {\n            EditorMarkupModel markupModel = (EditorMarkupModel)editor.getMarkupModel();\n            PsiFile file = PsiDocumentManager.getInstance(myProject).getPsiFile(editor.getDocument());\n            TrafficLightRenderer.setOrRefreshErrorStripeRenderer(markupModel, myProject, editor.getDocument(), file);\n          }\n        }\n      }, ModalityState.stateForComponent(editor.getComponent()), myProject.getDisposed());\n    }\n\n    for (Pair<PsiElement, Boolean> changedElement : toUpdate) {\n      PsiElement element = changedElement.getFirst();\n      Boolean whiteSpaceOptimizationAllowed = changedElement.getSecond();\n      updateByChange(element, document, whiteSpaceOptimizationAllowed);\n    }\n    changedElements.remove(document);\n  }","id":63208,"modified_method":"private void updateChangesForDocument(@NotNull final Document document) {\n    if (DaemonListeners.isUnderIgnoredAction(null) || myProject.isDisposed()) return;\n    List<Pair<PsiElement, Boolean>> toUpdate = changedElements.get(document);\n    if (toUpdate == null) {\n      // The document has been changed, but psi hasn't\n      // We may still need to rehighlight the file if there were changes inside highlighted ranges.\n      if (UpdateHighlightersUtil.isWhitespaceOptimizationAllowed(document)) return;\n\n      // don't create PSI for files in other projects\n      PsiElement file = PsiDocumentManager.getInstance(myProject).getCachedPsiFile(document);\n      if (file == null) return;\n\n      toUpdate = Collections.singletonList(Pair.create(file, true));\n    }\n    Application application = ApplicationManager.getApplication();\n    final Editor editor = FileEditorManager.getInstance(myProject).getSelectedTextEditor();\n    if (editor != null && !application.isUnitTestMode()) {\n      application.invokeLater(() -> {\n        if (!editor.isDisposed()) {\n          EditorMarkupModel markupModel = (EditorMarkupModel)editor.getMarkupModel();\n          PsiFile file = PsiDocumentManager.getInstance(myProject).getPsiFile(editor.getDocument());\n          TrafficLightRenderer.setOrRefreshErrorStripeRenderer(markupModel, myProject, editor.getDocument(), file);\n        }\n      }, ModalityState.stateForComponent(editor.getComponent()), myProject.getDisposed());\n    }\n\n    for (Pair<PsiElement, Boolean> changedElement : toUpdate) {\n      PsiElement element = changedElement.getFirst();\n      Boolean whiteSpaceOptimizationAllowed = changedElement.getSecond();\n      updateByChange(element, document, whiteSpaceOptimizationAllowed);\n    }\n    changedElements.remove(document);\n  }","commit_id":"52e139227938f981cbb77b544c216c168d987e52","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"PsiChangeHandler(@NotNull Project project,\n                          @NotNull final PsiDocumentManagerImpl documentManager,\n                          @NotNull EditorFactory editorFactory,\n                          @NotNull MessageBusConnection connection,\n                          @NotNull FileStatusMap fileStatusMap) {\n    myProject = project;\n    myFileStatusMap = fileStatusMap;\n    editorFactory.getEventMulticaster().addDocumentListener(new DocumentAdapter() {\n      @Override\n      public void beforeDocumentChange(DocumentEvent e) {\n        final Document document = e.getDocument();\n        if (documentManager.getSynchronizer().isInSynchronization(document)) return;\n        if (documentManager.getCachedPsiFile(document) == null) return;\n        if (document.getUserData(UPDATE_ON_COMMIT_ENGAGED) == null) {\n          document.putUserData(UPDATE_ON_COMMIT_ENGAGED, Boolean.TRUE);\n          PsiDocumentManagerBase.addRunOnCommit(document, new Runnable() {\n            @Override\n            public void run() {\n              if (document.getUserData(UPDATE_ON_COMMIT_ENGAGED) != null) {\n                updateChangesForDocument(document);\n                document.putUserData(UPDATE_ON_COMMIT_ENGAGED, null);\n              }\n            }\n          });\n        }\n      }\n    }, this);\n\n    connection.subscribe(PsiDocumentTransactionListener.TOPIC, new PsiDocumentTransactionListener() {\n      @Override\n      public void transactionStarted(@NotNull final Document doc, @NotNull final PsiFile file) {\n      }\n\n      @Override\n      public void transactionCompleted(@NotNull final Document document, @NotNull final PsiFile file) {\n        updateChangesForDocument(document);\n        document.putUserData(UPDATE_ON_COMMIT_ENGAGED, null); // ensure we don't call updateChangesForDocument() twice which can lead to whole file re-highlight\n      }\n    });\n  }","id":63209,"modified_method":"PsiChangeHandler(@NotNull Project project,\n                   @NotNull final PsiDocumentManagerImpl documentManager,\n                   @NotNull EditorFactory editorFactory,\n                   @NotNull MessageBusConnection connection,\n                   @NotNull FileStatusMap fileStatusMap) {\n    myProject = project;\n    myFileStatusMap = fileStatusMap;\n    editorFactory.getEventMulticaster().addDocumentListener(new DocumentAdapter() {\n      @Override\n      public void beforeDocumentChange(DocumentEvent e) {\n        final Document document = e.getDocument();\n        if (documentManager.getSynchronizer().isInSynchronization(document)) return;\n        if (documentManager.getCachedPsiFile(document) == null) return;\n        if (document.getUserData(UPDATE_ON_COMMIT_ENGAGED) == null) {\n          document.putUserData(UPDATE_ON_COMMIT_ENGAGED, Boolean.TRUE);\n          PsiDocumentManagerBase.addRunOnCommit(document, () -> {\n            if (document.getUserData(UPDATE_ON_COMMIT_ENGAGED) != null) {\n              updateChangesForDocument(document);\n              document.putUserData(UPDATE_ON_COMMIT_ENGAGED, null);\n            }\n          });\n        }\n      }\n    }, this);\n\n    connection.subscribe(PsiDocumentTransactionListener.TOPIC, new PsiDocumentTransactionListener() {\n      @Override\n      public void transactionStarted(@NotNull final Document doc, @NotNull final PsiFile file) {\n      }\n\n      @Override\n      public void transactionCompleted(@NotNull final Document document, @NotNull final PsiFile file) {\n        updateChangesForDocument(document);\n        document.putUserData(UPDATE_ON_COMMIT_ENGAGED, null); // ensure we don't call updateChangesForDocument() twice which can lead to whole file re-highlight\n      }\n    });\n  }","commit_id":"52e139227938f981cbb77b544c216c168d987e52","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\r\n\t * Performs the actual layout.\r\n\t */\r\n\tpublic void layout () {\r\n\t\tif (cells.size() > 0 && !cells.get(cells.size() - 1).endRow) endRow();\r\n\r\n\t\t// Determine minimum and preferred cell sizes. Also compute the combined padding/spacing for each cell.\r\n\t\tint[] columnMinWidth = new int[columns];\r\n\t\tint[] rowMinHeight = new int[rows];\r\n\t\tint[] columnPrefWidth = new int[columns];\r\n\t\tint[] rowPrefHeight = new int[rows];\r\n\t\tint spaceRightLast = 0;\r\n\t\tfor (int i = 0, n = cells.size(); i < n; i++) {\r\n\t\t\tCell c = cells.get(i);\r\n\t\t\tif (c.ignore) continue;\r\n\r\n\t\t\t// Spacing between widgets isn't additive, the larger is used. Also, no spacing around edges.\r\n\t\t\tc.padLeftTemp = c.column == 0 ? width(c.padLeft) : width(c.padLeft) + Math.max(0, width(c.spaceLeft) - spaceRightLast);\r\n\t\t\tc.padTopTemp = c.cellAboveIndex == -1 ? height(c.padTop) : height(c.padTop)\r\n\t\t\t\t+ Math.max(0, height(c.spaceTop) - height(cells.get(c.cellAboveIndex).spaceBottom));\r\n\t\t\tint spaceRight = width(c.spaceRight);\r\n\t\t\tc.padRightTemp = c.column + c.colspan == columns ? width(c.padRight) : width(c.padRight) + spaceRight;\r\n\t\t\tc.padBottomTemp = c.row == rows - 1 ? height(c.padBottom) : height(c.padBottom) + height(c.spaceBottom);\r\n\t\t\tspaceRightLast = spaceRight;\r\n\r\n\t\t\tint prefWidth = getWidth((T)c.widget, c.prefWidth);\r\n\t\t\tint prefHeight = getHeight((T)c.widget, c.prefHeight);\r\n\t\t\tint minWidth = getWidth((T)c.widget, c.minWidth);\r\n\t\t\tint minHeight = getHeight((T)c.widget, c.minHeight);\r\n\t\t\tif (prefWidth < minWidth) prefWidth = minWidth;\r\n\t\t\tif (prefHeight < minHeight) prefHeight = minHeight;\r\n\r\n\t\t\tif (c.colspan == 1) {\r\n\t\t\t\tint hpadding = c.padLeftTemp + c.padRightTemp;\r\n\t\t\t\tcolumnPrefWidth[c.column] = Math.max(columnPrefWidth[c.column], prefWidth + hpadding);\r\n\t\t\t\tcolumnMinWidth[c.column] = Math.max(columnMinWidth[c.column], minWidth + hpadding);\r\n\t\t\t}\r\n\t\t\tint vpadding = c.padTopTemp + c.padBottomTemp;\r\n\t\t\trowPrefHeight[c.row] = Math.max(rowPrefHeight[c.row], prefHeight + vpadding);\r\n\t\t\trowMinHeight[c.row] = Math.max(rowMinHeight[c.row], minHeight + vpadding);\r\n\t\t}\r\n\r\n\t\t// Determine maximum cell sizes using (preferred - min) size to weight distribution of extra space.\r\n\t\ttableMinWidth = 0;\r\n\t\ttableMinHeight = 0;\r\n\t\ttablePrefWidth = 0;\r\n\t\ttablePrefHeight = 0;\r\n\t\tfor (int i = 0; i < columns; i++) {\r\n\t\t\ttableMinWidth += columnMinWidth[i];\r\n\t\t\ttablePrefWidth += columnPrefWidth[i];\r\n\t\t}\r\n\t\tfor (int i = 0; i < rows; i++) {\r\n\t\t\ttableMinHeight += rowMinHeight[i];\r\n\t\t\ttablePrefHeight += Math.max(rowMinHeight[i], rowPrefHeight[i]);\r\n\t\t}\r\n\t\tint hpadding = width(padLeft) + width(padRight);\r\n\t\tint vpadding = height(padTop) + height(padBottom);\r\n\t\tint width = width(this.width) - hpadding;\r\n\t\tint height = height(this.height) - vpadding;\r\n\t\ttableMinWidth = Math.max(tableMinWidth + hpadding, width);\r\n\t\ttableMinHeight = Math.max(tableMinHeight + vpadding, height);\r\n\t\ttablePrefWidth = Math.max(tablePrefWidth + hpadding, tableMinWidth);\r\n\t\ttablePrefHeight = Math.max(tablePrefHeight + vpadding, tableMinHeight);\r\n\r\n\t\tint[] columnMaxWidth;\r\n\t\tint tableLayoutWidth = this.tableLayoutWidth;\r\n\t\tint totalGrowWidth = tablePrefWidth - tableMinWidth;\r\n\t\tif (totalGrowWidth == 0)\r\n\t\t\tcolumnMaxWidth = columnMinWidth;\r\n\t\telse {\r\n\t\t\tint extraWidth = Math.max(0, tableLayoutWidth - tableMinWidth);\r\n\t\t\tcolumnMaxWidth = new int[columns];\r\n\t\t\tfor (int i = 0; i < columns; i++) {\r\n\t\t\t\tint growWidth = columnPrefWidth[i] - columnMinWidth[i];\r\n\t\t\t\tfloat growRatio = growWidth / (float)totalGrowWidth;\r\n\t\t\t\tcolumnMaxWidth[i] = columnMinWidth[i] + (int)(extraWidth * growRatio);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tint[] rowMaxHeight;\r\n\t\tint tableLayoutHeight = this.tableLayoutHeight;\r\n\t\tint totalGrowHeight = tablePrefHeight - tableMinHeight;\r\n\t\tif (totalGrowHeight == 0)\r\n\t\t\trowMaxHeight = rowMinHeight;\r\n\t\telse {\r\n\t\t\tint extraHeight = Math.max(0, tableLayoutHeight - tableMinHeight);\r\n\t\t\trowMaxHeight = new int[rows];\r\n\t\t\tfor (int i = 0; i < rows; i++) {\r\n\t\t\t\tint growHeight = rowPrefHeight[i] - rowMinHeight[i];\r\n\t\t\t\tfloat growRatio = growHeight / (float)totalGrowHeight;\r\n\t\t\t\trowMaxHeight[i] = rowMinHeight[i] + (int)(extraHeight * growRatio);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Determine widget and cell sizes (before uniform/expand/fill). Also collect columns/rows that expand.\r\n\t\tint[] columnWidth = new int[columns];\r\n\t\tint[] rowHeight = new int[rows];\r\n\t\tfloat[] expandWidth = new float[columns];\r\n\t\tfloat[] expandHeight = new float[rows];\r\n\t\tfloat totalExpandWidth = 0, totalExpandHeight = 0;\r\n\t\tfor (int i = 0, n = cells.size(); i < n; i++) {\r\n\t\t\tCell c = cells.get(i);\r\n\t\t\tif (c.ignore) continue;\r\n\r\n\t\t\tint spannedCellMaxWidth = 0;\r\n\t\t\tfor (int column = c.column, nn = column + c.colspan; column < nn; column++) {\r\n\t\t\t\tspannedCellMaxWidth += columnMaxWidth[column];\r\n\r\n\t\t\t\tif (c.colspan == 1 && c.expandWidth != 0 && expandWidth[column] == 0) {\r\n\t\t\t\t\texpandWidth[column] = c.expandWidth / (float)c.colspan;\r\n\t\t\t\t\ttotalExpandWidth += c.expandWidth / (float)c.colspan;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tspannedCellMaxWidth -= c.padLeftTemp + c.padRightTemp;\r\n\t\t\tif (c.expandHeight != 0 && expandHeight[c.row] == 0) {\r\n\t\t\t\texpandHeight[c.row] = c.expandHeight;\r\n\t\t\t\ttotalExpandHeight += c.expandHeight;\r\n\t\t\t}\r\n\r\n\t\t\tint prefWidth = getWidth((T)c.widget, c.prefWidth);\r\n\t\t\tint prefHeight = getHeight((T)c.widget, c.prefHeight);\r\n\t\t\tint minWidth = getWidth((T)c.widget, c.minWidth);\r\n\t\t\tint minHeight = getHeight((T)c.widget, c.minHeight);\r\n\t\t\tif (prefWidth < minWidth) prefWidth = minWidth;\r\n\t\t\tif (prefHeight < minHeight) prefHeight = minHeight;\r\n\r\n\t\t\tc.widgetWidth = Math.min(spannedCellMaxWidth, prefWidth);\r\n\t\t\tc.widgetHeight = Math.min(rowMaxHeight[c.row] - c.padTopTemp - c.padBottomTemp, prefHeight);\r\n\r\n\t\t\tif (c.colspan == 1)\r\n\t\t\t\tcolumnWidth[c.column] = Math.max(columnWidth[c.column], c.widgetWidth + c.padLeftTemp + c.padRightTemp);\r\n\t\t\trowHeight[c.row] = Math.max(rowHeight[c.row], c.widgetHeight + c.padTopTemp + c.padBottomTemp);\r\n\t\t}\r\n\r\n\t\t// Uniform cells are all the same width/height.\r\n\t\tint uniformMaxWidth = 0, uniformMaxHeight = 0;\r\n\t\tfor (int i = 0, n = cells.size(); i < n; i++) {\r\n\t\t\tCell c = cells.get(i);\r\n\t\t\tif (c.ignore) continue;\r\n\t\t\tif (c.uniformWidth != null) uniformMaxWidth = Math.max(uniformMaxWidth, columnWidth[c.column]);\r\n\t\t\tif (c.uniformHeight != null) uniformMaxHeight = Math.max(uniformMaxHeight, rowHeight[c.row]);\r\n\t\t}\r\n\t\tif (uniformMaxWidth > 0 || uniformMaxHeight > 0) {\r\n\t\t\touter:\r\n\t\t\tfor (int i = 0, n = cells.size(); i < n; i++) {\r\n\t\t\t\tCell c = cells.get(i);\r\n\t\t\t\tif (c.ignore) continue;\r\n\t\t\t\tif (uniformMaxWidth > 0 && c.uniformWidth != null) {\r\n\t\t\t\t\tint diff = uniformMaxWidth - columnWidth[c.column];\r\n\t\t\t\t\tif (diff > 0) {\r\n\t\t\t\t\t\tcolumnWidth[c.column] = uniformMaxWidth;\r\n\t\t\t\t\t\ttableMinWidth += diff;\r\n\t\t\t\t\t\ttablePrefWidth += diff;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (uniformMaxHeight > 0 && c.uniformHeight != null) {\r\n\t\t\t\t\tint diff = uniformMaxHeight - rowHeight[c.row];\r\n\t\t\t\t\tif (diff > 0) {\r\n\t\t\t\t\t\trowHeight[c.row] = uniformMaxHeight;\r\n\t\t\t\t\t\ttableMinHeight += diff;\r\n\t\t\t\t\t\ttablePrefHeight += diff;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcontinue outer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Distribute remaining space to any expanding columns/rows.\r\n\t\tif (totalExpandWidth > 0) {\r\n\t\t\tint extra = Math.max(0, tableLayoutWidth - tablePrefWidth);\r\n\t\t\ttablePrefWidth += extra;\r\n\t\t\tint used = 0, lastIndex = 0;\r\n\t\t\tfor (int i = 0; i < columns; i++) {\r\n\t\t\t\tif (expandWidth[i] == 0) continue;\r\n\t\t\t\tint amount = (int)(extra * expandWidth[i] / totalExpandWidth);\r\n\t\t\t\tcolumnWidth[i] += amount;\r\n\t\t\t\tused += amount;\r\n\t\t\t\tlastIndex = i;\r\n\t\t\t}\r\n\t\t\tcolumnWidth[lastIndex] += extra - used;\r\n\t\t}\r\n\t\tif (totalExpandHeight > 0) {\r\n\t\t\tint extra = Math.max(0, tableLayoutHeight - tablePrefHeight);\r\n\t\t\ttablePrefHeight += extra;\r\n\t\t\tint used = 0, lastIndex = 0;\r\n\t\t\tfor (int i = 0; i < rows; i++) {\r\n\t\t\t\tif (expandHeight[i] == 0) continue;\r\n\t\t\t\tint amount = (int)(extra * expandHeight[i] / totalExpandHeight);\r\n\t\t\t\trowHeight[i] += amount;\r\n\t\t\t\tused += amount;\r\n\t\t\t\tlastIndex = i;\r\n\t\t\t}\r\n\t\t\trowHeight[lastIndex] += extra - used;\r\n\t\t}\r\n\r\n\t\t// Distribute any additional width added by colspanned cells evenly to the columns spanned.\r\n\t\tfor (int i = 0, n = cells.size(); i < n; i++) {\r\n\t\t\tCell c = cells.get(i);\r\n\t\t\tif (c.ignore) continue;\r\n\t\t\tif (c.colspan == 1) continue;\r\n\r\n\t\t\tint minWidth = getWidth((T)c.widget, c.minWidth);\r\n\r\n\t\t\tint spannedCellWidth = 0;\r\n\t\t\tfor (int column = c.column, nn = column + c.colspan; column < nn; column++)\r\n\t\t\t\tspannedCellWidth += columnWidth[column];\r\n\r\n\t\t\tint extraWidth = Math.max(0, minWidth - spannedCellWidth) / c.colspan;\r\n\t\t\tfor (int column = c.column, nn = column + c.colspan; column < nn; column++)\r\n\t\t\t\tcolumnWidth[column] += extraWidth;\r\n\r\n\t\t\tc.widgetWidth = Math.max(c.widgetWidth, minWidth - (c.padLeftTemp + c.padRightTemp));\r\n\t\t}\r\n\r\n\t\t// Determine table size.\r\n\t\tint tableWidth = 0, tableHeight = 0;\r\n\t\tfor (int i = 0; i < columns; i++)\r\n\t\t\ttableWidth += columnWidth[i];\r\n\t\ttableWidth = Math.max(tableWidth + hpadding, width);\r\n\t\tfor (int i = 0; i < rows; i++)\r\n\t\t\ttableHeight += rowHeight[i];\r\n\t\ttableHeight = Math.max(tableHeight + vpadding, height);\r\n\r\n\t\t// Position table within the container.\r\n\t\tint x = tableLayoutX + width(padLeft);\r\n\t\tif ((align & RIGHT) != 0)\r\n\t\t\tx += tableLayoutWidth - tableWidth;\r\n\t\telse if ((align & LEFT) == 0) // Center\r\n\t\t\tx += (tableLayoutWidth - tableWidth) / 2;\r\n\r\n\t\tint y = tableLayoutY + height(padTop);\r\n\t\tif ((align & BOTTOM) != 0)\r\n\t\t\ty += tableLayoutHeight - tableHeight;\r\n\t\telse if ((align & TOP) == 0) // Center\r\n\t\t\ty += (tableLayoutHeight - tableHeight) / 2;\r\n\r\n\t\t// Position widgets within cells.\r\n\t\tint currentX = x;\r\n\t\tint currentY = y;\r\n\t\tfor (int i = 0, n = cells.size(); i < n; i++) {\r\n\t\t\tCell c = cells.get(i);\r\n\t\t\tif (c.ignore) continue;\r\n\r\n\t\t\tint spannedCellWidth = 0;\r\n\t\t\tfor (int column = c.column, nn = column + c.colspan; column < nn; column++)\r\n\t\t\t\tspannedCellWidth += columnWidth[column];\r\n\t\t\tspannedCellWidth -= c.padLeftTemp + c.padRightTemp;\r\n\r\n\t\t\tcurrentX += c.padLeftTemp;\r\n\r\n\t\t\tif (c.fillWidth > 0) {\r\n\t\t\t\tc.widgetWidth = (int)(spannedCellWidth * c.fillWidth);\r\n\t\t\t\tint maxWidth = getWidth((T)c.widget, c.maxWidth);\r\n\t\t\t\tif (maxWidth > 0) c.widgetWidth = Math.min(c.widgetWidth, maxWidth);\r\n\t\t\t}\r\n\t\t\tif (c.fillHeight > 0) {\r\n\t\t\t\tc.widgetHeight = (int)(rowHeight[c.row] * c.fillHeight) - c.padTopTemp - c.padBottomTemp;\r\n\t\t\t\tint maxHeight = getHeight((T)c.widget, c.maxHeight);\r\n\t\t\t\tif (maxHeight > 0) c.widgetHeight = Math.min(c.widgetHeight, maxHeight);\r\n\t\t\t}\r\n\r\n\t\t\tif ((c.align & LEFT) != 0)\r\n\t\t\t\tc.widgetX = currentX;\r\n\t\t\telse if ((c.align & RIGHT) != 0)\r\n\t\t\t\tc.widgetX = currentX + spannedCellWidth - c.widgetWidth;\r\n\t\t\telse\r\n\t\t\t\tc.widgetX = currentX + (spannedCellWidth - c.widgetWidth) / 2;\r\n\r\n\t\t\tif ((c.align & TOP) != 0)\r\n\t\t\t\tc.widgetY = currentY + c.padTopTemp;\r\n\t\t\telse if ((c.align & BOTTOM) != 0)\r\n\t\t\t\tc.widgetY = currentY + rowHeight[c.row] - c.widgetHeight - c.padBottomTemp;\r\n\t\t\telse\r\n\t\t\t\tc.widgetY = currentY + (rowHeight[c.row] - c.widgetHeight + c.padTopTemp - c.padBottomTemp) / 2;\r\n\r\n\t\t\tif (c.endRow) {\r\n\t\t\t\tcurrentX = x;\r\n\t\t\t\tcurrentY += rowHeight[c.row];\r\n\t\t\t} else\r\n\t\t\t\tcurrentX += spannedCellWidth + c.padRightTemp;\r\n\t\t}\r\n\r\n\t\t// Draw widgets and bounds.\r\n\t\tif (debug == null) return;\r\n\t\tclearDebugRectangles();\r\n\t\tcurrentX = x;\r\n\t\tcurrentY = y;\r\n\t\tif (debug.contains(DEBUG_TABLE) || debug.contains(DEBUG_ALL)) {\r\n\t\t\taddDebugRectangle(DEBUG_TABLE, tableLayoutX, tableLayoutY, tableLayoutWidth, tableLayoutHeight);\r\n\t\t\taddDebugRectangle(DEBUG_TABLE, x, y, tableWidth - hpadding, tableHeight - vpadding);\r\n\t\t}\r\n\t\tfor (int i = 0, n = cells.size(); i < n; i++) {\r\n\t\t\tCell c = cells.get(i);\r\n\t\t\tif (c.ignore) continue;\r\n\r\n\t\t\t// Widget bounds.\r\n\t\t\tif (debug.contains(DEBUG_WIDGET) || debug.contains(DEBUG_ALL))\r\n\t\t\t\taddDebugRectangle(DEBUG_WIDGET, c.widgetX, c.widgetY, c.widgetWidth, c.widgetHeight);\r\n\r\n\t\t\t// Cell bounds.\r\n\t\t\tint spannedCellWidth = 0;\r\n\t\t\tfor (int column = c.column, nn = column + c.colspan; column < nn; column++)\r\n\t\t\t\tspannedCellWidth += columnWidth[column];\r\n\t\t\tspannedCellWidth -= c.padLeftTemp + c.padRightTemp;\r\n\t\t\tcurrentX += c.padLeftTemp;\r\n\t\t\tif (debug.contains(DEBUG_CELL) || debug.contains(DEBUG_ALL))\r\n\t\t\t\taddDebugRectangle(DEBUG_CELL, currentX, currentY + c.padTopTemp, spannedCellWidth, rowHeight[c.row] - c.padTopTemp\r\n\t\t\t\t\t- c.padBottomTemp);\r\n\r\n\t\t\tif (c.endRow) {\r\n\t\t\t\tcurrentX = x;\r\n\t\t\t\tcurrentY += rowHeight[c.row];\r\n\t\t\t} else\r\n\t\t\t\tcurrentX += spannedCellWidth + c.padRightTemp;\r\n\t\t}\r\n\t}","id":63210,"modified_method":"/**\r\n\t * Performs the actual layout.\r\n\t */\r\n\tpublic void layout () {\r\n\t\tif (cells.size() > 0 && !cells.get(cells.size() - 1).endRow) endRow();\r\n\r\n\t\t// Determine minimum and preferred cell sizes. Also compute the combined padding/spacing for each cell.\r\n\t\tint[] columnMinWidth = new int[columns];\r\n\t\tint[] rowMinHeight = new int[rows];\r\n\t\tint[] columnPrefWidth = new int[columns];\r\n\t\tint[] rowPrefHeight = new int[rows];\r\n\t\tint spaceRightLast = 0;\r\n\t\tfor (int i = 0, n = cells.size(); i < n; i++) {\r\n\t\t\tCell c = cells.get(i);\r\n\t\t\tif (c.ignore) continue;\r\n\r\n\t\t\t// Spacing between widgets isn't additive, the larger is used. Also, no spacing around edges.\r\n\t\t\tc.padLeftTemp = c.column == 0 ? width(c.padLeft) : width(c.padLeft) + Math.max(0, width(c.spaceLeft) - spaceRightLast);\r\n\t\t\tc.padTopTemp = c.cellAboveIndex == -1 ? height(c.padTop) : height(c.padTop)\r\n\t\t\t\t+ Math.max(0, height(c.spaceTop) - height(cells.get(c.cellAboveIndex).spaceBottom));\r\n\t\t\tint spaceRight = width(c.spaceRight);\r\n\t\t\tc.padRightTemp = c.column + c.colspan == columns ? width(c.padRight) : width(c.padRight) + spaceRight;\r\n\t\t\tc.padBottomTemp = c.row == rows - 1 ? height(c.padBottom) : height(c.padBottom) + height(c.spaceBottom);\r\n\t\t\tspaceRightLast = spaceRight;\r\n\r\n\t\t\tint prefWidth = getWidth((T)c.widget, c.prefWidth);\r\n\t\t\tint prefHeight = getHeight((T)c.widget, c.prefHeight);\r\n\t\t\tint minWidth = getWidth((T)c.widget, c.minWidth);\r\n\t\t\tint minHeight = getHeight((T)c.widget, c.minHeight);\r\n\t\t\tif (prefWidth < minWidth) prefWidth = minWidth;\r\n\t\t\tif (prefHeight < minHeight) prefHeight = minHeight;\r\n\r\n\t\t\tif (c.colspan == 1) {\r\n\t\t\t\tint hpadding = c.padLeftTemp + c.padRightTemp;\r\n\t\t\t\tcolumnPrefWidth[c.column] = Math.max(columnPrefWidth[c.column], prefWidth + hpadding);\r\n\t\t\t\tcolumnMinWidth[c.column] = Math.max(columnMinWidth[c.column], minWidth + hpadding);\r\n\t\t\t}\r\n\t\t\tint vpadding = c.padTopTemp + c.padBottomTemp;\r\n\t\t\trowPrefHeight[c.row] = Math.max(rowPrefHeight[c.row], prefHeight + vpadding);\r\n\t\t\trowMinHeight[c.row] = Math.max(rowMinHeight[c.row], minHeight + vpadding);\r\n\t\t}\r\n\r\n\t\t// Determine maximum cell sizes using (preferred - min) size to weight distribution of extra space.\r\n\t\ttableMinWidth = 0;\r\n\t\ttableMinHeight = 0;\r\n\t\ttablePrefWidth = 0;\r\n\t\ttablePrefHeight = 0;\r\n\t\tfor (int i = 0; i < columns; i++) {\r\n\t\t\ttableMinWidth += columnMinWidth[i];\r\n\t\t\ttablePrefWidth += columnPrefWidth[i];\r\n\t\t}\r\n\t\tfor (int i = 0; i < rows; i++) {\r\n\t\t\ttableMinHeight += rowMinHeight[i];\r\n\t\t\ttablePrefHeight += Math.max(rowMinHeight[i], rowPrefHeight[i]);\r\n\t\t}\r\n\t\tint hpadding = width(padLeft) + width(padRight);\r\n\t\tint vpadding = height(padTop) + height(padBottom);\r\n\t\tint width = width(this.width) - hpadding;\r\n\t\tint height = height(this.height) - vpadding;\r\n\t\ttableMinWidth = Math.max(tableMinWidth + hpadding, width);\r\n\t\ttableMinHeight = Math.max(tableMinHeight + vpadding, height);\r\n\t\ttablePrefWidth = Math.max(tablePrefWidth + hpadding, tableMinWidth);\r\n\t\ttablePrefHeight = Math.max(tablePrefHeight + vpadding, tableMinHeight);\r\n\r\n\t\tint[] columnMaxWidth;\r\n\t\tint tableLayoutWidth = this.tableLayoutWidth;\r\n\t\tint totalGrowWidth = tablePrefWidth - tableMinWidth;\r\n\t\tif (totalGrowWidth == 0)\r\n\t\t\tcolumnMaxWidth = columnMinWidth;\r\n\t\telse {\r\n\t\t\tint extraWidth = Math.max(0, tableLayoutWidth - tableMinWidth);\r\n\t\t\tcolumnMaxWidth = new int[columns];\r\n\t\t\tfor (int i = 0; i < columns; i++) {\r\n\t\t\t\tint growWidth = columnPrefWidth[i] - columnMinWidth[i];\r\n\t\t\t\tfloat growRatio = growWidth / (float)totalGrowWidth;\r\n\t\t\t\tcolumnMaxWidth[i] = columnMinWidth[i] + (int)(extraWidth * growRatio);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tint[] rowMaxHeight;\r\n\t\tint tableLayoutHeight = this.tableLayoutHeight;\r\n\t\tint totalGrowHeight = tablePrefHeight - tableMinHeight;\r\n\t\tif (totalGrowHeight == 0)\r\n\t\t\trowMaxHeight = rowMinHeight;\r\n\t\telse {\r\n\t\t\tint extraHeight = Math.max(0, tableLayoutHeight - tableMinHeight);\r\n\t\t\trowMaxHeight = new int[rows];\r\n\t\t\tfor (int i = 0; i < rows; i++) {\r\n\t\t\t\tint growHeight = rowPrefHeight[i] - rowMinHeight[i];\r\n\t\t\t\tfloat growRatio = growHeight / (float)totalGrowHeight;\r\n\t\t\t\trowMaxHeight[i] = rowMinHeight[i] + (int)(extraHeight * growRatio);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Determine widget and cell sizes (before uniform/expand/fill). Also collect columns/rows that expand.\r\n\t\tint[] columnWidth = new int[columns];\r\n\t\tint[] rowHeight = new int[rows];\r\n\t\tfloat[] expandWidth = new float[columns];\r\n\t\tfloat[] expandHeight = new float[rows];\r\n\t\tfloat totalExpandWidth = 0, totalExpandHeight = 0;\r\n\t\tfor (int i = 0, n = cells.size(); i < n; i++) {\r\n\t\t\tCell c = cells.get(i);\r\n\t\t\tif (c.ignore) continue;\r\n\r\n\t\t\tint spannedCellMaxWidth = 0;\r\n\t\t\tfor (int column = c.column, nn = column + c.colspan; column < nn; column++) {\r\n\t\t\t\tspannedCellMaxWidth += columnMaxWidth[column];\r\n\r\n\t\t\t\tif (c.colspan == 1 && c.expandWidth != 0 && expandWidth[column] == 0) {\r\n\t\t\t\t\texpandWidth[column] = c.expandWidth / (float)c.colspan;\r\n\t\t\t\t\ttotalExpandWidth += c.expandWidth / (float)c.colspan;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tspannedCellMaxWidth -= c.padLeftTemp + c.padRightTemp;\r\n\t\t\tif (c.expandHeight != 0 && expandHeight[c.row] == 0) {\r\n\t\t\t\texpandHeight[c.row] = c.expandHeight;\r\n\t\t\t\ttotalExpandHeight += c.expandHeight;\r\n\t\t\t}\r\n\r\n\t\t\tint prefWidth = getWidth((T)c.widget, c.prefWidth);\r\n\t\t\tint prefHeight = getHeight((T)c.widget, c.prefHeight);\r\n\t\t\tint minWidth = getWidth((T)c.widget, c.minWidth);\r\n\t\t\tint minHeight = getHeight((T)c.widget, c.minHeight);\r\n\t\t\tif (prefWidth < minWidth) prefWidth = minWidth;\r\n\t\t\tif (prefHeight < minHeight) prefHeight = minHeight;\r\n\r\n\t\t\tc.widgetWidth = Math.min(spannedCellMaxWidth, prefWidth);\r\n\t\t\tc.widgetHeight = Math.min(rowMaxHeight[c.row] - c.padTopTemp - c.padBottomTemp, prefHeight);\r\n\r\n\t\t\tif (c.colspan == 1)\r\n\t\t\t\tcolumnWidth[c.column] = Math.max(columnWidth[c.column], c.widgetWidth + c.padLeftTemp + c.padRightTemp);\r\n\t\t\trowHeight[c.row] = Math.max(rowHeight[c.row], c.widgetHeight + c.padTopTemp + c.padBottomTemp);\r\n\t\t}\r\n\r\n\t\t// Uniform cells are all the same width/height.\r\n\t\tint uniformMaxWidth = 0, uniformMaxHeight = 0;\r\n\t\tfor (int i = 0, n = cells.size(); i < n; i++) {\r\n\t\t\tCell c = cells.get(i);\r\n\t\t\tif (c.ignore) continue;\r\n\t\t\tif (c.uniformWidth != null) uniformMaxWidth = Math.max(uniformMaxWidth, columnWidth[c.column]);\r\n\t\t\tif (c.uniformHeight != null) uniformMaxHeight = Math.max(uniformMaxHeight, rowHeight[c.row]);\r\n\t\t}\r\n\t\tif (uniformMaxWidth > 0 || uniformMaxHeight > 0) {\r\n\t\t\touter:\r\n\t\t\tfor (int i = 0, n = cells.size(); i < n; i++) {\r\n\t\t\t\tCell c = cells.get(i);\r\n\t\t\t\tif (c.ignore) continue;\r\n\t\t\t\tif (uniformMaxWidth > 0 && c.uniformWidth != null) {\r\n\t\t\t\t\tint diff = uniformMaxWidth - columnWidth[c.column];\r\n\t\t\t\t\tif (diff > 0) {\r\n\t\t\t\t\t\tcolumnWidth[c.column] = uniformMaxWidth;\r\n\t\t\t\t\t\ttableMinWidth += diff;\r\n\t\t\t\t\t\ttablePrefWidth += diff;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (uniformMaxHeight > 0 && c.uniformHeight != null) {\r\n\t\t\t\t\tint diff = uniformMaxHeight - rowHeight[c.row];\r\n\t\t\t\t\tif (diff > 0) {\r\n\t\t\t\t\t\trowHeight[c.row] = uniformMaxHeight;\r\n\t\t\t\t\t\ttableMinHeight += diff;\r\n\t\t\t\t\t\ttablePrefHeight += diff;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcontinue outer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Distribute remaining space to any expanding columns/rows.\r\n\t\tif (totalExpandWidth > 0) {\r\n\t\t\tint extra = Math.max(0, tableLayoutWidth - tablePrefWidth);\r\n\t\t\tint used = 0, lastIndex = 0;\r\n\t\t\tfor (int i = 0; i < columns; i++) {\r\n\t\t\t\tif (expandWidth[i] == 0) continue;\r\n\t\t\t\tint amount = (int)(extra * expandWidth[i] / totalExpandWidth);\r\n\t\t\t\tcolumnWidth[i] += amount;\r\n\t\t\t\tused += amount;\r\n\t\t\t\tlastIndex = i;\r\n\t\t\t}\r\n\t\t\tcolumnWidth[lastIndex] += extra - used;\r\n\t\t}\r\n\t\tif (totalExpandHeight > 0) {\r\n\t\t\tint extra = Math.max(0, tableLayoutHeight - tablePrefHeight);\r\n\t\t\tint used = 0, lastIndex = 0;\r\n\t\t\tfor (int i = 0; i < rows; i++) {\r\n\t\t\t\tif (expandHeight[i] == 0) continue;\r\n\t\t\t\tint amount = (int)(extra * expandHeight[i] / totalExpandHeight);\r\n\t\t\t\trowHeight[i] += amount;\r\n\t\t\t\tused += amount;\r\n\t\t\t\tlastIndex = i;\r\n\t\t\t}\r\n\t\t\trowHeight[lastIndex] += extra - used;\r\n\t\t}\r\n\r\n\t\t// Distribute any additional width added by colspanned cells evenly to the columns spanned.\r\n\t\tfor (int i = 0, n = cells.size(); i < n; i++) {\r\n\t\t\tCell c = cells.get(i);\r\n\t\t\tif (c.ignore) continue;\r\n\t\t\tif (c.colspan == 1) continue;\r\n\r\n\t\t\tint minWidth = getWidth((T)c.widget, c.minWidth);\r\n\r\n\t\t\tint spannedCellWidth = 0;\r\n\t\t\tfor (int column = c.column, nn = column + c.colspan; column < nn; column++)\r\n\t\t\t\tspannedCellWidth += columnWidth[column];\r\n\r\n\t\t\tint extraWidth = Math.max(0, minWidth - spannedCellWidth) / c.colspan;\r\n\t\t\tfor (int column = c.column, nn = column + c.colspan; column < nn; column++)\r\n\t\t\t\tcolumnWidth[column] += extraWidth;\r\n\r\n\t\t\tc.widgetWidth = Math.max(c.widgetWidth, minWidth - (c.padLeftTemp + c.padRightTemp));\r\n\t\t}\r\n\r\n\t\t// Determine table size.\r\n\t\tint tableWidth = 0, tableHeight = 0;\r\n\t\tfor (int i = 0; i < columns; i++)\r\n\t\t\ttableWidth += columnWidth[i];\r\n\t\ttableWidth = Math.max(tableWidth + hpadding, width);\r\n\t\tfor (int i = 0; i < rows; i++)\r\n\t\t\ttableHeight += rowHeight[i];\r\n\t\ttableHeight = Math.max(tableHeight + vpadding, height);\r\n\r\n\t\t// Position table within the container.\r\n\t\tint x = tableLayoutX + width(padLeft);\r\n\t\tif ((align & RIGHT) != 0)\r\n\t\t\tx += tableLayoutWidth - tableWidth;\r\n\t\telse if ((align & LEFT) == 0) // Center\r\n\t\t\tx += (tableLayoutWidth - tableWidth) / 2;\r\n\r\n\t\tint y = tableLayoutY + height(padTop);\r\n\t\tif ((align & BOTTOM) != 0)\r\n\t\t\ty += tableLayoutHeight - tableHeight;\r\n\t\telse if ((align & TOP) == 0) // Center\r\n\t\t\ty += (tableLayoutHeight - tableHeight) / 2;\r\n\r\n\t\t// Position widgets within cells.\r\n\t\tint currentX = x;\r\n\t\tint currentY = y;\r\n\t\tfor (int i = 0, n = cells.size(); i < n; i++) {\r\n\t\t\tCell c = cells.get(i);\r\n\t\t\tif (c.ignore) continue;\r\n\r\n\t\t\tint spannedCellWidth = 0;\r\n\t\t\tfor (int column = c.column, nn = column + c.colspan; column < nn; column++)\r\n\t\t\t\tspannedCellWidth += columnWidth[column];\r\n\t\t\tspannedCellWidth -= c.padLeftTemp + c.padRightTemp;\r\n\r\n\t\t\tcurrentX += c.padLeftTemp;\r\n\r\n\t\t\tif (c.fillWidth > 0) {\r\n\t\t\t\tc.widgetWidth = (int)(spannedCellWidth * c.fillWidth);\r\n\t\t\t\tint maxWidth = getWidth((T)c.widget, c.maxWidth);\r\n\t\t\t\tif (maxWidth > 0) c.widgetWidth = Math.min(c.widgetWidth, maxWidth);\r\n\t\t\t}\r\n\t\t\tif (c.fillHeight > 0) {\r\n\t\t\t\tc.widgetHeight = (int)(rowHeight[c.row] * c.fillHeight) - c.padTopTemp - c.padBottomTemp;\r\n\t\t\t\tint maxHeight = getHeight((T)c.widget, c.maxHeight);\r\n\t\t\t\tif (maxHeight > 0) c.widgetHeight = Math.min(c.widgetHeight, maxHeight);\r\n\t\t\t}\r\n\r\n\t\t\tif ((c.align & LEFT) != 0)\r\n\t\t\t\tc.widgetX = currentX;\r\n\t\t\telse if ((c.align & RIGHT) != 0)\r\n\t\t\t\tc.widgetX = currentX + spannedCellWidth - c.widgetWidth;\r\n\t\t\telse\r\n\t\t\t\tc.widgetX = currentX + (spannedCellWidth - c.widgetWidth) / 2;\r\n\r\n\t\t\tif ((c.align & TOP) != 0)\r\n\t\t\t\tc.widgetY = currentY + c.padTopTemp;\r\n\t\t\telse if ((c.align & BOTTOM) != 0)\r\n\t\t\t\tc.widgetY = currentY + rowHeight[c.row] - c.widgetHeight - c.padBottomTemp;\r\n\t\t\telse\r\n\t\t\t\tc.widgetY = currentY + (rowHeight[c.row] - c.widgetHeight + c.padTopTemp - c.padBottomTemp) / 2;\r\n\r\n\t\t\tif (c.endRow) {\r\n\t\t\t\tcurrentX = x;\r\n\t\t\t\tcurrentY += rowHeight[c.row];\r\n\t\t\t} else\r\n\t\t\t\tcurrentX += spannedCellWidth + c.padRightTemp;\r\n\t\t}\r\n\r\n\t\t// Draw widgets and bounds.\r\n\t\tif (debug == null) return;\r\n\t\tclearDebugRectangles();\r\n\t\tcurrentX = x;\r\n\t\tcurrentY = y;\r\n\t\tif (debug.contains(DEBUG_TABLE) || debug.contains(DEBUG_ALL)) {\r\n\t\t\taddDebugRectangle(DEBUG_TABLE, tableLayoutX, tableLayoutY, tableLayoutWidth, tableLayoutHeight);\r\n\t\t\taddDebugRectangle(DEBUG_TABLE, x, y, tableWidth - hpadding, tableHeight - vpadding);\r\n\t\t}\r\n\t\tfor (int i = 0, n = cells.size(); i < n; i++) {\r\n\t\t\tCell c = cells.get(i);\r\n\t\t\tif (c.ignore) continue;\r\n\r\n\t\t\t// Widget bounds.\r\n\t\t\tif (debug.contains(DEBUG_WIDGET) || debug.contains(DEBUG_ALL))\r\n\t\t\t\taddDebugRectangle(DEBUG_WIDGET, c.widgetX, c.widgetY, c.widgetWidth, c.widgetHeight);\r\n\r\n\t\t\t// Cell bounds.\r\n\t\t\tint spannedCellWidth = 0;\r\n\t\t\tfor (int column = c.column, nn = column + c.colspan; column < nn; column++)\r\n\t\t\t\tspannedCellWidth += columnWidth[column];\r\n\t\t\tspannedCellWidth -= c.padLeftTemp + c.padRightTemp;\r\n\t\t\tcurrentX += c.padLeftTemp;\r\n\t\t\tif (debug.contains(DEBUG_CELL) || debug.contains(DEBUG_ALL))\r\n\t\t\t\taddDebugRectangle(DEBUG_CELL, currentX, currentY + c.padTopTemp, spannedCellWidth, rowHeight[c.row] - c.padTopTemp\r\n\t\t\t\t\t- c.padBottomTemp);\r\n\r\n\t\t\tif (c.endRow) {\r\n\t\t\t\tcurrentX = x;\r\n\t\t\t\tcurrentY += rowHeight[c.row];\r\n\t\t\t} else\r\n\t\t\t\tcurrentX += spannedCellWidth + c.padRightTemp;\r\n\t\t}\r\n\t}","commit_id":"c5bf95e429b6fa7f72de240e7187c7f9817ea944","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\r\n\tpublic void layout () {\r\n\t\tif (widget instanceof Layout) {\r\n\t\t\tLayout layout = (Layout)widget;\r\n\t\t\twidget.width = width;\r\n\t\t\twidget.height = height;\r\n\t\t\tlayout.invalidate();\r\n\t\t\twidget.width = layout.getPrefWidth();\r\n\t\t\twidget.height = layout.getPrefHeight();\r\n\t\t\tlayout.invalidate();\r\n\t\t\tlayout.layout();\r\n\t\t}\r\n\t\tinvalidated = false;\r\n\t}","id":63211,"modified_method":"@Override\r\n\tpublic void layout () {\r\n\t\tif (widget instanceof Layout) {\r\n\t\t\tLayout layout = (Layout)widget;\r\n\t\t\twidget.width = Math.max(width, layout.getPrefWidth());\r\n\t\t\twidget.height = Math.max(height, layout.getPrefHeight());\r\n\t\t\tlayout.invalidate();\r\n\t\t\tlayout.layout();\r\n\t\t}\r\n\t\tinvalidated = false;\r\n\t}","commit_id":"c5bf95e429b6fa7f72de240e7187c7f9817ea944","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\r\n\tpublic void layout() {\r\n\t\tif(widget instanceof Layout) {\r\n\t\t\tLayout layout = (Layout)widget;\r\n\t\t\twidget.width = layout.getPrefWidth();\r\n\t\t\twidget.height = layout.getPrefHeight();\r\n\t\t\tlayout.invalidate();\r\n\t\t\tlayout.layout();\r\n\t\t}\r\n\t\tinvalidated = false;\r\n\t}","id":63212,"modified_method":"@Override\r\n\tpublic void layout() {\r\n\t\tif(widget instanceof Layout) {\r\n\t\t\tLayout layout = (Layout)widget;\r\n\t\t\twidget.width = Math.max(width, layout.getPrefWidth());\r\n\t\t\twidget.height = Math.max(height, layout.getPrefHeight());\r\n\t\t\tlayout.invalidate();\r\n\t\t\tlayout.layout();\r\n\t\t}\r\n\t\tinvalidated = false;\r\n\t}","commit_id":"c5bf95e429b6fa7f72de240e7187c7f9817ea944","url":"https://github.com/libgdx/libgdx"},{"original_method":"/** @return May be null if this value is not set. */\n\tpublic float getFillX () {\n\t\treturn fillX;\n\t}","id":63213,"modified_method":"public float getFillX () {\n\t\treturn fillX;\n\t}","commit_id":"91a30df025d416ea6b213f1b3e61a343ced44cde","url":"https://github.com/libgdx/libgdx"},{"original_method":"/** @return May be null. */\n\tpublic float getFillY () {\n\t\treturn fillY;\n\t}","id":63214,"modified_method":"public float getFillY () {\n\t\treturn fillY;\n\t}","commit_id":"91a30df025d416ea6b213f1b3e61a343ced44cde","url":"https://github.com/libgdx/libgdx"},{"original_method":"/** @return May be null. */\n\tpublic int getAlign () {\n\t\treturn align;\n\t}","id":63215,"modified_method":"public int getAlign () {\n\t\treturn align;\n\t}","commit_id":"91a30df025d416ea6b213f1b3e61a343ced44cde","url":"https://github.com/libgdx/libgdx"},{"original_method":"/** If true, the children will be ordered from right to left rather than the default left to right. */\n\tpublic void setReverse (boolean reverse) {\n\t\tthis.reverse = reverse;\n\t}","id":63216,"modified_method":"/** If true, the children will be ordered from right to left rather than the default left to right. */\n\tpublic HorizontalGroup reverse (boolean reverse) {\n\t\tthis.reverse = reverse;\n\t\treturn this;\n\t}","commit_id":"91a30df025d416ea6b213f1b3e61a343ced44cde","url":"https://github.com/libgdx/libgdx"},{"original_method":"private void computeSize () {\n\t\tsizeInvalid = false;\n\t\tSnapshotArray<Actor> children = getChildren();\n\t\tint n = children.size;\n\t\tprefWidth = spacing * (n - 1);\n\t\tprefHeight = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tActor child = children.get(i);\n\t\t\tif (child instanceof Layout) {\n\t\t\t\tLayout layout = (Layout)child;\n\t\t\t\tprefWidth += layout.getPrefWidth();\n\t\t\t\tprefHeight = Math.max(prefHeight, layout.getPrefHeight());\n\t\t\t} else {\n\t\t\t\tprefWidth += child.getWidth();\n\t\t\t\tprefHeight = Math.max(prefHeight, child.getHeight());\n\t\t\t}\n\t\t}\n\t\tif (round) {\n\t\t\tprefWidth = Math.round(prefWidth);\n\t\t\tprefHeight = Math.round(prefHeight);\n\t\t}\n\t}","id":63217,"modified_method":"private void computeSize () {\n\t\tsizeInvalid = false;\n\t\tSnapshotArray<Actor> children = getChildren();\n\t\tint n = children.size;\n\t\tprefWidth = padLeft + padRight + spacing * (n - 1);\n\t\tprefHeight = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tActor child = children.get(i);\n\t\t\tif (child instanceof Layout) {\n\t\t\t\tLayout layout = (Layout)child;\n\t\t\t\tprefWidth += layout.getPrefWidth();\n\t\t\t\tprefHeight = Math.max(prefHeight, layout.getPrefHeight());\n\t\t\t} else {\n\t\t\t\tprefWidth += child.getWidth();\n\t\t\t\tprefHeight = Math.max(prefHeight, child.getHeight());\n\t\t\t}\n\t\t}\n\t\tprefHeight += padTop + padBottom;\n\t\tif (round) {\n\t\t\tprefWidth = Math.round(prefWidth);\n\t\t\tprefHeight = Math.round(prefHeight);\n\t\t}\n\t}","commit_id":"91a30df025d416ea6b213f1b3e61a343ced44cde","url":"https://github.com/libgdx/libgdx"},{"original_method":"public void layout () {\n\t\tfloat spacing = this.spacing;\n\t\tfloat groupHeight = getHeight() > 0 ? getHeight() : getMinHeight();\n\t\tfloat x = reverse ? (getWidth() > 0 ? getWidth() : getMinWidth()) : 0;\n\t\tSnapshotArray<Actor> children = getChildren();\n\t\tfor (int i = 0, n = children.size; i < n; i++) {\n\t\t\tActor child = children.get(i);\n\t\t\tfloat width, height;\n\t\t\tif (child instanceof Layout) {\n\t\t\t\tLayout layout = (Layout)child;\n\t\t\t\twidth = layout.getPrefWidth();\n\t\t\t\theight = layout.getPrefHeight();\n\t\t\t} else {\n\t\t\t\twidth = child.getWidth();\n\t\t\t\theight = child.getHeight();\n\t\t\t}\n\t\t\tfloat y;\n\t\t\tif ((alignment & Align.bottom) != 0)\n\t\t\t\ty = 0;\n\t\t\telse if ((alignment & Align.top) != 0)\n\t\t\t\ty = groupHeight - height;\n\t\t\telse\n\t\t\t\ty = (groupHeight - height) / 2;\n\t\t\tif (reverse) x -= (width + spacing);\n\t\t\tchild.setBounds(x, y, width, height);\n\t\t\tif (!reverse) x += (width + spacing);\n\t\t}\n\t}","id":63218,"modified_method":"public void layout () {\n\t\tfloat spacing = this.spacing, padBottom = this.padBottom;\n\t\tint align = this.align;\n\t\tboolean reverse = this.reverse, round = this.round;\n\n\t\tfloat groupHeight = getHeight() - padTop - padBottom;\n\t\tfloat x = !reverse ? padLeft : getWidth() - padRight + spacing;\n\t\tSnapshotArray<Actor> children = getChildren();\n\t\tfor (int i = 0, n = children.size; i < n; i++) {\n\t\t\tActor child = children.get(i);\n\t\t\tfloat width, height;\n\t\t\tif (child instanceof Layout) {\n\t\t\t\tLayout layout = (Layout)child;\n\t\t\t\tif (fill > 0)\n\t\t\t\t\theight = groupHeight * fill;\n\t\t\t\telse\n\t\t\t\t\theight = Math.min(layout.getPrefHeight(), groupHeight);\n\t\t\t\theight = Math.max(height, layout.getMinHeight());\n\t\t\t\tfloat maxHeight = layout.getMaxHeight();\n\t\t\t\tif (maxHeight > 0 && height > maxHeight) height = maxHeight;\n\t\t\t\twidth = layout.getPrefWidth();\n\t\t\t} else {\n\t\t\t\twidth = child.getWidth();\n\t\t\t\theight = child.getHeight();\n\t\t\t\tif (fill > 0) height *= fill;\n\t\t\t}\n\n\t\t\tfloat y = padBottom;\n\t\t\tif ((align & Align.top) != 0)\n\t\t\t\ty += groupHeight - height;\n\t\t\telse if ((align & Align.bottom) == 0) // center\n\t\t\t\ty += (groupHeight - height) / 2;\n\n\t\t\tif (reverse) x -= (width + spacing);\n\t\t\tif (round)\n\t\t\t\tchild.setBounds(Math.round(x), Math.round(y), Math.round(width), Math.round(height));\n\t\t\telse\n\t\t\t\tchild.setBounds(x, y, width, height);\n\t\t\tif (!reverse) x += (width + spacing);\n\t\t}\n\t}","commit_id":"91a30df025d416ea6b213f1b3e61a343ced44cde","url":"https://github.com/libgdx/libgdx"},{"original_method":"public static void main (String[] argv) {\r\n\t\t// this is only here for me to debug native code faster\r\n//\t\tnew SharedLibraryLoader(\"../../extensions/gdx-audio/libs/gdx-audio-natives.jar\").load(\"gdx-audio\");\r\n//\t\tnew SharedLibraryLoader(\"../../extensions/gdx-image/libs/gdx-image-natives.jar\").load(\"gdx-image\");\r\n//\t\tnew SharedLibraryLoader(\"../../extensions/gdx-freetype/libs/gdx-freetype-natives.jar\").load(\"gdx-freetype\");\r\n//\t\tnew SharedLibraryLoader(\"../../extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar\").load(\"gdx-controllers-desktop\");\r\n//\t\tnew SharedLibraryLoader(\"../../gdx/libs/gdx-natives.jar\").load(\"gdx\");\r\n\r\n\t\tGdxTest test = new FullscreenTest();\t\t\r\n\t\tLwjglApplicationConfiguration config = new LwjglApplicationConfiguration();\r\n\t\tconfig.useGL20 = test.needsGL20();\r\n//\t\tconfig.width = 320;\r\n//\t\tconfig.height = 241;\r\n\t\tnew LwjglApplication(test, config);\r\n\t}","id":63219,"modified_method":"public static void main (String[] argv) {\r\n\t\t// this is only here for me to debug native code faster\r\n//\t\tnew SharedLibraryLoader(\"../../extensions/gdx-audio/libs/gdx-audio-natives.jar\").load(\"gdx-audio\");\r\n//\t\tnew SharedLibraryLoader(\"../../extensions/gdx-image/libs/gdx-image-natives.jar\").load(\"gdx-image\");\r\n//\t\tnew SharedLibraryLoader(\"../../extensions/gdx-freetype/libs/gdx-freetype-natives.jar\").load(\"gdx-freetype\");\r\n//\t\tnew SharedLibraryLoader(\"../../extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar\").load(\"gdx-controllers-desktop\");\r\n//\t\tnew SharedLibraryLoader(\"../../gdx/libs/gdx-natives.jar\").load(\"gdx\");\r\n\r\n\t\tGdxTest test = new Scene2dTest();\t\t\r\n\t\tLwjglApplicationConfiguration config = new LwjglApplicationConfiguration();\r\n\t\tconfig.useGL20 = test.needsGL20();\r\n//\t\tconfig.width = 320;\r\n//\t\tconfig.height = 241;\r\n\t\tnew LwjglApplication(test, config);\r\n\t}","commit_id":"91a30df025d416ea6b213f1b3e61a343ced44cde","url":"https://github.com/libgdx/libgdx"},{"original_method":"public void create () {\r\n\t\tstage = new Stage();\r\n\t\tGdx.input.setInputProcessor(stage);\r\n\r\n\t\tfinal TextureRegion region = new TextureRegion(new Texture(\"data/badlogic.jpg\"));\r\n\t\tfinal Actor actor = new Actor() {\r\n\t\t\tpublic void draw (Batch batch, float parentAlpha) {\r\n\t\t\t\tColor color = getColor();\r\n\t\t\t\tbatch.setColor(color.r, color.g, color.b, parentAlpha);\r\n\t\t\t\tbatch.draw(region, getX(), getY(), getOriginX(), getOriginY(), getWidth(), getHeight(), getScaleX(), getScaleY(),\r\n\t\t\t\t\tgetRotation());\r\n\t\t\t}\r\n\t\t};\r\n\t\tactor.setBounds(15, 15, 100, 100);\r\n\t\tactor.setOrigin(50, 50);\r\n\t\tstage.addActor(actor);\r\n\t\tactor.addListener(new InputListener() {\r\n\t\t\tpublic boolean touchDown (InputEvent event, float x, float y, int pointer, int button) {\r\n\t\t\t\tSystem.out.println(\"down\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tpublic void touchUp (InputEvent event, float x, float y, int pointer, int button) {\r\n\t\t\t\tSystem.out.println(\"up \" + event.getTarget());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tSkin skin = new Skin(Gdx.files.internal(\"data/uiskin.json\"));\r\n\r\n\t\tVerticalGroup g = new VerticalGroup();\r\n\t\tg.setPosition(10, 100);\r\n\t\tg.setReverse(true);\r\n\t\tg.setSpacing(5);\r\n\t\tstage.addActor(g);\r\n\t\tfor (int i = 0; i < 10; i++) {\r\n\t\t\tg.addActor(new TextButton(\"button \" + i, skin));\r\n\t\t}\r\n\t\tg.pack();\r\n\r\n\t\tHorizontalGroup h = new HorizontalGroup();\r\n\t\th.setPosition(100, 100);\r\n\t\th.setReverse(true);\r\n\t\th.setSpacing(5);\r\n\t\tstage.addActor(h);\r\n\t\tfor (int i = 0; i < 7; i++) {\r\n\t\t\th.addActor(new TextButton(\"button \" + i, skin));\r\n\t\t}\r\n\t\th.pack();\r\n\r\n\t\tfinal TextButton button = new TextButton(\"Fancy Background\", skin);\r\n\r\n// button.addListener(new ClickListener() {\r\n// public void clicked (InputEvent event, float x, float y) {\r\n// System.out.println(\"click! \" + x + \" \" + y);\r\n// }\r\n// });\r\n\r\n\t\tbutton.addListener(new ActorGestureListener() {\r\n\t\t\tpublic boolean longPress (Actor actor, float x, float y) {\r\n\t\t\t\tSystem.out.println(\"long press \" + x + \", \" + y);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tpublic void fling (InputEvent event, float velocityX, float velocityY, int button) {\r\n\t\t\t\tSystem.out.println(\"fling \" + velocityX + \", \" + velocityY);\r\n\t\t\t}\r\n\r\n\t\t\tpublic void zoom (InputEvent event, float initialDistance, float distance) {\r\n\t\t\t\tSystem.out.println(\"zoom \" + initialDistance + \", \" + distance);\r\n\t\t\t}\r\n\r\n\t\t\tpublic void pan (InputEvent event, float x, float y, float deltaX, float deltaY) {\r\n\t\t\t\tevent.getListenerActor().moveBy(deltaX, deltaY);\r\n\t\t\t\tif (deltaX < 0) System.out.println(\"panning \" + deltaX + \", \" + deltaY + \" \" + event.getTarget());\r\n\t\t\t}\r\n\t\t});\r\n\r\n// button.addListener(new ChangeListener() {\r\n// public void changed (ChangeEvent event, Actor actor) {\r\n// // event.cancel();\r\n// }\r\n// });\r\n\r\n\t\tbutton.setPosition(50, 50);\r\n\t\tstage.addActor(button);\r\n\r\n// List select = new List(skin);\r\n// select.setBounds(200, 200, 100, 100);\r\n// select.setItems(new Object[] {1, 2, 3, 4, 5});\r\n// stage.addActor(select);\r\n\r\n// stage.addListener(new ChangeListener() {\r\n// public void changed (ChangeEvent event, Actor actor) {\r\n// System.out.println(actor);\r\n// }\r\n// });\r\n\r\n\t\tmeow.setDuration(2);\r\n\r\n\t\tactor.addAction(forever(sequence(moveBy(50, 0, 2), moveBy(-50, 0, 2), run(new Runnable() {\r\n\t\t\tpublic void run () {\r\n\t\t\t\tactor.setZIndex(0);\r\n\t\t\t}\r\n\t\t}))));\r\n\t\t// actor.addAction(parallel(rotateBy(90, 2), rotateBy(90, 2)));\r\n\t\t// actor.addAction(parallel(moveTo(250, 250, 2, elasticOut), color(RED, 6), delay(0.5f), rotateTo(180, 5, swing)));\r\n\t\t// actor.addAction(forever(sequence(scaleTo(2, 2, 0.5f), scaleTo(1, 1, 0.5f), delay(0.5f))));\r\n\r\n\t\tpatch = new TiledDrawable(skin.getRegion(\"default-round\"));\r\n\r\n\t\tWindow window = new Window(\"Moo\", skin);\r\n\t\tLabel lbl = new Label(\"ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJ\", skin);\r\n\t\tlbl.setWrap(true);\r\n\t\twindow.row();\r\n\t\twindow.add(lbl).width(400);\r\n\t\twindow.pack();\r\n\t\twindow.pack();\r\n\t\tstage.addActor(window);\r\n\t}","id":63220,"modified_method":"public void create () {\r\n\t\tstage = new Stage();\r\n\t\tGdx.input.setInputProcessor(stage);\r\n\r\n\t\tfinal TextureRegion region = new TextureRegion(new Texture(\"data/badlogic.jpg\"));\r\n\t\tfinal Actor actor = new Actor() {\r\n\t\t\tpublic void draw (Batch batch, float parentAlpha) {\r\n\t\t\t\tColor color = getColor();\r\n\t\t\t\tbatch.setColor(color.r, color.g, color.b, parentAlpha);\r\n\t\t\t\tbatch.draw(region, getX(), getY(), getOriginX(), getOriginY(), getWidth(), getHeight(), getScaleX(), getScaleY(),\r\n\t\t\t\t\tgetRotation());\r\n\t\t\t}\r\n\t\t};\r\n\t\tactor.setBounds(15, 15, 100, 100);\r\n\t\tactor.setOrigin(50, 50);\r\n\t\tstage.addActor(actor);\r\n\t\tactor.addListener(new InputListener() {\r\n\t\t\tpublic boolean touchDown (InputEvent event, float x, float y, int pointer, int button) {\r\n\t\t\t\tSystem.out.println(\"down\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tpublic void touchUp (InputEvent event, float x, float y, int pointer, int button) {\r\n\t\t\t\tSystem.out.println(\"up \" + event.getTarget());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tSkin skin = new Skin(Gdx.files.internal(\"data/uiskin.json\"));\r\n\r\n\t\tVerticalGroup g = new VerticalGroup().space(5).reverse().pad(5).fill();\r\n\t\tfor (int i = 0; i < 10; i++)\r\n\t\t\tg.addActor(new TextButton(\"button \" + i, skin));\r\n\t\tg.addActor(new TextButton(\"longer button\", skin));\r\n\t\tTable table = new Table().debug();\r\n\t\ttable.add(g);\r\n\t\ttable.pack();\r\n\t\ttable.setPosition(5, 100);\r\n\t\tstage.addActor(table);\r\n\r\n\t\tHorizontalGroup h = new HorizontalGroup().space(5).reverse().pad(5).fill();\r\n\t\tfor (int i = 0; i < 5; i++)\r\n\t\t\th.addActor(new TextButton(\"button \" + i, skin));\r\n\t\th.addActor(new TextButton(\"some taller\\nbutton\", skin));\r\n\t\ttable = new Table().debug();\r\n\t\ttable.add(h);\r\n\t\ttable.pack();\r\n\t\ttable.setPosition(130, 100);\r\n\t\tstage.addActor(table);\r\n\t\ttable.toFront();\r\n\r\n\t\tfinal TextButton button = new TextButton(\"Fancy Background\", skin);\r\n\r\n// button.addListener(new ClickListener() {\r\n// public void clicked (InputEvent event, float x, float y) {\r\n// System.out.println(\"click! \" + x + \" \" + y);\r\n// }\r\n// });\r\n\r\n\t\tbutton.addListener(new ActorGestureListener() {\r\n\t\t\tpublic boolean longPress (Actor actor, float x, float y) {\r\n\t\t\t\tSystem.out.println(\"long press \" + x + \", \" + y);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tpublic void fling (InputEvent event, float velocityX, float velocityY, int button) {\r\n\t\t\t\tSystem.out.println(\"fling \" + velocityX + \", \" + velocityY);\r\n\t\t\t}\r\n\r\n\t\t\tpublic void zoom (InputEvent event, float initialDistance, float distance) {\r\n\t\t\t\tSystem.out.println(\"zoom \" + initialDistance + \", \" + distance);\r\n\t\t\t}\r\n\r\n\t\t\tpublic void pan (InputEvent event, float x, float y, float deltaX, float deltaY) {\r\n\t\t\t\tevent.getListenerActor().moveBy(deltaX, deltaY);\r\n\t\t\t\tif (deltaX < 0) System.out.println(\"panning \" + deltaX + \", \" + deltaY + \" \" + event.getTarget());\r\n\t\t\t}\r\n\t\t});\r\n\r\n// button.addListener(new ChangeListener() {\r\n// public void changed (ChangeEvent event, Actor actor) {\r\n// // event.cancel();\r\n// }\r\n// });\r\n\r\n\t\tbutton.setPosition(50, 50);\r\n\t\tstage.addActor(button);\r\n\r\n// List select = new List(skin);\r\n// select.setBounds(200, 200, 100, 100);\r\n// select.setItems(new Object[] {1, 2, 3, 4, 5});\r\n// stage.addActor(select);\r\n\r\n// stage.addListener(new ChangeListener() {\r\n// public void changed (ChangeEvent event, Actor actor) {\r\n// System.out.println(actor);\r\n// }\r\n// });\r\n\r\n\t\tmeow.setDuration(2);\r\n\r\n\t\tactor.addAction(forever(sequence(moveBy(50, 0, 2), moveBy(-50, 0, 2), run(new Runnable() {\r\n\t\t\tpublic void run () {\r\n\t\t\t\tactor.setZIndex(0);\r\n\t\t\t}\r\n\t\t}))));\r\n\t\t// actor.addAction(parallel(rotateBy(90, 2), rotateBy(90, 2)));\r\n\t\t// actor.addAction(parallel(moveTo(250, 250, 2, elasticOut), color(RED, 6), delay(0.5f), rotateTo(180, 5, swing)));\r\n\t\t// actor.addAction(forever(sequence(scaleTo(2, 2, 0.5f), scaleTo(1, 1, 0.5f), delay(0.5f))));\r\n\r\n\t\tpatch = new TiledDrawable(skin.getRegion(\"default-round\"));\r\n\r\n\t\tWindow window = new Window(\"Moo\", skin);\r\n\t\tLabel lbl = new Label(\"ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJ\", skin);\r\n\t\tlbl.setWrap(true);\r\n\t\twindow.row();\r\n\t\twindow.add(lbl).width(400);\r\n\t\twindow.pack();\r\n\t\twindow.pack();\r\n\t\tstage.addActor(window);\r\n\t}","commit_id":"91a30df025d416ea6b213f1b3e61a343ced44cde","url":"https://github.com/libgdx/libgdx"},{"original_method":"public void layout () {\n\t\tfloat spacing = this.spacing;\n\t\tfloat groupWidth = getWidth() > 0 ? getWidth() : getMinWidth();\n\t\tfloat y = reverse ? 0 : (getHeight() > 0 ? getHeight() : getMinHeight());\n\t\tSnapshotArray<Actor> children = getChildren();\n\t\tfor (int i = 0, n = children.size; i < n; i++) {\n\t\t\tActor child = children.get(i);\n\t\t\tfloat width, height;\n\t\t\tif (child instanceof Layout) {\n\t\t\t\tLayout layout = (Layout)child;\n\t\t\t\twidth = layout.getPrefWidth();\n\t\t\t\theight = layout.getPrefHeight();\n\t\t\t\tif (width == 0 || width > groupWidth) {\n\t\t\t\t\twidth = groupWidth;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twidth = child.getWidth();\n\t\t\t\theight = child.getHeight();\n\t\t\t}\n\t\t\tfloat x;\n\t\t\tif ((alignment & Align.left) != 0)\n\t\t\t\tx = 0;\n\t\t\telse if ((alignment & Align.right) != 0)\n\t\t\t\tx = groupWidth - width;\n\t\t\telse\n\t\t\t\tx = (groupWidth - width) / 2;\n\t\t\tif (!reverse) y -= (height + spacing);\n\t\t\tif (round)\n\t\t\t\tchild.setBounds(Math.round(x), Math.round(y), Math.round(width), Math.round(height));\n\t\t\telse\n\t\t\t\tchild.setBounds(x, y, width, height);\n\t\t\tif (reverse) y += (height + spacing);\n\t\t}\n\t}","id":63221,"modified_method":"public void layout () {\n\t\tfloat spacing = this.spacing, padLeft = this.padLeft;\n\t\tint align = this.align;\n\t\tboolean reverse = this.reverse, round = this.round;\n\n\t\tfloat groupWidth = getWidth() - padLeft - padRight;\n\t\tfloat y = reverse ? padBottom : getHeight() - padTop + spacing;\n\t\tSnapshotArray<Actor> children = getChildren();\n\t\tfor (int i = 0, n = children.size; i < n; i++) {\n\t\t\tActor child = children.get(i);\n\t\t\tfloat width, height;\n\t\t\tif (child instanceof Layout) {\n\t\t\t\tLayout layout = (Layout)child;\n\t\t\t\tif (fill > 0)\n\t\t\t\t\twidth = groupWidth * fill;\n\t\t\t\telse\n\t\t\t\t\twidth = Math.min(layout.getPrefWidth(), groupWidth);\n\t\t\t\twidth = Math.max(width, layout.getMinWidth());\n\t\t\t\tfloat maxWidth = layout.getMaxWidth();\n\t\t\t\tif (maxWidth > 0 && width > maxWidth) width = maxWidth;\n\t\t\t\theight = layout.getPrefHeight();\n\t\t\t} else {\n\t\t\t\twidth = child.getWidth();\n\t\t\t\theight = child.getHeight();\n\t\t\t\tif (fill > 0) width *= fill;\n\t\t\t}\n\n\t\t\tfloat x = padLeft;\n\t\t\tif ((align & Align.right) != 0)\n\t\t\t\tx += groupWidth - width;\n\t\t\telse if ((align & Align.left) == 0) // center\n\t\t\t\tx += (groupWidth - width) / 2;\n\n\t\t\tif (!reverse) y -= (height + spacing);\n\t\t\tif (round)\n\t\t\t\tchild.setBounds(Math.round(x), Math.round(y), Math.round(width), Math.round(height));\n\t\t\telse\n\t\t\t\tchild.setBounds(x, y, width, height);\n\t\t\tif (reverse) y += (height + spacing);\n\t\t}\n\t}","commit_id":"91a30df025d416ea6b213f1b3e61a343ced44cde","url":"https://github.com/libgdx/libgdx"},{"original_method":"private void computeSize () {\n\t\tsizeInvalid = false;\n\t\tSnapshotArray<Actor> children = getChildren();\n\t\tint n = children.size;\n\t\tprefWidth = 0;\n\t\tprefHeight = spacing * (n - 1);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tActor child = children.get(i);\n\t\t\tif (child instanceof Layout) {\n\t\t\t\tLayout layout = (Layout)child;\n\t\t\t\tprefWidth = Math.max(prefWidth, layout.getPrefWidth());\n\t\t\t\tprefHeight += layout.getPrefHeight();\n\t\t\t} else {\n\t\t\t\tprefWidth = Math.max(prefWidth, child.getWidth());\n\t\t\t\tprefHeight += child.getHeight();\n\t\t\t}\n\t\t}\n\t\tif (round) {\n\t\t\tprefWidth = Math.round(prefWidth);\n\t\t\tprefHeight = Math.round(prefHeight);\n\t\t}\n\t}","id":63222,"modified_method":"private void computeSize () {\n\t\tsizeInvalid = false;\n\t\tSnapshotArray<Actor> children = getChildren();\n\t\tint n = children.size;\n\t\tprefWidth = 0;\n\t\tprefHeight = padTop + padBottom + spacing * (n - 1);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tActor child = children.get(i);\n\t\t\tif (child instanceof Layout) {\n\t\t\t\tLayout layout = (Layout)child;\n\t\t\t\tprefWidth = Math.max(prefWidth, layout.getPrefWidth());\n\t\t\t\tprefHeight += layout.getPrefHeight();\n\t\t\t} else {\n\t\t\t\tprefWidth = Math.max(prefWidth, child.getWidth());\n\t\t\t\tprefHeight += child.getHeight();\n\t\t\t}\n\t\t}\n\t\tprefWidth += padLeft + padRight;\n\t\tif (round) {\n\t\t\tprefWidth = Math.round(prefWidth);\n\t\t\tprefHeight = Math.round(prefHeight);\n\t\t}\n\t}","commit_id":"91a30df025d416ea6b213f1b3e61a343ced44cde","url":"https://github.com/libgdx/libgdx"},{"original_method":"/** If true, the children will be ordered from bottom to top rather than the default top to bottom. */\n\tpublic void setReverse (boolean reverse) {\n\t\tthis.reverse = reverse;\n\t}","id":63223,"modified_method":"/** If true, the children will be ordered from bottom to top rather than the default top to bottom. */\n\tpublic VerticalGroup reverse (boolean reverse) {\n\t\tthis.reverse = reverse;\n\t\treturn this;\n\t}","commit_id":"91a30df025d416ea6b213f1b3e61a343ced44cde","url":"https://github.com/libgdx/libgdx"},{"original_method":"private void createRandomPacks() {\n        if (pnlRandomPacks.getComponentCount() == 0) {\n            if (randomPackSelector == null) {\n                randomPackSelector = new RandomPacksSelectorDialog();\n                randomPackSelector.setLocationRelativeTo(this);\n            }\n            txtRandomPacks = new JTextArea();\n            txtRandomPacks.setEnabled(false);\n            txtRandomPacks.setLineWrap(true);\n            String randomPrefs = PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PACKS_RANDOM_DRAFT, \"\");\n            if (randomPrefs.length() > 0) {\n                txtRandomPacks.setText(randomPrefs);\n                ArrayList<String> theList = new ArrayList<>();\n                theList.addAll(Arrays.asList(randomPrefs.split(\";\")));\n                randomPackSelector.setSelectedPacks(theList);\n            } else {\n                ExpansionInfo[] allExpansions = ExpansionRepository.instance.getWithBoostersSortedByReleaseDate();\n                StringBuilder packList = new StringBuilder();\n                for (ExpansionInfo exp : allExpansions) {\n                    packList.append(exp.getCode());\n                    packList.append(\";\");\n                }\n                txtRandomPacks.setText(packList.toString());\n            }\n            txtRandomPacks.setAlignmentX(Component.LEFT_ALIGNMENT);\n            pnlRandomPacks.add(txtRandomPacks);\n            JButton btnSelectRandomPacks = new JButton();\n            btnSelectRandomPacks.setAlignmentX(Component.LEFT_ALIGNMENT);\n            btnSelectRandomPacks.setText(\"Select packs to be included in the pool\");\n            btnSelectRandomPacks.setToolTipText(RandomPacksSelectorDialog.randomDraftDescription);\n            btnSelectRandomPacks.addActionListener(new java.awt.event.ActionListener() {\n                @Override\n                public void actionPerformed(java.awt.event.ActionEvent evt) {\n                    showRandomPackSelectorDialog();\n\n                }\n            });\n            pnlRandomPacks.add(btnSelectRandomPacks);\n        }\n        this.pack();\n        this.revalidate();\n        this.repaint();\n    }","id":63224,"modified_method":"private void createRandomPacks() {\n        if (pnlRandomPacks.getComponentCount() == 0) {\n            if (randomPackSelector == null) {\n                randomPackSelector = new RandomPacksSelectorDialog(isRandom, isRichMan);\n                randomPackSelector.setLocationRelativeTo(this);\n            }\n            txtRandomPacks = new JTextArea();\n            txtRandomPacks.setEnabled(false);\n            txtRandomPacks.setLineWrap(true);\n            String randomPrefs = PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PACKS_RANDOM_DRAFT, \"\");\n            if (randomPrefs.length() > 0) {\n                txtRandomPacks.setText(randomPrefs);\n                ArrayList<String> theList = new ArrayList<>();\n                theList.addAll(Arrays.asList(randomPrefs.split(\";\")));\n                randomPackSelector.setSelectedPacks(theList);\n            } else {\n                ExpansionInfo[] allExpansions = ExpansionRepository.instance.getWithBoostersSortedByReleaseDate();\n                StringBuilder packList = new StringBuilder();\n                for (ExpansionInfo exp : allExpansions) {\n                    packList.append(exp.getCode());\n                    packList.append(\";\");\n                }\n                txtRandomPacks.setText(packList.toString());\n            }\n            txtRandomPacks.setAlignmentX(Component.LEFT_ALIGNMENT);\n            pnlRandomPacks.add(txtRandomPacks);\n            JButton btnSelectRandomPacks = new JButton();\n            btnSelectRandomPacks.setAlignmentX(Component.LEFT_ALIGNMENT);\n            btnSelectRandomPacks.setText(\"Select packs to be included in the pool\");\n            btnSelectRandomPacks.setToolTipText(RandomPacksSelectorDialog.randomDraftDescription);\n            btnSelectRandomPacks.addActionListener(new java.awt.event.ActionListener() {\n                @Override\n                public void actionPerformed(java.awt.event.ActionEvent evt) {\n                    showRandomPackSelectorDialog();\n\n                }\n            });\n            pnlRandomPacks.add(btnSelectRandomPacks);\n        }\n        this.pack();\n        this.revalidate();\n        this.repaint();\n    }","commit_id":"f9e363fb30a41b647cbb8f86456a4c80fc4cbd4d","url":"https://github.com/magefree/mage"},{"original_method":"/**\n     * Sets elements of the panel to visible or not visible\n     * \n     * @param tournamentType \n     */\n    private void activatePanelElements(TournamentTypeView tournamentType) {\n        this.pnlDraftOptions.setVisible(tournamentType.isDraft());\n        this.lblNumRounds.setVisible(!tournamentType.isElimination());\n        this.spnNumRounds.setVisible(!tournamentType.isElimination());\n\n        this.lblConstructionTime.setVisible(tournamentType.isLimited());\n        this.spnConstructTime.setVisible(tournamentType.isLimited());\n\n        this.lbDeckType.setVisible(!tournamentType.isLimited());\n        this.cbDeckType.setVisible(!tournamentType.isLimited());\n        this.lblGameType.setVisible(!tournamentType.isLimited());\n        this.cbGameType.setVisible(!tournamentType.isLimited());\n        this.player1Panel.showDeckElements(!tournamentType.isLimited());\n\n        if (tournamentType.isLimited()) {\n            if (tournamentType.isCubeBooster()) {\n                this.lblDraftCube.setVisible(true);\n                this.cbDraftCube.setVisible(true);\n                this.lblPacks.setVisible(false);\n                this.pnlPacks.setVisible(false);\n                this.pnlRandomPacks.setVisible(false);\n            } else if (tournamentType.isRandom()){\n                this.lblDraftCube.setVisible(false);\n                this.cbDraftCube.setVisible(false);\n                this.lblPacks.setVisible(true);\n                this.pnlRandomPacks.setVisible(true);\n                this.pnlPacks.setVisible(false);\n            } else {\n                this.lblDraftCube.setVisible(false);\n                this.cbDraftCube.setVisible(false);\n                this.lblPacks.setVisible(true);\n                this.pnlPacks.setVisible(true);\n                this.pnlRandomPacks.setVisible(false);\n            }\n        } else {\n            // construced\n            this.lblDraftCube.setVisible(false);\n            this.cbDraftCube.setVisible(false);\n            this.pnlPacks.setVisible(false);\n            this.pnlPacks.setVisible(false);\n            this.pnlRandomPacks.setVisible(false);\n        }\n    }","id":63225,"modified_method":"/**\n     * Sets elements of the panel to visible or not visible\n     *\n     * @param tournamentType\n     */\n    private void activatePanelElements(TournamentTypeView tournamentType) {\n        this.pnlDraftOptions.setVisible(tournamentType.isDraft());\n        this.lblNumRounds.setVisible(!tournamentType.isElimination());\n        this.spnNumRounds.setVisible(!tournamentType.isElimination());\n\n        this.lblConstructionTime.setVisible(tournamentType.isLimited());\n        this.spnConstructTime.setVisible(tournamentType.isLimited());\n\n        this.lbDeckType.setVisible(!tournamentType.isLimited());\n        this.cbDeckType.setVisible(!tournamentType.isLimited());\n        this.lblGameType.setVisible(!tournamentType.isLimited());\n        this.cbGameType.setVisible(!tournamentType.isLimited());\n        this.player1Panel.showDeckElements(!tournamentType.isLimited());\n\n        if (tournamentType.isLimited()) {\n            if (tournamentType.isCubeBooster()) {\n                this.lblDraftCube.setVisible(true);\n                this.cbDraftCube.setVisible(true);\n                this.lblPacks.setVisible(false);\n                this.pnlPacks.setVisible(false);\n                this.pnlRandomPacks.setVisible(false);\n            } else if (tournamentType.isRandom() || tournamentType.isRichMan()){\n                this.lblDraftCube.setVisible(false);\n                this.cbDraftCube.setVisible(false);\n                this.lblPacks.setVisible(true);\n                this.pnlRandomPacks.setVisible(true);\n                this.pnlPacks.setVisible(false);\n            } else {\n                this.lblDraftCube.setVisible(false);\n                this.cbDraftCube.setVisible(false);\n                this.lblPacks.setVisible(true);\n                this.pnlPacks.setVisible(true);\n                this.pnlRandomPacks.setVisible(false);\n            }\n        } else {\n            // construced\n            this.lblDraftCube.setVisible(false);\n            this.cbDraftCube.setVisible(false);\n            this.pnlPacks.setVisible(false);\n            this.pnlPacks.setVisible(false);\n            this.pnlRandomPacks.setVisible(false);\n        }\n    }","commit_id":"f9e363fb30a41b647cbb8f86456a4c80fc4cbd4d","url":"https://github.com/magefree/mage"},{"original_method":"private void setTournamentOptions(int numPlayers) {\n        TournamentTypeView tournamentType = (TournamentTypeView) cbTournamentType.getSelectedItem();\n        activatePanelElements(tournamentType);\n\n        if (numPlayers < tournamentType.getMinPlayers() || numPlayers > tournamentType.getMaxPlayers()) {\n            numPlayers = tournamentType.getMinPlayers();\n            createPlayers(numPlayers - 1);\n        }\n        this.spnNumPlayers.setModel(new SpinnerNumberModel(numPlayers, tournamentType.getMinPlayers(), tournamentType.getMaxPlayers(), 1));\n        this.spnNumPlayers.setEnabled(tournamentType.getMinPlayers() != tournamentType.getMaxPlayers());\n        createPlayers((Integer) spnNumPlayers.getValue() - 1);\n        \n        if (tournamentType.isLimited()) {\n            if (tournamentType.isRandom()){\n                createRandomPacks();\n            }else{\n                createPacks(tournamentType.getNumBoosters());\n            }\n        }\n\n    }","id":63226,"modified_method":"private void setTournamentOptions(int numPlayers) {\n        TournamentTypeView tournamentType = (TournamentTypeView) cbTournamentType.getSelectedItem();\n        activatePanelElements(tournamentType);\n\n        if (numPlayers < tournamentType.getMinPlayers() || numPlayers > tournamentType.getMaxPlayers()) {\n            numPlayers = tournamentType.getMinPlayers();\n            createPlayers(numPlayers - 1);\n        }\n        this.spnNumPlayers.setModel(new SpinnerNumberModel(numPlayers, tournamentType.getMinPlayers(), tournamentType.getMaxPlayers(), 1));\n        this.spnNumPlayers.setEnabled(tournamentType.getMinPlayers() != tournamentType.getMaxPlayers());\n        createPlayers((Integer) spnNumPlayers.getValue() - 1);\n\n        if (tournamentType.isLimited()) {\n            this.isRandom = tournamentType.isRandom();\n            this.isRichMan = tournamentType.isRichMan();                 \n            if (this.isRandom || this.isRichMan){\n                createRandomPacks();\n            }else{\n                createPacks(tournamentType.getNumBoosters());\n            }\n        }\n\n    }","commit_id":"f9e363fb30a41b647cbb8f86456a4c80fc4cbd4d","url":"https://github.com/magefree/mage"},{"original_method":"private void showRandomPackSelectorDialog() {\n        randomPackSelector.showDialog();\n        StringBuilder packList = new StringBuilder();\n        for (String str : randomPackSelector.getSelectedPacks()) {\n            packList.append(str);\n            packList.append(\";\");\n        }\n        this.txtRandomPacks.setText(packList.toString());\n        this.pack();\n        this.revalidate();\n        this.repaint();\n    }","id":63227,"modified_method":"private void showRandomPackSelectorDialog() {\n        randomPackSelector.setType(isRandom, isRichMan);\n        randomPackSelector.showDialog();\n        StringBuilder packList = new StringBuilder();\n        for (String str : randomPackSelector.getSelectedPacks()) {\n            packList.append(str);\n            packList.append(\";\");\n        }\n        this.txtRandomPacks.setText(packList.toString());\n        this.pack();\n        this.revalidate();\n        this.repaint();\n    }","commit_id":"f9e363fb30a41b647cbb8f86456a4c80fc4cbd4d","url":"https://github.com/magefree/mage"},{"original_method":"private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed\n        TournamentTypeView tournamentType = (TournamentTypeView) cbTournamentType.getSelectedItem();\n        TournamentOptions tOptions = new TournamentOptions(this.txtName.getText());\n        tOptions.setTournamentType(tournamentType.getName());\n        tOptions.setPassword(txtPassword.getText());\n        tOptions.getPlayerTypes().add(\"Human\");\n        tOptions.setWatchingAllowed(cbAllowSpectators.isSelected());\n        tOptions.setQuitRatio((Integer)spnQuitRatio.getValue());\n        for (TournamentPlayerPanel player: players) {\n            tOptions.getPlayerTypes().add((String) player.getPlayerType().getSelectedItem());\n        }\n        if (!tournamentType.isElimination()) {\n            tOptions.setNumberRounds((Integer)spnNumRounds.getValue());\n        }\n        if (tournamentType.isDraft()) {\n            DraftOptions options = new DraftOptions();\n            options.setDraftType(\"\");\n            options.setTiming((TimingOption) this.cbDraftTiming.getSelectedItem());\n            tOptions.setLimitedOptions(options);\n        }\n        if (tOptions.getLimitedOptions() == null) {\n            tOptions.setLimitedOptions(new LimitedOptions());\n        }\n        if (tournamentType.isLimited()) {\n            tOptions.getLimitedOptions().setConstructionTime((Integer)this.spnConstructTime.getValue() * 60);\n            tOptions.getLimitedOptions().setIsRandom(tournamentType.isRandom());\n            if (tournamentType.isCubeBooster()) {\n                tOptions.getLimitedOptions().setDraftCubeName(this.cbDraftCube.getSelectedItem().toString());\n            } else if (tournamentType.isRandom()) {\n                tOptions.getLimitedOptions().getSetCodes().clear();\n                ArrayList<String> selected = randomPackSelector.getSelectedPacks();\n                int maxPacks = 3 * (players.size() + 1);\n                if (selected.size() > maxPacks ){\n                    StringBuilder infoString = new StringBuilder(\"More sets were selected than needed. \");\n                    infoString.append(maxPacks);\n                    infoString.append(\" sets will be randomly chosen.\");\n                    JOptionPane.showMessageDialog(MageFrame.getDesktop(), infoString, \"Information\", JOptionPane.INFORMATION_MESSAGE);\n                    Collections.shuffle(selected);\n                    tOptions.getLimitedOptions().getSetCodes().addAll(selected.subList(0, maxPacks));\n                }else{\n                     tOptions.getLimitedOptions().getSetCodes().addAll(selected);\n                }\n            } else {\n                for (JComboBox pack: packs) {\n                    tOptions.getLimitedOptions().getSetCodes().add(((ExpansionInfo) pack.getSelectedItem()).getCode());\n                }\n            }\n            tOptions.getMatchOptions().setDeckType(\"Limited\");\n            tOptions.getMatchOptions().setGameType(\"Two Player Duel\");\n            tOptions.getMatchOptions().setLimited(true);\n        } else {\n            tOptions.getLimitedOptions().setConstructionTime(0);\n            tOptions.getLimitedOptions().setNumberBoosters(0);\n            tOptions.getLimitedOptions().setDraftCube(null);\n            tOptions.getLimitedOptions().setDraftCubeName(\"\");\n            tOptions.getMatchOptions().setDeckType((String) this.cbDeckType.getSelectedItem());\n            tOptions.getMatchOptions().setGameType(((GameTypeView) this.cbGameType.getSelectedItem()).getName());\n            tOptions.getMatchOptions().setLimited(false);\n        }\n        \n        tOptions.getMatchOptions().setMatchTimeLimit((MatchTimeLimit) this.cbTimeLimit.getSelectedItem());\n        tOptions.getMatchOptions().setSkillLevel((SkillLevel) this.cbSkillLevel.getSelectedItem());\n        tOptions.getMatchOptions().setWinsNeeded((Integer)this.spnNumWins.getValue());\n        tOptions.getMatchOptions().setFreeMulligans((Integer)this.spnFreeMulligans.getValue());\n        tOptions.getMatchOptions().setAttackOption(MultiplayerAttackOption.LEFT);\n        tOptions.getMatchOptions().setRange(RangeOfInfluence.ALL);\n        tOptions.getMatchOptions().setRollbackTurnsAllowed(this.chkRollbackTurnsAllowed.isSelected());\n        saveTournamentSettingsToPrefs(tOptions);\n\n        table = session.createTournamentTable(roomId, tOptions);\n        if (table == null) {\n            // message must be send by server!\n            return;\n        }\n        if (session.joinTournamentTable(\n                roomId,\n                table.getTableId(),\n                this.player1Panel.getPlayerName(), \n                \"Human\", 1,\n                DeckImporterUtil.importDeck(this.player1Panel.getDeckFile()),\n                tOptions.getPassword())) {\n            for (TournamentPlayerPanel player: players) {\n                if (!player.getPlayerType().toString().equals(\"Human\")) {\n                    if (!player.joinTournamentTable(roomId, table.getTableId(), DeckImporterUtil.importDeck(this.player1Panel.getDeckFile()))) {\n                        // error message must be send by sever\n                        session.removeTable(roomId, table.getTableId());\n                        table = null;\n                        return;\n                    }\n                }\n            }\n            this.hideDialog();\n            return;\n        }\n        JOptionPane.showMessageDialog(MageFrame.getDesktop(), \"Error joining tournament.\", \"Error\", JOptionPane.ERROR_MESSAGE);\n        session.removeTable(roomId, table.getTableId());\n        table = null;\n    }","id":63228,"modified_method":"private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed\n        TournamentTypeView tournamentType = (TournamentTypeView) cbTournamentType.getSelectedItem();\n        TournamentOptions tOptions = new TournamentOptions(this.txtName.getText());\n        tOptions.setTournamentType(tournamentType.getName());\n        tOptions.setPassword(txtPassword.getText());\n        tOptions.getPlayerTypes().add(\"Human\");\n        tOptions.setWatchingAllowed(cbAllowSpectators.isSelected());\n        tOptions.setQuitRatio((Integer)spnQuitRatio.getValue());\n        for (TournamentPlayerPanel player: players) {\n            tOptions.getPlayerTypes().add((String) player.getPlayerType().getSelectedItem());\n        }\n        if (!tournamentType.isElimination()) {\n            tOptions.setNumberRounds((Integer)spnNumRounds.getValue());\n        }\n        if (tournamentType.isDraft()) {\n            DraftOptions options = new DraftOptions();\n            options.setDraftType(\"\");\n            options.setTiming((TimingOption) this.cbDraftTiming.getSelectedItem());\n            tOptions.setLimitedOptions(options);\n        }\n        if (tOptions.getLimitedOptions() == null) {\n            tOptions.setLimitedOptions(new LimitedOptions());\n        }\n        if (tournamentType.isLimited()) {\n            tOptions.getLimitedOptions().setConstructionTime((Integer)this.spnConstructTime.getValue() * 60);\n            tOptions.getLimitedOptions().setIsRandom(tournamentType.isRandom());\n            if (tournamentType.isCubeBooster()) {\n                tOptions.getLimitedOptions().setDraftCubeName(this.cbDraftCube.getSelectedItem().toString());\n            } else if (tournamentType.isRandom() || tournamentType.isRichMan()) {\n                this.isRandom = tournamentType.isRandom();\n                this.isRichMan = tournamentType.isRichMan();\n                tOptions.getLimitedOptions().getSetCodes().clear();\n                ArrayList<String> selected = randomPackSelector.getSelectedPacks();\n                int maxPacks = 3 * (players.size() + 1);\n                if (tournamentType.isRichMan()) {\n                    maxPacks = 36;\n                }\n                if (selected.size() > maxPacks ){\n                    StringBuilder infoString = new StringBuilder(\"More sets were selected than needed. \");\n                    infoString.append(maxPacks);\n                    infoString.append(\" sets will be randomly chosen.\");\n                    JOptionPane.showMessageDialog(MageFrame.getDesktop(), infoString, \"Information\", JOptionPane.INFORMATION_MESSAGE);\n                    Collections.shuffle(selected);\n                    tOptions.getLimitedOptions().getSetCodes().addAll(selected.subList(0, maxPacks));\n                }else{\n                     tOptions.getLimitedOptions().getSetCodes().addAll(selected);\n                }\n            } else {\n                for (JComboBox pack: packs) {\n                    tOptions.getLimitedOptions().getSetCodes().add(((ExpansionInfo) pack.getSelectedItem()).getCode());\n                }\n            }\n            tOptions.getMatchOptions().setDeckType(\"Limited\");\n            tOptions.getMatchOptions().setGameType(\"Two Player Duel\");\n            tOptions.getMatchOptions().setLimited(true);\n        } else {\n            tOptions.getLimitedOptions().setConstructionTime(0);\n            tOptions.getLimitedOptions().setNumberBoosters(0);\n            tOptions.getLimitedOptions().setDraftCube(null);\n            tOptions.getLimitedOptions().setDraftCubeName(\"\");\n            tOptions.getMatchOptions().setDeckType((String) this.cbDeckType.getSelectedItem());\n            tOptions.getMatchOptions().setGameType(((GameTypeView) this.cbGameType.getSelectedItem()).getName());\n            tOptions.getMatchOptions().setLimited(false);\n        }\n\n        tOptions.getMatchOptions().setMatchTimeLimit((MatchTimeLimit) this.cbTimeLimit.getSelectedItem());\n        tOptions.getMatchOptions().setSkillLevel((SkillLevel) this.cbSkillLevel.getSelectedItem());\n        tOptions.getMatchOptions().setWinsNeeded((Integer)this.spnNumWins.getValue());\n        tOptions.getMatchOptions().setFreeMulligans((Integer)this.spnFreeMulligans.getValue());\n        tOptions.getMatchOptions().setAttackOption(MultiplayerAttackOption.LEFT);\n        tOptions.getMatchOptions().setRange(RangeOfInfluence.ALL);\n        tOptions.getMatchOptions().setRollbackTurnsAllowed(this.chkRollbackTurnsAllowed.isSelected());\n        saveTournamentSettingsToPrefs(tOptions);\n\n        table = session.createTournamentTable(roomId, tOptions);\n        if (table == null) {\n            // message must be send by server!\n            return;\n        }\n        if (session.joinTournamentTable(\n                roomId,\n                table.getTableId(),\n                this.player1Panel.getPlayerName(),\n                \"Human\", 1,\n                DeckImporterUtil.importDeck(this.player1Panel.getDeckFile()),\n                tOptions.getPassword())) {\n            for (TournamentPlayerPanel player: players) {\n                if (!player.getPlayerType().toString().equals(\"Human\")) {\n                    if (!player.joinTournamentTable(roomId, table.getTableId(), DeckImporterUtil.importDeck(this.player1Panel.getDeckFile()))) {\n                        // error message must be send by sever\n                        session.removeTable(roomId, table.getTableId());\n                        table = null;\n                        return;\n                    }\n                }\n            }\n            this.hideDialog();\n            return;\n        }\n        JOptionPane.showMessageDialog(MageFrame.getDesktop(), \"Error joining tournament.\", \"Error\", JOptionPane.ERROR_MESSAGE);\n        session.removeTable(roomId, table.getTableId());\n        table = null;\n    }","commit_id":"f9e363fb30a41b647cbb8f86456a4c80fc4cbd4d","url":"https://github.com/magefree/mage"},{"original_method":"/**\n     * set the tournament settings from java prefs\n     */\n    private void setTournamentSettingsFromPrefs () {\n        int numPlayers;\n        txtName.setText(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_NAME, \"Tournament\"));\n        txtPassword.setText(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PASSWORD, \"\"));\n        int timeLimit = Integer.parseInt(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_TIME_LIMIT, \"1500\"));\n        for (MatchTimeLimit mtl :MatchTimeLimit.values()) {\n            if (mtl.getTimeLimit() == timeLimit) {\n                this.cbTimeLimit.setSelectedItem(mtl);\n                break;\n            }\n        }\n        String skillLevelDefault = PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TABLE_SKILL_LEVEL, \"Casual\");\n        for (SkillLevel skillLevel :SkillLevel.values()) {\n            if (skillLevel.toString().equals(skillLevelDefault)) {\n                this.cbSkillLevel.setSelectedItem(skillLevel);\n                break;\n            }\n        }        \n        int constructionTime = Integer.parseInt(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_CONSTR_TIME, \"600\")) / 60;\n        if (constructionTime < CONSTRUCTION_TIME_MIN || constructionTime > CONSTRUCTION_TIME_MAX) {\n            constructionTime = CONSTRUCTION_TIME_MIN;\n        }\n        this.spnConstructTime.setValue(constructionTime);\n        String tournamentTypeName = PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_TYPE, \"Sealed Elimination\");\n        for (TournamentTypeView tournamentTypeView : session.getTournamentTypes()) {\n            if (tournamentTypeView.getName().equals(tournamentTypeName)) {\n                cbTournamentType.setSelectedItem(tournamentTypeView);\n                break;\n            }\n        }\n        this.spnFreeMulligans.setValue(Integer.parseInt(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_NUMBER_OF_FREE_MULLIGANS, \"0\")));\n        this.spnNumWins.setValue(Integer.parseInt(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_NUMBER_OF_WINS, \"2\")));\n        this.spnQuitRatio.setValue(Integer.parseInt(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_QUIT_RATIO, \"100\")));\n\n        TournamentTypeView tournamentType = (TournamentTypeView) cbTournamentType.getSelectedItem();\n        activatePanelElements(tournamentType);\n\n        if (tournamentType.isLimited()) {\n            if (!tournamentType.isDraft()) {\n                numPlayers = Integer.parseInt(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PLAYERS_SEALED, \"2\"));\n                setTournamentOptions(numPlayers);\n                loadBoosterPacks(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PACKS_SEALED, \"\"));\n            }\n\n            if (tournamentType.isDraft()) {\n                numPlayers = Integer.parseInt(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PLAYERS_DRAFT, \"4\"));\n                setTournamentOptions(numPlayers);\n                if (!tournamentType.isRandom()){\n                    loadBoosterPacks(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PACKS_DRAFT, \"\"));\n                }\n\n                String draftTiming = PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_DRAFT_TIMING, \"REGULAR\");\n                for (TimingOption timingOption : DraftOptions.TimingOption.values()) {\n                    if (timingOption.toString().equals(draftTiming)) {\n                        cbDraftTiming.setSelectedItem(draftTiming);\n                        break;\n                    }\n                }\n            }\n        }\n        this.cbAllowSpectators.setSelected(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_ALLOW_SPECTATORS, \"Yes\").equals(\"Yes\"));\n        this.chkRollbackTurnsAllowed.setSelected(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_ALLOW_ROLLBACKS, \"Yes\").equals(\"Yes\"));\n    }","id":63229,"modified_method":"/**\n     * set the tournament settings from java prefs\n     */\n    private void setTournamentSettingsFromPrefs () {\n        int numPlayers;\n        txtName.setText(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_NAME, \"Tournament\"));\n        txtPassword.setText(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PASSWORD, \"\"));\n        int timeLimit = Integer.parseInt(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_TIME_LIMIT, \"1500\"));\n        for (MatchTimeLimit mtl :MatchTimeLimit.values()) {\n            if (mtl.getTimeLimit() == timeLimit) {\n                this.cbTimeLimit.setSelectedItem(mtl);\n                break;\n            }\n        }\n        String skillLevelDefault = PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TABLE_SKILL_LEVEL, \"Casual\");\n        for (SkillLevel skillLevel :SkillLevel.values()) {\n            if (skillLevel.toString().equals(skillLevelDefault)) {\n                this.cbSkillLevel.setSelectedItem(skillLevel);\n                break;\n            }\n        }\n        int constructionTime = Integer.parseInt(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_CONSTR_TIME, \"600\")) / 60;\n        if (constructionTime < CONSTRUCTION_TIME_MIN || constructionTime > CONSTRUCTION_TIME_MAX) {\n            constructionTime = CONSTRUCTION_TIME_MIN;\n        }\n        this.spnConstructTime.setValue(constructionTime);\n        String tournamentTypeName = PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_TYPE, \"Sealed Elimination\");\n        for (TournamentTypeView tournamentTypeView : session.getTournamentTypes()) {\n            if (tournamentTypeView.getName().equals(tournamentTypeName)) {\n                cbTournamentType.setSelectedItem(tournamentTypeView);\n                break;\n            }\n        }\n        this.spnFreeMulligans.setValue(Integer.parseInt(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_NUMBER_OF_FREE_MULLIGANS, \"0\")));\n        this.spnNumWins.setValue(Integer.parseInt(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_NUMBER_OF_WINS, \"2\")));\n        this.spnQuitRatio.setValue(Integer.parseInt(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_QUIT_RATIO, \"100\")));\n\n        TournamentTypeView tournamentType = (TournamentTypeView) cbTournamentType.getSelectedItem();\n        activatePanelElements(tournamentType);\n\n        if (tournamentType.isLimited()) {\n            if (!tournamentType.isDraft()) {\n                numPlayers = Integer.parseInt(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PLAYERS_SEALED, \"2\"));\n                setTournamentOptions(numPlayers);\n                loadBoosterPacks(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PACKS_SEALED, \"\"));\n            }\n\n            if (tournamentType.isDraft()) {\n                numPlayers = Integer.parseInt(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PLAYERS_DRAFT, \"4\"));\n                setTournamentOptions(numPlayers);\n                if (!(tournamentType.isRandom() || tournamentType.isRichMan())){\n                    loadBoosterPacks(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PACKS_DRAFT, \"\"));\n                }\n\n                String draftTiming = PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_DRAFT_TIMING, \"REGULAR\");\n                for (TimingOption timingOption : DraftOptions.TimingOption.values()) {\n                    if (timingOption.toString().equals(draftTiming)) {\n                        cbDraftTiming.setSelectedItem(draftTiming);\n                        break;\n                    }\n                }\n            }\n        }\n        this.cbAllowSpectators.setSelected(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_ALLOW_SPECTATORS, \"Yes\").equals(\"Yes\"));\n        this.chkRollbackTurnsAllowed.setSelected(PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_TOURNAMENT_ALLOW_ROLLBACKS, \"Yes\").equals(\"Yes\"));\n    }","commit_id":"f9e363fb30a41b647cbb8f86456a4c80fc4cbd4d","url":"https://github.com/magefree/mage"},{"original_method":"public RandomPacksSelectorDialog() {\n        initComponents();\n        this.pnlApply.setToolTipText(randomDraftDescription);\n        this.pnlSelect.setToolTipText(randomDraftDescription);\n        boxesCreated = false;\n    }","id":63230,"modified_method":"public RandomPacksSelectorDialog(boolean isRandomDraft, boolean isRichManDraft) {\n        initComponents();\n        setType(isRandomDraft, isRichManDraft);\n        this.pnlApply.setToolTipText(randomDraftDescription);\n        this.pnlSelect.setToolTipText(randomDraftDescription);\n        boxesCreated = false;\n    }","commit_id":"f9e363fb30a41b647cbb8f86456a4c80fc4cbd4d","url":"https://github.com/magefree/mage"},{"original_method":"public void doApply() {\n        if (getSelectedPacks().size() < 2) {\n            JOptionPane.showMessageDialog(this, \"At least 2 sets must be selected\", \"Error\", JOptionPane.ERROR_MESSAGE);\n        } else {\n            this.setVisible(false);\n        }\n    }","id":63231,"modified_method":"public void doApply() {\n        if (getSelectedPacks().size() < 2 && isRandomDraft) {\n            JOptionPane.showMessageDialog(this, \"At least 2 sets must be selected\", \"Error\", JOptionPane.ERROR_MESSAGE);\n        } else if (getSelectedPacks().size() < 1 && isRichManDraft) {\n            JOptionPane.showMessageDialog(this, \"At least 1 set must be selected\", \"Error\", JOptionPane.ERROR_MESSAGE);\n        } else {\n            this.setVisible(false);\n        }\n    }","commit_id":"f9e363fb30a41b647cbb8f86456a4c80fc4cbd4d","url":"https://github.com/magefree/mage"},{"original_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        pnlPacks = new java.awt.Panel();\n        pnlSelect = new javax.swing.JPanel();\n        btnNone = new javax.swing.JButton();\n        btnAll = new javax.swing.JButton();\n        pnlApply = new javax.swing.JPanel();\n        btnApply = new javax.swing.JButton();\n\n        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);\n        setTitle(\"Random Booster Draft Packs Selector\");\n        setModal(true);\n        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);\n        setPreferredSize(new java.awt.Dimension(600, 450));\n        setResizable(false);\n        addWindowListener(new java.awt.event.WindowAdapter() {\n            public void windowClosing(java.awt.event.WindowEvent evt) {\n                formWindowClosing(evt);\n            }\n        });\n\n        pnlPacks.setLayout(new java.awt.GridLayout(11, 12));\n\n        pnlSelect.setLayout(new javax.swing.BoxLayout(pnlSelect, javax.swing.BoxLayout.LINE_AXIS));\n\n        btnNone.setText(\"Select none\");\n        btnNone.setActionCommand(\"none\");\n        btnNone.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                btnNoneActionPerformed(evt);\n            }\n        });\n        pnlSelect.add(btnNone);\n\n        btnAll.setText(\"Select all\");\n        btnAll.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                btnAllActionPerformed(evt);\n            }\n        });\n        pnlSelect.add(btnAll);\n\n        pnlApply.setLayout(new javax.swing.BoxLayout(pnlApply, javax.swing.BoxLayout.LINE_AXIS));\n\n        btnApply.setText(\"Apply\");\n        btnApply.setToolTipText(\"At least two packs must be selected\");\n        btnApply.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                btnApplyActionPerformed(evt);\n            }\n        });\n        pnlApply.add(btnApply);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(pnlSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 300, Short.MAX_VALUE)\n                .addComponent(pnlApply, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(pnlPacks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(pnlPacks, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(pnlApply, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(pnlSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n\n        pack();\n    }","id":63232,"modified_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        pnlPacks = new java.awt.Panel();\n        pnlSelect = new javax.swing.JPanel();\n        btnNone = new javax.swing.JButton();\n        btnAll = new javax.swing.JButton();\n        pnlApply = new javax.swing.JPanel();\n        btnApply = new javax.swing.JButton();\n\n        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);\n        setTitle(title);\n        setModal(true);\n        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);\n        setPreferredSize(new java.awt.Dimension(600, 450));\n        setResizable(false);\n        addWindowListener(new java.awt.event.WindowAdapter() {\n            public void windowClosing(java.awt.event.WindowEvent evt) {\n                formWindowClosing(evt);\n            }\n        });\n\n        pnlPacks.setLayout(new java.awt.GridLayout(11, 12));\n\n        pnlSelect.setLayout(new javax.swing.BoxLayout(pnlSelect, javax.swing.BoxLayout.LINE_AXIS));\n\n        btnNone.setText(\"Select none\");\n        btnNone.setActionCommand(\"none\");\n        btnNone.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                btnNoneActionPerformed(evt);\n            }\n        });\n        pnlSelect.add(btnNone);\n\n        btnAll.setText(\"Select all\");\n        btnAll.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                btnAllActionPerformed(evt);\n            }\n        });\n        pnlSelect.add(btnAll);\n\n        pnlApply.setLayout(new javax.swing.BoxLayout(pnlApply, javax.swing.BoxLayout.LINE_AXIS));\n\n        btnApply.setText(\"Apply\");\n        if (isRandomDraft) {\n            btnApply.setToolTipText(\"At least 2 packs must be selected\");\n        } else if (isRichManDraft) {\n            btnApply.setToolTipText(\"At least 1 pack must be selected\");\n        }\n        btnApply.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                btnApplyActionPerformed(evt);\n            }\n        });\n        pnlApply.add(btnApply);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(pnlSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 300, Short.MAX_VALUE)\n                .addComponent(pnlApply, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(pnlPacks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(pnlPacks, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(pnlApply, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(pnlSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n\n        pack();\n    }","commit_id":"f9e363fb30a41b647cbb8f86456a4c80fc4cbd4d","url":"https://github.com/magefree/mage"},{"original_method":"public RichManDraftEliminationTournamentType() {\n        this.name = \"Booster Draft Elimination (Rich Man)\";\n        this.maxPlayers = 16;\n        this.minPlayers = 2;\n        this.numBoosters = 1;\n        this.draft = true;\n        this.limited = true;\n        this.cubeBooster = false;\n        this.elimination = true;\n        this.isRandom = true;\n    }","id":63233,"modified_method":"public RichManDraftEliminationTournamentType() {\n        this.name = \"Booster Draft Elimination (Rich Man)\";\n        this.maxPlayers = 16;\n        this.minPlayers = 2;\n        this.numBoosters = 1;\n        this.draft = true;\n        this.limited = true;\n        this.cubeBooster = false;\n        this.elimination = true;\n        this.isRandom = false;\n        this.isRichMan = true;\n    }","commit_id":"f9e363fb30a41b647cbb8f86456a4c80fc4cbd4d","url":"https://github.com/magefree/mage"},{"original_method":"public TournamentTypeView(TournamentType tournamentType) {\n        this.name = tournamentType.getName();\n        this.minPlayers = tournamentType.getMinPlayers();\n        this.maxPlayers = tournamentType.getMaxPlayers();\n        this.numBoosters = tournamentType.getNumBoosters();\n        this.draft = tournamentType.isDraft();\n        this.limited = tournamentType.isLimited();\n        this.cubeBooster = tournamentType.isCubeBooster();\n        this.elimination = tournamentType.isElimination();\n        this.random = tournamentType.isRandom();\n    }","id":63234,"modified_method":"public TournamentTypeView(TournamentType tournamentType) {\n        this.name = tournamentType.getName();\n        this.minPlayers = tournamentType.getMinPlayers();\n        this.maxPlayers = tournamentType.getMaxPlayers();\n        this.numBoosters = tournamentType.getNumBoosters();\n        this.draft = tournamentType.isDraft();\n        this.limited = tournamentType.isLimited();\n        this.cubeBooster = tournamentType.isCubeBooster();\n        this.elimination = tournamentType.isElimination();\n        this.random = tournamentType.isRandom();\n        this.richMan = tournamentType.isRichMan();\n    }","commit_id":"f9e363fb30a41b647cbb8f86456a4c80fc4cbd4d","url":"https://github.com/magefree/mage"},{"original_method":"private InputStream sendHttpRequestStream(String method, boolean overrideTrust) throws HttpClientException {\n        // setup some SSL variables\n        SSLUtil.loadJsseProperties();\n            \n        String arguments = null;\n        InputStream in = null;                     \n\n        if (url == null) {\n            throw new HttpClientException(\"Cannot process a null URL.\");\n        }\n\n        if (rawStream != null) {\n            arguments = rawStream;\n        } else if (parameters != null && parameters.size() > 0) {\n            arguments = UtilHttp.urlEncodeArgs(parameters, false);\n        }\n\n        // Append the arguments to the query string if GET.\n        if (method.equalsIgnoreCase(\"get\") && arguments != null) {\n            url = url + \"?\" + arguments;\n        }\n\n        // Create the URL and open the connection.\n        try {\n            requestUrl = new URL(url);\n            if (overrideTrust) {\n                con = URLConnector.openUntrustedConnection(requestUrl, timeout, clientCertAlias, hostVerification);\n            } else {\n                con = URLConnector.openConnection(requestUrl, timeout, clientCertAlias, hostVerification);\n            }\n            if (Debug.verboseOn() || debug) Debug.log(\"Connection opened to : \" + requestUrl.toExternalForm(), module);\n\n            if ((con instanceof HttpURLConnection)) {\n                ((HttpURLConnection) con).setInstanceFollowRedirects(followRedirects);\n                if (Debug.verboseOn() || debug) Debug.log(\"Connection is of type HttpURLConnection\", module);\n            }\n\n            // set the content type\n            if (contentType != null) {\n                con.setRequestProperty(\"Content-type\", contentType);\n            }\n\n            // connection settings\n            con.setDoOutput(true);\n            con.setUseCaches(false);\n            if (keepAlive) {\n                con.setRequestProperty(\"Connection\", \"Keep-Alive\");\n            }\n\n            if (method.equalsIgnoreCase(\"post\")) {\n                if (contentType == null)\n                    con.setRequestProperty(\"Content-type\", \"application/x-www-form-urlencoded\");\n                con.setDoInput(true);\n            }\n\n            if (headers != null && headers.size() > 0) {\n                Set headerSet = headers.keySet();\n                Iterator i = headerSet.iterator();\n\n                while (i.hasNext()) {\n                    String headerName = (String) i.next();\n                    String headerValue = (String) headers.get(headerName);\n                    con.setRequestProperty(headerName, headerValue);\n                    if (Debug.verboseOn() || debug) Debug.log(\"Header : \" + headerName + \" -> \" + headerValue, module);\n                }\n            }\n\n            if (method.equalsIgnoreCase(\"post\")) {\n                DataOutputStream out = new DataOutputStream(con.getOutputStream());\n                if (Debug.verboseOn() || debug) Debug.log(\"Opened output stream\", module);\n\n                out.writeBytes(arguments);\n                if (Debug.verboseOn() || debug) Debug.log(\"Wrote arguements (parameters) : \" + arguments, module);\n\n                out.flush();\n                out.close();\n                if (Debug.verboseOn() || debug) Debug.log(\"Flushed and closed buffer\", module);\n            }\n\n            if (Debug.verboseOn() || debug) {\n                Map headerFields = con.getHeaderFields();\n                Debug.log(\"Header Fields : \" + headerFields, module);\n            }\n\n            in = con.getInputStream();\n        } catch (IOException ioe) {\n            if ((trustAny && !overrideTrust) && (ioe.getCause() instanceof CertificateException)) {\n                Debug.logWarning(ioe.getCause(), module);\n                return sendHttpRequestStream(method, true);\n            }\n            throw new HttpClientException(\"IO Error processing request\", ioe);\n        } catch (Exception e) {\n            throw new HttpClientException(\"Error processing request\", e);\n        }\n\n        return in;\n    }","id":63235,"modified_method":"private InputStream sendHttpRequestStream(String method, boolean overrideTrust) throws HttpClientException {\n        // setup some SSL variables\n        SSLUtil.loadJsseProperties();\n            \n        String arguments = null;\n        InputStream in = null;                     \n\n        if (url == null) {\n            throw new HttpClientException(\"Cannot process a null URL.\");\n        }\n\n        if (rawStream != null) {\n            arguments = rawStream;\n        } else if (parameters != null && parameters.size() > 0) {\n            arguments = UtilHttp.urlEncodeArgs(parameters, false);\n        }\n\n        // Append the arguments to the query string if GET.\n        if (method.equalsIgnoreCase(\"get\") && arguments != null) {\n            url = url + \"?\" + arguments;\n        }\n\n        // Create the URL and open the connection.\n        try {\n            requestUrl = new URL(url);\n            if (overrideTrust) {\n                con = URLConnector.openUntrustedConnection(requestUrl, timeout, clientCertAlias, hostVerification);\n            } else {\n                con = URLConnector.openConnection(requestUrl, timeout, clientCertAlias, hostVerification);\n            }\n            if (Debug.verboseOn() || debug) Debug.log(\"Connection opened to : \" + requestUrl.toExternalForm(), module);\n\n            if ((con instanceof HttpURLConnection)) {\n                ((HttpURLConnection) con).setInstanceFollowRedirects(followRedirects);\n                if (Debug.verboseOn() || debug) Debug.log(\"Connection is of type HttpURLConnection\", module);\n            }\n\n            // set the content type\n            if (contentType != null) {\n                con.setRequestProperty(\"Content-type\", contentType);\n            }\n\n            // connection settings\n            con.setDoOutput(true);\n            con.setUseCaches(false);\n            if (keepAlive) {\n                con.setRequestProperty(\"Connection\", \"Keep-Alive\");\n            }\n\n            if (method.equalsIgnoreCase(\"post\")) {\n                if (contentType == null)\n                    con.setRequestProperty(\"Content-type\", \"application/x-www-form-urlencoded\");\n                con.setDoInput(true);\n            }\n\n            if (headers != null && headers.size() > 0) {\n                Set headerSet = headers.keySet();\n                Iterator i = headerSet.iterator();\n\n                while (i.hasNext()) {\n                    String headerName = (String) i.next();\n                    String headerValue = (String) headers.get(headerName);\n                    con.setRequestProperty(headerName, headerValue);\n                    if (Debug.verboseOn() || debug) Debug.log(\"Header : \" + headerName + \" -> \" + headerValue, module);\n                }\n            }\n\n            if (method.equalsIgnoreCase(\"post\")) {\n                DataOutputStream out = new DataOutputStream(con.getOutputStream());\n                if (Debug.verboseOn() || debug) Debug.log(\"Opened output stream\", module);\n\n                if (arguments != null) {\n                    out.writeBytes(arguments);\n                    if (Debug.verboseOn() || debug) Debug.log(\"Wrote arguements (parameters) : \" + arguments, module);\n                }\n\n                out.flush();\n                out.close();\n                if (Debug.verboseOn() || debug) Debug.log(\"Flushed and closed buffer\", module);\n            }\n\n            if (Debug.verboseOn() || debug) {\n                Map headerFields = con.getHeaderFields();\n                Debug.log(\"Header Fields : \" + headerFields, module);\n            }\n\n            in = con.getInputStream();\n        } catch (IOException ioe) {\n            if ((trustAny && !overrideTrust) && (ioe.getCause() instanceof CertificateException)) {\n                Debug.logWarning(ioe.getCause(), module);\n                return sendHttpRequestStream(method, true);\n            }\n            throw new HttpClientException(\"IO Error processing request\", ioe);\n        } catch (Exception e) {\n            throw new HttpClientException(\"Error processing request\", e);\n        }\n\n        return in;\n    }","commit_id":"8282b5c3488669545093e6688112a4b102ba8d48","url":"https://github.com/apache/ofbiz"},{"original_method":"@Override public void writeTo(StreamOutput out) throws IOException {\n        super.writeTo(out);\n        out.writeUTF(type);\n        if (id == null) {\n            out.writeBoolean(false);\n        } else {\n            out.writeBoolean(true);\n            out.writeUTF(id);\n        }\n        if (source != null) {\n            out.writeVInt(source.length);\n            out.writeBytes(source);\n        } else {\n            out.writeVInt(sourceBuilder.unsafeBytesLength());\n            out.writeBytes(sourceBuilder.unsafeBytes(), 0, sourceBuilder.unsafeBytesLength());\n        }\n        out.writeByte(opType.id());\n    }","id":63236,"modified_method":"@Override public void writeTo(StreamOutput out) throws IOException {\n        super.writeTo(out);\n        out.writeUTF(type);\n        if (id == null) {\n            out.writeBoolean(false);\n        } else {\n            out.writeBoolean(true);\n            out.writeUTF(id);\n        }\n        out.writeVInt(sourceLength);\n        out.writeBytes(source, sourceOffset, sourceLength);\n        out.writeByte(opType.id());\n    }","commit_id":"e35d67afd75e05cd8043be7c890b1f7524e8d8c9","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public String toString() {\n        return \"[\" + index + \"][\" + type + \"][\" + id + \"], source[\" + Unicode.fromBytes(source) + \"]\";\n    }","id":63237,"modified_method":"@Override public String toString() {\n        return \"[\" + index + \"][\" + type + \"][\" + id + \"], source[\" + Unicode.fromBytes(source, sourceOffset, sourceLength) + \"]\";\n    }","commit_id":"e35d67afd75e05cd8043be7c890b1f7524e8d8c9","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public void readFrom(StreamInput in) throws IOException {\n        super.readFrom(in);\n        type = in.readUTF();\n        if (in.readBoolean()) {\n            id = in.readUTF();\n        }\n        source = new byte[in.readVInt()];\n        in.readFully(source);\n        opType = OpType.fromId(in.readByte());\n    }","id":63238,"modified_method":"@Override public void readFrom(StreamInput in) throws IOException {\n        super.readFrom(in);\n        type = in.readUTF();\n        if (in.readBoolean()) {\n            id = in.readUTF();\n        }\n\n        sourceUnsafe = false;\n        sourceOffset = 0;\n        sourceLength = in.readVInt();\n        source = new byte[sourceLength];\n        in.readFully(source);\n\n        opType = OpType.fromId(in.readByte());\n    }","commit_id":"e35d67afd75e05cd8043be7c890b1f7524e8d8c9","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * Writes the JSON as the provided content type.\n     *\n     * @param source The map to index\n     */\n    @Required public IndexRequest source(Map source, XContentType contentType) throws ElasticSearchGenerationException {\n        try {\n            BinaryXContentBuilder builder = XContentFactory.contentBinaryBuilder(contentType);\n            builder.map(source);\n            this.source = builder.copiedBytes();\n        } catch (IOException e) {\n            throw new ElasticSearchGenerationException(\"Failed to generate [\" + source + \"]\", e);\n        }\n        return this;\n    }","id":63239,"modified_method":"/**\n     * Writes the Map as the provided content type.\n     *\n     * @param source The map to index\n     */\n    @Required public IndexRequest source(Map source, XContentType contentType) throws ElasticSearchGenerationException {\n        try {\n            BinaryXContentBuilder builder = XContentFactory.contentBinaryBuilder(contentType);\n            builder.map(source);\n            return source(builder);\n        } catch (IOException e) {\n            throw new ElasticSearchGenerationException(\"Failed to generate [\" + source + \"]\", e);\n        }\n    }","commit_id":"e35d67afd75e05cd8043be7c890b1f7524e8d8c9","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * Sets the content source to index.\n     */\n    @Required public IndexRequest source(XContentBuilder sourceBuilder) {\n        this.sourceBuilder = sourceBuilder;\n        return this;\n    }","id":63240,"modified_method":"/**\n     * Sets the content source to index.\n     */\n    @Required public IndexRequest source(XContentBuilder sourceBuilder) {\n        try {\n            source = sourceBuilder.unsafeBytes();\n            sourceOffset = 0;\n            sourceLength = sourceBuilder.unsafeBytesLength();\n            sourceUnsafe = true;\n        } catch (IOException e) {\n            throw new ElasticSearchGenerationException(\"Failed to generate [\" + sourceBuilder + \"]\", e);\n        }\n        return this;\n    }","commit_id":"e35d67afd75e05cd8043be7c890b1f7524e8d8c9","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * Sets the JSON source to index.\n     */\n    @Required public IndexRequest source(byte[] source) {\n        this.source = source;\n        return this;\n    }","id":63241,"modified_method":"/**\n     * Sets the document to index in bytes form.\n     */\n    public IndexRequest source(byte[] source) {\n        return source(source, 0, source.length);\n    }","commit_id":"e35d67afd75e05cd8043be7c890b1f7524e8d8c9","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * Sets the JSON source to index.\n     *\n     * <p>Note, its preferable to either set it using {@link #source(org.elasticsearch.util.xcontent.builder.XContentBuilder)}\n     * or using the {@link #source(byte[])}.\n     */\n    @Required public IndexRequest source(String source) {\n        this.source = Unicode.fromStringAsBytes(source);\n        return this;\n    }","id":63242,"modified_method":"/**\n     * Sets the document source to index.\n     *\n     * <p>Note, its preferable to either set it using {@link #source(org.elasticsearch.util.xcontent.builder.XContentBuilder)}\n     * or using the {@link #source(byte[])}.\n     */\n    @Required public IndexRequest source(String source) {\n        UnicodeUtil.UTF8Result result = Unicode.fromStringAsUtf8(source);\n        this.source = result.result;\n        this.sourceOffset = 0;\n        this.sourceLength = result.length;\n        this.sourceUnsafe = true;\n        return this;\n    }","commit_id":"e35d67afd75e05cd8043be7c890b1f7524e8d8c9","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * The source of the JSON document to index.\n     */\n    byte[] source() {\n        if (source == null && sourceBuilder != null) {\n            try {\n                source = sourceBuilder.copiedBytes();\n            } catch (IOException e) {\n                throw new ElasticSearchGenerationException(\"Failed to build source\", e);\n            }\n        }\n        return source;\n    }","id":63243,"modified_method":"/**\n     * The source of the JSON document to index.\n     */\n    byte[] source() {\n        if (sourceUnsafe) {\n            source = Arrays.copyOfRange(source, sourceOffset, sourceLength);\n            sourceUnsafe = false;\n        }\n        return source;\n    }","commit_id":"e35d67afd75e05cd8043be7c890b1f7524e8d8c9","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public ActionRequestValidationException validate() {\n        ActionRequestValidationException validationException = super.validate();\n        if (type == null) {\n            validationException = addValidationError(\"type is missing\", validationException);\n        }\n        if (source == null && sourceBuilder == null) {\n            validationException = addValidationError(\"source is missing\", validationException);\n        }\n        return validationException;\n    }","id":63244,"modified_method":"@Override public ActionRequestValidationException validate() {\n        ActionRequestValidationException validationException = super.validate();\n        if (type == null) {\n            validationException = addValidationError(\"type is missing\", validationException);\n        }\n        if (source == null) {\n            validationException = addValidationError(\"source is missing\", validationException);\n        }\n        return validationException;\n    }","commit_id":"e35d67afd75e05cd8043be7c890b1f7524e8d8c9","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void performOnBackup(final Response response, final AtomicInteger counter, final ShardRouting shard, String nodeId) {\n            final ShardOperationRequest shardRequest = new ShardOperationRequest(shards.shardId().id(), request);\n            if (!nodeId.equals(nodes.localNodeId())) {\n                DiscoveryNode node = nodes.get(nodeId);\n                transportService.sendRequest(node, transportBackupAction(), shardRequest, new VoidTransportResponseHandler() {\n                    @Override public void handleResponse(VoidStreamable vResponse) {\n                        finishIfPossible();\n                    }\n\n                    @Override public void handleException(RemoteTransportException exp) {\n                        if (!ignoreBackupException(exp.unwrapCause())) {\n                            logger.warn(\"Failed to perform \" + transportAction() + \" on backup \" + shards.shardId(), exp);\n                            shardStateAction.shardFailed(shard, \"Failed to perform [\" + transportAction() + \"] on backup, message [\" + detailedMessage(exp) + \"]\");\n                        }\n                        finishIfPossible();\n                    }\n\n                    private void finishIfPossible() {\n                        if (counter.decrementAndGet() == 0) {\n                            if (request.listenerThreaded()) {\n                                threadPool.execute(new Runnable() {\n                                    @Override public void run() {\n                                        listener.onResponse(response);\n                                    }\n                                });\n                            } else {\n                                listener.onResponse(response);\n                            }\n                        }\n                    }\n\n                    @Override public boolean spawn() {\n                        // don't spawn, we will call the listener on a thread pool if needed\n                        return false;\n                    }\n                });\n            } else {\n                if (request.operationThreaded()) {\n                    threadPool.execute(new Runnable() {\n                        @Override public void run() {\n                            try {\n                                shardOperationOnBackup(shardRequest);\n                            } catch (Exception e) {\n                                if (!ignoreBackupException(e)) {\n                                    logger.warn(\"Failed to perform \" + transportAction() + \" on backup \" + shards.shardId(), e);\n                                    shardStateAction.shardFailed(shard, \"Failed to perform [\" + transportAction() + \"] on backup, message [\" + detailedMessage(e) + \"]\");\n                                }\n                            }\n                            if (counter.decrementAndGet() == 0) {\n                                listener.onResponse(response);\n                            }\n                        }\n                    });\n                } else {\n                    try {\n                        shardOperationOnBackup(shardRequest);\n                    } catch (Exception e) {\n                        if (!ignoreBackupException(e)) {\n                            logger.warn(\"Failed to perform \" + transportAction() + \" on backup \" + shards.shardId(), e);\n                            shardStateAction.shardFailed(shard, \"Failed to perform [\" + transportAction() + \"] on backup, message [\" + detailedMessage(e) + \"]\");\n                        }\n                    }\n                    if (counter.decrementAndGet() == 0) {\n                        if (request.listenerThreaded()) {\n                            threadPool.execute(new Runnable() {\n                                @Override public void run() {\n                                    listener.onResponse(response);\n                                }\n                            });\n                        } else {\n                            listener.onResponse(response);\n                        }\n                    }\n                }\n            }\n        }","id":63245,"modified_method":"private void performOnBackup(final Response response, final AtomicInteger counter, final ShardRouting shard, String nodeId) {\n            final ShardOperationRequest shardRequest = new ShardOperationRequest(shards.shardId().id(), request);\n            if (!nodeId.equals(nodes.localNodeId())) {\n                DiscoveryNode node = nodes.get(nodeId);\n                transportService.sendRequest(node, transportBackupAction(), shardRequest, new VoidTransportResponseHandler() {\n                    @Override public void handleResponse(VoidStreamable vResponse) {\n                        finishIfPossible();\n                    }\n\n                    @Override public void handleException(RemoteTransportException exp) {\n                        if (!ignoreBackupException(exp.unwrapCause())) {\n                            logger.warn(\"Failed to perform \" + transportAction() + \" on backup \" + shards.shardId(), exp);\n                            shardStateAction.shardFailed(shard, \"Failed to perform [\" + transportAction() + \"] on backup, message [\" + detailedMessage(exp) + \"]\");\n                        }\n                        finishIfPossible();\n                    }\n\n                    private void finishIfPossible() {\n                        if (counter.decrementAndGet() == 0) {\n                            if (request.listenerThreaded()) {\n                                threadPool.execute(new Runnable() {\n                                    @Override public void run() {\n                                        listener.onResponse(response);\n                                    }\n                                });\n                            } else {\n                                listener.onResponse(response);\n                            }\n                        }\n                    }\n\n                    @Override public boolean spawn() {\n                        // don't spawn, we will call the listener on a thread pool if needed\n                        return false;\n                    }\n                });\n            } else {\n                if (request.operationThreaded()) {\n                    request.beforeLocalFork();\n                    threadPool.execute(new Runnable() {\n                        @Override public void run() {\n                            try {\n                                shardOperationOnBackup(shardRequest);\n                            } catch (Exception e) {\n                                if (!ignoreBackupException(e)) {\n                                    logger.warn(\"Failed to perform \" + transportAction() + \" on backup \" + shards.shardId(), e);\n                                    shardStateAction.shardFailed(shard, \"Failed to perform [\" + transportAction() + \"] on backup, message [\" + detailedMessage(e) + \"]\");\n                                }\n                            }\n                            if (counter.decrementAndGet() == 0) {\n                                listener.onResponse(response);\n                            }\n                        }\n                    });\n                } else {\n                    try {\n                        shardOperationOnBackup(shardRequest);\n                    } catch (Exception e) {\n                        if (!ignoreBackupException(e)) {\n                            logger.warn(\"Failed to perform \" + transportAction() + \" on backup \" + shards.shardId(), e);\n                            shardStateAction.shardFailed(shard, \"Failed to perform [\" + transportAction() + \"] on backup, message [\" + detailedMessage(e) + \"]\");\n                        }\n                    }\n                    if (counter.decrementAndGet() == 0) {\n                        if (request.listenerThreaded()) {\n                            threadPool.execute(new Runnable() {\n                                @Override public void run() {\n                                    listener.onResponse(response);\n                                }\n                            });\n                        } else {\n                            listener.onResponse(response);\n                        }\n                    }\n                }\n            }\n        }","commit_id":"e35d67afd75e05cd8043be7c890b1f7524e8d8c9","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n         * Returns <tt>true<\/tt> if the action starting to be performed on the primary (or is done).\n         */\n        public boolean start(final boolean fromClusterEvent) throws ElasticSearchException {\n            ClusterState clusterState = clusterService.state();\n            // update to the concrete index\n            request.index(clusterState.metaData().concreteIndex(request.index()));\n            nodes = clusterState.nodes();\n            try {\n                shards = shards(clusterState, request);\n            } catch (Exception e) {\n                listener.onFailure(e);\n                return true;\n            }\n\n            boolean foundPrimary = false;\n            for (final ShardRouting shard : shards) {\n                if (shard.primary()) {\n                    if (!shard.active()) {\n                        retryPrimary(fromClusterEvent, shard);\n                        return false;\n                    }\n\n                    if (!primaryOperationStarted.compareAndSet(false, true)) {\n                        return false;\n                    }\n\n                    foundPrimary = true;\n                    if (shard.currentNodeId().equals(nodes.localNodeId())) {\n                        if (request.operationThreaded()) {\n                            threadPool.execute(new Runnable() {\n                                @Override public void run() {\n                                    performOnPrimary(shard.id(), fromClusterEvent, true, shard);\n                                }\n                            });\n                        } else {\n                            performOnPrimary(shard.id(), fromClusterEvent, false, shard);\n                        }\n                    } else {\n                        DiscoveryNode node = nodes.get(shard.currentNodeId());\n                        transportService.sendRequest(node, transportAction(), request, new BaseTransportResponseHandler<Response>() {\n\n                            @Override public Response newInstance() {\n                                return newResponseInstance();\n                            }\n\n                            @Override public void handleResponse(Response response) {\n                                listener.onResponse(response);\n                            }\n\n                            @Override public void handleException(RemoteTransportException exp) {\n                                listener.onFailure(exp);\n                            }\n\n                            @Override public boolean spawn() {\n                                return request.listenerThreaded();\n                            }\n                        });\n                    }\n                    break;\n                }\n            }\n            // we should never get here, but here we go\n            if (!foundPrimary) {\n                final PrimaryNotStartedActionException failure = new PrimaryNotStartedActionException(shards.shardId(), \"Primary not found\");\n                if (request.listenerThreaded()) {\n                    threadPool.execute(new Runnable() {\n                        @Override public void run() {\n                            listener.onFailure(failure);\n                        }\n                    });\n                } else {\n                    listener.onFailure(failure);\n                }\n            }\n            return true;\n        }","id":63246,"modified_method":"/**\n         * Returns <tt>true<\/tt> if the action starting to be performed on the primary (or is done).\n         */\n        public boolean start(final boolean fromClusterEvent) throws ElasticSearchException {\n            ClusterState clusterState = clusterService.state();\n            // update to the concrete index\n            request.index(clusterState.metaData().concreteIndex(request.index()));\n            nodes = clusterState.nodes();\n            try {\n                shards = shards(clusterState, request);\n            } catch (Exception e) {\n                listener.onFailure(e);\n                return true;\n            }\n\n            boolean foundPrimary = false;\n            for (final ShardRouting shard : shards) {\n                if (shard.primary()) {\n                    if (!shard.active()) {\n                        retryPrimary(fromClusterEvent, shard);\n                        return false;\n                    }\n\n                    if (!primaryOperationStarted.compareAndSet(false, true)) {\n                        return false;\n                    }\n\n                    foundPrimary = true;\n                    if (shard.currentNodeId().equals(nodes.localNodeId())) {\n                        if (request.operationThreaded()) {\n                            request.beforeLocalFork();\n                            threadPool.execute(new Runnable() {\n                                @Override public void run() {\n                                    performOnPrimary(shard.id(), fromClusterEvent, true, shard);\n                                }\n                            });\n                        } else {\n                            performOnPrimary(shard.id(), fromClusterEvent, false, shard);\n                        }\n                    } else {\n                        DiscoveryNode node = nodes.get(shard.currentNodeId());\n                        transportService.sendRequest(node, transportAction(), request, new BaseTransportResponseHandler<Response>() {\n\n                            @Override public Response newInstance() {\n                                return newResponseInstance();\n                            }\n\n                            @Override public void handleResponse(Response response) {\n                                listener.onResponse(response);\n                            }\n\n                            @Override public void handleException(RemoteTransportException exp) {\n                                listener.onFailure(exp);\n                            }\n\n                            @Override public boolean spawn() {\n                                return request.listenerThreaded();\n                            }\n                        });\n                    }\n                    break;\n                }\n            }\n            // we should never get here, but here we go\n            if (!foundPrimary) {\n                final PrimaryNotStartedActionException failure = new PrimaryNotStartedActionException(shards.shardId(), \"Primary not found\");\n                if (request.listenerThreaded()) {\n                    threadPool.execute(new Runnable() {\n                        @Override public void run() {\n                            listener.onFailure(failure);\n                        }\n                    });\n                } else {\n                    listener.onFailure(failure);\n                }\n            }\n            return true;\n        }","commit_id":"e35d67afd75e05cd8043be7c890b1f7524e8d8c9","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void waitForPendingWriteForRecord(int record) {\n    waitForZipToFinish(record);\n\n    Callable action;\n    synchronized (myLock) {\n      action = myPendingWriteRequests.get(record);\n    }\n    if (action != null) {\n      try {\n        action.call();\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }","id":63247,"modified_method":"private void waitForPendingWriteForRecord(int record) {\n    waitForZipToFinish(record);\n\n    WriteRequest request;\n    synchronized (myLock) {\n      request = myPendingWriteRequests.get(record);\n    }\n    if (request != null) {\n      try {\n        write(request);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }","commit_id":"ec0689888b61193722314aa2dd5731897bdecbd1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    protected void fill() throws IOException {\n      if (len >= 0) throw new EOFException();\n      len = buf.length;\n      inf.setInput(buf, 0, len);\n    }","id":63248,"modified_method":"@Override\n    protected void fill() throws IOException {\n      if (len >= 0) throw new EOFException();\n      len = usedBufferLength;\n      inf.setInput(buf, 0, len);\n    }","commit_id":"ec0689888b61193722314aa2dd5731897bdecbd1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void writeBytes(final int record, final ByteSequence bytes, final boolean fixedSize) throws IOException {\n\n    if (myDoNotZipCaches) {\n      super.writeBytes(record, bytes, fixedSize);\n      return;\n    }\n\n    synchronized (myLock) {\n      waitForPendingWriteForRecord(record); // ensure previous write was completed\n      myPendingZipRequestsSize += bytes.getLength();\n\n      if (myPendingZipRequestsSize > MAX_PENDING_ZIP_SIZE) { // help async thread\n        scheduleZippedContentToWrite(zip(bytes, record), record, fixedSize);\n      } else {\n        myPendingZipRequests.put(record, myPendingZipRequestsExecutor.submit(new Callable<Object>() {\n          @Override\n          public Object call() throws IOException {\n            scheduleZippedContentToWrite(zip(bytes, record), record, fixedSize);\n            return null;\n          }\n        }));\n      }\n\n      if (myPendingWriteRequestsSize > MAX_PENDING_WRITE_SIZE) {\n        flushPendingWrites();   // we do it under lock to ensure normally only one thread will bulky flush stuff\n      }\n    }\n  }","id":63249,"modified_method":"@Override\n  public void writeBytes(final int record, final ByteSequence bytes, final boolean fixedSize) throws IOException {\n\n    if (myDoNotZipCaches) {\n      super.writeBytes(record, bytes, fixedSize);\n      return;\n    }\n\n    waitForPendingWriteForRecord(record); // ensure previous write was completed\n\n    synchronized (myLock) {\n      myPendingZipRequestsSize += bytes.getLength();\n\n      if (myPendingZipRequestsSize > MAX_PENDING_ZIP_SIZE) { // help async thread\n        scheduleZippedContentToWrite(zip(bytes, record), record, fixedSize);\n      } else {\n        myPendingZipRequests.put(record, myPendingZipRequestsExecutor.submit(new Callable<Object>() {\n          @Override\n          public Object call() throws IOException {\n            scheduleZippedContentToWrite(zip(bytes, record), record, fixedSize);\n            return null;\n          }\n        }));\n      }\n\n      if (myPendingWriteRequestsSize > MAX_PENDING_WRITE_SIZE) {\n        flushPendingWrites();   // we do it under lock to ensure normally only one thread will bulky flush stuff\n      }\n    }\n  }","commit_id":"ec0689888b61193722314aa2dd5731897bdecbd1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void flushPendingWrites() {\n    for(Map.Entry<Integer, Callable> entry: myPendingWriteRequests.entrySet()) {\n      try {\n        Callable value = entry.getValue();\n        if (value != null) value.call();\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }","id":63250,"modified_method":"private void flushPendingWrites() {\n    for(Map.Entry<Integer, WriteRequest> entry: myPendingWriteRequests.entrySet()) {\n      try {\n        WriteRequest value = entry.getValue();\n        if (value != null) write(value);\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }","commit_id":"ec0689888b61193722314aa2dd5731897bdecbd1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private BufferExposingByteArrayOutputStream internalReadStream(int record) throws IOException {\n    waitForPendingWriteForRecord(record);\n\n    byte[] result = super.readBytes(record);\n    InflaterInputStream in = new CustomInflaterInputStream(result);\n    try {\n      final BufferExposingByteArrayOutputStream outputStream = new BufferExposingByteArrayOutputStream();\n      StreamUtil.copyStreamContent(in, outputStream);\n      return outputStream;\n    }\n    finally {\n      in.close();\n    }\n  }","id":63251,"modified_method":"private BufferExposingByteArrayOutputStream internalReadStream(int record) throws IOException {\n    waitForZipToFinish(record);\n    WriteRequest request;\n    synchronized (myLock) {\n      request = myPendingWriteRequests.get(record);\n    }\n\n    byte[] bytes;\n    int length;\n    if (request != null) {\n      bytes = request.content;\n      length = request.length;\n    } else {\n      bytes = super.readBytes(record);\n      length = bytes.length;\n    }\n\n    InflaterInputStream in = new CustomInflaterInputStream(bytes, length);\n    try {\n      final BufferExposingByteArrayOutputStream outputStream = new BufferExposingByteArrayOutputStream();\n      StreamUtil.copyStreamContent(in, outputStream);\n      return outputStream;\n    }\n    finally {\n      in.close();\n    }\n  }","commit_id":"ec0689888b61193722314aa2dd5731897bdecbd1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void scheduleZippedContentToWrite(final BufferExposingByteArrayOutputStream outputStream, final int record, final boolean fixedSize) {\n    synchronized (myLock) {\n      myPendingWriteRequestsSize += outputStream.size();\n      myPendingWriteRequests.put(record, new Callable<Object>() {\n        @Override\n        public Void call() throws Exception {\n          write(outputStream, record, fixedSize);\n          return null;\n        }\n      });\n      if (myPendingWriteRequestsSize > MAX_PENDING_WRITE_SIZE) {  // we do it under lock to ensure normally only one thread will bulky flush stuff\n        flushPendingWrites();\n      }\n    }\n  }","id":63252,"modified_method":"private void scheduleZippedContentToWrite(final BufferExposingByteArrayOutputStream outputStream, final int record, final boolean fixedSize) {\n    synchronized (myLock) {\n      myPendingWriteRequestsSize += outputStream.size();\n      myPendingWriteRequests.put(record, new WriteRequest(outputStream.getInternalBuffer(), outputStream.size(), record, fixedSize));\n\n      if (myPendingWriteRequestsSize > MAX_PENDING_WRITE_SIZE) {  // we do it under lock to ensure normally only one thread will bulky flush stuff\n        flushPendingWrites();\n      }\n    }\n  }","commit_id":"ec0689888b61193722314aa2dd5731897bdecbd1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public CustomInflaterInputStream(byte[] compressedData) {\n      super(new UnsyncByteArrayInputStream(compressedData), new Inflater(), 1);\n      // force to directly use compressed data, this ensures less round trips with native extraction code and copy streams\n      this.buf = compressedData;\n      this.len = -1; // ensure one time fill\n    }","id":63253,"modified_method":"public CustomInflaterInputStream(byte[] compressedData, int _length) {\n      super(new UnsyncByteArrayInputStream(compressedData, 0, _length), new Inflater(), 1);\n      // force to directly use compressed data, this ensures less round trips with native extraction code and copy streams\n      this.buf = compressedData;\n      this.len = -1; // ensure one time fill\n      usedBufferLength = _length;\n    }","commit_id":"ec0689888b61193722314aa2dd5731897bdecbd1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void writeTo(StreamOutput out) throws IOException {\n        super.writeTo(out);\n        if (querySource != null) {\n            out.writeVInt(querySource.length);\n            out.writeBytes(querySource);\n        } else {\n            FastByteArrayOutputStream os = queryBuilder.buildAsUnsafeBytes(contentType);\n            out.writeVInt(os.size());\n            out.writeBytes(os.unsafeByteArray(), 0, os.size());\n        }\n        if (queryParserName == null) {\n            out.writeBoolean(false);\n        } else {\n            out.writeBoolean(true);\n            out.writeUTF(queryParserName);\n        }\n    }","id":63254,"modified_method":"public void writeTo(StreamOutput out) throws IOException {\n        super.writeTo(out);\n\n        out.writeVInt(querySourceLength);\n        out.writeBytes(querySource, querySourceOffset, querySourceLength);\n\n        if (queryParserName == null) {\n            out.writeBoolean(false);\n        } else {\n            out.writeBoolean(true);\n            out.writeUTF(queryParserName);\n        }\n    }","commit_id":"0e163e364939dfd2aa13365f759a59149c8247be","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * The query source to execute.\n     *\n     * @see org.elasticsearch.index.query.xcontent.QueryBuilders\n     */\n    @Required public DeleteByQueryRequest query(QueryBuilder queryBuilder) {\n        this.queryBuilder = queryBuilder;\n        return this;\n    }","id":63255,"modified_method":"/**\n     * The query source to execute.\n     *\n     * @see org.elasticsearch.index.query.xcontent.QueryBuilders\n     */\n    @Required public DeleteByQueryRequest query(QueryBuilder queryBuilder) {\n        FastByteArrayOutputStream bos = queryBuilder.buildAsUnsafeBytes();\n        this.querySource = bos.unsafeByteArray();\n        this.querySourceOffset = 0;\n        this.querySourceLength = bos.size();\n        this.querySourceUnsafe = true;\n        return this;\n    }","commit_id":"0e163e364939dfd2aa13365f759a59149c8247be","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public ActionRequestValidationException validate() {\n        ActionRequestValidationException validationException = super.validate();\n        if (querySource == null && queryBuilder == null) {\n            validationException = addValidationError(\"query is missing\", validationException);\n        }\n        return validationException;\n    }","id":63256,"modified_method":"@Override public ActionRequestValidationException validate() {\n        ActionRequestValidationException validationException = super.validate();\n        if (querySource == null) {\n            validationException = addValidationError(\"query is missing\", validationException);\n        }\n        return validationException;\n    }","commit_id":"0e163e364939dfd2aa13365f759a59149c8247be","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * The query source to execute.\n     */\n    byte[] querySource() {\n        if (querySource == null && queryBuilder != null) {\n            querySource = queryBuilder.buildAsBytes();\n        }\n        return querySource;\n    }","id":63257,"modified_method":"/**\n     * The query source to execute.\n     */\n    byte[] querySource() {\n        if (querySourceUnsafe) {\n            querySource = Arrays.copyOfRange(querySource, querySourceOffset, querySourceLength);\n            querySourceOffset = 0;\n            querySourceUnsafe = false;\n        }\n        return querySource;\n    }","commit_id":"0e163e364939dfd2aa13365f759a59149c8247be","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void readFrom(StreamInput in) throws IOException {\n        super.readFrom(in);\n        querySource = new byte[in.readVInt()];\n        in.readFully(querySource);\n        if (in.readBoolean()) {\n            queryParserName = in.readUTF();\n        }\n    }","id":63258,"modified_method":"public void readFrom(StreamInput in) throws IOException {\n        super.readFrom(in);\n\n        querySourceUnsafe = false;\n        querySourceOffset = 0;\n        querySourceLength = in.readVInt();\n        querySource = new byte[querySourceLength];\n        in.readFully(querySource);\n\n        if (in.readBoolean()) {\n            queryParserName = in.readUTF();\n        }\n    }","commit_id":"0e163e364939dfd2aa13365f759a59149c8247be","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * The query source to execute. It is preferable to use either {@link #query(byte[])}\n     * or {@link #query(org.elasticsearch.index.query.QueryBuilder)}.\n     */\n    @Required public DeleteByQueryRequest query(String querySource) {\n        return query(Unicode.fromStringAsBytes(querySource));\n    }","id":63259,"modified_method":"/**\n     * The query source to execute. It is preferable to use either {@link #query(byte[])}\n     * or {@link #query(org.elasticsearch.index.query.QueryBuilder)}.\n     */\n    @Required public DeleteByQueryRequest query(String querySource) {\n        UnicodeUtil.UTF8Result result = Unicode.fromStringAsUtf8(querySource);\n        this.querySource = result.result;\n        this.querySourceOffset = 0;\n        this.querySourceLength = result.length;\n        this.querySourceUnsafe = true;\n        return this;\n    }","commit_id":"0e163e364939dfd2aa13365f759a59149c8247be","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * The query source to execute in the form of a map.\n     */\n    @Required public DeleteByQueryRequest query(Map querySource) {\n        try {\n            BinaryXContentBuilder builder = XContentFactory.contentBinaryBuilder(contentType);\n            builder.map(querySource);\n            this.querySource = builder.copiedBytes();\n        } catch (IOException e) {\n            throw new ElasticSearchGenerationException(\"Failed to generate [\" + querySource + \"]\", e);\n        }\n        return this;\n    }","id":63260,"modified_method":"/**\n     * The query source to execute in the form of a map.\n     */\n    @Required public DeleteByQueryRequest query(Map querySource) {\n        try {\n            BinaryXContentBuilder builder = XContentFactory.contentBinaryBuilder(contentType);\n            builder.map(querySource);\n            return query(builder);\n        } catch (IOException e) {\n            throw new ElasticSearchGenerationException(\"Failed to generate [\" + querySource + \"]\", e);\n        }\n    }","commit_id":"0e163e364939dfd2aa13365f759a59149c8247be","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * The source of the JSON document to index.\n     */\n    byte[] source() {\n        if (sourceUnsafe) {\n            source = Arrays.copyOfRange(source, sourceOffset, sourceLength);\n            sourceUnsafe = false;\n        }\n        return source;\n    }","id":63261,"modified_method":"/**\n     * The source of the JSON document to index.\n     */\n    byte[] source() {\n        if (sourceUnsafe) {\n            source = Arrays.copyOfRange(source, sourceOffset, sourceLength);\n            sourceOffset = 0;\n            sourceUnsafe = false;\n        }\n        return source;\n    }","commit_id":"0e163e364939dfd2aa13365f759a59149c8247be","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override protected void doExecute(final Request request, final ActionListener<Response> listener) {\n        GroupShardsIterator groups;\n        try {\n            groups = shards(request);\n        } catch (Exception e) {\n            listener.onFailure(e);\n            return;\n        }\n        final AtomicInteger indexCounter = new AtomicInteger();\n        final AtomicInteger completionCounter = new AtomicInteger(groups.size());\n        final AtomicReferenceArray<Object> shardsResponses = new AtomicReferenceArray<Object>(groups.size());\n\n        for (final ShardsIterator shards : groups) {\n            ShardRequest shardRequest = newShardRequestInstance(request, shards.shardId().id());\n            // TODO for now, we fork operations on shards of the index\n            shardRequest.operationThreaded(true);\n            // no need for threaded listener, we will fork when its done based on the index request\n            shardRequest.listenerThreaded(false);\n            shardAction.execute(shardRequest, new ActionListener<ShardResponse>() {\n                @Override public void onResponse(ShardResponse result) {\n                    shardsResponses.set(indexCounter.getAndIncrement(), result);\n                    if (completionCounter.decrementAndGet() == 0) {\n                        if (request.listenerThreaded()) {\n                            threadPool.execute(new Runnable() {\n                                @Override public void run() {\n                                    listener.onResponse(newResponseInstance(request, shardsResponses));\n                                }\n                            });\n                        } else {\n                            listener.onResponse(newResponseInstance(request, shardsResponses));\n                        }\n                    }\n                }\n\n                @Override public void onFailure(Throwable e) {\n                    int index = indexCounter.getAndIncrement();\n                    if (accumulateExceptions()) {\n                        shardsResponses.set(index, e);\n                    }\n                    if (completionCounter.decrementAndGet() == 0) {\n                        if (request.listenerThreaded()) {\n                            threadPool.execute(new Runnable() {\n                                @Override public void run() {\n                                    listener.onResponse(newResponseInstance(request, shardsResponses));\n                                }\n                            });\n                        } else {\n                            listener.onResponse(newResponseInstance(request, shardsResponses));\n                        }\n                    }\n                }\n            });\n        }\n    }","id":63262,"modified_method":"@Override protected void doExecute(final Request request, final ActionListener<Response> listener) {\n        GroupShardsIterator groups;\n        try {\n            groups = shards(request);\n        } catch (Exception e) {\n            listener.onFailure(e);\n            return;\n        }\n        final AtomicInteger indexCounter = new AtomicInteger();\n        final AtomicInteger completionCounter = new AtomicInteger(groups.size());\n        final AtomicReferenceArray<Object> shardsResponses = new AtomicReferenceArray<Object>(groups.size());\n\n        for (final ShardsIterator shards : groups) {\n            ShardRequest shardRequest = newShardRequestInstance(request, shards.shardId().id());\n\n            // TODO for now, we fork operations on shards of the index\n            shardRequest.beforeLocalFork(); // optimize for local fork\n            shardRequest.operationThreaded(true);\n\n            // no need for threaded listener, we will fork when its done based on the index request\n            shardRequest.listenerThreaded(false);\n            shardAction.execute(shardRequest, new ActionListener<ShardResponse>() {\n                @Override public void onResponse(ShardResponse result) {\n                    shardsResponses.set(indexCounter.getAndIncrement(), result);\n                    if (completionCounter.decrementAndGet() == 0) {\n                        if (request.listenerThreaded()) {\n                            threadPool.execute(new Runnable() {\n                                @Override public void run() {\n                                    listener.onResponse(newResponseInstance(request, shardsResponses));\n                                }\n                            });\n                        } else {\n                            listener.onResponse(newResponseInstance(request, shardsResponses));\n                        }\n                    }\n                }\n\n                @Override public void onFailure(Throwable e) {\n                    int index = indexCounter.getAndIncrement();\n                    if (accumulateExceptions()) {\n                        shardsResponses.set(index, e);\n                    }\n                    if (completionCounter.decrementAndGet() == 0) {\n                        if (request.listenerThreaded()) {\n                            threadPool.execute(new Runnable() {\n                                @Override public void run() {\n                                    listener.onResponse(newResponseInstance(request, shardsResponses));\n                                }\n                            });\n                        } else {\n                            listener.onResponse(newResponseInstance(request, shardsResponses));\n                        }\n                    }\n                }\n            });\n        }\n    }","commit_id":"0e163e364939dfd2aa13365f759a59149c8247be","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n\tprotected void execute() throws Exception {\n\t\trequestType = -1;\n\t\tdata.commandInfo = \"Listening\";\n\t\tdata.commandDetail = \"-\";\n\n\t\tclientTxId = 0;\n\n\t\ttry {\n\t\t\trequestType = channel.readByte();\n\t\t\tclientTxId = channel.readInt();\n\n\t\t\t++data.totalRequests;\n\n\t\t\tdata.lastCommandReceived = System.currentTimeMillis();\n\n\t\t\tOServerHandlerHelper.invokeHandlerCallbackOnBeforeClientRequest(connection, (byte) requestType);\n\n\t\t\tparseCommand();\n\n\t\t\tOServerHandlerHelper.invokeHandlerCallbackOnAfterClientRequest(connection, (byte) requestType);\n\n\t\t} catch (EOFException eof) {\n\t\t\tOServerHandlerHelper.invokeHandlerCallbackOnClientError(connection, eof);\n\t\t\tsendShutdown();\n\t\t} catch (SocketException e) {\n\t\t\tOServerHandlerHelper.invokeHandlerCallbackOnClientError(connection, e);\n\t\t\tsendShutdown();\n\t\t} catch (OException e) {\n\t\t\tOServerHandlerHelper.invokeHandlerCallbackOnClientError(connection, e);\n\t\t\tchannel.clearInput();\n\t\t\tsendError(clientTxId, e);\n\t\t} catch (Throwable t) {\n\t\t\tOServerHandlerHelper.invokeHandlerCallbackOnClientError(connection, t);\n\t\t\tOLogManager.instance().error(this, \"Error on executing request\", t);\n\t\t\tchannel.clearInput();\n\t\t\tsendError(clientTxId, t);\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tchannel.flush();\n\t\t\t} catch (Throwable t) {\n\t\t\t\tOLogManager.instance().debug(this, \"Error on send data over the network\", t);\n\t\t\t}\n\n\t\t\tOSerializationThreadLocal.INSTANCE.get().clear();\n\n\t\t\tdata.lastCommandExecutionTime = System.currentTimeMillis() - data.lastCommandReceived;\n\t\t\tdata.totalCommandExecutionTime += data.lastCommandExecutionTime;\n\n\t\t\tdata.lastCommandInfo = data.commandInfo;\n\t\t\tdata.lastCommandDetail = data.commandDetail;\n\t\t}\n\t}","id":63263,"modified_method":"@Override\n\tprotected void execute() throws Exception {\n\t\trequestType = -1;\n\t\tdata.commandInfo = \"Listening\";\n\t\tdata.commandDetail = \"-\";\n\n\t\tclientTxId = 0;\n\n\t\ttry {\n\t\t\trequestType = channel.readByte();\n\t\t\tclientTxId = channel.readInt();\n\n\t\t\t++data.totalRequests;\n\n\t\t\tdata.lastCommandReceived = System.currentTimeMillis();\n\n\t\t\tOServerHandlerHelper.invokeHandlerCallbackOnBeforeClientRequest(connection, (byte) requestType);\n\n\t\t\tparseCommand();\n\n\t\t\tOServerHandlerHelper.invokeHandlerCallbackOnAfterClientRequest(connection, (byte) requestType);\n\n\t\t} catch (EOFException eof) {\n\t\t\tOServerHandlerHelper.invokeHandlerCallbackOnClientError(connection, eof);\n\t\t\tsendShutdown();\n\t\t} catch (SocketException e) {\n\t\t\tOServerHandlerHelper.invokeHandlerCallbackOnClientError(connection, e);\n\t\t\tsendShutdown();\n\t\t} catch (OException e) {\n\t\t\tOServerHandlerHelper.invokeHandlerCallbackOnClientError(connection, e);\n\t\t\tchannel.clearInput();\n\t\t\tsendError(clientTxId, e);\n\t\t} catch (RuntimeException e) {\n\t\t\tOServerHandlerHelper.invokeHandlerCallbackOnClientError(connection, e);\n\t\t\tchannel.clearInput();\n\t\t\tsendError(clientTxId, e);\n\t\t} catch (Throwable t) {\n\t\t\tOServerHandlerHelper.invokeHandlerCallbackOnClientError(connection, t);\n\t\t\tOLogManager.instance().error(this, \"Error on executing request\", t);\n\t\t\tchannel.clearInput();\n\t\t\tsendError(clientTxId, t);\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tchannel.flush();\n\t\t\t} catch (Throwable t) {\n\t\t\t\tOLogManager.instance().debug(this, \"Error on send data over the network\", t);\n\t\t\t}\n\n\t\t\tOSerializationThreadLocal.INSTANCE.get().clear();\n\n\t\t\tdata.lastCommandExecutionTime = System.currentTimeMillis() - data.lastCommandReceived;\n\t\t\tdata.totalCommandExecutionTime += data.lastCommandExecutionTime;\n\n\t\t\tdata.lastCommandInfo = data.commandInfo;\n\t\t\tdata.lastCommandDetail = data.commandDetail;\n\t\t}\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public <REC extends ORecordInternal<?>> REC dictionaryPut(final ODatabaseRecord<REC> iDatabase, final String iKey,\r\n\t\t\tfinal ORecordInternal<?> iRecord) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\tfinal ORID rid = iRecord.getIdentity();\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DICTIONARY_PUT);\r\n\t\t\t\t\tnetwork.writeString(iKey);\r\n\t\t\t\t\tnetwork.writeByte(iRecord.getRecordType());\r\n\t\t\t\t\tnetwork.writeShort((short) rid.getClusterId());\r\n\t\t\t\t\tnetwork.writeLong(rid.getClusterPosition());\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn (REC) readRecordFromNetwork(iDatabase);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on insert record with key: \" + iKey, e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t\treturn null;\r\n\t}","id":63264,"modified_method":"public <REC extends ORecordInternal<?>> REC dictionaryPut(final ODatabaseRecord<REC> iDatabase, final String iKey,\r\n\t\t\tfinal ORecordInternal<?> iRecord) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\tfinal ORID rid = iRecord.getIdentity();\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DICTIONARY_PUT);\r\n\t\t\t\t\tnetwork.writeString(iKey);\r\n\t\t\t\t\tnetwork.writeByte(iRecord.getRecordType());\r\n\t\t\t\t\tnetwork.writeShort((short) rid.getClusterId());\r\n\t\t\t\t\tnetwork.writeLong(rid.getClusterPosition());\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn (REC) readRecordFromNetwork(iDatabase);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on insert record with key: \" + iKey, e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void close() {\r\n\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\ttry {\r\n\t\t\t// beginRequest(OChannelBinaryProtocol.REQUEST_DB_CLOSE);\r\n\t\t\t// endRequest();\r\n\r\n\t\t\tnetwork.flush();\r\n\t\t\tnetwork.close();\r\n\r\n\t\t\tserviceThread.sendShutdown();\r\n\r\n\t\t\tcache.removeUser();\r\n\t\t\tcache.clear();\r\n\r\n\t\t\topen = false;\r\n\r\n\t\t\tOrient.instance().unregisterStorage(this);\r\n\r\n\t\t} catch (Exception e) {\r\n\r\n\t\t} finally {\r\n\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t}\r\n\t}","id":63265,"modified_method":"public void close() {\r\n\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\ttry {\r\n\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DB_CLOSE);\r\n\t\t\tendRequest();\r\n\r\n\t\t\tnetwork.flush();\r\n\r\n\t\t\tserviceThread.sendShutdown();\r\n\t\t\tserviceThread.interrupt();\r\n\r\n\t\t\tnetwork.close();\r\n\r\n//\t\t\tserviceThread.join();\r\n\r\n\t\t\tcache.removeUser();\r\n\t\t\tcache.clear();\r\n\r\n\t\t\topen = false;\r\n\r\n\t\t\tOrient.instance().unregisterStorage(this);\r\n\r\n\t\t} catch (Exception e) {\r\n\r\n\t\t} finally {\r\n\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t}\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public Set<String> dictionaryKeys() {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DICTIONARY_KEYS);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readStringSet();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on getting keys of database's dictionary\", e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t\treturn null;\r\n\t}","id":63266,"modified_method":"public Set<String> dictionaryKeys() {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DICTIONARY_KEYS);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readStringSet();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on getting keys of database's dictionary\", e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public boolean deleteRecord(final int iRequesterId, final int iClusterId, final long iPosition, final int iVersion) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_RECORD_DELETE);\r\n\t\t\t\t\tnetwork.writeShort((short) iClusterId);\r\n\t\t\t\t\tnetwork.writeLong(iPosition);\r\n\t\t\t\t\tnetwork.writeInt(iVersion);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readByte() == 1;\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on delete record: \" + iClusterId + \":\" + iPosition, e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t\treturn false;\r\n\t}","id":63267,"modified_method":"public boolean deleteRecord(final int iRequesterId, final int iClusterId, final long iPosition, final int iVersion) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_RECORD_DELETE);\r\n\t\t\t\t\tnetwork.writeShort((short) iClusterId);\r\n\t\t\t\t\tnetwork.writeLong(iPosition);\r\n\t\t\t\t\tnetwork.writeInt(iVersion);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readByte() == 1;\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on delete record: \" + iClusterId + \":\" + iPosition, e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public int dictionarySize(final ODatabaseRecord<?> iDatabase) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DICTIONARY_SIZE);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readInt();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on getting size of database's dictionary\", e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t\treturn -1;\r\n\t}","id":63268,"modified_method":"public int dictionarySize(final ODatabaseRecord<?> iDatabase) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DICTIONARY_SIZE);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readInt();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on getting size of database's dictionary\", e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public long count(final String iClassName) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_COUNT);\r\n\t\t\t\t\tnetwork.writeString(iClassName);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readLong();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on executing count on class: \" + iClassName, e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t\treturn -1;\r\n\t}","id":63269,"modified_method":"public long count(final String iClassName) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_COUNT);\r\n\t\t\t\t\tnetwork.writeString(iClassName);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readLong();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on executing count on class: \" + iClassName, e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public int addDataSegment(final String iSegmentName, final String iSegmentFileName) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DATASEGMENT_ADD);\r\n\t\t\t\t\tnetwork.writeString(iSegmentName).writeString(iSegmentFileName);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readShort();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on add new data segment\", e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t\treturn 0;\r\n\t}","id":63270,"modified_method":"public int addDataSegment(final String iSegmentName, final String iSegmentFileName) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DATASEGMENT_ADD);\r\n\t\t\t\t\tnetwork.writeString(iSegmentName).writeString(iSegmentFileName);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readShort();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on add new data segment\", e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public boolean exists() {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DB_EXIST);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readByte() == 1;\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on checking if the database exists\", e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t\treturn false;\r\n\t}","id":63271,"modified_method":"public boolean exists() {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DB_EXIST);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readByte() == 1;\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on checking if the database exists\", e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public long count(final int[] iClusterIds) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DATACLUSTER_COUNT);\r\n\t\t\t\t\tnetwork.writeShort((short) iClusterIds.length);\r\n\t\t\t\t\tfor (int i = 0; i < iClusterIds.length; ++i)\r\n\t\t\t\t\t\tnetwork.writeShort((short) iClusterIds[i]);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readLong();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on read record count in clusters: \" + iClusterIds, e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t\treturn -1;\r\n\t}","id":63272,"modified_method":"public long count(final int[] iClusterIds) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DATACLUSTER_COUNT);\r\n\t\t\t\t\tnetwork.writeShort((short) iClusterIds.length);\r\n\t\t\t\t\tfor (int i = 0; i < iClusterIds.length; ++i)\r\n\t\t\t\t\t\tnetwork.writeShort((short) iClusterIds[i]);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readLong();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on read record count in clusters: \" + iClusterIds, e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"/**\r\n\t * Handles exceptions. In case of IO errors retries to reconnect until the configured retry times has reached.\r\n\t * \r\n\t * @param iMessage\r\n\t * @param iException\r\n\t * @return\r\n\t */\r\n\tprotected boolean handleException(final String iMessage, final Exception iException) {\r\n\t\tif (iException instanceof OException)\r\n\t\t\t// RE-THROW IT\r\n\t\t\tthrow (OException) iException;\r\n\r\n\t\tif (!(iException instanceof IOException))\r\n\t\t\tthrow new OStorageException(iMessage, iException);\r\n\r\n\t\tif (retry < connectionRetry) {\r\n\t\t\t// WAIT THE DELAY BEFORE TO RETRY\r\n\t\t\ttry {\r\n\t\t\t\tThread.sleep(connectionRetryDelay);\r\n\t\t\t} catch (InterruptedException e) {\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (OLogManager.instance().isDebugEnabled())\r\n\t\t\t\t\tOLogManager.instance().debug(this, \"Retrying to connect to remote server #\" + retry + \"/\" + connectionRetry + \"...\");\r\n\r\n\t\t\t\topenRemoteDatabase();\r\n\r\n\t\t\t\tretry = 0;\r\n\r\n\t\t\t\tOLogManager.instance().info(this,\r\n\t\t\t\t\t\t\"Connection re-acquired in transparent way: no errors will be thrown at application level\");\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t} catch (Throwable t) {\r\n\t\t\t\t++retry;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tretry = 0;\r\n\r\n\t\t\t// RECONNECTION FAILED: THROW+LOG THE ORIGINAL EXCEPTION\r\n\t\t\tthrow new OStorageException(iMessage, iException);\r\n\t\t}\r\n\t\treturn false;\r\n\t}","id":63273,"modified_method":"/**\r\n\t * Handles exceptions. In case of IO errors retries to reconnect until the configured retry times has reached.\r\n\t * \r\n\t * @param iMessage\r\n\t * @param iException\r\n\t */\r\n\tprotected void handleException(final String iMessage, final Exception iException) {\r\n\t\tif (iException instanceof OException)\r\n\t\t\t// RE-THROW IT\r\n\t\t\tthrow (OException) iException;\r\n\r\n\t\tif (!(iException instanceof IOException))\r\n\t\t\tthrow new OStorageException(iMessage, iException);\r\n\r\n\t\twhile (retry < connectionRetry) {\r\n\t\t\t// WAIT THE DELAY BEFORE TO RETRY\r\n\t\t\ttry {\r\n\t\t\t\tThread.sleep(connectionRetryDelay);\r\n\t\t\t} catch (InterruptedException e) {\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (OLogManager.instance().isDebugEnabled())\r\n\t\t\t\t\tOLogManager.instance().debug(this, \"Retrying to connect to remote server #\" + retry + \"/\" + connectionRetry + \"...\");\r\n\r\n\t\t\t\topenRemoteDatabase();\r\n\r\n\t\t\t\tretry = 0;\r\n\r\n\t\t\t\tOLogManager.instance().info(this,\r\n\t\t\t\t\t\t\"Connection re-acquired in transparent way: no errors will be thrown at application level\");\r\n\r\n\t\t\t\treturn;\r\n\t\t\t} catch (Throwable t) {\r\n\t\t\t\t++retry;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tretry = 0;\r\n\r\n\t\t// RECONNECTION FAILED: THROW+LOG THE ORIGINAL EXCEPTION\r\n\t\tthrow new OStorageException(iMessage, iException);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public int updateRecord(final int iRequesterId, final int iClusterId, final long iPosition, final byte[] iContent,\r\n\t\t\tfinal int iVersion, final byte iRecordType) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_RECORD_UPDATE);\r\n\t\t\t\t\tnetwork.writeShort((short) iClusterId);\r\n\t\t\t\t\tnetwork.writeLong(iPosition);\r\n\t\t\t\t\tnetwork.writeBytes(iContent);\r\n\t\t\t\t\tnetwork.writeInt(iVersion);\r\n\t\t\t\t\tnetwork.writeByte(iRecordType);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readInt();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on update record: \" + iClusterId + \":\" + iPosition, e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\r\n\t\treturn -1;\r\n\t}","id":63274,"modified_method":"public int updateRecord(final int iRequesterId, final int iClusterId, final long iPosition, final byte[] iContent,\r\n\t\t\tfinal int iVersion, final byte iRecordType) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_RECORD_UPDATE);\r\n\t\t\t\t\tnetwork.writeShort((short) iClusterId);\r\n\t\t\t\t\tnetwork.writeLong(iPosition);\r\n\t\t\t\t\tnetwork.writeBytes(iContent);\r\n\t\t\t\t\tnetwork.writeInt(iVersion);\r\n\t\t\t\t\tnetwork.writeByte(iRecordType);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readInt();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on update record: \" + iClusterId + \":\" + iPosition, e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void commit(final int iRequesterId, final OTransaction<?> iTx) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_TX_COMMIT);\r\n\t\t\t\t\tnetwork.writeInt(iTx.getId());\r\n\t\t\t\t\tnetwork.writeInt(iTx.size());\r\n\r\n\t\t\t\t\tfor (OTransactionEntry<? extends ORecord<?>> txEntry : iTx.getEntries()) {\r\n\t\t\t\t\t\tif (txEntry.status == OTransactionEntry.LOADED)\r\n\t\t\t\t\t\t\t// JUMP LOADED OBJECTS\r\n\t\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\tnetwork.writeByte(txEntry.status);\r\n\t\t\t\t\t\tnetwork.writeShort((short) txEntry.getRecord().getIdentity().getClusterId());\r\n\t\t\t\t\t\tnetwork.writeByte(txEntry.getRecord().getRecordType());\r\n\r\n\t\t\t\t\t\tswitch (txEntry.status) {\r\n\t\t\t\t\t\tcase OTransactionEntry.CREATED:\r\n\t\t\t\t\t\t\tnetwork.writeString(txEntry.clusterName);\r\n\t\t\t\t\t\t\tnetwork.writeBytes(txEntry.getRecord().toStream());\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase OTransactionEntry.UPDATED:\r\n\t\t\t\t\t\t\tnetwork.writeLong(txEntry.getRecord().getIdentity().getClusterPosition());\r\n\t\t\t\t\t\t\tnetwork.writeInt(txEntry.getRecord().getVersion());\r\n\t\t\t\t\t\t\tnetwork.writeBytes(txEntry.getRecord().toStream());\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase OTransactionEntry.DELETED:\r\n\t\t\t\t\t\t\tnetwork.writeLong(txEntry.getRecord().getIdentity().getClusterPosition());\r\n\t\t\t\t\t\t\tnetwork.writeInt(txEntry.getRecord().getVersion());\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgetResponse();\r\n\t\t\t\tbreak;\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on commit\", e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","id":63275,"modified_method":"public void commit(final int iRequesterId, final OTransaction<?> iTx) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_TX_COMMIT);\r\n\t\t\t\t\tnetwork.writeInt(iTx.getId());\r\n\t\t\t\t\tnetwork.writeInt(iTx.size());\r\n\r\n\t\t\t\t\tfor (OTransactionEntry<? extends ORecord<?>> txEntry : iTx.getEntries()) {\r\n\t\t\t\t\t\tif (txEntry.status == OTransactionEntry.LOADED)\r\n\t\t\t\t\t\t\t// JUMP LOADED OBJECTS\r\n\t\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\tnetwork.writeByte(txEntry.status);\r\n\t\t\t\t\t\tnetwork.writeShort((short) txEntry.getRecord().getIdentity().getClusterId());\r\n\t\t\t\t\t\tnetwork.writeByte(txEntry.getRecord().getRecordType());\r\n\r\n\t\t\t\t\t\tswitch (txEntry.status) {\r\n\t\t\t\t\t\tcase OTransactionEntry.CREATED:\r\n\t\t\t\t\t\t\tnetwork.writeString(txEntry.clusterName);\r\n\t\t\t\t\t\t\tnetwork.writeBytes(txEntry.getRecord().toStream());\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase OTransactionEntry.UPDATED:\r\n\t\t\t\t\t\t\tnetwork.writeLong(txEntry.getRecord().getIdentity().getClusterPosition());\r\n\t\t\t\t\t\t\tnetwork.writeInt(txEntry.getRecord().getVersion());\r\n\t\t\t\t\t\t\tnetwork.writeBytes(txEntry.getRecord().toStream());\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase OTransactionEntry.DELETED:\r\n\t\t\t\t\t\t\tnetwork.writeLong(txEntry.getRecord().getIdentity().getClusterPosition());\r\n\t\t\t\t\t\t\tnetwork.writeInt(txEntry.getRecord().getVersion());\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgetResponse();\r\n\t\t\t\tbreak;\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on commit\", e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public ORawBuffer readRecord(final ODatabaseRecord<?> iDatabase, final int iRequesterId, final int iClusterId,\r\n\t\t\tfinal long iPosition, final String iFetchPlan) {\r\n\t\tcheckConnection();\r\n\r\n\t\tif (OStorageRemoteThreadLocal.INSTANCE.get())\r\n\t\t\t// PENDING NETWORK OPERATION, CAN'T EXECUTE IT NOW\r\n\t\t\treturn null;\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_RECORD_LOAD);\r\n\t\t\t\t\tnetwork.writeShort((short) iClusterId);\r\n\t\t\t\t\tnetwork.writeLong(iPosition);\r\n\t\t\t\t\tnetwork.writeString(iFetchPlan != null ? iFetchPlan : \"\");\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\r\n\t\t\t\t\tif (network.readByte() == 0)\r\n\t\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t\tfinal ORawBuffer buffer = new ORawBuffer(network.readBytes(), network.readInt(), network.readByte());\r\n\r\n\t\t\t\t\twhile (network.readByte() == 2) {\r\n\t\t\t\t\t\tORecordInternal<?> record = readRecordFromNetwork(iDatabase);\r\n\t\t\t\t\t\t// PUT IN THE CLIENT LOCAL CACHE\r\n\t\t\t\t\t\tcache.pushRecord(record.getIdentity().toString(),\r\n\t\t\t\t\t\t\t\tnew ORawBuffer(record.toStream(), record.getVersion(), record.getRecordType()));\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn buffer;\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on read record: \" + iClusterId + \":\" + iPosition, e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t\treturn null;\r\n\t}","id":63276,"modified_method":"public ORawBuffer readRecord(final ODatabaseRecord<?> iDatabase, final int iRequesterId, final int iClusterId,\r\n\t\t\tfinal long iPosition, final String iFetchPlan) {\r\n\t\tcheckConnection();\r\n\r\n\t\tif (OStorageRemoteThreadLocal.INSTANCE.get())\r\n\t\t\t// PENDING NETWORK OPERATION, CAN'T EXECUTE IT NOW\r\n\t\t\treturn null;\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_RECORD_LOAD);\r\n\t\t\t\t\tnetwork.writeShort((short) iClusterId);\r\n\t\t\t\t\tnetwork.writeLong(iPosition);\r\n\t\t\t\t\tnetwork.writeString(iFetchPlan != null ? iFetchPlan : \"\");\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\r\n\t\t\t\t\tif (network.readByte() == 0)\r\n\t\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t\tfinal ORawBuffer buffer = new ORawBuffer(network.readBytes(), network.readInt(), network.readByte());\r\n\r\n\t\t\t\t\twhile (network.readByte() == 2) {\r\n\t\t\t\t\t\tORecordInternal<?> record = readRecordFromNetwork(iDatabase);\r\n\t\t\t\t\t\t// PUT IN THE CLIENT LOCAL CACHE\r\n\t\t\t\t\t\tcache.pushRecord(record.getIdentity().toString(),\r\n\t\t\t\t\t\t\t\tnew ORawBuffer(record.toStream(), record.getVersion(), record.getRecordType()));\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn buffer;\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on read record: \" + iClusterId + \":\" + iPosition, e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public <REC extends ORecordInternal<?>> REC dictionaryRemove(ODatabaseRecord<REC> iDatabase, Object iKey) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DICTIONARY_REMOVE);\r\n\t\t\t\t\tnetwork.writeString(iKey.toString());\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn (REC) readRecordFromNetwork(iDatabase);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on lookup record with key: \" + iKey, e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t\treturn null;\r\n\t}","id":63277,"modified_method":"public <REC extends ORecordInternal<?>> REC dictionaryRemove(ODatabaseRecord<REC> iDatabase, Object iKey) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DICTIONARY_REMOVE);\r\n\t\t\t\t\tnetwork.writeString(iKey.toString());\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn (REC) readRecordFromNetwork(iDatabase);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on lookup record with key: \" + iKey, e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public boolean removeCluster(final int iClusterId) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DATACLUSTER_REMOVE);\r\n\t\t\t\t\tnetwork.writeShort((short) iClusterId);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\r\n\t\t\t\t\tif (network.readByte() == 1) {\r\n\t\t\t\t\t\t// REMOVE THE CLUSTER LOCALLY\r\n\t\t\t\t\t\tfor (Entry<String, Integer> entry : clustersIds.entrySet())\r\n\t\t\t\t\t\t\tif (entry.getValue() != null && entry.getValue().intValue() == iClusterId) {\r\n\t\t\t\t\t\t\t\tclustersIds.remove(entry.getKey());\r\n\t\t\t\t\t\t\t\tclustersTypes.remove(entry.getKey());\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on removing of cluster\", e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t\treturn false;\r\n\t}","id":63278,"modified_method":"public boolean removeCluster(final int iClusterId) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DATACLUSTER_REMOVE);\r\n\t\t\t\t\tnetwork.writeShort((short) iClusterId);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\r\n\t\t\t\t\tif (network.readByte() == 1) {\r\n\t\t\t\t\t\t// REMOVE THE CLUSTER LOCALLY\r\n\t\t\t\t\t\tfor (Entry<String, Integer> entry : clustersIds.entrySet())\r\n\t\t\t\t\t\t\tif (entry.getValue() != null && entry.getValue().intValue() == iClusterId) {\r\n\t\t\t\t\t\t\t\tclustersIds.remove(entry.getKey());\r\n\t\t\t\t\t\t\t\tclustersTypes.remove(entry.getKey());\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on removing of cluster\", e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void updateClusterConfiguration(final byte[] iContent) {\r\n\t\tsynchronized (clusterConfiguration) {\r\n\t\t\tclusterConfiguration.reset();\r\n\t\t\tclusterConfiguration.fromStream(iContent);\r\n\r\n\t\t\tif (OLogManager.instance().isInfoEnabled())\r\n\t\t\t\tOLogManager.instance().info(this, \"Received new cluster configuration: %s\", clusterConfiguration.toJSON(\"\"));\r\n\t\t}\r\n\t}","id":63279,"modified_method":"public void updateClusterConfiguration(final byte[] iContent) {\r\n\t\tif (iContent == null)\r\n\t\t\treturn;\r\n\r\n\t\tODocument clusterConfiguration;\r\n\r\n\t\tsynchronized (OClientClusterManager.INSTANCE) {\r\n\r\n\t\t\t// GET DATABASE'S CLUSTER CONFIGURATION\r\n\t\t\tclusterConfiguration = OClientClusterManager.INSTANCE.get(name);\r\n\t\t\tif (clusterConfiguration == null) {\r\n\t\t\t\tclusterConfiguration = new ODocument();\r\n\t\t\t\tOClientClusterManager.INSTANCE.register(name, clusterConfiguration);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsynchronized (clusterConfiguration) {\r\n\r\n\t\t\tclusterConfiguration.reset();\r\n\r\n\t\t\t// UPDATE IT\r\n\t\t\tclusterConfiguration.fromStream(iContent);\r\n\r\n\t\t\tif (OLogManager.instance().isInfoEnabled())\r\n\t\t\t\tOLogManager.instance().info(this, \"Received new cluster configuration: %s\", clusterConfiguration.toJSON(\"\"));\r\n\t\t}\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public int addCluster(final String iClusterName, final OStorage.CLUSTER_TYPE iClusterType, final Object... iArguments) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DATACLUSTER_ADD);\r\n\t\t\t\t\tnetwork.writeString(iClusterType.toString());\r\n\t\t\t\t\tnetwork.writeString(iClusterName);\r\n\r\n\t\t\t\t\tswitch (iClusterType) {\r\n\t\t\t\t\tcase PHYSICAL:\r\n\t\t\t\t\t\t// FILE PATH + START SIZE\r\n\t\t\t\t\t\tnetwork.writeString(iArguments.length > 0 ? (String) iArguments[0] : \"\").writeInt(\r\n\t\t\t\t\t\t\t\tiArguments.length > 0 ? (Integer) iArguments[1] : -1);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase LOGICAL:\r\n\t\t\t\t\t\t// PHY CLUSTER ID\r\n\t\t\t\t\t\tnetwork.writeInt(iArguments.length > 0 ? (Integer) iArguments[0] : -1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\tfinal int clusterId = network.readShort();\r\n\r\n\t\t\t\t\tclustersIds.put(iClusterName.toLowerCase(), clusterId);\r\n\t\t\t\t\tclustersTypes.put(iClusterName.toLowerCase(), iClusterType.toString());\r\n\t\t\t\t\treturn clusterId;\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on add new cluster\", e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t\treturn 0;\r\n\t}","id":63280,"modified_method":"public int addCluster(final String iClusterName, final OStorage.CLUSTER_TYPE iClusterType, final Object... iArguments) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DATACLUSTER_ADD);\r\n\t\t\t\t\tnetwork.writeString(iClusterType.toString());\r\n\t\t\t\t\tnetwork.writeString(iClusterName);\r\n\r\n\t\t\t\t\tswitch (iClusterType) {\r\n\t\t\t\t\tcase PHYSICAL:\r\n\t\t\t\t\t\t// FILE PATH + START SIZE\r\n\t\t\t\t\t\tnetwork.writeString(iArguments.length > 0 ? (String) iArguments[0] : \"\").writeInt(\r\n\t\t\t\t\t\t\t\tiArguments.length > 0 ? (Integer) iArguments[1] : -1);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase LOGICAL:\r\n\t\t\t\t\t\t// PHY CLUSTER ID\r\n\t\t\t\t\t\tnetwork.writeInt(iArguments.length > 0 ? (Integer) iArguments[0] : -1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\tfinal int clusterId = network.readShort();\r\n\r\n\t\t\t\t\tclustersIds.put(iClusterName.toLowerCase(), clusterId);\r\n\t\t\t\t\tclustersTypes.put(iClusterName.toLowerCase(), iClusterType.toString());\r\n\t\t\t\t\treturn clusterId;\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on add new cluster\", e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public long[] getClusterDataRange(final int iClusterId) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DATACLUSTER_DATARANGE);\r\n\t\t\t\t\tnetwork.writeShort((short) iClusterId);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn new long[] { network.readLong(), network.readLong() };\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on getting last entry position count in cluster: \" + iClusterId, e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t\treturn null;\r\n\t}","id":63281,"modified_method":"public long[] getClusterDataRange(final int iClusterId) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DATACLUSTER_DATARANGE);\r\n\t\t\t\t\tnetwork.writeShort((short) iClusterId);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn new long[] { network.readLong(), network.readLong() };\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on getting last entry position count in cluster: \" + iClusterId, e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public <REC extends ORecordInternal<?>> REC dictionaryLookup(ODatabaseRecord<REC> iDatabase, final String iKey) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DICTIONARY_LOOKUP);\r\n\t\t\t\t\tnetwork.writeString(iKey);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn (REC) readRecordFromNetwork(iDatabase);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on lookup record with key: \" + iKey, e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t\treturn null;\r\n\t}","id":63282,"modified_method":"public <REC extends ORecordInternal<?>> REC dictionaryLookup(ODatabaseRecord<REC> iDatabase, final String iKey) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_DICTIONARY_LOOKUP);\r\n\t\t\t\t\tnetwork.writeString(iKey);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn (REC) readRecordFromNetwork(iDatabase);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on lookup record with key: \" + iKey, e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public long createRecord(final int iClusterId, final byte[] iContent, final byte iRecordType) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_RECORD_CREATE);\r\n\t\t\t\t\tnetwork.writeShort((short) iClusterId);\r\n\t\t\t\t\tnetwork.writeBytes(iContent);\r\n\t\t\t\t\tnetwork.writeByte(iRecordType);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readLong();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on create record in cluster: \" + iClusterId, e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t\treturn -1;\r\n\t}","id":63283,"modified_method":"public long createRecord(final int iClusterId, final byte[] iContent, final byte iRecordType) {\r\n\t\tcheckConnection();\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_RECORD_CREATE);\r\n\t\t\t\t\tnetwork.writeShort((short) iClusterId);\r\n\t\t\t\t\tnetwork.writeBytes(iContent);\r\n\t\t\t\t\tnetwork.writeByte(iRecordType);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\t\t\t\t\treturn network.readLong();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on create record in cluster: \" + iClusterId, e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"/**\r\n\t * Execute the command remotely and get the results back.\r\n\t */\r\n\tpublic Object command(final OCommandRequestText iCommand) {\r\n\t\tcheckConnection();\r\n\r\n\t\tif (!(iCommand instanceof OSerializableStream))\r\n\t\t\tthrow new OCommandExecutionException(\"Can't serialize the command to being executed to the server side.\");\r\n\r\n\t\tOSerializableStream command = iCommand;\r\n\r\n\t\tObject result = null;\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\tOStorageRemoteThreadLocal.INSTANCE.set(Boolean.TRUE);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tfinal OCommandRequestText aquery = (OCommandRequestText) iCommand;\r\n\r\n\t\t\t\tfinal boolean asynch = iCommand instanceof OCommandRequestAsynch;\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_COMMAND);\r\n\t\t\t\t\tnetwork.writeByte((byte) (asynch ? 'a' : 's')); // ASYNC / SYNC\r\n\t\t\t\t\tnetwork.writeBytes(OStreamSerializerAnyStreamable.INSTANCE.toStream(iCommand.getDatabase(), command));\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\r\n\t\t\t\t\tif (asynch) {\r\n\t\t\t\t\t\tbyte status;\r\n\r\n\t\t\t\t\t\t// ASYNCH: READ ONE RECORD AT TIME\r\n\t\t\t\t\t\twhile ((status = network.readByte()) > 0) {\r\n\t\t\t\t\t\t\tORecordSchemaAware<?> record = (ORecordSchemaAware<?>) readRecordFromNetwork(iCommand.getDatabase());\r\n\t\t\t\t\t\t\tif (record == null)\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tswitch (status) {\r\n\t\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\t\t// PUT AS PART OF THE RESULT SET. INVOKE THE LISTENER\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tif (!aquery.getResultListener().result(record)) {\r\n\t\t\t\t\t\t\t\t\t\t// EMPTY THE INPUT CHANNEL\r\n\t\t\t\t\t\t\t\t\t\twhile (network.in.available() > 0)\r\n\t\t\t\t\t\t\t\t\t\t\tnetwork.in.read();\r\n\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} catch (Throwable t) {\r\n\t\t\t\t\t\t\t\t\t// ABSORBE ALL THE USER EXCEPTIONS\r\n\t\t\t\t\t\t\t\t\tt.printStackTrace();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t// PUT IN THE CLIENT LOCAL CACHE\r\n\t\t\t\t\t\t\t\tcache.pushRecord(record.getIdentity().toString(),\r\n\t\t\t\t\t\t\t\t\t\tnew ORawBuffer(record.toStream(), record.getVersion(), record.getRecordType()));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfinal byte type = network.readByte();\r\n\t\t\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\tcase 'n':\r\n\t\t\t\t\t\t\tresult = null;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'r':\r\n\t\t\t\t\t\t\tresult = readRecordFromNetwork(iCommand.getDatabase());\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'a':\r\n\t\t\t\t\t\t\tresult = OStreamSerializerAnyRuntime.INSTANCE.fromStream(iCommand.getDatabase(), network.readBytes());\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tif (handleException(\"Error on executing command: \" + iCommand, e))\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tOStorageRemoteThreadLocal.INSTANCE.set(Boolean.FALSE);\r\n\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\r\n\t\treturn result;\r\n\t}","id":63284,"modified_method":"/**\r\n\t * Execute the command remotely and get the results back.\r\n\t */\r\n\tpublic Object command(final OCommandRequestText iCommand) {\r\n\t\tcheckConnection();\r\n\r\n\t\tif (!(iCommand instanceof OSerializableStream))\r\n\t\t\tthrow new OCommandExecutionException(\"Can't serialize the command to being executed to the server side.\");\r\n\r\n\t\tOSerializableStream command = iCommand;\r\n\r\n\t\tObject result = null;\r\n\r\n\t\tdo {\r\n\t\t\tboolean locked = lock.acquireExclusiveLock();\r\n\r\n\t\t\tOStorageRemoteThreadLocal.INSTANCE.set(Boolean.TRUE);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tfinal OCommandRequestText aquery = (OCommandRequestText) iCommand;\r\n\r\n\t\t\t\tfinal boolean asynch = iCommand instanceof OCommandRequestAsynch;\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginRequest(OChannelBinaryProtocol.REQUEST_COMMAND);\r\n\t\t\t\t\tnetwork.writeByte((byte) (asynch ? 'a' : 's')); // ASYNC / SYNC\r\n\t\t\t\t\tnetwork.writeBytes(OStreamSerializerAnyStreamable.INSTANCE.toStream(iCommand.getDatabase(), command));\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendRequest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbeginResponse();\r\n\r\n\t\t\t\t\tif (asynch) {\r\n\t\t\t\t\t\tbyte status;\r\n\r\n\t\t\t\t\t\t// ASYNCH: READ ONE RECORD AT TIME\r\n\t\t\t\t\t\twhile ((status = network.readByte()) > 0) {\r\n\t\t\t\t\t\t\tORecordSchemaAware<?> record = (ORecordSchemaAware<?>) readRecordFromNetwork(iCommand.getDatabase());\r\n\t\t\t\t\t\t\tif (record == null)\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tswitch (status) {\r\n\t\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\t\t// PUT AS PART OF THE RESULT SET. INVOKE THE LISTENER\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tif (!aquery.getResultListener().result(record)) {\r\n\t\t\t\t\t\t\t\t\t\t// EMPTY THE INPUT CHANNEL\r\n\t\t\t\t\t\t\t\t\t\twhile (network.in.available() > 0)\r\n\t\t\t\t\t\t\t\t\t\t\tnetwork.in.read();\r\n\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} catch (Throwable t) {\r\n\t\t\t\t\t\t\t\t\t// ABSORBE ALL THE USER EXCEPTIONS\r\n\t\t\t\t\t\t\t\t\tt.printStackTrace();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t// PUT IN THE CLIENT LOCAL CACHE\r\n\t\t\t\t\t\t\t\tcache.pushRecord(record.getIdentity().toString(),\r\n\t\t\t\t\t\t\t\t\t\tnew ORawBuffer(record.toStream(), record.getVersion(), record.getRecordType()));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfinal byte type = network.readByte();\r\n\t\t\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\tcase 'n':\r\n\t\t\t\t\t\t\tresult = null;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'r':\r\n\t\t\t\t\t\t\tresult = readRecordFromNetwork(iCommand.getDatabase());\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'a':\r\n\t\t\t\t\t\t\tresult = OStreamSerializerAnyRuntime.INSTANCE.fromStream(iCommand.getDatabase(), network.readBytes());\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tendResponse();\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\thandleException(\"Error on executing command: \" + iCommand, e);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tOStorageRemoteThreadLocal.INSTANCE.set(Boolean.FALSE);\r\n\r\n\t\t\t\tlock.releaseExclusiveLock(locked);\r\n\t\t\t}\r\n\t\t} while (true);\r\n\r\n\t\treturn result;\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n\tprotected void execute() throws Exception {\r\n\t\tstorage.getNetwork().beginResponse(this);\r\n\r\n\t\ttry {\r\n\t\t\tfinal byte request = storage.getNetwork().readByte();\r\n\r\n\t\t\tswitch (request) {\r\n\t\t\tcase OChannelDistributedProtocol.PUSH_DISTRIBUTED_CONFIG:\r\n\t\t\t\tstorage.updateClusterConfiguration(storage.getNetwork().readBytes());\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t} finally {\r\n\t\t\tstorage.getNetwork().endResponse();\r\n\t\t}\r\n\t}","id":63285,"modified_method":"@Override\r\n\tprotected void execute() throws Exception {\r\n\t\ttry {\r\n\t\t\tstorage.getNetwork().beginResponse(this);\r\n\r\n\t\t\tfinal byte request = storage.getNetwork().readByte();\r\n\r\n\t\t\tswitch (request) {\r\n\t\t\tcase OChannelDistributedProtocol.PUSH_DISTRIBUTED_CONFIG:\r\n\t\t\t\tstorage.updateClusterConfiguration(storage.getNetwork().readBytes());\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (Exception e) {\r\n\t\t} finally {\r\n\t\t\tstorage.getNetwork().endResponse();\r\n\t\t}\r\n\t}","commit_id":"cf3926314c339f3a23566a2cd87165d813fb6011","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n  public void stop() {\n    LOG.info(\"Stopping {}\", serviceName);\n    stopFlag = true;\n\n    dsService.stopAndWait();\n    if (isLeader.get() && twillController != null) {\n      twillController.stopAndWait();\n    }\n\n    if (leaderElection != null) {\n      leaderElection.stopAndWait();\n    }\n    Services.chainStop(metricsCollectionService, kafkaClientService, zkClientService);\n\n    try {\n      exploreClient.close();\n    } catch (IOException e) {\n      LOG.error(\"Could not close Explore client\", e);\n      throw Throwables.propagate(e);\n    }\n  }","id":63286,"modified_method":"@Override\n  public void stop() {\n    LOG.info(\"Stopping {}\", serviceName);\n    stopFlag = true;\n\n    dsService.stopAndWait();\n    if (isLeader.get() && twillController != null) {\n      twillController.stopAndWait();\n    }\n\n    if (leaderElection != null) {\n      leaderElection.stopAndWait();\n    }\n    Futures.getUnchecked(Services.chainStop(metricsCollectionService, kafkaClientService, zkClientService));\n\n    try {\n      exploreClient.close();\n    } catch (IOException e) {\n      LOG.error(\"Could not close Explore client\", e);\n      throw Throwables.propagate(e);\n    }\n  }","commit_id":"7a4e6a6671bfef25eaf793d0d0b78ad0bc0dbc43","url":"https://github.com/caskdata/cdap"},{"original_method":"@After\n  public void after() throws DatasetManagementException {\n    Services.chainStop(service, opExecutorService, txManager);\n    framework.deleteNamespace(NAMESPACE_ID);\n    framework.deleteNamespace(Id.Namespace.SYSTEM);\n  }","id":63287,"modified_method":"@After\n  public void after() throws DatasetManagementException {\n    framework.deleteNamespace(NAMESPACE_ID);\n    framework.deleteNamespace(Id.Namespace.SYSTEM);\n    Futures.getUnchecked(Services.chainStop(service, opExecutorService, txManager));\n  }","commit_id":"b27ec8ff34f85569a9d5c8885c26cf026f648c55","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public RuleMatch[] match(final AnalyzedSentence sentence) {\n    final List<RuleMatch> ruleMatches = new ArrayList<>();\n    final AnalyzedTokenReadings[] tokens = sentence\n        .getTokensWithoutWhitespace();\n    // ignoring token 0, i.e. SENT_START\n    goToNextToken: for (int i = 1; i < tokens.length; i++) {\n      if (matchPostagRegexp(tokens[i], ADJECTIU)\n          && !matchPostagRegexp(tokens[i], CONCORDA)\n          && !matchPostagRegexp(tokens[i], GV)) {\n        final String token = tokens[i].getToken();\n        final String prevToken = tokens[i - 1].getToken();\n        String prevPrevToken = \"\";\n        if (i > 2) {\n          prevPrevToken = tokens[i - 2].getToken();\n        }\n        String nextToken = \"\";\n        if (i < tokens.length - 1) {\n          nextToken = tokens[i + 1].getToken();\n        }\n        int j;\n        // boolean adjectiveAgrees = false;\n        // boolean theRuleMaches = false;\n        // boolean isException = false;\n        boolean isPlural = true;\n        boolean isPrevNoun = false;\n        Pattern substPattern = null;\n        Pattern gnPattern = null;\n        Pattern adjPattern = null;\n        Matcher isUpperCase = UPPERCASE.matcher(token);\n\n        // Some exceptions\n        // per molt lleuger\n        if (prevPrevToken.equals(\"per\") && prevToken.equals(\"molt\")) {\n          continue goToNextToken;\n        }\n        // esquerra-dreta\n        if (i < tokens.length - 2 && token.equalsIgnoreCase(\"esquerra\")\n            && (nextToken.equals(\"-\") || nextToken.equals(\"/\"))\n            && tokens[i + 2].getToken().equalsIgnoreCase(\"dreta\")) {\n          continue goToNextToken;\n        }\n\n        // Counts nouns and determiners before the adjectives.\n        // Takes care of acceptable combinations.\n        int maxLevels = 4;\n        int[] cNt = new int[maxLevels];\n        int[] cNMS = new int[maxLevels];\n        int[] cNFS = new int[maxLevels];\n        int[] cNMP = new int[maxLevels];\n        int[] cNFP = new int[maxLevels];\n        int[] cNCS = new int[maxLevels];\n        int[] cNCP = new int[maxLevels];\n        int[] cDMS = new int[maxLevels];\n        int[] cDFS = new int[maxLevels];\n        int[] cDMP = new int[maxLevels];\n        int[] cDFP = new int[maxLevels];\n        int[] cN = new int[maxLevels];\n        int[] cD = new int[maxLevels];\n        /*\n         * for (j = 0; j < maxLevels; j++) { cNt[j] = 0; cNMS[j] = 0; cNFS[j] =\n         * 0; cNMP[j] = 0; cNFP[j] = 0; cDMS[j] = 0; cDFS[j] = 0; cDMP[j] = 0;\n         * cDFP[j] = 0; cN[j] = 0; cD[j] = 0; }\n         */\n\n        int level = 0;\n        j = 1;\n        // boolean keepCounting = true;\n        initializeApparitions();\n        while (i - j > 0 && keepCounting(tokens[i - j]) && level < maxLevels) {\n          if (!isPrevNoun) {\n            if (matchPostagRegexp(tokens[i - j], NOM) || (\n            // adjectiu o participi sense nom, però amb algun determinant davant\n                i - j - 1 > 0 && !matchPostagRegexp(tokens[i - j], NOM)\n                    && matchPostagRegexp(tokens[i - j], ADJECTIU) \n                    && matchPostagRegexp(tokens[i - j - 1], DET))) {\n              if (matchPostagRegexp(tokens[i - j], _GN_MS)) {\n                cNMS[level]++;\n              }\n              if (matchPostagRegexp(tokens[i - j], _GN_FS)) {\n                cNFS[level]++;\n              }\n              if (matchPostagRegexp(tokens[i - j], _GN_MP)) {\n                cNMP[level]++;\n              }\n              if (matchPostagRegexp(tokens[i - j], _GN_FP)) {\n                cNFP[level]++;\n              }\n            }\n            if (!matchPostagRegexp(tokens[i - j], _GN_)) {\n              if (matchPostagRegexp(tokens[i - j], NOM_MS)) {\n                cNMS[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_FS)) {\n                cNFS[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_MP)) {\n                cNMP[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_FP)) {\n                cNFP[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_CS)) {\n                cNCS[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_CP)) {\n                cNCP[level]++;\n              }\n            }\n          }\n          // avoid two consecutive nouns\n          if (matchPostagRegexp(tokens[i - j], NOM)) {\n            cNt[level]++;\n            isPrevNoun = true;\n            //initializeApparitions();\n          } else {\n            isPrevNoun = false;\n          }\n\n          if (matchPostagRegexp(tokens[i - j], DET_CS)) {\n            if (matchPostagRegexp(tokens[i - j + 1], NOM_MS)) {\n              cDMS[level]++;\n            }\n            if (matchPostagRegexp(tokens[i - j + 1], NOM_FS)) {\n              cDFS[level]++;\n            }\n          }\n          if (!matchPostagRegexp(tokens[i - j], ADVERBI)) {\n            if (matchPostagRegexp(tokens[i - j], DET_MS)) {\n              cDMS[level]++;\n            }\n            if (matchPostagRegexp(tokens[i - j], DET_FS)) {\n              cDFS[level]++;\n            }\n            if (matchPostagRegexp(tokens[i - j], DET_MP)) {\n              cDMP[level]++;\n            }\n            if (matchPostagRegexp(tokens[i - j], DET_FP)) {\n              cDFP[level]++;\n            }\n          }\n          if (i - j > 0) {\n            if (matchRegexp(tokens[i - j].getToken(), PREPOSICIO_CANVI_NIVELL)\n                && !matchRegexp(tokens[i - j - 1].getToken(), COORDINACIO_IONI)\n                && !matchPostagRegexp(tokens[i - j + 1], ADVERBI)) {\n              level++;\n            }\n          }\n          if (level > 0\n              && matchRegexp(tokens[i - j].getToken(), COORDINACIO_IONI)) {\n            int k = 1;\n            while (k < 4\n                && i - j - k > 0\n                && (matchPostagRegexp(tokens[i - j - k], KEEP_COUNT)\n                    || matchRegexp(tokens[i - j - k].getToken(), KEEP_COUNT2) || matchPostagRegexp(\n                      tokens[i - j - k], ADVERBIS_ACCEPTATS))\n                && (!matchRegexp(tokens[i - j - k].getToken(), STOP_COUNT))) {\n              if (matchPostagRegexp(tokens[i - j - k], PREPOSICIONS)) {\n                j = j + k;\n                break;\n              }\n              k++;\n            }\n          }\n          updateApparitions(tokens[i - j]);\n          j++;\n        }\n        level++;\n        if (level > maxLevels) {\n          level = maxLevels;\n        }\n        j = 0;\n        int cNtotal = 0;\n        int cDtotal = 0;\n        while (j < level) {\n          cN[j] = cNMS[j] + cNFS[j] + cNMP[j] + cNFP[j] + cNCS[j] + cNCP[j];\n          cD[j] = cDMS[j] + cDFS[j] + cDMP[j] + cDFP[j];\n          cNtotal += cN[j];\n          cDtotal += cD[j];\n\n          // exceptions: adjective is plural and there are several nouns before\n          if (matchPostagRegexp(tokens[i], ADJECTIU_MP)\n              && (cN[j] > 1 || cD[j] > 1)\n              && (cNMS[j] + cNMP[j] + cNCS[j] + cNCP[j] + cDMS[j] + cDMP[j]) > 0\n              && (cNFS[j] + cNFP[j] <= cNt[j])) {\n            continue goToNextToken;\n          }\n          if (matchPostagRegexp(tokens[i], ADJECTIU_FP)\n              && (cN[j] > 1 || cD[j] > 1)\n              && ((cNMS[j] + cNMP[j] + cDMS[j] + cDMP[j]) == 0 || (cNt[j] > 0 && cNFS[j]\n                  + cNFP[j] >= cNt[j]))) {\n            continue goToNextToken;\n          }\n          // Adjective can't be singular\n          if (cN[j] + cD[j] > 0) { // && level>1\n            isPlural = isPlural && cD[j] > 1; // cN[j]>1\n          }\n          j++;\n        }\n        // there is no noun, (no determinant --> && cDtotal==0)\n        if (cNtotal == 0 && cDtotal == 0) { \n          continue goToNextToken;\n        }\n\n        // exception: noun (or adj) plural + two or more adjectives\n        if (i < tokens.length - 2) {\n          Matcher pCoordina = COORDINACIO.matcher(nextToken);\n          if (pCoordina.matches()) {\n            if (((matchPostagRegexp(tokens[i - 1], NOM_MP) || matchPostagRegexp(\n                tokens[i - 1], ADJECTIU_MP))\n                && matchPostagRegexp(tokens[i], ADJECTIU_MS) && matchPostagRegexp(\n                  tokens[i + 2], ADJECTIU_MS))\n                || ((matchPostagRegexp(tokens[i - 1], NOM_MP) || matchPostagRegexp(\n                    tokens[i - 1], ADJECTIU_MP))\n                    && matchPostagRegexp(tokens[i], ADJECTIU_MP) && matchPostagRegexp(\n                      tokens[i + 2], ADJECTIU_MP))\n                || ((matchPostagRegexp(tokens[i - 1], NOM_FP) || matchPostagRegexp(\n                    tokens[i - 1], ADJECTIU_FP))\n                    && matchPostagRegexp(tokens[i], ADJECTIU_FS) && matchPostagRegexp(\n                      tokens[i + 2], ADJECTIU_FS))\n                || ((matchPostagRegexp(tokens[i - 1], NOM_FP) || matchPostagRegexp(\n                    tokens[i - 1], ADJECTIU_FP))\n                    && matchPostagRegexp(tokens[i], ADJECTIU_FP) && matchPostagRegexp(\n                      tokens[i + 2], ADJECTIU_FP))) {\n              continue goToNextToken;\n            }\n          }\n        }\n        // exception: termes, paraules, etc.\n        if (matchRegexp(prevToken, EXCEPCIONS_PREVIA)) {\n          continue goToNextToken;\n        }\n        // exceptions: la meitat mascles\n        if (matchPostagRegexp(tokens[i - 1], EXCEPCIONS_PREVIA_POSTAG)) {\n          continue goToNextToken;\n        }\n        // exceptions: llevat de, tret de, majúsucula inicial\n        if ((((token.equals(\"tret\") || token.equals(\"llevat\")) && (nextToken\n            .equals(\"de\") || nextToken.equals(\"que\")))\n            || token.equals(\"primer\")\n            || token.equals(\"junts\")\n            || token.equals(\"plegats\") || isUpperCase.matches())) {\n          continue goToNextToken;\n        }\n        // exceptions: atès, atesos..., donat, donats...\n        if (matchRegexp(token, EXCEPCIONS_PARTICIPI)) {\n          continue goToNextToken;\n        }\n        // exceptions: un cop, una volta, una vegada...\n        if ((((prevPrevToken.equals(\"un\") || prevPrevToken.equals(\"altre\")) && (prevToken.equals(\"cop\") || prevToken.equals(\"colp\"))) \n            || ((prevPrevToken.equals(\"una\") || prevPrevToken.equals(\"altra\")) && (prevToken.equals(\"volta\") || prevToken.equals(\"vegada\"))))\n            ) {\n          continue goToNextToken;\n        }\n        // exceptions: segur que, just a\n        if (i < tokens.length - 1) {\n          if ((token.equals(\"segur\") || token.equals(\"major\") || token\n              .equals(\"menor\")) && nextToken.equals(\"que\")) {\n            continue goToNextToken;\n          }\n        }\n        // exceptions: sota mateix, dins mateix,\n        if (token.equals(\"mateix\") && matchPostagRegexp(tokens[i - 1], ADVERBI)) {\n          continue goToNextToken;\n        }\n\n        // patterns according to the analyzed adjective \n        if (matchPostagRegexp(tokens[i], ADJECTIU_CS)) {\n          substPattern = GN_CS;\n          adjPattern = ADJECTIU_S;\n          gnPattern = _GN_CS;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_CP)) {\n          substPattern = GN_CP;\n          adjPattern = ADJECTIU_P;\n          gnPattern = _GN_CP;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_MS)) {\n          substPattern = GN_MS;\n          adjPattern = ADJECTIU_MS;\n          gnPattern = _GN_MS;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_FS)) {\n          substPattern = GN_FS;\n          adjPattern = ADJECTIU_FS;\n          gnPattern = _GN_FS;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_MP)) {\n          substPattern = GN_MP;\n          adjPattern = ADJECTIU_MP;\n          gnPattern = _GN_MP;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_FP)) {\n          substPattern = GN_FP;\n          adjPattern = ADJECTIU_FP;\n          gnPattern = _GN_FP;\n        }\n\n        if (substPattern == null || gnPattern == null || adjPattern == null) {\n          continue goToNextToken;\n        }\n\n        // combinations Det/Nom + adv (1,2..) + adj. \n        // If there is agreement, the rule doesn't match\n        j = 1;\n        boolean keepCount = true;\n        while (i - j > 0 && keepCount) {\n          if (matchPostagRegexp(tokens[i - j], NOM_DET)\n              && matchPostagRegexp(tokens[i - j], gnPattern)) {\n            continue goToNextToken; // there is a previous agreeing noun\n          } else if (!matchPostagRegexp(tokens[i - j], _GN_)\n              && matchPostagRegexp(tokens[i - j], substPattern)) {\n            continue goToNextToken; // there is a previous agreeing noun\n          }\n          keepCount = !matchPostagRegexp(tokens[i - j], NOM_DET);\n          j++;\n        }\n\n        // Necessary condition: previous token is a non-agreeing noun\n        // or it is adjective or adverb (not preceded by verb)\n        // /*&& !matchPostagRegexp(tokens[i],NOM)*/\n        if ((matchPostagRegexp(tokens[i - 1], NOM) && !matchPostagRegexp(tokens[i - 1], substPattern))\n            || (i>2 && matchPostagRegexp(tokens[i - 1], ADJECTIU) && !matchPostagRegexp(tokens[i - 1], adjPattern))\n            || (i>2 && matchPostagRegexp(tokens[i - 1], ADVERBIS_ACCEPTATS) && !matchPostagRegexp(tokens[i - 2], VERB) && !matchPostagRegexp(tokens[i - 2], PREPOSICIONS))\n            || (i>3 && matchPostagRegexp(tokens[i - 1], LOC_ADV) && matchPostagRegexp(tokens[i - 2], LOC_ADV) && !matchPostagRegexp(tokens[i - 3], VERB) && !matchPostagRegexp(tokens[i - 3], PREPOSICIONS))\n            ) {\n          \n        } else {\n          continue goToNextToken;\n        }        \n\n        // Adjective can't be singular. The rule matches\n        if (!(isPlural && matchPostagRegexp(tokens[i], ADJECTIU_S))) {\n          //look into previous words\n          j = 1;\n          initializeApparitions();\n          while (i - j > 0 && keepCounting(tokens[i - j])) {\n            // there is a previous agreeing noun\n            if (matchPostagRegexp(tokens[i - j], NOM_DET)\n                && matchPostagRegexp(tokens[i - j], substPattern)) {\n              continue goToNextToken; \n            // there is a previous agreeing adjective (in a nominal group)\n            } else if (matchPostagRegexp(tokens[i - j], ADJECTIU)\n                && matchPostagRegexp(tokens[i - j], gnPattern)) {\n              continue goToNextToken;\n            // if there is no nominal group, it requires noun\n            } /*else if (!matchPostagRegexp(tokens[i - j], _GN_) \n                && matchPostagRegexp(tokens[i - j], substPattern)) {\n              continue goToNextToken; // there is a previous agreeing noun\n            }*/\n            updateApparitions(tokens[i - j]);\n            j++;\n          }\n        }\n\n        // The rule matches\n        final String msg = \"Reviseu la concordança de la paraula \\u00AB\"\n            + token + \"\\u00BB.\";\n        final RuleMatch ruleMatch = new RuleMatch(this,\n            tokens[i].getStartPos(), tokens[i].getStartPos() + token.length(),\n            msg, \"Reviseu la concordança.\");\n        ruleMatches.add(ruleMatch);\n      }\n    }\n    return toRuleMatchArray(ruleMatches);\n  }","id":63288,"modified_method":"@Override\n  public RuleMatch[] match(final AnalyzedSentence sentence) {\n    final List<RuleMatch> ruleMatches = new ArrayList<>();\n    final AnalyzedTokenReadings[] tokens = sentence\n        .getTokensWithoutWhitespace();\n    // ignoring token 0, i.e. SENT_START\n    goToNextToken: for (int i = 1; i < tokens.length; i++) {\n      if (matchPostagRegexp(tokens[i], ADJECTIU)\n          && !matchPostagRegexp(tokens[i], CONCORDA)\n          && !matchPostagRegexp(tokens[i], GV)) {\n        final String token = tokens[i].getToken();\n        final String prevToken = tokens[i - 1].getToken();\n        String prevPrevToken = \"\";\n        if (i > 2) {\n          prevPrevToken = tokens[i - 2].getToken();\n        }\n        String nextToken = \"\";\n        if (i < tokens.length - 1) {\n          nextToken = tokens[i + 1].getToken();\n        }\n        int j;\n        // boolean adjectiveAgrees = false;\n        // boolean theRuleMaches = false;\n        // boolean isException = false;\n        boolean isPlural = true;\n        boolean isPrevNoun = false;\n        Pattern substPattern = null;\n        Pattern gnPattern = null;\n        Pattern adjPattern = null;\n        Matcher isUpperCase = UPPERCASE.matcher(token);\n\n        // SOME EXCEPTIONS\n        // per molt lleuger\n        if (prevPrevToken.equals(\"per\") && prevToken.equals(\"molt\")) {\n          continue goToNextToken;\n        }\n        // esquerra-dreta\n        if (i < tokens.length - 2 && token.equalsIgnoreCase(\"esquerra\")\n            && (nextToken.equals(\"-\") || nextToken.equals(\"/\"))\n            && tokens[i + 2].getToken().equalsIgnoreCase(\"dreta\")) {\n          continue goToNextToken;\n        }\n        \n        // exception: noun (or adj) plural + two or more adjectives\n        if (i < tokens.length - 2) {\n          Matcher pCoordina = COORDINACIO.matcher(nextToken);\n          if (pCoordina.matches()) {\n            if (((matchPostagRegexp(tokens[i - 1], NOM_MP) || matchPostagRegexp(\n                tokens[i - 1], ADJECTIU_MP))\n                && matchPostagRegexp(tokens[i], ADJECTIU_MS) && matchPostagRegexp(\n                  tokens[i + 2], ADJECTIU_MS))\n                || ((matchPostagRegexp(tokens[i - 1], NOM_MP) || matchPostagRegexp(\n                    tokens[i - 1], ADJECTIU_MP))\n                    && matchPostagRegexp(tokens[i], ADJECTIU_MP) && matchPostagRegexp(\n                      tokens[i + 2], ADJECTIU_MP))\n                || ((matchPostagRegexp(tokens[i - 1], NOM_FP) || matchPostagRegexp(\n                    tokens[i - 1], ADJECTIU_FP))\n                    && matchPostagRegexp(tokens[i], ADJECTIU_FS) && matchPostagRegexp(\n                      tokens[i + 2], ADJECTIU_FS))\n                || ((matchPostagRegexp(tokens[i - 1], NOM_FP) || matchPostagRegexp(\n                    tokens[i - 1], ADJECTIU_FP))\n                    && matchPostagRegexp(tokens[i], ADJECTIU_FP) && matchPostagRegexp(\n                      tokens[i + 2], ADJECTIU_FP))) {\n              continue goToNextToken;\n            }\n          }\n        }\n        // exception: termes, paraules, etc.\n        if (matchRegexp(prevToken, EXCEPCIONS_PREVIA)) {\n          continue goToNextToken;\n        }\n        // exceptions: la meitat mascles\n        if (matchPostagRegexp(tokens[i - 1], EXCEPCIONS_PREVIA_POSTAG)) {\n          continue goToNextToken;\n        }\n        // exceptions: llevat de, tret de, majúsucula inicial\n        if ((((token.equals(\"tret\") || token.equals(\"llevat\")) && (nextToken\n            .equals(\"de\") || nextToken.equals(\"que\")))\n            || token.equals(\"primer\")\n            || token.equals(\"junts\")\n            || token.equals(\"plegats\") || isUpperCase.matches())) {\n          continue goToNextToken;\n        }\n        // exceptions: atès, atesos..., donat, donats...\n        if (matchRegexp(token, EXCEPCIONS_PARTICIPI)) {\n          continue goToNextToken;\n        }\n        // exceptions: un cop, una volta, una vegada...\n        if ((((prevPrevToken.equals(\"un\") || prevPrevToken.equals(\"altre\")) && (prevToken.equals(\"cop\") || prevToken.equals(\"colp\"))) \n            || ((prevPrevToken.equals(\"una\") || prevPrevToken.equals(\"altra\") || prevPrevToken.equals(\"aquesta\")) && (prevToken.equals(\"volta\") || prevToken.equals(\"vegada\"))))\n            ) {\n          continue goToNextToken;\n        }\n        \n        // exceptions: per primera vegada...\n        if (i > 2 && tokens[i - 2].getToken().equalsIgnoreCase(\"per\")\n            && matchPostagRegexp(tokens[i - 1], ORDINAL)\n            && (prevToken.equals(\"volta\") || prevToken.equals(\"vegada\")\n                || prevToken.equals(\"cop\") || prevToken.equals(\"colp\"))) {\n          continue goToNextToken;\n        }\n\n        // exceptions: segur que, just a\n        if (i < tokens.length - 1) {\n          if ((token.equals(\"segur\") || token.equals(\"major\") || token\n              .equals(\"menor\")) && nextToken.equals(\"que\")) {\n            continue goToNextToken;\n          }\n        }\n        // exceptions: sota mateix, dins mateix,\n        if (token.equals(\"mateix\") && matchPostagRegexp(tokens[i - 1], ADVERBI)) {\n          continue goToNextToken;\n        }\n        \n        // exceptions: a França mateix\n        if (token.equals(\"mateix\") && matchPostagRegexp(tokens[i - 1], TOPONIM)\n            && prevPrevToken.equals(\"a\")) {\n          continue goToNextToken;\n        }\n\n        // Counts nouns and determiners before the adjectives.\n        // Takes care of acceptable combinations.\n        int maxLevels = 4;\n        int[] cNt = new int[maxLevels];\n        int[] cNMS = new int[maxLevels];\n        int[] cNFS = new int[maxLevels];\n        int[] cNMP = new int[maxLevels];\n        int[] cNFP = new int[maxLevels];\n        int[] cNCS = new int[maxLevels];\n        int[] cNCP = new int[maxLevels];\n        int[] cDMS = new int[maxLevels];\n        int[] cDFS = new int[maxLevels];\n        int[] cDMP = new int[maxLevels];\n        int[] cDFP = new int[maxLevels];\n        int[] cN = new int[maxLevels];\n        int[] cD = new int[maxLevels];\n        /*\n         * for (j = 0; j < maxLevels; j++) { cNt[j] = 0; cNMS[j] = 0; cNFS[j] =\n         * 0; cNMP[j] = 0; cNFP[j] = 0; cDMS[j] = 0; cDFS[j] = 0; cDMP[j] = 0;\n         * cDFP[j] = 0; cN[j] = 0; cD[j] = 0; }\n         */\n\n        int level = 0;\n        j = 1;\n        // boolean keepCounting = true;\n        initializeApparitions();\n        while (i - j > 0 && keepCounting(tokens[i - j]) && level < maxLevels) {\n          if (!isPrevNoun) {\n            if (matchPostagRegexp(tokens[i - j], NOM) || (\n            // adjectiu o participi sense nom, però amb algun determinant davant\n                i - j - 1 > 0 && !matchPostagRegexp(tokens[i - j], NOM)\n                    && matchPostagRegexp(tokens[i - j], ADJECTIU) \n                    && matchPostagRegexp(tokens[i - j - 1], DET))) {\n              if (matchPostagRegexp(tokens[i - j], _GN_MS)) {\n                cNMS[level]++;\n              }\n              if (matchPostagRegexp(tokens[i - j], _GN_FS)) {\n                cNFS[level]++;\n              }\n              if (matchPostagRegexp(tokens[i - j], _GN_MP)) {\n                cNMP[level]++;\n              }\n              if (matchPostagRegexp(tokens[i - j], _GN_FP)) {\n                cNFP[level]++;\n              }\n            }\n            if (!matchPostagRegexp(tokens[i - j], _GN_)) {\n              if (matchPostagRegexp(tokens[i - j], NOM_MS)) {\n                cNMS[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_FS)) {\n                cNFS[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_MP)) {\n                cNMP[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_FP)) {\n                cNFP[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_CS)) {\n                cNCS[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_CP)) {\n                cNCP[level]++;\n              }\n            }\n          }\n          // avoid two consecutive nouns\n          if (matchPostagRegexp(tokens[i - j], NOM)) {\n            cNt[level]++;\n            isPrevNoun = true;\n            //initializeApparitions();\n          } else {\n            isPrevNoun = false;\n          }\n\n          if (matchPostagRegexp(tokens[i - j], DET_CS)) {\n            if (matchPostagRegexp(tokens[i - j + 1], NOM_MS)) {\n              cDMS[level]++;\n            }\n            if (matchPostagRegexp(tokens[i - j + 1], NOM_FS)) {\n              cDFS[level]++;\n            }\n          }\n          if (!matchPostagRegexp(tokens[i - j], ADVERBI)) {\n            if (matchPostagRegexp(tokens[i - j], DET_MS)) {\n              cDMS[level]++;\n            }\n            if (matchPostagRegexp(tokens[i - j], DET_FS)) {\n              cDFS[level]++;\n            }\n            if (matchPostagRegexp(tokens[i - j], DET_MP)) {\n              cDMP[level]++;\n            }\n            if (matchPostagRegexp(tokens[i - j], DET_FP)) {\n              cDFP[level]++;\n            }\n          }\n          if (i - j > 0) {\n            if (matchRegexp(tokens[i - j].getToken(), PREPOSICIO_CANVI_NIVELL)\n                && !matchRegexp(tokens[i - j - 1].getToken(), COORDINACIO_IONI)\n                && !matchPostagRegexp(tokens[i - j + 1], ADVERBI)) {\n              level++;\n            }\n          }\n          if (level > 0\n              && matchRegexp(tokens[i - j].getToken(), COORDINACIO_IONI)) {\n            int k = 1;\n            while (k < 4\n                && i - j - k > 0\n                && (matchPostagRegexp(tokens[i - j - k], KEEP_COUNT)\n                    || matchRegexp(tokens[i - j - k].getToken(), KEEP_COUNT2) || matchPostagRegexp(\n                      tokens[i - j - k], ADVERBIS_ACCEPTATS))\n                && (!matchRegexp(tokens[i - j - k].getToken(), STOP_COUNT))) {\n              if (matchPostagRegexp(tokens[i - j - k], PREPOSICIONS)) {\n                j = j + k;\n                break;\n              }\n              k++;\n            }\n          }\n          updateApparitions(tokens[i - j]);\n          j++;\n        }\n        level++;\n        if (level > maxLevels) {\n          level = maxLevels;\n        }\n        j = 0;\n        int cNtotal = 0;\n        int cDtotal = 0;\n        while (j < level) {\n          cN[j] = cNMS[j] + cNFS[j] + cNMP[j] + cNFP[j] + cNCS[j] + cNCP[j];\n          cD[j] = cDMS[j] + cDFS[j] + cDMP[j] + cDFP[j];\n          cNtotal += cN[j];\n          cDtotal += cD[j];\n\n          // exceptions: adjective is plural and there are several nouns before\n          if (matchPostagRegexp(tokens[i], ADJECTIU_MP)\n              && (cN[j] > 1 || cD[j] > 1)\n              && (cNMS[j] + cNMP[j] + cNCS[j] + cNCP[j] + cDMS[j] + cDMP[j]) > 0\n              && (cNFS[j] + cNFP[j] <= cNt[j])) {\n            continue goToNextToken;\n          }\n          if (matchPostagRegexp(tokens[i], ADJECTIU_FP)\n              && (cN[j] > 1 || cD[j] > 1)\n              && ((cNMS[j] + cNMP[j] + cDMS[j] + cDMP[j]) == 0 || (cNt[j] > 0 && cNFS[j]\n                  + cNFP[j] >= cNt[j]))) {\n            continue goToNextToken;\n          }\n          // Adjective can't be singular\n          if (cN[j] + cD[j] > 0) { // && level>1\n            isPlural = isPlural && cD[j] > 1; // cN[j]>1\n          }\n          j++;\n        }\n        // there is no noun, (no determinant --> && cDtotal==0)\n        if (cNtotal == 0 && cDtotal == 0) { \n          continue goToNextToken;\n        }        \n\n        // patterns according to the analyzed adjective \n        if (matchPostagRegexp(tokens[i], ADJECTIU_CS)) {\n          substPattern = GN_CS;\n          adjPattern = ADJECTIU_S;\n          gnPattern = _GN_CS;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_CP)) {\n          substPattern = GN_CP;\n          adjPattern = ADJECTIU_P;\n          gnPattern = _GN_CP;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_MS)) {\n          substPattern = GN_MS;\n          adjPattern = ADJECTIU_MS;\n          gnPattern = _GN_MS;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_FS)) {\n          substPattern = GN_FS;\n          adjPattern = ADJECTIU_FS;\n          gnPattern = _GN_FS;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_MP)) {\n          substPattern = GN_MP;\n          adjPattern = ADJECTIU_MP;\n          gnPattern = _GN_MP;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_FP)) {\n          substPattern = GN_FP;\n          adjPattern = ADJECTIU_FP;\n          gnPattern = _GN_FP;\n        }\n\n        if (substPattern == null || gnPattern == null || adjPattern == null) {\n          continue goToNextToken;\n        }\n\n        // combinations Det/Nom + adv (1,2..) + adj. \n        // If there is agreement, the rule doesn't match\n        j = 1;\n        boolean keepCount = true;\n        while (i - j > 0 && keepCount) {\n          if (matchPostagRegexp(tokens[i - j], NOM_DET)\n              && matchPostagRegexp(tokens[i - j], gnPattern)) {\n            continue goToNextToken; // there is a previous agreeing noun\n          } else if (!matchPostagRegexp(tokens[i - j], _GN_)\n              && matchPostagRegexp(tokens[i - j], substPattern)) {\n            continue goToNextToken; // there is a previous agreeing noun\n          }\n          keepCount = !matchPostagRegexp(tokens[i - j], NOM_DET);\n          j++;\n        }\n\n        // Necessary condition: previous token is a non-agreeing noun\n        // or it is adjective or adverb (not preceded by verb)\n        // /*&& !matchPostagRegexp(tokens[i],NOM)*/\n        if ((matchPostagRegexp(tokens[i - 1], NOM) && !matchPostagRegexp(tokens[i - 1], substPattern))\n            || (matchPostagRegexp(tokens[i - 1], ADJECTIU) && !matchPostagRegexp(tokens[i - 1], gnPattern))\n            || (matchPostagRegexp(tokens[i - 1], ADJECTIU) && !matchPostagRegexp(tokens[i - 1], adjPattern))\n            || (i>2 && matchPostagRegexp(tokens[i - 1], ADVERBIS_ACCEPTATS) && !matchPostagRegexp(tokens[i - 2], VERB) && !matchPostagRegexp(tokens[i - 2], PREPOSICIONS))\n            || (i>3 && matchPostagRegexp(tokens[i - 1], LOC_ADV) && matchPostagRegexp(tokens[i - 2], LOC_ADV) && !matchPostagRegexp(tokens[i - 3], VERB) && !matchPostagRegexp(tokens[i - 3], PREPOSICIONS))\n            ) {\n          \n        } else {\n          continue goToNextToken;\n        }        \n\n        // Adjective can't be singular. The rule matches\n        if (!(isPlural && matchPostagRegexp(tokens[i], ADJECTIU_S))) {\n          //look into previous words\n          j = 1;\n          initializeApparitions();\n          while (i - j > 0 && keepCounting(tokens[i - j])) {\n            // there is a previous agreeing noun\n            if (!matchPostagRegexp(tokens[i - j], _GN_)\n                && matchPostagRegexp(tokens[i - j], NOM_DET)\n                && matchPostagRegexp(tokens[i - j], substPattern)) {\n              continue goToNextToken; \n            // there is a previous agreeing adjective (in a nominal group) \n            } else if ( matchPostagRegexp(tokens[i - j], gnPattern)) {\n              continue goToNextToken;\n            // if there is no nominal group, it requires noun\n            } /*else if (!matchPostagRegexp(tokens[i - j], _GN_) \n                && matchPostagRegexp(tokens[i - j], substPattern)) {\n              continue goToNextToken; // there is a previous agreeing noun\n            }*/\n            updateApparitions(tokens[i - j]);\n            j++;\n          }\n        }\n\n        // The rule matches\n        final String msg = \"Reviseu la concordança de la paraula \\u00AB\"\n            + token + \"\\u00BB.\";\n        final RuleMatch ruleMatch = new RuleMatch(this,\n            tokens[i].getStartPos(), tokens[i].getStartPos() + token.length(),\n            msg, \"Reviseu la concordança.\");\n        ruleMatches.add(ruleMatch);\n      }\n    }\n    return toRuleMatchArray(ruleMatches);\n  }","commit_id":"218701dd7d5eb74b6231f57d85116844c4a60f0e","url":"https://github.com/languagetool-org/languagetool"},{"original_method":"private boolean keepCounting(AnalyzedTokenReadings aTr) {\n    // stop searching if there is some of these combinations:\n    // adverb+comma, adverb+conjunction, comma+conjunction,\n    // punctuation+punctuation\n    if ((adverbAppeared && conjunctionAppeared)\n        || (adverbAppeared && punctuationAppeared)\n        || (conjunctionAppeared && punctuationAppeared)\n        || (punctuationAppeared && matchPostagRegexp(aTr, PUNTUACIO))) {\n      return false;\n    }\n    return (matchPostagRegexp(aTr, KEEP_COUNT)\n        || matchRegexp(aTr.getToken(), KEEP_COUNT2) || matchPostagRegexp(aTr,\n          ADVERBIS_ACCEPTATS))\n        && !matchRegexp(aTr.getToken(), STOP_COUNT) \n        && !matchPostagRegexp(aTr, GV);\n  }","id":63289,"modified_method":"private boolean keepCounting(AnalyzedTokenReadings aTr) {\n    // stop searching if there is some of these combinations:\n    // adverb+comma, adverb+conjunction, comma+conjunction,\n    // punctuation+punctuation\n    if ((adverbAppeared && conjunctionAppeared)\n        || (adverbAppeared && punctuationAppeared)\n        || (conjunctionAppeared && punctuationAppeared)\n        || (punctuationAppeared && matchPostagRegexp(aTr, PUNTUACIO))) {\n      return false;\n    }\n    return (matchPostagRegexp(aTr, KEEP_COUNT)\n        || matchRegexp(aTr.getToken(), KEEP_COUNT2) || matchPostagRegexp(aTr,\n          ADVERBIS_ACCEPTATS))\n        && !matchRegexp(aTr.getToken(), STOP_COUNT) \n        && (!matchPostagRegexp(aTr, GV) || matchPostagRegexp(aTr, _GN_));\n  }","commit_id":"218701dd7d5eb74b6231f57d85116844c4a60f0e","url":"https://github.com/languagetool-org/languagetool"},{"original_method":"public void testRule() throws IOException {\r\n\r\n    // correct sentences:\r\n    \r\n    //amb la mirada de cadascun dels homes clavada en la de l'adversari\r\n    //de fer una torre o fortificació bo i al·legant que això\r\n    // a confondre en un mateix amor amics i enemics\r\n    // es van posar en camí proveïts de presents\r\n    /* d'una banda tossut i, de l'altra, del tot inepte\r\n     * principis mascle i femella de la foscor//els elements reproductors mascle\r\n     * i femella// les formigues mascle i femella\r\n     */\r\n    /*\r\n     * multiwords: en aparença, en essència,per essència, amb excés,en repòs,\r\n     * amb rapidesa, en algun grau, per molt de temps altres vegades estacionat,\r\n     * en molts casos subordinada?, era al principi instintiva, de moment\r\n     * imperfectament conegudes de llarg menys perfectes, és de totes passades\r\n     * exactament intermèdia, és, en conjunt, gairebé intermèdia en cert grau\r\n     * paral·lela en algun grau en grau lleuger menys distintes han estat de fet\r\n     * exterminades\r\n     */\r\n    // (en especial si hi ha un adverbi entremig: en algun grau més distintes\r\n    //assertCorrect(\"Es van somriure l'una a l'altra encara dretes, suades i panteixants,\");\r\n    assertCorrect(\"el text de més àmplia i persistent influència\");\r\n    assertCorrect(\"el text de més àmplia influència\");\r\n    assertCorrect(\"Ell i jo som una altra vegada partidaris del rei\"); \r\n    assertCorrect(\"despres de la revolta contra el poder pontifici iniciada a Bolonya\");\r\n    assertCorrect(\"-Així, ¿viatges sola? -va dir\");\r\n    assertCorrect(\"El riu passa engorjat en aquest sector \");\r\n    assertCorrect(\"i ronda amagat pels carrers\");\r\n    assertCorrect(\"Setmanari il·lustrat d'art, literatura i actualitats fundat a Barcelona\");\r\n    assertCorrect(\"Entitat oficial de crèdit a mitjà i llarg termini constituïda l'any 1920\");\r\n    assertCorrect(\"edificacions superposades d'època romana republicanes i imperials\");\r\n    assertCorrect(\"Fou un dels primers barris de barraques sorgit després del 1939\");\r\n    assertCorrect(\"i el premi a la investigació mèdica atorgat per la Funadació\");\r\n    assertCorrect(\"no arriben als 300 mm de pluja anuals\");\r\n    assertCorrect(\"un dibuix de colors vius d'un noi ben plantat i una noia preciosa drets\");\r\n    assertCorrect(\"de la captura i l'assassinat recents\");\r\n    //assertCorrect(\", la captura i l'assassinat recents\"); //desambiguar \"la captura\"\r\n    //assertCorrect(\"la revolta contra el poder pontifici iniciada a Bolonya\"); //desambiguar \"la revolta\"\r\n    assertCorrect(\"donar estocades sense ordre ni concert mal dirigides\");\r\n    assertCorrect(\"trobarien un dels nanos mort de fred\");\r\n    assertCorrect(\"aquest text, el més antic de l'obra fins ara conegut\");\r\n    assertCorrect(\"va reaccionar, la molt astuta, així\");\r\n    assertCorrect(\"Són de barba i cabellera blanques\");\r\n    assertCorrect(\"per a dur a terme tota la lectura i escriptura requerides\");\r\n    assertCorrect(\"al camí va trobar una branca de roure sòlida\");\r\n    assertCorrect(\"Tesis doctorals\");\r\n    assertCorrect(\"Va veure una cara rosada i arrugada, una boca sense dents oberta\");\r\n    assertCorrect(\"la vista en el magnífic ocell de potes i bec vermells\");\r\n    assertCorrect(\"-Maleït ximple! -va exclamar Tom\");\r\n    assertCorrect(\"amb alguns motllurats de guixeria classicitzants\");\r\n    assertCorrect(\"amb alguns motllurats de guixeria classicitzant\");\r\n    assertCorrect(\"amb alguns motllurats de guixeria retallats\");\r\n    assertCorrect(\"amb alguns motllurats de guixeria retallada\");\r\n    assertCorrect(\"a confondre en un mateix amor amics i enemics\");\r\n    assertCorrect(\"En l'eix esquerra-dreta.\");\r\n    assertCorrect(\"podrien també esdevenir correlacionades\"); \r\n    assertCorrect(\"Cada polinomi en forma expandida\");\r\n    assertCorrect(\"El 1967 una partida de liberals rebel al govern\");\r\n    assertCorrect(\"El 1640 una junta de nobles reunida a Lisboa\");\r\n    assertCorrect(\"amb una expressió de dolor i de por barrejats.\");\r\n    assertCorrect(\"un tram més tou, amb morfologia i color diferents.\");\r\n    assertCorrect(\"Especialment en matèria de policia i finançament autonòmics\");\r\n    assertCorrect(\"Especialment en matèria de policia i justícia autonòmiques\");\r\n    assertCorrect(\"l'obra de Boeci amb espontaneïtat i vigor notables\");\r\n    assertCorrect(\"tenen en canvi altres parts de llur estructura certament molt anormals:\");\r\n    assertCorrect(\"constitueix l'única comunitat autònoma amb menys aturats\");\r\n    assertCorrect(\"durant tot l'any, i del sud-est, més notoris a la primavera\");\r\n    assertCorrect(\"amb la veu i el posat cada cop més agressius\");\r\n    assertCorrect(\"l'experiència sensitiva i la raó, degudament combinades.\");\r\n    assertCorrect(\"a la infermeria, d'allò més interessat\");\r\n    assertCorrect(\"el record, i absolutament fascinats\");\r\n    assertCorrect(\"no s'atorguen drets de visita tret que ho consenta el progenitor\");\r\n    assertCorrect(\"La meua filla viu amb mi la major part del temps\");\r\n    assertCorrect(\"que en l'actualitat viu a la ciutat de Santa Cruz\");\r\n    assertCorrect(\"són submarines i la nostra gent viu al fons del mar.\");\r\n    assertCorrect(\"la meitat mascles i la meitat femelles\");\r\n    assertCorrect(\"És força amarg\");\r\n    assertCorrect(\"Era poderós, força estrabul·lat\");\r\n    assertCorrect(\"Són força desconegudes\");\r\n    assertCorrect(\"Zeus, força cansat de tot\");\r\n    assertCorrect(\"un caràcter fix, per molt extraordinària que sigui la manera\");\r\n    assertCorrect(\"una quantitat copiosa de llavors olioses\");\r\n    assertCorrect(\"que criï sense variació, per molt lleugers que fossin\");\r\n    assertCorrect(\"Bernabé i Saule, un cop acomplerta la seva missió a Jerusalem\");\r\n    assertCorrect(\"Bernabé i Saule, un colp acomplerta la seva missió a Jerusalem\");\r\n    assertIncorrect(\"Bernabé i Saule, el colp acomplerta la seva missió a Jerusalem\");\r\n    assertCorrect(\"Bernabé i Saule, una vegada acomplert el seu viatge a Jerusalem\");\r\n    assertCorrect(\"Bernabé i Saule, una volta acomplert el seu viatge a Jerusalem\");\r\n    assertCorrect(\"he passat una nit i un dia sencers a la deriva\");\r\n    assertCorrect(\"L'olor dels teus perfums, més agradable que tots els bàlsams.\");\r\n    assertCorrect(\"La part superior esquerra\");\r\n    assertCorrect(\"I sí, la crisi serà llarga, molt llarga, potser eterna.\");\r\n    assertCorrect(\"El rei ha trobat l'excusa i l'explicació adequada.\");\r\n    //assertCorrect(\"té una manera de jugar aquestes gires tan femenina\");\r\n    assertCorrect(\"des de la tradicional divisió en dos regnes establida per Linnaeus\");\r\n    assertCorrect(\"aquestes activitats avui residuals donada ja la manca de territori\");\r\n    assertCorrect(\"instruments de càlcul basats en boles anomenats yupana.\");\r\n    assertCorrect(\"El rei ha trobat l'excusa i l'explicació adequades.\");\r\n    assertCorrect(\"Copa del món femenina.\");\r\n    assertCorrect(\"Batalla entre asteques i espanyols coneguda com la Nit Trista.\");\r\n    assertCorrect(\"És un informe sobre la cultura japonesa realitzat per encàrrec de l'exèrcit d'Estats Units.\");\r\n    assertCorrect(\"Les perspectives de futur immediat.\");\r\n    assertCorrect(\"Les perspectives de futur immediates.\");\r\n    assertCorrect(\"la tècnica i l'art cinematogràfiques.\");\r\n    assertCorrect(\"la tècnica i l'art cinematogràfic.\");\r\n    assertCorrect(\"la tècnica i l'art cinematogràfics.\");\r\n    assertCorrect(\"la tècnica i l'art cinematogràfica.\");\r\n    assertCorrect(\"Les perspectives i el futur immediats.\");\r\n    assertCorrect(\"Un punt de densitat i gravetat infinites.\");\r\n    assertCorrect(\"De la literatura i la cultura catalanes.\");\r\n    assertCorrect(\"Es fa segons regles de lectura constants i regulars.\");\r\n    assertCorrect(\"Les meitats dreta i esquerra de la mandíbula.\");\r\n    assertCorrect(\"Els períodes clàssic i medieval.\");\r\n    // assertCorrect(\"Els costats superior i laterals.\");\r\n    assertCorrect(\"En una molècula de glucosa i una de fructosa unides.\");\r\n    // Should be Incorrect, but it is impossible to detect\r\n    assertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevat\");\r\n    assertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevats\");\r\n    assertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevada\");\r\n    assertCorrect(\"La massa, el radi i la lluminositat llistats per ell.\");\r\n    assertCorrect(\"La massa, el radi i la lluminositat llistada per ell.\");\r\n    assertCorrect(\"L'origen de l'àbac està literalment perdut en el temps.\");\r\n    assertCorrect(\"L'origen ha esdevingut literalment perdut en el temps.\");\r\n    assertCorrect(\"En efecte, hi ha consideracions racistes, llavors força comunes\");\r\n    assertCorrect(\"el personatge canvià físicament: més alt i prim que el seu germà\");\r\n    assertCorrect(\"un a baix i un altre a dalt identificat amb el símbol\");\r\n    assertCorrect(\"un a baix i un altre a dalt identificats amb el símbol\");\r\n    assertCorrect(\"El tabaquisme és l'addicció al tabac provocada per components.\");\r\n    assertCorrect(\"El \\\"treball\\\" en qüestió, normalment associat a un lloc de treball pagat\");\r\n    assertCorrect(\"una organització paramilitar de protecció civil típicament catalana\");\r\n    assertCorrect(\"un Do dues octaves més alt que l'anterior\");\r\n    assertCorrect(\"són pràcticament dos graus més baixes\");\r\n    assertCorrect(\"és unes vint vegades més gran que l'espermatozou.\");\r\n    assertCorrect(\"és unes 20 vegades més gran que l'espermatozou.\");\r\n    assertCorrect(\"eren quatre vegades més alts\");\r\n    assertCorrect(\"eren uns fets cada volta més inexplicables\");\r\n    assertCorrect(\"El castell està totalment en ruïnes i completament cobert de vegetació.\");\r\n    assertCorrect(\"han estat tant elogiades per la crítica teatral, com polèmiques\");\r\n    assertCorrect(\"Del segle XVIII però reconstruïda recentment\");\r\n    // assertCorrect(\"vivien a la casa paterna, mig confosos entre els criats.\");\r\n    assertCorrect(\"La indústria, tradicionalment dedicada al tèxtil i ara molt diversificada,\");\r\n    assertCorrect(\"oficialment la comarca[2] del Moianès, molt reivindicada\");\r\n    assertCorrect(\"En l'actualitat està del tot despoblada de residència permanent.\");\r\n    assertCorrect(\"amb la terra repartida entre diversos propietaris, bé que encara poc poblada\");\r\n    assertCorrect(\"al capdamunt de les Costes d'en Quintanes, sota mateix del Turó\");\r\n    assertCorrect(\"el Moviment per l\u2019Autodeterminació cors\");\r\n    assertCorrect(\"amb una taula de logaritmes davant meu.\");\r\n    assertCorrect(\"la denominació valencià per a la llengua pròpia\");\r\n    assertCorrect(\"Com més petita és l'obertura de diafragma, més grans són la profunditat de camp i la profunditat\");\r\n    assertCorrect(\"es movien mitjançant filferros, tot projectant ombres\");\r\n    assertCorrect(\"sota les grans persianes de color verd recalcades\");\r\n    assertCorrect(\"que seria en pocs anys força hegemònica a Catalunya\");\r\n    assertCorrect(\"Era un home força misteriós\");\r\n\r\n    // errors:\r\n    assertIncorrect(\"és tan ple d'urgències, tan ple de desitjós materials\");\r\n    assertIncorrect(\"Tesis doctoral\");\r\n    assertIncorrect(\"vaig posar mans a l'obra: a dins de casa mateix vaig cavar un sot per enterrar\");\r\n    assertIncorrect(\"amb alguns motllurats de guixeria retallat\");\r\n    assertIncorrect(\"amb alguns motllurats de guixeria retallades\");\r\n    assertIncorrect(\"Aquella va ser la seva peça mestre.\");\r\n    assertIncorrect(\"La petició de tramitar el cas per lesions dolosa.\");\r\n    // policia i justícia són més usualment femenins, encara que poden ser masculins\r\n    assertIncorrect(\"Especialment en matèria de policia i justícia autonòmics\");\r\n    assertIncorrect(\"amb rigor i honor barrejades.\");\r\n    assertIncorrect(\"hi ha hagut una certa recuperació (3,2%), efecte en part de la descongestió madrilenya cap a les províncies limítrofs de Toledo i Guadalajara.\");\r\n    assertIncorrect(\"Son molt boniques\");\r\n    //assertIncorrect(\"La casa destrossat\"); ambigu\r\n    assertIncorrect(\"pantalons curt o llargs\");\r\n    assertIncorrect(\"sota les grans persianes de color verd recalcada\");\r\n    assertIncorrect(\"sota les grans persianes de color verd recalcat\");\r\n    assertIncorrect(\"sota les grans persianes de color verd recalcats\");\r\n    assertIncorrect(\"Són unes corbes de llum complexos.\");\r\n    assertIncorrect(\"fets moltes vegades inexplicable.\");\r\n    assertIncorrect(\"eren uns fets cada volta més inexplicable\");\r\n    assertIncorrect(\"Unes explotacions ramaderes porcina.\");\r\n    // assertIncorrect(\"amb un rendiment del 5,62%, més alta que el 5,44%\");\r\n    // assertIncorrect(\"un a baix i un altre a dalt identificada amb el símbol\");\r\n    // assertIncorrect(\"un a baix i un altre a dalt identificades amb el símbol\");\r\n    // assertIncorrect(\"En efecte, hi ha consideracions, llavors força comuns\");\r\n    assertIncorrect(\"En efecte, hi ha consideracions llavors força comuns\");\r\n    // assertIncorrect(\"En efecte, hi ha consideracions racistes, llavors força comuns\");\r\n    assertIncorrect(\"amb una alineació impròpiament habituals\");\r\n    assertIncorrect(\"amb una alineació poc habituals\");\r\n    assertIncorrect(\"amb una alineació molt poc habituals\");\r\n    // assertIncorrect(\"Era un home força misteriosa\"); -> permet\r\n    // \"en pocs anys força hegemònica\"\r\n    assertIncorrect(\"Era un home força misteriosos\");\r\n    assertIncorrect(\"El rei ha trobat l'excusa perfecte.\");\r\n    assertIncorrect(\"El rei ha trobat l'excusa i l'explicació adequats.\");\r\n    assertIncorrect(\"El rei ha trobat l'excusa i l'explicació adequat.\");\r\n    assertIncorrect(\"Les perspectives de futur immediata.\");\r\n    assertIncorrect(\"Les perspectives de futur immediats.\");\r\n    assertIncorrect(\"la llengua i la cultura catalans.\");\r\n    assertIncorrect(\"En una molècula de glucosa i una de fructosa units.\");\r\n    assertIncorrect(\"Un punt de densitat i gravetat infinits.\");\r\n    assertIncorrect(\"Índex de desenvolupament humà i qualitat de vida elevades.\");\r\n    // Should be Incorrect, but it is impossible to detect\r\n    // assertIncorrect(\"Índex de desenvolupament humà i qualitat de vida elevat\");\r\n    assertIncorrect(\"La massa, el radi i la lluminositat llistat per ell.\");\r\n    assertIncorrect(\"La massa, el radi i la lluminositat llistades per ell.\");\r\n    \r\n  }","id":63290,"modified_method":"public void testRule() throws IOException {\r\n\r\n    // correct sentences:\r\n    \r\n    //de l'altra més neguitós\r\n    //per primera vegada documentat\r\n    //en alguns casos documentat\r\n    //en tot cas poc honesta\r\n    //amb la mirada de cadascun dels homes clavada en la de l'adversari\r\n    //de fer una torre o fortificació bo i al·legant que això\r\n    // a confondre en un mateix amor amics i enemics\r\n    // es van posar en camí proveïts de presents\r\n    /* d'una banda tossut i, de l'altra, del tot inepte\r\n     * principis mascle i femella de la foscor//els elements reproductors mascle\r\n     * i femella// les formigues mascle i femella\r\n     */\r\n    /*\r\n     * multiwords: en aparença, en essència,per essència, amb excés,en repòs,\r\n     * amb rapidesa, en algun grau, per molt de temps altres vegades estacionat,\r\n     * en molts casos subordinada?, era al principi instintiva, de moment\r\n     * imperfectament conegudes de llarg menys perfectes, és de totes passades\r\n     * exactament intermèdia, és, en conjunt, gairebé intermèdia en cert grau\r\n     * paral·lela en algun grau en grau lleuger menys distintes han estat de fet\r\n     * exterminades\r\n     */\r\n    // (en especial si hi ha un adverbi entremig: en algun grau més distintes\r\n    //assertCorrect(\"Es van somriure l'una a l'altra encara dretes, suades i panteixants,\");\r\n//    assertCorrect(\"una combinació de dos o més metalls obtinguda generalment\");\r\n    assertCorrect(\"les causes per primera vegada explicades\");\r\n    assertCorrect(\"per les causes explicades fa molt difícil\");\r\n    assertCorrect(\"a França mateix\");\r\n    assertCorrect(\"tenen moltes més dificultats\");\r\n    assertCorrect(\"l'endeutament que generà fou força elevat\");\r\n    assertCorrect(\"el text de més àmplia i persistent influència\");\r\n    assertCorrect(\"el text de més àmplia influència\");\r\n    assertCorrect(\"Ell i jo som una altra vegada partidaris del rei\"); \r\n    assertCorrect(\"despres de la revolta contra el poder pontifici iniciada a Bolonya\");\r\n    assertCorrect(\"-Així, ¿viatges sola? -va dir\");\r\n    assertCorrect(\"El riu passa engorjat en aquest sector \");\r\n    assertCorrect(\"i ronda amagat pels carrers\");\r\n    assertCorrect(\"Setmanari il·lustrat d'art, literatura i actualitats fundat a Barcelona\");\r\n    assertCorrect(\"Entitat oficial de crèdit a mitjà i llarg termini constituïda l'any 1920\");\r\n    assertCorrect(\"edificacions superposades d'època romana republicanes i imperials\");\r\n    assertCorrect(\"Fou un dels primers barris de barraques sorgit després del 1939\");\r\n    assertCorrect(\"i el premi a la investigació mèdica atorgat per la Funadació\");\r\n    assertCorrect(\"no arriben als 300 mm de pluja anuals\");\r\n    assertCorrect(\"un dibuix de colors vius d'un noi ben plantat i una noia preciosa drets\");\r\n    assertCorrect(\"de la captura i l'assassinat recents\");\r\n    assertCorrect(\"la captura i l'assassinat recents\"); //desambiguar \"la captura\"\r\n    assertCorrect(\"era la defensa i seguretat mútues\");\r\n    assertCorrect(\"la revolta contra el poder pontifici iniciada a Bolonya\"); //desambiguar \"la revolta\"\r\n    assertCorrect(\"donar estocades sense ordre ni concert mal dirigides\");\r\n    assertCorrect(\"trobarien un dels nanos mort de fred\");\r\n    assertCorrect(\"aquest text, el més antic de l'obra fins ara conegut\");\r\n    assertCorrect(\"va reaccionar, la molt astuta, així\");\r\n    assertCorrect(\"Són de barba i cabellera blanques\");\r\n    assertCorrect(\"per a dur a terme tota la lectura i escriptura requerides\");\r\n    assertCorrect(\"al camí va trobar una branca de roure sòlida\");\r\n    assertCorrect(\"Tesis doctorals\");\r\n    assertCorrect(\"Va veure una cara rosada i arrugada, una boca sense dents oberta\");\r\n    assertCorrect(\"la vista en el magnífic ocell de potes i bec vermells\");\r\n    assertCorrect(\"-Maleït ximple! -va exclamar Tom\");\r\n    assertCorrect(\"amb alguns motllurats de guixeria classicitzants\");\r\n    assertCorrect(\"amb alguns motllurats de guixeria classicitzant\");\r\n    assertCorrect(\"amb alguns motllurats de guixeria retallats\");\r\n    assertCorrect(\"amb alguns motllurats de guixeria retallada\");\r\n    assertCorrect(\"a confondre en un mateix amor amics i enemics\");\r\n    assertCorrect(\"En l'eix esquerra-dreta.\");\r\n    assertCorrect(\"podrien també esdevenir correlacionades\"); \r\n    assertCorrect(\"Cada polinomi en forma expandida\");\r\n    assertCorrect(\"El 1967 una partida de liberals rebel al govern\");\r\n    assertCorrect(\"El 1640 una junta de nobles reunida a Lisboa\");\r\n    assertCorrect(\"amb una expressió de dolor i de por barrejats.\");\r\n    assertCorrect(\"un tram més tou, amb morfologia i color diferents.\");\r\n    assertCorrect(\"Especialment en matèria de policia i finançament autonòmics\");\r\n    assertCorrect(\"Especialment en matèria de policia i justícia autonòmiques\");\r\n    assertCorrect(\"l'obra de Boeci amb espontaneïtat i vigor notables\");\r\n    assertCorrect(\"tenen en canvi altres parts de llur estructura certament molt anormals:\");\r\n    assertCorrect(\"constitueix l'única comunitat autònoma amb menys aturats\");\r\n    assertCorrect(\"durant tot l'any, i del sud-est, més notoris a la primavera\");\r\n    assertCorrect(\"amb la veu i el posat cada cop més agressius\");\r\n    assertCorrect(\"l'experiència sensitiva i la raó, degudament combinades.\");\r\n    assertCorrect(\"a la infermeria, d'allò més interessat\");\r\n    assertCorrect(\"el record, i absolutament fascinats\");\r\n    assertCorrect(\"no s'atorguen drets de visita tret que ho consenta el progenitor\");\r\n    assertCorrect(\"La meua filla viu amb mi la major part del temps\");\r\n    assertCorrect(\"que en l'actualitat viu a la ciutat de Santa Cruz\");\r\n    assertCorrect(\"són submarines i la nostra gent viu al fons del mar.\");\r\n    assertCorrect(\"la meitat mascles i la meitat femelles\");\r\n    assertCorrect(\"És força amarg\");\r\n    assertCorrect(\"Era poderós, força estrabul·lat\");\r\n    assertCorrect(\"Són força desconegudes\");\r\n    assertCorrect(\"Zeus, força cansat de tot\");\r\n    assertCorrect(\"un caràcter fix, per molt extraordinària que sigui la manera\");\r\n    assertCorrect(\"una quantitat copiosa de llavors olioses\");\r\n    assertCorrect(\"que criï sense variació, per molt lleugers que fossin\");\r\n    assertCorrect(\"Bernabé i Saule, un cop acomplerta la seva missió a Jerusalem\");\r\n    assertCorrect(\"Bernabé i Saule, un colp acomplerta la seva missió a Jerusalem\");\r\n    assertIncorrect(\"Bernabé i Saule, el colp acomplerta la seva missió a Jerusalem\");\r\n    assertCorrect(\"Bernabé i Saule, una vegada acomplert el seu viatge a Jerusalem\");\r\n    assertCorrect(\"Bernabé i Saule, una volta acomplert el seu viatge a Jerusalem\");\r\n    assertCorrect(\"he passat una nit i un dia sencers a la deriva\");\r\n    assertCorrect(\"L'olor dels teus perfums, més agradable que tots els bàlsams.\");\r\n    assertCorrect(\"La part superior esquerra\");\r\n    assertCorrect(\"I sí, la crisi serà llarga, molt llarga, potser eterna.\");\r\n    assertCorrect(\"El rei ha trobat l'excusa i l'explicació adequada.\");\r\n    //assertCorrect(\"té una manera de jugar aquestes gires tan femenina\");\r\n    assertCorrect(\"des de la tradicional divisió en dos regnes establida per Linnaeus\");\r\n    assertCorrect(\"aquestes activitats avui residuals donada ja la manca de territori\");\r\n    assertCorrect(\"instruments de càlcul basats en boles anomenats yupana.\");\r\n    assertCorrect(\"El rei ha trobat l'excusa i l'explicació adequades.\");\r\n    assertCorrect(\"Copa del món femenina.\");\r\n    assertCorrect(\"Batalla entre asteques i espanyols coneguda com la Nit Trista.\");\r\n    assertCorrect(\"És un informe sobre la cultura japonesa realitzat per encàrrec de l'exèrcit d'Estats Units.\");\r\n    assertCorrect(\"Les perspectives de futur immediat.\");\r\n    assertCorrect(\"Les perspectives de futur immediates.\");\r\n    assertCorrect(\"la tècnica i l'art cinematogràfiques.\");\r\n    assertCorrect(\"la tècnica i l'art cinematogràfic.\");\r\n    assertCorrect(\"la tècnica i l'art cinematogràfics.\");\r\n    assertCorrect(\"la tècnica i l'art cinematogràfica.\");\r\n    assertCorrect(\"Les perspectives i el futur immediats.\");\r\n    assertCorrect(\"Un punt de densitat i gravetat infinites.\");\r\n    assertCorrect(\"De la literatura i la cultura catalanes.\");\r\n    assertCorrect(\"Es fa segons regles de lectura constants i regulars.\");\r\n    assertCorrect(\"Les meitats dreta i esquerra de la mandíbula.\");\r\n    assertCorrect(\"Els períodes clàssic i medieval.\");\r\n    // assertCorrect(\"Els costats superior i laterals.\");\r\n    assertCorrect(\"En una molècula de glucosa i una de fructosa unides.\");\r\n    // Should be Incorrect, but it is impossible to detect\r\n    assertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevat\");\r\n    assertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevats\");\r\n    assertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevada\");\r\n    assertCorrect(\"La massa, el radi i la lluminositat llistats per ell.\");\r\n    assertCorrect(\"La massa, el radi i la lluminositat llistada per ell.\");\r\n    assertCorrect(\"L'origen de l'àbac està literalment perdut en el temps.\");\r\n    assertCorrect(\"L'origen ha esdevingut literalment perdut en el temps.\");\r\n    assertCorrect(\"En efecte, hi ha consideracions racistes, llavors força comunes\");\r\n    assertCorrect(\"el personatge canvià físicament: més alt i prim que el seu germà\");\r\n    assertCorrect(\"un a baix i un altre a dalt identificat amb el símbol\");\r\n    assertCorrect(\"un a baix i un altre a dalt identificats amb el símbol\");\r\n    assertCorrect(\"El tabaquisme és l'addicció al tabac provocada per components.\");\r\n    assertCorrect(\"El \\\"treball\\\" en qüestió, normalment associat a un lloc de treball pagat\");\r\n    assertCorrect(\"una organització paramilitar de protecció civil típicament catalana\");\r\n    assertCorrect(\"un Do dues octaves més alt que l'anterior\");\r\n    assertCorrect(\"són pràcticament dos graus més baixes\");\r\n    assertCorrect(\"és unes vint vegades més gran que l'espermatozou.\");\r\n    assertCorrect(\"és unes 20 vegades més gran que l'espermatozou.\");\r\n    assertCorrect(\"eren quatre vegades més alts\");\r\n    assertCorrect(\"eren uns fets cada volta més inexplicables\");\r\n    assertCorrect(\"El castell està totalment en ruïnes i completament cobert de vegetació.\");\r\n    assertCorrect(\"han estat tant elogiades per la crítica teatral, com polèmiques\");\r\n    assertCorrect(\"Del segle XVIII però reconstruïda recentment\");\r\n    // assertCorrect(\"vivien a la casa paterna, mig confosos entre els criats.\");\r\n    assertCorrect(\"La indústria, tradicionalment dedicada al tèxtil i ara molt diversificada,\");\r\n    assertCorrect(\"oficialment la comarca[2] del Moianès, molt reivindicada\");\r\n    assertCorrect(\"En l'actualitat està del tot despoblada de residència permanent.\");\r\n    assertCorrect(\"amb la terra repartida entre diversos propietaris, bé que encara poc poblada\");\r\n    assertCorrect(\"al capdamunt de les Costes d'en Quintanes, sota mateix del Turó\");\r\n    assertCorrect(\"el Moviment per l\u2019Autodeterminació cors\");\r\n    assertCorrect(\"amb una taula de logaritmes davant meu.\");\r\n    assertCorrect(\"la denominació valencià per a la llengua pròpia\");\r\n    assertCorrect(\"Com més petita és l'obertura de diafragma, més grans són la profunditat de camp i la profunditat\");\r\n    assertCorrect(\"es movien mitjançant filferros, tot projectant ombres\");\r\n    assertCorrect(\"sota les grans persianes de color verd recalcades\");\r\n    assertCorrect(\"que seria en pocs anys força hegemònica a Catalunya\");\r\n    assertCorrect(\"Era un home força misteriós\");\r\n\r\n    // errors:\r\n    assertIncorrect(\"França mateix ho necessita.\");\r\n    assertIncorrect(\"recull de llegendes i cançons populars en part inventats per ell\");\r\n    assertIncorrect(\"amb dos conjunts territorial diferents entre si\");\r\n    assertIncorrect(\"per mitjà de gàmetes haploides obtingudes per meiosi\");\r\n    assertIncorrect(\"és tan ple d'urgències, tan ple de desitjós materials\");\r\n    assertIncorrect(\"Tesis doctoral\");\r\n    assertIncorrect(\"vaig posar mans a l'obra: a dins de casa mateix vaig cavar un sot per enterrar\");\r\n    assertIncorrect(\"amb alguns motllurats de guixeria retallat\");\r\n    assertIncorrect(\"amb alguns motllurats de guixeria retallades\");\r\n    assertIncorrect(\"Aquella va ser la seva peça mestre.\");\r\n    assertIncorrect(\"La petició de tramitar el cas per lesions dolosa.\");\r\n    // policia i justícia són més usualment femenins, encara que poden ser masculins\r\n    assertIncorrect(\"Especialment en matèria de policia i justícia autonòmics\");\r\n    assertIncorrect(\"amb rigor i honor barrejades.\");\r\n    assertIncorrect(\"hi ha hagut una certa recuperació (3,2%), efecte en part de la descongestió madrilenya cap a les províncies limítrofs de Toledo i Guadalajara.\");\r\n    assertIncorrect(\"Son molt boniques\");\r\n    //assertIncorrect(\"La casa destrossat\"); ambigu\r\n    assertIncorrect(\"pantalons curt o llargs\");\r\n    assertIncorrect(\"sota les grans persianes de color verd recalcada\");\r\n    assertIncorrect(\"sota les grans persianes de color verd recalcat\");\r\n    assertIncorrect(\"sota les grans persianes de color verd recalcats\");\r\n    assertIncorrect(\"Són unes corbes de llum complexos.\");\r\n    assertIncorrect(\"fets moltes vegades inexplicable.\");\r\n    assertIncorrect(\"eren uns fets cada volta més inexplicable\");\r\n    assertIncorrect(\"Unes explotacions ramaderes porcina.\");\r\n    // assertIncorrect(\"amb un rendiment del 5,62%, més alta que el 5,44%\");\r\n    // assertIncorrect(\"un a baix i un altre a dalt identificada amb el símbol\");\r\n    // assertIncorrect(\"un a baix i un altre a dalt identificades amb el símbol\");\r\n    // assertIncorrect(\"En efecte, hi ha consideracions, llavors força comuns\");\r\n    assertIncorrect(\"En efecte, hi ha consideracions llavors força comuns\");\r\n    // assertIncorrect(\"En efecte, hi ha consideracions racistes, llavors força comuns\");\r\n    assertIncorrect(\"amb una alineació impròpiament habituals\");\r\n    assertIncorrect(\"amb una alineació poc habituals\");\r\n    assertIncorrect(\"amb una alineació molt poc habituals\");\r\n    // assertIncorrect(\"Era un home força misteriosa\"); -> permet\r\n    // \"en pocs anys força hegemònica\"\r\n    assertIncorrect(\"Era un home força misteriosos\");\r\n    assertIncorrect(\"El rei ha trobat l'excusa perfecte.\");\r\n    assertIncorrect(\"El rei ha trobat l'excusa i l'explicació adequats.\");\r\n    assertIncorrect(\"El rei ha trobat l'excusa i l'explicació adequat.\");\r\n    assertIncorrect(\"Les perspectives de futur immediata.\");\r\n    assertIncorrect(\"Les perspectives de futur immediats.\");\r\n    assertIncorrect(\"la llengua i la cultura catalans.\");\r\n    assertIncorrect(\"En una molècula de glucosa i una de fructosa units.\");\r\n    assertIncorrect(\"Un punt de densitat i gravetat infinits.\");\r\n    assertIncorrect(\"Índex de desenvolupament humà i qualitat de vida elevades.\");\r\n    // Should be Incorrect, but it is impossible to detect\r\n    // assertIncorrect(\"Índex de desenvolupament humà i qualitat de vida elevat\");\r\n    assertIncorrect(\"La massa, el radi i la lluminositat llistat per ell.\");\r\n    assertIncorrect(\"La massa, el radi i la lluminositat llistades per ell.\");\r\n    \r\n  }","commit_id":"218701dd7d5eb74b6231f57d85116844c4a60f0e","url":"https://github.com/languagetool-org/languagetool"},{"original_method":"private boolean keepCounting(AnalyzedTokenReadings aTr) {\n    // stop searching if there is some of these combinations:\n    // adverb+comma, adverb+conjunction, comma+conjunction,\n    // punctuation+punctuation\n    if ((adverbAppeared && conjunctionAppeared)\n        || (adverbAppeared && punctuationAppeared)\n        || (conjunctionAppeared && punctuationAppeared)\n        || (punctuationAppeared && matchPostagRegexp(aTr, PUNTUACIO))) {\n      return false;\n    }\n    return (matchPostagRegexp(aTr, KEEP_COUNT)\n        || matchRegexp(aTr.getToken(), KEEP_COUNT2) || matchPostagRegexp(aTr,\n          ADVERBIS_ACCEPTATS))\n        && !matchRegexp(aTr.getToken(), STOP_COUNT)\n        && !matchPostagRegexp(aTr, VERB);\n  }","id":63291,"modified_method":"private boolean keepCounting(AnalyzedTokenReadings aTr) {\n    // stop searching if there is some of these combinations:\n    // adverb+comma, adverb+conjunction, comma+conjunction,\n    // punctuation+punctuation\n    if ((adverbAppeared && conjunctionAppeared)\n        || (adverbAppeared && punctuationAppeared)\n        || (conjunctionAppeared && punctuationAppeared)\n        || (punctuationAppeared && matchPostagRegexp(aTr, PUNTUACIO))) {\n      return false;\n    }\n    return (matchPostagRegexp(aTr, KEEP_COUNT)\n        || matchRegexp(aTr.getToken(), KEEP_COUNT2) || matchPostagRegexp(aTr,\n          ADVERBIS_ACCEPTATS))\n        && !matchRegexp(aTr.getToken(), STOP_COUNT) \n        && !matchPostagRegexp(aTr, GV);\n  }","commit_id":"1547edbecfdeff33a69654b318320912aaceb54c","url":"https://github.com/languagetool-org/languagetool"},{"original_method":"@Override\n  public RuleMatch[] match(final AnalyzedSentence sentence) {\n    final List<RuleMatch> ruleMatches = new ArrayList<>();\n    final AnalyzedTokenReadings[] tokens = sentence\n        .getTokensWithoutWhitespace();\n    // ignoring token 0, i.e. SENT_START\n    goToNextToken: for (int i = 1; i < tokens.length; i++) {\n      if (matchPostagRegexp(tokens[i], ADJECTIU)\n          && !matchPostagRegexp(tokens[i], CONCORDA)\n          && !matchPostagRegexp(tokens[i], VERB)) {\n        final String token = tokens[i].getToken();\n        final String prevToken = tokens[i - 1].getToken();\n        String prevPrevToken = \"\";\n        if (i > 2) {\n          prevPrevToken = tokens[i - 2].getToken();\n        }\n        String nextToken = \"\";\n        if (i < tokens.length - 1) {\n          nextToken = tokens[i + 1].getToken();\n        }\n        int j;\n        // boolean adjectiveAgrees = false;\n        // boolean theRuleMaches = false;\n        // boolean isException = false;\n        boolean isPlural = true;\n        boolean isPrevNoun = false;\n        Pattern substPattern = null;\n        Pattern gnPattern = null;\n        Pattern adjPattern = null;\n        Matcher isUpperCase = UPPERCASE.matcher(token);\n\n        // Some exceptions\n        // per molt lleuger\n        if (prevPrevToken.equals(\"per\") && prevToken.equals(\"molt\")) {\n          continue goToNextToken;\n        }\n        // esquerra-dreta\n        if (i < tokens.length - 2 && token.equalsIgnoreCase(\"esquerra\")\n            && (nextToken.equals(\"-\") || nextToken.equals(\"/\"))\n            && tokens[i + 2].getToken().equalsIgnoreCase(\"dreta\")) {\n          continue goToNextToken;\n        }\n\n        // Counts nouns and determiners before the adjectives.\n        // Takes care of acceptable combinations.\n        int maxLevels = 4;\n        int[] cNt = new int[maxLevels];\n        int[] cNMS = new int[maxLevels];\n        int[] cNFS = new int[maxLevels];\n        int[] cNMP = new int[maxLevels];\n        int[] cNFP = new int[maxLevels];\n        int[] cNCS = new int[maxLevels];\n        int[] cNCP = new int[maxLevels];\n        int[] cDMS = new int[maxLevels];\n        int[] cDFS = new int[maxLevels];\n        int[] cDMP = new int[maxLevels];\n        int[] cDFP = new int[maxLevels];\n        int[] cN = new int[maxLevels];\n        int[] cD = new int[maxLevels];\n        /*\n         * for (j = 0; j < maxLevels; j++) { cNt[j] = 0; cNMS[j] = 0; cNFS[j] =\n         * 0; cNMP[j] = 0; cNFP[j] = 0; cDMS[j] = 0; cDFS[j] = 0; cDMP[j] = 0;\n         * cDFP[j] = 0; cN[j] = 0; cD[j] = 0; }\n         */\n\n        int level = 0;\n        j = 1;\n        // boolean keepCounting = true;\n        initializeApparitions();\n        while (i - j > 0 && keepCounting(tokens[i - j]) && level < maxLevels) {\n          if (!isPrevNoun && !matchPostagRegexp(tokens[i - j], VERB)) {\n            if (matchPostagRegexp(tokens[i - j], NOM) || (\n            // adjectiu o participi sense nom, però amb algun determinant davant\n                i - j - 1 > 0 && !matchPostagRegexp(tokens[i - j], NOM)\n                    && matchPostagRegexp(tokens[i - j], ADJECTIU) && matchPostagRegexp(\n                      tokens[i - j - 1], DET))) {\n              if (matchPostagRegexp(tokens[i - j], _GN_MS)) {\n                cNMS[level]++;\n              }\n              if (matchPostagRegexp(tokens[i - j], _GN_FS)) {\n                cNFS[level]++;\n              }\n              if (matchPostagRegexp(tokens[i - j], _GN_MP)) {\n                cNMP[level]++;\n              }\n              if (matchPostagRegexp(tokens[i - j], _GN_FP)) {\n                cNFP[level]++;\n              }\n            }\n            if (!matchPostagRegexp(tokens[i - j], _GN_)) {\n              if (matchPostagRegexp(tokens[i - j], NOM_MS)) {\n                cNMS[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_FS)) {\n                cNFS[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_MP)) {\n                cNMP[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_FP)) {\n                cNFP[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_CS)) {\n                cNCS[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_CP)) {\n                cNCP[level]++;\n              }\n            }\n          }\n          // avoid two consecutive nouns\n          if (matchPostagRegexp(tokens[i - j], NOM)\n              && !matchPostagRegexp(tokens[i - j], VERB)) {\n            cNt[level]++;\n            isPrevNoun = true;\n            initializeApparitions();\n          } else {\n            isPrevNoun = false;\n          }\n\n          if (matchPostagRegexp(tokens[i - j], DET_CS)) {\n            if (matchPostagRegexp(tokens[i - j + 1], NOM_MS)) {\n              cDMS[level]++;\n            }\n            if (matchPostagRegexp(tokens[i - j + 1], NOM_FS)) {\n              cDFS[level]++;\n            }\n          }\n          if (!matchPostagRegexp(tokens[i - j], ADVERBI)) {\n            if (matchPostagRegexp(tokens[i - j], DET_MS)) {\n              cDMS[level]++;\n            }\n            if (matchPostagRegexp(tokens[i - j], DET_FS)) {\n              cDFS[level]++;\n            }\n            if (matchPostagRegexp(tokens[i - j], DET_MP)) {\n              cDMP[level]++;\n            }\n            if (matchPostagRegexp(tokens[i - j], DET_FP)) {\n              cDFP[level]++;\n            }\n          }\n          if (i - j > 0) {\n            if (matchRegexp(tokens[i - j].getToken(), PREPOSICIO_CANVI_NIVELL)\n                && !matchRegexp(tokens[i - j - 1].getToken(), COORDINACIO_IONI)\n                && !matchPostagRegexp(tokens[i - j + 1], ADVERBI)) {\n              level++;\n            }\n          }\n          if (level > 0\n              && matchRegexp(tokens[i - j].getToken(), COORDINACIO_IONI)) {\n            int k = 1;\n            while (k < 4\n                && i - j - k > 0\n                && (matchPostagRegexp(tokens[i - j - k], KEEP_COUNT)\n                    || matchRegexp(tokens[i - j - k].getToken(), KEEP_COUNT2) || matchPostagRegexp(\n                      tokens[i - j - k], ADVERBIS_ACCEPTATS))\n                && (!matchRegexp(tokens[i - j - k].getToken(), STOP_COUNT) && !matchPostagRegexp(\n                    tokens[i - j - k], VERB))) {\n              if (matchPostagRegexp(tokens[i - j - k], PREPOSICIONS)) {\n                j = j + k;\n                break;\n              }\n              k++;\n            }\n          }\n          updateApparitions(tokens[i - j]);\n          j++;\n        }\n        level++;\n        if (level > maxLevels) {\n          level = maxLevels;\n        }\n        j = 0;\n        int cNtotal = 0;\n        int cDtotal = 0;\n        while (j < level) {\n          cN[j] = cNMS[j] + cNFS[j] + cNMP[j] + cNFP[j] + cNCS[j] + cNCP[j];\n          cD[j] = cDMS[j] + cDFS[j] + cDMP[j] + cDFP[j];\n          cNtotal += cN[j];\n          cDtotal += cD[j];\n\n          // exceptions: adjective is plural and there are several nouns before\n          if (matchPostagRegexp(tokens[i], ADJECTIU_MP)\n              && (cN[j] > 1 || cD[j] > 1)\n              && (cNMS[j] + cNMP[j] + cNCS[j] + cNCP[j] + cDMS[j] + cDMP[j]) > 0\n              && (cNFS[j] + cNFP[j] <= cNt[j])) {\n            continue goToNextToken;\n          }\n          if (matchPostagRegexp(tokens[i], ADJECTIU_FP)\n              && (cN[j] > 1 || cD[j] > 1)\n              && ((cNMS[j] + cNMP[j] + cDMS[j] + cDMP[j]) == 0 || (cNt[j] > 0 && cNFS[j]\n                  + cNFP[j] >= cNt[j]))) {\n            continue goToNextToken;\n          }\n          // Adjective can't be singular\n          if (cN[j] + cD[j] > 0) { // && level>1\n            isPlural = isPlural && cD[j] > 1; // cN[j]>1\n          }\n          j++;\n        }\n        // there is no noun, (no determinant --> && cDtotal==0)\n        if (cNtotal == 0 && cDtotal == 0) { \n          continue goToNextToken;\n        }\n\n        // exception: noun (or adj) plural + two or more adjectives\n        if (i < tokens.length - 2) {\n          Matcher pCoordina = COORDINACIO.matcher(nextToken);\n          if (pCoordina.matches()) {\n            if (((matchPostagRegexp(tokens[i - 1], NOM_MP) || matchPostagRegexp(\n                tokens[i - 1], ADJECTIU_MP))\n                && matchPostagRegexp(tokens[i], ADJECTIU_MS) && matchPostagRegexp(\n                  tokens[i + 2], ADJECTIU_MS))\n                || ((matchPostagRegexp(tokens[i - 1], NOM_MP) || matchPostagRegexp(\n                    tokens[i - 1], ADJECTIU_MP))\n                    && matchPostagRegexp(tokens[i], ADJECTIU_MP) && matchPostagRegexp(\n                      tokens[i + 2], ADJECTIU_MP))\n                || ((matchPostagRegexp(tokens[i - 1], NOM_FP) || matchPostagRegexp(\n                    tokens[i - 1], ADJECTIU_FP))\n                    && matchPostagRegexp(tokens[i], ADJECTIU_FS) && matchPostagRegexp(\n                      tokens[i + 2], ADJECTIU_FS))\n                || ((matchPostagRegexp(tokens[i - 1], NOM_FP) || matchPostagRegexp(\n                    tokens[i - 1], ADJECTIU_FP))\n                    && matchPostagRegexp(tokens[i], ADJECTIU_FP) && matchPostagRegexp(\n                      tokens[i + 2], ADJECTIU_FP))) {\n              continue goToNextToken;\n            }\n          }\n        }\n        // exception: termes, paraules, etc.\n        if (matchRegexp(prevToken, EXCEPCIONS_PREVIA)) {\n          continue goToNextToken;\n        }\n        // exceptions: la meitat mascles\n        if (matchPostagRegexp(tokens[i - 1], EXCEPCIONS_PREVIA_POSTAG)) {\n          continue goToNextToken;\n        }\n        // exceptions: llevat de, tret de, majúsucula inicial\n        if ((((token.equals(\"tret\") || token.equals(\"llevat\")) && (nextToken\n            .equals(\"de\") || nextToken.equals(\"que\")))\n            || token.equals(\"primer\")\n            || token.equals(\"junts\")\n            || token.equals(\"plegats\") || isUpperCase.matches())) {\n          continue goToNextToken;\n        }\n        // exceptions: atès, atesos..., donat, donats...\n        if (matchRegexp(token, EXCEPCIONS_PARTICIPI)) {\n          continue goToNextToken;\n        }\n        // exceptions: un cop, una volta, una vegada...\n        if (((prevPrevToken.equals(\"un\") && (prevToken.equals(\"cop\") || prevToken\n            .equals(\"colp\"))) || (prevPrevToken.equals(\"una\") && (prevToken\n            .equals(\"volta\") || prevToken.equals(\"vegada\"))))) {\n          continue goToNextToken;\n        }\n        // exceptions: segur que, just a\n        if (i < tokens.length - 1) {\n          if ((token.equals(\"segur\") || token.equals(\"major\") || token\n              .equals(\"menor\")) && nextToken.equals(\"que\")) {\n            continue goToNextToken;\n          }\n        }\n        // exceptions: sota mateix, dins mateix,\n        if (token.equals(\"mateix\") && matchPostagRegexp(tokens[i - 1], ADVERBI)) {\n          continue goToNextToken;\n        }\n\n        // patterns according to the analyzed adjective \n        if (matchPostagRegexp(tokens[i], ADJECTIU_CS)) {\n          substPattern = GN_CS;\n          adjPattern = ADJECTIU_S;\n          gnPattern = _GN_CS;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_CP)) {\n          substPattern = GN_CP;\n          adjPattern = ADJECTIU_P;\n          gnPattern = _GN_CP;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_MS)) {\n          substPattern = GN_MS;\n          adjPattern = ADJECTIU_MS;\n          gnPattern = _GN_MS;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_FS)) {\n          substPattern = GN_FS;\n          adjPattern = ADJECTIU_FS;\n          gnPattern = _GN_FS;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_MP)) {\n          substPattern = GN_MP;\n          adjPattern = ADJECTIU_MP;\n          gnPattern = _GN_MP;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_FP)) {\n          substPattern = GN_FP;\n          adjPattern = ADJECTIU_FP;\n          gnPattern = _GN_FP;\n        }\n\n        if (substPattern == null) {\n          continue goToNextToken;\n        }\n\n        // combinations Det/Nom + adv (1,2..) + adj. \n        // If there is agreement, the rule doesn't match\n        j = 1;\n        boolean keepCount = true;\n        while (i - j > 0 && keepCount) {\n          if (gnPattern != null && matchPostagRegexp(tokens[i - j], NOM_DET)\n              && matchPostagRegexp(tokens[i - j], gnPattern)) {\n            continue goToNextToken; // there is a previous agreeing noun\n          } else if (!matchPostagRegexp(tokens[i - j], _GN_)\n              && matchPostagRegexp(tokens[i - j], substPattern)) {\n            continue goToNextToken; // there is a previous agreeing noun\n          }\n          keepCount = !matchPostagRegexp(tokens[i - j], NOM_DET);\n          j++;\n        }\n\n        // Necessary condition: previous token is a non-agreeing noun\n        // or it is adjective or adverb (not preceded by verb)\n        // /*&& !matchPostagRegexp(tokens[i],NOM)*/\n        if (!(((matchPostagRegexp(tokens[i - 1], NOM) && !matchPostagRegexp(\n            tokens[i - 1], substPattern)) || (i > 2\n            && ((matchPostagRegexp(tokens[i - 1], ADJECTIU) && !matchPostagRegexp(\n                tokens[i - 1], adjPattern))\n                || matchPostagRegexp(tokens[i - 1], ADVERBIS_ACCEPTATS) || matchPostagRegexp(\n                  tokens[i - 1], LOC_ADV))\n            && !matchPostagRegexp(tokens[i - 2], VERB) && !matchPostagRegexp(\n              tokens[i - 3], VERB))))) {\n          continue goToNextToken;\n        }\n\n        // Adjective can't be singular. The rule matches\n        if (!(isPlural && matchPostagRegexp(tokens[i], ADJECTIU_S))) {\n          //look into previous words\n          j = 1;\n          initializeApparitions();\n          while (i - j > 0 && keepCounting(tokens[i - j])) {\n            if (gnPattern != null && matchPostagRegexp(tokens[i - j], NOM_ADJ)\n                && matchPostagRegexp(tokens[i - j], gnPattern)) {\n              continue goToNextToken; // there is a previous agreeing noun or adjective\n            // if there is no nominal group, it requires noun\n            } else if (!matchPostagRegexp(tokens[i - j], _GN_) \n                && matchPostagRegexp(tokens[i - j], substPattern)) {\n              continue goToNextToken; // there is a previous agreeing noun\n            }\n            updateApparitions(tokens[i - j]);\n            j++;\n          }\n        }\n\n        // The rule matches\n        final String msg = \"Reviseu la concordança de la paraula \\u00AB\"\n            + token + \"\\u00BB.\";\n        final RuleMatch ruleMatch = new RuleMatch(this,\n            tokens[i].getStartPos(), tokens[i].getStartPos() + token.length(),\n            msg, \"Reviseu la concordança.\");\n        ruleMatches.add(ruleMatch);\n      }\n    }\n    return toRuleMatchArray(ruleMatches);\n  }","id":63292,"modified_method":"@Override\n  public RuleMatch[] match(final AnalyzedSentence sentence) {\n    final List<RuleMatch> ruleMatches = new ArrayList<>();\n    final AnalyzedTokenReadings[] tokens = sentence\n        .getTokensWithoutWhitespace();\n    // ignoring token 0, i.e. SENT_START\n    goToNextToken: for (int i = 1; i < tokens.length; i++) {\n      if (matchPostagRegexp(tokens[i], ADJECTIU)\n          && !matchPostagRegexp(tokens[i], CONCORDA)\n          && !matchPostagRegexp(tokens[i], GV)) {\n        final String token = tokens[i].getToken();\n        final String prevToken = tokens[i - 1].getToken();\n        String prevPrevToken = \"\";\n        if (i > 2) {\n          prevPrevToken = tokens[i - 2].getToken();\n        }\n        String nextToken = \"\";\n        if (i < tokens.length - 1) {\n          nextToken = tokens[i + 1].getToken();\n        }\n        int j;\n        // boolean adjectiveAgrees = false;\n        // boolean theRuleMaches = false;\n        // boolean isException = false;\n        boolean isPlural = true;\n        boolean isPrevNoun = false;\n        Pattern substPattern = null;\n        Pattern gnPattern = null;\n        Pattern adjPattern = null;\n        Matcher isUpperCase = UPPERCASE.matcher(token);\n\n        // Some exceptions\n        // per molt lleuger\n        if (prevPrevToken.equals(\"per\") && prevToken.equals(\"molt\")) {\n          continue goToNextToken;\n        }\n        // esquerra-dreta\n        if (i < tokens.length - 2 && token.equalsIgnoreCase(\"esquerra\")\n            && (nextToken.equals(\"-\") || nextToken.equals(\"/\"))\n            && tokens[i + 2].getToken().equalsIgnoreCase(\"dreta\")) {\n          continue goToNextToken;\n        }\n\n        // Counts nouns and determiners before the adjectives.\n        // Takes care of acceptable combinations.\n        int maxLevels = 4;\n        int[] cNt = new int[maxLevels];\n        int[] cNMS = new int[maxLevels];\n        int[] cNFS = new int[maxLevels];\n        int[] cNMP = new int[maxLevels];\n        int[] cNFP = new int[maxLevels];\n        int[] cNCS = new int[maxLevels];\n        int[] cNCP = new int[maxLevels];\n        int[] cDMS = new int[maxLevels];\n        int[] cDFS = new int[maxLevels];\n        int[] cDMP = new int[maxLevels];\n        int[] cDFP = new int[maxLevels];\n        int[] cN = new int[maxLevels];\n        int[] cD = new int[maxLevels];\n        /*\n         * for (j = 0; j < maxLevels; j++) { cNt[j] = 0; cNMS[j] = 0; cNFS[j] =\n         * 0; cNMP[j] = 0; cNFP[j] = 0; cDMS[j] = 0; cDFS[j] = 0; cDMP[j] = 0;\n         * cDFP[j] = 0; cN[j] = 0; cD[j] = 0; }\n         */\n\n        int level = 0;\n        j = 1;\n        // boolean keepCounting = true;\n        initializeApparitions();\n        while (i - j > 0 && keepCounting(tokens[i - j]) && level < maxLevels) {\n          if (!isPrevNoun) {\n            if (matchPostagRegexp(tokens[i - j], NOM) || (\n            // adjectiu o participi sense nom, però amb algun determinant davant\n                i - j - 1 > 0 && !matchPostagRegexp(tokens[i - j], NOM)\n                    && matchPostagRegexp(tokens[i - j], ADJECTIU) \n                    && matchPostagRegexp(tokens[i - j - 1], DET))) {\n              if (matchPostagRegexp(tokens[i - j], _GN_MS)) {\n                cNMS[level]++;\n              }\n              if (matchPostagRegexp(tokens[i - j], _GN_FS)) {\n                cNFS[level]++;\n              }\n              if (matchPostagRegexp(tokens[i - j], _GN_MP)) {\n                cNMP[level]++;\n              }\n              if (matchPostagRegexp(tokens[i - j], _GN_FP)) {\n                cNFP[level]++;\n              }\n            }\n            if (!matchPostagRegexp(tokens[i - j], _GN_)) {\n              if (matchPostagRegexp(tokens[i - j], NOM_MS)) {\n                cNMS[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_FS)) {\n                cNFS[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_MP)) {\n                cNMP[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_FP)) {\n                cNFP[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_CS)) {\n                cNCS[level]++;\n              } else if (matchPostagRegexp(tokens[i - j], NOM_CP)) {\n                cNCP[level]++;\n              }\n            }\n          }\n          // avoid two consecutive nouns\n          if (matchPostagRegexp(tokens[i - j], NOM)) {\n            cNt[level]++;\n            isPrevNoun = true;\n            initializeApparitions();\n          } else {\n            isPrevNoun = false;\n          }\n\n          if (matchPostagRegexp(tokens[i - j], DET_CS)) {\n            if (matchPostagRegexp(tokens[i - j + 1], NOM_MS)) {\n              cDMS[level]++;\n            }\n            if (matchPostagRegexp(tokens[i - j + 1], NOM_FS)) {\n              cDFS[level]++;\n            }\n          }\n          if (!matchPostagRegexp(tokens[i - j], ADVERBI)) {\n            if (matchPostagRegexp(tokens[i - j], DET_MS)) {\n              cDMS[level]++;\n            }\n            if (matchPostagRegexp(tokens[i - j], DET_FS)) {\n              cDFS[level]++;\n            }\n            if (matchPostagRegexp(tokens[i - j], DET_MP)) {\n              cDMP[level]++;\n            }\n            if (matchPostagRegexp(tokens[i - j], DET_FP)) {\n              cDFP[level]++;\n            }\n          }\n          if (i - j > 0) {\n            if (matchRegexp(tokens[i - j].getToken(), PREPOSICIO_CANVI_NIVELL)\n                && !matchRegexp(tokens[i - j - 1].getToken(), COORDINACIO_IONI)\n                && !matchPostagRegexp(tokens[i - j + 1], ADVERBI)) {\n              level++;\n            }\n          }\n          if (level > 0\n              && matchRegexp(tokens[i - j].getToken(), COORDINACIO_IONI)) {\n            int k = 1;\n            while (k < 4\n                && i - j - k > 0\n                && (matchPostagRegexp(tokens[i - j - k], KEEP_COUNT)\n                    || matchRegexp(tokens[i - j - k].getToken(), KEEP_COUNT2) || matchPostagRegexp(\n                      tokens[i - j - k], ADVERBIS_ACCEPTATS))\n                && (!matchRegexp(tokens[i - j - k].getToken(), STOP_COUNT))) {\n              if (matchPostagRegexp(tokens[i - j - k], PREPOSICIONS)) {\n                j = j + k;\n                break;\n              }\n              k++;\n            }\n          }\n          updateApparitions(tokens[i - j]);\n          j++;\n        }\n        level++;\n        if (level > maxLevels) {\n          level = maxLevels;\n        }\n        j = 0;\n        int cNtotal = 0;\n        int cDtotal = 0;\n        while (j < level) {\n          cN[j] = cNMS[j] + cNFS[j] + cNMP[j] + cNFP[j] + cNCS[j] + cNCP[j];\n          cD[j] = cDMS[j] + cDFS[j] + cDMP[j] + cDFP[j];\n          cNtotal += cN[j];\n          cDtotal += cD[j];\n\n          // exceptions: adjective is plural and there are several nouns before\n          if (matchPostagRegexp(tokens[i], ADJECTIU_MP)\n              && (cN[j] > 1 || cD[j] > 1)\n              && (cNMS[j] + cNMP[j] + cNCS[j] + cNCP[j] + cDMS[j] + cDMP[j]) > 0\n              && (cNFS[j] + cNFP[j] <= cNt[j])) {\n            continue goToNextToken;\n          }\n          if (matchPostagRegexp(tokens[i], ADJECTIU_FP)\n              && (cN[j] > 1 || cD[j] > 1)\n              && ((cNMS[j] + cNMP[j] + cDMS[j] + cDMP[j]) == 0 || (cNt[j] > 0 && cNFS[j]\n                  + cNFP[j] >= cNt[j]))) {\n            continue goToNextToken;\n          }\n          // Adjective can't be singular\n          if (cN[j] + cD[j] > 0) { // && level>1\n            isPlural = isPlural && cD[j] > 1; // cN[j]>1\n          }\n          j++;\n        }\n        // there is no noun, (no determinant --> && cDtotal==0)\n        if (cNtotal == 0 && cDtotal == 0) { \n          continue goToNextToken;\n        }\n\n        // exception: noun (or adj) plural + two or more adjectives\n        if (i < tokens.length - 2) {\n          Matcher pCoordina = COORDINACIO.matcher(nextToken);\n          if (pCoordina.matches()) {\n            if (((matchPostagRegexp(tokens[i - 1], NOM_MP) || matchPostagRegexp(\n                tokens[i - 1], ADJECTIU_MP))\n                && matchPostagRegexp(tokens[i], ADJECTIU_MS) && matchPostagRegexp(\n                  tokens[i + 2], ADJECTIU_MS))\n                || ((matchPostagRegexp(tokens[i - 1], NOM_MP) || matchPostagRegexp(\n                    tokens[i - 1], ADJECTIU_MP))\n                    && matchPostagRegexp(tokens[i], ADJECTIU_MP) && matchPostagRegexp(\n                      tokens[i + 2], ADJECTIU_MP))\n                || ((matchPostagRegexp(tokens[i - 1], NOM_FP) || matchPostagRegexp(\n                    tokens[i - 1], ADJECTIU_FP))\n                    && matchPostagRegexp(tokens[i], ADJECTIU_FS) && matchPostagRegexp(\n                      tokens[i + 2], ADJECTIU_FS))\n                || ((matchPostagRegexp(tokens[i - 1], NOM_FP) || matchPostagRegexp(\n                    tokens[i - 1], ADJECTIU_FP))\n                    && matchPostagRegexp(tokens[i], ADJECTIU_FP) && matchPostagRegexp(\n                      tokens[i + 2], ADJECTIU_FP))) {\n              continue goToNextToken;\n            }\n          }\n        }\n        // exception: termes, paraules, etc.\n        if (matchRegexp(prevToken, EXCEPCIONS_PREVIA)) {\n          continue goToNextToken;\n        }\n        // exceptions: la meitat mascles\n        if (matchPostagRegexp(tokens[i - 1], EXCEPCIONS_PREVIA_POSTAG)) {\n          continue goToNextToken;\n        }\n        // exceptions: llevat de, tret de, majúsucula inicial\n        if ((((token.equals(\"tret\") || token.equals(\"llevat\")) && (nextToken\n            .equals(\"de\") || nextToken.equals(\"que\")))\n            || token.equals(\"primer\")\n            || token.equals(\"junts\")\n            || token.equals(\"plegats\") || isUpperCase.matches())) {\n          continue goToNextToken;\n        }\n        // exceptions: atès, atesos..., donat, donats...\n        if (matchRegexp(token, EXCEPCIONS_PARTICIPI)) {\n          continue goToNextToken;\n        }\n        // exceptions: un cop, una volta, una vegada...\n        if (((prevPrevToken.equals(\"un\") && (prevToken.equals(\"cop\") || prevToken\n            .equals(\"colp\"))) || (prevPrevToken.equals(\"una\") && (prevToken\n            .equals(\"volta\") || prevToken.equals(\"vegada\"))))) {\n          continue goToNextToken;\n        }\n        // exceptions: segur que, just a\n        if (i < tokens.length - 1) {\n          if ((token.equals(\"segur\") || token.equals(\"major\") || token\n              .equals(\"menor\")) && nextToken.equals(\"que\")) {\n            continue goToNextToken;\n          }\n        }\n        // exceptions: sota mateix, dins mateix,\n        if (token.equals(\"mateix\") && matchPostagRegexp(tokens[i - 1], ADVERBI)) {\n          continue goToNextToken;\n        }\n\n        // patterns according to the analyzed adjective \n        if (matchPostagRegexp(tokens[i], ADJECTIU_CS)) {\n          substPattern = GN_CS;\n          adjPattern = ADJECTIU_S;\n          gnPattern = _GN_CS;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_CP)) {\n          substPattern = GN_CP;\n          adjPattern = ADJECTIU_P;\n          gnPattern = _GN_CP;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_MS)) {\n          substPattern = GN_MS;\n          adjPattern = ADJECTIU_MS;\n          gnPattern = _GN_MS;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_FS)) {\n          substPattern = GN_FS;\n          adjPattern = ADJECTIU_FS;\n          gnPattern = _GN_FS;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_MP)) {\n          substPattern = GN_MP;\n          adjPattern = ADJECTIU_MP;\n          gnPattern = _GN_MP;\n        } else if (matchPostagRegexp(tokens[i], ADJECTIU_FP)) {\n          substPattern = GN_FP;\n          adjPattern = ADJECTIU_FP;\n          gnPattern = _GN_FP;\n        }\n\n        if (substPattern == null || gnPattern == null || adjPattern == null) {\n          continue goToNextToken;\n        }\n\n        // combinations Det/Nom + adv (1,2..) + adj. \n        // If there is agreement, the rule doesn't match\n        j = 1;\n        boolean keepCount = true;\n        while (i - j > 0 && keepCount) {\n          if (gnPattern != null && matchPostagRegexp(tokens[i - j], NOM_DET)\n              && matchPostagRegexp(tokens[i - j], gnPattern)) {\n            continue goToNextToken; // there is a previous agreeing noun\n          } else if (!matchPostagRegexp(tokens[i - j], _GN_)\n              && matchPostagRegexp(tokens[i - j], substPattern)) {\n            continue goToNextToken; // there is a previous agreeing noun\n          }\n          keepCount = !matchPostagRegexp(tokens[i - j], NOM_DET);\n          j++;\n        }\n\n        // Necessary condition: previous token is a non-agreeing noun\n        // or it is adjective or adverb (not preceded by verb)\n        // /*&& !matchPostagRegexp(tokens[i],NOM)*/\n        if (!(((matchPostagRegexp(tokens[i - 1], NOM) && !matchPostagRegexp(\n            tokens[i - 1], substPattern)) || (i > 2\n            && ((matchPostagRegexp(tokens[i - 1], ADJECTIU) && !matchPostagRegexp(\n                tokens[i - 1], adjPattern))\n                || matchPostagRegexp(tokens[i - 1], ADVERBIS_ACCEPTATS) || matchPostagRegexp(\n                  tokens[i - 1], LOC_ADV))\n            && !matchPostagRegexp(tokens[i - 2], VERB) && !matchPostagRegexp(\n              tokens[i - 3], VERB))))) {\n          continue goToNextToken;\n        }\n\n        // Adjective can't be singular. The rule matches\n        if (!(isPlural && matchPostagRegexp(tokens[i], ADJECTIU_S))) {\n          //look into previous words\n          j = 1;\n          initializeApparitions();\n          while (i - j > 0 && keepCounting(tokens[i - j])) {\n            // there is a previous agreeing noun\n            if (matchPostagRegexp(tokens[i - j], NOM)\n                && matchPostagRegexp(tokens[i - j], substPattern)) {\n              continue goToNextToken; \n            // there is a previous agreeing adjective (in a nominal group)\n            } else if (matchPostagRegexp(tokens[i - j], ADJECTIU)\n                && matchPostagRegexp(tokens[i - j], gnPattern)) {\n              continue goToNextToken;\n            // if there is no nominal group, it requires noun\n            } /*else if (!matchPostagRegexp(tokens[i - j], _GN_) \n                && matchPostagRegexp(tokens[i - j], substPattern)) {\n              continue goToNextToken; // there is a previous agreeing noun\n            }*/\n            updateApparitions(tokens[i - j]);\n            j++;\n          }\n        }\n\n        // The rule matches\n        final String msg = \"Reviseu la concordança de la paraula \\u00AB\"\n            + token + \"\\u00BB.\";\n        final RuleMatch ruleMatch = new RuleMatch(this,\n            tokens[i].getStartPos(), tokens[i].getStartPos() + token.length(),\n            msg, \"Reviseu la concordança.\");\n        ruleMatches.add(ruleMatch);\n      }\n    }\n    return toRuleMatchArray(ruleMatches);\n  }","commit_id":"1547edbecfdeff33a69654b318320912aaceb54c","url":"https://github.com/languagetool-org/languagetool"},{"original_method":"public void testRule() throws IOException {\r\n\r\n    // correct sentences:\r\n    \r\n    //amb la mirada de cadascun dels homes clavada en la de l'adversari\r\n    //de fer una torre o fortificació bo i al·legant que això\r\n    // a confondre en un mateix amor amics i enemics\r\n    // es van posar en camí proveïts de presents\r\n    /* d'una banda tossut i, de l'altra, del tot inepte\r\n     * principis mascle i femella de la foscor//els elements reproductors mascle\r\n     * i femella// les formigues mascle i femella\r\n     *  de barba i cabellera blanques\r\n     */\r\n    /*\r\n     * multiwords: en aparença, en essència,per essència, amb excés,en repòs,\r\n     * amb rapidesa, en algun grau, per molt de temps altres vegades estacionat,\r\n     * en molts casos subordinada?, era al principi instintiva, de moment\r\n     * imperfectament conegudes de llarg menys perfectes, és de totes passades\r\n     * exactament intermèdia, és, en conjunt, gairebé intermèdia en cert grau\r\n     * paral·lela en algun grau en grau lleuger menys distintes han estat de fet\r\n     * exterminades\r\n     */\r\n    // (en especial si hi ha un adverbi entremig: en algun grau més distintes\r\n    assertCorrect(\"Tesis doctorals\");\r\n    assertCorrect(\"Va veure una cara rosada i arrugada, una boca sense dents oberta\");\r\n    assertCorrect(\"la vista en el magnífic ocell de potes i bec vermells\");\r\n    assertCorrect(\"-Maleït ximple! -va exclamar Tom\");\r\n    assertCorrect(\"-Així, ¿viatges sola? -va dir\");\r\n    assertCorrect(\"amb alguns motllurats de guixeria classicitzants\");\r\n    assertCorrect(\"amb alguns motllurats de guixeria classicitzant\");\r\n    assertCorrect(\"amb alguns motllurats de guixeria retallats\");\r\n    assertCorrect(\"amb alguns motllurats de guixeria retallada\");\r\n    assertCorrect(\"a confondre en un mateix amor amics i enemics\");\r\n    assertCorrect(\"En l'eix esquerra-dreta.\");\r\n    assertCorrect(\"podrien també esdevenir correlacionades\"); \r\n    assertCorrect(\"Cada polinomi en forma expandida\");\r\n    assertCorrect(\"El 1967 una partida de liberals rebel al govern\");\r\n    assertCorrect(\"El 1640 una junta de nobles reunida a Lisboa\");\r\n    assertCorrect(\"amb una expressió de dolor i de por barrejats.\");\r\n    assertCorrect(\"un tram més tou, amb morfologia i color diferents.\");\r\n    assertCorrect(\"Especialment en matèria de policia i finançament autonòmics\");\r\n    assertCorrect(\"Especialment en matèria de policia i justícia autonòmiques\");\r\n    assertCorrect(\"l'obra de Boeci amb espontaneïtat i vigor notables\");\r\n    assertCorrect(\"tenen en canvi altres parts de llur estructura certament molt anormals:\");\r\n    assertCorrect(\"constitueix l'única comunitat autònoma amb menys aturats\");\r\n    assertCorrect(\"durant tot l'any, i del sud-est, més notoris a la primavera\");\r\n    assertCorrect(\"amb la veu i el posat cada cop més agressius\");\r\n    assertCorrect(\"l'experiència sensitiva i la raó, degudament combinades.\");\r\n    assertCorrect(\"a la infermeria, d'allò més interessat\");\r\n    assertCorrect(\"el record, i absolutament fascinats\");\r\n    assertCorrect(\"no s'atorguen drets de visita tret que ho consenta el progenitor\");\r\n    assertCorrect(\"La meua filla viu amb mi la major part del temps\");\r\n    assertCorrect(\"que en l'actualitat viu a la ciutat de Santa Cruz\");\r\n    assertCorrect(\"són submarines i la nostra gent viu al fons del mar.\");\r\n    assertCorrect(\"la meitat mascles i la meitat femelles\");\r\n    assertCorrect(\"És força amarg\");\r\n    assertCorrect(\"Era poderós, força estrabul·lat\");\r\n    assertCorrect(\"Són força desconegudes\");\r\n    assertCorrect(\"Zeus, força cansat de tot\");\r\n    assertCorrect(\"un caràcter fix, per molt extraordinària que sigui la manera\");\r\n    assertCorrect(\"una quantitat copiosa de llavors olioses\");\r\n    assertCorrect(\"que criï sense variació, per molt lleugers que fossin\");\r\n    assertCorrect(\"Bernabé i Saule, un cop acomplerta la seva missió a Jerusalem\");\r\n    assertCorrect(\"Bernabé i Saule, un colp acomplerta la seva missió a Jerusalem\");\r\n    assertIncorrect(\"Bernabé i Saule, el colp acomplerta la seva missió a Jerusalem\");\r\n    assertCorrect(\"Bernabé i Saule, una vegada acomplert el seu viatge a Jerusalem\");\r\n    assertCorrect(\"Bernabé i Saule, una volta acomplert el seu viatge a Jerusalem\");\r\n    assertCorrect(\"he passat una nit i un dia sencers a la deriva\");\r\n    assertCorrect(\"L'olor dels teus perfums, més agradable que tots els bàlsams.\");\r\n    assertCorrect(\"La part superior esquerra\");\r\n    assertCorrect(\"I sí, la crisi serà llarga, molt llarga, potser eterna.\");\r\n    assertCorrect(\"El rei ha trobat l'excusa i l'explicació adequada.\");\r\n    //assertCorrect(\"té una manera de jugar aquestes gires tan femenina\");\r\n    assertCorrect(\"des de la tradicional divisió en dos regnes establida per Linnaeus\");\r\n    assertCorrect(\"aquestes activitats avui residuals donada ja la manca de territori\");\r\n    assertCorrect(\"instruments de càlcul basats en boles anomenats yupana.\");\r\n    assertCorrect(\"El rei ha trobat l'excusa i l'explicació adequades.\");\r\n    assertCorrect(\"Copa del món femenina.\");\r\n    assertCorrect(\"Batalla entre asteques i espanyols coneguda com la Nit Trista.\");\r\n    assertCorrect(\"És un informe sobre la cultura japonesa realitzat per encàrrec de l'exèrcit d'Estats Units.\");\r\n    assertCorrect(\"Les perspectives de futur immediat.\");\r\n    assertCorrect(\"Les perspectives de futur immediates.\");\r\n    assertCorrect(\"la tècnica i l'art cinematogràfiques.\");\r\n    assertCorrect(\"la tècnica i l'art cinematogràfic.\");\r\n    assertCorrect(\"la tècnica i l'art cinematogràfics.\");\r\n    assertCorrect(\"la tècnica i l'art cinematogràfica.\");\r\n    assertCorrect(\"Les perspectives i el futur immediats.\");\r\n    assertCorrect(\"Un punt de densitat i gravetat infinites.\");\r\n    assertCorrect(\"De la literatura i la cultura catalanes.\");\r\n    assertCorrect(\"Es fa segons regles de lectura constants i regulars.\");\r\n    assertCorrect(\"Les meitats dreta i esquerra de la mandíbula.\");\r\n    assertCorrect(\"Els períodes clàssic i medieval.\");\r\n    // assertCorrect(\"Els costats superior i laterals.\");\r\n    assertCorrect(\"En una molècula de glucosa i una de fructosa unides.\");\r\n    // Should be Incorrect, but it is impossible to detect\r\n    assertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevat\");\r\n    assertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevats\");\r\n    assertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevada\");\r\n    assertCorrect(\"La massa, el radi i la lluminositat llistats per ell.\");\r\n    assertCorrect(\"La massa, el radi i la lluminositat llistada per ell.\");\r\n    assertCorrect(\"L'origen de l'àbac està literalment perdut en el temps.\");\r\n    assertCorrect(\"L'origen ha esdevingut literalment perdut en el temps.\");\r\n    assertCorrect(\"En efecte, hi ha consideracions racistes, llavors força comunes\");\r\n    assertCorrect(\"el personatge canvià físicament: més alt i prim que el seu germà\");\r\n    assertCorrect(\"un a baix i un altre a dalt identificat amb el símbol\");\r\n    assertCorrect(\"un a baix i un altre a dalt identificats amb el símbol\");\r\n    assertCorrect(\"El tabaquisme és l'addicció al tabac provocada per components.\");\r\n    assertCorrect(\"El \\\"treball\\\" en qüestió, normalment associat a un lloc de treball pagat\");\r\n    assertCorrect(\"una organització paramilitar de protecció civil típicament catalana\");\r\n    assertCorrect(\"un Do dues octaves més alt que l'anterior\");\r\n    assertCorrect(\"són pràcticament dos graus més baixes\");\r\n    assertCorrect(\"és unes vint vegades més gran que l'espermatozou.\");\r\n    assertCorrect(\"és unes 20 vegades més gran que l'espermatozou.\");\r\n    assertCorrect(\"eren quatre vegades més alts\");\r\n    assertCorrect(\"eren uns fets cada volta més inexplicables\");\r\n    assertCorrect(\"El castell està totalment en ruïnes i completament cobert de vegetació.\");\r\n    assertCorrect(\"han estat tant elogiades per la crítica teatral, com polèmiques\");\r\n    assertCorrect(\"Del segle XVIII però reconstruïda recentment\");\r\n    // assertCorrect(\"vivien a la casa paterna, mig confosos entre els criats.\");\r\n    assertCorrect(\"La indústria, tradicionalment dedicada al tèxtil i ara molt diversificada,\");\r\n    assertCorrect(\"oficialment la comarca[2] del Moianès, molt reivindicada\");\r\n    assertCorrect(\"En l'actualitat està del tot despoblada de residència permanent.\");\r\n    assertCorrect(\"amb la terra repartida entre diversos propietaris, bé que encara poc poblada\");\r\n    assertCorrect(\"al capdamunt de les Costes d'en Quintanes, sota mateix del Turó\");\r\n    assertCorrect(\"el Moviment per l\u2019Autodeterminació cors\");\r\n    assertCorrect(\"amb una taula de logaritmes davant meu.\");\r\n    assertCorrect(\"la denominació valencià per a la llengua pròpia\");\r\n    assertCorrect(\"Com més petita és l'obertura de diafragma, més grans són la profunditat de camp i la profunditat\");\r\n    assertCorrect(\"es movien mitjançant filferros, tot projectant ombres\");\r\n    assertCorrect(\"sota les grans persianes de color verd recalcades\");\r\n    assertCorrect(\"que seria en pocs anys força hegemònica a Catalunya\");\r\n    assertCorrect(\"Era un home força misteriós\");\r\n\r\n    // errors:\r\n    assertIncorrect(\"Tesis doctoral\");\r\n    assertIncorrect(\"vaig posar mans a l'obra: a dins de casa mateix vaig cavar un sot per enterrar\");\r\n    assertIncorrect(\"amb alguns motllurats de guixeria retallat\");\r\n    assertIncorrect(\"amb alguns motllurats de guixeria retallades\");\r\n    assertIncorrect(\"Aquella va ser la seva peça mestre.\");\r\n    assertIncorrect(\"La petició de tramitar el cas per lesions dolosa.\");\r\n    // policia i justícia són més usualment femenins, encara que poden ser masculins\r\n    assertIncorrect(\"Especialment en matèria de policia i justícia autonòmics\");\r\n    assertIncorrect(\"amb rigor i honor barrejades.\");\r\n    assertIncorrect(\"hi ha hagut una certa recuperació (3,2%), efecte en part de la descongestió madrilenya cap a les províncies limítrofs de Toledo i Guadalajara.\");\r\n    assertIncorrect(\"Son molt boniques\");\r\n    //assertIncorrect(\"La casa destrossat\"); ambigu\r\n    assertIncorrect(\"pantalons curt o llargs\");\r\n    assertIncorrect(\"sota les grans persianes de color verd recalcada\");\r\n    assertIncorrect(\"sota les grans persianes de color verd recalcat\");\r\n    assertIncorrect(\"sota les grans persianes de color verd recalcats\");\r\n    assertIncorrect(\"Són unes corbes de llum complexos.\");\r\n    assertIncorrect(\"fets moltes vegades inexplicable.\");\r\n    assertIncorrect(\"eren uns fets cada volta més inexplicable\");\r\n    assertIncorrect(\"Unes explotacions ramaderes porcina.\");\r\n    // assertIncorrect(\"amb un rendiment del 5,62%, més alta que el 5,44%\");\r\n    // assertIncorrect(\"un a baix i un altre a dalt identificada amb el símbol\");\r\n    // assertIncorrect(\"un a baix i un altre a dalt identificades amb el símbol\");\r\n    // assertIncorrect(\"En efecte, hi ha consideracions, llavors força comuns\");\r\n    assertIncorrect(\"En efecte, hi ha consideracions llavors força comuns\");\r\n    // assertIncorrect(\"En efecte, hi ha consideracions racistes, llavors força comuns\");\r\n    assertIncorrect(\"amb una alineació impròpiament habituals\");\r\n    assertIncorrect(\"amb una alineació poc habituals\");\r\n    assertIncorrect(\"amb una alineació molt poc habituals\");\r\n    // assertIncorrect(\"Era un home força misteriosa\"); -> permet\r\n    // \"en pocs anys força hegemònica\"\r\n    assertIncorrect(\"Era un home força misteriosos\");\r\n    assertIncorrect(\"El rei ha trobat l'excusa perfecte.\");\r\n    assertIncorrect(\"El rei ha trobat l'excusa i l'explicació adequats.\");\r\n    assertIncorrect(\"El rei ha trobat l'excusa i l'explicació adequat.\");\r\n    assertIncorrect(\"Les perspectives de futur immediata.\");\r\n    assertIncorrect(\"Les perspectives de futur immediats.\");\r\n    assertIncorrect(\"la llengua i la cultura catalans.\");\r\n    assertIncorrect(\"En una molècula de glucosa i una de fructosa units.\");\r\n    assertIncorrect(\"Un punt de densitat i gravetat infinits.\");\r\n    assertIncorrect(\"Índex de desenvolupament humà i qualitat de vida elevades.\");\r\n    // Should be Incorrect, but it is impossible to detect\r\n    // assertIncorrect(\"Índex de desenvolupament humà i qualitat de vida elevat\");\r\n    assertIncorrect(\"La massa, el radi i la lluminositat llistat per ell.\");\r\n    assertIncorrect(\"La massa, el radi i la lluminositat llistades per ell.\");\r\n    \r\n  }","id":63293,"modified_method":"public void testRule() throws IOException {\r\n\r\n    // correct sentences:\r\n    \r\n    //amb la mirada de cadascun dels homes clavada en la de l'adversari\r\n    //de fer una torre o fortificació bo i al·legant que això\r\n    // a confondre en un mateix amor amics i enemics\r\n    // es van posar en camí proveïts de presents\r\n    /* d'una banda tossut i, de l'altra, del tot inepte\r\n     * principis mascle i femella de la foscor//els elements reproductors mascle\r\n     * i femella// les formigues mascle i femella\r\n     *  de barba i cabellera blanques\r\n     */\r\n    /*\r\n     * multiwords: en aparença, en essència,per essència, amb excés,en repòs,\r\n     * amb rapidesa, en algun grau, per molt de temps altres vegades estacionat,\r\n     * en molts casos subordinada?, era al principi instintiva, de moment\r\n     * imperfectament conegudes de llarg menys perfectes, és de totes passades\r\n     * exactament intermèdia, és, en conjunt, gairebé intermèdia en cert grau\r\n     * paral·lela en algun grau en grau lleuger menys distintes han estat de fet\r\n     * exterminades\r\n     */\r\n    // (en especial si hi ha un adverbi entremig: en algun grau més distintes\r\n    assertCorrect(\"per a dur a terme tota la lectura i escriptura requerides\");\r\n    assertCorrect(\"al camí va trobar una branca de roure sòlida\");\r\n    assertCorrect(\"Tesis doctorals\");\r\n    assertCorrect(\"Va veure una cara rosada i arrugada, una boca sense dents oberta\");\r\n    assertCorrect(\"la vista en el magnífic ocell de potes i bec vermells\");\r\n    assertCorrect(\"-Maleït ximple! -va exclamar Tom\");\r\n//    assertCorrect(\"-Així, ¿viatges sola? -va dir\");\r\n    //i ronda amagat pels carrers:\r\n    assertCorrect(\"amb alguns motllurats de guixeria classicitzants\");\r\n    assertCorrect(\"amb alguns motllurats de guixeria classicitzant\");\r\n    assertCorrect(\"amb alguns motllurats de guixeria retallats\");\r\n    assertCorrect(\"amb alguns motllurats de guixeria retallada\");\r\n    assertCorrect(\"a confondre en un mateix amor amics i enemics\");\r\n    assertCorrect(\"En l'eix esquerra-dreta.\");\r\n    assertCorrect(\"podrien també esdevenir correlacionades\"); \r\n    assertCorrect(\"Cada polinomi en forma expandida\");\r\n    assertCorrect(\"El 1967 una partida de liberals rebel al govern\");\r\n    assertCorrect(\"El 1640 una junta de nobles reunida a Lisboa\");\r\n    assertCorrect(\"amb una expressió de dolor i de por barrejats.\");\r\n    assertCorrect(\"un tram més tou, amb morfologia i color diferents.\");\r\n    assertCorrect(\"Especialment en matèria de policia i finançament autonòmics\");\r\n    assertCorrect(\"Especialment en matèria de policia i justícia autonòmiques\");\r\n    assertCorrect(\"l'obra de Boeci amb espontaneïtat i vigor notables\");\r\n    assertCorrect(\"tenen en canvi altres parts de llur estructura certament molt anormals:\");\r\n    assertCorrect(\"constitueix l'única comunitat autònoma amb menys aturats\");\r\n    assertCorrect(\"durant tot l'any, i del sud-est, més notoris a la primavera\");\r\n    assertCorrect(\"amb la veu i el posat cada cop més agressius\");\r\n    assertCorrect(\"l'experiència sensitiva i la raó, degudament combinades.\");\r\n    assertCorrect(\"a la infermeria, d'allò més interessat\");\r\n    assertCorrect(\"el record, i absolutament fascinats\");\r\n    assertCorrect(\"no s'atorguen drets de visita tret que ho consenta el progenitor\");\r\n    assertCorrect(\"La meua filla viu amb mi la major part del temps\");\r\n    assertCorrect(\"que en l'actualitat viu a la ciutat de Santa Cruz\");\r\n    assertCorrect(\"són submarines i la nostra gent viu al fons del mar.\");\r\n    assertCorrect(\"la meitat mascles i la meitat femelles\");\r\n    assertCorrect(\"És força amarg\");\r\n    assertCorrect(\"Era poderós, força estrabul·lat\");\r\n    assertCorrect(\"Són força desconegudes\");\r\n    assertCorrect(\"Zeus, força cansat de tot\");\r\n    assertCorrect(\"un caràcter fix, per molt extraordinària que sigui la manera\");\r\n    assertCorrect(\"una quantitat copiosa de llavors olioses\");\r\n    assertCorrect(\"que criï sense variació, per molt lleugers que fossin\");\r\n    assertCorrect(\"Bernabé i Saule, un cop acomplerta la seva missió a Jerusalem\");\r\n    assertCorrect(\"Bernabé i Saule, un colp acomplerta la seva missió a Jerusalem\");\r\n    assertIncorrect(\"Bernabé i Saule, el colp acomplerta la seva missió a Jerusalem\");\r\n    assertCorrect(\"Bernabé i Saule, una vegada acomplert el seu viatge a Jerusalem\");\r\n    assertCorrect(\"Bernabé i Saule, una volta acomplert el seu viatge a Jerusalem\");\r\n    assertCorrect(\"he passat una nit i un dia sencers a la deriva\");\r\n    assertCorrect(\"L'olor dels teus perfums, més agradable que tots els bàlsams.\");\r\n    assertCorrect(\"La part superior esquerra\");\r\n    assertCorrect(\"I sí, la crisi serà llarga, molt llarga, potser eterna.\");\r\n    assertCorrect(\"El rei ha trobat l'excusa i l'explicació adequada.\");\r\n    //assertCorrect(\"té una manera de jugar aquestes gires tan femenina\");\r\n    assertCorrect(\"des de la tradicional divisió en dos regnes establida per Linnaeus\");\r\n    assertCorrect(\"aquestes activitats avui residuals donada ja la manca de territori\");\r\n    assertCorrect(\"instruments de càlcul basats en boles anomenats yupana.\");\r\n    assertCorrect(\"El rei ha trobat l'excusa i l'explicació adequades.\");\r\n    assertCorrect(\"Copa del món femenina.\");\r\n    assertCorrect(\"Batalla entre asteques i espanyols coneguda com la Nit Trista.\");\r\n    assertCorrect(\"És un informe sobre la cultura japonesa realitzat per encàrrec de l'exèrcit d'Estats Units.\");\r\n    assertCorrect(\"Les perspectives de futur immediat.\");\r\n    assertCorrect(\"Les perspectives de futur immediates.\");\r\n    assertCorrect(\"la tècnica i l'art cinematogràfiques.\");\r\n    assertCorrect(\"la tècnica i l'art cinematogràfic.\");\r\n    assertCorrect(\"la tècnica i l'art cinematogràfics.\");\r\n    assertCorrect(\"la tècnica i l'art cinematogràfica.\");\r\n    assertCorrect(\"Les perspectives i el futur immediats.\");\r\n    assertCorrect(\"Un punt de densitat i gravetat infinites.\");\r\n    assertCorrect(\"De la literatura i la cultura catalanes.\");\r\n    assertCorrect(\"Es fa segons regles de lectura constants i regulars.\");\r\n    assertCorrect(\"Les meitats dreta i esquerra de la mandíbula.\");\r\n    assertCorrect(\"Els períodes clàssic i medieval.\");\r\n    // assertCorrect(\"Els costats superior i laterals.\");\r\n    assertCorrect(\"En una molècula de glucosa i una de fructosa unides.\");\r\n    // Should be Incorrect, but it is impossible to detect\r\n    assertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevat\");\r\n    assertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevats\");\r\n    assertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevada\");\r\n    assertCorrect(\"La massa, el radi i la lluminositat llistats per ell.\");\r\n    assertCorrect(\"La massa, el radi i la lluminositat llistada per ell.\");\r\n    assertCorrect(\"L'origen de l'àbac està literalment perdut en el temps.\");\r\n    assertCorrect(\"L'origen ha esdevingut literalment perdut en el temps.\");\r\n    assertCorrect(\"En efecte, hi ha consideracions racistes, llavors força comunes\");\r\n    assertCorrect(\"el personatge canvià físicament: més alt i prim que el seu germà\");\r\n    assertCorrect(\"un a baix i un altre a dalt identificat amb el símbol\");\r\n    assertCorrect(\"un a baix i un altre a dalt identificats amb el símbol\");\r\n    assertCorrect(\"El tabaquisme és l'addicció al tabac provocada per components.\");\r\n    assertCorrect(\"El \\\"treball\\\" en qüestió, normalment associat a un lloc de treball pagat\");\r\n    assertCorrect(\"una organització paramilitar de protecció civil típicament catalana\");\r\n    assertCorrect(\"un Do dues octaves més alt que l'anterior\");\r\n    assertCorrect(\"són pràcticament dos graus més baixes\");\r\n    assertCorrect(\"és unes vint vegades més gran que l'espermatozou.\");\r\n    assertCorrect(\"és unes 20 vegades més gran que l'espermatozou.\");\r\n    assertCorrect(\"eren quatre vegades més alts\");\r\n    assertCorrect(\"eren uns fets cada volta més inexplicables\");\r\n    assertCorrect(\"El castell està totalment en ruïnes i completament cobert de vegetació.\");\r\n    assertCorrect(\"han estat tant elogiades per la crítica teatral, com polèmiques\");\r\n    assertCorrect(\"Del segle XVIII però reconstruïda recentment\");\r\n    // assertCorrect(\"vivien a la casa paterna, mig confosos entre els criats.\");\r\n    assertCorrect(\"La indústria, tradicionalment dedicada al tèxtil i ara molt diversificada,\");\r\n    assertCorrect(\"oficialment la comarca[2] del Moianès, molt reivindicada\");\r\n    assertCorrect(\"En l'actualitat està del tot despoblada de residència permanent.\");\r\n    assertCorrect(\"amb la terra repartida entre diversos propietaris, bé que encara poc poblada\");\r\n    assertCorrect(\"al capdamunt de les Costes d'en Quintanes, sota mateix del Turó\");\r\n    assertCorrect(\"el Moviment per l\u2019Autodeterminació cors\");\r\n    assertCorrect(\"amb una taula de logaritmes davant meu.\");\r\n    assertCorrect(\"la denominació valencià per a la llengua pròpia\");\r\n    assertCorrect(\"Com més petita és l'obertura de diafragma, més grans són la profunditat de camp i la profunditat\");\r\n    assertCorrect(\"es movien mitjançant filferros, tot projectant ombres\");\r\n    assertCorrect(\"sota les grans persianes de color verd recalcades\");\r\n    assertCorrect(\"que seria en pocs anys força hegemònica a Catalunya\");\r\n    assertCorrect(\"Era un home força misteriós\");\r\n\r\n    // errors:\r\n    assertIncorrect(\"Tesis doctoral\");\r\n    assertIncorrect(\"vaig posar mans a l'obra: a dins de casa mateix vaig cavar un sot per enterrar\");\r\n    assertIncorrect(\"amb alguns motllurats de guixeria retallat\");\r\n    assertIncorrect(\"amb alguns motllurats de guixeria retallades\");\r\n    assertIncorrect(\"Aquella va ser la seva peça mestre.\");\r\n    assertIncorrect(\"La petició de tramitar el cas per lesions dolosa.\");\r\n    // policia i justícia són més usualment femenins, encara que poden ser masculins\r\n    assertIncorrect(\"Especialment en matèria de policia i justícia autonòmics\");\r\n    assertIncorrect(\"amb rigor i honor barrejades.\");\r\n    assertIncorrect(\"hi ha hagut una certa recuperació (3,2%), efecte en part de la descongestió madrilenya cap a les províncies limítrofs de Toledo i Guadalajara.\");\r\n    assertIncorrect(\"Son molt boniques\");\r\n    //assertIncorrect(\"La casa destrossat\"); ambigu\r\n    assertIncorrect(\"pantalons curt o llargs\");\r\n    assertIncorrect(\"sota les grans persianes de color verd recalcada\");\r\n    assertIncorrect(\"sota les grans persianes de color verd recalcat\");\r\n    assertIncorrect(\"sota les grans persianes de color verd recalcats\");\r\n    assertIncorrect(\"Són unes corbes de llum complexos.\");\r\n    assertIncorrect(\"fets moltes vegades inexplicable.\");\r\n    assertIncorrect(\"eren uns fets cada volta més inexplicable\");\r\n    assertIncorrect(\"Unes explotacions ramaderes porcina.\");\r\n    // assertIncorrect(\"amb un rendiment del 5,62%, més alta que el 5,44%\");\r\n    // assertIncorrect(\"un a baix i un altre a dalt identificada amb el símbol\");\r\n    // assertIncorrect(\"un a baix i un altre a dalt identificades amb el símbol\");\r\n    // assertIncorrect(\"En efecte, hi ha consideracions, llavors força comuns\");\r\n    assertIncorrect(\"En efecte, hi ha consideracions llavors força comuns\");\r\n    // assertIncorrect(\"En efecte, hi ha consideracions racistes, llavors força comuns\");\r\n    assertIncorrect(\"amb una alineació impròpiament habituals\");\r\n    assertIncorrect(\"amb una alineació poc habituals\");\r\n    assertIncorrect(\"amb una alineació molt poc habituals\");\r\n    // assertIncorrect(\"Era un home força misteriosa\"); -> permet\r\n    // \"en pocs anys força hegemònica\"\r\n    assertIncorrect(\"Era un home força misteriosos\");\r\n    assertIncorrect(\"El rei ha trobat l'excusa perfecte.\");\r\n    assertIncorrect(\"El rei ha trobat l'excusa i l'explicació adequats.\");\r\n    assertIncorrect(\"El rei ha trobat l'excusa i l'explicació adequat.\");\r\n    assertIncorrect(\"Les perspectives de futur immediata.\");\r\n    assertIncorrect(\"Les perspectives de futur immediats.\");\r\n    assertIncorrect(\"la llengua i la cultura catalans.\");\r\n    assertIncorrect(\"En una molècula de glucosa i una de fructosa units.\");\r\n    assertIncorrect(\"Un punt de densitat i gravetat infinits.\");\r\n    assertIncorrect(\"Índex de desenvolupament humà i qualitat de vida elevades.\");\r\n    // Should be Incorrect, but it is impossible to detect\r\n    // assertIncorrect(\"Índex de desenvolupament humà i qualitat de vida elevat\");\r\n    assertIncorrect(\"La massa, el radi i la lluminositat llistat per ell.\");\r\n    assertIncorrect(\"La massa, el radi i la lluminositat llistades per ell.\");\r\n    \r\n  }","commit_id":"1547edbecfdeff33a69654b318320912aaceb54c","url":"https://github.com/languagetool-org/languagetool"},{"original_method":"@Override\n\tpublic RuleMatch[] match(final AnalyzedSentence text) {\n\t\tfinal List<RuleMatch> ruleMatches = new ArrayList<RuleMatch>();\n\t\tfinal AnalyzedTokenReadings[] tokens = text.getTokensWithoutWhitespace();\n\t\tfor (int i = 1; i < tokens.length; i++) {   //ignoring token 0, i.e., SENT_START\n\t\t\tif ( matchPostagRegexp(tokens[i],ADJECTIU) && !matchPostagRegexp(tokens[i],CONCORDA) )\n\t\t\t{\n\t\t\t\tfinal String token=tokens[i].getToken();\n\t\t\t\tfinal String prevToken=tokens[i-1].getToken();\n//\t\t\t\tString prevPrevToken=\"\";\n//\t\t\t\tif (i > 2) {\n//\t\t\t\t\tprevPrevToken = tokens[i-2].getToken();\n//\t\t\t\t}\n\t\t\t\tString nextToken=\"\";\n\t\t\t\tif (i < tokens.length-1) {\n\t\t\t\t\tnextToken = tokens[i+1].getToken();\n\t\t\t\t}\n\t\t\t\tint j;\n\t\t\t\tboolean adjectiveAgrees = false;\n\t\t\t\tboolean theRuleMaches = false; \n\t\t\t\tboolean isException = false;\n\t\t\t\tboolean isPlural = true;\n\t\t\t\tboolean isPrevNoun = false;\n\t\t\t\tPattern substPattern = null;\n\t\t\t\tPattern gnPattern = null;\n\t\t\t\tPattern adjPattern = null;\n\t\t\t\tMatcher isUpperCase = UPPERCASE.matcher(token);\n\n\t\t\t\t//Counts nouns and determiners before the adjectives. \n\t\t\t\t//Takes care of acceptable combinations. \n\t\t\t\tint maxLevels=4;\n\t\t\t\tint[] cNt = new int[maxLevels];\n\t\t\t\tint[] cNMS = new int[maxLevels]; int[] cNFS = new int[maxLevels];\n\t\t\t\tint[] cNMP = new int[maxLevels]; int[] cNFP = new int[maxLevels];\n\t\t\t\tint[] cDMS = new int[maxLevels]; int[] cDFS = new int[maxLevels];\n\t\t\t\tint[] cDMP = new int[maxLevels]; int[] cDFP = new int[maxLevels];\n\t\t\t\tint[] cN = new int[maxLevels]; int[] cD = new int[maxLevels]; \n\t\t\t\tfor (j=0; j<maxLevels; j++) { \n\t\t\t\t\tcNt[j] = 0; \n\t\t\t\t\tcNMS[j] = 0; cNFS[j] = 0; cNMP[j] = 0; cNFP[j] = 0; \n\t\t\t\t\tcDMS[j] = 0; cDFS[j] = 0; cDMP[j] = 0; cDFP[j] = 0; \n\t\t\t\t\tcN[j] = 0; cD[j] = 0;\n\t\t\t\t}\n\n\t\t\t\tint level=0;\n\t\t\t\tj=1; \n\t\t\t\tboolean keepCounting=true;\n\t\t\t\twhile (keepCounting && i-j>0 && level<maxLevels)\n\t\t\t\t{\n\t\t\t\t\tif (!isPrevNoun) {  //els noms neutres caldria comptabilitzar-los d'acord amb l'etiqueta _GN_\n\t\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],NOM) && matchPostagRegexp(tokens[i-j],_GN_MS) ) {cNMS[level]++;}\n\t\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],NOM) && matchPostagRegexp(tokens[i-j],_GN_FS) ) {cNFS[level]++;}\n\t\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],NOM) && matchPostagRegexp(tokens[i-j],_GN_MP) ) {cNMP[level]++;}\n\t\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],NOM) && matchPostagRegexp(tokens[i-j],_GN_FP) ) {cNFP[level]++;}\n\t\t\t\t\t\tif (!matchPostagRegexp(tokens[i - j], _GN_)) {\n\t\t\t\t\t\t\tif (matchPostagRegexp(tokens[i - j], NOM_MS)) {cNMS[level]++;}\n\t\t\t\t\t\t\telse if (matchPostagRegexp(tokens[i - j], NOM_FS)) {cNFS[level]++;}\n\t\t\t\t\t\t\telse if (matchPostagRegexp(tokens[i - j], NOM_MP)) {cNMP[level]++;}\n\t\t\t\t\t\t\telse if (matchPostagRegexp(tokens[i - j], NOM_FP)) {cNFP[level]++;}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],NOM)) {cNt[level]++; isPrevNoun=true;} else {isPrevNoun=false;}; //avoid two consecutive nouns\n\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],DET_CS)) {\n\t\t\t\t\t\tif (matchPostagRegexp(tokens[i-j+1],NOM_MS)) {cDMS[level]++;}\n\t\t\t\t\t\tif (matchPostagRegexp(tokens[i-j+1],NOM_FS)) {cDFS[level]++;}\n\t\t\t\t\t}\n\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],DET_MS)) {cDMS[level]++;}\n\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],DET_FS)) {cDFS[level]++;}\n\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],DET_MP)) {cDMP[level]++;}\n\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],DET_FP)) {cDFP[level]++;}\t    \t\t  \n\t\t\t\t\tif (i-j>0) {\n\t\t\t\t\t\tif (matchRegexp(tokens[i-j].getToken(),PREPOSICIO_CANVI_NIVELL) \n\t\t\t\t\t\t\t\t&& !matchRegexp(tokens[i-j-1].getToken(),COORDINACIO_IONI)\n\t\t\t\t\t\t\t\t&& !matchPostagRegexp(tokens[i-j+1],ADVERBI)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tlevel++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (level>0 && matchRegexp(tokens[i-j].getToken(),COORDINACIO_IONI) ) {\n\t\t\t\t\t\tint k=1;\n\t\t\t\t\t\twhile (k<4 && i-j-k>0 \n\t\t\t\t\t\t\t\t&& (matchPostagRegexp(tokens[i-j-k],KEEP_COUNT) \n\t\t\t\t\t\t\t\t\t\t|| matchRegexp(tokens[i-j-k].getToken(),KEEP_COUNT2)\n\t\t\t\t\t\t\t\t\t\t|| matchPostagRegexp(tokens[i-j-k],ADVERBIS_ACCEPTATS) )\n\t\t\t\t\t\t\t\t\t\t&& !matchRegexp(tokens[i-j-k].getToken(),STOP_COUNT) ) {\n\t\t\t\t\t\t\tif (matchPostagRegexp(tokens[i-j-k],PREPOSICIONS)) {\n\t\t\t\t\t\t\t\tj=j+k;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tk++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tj++;\n\t\t\t\t\tkeepCounting=(matchPostagRegexp(tokens[i-j],KEEP_COUNT) || matchRegexp(tokens[i-j].getToken(),KEEP_COUNT2) || matchPostagRegexp(tokens[i-j],ADVERBIS_ACCEPTATS))\t\n\t\t\t\t\t\t\t&& !matchRegexp(tokens[i-j].getToken(),STOP_COUNT);\n\t\t\t\t}\n\t\t\t\tlevel++;\n\t\t\t\tif (level>maxLevels) {\n\t\t\t\t\tlevel=maxLevels;\n\t\t\t\t}\n\t\t\t\tj=0;\n\t\t\t\tint cNtotal=0;\n\t\t\t\tint cDtotal=0;\n\t\t\t\twhile (j<level) { \n\t\t\t\t\tcN[j]=cNMS[j]+cNFS[j]+cNMP[j]+cNFP[j];\n\t\t\t\t\tcD[j]=cDMS[j]+cDFS[j]+cDMP[j]+cDFP[j];\n\t\t\t\t\tcNtotal+=cN[j];\n\t\t\t\t\tcDtotal+=cD[j];\n\n\t\t\t\t\t//exceptions: adjective is plural and there are several nouns before\n\t\t\t\t\tif (matchPostagRegexp(tokens[i],ADJECTIU_MP) \n\t\t\t\t\t\t\t&& (cN[j]>1 || cD[j]>1) \n\t\t\t\t\t\t\t&& (cNMS[j]+cNMP[j]+cDMS[j]+cDMP[j])>0 \n\t\t\t\t\t\t\t&& (cNFS[j]+cNFP[j]<=cNt[j]) ) {\t\n\t\t\t\t\t\tisException=true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (!isException && matchPostagRegexp(tokens[i],ADJECTIU_FP) \n\t\t\t\t\t\t\t&& (cN[j]>1 || cD[j]>1) \n\t\t\t\t\t\t\t&& ((cNMS[j]+cNMP[j]+cDMS[j]+cDMP[j])==0 || (cNt[j]>0 && cNFS[j]+cNFP[j]>=cNt[j]))) {\n\t\t\t\t\t\tisException=true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t//Adjective can't be singular\n\t\t\t\t\tif (cN[j]+cD[j]>0) { //&& level>1\n\t\t\t\t\t\tisPlural=isPlural && cD[j]>1; //cN[j]>1\n\t\t\t\t\t}\n//\t\t\t\t\telse {\n//\t\t\t\t\t\tisPlural=false;\n//\t\t\t\t\t}\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (cNtotal==0 && cDtotal==0) { //there is no noun, (no determinant --> && cDtotal==0)\n\t\t\t\t\tisException=true;\n\t\t\t\t}\n\n\t\t\t\t//exception: noun (or adj) plural + two or more adjectives\t\n\t\t\t\tif (!isException && i < tokens.length-2){\n\t\t\t\t\tMatcher pCoordina = COORDINACIO.matcher(nextToken);\n\t\t\t\t\tif (pCoordina.matches()) {\n\t\t\t\t\t\tif (   ((matchPostagRegexp(tokens[i-1],NOM_MP) || matchPostagRegexp(tokens[i-1],ADJECTIU_MP)) && matchPostagRegexp(tokens[i],ADJECTIU_M) && matchPostagRegexp(tokens[i+2],ADJECTIU_M))\n\t\t\t\t\t\t\t\t|| ((matchPostagRegexp(tokens[i-1],NOM_FP) || matchPostagRegexp(tokens[i-1],ADJECTIU_FP)) && matchPostagRegexp(tokens[i],ADJECTIU_F) && matchPostagRegexp(tokens[i+2],ADJECTIU_F)) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisException=true;} \n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\t//exception: termes, paraules, etc.\n\t\t\t\tif (!isException && matchRegexp(prevToken,EXCEPCIONS_PREVIA)) {\n\t\t\t\t\tisException=true;}\n\t\t\t\t//exceptions: llevat de, tret de, majúsucula inicial\n\t\t\t\tif ( !isException && ( ((token.equals(\"tret\") || token.equals(\"llevat\") ) && nextToken.equals(\"de\")) \n\t\t\t\t\t\t|| token.equals(\"primer\") || token.equals(\"junts\")  \n\t\t\t\t\t\t|| isUpperCase.matches() ) ) {\n\t\t\t\t\tisException=true;}\n\t\t\t\t//exceptions: atès, atesos..., donat, donats... \n\t\t\t\tif ( !isException && matchRegexp(token,EXCEPCIONS_PARTICIPI) ) {\n\t\t\t\t\tisException=true;}\n\t\t\t\t//exceptions: segur que, just a\n\t\t\t\tif (!isException && i < tokens.length - 1) {\n\t\t\t\t\tif ((token.equals(\"segur\") || token.equals(\"major\") || token.equals(\"menor\")) && nextToken.equals(\"que\")) {\n\t\t\t\t\t\tisException = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//exceptions: sota mateix, dins mateix, \n\t\t\t\tif ( !isException && token.equals(\"mateix\") && matchPostagRegexp(tokens[i-1],ADVERBI) ) {\n\t\t\t\t\tisException=true;}\n\n\t\t\t\t//look into previous words\n\t\t\t\tif (!isException)\n\t\t\t\t{ \n\t\t\t\t\tif (matchPostagRegexp(tokens[i],ADJECTIU_CS)) { substPattern=GN_CS; adjPattern=ADJECTIU_S; gnPattern=_GN_CS;}\n\t\t\t\t\telse if (matchPostagRegexp(tokens[i],ADJECTIU_CP)) { substPattern=GN_CP; adjPattern=ADJECTIU_P; gnPattern=_GN_CP;}\n\t\t\t\t\telse if (matchPostagRegexp(tokens[i],ADJECTIU_MS)) { substPattern=GN_MS; adjPattern=ADJECTIU_MS; gnPattern=_GN_MS;}\n\t\t\t\t\telse if (matchPostagRegexp(tokens[i],ADJECTIU_FS)) { substPattern=GN_FS; adjPattern=ADJECTIU_FS; gnPattern=_GN_FS;}\n\t\t\t\t\telse if (matchPostagRegexp(tokens[i],ADJECTIU_MP)) { substPattern=GN_MP; adjPattern=ADJECTIU_MP; gnPattern=_GN_MP;}\n\t\t\t\t\telse if (matchPostagRegexp(tokens[i],ADJECTIU_FP)) { substPattern=GN_FP; adjPattern=ADJECTIU_FP; gnPattern=_GN_FP;}\n\t\t\t\t \n\t\t\t\t\t\n\t\t\t\t\tif (substPattern!=null) {\n\t\t\t\t\t\t//combinations Det/Nom + adv (1,2..) + adj. If there is agreement, the rule doesn't match\n\t\t\t\t\t\tj=1;\n\t\t\t\t\t\tkeepCounting=true;\n\t\t\t\t\t\twhile (i-j>0 && !isException && keepCounting)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (gnPattern!=null && matchPostagRegexp(tokens[i-j],NOM_DET) && matchPostagRegexp(tokens[i-j],gnPattern) ) {\n\t\t\t\t\t\t\t\tisException=true;     // there is a previous agreeing noun\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (!matchPostagRegexp(tokens[i-j], _GN_) && matchPostagRegexp(tokens[i-j],substPattern)) {\t\n\t\t\t\t\t\t\t\tisException=true;     // there is a previous agreeing noun\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tkeepCounting=!matchPostagRegexp(tokens[i-j],NOM_DET);\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t//previous token is a non-agreeing noun or it is adjective or adverb (not preceded my verb)\n\t\t\t\t\t\tif (!isException && ( (matchPostagRegexp(tokens[i-1],NOM) && !matchPostagRegexp(tokens[i-1],substPattern)) ||\n\t\t\t\t\t\t\t\t(i>3 /*&& !matchPostagRegexp(tokens[i],NOM)*/ && (( matchPostagRegexp(tokens[i-1],ADJECTIU) && !matchPostagRegexp(tokens[i-1],adjPattern) ) || matchPostagRegexp(tokens[i-1],ADVERBIS_ACCEPTATS) || matchPostagRegexp(tokens[i-1],LOC_ADV) ) \n\t\t\t\t\t\t\t\t\t\t&& !matchPostagRegexp(tokens[i-2],VERB) && !matchPostagRegexp(tokens[i-3],VERB)))) {  \n\t\t\t\t\t\t\tj=1;\n\t\t\t\t\t\t\tkeepCounting=true;\n\t\t\t\t\t\t\twhile (i-j>0 && !adjectiveAgrees && keepCounting)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (gnPattern!=null && matchPostagRegexp(tokens[i-j],NOM) && matchPostagRegexp(tokens[i-j],gnPattern) ) {\n\t\t\t\t\t\t\t\t\tadjectiveAgrees=true; // there is a previous agreeing noun\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (!matchPostagRegexp(tokens[i-j], _GN_) && matchPostagRegexp(tokens[i-j],substPattern)) {\t\n\t\t\t\t\t\t\t\t\tadjectiveAgrees=true; // there is a previous agreeing noun\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t\tkeepCounting=(matchPostagRegexp(tokens[i-j],KEEP_COUNT) || matchRegexp(tokens[i-j].getToken(),KEEP_COUNT2) || matchPostagRegexp(tokens[i-j],ADVERBIS_ACCEPTATS))\t\n\t\t\t\t\t\t\t\t\t\t&& !matchRegexp(tokens[i-j].getToken(),STOP_COUNT);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttheRuleMaches=!adjectiveAgrees;\n\t\t\t\t\t\t\t//Adjective can't be singular\n\t\t\t\t\t\t\tif (isPlural && matchPostagRegexp(tokens[i],ADJECTIU_S)) {\n\t\t\t\t\t\t\t\ttheRuleMaches=true;\n\t\t\t\t\t\t\t} \t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (theRuleMaches) {\n\t\t\t\t\tfinal String msg = \"Reviseu la concordança de l'adjectiu \\u00AB\"+token+\"\\u00BB.\";\n\t\t\t\t\tfinal RuleMatch ruleMatch = new RuleMatch(this, tokens[i].getStartPos(), tokens[i].getStartPos()+token.length(), msg, \"Reviseu la concordança.\");\n\t\t\t\t\truleMatches.add(ruleMatch);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn toRuleMatchArray(ruleMatches);\n\t}","id":63294,"modified_method":"@Override\n\tpublic RuleMatch[] match(final AnalyzedSentence text) {\n\t\tfinal List<RuleMatch> ruleMatches = new ArrayList<RuleMatch>();\n\t\tfinal AnalyzedTokenReadings[] tokens = text.getTokensWithoutWhitespace();\n\t\tfor (int i = 1; i < tokens.length; i++) {   //ignoring token 0, i.e., SENT_START\n\t\t\tif ( matchPostagRegexp(tokens[i],ADJECTIU) && !matchPostagRegexp(tokens[i],CONCORDA) )\n\t\t\t{\n\t\t\t\tfinal String token=tokens[i].getToken();\n\t\t\t\tfinal String prevToken=tokens[i-1].getToken();\n//\t\t\t\tString prevPrevToken=\"\";\n//\t\t\t\tif (i > 2) {\n//\t\t\t\t\tprevPrevToken = tokens[i-2].getToken();\n//\t\t\t\t}\n\t\t\t\tString nextToken=\"\";\n\t\t\t\tif (i < tokens.length-1) {\n\t\t\t\t\tnextToken = tokens[i+1].getToken();\n\t\t\t\t}\n\t\t\t\tint j;\n\t\t\t\tboolean adjectiveAgrees = false;\n\t\t\t\tboolean theRuleMaches = false; \n\t\t\t\tboolean isException = false;\n\t\t\t\tboolean isPlural = true;\n\t\t\t\tboolean isPrevNoun = false;\n\t\t\t\tPattern substPattern = null;\n\t\t\t\tPattern gnPattern = null;\n\t\t\t\tPattern adjPattern = null;\n\t\t\t\tMatcher isUpperCase = UPPERCASE.matcher(token);\n\n\t\t\t\t//Counts nouns and determiners before the adjectives. \n\t\t\t\t//Takes care of acceptable combinations. \n\t\t\t\tint maxLevels=4;\n\t\t\t\tint[] cNt = new int[maxLevels];\n\t\t\t\tint[] cNMS = new int[maxLevels]; int[] cNFS = new int[maxLevels];\n\t\t\t\tint[] cNMP = new int[maxLevels]; int[] cNFP = new int[maxLevels];\n\t\t\t\tint[] cDMS = new int[maxLevels]; int[] cDFS = new int[maxLevels];\n\t\t\t\tint[] cDMP = new int[maxLevels]; int[] cDFP = new int[maxLevels];\n\t\t\t\tint[] cN = new int[maxLevels]; int[] cD = new int[maxLevels]; \n\t\t\t\tfor (j=0; j<maxLevels; j++) { \n\t\t\t\t\tcNt[j] = 0; \n\t\t\t\t\tcNMS[j] = 0; cNFS[j] = 0; cNMP[j] = 0; cNFP[j] = 0; \n\t\t\t\t\tcDMS[j] = 0; cDFS[j] = 0; cDMP[j] = 0; cDFP[j] = 0; \n\t\t\t\t\tcN[j] = 0; cD[j] = 0;\n\t\t\t\t}\n\n\t\t\t\tint level=0;\n\t\t\t\tj=1; \n\t\t\t\tboolean keepCounting=true;\n\t\t\t\twhile (keepCounting && i-j>0 && level<maxLevels)\n\t\t\t\t{\n\t\t\t\t\tif (!isPrevNoun) {  //els noms neutres caldria comptabilitzar-los d'acord amb l'etiqueta _GN_\n\t\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],NOM) && matchPostagRegexp(tokens[i-j],_GN_MS) ) {cNMS[level]++;}\n\t\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],NOM) && matchPostagRegexp(tokens[i-j],_GN_FS) ) {cNFS[level]++;}\n\t\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],NOM) && matchPostagRegexp(tokens[i-j],_GN_MP) ) {cNMP[level]++;}\n\t\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],NOM) && matchPostagRegexp(tokens[i-j],_GN_FP) ) {cNFP[level]++;}\n\t\t\t\t\t\tif (!matchPostagRegexp(tokens[i - j], _GN_)) {\n\t\t\t\t\t\t\tif (matchPostagRegexp(tokens[i - j], NOM_MS)) {cNMS[level]++;}\n\t\t\t\t\t\t\telse if (matchPostagRegexp(tokens[i - j], NOM_FS)) {cNFS[level]++;}\n\t\t\t\t\t\t\telse if (matchPostagRegexp(tokens[i - j], NOM_MP)) {cNMP[level]++;}\n\t\t\t\t\t\t\telse if (matchPostagRegexp(tokens[i - j], NOM_FP)) {cNFP[level]++;}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],NOM)) {cNt[level]++; isPrevNoun=true;} else {isPrevNoun=false;}; //avoid two consecutive nouns\n\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],DET_CS)) {\n\t\t\t\t\t\tif (matchPostagRegexp(tokens[i-j+1],NOM_MS)) {cDMS[level]++;}\n\t\t\t\t\t\tif (matchPostagRegexp(tokens[i-j+1],NOM_FS)) {cDFS[level]++;}\n\t\t\t\t\t}\n\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],DET_MS)) {cDMS[level]++;}\n\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],DET_FS)) {cDFS[level]++;}\n\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],DET_MP)) {cDMP[level]++;}\n\t\t\t\t\tif (matchPostagRegexp(tokens[i-j],DET_FP)) {cDFP[level]++;}\t    \t\t  \n\t\t\t\t\tif (i-j>0) {\n\t\t\t\t\t\tif (matchRegexp(tokens[i-j].getToken(),PREPOSICIO_CANVI_NIVELL) \n\t\t\t\t\t\t\t\t&& !matchRegexp(tokens[i-j-1].getToken(),COORDINACIO_IONI)\n\t\t\t\t\t\t\t\t&& !matchPostagRegexp(tokens[i-j+1],ADVERBI)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tlevel++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (level>0 && matchRegexp(tokens[i-j].getToken(),COORDINACIO_IONI) ) {\n\t\t\t\t\t\tint k=1;\n\t\t\t\t\t\twhile (k<4 && i-j-k>0 \n\t\t\t\t\t\t\t\t&& (matchPostagRegexp(tokens[i-j-k],KEEP_COUNT) \n\t\t\t\t\t\t\t\t\t\t|| matchRegexp(tokens[i-j-k].getToken(),KEEP_COUNT2)\n\t\t\t\t\t\t\t\t\t\t|| matchPostagRegexp(tokens[i-j-k],ADVERBIS_ACCEPTATS) )\n\t\t\t\t\t\t\t\t\t\t&& !matchRegexp(tokens[i-j-k].getToken(),STOP_COUNT) ) {\n\t\t\t\t\t\t\tif (matchPostagRegexp(tokens[i-j-k],PREPOSICIONS)) {\n\t\t\t\t\t\t\t\tj=j+k;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tk++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tj++;\n\t\t\t\t\tkeepCounting=(matchPostagRegexp(tokens[i-j],KEEP_COUNT) || matchRegexp(tokens[i-j].getToken(),KEEP_COUNT2) || matchPostagRegexp(tokens[i-j],ADVERBIS_ACCEPTATS))\t\n\t\t\t\t\t\t\t&& !matchRegexp(tokens[i-j].getToken(),STOP_COUNT);\n\t\t\t\t}\n\t\t\t\tlevel++;\n\t\t\t\tif (level>maxLevels) {\n\t\t\t\t\tlevel=maxLevels;\n\t\t\t\t}\n\t\t\t\tj=0;\n\t\t\t\tint cNtotal=0;\n\t\t\t\tint cDtotal=0;\n\t\t\t\twhile (j<level) { \n\t\t\t\t\tcN[j]=cNMS[j]+cNFS[j]+cNMP[j]+cNFP[j];\n\t\t\t\t\tcD[j]=cDMS[j]+cDFS[j]+cDMP[j]+cDFP[j];\n\t\t\t\t\tcNtotal+=cN[j];\n\t\t\t\t\tcDtotal+=cD[j];\n\n\t\t\t\t\t//exceptions: adjective is plural and there are several nouns before\n\t\t\t\t\tif (matchPostagRegexp(tokens[i],ADJECTIU_MP) \n\t\t\t\t\t\t\t&& (cN[j]>1 || cD[j]>1) \n\t\t\t\t\t\t\t&& (cNMS[j]+cNMP[j]+cDMS[j]+cDMP[j])>0 \n\t\t\t\t\t\t\t&& (cNFS[j]+cNFP[j]<=cNt[j]) ) {\t\n\t\t\t\t\t\tisException=true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (!isException && matchPostagRegexp(tokens[i],ADJECTIU_FP) \n\t\t\t\t\t\t\t&& (cN[j]>1 || cD[j]>1) \n\t\t\t\t\t\t\t&& ((cNMS[j]+cNMP[j]+cDMS[j]+cDMP[j])==0 || (cNt[j]>0 && cNFS[j]+cNFP[j]>=cNt[j]))) {\n\t\t\t\t\t\tisException=true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t//Adjective can't be singular\n\t\t\t\t\tif (cN[j]+cD[j]>0) { //&& level>1\n\t\t\t\t\t\tisPlural=isPlural && cD[j]>1; //cN[j]>1\n\t\t\t\t\t}\n//\t\t\t\t\telse {\n//\t\t\t\t\t\tisPlural=false;\n//\t\t\t\t\t}\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (cNtotal==0 && cDtotal==0) { //there is no noun, (no determinant --> && cDtotal==0)\n\t\t\t\t\tisException=true;\n\t\t\t\t}\n\n\t\t\t\t//exception: noun (or adj) plural + two or more adjectives\t\n\t\t\t\tif (!isException && i < tokens.length-2){\n\t\t\t\t\tMatcher pCoordina = COORDINACIO.matcher(nextToken);\n\t\t\t\t\tif (pCoordina.matches()) {\n\t\t\t\t\t\tif (   ((matchPostagRegexp(tokens[i-1],NOM_MP) || matchPostagRegexp(tokens[i-1],ADJECTIU_MP)) && matchPostagRegexp(tokens[i],ADJECTIU_MS) && matchPostagRegexp(tokens[i+2],ADJECTIU_MS))\n\t\t\t\t\t\t\t\t|| ((matchPostagRegexp(tokens[i-1],NOM_MP) || matchPostagRegexp(tokens[i-1],ADJECTIU_MP)) && matchPostagRegexp(tokens[i],ADJECTIU_MP) && matchPostagRegexp(tokens[i+2],ADJECTIU_MP)) \n\t\t\t\t\t\t\t\t|| ((matchPostagRegexp(tokens[i-1],NOM_FP) || matchPostagRegexp(tokens[i-1],ADJECTIU_FP)) && matchPostagRegexp(tokens[i],ADJECTIU_FS) && matchPostagRegexp(tokens[i+2],ADJECTIU_FS))\n\t\t\t\t\t\t\t\t|| ((matchPostagRegexp(tokens[i-1],NOM_FP) || matchPostagRegexp(tokens[i-1],ADJECTIU_FP)) && matchPostagRegexp(tokens[i],ADJECTIU_FP) && matchPostagRegexp(tokens[i+2],ADJECTIU_FP)))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisException=true;} \n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\t//exception: termes, paraules, etc.\n\t\t\t\tif (!isException && matchRegexp(prevToken,EXCEPCIONS_PREVIA)) {\n\t\t\t\t\tisException=true;}\n\t\t\t\t//exceptions: llevat de, tret de, majúsucula inicial\n\t\t\t\tif ( !isException && ( ((token.equals(\"tret\") || token.equals(\"llevat\") ) && nextToken.equals(\"de\")) \n\t\t\t\t\t\t|| token.equals(\"primer\") || token.equals(\"junts\")  \n\t\t\t\t\t\t|| isUpperCase.matches() ) ) {\n\t\t\t\t\tisException=true;}\n\t\t\t\t//exceptions: atès, atesos..., donat, donats... \n\t\t\t\tif ( !isException && matchRegexp(token,EXCEPCIONS_PARTICIPI) ) {\n\t\t\t\t\tisException=true;}\n\t\t\t\t//exceptions: segur que, just a\n\t\t\t\tif (!isException && i < tokens.length - 1) {\n\t\t\t\t\tif ((token.equals(\"segur\") || token.equals(\"major\") || token.equals(\"menor\")) && nextToken.equals(\"que\")) {\n\t\t\t\t\t\tisException = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//exceptions: sota mateix, dins mateix, \n\t\t\t\tif ( !isException && token.equals(\"mateix\") && matchPostagRegexp(tokens[i-1],ADVERBI) ) {\n\t\t\t\t\tisException=true;}\n\n\t\t\t\t//look into previous words\n\t\t\t\tif (!isException)\n\t\t\t\t{ \n\t\t\t\t\tif (matchPostagRegexp(tokens[i],ADJECTIU_CS)) { substPattern=GN_CS; adjPattern=ADJECTIU_S; gnPattern=_GN_CS;}\n\t\t\t\t\telse if (matchPostagRegexp(tokens[i],ADJECTIU_CP)) { substPattern=GN_CP; adjPattern=ADJECTIU_P; gnPattern=_GN_CP;}\n\t\t\t\t\telse if (matchPostagRegexp(tokens[i],ADJECTIU_MS)) { substPattern=GN_MS; adjPattern=ADJECTIU_MS; gnPattern=_GN_MS;}\n\t\t\t\t\telse if (matchPostagRegexp(tokens[i],ADJECTIU_FS)) { substPattern=GN_FS; adjPattern=ADJECTIU_FS; gnPattern=_GN_FS;}\n\t\t\t\t\telse if (matchPostagRegexp(tokens[i],ADJECTIU_MP)) { substPattern=GN_MP; adjPattern=ADJECTIU_MP; gnPattern=_GN_MP;}\n\t\t\t\t\telse if (matchPostagRegexp(tokens[i],ADJECTIU_FP)) { substPattern=GN_FP; adjPattern=ADJECTIU_FP; gnPattern=_GN_FP;}\n\t\t\t\t \n\t\t\t\t\t\n\t\t\t\t\tif (substPattern!=null) {\n\t\t\t\t\t\t//combinations Det/Nom + adv (1,2..) + adj. If there is agreement, the rule doesn't match\n\t\t\t\t\t\tj=1;\n\t\t\t\t\t\tkeepCounting=true;\n\t\t\t\t\t\twhile (i-j>0 && !isException && keepCounting)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (gnPattern!=null && matchPostagRegexp(tokens[i-j],NOM_DET) && matchPostagRegexp(tokens[i-j],gnPattern) ) {\n\t\t\t\t\t\t\t\tisException=true;     // there is a previous agreeing noun\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (!matchPostagRegexp(tokens[i-j], _GN_) && matchPostagRegexp(tokens[i-j],substPattern)) {\t\n\t\t\t\t\t\t\t\tisException=true;     // there is a previous agreeing noun\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tkeepCounting=!matchPostagRegexp(tokens[i-j],NOM_DET);\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t//previous token is a non-agreeing noun or it is adjective or adverb (not preceded my verb)\n\t\t\t\t\t\tif (!isException && ( (matchPostagRegexp(tokens[i-1],NOM) && !matchPostagRegexp(tokens[i-1],substPattern)) ||\n\t\t\t\t\t\t\t\t(i>3 /*&& !matchPostagRegexp(tokens[i],NOM)*/ && (( matchPostagRegexp(tokens[i-1],ADJECTIU) && !matchPostagRegexp(tokens[i-1],adjPattern) ) || matchPostagRegexp(tokens[i-1],ADVERBIS_ACCEPTATS) || matchPostagRegexp(tokens[i-1],LOC_ADV) ) \n\t\t\t\t\t\t\t\t\t\t&& !matchPostagRegexp(tokens[i-2],VERB) && !matchPostagRegexp(tokens[i-3],VERB)))) {  \n\t\t\t\t\t\t\tj=1;\n\t\t\t\t\t\t\tkeepCounting=true;\n\t\t\t\t\t\t\twhile (i-j>0 && !adjectiveAgrees && keepCounting)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (gnPattern!=null && matchPostagRegexp(tokens[i-j],NOM) && matchPostagRegexp(tokens[i-j],gnPattern) ) {\n\t\t\t\t\t\t\t\t\tadjectiveAgrees=true; // there is a previous agreeing noun\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (!matchPostagRegexp(tokens[i-j], _GN_) && matchPostagRegexp(tokens[i-j],substPattern)) {\t\n\t\t\t\t\t\t\t\t\tadjectiveAgrees=true; // there is a previous agreeing noun\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t\tkeepCounting=(matchPostagRegexp(tokens[i-j],KEEP_COUNT) || matchRegexp(tokens[i-j].getToken(),KEEP_COUNT2) || matchPostagRegexp(tokens[i-j],ADVERBIS_ACCEPTATS))\t\n\t\t\t\t\t\t\t\t\t\t&& !matchRegexp(tokens[i-j].getToken(),STOP_COUNT);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttheRuleMaches=!adjectiveAgrees;\n\t\t\t\t\t\t\t//Adjective can't be singular\n\t\t\t\t\t\t\tif (isPlural && matchPostagRegexp(tokens[i],ADJECTIU_S)) {\n\t\t\t\t\t\t\t\ttheRuleMaches=true;\n\t\t\t\t\t\t\t} \t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (theRuleMaches) {\n\t\t\t\t\tfinal String msg = \"Reviseu la concordança de l'adjectiu \\u00AB\"+token+\"\\u00BB.\";\n\t\t\t\t\tfinal RuleMatch ruleMatch = new RuleMatch(this, tokens[i].getStartPos(), tokens[i].getStartPos()+token.length(), msg, \"Reviseu la concordança.\");\n\t\t\t\t\truleMatches.add(ruleMatch);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn toRuleMatchArray(ruleMatches);\n\t}","commit_id":"b19b1f395edf54dd0d0c45792615123584f21477","url":"https://github.com/languagetool-org/languagetool"},{"original_method":"public void testRule() throws IOException { \r\n\r\n\t\t// correct sentences:\r\n\t\tassertCorrect(\"des de la tradicional divisió en dos regnes establida per Linnaeus\");\r\n\t\tassertCorrect(\"aquestes activitats avui residuals donada ja la manca de territori\");\r\n\t\tassertCorrect(\"instruments de càlcul basats en boles anomenats yupana.\");\r\n\t\tassertCorrect(\"El rei ha trobat l'excusa i l'explicació adequades.\");\r\n\t\tassertCorrect(\"El rei ha trobat l'excusa i l'explicació adequada.\");\r\n\t\tassertCorrect(\"Copa del món femenina.\");   \r\n\t\tassertCorrect(\"Batalla entre asteques i espanyols coneguda com la Nit Trista.\");\r\n\t\tassertCorrect(\"És un informe sobre la cultura japonesa realitzat per encàrrec de l'exèrcit d'Estats Units.\");\r\n\t\tassertCorrect(\"Les perspectives de futur immediat.\");\r\n\t\tassertCorrect(\"Les perspectives de futur immediates.\");\r\n\t\tassertCorrect(\"la tècnica i l'art cinematogràfiques.\");\r\n\t\tassertCorrect(\"la tècnica i l'art cinematogràfic.\");\r\n\t\tassertCorrect(\"la tècnica i l'art cinematogràfics.\");\r\n\t\tassertCorrect(\"la tècnica i l'art cinematogràfica.\");\r\n\t\tassertCorrect(\"Les perspectives i el futur immediats.\");\r\n\t\tassertCorrect(\"Un punt de densitat i gravetat infinites.\");\r\n\t\tassertCorrect(\"De la literatura i la cultura catalanes.\");\r\n\t\tassertCorrect(\"Es fa segons regles de lectura constants i regulars.\");\r\n\t\tassertCorrect(\"Les meitats dreta i esquerra de la mandíbula.\");\r\n\t\tassertCorrect(\"Els períodes clàssic i medieval.\");\r\n\t\tassertCorrect(\"Els costats superior i laterals.\");\r\n\t\tassertCorrect(\"En una molècula de glucosa i una de fructosa unides.\");\r\n\t\t// Should be Incorrect, but it is impossible to detect\r\n\t\tassertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevat\"); \r\n\t\tassertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevats\");\r\n\t\tassertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevada\");\r\n\t\tassertCorrect(\"La massa, el radi i la lluminositat llistats per ell.\");\r\n\t\tassertCorrect(\"La massa, el radi i la lluminositat llistada per ell.\");\r\n\t\tassertCorrect(\"L'origen de l'àbac està literalment perdut en el temps.\");\r\n\t\tassertCorrect(\"L'origen ha esdevingut literalment perdut en el temps.\");\r\n\t\tassertCorrect(\"En efecte, hi ha consideracions racistes, llavors força comunes\");\r\n\t\tassertCorrect(\"el personatge canvià físicament: més alt i prim que el seu germà\");\r\n\t\tassertCorrect(\"un a baix i un altre a dalt identificat amb el símbol\");\r\n\t\tassertCorrect(\"un a baix i un altre a dalt identificats amb el símbol\");\r\n\t\tassertCorrect(\"El tabaquisme és l'addicció al tabac provocada per components.\");\r\n\t\tassertCorrect(\"El \\\"treball\\\" en qüestió, normalment associat a un lloc de treball pagat\");\r\n\t\tassertCorrect(\"una organització paramilitar de protecció civil típicament catalana\");\r\n\t\tassertCorrect(\"un Do dues octaves més alt que l'anterior\");\r\n\t\tassertCorrect(\"són pràcticament dos graus més baixes\");\r\n\t\tassertCorrect(\"és unes 20 vegades més gran que l'espermatozou.\");\r\n\t\tassertCorrect(\"eren quatre vegades més alts\");\r\n\t\tassertCorrect(\"eren uns fets cada volta més inexplicables\");\r\n\t\t//assertCorrect(\"El castell està totalment en ruïnes i completament cobert de vegetació.\");\r\n\t\tassertCorrect(\"han estat tant elogiades per la crítica teatral, com polèmiques\");\r\n\t\tassertCorrect(\"Del segle XVIII però reconstruïda recentment\");\r\n\t\t//assertCorrect(\"vivien a la casa paterna, mig confosos entre els criats.\");\t\t\r\n\t\tassertCorrect(\"La indústria, tradicionalment dedicada al tèxtil i ara molt diversificada,\");\r\n\t\tassertCorrect(\"oficialment la comarca[2] del Moianès, molt reivindicada\");\r\n\t\tassertCorrect(\"En l'actualitat està del tot despoblada de residència permanent.\");\r\n\t\tassertCorrect(\"amb la terra repartida entre diversos propietaris, bé que encara poc poblada\");\r\n\t\tassertCorrect(\"al capdamunt de les Costes d'en Quintanes, sota mateix del Turó\");\r\n\t\tassertCorrect(\"el Moviment per l\u2019Autodeterminació cors\");\r\n\t\tassertCorrect(\"amb una taula de logaritmes davant meu.\");\r\n\t\tassertCorrect(\"la denominació valencià per a la llengua pròpia\");\r\n\t\tassertCorrect(\"Com més petita és l'obertura de diafragma, més grans són la profunditat de camp i la profunditat\");\r\n\t\tassertCorrect(\"es movien mitjançant filferros, tot projectant ombres\");\r\n\t\tassertCorrect(\"sota les grans persianes de color verd recalcades\");\r\n\t\t\r\n\t\t// errors:\r\n\t\tassertIncorrect(\"sota les grans persianes de color verd recalcada\");\r\n\t\tassertIncorrect(\"sota les grans persianes de color verd recalcat\");\r\n\t\tassertIncorrect(\"sota les grans persianes de color verd recalcats\");\r\n\t\tassertIncorrect(\"Són unes corbes de llum complexos.\");\r\n\t\tassertIncorrect(\"fets moltes vegades inexplicable.\");\r\n\t\tassertIncorrect(\"eren uns fets cada volta més inexplicable\");\r\n\t\tassertIncorrect(\"Unes explotacions ramaderes porcina.\");\r\n\t\tassertIncorrect(\"amb un rendiment del 5,62%, més alta que el 5,44%\");\r\n\t\t//assertIncorrect(\"un a baix i un altre a dalt identificada amb el símbol\");\r\n\t\t//assertIncorrect(\"un a baix i un altre a dalt identificades amb el símbol\");\r\n\t\tassertIncorrect(\"En efecte, hi ha consideracions, llavors força comuns\");\r\n \t\tassertIncorrect(\"En efecte, hi ha consideracions racistes, llavors força comuns\");\r\n\t\tassertIncorrect(\"amb una alineació impròpiament habituals\");\r\n\t\tassertIncorrect(\"amb una alineació poc habituals\");\r\n\t\tassertIncorrect(\"amb una alineació molt poc habituals\");\r\n\t\tassertIncorrect(\"El rei ha trobat l'excusa perfecte.\");\r\n\t\tassertIncorrect(\"El rei ha trobat l'excusa i l'explicació adequats.\");\r\n\t\tassertIncorrect(\"El rei ha trobat l'excusa i l'explicació adequat.\");\r\n\t\tassertIncorrect(\"Les perspectives de futur immediata.\");\r\n\t\tassertIncorrect(\"Les perspectives de futur immediats.\");\r\n\t\tassertIncorrect(\"la llengua i la cultura catalans.\");\r\n\t\tassertIncorrect(\"En una molècula de glucosa i una de fructosa units.\");\r\n\t\tassertIncorrect(\"Un punt de densitat i gravetat infinits.\");\r\n\t\tassertIncorrect(\"Índex de desenvolupament humà i qualitat de vida elevades.\");\r\n\t\t// Should be Incorrect, but it is impossible to detect\r\n\t\t// assertIncorrect(\"Índex de desenvolupament humà i qualitat de vida elevat\");\r\n\t\tassertIncorrect(\"La massa, el radi i la lluminositat llistat per ell.\");\r\n\t\tassertIncorrect(\"La massa, el radi i la lluminositat llistades per ell.\");\r\n\r\n\t\t/*   final RuleMatch[] matches = rule.match(langTool.getAnalyzedSentence(\"Les circumstancies que ens envolten són circumstancies extraordinàries.\"));\r\n    assertEquals(2, matches.length);*/\r\n\t}","id":63295,"modified_method":"public void testRule() throws IOException { \r\n\r\n\t\t// correct sentences:\r\n\t\tassertCorrect(\"des de la tradicional divisió en dos regnes establida per Linnaeus\");\r\n\t\tassertCorrect(\"aquestes activitats avui residuals donada ja la manca de territori\");\r\n\t\tassertCorrect(\"instruments de càlcul basats en boles anomenats yupana.\");\r\n\t\tassertCorrect(\"El rei ha trobat l'excusa i l'explicació adequades.\");\r\n\t\tassertCorrect(\"El rei ha trobat l'excusa i l'explicació adequada.\");\r\n\t\tassertCorrect(\"Copa del món femenina.\");   \r\n\t\tassertCorrect(\"Batalla entre asteques i espanyols coneguda com la Nit Trista.\");\r\n\t\tassertCorrect(\"És un informe sobre la cultura japonesa realitzat per encàrrec de l'exèrcit d'Estats Units.\");\r\n\t\tassertCorrect(\"Les perspectives de futur immediat.\");\r\n\t\tassertCorrect(\"Les perspectives de futur immediates.\");\r\n\t\tassertCorrect(\"la tècnica i l'art cinematogràfiques.\");\r\n\t\tassertCorrect(\"la tècnica i l'art cinematogràfic.\");\r\n\t\tassertCorrect(\"la tècnica i l'art cinematogràfics.\");\r\n\t\tassertCorrect(\"la tècnica i l'art cinematogràfica.\");\r\n\t\tassertCorrect(\"Les perspectives i el futur immediats.\");\r\n\t\tassertCorrect(\"Un punt de densitat i gravetat infinites.\");\r\n\t\tassertCorrect(\"De la literatura i la cultura catalanes.\");\r\n\t\tassertCorrect(\"Es fa segons regles de lectura constants i regulars.\");\r\n\t\tassertCorrect(\"Les meitats dreta i esquerra de la mandíbula.\");\r\n\t\tassertCorrect(\"Els períodes clàssic i medieval.\");\r\n\t\t//assertCorrect(\"Els costats superior i laterals.\");\r\n\t\tassertCorrect(\"En una molècula de glucosa i una de fructosa unides.\");\r\n\t\t// Should be Incorrect, but it is impossible to detect\r\n\t\tassertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevat\"); \r\n\t\tassertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevats\");\r\n\t\tassertCorrect(\"Índex de desenvolupament humà i qualitat de vida elevada\");\r\n\t\tassertCorrect(\"La massa, el radi i la lluminositat llistats per ell.\");\r\n\t\tassertCorrect(\"La massa, el radi i la lluminositat llistada per ell.\");\r\n\t\tassertCorrect(\"L'origen de l'àbac està literalment perdut en el temps.\");\r\n\t\tassertCorrect(\"L'origen ha esdevingut literalment perdut en el temps.\");\r\n\t\tassertCorrect(\"En efecte, hi ha consideracions racistes, llavors força comunes\");\r\n\t\tassertCorrect(\"el personatge canvià físicament: més alt i prim que el seu germà\");\r\n\t\tassertCorrect(\"un a baix i un altre a dalt identificat amb el símbol\");\r\n\t\tassertCorrect(\"un a baix i un altre a dalt identificats amb el símbol\");\r\n\t\tassertCorrect(\"El tabaquisme és l'addicció al tabac provocada per components.\");\r\n\t\tassertCorrect(\"El \\\"treball\\\" en qüestió, normalment associat a un lloc de treball pagat\");\r\n\t\tassertCorrect(\"una organització paramilitar de protecció civil típicament catalana\");\r\n\t\tassertCorrect(\"un Do dues octaves més alt que l'anterior\");\r\n\t\tassertCorrect(\"són pràcticament dos graus més baixes\");\r\n\t\tassertCorrect(\"és unes 20 vegades més gran que l'espermatozou.\");\r\n\t\tassertCorrect(\"eren quatre vegades més alts\");\r\n\t\tassertCorrect(\"eren uns fets cada volta més inexplicables\");\r\n\t\t//assertCorrect(\"El castell està totalment en ruïnes i completament cobert de vegetació.\");\r\n\t\tassertCorrect(\"han estat tant elogiades per la crítica teatral, com polèmiques\");\r\n\t\tassertCorrect(\"Del segle XVIII però reconstruïda recentment\");\r\n\t\t//assertCorrect(\"vivien a la casa paterna, mig confosos entre els criats.\");\t\t\r\n\t\tassertCorrect(\"La indústria, tradicionalment dedicada al tèxtil i ara molt diversificada,\");\r\n\t\tassertCorrect(\"oficialment la comarca[2] del Moianès, molt reivindicada\");\r\n\t\tassertCorrect(\"En l'actualitat està del tot despoblada de residència permanent.\");\r\n\t\tassertCorrect(\"amb la terra repartida entre diversos propietaris, bé que encara poc poblada\");\r\n\t\tassertCorrect(\"al capdamunt de les Costes d'en Quintanes, sota mateix del Turó\");\r\n\t\tassertCorrect(\"el Moviment per l\u2019Autodeterminació cors\");\r\n\t\tassertCorrect(\"amb una taula de logaritmes davant meu.\");\r\n\t\tassertCorrect(\"la denominació valencià per a la llengua pròpia\");\r\n\t\tassertCorrect(\"Com més petita és l'obertura de diafragma, més grans són la profunditat de camp i la profunditat\");\r\n\t\tassertCorrect(\"es movien mitjançant filferros, tot projectant ombres\");\r\n\t\tassertCorrect(\"sota les grans persianes de color verd recalcades\");\r\n\t\t\r\n\t\t// errors:\r\n\t\tassertIncorrect(\"pantalons curt o llargs\");\r\n\t\tassertIncorrect(\"sota les grans persianes de color verd recalcada\");\r\n\t\tassertIncorrect(\"sota les grans persianes de color verd recalcat\");\r\n\t\tassertIncorrect(\"sota les grans persianes de color verd recalcats\");\r\n\t\tassertIncorrect(\"Són unes corbes de llum complexos.\");\r\n\t\tassertIncorrect(\"fets moltes vegades inexplicable.\");\r\n\t\tassertIncorrect(\"eren uns fets cada volta més inexplicable\");\r\n\t\tassertIncorrect(\"Unes explotacions ramaderes porcina.\");\r\n\t\tassertIncorrect(\"amb un rendiment del 5,62%, més alta que el 5,44%\");\r\n\t\t//assertIncorrect(\"un a baix i un altre a dalt identificada amb el símbol\");\r\n\t\t//assertIncorrect(\"un a baix i un altre a dalt identificades amb el símbol\");\r\n\t\tassertIncorrect(\"En efecte, hi ha consideracions, llavors força comuns\");\r\n \t\tassertIncorrect(\"En efecte, hi ha consideracions racistes, llavors força comuns\");\r\n\t\tassertIncorrect(\"amb una alineació impròpiament habituals\");\r\n\t\tassertIncorrect(\"amb una alineació poc habituals\");\r\n\t\tassertIncorrect(\"amb una alineació molt poc habituals\");\r\n\t\tassertIncorrect(\"El rei ha trobat l'excusa perfecte.\");\r\n\t\tassertIncorrect(\"El rei ha trobat l'excusa i l'explicació adequats.\");\r\n\t\tassertIncorrect(\"El rei ha trobat l'excusa i l'explicació adequat.\");\r\n\t\tassertIncorrect(\"Les perspectives de futur immediata.\");\r\n\t\tassertIncorrect(\"Les perspectives de futur immediats.\");\r\n\t\tassertIncorrect(\"la llengua i la cultura catalans.\");\r\n\t\tassertIncorrect(\"En una molècula de glucosa i una de fructosa units.\");\r\n\t\tassertIncorrect(\"Un punt de densitat i gravetat infinits.\");\r\n\t\tassertIncorrect(\"Índex de desenvolupament humà i qualitat de vida elevades.\");\r\n\t\t// Should be Incorrect, but it is impossible to detect\r\n\t\t// assertIncorrect(\"Índex de desenvolupament humà i qualitat de vida elevat\");\r\n\t\tassertIncorrect(\"La massa, el radi i la lluminositat llistat per ell.\");\r\n\t\tassertIncorrect(\"La massa, el radi i la lluminositat llistades per ell.\");\r\n\r\n\t\t/*   final RuleMatch[] matches = rule.match(langTool.getAnalyzedSentence(\"Les circumstancies que ens envolten són circumstancies extraordinàries.\"));\r\n    assertEquals(2, matches.length);*/\r\n\t}","commit_id":"b19b1f395edf54dd0d0c45792615123584f21477","url":"https://github.com/languagetool-org/languagetool"},{"original_method":"private CentricConnection createConnection() {\n        // Client ID must already exist in target CRM system and is created\n        // under Admin -> Configure System -> HTTP-XML API Client Manager\n        int clientId = 1;\n\n        // Establish connectivity as a client\n        CentricConnection crm = new CentricConnection();\n        crm.setUrl(\"http://localhost:8080/centric\");\n        crm.setId(\"localhost\");\n        crm.setCode(\"opennms\");\n        crm.setClientId(clientId);\n\n        // Start a new transaction\n        crm.setAutoCommit(false);\n        return crm;\n    }","id":63296,"modified_method":"private CentricConnection createConnection() {\n        // Client ID must already exist in target CRM system and is created\n        // under Admin -> Configure System -> HTTP-XML API Client Manager\n        int clientId = 1;\n        \n        Properties props = getProperties();\n\n        // Establish connectivity as a client\n        CentricConnection crm = new CentricConnection();\n        crm.setUrl(props.getProperty(\"connection.url\"));\n        crm.setId(props.getProperty(\"connection.id\"));\n        crm.setCode(props.getProperty(\"connection.code\"));\n        crm.setClientId(props.getProperty(\"connection.clientId\"));\n\n        // Start a new transaction\n        crm.setAutoCommit(false);\n        return crm;\n    }","commit_id":"3a0ed96ef2a76429eae8eda64b5aa416e078d587","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void saveOrUpdate(Ticket ticket) {\n        CentricConnection crm = createConnection();\n        \n        ArrayList<String> returnFields = new ArrayList<String>();\n        returnFields.add(\"id\");\n        crm.setTransactionMeta(returnFields);\n        \n        \n        DataRecord record = new DataRecord();\n        record.setName(\"ticket\");\n        if (ticket.getId() == null) {\n            record.setAction(DataRecord.INSERT);\n            record.addField(\"orgId\", 0);\n            record.addField(\"contactId\", 1);\n            record.addField(\"enteredBy\", 0);\n            record.addField(\"modifiedBy\", 0);\n        } else {\n            record.setAction(DataRecord.UPDATE);\n            record.addField(\"id\", ticket.getId());\n            record.addField(\"enteredBy\", 0);\n            record.addField(\"modifiedBy\", 0);\n        }\n        record.addField(\"problem\", ticket.getSummary());\n        record.addField(\"comment\", ticket.getDetails());\n        record.addField(\"stateId\", getStateId(ticket.getState()));\n        \n        crm.save(record);\n        \n        boolean success = crm.commit();\n        \n        if (!success) {\n            throw new DataRetrievalFailureException(\"Failed to commit Centric transaction: \"+crm.getErrorText());\n        }\n           \n        \n        Assert.isTrue(1 == crm.getRecordCount(), \"Unexpected record count from CRM\");\n        \n        String id = crm.getResponseValue(\"id\");\n      \n        ticket.setId(id);\n/*\n        <map class=\"org.aspcfs.modules.troubletickets.base.Ticket\" id=\"ticket\">\n        <property alias=\"guid\">id<\/property>\n        <property lookup=\"account\">orgId<\/property>\n        <property lookup=\"contact\">contactId<\/property>\n        <property>problem<\/property>\n        <property>entered<\/property>\n        <property lookup=\"user\">enteredBy<\/property>\n        <property>modified<\/property>\n        <property lookup=\"user\">modifiedBy<\/property>\n        <property>closed<\/property>\n        <property lookup=\"ticketPriority\">priorityCode<\/property>\n        <property>levelCode<\/property>\n        <property lookup=\"lookupDepartment\">departmentCode<\/property>\n        <property lookup=\"lookupTicketSource\">sourceCode<\/property>\n        <property lookup=\"ticketCategory\">catCode<\/property>\n        <property lookup=\"ticketCategory\">subCat1<\/property>\n        <property lookup=\"ticketCategory\">subCat2<\/property>\n        <property lookup=\"ticketCategory\">subCat3<\/property>\n        <property lookup=\"user\">assignedTo<\/property>\n        <property>comment<\/property>\n        <property>solution<\/property>\n        <property lookup=\"ticketSeverity\">severityCode<\/property>\n        <!-- REMOVE: critical -->\n        <!-- REMOVE: notified -->\n        <!-- REMOVE: custom_data -->    \n        <property>location<\/property>\n        <property>assignedDate<\/property>\n        <property>estimatedResolutionDate<\/property>\n        <property>resolutionDate<\/property>\n        <property>cause<\/property>\n        <property>contractId<\/property>\n        <property>assetId<\/property>\n        <property>productId<\/property>\n        <property>customerProductId<\/property>\n        <property>expectation<\/property>\n        <property>projectTicketCount<\/property>\n        <property>estimatedResolutionDateTimeZone<\/property>\n        <property>assignedDateTimeZone<\/property>\n        <property>resolutionDateTimeZone<\/property>\n        <property>statusId<\/property>\n        <property>trashedDate<\/property>\n        <property>userGroupId<\/property>\n        <property>causeId<\/property>\n        <property>resolutionId<\/property>\n        <property>defectId<\/property>\n        <property>escalationLevel<\/property>\n        <property>resolvable<\/property>\n        <property>resolvedBy<\/property>\n        <property>resolvedByDeptCode<\/property>\n        <property>stateId<\/property>\n        <property>siteId<\/property>\n      <\/map>\n      \n*/\n\n    }","id":63297,"modified_method":"public void saveOrUpdate(Ticket ticket) {\n        CentricConnection crm = createConnection();\n        \n        ArrayList<String> returnFields = new ArrayList<String>();\n        returnFields.add(\"id\");\n        crm.setTransactionMeta(returnFields);\n        \n        DataRecord record = getRecord();\n        record.setName(\"ticket\");\n        if (ticket.getId() == null) {\n            record.setAction(DataRecord.INSERT);\n        } else {\n            record.setAction(DataRecord.UPDATE);\n            record.addField(\"id\", ticket.getId());\n        }\n        record.addField(\"problem\", ticket.getSummary());\n        record.addField(\"comment\", ticket.getDetails());\n        record.addField(\"stateId\", getStateId(ticket.getState()));\n        \n        crm.save(record);\n        \n        boolean success = crm.commit();\n        \n        if (!success) {\n            throw new DataRetrievalFailureException(\"Failed to commit Centric transaction: \"+crm.getErrorText());\n        }\n           \n        \n        Assert.isTrue(1 == crm.getRecordCount(), \"Unexpected record count from CRM\");\n        \n        String id = crm.getResponseValue(\"id\");\n      \n        ticket.setId(id);\n/*\n        <map class=\"org.aspcfs.modules.troubletickets.base.Ticket\" id=\"ticket\">\n        <property alias=\"guid\">id<\/property>\n        <property lookup=\"account\">orgId<\/property>\n        <property lookup=\"contact\">contactId<\/property>\n        <property>problem<\/property>\n        <property>entered<\/property>\n        <property lookup=\"user\">enteredBy<\/property>\n        <property>modified<\/property>\n        <property lookup=\"user\">modifiedBy<\/property>\n        <property>closed<\/property>\n        <property lookup=\"ticketPriority\">priorityCode<\/property>\n        <property>levelCode<\/property>\n        <property lookup=\"lookupDepartment\">departmentCode<\/property>\n        <property lookup=\"lookupTicketSource\">sourceCode<\/property>\n        <property lookup=\"ticketCategory\">catCode<\/property>\n        <property lookup=\"ticketCategory\">subCat1<\/property>\n        <property lookup=\"ticketCategory\">subCat2<\/property>\n        <property lookup=\"ticketCategory\">subCat3<\/property>\n        <property lookup=\"user\">assignedTo<\/property>\n        <property>comment<\/property>\n        <property>solution<\/property>\n        <property lookup=\"ticketSeverity\">severityCode<\/property>\n        <!-- REMOVE: critical -->\n        <!-- REMOVE: notified -->\n        <!-- REMOVE: custom_data -->    \n        <property>location<\/property>\n        <property>assignedDate<\/property>\n        <property>estimatedResolutionDate<\/property>\n        <property>resolutionDate<\/property>\n        <property>cause<\/property>\n        <property>contractId<\/property>\n        <property>assetId<\/property>\n        <property>productId<\/property>\n        <property>customerProductId<\/property>\n        <property>expectation<\/property>\n        <property>projectTicketCount<\/property>\n        <property>estimatedResolutionDateTimeZone<\/property>\n        <property>assignedDateTimeZone<\/property>\n        <property>resolutionDateTimeZone<\/property>\n        <property>statusId<\/property>\n        <property>trashedDate<\/property>\n        <property>userGroupId<\/property>\n        <property>causeId<\/property>\n        <property>resolutionId<\/property>\n        <property>defectId<\/property>\n        <property>escalationLevel<\/property>\n        <property>resolvable<\/property>\n        <property>resolvedBy<\/property>\n        <property>resolvedByDeptCode<\/property>\n        <property>stateId<\/property>\n        <property>siteId<\/property>\n      <\/map>\n      \n*/\n\n    }","commit_id":"3a0ed96ef2a76429eae8eda64b5aa416e078d587","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testUpdate() {\n        \n        Ticket ticket = new Ticket();\n        ticket.setState(Ticket.State.OPEN);\n        ticket.setSummary(\"A Ticket at \"+new Date());\n        ticket.setDetails(\"Ticket details for ticket: \"+new Date());\n        \n        m_ticketer.saveOrUpdate(ticket);\n        \n        assertNotNull(ticket.getId());\n        \n        Ticket newTicket = m_ticketer.get(ticket.getId());\n        \n        assertNotNull(newTicket);\n        assertTicketEquals(ticket, newTicket);\n        \n        \n        newTicket.setState(Ticket.State.CANCELLED);\n        newTicket.setDetails(\"These details have changed\");\n        \n        m_ticketer.saveOrUpdate(newTicket);\n        \n        Ticket newerTicket = m_ticketer.get(ticket.getId());\n        \n        assertTicketEquals(newTicket, newerTicket);\n    }","id":63298,"modified_method":"public void testUpdate() throws Exception {\n        \n        Ticket ticket = new Ticket();\n        ticket.setState(Ticket.State.OPEN);\n        ticket.setSummary(\"A Ticket at \"+new Date());\n        ticket.setDetails(\"Ticket details for ticket: \"+new Date());\n        \n        m_ticketer.saveOrUpdate(ticket);\n        \n        assertNotNull(ticket.getId());\n        \n        Ticket newTicket = m_ticketer.get(ticket.getId());\n        \n        assertNotNull(newTicket);\n        assertTicketEquals(ticket, newTicket);\n        \n        \n        newTicket.setState(Ticket.State.CANCELLED);\n        newTicket.setDetails(\"These details have changed\");\n        \n        System.err.println(\"TicketId = \"+newTicket.getId());\n        \n        m_ticketer.saveOrUpdate(newTicket);\n        \n        Thread.sleep(500);\n        \n        Ticket newerTicket = m_ticketer.get(newTicket.getId());\n        \n        assertTicketEquals(newTicket, newerTicket);\n    }","commit_id":"3a0ed96ef2a76429eae8eda64b5aa416e078d587","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testGet() {\n        \n    \t//This may need to be changed ;-)\n        String ticketId = \"4\";\n\t\tTicket newTicket = m_ticketer.get(ticketId);\n        \n        assertNotNull(newTicket);\n        assertEquals(ticketId, newTicket.getId());\n        assertEquals(\"This is the summary\", newTicket.getSummary());\n        \n        //TODO: Implement this later when we need 2 way retrievel of commments/details\n        //assertEquals(\"These are the details\", newTicket.getDetails());\n        \n    }","id":63299,"modified_method":"public void testGet() {\n        \n    \t//This may need to be changed ;-)\n        String ticketId = \"91\";\n\t\tTicket newTicket = m_ticketer.get(ticketId);\n        \n        assertNotNull(newTicket);\n        assertEquals(ticketId, newTicket.getId());\n        assertEquals(\"This is the summary\", newTicket.getSummary());\n        \n        //TODO: Implement this later when we need 2 way retrievel of commments/details\n        //assertEquals(\"These are the details\", newTicket.getDetails());\n        \n    }","commit_id":"3a0ed96ef2a76429eae8eda64b5aa416e078d587","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected void setUp() throws Exception {\n        m_ticketer = new CentricTicketerPlugin();\n    }","id":63300,"modified_method":"@Override\n    protected void setUp() throws Exception {\n        \n        System.setProperty(\"opennms.home\", \"src\"+File.separatorChar+\"test\"+File.separatorChar+\"opennms-home\");\n        \n        m_ticketer = new CentricTicketerPlugin();\n    }","commit_id":"3a0ed96ef2a76429eae8eda64b5aa416e078d587","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void handleRequest() throws ActionException\n    {\n        // Get the action to execute from the request URL\n        XWikiURL requestURL = this.container.getRequest().getURL();\n        String actionName = requestURL.getAction();\n        handleRequest(actionName);\n    }","id":63301,"modified_method":"public void handleRequest() throws ActionException\n    {\n        // Get the action to execute from the request URL\n        XWikiURL requestURL = this.container.getRequest().getURL();\n        \n        // TODO: We need to handle non document actions too.\n        if (requestURL.getType() == XWikiURLType.DOCUMENT) {\n            String actionName = ((XWikiDocumentURL) requestURL).getAction();\n            handleRequest(actionName);\n        }\n    }","commit_id":"2343f3c650ef86ebcbc5b1d2669cd5d460651bf3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void testCreateURLFromPath() throws Exception\n    {\n        XWikiURL url = this.factory.createURL(\"/xwiki/bin/view/Main/WebHome\");\n        assertEquals(\"view\", url.getAction());\n        assertEquals(\"WebHome\", url.getDocumentName().getPage());\n        assertEquals(\"Main\", url.getDocumentName().getSpace());\n    }","id":63302,"modified_method":"public void testCreateURLFromPath() throws Exception\n    {\n        XWikiDocumentURL url = (XWikiDocumentURL) this.factory.createURL(\"/xwiki/bin/view/Main/WebHome\");\n        assertEquals(\"view\", url.getAction());\n        assertEquals(\"WebHome\", url.getDocumentName().getPage());\n        assertEquals(\"Main\", url.getDocumentName().getSpace());\n    }","commit_id":"2343f3c650ef86ebcbc5b1d2669cd5d460651bf3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void testCreateURL() throws Exception\n    {\n        XWikiURL url = this.factory.createURL(\"http://wiki.domain.com:8080/xwiki/bin/view/Main/WebHome?language=fr\");\n        assertEquals(\"view\", url.getAction());\n        assertEquals(\"WebHome\", url.getDocumentName().getPage());\n        assertEquals(\"Main\", url.getDocumentName().getSpace());\n        assertEquals(\"wiki\", url.getDocumentName().getWiki());\n        assertEquals(\"fr\", url.getParameterValue(\"language\"));\n    }","id":63303,"modified_method":"public void testCreateURL() throws Exception\n    {\n        XWikiDocumentURL url = (XWikiDocumentURL) this.factory.createURL(\n            \"http://wiki.domain.com:8080/xwiki/bin/view/Main/WebHome?language=fr\");\n        assertEquals(\"view\", url.getAction());\n        assertEquals(\"WebHome\", url.getDocumentName().getPage());\n        assertEquals(\"Main\", url.getDocumentName().getSpace());\n        assertEquals(\"wiki\", url.getDocumentName().getWiki());\n        assertEquals(\"fr\", url.getParameterValue(\"language\"));\n    }","commit_id":"2343f3c650ef86ebcbc5b1d2669cd5d460651bf3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    protected void setUp() throws Exception\n    {\n        this.factory = (XWikiURLFactory) getComponentManager().lookup(XWikiURLFactory.class);\n    }","id":63304,"modified_method":"@Override\n    protected void setUp() throws Exception\n    {\n        this.factory = (XWikiURLFactory<String>) getComponentManager().lookup(XWikiURLFactory.class);\n    }","commit_id":"2343f3c650ef86ebcbc5b1d2669cd5d460651bf3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public XWikiURL createURL(String urlAsString) throws InvalidURLException\n    {\n        XWikiURL url = new XWikiURL();\n\n        // Use a regex to parse the URL into its discrete parts:\n        // <protocol>://<server>:<port>/<context>/<action>/<space>/<document>\n        Matcher matcher = this.regexPattern.matcher(urlAsString);\n        if (matcher.matches()) {\n\n            // Find the wiki part in the URL\n            String wiki = matcher.group(Integer.parseInt((String) this.regexMappings.get(\"wiki\")));\n            \n            // Find the action part in the URL\n            String action = matcher.group(Integer.parseInt((String) this.regexMappings.get(\"action\")));\n            url.setAction(action);\n\n            // Find the space part in the URL\n            String space = matcher.group(Integer.parseInt((String) this.regexMappings.get(\"space\")));\n\n            // Find the document part in the URL\n            String page = matcher.group(Integer.parseInt((String) this.regexMappings.get(\"page\")));\n\n            url.setDocumentName(new DocumentName(wiki, space, page));\n            \n            // Find the query string if any and transform it into a parameter Map for easy access\n            String queryString = matcher.group(Integer.parseInt((String) this.regexMappings.get(\"queryString\")));\n            if (queryString != null) {\n                StringTokenizer st = new StringTokenizer(queryString, \"&\");\n                while (st.hasMoreTokens()) {\n                    String token = st.nextToken();\n                    int pos = token.indexOf(\"=\");\n                    if (pos == -1) {\n                        throw new InvalidURLException(\"Invalid Query String for token [\" + token\n                            + \"]. Parameter values need an '=' sign between name and value.\");\n                    }\n                    url.addParameter(token.substring(0, pos), token.substring(pos + 1));\n                }\n            }\n\n        } else {\n            throw new InvalidURLException(\"Failed to parse URL [\" + urlAsString + \"] using pattern [\"\n                + this.pattern + \"]\");\n        }\n\n        return url;\n    }","id":63305,"modified_method":"/**\n     * Transform a String representation of a URL into a XWiki URL.\n     * \n     * {@inheritDoc}\n     * @see XWikiURLFactory#createURL(Object)\n     */\n    public XWikiURL createURL(String urlAsString) throws InvalidURLException\n    {\n        XWikiDocumentURL url;\n\n        // Use a regex to parse the URL into its discrete parts:\n        // <protocol>://<server>:<port>/<context>/<action>/<space>/<document>\n        Matcher matcher = this.regexPattern.matcher(urlAsString);\n        if (matcher.matches()) {\n\n            // Find the wiki part in the URL\n            String wiki = matcher.group(Integer.parseInt((String) this.regexMappings.get(\"wiki\")));\n            \n            // Find the space part in the URL\n            String space = matcher.group(Integer.parseInt((String) this.regexMappings.get(\"space\")));\n\n            // Find the document part in the URL\n            String page = matcher.group(Integer.parseInt((String) this.regexMappings.get(\"page\")));\n\n            url = new XWikiDocumentURL(new DocumentName(wiki, space, page));\n            \n            // Find the action part in the URL\n            String action = matcher.group(Integer.parseInt((String) this.regexMappings.get(\"action\")));\n            url.setAction(action);\n            \n            // Find the query string if any and transform it into a parameter Map for easy access\n            String queryString = matcher.group(Integer.parseInt((String) this.regexMappings.get(\"queryString\")));\n            if (queryString != null) {\n                StringTokenizer st = new StringTokenizer(queryString, \"&\");\n                while (st.hasMoreTokens()) {\n                    String token = st.nextToken();\n                    int pos = token.indexOf(\"=\");\n                    if (pos == -1) {\n                        throw new InvalidURLException(\"Invalid Query String for token [\" + token\n                            + \"]. Parameter values need an '=' sign between name and value.\");\n                    }\n                    url.addParameter(token.substring(0, pos), token.substring(pos + 1));\n                }\n            }\n\n        } else {\n            throw new InvalidURLException(\"Failed to parse URL [\" + urlAsString + \"] using pattern [\"\n                + this.pattern + \"]\");\n        }\n\n        return url;\n    }","commit_id":"2343f3c650ef86ebcbc5b1d2669cd5d460651bf3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void createChildrenCells() {\n    for (int row = 0; row < myModel.getRowCount(); row++) {\n      EditorCell_Collection rowCell = this.createRowCell(row);\n      String rowId = myUniquePrefix + \"_row_\" + row;\n      rowCell.setCellId(rowId);\n      final int finalRow = row;\n      for (int column = 0; column < myModel.getColumnCount(); column++) {\n        final int finalColumn = column;\n        SNode value = myModel.getValueAt(row, column);\n        EditorCell editorCell;\n        if (value != null) {\n          editorCell = getEditorContext().createNodeCell(value);\n          editorCell.setAction(CellActionType.DELETE, new EditorCellAction() {\n            public void execute(EditorContext editorContext) {\n            }\n          });\n        } else {\n          editorCell = new EditorCell_Constant(getEditorContext(), getSNode(), \"\");\n          editorCell.setAction(CellActionType.INSERT, new EditorCellAction() {\n            public void execute(EditorContext editorContext) {\n              myModel.createElement(finalRow, finalColumn);\n            }\n          });\n        }\n        if (editorCell.getCellId() == null) {\n          editorCell.setCellId(rowId + \"_column_\" + column);\n        }\n        editorCell.setLeftGap(4);\n        editorCell.setRightGap(4);\n\n        rowCell.addEditorCell(editorCell);\n      }\n\n      EditorCell_Constant lastCell = new EditorCell_Constant(getEditorContext(), getSNode(), \"\");\n      lastCell.setAction(CellActionType.INSERT, new EditorCellAction() {\n        public void execute(EditorContext p0) {\n          myModel.insertRow(finalRow + 1);\n        }\n      });\n      lastCell.setCellId(rowId + \"_lastCell\");\n      rowCell.addEditorCell(lastCell);\n      this.addEditorCell(rowCell);\n    }\n  }","id":63306,"modified_method":"public void createChildrenCells() {\n    for (int row = 0; row < myModel.getRowCount(); row++) {\n      EditorCell_Collection rowCell = this.createRowCell(row);\n      String rowId = myUniquePrefix + \"_row_\" + row;\n      rowCell.setCellId(rowId);\n      rowCell.addEditorCell(createRowEningCell(row, rowId + \"_firstCell\"));\n      final int finalRow = row;\n      for (int column = 0; column < myModel.getColumnCount(); column++) {\n        final int finalColumn = column;\n        SNode value = myModel.getValueAt(row, column);\n        EditorCell editorCell;\n        if (value != null) {\n          editorCell = getEditorContext().createNodeCell(value);\n          editorCell.setAction(CellActionType.DELETE, new EditorCellAction() {\n            public void execute(EditorContext editorContext) {\n            }\n          });\n          editorCell.setAction(CellActionType.INSERT, new EditorCellAction() {\n            public void execute(EditorContext editorContext) {\n              // handle insert column before action \n            }\n          });\n          editorCell.setAction(CellActionType.INSERT_BEFORE, new EditorCellAction() {\n            public void execute(EditorContext p0) {\n              // handle insert column after action \n            }\n          });\n        } else {\n          editorCell = new EditorCell_Constant(getEditorContext(), getSNode(), \"\");\n          editorCell.setAction(CellActionType.INSERT, new EditorCellAction() {\n            public void execute(EditorContext editorContext) {\n              myModel.createElement(finalRow, finalColumn);\n            }\n          });\n        }\n        if (editorCell.getCellId() == null) {\n          editorCell.setCellId(rowId + \"_column_\" + column);\n        }\n        editorCell.setLeftGap(4);\n        editorCell.setRightGap(4);\n\n        rowCell.addEditorCell(editorCell);\n      }\n      rowCell.addEditorCell(createRowEningCell(row + 1, rowId + \"_lastCell\"));\n      this.addEditorCell(rowCell);\n    }\n  }","commit_id":"7da0860c567e200de39e3436c48d95d1d590e4e6","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void paint(Graphics graphics, ParentSettings parentSettings) {\n    super.paint(graphics, parentSettings);\n    graphics.setColor(Color.GRAY);\n    List<Integer> positions = ListSequence.fromList(new ArrayList<Integer>());\n    for (EditorCell row : getCells()) {\n      EditorCell[] rowCells = ((EditorCell_Collection) row).getCells();\n      int rowLastLine = rowCells[rowCells.length - 1].getX();\n      graphics.drawLine(getX(), row.getY(), rowLastLine, row.getY());\n      graphics.drawLine(getX(), row.getY() + row.getHeight(), rowLastLine, row.getY() + row.getHeight());\n      int index = 0;\n      for (EditorCell cell : rowCells) {\n        int x = cell.getX();\n        if (index >= ListSequence.fromList(positions).count()) {\n          ListSequence.fromList(positions).addElement(x);\n        } else {\n          ListSequence.fromList(positions).setElement(index, Math.min(x, ListSequence.fromList(positions).getElement(index)));\n        }\n        index++;\n      }\n    }\n    for (int x : ListSequence.fromList(positions)) {\n      graphics.drawLine(x, getY(), x, getY() + getHeight());\n    }\n  }","id":63307,"modified_method":"@Override\n  public void paint(Graphics graphics, ParentSettings parentSettings) {\n    super.paint(graphics, parentSettings);\n    graphics.setColor(Color.GRAY);\n    List<Integer> positionsX = ListSequence.fromList(new ArrayList<Integer>());\n    List<Integer> positionsY = ListSequence.fromList(new ArrayList<Integer>());\n\n    for (Iterator<EditorCell> rowsIterator = iterator(); rowsIterator.hasNext();) {\n      EditorCell nextRow = rowsIterator.next();\n      assert nextRow instanceof EditorCell_Collection;\n      ListSequence.fromList(positionsY).addElement(nextRow.getY());\n      if (!(rowsIterator.hasNext())) {\n        // adding last row bottom coordinates \n        ListSequence.fromList(positionsY).addElement(nextRow.getY() + nextRow.getHeight());\n      }\n      int index = -1;\n      for (Iterator<EditorCell> cellIterator = ((EditorCell_Collection) nextRow).iterator(); cellIterator.hasNext(); index++) {\n        EditorCell nextCell = cellIterator.next();\n        if (index < 0) {\n          //  skipping first cell \n          continue;\n        }\n        int x = nextCell.getX();\n        if (index >= ListSequence.fromList(positionsX).count()) {\n          ListSequence.fromList(positionsX).addElement(x);\n        } else {\n          ListSequence.fromList(positionsX).setElement(index, Math.min(x, ListSequence.fromList(positionsX).getElement(index)));\n        }\n      }\n      assert index > 0;\n    }\n    assert ListSequence.fromList(positionsX).count() > 1;\n    int firstX = ListSequence.fromList(positionsX).first();\n    int lastX = ListSequence.fromList(positionsX).last();\n    for (int y : ListSequence.fromList(positionsY)) {\n      graphics.drawLine(firstX, y, lastX, y);\n    }\n\n    assert ListSequence.fromList(positionsY).count() > 1;\n    int firstY = ListSequence.fromList(positionsY).first();\n    int lastY = ListSequence.fromList(positionsY).last();\n    for (int x : ListSequence.fromList(positionsX)) {\n      graphics.drawLine(x, firstY, x, lastY);\n    }\n  }","commit_id":"7da0860c567e200de39e3436c48d95d1d590e4e6","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void saveOrUpdate(Ticket ticket) {\n        CentricConnection crm = createConnection();\n        \n        ArrayList<String> returnFields = new ArrayList<String>();\n        returnFields.add(\"id\");\n        crm.setTransactionMeta(returnFields);\n        \n        \n        DataRecord record = new DataRecord();\n        record.setName(\"ticket\");\n        if (ticket.getId() == null) {\n            record.setAction(DataRecord.INSERT);\n            record.addField(\"orgId\", 0);\n            record.addField(\"contactId\", 1);\n            record.addField(\"enteredBy\", 0);\n            record.addField(\"modifiedBy\", 0);\n        } else {\n            record.setAction(DataRecord.UPDATE);\n            record.addField(\"id\", ticket.getId());\n            record.addField(\"enteredBy\", 0);\n            record.addField(\"modifiedBy\", 0);\n        }\n        record.addField(\"problem\", ticket.getSummary());\n        record.addField(\"comment\", ticket.getDetails());\n        record.addField(\"stateId\", getStateId(ticket.getState()));\n        \n        crm.save(record);\n        \n        boolean success = crm.commit();\n        \n        if (!success) {\n            throw new DataRetrievalFailureException(\"Failed to commit Centric transaction: \"+crm.getErrorText());\n        }\n           \n        \n        Assert.isTrue(1 == crm.getRecordCount(), \"Unexpected record count from CRM\");\n        \n        String id = crm.getResponseValue(\"id\");\n      \n        ticket.setId(id);\n/*\n        <map class=\"org.aspcfs.modules.troubletickets.base.Ticket\" id=\"ticket\">\n        <property alias=\"guid\">id<\/property>\n        <property lookup=\"account\">orgId<\/property>\n        <property lookup=\"contact\">contactId<\/property>\n        <property>problem<\/property>\n        <property>entered<\/property>\n        <property lookup=\"user\">enteredBy<\/property>\n        <property>modified<\/property>\n        <property lookup=\"user\">modifiedBy<\/property>\n        <property>closed<\/property>\n        <property lookup=\"ticketPriority\">priorityCode<\/property>\n        <property>levelCode<\/property>\n        <property lookup=\"lookupDepartment\">departmentCode<\/property>\n        <property lookup=\"lookupTicketSource\">sourceCode<\/property>\n        <property lookup=\"ticketCategory\">catCode<\/property>\n        <property lookup=\"ticketCategory\">subCat1<\/property>\n        <property lookup=\"ticketCategory\">subCat2<\/property>\n        <property lookup=\"ticketCategory\">subCat3<\/property>\n        <property lookup=\"user\">assignedTo<\/property>\n        <property>comment<\/property>\n        <property>solution<\/property>\n        <property lookup=\"ticketSeverity\">severityCode<\/property>\n        <!-- REMOVE: critical -->\n        <!-- REMOVE: notified -->\n        <!-- REMOVE: custom_data -->    \n        <property>location<\/property>\n        <property>assignedDate<\/property>\n        <property>estimatedResolutionDate<\/property>\n        <property>resolutionDate<\/property>\n        <property>cause<\/property>\n        <property>contractId<\/property>\n        <property>assetId<\/property>\n        <property>productId<\/property>\n        <property>customerProductId<\/property>\n        <property>expectation<\/property>\n        <property>projectTicketCount<\/property>\n        <property>estimatedResolutionDateTimeZone<\/property>\n        <property>assignedDateTimeZone<\/property>\n        <property>resolutionDateTimeZone<\/property>\n        <property>statusId<\/property>\n        <property>trashedDate<\/property>\n        <property>userGroupId<\/property>\n        <property>causeId<\/property>\n        <property>resolutionId<\/property>\n        <property>defectId<\/property>\n        <property>escalationLevel<\/property>\n        <property>resolvable<\/property>\n        <property>resolvedBy<\/property>\n        <property>resolvedByDeptCode<\/property>\n        <property>stateId<\/property>\n        <property>siteId<\/property>\n      <\/map>\n      \n*/\n\n    }","id":63308,"modified_method":"public void saveOrUpdate(Ticket ticket) {\n        CentricConnection crm = createConnection();\n        \n        ArrayList<String> returnFields = new ArrayList<String>();\n        returnFields.add(\"id\");\n        crm.setTransactionMeta(returnFields);\n        \n        DataRecord record = getRecord();\n        record.setName(\"ticket\");\n        if (ticket.getId() == null) {\n            record.setAction(DataRecord.INSERT);\n        } else {\n            record.setAction(DataRecord.UPDATE);\n            record.addField(\"id\", ticket.getId());\n        }\n        record.addField(\"problem\", ticket.getSummary());\n        record.addField(\"comment\", ticket.getDetails());\n        record.addField(\"stateId\", getStateId(ticket.getState()));\n        \n        crm.save(record);\n        \n        boolean success = crm.commit();\n        \n        if (!success) {\n            throw new DataRetrievalFailureException(\"Failed to commit Centric transaction: \"+crm.getErrorText());\n        }\n           \n        \n        Assert.isTrue(1 == crm.getRecordCount(), \"Unexpected record count from CRM\");\n        \n        String id = crm.getResponseValue(\"id\");\n      \n        ticket.setId(id);\n/*\n        <map class=\"org.aspcfs.modules.troubletickets.base.Ticket\" id=\"ticket\">\n        <property alias=\"guid\">id<\/property>\n        <property lookup=\"account\">orgId<\/property>\n        <property lookup=\"contact\">contactId<\/property>\n        <property>problem<\/property>\n        <property>entered<\/property>\n        <property lookup=\"user\">enteredBy<\/property>\n        <property>modified<\/property>\n        <property lookup=\"user\">modifiedBy<\/property>\n        <property>closed<\/property>\n        <property lookup=\"ticketPriority\">priorityCode<\/property>\n        <property>levelCode<\/property>\n        <property lookup=\"lookupDepartment\">departmentCode<\/property>\n        <property lookup=\"lookupTicketSource\">sourceCode<\/property>\n        <property lookup=\"ticketCategory\">catCode<\/property>\n        <property lookup=\"ticketCategory\">subCat1<\/property>\n        <property lookup=\"ticketCategory\">subCat2<\/property>\n        <property lookup=\"ticketCategory\">subCat3<\/property>\n        <property lookup=\"user\">assignedTo<\/property>\n        <property>comment<\/property>\n        <property>solution<\/property>\n        <property lookup=\"ticketSeverity\">severityCode<\/property>\n        <!-- REMOVE: critical -->\n        <!-- REMOVE: notified -->\n        <!-- REMOVE: custom_data -->    \n        <property>location<\/property>\n        <property>assignedDate<\/property>\n        <property>estimatedResolutionDate<\/property>\n        <property>resolutionDate<\/property>\n        <property>cause<\/property>\n        <property>contractId<\/property>\n        <property>assetId<\/property>\n        <property>productId<\/property>\n        <property>customerProductId<\/property>\n        <property>expectation<\/property>\n        <property>projectTicketCount<\/property>\n        <property>estimatedResolutionDateTimeZone<\/property>\n        <property>assignedDateTimeZone<\/property>\n        <property>resolutionDateTimeZone<\/property>\n        <property>statusId<\/property>\n        <property>trashedDate<\/property>\n        <property>userGroupId<\/property>\n        <property>causeId<\/property>\n        <property>resolutionId<\/property>\n        <property>defectId<\/property>\n        <property>escalationLevel<\/property>\n        <property>resolvable<\/property>\n        <property>resolvedBy<\/property>\n        <property>resolvedByDeptCode<\/property>\n        <property>stateId<\/property>\n        <property>siteId<\/property>\n      <\/map>\n      \n*/\n\n    }","commit_id":"f5ba54396f081415182287788d1dea340c141138","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private CentricConnection createConnection() {\n        // Client ID must already exist in target CRM system and is created\n        // under Admin -> Configure System -> HTTP-XML API Client Manager\n        int clientId = 1;\n\n        // Establish connectivity as a client\n        CentricConnection crm = new CentricConnection();\n        crm.setUrl(\"http://localhost:8080/centric\");\n        crm.setId(\"localhost\");\n        crm.setCode(\"opennms\");\n        crm.setClientId(clientId);\n\n        // Start a new transaction\n        crm.setAutoCommit(false);\n        return crm;\n    }","id":63309,"modified_method":"private CentricConnection createConnection() {\n        // Client ID must already exist in target CRM system and is created\n        // under Admin -> Configure System -> HTTP-XML API Client Manager\n        int clientId = 1;\n        \n        Properties props = getProperties();\n\n        // Establish connectivity as a client\n        CentricConnection crm = new CentricConnection();\n        crm.setUrl(props.getProperty(\"connection.url\"));\n        crm.setId(props.getProperty(\"connection.id\"));\n        crm.setCode(props.getProperty(\"connection.code\"));\n        crm.setClientId(props.getProperty(\"connection.clientId\"));\n\n        // Start a new transaction\n        crm.setAutoCommit(false);\n        return crm;\n    }","commit_id":"f5ba54396f081415182287788d1dea340c141138","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testGet() {\n        \n    \t//This may need to be changed ;-)\n        String ticketId = \"4\";\n\t\tTicket newTicket = m_ticketer.get(ticketId);\n        \n        assertNotNull(newTicket);\n        assertEquals(ticketId, newTicket.getId());\n        assertEquals(\"This is the summary\", newTicket.getSummary());\n        \n        //TODO: Implement this later when we need 2 way retrievel of commments/details\n        //assertEquals(\"These are the details\", newTicket.getDetails());\n        \n    }","id":63310,"modified_method":"public void testGet() {\n        \n    \t//This may need to be changed ;-)\n        String ticketId = \"91\";\n\t\tTicket newTicket = m_ticketer.get(ticketId);\n        \n        assertNotNull(newTicket);\n        assertEquals(ticketId, newTicket.getId());\n        assertEquals(\"This is the summary\", newTicket.getSummary());\n        \n        //TODO: Implement this later when we need 2 way retrievel of commments/details\n        //assertEquals(\"These are the details\", newTicket.getDetails());\n        \n    }","commit_id":"f5ba54396f081415182287788d1dea340c141138","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected void setUp() throws Exception {\n        m_ticketer = new CentricTicketerPlugin();\n    }","id":63311,"modified_method":"@Override\n    protected void setUp() throws Exception {\n        \n        System.setProperty(\"opennms.home\", \"src\"+File.separatorChar+\"test\"+File.separatorChar+\"opennms-home\");\n        \n        m_ticketer = new CentricTicketerPlugin();\n    }","commit_id":"f5ba54396f081415182287788d1dea340c141138","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testUpdate() {\n        \n        Ticket ticket = new Ticket();\n        ticket.setState(Ticket.State.OPEN);\n        ticket.setSummary(\"A Ticket at \"+new Date());\n        ticket.setDetails(\"Ticket details for ticket: \"+new Date());\n        \n        m_ticketer.saveOrUpdate(ticket);\n        \n        assertNotNull(ticket.getId());\n        \n        Ticket newTicket = m_ticketer.get(ticket.getId());\n        \n        assertNotNull(newTicket);\n        assertTicketEquals(ticket, newTicket);\n        \n        \n        newTicket.setState(Ticket.State.CANCELLED);\n        newTicket.setDetails(\"These details have changed\");\n        \n        m_ticketer.saveOrUpdate(newTicket);\n        \n        Ticket newerTicket = m_ticketer.get(ticket.getId());\n        \n        assertTicketEquals(newTicket, newerTicket);\n    }","id":63312,"modified_method":"public void testUpdate() throws Exception {\n        \n        Ticket ticket = new Ticket();\n        ticket.setState(Ticket.State.OPEN);\n        ticket.setSummary(\"A Ticket at \"+new Date());\n        ticket.setDetails(\"Ticket details for ticket: \"+new Date());\n        \n        m_ticketer.saveOrUpdate(ticket);\n        \n        assertNotNull(ticket.getId());\n        \n        Ticket newTicket = m_ticketer.get(ticket.getId());\n        \n        assertNotNull(newTicket);\n        assertTicketEquals(ticket, newTicket);\n        \n        \n        newTicket.setState(Ticket.State.CANCELLED);\n        newTicket.setDetails(\"These details have changed\");\n        \n        System.err.println(\"TicketId = \"+newTicket.getId());\n        \n        m_ticketer.saveOrUpdate(newTicket);\n        \n        Thread.sleep(500);\n        \n        Ticket newerTicket = m_ticketer.get(newTicket.getId());\n        \n        assertTicketEquals(newTicket, newerTicket);\n    }","commit_id":"f5ba54396f081415182287788d1dea340c141138","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected void configure() {\n      bind(PipelineFactory.class).to(SynchronousPipelineFactory.class);\n\n      install(\n        new FactoryModuleBuilder()\n          .implement(new TypeLiteral<Manager<Location, ApplicationWithPrograms>>() { },\n                     new TypeLiteral<LocalManager<Location, ApplicationWithPrograms>>() { })\n          .build(new TypeLiteral<ManagerFactory<Location, ApplicationWithPrograms>>() { })\n      );\n\n      bind(AuthorizationFactory.class).to(PassportAuthorizationFactory.class);\n\n      bind(StoreFactory.class).to(MDTBasedStoreFactory.class);\n\n      Multibinder<HttpHandler> handlerBinder = Multibinder.newSetBinder(binder(), HttpHandler.class,\n                                                                        Names.named(\"appfabric.http.handler\"));\n      handlerBinder.addBinding().to(AppFabricHttpHandler.class);\n      handlerBinder.addBinding().to(PingHandler.class);\n      handlerBinder.addBinding().to(MonitorHandler.class);\n      handlerBinder.addBinding().to(ServiceHttpHandler.class);\n\n      MapBinder<String, ReactorServiceManager> mapBinder = MapBinder.newMapBinder(binder(), String.class,\n                                                                                  ReactorServiceManager.class);\n      mapBinder.addBinding(Constants.Service.LOGSAVER).to(LogSaverServiceManager.class);\n      mapBinder.addBinding(Constants.Service.TRANSACTION).to(TransactionServiceManager.class);\n      mapBinder.addBinding(Constants.Service.METRICS_PROCESSOR).to(MetricsProcessorServiceManager.class);\n      mapBinder.addBinding(Constants.Service.METRICS).to(MetricsServiceManager.class);\n      mapBinder.addBinding(Constants.Service.APP_FABRIC_HTTP).to(InMemoryReactorServiceManager.class);\n      mapBinder.addBinding(Constants.Service.STREAMS).to(StreamServiceManager.class);\n      mapBinder.addBinding(Constants.Service.DATASET_EXECUTOR).to(DatasetExecutorServiceManager.class);\n      mapBinder.addBinding(Constants.Service.EXPLORE_HTTP_USER_SERVICE).to(ExploreServiceManager.class);\n    }","id":63313,"modified_method":"@Override\n    protected void configure() {\n      bind(PipelineFactory.class).to(SynchronousPipelineFactory.class);\n\n      install(\n        new FactoryModuleBuilder()\n          .implement(new TypeLiteral<Manager<Location, ApplicationWithPrograms>>() { },\n                     new TypeLiteral<LocalManager<Location, ApplicationWithPrograms>>() { })\n          .build(new TypeLiteral<ManagerFactory<Location, ApplicationWithPrograms>>() { })\n      );\n\n      bind(AuthorizationFactory.class).to(PassportAuthorizationFactory.class);\n\n      bind(StoreFactory.class).to(MDTBasedStoreFactory.class);\n\n      Multibinder<HttpHandler> handlerBinder = Multibinder.newSetBinder(binder(), HttpHandler.class,\n                                                                        Names.named(\"appfabric.http.handler\"));\n      handlerBinder.addBinding().to(AppFabricHttpHandler.class);\n      handlerBinder.addBinding().to(PingHandler.class);\n      handlerBinder.addBinding().to(MonitorHandler.class);\n      handlerBinder.addBinding().to(ServiceHttpHandler.class);\n    }","commit_id":"858e2bd3cafa1aac5fcf05da8a2c777ef296ef69","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public Module getSingleNodeModules() {\n\n    return Modules.combine(new AppFabricServiceModule(),\n                           new AbstractModule() {\n                             @Override\n                             protected void configure() {\n                               bind(SchedulerService.class).to(LocalSchedulerService.class).in(Scopes.SINGLETON);\n                               bind(Scheduler.class).to(SchedulerService.class);\n                             }\n                           });\n  }","id":63314,"modified_method":"@Override\n  public Module getSingleNodeModules() {\n\n    return Modules.combine(new AppFabricServiceModule(),\n                           new AbstractModule() {\n                             @Override\n                             protected void configure() {\n                               bind(SchedulerService.class).to(LocalSchedulerService.class).in(Scopes.SINGLETON);\n                               bind(Scheduler.class).to(SchedulerService.class);\n\n                               MapBinder<String, ReactorServiceManager> mapBinder = MapBinder.newMapBinder(\n                                 binder(), String.class, ReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.LOGSAVER).to(\n                                 InMemoryLogSaverServiceMananger.class);\n                               mapBinder.addBinding(Constants.Service.TRANSACTION).to(\n                                 InMemoryTransactionServiceManager.class);\n                               //Using LogSaverServiceManager since status check and logs are not available\n                               //for metrics.processor as well\n                               mapBinder.addBinding(Constants.Service.METRICS_PROCESSOR).to(\n                                 InMemoryLogSaverServiceMananger.class);\n                               mapBinder.addBinding(Constants.Service.METRICS).to(InMemoryReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.APP_FABRIC_HTTP).to(\n                                 InMemoryReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.STREAMS).to(InMemoryReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.DATASET_EXECUTOR).to(\n                                 InMemoryReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.EXPLORE_HTTP_USER_SERVICE)\n                                 .to(InMemoryReactorServiceManager.class);\n                             }\n                           });\n  }","commit_id":"858e2bd3cafa1aac5fcf05da8a2c777ef296ef69","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public Module getDistributedModules() {\n\n\n    return Modules.combine(new AppFabricServiceModule(),\n                           new AbstractModule() {\n                             @Override\n                             protected void configure() {\n                               bind(SchedulerService.class).to(DistributedSchedulerService.class).in(Scopes.SINGLETON);\n                               bind(Scheduler.class).to(SchedulerService.class);\n\n                             }\n                           });\n  }","id":63315,"modified_method":"@Override\n  public Module getDistributedModules() {\n\n\n    return Modules.combine(new AppFabricServiceModule(),\n                           new AbstractModule() {\n                             @Override\n                             protected void configure() {\n                               bind(SchedulerService.class).to(DistributedSchedulerService.class).in(Scopes.SINGLETON);\n                               bind(Scheduler.class).to(SchedulerService.class);\n\n                               MapBinder<String, ReactorServiceManager> mapBinder = MapBinder.newMapBinder(\n                                 binder(), String.class, ReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.LOGSAVER).to(LogSaverServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.TRANSACTION).to(TransactionServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.METRICS_PROCESSOR).to(\n                                 MetricsProcessorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.METRICS).to(MetricsServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.APP_FABRIC_HTTP).to(\n                                 InMemoryReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.STREAMS).to(StreamServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.DATASET_EXECUTOR).to(\n                                 DatasetExecutorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.EXPLORE_HTTP_USER_SERVICE)\n                                 .to(ExploreServiceManager.class);\n                             }\n                           });\n  }","commit_id":"858e2bd3cafa1aac5fcf05da8a2c777ef296ef69","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public Module getInMemoryModules() {\n    return Modules.combine(new AppFabricServiceModule(),\n                           new AbstractModule() {\n                             @Override\n                             protected void configure() {\n                               bind(SchedulerService.class).to(LocalSchedulerService.class).in(Scopes.SINGLETON);\n                               bind(Scheduler.class).to(SchedulerService.class);\n                             }\n                           });\n  }","id":63316,"modified_method":"@Override\n  public Module getInMemoryModules() {\n    return Modules.combine(new AppFabricServiceModule(),\n                           new AbstractModule() {\n                             @Override\n                             protected void configure() {\n                               bind(SchedulerService.class).to(LocalSchedulerService.class).in(Scopes.SINGLETON);\n                               bind(Scheduler.class).to(SchedulerService.class);\n\n                               MapBinder<String, ReactorServiceManager> mapBinder = MapBinder.newMapBinder(\n                                 binder(), String.class, ReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.LOGSAVER).to(\n                                 InMemoryLogSaverServiceMananger.class);\n                               mapBinder.addBinding(Constants.Service.TRANSACTION).to(\n                                 InMemoryTransactionServiceManager.class);\n                               //Using LogSaverServiceManager since status check and logs are not available\n                               //for metrics.processor as well\n                               mapBinder.addBinding(Constants.Service.METRICS_PROCESSOR).to(\n                                 InMemoryLogSaverServiceMananger.class);\n                               mapBinder.addBinding(Constants.Service.METRICS).to(InMemoryReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.APP_FABRIC_HTTP).to(\n                                 InMemoryReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.STREAMS).to(InMemoryReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.DATASET_EXECUTOR).to(\n                                 InMemoryReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.EXPLORE_HTTP_USER_SERVICE)\n                                 .to(InMemoryReactorServiceManager.class);\n                             }\n                           });\n  }","commit_id":"858e2bd3cafa1aac5fcf05da8a2c777ef296ef69","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  protected void doInit(TwillContext context) {\n    CConfiguration cConf = getCConfiguration();\n    Configuration hConf = getConfiguration();\n\n    // Set the host name to the one provided by Twill\n    // TODO move the constant\n    cConf.set(Constants.Hive.SERVER_ADDRESS, context.getHost().getHostName());\n\n    injector = Guice.createInjector(\n        new ConfigModule(cConf, hConf),\n        new IOModule(), new ZKClientModule(),\n        new KafkaClientModule(),\n        new MetricsClientRuntimeModule().getDistributedModules(),\n        new DiscoveryRuntimeModule().getDistributedModules(),\n        new LocationRuntimeModule().getDistributedModules(),\n        new DataFabricModules().getDistributedModules(),\n        new HiveRuntimeModule().getDistributedModules(),\n        new AuthModule());\n  }","id":63317,"modified_method":"@Override\n  protected void doInit(TwillContext context) {\n    CConfiguration cConf = getCConfiguration();\n    Configuration hConf = getConfiguration();\n\n    // Set the host name to the one provided by Twill\n    // TODO move the constant\n    cConf.set(Constants.Hive.SERVER_ADDRESS, context.getHost().getHostName());\n\n    // NOTE: twill client will try to load all the classes present here - including hive classes\n    // but it will fail and ignore those classes silently\n\n    injector = Guice.createInjector(\n        new ConfigModule(cConf, hConf),\n        new IOModule(), new ZKClientModule(),\n        new KafkaClientModule(),\n        new MetricsClientRuntimeModule().getDistributedModules(),\n        new DiscoveryRuntimeModule().getDistributedModules(),\n        new LocationRuntimeModule().getDistributedModules(),\n        new DataFabricModules().getDistributedModules(),\n        new HiveRuntimeModule().getDistributedModules(),\n        new AuthModule());\n\n    // TODO remove that - just used to load hive server provider\n    injector.getInstance(HiveServer.class);\n  }","commit_id":"f027ed1da928acbfc45c5103b2fb8ae38f85b97e","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    protected void configure() {\n      bind(HiveServer.class).toProvider(HiveServerProvider.class).in(Scopes.SINGLETON);\n    }","id":63318,"modified_method":"@Override\n    protected void configure() {\n      bind(ExploreService.class).to(HiveExploreService.class).in(Scopes.SINGLETON);\n      bind(HiveServer.class).toProvider(HiveServerProvider.class).in(Scopes.SINGLETON);\n    }","commit_id":"f027ed1da928acbfc45c5103b2fb8ae38f85b97e","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public Module getDistributedModules() {\n    return Modules.combine(\n        new HiveServerModule(),\n        new AbstractModule() {\n          @Override\n          protected void configure() {\n            bind(HiveServerProvider.class).to(HiveDistributedServerProvider.class).in(Scopes.SINGLETON);\n          }\n        });\n  }","id":63319,"modified_method":"@Override\n  public Module getDistributedModules() {\n    return Modules.combine(\n        new HiveServerModule(),\n        new AbstractModule() {\n          @Override\n          protected void configure() {\n\n            // HIVE_CLASSPATH will be defined in startup scripts if Hive is installed.\n            String hiveClassPathStr = System.getenv(Constants.Explore.HIVE_CLASSPATH);\n            LOG.debug(\"Hive classpath = {}\", hiveClassPathStr);\n            if (hiveClassPathStr == null) {\n              // todo throw exception\n            }\n            Iterable<URL> hiveClassPath = getClassPath(hiveClassPathStr);\n            ClassLoader hiveClassLoader =\n                new URLClassLoader(Iterables.toArray(Iterables.concat(hiveClassPath), URL.class),\n                                   this.getClass().getClassLoader());\n\n            bind(ClassLoader.class).annotatedWith(Names.named(\"hive-classloader\")).toInstance(hiveClassLoader);\n\n            bind(HiveServerProvider.class).to(HiveDistributedServerProvider.class).in(Scopes.SINGLETON);\n          }\n        });\n  }","commit_id":"f027ed1da928acbfc45c5103b2fb8ae38f85b97e","url":"https://github.com/caskdata/cdap"},{"original_method":"@Inject\n    private HiveDistributedServerProvider(CConfiguration cConf, Injector injector) {\n      super(cConf, injector);\n    }","id":63320,"modified_method":"@Inject\n    private HiveDistributedServerProvider(CConfiguration cConf, Injector injector) {\n      super(cConf, injector);\n      this.hiveClassLoader = injector.getInstance(Key.get(ClassLoader.class, Names.named(\"hive-classloader\")));\n    }","commit_id":"f027ed1da928acbfc45c5103b2fb8ae38f85b97e","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public DatasetInstanceSpec configure(String instanceName, DatasetInstanceProperties properties) {\n    return new DatasetInstanceSpec.Builder(instanceName, getName())\n      .properties(properties.getProperties())\n      .datasets(tableDef.configure(\"key-value-table\", properties.getProperties(\"key-value-table\")))\n      .build();\n  }","id":63321,"modified_method":"@Override\n  public DatasetSpecification configure(String instanceName, DatasetProperties properties) {\n    return DatasetSpecification.builder(instanceName, getName())\n      .properties(properties.getProperties())\n      .datasets(tableDef.configure(\"key-value-table\", properties))\n      .build();\n  }","commit_id":"f027ed1da928acbfc45c5103b2fb8ae38f85b97e","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public DatasetAdmin getAdmin(DatasetInstanceSpec spec) throws IOException {\n    return tableDef.getAdmin(spec.getSpecification(\"key-value-table\"));\n  }","id":63322,"modified_method":"@Override\n  public DatasetAdmin getAdmin(DatasetSpecification spec) throws IOException {\n    return tableDef.getAdmin(spec.getSpecification(\"key-value-table\"));\n  }","commit_id":"f027ed1da928acbfc45c5103b2fb8ae38f85b97e","url":"https://github.com/caskdata/cdap"},{"original_method":"private TwillPreparer getPreparer() {\n    return prepare(twillRunnerService.prepare(twillApplication)\n                     .addLogHandler(new PrinterLogHandler(new PrintWriter(System.out)))\n    );\n  }","id":63323,"modified_method":"private TwillPreparer getPreparer() {\n    TwillPreparer preparer = twillRunnerService.prepare(twillApplication)\n        .addLogHandler(new PrinterLogHandler(new PrintWriter(System.out)));\n\n    // HIVE_CLASSPATH will be defined in startup scripts if Hive is installed.\n    String hiveClassPathStr = System.getenv(Constants.Explore.HIVE_CLASSPATH);\n    if (hiveClassPathStr != null) {\n      preparer = preparer.withClassPaths(hiveClassPathStr);\n    }\n\n    return prepare(preparer);\n  }","commit_id":"f027ed1da928acbfc45c5103b2fb8ae38f85b97e","url":"https://github.com/caskdata/cdap"},{"original_method":"public Collection<IntPair<Object>> getAll() {\n    ArrayList<IntPair<Object>> result = new ArrayList<IntPair<Object>>(indexes.length);\n    for (int i = 0; i < indexes.length; i++) {\n      result.add(new IntPair<Object>(indexes[i], (T) values[i]));\n    }\n    return result;\n  }","id":63324,"modified_method":"public Collection<IntPair<Object>> getAll() {\n    ArrayList<IntPair<Object>> result = new ArrayList<IntPair<Object>>(indexes.length);\n    for (int i = 0; i < indexes.length; i++) {\n      result.add(new IntPair<Object>(indexes[i], values[i]));\n    }\n    return result;\n  }","commit_id":"2c31a134296fa12b6e40704c7729f83bcd7cc9b4","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public <T> T get(StyleAttribute<T> attribute) {\n    if (StyleAttributes.isSimple(attribute)) {\n      StyleAttributeMap<T> attributeValues = getAttribute(attribute).get();\n      return attributeValues.getTopPair() == null ? attribute.combine(null, null) : attributeValues.getTopPair().value;\n    } else {\n      StyleAttributeMap<T> attributeValues = getCachedAttribute(attribute).get();\n      return attributeValues.getTopPair() == null ? attribute.combine(null, null) : attributeValues.getTopPair().value;\n    }\n  }","id":63325,"modified_method":"@Override\n  public <T> T get(StyleAttribute<T> attribute) {\n    if (StyleAttributes.isSimple(attribute)) {\n      int attributePointer = getAttribute(attribute);\n      IntPair<T> topPair = myAttributes.getTopPair(attribute, attributePointer);\n      return topPair == null ? attribute.combine(null, null) : topPair.value;\n    } else {\n      int cachedAttributePointer = getCachedAttribute(attribute);\n      IntPair<T> topPair = myCachedAttributes.getTopPair(attribute, cachedAttributePointer);\n      return topPair == null ? attribute.combine(null, null) : topPair.value;\n    }\n  }","commit_id":"2c31a134296fa12b6e40704c7729f83bcd7cc9b4","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void putAll(@NotNull Style style, int selfPriority) {\n    Set<StyleAttribute> addedSimple = new StyleAttributeSet();\n    Set<StyleAttribute> addedNotSimple = new StyleAttributeSet();\n    for (StyleAttribute<Object> attribute : style.getSpecifiedAttributes()) {\n      Collection<IntPair<Object>> putAttributes = style.getAll(attribute);\n      if (putAttributes != null) {\n        IntMapPointer<? extends StyleAttributeMap<Object>> attributeValues = getAttribute(attribute);\n        for (IntPair<Object> value : putAttributes) {\n          attributeValues.get().setValue(Math.max(value.index, selfPriority), value.value == null ? DiscardValue.getInstance() : value.value);\n        }\n      }\n      if (StyleAttributes.isSimple(attribute)) {\n        addedSimple.add(attribute);\n      } else {\n        addedNotSimple.add(attribute);\n      }\n    }\n    updateCache(addedNotSimple);\n    fireStyleChanged(new StyleChangeEvent(this, addedSimple));\n  }","id":63326,"modified_method":"@Override\n  public void putAll(@NotNull Style style, int selfPriority) {\n    Set<StyleAttribute> addedSimple = new StyleAttributeSet();\n    Set<StyleAttribute> addedNotSimple = new StyleAttributeSet();\n    for (StyleAttribute<Object> attribute : style.getSpecifiedAttributes()) {\n      Collection<IntPair<Object>> putAttributes = style.getAll(attribute);\n      if (putAttributes != null) {\n        int attributePointer = getAttribute(attribute);\n        for (IntPair<Object> value : putAttributes) {\n          myAttributes.setValue(attribute, attributePointer, Math.max(value.index, selfPriority), value.value == null ? DiscardValue.getInstance() : value.value);\n        }\n      }\n      if (StyleAttributes.isSimple(attribute)) {\n        addedSimple.add(attribute);\n      } else {\n        addedNotSimple.add(attribute);\n      }\n    }\n    updateCache(addedNotSimple);\n    fireStyleChanged(new StyleChangeEvent(this, addedSimple));\n  }","commit_id":"2c31a134296fa12b6e40704c7729f83bcd7cc9b4","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  @Nullable\n  public <T> Collection<IntPair<T>> getAllCached(StyleAttribute<T> attribute) {\n    if (StyleAttributes.isSimple(attribute)) {\n      IntMapPointer<? extends StyleAttributeMap<T>> attributeValue = getAttribute(attribute);\n      return attributeValue.isEmpty() ? null : (Collection) attributeValue.get().getAll();\n    } else {\n      IntMapPointer<? extends StyleAttributeMap<T>> attributeValue = getCachedAttribute(attribute);\n      return attributeValue.isEmpty() ? null : (Collection) attributeValue.get().getAll();\n    }\n  }","id":63327,"modified_method":"@Override\n  @Nullable\n  public <T> Collection<IntPair<T>> getAllCached(StyleAttribute<T> attribute) {\n    if (StyleAttributes.isSimple(attribute)) {\n      int attributePointer = getAttribute(attribute);\n      return TopLevelStyleMap.isEmpty(attributePointer) ? null : (Collection) myAttributes.getAll(attribute, attributePointer);\n    } else {\n      int cachedAttributePointer = getCachedAttribute(attribute);\n      return TopLevelStyleMap.isEmpty(cachedAttributePointer) ? null : (Collection) myCachedAttributes.getAll(attribute, cachedAttributePointer);\n    }\n  }","commit_id":"2c31a134296fa12b6e40704c7729f83bcd7cc9b4","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public <T> int getHighestPriority(StyleAttribute<T> attribute) {\n    IntMapPointer<? extends StyleAttributeMap<T>> attributeValues = getCachedAttribute(attribute);\n    if (attributeValues.isEmpty()) {\n      return -1;\n    } else {\n      return attributeValues.get().getTopPair().index;\n    }\n  }","id":63328,"modified_method":"@Override\n  public <T> int getHighestPriority(StyleAttribute<T> attribute) {\n    int cachedAttributePointer = getCachedAttribute(attribute);\n    if (TopLevelStyleMap.isEmpty(cachedAttributePointer)) {\n      return -1;\n    } else {\n      return myCachedAttributes.getTopPair(attribute, cachedAttributePointer).index;\n    }\n  }","commit_id":"2c31a134296fa12b6e40704c7729f83bcd7cc9b4","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public <T> boolean isSpecified(StyleAttribute<T> attribute) {\n    return ! getAttribute(attribute).isEmpty();\n  }","id":63329,"modified_method":"@Override\n  public <T> boolean isSpecified(StyleAttribute<T> attribute) {\n    return !TopLevelStyleMap.isEmpty(getAttribute(attribute));\n  }","commit_id":"2c31a134296fa12b6e40704c7729f83bcd7cc9b4","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  @Nullable\n  public <T> Collection<IntPair<T>> getAll(StyleAttribute<T> attribute) {\n    IntMapPointer<? extends StyleAttributeMap<T>> attributeValue = getAttribute(attribute);\n    return attributeValue.isEmpty() ? null : attributeValue.get().getDiscardNullReplaced();\n  }","id":63330,"modified_method":"@Override\n  @Nullable\n  public <T> Collection<IntPair<T>> getAll(StyleAttribute<T> attribute) {\n    int attributePointer = getAttribute(attribute);\n    return TopLevelStyleMap.isEmpty(attributePointer) ? null : myAttributes.getDiscardNullReplaced(attribute, attributePointer);\n  }","commit_id":"2c31a134296fa12b6e40704c7729f83bcd7cc9b4","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void updateCache(Collection<StyleAttribute> attributes) {\n    if (attributes.isEmpty()) {\n      return;\n    }\n\n    Set<StyleAttribute> changedAttributes = new StyleAttributeSet();\n    for (StyleAttribute<Object> attribute : attributes) {\n      assert !StyleAttributes.isSimple(attribute);\n\n      IntMapPointer<StyleAttributeMap<Object>> attributeValues = getAttribute(attribute);\n      IntMapPointer<StyleAttributeMap<Object>> cachedAttributeValues = getCachedAttribute(attribute);\n\n      Collection<IntPair<Object>> parentValues = getParentStyle() == null ? null : getParentStyle().getAllCached(attribute);\n      Collection<IntPair<Object>> currentValues = attributeValues.isEmpty() ? null : attributeValues.get().getAll();\n      Collection<IntPair<Object>> oldValues = cachedAttributeValues.isEmpty() ? null : cachedAttributeValues.get().getAll();\n\n      Iterator<IntPair<Object>> parentIterator = parentValues == null ? new EmptyIterator<IntPair<Object>>() : parentValues.iterator();\n      Iterator<IntPair<Object>> currentIterator = currentValues == null ? new EmptyIterator<IntPair<Object>>() : currentValues.iterator();\n\n      IntPair<Object> parentValue;\n      IntPair<Object> currentValue;\n\n      parentValue = parentIterator.hasNext() ? parentIterator.next() : null;\n      currentValue = currentIterator.hasNext() ? currentIterator.next() : null;\n\n      StyleAttributeMapImpl<Object> newValues = new StyleAttributeMapImpl<Object>();\n      while (parentValue != null || currentValue != null ) {\n\n        if (currentValue != null && (parentValue == null || currentValue.index < parentValue.index)) {\n          if (!(currentValue.value instanceof DiscardValue)) {\n            newValues.setValue(currentValue.index, attribute.combine(null, currentValue.value));\n          }\n          currentValue = currentIterator.hasNext() ? currentIterator.next() : null;\n        } else if (currentValue == null || parentValue.index < currentValue.index) {\n          newValues.setValue(parentValue.index, attribute.combine(parentValue.value, null));\n          parentValue = parentIterator.hasNext() ? parentIterator.next() : null;\n        } else {\n          if (!(currentValue.value instanceof DiscardValue)) {\n            newValues.setValue(currentValue.index, attribute.combine(parentValue.value, currentValue.value));\n          }\n          currentValue = currentIterator.hasNext() ? currentIterator.next() : null;\n          parentValue = parentIterator.hasNext() ? parentIterator.next() : null;\n        }\n      }\n\n      Iterator<IntPair<Object>> oldIterator = oldValues == null ? new EmptyIterator<IntPair<Object>>() : oldValues.iterator();\n      Iterator<IntPair<Object>> newIterator = newValues.getAll().iterator();\n      while (oldIterator.hasNext() || newIterator.hasNext()) {\n        if (newIterator.hasNext() ^ oldIterator.hasNext()) {\n          changedAttributes.add(attribute);\n          break;\n        }\n        IntPair<Object> newValue = newIterator.next();\n        IntPair<Object> oldValue = oldIterator.next();\n        if (newValue.index != oldValue.index || !EqualUtil.equals(newValue.value, oldValue.value)) {\n          changedAttributes.add(attribute);\n          break;\n        }\n      }\n      getCachedAttribute(attribute).set(null);\n      for (IntPair<Object> newValue : newValues.getAll()) {\n        getCachedAttribute(attribute).get().setValue(newValue.index, newValue.value);\n      }\n    }\n\n    if (!changedAttributes.isEmpty()) {\n      if (myChildren != null) {\n        for (Style style : myChildren) {\n          style.setParent(this, changedAttributes);\n        }\n      }\n\n      fireStyleChanged(new StyleChangeEvent(this, changedAttributes));\n    }\n  }","id":63331,"modified_method":"private void updateCache(Collection<StyleAttribute> attributes) {\n    if (attributes.isEmpty()) {\n      return;\n    }\n\n    Set<StyleAttribute> changedAttributes = new StyleAttributeSet();\n    for (StyleAttribute<Object> attribute : attributes) {\n      assert !StyleAttributes.isSimple(attribute);\n\n      int attributePointer = getAttribute(attribute);\n      int cachedAttributePointer = getCachedAttribute(attribute);\n\n      Collection<IntPair<Object>> parentValues = getParentStyle() == null ? null : getParentStyle().getAllCached(attribute);\n      Collection<IntPair<Object>> currentValues = TopLevelStyleMap.isEmpty(attributePointer) ? null : myAttributes.getAll(attribute, attributePointer);\n      Collection<IntPair<Object>> oldValues = TopLevelStyleMap.isEmpty(cachedAttributePointer) ? null : myCachedAttributes.getAll(attribute, cachedAttributePointer);\n\n      Iterator<IntPair<Object>> parentIterator = parentValues == null ? new EmptyIterator<IntPair<Object>>() : parentValues.iterator();\n      Iterator<IntPair<Object>> currentIterator = currentValues == null ? new EmptyIterator<IntPair<Object>>() : currentValues.iterator();\n\n      IntPair<Object> parentValue;\n      IntPair<Object> currentValue;\n\n      parentValue = parentIterator.hasNext() ? parentIterator.next() : null;\n      currentValue = currentIterator.hasNext() ? currentIterator.next() : null;\n\n      StyleAttributeMapImpl<Object> newValues = new StyleAttributeMapImpl<Object>();\n      while (parentValue != null || currentValue != null ) {\n\n        if (currentValue != null && (parentValue == null || currentValue.index < parentValue.index)) {\n          if (!(currentValue.value instanceof DiscardValue)) {\n            newValues.setValue(currentValue.index, attribute.combine(null, currentValue.value));\n          }\n          currentValue = currentIterator.hasNext() ? currentIterator.next() : null;\n        } else if (currentValue == null || parentValue.index < currentValue.index) {\n          newValues.setValue(parentValue.index, attribute.combine(parentValue.value, null));\n          parentValue = parentIterator.hasNext() ? parentIterator.next() : null;\n        } else {\n          if (!(currentValue.value instanceof DiscardValue)) {\n            newValues.setValue(currentValue.index, attribute.combine(parentValue.value, currentValue.value));\n          }\n          currentValue = currentIterator.hasNext() ? currentIterator.next() : null;\n          parentValue = parentIterator.hasNext() ? parentIterator.next() : null;\n        }\n      }\n\n      Iterator<IntPair<Object>> oldIterator = oldValues == null ? new EmptyIterator<IntPair<Object>>() : oldValues.iterator();\n\n      Iterator<IntPair<Object>> newIterator = newValues.getAll().iterator();\n      while (oldIterator.hasNext() || newIterator.hasNext()) {\n        if (newIterator.hasNext() ^ oldIterator.hasNext()) {\n          changedAttributes.add(attribute);\n          break;\n        }\n        IntPair<Object> newValue = newIterator.next();\n        IntPair<Object> oldValue = oldIterator.next();\n        if (newValue.index != oldValue.index || !EqualUtil.equals(newValue.value, oldValue.value)) {\n          changedAttributes.add(attribute);\n          break;\n        }\n      }\n      myCachedAttributes.set(attribute, cachedAttributePointer, newValues);\n    }\n\n    if (!changedAttributes.isEmpty()) {\n      if (myChildren != null) {\n        for (Style style : myChildren) {\n          style.setParent(this, changedAttributes);\n        }\n      }\n\n      fireStyleChanged(new StyleChangeEvent(this, changedAttributes));\n    }\n  }","commit_id":"2c31a134296fa12b6e40704c7729f83bcd7cc9b4","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public <T> void set(StyleAttribute<T> attribute, int priority, T value) {\n    IntMapPointer<? extends StyleAttributeMap<T>> attributeValues = getAttribute(attribute);\n    setValue(attributeValues, priority, value);\n    Set<StyleAttribute> attributeSet = Collections.<StyleAttribute>singleton(attribute);\n    if (StyleAttributes.isSimple(attribute)) {\n      fireStyleChanged(new StyleChangeEvent(this, attributeSet));\n    } else {\n      updateCache(attributeSet);\n    }\n  }","id":63332,"modified_method":"@Override\n  public <T> void set(StyleAttribute<T> attribute, int priority, T value) {\n    int attributePointer = getAttribute(attribute);\n    myAttributes.setValue(attribute, attributePointer, priority, value);\n    Set<StyleAttribute> attributeSet = Collections.<StyleAttribute>singleton(attribute);\n    if (StyleAttributes.isSimple(attribute)) {\n      fireStyleChanged(new StyleChangeEvent(this, attributeSet));\n    } else {\n      updateCache(attributeSet);\n    }\n  }","commit_id":"2c31a134296fa12b6e40704c7729f83bcd7cc9b4","url":"https://github.com/JetBrains/MPS"},{"original_method":"private Set<StyleAttribute> getNonDefaultValuedAttributes() {\n    Set<StyleAttribute> result = new StyleAttributeSet();\n    for (StyleAttribute attribute : StyleAttributes.getNotSimpleAttributes()) {\n      if (! getCachedAttribute(attribute).isEmpty()) {\n        result.add(attribute);\n      }\n    }\n    return result;\n  }","id":63333,"modified_method":"private Set<StyleAttribute> getNonDefaultValuedAttributes() {\n    Set<StyleAttribute> result = new StyleAttributeSet();\n    for (StyleAttribute attribute : StyleAttributes.getNotSimpleAttributes()) {\n      if (! TopLevelStyleMap.isEmpty(getCachedAttribute(attribute))) {\n        result.add(attribute);\n      }\n    }\n    return result;\n  }","commit_id":"2c31a134296fa12b6e40704c7729f83bcd7cc9b4","url":"https://github.com/JetBrains/MPS"},{"original_method":"private <T> void setCached(StyleAttribute<T> attribute, int priority, T value) {\n    assert !StyleAttributes.isSimple(attribute);\n    assert ! (value instanceof DiscardValue);\n    IntMapPointer<? extends StyleAttributeMap<T>> cachedAttributeValues = getCachedAttribute(attribute);\n    setValue(cachedAttributeValues, priority, value);\n  }","id":63334,"modified_method":"private <T> void setCached(StyleAttribute<T> attribute, int priority, T value) {\n    assert !StyleAttributes.isSimple(attribute);\n    assert ! (value instanceof DiscardValue);\n    int cachedAttributePointer = getCachedAttribute(attribute);\n    myCachedAttributes.setValue(attribute, cachedAttributePointer, priority, value);\n  }","commit_id":"2c31a134296fa12b6e40704c7729f83bcd7cc9b4","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void removeAll(@NotNull Style style) {\n    Set<StyleAttribute> addedSimple = new StyleAttributeSet();\n    Set<StyleAttribute> addedNotSimple = new StyleAttributeSet();\n    for (StyleAttribute<Object> attribute : style.getSpecifiedAttributes()) {\n      Collection<IntPair<Object>> putAttributes = style.getAll(attribute);\n      if (putAttributes != null) {\n        IntMapPointer<? extends StyleAttributeMap<Object>> attributeValues = getAttribute(attribute);\n        for (IntPair<Object> value : putAttributes) {\n          attributeValues.get().setValue(value.index, DiscardValue.getInstance());\n        }\n      }\n      if (StyleAttributes.isSimple(attribute)) {\n        addedSimple.add(attribute);\n      } else {\n        addedNotSimple.add(attribute);\n      }\n    }\n    updateCache(addedNotSimple);\n    fireStyleChanged(new StyleChangeEvent(this, addedSimple));\n  }","id":63335,"modified_method":"@Override\n  public void removeAll(@NotNull Style style) {\n    Set<StyleAttribute> addedSimple = new StyleAttributeSet();\n    Set<StyleAttribute> addedNotSimple = new StyleAttributeSet();\n    for (StyleAttribute<Object> attribute : style.getSpecifiedAttributes()) {\n      Collection<IntPair<Object>> putAttributes = style.getAll(attribute);\n      if (putAttributes != null) {\n        int attributePointer = getAttribute(attribute);\n        for (IntPair<Object> value : putAttributes) {\n          myAttributes.setValue(attribute, attributePointer, value.index, DiscardValue.getInstance());\n        }\n      }\n      if (StyleAttributes.isSimple(attribute)) {\n        addedSimple.add(attribute);\n      } else {\n        addedNotSimple.add(attribute);\n      }\n    }\n    updateCache(addedNotSimple);\n    fireStyleChanged(new StyleChangeEvent(this, addedSimple));\n  }","commit_id":"2c31a134296fa12b6e40704c7729f83bcd7cc9b4","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void setValue(int index, T value) {\n    StyleMap.IntMapPointer<T> searchResult = search(index);\n    searchResult.set(value);\n  }","id":63336,"modified_method":"public void setValue(int index, T value) {\n    StyleMapImpl.set(this, index, search(index), value);\n  }","commit_id":"2c31a134296fa12b6e40704c7729f83bcd7cc9b4","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected IntMapPointerImpl searchInternal(int index) {\n    int pointer = Arrays.binarySearch(indexes, index);\n    IntMapPointerImpl result;\n    if (pointer >= 0) {\n      result = new IntMapPointerImpl(pointer, index);\n    } else {\n      result = new IntMapPointerImpl(pointer - 1, index);\n    }\n    return result;\n  }","id":63337,"modified_method":"protected int searchInternal(int index) {\n    int pointer = Arrays.binarySearch(indexes, index);\n    if (pointer >= 0) {\n      return pointer;\n    } else {\n      return pointer - 1;\n    }\n  }","commit_id":"2c31a134296fa12b6e40704c7729f83bcd7cc9b4","url":"https://github.com/JetBrains/MPS"},{"original_method":"public <T> IntMapPointer<StyleAttributeMap<T>> getAttribute(StyleAttribute<T> attribute) {\n    return (IntMapPointer<StyleAttributeMap<T>>) (IntMapPointer) search(attribute.getIndex());\n  }","id":63338,"modified_method":"public <T> int getAttribute(StyleAttribute<T> attribute) {\n    return search(attribute.getIndex());\n  }","commit_id":"2c31a134296fa12b6e40704c7729f83bcd7cc9b4","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public StyleMap.IntMapPointer<StyleAttributeMap<Object>> search(int index) {\n    IntMapPointer<StyleAttributeMap<Object>> result = super.search(index);\n    return new StyleMapIntMapPointer<Object>(result);\n  }","id":63339,"modified_method":"@Override\n  public int search(int index) {\n    return super.search(index);\n  }","commit_id":"2c31a134296fa12b6e40704c7729f83bcd7cc9b4","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void main(String[] args) {\n    TopLevelStyleMap topMap = new TopLevelStyleMap();\n    StyleMap.IntMapPointer<StyleAttributeMap<Object>> pnt1 = topMap.search(1);\n    assert pnt1.isEmpty();\n    assert pnt1.get().getAll().isEmpty();\n    pnt1.get().search(0).set(\"bcd0\");\n    assert topMap.search(1).get().getTopPair().value.equals(\"bcd0\");\n    pnt1.get().setValue(\"abc0\");\n    assert topMap.search(1).get().getTopPair().value.equals(\"abc0\");\n    assert topMap.search(1).get() instanceof SingleElemStyleAttributeMap;\n    pnt1.get().search(1).set(\"abc1\");\n    assert topMap.search(1).get().getTopPair().value.equals(\"abc1\");\n    assert topMap.search(1).get().search(1).get().equals(\"abc1\");\n    assert topMap.search(1).get().search(0).get().equals(\"abc0\");\n    assert topMap.search(1).get() instanceof StyleAttributeMapWrapper;\n    pnt1.get().search(0).set(null);\n    assert topMap.search(1).get().search(0).isEmpty();\n    topMap.search(1).get().setValue(1, DiscardValue.getInstance());\n    topMap.search(1).get().getTopPair();\n\n    topMap.search(2).get().search(1).set(DiscardValue.getInstance());\n    assert topMap.search(2).get().search(1).get().equals(DiscardValue.getInstance());\n\n    topMap.search(3).get().search(0).set(\"123abc\");\n    topMap.search(3).get().search(1).set(\"123bcd\");\n    topMap.search(3).get().search(2).set(null);\n    topMap.search(3).get().search(1).set(null);\n    assert topMap.search(3).get() instanceof SingleElemStyleAttributeMap;\n\n  }","id":63340,"modified_method":"public static void main(String[] args) {\n    TopLevelStyleMap topMap = new TopLevelStyleMap();\n    StyleAttribute<String> ind1 = StyleAttributes.NAVIGATABLE_REFERENCE;\n    int pnt1 = topMap.getAttribute(ind1);\n    assert isEmpty(pnt1);\n    assert topMap.getAll(ind1, pnt1).isEmpty();\n    topMap.setValue(ind1, pnt1, 0, \"bcd0\");\n    assert topMap.getValue(ind1, 0).equals(\"bcd0\");\n    topMap.setValue(ind1, pnt1, 0, \"abc0\");\n    assert topMap.getValue(ind1, 0).equals(\"abc0\");\n    assert !(topMap.getValue(ind1, 0) instanceof StyleAttributeMapImpl);\n    topMap.setValue(ind1, pnt1, 1, \"abc1\");\n    assert topMap.getTopPair(ind1).value.equals(\"abc1\");\n    assert topMap.getTopPair(ind1, pnt1).value.equals(\"abc1\");\n    assert topMap.getValue(ind1, pnt1, 1).equals(\"abc1\");\n    assert topMap.getValue(ind1, pnt1, 0).equals(\"abc0\");\n    assert topMap.getValue(ind1, 0) instanceof StyleAttributeMapImpl;\n    topMap.setValue(ind1, pnt1, 0, null);\n    assert topMap.getValue(ind1, pnt1, 0) == null;\n    topMap.setValue(ind1, 1, DiscardValue.getInstance());\n    assert topMap.getTopPair(ind1) == null;\n    /*\n\n    topMap.search(1).get().setValue(1, DiscardValue.getInstance());\n    topMap.search(1).get().getTopPair();\n\n    topMap.search(2).get().search(1).set(DiscardValue.getInstance());\n    assert topMap.search(2).get().search(1).get().equals(DiscardValue.getInstance());\n\n    topMap.search(3).get().search(0).set(\"123abc\");\n    topMap.search(3).get().search(1).set(\"123bcd\");\n    topMap.search(3).get().search(2).set(null);\n    topMap.search(3).get().search(1).set(null);\n    assert topMap.search(3).get() instanceof SingleElemStyleAttributeMap;\n    */\n  }","commit_id":"2c31a134296fa12b6e40704c7729f83bcd7cc9b4","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void init(String[] args) {\n    CConfiguration cConf = CConfiguration.create();\n    Configuration hConf = HBaseConfiguration.create(new HdfsConfiguration());\n\n    zkClientService =\n      ZKClientServices.delegate(\n        ZKClients.reWatchOnExpire(\n          ZKClients.retryOnFailure(\n            ZKClientService.Builder.of(cConf.get(Constants.Zookeeper.QUORUM))\n                                  .setSessionTimeout(cConf.getInt(Constants.Zookeeper.CFG_SESSION_TIMEOUT_MILLIS,\n                                                                  Constants.Zookeeper.DEFAULT_SESSION_TIMEOUT_MILLIS))\n                                  .build(),\n            RetryStrategies.fixDelay(2, TimeUnit.SECONDS)\n          )\n        )\n      );\n    kafkaZKNamespace = cConf.get(KafkaConstants.ConfigKeys.ZOOKEEPER_NAMESPACE_CONFIG);\n    kafkaClientService = new ZKKafkaClientService(kafkaZKNamespace == null\n                               ? zkClientService\n                               : ZKClients.namespace(zkClientService, \"/\" + kafkaZKNamespace));\n    injector = Guice.createInjector(\n      new MetricsClientRuntimeModule(kafkaClientService).getDistributedModules(),\n      new ConfigModule(cConf, hConf),\n      new IOModule(),\n      new LocationRuntimeModule().getDistributedModules(),\n      new DiscoveryRuntimeModule(zkClientService).getDistributedModules(),\n      new AppFabricServiceRuntimeModule().getDistributedModules(),\n      new ProgramRunnerRuntimeModule().getDistributedModules(),\n      new DataFabricModules(cConf, hConf).getDistributedModules()\n    );\n\n  }","id":63341,"modified_method":"@Override\n  public void init(String[] args) {\n    CConfiguration cConf = CConfiguration.create();\n    Configuration hConf = HBaseConfiguration.create(new HdfsConfiguration());\n\n    zkClientService =\n      ZKClientServices.delegate(\n        ZKClients.reWatchOnExpire(\n          ZKClients.retryOnFailure(\n            ZKClientService.Builder.of(cConf.get(Constants.Zookeeper.QUORUM))\n                                  .setSessionTimeout(cConf.getInt(Constants.Zookeeper.CFG_SESSION_TIMEOUT_MILLIS,\n                                                                  Constants.Zookeeper.DEFAULT_SESSION_TIMEOUT_MILLIS))\n                                  .build(),\n            RetryStrategies.fixDelay(2, TimeUnit.SECONDS)\n          )\n        )\n      );\n    kafkaZKNamespace = cConf.get(KafkaConstants.ConfigKeys.ZOOKEEPER_NAMESPACE_CONFIG);\n    kafkaClientService = new ZKKafkaClientService(kafkaZKNamespace == null\n                               ? zkClientService\n                               : ZKClients.namespace(zkClientService, \"/\" + kafkaZKNamespace));\n    injector = Guice.createInjector(\n      new MetricsClientRuntimeModule(kafkaClientService).getDistributedModules(),\n      new ConfigModule(cConf, hConf),\n      new IOModule(),\n      new WeaveModule(),\n      new LocationRuntimeModule().getDistributedModules(),\n      new DiscoveryRuntimeModule(zkClientService).getDistributedModules(),\n      new AppFabricServiceRuntimeModule().getDistributedModules(),\n      new ProgramRunnerRuntimeModule().getDistributedModules(),\n      new DataFabricModules(cConf, hConf).getDistributedModules()\n    );\n\n  }","commit_id":"fd02a75f2bc1f01e24641ad740e3b0a06b0622b0","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  protected void configure() {\n    // Bind and expose WeaveRunner\n    bind(WeaveRunnerService.class).to(AppFabricWeaveRunnerService.class);\n    bind(WeaveRunner.class).to(WeaveRunnerService.class);\n\n    expose(WeaveRunner.class);\n    expose(WeaveRunnerService.class);\n\n    // Bind ProgramRunner\n    MapBinder<ProgramRunnerFactory.Type, ProgramRunner> runnerFactoryBinder =\n      MapBinder.newMapBinder(binder(), ProgramRunnerFactory.Type.class, ProgramRunner.class);\n    runnerFactoryBinder.addBinding(ProgramRunnerFactory.Type.FLOW).to(DistributedFlowProgramRunner.class);\n    runnerFactoryBinder.addBinding(ProgramRunnerFactory.Type.PROCEDURE).to(DistributedProcedureProgramRunner.class);\n    runnerFactoryBinder.addBinding(ProgramRunnerFactory.Type.MAPREDUCE).to(DistributedMapReduceProgramRunner.class);\n    runnerFactoryBinder.addBinding(ProgramRunnerFactory.Type.WORKFLOW).to(DistributedWorkflowProgramRunner.class);\n    runnerFactoryBinder.addBinding(ProgramRunnerFactory.Type.WEBAPP).to(DistributedWebappProgramRunner.class);\n\n    // Bind and expose ProgramRuntimeService\n    bind(ProgramRuntimeService.class).to(DistributedProgramRuntimeService.class).in(Scopes.SINGLETON);\n    expose(ProgramRuntimeService.class);\n  }","id":63342,"modified_method":"@Override\n  protected void configure() {\n    // Bind ProgramRunner\n    MapBinder<ProgramRunnerFactory.Type, ProgramRunner> runnerFactoryBinder =\n      MapBinder.newMapBinder(binder(), ProgramRunnerFactory.Type.class, ProgramRunner.class);\n    runnerFactoryBinder.addBinding(ProgramRunnerFactory.Type.FLOW).to(DistributedFlowProgramRunner.class);\n    runnerFactoryBinder.addBinding(ProgramRunnerFactory.Type.PROCEDURE).to(DistributedProcedureProgramRunner.class);\n    runnerFactoryBinder.addBinding(ProgramRunnerFactory.Type.MAPREDUCE).to(DistributedMapReduceProgramRunner.class);\n    runnerFactoryBinder.addBinding(ProgramRunnerFactory.Type.WORKFLOW).to(DistributedWorkflowProgramRunner.class);\n    runnerFactoryBinder.addBinding(ProgramRunnerFactory.Type.WEBAPP).to(DistributedWebappProgramRunner.class);\n\n    // Bind and expose ProgramRuntimeService\n    bind(ProgramRuntimeService.class).to(DistributedProgramRuntimeService.class).in(Scopes.SINGLETON);\n    expose(ProgramRuntimeService.class);\n  }","commit_id":"fd02a75f2bc1f01e24641ad740e3b0a06b0622b0","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public Module getDistributedModules() {\n    return Modules.combine(getCommonModules(), new PrivateModule() {\n      @Override\n      protected void configure() {\n        bind(WeaveRunnerService.class).to(YarnWeaveRunnerService.class);\n        bind(new TypeLiteral<Iterable<WeaveRunner.LiveInfo>>() {}).toProvider(WeaveLiveInfoProvider.class);\n        expose(WeaveRunnerService.class);\n      }\n\n      @Singleton\n      @Provides\n      private YarnWeaveRunnerService provideYarnWeaveRunnerService(CConfiguration configuration,\n                                                                   YarnConfiguration yarnConfiguration,\n                                                                   LocationFactory locationFactory) {\n        String zkNamespace = configuration.get(Constants.CFG_WEAVE_ZK_NAMESPACE, \"/weave\");\n        YarnConfiguration yarnConfig = new YarnConfiguration(yarnConfiguration);\n        yarnConfig.set(Constants.CFG_WEAVE_RESERVED_MEMORY_MB,\n                       configuration.get(Constants.CFG_WEAVE_RESERVED_MEMORY_MB));\n        return new YarnWeaveRunnerService(yarnConfig,\n                                          configuration.get(Constants.Zookeeper.QUORUM) + zkNamespace,\n                                          LocationFactories.namespace(locationFactory, \"weave\"));\n      }\n    });\n  }","id":63343,"modified_method":"@Override\n  public Module getDistributedModules() {\n    return Modules.combine(getCommonModules(), new WeaveModule());\n  }","commit_id":"fd02a75f2bc1f01e24641ad740e3b0a06b0622b0","url":"https://github.com/caskdata/cdap"},{"original_method":"private WeavePreparer getPreparer() {\n    return prepare(weaveRunnerService.prepare(weaveApplication)\n                     .setUser(yarnUser)\n                     .addLogHandler(new PrinterLogHandler(new PrintWriter(System.out)))\n    );\n  }","id":63344,"modified_method":"private WeavePreparer getPreparer() {\n    return prepare(weaveRunnerService.prepare(weaveApplication)\n                     .addLogHandler(new PrinterLogHandler(new PrintWriter(System.out)))\n    );\n  }","commit_id":"fd02a75f2bc1f01e24641ad740e3b0a06b0622b0","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void init(String[] args) {\n    weaveApplication = createWeaveApplication();\n    if (weaveApplication == null) {\n      throw new IllegalArgumentException(\"WeaveApplication cannot be null\");\n    }\n\n    serviceName = weaveApplication.configure().getName();\n\n    // Initialize ZK client\n    String zookeeper = cConf.get(Constants.CFG_ZOOKEEPER_ENSEMBLE);\n    if (zookeeper == null) {\n      LOG.error(\"No zookeeper quorum provided.\");\n      throw new IllegalStateException(\"No zookeeper quorum provided.\");\n    }\n\n    zkClientService =\n      ZKClientServices.delegate(\n        ZKClients.reWatchOnExpire(\n          ZKClients.retryOnFailure(\n            ZKClientService.Builder.of(zookeeper).build(),\n            RetryStrategies.exponentialDelay(500, 2000, TimeUnit.MILLISECONDS)\n          )\n        ));\n\n    injector = Guice.createInjector(\n      new ConfigModule(cConf, hConf),\n      new LocationRuntimeModule().getDistributedModules(),\n      new AbstractModule() {\n        @Override\n        protected void configure() {\n          bind(WeaveRunnerService.class).to(YarnWeaveRunnerService.class);\n        }\n\n        @Singleton\n        @Provides\n        private YarnWeaveRunnerService provideYarnWeaveRunnerService(CConfiguration configuration,\n                                                                     YarnConfiguration yarnConfiguration,\n                                                                     LocationFactory locationFactory) {\n          String zkNamespace = configuration.get(Constants.CFG_WEAVE_ZK_NAMESPACE, \"/weave\");\n\n          YarnConfiguration yarnConfig = new YarnConfiguration(yarnConfiguration);\n          yarnConfig.set(Constants.CFG_WEAVE_RESERVED_MEMORY_MB,\n                         configuration.get(Constants.CFG_WEAVE_RESERVED_MEMORY_MB));\n\n          YarnWeaveRunnerService runner =\n            new YarnWeaveRunnerService(yarnConfig,\n                                       configuration.get(Constants.Zookeeper.QUORUM) + zkNamespace,\n                                       LocationFactories.namespace(locationFactory, \"weave\"));\n          runner.setJVMOptions(configuration.get(Constants.CFG_WEAVE_JVM_GC_OPTS));\n\n          return runner;\n        }\n      }\n    );\n\n    yarnUser = cConf.get(Constants.CFG_YARN_USER, System.getProperty(\"user.name\"));\n  }","id":63345,"modified_method":"@Override\n  public void init(String[] args) {\n    weaveApplication = createWeaveApplication();\n    if (weaveApplication == null) {\n      throw new IllegalArgumentException(\"WeaveApplication cannot be null\");\n    }\n\n    serviceName = weaveApplication.configure().getName();\n\n    // Initialize ZK client\n    String zookeeper = cConf.get(Constants.CFG_ZOOKEEPER_ENSEMBLE);\n    if (zookeeper == null) {\n      LOG.error(\"No zookeeper quorum provided.\");\n      throw new IllegalStateException(\"No zookeeper quorum provided.\");\n    }\n\n    zkClientService =\n      ZKClientServices.delegate(\n        ZKClients.reWatchOnExpire(\n          ZKClients.retryOnFailure(\n            ZKClientService.Builder.of(zookeeper).build(),\n            RetryStrategies.exponentialDelay(500, 2000, TimeUnit.MILLISECONDS)\n          )\n        ));\n\n    injector = Guice.createInjector(\n      new ConfigModule(cConf, hConf),\n      new WeaveModule(),\n      new LocationRuntimeModule().getDistributedModules()\n    );\n  }","commit_id":"fd02a75f2bc1f01e24641ad740e3b0a06b0622b0","url":"https://github.com/caskdata/cdap"},{"original_method":"public void putAll(Style s) {\n    for (int i = 0; i < s.myAttributeValues.length; i++) {\n      Object value = s.myAttributeValues[i];\n      if (value != null) {\n        myAttributeValues[i] = value;\n      }\n    }\n    updateCache();\n  }","id":63346,"modified_method":"public void putAll(Style s) {\n    List<StyleAttribute> added = new ArrayList<StyleAttribute>();\n    for (int i = 0; i < s.myAttributeValues.length; i++) {\n      Object value = s.myAttributeValues[i];\n      if (value != null) {\n        myAttributeValues[i] = value;\n        added.add(StyleAttributes.getAttribute(i));\n      }\n    }\n    updateCache(added);\n  }","commit_id":"20bab38c858e4c3c28815d4ee0761e0345885610","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void add(Style child) {\n    myChildren.add(child);\n    child.myParent = this;\n    child.updateCache();\n  }","id":63347,"modified_method":"public void add(Style child) {\n    myChildren.add(child);\n    child.myParent = this;\n    child.updateCache(getNonDefaultValuedAttributes());\n  }","commit_id":"20bab38c858e4c3c28815d4ee0761e0345885610","url":"https://github.com/JetBrains/MPS"},{"original_method":"public<T> void set(StyleAttribute<T> attribute, T value) {\n    myAttributeValues[attribute.getIndex()] = value;\n    updateCache();\n  }","id":63348,"modified_method":"public<T> void set(StyleAttribute<T> attribute, T value) {\n    myAttributeValues[attribute.getIndex()] = value;\n    updateCache(singletonList(attribute));\n  }","commit_id":"20bab38c858e4c3c28815d4ee0761e0345885610","url":"https://github.com/JetBrains/MPS"},{"original_method":"public <T> T get(StyleAttribute<T> attribute) {\n    int index = attribute.getIndex();\n    T value = (T) myCachedAttributeValues[index];\n    if (value != null) {\n      return value;\n    } else {\n      T result = attribute.combine(null, null);\n      myCachedAttributeValues[index] = result;\n      return result;\n    }\n  }","id":63349,"modified_method":"public <T> T get(StyleAttribute<T> attribute) {\n    int index = attribute.getIndex();\n    T value = (T) myCachedAttributeValues[index];\n    if (value != null) {\n      return value;\n    } else {\n      return attribute.combine(null, null);\n    }\n  }","commit_id":"20bab38c858e4c3c28815d4ee0761e0345885610","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void remove(Style child) {\n    myChildren.remove(child);\n    child.myParent = null;\n    child.updateCache();\n  }","id":63350,"modified_method":"public void remove(Style child) {\n    myChildren.remove(child);\n    child.myParent = null;\n    child.updateCache(getNonDefaultValuedAttributes());\n  }","commit_id":"20bab38c858e4c3c28815d4ee0761e0345885610","url":"https://github.com/JetBrains/MPS"},{"original_method":"public<T> void set(StyleAttribute<T> attribute, AttributeCalculator<T> valueCalculator) {\n    myAttributeValues[attribute.getIndex()] = valueCalculator;\n    updateCache();\n  }","id":63351,"modified_method":"public<T> void set(StyleAttribute<T> attribute, AttributeCalculator<T> valueCalculator) {\n    myAttributeValues[attribute.getIndex()] = valueCalculator;\n    updateCache(singletonList(attribute));\n  }","commit_id":"20bab38c858e4c3c28815d4ee0761e0345885610","url":"https://github.com/JetBrains/MPS"},{"original_method":"public StyleChangeEvent(Style style, Set<StyleAttribute> changedAttributes) {\n    myStyle = style;\n    myChangedAttributes = new HashSet<StyleAttribute>(changedAttributes);\n  }","id":63352,"modified_method":"public StyleChangeEvent(Style style, Collection<StyleAttribute> changedAttributes) {\n    myStyle = style;\n    myChangedAttributes = new HashSet<StyleAttribute>(changedAttributes);\n  }","commit_id":"20bab38c858e4c3c28815d4ee0761e0345885610","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected Module createModule(final WeaveContext context, ZKClientService zkClientService,\n                                final KafkaClientService kafkaClientService) {\n    return Modules.combine(new ConfigModule(cConf, hConf),\n                           new IOModule(),\n                           new MetricsClientRuntimeModule(kafkaClientService).getDistributedModules(),\n                           new LocationRuntimeModule().getDistributedModules(),\n                           new LoggingModules().getDistributedModules(),\n                           new DataFabricModules(cConf, hConf).getDistributedModules(),\n                           new AbstractModule() {\n      @Override\n      protected void configure() {\n        bind(InetAddress.class).annotatedWith(Names.named(Constants.AppFabric.SERVER_ADDRESS))\n                               .toInstance(context.getHost());\n        // For program loading\n        install(createProgramFactoryModule());\n\n        // For Binding queue reader stuff (for flowlets)\n        install(createFactoryModule(QueueReaderFactory.class,\n                                    QueueReader.class,\n                                    SingleQueue2Reader.class));\n\n        // For binding DataSet transaction stuff\n        install(new DataFabricFacadeModule());\n\n        bind(ServiceAnnouncer.class).toInstance(new ServiceAnnouncer() {\n          @Override\n          public Cancellable announce(String serviceName, int port) {\n            return context.announce(serviceName, port);\n          }\n        });\n\n        // Create webapp http handler factory.\n        install(new FactoryModuleBuilder().implement(HttpHandler.class, ExplodeJarHttpHandler.class)\n                  .build(WebappHttpHandlerFactory.class));\n      }\n    });\n  }","id":63353,"modified_method":"protected Module createModule(final WeaveContext context, ZKClientService zkClientService,\n                                final KafkaClientService kafkaClientService) {\n    return Modules.combine(new ConfigModule(cConf, hConf),\n                           new IOModule(),\n                           new MetricsClientRuntimeModule(kafkaClientService).getDistributedModules(),\n                           new LocationRuntimeModule().getDistributedModules(),\n                           new LoggingModules().getDistributedModules(),\n                           new DataFabricModules(cConf, hConf).getDistributedModules(),\n                           new AbstractModule() {\n      @Override\n      protected void configure() {\n        bind(InetAddress.class).annotatedWith(Names.named(Constants.AppFabric.SERVER_ADDRESS))\n                               .toInstance(context.getHost());\n        // For program loading\n        install(createProgramFactoryModule());\n\n        // For Binding queue reader stuff (for flowlets)\n        install(createFactoryModule(QueueReaderFactory.class,\n                                    QueueReader.class,\n                                    SingleQueue2Reader.class));\n\n        // For binding DataSet transaction stuff\n        install(new DataFabricFacadeModule());\n\n        bind(ServiceAnnouncer.class).toInstance(new ServiceAnnouncer() {\n          @Override\n          public Cancellable announce(String serviceName, int port) {\n            return context.announce(serviceName, port);\n          }\n        });\n      }\n    });\n  }","commit_id":"2aeef07dd3ae83433552939651eb930bfae4f362","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  protected void configure() {\n    install(new PrivateModule() {\n      @Override\n      protected void configure() {\n        bind(StreamHandler.class).in(Scopes.SINGLETON);\n        bind(AppFabricServiceHandler.class).in(Scopes.SINGLETON);\n        bind(ProcedureHandler.class).in(Scopes.SINGLETON);\n        bind(WorkflowHandler.class).in(Scopes.SINGLETON);\n        bind(TableHandler.class).in(Scopes.SINGLETON);\n        bind(DatasetHandler.class).in(Scopes.SINGLETON);\n        bind(ClearFabricHandler.class).in(Scopes.SINGLETON);\n\n        expose(StreamHandler.class);\n        expose(AppFabricServiceHandler.class);\n        expose(ProcedureHandler.class);\n        expose(WorkflowHandler.class);\n        expose(TableHandler.class);\n        expose(DatasetHandler.class);\n        expose(ClearFabricHandler.class);\n      }\n    });\n\n    Multibinder<HttpHandler> handlerBinder = Multibinder.newSetBinder(binder(), HttpHandler.class);\n    handlerBinder.addBinding().to(StreamHandler.class);\n    handlerBinder.addBinding().to(AppFabricServiceHandler.class);\n    handlerBinder.addBinding().to(ProcedureHandler.class);\n    handlerBinder.addBinding().to(WorkflowHandler.class);\n    handlerBinder.addBinding().to(TableHandler.class);\n    handlerBinder.addBinding().to(DatasetHandler.class);\n    handlerBinder.addBinding().to(ClearFabricHandler.class);\n  }","id":63354,"modified_method":"@Override\n  protected void configure() {\n    if (configured) {\n      return;\n    }\n\n    install(new PrivateModule() {\n      @Override\n      protected void configure() {\n        bind(StreamHandler.class).in(Scopes.SINGLETON);\n        bind(AppFabricServiceHandler.class).in(Scopes.SINGLETON);\n        bind(ProcedureHandler.class).in(Scopes.SINGLETON);\n        bind(WorkflowHandler.class).in(Scopes.SINGLETON);\n        bind(TableHandler.class).in(Scopes.SINGLETON);\n        bind(DatasetHandler.class).in(Scopes.SINGLETON);\n        bind(ClearFabricHandler.class).in(Scopes.SINGLETON);\n\n        expose(StreamHandler.class);\n        expose(AppFabricServiceHandler.class);\n        expose(ProcedureHandler.class);\n        expose(WorkflowHandler.class);\n        expose(TableHandler.class);\n        expose(DatasetHandler.class);\n        expose(ClearFabricHandler.class);\n      }\n    });\n\n    Multibinder<HttpHandler> handlerBinder = Multibinder.newSetBinder(binder(), HttpHandler.class);\n    handlerBinder.addBinding().to(StreamHandler.class);\n    handlerBinder.addBinding().to(AppFabricServiceHandler.class);\n    handlerBinder.addBinding().to(ProcedureHandler.class);\n    handlerBinder.addBinding().to(WorkflowHandler.class);\n    handlerBinder.addBinding().to(TableHandler.class);\n    handlerBinder.addBinding().to(DatasetHandler.class);\n    handlerBinder.addBinding().to(ClearFabricHandler.class);\n\n    configured = true;\n  }","commit_id":"2aeef07dd3ae83433552939651eb930bfae4f362","url":"https://github.com/caskdata/cdap"},{"original_method":"private Module getCommonModules() {\n    return new AbstractModule() {\n      @Override\n      protected void configure() {\n        install(new GatewayHandlerModules());\n        install(new AppFabricGatewayModules());\n        install(new LogHandlerModules());\n        install(new MetricsQueryModule());\n      }\n\n      @Provides\n      @Named(Constants.Gateway.ADDRESS)\n      public final InetAddress providesHostname(CConfiguration cConf) {\n        return Networks.resolve(cConf.get(Constants.Gateway.ADDRESS),\n                                new InetSocketAddress(\"localhost\", 0).getAddress());\n      }\n\n      @Provides\n      @Singleton\n      public final GatewayAuthenticator providesAuthenticator(CConfiguration cConf,\n                                                              @Nullable PassportClient passportClient) {\n        GatewayAuthenticator authenticator;\n        if (requireAuthentication(cConf)) {\n          Preconditions.checkNotNull(passportClient, \"Passport client cannot be null when authentication required\");\n          String clusterName = cConf.get(Constants.Gateway.CLUSTER_NAME,\n                                         Constants.Gateway.CLUSTER_NAME_DEFAULT);\n          authenticator = new PassportVPCAuthenticator(clusterName, passportClient);\n        } else {\n          authenticator = new NoAuthenticator();\n        }\n        return authenticator;\n      }\n\n      @Provides\n      @Singleton\n      public PassportClient providesPassportClient(CConfiguration cConf) {\n        if (requireAuthentication(cConf)) {\n          String passportServerUri = cConf.get(Constants.Gateway.CFG_PASSPORT_SERVER_URI);\n          Preconditions.checkNotNull(passportServerUri);\n          return PassportClient.create(passportServerUri);\n        } else {\n          return null;\n        }\n      }\n\n      private boolean requireAuthentication(CConfiguration cConf) {\n        return cConf.getBoolean(\n          Constants.Gateway.CONFIG_AUTHENTICATION_REQUIRED,\n          Constants.Gateway.CONFIG_AUTHENTICATION_REQUIRED_DEFAULT\n        );\n      }\n    };\n  }","id":63355,"modified_method":"private Module getCommonModules() {\n    return new AbstractModule() {\n      @Override\n      protected void configure() {\n        install(new GatewayAuthModules());\n        install(new GatewayHandlerModules());\n        install(new AppFabricGatewayModules());\n        install(new MetricsQueryModule());\n        install(new LogHandlerModules());\n      }\n\n      @Provides\n      @Named(Constants.Gateway.ADDRESS)\n      public final InetAddress providesHostname(CConfiguration cConf) {\n        return Networks.resolve(cConf.get(Constants.Gateway.ADDRESS),\n                                new InetSocketAddress(\"localhost\", 0).getAddress());\n      }\n    };\n  }","commit_id":"2aeef07dd3ae83433552939651eb930bfae4f362","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public Module getInMemoryModules() {\n    return new InMemoryProgramRunnerModule();\n  }","id":63356,"modified_method":"@Override\n  public Module getInMemoryModules() {\n    return Modules.combine(new InMemoryProgramRunnerModule(),\n                           new AbstractModule() {\n                             @Override\n                             protected void configure() {\n                               install(new GatewayAuthModules());\n                               install(new AppFabricGatewayModules());\n                             }\n                           });\n  }","commit_id":"2aeef07dd3ae83433552939651eb930bfae4f362","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public Module getSingleNodeModules() {\n    return new InMemoryProgramRunnerModule();\n  }","id":63357,"modified_method":"@Override\n  public Module getSingleNodeModules() {\n    return Modules.combine(new InMemoryProgramRunnerModule(),\n                           new AbstractModule() {\n                             @Override\n                             protected void configure() {\n                               install(new GatewayAuthModules());\n                               install(new AppFabricGatewayModules());\n                             }\n                           });\n  }","commit_id":"2aeef07dd3ae83433552939651eb930bfae4f362","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  protected Module createModule(WeaveContext context, ZKClientService zkClientService,\n                                KafkaClientService kafkaClientService) {\n    return Modules.combine(super.createModule(context, zkClientService, kafkaClientService),\n                           new DiscoveryRuntimeModule(zkClientService).getDistributedModules());\n  }","id":63358,"modified_method":"@Override\n  protected Module createModule(WeaveContext context, ZKClientService zkClientService,\n                                KafkaClientService kafkaClientService) {\n    return Modules.combine(super.createModule(context, zkClientService, kafkaClientService),\n                           new DiscoveryRuntimeModule(zkClientService).getDistributedModules(),\n                           new AbstractModule() {\n                             @Override\n                             protected void configure() {\n                               // Create webapp http handler factory.\n                               install(new FactoryModuleBuilder()\n                                         .implement(HttpHandler.class, ExplodeJarHttpHandler.class)\n                                         .build(WebappHttpHandlerFactory.class));\n                               install(new GatewayAuthModules());\n                               install(new AppFabricGatewayModules());\n                             }\n                           });\n  }","commit_id":"2aeef07dd3ae83433552939651eb930bfae4f362","url":"https://github.com/caskdata/cdap"},{"original_method":"protected void updateRows(\n\t\t\tlong companyId, long classPK, String tableName, long tableId,\n\t\t\tString columnName, long rowId)\n\t\tthrows Exception {\n\n\t\tConnection con = null;\n\t\tPreparedStatement ps = null;\n\t\tResultSet rs = null;\n\n\t\ttry {\n\t\t\tcon = DataAccess.getConnection();\n\n\t\t\tps = con.prepareStatement(\n\t\t\t\t\"select \" + columnName + \" from \" + tableName + \" where \" +\n\t\t\t\t\t\"resourcePrimKey = ?\");\n\n\t\t\tps.setLong(1, classPK);\n\n\t\t\trs = ps.executeQuery();\n\n\t\t\twhile (rs.next()) {\n\t\t\t\tlong newClassPK = rs.getLong(columnName);\n\n\t\t\t\tif (!hasRow(companyId, tableId, newClassPK)) {\n\t\t\t\t\tlong newRowId = increment();\n\n\t\t\t\t\taddRow(newRowId, companyId, tableId, newClassPK);\n\n\t\t\t\t\tupdateValues(classPK, newClassPK, tableId, rowId, newRowId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trunSQL(\"delete from ExpandoRow where rowId_ = \" + rowId);\n\t\t\trunSQL(\"delete from ExpandoValue where rowId_ = \" + rowId);\n\t\t}\n\t\tfinally {\n\t\t\tDataAccess.cleanUp(con, ps, rs);\n\t\t}\n\t}","id":63359,"modified_method":"protected void updateRow(\n\t\t\tlong companyId, long classPK, String tableName, long tableId,\n\t\t\tString columnName, long rowId)\n\t\tthrows Exception {\n\n\t\tConnection con = null;\n\t\tPreparedStatement ps = null;\n\t\tResultSet rs = null;\n\n\t\ttry {\n\t\t\tcon = DataAccess.getConnection();\n\n\t\t\tps = con.prepareStatement(\n\t\t\t\t\"select \" + columnName + \" from \" + tableName + \" where \" +\n\t\t\t\t\t\"resourcePrimKey = ?\");\n\n\t\t\tps.setLong(1, classPK);\n\n\t\t\trs = ps.executeQuery();\n\n\t\t\tboolean delete = false;\n\n\t\t\twhile (rs.next()) {\n\t\t\t\tlong newClassPK = rs.getLong(columnName);\n\t\t\t\tdelete = true;\n\n\t\t\t\tif (!hasRow(companyId, tableId, newClassPK)) {\n\t\t\t\t\tlong newRowId = increment();\n\n\t\t\t\t\taddRow(newRowId, companyId, tableId, newClassPK);\n\n\t\t\t\t\tupdateValues(classPK, newClassPK, tableId, rowId, newRowId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (delete) {\n\t\t\t\trunSQL(\"delete from ExpandoRow where rowId_ = \" + rowId);\n\t\t\t\trunSQL(\"delete from ExpandoValue where rowId_ = \" + rowId);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tDataAccess.cleanUp(con, ps, rs);\n\t\t}\n\t}","commit_id":"8df81b45dc1b9184b64f9b48adbc0c34e99e1e6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void updateTables(\n\t\t\tString className, String tableName, String columnName)\n\t\tthrows Exception {\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Upgrading \" + tableName);\n\t\t}\n\n\t\tlong classNameId = PortalUtil.getClassNameId(className);\n\n\t\tConnection con = null;\n\t\tPreparedStatement ps = null;\n\t\tResultSet rs = null;\n\n\t\ttry {\n\t\t\tcon = DataAccess.getConnection();\n\n\t\t\tps = con.prepareStatement(\n\t\t\t\t\"select * from ExpandoTable where classNameId = ? and \" +\n\t\t\t\t\t\"name = ?\");\n\n\t\t\tps.setLong(1, classNameId);\n\t\t\tps.setString(2, ExpandoTableConstants.DEFAULT_TABLE_NAME);\n\n\t\t\trs = ps.executeQuery();\n\n\t\t\twhile (rs.next()) {\n\t\t\t\tlong tableId = rs.getLong(\"tableId\");\n\n\t\t\t\tupdateRows(classNameId, tableName, tableId, columnName);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tDataAccess.cleanUp(con, ps, rs);\n\t\t}\n\t}","id":63360,"modified_method":"protected void updateTables(\n\t\t\tString className, String tableName, String columnName)\n\t\tthrows Exception {\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Upgrading \" + tableName);\n\t\t}\n\n\t\tlong classNameId = PortalUtil.getClassNameId(className);\n\n\t\tConnection con = null;\n\t\tPreparedStatement ps = null;\n\t\tResultSet rs = null;\n\n\t\ttry {\n\t\t\tcon = DataAccess.getConnection();\n\n\t\t\tps = con.prepareStatement(\n\t\t\t\t\"select * from ExpandoTable where classNameId = ? and \" +\n\t\t\t\t\t\"name = ?\");\n\n\t\t\tps.setLong(1, classNameId);\n\t\t\tps.setString(2, ExpandoTableConstants.DEFAULT_TABLE_NAME);\n\n\t\t\trs = ps.executeQuery();\n\n\t\t\twhile (rs.next()) {\n\t\t\t\tlong tableId = rs.getLong(\"tableId\");\n\n\t\t\t\tupdateRows(tableName, tableId, columnName);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tDataAccess.cleanUp(con, ps, rs);\n\t\t}\n\t}","commit_id":"8df81b45dc1b9184b64f9b48adbc0c34e99e1e6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void updateRows(\n\t\t\tlong classNameId, String tableName, long tableId, String columnName)\n\t\tthrows Exception {\n\n\t\tConnection con = null;\n\t\tPreparedStatement ps = null;\n\t\tResultSet rs = null;\n\n\t\ttry {\n\t\t\tcon = DataAccess.getConnection();\n\n\t\t\tps = con.prepareStatement(\n\t\t\t\t\"select * from ExpandoRow where tableId = ?\");\n\n\t\t\tps.setLong(1, tableId);\n\n\t\t\trs = ps.executeQuery();\n\n\t\t\twhile (rs.next()) {\n\t\t\t\tlong rowId = rs.getLong(\"rowId_\");\n\t\t\t\tlong companyId = rs.getLong(\"companyId\");\n\t\t\t\tlong classPK = rs.getLong(\"classPK\");\n\n\t\t\t\tupdateRows(\n\t\t\t\t\tcompanyId, classPK, tableName, tableId, columnName, rowId);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tDataAccess.cleanUp(con, ps, rs);\n\t\t}\n\t}","id":63361,"modified_method":"protected void updateRows(\n\t\t\tString tableName, long tableId, String columnName)\n\t\tthrows Exception {\n\n\t\tConnection con = null;\n\t\tPreparedStatement ps = null;\n\t\tResultSet rs = null;\n\n\t\ttry {\n\t\t\tcon = DataAccess.getConnection();\n\n\t\t\tps = con.prepareStatement(\n\t\t\t\t\"select * from ExpandoRow where tableId = ?\");\n\n\t\t\tps.setLong(1, tableId);\n\n\t\t\trs = ps.executeQuery();\n\n\t\t\twhile (rs.next()) {\n\t\t\t\tlong rowId = rs.getLong(\"rowId_\");\n\t\t\t\tlong companyId = rs.getLong(\"companyId\");\n\t\t\t\tlong classPK = rs.getLong(\"classPK\");\n\n\t\t\t\tupdateRow(\n\t\t\t\t\tcompanyId, classPK, tableName, tableId, columnName, rowId);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tDataAccess.cleanUp(con, ps, rs);\n\t\t}\n\t}","commit_id":"8df81b45dc1b9184b64f9b48adbc0c34e99e1e6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void renameTable(\n\t\t\tString oldTableName, String newTableName, Object[][] tableColumns,\n\t\t\tString tableSqlCreate, String tableSqlDrop)\n\t\tthrows Exception {\n\n\t\ttry (LoggingTimer loggingTimer = new LoggingTimer(newTableName)) {\n\t\t\tif (hasTable(newTableName) && hasRows(newTableName)) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"Not renaming \" + oldTableName + \" to \" + newTableName +\n\t\t\t\t\t\t\t\" because \" + newTableName + \" has data\");\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!hasRows(oldTableName)) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"Not renaming \" + oldTableName + \" to \" + newTableName +\n\t\t\t\t\t\t\t\" because \" + oldTableName + \" has no data\");\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trunSQL(tableSqlDrop);\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\toldTableName, tableColumns);\n\n\t\t\tupgradeTable.setCreateSQL(tableSqlCreate);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","id":63362,"modified_method":"protected void renameTable(\n\t\t\tString oldTableName, String newTableName, Object[][] tableColumns,\n\t\t\tString tableSqlCreate, String tableSqlDrop)\n\t\tthrows Exception {\n\n\t\ttry (LoggingTimer loggingTimer = new LoggingTimer(newTableName)) {\n\t\t\tboolean hasNewTable = hasTable(newTableName);\n\n\t\t\tif (hasNewTable && hasRows(newTableName)) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"Not renaming \" + oldTableName + \" to \" + newTableName +\n\t\t\t\t\t\t\t\" because \" + newTableName + \" has data\");\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tboolean hasOldTable = hasTable(oldTableName);\n\n\t\t\tif (hasOldTable && !hasRows(oldTableName)) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"Not renaming \" + oldTableName + \" to \" + newTableName +\n\t\t\t\t\t\t\t\" because \" + oldTableName + \" has no data\");\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!hasOldTable && !hasNewTable) {\n\t\t\t\trunSQL(tableSqlCreate);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (hasNewTable) {\n\t\t\t\trunSQL(tableSqlDrop);\n\t\t\t}\n\n\t\t\tUpgradeTable upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(\n\t\t\t\toldTableName, tableColumns);\n\n\t\t\tupgradeTable.setCreateSQL(tableSqlCreate);\n\n\t\t\tupgradeTable.updateTable();\n\t\t}\n\t}","commit_id":"c405ee2da1e9969a660a5503a031cf8c3e1c46aa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\t\tpublic final Void call() throws Exception {\n\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t_log.info(\"Adding column companyId to table \" + getTableName());\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t_con = DataAccess.getUpgradeOptimizedConnection();\n\n\t\t\t\trunSQL(\n\t\t\t\t\t_con,\n\t\t\t\t\t\"alter table \" + getTableName() + \" add companyId LONG\");\n\n\t\t\t\tupdate();\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tDataAccess.cleanUp(_con);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}","id":63363,"modified_method":"@Override\n\t\tpublic final Void call() throws Exception {\n\t\t\ttry {\n\t\t\t\t_con = DataAccess.getUpgradeOptimizedConnection();\n\n\t\t\t\tif (_skipAddColumnToTable) {\n\t\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t\t_log.info(\n\t\t\t\t\t\t\t\"Skipping add companyId for table \" + _tableName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t\t_log.info(\n\t\t\t\t\t\t\t\"Adding column companyId to table \" +\n\t\t\t\t\t\t\t\tgetTableName());\n\t\t\t\t\t}\n\n\t\t\t\t\trunSQL(\n\t\t\t\t\t\t_con,\n\t\t\t\t\t\t\"alter table \" + getTableName() +\n\t\t\t\t\t\t\t\" add companyId LONG\");\n\t\t\t\t}\n\n\t\t\t\tupdate();\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tDataAccess.cleanUp(_con);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}","commit_id":"54d72a98c953ccbeb20a91327c063fc29ba7d2c2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tList<Callable<Void>> callables = new ArrayList<>();\n\n\t\tfor (TableUpdater tableUpdater : getTableUpdaters()) {\n\t\t\tif (hasColumn(tableUpdater.getTableName(), \"companyId\")) {\n\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t_log.info(\"Skipping table \" + tableUpdater.getTableName());\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcallables.add(tableUpdater);\n\t\t}\n\n\t\tExecutorService executorService = Executors.newFixedThreadPool(\n\t\t\tcallables.size());\n\n\t\ttry {\n\t\t\tList<Future<Void>> futures = executorService.invokeAll(callables);\n\n\t\t\tfor (Future<Void> future : futures) {\n\t\t\t\tfuture.get();\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\texecutorService.shutdown();\n\t\t}\n\t}","id":63364,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tList<Callable<Void>> callables = new ArrayList<>();\n\n\t\tfor (TableUpdater tableUpdater : getTableUpdaters()) {\n\t\t\ttableUpdater.setSkipAddColumnToTable(false);\n\n\t\t\tif (hasColumn(tableUpdater.getTableName(), \"companyId\")) {\n\t\t\t\ttableUpdater.setSkipAddColumnToTable(true);\n\t\t\t}\n\n\t\t\tcallables.add(tableUpdater);\n\t\t}\n\n\t\tExecutorService executorService = Executors.newFixedThreadPool(\n\t\t\tcallables.size());\n\n\t\ttry {\n\t\t\tList<Future<Void>> futures = executorService.invokeAll(callables);\n\n\t\t\tfor (Future<Void> future : futures) {\n\t\t\t\tfuture.get();\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\texecutorService.shutdown();\n\t\t}\n\t}","commit_id":"54d72a98c953ccbeb20a91327c063fc29ba7d2c2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\r\n     * @param type the type to set\r\n     */\r\n    public void setType(final String type) {\r\n        this.type = type;\r\n    }","id":63365,"modified_method":"public void setType(final String type) {\r\n        this.type = type;\r\n    }","commit_id":"24131a16362240b1d7c44d0c5b5e5433c38f0dde","url":"https://github.com/droolsjbpm/drools"},{"original_method":"/**\r\n     * @param price the price to set\r\n     */\r\n    public void setPrice(final int price) {\r\n        this.price = price;\r\n    }","id":63366,"modified_method":"public void setPrice(final int price) {\r\n        this.price = price;\r\n    }","commit_id":"24131a16362240b1d7c44d0c5b5e5433c38f0dde","url":"https://github.com/droolsjbpm/drools"},{"original_method":"/**\n     * Creates a constructor for the shadow proxy receiving\n     * the actual delegate class as parameter\n     * \n     * @param originalClassName\n     * @param className\n     * @param cw\n     */\n    private static void buildConstructor(final Class clazz,\n                                         final String className,\n                                         final ClassWriter cw) {\n        MethodVisitor mv;\n        {\n            mv = cw.visitMethod( Opcodes.ACC_PUBLIC,\n                                 \"<init>\",\n                                 Type.getMethodDescriptor( Type.VOID_TYPE,\n                                                           new Type[]{Type.getType( clazz )} ),\n                                 null,\n                                 null );\n            mv.visitCode();\n\n            // super();\n            Label l0 = new Label();\n            mv.visitLabel( l0 );\n            mv.visitLineNumber( 41,\n                                l0 );\n            mv.visitVarInsn( Opcodes.ALOAD,\n                             0 );\n            mv.visitMethodInsn( Opcodes.INVOKESPECIAL,\n                                Type.getInternalName( clazz ),\n                                \"<init>\",\n                                Type.getMethodDescriptor( Type.VOID_TYPE,\n                                                          new Type[]{} ) );\n            // this.delegate = delegate\n            Label l1 = new Label();\n            mv.visitLabel( l1 );\n            mv.visitLineNumber( 42,\n                                l1 );\n            mv.visitVarInsn( Opcodes.ALOAD,\n                             0 );\n            mv.visitVarInsn( Opcodes.ALOAD,\n                             1 );\n            mv.visitFieldInsn( Opcodes.PUTFIELD,\n                               className,\n                               DELEGATE_FIELD_NAME,\n                               Type.getDescriptor( clazz ) );\n\n            // return\n            Label l2 = new Label();\n            mv.visitLabel( l2 );\n            mv.visitLineNumber( 43,\n                                l2 );\n            mv.visitInsn( Opcodes.RETURN );\n\n            Label l3 = new Label();\n            mv.visitLabel( l3 );\n            mv.visitLocalVariable( \"this\",\n                                   \"L\" + className + \";\",\n                                   null,\n                                   l0,\n                                   l3,\n                                   0 );\n            mv.visitLocalVariable( DELEGATE_FIELD_NAME,\n                                   Type.getDescriptor( clazz ),\n                                   null,\n                                   l0,\n                                   l3,\n                                   1 );\n            mv.visitMaxs( 0,\n                          0 );\n            mv.visitEnd();\n        }\n    }","id":63367,"modified_method":"/**\n     * Creates a constructor for the shadow proxy receiving\n     * the actual delegate class as parameter\n     * \n     * @param originalClassName\n     * @param className\n     * @param cw\n     */\n    private static void buildConstructor(final Class clazz,\n                                         final String className,\n                                         final ClassWriter cw) {\n        MethodVisitor mv;\n        {\n            mv = cw.visitMethod( Opcodes.ACC_PUBLIC,\n                                 \"<init>\",\n                                 Type.getMethodDescriptor( Type.VOID_TYPE,\n                                                           new Type[]{Type.getType( clazz )} ),\n                                 null,\n                                 null );\n            mv.visitCode();\n\n            // super();\n            Label l0 = new Label();\n            mv.visitLabel( l0 );\n            mv.visitLineNumber( 41,\n                                l0 );\n            mv.visitVarInsn( Opcodes.ALOAD,\n                             0 );\n            if(clazz.isInterface()) {\n                mv.visitMethodInsn( Opcodes.INVOKESPECIAL,\n                                    Type.getInternalName( Object.class ),\n                                    \"<init>\",\n                                    Type.getMethodDescriptor( Type.VOID_TYPE,\n                                                              new Type[]{} ) );\n            } else {\n                mv.visitMethodInsn( Opcodes.INVOKESPECIAL,\n                                    Type.getInternalName( clazz ),\n                                    \"<init>\",\n                                    Type.getMethodDescriptor( Type.VOID_TYPE,\n                                                              new Type[]{} ) );\n            }\n            \n            // this.delegate = delegate\n            Label l1 = new Label();\n            mv.visitLabel( l1 );\n            mv.visitLineNumber( 42,\n                                l1 );\n            mv.visitVarInsn( Opcodes.ALOAD,\n                             0 );\n            mv.visitVarInsn( Opcodes.ALOAD,\n                             1 );\n            mv.visitFieldInsn( Opcodes.PUTFIELD,\n                               className,\n                               DELEGATE_FIELD_NAME,\n                               Type.getDescriptor( clazz ) );\n\n            // return\n            Label l2 = new Label();\n            mv.visitLabel( l2 );\n            mv.visitLineNumber( 43,\n                                l2 );\n            mv.visitInsn( Opcodes.RETURN );\n\n            Label l3 = new Label();\n            mv.visitLabel( l3 );\n            mv.visitLocalVariable( \"this\",\n                                   \"L\" + className + \";\",\n                                   null,\n                                   l0,\n                                   l3,\n                                   0 );\n            mv.visitLocalVariable( DELEGATE_FIELD_NAME,\n                                   Type.getDescriptor( clazz ),\n                                   null,\n                                   l0,\n                                   l3,\n                                   1 );\n            mv.visitMaxs( 0,\n                          0 );\n            mv.visitEnd();\n        }\n    }","commit_id":"24131a16362240b1d7c44d0c5b5e5433c38f0dde","url":"https://github.com/droolsjbpm/drools"},{"original_method":"/**\n     * Creates the proxy reader method for the given method\n     * \n     * @param fieldName\n     * @param fieldFlag\n     * @param method\n     * @param cw\n     */\n    protected static void buildGetMethod(String fieldName,\n                                         Class fieldType,\n                                         String fieldFlag,\n                                         Method method,\n                                         String className,\n                                         Class clazz,\n                                         ClassWriter cw) {\n        // method signature \n        Class[] exceptionTypes = method.getExceptionTypes();\n        String[] exceptions = new String[exceptionTypes.length];\n        for ( int i = 0; i < exceptions.length; i++ ) {\n            exceptions[i] = Type.getInternalName( exceptionTypes[i] );\n        }\n        MethodVisitor mv = cw.visitMethod( Opcodes.ACC_PUBLIC,\n                                           method.getName(),\n                                           Type.getMethodDescriptor( method ),\n                                           null,\n                                           exceptions );\n        mv.visitCode();\n\n        // if ( ! _fieldIsSet ) {\n        Label l0 = new Label();\n        mv.visitLabel( l0 );\n        mv.visitVarInsn( Opcodes.ALOAD,\n                         0 );\n        mv.visitFieldInsn( Opcodes.GETFIELD,\n                           className,\n                           fieldFlag,\n                           Type.BOOLEAN_TYPE.getDescriptor() );\n        Label l1 = new Label();\n        mv.visitJumpInsn( Opcodes.IFNE,\n                          l1 );\n\n        //     __field = this.delegate.method();\n        Label l2 = new Label();\n        mv.visitLabel( l2 );\n        mv.visitVarInsn( Opcodes.ALOAD,\n                         0 );\n        mv.visitVarInsn( Opcodes.ALOAD,\n                         0 );\n        mv.visitFieldInsn( Opcodes.GETFIELD,\n                           className,\n                           DELEGATE_FIELD_NAME,\n                           Type.getDescriptor( clazz ) );\n        mv.visitMethodInsn( Opcodes.INVOKEVIRTUAL,\n                            Type.getInternalName( clazz ),\n                            method.getName(),\n                            Type.getMethodDescriptor( method ) );\n        mv.visitFieldInsn( Opcodes.PUTFIELD,\n                           className,\n                           fieldName,\n                           Type.getDescriptor( fieldType ) );\n\n        //     __fieldIsSet = true;\n        Label l3 = new Label();\n        mv.visitLabel( l3 );\n        mv.visitVarInsn( Opcodes.ALOAD,\n                         0 );\n        mv.visitInsn( Opcodes.ICONST_1 );\n        mv.visitFieldInsn( Opcodes.PUTFIELD,\n                           className,\n                           fieldFlag,\n                           Type.BOOLEAN_TYPE.getDescriptor() );\n\n        // }\n        // return __field;\n        mv.visitLabel( l1 );\n        mv.visitVarInsn( Opcodes.ALOAD,\n                         0 );\n        mv.visitFieldInsn( Opcodes.GETFIELD,\n                           className,\n                           fieldName,\n                           Type.getDescriptor( fieldType ) );\n        mv.visitInsn( Type.getType( fieldType ).getOpcode( Opcodes.IRETURN ) );\n\n        // local variables table\n        Label l4 = new Label();\n        mv.visitLabel( l4 );\n        mv.visitLocalVariable( \"this\",\n                               \"L\" + className + \";\",\n                               null,\n                               l0,\n                               l4,\n                               0 );\n        mv.visitMaxs( 0,\n                      0 );\n        mv.visitEnd();\n    }","id":63368,"modified_method":"/**\n     * Creates the proxy reader method for the given method\n     * \n     * @param fieldName\n     * @param fieldFlag\n     * @param method\n     * @param cw\n     */\n    protected static void buildGetMethod(String fieldName,\n                                         Class fieldType,\n                                         String fieldFlag,\n                                         Method method,\n                                         String className,\n                                         Class clazz,\n                                         ClassWriter cw) {\n        // method signature \n        Class[] exceptionTypes = method.getExceptionTypes();\n        String[] exceptions = new String[exceptionTypes.length];\n        for ( int i = 0; i < exceptions.length; i++ ) {\n            exceptions[i] = Type.getInternalName( exceptionTypes[i] );\n        }\n        MethodVisitor mv = cw.visitMethod( Opcodes.ACC_PUBLIC,\n                                           method.getName(),\n                                           Type.getMethodDescriptor( method ),\n                                           null,\n                                           exceptions );\n        mv.visitCode();\n\n        // if ( ! _fieldIsSet ) {\n        Label l0 = new Label();\n        mv.visitLabel( l0 );\n        mv.visitVarInsn( Opcodes.ALOAD,\n                         0 );\n        mv.visitFieldInsn( Opcodes.GETFIELD,\n                           className,\n                           fieldFlag,\n                           Type.BOOLEAN_TYPE.getDescriptor() );\n        Label l1 = new Label();\n        mv.visitJumpInsn( Opcodes.IFNE,\n                          l1 );\n\n        //     __field = this.delegate.method();\n        Label l2 = new Label();\n        mv.visitLabel( l2 );\n        mv.visitVarInsn( Opcodes.ALOAD,\n                         0 );\n        mv.visitVarInsn( Opcodes.ALOAD,\n                         0 );\n        mv.visitFieldInsn( Opcodes.GETFIELD,\n                           className,\n                           DELEGATE_FIELD_NAME,\n                           Type.getDescriptor( clazz ) );\n        if(clazz.isInterface()) {\n            mv.visitMethodInsn( Opcodes.INVOKEINTERFACE,\n                                Type.getInternalName( clazz ),\n                                method.getName(),\n                                Type.getMethodDescriptor( method ) );\n        } else {\n            mv.visitMethodInsn( Opcodes.INVOKEVIRTUAL,\n                                Type.getInternalName( clazz ),\n                                method.getName(),\n                                Type.getMethodDescriptor( method ) );\n        }\n        mv.visitFieldInsn( Opcodes.PUTFIELD,\n                           className,\n                           fieldName,\n                           Type.getDescriptor( fieldType ) );\n\n        //     __fieldIsSet = true;\n        Label l3 = new Label();\n        mv.visitLabel( l3 );\n        mv.visitVarInsn( Opcodes.ALOAD,\n                         0 );\n        mv.visitInsn( Opcodes.ICONST_1 );\n        mv.visitFieldInsn( Opcodes.PUTFIELD,\n                           className,\n                           fieldFlag,\n                           Type.BOOLEAN_TYPE.getDescriptor() );\n\n        // }\n        // return __field;\n        mv.visitLabel( l1 );\n        mv.visitVarInsn( Opcodes.ALOAD,\n                         0 );\n        mv.visitFieldInsn( Opcodes.GETFIELD,\n                           className,\n                           fieldName,\n                           Type.getDescriptor( fieldType ) );\n        mv.visitInsn( Type.getType( fieldType ).getOpcode( Opcodes.IRETURN ) );\n\n        // local variables table\n        Label l4 = new Label();\n        mv.visitLabel( l4 );\n        mv.visitLocalVariable( \"this\",\n                               \"L\" + className + \";\",\n                               null,\n                               l0,\n                               l4,\n                               0 );\n        mv.visitMaxs( 0,\n                      0 );\n        mv.visitEnd();\n    }","commit_id":"24131a16362240b1d7c44d0c5b5e5433c38f0dde","url":"https://github.com/droolsjbpm/drools"},{"original_method":"/**\n     * Builds the shadow proxy class header\n     *  \n     * @param clazz The class to build shadow proxy for\n     * @param className The shadow proxy class name\n     * @param cw\n     */\n    protected static void buildClassHeader(final Class clazz,\n                                           final String className,\n                                           final ClassWriter cw) {\n        cw.visit( Opcodes.V1_2,\n                  Opcodes.ACC_PUBLIC + Opcodes.ACC_SUPER,\n                  className,\n                  null,\n                  Type.getInternalName( clazz ),\n                  new String[]{BASE_INTERFACE} );\n\n        cw.visitSource( null,\n                        null );\n    }","id":63369,"modified_method":"/**\n     * Builds the shadow proxy class header\n     *  \n     * @param clazz The class to build shadow proxy for\n     * @param className The shadow proxy class name\n     * @param cw\n     */\n    protected static void buildClassHeader(final Class clazz,\n                                           final String className,\n                                           final ClassWriter cw) {\n        if( clazz.isInterface() ) {\n            cw.visit( Opcodes.V1_2,\n                      Opcodes.ACC_PUBLIC + Opcodes.ACC_SUPER,\n                      className,\n                      null,\n                      Type.getInternalName( Object.class ),\n                      new String[]{BASE_INTERFACE, Type.getInternalName( clazz )} );\n        } else {\n            cw.visit( Opcodes.V1_2,\n                      Opcodes.ACC_PUBLIC + Opcodes.ACC_SUPER,\n                      className,\n                      null,\n                      Type.getInternalName( clazz ),\n                      new String[]{BASE_INTERFACE} );\n        }\n\n        cw.visitSource( null,\n                        null );\n    }","commit_id":"24131a16362240b1d7c44d0c5b5e5433c38f0dde","url":"https://github.com/droolsjbpm/drools"},{"original_method":"private void boxAttribute(TypedDeclaration declaration) {\n        // deal with invalid input\n        if(declaration == null)\n            return;\n        TypedDeclaration refinedDeclaration = null;\n        refinedDeclaration = (TypedDeclaration)CodegenUtil.getTopmostRefinedDeclaration(declaration);\n        // deal with invalid input\n        if(refinedDeclaration == null)\n            return;\n        setBoxingState(declaration, refinedDeclaration);\n    }","id":63370,"modified_method":"private void boxAttribute(TypedDeclaration declaration) {\n        // deal with invalid input\n        if(declaration == null)\n            return;\n        TypedDeclaration refinedDeclaration = null;\n        refinedDeclaration = (TypedDeclaration)CodegenUtil.getTopmostRefinedDeclaration(declaration, optimisedMethodSpecifiersToMethods);\n        // deal with invalid input\n        if(refinedDeclaration == null)\n            return;\n        setBoxingState(declaration, refinedDeclaration);\n    }","commit_id":"87b0285283ed786356d45a4e0a261e12962e4626","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"@Override\n    public void visit(SpecifierStatement that) {\n        super.visit(that);\n        TypedDeclaration declaration = that.getDeclaration();\n        if(declaration == null)\n            return;\n        if(declaration instanceof Method)\n            visitMethod((Method) declaration);\n        else if(declaration instanceof Value)\n            visitAttributeOrParameter(declaration);\n    }","id":63371,"modified_method":"@Override\n    public void visit(SpecifierStatement that) {\n        TypedDeclaration declaration = that.getDeclaration();\n        Method optimisedDeclaration = null;\n        // make sure we detect the shortcut refinement inlining cases\n        if(declaration instanceof Method){\n            if(that.getSpecifierExpression() != null\n                    && that.getSpecifierExpression() instanceof LazySpecifierExpression == false){\n                Tree.Expression expression = that.getSpecifierExpression().getExpression();\n                if(expression != null\n                        && expression.getTerm() instanceof Tree.FunctionArgument){\n                    optimisedDeclaration = ((Tree.FunctionArgument)expression.getTerm()).getDeclarationModel();\n                    this.optimisedMethodSpecifiersToMethods.put(optimisedDeclaration, (Method) declaration);\n                }\n            }\n        }\n        try{\n            super.visit(that);\n        }finally{\n            if(optimisedDeclaration != null)\n                this.optimisedMethodSpecifiersToMethods.remove(optimisedDeclaration);\n        }\n        if(declaration == null)\n            return;\n        if(declaration instanceof Method){\n            visitMethod((Method) declaration);\n        }else if(declaration instanceof Value)\n            visitAttributeOrParameter(declaration);\n    }","commit_id":"87b0285283ed786356d45a4e0a261e12962e4626","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"private void boxMethod(Method method) {\n        // deal with invalid input\n        if(method == null)\n            return;\n        Declaration refined = CodegenUtil.getTopmostRefinedDeclaration(method);\n        // deal with invalid input\n        if(refined == null\n                || (!(refined instanceof Method)))\n            return;\n        Method refinedMethod = (Method)refined;\n        if (method.getName() != null) {\n            // A Callable, which never have primitive parameters\n            setBoxingState(method, refinedMethod);\n        } else {\n            // Anonymous methods are always boxed\n            method.setUnboxed(false);\n        }\n    }","id":63372,"modified_method":"private void boxMethod(Method method) {\n        // deal with invalid input\n        if(method == null)\n            return;\n        Declaration refined = CodegenUtil.getTopmostRefinedDeclaration(method, optimisedMethodSpecifiersToMethods);\n        // deal with invalid input\n        if(refined == null\n                || (!(refined instanceof Method)))\n            return;\n        Method refinedMethod = (Method)refined;\n        if (method.getName() != null) {\n            // A Callable, which never have primitive parameters\n            setBoxingState(method, refinedMethod);\n        } else {\n            // Anonymous methods are always boxed\n            method.setUnboxed(false);\n        }\n    }","commit_id":"87b0285283ed786356d45a4e0a261e12962e4626","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"static Declaration getTopmostRefinedDeclaration(Declaration decl){\n        if (decl instanceof Parameter && decl.getContainer() instanceof Class) {\n            // Parameters in a refined class are not considered refinements themselves\n            // We have in find the refined attribute\n            Class c = (Class)decl.getContainer();\n            if (c.isAlias()) {\n                int index = c.getParameterList().getParameters().indexOf(decl);\n                while (c.isAlias()) {\n                    c = c.getExtendedTypeDeclaration();\n                }\n                decl = c.getParameterList().getParameters().get(index);\n            }\n            Declaration refinedDecl = c.getRefinedMember(decl.getName(), null, false);//?? elipses=false??\n            if(refinedDecl != null && refinedDecl != decl) {\n                return getTopmostRefinedDeclaration(refinedDecl);\n            }\n            return decl;\n        } else if(decl instanceof Parameter \n                && (decl.getContainer() instanceof Method || decl.getContainer() instanceof Specification)){\n            // Parameters in a refined method are not considered refinements themselves\n            // so we have to look up the corresponding parameter in the container's refined declaration\n            Method func;\n            if(decl.getContainer() instanceof Method)\n                func = (Method)decl.getContainer();\n            else\n                func = (Method) ((Specification)decl.getContainer()).getDeclaration();\n            if(func == null)\n                return decl;\n            Parameter param = (Parameter)decl;\n            Method refinedFunc = (Method) getTopmostRefinedDeclaration(func);\n            // shortcut if the functional doesn't override anything\n            if(refinedFunc == func)\n                return decl;\n            if (func.getParameterLists().size() != refinedFunc.getParameterLists().size()) {\n                // invalid input\n                return decl;\n            }\n            for (int ii = 0; ii < func.getParameterLists().size(); ii++) {\n                if (func.getParameterLists().get(ii).getParameters().size() != refinedFunc.getParameterLists().get(ii).getParameters().size()) {\n                    // invalid input\n                    return decl;\n                }\n                // find the index of the parameter\n                int index = func.getParameterLists().get(ii).getParameters().indexOf(param);\n                if (index == -1) {\n                    continue;\n                }\n                return refinedFunc.getParameterLists().get(ii).getParameters().get(index);\n            }\n        }\n        Declaration refinedDecl = decl.getRefinedDeclaration();\n        if(refinedDecl != null && refinedDecl != decl)\n            return getTopmostRefinedDeclaration(refinedDecl);\n        return decl;\n    }","id":63373,"modified_method":"static Declaration getTopmostRefinedDeclaration(Declaration decl){\n        return getTopmostRefinedDeclaration(decl, null);\n    }","commit_id":"87b0285283ed786356d45a4e0a261e12962e4626","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"public InjectorForTopDownAnalyzerBasic(\n        @NotNull Project project,\n        @NotNull GlobalContext globalContext,\n        @NotNull BindingTrace bindingTrace,\n        @NotNull ModuleDescriptorImpl moduleDescriptor\n    ) {\n        this.project = project;\n        this.globalContext = globalContext;\n        this.storageManager = globalContext.getStorageManager();\n        this.bindingTrace = bindingTrace;\n        this.moduleDescriptor = moduleDescriptor;\n        this.platformToKotlinClassMap = moduleDescriptor.getPlatformToKotlinClassMap();\n        this.topDownAnalyzer = new TopDownAnalyzer();\n        this.mutablePackageFragmentProvider = new MutablePackageFragmentProvider(getModuleDescriptor());\n        this.dependencyClassByQualifiedNameResolverDummy = new DependencyClassByQualifiedNameResolverDummyImpl();\n        this.bodyResolver = new BodyResolver();\n        this.annotationResolver = new AnnotationResolver();\n        this.callResolver = new CallResolver();\n        this.argumentTypeResolver = new ArgumentTypeResolver();\n        this.expressionTypingComponents = new ExpressionTypingComponents();\n        this.expressionTypingServices = new ExpressionTypingServices(expressionTypingComponents);\n        this.controlStructureTypingUtils = new ControlStructureTypingUtils(expressionTypingServices);\n        this.expressionTypingUtils = new ExpressionTypingUtils(expressionTypingServices, callResolver);\n        this.forLoopConventionsChecker = new ForLoopConventionsChecker();\n        this.callExpressionResolver = new CallExpressionResolver();\n        this.descriptorResolver = new DescriptorResolver();\n        this.delegatedPropertyResolver = new DelegatedPropertyResolver();\n        this.typeResolver = new TypeResolver();\n        this.qualifiedExpressionResolver = new QualifiedExpressionResolver();\n        this.callResolverExtensionProvider = new CallResolverExtensionProvider();\n        this.candidateResolver = new CandidateResolver();\n        this.controlFlowAnalyzer = new ControlFlowAnalyzer();\n        this.declarationsChecker = new DeclarationsChecker();\n        this.functionAnalyzerExtension = new FunctionAnalyzerExtension();\n        this.scriptBodyResolver = new ScriptBodyResolver();\n        this.declarationResolver = new DeclarationResolver();\n        this.importsResolver = new ImportsResolver();\n        this.jetImportsFactory = new JetImportsFactory();\n        this.scriptHeaderResolver = new ScriptHeaderResolver();\n        this.overloadResolver = new OverloadResolver();\n        this.overrideResolver = new OverrideResolver();\n        this.typeHierarchyResolver = new TypeHierarchyResolver();\n\n        this.topDownAnalyzer.setBodyResolver(bodyResolver);\n        this.topDownAnalyzer.setDeclarationResolver(declarationResolver);\n        this.topDownAnalyzer.setModuleDescriptor(moduleDescriptor);\n        this.topDownAnalyzer.setOverloadResolver(overloadResolver);\n        this.topDownAnalyzer.setOverrideResolver(overrideResolver);\n        this.topDownAnalyzer.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        this.topDownAnalyzer.setProject(project);\n        this.topDownAnalyzer.setScriptHeaderResolver(scriptHeaderResolver);\n        this.topDownAnalyzer.setTrace(bindingTrace);\n        this.topDownAnalyzer.setTypeHierarchyResolver(typeHierarchyResolver);\n\n        bodyResolver.setAnnotationResolver(annotationResolver);\n        bodyResolver.setCallResolver(callResolver);\n        bodyResolver.setControlFlowAnalyzer(controlFlowAnalyzer);\n        bodyResolver.setDeclarationsChecker(declarationsChecker);\n        bodyResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        bodyResolver.setExpressionTypingServices(expressionTypingServices);\n        bodyResolver.setFunctionAnalyzerExtension(functionAnalyzerExtension);\n        bodyResolver.setScriptBodyResolverResolver(scriptBodyResolver);\n        bodyResolver.setTrace(bindingTrace);\n\n        annotationResolver.setCallResolver(callResolver);\n        annotationResolver.setStorageManager(storageManager);\n        annotationResolver.setTypeResolver(typeResolver);\n\n        callResolver.setArgumentTypeResolver(argumentTypeResolver);\n        callResolver.setCandidateResolver(candidateResolver);\n        callResolver.setExpressionTypingServices(expressionTypingServices);\n        callResolver.setTypeResolver(typeResolver);\n\n        argumentTypeResolver.setExpressionTypingServices(expressionTypingServices);\n        argumentTypeResolver.setTypeResolver(typeResolver);\n\n        expressionTypingServices.setAnnotationResolver(annotationResolver);\n        expressionTypingServices.setCallExpressionResolver(callExpressionResolver);\n        expressionTypingServices.setCallResolver(callResolver);\n        expressionTypingServices.setDescriptorResolver(descriptorResolver);\n        expressionTypingServices.setExtensionProvider(callResolverExtensionProvider);\n        expressionTypingServices.setProject(project);\n        expressionTypingServices.setTypeResolver(typeResolver);\n\n        expressionTypingComponents.setCallResolver(callResolver);\n        expressionTypingComponents.setControlStructureTypingUtils(controlStructureTypingUtils);\n        expressionTypingComponents.setExpressionTypingServices(expressionTypingServices);\n        expressionTypingComponents.setExpressionTypingUtils(expressionTypingUtils);\n        expressionTypingComponents.setForLoopConventionsChecker(forLoopConventionsChecker);\n        expressionTypingComponents.setGlobalContext(globalContext);\n        expressionTypingComponents.setPlatformToKotlinClassMap(platformToKotlinClassMap);\n\n        forLoopConventionsChecker.setExpressionTypingServices(expressionTypingServices);\n        forLoopConventionsChecker.setExpressionTypingUtils(expressionTypingUtils);\n        forLoopConventionsChecker.setProject(project);\n\n        callExpressionResolver.setExpressionTypingServices(expressionTypingServices);\n\n        descriptorResolver.setAnnotationResolver(annotationResolver);\n        descriptorResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        descriptorResolver.setExpressionTypingServices(expressionTypingServices);\n        descriptorResolver.setStorageManager(storageManager);\n        descriptorResolver.setTypeResolver(typeResolver);\n\n        delegatedPropertyResolver.setCallResolver(callResolver);\n        delegatedPropertyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        typeResolver.setAnnotationResolver(annotationResolver);\n        typeResolver.setModuleDescriptor(moduleDescriptor);\n        typeResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n\n        candidateResolver.setArgumentTypeResolver(argumentTypeResolver);\n\n        controlFlowAnalyzer.setTrace(bindingTrace);\n\n        declarationsChecker.setDescriptorResolver(descriptorResolver);\n        declarationsChecker.setTrace(bindingTrace);\n\n        functionAnalyzerExtension.setTrace(bindingTrace);\n\n        scriptBodyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        declarationResolver.setAnnotationResolver(annotationResolver);\n        declarationResolver.setDescriptorResolver(descriptorResolver);\n        declarationResolver.setImportsResolver(importsResolver);\n        declarationResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        declarationResolver.setTrace(bindingTrace);\n\n        importsResolver.setImportsFactory(jetImportsFactory);\n        importsResolver.setModuleDescriptor(moduleDescriptor);\n        importsResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n        importsResolver.setTrace(bindingTrace);\n\n        jetImportsFactory.setProject(project);\n\n        scriptHeaderResolver.setDependencyClassByQualifiedNameResolver(dependencyClassByQualifiedNameResolverDummy);\n        scriptHeaderResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        scriptHeaderResolver.setTrace(bindingTrace);\n\n        overloadResolver.setTrace(bindingTrace);\n\n        overrideResolver.setTrace(bindingTrace);\n\n        typeHierarchyResolver.setDescriptorResolver(descriptorResolver);\n        typeHierarchyResolver.setImportsResolver(importsResolver);\n        typeHierarchyResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        typeHierarchyResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        typeHierarchyResolver.setTrace(bindingTrace);\n\n    }","id":63374,"modified_method":"public InjectorForTopDownAnalyzerBasic(\n        @NotNull Project project,\n        @NotNull GlobalContext globalContext,\n        @NotNull BindingTrace bindingTrace,\n        @NotNull ModuleDescriptorImpl moduleDescriptor\n    ) {\n        this.project = project;\n        this.globalContext = globalContext;\n        this.storageManager = globalContext.getStorageManager();\n        this.bindingTrace = bindingTrace;\n        this.moduleDescriptor = moduleDescriptor;\n        this.platformToKotlinClassMap = moduleDescriptor.getPlatformToKotlinClassMap();\n        this.topDownAnalyzer = new TopDownAnalyzer();\n        this.mutablePackageFragmentProvider = new MutablePackageFragmentProvider(getModuleDescriptor());\n        this.dependencyClassByQualifiedNameResolverDummy = new DependencyClassByQualifiedNameResolverDummyImpl();\n        this.bodyResolver = new BodyResolver();\n        this.annotationResolver = new AnnotationResolver();\n        this.callResolver = new CallResolver();\n        this.argumentTypeResolver = new ArgumentTypeResolver();\n        this.expressionTypingComponents = new ExpressionTypingComponents();\n        this.expressionTypingServices = new ExpressionTypingServices(expressionTypingComponents);\n        this.controlStructureTypingUtils = new ControlStructureTypingUtils(expressionTypingServices);\n        this.expressionTypingUtils = new ExpressionTypingUtils(expressionTypingServices, callResolver);\n        this.forLoopConventionsChecker = new ForLoopConventionsChecker();\n        this.callExpressionResolver = new CallExpressionResolver();\n        this.descriptorResolver = new DescriptorResolver();\n        this.delegatedPropertyResolver = new DelegatedPropertyResolver();\n        this.typeResolver = new TypeResolver();\n        this.qualifiedExpressionResolver = new QualifiedExpressionResolver();\n        this.callResolverExtensionProvider = new CallResolverExtensionProvider();\n        this.candidateResolver = new CandidateResolver();\n        this.controlFlowAnalyzer = new ControlFlowAnalyzer();\n        this.declarationsChecker = new DeclarationsChecker();\n        this.functionAnalyzerExtension = new FunctionAnalyzerExtension();\n        this.scriptBodyResolver = new ScriptBodyResolver();\n        this.declarationResolver = new DeclarationResolver();\n        this.importsResolver = new ImportsResolver();\n        this.jetImportsFactory = new JetImportsFactory();\n        this.scriptHeaderResolver = new ScriptHeaderResolver();\n        this.scriptParameterResolver = new ScriptParameterResolver();\n        this.overloadResolver = new OverloadResolver();\n        this.overrideResolver = new OverrideResolver();\n        this.typeHierarchyResolver = new TypeHierarchyResolver();\n\n        this.topDownAnalyzer.setBodyResolver(bodyResolver);\n        this.topDownAnalyzer.setDeclarationResolver(declarationResolver);\n        this.topDownAnalyzer.setModuleDescriptor(moduleDescriptor);\n        this.topDownAnalyzer.setOverloadResolver(overloadResolver);\n        this.topDownAnalyzer.setOverrideResolver(overrideResolver);\n        this.topDownAnalyzer.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        this.topDownAnalyzer.setProject(project);\n        this.topDownAnalyzer.setScriptHeaderResolver(scriptHeaderResolver);\n        this.topDownAnalyzer.setTrace(bindingTrace);\n        this.topDownAnalyzer.setTypeHierarchyResolver(typeHierarchyResolver);\n\n        bodyResolver.setAnnotationResolver(annotationResolver);\n        bodyResolver.setCallResolver(callResolver);\n        bodyResolver.setControlFlowAnalyzer(controlFlowAnalyzer);\n        bodyResolver.setDeclarationsChecker(declarationsChecker);\n        bodyResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        bodyResolver.setExpressionTypingServices(expressionTypingServices);\n        bodyResolver.setFunctionAnalyzerExtension(functionAnalyzerExtension);\n        bodyResolver.setScriptBodyResolverResolver(scriptBodyResolver);\n        bodyResolver.setTrace(bindingTrace);\n\n        annotationResolver.setCallResolver(callResolver);\n        annotationResolver.setStorageManager(storageManager);\n        annotationResolver.setTypeResolver(typeResolver);\n\n        callResolver.setArgumentTypeResolver(argumentTypeResolver);\n        callResolver.setCandidateResolver(candidateResolver);\n        callResolver.setExpressionTypingServices(expressionTypingServices);\n        callResolver.setTypeResolver(typeResolver);\n\n        argumentTypeResolver.setExpressionTypingServices(expressionTypingServices);\n        argumentTypeResolver.setTypeResolver(typeResolver);\n\n        expressionTypingServices.setAnnotationResolver(annotationResolver);\n        expressionTypingServices.setCallExpressionResolver(callExpressionResolver);\n        expressionTypingServices.setCallResolver(callResolver);\n        expressionTypingServices.setDescriptorResolver(descriptorResolver);\n        expressionTypingServices.setExtensionProvider(callResolverExtensionProvider);\n        expressionTypingServices.setProject(project);\n        expressionTypingServices.setTypeResolver(typeResolver);\n\n        expressionTypingComponents.setCallResolver(callResolver);\n        expressionTypingComponents.setControlStructureTypingUtils(controlStructureTypingUtils);\n        expressionTypingComponents.setExpressionTypingServices(expressionTypingServices);\n        expressionTypingComponents.setExpressionTypingUtils(expressionTypingUtils);\n        expressionTypingComponents.setForLoopConventionsChecker(forLoopConventionsChecker);\n        expressionTypingComponents.setGlobalContext(globalContext);\n        expressionTypingComponents.setPlatformToKotlinClassMap(platformToKotlinClassMap);\n\n        forLoopConventionsChecker.setExpressionTypingServices(expressionTypingServices);\n        forLoopConventionsChecker.setExpressionTypingUtils(expressionTypingUtils);\n        forLoopConventionsChecker.setProject(project);\n\n        callExpressionResolver.setExpressionTypingServices(expressionTypingServices);\n\n        descriptorResolver.setAnnotationResolver(annotationResolver);\n        descriptorResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        descriptorResolver.setExpressionTypingServices(expressionTypingServices);\n        descriptorResolver.setStorageManager(storageManager);\n        descriptorResolver.setTypeResolver(typeResolver);\n\n        delegatedPropertyResolver.setCallResolver(callResolver);\n        delegatedPropertyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        typeResolver.setAnnotationResolver(annotationResolver);\n        typeResolver.setModuleDescriptor(moduleDescriptor);\n        typeResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n\n        candidateResolver.setArgumentTypeResolver(argumentTypeResolver);\n\n        controlFlowAnalyzer.setTrace(bindingTrace);\n\n        declarationsChecker.setDescriptorResolver(descriptorResolver);\n        declarationsChecker.setTrace(bindingTrace);\n\n        functionAnalyzerExtension.setTrace(bindingTrace);\n\n        scriptBodyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        declarationResolver.setAnnotationResolver(annotationResolver);\n        declarationResolver.setDescriptorResolver(descriptorResolver);\n        declarationResolver.setImportsResolver(importsResolver);\n        declarationResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        declarationResolver.setTrace(bindingTrace);\n\n        importsResolver.setImportsFactory(jetImportsFactory);\n        importsResolver.setModuleDescriptor(moduleDescriptor);\n        importsResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n        importsResolver.setTrace(bindingTrace);\n\n        jetImportsFactory.setProject(project);\n\n        scriptHeaderResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        scriptHeaderResolver.setScriptParameterResolver(scriptParameterResolver);\n        scriptHeaderResolver.setTrace(bindingTrace);\n\n        scriptParameterResolver.setDependencyClassByQualifiedNameResolver(dependencyClassByQualifiedNameResolverDummy);\n\n        overloadResolver.setTrace(bindingTrace);\n\n        overrideResolver.setTrace(bindingTrace);\n\n        typeHierarchyResolver.setDescriptorResolver(descriptorResolver);\n        typeHierarchyResolver.setImportsResolver(importsResolver);\n        typeHierarchyResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        typeHierarchyResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        typeHierarchyResolver.setTrace(bindingTrace);\n\n    }","commit_id":"76e286aacc107236499a536c20b3dce4318dc432","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public InjectorForTopDownAnalyzerForJs(\n        @NotNull Project project,\n        @NotNull GlobalContext globalContext,\n        @NotNull BindingTrace bindingTrace,\n        @NotNull ModuleDescriptorImpl moduleDescriptor\n    ) {\n        this.project = project;\n        this.globalContext = globalContext;\n        this.storageManager = globalContext.getStorageManager();\n        this.bindingTrace = bindingTrace;\n        this.moduleDescriptor = moduleDescriptor;\n        this.platformToKotlinClassMap = moduleDescriptor.getPlatformToKotlinClassMap();\n        this.topDownAnalyzer = new TopDownAnalyzer();\n        this.mutablePackageFragmentProvider = new MutablePackageFragmentProvider(getModuleDescriptor());\n        this.dependencyClassByQualifiedNameResolverDummy = new DependencyClassByQualifiedNameResolverDummyImpl();\n        this.bodyResolver = new BodyResolver();\n        this.annotationResolver = new AnnotationResolver();\n        this.callResolver = new CallResolver();\n        this.argumentTypeResolver = new ArgumentTypeResolver();\n        this.expressionTypingComponents = new ExpressionTypingComponents();\n        this.expressionTypingServices = new ExpressionTypingServices(expressionTypingComponents);\n        this.controlStructureTypingUtils = new ControlStructureTypingUtils(expressionTypingServices);\n        this.expressionTypingUtils = new ExpressionTypingUtils(expressionTypingServices, callResolver);\n        this.forLoopConventionsChecker = new ForLoopConventionsChecker();\n        this.callExpressionResolver = new CallExpressionResolver();\n        this.descriptorResolver = new DescriptorResolver();\n        this.delegatedPropertyResolver = new DelegatedPropertyResolver();\n        this.typeResolver = new TypeResolver();\n        this.qualifiedExpressionResolver = new QualifiedExpressionResolver();\n        this.callResolverExtensionProvider = new CallResolverExtensionProvider();\n        this.candidateResolver = new CandidateResolver();\n        this.controlFlowAnalyzer = new ControlFlowAnalyzer();\n        this.declarationsChecker = new DeclarationsChecker();\n        this.functionAnalyzerExtension = new FunctionAnalyzerExtension();\n        this.scriptBodyResolver = new ScriptBodyResolver();\n        this.declarationResolver = new DeclarationResolver();\n        this.importsResolver = new ImportsResolver();\n        this.jetImportsFactory = new JetImportsFactory();\n        this.scriptHeaderResolver = new ScriptHeaderResolver();\n        this.overloadResolver = new OverloadResolver();\n        this.overrideResolver = new OverrideResolver();\n        this.typeHierarchyResolver = new TypeHierarchyResolver();\n\n        this.topDownAnalyzer.setBodyResolver(bodyResolver);\n        this.topDownAnalyzer.setDeclarationResolver(declarationResolver);\n        this.topDownAnalyzer.setModuleDescriptor(moduleDescriptor);\n        this.topDownAnalyzer.setOverloadResolver(overloadResolver);\n        this.topDownAnalyzer.setOverrideResolver(overrideResolver);\n        this.topDownAnalyzer.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        this.topDownAnalyzer.setProject(project);\n        this.topDownAnalyzer.setScriptHeaderResolver(scriptHeaderResolver);\n        this.topDownAnalyzer.setTrace(bindingTrace);\n        this.topDownAnalyzer.setTypeHierarchyResolver(typeHierarchyResolver);\n\n        bodyResolver.setAnnotationResolver(annotationResolver);\n        bodyResolver.setCallResolver(callResolver);\n        bodyResolver.setControlFlowAnalyzer(controlFlowAnalyzer);\n        bodyResolver.setDeclarationsChecker(declarationsChecker);\n        bodyResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        bodyResolver.setExpressionTypingServices(expressionTypingServices);\n        bodyResolver.setFunctionAnalyzerExtension(functionAnalyzerExtension);\n        bodyResolver.setScriptBodyResolverResolver(scriptBodyResolver);\n        bodyResolver.setTrace(bindingTrace);\n\n        annotationResolver.setCallResolver(callResolver);\n        annotationResolver.setStorageManager(storageManager);\n        annotationResolver.setTypeResolver(typeResolver);\n\n        callResolver.setArgumentTypeResolver(argumentTypeResolver);\n        callResolver.setCandidateResolver(candidateResolver);\n        callResolver.setExpressionTypingServices(expressionTypingServices);\n        callResolver.setTypeResolver(typeResolver);\n\n        argumentTypeResolver.setExpressionTypingServices(expressionTypingServices);\n        argumentTypeResolver.setTypeResolver(typeResolver);\n\n        expressionTypingServices.setAnnotationResolver(annotationResolver);\n        expressionTypingServices.setCallExpressionResolver(callExpressionResolver);\n        expressionTypingServices.setCallResolver(callResolver);\n        expressionTypingServices.setDescriptorResolver(descriptorResolver);\n        expressionTypingServices.setExtensionProvider(callResolverExtensionProvider);\n        expressionTypingServices.setProject(project);\n        expressionTypingServices.setTypeResolver(typeResolver);\n\n        expressionTypingComponents.setCallResolver(callResolver);\n        expressionTypingComponents.setControlStructureTypingUtils(controlStructureTypingUtils);\n        expressionTypingComponents.setExpressionTypingServices(expressionTypingServices);\n        expressionTypingComponents.setExpressionTypingUtils(expressionTypingUtils);\n        expressionTypingComponents.setForLoopConventionsChecker(forLoopConventionsChecker);\n        expressionTypingComponents.setGlobalContext(globalContext);\n        expressionTypingComponents.setPlatformToKotlinClassMap(platformToKotlinClassMap);\n\n        forLoopConventionsChecker.setExpressionTypingServices(expressionTypingServices);\n        forLoopConventionsChecker.setExpressionTypingUtils(expressionTypingUtils);\n        forLoopConventionsChecker.setProject(project);\n\n        callExpressionResolver.setExpressionTypingServices(expressionTypingServices);\n\n        descriptorResolver.setAnnotationResolver(annotationResolver);\n        descriptorResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        descriptorResolver.setExpressionTypingServices(expressionTypingServices);\n        descriptorResolver.setStorageManager(storageManager);\n        descriptorResolver.setTypeResolver(typeResolver);\n\n        delegatedPropertyResolver.setCallResolver(callResolver);\n        delegatedPropertyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        typeResolver.setAnnotationResolver(annotationResolver);\n        typeResolver.setModuleDescriptor(moduleDescriptor);\n        typeResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n\n        candidateResolver.setArgumentTypeResolver(argumentTypeResolver);\n\n        controlFlowAnalyzer.setTrace(bindingTrace);\n\n        declarationsChecker.setDescriptorResolver(descriptorResolver);\n        declarationsChecker.setTrace(bindingTrace);\n\n        functionAnalyzerExtension.setTrace(bindingTrace);\n\n        scriptBodyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        declarationResolver.setAnnotationResolver(annotationResolver);\n        declarationResolver.setDescriptorResolver(descriptorResolver);\n        declarationResolver.setImportsResolver(importsResolver);\n        declarationResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        declarationResolver.setTrace(bindingTrace);\n\n        importsResolver.setImportsFactory(jetImportsFactory);\n        importsResolver.setModuleDescriptor(moduleDescriptor);\n        importsResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n        importsResolver.setTrace(bindingTrace);\n\n        jetImportsFactory.setProject(project);\n\n        scriptHeaderResolver.setDependencyClassByQualifiedNameResolver(dependencyClassByQualifiedNameResolverDummy);\n        scriptHeaderResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        scriptHeaderResolver.setTrace(bindingTrace);\n\n        overloadResolver.setTrace(bindingTrace);\n\n        overrideResolver.setTrace(bindingTrace);\n\n        typeHierarchyResolver.setDescriptorResolver(descriptorResolver);\n        typeHierarchyResolver.setImportsResolver(importsResolver);\n        typeHierarchyResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        typeHierarchyResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        typeHierarchyResolver.setTrace(bindingTrace);\n\n    }","id":63375,"modified_method":"public InjectorForTopDownAnalyzerForJs(\n        @NotNull Project project,\n        @NotNull GlobalContext globalContext,\n        @NotNull BindingTrace bindingTrace,\n        @NotNull ModuleDescriptorImpl moduleDescriptor\n    ) {\n        this.project = project;\n        this.globalContext = globalContext;\n        this.storageManager = globalContext.getStorageManager();\n        this.bindingTrace = bindingTrace;\n        this.moduleDescriptor = moduleDescriptor;\n        this.platformToKotlinClassMap = moduleDescriptor.getPlatformToKotlinClassMap();\n        this.topDownAnalyzer = new TopDownAnalyzer();\n        this.mutablePackageFragmentProvider = new MutablePackageFragmentProvider(getModuleDescriptor());\n        this.dependencyClassByQualifiedNameResolverDummy = new DependencyClassByQualifiedNameResolverDummyImpl();\n        this.bodyResolver = new BodyResolver();\n        this.annotationResolver = new AnnotationResolver();\n        this.callResolver = new CallResolver();\n        this.argumentTypeResolver = new ArgumentTypeResolver();\n        this.expressionTypingComponents = new ExpressionTypingComponents();\n        this.expressionTypingServices = new ExpressionTypingServices(expressionTypingComponents);\n        this.controlStructureTypingUtils = new ControlStructureTypingUtils(expressionTypingServices);\n        this.expressionTypingUtils = new ExpressionTypingUtils(expressionTypingServices, callResolver);\n        this.forLoopConventionsChecker = new ForLoopConventionsChecker();\n        this.callExpressionResolver = new CallExpressionResolver();\n        this.descriptorResolver = new DescriptorResolver();\n        this.delegatedPropertyResolver = new DelegatedPropertyResolver();\n        this.typeResolver = new TypeResolver();\n        this.qualifiedExpressionResolver = new QualifiedExpressionResolver();\n        this.callResolverExtensionProvider = new CallResolverExtensionProvider();\n        this.candidateResolver = new CandidateResolver();\n        this.controlFlowAnalyzer = new ControlFlowAnalyzer();\n        this.declarationsChecker = new DeclarationsChecker();\n        this.functionAnalyzerExtension = new FunctionAnalyzerExtension();\n        this.scriptBodyResolver = new ScriptBodyResolver();\n        this.declarationResolver = new DeclarationResolver();\n        this.importsResolver = new ImportsResolver();\n        this.jetImportsFactory = new JetImportsFactory();\n        this.scriptHeaderResolver = new ScriptHeaderResolver();\n        this.scriptParameterResolver = new ScriptParameterResolver();\n        this.overloadResolver = new OverloadResolver();\n        this.overrideResolver = new OverrideResolver();\n        this.typeHierarchyResolver = new TypeHierarchyResolver();\n\n        this.topDownAnalyzer.setBodyResolver(bodyResolver);\n        this.topDownAnalyzer.setDeclarationResolver(declarationResolver);\n        this.topDownAnalyzer.setModuleDescriptor(moduleDescriptor);\n        this.topDownAnalyzer.setOverloadResolver(overloadResolver);\n        this.topDownAnalyzer.setOverrideResolver(overrideResolver);\n        this.topDownAnalyzer.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        this.topDownAnalyzer.setProject(project);\n        this.topDownAnalyzer.setScriptHeaderResolver(scriptHeaderResolver);\n        this.topDownAnalyzer.setTrace(bindingTrace);\n        this.topDownAnalyzer.setTypeHierarchyResolver(typeHierarchyResolver);\n\n        bodyResolver.setAnnotationResolver(annotationResolver);\n        bodyResolver.setCallResolver(callResolver);\n        bodyResolver.setControlFlowAnalyzer(controlFlowAnalyzer);\n        bodyResolver.setDeclarationsChecker(declarationsChecker);\n        bodyResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        bodyResolver.setExpressionTypingServices(expressionTypingServices);\n        bodyResolver.setFunctionAnalyzerExtension(functionAnalyzerExtension);\n        bodyResolver.setScriptBodyResolverResolver(scriptBodyResolver);\n        bodyResolver.setTrace(bindingTrace);\n\n        annotationResolver.setCallResolver(callResolver);\n        annotationResolver.setStorageManager(storageManager);\n        annotationResolver.setTypeResolver(typeResolver);\n\n        callResolver.setArgumentTypeResolver(argumentTypeResolver);\n        callResolver.setCandidateResolver(candidateResolver);\n        callResolver.setExpressionTypingServices(expressionTypingServices);\n        callResolver.setTypeResolver(typeResolver);\n\n        argumentTypeResolver.setExpressionTypingServices(expressionTypingServices);\n        argumentTypeResolver.setTypeResolver(typeResolver);\n\n        expressionTypingServices.setAnnotationResolver(annotationResolver);\n        expressionTypingServices.setCallExpressionResolver(callExpressionResolver);\n        expressionTypingServices.setCallResolver(callResolver);\n        expressionTypingServices.setDescriptorResolver(descriptorResolver);\n        expressionTypingServices.setExtensionProvider(callResolverExtensionProvider);\n        expressionTypingServices.setProject(project);\n        expressionTypingServices.setTypeResolver(typeResolver);\n\n        expressionTypingComponents.setCallResolver(callResolver);\n        expressionTypingComponents.setControlStructureTypingUtils(controlStructureTypingUtils);\n        expressionTypingComponents.setExpressionTypingServices(expressionTypingServices);\n        expressionTypingComponents.setExpressionTypingUtils(expressionTypingUtils);\n        expressionTypingComponents.setForLoopConventionsChecker(forLoopConventionsChecker);\n        expressionTypingComponents.setGlobalContext(globalContext);\n        expressionTypingComponents.setPlatformToKotlinClassMap(platformToKotlinClassMap);\n\n        forLoopConventionsChecker.setExpressionTypingServices(expressionTypingServices);\n        forLoopConventionsChecker.setExpressionTypingUtils(expressionTypingUtils);\n        forLoopConventionsChecker.setProject(project);\n\n        callExpressionResolver.setExpressionTypingServices(expressionTypingServices);\n\n        descriptorResolver.setAnnotationResolver(annotationResolver);\n        descriptorResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        descriptorResolver.setExpressionTypingServices(expressionTypingServices);\n        descriptorResolver.setStorageManager(storageManager);\n        descriptorResolver.setTypeResolver(typeResolver);\n\n        delegatedPropertyResolver.setCallResolver(callResolver);\n        delegatedPropertyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        typeResolver.setAnnotationResolver(annotationResolver);\n        typeResolver.setModuleDescriptor(moduleDescriptor);\n        typeResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n\n        candidateResolver.setArgumentTypeResolver(argumentTypeResolver);\n\n        controlFlowAnalyzer.setTrace(bindingTrace);\n\n        declarationsChecker.setDescriptorResolver(descriptorResolver);\n        declarationsChecker.setTrace(bindingTrace);\n\n        functionAnalyzerExtension.setTrace(bindingTrace);\n\n        scriptBodyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        declarationResolver.setAnnotationResolver(annotationResolver);\n        declarationResolver.setDescriptorResolver(descriptorResolver);\n        declarationResolver.setImportsResolver(importsResolver);\n        declarationResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        declarationResolver.setTrace(bindingTrace);\n\n        importsResolver.setImportsFactory(jetImportsFactory);\n        importsResolver.setModuleDescriptor(moduleDescriptor);\n        importsResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n        importsResolver.setTrace(bindingTrace);\n\n        jetImportsFactory.setProject(project);\n\n        scriptHeaderResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        scriptHeaderResolver.setScriptParameterResolver(scriptParameterResolver);\n        scriptHeaderResolver.setTrace(bindingTrace);\n\n        scriptParameterResolver.setDependencyClassByQualifiedNameResolver(dependencyClassByQualifiedNameResolverDummy);\n\n        overloadResolver.setTrace(bindingTrace);\n\n        overrideResolver.setTrace(bindingTrace);\n\n        typeHierarchyResolver.setDescriptorResolver(descriptorResolver);\n        typeHierarchyResolver.setImportsResolver(importsResolver);\n        typeHierarchyResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        typeHierarchyResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        typeHierarchyResolver.setTrace(bindingTrace);\n\n    }","commit_id":"76e286aacc107236499a536c20b3dce4318dc432","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public InjectorForTopDownAnalyzerForJvm(\n        @NotNull Project project,\n        @NotNull GlobalContext globalContext,\n        @NotNull BindingTrace bindingTrace,\n        @NotNull ModuleDescriptorImpl moduleDescriptor,\n        @NotNull MemberFilter memberFilter\n    ) {\n        this.project = project;\n        this.globalContext = globalContext;\n        this.storageManager = globalContext.getStorageManager();\n        this.bindingTrace = bindingTrace;\n        this.moduleDescriptor = moduleDescriptor;\n        this.platformToKotlinClassMap = moduleDescriptor.getPlatformToKotlinClassMap();\n        this.topDownAnalyzer = new TopDownAnalyzer();\n        this.mutablePackageFragmentProvider = new MutablePackageFragmentProvider(getModuleDescriptor());\n        this.memberFilter = memberFilter;\n        this.javaClassFinder = new JavaClassFinderImpl();\n        this.virtualFileFinder = org.jetbrains.jet.lang.resolve.kotlin.VirtualFileFinder.SERVICE.getInstance(project);\n        this.deserializedDescriptorResolver = new DeserializedDescriptorResolver();\n        this.psiBasedExternalAnnotationResolver = new PsiBasedExternalAnnotationResolver();\n        this.traceBasedExternalSignatureResolver = new TraceBasedExternalSignatureResolver();\n        this.traceBasedErrorReporter = new TraceBasedErrorReporter();\n        this.psiBasedMethodSignatureChecker = new PsiBasedMethodSignatureChecker();\n        this.traceBasedJavaResolverCache = new TraceBasedJavaResolverCache();\n        this.globalJavaResolverContext = new GlobalJavaResolverContext(storageManager, javaClassFinder, virtualFileFinder, deserializedDescriptorResolver, psiBasedExternalAnnotationResolver, traceBasedExternalSignatureResolver, traceBasedErrorReporter, psiBasedMethodSignatureChecker, traceBasedJavaResolverCache);\n        this.lazyJavaPackageFragmentProvider = new LazyJavaPackageFragmentProvider(globalJavaResolverContext, getModuleDescriptor());\n        this.javaDescriptorResolver = new JavaDescriptorResolver(lazyJavaPackageFragmentProvider, getModuleDescriptor());\n        this.bodyResolver = new BodyResolver();\n        this.annotationResolver = new AnnotationResolver();\n        this.callResolver = new CallResolver();\n        this.argumentTypeResolver = new ArgumentTypeResolver();\n        this.expressionTypingComponents = new ExpressionTypingComponents();\n        this.expressionTypingServices = new ExpressionTypingServices(expressionTypingComponents);\n        this.controlStructureTypingUtils = new ControlStructureTypingUtils(expressionTypingServices);\n        this.expressionTypingUtils = new ExpressionTypingUtils(expressionTypingServices, callResolver);\n        this.forLoopConventionsChecker = new ForLoopConventionsChecker();\n        this.callExpressionResolver = new CallExpressionResolver();\n        this.descriptorResolver = new DescriptorResolver();\n        this.delegatedPropertyResolver = new DelegatedPropertyResolver();\n        this.typeResolver = new TypeResolver();\n        this.qualifiedExpressionResolver = new QualifiedExpressionResolver();\n        this.callResolverExtensionProvider = new CallResolverExtensionProvider();\n        this.candidateResolver = new CandidateResolver();\n        this.controlFlowAnalyzer = new ControlFlowAnalyzer();\n        this.declarationsChecker = new DeclarationsChecker();\n        this.functionAnalyzerExtension = new FunctionAnalyzerExtension();\n        this.scriptBodyResolver = new ScriptBodyResolver();\n        this.declarationResolver = new DeclarationResolver();\n        this.importsResolver = new ImportsResolver();\n        this.jetImportsFactory = new JetImportsFactory();\n        this.scriptHeaderResolver = new ScriptHeaderResolver();\n        this.overloadResolver = new OverloadResolver();\n        this.overrideResolver = new OverrideResolver();\n        this.typeHierarchyResolver = new TypeHierarchyResolver();\n        this.descriptorDeserializers = new DescriptorDeserializers();\n        this.annotationDescriptorDeserializer = new AnnotationDescriptorDeserializer();\n        this.descriptorDeserializersStorage = new DescriptorDeserializersStorage(storageManager);\n        this.constantDescriptorDeserializer = new ConstantDescriptorDeserializer();\n\n        this.topDownAnalyzer.setBodyResolver(bodyResolver);\n        this.topDownAnalyzer.setDeclarationResolver(declarationResolver);\n        this.topDownAnalyzer.setModuleDescriptor(moduleDescriptor);\n        this.topDownAnalyzer.setOverloadResolver(overloadResolver);\n        this.topDownAnalyzer.setOverrideResolver(overrideResolver);\n        this.topDownAnalyzer.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        this.topDownAnalyzer.setProject(project);\n        this.topDownAnalyzer.setScriptHeaderResolver(scriptHeaderResolver);\n        this.topDownAnalyzer.setTrace(bindingTrace);\n        this.topDownAnalyzer.setTypeHierarchyResolver(typeHierarchyResolver);\n\n        javaClassFinder.setProject(project);\n\n        traceBasedExternalSignatureResolver.setExternalAnnotationResolver(psiBasedExternalAnnotationResolver);\n        traceBasedExternalSignatureResolver.setTrace(bindingTrace);\n\n        traceBasedJavaResolverCache.setTrace(bindingTrace);\n\n        traceBasedErrorReporter.setTrace(bindingTrace);\n\n        psiBasedMethodSignatureChecker.setExternalAnnotationResolver(psiBasedExternalAnnotationResolver);\n        psiBasedMethodSignatureChecker.setExternalSignatureResolver(traceBasedExternalSignatureResolver);\n\n        bodyResolver.setAnnotationResolver(annotationResolver);\n        bodyResolver.setCallResolver(callResolver);\n        bodyResolver.setControlFlowAnalyzer(controlFlowAnalyzer);\n        bodyResolver.setDeclarationsChecker(declarationsChecker);\n        bodyResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        bodyResolver.setExpressionTypingServices(expressionTypingServices);\n        bodyResolver.setFunctionAnalyzerExtension(functionAnalyzerExtension);\n        bodyResolver.setScriptBodyResolverResolver(scriptBodyResolver);\n        bodyResolver.setTrace(bindingTrace);\n\n        annotationResolver.setCallResolver(callResolver);\n        annotationResolver.setStorageManager(storageManager);\n        annotationResolver.setTypeResolver(typeResolver);\n\n        callResolver.setArgumentTypeResolver(argumentTypeResolver);\n        callResolver.setCandidateResolver(candidateResolver);\n        callResolver.setExpressionTypingServices(expressionTypingServices);\n        callResolver.setTypeResolver(typeResolver);\n\n        argumentTypeResolver.setExpressionTypingServices(expressionTypingServices);\n        argumentTypeResolver.setTypeResolver(typeResolver);\n\n        expressionTypingServices.setAnnotationResolver(annotationResolver);\n        expressionTypingServices.setCallExpressionResolver(callExpressionResolver);\n        expressionTypingServices.setCallResolver(callResolver);\n        expressionTypingServices.setDescriptorResolver(descriptorResolver);\n        expressionTypingServices.setExtensionProvider(callResolverExtensionProvider);\n        expressionTypingServices.setProject(project);\n        expressionTypingServices.setTypeResolver(typeResolver);\n\n        expressionTypingComponents.setCallResolver(callResolver);\n        expressionTypingComponents.setControlStructureTypingUtils(controlStructureTypingUtils);\n        expressionTypingComponents.setExpressionTypingServices(expressionTypingServices);\n        expressionTypingComponents.setExpressionTypingUtils(expressionTypingUtils);\n        expressionTypingComponents.setForLoopConventionsChecker(forLoopConventionsChecker);\n        expressionTypingComponents.setGlobalContext(globalContext);\n        expressionTypingComponents.setPlatformToKotlinClassMap(platformToKotlinClassMap);\n\n        forLoopConventionsChecker.setExpressionTypingServices(expressionTypingServices);\n        forLoopConventionsChecker.setExpressionTypingUtils(expressionTypingUtils);\n        forLoopConventionsChecker.setProject(project);\n\n        callExpressionResolver.setExpressionTypingServices(expressionTypingServices);\n\n        descriptorResolver.setAnnotationResolver(annotationResolver);\n        descriptorResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        descriptorResolver.setExpressionTypingServices(expressionTypingServices);\n        descriptorResolver.setStorageManager(storageManager);\n        descriptorResolver.setTypeResolver(typeResolver);\n\n        delegatedPropertyResolver.setCallResolver(callResolver);\n        delegatedPropertyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        typeResolver.setAnnotationResolver(annotationResolver);\n        typeResolver.setModuleDescriptor(moduleDescriptor);\n        typeResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n\n        candidateResolver.setArgumentTypeResolver(argumentTypeResolver);\n\n        controlFlowAnalyzer.setTrace(bindingTrace);\n\n        declarationsChecker.setDescriptorResolver(descriptorResolver);\n        declarationsChecker.setTrace(bindingTrace);\n\n        functionAnalyzerExtension.setTrace(bindingTrace);\n\n        scriptBodyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        declarationResolver.setAnnotationResolver(annotationResolver);\n        declarationResolver.setDescriptorResolver(descriptorResolver);\n        declarationResolver.setImportsResolver(importsResolver);\n        declarationResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        declarationResolver.setTrace(bindingTrace);\n\n        importsResolver.setImportsFactory(jetImportsFactory);\n        importsResolver.setModuleDescriptor(moduleDescriptor);\n        importsResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n        importsResolver.setTrace(bindingTrace);\n\n        jetImportsFactory.setProject(project);\n\n        scriptHeaderResolver.setDependencyClassByQualifiedNameResolver(javaDescriptorResolver);\n        scriptHeaderResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        scriptHeaderResolver.setTrace(bindingTrace);\n\n        overloadResolver.setTrace(bindingTrace);\n\n        overrideResolver.setTrace(bindingTrace);\n\n        typeHierarchyResolver.setDescriptorResolver(descriptorResolver);\n        typeHierarchyResolver.setImportsResolver(importsResolver);\n        typeHierarchyResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        typeHierarchyResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        typeHierarchyResolver.setTrace(bindingTrace);\n\n        deserializedDescriptorResolver.setDeserializers(descriptorDeserializers);\n        deserializedDescriptorResolver.setErrorReporter(traceBasedErrorReporter);\n        deserializedDescriptorResolver.setJavaDescriptorResolver(javaDescriptorResolver);\n        deserializedDescriptorResolver.setJavaPackageFragmentProvider(lazyJavaPackageFragmentProvider);\n        deserializedDescriptorResolver.setMemberFilter(memberFilter);\n        deserializedDescriptorResolver.setStorageManager(storageManager);\n\n        descriptorDeserializers.setAnnotationDescriptorDeserializer(annotationDescriptorDeserializer);\n        descriptorDeserializers.setConstantDescriptorDeserializer(constantDescriptorDeserializer);\n\n        annotationDescriptorDeserializer.setClassResolver(javaDescriptorResolver);\n        annotationDescriptorDeserializer.setErrorReporter(traceBasedErrorReporter);\n        annotationDescriptorDeserializer.setKotlinClassFinder(virtualFileFinder);\n        annotationDescriptorDeserializer.setStorage(descriptorDeserializersStorage);\n\n        descriptorDeserializersStorage.setClassResolver(javaDescriptorResolver);\n        descriptorDeserializersStorage.setErrorReporter(traceBasedErrorReporter);\n\n        constantDescriptorDeserializer.setClassResolver(javaDescriptorResolver);\n        constantDescriptorDeserializer.setErrorReporter(traceBasedErrorReporter);\n        constantDescriptorDeserializer.setKotlinClassFinder(virtualFileFinder);\n        constantDescriptorDeserializer.setStorage(descriptorDeserializersStorage);\n\n        javaClassFinder.initialize();\n\n    }","id":63376,"modified_method":"public InjectorForTopDownAnalyzerForJvm(\n        @NotNull Project project,\n        @NotNull GlobalContext globalContext,\n        @NotNull BindingTrace bindingTrace,\n        @NotNull ModuleDescriptorImpl moduleDescriptor,\n        @NotNull MemberFilter memberFilter\n    ) {\n        this.project = project;\n        this.globalContext = globalContext;\n        this.storageManager = globalContext.getStorageManager();\n        this.bindingTrace = bindingTrace;\n        this.moduleDescriptor = moduleDescriptor;\n        this.platformToKotlinClassMap = moduleDescriptor.getPlatformToKotlinClassMap();\n        this.topDownAnalyzer = new TopDownAnalyzer();\n        this.mutablePackageFragmentProvider = new MutablePackageFragmentProvider(getModuleDescriptor());\n        this.memberFilter = memberFilter;\n        this.javaClassFinder = new JavaClassFinderImpl();\n        this.virtualFileFinder = org.jetbrains.jet.lang.resolve.kotlin.VirtualFileFinder.SERVICE.getInstance(project);\n        this.deserializedDescriptorResolver = new DeserializedDescriptorResolver();\n        this.psiBasedExternalAnnotationResolver = new PsiBasedExternalAnnotationResolver();\n        this.traceBasedExternalSignatureResolver = new TraceBasedExternalSignatureResolver();\n        this.traceBasedErrorReporter = new TraceBasedErrorReporter();\n        this.psiBasedMethodSignatureChecker = new PsiBasedMethodSignatureChecker();\n        this.traceBasedJavaResolverCache = new TraceBasedJavaResolverCache();\n        this.globalJavaResolverContext = new GlobalJavaResolverContext(storageManager, javaClassFinder, virtualFileFinder, deserializedDescriptorResolver, psiBasedExternalAnnotationResolver, traceBasedExternalSignatureResolver, traceBasedErrorReporter, psiBasedMethodSignatureChecker, traceBasedJavaResolverCache);\n        this.lazyJavaPackageFragmentProvider = new LazyJavaPackageFragmentProvider(globalJavaResolverContext, getModuleDescriptor());\n        this.javaDescriptorResolver = new JavaDescriptorResolver(lazyJavaPackageFragmentProvider, getModuleDescriptor());\n        this.bodyResolver = new BodyResolver();\n        this.annotationResolver = new AnnotationResolver();\n        this.callResolver = new CallResolver();\n        this.argumentTypeResolver = new ArgumentTypeResolver();\n        this.expressionTypingComponents = new ExpressionTypingComponents();\n        this.expressionTypingServices = new ExpressionTypingServices(expressionTypingComponents);\n        this.controlStructureTypingUtils = new ControlStructureTypingUtils(expressionTypingServices);\n        this.expressionTypingUtils = new ExpressionTypingUtils(expressionTypingServices, callResolver);\n        this.forLoopConventionsChecker = new ForLoopConventionsChecker();\n        this.callExpressionResolver = new CallExpressionResolver();\n        this.descriptorResolver = new DescriptorResolver();\n        this.delegatedPropertyResolver = new DelegatedPropertyResolver();\n        this.typeResolver = new TypeResolver();\n        this.qualifiedExpressionResolver = new QualifiedExpressionResolver();\n        this.callResolverExtensionProvider = new CallResolverExtensionProvider();\n        this.candidateResolver = new CandidateResolver();\n        this.controlFlowAnalyzer = new ControlFlowAnalyzer();\n        this.declarationsChecker = new DeclarationsChecker();\n        this.functionAnalyzerExtension = new FunctionAnalyzerExtension();\n        this.scriptBodyResolver = new ScriptBodyResolver();\n        this.declarationResolver = new DeclarationResolver();\n        this.importsResolver = new ImportsResolver();\n        this.jetImportsFactory = new JetImportsFactory();\n        this.scriptHeaderResolver = new ScriptHeaderResolver();\n        this.scriptParameterResolver = new ScriptParameterResolver();\n        this.overloadResolver = new OverloadResolver();\n        this.overrideResolver = new OverrideResolver();\n        this.typeHierarchyResolver = new TypeHierarchyResolver();\n        this.descriptorDeserializers = new DescriptorDeserializers();\n        this.annotationDescriptorDeserializer = new AnnotationDescriptorDeserializer();\n        this.descriptorDeserializersStorage = new DescriptorDeserializersStorage(storageManager);\n        this.constantDescriptorDeserializer = new ConstantDescriptorDeserializer();\n\n        this.topDownAnalyzer.setBodyResolver(bodyResolver);\n        this.topDownAnalyzer.setDeclarationResolver(declarationResolver);\n        this.topDownAnalyzer.setModuleDescriptor(moduleDescriptor);\n        this.topDownAnalyzer.setOverloadResolver(overloadResolver);\n        this.topDownAnalyzer.setOverrideResolver(overrideResolver);\n        this.topDownAnalyzer.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        this.topDownAnalyzer.setProject(project);\n        this.topDownAnalyzer.setScriptHeaderResolver(scriptHeaderResolver);\n        this.topDownAnalyzer.setTrace(bindingTrace);\n        this.topDownAnalyzer.setTypeHierarchyResolver(typeHierarchyResolver);\n\n        javaClassFinder.setProject(project);\n\n        traceBasedExternalSignatureResolver.setExternalAnnotationResolver(psiBasedExternalAnnotationResolver);\n        traceBasedExternalSignatureResolver.setTrace(bindingTrace);\n\n        traceBasedJavaResolverCache.setTrace(bindingTrace);\n\n        traceBasedErrorReporter.setTrace(bindingTrace);\n\n        psiBasedMethodSignatureChecker.setExternalAnnotationResolver(psiBasedExternalAnnotationResolver);\n        psiBasedMethodSignatureChecker.setExternalSignatureResolver(traceBasedExternalSignatureResolver);\n\n        bodyResolver.setAnnotationResolver(annotationResolver);\n        bodyResolver.setCallResolver(callResolver);\n        bodyResolver.setControlFlowAnalyzer(controlFlowAnalyzer);\n        bodyResolver.setDeclarationsChecker(declarationsChecker);\n        bodyResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        bodyResolver.setExpressionTypingServices(expressionTypingServices);\n        bodyResolver.setFunctionAnalyzerExtension(functionAnalyzerExtension);\n        bodyResolver.setScriptBodyResolverResolver(scriptBodyResolver);\n        bodyResolver.setTrace(bindingTrace);\n\n        annotationResolver.setCallResolver(callResolver);\n        annotationResolver.setStorageManager(storageManager);\n        annotationResolver.setTypeResolver(typeResolver);\n\n        callResolver.setArgumentTypeResolver(argumentTypeResolver);\n        callResolver.setCandidateResolver(candidateResolver);\n        callResolver.setExpressionTypingServices(expressionTypingServices);\n        callResolver.setTypeResolver(typeResolver);\n\n        argumentTypeResolver.setExpressionTypingServices(expressionTypingServices);\n        argumentTypeResolver.setTypeResolver(typeResolver);\n\n        expressionTypingServices.setAnnotationResolver(annotationResolver);\n        expressionTypingServices.setCallExpressionResolver(callExpressionResolver);\n        expressionTypingServices.setCallResolver(callResolver);\n        expressionTypingServices.setDescriptorResolver(descriptorResolver);\n        expressionTypingServices.setExtensionProvider(callResolverExtensionProvider);\n        expressionTypingServices.setProject(project);\n        expressionTypingServices.setTypeResolver(typeResolver);\n\n        expressionTypingComponents.setCallResolver(callResolver);\n        expressionTypingComponents.setControlStructureTypingUtils(controlStructureTypingUtils);\n        expressionTypingComponents.setExpressionTypingServices(expressionTypingServices);\n        expressionTypingComponents.setExpressionTypingUtils(expressionTypingUtils);\n        expressionTypingComponents.setForLoopConventionsChecker(forLoopConventionsChecker);\n        expressionTypingComponents.setGlobalContext(globalContext);\n        expressionTypingComponents.setPlatformToKotlinClassMap(platformToKotlinClassMap);\n\n        forLoopConventionsChecker.setExpressionTypingServices(expressionTypingServices);\n        forLoopConventionsChecker.setExpressionTypingUtils(expressionTypingUtils);\n        forLoopConventionsChecker.setProject(project);\n\n        callExpressionResolver.setExpressionTypingServices(expressionTypingServices);\n\n        descriptorResolver.setAnnotationResolver(annotationResolver);\n        descriptorResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        descriptorResolver.setExpressionTypingServices(expressionTypingServices);\n        descriptorResolver.setStorageManager(storageManager);\n        descriptorResolver.setTypeResolver(typeResolver);\n\n        delegatedPropertyResolver.setCallResolver(callResolver);\n        delegatedPropertyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        typeResolver.setAnnotationResolver(annotationResolver);\n        typeResolver.setModuleDescriptor(moduleDescriptor);\n        typeResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n\n        candidateResolver.setArgumentTypeResolver(argumentTypeResolver);\n\n        controlFlowAnalyzer.setTrace(bindingTrace);\n\n        declarationsChecker.setDescriptorResolver(descriptorResolver);\n        declarationsChecker.setTrace(bindingTrace);\n\n        functionAnalyzerExtension.setTrace(bindingTrace);\n\n        scriptBodyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        declarationResolver.setAnnotationResolver(annotationResolver);\n        declarationResolver.setDescriptorResolver(descriptorResolver);\n        declarationResolver.setImportsResolver(importsResolver);\n        declarationResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        declarationResolver.setTrace(bindingTrace);\n\n        importsResolver.setImportsFactory(jetImportsFactory);\n        importsResolver.setModuleDescriptor(moduleDescriptor);\n        importsResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n        importsResolver.setTrace(bindingTrace);\n\n        jetImportsFactory.setProject(project);\n\n        scriptHeaderResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        scriptHeaderResolver.setScriptParameterResolver(scriptParameterResolver);\n        scriptHeaderResolver.setTrace(bindingTrace);\n\n        scriptParameterResolver.setDependencyClassByQualifiedNameResolver(javaDescriptorResolver);\n\n        overloadResolver.setTrace(bindingTrace);\n\n        overrideResolver.setTrace(bindingTrace);\n\n        typeHierarchyResolver.setDescriptorResolver(descriptorResolver);\n        typeHierarchyResolver.setImportsResolver(importsResolver);\n        typeHierarchyResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        typeHierarchyResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        typeHierarchyResolver.setTrace(bindingTrace);\n\n        deserializedDescriptorResolver.setDeserializers(descriptorDeserializers);\n        deserializedDescriptorResolver.setErrorReporter(traceBasedErrorReporter);\n        deserializedDescriptorResolver.setJavaDescriptorResolver(javaDescriptorResolver);\n        deserializedDescriptorResolver.setJavaPackageFragmentProvider(lazyJavaPackageFragmentProvider);\n        deserializedDescriptorResolver.setMemberFilter(memberFilter);\n        deserializedDescriptorResolver.setStorageManager(storageManager);\n\n        descriptorDeserializers.setAnnotationDescriptorDeserializer(annotationDescriptorDeserializer);\n        descriptorDeserializers.setConstantDescriptorDeserializer(constantDescriptorDeserializer);\n\n        annotationDescriptorDeserializer.setClassResolver(javaDescriptorResolver);\n        annotationDescriptorDeserializer.setErrorReporter(traceBasedErrorReporter);\n        annotationDescriptorDeserializer.setKotlinClassFinder(virtualFileFinder);\n        annotationDescriptorDeserializer.setStorage(descriptorDeserializersStorage);\n\n        descriptorDeserializersStorage.setClassResolver(javaDescriptorResolver);\n        descriptorDeserializersStorage.setErrorReporter(traceBasedErrorReporter);\n\n        constantDescriptorDeserializer.setClassResolver(javaDescriptorResolver);\n        constantDescriptorDeserializer.setErrorReporter(traceBasedErrorReporter);\n        constantDescriptorDeserializer.setKotlinClassFinder(virtualFileFinder);\n        constantDescriptorDeserializer.setStorage(descriptorDeserializersStorage);\n\n        javaClassFinder.initialize();\n\n    }","commit_id":"76e286aacc107236499a536c20b3dce4318dc432","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void resolveScriptDeclarations(@NotNull TopDownAnalysisContext c) {\n        for (Map.Entry<JetScript, ScriptDescriptor> e : c.getScripts().entrySet()) {\n            JetScript declaration = e.getKey();\n            ScriptDescriptorImpl descriptor = (ScriptDescriptorImpl) e.getValue();\n\n            List<ValueParameterDescriptor> valueParameters = resolveScriptParameters(c, declaration, descriptor);\n\n            descriptor.setValueParameters(valueParameters);\n\n            WritableScope scope = descriptor.getScopeForBodyResolution();\n            scope.setImplicitReceiver(descriptor.getThisAsReceiverParameter());\n            for (ValueParameterDescriptor valueParameterDescriptor : valueParameters) {\n                scope.addVariableDescriptor(valueParameterDescriptor);\n            }\n        }\n    }","id":63377,"modified_method":"public void resolveScriptDeclarations(@NotNull TopDownAnalysisContext c) {\n        for (Map.Entry<JetScript, ScriptDescriptor> e : c.getScripts().entrySet()) {\n            JetScript declaration = e.getKey();\n            ScriptDescriptorImpl descriptor = (ScriptDescriptorImpl) e.getValue();\n\n            List<ValueParameterDescriptor> valueParameters = scriptParameterResolver.resolveScriptParameters(c, declaration, descriptor);\n\n            descriptor.setValueParameters(valueParameters);\n\n            WritableScope scope = descriptor.getScopeForBodyResolution();\n            scope.setImplicitReceiver(descriptor.getThisAsReceiverParameter());\n            for (ValueParameterDescriptor valueParameterDescriptor : valueParameters) {\n                scope.addVariableDescriptor(valueParameterDescriptor);\n            }\n        }\n    }","commit_id":"76e286aacc107236499a536c20b3dce4318dc432","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    private ValueParameterDescriptor resolveScriptParameter(\n            @NotNull AnalyzerScriptParameter scriptParameter,\n            int index,\n            @NotNull ScriptDescriptor script) {\n        JetType type = resolveTypeName(scriptParameter.getType());\n        return new ValueParameterDescriptorImpl(script, null, index, Annotations.EMPTY, scriptParameter.getName(), type, false, null);\n    }","id":63378,"modified_method":"@Inject\n    public void setScriptParameterResolver(@NotNull ScriptParameterResolver scriptParameterResolver) {\n        this.scriptParameterResolver = scriptParameterResolver;\n    }","commit_id":"76e286aacc107236499a536c20b3dce4318dc432","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void destroy() throws CometException {\n\t\t_cometState = CometState.STATE_CLOSED;\n\n\t\t_cometSession.close();\n\n\t\ttry {\n\t\t\tdoDestroy();\n\t\t}\n\t\tcatch (CometException ce) {\n\t\t\tthrow ce;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new CometException(e);\n\t\t}\n\t}","id":63379,"modified_method":"public void destroy() throws CometException {\n\t\t_cometState = CometState.STATE_CLOSED;\n\n\t\ttry {\n\t\t\tdoDestroy();\n\n\t\t\t_cometSession.close();\n\t\t}\n\t\tcatch (CometException ce) {\n\t\t\tthrow ce;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new CometException(e);\n\t\t}\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void close() throws PollerException {\n\t\ttry {\n\t\t\t_cometSession.close();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PollerException(e);\n\t\t}\n\t}","id":63380,"modified_method":"@Override\n\tprotected void doClose() throws PollerException {\n\t\ttry {\n\t\t\tCometResponse cometResponse = _cometSession.getCometResponse();\n\n\t\t\tcometResponse.writeData(getJSONArray().toString());\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PollerException(e);\n\t\t}\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setParameter(String name, String value) {\n\t\t_parameterMap.put(name, value);\n\t}","id":63381,"modified_method":"public void setParameter(String name, String value)\n\t\tthrows PollerResponseClosedException {\n\t\t\n\t\tsynchronized (this) {\n\t\t\tif (_responseMessage == null) {\n\t\t\t\tthrow new PollerResponseClosedException();\n\t\t\t}\n\n\t\t\t_parameterMap.put(name, value);\n\t\t}\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setParameter(String name, JSONObject value) {\n\t\t_parameterMap.put(name, value);\n\t}","id":63382,"modified_method":"public void setParameter(String name, JSONObject value)\n\t\tthrows PollerResponseClosedException {\n\n\t\tsynchronized (this) {\n\t\t\tif (_responseMessage == null) {\n\t\t\t\tthrow new PollerResponseClosedException();\n\t\t\t}\n\n\t\t\t_parameterMap.put(name, value);\n\t\t}\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setParameter(String name, JSONArray value) {\n\t\t_parameterMap.put(name, value);\n\t}","id":63383,"modified_method":"public void setParameter(String name, JSONArray value)\n\t\tthrows PollerResponseClosedException {\n\n\t\tsynchronized (this) {\n\t\t\tif (_responseMessage == null) {\n\t\t\t\tthrow new PollerResponseClosedException();\n\t\t\t}\n\n\t\t\t_parameterMap.put(name, value);\n\t\t}\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void write(PollerResponse pollerResponse) {\n\t\t_jsonArray.put(pollerResponse.toJSONObject());\n\t}","id":63384,"modified_method":"public void write(PollerResponse pollerResponse) throws PollerException {\n\t\tif (!_closed) {\n\t\t\t_jsonArray.put(pollerResponse.toJSONObject());\n\t\t}\n\t\telse {\n\t\t\tthrow new PollerWriterClosedException();\n\t\t}\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void write(String string) {\n\t\t_jsonArray.put(string);\n\t}","id":63385,"modified_method":"public void write(String string) throws PollerException {\n\t\tif (!_closed) {\n\t\t\t_jsonArray.put(string);\n\t\t}\n\t\telse {\n\t\t\tthrow new PollerWriterClosedException();\n\t\t}\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void close() {\n\t}","id":63386,"modified_method":"public void close() throws PollerException {\n\t\tsynchronized (this) {\n\t\t\tif (!_closed) {\n\t\t\t\ttry {\n\t\t\t\t\tdoClose();\n\t\t\t\t}\n\t\t\t\tfinally {\n\t\t\t\t\t_closed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void write(JSONArray jsonArray) {\n\t\t_jsonArray.put(jsonArray);\n\t}","id":63387,"modified_method":"public void write(JSONArray jsonArray) throws PollerException {\n\t\tif (!_closed) {\n\t\t\t_jsonArray.put(jsonArray);\n\t\t}\n\t\telse {\n\t\t\tthrow new PollerWriterClosedException();\n\t\t}\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void write(JSONObject jsonObject) {\n\t\t_jsonArray.put(jsonObject);\n\t}","id":63388,"modified_method":"public void write(JSONObject jsonObject) throws PollerException {\n\t\tif (!_closed) {\n\t\t\t_jsonArray.put(jsonObject);\n\t\t}\n\t\telse {\n\t\t\tthrow new PollerWriterClosedException();\n\t\t}\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doInit(CometSession cometSession) throws Exception {\n\t\tCometRequest cometRequest = cometSession.getCometRequest();\n\n\t\tString pollerRequestString = cometRequest.getParameter(\"pollerRequest\");\n\n\t\tPollerResponseWriter pollerResponseWriter =\n\t\t\tnew CometPollerResponseWriter(cometSession);\n\n\t\tPollerRequestHandler pollerRequestHandler = new PollerRequestHandler(\n\t\t\tcometRequest.getPathInfo(), pollerRequestString,\n\t\t\tpollerResponseWriter);\n\n\t\tpollerRequestHandler.processRequest();\n\t}","id":63389,"modified_method":"protected void doInit(CometSession cometSession) throws Exception {\n\t\tCometRequest cometRequest = cometSession.getCometRequest();\n\n\t\tString pollerRequestString = cometRequest.getParameter(\"pollerRequest\");\n\n\t\tPollerResponseWriter pollerResponseWriter =\n\t\t\tnew CometPollerResponseWriter(cometSession);\n\n\t\t_pollerRequestHandler = new PollerRequestHandler(\n\t\t\tcometRequest.getPathInfo(), pollerRequestString,\n\t\t\tpollerResponseWriter,\n\t\t\tnew ArrayList<PollerRequestHandlerListener>(0));\n\n\t\t_pollerRequestHandler.processRequest();\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doReceive(Message message) throws Exception {\n\t\tPollerResponse pollerResponse = null;\n\n\t\ttry {\n\t\t\tPollerRequest pollerRequest = (PollerRequest)message.getPayload();\n\n\t\t\tString portletId = pollerRequest.getPortletId();\n\n\t\t\tPollerProcessor pollerProcessor =\n\t\t\t\tPollerProcessorUtil.getPollerProcessor(portletId);\n\n\t\t\tif (pollerRequest.isReceiveRequest()) {\n\t\t\t\tpollerResponse = new DefaultPollerResponse(\n\t\t\t\t\tportletId, pollerRequest.getChunkId());\n\n\t\t\t\ttry {\n\t\t\t\t\tpollerProcessor.receive(pollerRequest, pollerResponse);\n\t\t\t\t}\n\t\t\t\tcatch (PollerException pe) {\n\t\t\t\t\t_log.error(\n\t\t\t\t\t\t\"Unable to receive poller request \" + pollerRequest,\n\t\t\t\t\t\tpe);\n\n\t\t\t\t\tpollerResponse.setParameter(\n\t\t\t\t\t\t\"pollerException\", pe.getMessage());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttry {\n\t\t\t\t\tpollerProcessor.send(pollerRequest);\n\t\t\t\t}\n\t\t\t\tcatch (PollerException pe) {\n\t\t\t\t\t_log.error(\n\t\t\t\t\t\t\"Unable to send poller request \" + pollerRequest,\n\t\t\t\t\t\tpe);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tString responseDestinationName =\n\t\t\t\tmessage.getResponseDestinationName();\n\n\t\t\tif (Validator.isNotNull(responseDestinationName)) {\n\t\t\t\tMessage responseMessage = MessageBusUtil.createResponseMessage(\n\t\t\t\t\tmessage);\n\n\t\t\t\tresponseMessage.setPayload(pollerResponse);\n\n\t\t\t\tMessageBusUtil.sendMessage(\n\t\t\t\t\tresponseDestinationName, responseMessage);\n\t\t\t}\n\t\t}\n\t}","id":63390,"modified_method":"protected void doReceive(Message message) throws Exception {\n\t\tRequestResponsePair requestResponsePair =\n\t\t\t(RequestResponsePair)message.getPayload();\n\n\t\tPollerRequest pollerRequest = requestResponsePair.getPollerRequest();\n\n\t\tPollerResponse pollerResponse = requestResponsePair.getPollerResponse();\n\n\t\tString portletId = pollerRequest.getPortletId();\n\n\t\tPollerProcessor pollerProcessor =\n\t\t\tPollerProcessorUtil.getPollerProcessor(portletId);\n\n\t\tif (pollerRequest.isReceiveRequest()) {\n\t\t\tString responseDestinationName =\n\t\t\t\tmessage.getResponseDestinationName();\n\n\t\t\tif (Validator.isNotNull(responseDestinationName) &&\n\t\t\t\tValidator.isNotNull(pollerResponse)) {\n\n\t\t\t\tMessage responseMessage = MessageBusUtil.createResponseMessage(\n\t\t\t\t\tmessage);\n\n\t\t\t\tresponseMessage.setPayload(pollerResponse);\n\n\t\t\t\tpollerResponse.setResponseMessage(responseMessage);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tpollerProcessor.receive(pollerRequest, pollerResponse);\n\t\t\t}\n\t\t\tcatch (PollerException pe) {\n\t\t\t\t_log.error(\n\t\t\t\t\t\"Unable to receive poller request \" + pollerRequest,\n\t\t\t\t\tpe);\n\n\t\t\t\tpollerResponse.setParameter(\n\t\t\t\t\t\"pollerException\", pe.getMessage());\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\ttry {\n\t\t\t\tpollerProcessor.send(pollerRequest);\n\t\t\t}\n\t\t\tcatch (PollerException pe) {\n\t\t\t\t_log.error(\n\t\t\t\t\t\"Unable to send poller request \" + pollerRequest,\n\t\t\t\t\tpe);\n\t\t\t}\n\t\t}\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void clearRequests() {\n\t\t_pollerRequests.clear();\n\t\t_responseIds.clear();\n\t\t_responseCount = 0;\n\t}","id":63391,"modified_method":"protected void clearRequests() {\n\t\t_requestResponsePairs.clear();\n\t\t_responseIds.clear();\n\t\t_responseCount = 0;\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void addPollerRequest(\n\t\t\tSet<String> portletIdsWithChunks, PollerHeader pollerHeader,\n\t\t\tString portletId, Map<String, String> parameterMap, String chunkId,\n\t\t\tboolean receiveRequest)\n\t\tthrows Exception {\n\n\t\tPollerProcessor pollerProcessor =\n\t\t\tPollerProcessorUtil.getPollerProcessor(portletId);\n\n\t\tif (pollerProcessor == null) {\n\t\t\t_log.error(\"Poller processor not found for portlet \" + portletId);\n\n\t\t\treturn;\n\t\t}\n\n\t\tPollerRequest pollerRequest = new PollerRequest(\n\t\t\tpollerHeader, portletId, parameterMap, chunkId, receiveRequest);\n\n\t\tif (receiveRequest) {\n\t\t\tportletIdsWithChunks.add(portletId);\n\t\t}\n\n\t\t_pollerRequests.put(pollerRequest.getPortletId(), pollerRequest);\n\t}","id":63392,"modified_method":"protected void addPollerRequest(\n\t\t\tSet<String> portletIdsWithChunks, PollerHeader pollerHeader,\n\t\t\tString portletId, Map<String, String> parameterMap, String chunkId)\n\t\tthrows Exception {\n\n\t\tPollerProcessor pollerProcessor =\n\t\t\tPollerProcessorUtil.getPollerProcessor(portletId);\n\n\t\tif (pollerProcessor == null) {\n\t\t\t_log.error(\"Poller processor not found for portlet \" + portletId);\n\n\t\t\treturn;\n\t\t}\n\n\t\tPollerRequest pollerRequest = new PollerRequest(\n\t\t\tpollerHeader, portletId, parameterMap, chunkId, _receiveRequest);\n\n\t\tif (_receiveRequest) {\n\t\t\tportletIdsWithChunks.add(portletId);\n\t\t}\n\n\t\tRequestResponsePair requestResponsePair = new RequestResponsePair(\n\t\t\tpollerRequest);\n\n\t\t_requestResponsePairs.put(\n\t\t\tpollerRequest.getPortletId(), requestResponsePair);\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PollerRequestHandler(\n\t\tString path, String pollerRequestString,\n\t\tPollerResponseWriter pollerResponseWriter) {\n\n\t\t_path = path;\n\t\t_pollerRequestString = fixPollerRequestString(pollerRequestString);\n\t\t_pollerResponseWriter = pollerResponseWriter;\n\t}","id":63393,"modified_method":"public PollerRequestHandler(\n\t\tString path, String pollerRequestString,\n\t\tPollerResponseWriter pollerResponseWriter,\n\t\tList<PollerRequestHandlerListener> listeners) {\n\n\t\t_listeners = listeners;\n\t\t_path = path;\n\t\t_pollerRequestString = fixPollerRequestString(pollerRequestString);\n\t\t_pollerResponseWriter = pollerResponseWriter;\n\t\t_receiveRequest = isReceiveRequest(_path);\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public boolean processRequest() throws Exception {\n\t\tif (Validator.isNull(_pollerRequestString)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tMap<String, Object>[] pollerRequestChunks =\n\t\t\t(Map<String, Object>[])JSONFactoryUtil.deserialize(\n\t\t\t\t_pollerRequestString);\n\n\t\tPollerHeader pollerHeader = getPollerHeader(pollerRequestChunks);\n\n\t\tif (pollerHeader == null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tboolean receiveRequest = isReceiveRequest(_path);\n\n\t\tSet<String> portletIdsWithChunks = null;\n\n\t\tif (receiveRequest) {\n\t\t\tportletIdsWithChunks = new HashSet<String>();\n\n\t\t\tboolean suspendPolling = false;\n\n\t\t\tif (pollerHeader.isStartPolling()) {\n\t\t\t\tBrowserTrackerLocalServiceUtil.updateBrowserTracker(\n\t\t\t\t\tpollerHeader.getUserId(), pollerHeader.getBrowserKey());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tBrowserTracker browserTracker =\n\t\t\t\t\tBrowserTrackerLocalServiceUtil.getBrowserTracker(\n\t\t\t\t\t\tpollerHeader.getUserId(), pollerHeader.getBrowserKey());\n\n\t\t\t\tif (browserTracker.getBrowserKey() !=\n\t\t\t\t\t\tpollerHeader.getBrowserKey()) {\n\n\t\t\t\t\tsuspendPolling = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tJSONObject pollerResponseChunkJSONObject =\n\t\t\t\tJSONFactoryUtil.createJSONObject();\n\n\t\t\tpollerResponseChunkJSONObject.put(\n\t\t\t\t\"userId\", pollerHeader.getUserId());\n\t\t\tpollerResponseChunkJSONObject.put(\n\t\t\t\t\"initialRequest\", pollerHeader.isInitialRequest());\n\t\t\tpollerResponseChunkJSONObject.put(\"suspendPolling\", suspendPolling);\n\n\t\t\t_pollerResponseWriter.write(pollerResponseChunkJSONObject);\n\t\t}\n\n\t\tfor (int i = 1; i < pollerRequestChunks.length; i++) {\n\t\t\tMap<String, Object> pollerRequestChunk = pollerRequestChunks[i];\n\n\t\t\tString portletId = (String)pollerRequestChunk.get(\"portletId\");\n\t\t\tMap<String, String> parameterMap = getData(pollerRequestChunk);\n\t\t\tString chunkId = (String)pollerRequestChunk.get(\"chunkId\");\n\n\t\t\ttry {\n\t\t\t\taddPollerRequest(\n\t\t\t\t\tportletIdsWithChunks, pollerHeader, portletId, parameterMap,\n\t\t\t\t\tchunkId, receiveRequest);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tprocessRequests(receiveRequest);\n\n\t\tif (!receiveRequest) {\n\t\t\treturn true;\n\t\t}\n\n\t\tclearRequests();\n\n\t\tfor (String portletId : pollerHeader.getPortletIds()) {\n\t\t\tif (portletIdsWithChunks.contains(portletId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\taddPollerRequest(\n\t\t\t\t\tportletIdsWithChunks, pollerHeader, portletId,\n\t\t\t\t\tnew HashMap<String, String>(), null, receiveRequest);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tprocessRequests(receiveRequest);\n\n\t\tif (!receiveRequest) {\n\t\t\t_pollerResponseWriter.close();\n\t\t}\n\n\t\treturn true;\n\t}","id":63394,"modified_method":"public boolean processRequest() throws Exception {\n\t\tif (Validator.isNull(_pollerRequestString)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tMap<String, Object>[] pollerRequestChunks =\n\t\t\t(Map<String, Object>[])JSONFactoryUtil.deserialize(\n\t\t\t\t_pollerRequestString);\n\n\t\tPollerHeader pollerHeader = getPollerHeader(pollerRequestChunks);\n\n\t\tif (pollerHeader == null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tSet<String> portletIdsWithChunks = null;\n\n\t\tif (_receiveRequest) {\n\t\t\tportletIdsWithChunks = new HashSet<String>();\n\n\t\t\tboolean suspendPolling = false;\n\n\t\t\tif (pollerHeader.isStartPolling()) {\n\t\t\t\tBrowserTrackerLocalServiceUtil.updateBrowserTracker(\n\t\t\t\t\tpollerHeader.getUserId(), pollerHeader.getBrowserKey());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tBrowserTracker browserTracker =\n\t\t\t\t\tBrowserTrackerLocalServiceUtil.getBrowserTracker(\n\t\t\t\t\t\tpollerHeader.getUserId(), pollerHeader.getBrowserKey());\n\n\t\t\t\tif (browserTracker.getBrowserKey() !=\n\t\t\t\t\t\tpollerHeader.getBrowserKey()) {\n\n\t\t\t\t\tsuspendPolling = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tJSONObject pollerResponseChunkJSONObject =\n\t\t\t\tJSONFactoryUtil.createJSONObject();\n\n\t\t\tpollerResponseChunkJSONObject.put(\n\t\t\t\t\"userId\", pollerHeader.getUserId());\n\t\t\tpollerResponseChunkJSONObject.put(\n\t\t\t\t\"initialRequest\", pollerHeader.isInitialRequest());\n\t\t\tpollerResponseChunkJSONObject.put(\"suspendPolling\", suspendPolling);\n\n\t\t\t_pollerResponseWriter.write(pollerResponseChunkJSONObject);\n\t\t}\n\n\t\tfor (int i = 1; i < pollerRequestChunks.length; i++) {\n\t\t\tMap<String, Object> pollerRequestChunk = pollerRequestChunks[i];\n\n\t\t\tString portletId = (String)pollerRequestChunk.get(\"portletId\");\n\t\t\tMap<String, String> parameterMap = getData(pollerRequestChunk);\n\t\t\tString chunkId = (String)pollerRequestChunk.get(\"chunkId\");\n\n\t\t\ttry {\n\t\t\t\taddPollerRequest(\n\t\t\t\t\tportletIdsWithChunks, pollerHeader, portletId, parameterMap,\n\t\t\t\t\tchunkId);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tprocessRequests();\n\n\t\tif (!_receiveRequest) {\n\t\t\treturn true;\n\t\t}\n\n\t\tclearRequests();\n\n\t\tfor (String portletId : pollerHeader.getPortletIds()) {\n\t\t\tif (portletIdsWithChunks.contains(portletId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\taddPollerRequest(\n\t\t\t\t\tportletIdsWithChunks, pollerHeader, portletId,\n\t\t\t\t\tnew HashMap<String, String>(), null);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tprocessRequests();\n\n\t\tif (!_receiveRequest) {\n\t\t\tshutdown();\n\t\t}\n\n\t\treturn true;\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void processRequests(boolean receiveRequest) {\n\t\tif (receiveRequest) {\n\t\t\tMessageBusUtil.registerMessageListener(\n\t\t\t\tDestinationNames.POLLER_RESPONSE, this);\n\t\t}\n\n\t\ttry {\n\t\t\tfor (PollerRequest pollerRequest : _pollerRequests.values()) {\n\t\t\t\tMessage message = new Message();\n\n\t\t\t\tmessage.setPayload(pollerRequest);\n\t\t\t\tmessage.setResponseDestinationName(\n\t\t\t\t\tDestinationNames.POLLER_RESPONSE);\n\n\t\t\t\tString responseId = PortalUUIDUtil.generate();\n\n\t\t\t\tmessage.setResponseId(responseId);\n\n\t\t\t\t_responseIds.put(responseId, responseId);\n\n\t\t\t\tMessageBusUtil.sendMessage(DestinationNames.POLLER, message);\n\t\t\t}\n\n\t\t\tsynchronized (this) {\n\t\t\t\tif (_responseCount != _pollerRequests.size()) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.wait(PropsValues.POLLER_REQUEST_TIMEOUT);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (InterruptedException ie) {\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tif (receiveRequest) {\n\t\t\t\tMessageBusUtil.unregisterMessageListener(\n\t\t\t\t\tDestinationNames.POLLER_RESPONSE, this);\n\t\t\t}\n\t\t}\n\t}","id":63395,"modified_method":"protected void processRequests() {\n\t\tif (_receiveRequest) {\n\t\t\tMessageBusUtil.registerMessageListener(\n\t\t\t\tDestinationNames.POLLER_RESPONSE, this);\n\t\t}\n\n\t\tfor (RequestResponsePair requestResponsePair :\n\t\t\t_requestResponsePairs.values()) {\n\n\t\t\tPollerRequest pollerRequest =\n\t\t\t\trequestResponsePair.getPollerRequest();\n\n\t\t\tif (_receiveRequest) {\n\t\t\t\tPollerResponse pollerResponse = new DefaultPollerResponse(\n\t\t\t\t\tpollerRequest.getPortletId(), pollerRequest.getChunkId());\n\n\t\t\t\trequestResponsePair.setPollerResponse(pollerResponse);\n\t\t\t}\n\n\t\t\tMessage message = new Message();\n\n\t\t\tmessage.setPayload(requestResponsePair);\n\n\t\t\tif (_receiveRequest) {\n\t\t\t\tmessage.setResponseDestinationName(\n\t\t\t\t\tDestinationNames.POLLER_RESPONSE);\n\t\t\t}\n\n\t\t\tString responseId = PortalUUIDUtil.generate();\n\n\t\t\tmessage.setResponseId(responseId);\n\n\t\t\t_responseIds.put(responseId, responseId);\n\n\t\t\tMessageBusUtil.sendMessage(DestinationNames.POLLER, message);\n\t\t}\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void receive(Message message) {\n\t\tif (!_responseIds.containsKey(message.getResponseId())) {\n\t\t\treturn;\n\t\t}\n\n\t\tPollerResponse pollerResponse = (PollerResponse)message.getPayload();\n\n\t\tif (pollerResponse != null) {\n\t\t\ttry {\n\t\t\t\t_pollerResponseWriter.write(pollerResponse);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tsynchronized (this) {\n\t\t\t_responseCount++;\n\n\t\t\tif (_responseCount == _pollerRequests.size()) {\n\t\t\t\ttry {\n\t\t\t\t\t_pollerResponseWriter.close();\n\t\t\t\t}\n\t\t\t\tcatch (PollerException pe) {\n\t\t\t\t\t_log.error(pe, pe);\n\t\t\t\t}\n\n\t\t\t\tnotify();\n\t\t\t}\n\t\t}\n\t}","id":63396,"modified_method":"public void receive(Message message) {\n\t\tif (!_responseIds.containsKey(message.getResponseId())) {\n\t\t\treturn;\n\t\t}\n\n\t\tPollerResponse pollerResponse = (PollerResponse)message.getPayload();\n\n\t\tif (pollerResponse != null) {\n\t\t\ttry {\n\t\t\t\t_pollerResponseWriter.write(pollerResponse);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tsynchronized (this) {\n\t\t\t_responseCount++;\n\n\t\t\tif (_responseCount == _requestResponsePairs.size()) {\n\t\t\t\ttry {\n\t\t\t\t\tshutdown();\n\t\t\t\t}\n\t\t\t\tcatch (PollerException pe) {\n\t\t\t\t\t_log.error(pe, pe);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getContent(HttpServletRequest request) throws Exception {\n\t\tString pollerRequestString = ParamUtil.getString(\n\t\t\trequest, \"pollerRequest\");\n\n\t\tPollerResponseWriter pollerResponseWriter =\n\t\t\tnew JSONPollerResponseWriter();\n\n\t\tPollerRequestHandler pollerRequestHandler = new PollerRequestHandler(\n\t\t\trequest.getPathInfo(), pollerRequestString, pollerResponseWriter);\n\n\t\tif (!pollerRequestHandler.processRequest()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tJSONArray jsonArray = pollerResponseWriter.getJSONArray();\n\n\t\treturn jsonArray.toString();\n\t}","id":63397,"modified_method":"protected String getContent(HttpServletRequest request) throws Exception {\n\t\tString pollerRequestString = ParamUtil.getString(\n\t\t\trequest, \"pollerRequest\");\n\n\t\tPollerResponseWriter pollerResponseWriter =\n\t\t\tnew JSONPollerResponseWriter();\n\n\t\tSynchronousPollerRequestHandlerListener synchronousPollerRequestListener =\n\t\t\tnew SynchronousPollerRequestHandlerListener();\n\n\t\tList<PollerRequestHandlerListener> listeners =\n\t\t\tnew ArrayList<PollerRequestHandlerListener>(1);\n\n\t\tlisteners.add(synchronousPollerRequestListener);\n\n\t\tPollerRequestHandler pollerRequestHandler = new PollerRequestHandler(\n\t\t\trequest.getPathInfo(), pollerRequestString, pollerResponseWriter,\n\t\t\tlisteners);\n\n\t\tif (!pollerRequestHandler.processRequest()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tsynchronousPollerRequestListener.waitNotification(\n\t\t\tPropsValues.POLLER_REQUEST_TIMEOUT);\n\n\t\tpollerRequestHandler.shutdown();\n\n\t\tJSONArray jsonArray = pollerResponseWriter.getJSONArray();\n\n\t\treturn jsonArray.toString();\n\t}","commit_id":"d3233ae0f1c43788f9e5f590b5254f8b6844f8cd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void destroy() throws CometException {\n\t\t_cometState = CometState.STATE_CLOSED;\n\n\t\ttry {\n\t\t\tdoDestroy();\n\n\t\t\t_cometSession.close();\n\t\t}\n\t\tcatch (CometException ce) {\n\t\t\tthrow ce;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new CometException(e);\n\t\t}\n\t}","id":63398,"modified_method":"public void destroy() throws CometException {\n\t\t_cometState = CometState.STATE_CLOSED;\n\n\t\t_cometSession.close();\n\n\t\ttry {\n\t\t\tdoDestroy();\n\t\t}\n\t\tcatch (CometException ce) {\n\t\t\tthrow ce;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new CometException(e);\n\t\t}\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doClose() throws PollerException {\n\t\ttry {\n\t\t\tCometResponse cometResponse = _cometSession.getCometResponse();\n\n\t\t\tcometResponse.writeData(getJSONArray().toString());\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PollerException(e);\n\t\t}\n\t}","id":63399,"modified_method":"public void close() throws PollerException {\n\t\ttry {\n\t\t\t_cometSession.close();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PollerException(e);\n\t\t}\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setParameter(String name, JSONArray value)\n\t\tthrows PollerResponseClosedException {\n\n\t\tsynchronized (this) {\n\t\t\tif (_responseMessage == null) {\n\t\t\t\tthrow new PollerResponseClosedException();\n\t\t\t}\n\n\t\t\t_parameterMap.put(name, value);\n\t\t}\n\t}","id":63400,"modified_method":"public void setParameter(String name, JSONArray value) {\n\t\t_parameterMap.put(name, value);\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setParameter(String name, JSONObject value)\n\t\tthrows PollerResponseClosedException {\n\n\t\tsynchronized (this) {\n\t\t\tif (_responseMessage == null) {\n\t\t\t\tthrow new PollerResponseClosedException();\n\t\t\t}\n\n\t\t\t_parameterMap.put(name, value);\n\t\t}\n\t}","id":63401,"modified_method":"public void setParameter(String name, JSONObject value) {\n\t\t_parameterMap.put(name, value);\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setParameter(String name, String value)\n\t\tthrows PollerResponseClosedException {\n\t\t\n\t\tsynchronized (this) {\n\t\t\tif (_responseMessage == null) {\n\t\t\t\tthrow new PollerResponseClosedException();\n\t\t\t}\n\n\t\t\t_parameterMap.put(name, value);\n\t\t}\n\t}","id":63402,"modified_method":"public void setParameter(String name, String value) {\n\t\t_parameterMap.put(name, value);\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void close() throws PollerException {\n\t\tsynchronized (this) {\n\t\t\tif (!_closed) {\n\t\t\t\ttry {\n\t\t\t\t\tdoClose();\n\t\t\t\t}\n\t\t\t\tfinally {\n\t\t\t\t\t_closed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":63403,"modified_method":"public void close() {\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void write(String string) throws PollerException {\n\t\tif (!_closed) {\n\t\t\t_jsonArray.put(string);\n\t\t}\n\t\telse {\n\t\t\tthrow new PollerWriterClosedException();\n\t\t}\n\t}","id":63404,"modified_method":"public void write(String string) {\n\t\t_jsonArray.put(string);\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void write(JSONArray jsonArray) throws PollerException {\n\t\tif (!_closed) {\n\t\t\t_jsonArray.put(jsonArray);\n\t\t}\n\t\telse {\n\t\t\tthrow new PollerWriterClosedException();\n\t\t}\n\t}","id":63405,"modified_method":"public void write(JSONArray jsonArray) {\n\t\t_jsonArray.put(jsonArray);\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void write(JSONObject jsonObject) throws PollerException {\n\t\tif (!_closed) {\n\t\t\t_jsonArray.put(jsonObject);\n\t\t}\n\t\telse {\n\t\t\tthrow new PollerWriterClosedException();\n\t\t}\n\t}","id":63406,"modified_method":"public void write(JSONObject jsonObject) {\n\t\t_jsonArray.put(jsonObject);\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void write(PollerResponse pollerResponse) throws PollerException {\n\t\tif (!_closed) {\n\t\t\t_jsonArray.put(pollerResponse.toJSONObject());\n\t\t}\n\t\telse {\n\t\t\tthrow new PollerWriterClosedException();\n\t\t}\n\t}","id":63407,"modified_method":"public void write(PollerResponse pollerResponse) {\n\t\t_jsonArray.put(pollerResponse.toJSONObject());\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doInit(CometSession cometSession) throws Exception {\n\t\tCometRequest cometRequest = cometSession.getCometRequest();\n\n\t\tString pollerRequestString = cometRequest.getParameter(\"pollerRequest\");\n\n\t\tPollerResponseWriter pollerResponseWriter =\n\t\t\tnew CometPollerResponseWriter(cometSession);\n\n\t\t_pollerRequestHandler = new PollerRequestHandler(\n\t\t\tcometRequest.getPathInfo(), pollerRequestString,\n\t\t\tpollerResponseWriter,\n\t\t\tnew ArrayList<PollerRequestHandlerListener>(0));\n\n\t\t_pollerRequestHandler.processRequest();\n\t}","id":63408,"modified_method":"protected void doInit(CometSession cometSession) throws Exception {\n\t\tCometRequest cometRequest = cometSession.getCometRequest();\n\n\t\tString pollerRequestString = cometRequest.getParameter(\"pollerRequest\");\n\n\t\tPollerResponseWriter pollerResponseWriter =\n\t\t\tnew CometPollerResponseWriter(cometSession);\n\n\t\tPollerRequestHandler pollerRequestHandler = new PollerRequestHandler(\n\t\t\tcometRequest.getPathInfo(), pollerRequestString,\n\t\t\tpollerResponseWriter);\n\n\t\tpollerRequestHandler.processRequest();\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doReceive(Message message) throws Exception {\n\t\tRequestResponsePair requestResponsePair =\n\t\t\t(RequestResponsePair)message.getPayload();\n\n\t\tPollerRequest pollerRequest = requestResponsePair.getPollerRequest();\n\n\t\tPollerResponse pollerResponse = requestResponsePair.getPollerResponse();\n\n\t\tString portletId = pollerRequest.getPortletId();\n\n\t\tPollerProcessor pollerProcessor =\n\t\t\tPollerProcessorUtil.getPollerProcessor(portletId);\n\n\t\tif (pollerRequest.isReceiveRequest()) {\n\t\t\tString responseDestinationName =\n\t\t\t\tmessage.getResponseDestinationName();\n\n\t\t\tif (Validator.isNotNull(responseDestinationName) &&\n\t\t\t\tValidator.isNotNull(pollerResponse)) {\n\n\t\t\t\tMessage responseMessage = MessageBusUtil.createResponseMessage(\n\t\t\t\t\tmessage);\n\n\t\t\t\tresponseMessage.setPayload(pollerResponse);\n\n\t\t\t\tpollerResponse.setResponseMessage(responseMessage);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tpollerProcessor.receive(pollerRequest, pollerResponse);\n\t\t\t}\n\t\t\tcatch (PollerException pe) {\n\t\t\t\t_log.error(\n\t\t\t\t\t\"Unable to receive poller request \" + pollerRequest,\n\t\t\t\t\tpe);\n\n\t\t\t\tpollerResponse.setParameter(\n\t\t\t\t\t\"pollerException\", pe.getMessage());\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\ttry {\n\t\t\t\tpollerProcessor.send(pollerRequest);\n\t\t\t}\n\t\t\tcatch (PollerException pe) {\n\t\t\t\t_log.error(\n\t\t\t\t\t\"Unable to send poller request \" + pollerRequest,\n\t\t\t\t\tpe);\n\t\t\t}\n\t\t}\n\t}","id":63409,"modified_method":"protected void doReceive(Message message) throws Exception {\n\t\tPollerResponse pollerResponse = null;\n\n\t\ttry {\n\t\t\tPollerRequest pollerRequest = (PollerRequest)message.getPayload();\n\n\t\t\tString portletId = pollerRequest.getPortletId();\n\n\t\t\tPollerProcessor pollerProcessor =\n\t\t\t\tPollerProcessorUtil.getPollerProcessor(portletId);\n\n\t\t\tif (pollerRequest.isReceiveRequest()) {\n\t\t\t\tpollerResponse = new DefaultPollerResponse(\n\t\t\t\t\tportletId, pollerRequest.getChunkId());\n\n\t\t\t\ttry {\n\t\t\t\t\tpollerProcessor.receive(pollerRequest, pollerResponse);\n\t\t\t\t}\n\t\t\t\tcatch (PollerException pe) {\n\t\t\t\t\t_log.error(\n\t\t\t\t\t\t\"Unable to receive poller request \" + pollerRequest,\n\t\t\t\t\t\tpe);\n\n\t\t\t\t\tpollerResponse.setParameter(\n\t\t\t\t\t\t\"pollerException\", pe.getMessage());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttry {\n\t\t\t\t\tpollerProcessor.send(pollerRequest);\n\t\t\t\t}\n\t\t\t\tcatch (PollerException pe) {\n\t\t\t\t\t_log.error(\n\t\t\t\t\t\t\"Unable to send poller request \" + pollerRequest,\n\t\t\t\t\t\tpe);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tString responseDestinationName =\n\t\t\t\tmessage.getResponseDestinationName();\n\n\t\t\tif (Validator.isNotNull(responseDestinationName)) {\n\t\t\t\tMessage responseMessage = MessageBusUtil.createResponseMessage(\n\t\t\t\t\tmessage);\n\n\t\t\t\tresponseMessage.setPayload(pollerResponse);\n\n\t\t\t\tMessageBusUtil.sendMessage(\n\t\t\t\t\tresponseDestinationName, responseMessage);\n\t\t\t}\n\t\t}\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PollerRequestHandler(\n\t\tString path, String pollerRequestString,\n\t\tPollerResponseWriter pollerResponseWriter,\n\t\tList<PollerRequestHandlerListener> listeners) {\n\n\t\t_listeners = listeners;\n\t\t_path = path;\n\t\t_pollerRequestString = fixPollerRequestString(pollerRequestString);\n\t\t_pollerResponseWriter = pollerResponseWriter;\n\t\t_receiveRequest = isReceiveRequest(_path);\n\t}","id":63410,"modified_method":"public PollerRequestHandler(\n\t\tString path, String pollerRequestString,\n\t\tPollerResponseWriter pollerResponseWriter) {\n\n\t\t_path = path;\n\t\t_pollerRequestString = fixPollerRequestString(pollerRequestString);\n\t\t_pollerResponseWriter = pollerResponseWriter;\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public boolean processRequest() throws Exception {\n\t\tif (Validator.isNull(_pollerRequestString)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tMap<String, Object>[] pollerRequestChunks =\n\t\t\t(Map<String, Object>[])JSONFactoryUtil.deserialize(\n\t\t\t\t_pollerRequestString);\n\n\t\tPollerHeader pollerHeader = getPollerHeader(pollerRequestChunks);\n\n\t\tif (pollerHeader == null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tSet<String> portletIdsWithChunks = null;\n\n\t\tif (_receiveRequest) {\n\t\t\tportletIdsWithChunks = new HashSet<String>();\n\n\t\t\tboolean suspendPolling = false;\n\n\t\t\tif (pollerHeader.isStartPolling()) {\n\t\t\t\tBrowserTrackerLocalServiceUtil.updateBrowserTracker(\n\t\t\t\t\tpollerHeader.getUserId(), pollerHeader.getBrowserKey());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tBrowserTracker browserTracker =\n\t\t\t\t\tBrowserTrackerLocalServiceUtil.getBrowserTracker(\n\t\t\t\t\t\tpollerHeader.getUserId(), pollerHeader.getBrowserKey());\n\n\t\t\t\tif (browserTracker.getBrowserKey() !=\n\t\t\t\t\t\tpollerHeader.getBrowserKey()) {\n\n\t\t\t\t\tsuspendPolling = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tJSONObject pollerResponseChunkJSONObject =\n\t\t\t\tJSONFactoryUtil.createJSONObject();\n\n\t\t\tpollerResponseChunkJSONObject.put(\n\t\t\t\t\"userId\", pollerHeader.getUserId());\n\t\t\tpollerResponseChunkJSONObject.put(\n\t\t\t\t\"initialRequest\", pollerHeader.isInitialRequest());\n\t\t\tpollerResponseChunkJSONObject.put(\"suspendPolling\", suspendPolling);\n\n\t\t\t_pollerResponseWriter.write(pollerResponseChunkJSONObject);\n\t\t}\n\n\t\tfor (int i = 1; i < pollerRequestChunks.length; i++) {\n\t\t\tMap<String, Object> pollerRequestChunk = pollerRequestChunks[i];\n\n\t\t\tString portletId = (String)pollerRequestChunk.get(\"portletId\");\n\t\t\tMap<String, String> parameterMap = getData(pollerRequestChunk);\n\t\t\tString chunkId = (String)pollerRequestChunk.get(\"chunkId\");\n\n\t\t\ttry {\n\t\t\t\taddPollerRequest(\n\t\t\t\t\tportletIdsWithChunks, pollerHeader, portletId, parameterMap,\n\t\t\t\t\tchunkId);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tprocessRequests();\n\n\t\tif (!_receiveRequest) {\n\t\t\treturn true;\n\t\t}\n\n\t\tclearRequests();\n\n\t\tfor (String portletId : pollerHeader.getPortletIds()) {\n\t\t\tif (portletIdsWithChunks.contains(portletId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\taddPollerRequest(\n\t\t\t\t\tportletIdsWithChunks, pollerHeader, portletId,\n\t\t\t\t\tnew HashMap<String, String>(), null);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tprocessRequests();\n\n\t\tif (!_receiveRequest) {\n\t\t\tshutdown();\n\t\t}\n\n\t\treturn true;\n\t}","id":63411,"modified_method":"public boolean processRequest() throws Exception {\n\t\tif (Validator.isNull(_pollerRequestString)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tMap<String, Object>[] pollerRequestChunks =\n\t\t\t(Map<String, Object>[])JSONFactoryUtil.deserialize(\n\t\t\t\t_pollerRequestString);\n\n\t\tPollerHeader pollerHeader = getPollerHeader(pollerRequestChunks);\n\n\t\tif (pollerHeader == null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tboolean receiveRequest = isReceiveRequest(_path);\n\n\t\tSet<String> portletIdsWithChunks = null;\n\n\t\tif (receiveRequest) {\n\t\t\tportletIdsWithChunks = new HashSet<String>();\n\n\t\t\tboolean suspendPolling = false;\n\n\t\t\tif (pollerHeader.isStartPolling()) {\n\t\t\t\tBrowserTrackerLocalServiceUtil.updateBrowserTracker(\n\t\t\t\t\tpollerHeader.getUserId(), pollerHeader.getBrowserKey());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tBrowserTracker browserTracker =\n\t\t\t\t\tBrowserTrackerLocalServiceUtil.getBrowserTracker(\n\t\t\t\t\t\tpollerHeader.getUserId(), pollerHeader.getBrowserKey());\n\n\t\t\t\tif (browserTracker.getBrowserKey() !=\n\t\t\t\t\t\tpollerHeader.getBrowserKey()) {\n\n\t\t\t\t\tsuspendPolling = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tJSONObject pollerResponseChunkJSONObject =\n\t\t\t\tJSONFactoryUtil.createJSONObject();\n\n\t\t\tpollerResponseChunkJSONObject.put(\n\t\t\t\t\"userId\", pollerHeader.getUserId());\n\t\t\tpollerResponseChunkJSONObject.put(\n\t\t\t\t\"initialRequest\", pollerHeader.isInitialRequest());\n\t\t\tpollerResponseChunkJSONObject.put(\"suspendPolling\", suspendPolling);\n\n\t\t\t_pollerResponseWriter.write(pollerResponseChunkJSONObject);\n\t\t}\n\n\t\tfor (int i = 1; i < pollerRequestChunks.length; i++) {\n\t\t\tMap<String, Object> pollerRequestChunk = pollerRequestChunks[i];\n\n\t\t\tString portletId = (String)pollerRequestChunk.get(\"portletId\");\n\t\t\tMap<String, String> parameterMap = getData(pollerRequestChunk);\n\t\t\tString chunkId = (String)pollerRequestChunk.get(\"chunkId\");\n\n\t\t\ttry {\n\t\t\t\taddPollerRequest(\n\t\t\t\t\tportletIdsWithChunks, pollerHeader, portletId, parameterMap,\n\t\t\t\t\tchunkId, receiveRequest);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tprocessRequests(receiveRequest);\n\n\t\tif (!receiveRequest) {\n\t\t\treturn true;\n\t\t}\n\n\t\tclearRequests();\n\n\t\tfor (String portletId : pollerHeader.getPortletIds()) {\n\t\t\tif (portletIdsWithChunks.contains(portletId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\taddPollerRequest(\n\t\t\t\t\tportletIdsWithChunks, pollerHeader, portletId,\n\t\t\t\t\tnew HashMap<String, String>(), null, receiveRequest);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tprocessRequests(receiveRequest);\n\n\t\tif (!receiveRequest) {\n\t\t\t_pollerResponseWriter.close();\n\t\t}\n\n\t\treturn true;\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void clearRequests() {\n\t\t_requestResponsePairs.clear();\n\t\t_responseIds.clear();\n\t\t_responseCount = 0;\n\t}","id":63412,"modified_method":"protected void clearRequests() {\n\t\t_pollerRequests.clear();\n\t\t_responseIds.clear();\n\t\t_responseCount = 0;\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void addPollerRequest(\n\t\t\tSet<String> portletIdsWithChunks, PollerHeader pollerHeader,\n\t\t\tString portletId, Map<String, String> parameterMap, String chunkId)\n\t\tthrows Exception {\n\n\t\tPollerProcessor pollerProcessor =\n\t\t\tPollerProcessorUtil.getPollerProcessor(portletId);\n\n\t\tif (pollerProcessor == null) {\n\t\t\t_log.error(\"Poller processor not found for portlet \" + portletId);\n\n\t\t\treturn;\n\t\t}\n\n\t\tPollerRequest pollerRequest = new PollerRequest(\n\t\t\tpollerHeader, portletId, parameterMap, chunkId, _receiveRequest);\n\n\t\tif (_receiveRequest) {\n\t\t\tportletIdsWithChunks.add(portletId);\n\t\t}\n\n\t\tRequestResponsePair requestResponsePair = new RequestResponsePair(\n\t\t\tpollerRequest);\n\n\t\t_requestResponsePairs.put(\n\t\t\tpollerRequest.getPortletId(), requestResponsePair);\n\t}","id":63413,"modified_method":"protected void addPollerRequest(\n\t\t\tSet<String> portletIdsWithChunks, PollerHeader pollerHeader,\n\t\t\tString portletId, Map<String, String> parameterMap, String chunkId,\n\t\t\tboolean receiveRequest)\n\t\tthrows Exception {\n\n\t\tPollerProcessor pollerProcessor =\n\t\t\tPollerProcessorUtil.getPollerProcessor(portletId);\n\n\t\tif (pollerProcessor == null) {\n\t\t\t_log.error(\"Poller processor not found for portlet \" + portletId);\n\n\t\t\treturn;\n\t\t}\n\n\t\tPollerRequest pollerRequest = new PollerRequest(\n\t\t\tpollerHeader, portletId, parameterMap, chunkId, receiveRequest);\n\n\t\tif (receiveRequest) {\n\t\t\tportletIdsWithChunks.add(portletId);\n\t\t}\n\n\t\t_pollerRequests.put(pollerRequest.getPortletId(), pollerRequest);\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void receive(Message message) {\n\t\tif (!_responseIds.containsKey(message.getResponseId())) {\n\t\t\treturn;\n\t\t}\n\n\t\tPollerResponse pollerResponse = (PollerResponse)message.getPayload();\n\n\t\tif (pollerResponse != null) {\n\t\t\ttry {\n\t\t\t\t_pollerResponseWriter.write(pollerResponse);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tsynchronized (this) {\n\t\t\t_responseCount++;\n\n\t\t\tif (_responseCount == _requestResponsePairs.size()) {\n\t\t\t\ttry {\n\t\t\t\t\tshutdown();\n\t\t\t\t}\n\t\t\t\tcatch (PollerException pe) {\n\t\t\t\t\t_log.error(pe, pe);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":63414,"modified_method":"public void receive(Message message) {\n\t\tif (!_responseIds.containsKey(message.getResponseId())) {\n\t\t\treturn;\n\t\t}\n\n\t\tPollerResponse pollerResponse = (PollerResponse)message.getPayload();\n\n\t\tif (pollerResponse != null) {\n\t\t\ttry {\n\t\t\t\t_pollerResponseWriter.write(pollerResponse);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tsynchronized (this) {\n\t\t\t_responseCount++;\n\n\t\t\tif (_responseCount == _pollerRequests.size()) {\n\t\t\t\ttry {\n\t\t\t\t\t_pollerResponseWriter.close();\n\t\t\t\t}\n\t\t\t\tcatch (PollerException pe) {\n\t\t\t\t\t_log.error(pe, pe);\n\t\t\t\t}\n\n\t\t\t\tnotify();\n\t\t\t}\n\t\t}\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected PollerHeader getPollerHeader(\n\t\t\tMap<String, Object>[] pollerRequestChunks)\n\t\tthrows Exception {\n\n\t\tif (pollerRequestChunks.length < 1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tMap<String, Object> pollerRequestChunk = pollerRequestChunks[0];\n\n\t\tlong companyId = GetterUtil.getLong(\n\t\t\tString.valueOf(pollerRequestChunk.get(\"companyId\")));\n\t\tString userIdString = GetterUtil.getString(\n\t\t\tString.valueOf(pollerRequestChunk.get(\"userId\")));\n\t\tlong browserKey = GetterUtil.getLong(\n\t\t\tString.valueOf(pollerRequestChunk.get(\"browserKey\")));\n\t\tString[] portletIds = StringUtil.split(\n\t\t\tString.valueOf(pollerRequestChunk.get(\"portletIds\")));\n\t\tboolean initialRequest = GetterUtil.getBoolean(\n\t\t\tString.valueOf(pollerRequestChunk.get(\"initialRequest\")));\n\t\tboolean startPolling = GetterUtil.getBoolean(\n\t\t\tString.valueOf(pollerRequestChunk.get(\"startPolling\")));\n\n\t\tlong userId = getUserId(companyId, userIdString);\n\n\t\tif (userId == 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new PollerHeader(\n\t\t\tcompanyId, userId, browserKey, portletIds, initialRequest,\n\t\t\tstartPolling);\n\t}","id":63415,"modified_method":"protected void processRequests(boolean receiveRequest) {\n\t\tif (receiveRequest) {\n\t\t\tMessageBusUtil.registerMessageListener(\n\t\t\t\tDestinationNames.POLLER_RESPONSE, this);\n\t\t}\n\n\t\ttry {\n\t\t\tfor (PollerRequest pollerRequest : _pollerRequests.values()) {\n\t\t\t\tMessage message = new Message();\n\n\t\t\t\tmessage.setPayload(pollerRequest);\n\t\t\t\tmessage.setResponseDestinationName(\n\t\t\t\t\tDestinationNames.POLLER_RESPONSE);\n\n\t\t\t\tString responseId = PortalUUIDUtil.generate();\n\n\t\t\t\tmessage.setResponseId(responseId);\n\n\t\t\t\t_responseIds.put(responseId, responseId);\n\n\t\t\t\tMessageBusUtil.sendMessage(DestinationNames.POLLER, message);\n\t\t\t}\n\n\t\t\tsynchronized (this) {\n\t\t\t\tif (_responseCount != _pollerRequests.size()) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.wait(PropsValues.POLLER_REQUEST_TIMEOUT);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (InterruptedException ie) {\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tif (receiveRequest) {\n\t\t\t\tMessageBusUtil.unregisterMessageListener(\n\t\t\t\t\tDestinationNames.POLLER_RESPONSE, this);\n\t\t\t}\n\t\t}\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getContent(HttpServletRequest request) throws Exception {\n\t\tString pollerRequestString = ParamUtil.getString(\n\t\t\trequest, \"pollerRequest\");\n\n\t\tPollerResponseWriter pollerResponseWriter =\n\t\t\tnew JSONPollerResponseWriter();\n\n\t\tSynchronousPollerRequestHandlerListener synchronousPollerRequestListener =\n\t\t\tnew SynchronousPollerRequestHandlerListener();\n\n\t\tList<PollerRequestHandlerListener> listeners =\n\t\t\tnew ArrayList<PollerRequestHandlerListener>(1);\n\n\t\tlisteners.add(synchronousPollerRequestListener);\n\n\t\tPollerRequestHandler pollerRequestHandler = new PollerRequestHandler(\n\t\t\trequest.getPathInfo(), pollerRequestString, pollerResponseWriter,\n\t\t\tlisteners);\n\n\t\tif (!pollerRequestHandler.processRequest()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tsynchronousPollerRequestListener.waitNotification(\n\t\t\tPropsValues.POLLER_REQUEST_TIMEOUT);\n\n\t\tpollerRequestHandler.shutdown();\n\n\t\tJSONArray jsonArray = pollerResponseWriter.getJSONArray();\n\n\t\treturn jsonArray.toString();\n\t}","id":63416,"modified_method":"protected String getContent(HttpServletRequest request) throws Exception {\n\t\tString pollerRequestString = ParamUtil.getString(\n\t\t\trequest, \"pollerRequest\");\n\n\t\tPollerResponseWriter pollerResponseWriter =\n\t\t\tnew JSONPollerResponseWriter();\n\n\t\tPollerRequestHandler pollerRequestHandler = new PollerRequestHandler(\n\t\t\trequest.getPathInfo(), pollerRequestString, pollerResponseWriter);\n\n\t\tif (!pollerRequestHandler.processRequest()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tJSONArray jsonArray = pollerResponseWriter.getJSONArray();\n\n\t\treturn jsonArray.toString();\n\t}","commit_id":"9bdb894f757a18289f68ed3163f51dbcafd7178d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void destroy() throws CometException {\n\t\t_cometState = CometState.STATE_CLOSED;\n\n\t\t_cometSession.close();\n\n\t\ttry {\n\t\t\tdoDestroy();\n\t\t}\n\t\tcatch (CometException ce) {\n\t\t\tthrow ce;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new CometException(e);\n\t\t}\n\t}","id":63417,"modified_method":"public void destroy() throws CometException {\n\t\t_cometState = CometState.STATE_CLOSED;\n\n\t\ttry {\n\t\t\tdoDestroy();\n\t\t}\n\t\tcatch (CometException ce) {\n\t\t\tthrow ce;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new CometException(e);\n\t\t}\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void close() throws CometException {\n\t\t_cometResponse.close();\n\n\t\ttry {\n\t\t\tdoClose();\n\t\t}\n\t\tcatch (CometException ce) {\n\t\t\tthrow ce;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new CometException(e);\n\t\t}\n\t}","id":63418,"modified_method":"public void close() throws CometException {\n\t\ttry {\n\t\t\tdoClose();\n\n\t\t\t_cometResponse.close();\n\t\t}\n\t\tcatch (CometException ce) {\n\t\t\tthrow ce;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new CometException(e);\n\t\t}\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void startCometHandler(\n\t\t\tCometEvent cometEvent, HttpServletRequest request,\n\t\t\tHttpSession session)\n\t\tthrows Exception {\n\n\t\tCometSession cometSession = new CatalinaCometSession(cometEvent);\n\n\t\tcometSession.setCometRequest(new CatalinaCometRequest(cometEvent));\n\t\tcometSession.setCometResponse(new CatalinaCometResponse(cometEvent));\n\t\tcometSession.setSessionId(session.getId());\n\n\t\tCometHandler cometHandler = _cometHandler.clone();\n\n\t\t_cometHandlerPool.startCometHandler(cometSession, cometHandler);\n\n\t\tHttpServletResponse response = cometEvent.getHttpServletResponse();\n\n\t\tresponse.setContentType(ContentTypes.TEXT_PLAIN_UTF8);\n\t}","id":63419,"modified_method":"protected void startCometHandler(\n\t\t\tCometEvent cometEvent, HttpServletRequest request,\n\t\t\tHttpSession session)\n\t\tthrows Exception {\n\n\t\tCometSession cometSession = new CatalinaCometSession(cometEvent);\n\n\t\tString sessionId = CatalinaCometSessionUtil.getSessionId(cometEvent);\n\n\t\tcometSession.setCometRequest(new CatalinaCometRequest(cometEvent));\n\t\tcometSession.setCometResponse(new CatalinaCometResponse(cometEvent));\n\t\tcometSession.setSessionId(sessionId);\n\n\t\tCometHandler cometHandler = _cometHandler.clone();\n\n\t\tCometHandlerPoolUtil.startCometHandler(cometSession, cometHandler);\n\n\t\tHttpServletResponse response = cometEvent.getHttpServletResponse();\n\n\t\tresponse.setContentType(ContentTypes.TEXT_PLAIN_UTF8);\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void readData(\n\t\t\tCometEvent cometEvent, HttpServletRequest request,\n\t\t\tHttpSession session)\n\t\tthrows Exception {\n\n\t\tInputStream inputStream = request.getInputStream();\n\n\t\tbyte[] buffer = new byte[512];\n\n\t\tStringBundler sb = new StringBundler();\n\n\t\twhile (inputStream.available() > 0) {\n\t\t\tint read = inputStream.read(buffer);\n\n\t\t\tif (read > 0) {\n\t\t\t\tString dataSegment = new String(buffer);\n\n\t\t\t\tsb.append(dataSegment);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(\n\t\t\t\t\t\tsession.getId() + \" \" + cometEvent.getEventSubType());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tString data = sb.toString();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Read \" + data);\n\t\t}\n\n\t\tCometHandler cometHandler = _cometHandlerPool.getCometHandler(\n\t\t\tsession.getId());\n\n\t\tcometHandler.receiveData(data);\n\t}","id":63420,"modified_method":"protected void readData(\n\t\t\tCometEvent cometEvent, HttpServletRequest request,\n\t\t\tHttpSession session)\n\t\tthrows Exception {\n\n\t\tInputStream inputStream = request.getInputStream();\n\n\t\tbyte[] buffer = new byte[512];\n\n\t\tStringBundler sb = new StringBundler();\n\n\t\twhile (inputStream.available() > 0) {\n\t\t\tint read = inputStream.read(buffer);\n\n\t\t\tif (read > 0) {\n\t\t\t\tString dataSegment = new String(buffer);\n\n\t\t\t\tsb.append(dataSegment);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(\n\t\t\t\t\t\tsession.getId() + \" \" + cometEvent.getEventSubType());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tString data = sb.toString();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Read \" + data);\n\t\t}\n\n\t\tCometHandler cometHandler = CometHandlerPoolUtil.getCometHandler(\n\t\t\tsession.getId());\n\n\t\tcometHandler.receiveData(data);\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void destroy() {\n\t\tsuper.destroy();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Destroy comet processor\");\n\t\t}\n\n\t\ttry {\n\t\t\t_cometHandlerPool.closeCometHandlers();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\t\t}\n\t}","id":63421,"modified_method":"public void destroy() {\n\t\tsuper.destroy();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Destroy comet processor\");\n\t\t}\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void closeConnection(\n\t\t\tCometEvent cometEvent, HttpServletRequest request,\n\t\t\tHttpSession session)\n\t\tthrows Exception {\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Close comet connection \" + session.getId());\n\t\t}\n\n\t\t_cometHandlerPool.closeCometHandler(session.getId());\n\n\t\tcometEvent.close();\n\t}","id":63422,"modified_method":"protected void closeConnection(\n\t\t\tCometEvent cometEvent, HttpServletRequest request,\n\t\t\tHttpSession session)\n\t\tthrows Exception {\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Close comet connection \" + session.getId());\n\t\t}\n\n\t\tString sessionId = CatalinaCometSessionUtil.getSessionId(cometEvent);\n\n\t\tCometHandlerPoolUtil.closeCometHandler(sessionId);\n\n\t\tcometEvent.close();\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void close() throws PollerException {\n\t\ttry {\n\t\t\t_cometSession.close();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PollerException(e);\n\t\t}\n\t}","id":63423,"modified_method":"@Override\n\tprotected void doClose() throws PollerException {\n\t\ttry {\n\t\t\tCometResponse cometResponse = _cometSession.getCometResponse();\n\n\t\t\tcometResponse.writeData(getJSONArray().toString());\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PollerException(e);\n\t\t}\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setParameter(String name, String value) {\n\t\t_parameterMap.put(name, value);\n\t}","id":63424,"modified_method":"public void setParameter(String name, String value)\n\t\tthrows PollerResponseClosedException {\n\n\t\tsynchronized (this) {\n\t\t\tif (_responseMessage == null) {\n\t\t\t\tthrow new PollerResponseClosedException();\n\t\t\t}\n\n\t\t\t_parameterMap.put(name, value);\n\t\t}\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setParameter(String name, JSONArray value) {\n\t\t_parameterMap.put(name, value);\n\t}","id":63425,"modified_method":"public void setParameter(String name, JSONArray value)\n\t\tthrows PollerResponseClosedException {\n\n\t\tsynchronized (this) {\n\t\t\tif (_responseMessage == null) {\n\t\t\t\tthrow new PollerResponseClosedException();\n\t\t\t}\n\n\t\t\t_parameterMap.put(name, value);\n\t\t}\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setParameter(String name, JSONObject value) {\n\t\t_parameterMap.put(name, value);\n\t}","id":63426,"modified_method":"public void setParameter(String name, JSONObject value)\n\t\tthrows PollerResponseClosedException {\n\n\t\tsynchronized (this) {\n\t\t\tif (_responseMessage == null) {\n\t\t\t\tthrow new PollerResponseClosedException();\n\t\t\t}\n\n\t\t\t_parameterMap.put(name, value);\n\t\t}\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void close() {\n\t}","id":63427,"modified_method":"public void close() throws PollerException {\n\t\tsynchronized (this) {\n\t\t\tif (!_closed) {\n\t\t\t\ttry {\n\t\t\t\t\tdoClose();\n\t\t\t\t}\n\t\t\t\tfinally {\n\t\t\t\t\t_closed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void write(PollerResponse pollerResponse) {\n\t\t_jsonArray.put(pollerResponse.toJSONObject());\n\t}","id":63428,"modified_method":"public void write(PollerResponse pollerResponse) throws PollerException {\n\t\tif (!_closed) {\n\t\t\t_jsonArray.put(pollerResponse.toJSONObject());\n\t\t}\n\t\telse {\n\t\t\tthrow new PollerWriterClosedException();\n\t\t}\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void write(String string) {\n\t\t_jsonArray.put(string);\n\t}","id":63429,"modified_method":"public void write(String string) throws PollerException {\n\t\tif (!_closed) {\n\t\t\t_jsonArray.put(string);\n\t\t}\n\t\telse {\n\t\t\tthrow new PollerWriterClosedException();\n\t\t}\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void write(JSONArray jsonArray) {\n\t\t_jsonArray.put(jsonArray);\n\t}","id":63430,"modified_method":"public void write(JSONArray jsonArray) throws PollerException {\n\t\tif (!_closed) {\n\t\t\t_jsonArray.put(jsonArray);\n\t\t}\n\t\telse {\n\t\t\tthrow new PollerWriterClosedException();\n\t\t}\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void write(JSONObject jsonObject) {\n\t\t_jsonArray.put(jsonObject);\n\t}","id":63431,"modified_method":"public void write(JSONObject jsonObject) throws PollerException {\n\t\tif (!_closed) {\n\t\t\t_jsonArray.put(jsonObject);\n\t\t}\n\t\telse {\n\t\t\tthrow new PollerWriterClosedException();\n\t\t}\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doInit(CometSession cometSession) throws Exception {\n\t\tCometRequest cometRequest = cometSession.getCometRequest();\n\n\t\tString pollerRequestString = cometRequest.getParameter(\"pollerRequest\");\n\n\t\tPollerResponseWriter pollerResponseWriter =\n\t\t\tnew CometPollerResponseWriter(cometSession);\n\n\t\tPollerRequestHandler pollerRequestHandler = new PollerRequestHandler(\n\t\t\tcometRequest.getPathInfo(), pollerRequestString,\n\t\t\tpollerResponseWriter);\n\n\t\tpollerRequestHandler.processRequest();\n\t}","id":63432,"modified_method":"protected void doInit(CometSession cometSession) throws Exception {\n\t\tCometRequest cometRequest = cometSession.getCometRequest();\n\n\t\tString pollerRequestString = cometRequest.getParameter(\"pollerRequest\");\n\n\t\tPollerResponseWriter pollerResponseWriter =\n\t\t\tnew CometPollerResponseWriter(cometSession);\n\n\t\tList<PollerRequestHandlerListener> pollerRequestHandlerListeners =\n\t\t\tnew ArrayList<PollerRequestHandlerListener>(1);\n\n\t\tpollerRequestHandlerListeners.add(\n\t\t\tnew CometPollerRequestHandlerListener(cometSession));\n\n\t\t_pollerRequestHandler = new PollerRequestHandler(\n\t\t\tcometRequest.getPathInfo(), pollerRequestString,\n\t\t\tpollerResponseWriter, pollerRequestHandlerListeners);\n\n\t\t_pollerRequestHandler.processRequest();\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doReceive(Message message) throws Exception {\n\t\tPollerResponse pollerResponse = null;\n\n\t\ttry {\n\t\t\tPollerRequest pollerRequest = (PollerRequest)message.getPayload();\n\n\t\t\tString portletId = pollerRequest.getPortletId();\n\n\t\t\tPollerProcessor pollerProcessor =\n\t\t\t\tPollerProcessorUtil.getPollerProcessor(portletId);\n\n\t\t\tif (pollerRequest.isReceiveRequest()) {\n\t\t\t\tpollerResponse = new DefaultPollerResponse(\n\t\t\t\t\tportletId, pollerRequest.getChunkId());\n\n\t\t\t\ttry {\n\t\t\t\t\tpollerProcessor.receive(pollerRequest, pollerResponse);\n\t\t\t\t}\n\t\t\t\tcatch (PollerException pe) {\n\t\t\t\t\t_log.error(\n\t\t\t\t\t\t\"Unable to receive poller request \" + pollerRequest,\n\t\t\t\t\t\tpe);\n\n\t\t\t\t\tpollerResponse.setParameter(\n\t\t\t\t\t\t\"pollerException\", pe.getMessage());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttry {\n\t\t\t\t\tpollerProcessor.send(pollerRequest);\n\t\t\t\t}\n\t\t\t\tcatch (PollerException pe) {\n\t\t\t\t\t_log.error(\n\t\t\t\t\t\t\"Unable to send poller request \" + pollerRequest,\n\t\t\t\t\t\tpe);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tString responseDestinationName =\n\t\t\t\tmessage.getResponseDestinationName();\n\n\t\t\tif (Validator.isNotNull(responseDestinationName)) {\n\t\t\t\tMessage responseMessage = MessageBusUtil.createResponseMessage(\n\t\t\t\t\tmessage);\n\n\t\t\t\tresponseMessage.setPayload(pollerResponse);\n\n\t\t\t\tMessageBusUtil.sendMessage(\n\t\t\t\t\tresponseDestinationName, responseMessage);\n\t\t\t}\n\t\t}\n\t}","id":63433,"modified_method":"protected void doReceive(Message message) throws Exception {\n\t\tPollerRequestResponsePair pollerRequestResponsePair =\n\t\t\t(PollerRequestResponsePair)message.getPayload();\n\n\t\tPollerRequest pollerRequest = pollerRequestResponsePair.getPollerRequest();\n\n\t\tPollerResponse pollerResponse = pollerRequestResponsePair.getPollerResponse();\n\n\t\tString portletId = pollerRequest.getPortletId();\n\n\t\tPollerProcessor pollerProcessor =\n\t\t\tPollerProcessorUtil.getPollerProcessor(portletId);\n\n\t\tif (pollerRequest.isReceiveRequest()) {\n\t\t\tString responseDestinationName =\n\t\t\t\tmessage.getResponseDestinationName();\n\n\t\t\tif (Validator.isNotNull(responseDestinationName) &&\n\t\t\t\tValidator.isNotNull(pollerResponse)) {\n\n\t\t\t\tMessage responseMessage = MessageBusUtil.createResponseMessage(\n\t\t\t\t\tmessage);\n\n\t\t\t\tresponseMessage.setPayload(pollerResponse);\n\n\t\t\t\tpollerResponse.setResponseMessage(responseMessage);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tpollerProcessor.receive(pollerRequest, pollerResponse);\n\t\t\t}\n\t\t\tcatch (PollerException pe) {\n\t\t\t\t_log.error(\n\t\t\t\t\t\"Unable to receive poller request \" + pollerRequest,\n\t\t\t\t\tpe);\n\n\t\t\t\tpollerResponse.setParameter(\n\t\t\t\t\t\"pollerException\", pe.getMessage());\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tif (!pollerProcessor.isAsynchronousProcessing()) {\n\t\t\t\t\tpollerResponse.close();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\ttry {\n\t\t\t\tpollerProcessor.send(pollerRequest);\n\t\t\t}\n\t\t\tcatch (PollerException pe) {\n\t\t\t\t_log.error(\n\t\t\t\t\t\"Unable to send poller request \" + pollerRequest,\n\t\t\t\t\tpe);\n\t\t\t}\n\t\t}\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PollerRequestHandler(\n\t\tString path, String pollerRequestString,\n\t\tPollerResponseWriter pollerResponseWriter) {\n\n\t\t_path = path;\n\t\t_pollerRequestString = fixPollerRequestString(pollerRequestString);\n\t\t_pollerResponseWriter = pollerResponseWriter;\n\t}","id":63434,"modified_method":"public PollerRequestHandler(\n\t\tString path, String pollerRequestString,\n\t\tPollerResponseWriter pollerResponseWriter,\n\t\tList<PollerRequestHandlerListener> listeners) {\n\n\t\t_listeners = listeners;\n\t\t_path = path;\n\t\t_pollerRequestString = fixPollerRequestString(pollerRequestString);\n\t\t_pollerResponseWriter = pollerResponseWriter;\n\t\t_receiveRequest = isReceiveRequest(_path);\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void clearRequests() {\n\t\t_pollerRequests.clear();\n\t\t_responseIds.clear();\n\t\t_responseCount = 0;\n\t}","id":63435,"modified_method":"protected void clearRequests() {\n\t\t_pollerRequestResponsePairs.clear();\n\t\t_responseIds.clear();\n\t\t_responseCount = 0;\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void addPollerRequest(\n\t\t\tSet<String> portletIdsWithChunks, PollerHeader pollerHeader,\n\t\t\tString portletId, Map<String, String> parameterMap, String chunkId,\n\t\t\tboolean receiveRequest)\n\t\tthrows Exception {\n\n\t\tPollerProcessor pollerProcessor =\n\t\t\tPollerProcessorUtil.getPollerProcessor(portletId);\n\n\t\tif (pollerProcessor == null) {\n\t\t\t_log.error(\"Poller processor not found for portlet \" + portletId);\n\n\t\t\treturn;\n\t\t}\n\n\t\tPollerRequest pollerRequest = new PollerRequest(\n\t\t\tpollerHeader, portletId, parameterMap, chunkId, receiveRequest);\n\n\t\tif (receiveRequest) {\n\t\t\tportletIdsWithChunks.add(portletId);\n\t\t}\n\n\t\t_pollerRequests.put(pollerRequest.getPortletId(), pollerRequest);\n\t}","id":63436,"modified_method":"protected void addPollerRequest(\n\t\t\tSet<String> portletIdsWithChunks, PollerHeader pollerHeader,\n\t\t\tString portletId, Map<String, String> parameterMap, String chunkId)\n\t\tthrows Exception {\n\n\t\tPollerProcessor pollerProcessor =\n\t\t\tPollerProcessorUtil.getPollerProcessor(portletId);\n\n\t\tif (pollerProcessor == null) {\n\t\t\t_log.error(\"Poller processor not found for portlet \" + portletId);\n\n\t\t\treturn;\n\t\t}\n\n\t\tPollerRequest pollerRequest = new PollerRequest(\n\t\t\tpollerHeader, portletId, parameterMap, chunkId, _receiveRequest);\n\n\t\tif (_receiveRequest) {\n\t\t\tportletIdsWithChunks.add(portletId);\n\t\t}\n\n\t\tPollerRequestResponsePair pollerRequestResponsePair =\n\t\t\tnew PollerRequestResponsePair(pollerRequest);\n\n\t\t_pollerRequestResponsePairs.put(\n\t\t\tpollerRequest.getPortletId(), pollerRequestResponsePair);\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void processRequests(boolean receiveRequest) {\n\t\tif (receiveRequest) {\n\t\t\tMessageBusUtil.registerMessageListener(\n\t\t\t\tDestinationNames.POLLER_RESPONSE, this);\n\t\t}\n\n\t\ttry {\n\t\t\tfor (PollerRequest pollerRequest : _pollerRequests.values()) {\n\t\t\t\tMessage message = new Message();\n\n\t\t\t\tmessage.setPayload(pollerRequest);\n\t\t\t\tmessage.setResponseDestinationName(\n\t\t\t\t\tDestinationNames.POLLER_RESPONSE);\n\n\t\t\t\tString responseId = PortalUUIDUtil.generate();\n\n\t\t\t\tmessage.setResponseId(responseId);\n\n\t\t\t\t_responseIds.put(responseId, responseId);\n\n\t\t\t\tMessageBusUtil.sendMessage(DestinationNames.POLLER, message);\n\t\t\t}\n\n\t\t\tsynchronized (this) {\n\t\t\t\tif (_responseCount != _pollerRequests.size()) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.wait(PropsValues.POLLER_REQUEST_TIMEOUT);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (InterruptedException ie) {\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tif (receiveRequest) {\n\t\t\t\tMessageBusUtil.unregisterMessageListener(\n\t\t\t\t\tDestinationNames.POLLER_RESPONSE, this);\n\t\t\t}\n\t\t}\n\t}","id":63437,"modified_method":"protected void processRequests() {\n\t\tif (_receiveRequest) {\n\t\t\tMessageBusUtil.registerMessageListener(\n\t\t\t\tDestinationNames.POLLER_RESPONSE, this);\n\t\t}\n\n\t\tfor (PollerRequestResponsePair pollerRequestResponsePair :\n\t\t\t_pollerRequestResponsePairs.values()) {\n\n\t\t\tPollerRequest pollerRequest =\n\t\t\t\tpollerRequestResponsePair.getPollerRequest();\n\n\t\t\tif (_receiveRequest) {\n\t\t\t\tPollerResponse pollerResponse = new DefaultPollerResponse(\n\t\t\t\t\tpollerRequest.getPortletId(), pollerRequest.getChunkId());\n\n\t\t\t\tpollerRequestResponsePair.setPollerResponse(pollerResponse);\n\t\t\t}\n\n\t\t\tMessage message = new Message();\n\n\t\t\tmessage.setPayload(pollerRequestResponsePair);\n\n\t\t\tif (_receiveRequest) {\n\t\t\t\tmessage.setResponseDestinationName(\n\t\t\t\t\tDestinationNames.POLLER_RESPONSE);\n\t\t\t}\n\n\t\t\tString responseId = PortalUUIDUtil.generate();\n\n\t\t\tmessage.setResponseId(responseId);\n\n\t\t\t_responseIds.put(responseId, responseId);\n\n\t\t\tMessageBusUtil.sendMessage(DestinationNames.POLLER, message);\n\t\t}\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void receive(Message message) {\n\t\tif (!_responseIds.containsKey(message.getResponseId())) {\n\t\t\treturn;\n\t\t}\n\n\t\tPollerResponse pollerResponse = (PollerResponse)message.getPayload();\n\n\t\tif (pollerResponse != null) {\n\t\t\ttry {\n\t\t\t\t_pollerResponseWriter.write(pollerResponse);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tsynchronized (this) {\n\t\t\t_responseCount++;\n\n\t\t\tif (_responseCount == _pollerRequests.size()) {\n\t\t\t\ttry {\n\t\t\t\t\t_pollerResponseWriter.close();\n\t\t\t\t}\n\t\t\t\tcatch (PollerException pe) {\n\t\t\t\t\t_log.error(pe, pe);\n\t\t\t\t}\n\n\t\t\t\tnotify();\n\t\t\t}\n\t\t}\n\t}","id":63438,"modified_method":"public void receive(Message message) {\n\t\tif (!_responseIds.containsKey(message.getResponseId())) {\n\t\t\treturn;\n\t\t}\n\n\t\tPollerResponse pollerResponse = (PollerResponse)message.getPayload();\n\n\t\tif (pollerResponse != null) {\n\t\t\ttry {\n\t\t\t\t_pollerResponseWriter.write(pollerResponse);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tsynchronized (this) {\n\t\t\t_responseCount++;\n\n\t\t\tif (_responseCount == _pollerRequestResponsePairs.size()) {\n\t\t\t\ttry {\n\t\t\t\t\tshutdown();\n\t\t\t\t}\n\t\t\t\tcatch (PollerException pe) {\n\t\t\t\t\t_log.error(pe, pe);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public boolean processRequest() throws Exception {\n\t\tif (Validator.isNull(_pollerRequestString)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tMap<String, Object>[] pollerRequestChunks =\n\t\t\t(Map<String, Object>[])JSONFactoryUtil.deserialize(\n\t\t\t\t_pollerRequestString);\n\n\t\tPollerHeader pollerHeader = getPollerHeader(pollerRequestChunks);\n\n\t\tif (pollerHeader == null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tboolean receiveRequest = isReceiveRequest(_path);\n\n\t\tSet<String> portletIdsWithChunks = null;\n\n\t\tif (receiveRequest) {\n\t\t\tportletIdsWithChunks = new HashSet<String>();\n\n\t\t\tboolean suspendPolling = false;\n\n\t\t\tif (pollerHeader.isStartPolling()) {\n\t\t\t\tBrowserTrackerLocalServiceUtil.updateBrowserTracker(\n\t\t\t\t\tpollerHeader.getUserId(), pollerHeader.getBrowserKey());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tBrowserTracker browserTracker =\n\t\t\t\t\tBrowserTrackerLocalServiceUtil.getBrowserTracker(\n\t\t\t\t\t\tpollerHeader.getUserId(), pollerHeader.getBrowserKey());\n\n\t\t\t\tif (browserTracker.getBrowserKey() !=\n\t\t\t\t\t\tpollerHeader.getBrowserKey()) {\n\n\t\t\t\t\tsuspendPolling = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tJSONObject pollerResponseChunkJSONObject =\n\t\t\t\tJSONFactoryUtil.createJSONObject();\n\n\t\t\tpollerResponseChunkJSONObject.put(\n\t\t\t\t\"userId\", pollerHeader.getUserId());\n\t\t\tpollerResponseChunkJSONObject.put(\n\t\t\t\t\"initialRequest\", pollerHeader.isInitialRequest());\n\t\t\tpollerResponseChunkJSONObject.put(\"suspendPolling\", suspendPolling);\n\n\t\t\t_pollerResponseWriter.write(pollerResponseChunkJSONObject);\n\t\t}\n\n\t\tfor (int i = 1; i < pollerRequestChunks.length; i++) {\n\t\t\tMap<String, Object> pollerRequestChunk = pollerRequestChunks[i];\n\n\t\t\tString portletId = (String)pollerRequestChunk.get(\"portletId\");\n\t\t\tMap<String, String> parameterMap = getData(pollerRequestChunk);\n\t\t\tString chunkId = (String)pollerRequestChunk.get(\"chunkId\");\n\n\t\t\ttry {\n\t\t\t\taddPollerRequest(\n\t\t\t\t\tportletIdsWithChunks, pollerHeader, portletId, parameterMap,\n\t\t\t\t\tchunkId, receiveRequest);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tprocessRequests(receiveRequest);\n\n\t\tif (!receiveRequest) {\n\t\t\treturn true;\n\t\t}\n\n\t\tclearRequests();\n\n\t\tfor (String portletId : pollerHeader.getPortletIds()) {\n\t\t\tif (portletIdsWithChunks.contains(portletId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\taddPollerRequest(\n\t\t\t\t\tportletIdsWithChunks, pollerHeader, portletId,\n\t\t\t\t\tnew HashMap<String, String>(), null, receiveRequest);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tprocessRequests(receiveRequest);\n\n\t\tif (!receiveRequest) {\n\t\t\t_pollerResponseWriter.close();\n\t\t}\n\n\t\treturn true;\n\t}","id":63439,"modified_method":"public boolean processRequest() throws Exception {\n\t\tif (Validator.isNull(_pollerRequestString)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tMap<String, Object>[] pollerRequestChunks =\n\t\t\t(Map<String, Object>[])JSONFactoryUtil.deserialize(\n\t\t\t\t_pollerRequestString);\n\n\t\tPollerHeader pollerHeader = getPollerHeader(pollerRequestChunks);\n\n\t\tif (pollerHeader == null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tSet<String> portletIdsWithChunks = null;\n\n\t\tif (_receiveRequest) {\n\t\t\tportletIdsWithChunks = new HashSet<String>();\n\n\t\t\tboolean suspendPolling = false;\n\n\t\t\tif (pollerHeader.isStartPolling()) {\n\t\t\t\tBrowserTrackerLocalServiceUtil.updateBrowserTracker(\n\t\t\t\t\tpollerHeader.getUserId(), pollerHeader.getBrowserKey());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tBrowserTracker browserTracker =\n\t\t\t\t\tBrowserTrackerLocalServiceUtil.getBrowserTracker(\n\t\t\t\t\t\tpollerHeader.getUserId(), pollerHeader.getBrowserKey());\n\n\t\t\t\tif (browserTracker.getBrowserKey() !=\n\t\t\t\t\t\tpollerHeader.getBrowserKey()) {\n\n\t\t\t\t\tsuspendPolling = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tJSONObject pollerResponseChunkJSONObject =\n\t\t\t\tJSONFactoryUtil.createJSONObject();\n\n\t\t\tpollerResponseChunkJSONObject.put(\n\t\t\t\t\"userId\", pollerHeader.getUserId());\n\t\t\tpollerResponseChunkJSONObject.put(\n\t\t\t\t\"initialRequest\", pollerHeader.isInitialRequest());\n\t\t\tpollerResponseChunkJSONObject.put(\"suspendPolling\", suspendPolling);\n\n\t\t\t_pollerResponseWriter.write(pollerResponseChunkJSONObject);\n\t\t}\n\n\t\tfor (int i = 1; i < pollerRequestChunks.length; i++) {\n\t\t\tMap<String, Object> pollerRequestChunk = pollerRequestChunks[i];\n\n\t\t\tString portletId = (String)pollerRequestChunk.get(\"portletId\");\n\t\t\tMap<String, String> parameterMap = getData(pollerRequestChunk);\n\t\t\tString chunkId = (String)pollerRequestChunk.get(\"chunkId\");\n\n\t\t\ttry {\n\t\t\t\taddPollerRequest(\n\t\t\t\t\tportletIdsWithChunks, pollerHeader, portletId, parameterMap,\n\t\t\t\t\tchunkId);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tprocessRequests();\n\n\t\tif (!_receiveRequest) {\n\t\t\tshutdown();\n\n\t\t\treturn true;\n\t\t}\n\n\t\tclearRequests();\n\n\t\tfor (String portletId : pollerHeader.getPortletIds()) {\n\t\t\tif (portletIdsWithChunks.contains(portletId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\taddPollerRequest(\n\t\t\t\t\tportletIdsWithChunks, pollerHeader, portletId,\n\t\t\t\t\tnew HashMap<String, String>(), null);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tprocessRequests();\n\n\t\treturn true;\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getContent(HttpServletRequest request) throws Exception {\n\t\tString pollerRequestString = ParamUtil.getString(\n\t\t\trequest, \"pollerRequest\");\n\n\t\tPollerResponseWriter pollerResponseWriter =\n\t\t\tnew JSONPollerResponseWriter();\n\n\t\tPollerRequestHandler pollerRequestHandler = new PollerRequestHandler(\n\t\t\trequest.getPathInfo(), pollerRequestString, pollerResponseWriter);\n\n\t\tif (!pollerRequestHandler.processRequest()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tJSONArray jsonArray = pollerResponseWriter.getJSONArray();\n\n\t\treturn jsonArray.toString();\n\t}","id":63440,"modified_method":"protected String getContent(HttpServletRequest request) throws Exception {\n\t\tString pollerRequestString = ParamUtil.getString(\n\t\t\trequest, \"pollerRequest\");\n\n\t\tPollerResponseWriter pollerResponseWriter =\n\t\t\tnew JSONPollerResponseWriter();\n\n\t\tSynchronousPollerRequestHandlerListener completionListener =\n\t\t\tnew SynchronousPollerRequestHandlerListener();\n\n\t\tList<PollerRequestHandlerListener> listeners =\n\t\t\tnew ArrayList<PollerRequestHandlerListener>(1);\n\n\t\tlisteners.add(completionListener);\n\n\t\tPollerRequestHandler pollerRequestHandler = new PollerRequestHandler(\n\t\t\trequest.getPathInfo(), pollerRequestString, pollerResponseWriter,\n\t\t\tlisteners);\n\n\t\tif (!pollerRequestHandler.processRequest()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tcompletionListener.waitNotification(\n\t\t\tPropsValues.POLLER_REQUEST_TIMEOUT);\n\n\t\tpollerRequestHandler.shutdown();\n\n\t\tJSONArray jsonArray = pollerResponseWriter.getJSONArray();\n\n\t\treturn jsonArray.toString();\n\t}","commit_id":"23a4b18ef698771f2bb66c1826b9ba5cf067b3d8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Nullable\n  public static PsiType getInferredType(@NotNull final GrReferenceExpression refExpr) {\n    return RecursionManager.doPreventingRecursion(refExpr, true, new NullableComputable<PsiType>() {\n      @Override\n      public PsiType compute() {\n        final GrControlFlowOwner scope = ControlFlowUtils.findControlFlowOwner(refExpr);\n        if (scope == null) return null;\n\n        final Instruction[] flow = scope.getControlFlow();\n        ReadWriteVariableInstruction instruction = findInstruction(refExpr, flow);\n        if (instruction == null) return null;\n\n        if (instruction.isWrite()) {\n          return getInitializerType(refExpr);\n        }\n\n        final DFAType type = getInferredType(refExpr.getReferenceName(), instruction, flow, scope, new HashSet<MixinTypeInstruction>());\n        if (type == null) return null;\n        return type.getResultType();\n      }\n    });\n  }","id":63441,"modified_method":"@Nullable\n  public static PsiType getInferredType(@NotNull final GrReferenceExpression refExpr) {\n    return RecursionManager.doPreventingRecursion(refExpr, true, new NullableComputable<PsiType>() {\n      @Override\n      public PsiType compute() {\n        final GrControlFlowOwner scope = ControlFlowUtils.findControlFlowOwner(refExpr);\n        if (scope == null) return null;\n\n        final Instruction[] flow = scope.getControlFlow();\n        ReadWriteVariableInstruction instruction = findInstruction(refExpr, flow);\n        if (instruction == null) return null;\n\n        if (instruction.isWrite()) {\n          return getInitializerType(refExpr);\n        }\n\n        final DFAType type = getInferredType(refExpr.getReferenceName(), instruction, flow, scope, new HashSet<MixinTypeInstruction>());\n        return type == null ? null : type.getResultType();\n      }\n    });\n  }","commit_id":"41673b8392f6e073a7ea34d38d5ba90b93746295","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static PsiType getInferredTypeNew(@NotNull PsiElement place, String variableName) {\n    final GrControlFlowOwner scope = ControlFlowUtils.findControlFlowOwner(place);\n    if (scope == null) return null;\n\n    final Instruction[] flow = scope.getControlFlow();\n    return inferVariableType(variableName, scope, flow, findInstructionAt(place, flow));\n  }","id":63442,"modified_method":"@Nullable\n  public static PsiType getInferredTypeNew(@NotNull PsiElement place, String variableName) {\n    final GrControlFlowOwner scope = ControlFlowUtils.findControlFlowOwner(place);\n    if (scope == null) return null;\n\n    return inferVariableType(scope).getInferredType(variableName, findInstructionAt(place, scope.getControlFlow()));\n  }","commit_id":"41673b8392f6e073a7ea34d38d5ba90b93746295","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static PsiType inferVariableType(String variableName, GrControlFlowOwner scope, Instruction[] flow, Instruction instruction) {\n    if (instruction == null) return null;\n\n    ArrayList<Map<String, PsiType>> list = performTypeDfa(scope, flow);\n    if (list == null) return null;\n\n    return list.get(instruction.num()).get(variableName);\n  }","id":63443,"modified_method":"@NotNull\n  private static InferenceResult inferVariableType(final GrControlFlowOwner scope) {\n    return CachedValuesManager.getManager(scope.getProject()).getCachedValue(scope, new CachedValueProvider<InferenceResult>() {\n      @Nullable\n      @Override\n      public Result<InferenceResult> compute() {\n        Instruction[] flow = scope.getControlFlow();\n        List<Map<String, PsiType>> list = performTypeDfa(scope, flow);\n        return Result.create(new InferenceResult(flow, list), PsiModificationTracker.MODIFICATION_COUNT);\n      }\n    });\n  }","commit_id":"41673b8392f6e073a7ea34d38d5ba90b93746295","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static PsiType getInferredTypeNew(@NotNull final GrReferenceExpression refExpr) {\n    final GrControlFlowOwner scope = ControlFlowUtils.findControlFlowOwner(refExpr);\n    if (scope == null) return null;\n\n    final Instruction[] flow = scope.getControlFlow();\n    return inferVariableType(refExpr.getReferenceName(), scope, flow, findInstruction(refExpr, flow));\n  }","id":63444,"modified_method":"@Nullable\n  public static PsiType getInferredTypeNew(@NotNull final GrReferenceExpression refExpr) {\n    final GrControlFlowOwner scope = ControlFlowUtils.findControlFlowOwner(refExpr);\n    if (scope == null) return null;\n\n    return inferVariableType(scope).getInferredType(refExpr.getReferenceName(), findInstruction(refExpr, scope.getControlFlow()));\n  }","commit_id":"41673b8392f6e073a7ea34d38d5ba90b93746295","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void check(GrCodeBlock block, ProblemsHolder holder) {\n    GrStatement[] statements = block.getStatements();\n    if (statements.length > 0 && !(statements[statements.length - 1] instanceof GrExpression)) {\n      if (hasValueReturns(block)) {\n        Instruction[] flow = block.getControlFlow();\n        if (!ControlFlowUtil.alwaysReturns(flow)) {\n          final PsiElement lastChild = block.getLastChild();\n          if (lastChild == null) return;\n          TextRange range = lastChild.getTextRange();\n          if (!lastChild.isValid() || !lastChild.isPhysical() || range.getStartOffset() >= range.getEndOffset()) {\n            return;\n          }\n          holder.registerProblem(lastChild, GroovyInspectionBundle.message(\"no.return.message\"));\n        }\n      }\n    }\n  }","id":63445,"modified_method":"private static void check(GrCodeBlock block, ProblemsHolder holder, boolean mustReturnValue) {\n    GrStatement[] statements = block.getStatements();\n    if (statements.length == 0 || !(statements[statements.length - 1] instanceof GrExpression)) {\n      final boolean hasReturns = hasReturnStatements(block);\n      if (!hasReturns && mustReturnValue || hasReturns && !ControlFlowUtil.alwaysReturns(block.getControlFlow())) {\n        addNoReturnMessage(block, holder);\n      }\n    }\n  }","commit_id":"82d030554521e0c541f099536b335e4ea54d8999","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public PsiElementVisitor buildVisitor(@NotNull final ProblemsHolder problemsHolder, boolean onTheFly) {\n    return new GroovyPsiElementVisitor(new GroovyElementVisitor() {\n      public void visitClosure(GrClosableBlock closure) {\n        check(closure, problemsHolder);\n        super.visitClosure(closure);\n      }\n\n      public void visitMethod(GrMethod method) {\n        final GrOpenBlock block = method.getBlock();\n        if (block != null) {\n          check(block, problemsHolder);\n        }\n        super.visitMethod(method);\n      }\n    });\n\n  }","id":63446,"modified_method":"@NotNull\n  public PsiElementVisitor buildVisitor(@NotNull final ProblemsHolder problemsHolder, boolean onTheFly) {\n    return new GroovyPsiElementVisitor(new GroovyElementVisitor() {\n      public void visitClosure(GrClosableBlock closure) {\n        check(closure, problemsHolder, false);\n        super.visitClosure(closure);\n      }\n\n      public void visitMethod(GrMethod method) {\n        final GrOpenBlock block = method.getBlock();\n        if (block != null) {\n          check(block, problemsHolder, method.getReturnTypeElementGroovy() != null);\n        }\n        super.visitMethod(method);\n      }\n    });\n\n  }","commit_id":"82d030554521e0c541f099536b335e4ea54d8999","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean hasValueReturns(GrCodeBlock block) {\n    class Visitor extends GroovyRecursiveElementVisitor {\n      private boolean myFound = false;\n\n      public boolean isFound() {\n        return myFound;\n      }\n\n      public void visitReturnStatement(GrReturnStatement returnStatement) {\n        if (returnStatement.getReturnValue() != null) myFound = true;\n      }\n\n      public void visitElement(GroovyPsiElement element) {\n        if (!myFound) {\n          super.visitElement(element);\n        }\n      }\n    }\n    Visitor visitor = new Visitor();\n    block.accept(visitor);\n    return visitor.isFound();\n  }","id":63447,"modified_method":"private static boolean hasReturnStatements(GrCodeBlock block) {\n    class Visitor extends GroovyRecursiveElementVisitor {\n      private boolean myFound = false;\n\n      public boolean isFound() {\n        return myFound;\n      }\n\n      public void visitReturnStatement(GrReturnStatement returnStatement) {\n        if (returnStatement.getReturnValue() != null) myFound = true;\n      }\n\n      public void visitElement(GroovyPsiElement element) {\n        if (!myFound) {\n          super.visitElement(element);\n        }\n      }\n    }\n    Visitor visitor = new Visitor();\n    block.accept(visitor);\n    return visitor.isFound();\n  }","commit_id":"82d030554521e0c541f099536b335e4ea54d8999","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n\tpublic List<AssetCategory> getVocabularyCategoriesByTitle(\n\t\t\tlong groupId, String title, long vocabularyId, int start, int end)\n\t\tthrows PortalException, SystemException {\n\n\t\tHits hits = null;\n\n\t\tList<AssetCategory> assetCategories = new ArrayList<AssetCategory>();\n\n\t\thits = getHits(groupId, title, new long[] {vocabularyId}, start, end);\n\n\t\tList<Document> documents = hits.toList();\n\n\t\tfor (Document document : documents) {\n\t\t\tlong categoryId = GetterUtil.getLong(\n\t\t\t\tdocument.get(Field.CATEGORY_ID));\n\n\t\t\tAssetCategory assetCategory = getCategory(categoryId);\n\n\t\t\tassetCategories.add(assetCategory);\n\t\t\t}\n\n\t\treturn assetCategories;\n\t}","id":63448,"modified_method":"@Override\n\tpublic List<AssetCategory> getVocabularyCategoriesByTitle(\n\t\t\tlong groupId, String title, long vocabularyId, int start, int end)\n\t\tthrows PortalException, SystemException {\n\n\t\tHits hits = getHits(\n\t\t\tgroupId, title, new long[] {vocabularyId}, start, end);\n\n\t\tDocument[] documents = hits.getDocs();\n\n\t\tList<AssetCategory> assetCategories = new ArrayList<AssetCategory>(\n\t\t\tdocuments.length);\n\n\t\tfor (Document document : documents) {\n\t\t\tlong categoryId = GetterUtil.getLong(\n\t\t\t\tdocument.get(Field.CATEGORY_ID));\n\n\t\t\tAssetCategory assetCategory = getCategory(categoryId);\n\n\t\t\tassetCategories.add(assetCategory);\n\t\t}\n\n\t\treturn assetCategories;\n\t}","commit_id":"3d427e5ae34e0e66cc1aef348c2d164ecca4ee45","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic List<AssetVocabulary> getGroupVocabulariesByTitle(\n\t\t\tlong groupId, String title, int start, int end)\n\t\tthrows PortalException, SystemException {\n\n\t\tHits hits = null;\n\n\t\tList<AssetVocabulary> assetVocabularies =\n\t\t\t\t\t\tnew ArrayList<AssetVocabulary>();\n\n\t\thits = getHits(groupId, title, start, end);\n\n\t\tList<Document> documents = hits.toList();\n\n\t\tfor (Document document : documents) {\n\t\t\tlong vocabularyId = GetterUtil.getLong(\n\t\t\t\tdocument.get(\"vocabularyId\"));\n\n\t\t\tAssetVocabulary assetVocabulary = getVocabulary(vocabularyId);\n\n\t\t\tassetVocabularies.add(assetVocabulary);\n\t\t\t}\n\n\t\treturn assetVocabularies;\n\t}","id":63449,"modified_method":"@Override\n\tpublic List<AssetVocabulary> getGroupVocabulariesByTitle(\n\t\t\tlong groupId, String title, int start, int end)\n\t\tthrows PortalException, SystemException {\n\n\t\tHits hits = getHits(groupId, title, start, end);\n\n\t\tDocument[] documents = hits.getDocs();\n\n\t\tList<AssetVocabulary> assetVocabularies =\n\t\t\tnew ArrayList<AssetVocabulary>(documents.length);\n\n\t\tfor (Document document : documents) {\n\t\t\tlong vocabularyId = GetterUtil.getLong(\n\t\t\t\tdocument.get(\"vocabularyId\"));\n\n\t\t\tAssetVocabulary assetVocabulary = getVocabulary(vocabularyId);\n\n\t\t\tassetVocabularies.add(assetVocabulary);\n\t\t}\n\n\t\treturn assetVocabularies;\n\t}","commit_id":"3d427e5ae34e0e66cc1aef348c2d164ecca4ee45","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void addDeletion(SearchRequestBuilder searchRequest) {\n    searchRequest\n      .setScroll(TimeValue.timeValueMinutes(5))\n      .setSearchType(SearchType.SCAN)\n      // load only doc ids, not _source fields\n      .setFetchSource(false);\n\n    // this search is synchronous. An optimization would be to be non-blocking,\n    // but it requires to tracking pending requests in close().\n    // Same semaphore can't be reused because of potential deadlock (requires to acquire\n    // two locks)\n    SearchResponse searchResponse = searchRequest.get();\n    searchResponse = client.prepareSearchScroll(searchResponse.getScrollId()).get();\n    for (SearchHit hit : searchResponse.getHits()) {\n      add(client.prepareDelete(hit.index(), hit.type(), hit.getId()).request());\n    }\n  }","id":63450,"modified_method":"public void addDeletion(SearchRequestBuilder searchRequest) {\n    searchRequest\n      .setScroll(TimeValue.timeValueMinutes(5))\n      .setSearchType(SearchType.SCAN)\n      .setSize(100)\n      // load only doc ids, not _source fields\n      .setFetchSource(false);\n\n    // this search is synchronous. An optimization would be to be non-blocking,\n    // but it requires to tracking pending requests in close().\n    // Same semaphore can't be reused because of potential deadlock (requires to acquire\n    // two locks)\n    SearchResponse searchResponse = searchRequest.get();\n\n    while (true) {\n      searchResponse = client.prepareSearchScroll(searchResponse.getScrollId())\n        .setScroll(TimeValue.timeValueMinutes(5))\n        .get();\n      SearchHit[] hits = searchResponse.getHits().getHits();\n      for (SearchHit hit : hits) {\n        add(client.prepareDelete(hit.index(), hit.type(), hit.getId()).request());\n      }\n      if (hits.length == 0) {\n        break;\n      }\n    }\n  }","commit_id":"f17e51ced99a7f97f746305e3a90529a98eab04a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void add(ActionRequest request) {\n    bulkRequest.request().add(request);\n    if (bulkRequest.request().estimatedSizeInBytes() >= FLUSH_BYTE_SIZE) {\n      executeBulk();\n    }\n  }","id":63451,"modified_method":"public void add(ActionRequest request) {\n    bulkRequest.request().add(request);\n    if (bulkRequest.request().estimatedSizeInBytes() >= flushByteSize) {\n      executeBulk();\n    }\n  }","commit_id":"f17e51ced99a7f97f746305e3a90529a98eab04a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void large_indexing() throws Exception {\n    // index has one replica\n    assertThat(replicas()).isEqualTo(1);\n\n    BulkIndexer indexer = new BulkIndexer(esTester.client(), FakeIndexDefinition.INDEX)\n      .setLarge(true);\n    indexer.start();\n\n    // replicas are temporarily disabled\n    assertThat(replicas()).isEqualTo(0);\n\n    for (int i = 0; i < 10; i++) {\n      indexer.add(newIndexRequest(i));\n    }\n    indexer.stop();\n\n    assertThat(count()).isEqualTo(10);\n\n    // replicas are re-enabled\n    assertThat(replicas()).isEqualTo(1);\n  }","id":63452,"modified_method":"@Test\n  public void large_indexing() throws Exception {\n    // index has one replica\n    assertThat(replicas()).isEqualTo(1);\n\n    BulkIndexer indexer = new BulkIndexer(esTester.client(), FakeIndexDefinition.INDEX)\n      .setFlushByteSize(500)\n      .setLarge(true);\n    indexer.start();\n\n    // replicas are temporarily disabled\n    assertThat(replicas()).isEqualTo(0);\n\n    for (int i = 0; i < 10; i++) {\n      indexer.add(newIndexRequest(i));\n    }\n    indexer.stop();\n\n    assertThat(count()).isEqualTo(10);\n\n    // replicas are re-enabled\n    assertThat(replicas()).isEqualTo(1);\n  }","commit_id":"f17e51ced99a7f97f746305e3a90529a98eab04a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private static void commitPaxos(Commit proposal, ConsistencyLevel consistencyLevel) throws WriteTimeoutException\n    {\n        Keyspace keyspace = Keyspace.open(proposal.update.metadata().ksName);\n\n        Token tk = StorageService.getPartitioner().getToken(proposal.key);\n        List<InetAddress> naturalEndpoints = StorageService.instance.getNaturalEndpoints(keyspace.getName(), tk);\n        Collection<InetAddress> pendingEndpoints = StorageService.instance.getTokenMetadata().pendingEndpointsFor(tk, keyspace.getName());\n\n        AbstractReplicationStrategy rs = keyspace.getReplicationStrategy();\n        AbstractWriteResponseHandler responseHandler = rs.getWriteResponseHandler(naturalEndpoints, pendingEndpoints, consistencyLevel, null, WriteType.SIMPLE);\n\n        MessageOut<Commit> message = new MessageOut<Commit>(MessagingService.Verb.PAXOS_COMMIT, proposal, Commit.serializer);\n        for (InetAddress destination : Iterables.concat(naturalEndpoints, pendingEndpoints))\n        {\n            if (FailureDetector.instance.isAlive(destination))\n                MessagingService.instance().sendRR(message, destination, responseHandler);\n        }\n\n        responseHandler.get();\n    }","id":63453,"modified_method":"private static void commitPaxos(Commit proposal, ConsistencyLevel consistencyLevel) throws WriteTimeoutException\n    {\n        boolean shouldBlock = consistencyLevel != ConsistencyLevel.ANY;\n        Keyspace keyspace = Keyspace.open(proposal.update.metadata().ksName);\n\n        Token tk = StorageService.getPartitioner().getToken(proposal.key);\n        List<InetAddress> naturalEndpoints = StorageService.instance.getNaturalEndpoints(keyspace.getName(), tk);\n        Collection<InetAddress> pendingEndpoints = StorageService.instance.getTokenMetadata().pendingEndpointsFor(tk, keyspace.getName());\n\n        AbstractWriteResponseHandler responseHandler = null;\n        if (shouldBlock)\n        {\n            AbstractReplicationStrategy rs = keyspace.getReplicationStrategy();\n            responseHandler = rs.getWriteResponseHandler(naturalEndpoints, pendingEndpoints, consistencyLevel, null, WriteType.SIMPLE);\n        }\n\n        MessageOut<Commit> message = new MessageOut<Commit>(MessagingService.Verb.PAXOS_COMMIT, proposal, Commit.serializer);\n        for (InetAddress destination : Iterables.concat(naturalEndpoints, pendingEndpoints))\n        {\n            if (FailureDetector.instance.isAlive(destination))\n            {\n                if (shouldBlock)\n                    MessagingService.instance().sendRR(message, destination, responseHandler);\n                else\n                    MessagingService.instance().sendOneWay(message, destination);\n            }\n        }\n\n        if (shouldBlock)\n            responseHandler.get();\n    }","commit_id":"5d4740c5841c9c3a8d6c24578c1c6fb512524321","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Apply @param updates if and only if the current values in the row for @param key\n     * match the provided @param conditions.  The algorithm is \"raw\" Paxos: that is, Paxos\n     * minus leader election -- any node in the cluster may propose changes for any row,\n     * which (that is, the row) is the unit of values being proposed, not single columns.\n     *\n     * The Paxos cohort is only the replicas for the given key, not the entire cluster.\n     * So we expect performance to be reasonable, but CAS is still intended to be used\n     * \"when you really need it,\" not for all your updates.\n     *\n     * There are three phases to Paxos:\n     *  1. Prepare: the coordinator generates a ballot (timeUUID in our case) and asks replicas to (a) promise\n     *     not to accept updates from older ballots and (b) tell us about the most recent update it has already\n     *     accepted.\n     *  2. Accept: if a majority of replicas reply, the coordinator asks replicas to accept the value of the\n     *     highest proposal ballot it heard about, or a new value if no in-progress proposals were reported.\n     *  3. Commit (Learn): if a majority of replicas acknowledge the accept request, we can commit the new\n     *     value.\n     *\n     *  Commit procedure is not covered in \"Paxos Made Simple,\" and only briefly mentioned in \"Paxos Made Live,\"\n     *  so here is our approach:\n     *   3a. The coordinator sends a commit message to all replicas with the ballot and value.\n     *   3b. Because of 1-2, this will be the highest-seen commit ballot.  The replicas will note that,\n     *       and send it with subsequent promise replies.  This allows us to discard acceptance records\n     *       for successfully committed replicas, without allowing incomplete proposals to commit erroneously\n     *       later on.\n     *\n     *  Note that since we are performing a CAS rather than a simple update, we perform a read (of committed\n     *  values) between the prepare and accept phases.  This gives us a slightly longer window for another\n     *  coordinator to come along and trump our own promise with a newer one but is otherwise safe.\n     *\n     * @param keyspaceName the keyspace for the CAS\n     * @param cfName the column family for the CAS\n     * @param key the row key for the row to CAS\n     * @param conditions the conditions for the CAS to apply.\n     * @param updates the value to insert if {@code condtions} matches the current values.\n     * @param consistencyForPaxos the consistency for the paxos prepare and propose round. This can only be either SERIAL or LOCAL_SERIAL.\n     * @param consistencyForCommit the consistency for write done during the commit phase. This can be anything, except SERIAL or LOCAL_SERIAL.\n     *\n     * @return null if the operation succeeds in updating the row, or the current values corresponding to conditions.\n     * (since, if the CAS doesn't succeed, it means the current value do not match the conditions).\n     */\n    public static ColumnFamily cas(String keyspaceName,\n                                   String cfName,\n                                   ByteBuffer key,\n                                   CASConditions conditions,\n                                   ColumnFamily updates,\n                                   ConsistencyLevel consistencyForPaxos,\n                                   ConsistencyLevel consistencyForCommit)\n    throws UnavailableException, IsBootstrappingException, ReadTimeoutException, WriteTimeoutException, InvalidRequestException\n    {\n        consistencyForPaxos.validateForCas();\n        consistencyForCommit.validateForCasCommit(keyspaceName);\n\n        CFMetaData metadata = Schema.instance.getCFMetaData(keyspaceName, cfName);\n\n        long start = System.nanoTime();\n        long timeout = TimeUnit.MILLISECONDS.toNanos(DatabaseDescriptor.getCasContentionTimeout());\n        while (System.nanoTime() - start < timeout)\n        {\n            // for simplicity, we'll do a single liveness check at the start of each attempt\n            Pair<List<InetAddress>, Integer> p = getPaxosParticipants(keyspaceName, key, consistencyForPaxos);\n            List<InetAddress> liveEndpoints = p.left;\n            int requiredParticipants = p.right;\n\n            UUID ballot = beginAndRepairPaxos(start, key, metadata, liveEndpoints, requiredParticipants, consistencyForPaxos, consistencyForCommit);\n\n            // read the current values and check they validate the conditions\n            Tracing.trace(\"Reading existing values for CAS precondition\");\n            long timestamp = System.currentTimeMillis();\n            ReadCommand readCommand = ReadCommand.create(keyspaceName, key, cfName, timestamp, conditions.readFilter());\n            List<Row> rows = read(Arrays.asList(readCommand), consistencyForPaxos == ConsistencyLevel.LOCAL_SERIAL? ConsistencyLevel.LOCAL_QUORUM : ConsistencyLevel.QUORUM);\n            ColumnFamily current = rows.get(0).cf;\n            if (!conditions.appliesTo(current))\n            {\n                Tracing.trace(\"CAS precondition {} does not match current values {}\", conditions, current);\n                // We should not return null as this means success\n                return current == null ? EmptyColumns.factory.create(metadata) : current;\n            }\n\n            // finish the paxos round w/ the desired updates\n            // TODO turn null updates into delete?\n\n            // Apply triggers to cas updates. A consideration here is that\n            // triggers emit RowMutations, and so a given trigger implementation\n            // may generate mutations for partitions other than the one this\n            // paxos round is scoped for. In this case, TriggerExecutor will\n            // validate that the generated mutations are targetted at the same\n            // partition as the initial updates and reject (via an\n            // InvalidRequestException) any which aren't.\n            updates = TriggerExecutor.instance.execute(key, updates);\n\n            Commit proposal = Commit.newProposal(key, ballot, updates);\n            Tracing.trace(\"CAS precondition is met; proposing client-requested updates for {}\", ballot);\n            if (proposePaxos(proposal, liveEndpoints, requiredParticipants, true, consistencyForPaxos))\n            {\n                if (consistencyForCommit == ConsistencyLevel.ANY)\n                    sendCommit(proposal, liveEndpoints);\n                else\n                    commitPaxos(proposal, consistencyForCommit);\n                Tracing.trace(\"CAS successful\");\n                return null;\n            }\n\n            Tracing.trace(\"Paxos proposal not accepted (pre-empted by a higher ballot)\");\n            Uninterruptibles.sleepUninterruptibly(FBUtilities.threadLocalRandom().nextInt(100), TimeUnit.MILLISECONDS);\n            // continue to retry\n        }\n\n        throw new WriteTimeoutException(WriteType.CAS, consistencyForPaxos, 0, consistencyForPaxos.blockFor(Keyspace.open(keyspaceName)));\n    }","id":63454,"modified_method":"/**\n     * Apply @param updates if and only if the current values in the row for @param key\n     * match the provided @param conditions.  The algorithm is \"raw\" Paxos: that is, Paxos\n     * minus leader election -- any node in the cluster may propose changes for any row,\n     * which (that is, the row) is the unit of values being proposed, not single columns.\n     *\n     * The Paxos cohort is only the replicas for the given key, not the entire cluster.\n     * So we expect performance to be reasonable, but CAS is still intended to be used\n     * \"when you really need it,\" not for all your updates.\n     *\n     * There are three phases to Paxos:\n     *  1. Prepare: the coordinator generates a ballot (timeUUID in our case) and asks replicas to (a) promise\n     *     not to accept updates from older ballots and (b) tell us about the most recent update it has already\n     *     accepted.\n     *  2. Accept: if a majority of replicas reply, the coordinator asks replicas to accept the value of the\n     *     highest proposal ballot it heard about, or a new value if no in-progress proposals were reported.\n     *  3. Commit (Learn): if a majority of replicas acknowledge the accept request, we can commit the new\n     *     value.\n     *\n     *  Commit procedure is not covered in \"Paxos Made Simple,\" and only briefly mentioned in \"Paxos Made Live,\"\n     *  so here is our approach:\n     *   3a. The coordinator sends a commit message to all replicas with the ballot and value.\n     *   3b. Because of 1-2, this will be the highest-seen commit ballot.  The replicas will note that,\n     *       and send it with subsequent promise replies.  This allows us to discard acceptance records\n     *       for successfully committed replicas, without allowing incomplete proposals to commit erroneously\n     *       later on.\n     *\n     *  Note that since we are performing a CAS rather than a simple update, we perform a read (of committed\n     *  values) between the prepare and accept phases.  This gives us a slightly longer window for another\n     *  coordinator to come along and trump our own promise with a newer one but is otherwise safe.\n     *\n     * @param keyspaceName the keyspace for the CAS\n     * @param cfName the column family for the CAS\n     * @param key the row key for the row to CAS\n     * @param conditions the conditions for the CAS to apply.\n     * @param updates the value to insert if {@code condtions} matches the current values.\n     * @param consistencyForPaxos the consistency for the paxos prepare and propose round. This can only be either SERIAL or LOCAL_SERIAL.\n     * @param consistencyForCommit the consistency for write done during the commit phase. This can be anything, except SERIAL or LOCAL_SERIAL.\n     *\n     * @return null if the operation succeeds in updating the row, or the current values corresponding to conditions.\n     * (since, if the CAS doesn't succeed, it means the current value do not match the conditions).\n     */\n    public static ColumnFamily cas(String keyspaceName,\n                                   String cfName,\n                                   ByteBuffer key,\n                                   CASConditions conditions,\n                                   ColumnFamily updates,\n                                   ConsistencyLevel consistencyForPaxos,\n                                   ConsistencyLevel consistencyForCommit)\n    throws UnavailableException, IsBootstrappingException, ReadTimeoutException, WriteTimeoutException, InvalidRequestException\n    {\n        consistencyForPaxos.validateForCas();\n        consistencyForCommit.validateForCasCommit(keyspaceName);\n\n        CFMetaData metadata = Schema.instance.getCFMetaData(keyspaceName, cfName);\n\n        long start = System.nanoTime();\n        long timeout = TimeUnit.MILLISECONDS.toNanos(DatabaseDescriptor.getCasContentionTimeout());\n        while (System.nanoTime() - start < timeout)\n        {\n            // for simplicity, we'll do a single liveness check at the start of each attempt\n            Pair<List<InetAddress>, Integer> p = getPaxosParticipants(keyspaceName, key, consistencyForPaxos);\n            List<InetAddress> liveEndpoints = p.left;\n            int requiredParticipants = p.right;\n\n            UUID ballot = beginAndRepairPaxos(start, key, metadata, liveEndpoints, requiredParticipants, consistencyForPaxos, consistencyForCommit);\n\n            // read the current values and check they validate the conditions\n            Tracing.trace(\"Reading existing values for CAS precondition\");\n            long timestamp = System.currentTimeMillis();\n            ReadCommand readCommand = ReadCommand.create(keyspaceName, key, cfName, timestamp, conditions.readFilter());\n            List<Row> rows = read(Arrays.asList(readCommand), consistencyForPaxos == ConsistencyLevel.LOCAL_SERIAL? ConsistencyLevel.LOCAL_QUORUM : ConsistencyLevel.QUORUM);\n            ColumnFamily current = rows.get(0).cf;\n            if (!conditions.appliesTo(current))\n            {\n                Tracing.trace(\"CAS precondition {} does not match current values {}\", conditions, current);\n                // We should not return null as this means success\n                return current == null ? EmptyColumns.factory.create(metadata) : current;\n            }\n\n            // finish the paxos round w/ the desired updates\n            // TODO turn null updates into delete?\n\n            // Apply triggers to cas updates. A consideration here is that\n            // triggers emit RowMutations, and so a given trigger implementation\n            // may generate mutations for partitions other than the one this\n            // paxos round is scoped for. In this case, TriggerExecutor will\n            // validate that the generated mutations are targetted at the same\n            // partition as the initial updates and reject (via an\n            // InvalidRequestException) any which aren't.\n            updates = TriggerExecutor.instance.execute(key, updates);\n\n            Commit proposal = Commit.newProposal(key, ballot, updates);\n            Tracing.trace(\"CAS precondition is met; proposing client-requested updates for {}\", ballot);\n            if (proposePaxos(proposal, liveEndpoints, requiredParticipants, true, consistencyForPaxos))\n            {\n                commitPaxos(proposal, consistencyForCommit);\n                Tracing.trace(\"CAS successful\");\n                return null;\n            }\n\n            Tracing.trace(\"Paxos proposal not accepted (pre-empted by a higher ballot)\");\n            Uninterruptibles.sleepUninterruptibly(FBUtilities.threadLocalRandom().nextInt(100), TimeUnit.MILLISECONDS);\n            // continue to retry\n        }\n\n        throw new WriteTimeoutException(WriteType.CAS, consistencyForPaxos, 0, consistencyForPaxos.blockFor(Keyspace.open(keyspaceName)));\n    }","commit_id":"5d4740c5841c9c3a8d6c24578c1c6fb512524321","url":"https://github.com/apache/cassandra"},{"original_method":"private static void commitPaxos(Commit proposal, ConsistencyLevel consistencyLevel) throws WriteTimeoutException\n    {\n        Keyspace keyspace = Keyspace.open(proposal.update.metadata().ksName);\n\n        Token tk = StorageService.getPartitioner().getToken(proposal.key);\n        List<InetAddress> naturalEndpoints = StorageService.instance.getNaturalEndpoints(keyspace.getName(), tk);\n        Collection<InetAddress> pendingEndpoints = StorageService.instance.getTokenMetadata().pendingEndpointsFor(tk, keyspace.getName());\n\n        AbstractReplicationStrategy rs = keyspace.getReplicationStrategy();\n        AbstractWriteResponseHandler responseHandler = rs.getWriteResponseHandler(naturalEndpoints, pendingEndpoints, consistencyLevel, null, WriteType.SIMPLE);\n\n        MessageOut<Commit> message = new MessageOut<Commit>(MessagingService.Verb.PAXOS_COMMIT, proposal, Commit.serializer);\n        for (InetAddress destination : Iterables.concat(naturalEndpoints, pendingEndpoints))\n        {\n            if (FailureDetector.instance.isAlive(destination))\n                MessagingService.instance().sendRR(message, destination, responseHandler);\n        }\n\n        responseHandler.get();\n    }","id":63455,"modified_method":"private static void commitPaxos(Commit proposal, ConsistencyLevel consistencyLevel) throws WriteTimeoutException\n    {\n        boolean shouldBlock = consistencyLevel != ConsistencyLevel.ANY;\n        Keyspace keyspace = Keyspace.open(proposal.update.metadata().ksName);\n\n        Token tk = StorageService.getPartitioner().getToken(proposal.key);\n        List<InetAddress> naturalEndpoints = StorageService.instance.getNaturalEndpoints(keyspace.getName(), tk);\n        Collection<InetAddress> pendingEndpoints = StorageService.instance.getTokenMetadata().pendingEndpointsFor(tk, keyspace.getName());\n\n        AbstractWriteResponseHandler responseHandler = null;\n        if (shouldBlock)\n        {\n            AbstractReplicationStrategy rs = keyspace.getReplicationStrategy();\n            responseHandler = rs.getWriteResponseHandler(naturalEndpoints, pendingEndpoints, consistencyLevel, null, WriteType.SIMPLE);\n        }\n\n        MessageOut<Commit> message = new MessageOut<Commit>(MessagingService.Verb.PAXOS_COMMIT, proposal, Commit.serializer);\n        for (InetAddress destination : Iterables.concat(naturalEndpoints, pendingEndpoints))\n        {\n            if (FailureDetector.instance.isAlive(destination))\n            {\n                if (shouldBlock)\n                    MessagingService.instance().sendRR(message, destination, responseHandler);\n                else\n                    MessagingService.instance().sendOneWay(message, destination);\n            }\n        }\n\n        if (shouldBlock)\n            responseHandler.get();\n    }","commit_id":"536a08c29773548203845ad562e278e899b35a4d","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Apply @param updates if and only if the current values in the row for @param key\n     * match the provided @param conditions.  The algorithm is \"raw\" Paxos: that is, Paxos\n     * minus leader election -- any node in the cluster may propose changes for any row,\n     * which (that is, the row) is the unit of values being proposed, not single columns.\n     *\n     * The Paxos cohort is only the replicas for the given key, not the entire cluster.\n     * So we expect performance to be reasonable, but CAS is still intended to be used\n     * \"when you really need it,\" not for all your updates.\n     *\n     * There are three phases to Paxos:\n     *  1. Prepare: the coordinator generates a ballot (timeUUID in our case) and asks replicas to (a) promise\n     *     not to accept updates from older ballots and (b) tell us about the most recent update it has already\n     *     accepted.\n     *  2. Accept: if a majority of replicas reply, the coordinator asks replicas to accept the value of the\n     *     highest proposal ballot it heard about, or a new value if no in-progress proposals were reported.\n     *  3. Commit (Learn): if a majority of replicas acknowledge the accept request, we can commit the new\n     *     value.\n     *\n     *  Commit procedure is not covered in \"Paxos Made Simple,\" and only briefly mentioned in \"Paxos Made Live,\"\n     *  so here is our approach:\n     *   3a. The coordinator sends a commit message to all replicas with the ballot and value.\n     *   3b. Because of 1-2, this will be the highest-seen commit ballot.  The replicas will note that,\n     *       and send it with subsequent promise replies.  This allows us to discard acceptance records\n     *       for successfully committed replicas, without allowing incomplete proposals to commit erroneously\n     *       later on.\n     *\n     *  Note that since we are performing a CAS rather than a simple update, we perform a read (of committed\n     *  values) between the prepare and accept phases.  This gives us a slightly longer window for another\n     *  coordinator to come along and trump our own promise with a newer one but is otherwise safe.\n     *\n     * @param keyspaceName the keyspace for the CAS\n     * @param cfName the column family for the CAS\n     * @param key the row key for the row to CAS\n     * @param request the conditions for the CAS to apply as well as the update to perform if the conditions hold.\n     * @param consistencyForPaxos the consistency for the paxos prepare and propose round. This can only be either SERIAL or LOCAL_SERIAL.\n     * @param consistencyForCommit the consistency for write done during the commit phase. This can be anything, except SERIAL or LOCAL_SERIAL.\n     *\n     * @return null if the operation succeeds in updating the row, or the current values corresponding to conditions.\n     * (since, if the CAS doesn't succeed, it means the current value do not match the conditions).\n     */\n    public static ColumnFamily cas(String keyspaceName,\n                                   String cfName,\n                                   ByteBuffer key,\n                                   CASRequest request,\n                                   ConsistencyLevel consistencyForPaxos,\n                                   ConsistencyLevel consistencyForCommit)\n    throws UnavailableException, IsBootstrappingException, ReadTimeoutException, WriteTimeoutException, InvalidRequestException\n    {\n        consistencyForPaxos.validateForCas();\n        consistencyForCommit.validateForCasCommit(keyspaceName);\n\n        CFMetaData metadata = Schema.instance.getCFMetaData(keyspaceName, cfName);\n\n        long start = System.nanoTime();\n        long timeout = TimeUnit.MILLISECONDS.toNanos(DatabaseDescriptor.getCasContentionTimeout());\n        while (System.nanoTime() - start < timeout)\n        {\n            // for simplicity, we'll do a single liveness check at the start of each attempt\n            Pair<List<InetAddress>, Integer> p = getPaxosParticipants(keyspaceName, key, consistencyForPaxos);\n            List<InetAddress> liveEndpoints = p.left;\n            int requiredParticipants = p.right;\n\n            UUID ballot = beginAndRepairPaxos(start, key, metadata, liveEndpoints, requiredParticipants, consistencyForPaxos, consistencyForCommit);\n\n            // read the current values and check they validate the conditions\n            Tracing.trace(\"Reading existing values for CAS precondition\");\n            long timestamp = System.currentTimeMillis();\n            ReadCommand readCommand = ReadCommand.create(keyspaceName, key, cfName, timestamp, request.readFilter());\n            List<Row> rows = read(Arrays.asList(readCommand), consistencyForPaxos == ConsistencyLevel.LOCAL_SERIAL? ConsistencyLevel.LOCAL_QUORUM : ConsistencyLevel.QUORUM);\n            ColumnFamily current = rows.get(0).cf;\n            if (!request.appliesTo(current))\n            {\n                Tracing.trace(\"CAS precondition does not match current values {}\", current);\n                // We should not return null as this means success\n                return current == null ? ArrayBackedSortedColumns.factory.create(metadata) : current;\n            }\n\n            // finish the paxos round w/ the desired updates\n            // TODO turn null updates into delete?\n            ColumnFamily updates = request.makeUpdates(current);\n\n            // Apply triggers to cas updates. A consideration here is that\n            // triggers emit Mutations, and so a given trigger implementation\n            // may generate mutations for partitions other than the one this\n            // paxos round is scoped for. In this case, TriggerExecutor will\n            // validate that the generated mutations are targetted at the same\n            // partition as the initial updates and reject (via an\n            // InvalidRequestException) any which aren't.\n            updates = TriggerExecutor.instance.execute(key, updates);\n\n            Commit proposal = Commit.newProposal(key, ballot, updates);\n            Tracing.trace(\"CAS precondition is met; proposing client-requested updates for {}\", ballot);\n            if (proposePaxos(proposal, liveEndpoints, requiredParticipants, true, consistencyForPaxos))\n            {\n                if (consistencyForCommit == ConsistencyLevel.ANY)\n                    sendCommit(proposal, liveEndpoints);\n                else\n                    commitPaxos(proposal, consistencyForCommit);\n                Tracing.trace(\"CAS successful\");\n                return null;\n            }\n\n            Tracing.trace(\"Paxos proposal not accepted (pre-empted by a higher ballot)\");\n            Uninterruptibles.sleepUninterruptibly(FBUtilities.threadLocalRandom().nextInt(100), TimeUnit.MILLISECONDS);\n            // continue to retry\n        }\n\n        throw new WriteTimeoutException(WriteType.CAS, consistencyForPaxos, 0, consistencyForPaxos.blockFor(Keyspace.open(keyspaceName)));\n    }","id":63456,"modified_method":"/**\n     * Apply @param updates if and only if the current values in the row for @param key\n     * match the provided @param conditions.  The algorithm is \"raw\" Paxos: that is, Paxos\n     * minus leader election -- any node in the cluster may propose changes for any row,\n     * which (that is, the row) is the unit of values being proposed, not single columns.\n     *\n     * The Paxos cohort is only the replicas for the given key, not the entire cluster.\n     * So we expect performance to be reasonable, but CAS is still intended to be used\n     * \"when you really need it,\" not for all your updates.\n     *\n     * There are three phases to Paxos:\n     *  1. Prepare: the coordinator generates a ballot (timeUUID in our case) and asks replicas to (a) promise\n     *     not to accept updates from older ballots and (b) tell us about the most recent update it has already\n     *     accepted.\n     *  2. Accept: if a majority of replicas reply, the coordinator asks replicas to accept the value of the\n     *     highest proposal ballot it heard about, or a new value if no in-progress proposals were reported.\n     *  3. Commit (Learn): if a majority of replicas acknowledge the accept request, we can commit the new\n     *     value.\n     *\n     *  Commit procedure is not covered in \"Paxos Made Simple,\" and only briefly mentioned in \"Paxos Made Live,\"\n     *  so here is our approach:\n     *   3a. The coordinator sends a commit message to all replicas with the ballot and value.\n     *   3b. Because of 1-2, this will be the highest-seen commit ballot.  The replicas will note that,\n     *       and send it with subsequent promise replies.  This allows us to discard acceptance records\n     *       for successfully committed replicas, without allowing incomplete proposals to commit erroneously\n     *       later on.\n     *\n     *  Note that since we are performing a CAS rather than a simple update, we perform a read (of committed\n     *  values) between the prepare and accept phases.  This gives us a slightly longer window for another\n     *  coordinator to come along and trump our own promise with a newer one but is otherwise safe.\n     *\n     * @param keyspaceName the keyspace for the CAS\n     * @param cfName the column family for the CAS\n     * @param key the row key for the row to CAS\n     * @param request the conditions for the CAS to apply as well as the update to perform if the conditions hold.\n     * @param consistencyForPaxos the consistency for the paxos prepare and propose round. This can only be either SERIAL or LOCAL_SERIAL.\n     * @param consistencyForCommit the consistency for write done during the commit phase. This can be anything, except SERIAL or LOCAL_SERIAL.\n     *\n     * @return null if the operation succeeds in updating the row, or the current values corresponding to conditions.\n     * (since, if the CAS doesn't succeed, it means the current value do not match the conditions).\n     */\n    public static ColumnFamily cas(String keyspaceName,\n                                   String cfName,\n                                   ByteBuffer key,\n                                   CASRequest request,\n                                   ConsistencyLevel consistencyForPaxos,\n                                   ConsistencyLevel consistencyForCommit)\n    throws UnavailableException, IsBootstrappingException, ReadTimeoutException, WriteTimeoutException, InvalidRequestException\n    {\n        consistencyForPaxos.validateForCas();\n        consistencyForCommit.validateForCasCommit(keyspaceName);\n\n        CFMetaData metadata = Schema.instance.getCFMetaData(keyspaceName, cfName);\n\n        long start = System.nanoTime();\n        long timeout = TimeUnit.MILLISECONDS.toNanos(DatabaseDescriptor.getCasContentionTimeout());\n        while (System.nanoTime() - start < timeout)\n        {\n            // for simplicity, we'll do a single liveness check at the start of each attempt\n            Pair<List<InetAddress>, Integer> p = getPaxosParticipants(keyspaceName, key, consistencyForPaxos);\n            List<InetAddress> liveEndpoints = p.left;\n            int requiredParticipants = p.right;\n\n            UUID ballot = beginAndRepairPaxos(start, key, metadata, liveEndpoints, requiredParticipants, consistencyForPaxos, consistencyForCommit);\n\n            // read the current values and check they validate the conditions\n            Tracing.trace(\"Reading existing values for CAS precondition\");\n            long timestamp = System.currentTimeMillis();\n            ReadCommand readCommand = ReadCommand.create(keyspaceName, key, cfName, timestamp, request.readFilter());\n            List<Row> rows = read(Arrays.asList(readCommand), consistencyForPaxos == ConsistencyLevel.LOCAL_SERIAL? ConsistencyLevel.LOCAL_QUORUM : ConsistencyLevel.QUORUM);\n            ColumnFamily current = rows.get(0).cf;\n            if (!request.appliesTo(current))\n            {\n                Tracing.trace(\"CAS precondition does not match current values {}\", current);\n                // We should not return null as this means success\n                return current == null ? ArrayBackedSortedColumns.factory.create(metadata) : current;\n            }\n\n            // finish the paxos round w/ the desired updates\n            // TODO turn null updates into delete?\n            ColumnFamily updates = request.makeUpdates(current);\n\n            // Apply triggers to cas updates. A consideration here is that\n            // triggers emit Mutations, and so a given trigger implementation\n            // may generate mutations for partitions other than the one this\n            // paxos round is scoped for. In this case, TriggerExecutor will\n            // validate that the generated mutations are targetted at the same\n            // partition as the initial updates and reject (via an\n            // InvalidRequestException) any which aren't.\n            updates = TriggerExecutor.instance.execute(key, updates);\n\n            Commit proposal = Commit.newProposal(key, ballot, updates);\n            Tracing.trace(\"CAS precondition is met; proposing client-requested updates for {}\", ballot);\n            if (proposePaxos(proposal, liveEndpoints, requiredParticipants, true, consistencyForPaxos))\n            {\n                commitPaxos(proposal, consistencyForCommit);\n                Tracing.trace(\"CAS successful\");\n                return null;\n            }\n\n            Tracing.trace(\"Paxos proposal not accepted (pre-empted by a higher ballot)\");\n            Uninterruptibles.sleepUninterruptibly(FBUtilities.threadLocalRandom().nextInt(100), TimeUnit.MILLISECONDS);\n            // continue to retry\n        }\n\n        throw new WriteTimeoutException(WriteType.CAS, consistencyForPaxos, 0, consistencyForPaxos.blockFor(Keyspace.open(keyspaceName)));\n    }","commit_id":"536a08c29773548203845ad562e278e899b35a4d","url":"https://github.com/apache/cassandra"},{"original_method":"public List<String> get_key_range(String tablename, String columnFamily, String startWith, String stopAt, int maxResults) throws InvalidRequestException, TException\n    {\n        if (logger.isDebugEnabled())\n            logger.debug(\"get_key_range\");\n        ThriftValidation.validateCommand(tablename, columnFamily);\n        if (!(StorageService.getPartitioner() instanceof OrderPreservingPartitioner))\n        {\n            throw new InvalidRequestException(\"range queries may only be performed against an order-preserving partitioner\");\n        }\n        if (maxResults <= 0)\n        {\n            throw new InvalidRequestException(\"maxResults must be positive\");\n        }\n\n        return StorageProxy.getKeyRange(new RangeCommand(tablename, columnFamily, startWith, stopAt, maxResults));\n    }","id":63457,"modified_method":"public List<String> get_key_range(String tablename, String columnFamily, String startWith, String stopAt, int maxResults) throws InvalidRequestException, TException\n    {\n        if (logger.isDebugEnabled())\n            logger.debug(\"get_key_range\");\n        ThriftValidation.validateCommand(tablename, columnFamily);\n        if (!(StorageService.getPartitioner() instanceof OrderPreservingPartitioner))\n        {\n            throw new InvalidRequestException(\"range queries may only be performed against an order-preserving partitioner\");\n        }\n        if (maxResults <= 0)\n        {\n            throw new InvalidRequestException(\"maxResults must be positive\");\n        }\n\n        try\n        {\n            return StorageProxy.getKeyRange(new RangeCommand(tablename, columnFamily, startWith, stopAt, maxResults));\n        }\n        catch (IOException e)\n        {\n            throw new RuntimeException(e);\n        }\n    }","commit_id":"449a444c7d1cfa13e1a7d25865227e1ba8c300e2","url":"https://github.com/apache/cassandra"},{"original_method":"public void doVerb(Message message)\n    {\n        RangeReply rangeReply;\n        try\n        {\n            RangeCommand command = RangeCommand.read(message);\n            Table table = Table.open(command.table);\n\n            rangeReply = table.getKeyRange(command.columnFamily, command.startWith, command.stopAt, command.maxResults);\n            Message response = rangeReply.getReply(message);\n            MessagingService.getMessagingInstance().sendOneWay(response, message.getFrom());\n        }\n        catch (Exception e)\n        {\n            throw new RuntimeException(e);\n        }\n    }","id":63458,"modified_method":"public void doVerb(Message message)\n    {\n        try\n        {\n            RangeCommand command = RangeCommand.read(message);\n            Table table = Table.open(command.table);\n\n            RangeReply rangeReply = table.getKeyRange(command.columnFamily, command.startWith, command.stopAt, command.maxResults);\n            Message response = rangeReply.getReply(message);\n            if (logger.isDebugEnabled())\n                logger.debug(\"Sending \" + rangeReply + \" to \" + message.getMessageId() + \"@\" + message.getFrom());\n            MessagingService.getMessagingInstance().sendOneWay(response, message.getFrom());\n        }\n        catch (Exception e)\n        {\n            throw new RuntimeException(e);\n        }\n    }","commit_id":"449a444c7d1cfa13e1a7d25865227e1ba8c300e2","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * This is a multiget version of the above method.\n     * @param tablename\n     * @param keys\n     * @param columnFamily\n     * @param start\n     * @param count\n     * @return\n     * @throws IOException\n     * @throws TimeoutException\n     */\n    public static Map<String, Row> strongReadProtocol(String[] keys, ReadCommand readCommand) throws IOException, TimeoutException\n    {       \n        Map<String, Row> rows;\n        // TODO: throw a thrift exception if we do not have N nodes\n        Map<String, ReadCommand[]> readMessages = new HashMap<String, ReadCommand[]>();\n        for (String key : keys )\n        {\n            ReadCommand[] readParameters = new ReadCommand[2];\n            readParameters[0] = readCommand.copy();\n            readParameters[1] = readCommand.copy();\n            readParameters[1].setDigestQuery(true);\n            readMessages.put(key, readParameters);\n        }        \n        rows = doStrongReadProtocol(readMessages);         \n        return rows;\n    }","id":63459,"modified_method":"/**\n     * This is a multiget version of the above method.\n     */\n    public static Map<String, Row> strongReadProtocol(String[] keys, ReadCommand readCommand) throws IOException, TimeoutException\n    {       \n        Map<String, Row> rows;\n        // TODO: throw a thrift exception if we do not have N nodes\n        Map<String, ReadCommand[]> readMessages = new HashMap<String, ReadCommand[]>();\n        for (String key : keys )\n        {\n            ReadCommand[] readParameters = new ReadCommand[2];\n            readParameters[0] = readCommand.copy();\n            readParameters[1] = readCommand.copy();\n            readParameters[1].setDigestQuery(true);\n            readMessages.put(key, readParameters);\n        }        \n        rows = doStrongReadProtocol(readMessages);         \n        return rows;\n    }","commit_id":"449a444c7d1cfa13e1a7d25865227e1ba8c300e2","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * This version is used when results for multiple keys needs to be\n     * retrieved.\n     * \n     * @param tablename name of the table that needs to be queried\n     * @param keys keys whose values we are interested in \n     * @param columnFamily name of the \"column\" we are interested in\n     * @param columns the columns we are interested in\n     * @return a mapping of key --> Row\n     * @throws Exception\n     */\n    public static Map<String, Row> weakReadProtocol(String[] keys, ReadCommand readCommand) throws Exception\n    {\n        Row row = null;\n        Map<String, ReadCommand> readMessages = new HashMap<String, ReadCommand>();\n        for ( String key : keys )\n        {\n            ReadCommand readCmd = readCommand.copy();\n            readMessages.put(key, readCmd);\n        }\n        /* Performs the multiget in parallel */\n        Map<String, Row> rows = doReadProtocol(readMessages);\n        /*\n         * Do the consistency checks for the keys that are being queried\n         * in the background.\n        */\n        for ( String key : keys )\n        {\n            List<EndPoint> endpoints = StorageService.instance().getNLiveStorageEndPoint(key);\n            /* Remove the local storage endpoint from the list. */\n            endpoints.remove( StorageService.getLocalStorageEndPoint() );\n            if ( endpoints.size() > 0 && DatabaseDescriptor.getConsistencyCheck())\n                StorageService.instance().doConsistencyCheck(row, endpoints, readMessages.get(key));\n        }\n        return rows;\n    }","id":63460,"modified_method":"/**\n     * This version is used when results for multiple keys needs to be\n     * retrieved.\n     * \n     * @return a mapping of key --> Row\n     * @throws Exception\n     */\n    public static Map<String, Row> weakReadProtocol(String[] keys, ReadCommand readCommand) throws Exception\n    {\n        Row row = null;\n        Map<String, ReadCommand> readMessages = new HashMap<String, ReadCommand>();\n        for ( String key : keys )\n        {\n            ReadCommand readCmd = readCommand.copy();\n            readMessages.put(key, readCmd);\n        }\n        /* Performs the multiget in parallel */\n        Map<String, Row> rows = doReadProtocol(readMessages);\n        /*\n         * Do the consistency checks for the keys that are being queried\n         * in the background.\n        */\n        for ( String key : keys )\n        {\n            List<EndPoint> endpoints = StorageService.instance().getNLiveStorageEndPoint(key);\n            /* Remove the local storage endpoint from the list. */\n            endpoints.remove( StorageService.getLocalStorageEndPoint() );\n            if ( endpoints.size() > 0 && DatabaseDescriptor.getConsistencyCheck())\n                StorageService.instance().doConsistencyCheck(row, endpoints, readMessages.get(key));\n        }\n        return rows;\n    }","commit_id":"449a444c7d1cfa13e1a7d25865227e1ba8c300e2","url":"https://github.com/apache/cassandra"},{"original_method":"static List<String> getKeyRange(RangeCommand command)\n    {\n        long startTime = System.currentTimeMillis();\n        int endpointOffset = 0;\n        List<String> allKeys = new ArrayList<String>();\n        int maxResults = command.maxResults;\n\n        try\n        {\n            EndPoint endPoint = StorageService.instance().findSuitableEndPoint(command.startWith, endpointOffset);\n            String firstEndpoint = endPoint.toString();\n\n            do\n            {\n                IAsyncResult iar = MessagingService.getMessagingInstance().sendRR(command.getMessage(), endPoint);\n\n                // read response\n                byte[] responseBody = iar.get(DatabaseDescriptor.getRpcTimeout(), TimeUnit.MILLISECONDS);\n                RangeReply rangeReply = RangeReply.read(responseBody);\n                List<String> rangeKeys = rangeReply.keys;\n\n                // deal with key overlaps\n                if (allKeys.size() > 0 && rangeKeys != null && rangeKeys.size() > 0 && allKeys.get(allKeys.size() - 1).equals(rangeKeys.get(0)))\n                {\n                    allKeys.remove(allKeys.size() - 1);\n                    allKeys.addAll(rangeKeys);\n                }\n                else if (rangeKeys != null && rangeKeys.size() > 0)\n                {\n                    allKeys.addAll(rangeKeys);\n                }\n\n                if (allKeys.size() >= maxResults || rangeReply.rangeCompletedLocally)\n                {\n                    break;\n                }\n\n                String newStartAt = (allKeys.size() > 0) ? allKeys.get(allKeys.size() - 1) : command.stopAt;\n\n                command = new RangeCommand(command.table, command.columnFamily,\n                                           newStartAt, command.stopAt,\n                                           command.maxResults - rangeKeys.size());\n\n                endPoint = StorageService.instance().findSuitableEndPoint(command.startWith, ++endpointOffset);\n            } while (!endPoint.toString().equals(firstEndpoint));\n\n            return (allKeys.size() > maxResults)\n                   ? allKeys.subList(0, maxResults)\n                   : allKeys;\n        }\n        catch (Exception e)\n        {\n            throw new RuntimeException(\"error reading keyrange \" + command, e);\n        }\n        finally\n        {\n            rangeStats.add(System.currentTimeMillis() - startTime);\n        }\n    }","id":63461,"modified_method":"static List<String> getKeyRange(RangeCommand command) throws IOException\n    {\n        long startTime = System.currentTimeMillis();\n        int endpointOffset = 0;\n        List<String> allKeys = new ArrayList<String>();\n        int maxResults = command.maxResults;\n\n        EndPoint endPoint = StorageService.instance().findSuitableEndPoint(command.startWith, endpointOffset);\n        String firstEndpoint = endPoint.toString();\n\n        do\n        {\n            Message message = command.getMessage();\n            if (logger.isDebugEnabled())\n                logger.debug(\"reading \" + command + \" from \" + message.getMessageId() + \"@\" + endPoint);\n            IAsyncResult iar = MessagingService.getMessagingInstance().sendRR(message, endPoint);\n\n            // read response\n            byte[] responseBody = new byte[0];\n            try\n            {\n                responseBody = iar.get(DatabaseDescriptor.getRpcTimeout(), TimeUnit.MILLISECONDS);\n            }\n            catch (TimeoutException e)\n            {\n                throw new RuntimeException(e);\n            }\n            RangeReply rangeReply = RangeReply.read(responseBody);\n            List<String> rangeKeys = rangeReply.keys;\n\n            // deal with key overlaps\n            if (allKeys.size() > 0 && rangeKeys != null && rangeKeys.size() > 0 && allKeys.get(allKeys.size() - 1).equals(rangeKeys.get(0)))\n            {\n                allKeys.remove(allKeys.size() - 1);\n                allKeys.addAll(rangeKeys);\n            }\n            else if (rangeKeys != null && rangeKeys.size() > 0)\n            {\n                allKeys.addAll(rangeKeys);\n            }\n\n            if (allKeys.size() >= maxResults || rangeReply.rangeCompletedLocally)\n            {\n                break;\n            }\n\n            String newStartWith = (allKeys.size() > 0) ? allKeys.get(allKeys.size() - 1) : command.startWith;\n            command = new RangeCommand(command.table, command.columnFamily, newStartWith, command.stopAt, command.maxResults - allKeys.size());\n            endPoint = StorageService.instance().findSuitableEndPoint(command.startWith, ++endpointOffset);\n        } while (!endPoint.toString().equals(firstEndpoint));\n\n        rangeStats.add(System.currentTimeMillis() - startTime);\n        return (allKeys.size() > maxResults)\n               ? allKeys.subList(0, maxResults)\n               : allKeys;\n    }","commit_id":"449a444c7d1cfa13e1a7d25865227e1ba8c300e2","url":"https://github.com/apache/cassandra"},{"original_method":"private void exportDocument( BackupWriter output, Date date, BackupDescriptor prevBackup, SAXSerializer serializer, int docsCount, int count, DocumentImpl doc ) throws IOException, SAXException, TerminatedException\n    {\n        if( callback != null ) {\n            callback.startDocument( doc.getFileURI().toString(), count, docsCount );\n        }\n\n        if( ( monitor != null ) && !monitor.proceed() ) {\n            throw( new TerminatedException( \"system export terminated by db\" ) );\n        }\n        boolean needsBackup = ( prevBackup == null ) || ( date.getTime() < doc.getMetadata().getLastModified() );\n\n        if( needsBackup ) {\n            OutputStream os = output.newEntry( Backup.encode( URIUtils.urlDecodeUtf8( doc.getFileURI() ) ) );\n\n            try {\n\n                if( doc.getResourceType() == DocumentImpl.BINARY_FILE ) {\n                    broker.readBinaryResource( (BinaryDocument)doc, os );\n                } else {\n                    BufferedWriter writer            = new BufferedWriter( new OutputStreamWriter( os, \"UTF-8\" ) );\n\n                    // write resource to contentSerializer\n                    SAXSerializer  contentSerializer = (SAXSerializer)SerializerPool.getInstance().borrowObject( SAXSerializer.class );\n                    contentSerializer.setOutput( writer, defaultOutputProperties );\n                    writeXML( doc, contentSerializer );\n                    SerializerPool.getInstance().returnObject( contentSerializer );\n                    writer.flush();\n                }\n            }\n            catch( Exception e ) {\n                reportError( \"A write error occurred while exporting document: '\" + doc.getFileURI() + \"'. Continuing with next document.\", e );\n                return;\n            }\n            finally {\n                output.closeEntry();\n            }\n        }\n\n        // store permissions\n        AttributesImpl attr = new AttributesImpl();\n        attr.addAttribute( Namespaces.EXIST_NS, \"type\", \"type\", \"CDATA\", ( doc.getResourceType() == DocumentImpl.BINARY_FILE ) ? \"BinaryResource\" : \"XMLResource\" );\n        attr.addAttribute( Namespaces.EXIST_NS, \"name\", \"name\", \"CDATA\", doc.getFileURI().toString() );\n        attr.addAttribute( Namespaces.EXIST_NS, \"skip\", \"skip\", \"CDATA\", ( needsBackup ? \"no\" : \"yes\" ) );\n        attr.addAttribute( Namespaces.EXIST_NS, \"owner\", \"owner\", \"CDATA\", doc.getPermissions().getOwner().getName() );\n        attr.addAttribute( Namespaces.EXIST_NS, \"group\", \"group\", \"CDATA\", doc.getPermissions().getGroup().getName() );\n        attr.addAttribute( Namespaces.EXIST_NS, \"mode\", \"mode\", \"CDATA\", Integer.toOctalString( doc.getPermissions().getMode() ) );\n\n        // be careful when accessing document metadata: it is stored in a\n        // different place than the\n        // main document info and could thus be damaged\n        DocumentMetadata metadata = null;\n\n        try {\n            metadata = doc.getMetadata();\n        }\n        catch( Exception e ) {\n            // LOG.warn(e.getMessage(), e);\n        }\n\n        try {\n            String created;\n            String modified;\n\n            // metadata could be damaged\n            if( metadata != null ) {\n                created  = new DateTimeValue( new Date( metadata.getCreated() ) ).getStringValue();\n                modified = new DateTimeValue( new Date( metadata.getLastModified() ) ).getStringValue();\n            } else {\n                created  = new DateTimeValue().getStringValue();\n                modified = created;\n            }\n            attr.addAttribute( Namespaces.EXIST_NS, \"created\", \"created\", \"CDATA\", created );\n            attr.addAttribute( Namespaces.EXIST_NS, \"modified\", \"modified\", \"CDATA\", modified );\n        }\n        catch( XPathException e ) {\n            LOG.warn( e.getMessage(), e );\n        }\n\n        attr.addAttribute( Namespaces.EXIST_NS, \"filename\", \"filename\", \"CDATA\", Backup.encode( URIUtils.urlDecodeUtf8( doc.getFileURI() ) ) );\n        String mimeType = \"application/xml\";\n\n        if( ( metadata != null ) && ( metadata.getMimeType() != null ) ) {\n            mimeType = Backup.encode( metadata.getMimeType() );\n        }\n        attr.addAttribute( Namespaces.EXIST_NS, \"mimetype\", \"mimetype\", \"CDATA\", mimeType );\n\n        if( ( doc.getResourceType() == DocumentImpl.XML_FILE ) && ( metadata != null ) && ( doc.getDoctype() != null ) ) {\n\n            if( doc.getDoctype().getName() != null ) {\n                attr.addAttribute( Namespaces.EXIST_NS, \"namedoctype\", \"namedoctype\", \"CDATA\", doc.getDoctype().getName() );\n            }\n\n            if( doc.getDoctype().getPublicId() != null ) {\n                attr.addAttribute( Namespaces.EXIST_NS, \"publicid\", \"publicid\", \"CDATA\", doc.getDoctype().getPublicId() );\n            }\n\n            if( doc.getDoctype().getSystemId() != null ) {\n                attr.addAttribute( Namespaces.EXIST_NS, \"systemid\", \"systemid\", \"CDATA\", doc.getDoctype().getSystemId() );\n            }\n        }\n        serializer.startElement( Namespaces.EXIST_NS, \"resource\", \"resource\", attr );\n        serializer.endElement( Namespaces.EXIST_NS, \"resource\", \"resource\" );\n    }","id":63462,"modified_method":"private void exportDocument( BackupWriter output, Date date, BackupDescriptor prevBackup, SAXSerializer serializer, int docsCount, int count, DocumentImpl doc ) throws IOException, SAXException, TerminatedException\n    {\n        if( callback != null ) {\n            callback.startDocument( doc.getFileURI().toString(), count, docsCount );\n        }\n\n        if( ( monitor != null ) && !monitor.proceed() ) {\n            throw( new TerminatedException( \"system export terminated by db\" ) );\n        }\n        boolean needsBackup = ( prevBackup == null ) || ( date.getTime() < doc.getMetadata().getLastModified() );\n\n        if( needsBackup ) {\n            OutputStream os = output.newEntry( Backup.encode( URIUtils.urlDecodeUtf8( doc.getFileURI() ) ) );\n\n            try {\n\n                if( doc.getResourceType() == DocumentImpl.BINARY_FILE ) {\n                    broker.readBinaryResource( (BinaryDocument)doc, os );\n                } else {\n                    BufferedWriter writer            = new BufferedWriter( new OutputStreamWriter( os, \"UTF-8\" ) );\n\n                    // write resource to contentSerializer\n                    SAXSerializer  contentSerializer = (SAXSerializer)SerializerPool.getInstance().borrowObject( SAXSerializer.class );\n                    contentSerializer.setOutput( writer, defaultOutputProperties );\n                    writeXML( doc, contentSerializer );\n                    SerializerPool.getInstance().returnObject( contentSerializer );\n                    writer.flush();\n                }\n            }\n            catch( Exception e ) {\n                reportError( \"A write error occurred while exporting document: '\" + doc.getFileURI() + \"'. Continuing with next document.\", e );\n                return;\n            }\n            finally {\n                output.closeEntry();\n            }\n        }\n        \n        Permission perms = doc.getPermissions();\n\n        // store permissions\n        AttributesImpl attr = new AttributesImpl();\n        attr.addAttribute( Namespaces.EXIST_NS, \"type\", \"type\", \"CDATA\", ( doc.getResourceType() == DocumentImpl.BINARY_FILE ) ? \"BinaryResource\" : \"XMLResource\" );\n        attr.addAttribute( Namespaces.EXIST_NS, \"name\", \"name\", \"CDATA\", doc.getFileURI().toString() );\n        attr.addAttribute( Namespaces.EXIST_NS, \"skip\", \"skip\", \"CDATA\", ( needsBackup ? \"no\" : \"yes\" ) );\n        Backup.writeUnixStylePermissionAttributes(attr, perms);\n\n        // be careful when accessing document metadata: it is stored in a\n        // different place than the\n        // main document info and could thus be damaged\n        DocumentMetadata metadata = null;\n\n        try {\n            metadata = doc.getMetadata();\n        }\n        catch( Exception e ) {\n            // LOG.warn(e.getMessage(), e);\n        }\n\n        try {\n            String created;\n            String modified;\n\n            // metadata could be damaged\n            if( metadata != null ) {\n                created  = new DateTimeValue( new Date( metadata.getCreated() ) ).getStringValue();\n                modified = new DateTimeValue( new Date( metadata.getLastModified() ) ).getStringValue();\n            } else {\n                created  = new DateTimeValue().getStringValue();\n                modified = created;\n            }\n            attr.addAttribute( Namespaces.EXIST_NS, \"created\", \"created\", \"CDATA\", created );\n            attr.addAttribute( Namespaces.EXIST_NS, \"modified\", \"modified\", \"CDATA\", modified );\n        }\n        catch( XPathException e ) {\n            LOG.warn( e.getMessage(), e );\n        }\n\n        attr.addAttribute( Namespaces.EXIST_NS, \"filename\", \"filename\", \"CDATA\", Backup.encode( URIUtils.urlDecodeUtf8( doc.getFileURI() ) ) );\n        String mimeType = \"application/xml\";\n\n        if( ( metadata != null ) && ( metadata.getMimeType() != null ) ) {\n            mimeType = Backup.encode( metadata.getMimeType() );\n        }\n        attr.addAttribute( Namespaces.EXIST_NS, \"mimetype\", \"mimetype\", \"CDATA\", mimeType );\n\n        if( ( doc.getResourceType() == DocumentImpl.XML_FILE ) && ( metadata != null ) && ( doc.getDoctype() != null ) ) {\n\n            if( doc.getDoctype().getName() != null ) {\n                attr.addAttribute( Namespaces.EXIST_NS, \"namedoctype\", \"namedoctype\", \"CDATA\", doc.getDoctype().getName() );\n            }\n\n            if( doc.getDoctype().getPublicId() != null ) {\n                attr.addAttribute( Namespaces.EXIST_NS, \"publicid\", \"publicid\", \"CDATA\", doc.getDoctype().getPublicId() );\n            }\n\n            if( doc.getDoctype().getSystemId() != null ) {\n                attr.addAttribute( Namespaces.EXIST_NS, \"systemid\", \"systemid\", \"CDATA\", doc.getDoctype().getSystemId() );\n            }\n        }\n        serializer.startElement( Namespaces.EXIST_NS, \"resource\", \"resource\", attr );\n        if(perms instanceof ACLPermission) {\n            Backup.writeACLPermission(serializer, (ACLPermission)perms);\n        }\n        serializer.endElement( Namespaces.EXIST_NS, \"resource\", \"resource\" );\n    }","commit_id":"81ae4e182af13eb1c9a9cca9e0dacdfe48a3f79f","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * Export a collection. Write out the collection metadata and save the resources stored in the collection.\n     *\n     * @param   current     the collection\n     * @param   output      the output writer\n     * @param   date\n     * @param   prevBackup  DOCUMENT ME!\n     * @param   errorList   a list of {@link org.exist.backup.ErrorReport} objects as returned by methods in {@link org.exist.backup.ConsistencyCheck}\n     * @param   docs        a document set to keep track of all written documents.\n     *\n     * @throws  IOException\n     * @throws  SAXException\n     * @throws  TerminatedException  DOCUMENT ME!\n     */\n    private void export( Collection current, BackupWriter output, Date date, BackupDescriptor prevBackup, List<ErrorReport> errorList, MutableDocumentSet docs ) throws IOException, SAXException, TerminatedException, PermissionDeniedException\n    {\n        if( callback != null ) {\n            callback.startCollection( current.getURI().toString() );\n        }\n\n        if( ( monitor != null ) && !monitor.proceed() ) {\n            throw( new TerminatedException( \"system export terminated by db\" ) );\n        }\n\n//        if( !current.getURI().equalsInternal( XmldbURI.ROOT_COLLECTION_URI ) ) {\n            output.newCollection( Backup.encode( URIUtils.urlDecodeUtf8( current.getURI() ) ) );\n//        }\n\n        try {\n            Writer        contents   = output.newContents();\n\n            // serializer writes to __contents__.xml\n            SAXSerializer serializer = (SAXSerializer)SerializerPool.getInstance().borrowObject( SAXSerializer.class );\n            serializer.setOutput( contents, contentsOutputProps );\n\n            serializer.startDocument();\n            serializer.startPrefixMapping( \"\", Namespaces.EXIST_NS );\n            XmldbURI       uri  = current.getURI();\n            AttributesImpl attr = new AttributesImpl();\n            attr.addAttribute( Namespaces.EXIST_NS, \"name\", \"name\", \"CDATA\", uri.toString() );\n            attr.addAttribute( Namespaces.EXIST_NS, \"version\", \"version\", \"CDATA\", String.valueOf( currVersion ) );\n            attr.addAttribute( Namespaces.EXIST_NS, \"owner\", \"owner\", \"CDATA\", current.getPermissions().getOwner().getName() );\n            attr.addAttribute( Namespaces.EXIST_NS, \"group\", \"group\", \"CDATA\", current.getPermissions().getGroup().getName() );\n            attr.addAttribute( Namespaces.EXIST_NS, \"mode\", \"mode\", \"CDATA\", Integer.toOctalString( current.getPermissions().getMode() ) );\n\n            try {\n                attr.addAttribute( Namespaces.EXIST_NS, \"created\", \"created\", \"CDATA\", new DateTimeValue( new Date( current.getCreationTime() ) ).getStringValue() );\n            }\n            catch( XPathException e ) {\n                e.printStackTrace();\n            }\n            serializer.startElement( Namespaces.EXIST_NS, \"collection\", \"collection\", attr );\n\n            int docsCount = current.getDocumentCountNoLock(broker);\n            int count     = 0;\n\n            for( Iterator<DocumentImpl> i = current.iteratorNoLock( broker ); i.hasNext(); count++ ) {\n                DocumentImpl doc = i.next();\n\n                if( isDamaged( doc, errorList ) ) {\n                    reportError( \"Skipping damaged document \" + doc.getFileURI(), null );\n                    continue;\n                }\n\n                if( doc.getFileURI().equalsInternal( CONTENTS_URI ) || doc.getFileURI().equalsInternal( LOST_URI ) ) {\n                    continue; // skip __contents__.xml documents\n                }\n                exportDocument( output, date, prevBackup, serializer, docsCount, count, doc );\n                docs.add( doc, false );\n            }\n\n            for( Iterator<XmldbURI> i = current.collectionIteratorNoLock(broker); i.hasNext(); ) {\n                XmldbURI childUri = i.next();\n\n                if( childUri.equalsInternal( TEMP_COLLECTION ) ) {\n                    continue;\n                }\n\n                if( isDamagedChild( childUri, errorList ) ) {\n                    reportError( \"Skipping damaged child collection \" + childUri, null );\n                    continue;\n                }\n                attr.clear();\n                attr.addAttribute( Namespaces.EXIST_NS, \"name\", \"name\", \"CDATA\", childUri.toString() );\n                attr.addAttribute( Namespaces.EXIST_NS, \"filename\", \"filename\", \"CDATA\", Backup.encode( URIUtils.urlDecodeUtf8( childUri.toString() ) ) );\n                serializer.startElement( Namespaces.EXIST_NS, \"subcollection\", \"subcollection\", attr );\n                serializer.endElement( Namespaces.EXIST_NS, \"subcollection\", \"subcollection\" );\n            }\n\n            if( prevBackup != null ) {\n\n                // Check which collections and resources have been deleted since\n                // the\n                // last backup\n                CheckDeletedHandler check = new CheckDeletedHandler( current, serializer );\n\n                try {\n                    prevBackup.parse( check );\n                }\n                catch( Exception e ) {\n                    LOG.error( \"Caught exception while trying to parse previous backup descriptor: \" + prevBackup.getSymbolicPath(), e );\n                }\n            }\n\n            // close <collection>\n            serializer.endElement( Namespaces.EXIST_NS, \"collection\", \"collection\" );\n            serializer.endPrefixMapping( \"\" );\n            serializer.endDocument();\n            output.closeContents();\n        }\n        finally {\n\n//            if( !current.getURI().equalsInternal( XmldbURI.ROOT_COLLECTION_URI ) ) {\n                output.closeCollection();\n//            }\n        }\n    }","id":63463,"modified_method":"/**\n     * Export a collection. Write out the collection metadata and save the resources stored in the collection.\n     *\n     * @param   current     the collection\n     * @param   output      the output writer\n     * @param   date\n     * @param   prevBackup  DOCUMENT ME!\n     * @param   errorList   a list of {@link org.exist.backup.ErrorReport} objects as returned by methods in {@link org.exist.backup.ConsistencyCheck}\n     * @param   docs        a document set to keep track of all written documents.\n     *\n     * @throws  IOException\n     * @throws  SAXException\n     * @throws  TerminatedException  DOCUMENT ME!\n     */\n    private void export( Collection current, BackupWriter output, Date date, BackupDescriptor prevBackup, List<ErrorReport> errorList, MutableDocumentSet docs ) throws IOException, SAXException, TerminatedException, PermissionDeniedException\n    {\n        if( callback != null ) {\n            callback.startCollection( current.getURI().toString() );\n        }\n\n        if( ( monitor != null ) && !monitor.proceed() ) {\n            throw( new TerminatedException( \"system export terminated by db\" ) );\n        }\n\n//        if( !current.getURI().equalsInternal( XmldbURI.ROOT_COLLECTION_URI ) ) {\n            output.newCollection( Backup.encode( URIUtils.urlDecodeUtf8( current.getURI() ) ) );\n//        }\n\n        try {\n            Writer        contents   = output.newContents();\n\n            // serializer writes to __contents__.xml\n            SAXSerializer serializer = (SAXSerializer)SerializerPool.getInstance().borrowObject( SAXSerializer.class );\n            serializer.setOutput( contents, contentsOutputProps );\n\n            final Permission perm = current.getPermissions();\n            \n            serializer.startDocument();\n            serializer.startPrefixMapping( \"\", Namespaces.EXIST_NS );\n            XmldbURI       uri  = current.getURI();\n            AttributesImpl attr = new AttributesImpl();\n            attr.addAttribute( Namespaces.EXIST_NS, \"name\", \"name\", \"CDATA\", uri.toString() );\n            attr.addAttribute( Namespaces.EXIST_NS, \"version\", \"version\", \"CDATA\", String.valueOf( currVersion ) );\n            Backup.writeUnixStylePermissionAttributes(attr, perm);\n            try {\n                attr.addAttribute( Namespaces.EXIST_NS, \"created\", \"created\", \"CDATA\", new DateTimeValue( new Date( current.getCreationTime() ) ).getStringValue() );\n            }\n            catch( XPathException e ) {\n                e.printStackTrace();\n            }\n            serializer.startElement( Namespaces.EXIST_NS, \"collection\", \"collection\", attr );\n\n            if(perm instanceof ACLPermission) {\n            \tBackup.writeACLPermission(serializer, (ACLPermission)perm);\n            }\n\n            int docsCount = current.getDocumentCountNoLock(broker);\n            int count     = 0;\n\n            for( Iterator<DocumentImpl> i = current.iteratorNoLock( broker ); i.hasNext(); count++ ) {\n                DocumentImpl doc = i.next();\n\n                if( isDamaged( doc, errorList ) ) {\n                    reportError( \"Skipping damaged document \" + doc.getFileURI(), null );\n                    continue;\n                }\n\n                if( doc.getFileURI().equalsInternal( CONTENTS_URI ) || doc.getFileURI().equalsInternal( LOST_URI ) ) {\n                    continue; // skip __contents__.xml documents\n                }\n                exportDocument( output, date, prevBackup, serializer, docsCount, count, doc );\n                docs.add( doc, false );\n            }\n\n            for( Iterator<XmldbURI> i = current.collectionIteratorNoLock(broker); i.hasNext(); ) {\n                XmldbURI childUri = i.next();\n\n                if( childUri.equalsInternal( TEMP_COLLECTION ) ) {\n                    continue;\n                }\n\n                if( isDamagedChild( childUri, errorList ) ) {\n                    reportError( \"Skipping damaged child collection \" + childUri, null );\n                    continue;\n                }\n                attr.clear();\n                attr.addAttribute( Namespaces.EXIST_NS, \"name\", \"name\", \"CDATA\", childUri.toString() );\n                attr.addAttribute( Namespaces.EXIST_NS, \"filename\", \"filename\", \"CDATA\", Backup.encode( URIUtils.urlDecodeUtf8( childUri.toString() ) ) );\n                serializer.startElement( Namespaces.EXIST_NS, \"subcollection\", \"subcollection\", attr );\n                serializer.endElement( Namespaces.EXIST_NS, \"subcollection\", \"subcollection\" );\n            }\n\n            if( prevBackup != null ) {\n\n                // Check which collections and resources have been deleted since\n                // the\n                // last backup\n                CheckDeletedHandler check = new CheckDeletedHandler( current, serializer );\n\n                try {\n                    prevBackup.parse( check );\n                }\n                catch( Exception e ) {\n                    LOG.error( \"Caught exception while trying to parse previous backup descriptor: \" + prevBackup.getSymbolicPath(), e );\n                }\n            }\n\n            // close <collection>\n            serializer.endElement( Namespaces.EXIST_NS, \"collection\", \"collection\" );\n            serializer.endPrefixMapping( \"\" );\n            serializer.endDocument();\n            output.closeContents();\n        }\n        finally {\n\n//            if( !current.getURI().equalsInternal( XmldbURI.ROOT_COLLECTION_URI ) ) {\n                output.closeCollection();\n//            }\n        }\n    }","commit_id":"81ae4e182af13eb1c9a9cca9e0dacdfe48a3f79f","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * Get all XQuery paths from provided parameters in conf.xml\n     */\n    private List<String> getParameters(Map<String, List<? extends Object>> params) {\n\n        // Return values\n        List<String> paths = new ArrayList<String>();\n\n        // The complete data map\n        Set<Map.Entry<String, List<? extends Object>>> data = params.entrySet();\n\n        // Iterate over all entries\n        for (Map.Entry<String, List<? extends Object>> entry : data) {\n\n            // only the 'xpath' parameter is used.\n            if (XQUERY.equals(entry.getKey())) {\n\n                // Iterate over all values (object lists)\n                List<? extends Object> list = entry.getValue();\n                for (Object o : list) {\n\n                    if (o instanceof String) {\n                        String value = (String) o;\n\n                        if (value.startsWith(\"/\")) {\n\n                            // Rewrite to URL in database\n                            value = XmldbURI.EMBEDDED_SERVER_URI_PREFIX + value;\n\n                            // Prevent double entries\n                            if (!paths.contains(value)) {\n                                paths.add(value);\n                            }\n\n                        } else {\n                            LOG.error(String.format(\"Path '%s' should start with a '/'\", value));\n                        }\n                    }\n                }\n            }\n\n        }\n\n        LOG.debug(String.format(\"Found %s 'xquery' entries.\", paths.size()));\n\n        return paths;\n    }","id":63464,"modified_method":"/**\n     * Get all XQuery paths from provided parameters in conf.xml\n     */\n    private List<String> getParameters(Map<String, List<? extends Object>> params) {\n\n        // Return values\n        List<String> paths = new ArrayList<>();\n\n        // The complete data map\n        Set<Map.Entry<String, List<? extends Object>>> data = params.entrySet();\n\n        // Iterate over all entries\n        for (Map.Entry<String, List<? extends Object>> entry : data) {\n\n            // only the 'xpath' parameter is used.\n            if (XQUERY.equals(entry.getKey())) {\n\n                // Iterate over all values (object lists)\n                List<? extends Object> list = entry.getValue();\n                for (Object o : list) {\n\n                    if (o instanceof String) {\n                        String value = (String) o;\n\n                        if (value.startsWith(\"/\")) {\n\n                            // Rewrite to URL in database\n                            value = XmldbURI.EMBEDDED_SERVER_URI_PREFIX + value;\n\n                            // Prevent double entries\n                            if (!paths.contains(value)) {\n                                paths.add(value);\n                            }\n\n                        } else {\n                            LOG.error(String.format(\"Path '%s' should start with a '/'\", value));\n                        }\n                    }\n                }\n            }\n\n        }\n\n        LOG.debug(String.format(\"Found %s 'xquery' entries.\", paths.size()));\n\n        return paths;\n    }","commit_id":"6a4dc1e2e9b496cdda016b335a2135767ffe7b7e","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * Create autostart collection when not existent\n     *\n     * @param broker The exist-db broker\n     */\n    private void createAutostartCollection(DBBroker broker) {\n\n        LOG.debug(String.format(\"Creating %s\", AUTOSTART_COLLECTION));\n\n        TransactionManager txnManager = broker.getBrokerPool().getTransactionManager();\n        Txn txn = txnManager.beginTransaction();\n\n        try {\n            XmldbURI newCollection = XmldbURI.create(AUTOSTART_COLLECTION, true);\n\n            // Create collection\n            Collection created = broker.getOrCreateCollection(txn, newCollection);\n\n            // Set ownership\n            created.getPermissions().setOwner(broker.getBrokerPool().getSecurityManager().getSystemSubject());\n            created.getPermissions().setGroup(broker.getBrokerPool().getSecurityManager().getDBAGroup());\n            broker.saveCollection(txn, created);\n            broker.flush();\n\n            // Commit change\n            txnManager.commit(txn);\n\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Finished creation of collection\");\n            }\n\n        } catch (Throwable ex) {\n            LOG.error(ex);\n            txnManager.abort(txn);\n\n        } finally {\n            txnManager.close(txn);\n        }\n    }","id":63465,"modified_method":"/**\n     * Create autostart collection when not existent\n     *\n     * @param broker The exist-db broker\n     */\n    private void createAutostartCollection(DBBroker broker) {\n\n        LOG.info(String.format(\"Creating %s\", AUTOSTART_COLLECTION));\n\n        TransactionManager txnManager = broker.getBrokerPool().getTransactionManager();\n        Txn txn = txnManager.beginTransaction();\n\n        try {\n            XmldbURI newCollection = XmldbURI.create(AUTOSTART_COLLECTION, true);\n\n            // Create collection\n            Collection created = broker.getOrCreateCollection(txn, newCollection);\n\n            // Set ownership\n            Permission perms = created.getPermissions();\n            perms.setOwner(broker.getBrokerPool().getSecurityManager().getSystemSubject());\n            perms.setGroup(broker.getBrokerPool().getSecurityManager().getDBAGroup());\n            perms.setMode(REQUIRED_COLLECTION_MODE);\n            broker.saveCollection(txn, created);\n            broker.flush();\n\n            // Commit change\n            txnManager.commit(txn);\n\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Finished creation of collection\");\n            }\n\n        } catch (Throwable ex) {\n            LOG.error(ex);\n            txnManager.abort(txn);\n\n        } finally {\n            txnManager.close(txn);\n        }\n    }","commit_id":"6a4dc1e2e9b496cdda016b335a2135767ffe7b7e","url":"https://github.com/eXist-db/exist"},{"original_method":"@Override\n    public void execute(DBBroker broker, Map<String, List<? extends Object>> params) {\n\n        LOG.info(\"Starting Startup Trigger for stored XQueries\");\n\n        for (String path : getScriptsInStartupCollection(broker)) {\n            executeQuery(broker, path);\n        }\n\n        for (String path : getParameters(params)) {\n            executeQuery(broker, path);\n        }\n\n    }","id":63466,"modified_method":"@Override\n    public void execute(DBBroker broker, Map<String, List<? extends Object>> params) {\n\n        LOG.info(\"Starting Startup Trigger for stored XQueries\");\n\n        for (String path : getScriptsInStartupCollection(broker)) {\n            executeQuery(broker, path);\n        }\n\n//        for (String path : getParameters(params)) {\n//            executeQuery(broker, path);\n//        }\n    }","commit_id":"6a4dc1e2e9b496cdda016b335a2135767ffe7b7e","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * List all xquery scripts in /db/system/autostart\n     *\n     * @param broker The exist-db broker\n     * @return List of xquery scripts\n     */\n    private List<String> getScriptsInStartupCollection(DBBroker broker) {\n\n        // Return values\n        List<String> paths = new ArrayList<String>();\n\n        XmldbURI uri = XmldbURI.create(AUTOSTART_COLLECTION);\n        Collection collection = null;\n\n        try {\n            collection = broker.openCollection(uri, Lock.READ_LOCK);\n\n            if (collection == null) {\n                LOG.debug(String.format(\"Collection '%s' not found.\", AUTOSTART_COLLECTION));\n\n                createAutostartCollection(broker);\n\n            } else {\n                LOG.debug(String.format(\"Scanning collection '%s'.\", AUTOSTART_COLLECTION));\n\n                Iterator<DocumentImpl> documents = collection.iteratorNoLock(broker);\n                while (documents.hasNext()) {\n                    DocumentImpl document = documents.next();\n                    String docPath = document.getURI().toString();\n\n                    if (StringUtils.endsWithAny(docPath, XQUERY_EXTENSIONS)) {\n                        paths.add(XmldbURI.EMBEDDED_SERVER_URI_PREFIX + docPath);\n\n                    } else {\n                        LOG.debug(String.format(\"Skipped document '%s', not an xquery script.\", docPath));\n                    }\n                }\n            }\n\n            LOG.debug(String.format(\"Found %s xquery scripts in '%s'.\", paths.size(), AUTOSTART_COLLECTION));\n\n        } catch (PermissionDeniedException ex) {\n            LOG.error(ex.getMessage());\n\n        } finally {\n            // Clean up resources\n            if (collection != null) {\n                collection.release(Lock.READ_LOCK);\n            }\n        }\n\n        return paths;\n\n    }","id":63467,"modified_method":"/**\n     * List all xquery scripts in /db/system/autostart\n     *\n     * @param broker The exist-db broker\n     * @return List of xquery scripts\n     */\n    private List<String> getScriptsInStartupCollection(DBBroker broker) {\n\n        // Return values\n        List<String> paths = new ArrayList<>();\n\n        XmldbURI uri = XmldbURI.create(AUTOSTART_COLLECTION);\n        Collection collection = null;\n\n        try {\n            collection = broker.openCollection(uri, Lock.READ_LOCK);\n\n            if (collection == null) {\n                LOG.debug(String.format(\"Collection '%s' not found.\", AUTOSTART_COLLECTION));\n                createAutostartCollection(broker);\n\n            } else {\n                LOG.debug(String.format(\"Scanning collection '%s'.\", AUTOSTART_COLLECTION));\n\n                if (isPermissionsOK(collection)) {\n\n                    Iterator<DocumentImpl> documents = collection.iteratorNoLock(broker);\n                    while (documents.hasNext()) {\n                        DocumentImpl document = documents.next();\n                        String docPath = document.getURI().toString();\n\n                        if (isPermissionsOK(document)) {\n\n                            if (StringUtils.endsWithAny(docPath, XQUERY_EXTENSIONS)) {\n                                paths.add(XmldbURI.EMBEDDED_SERVER_URI_PREFIX + docPath);\n\n                            } else {\n                                LOG.error(String.format(\"Skipped document '%s', not an xquery script.\", docPath));\n                            }\n\n                        } else {\n                            LOG.error(String.format(\"Document %s should be owned by DBA, mode %s, mimetype %s\",\n                                    docPath, REQUIRED_COLLECTION_MODE, REQUIRED_MIMETYPE));\n                        }\n                    }\n\n                } else {\n                    LOG.error(String.format(\"Collection %s should be owned by SYSTEM/DBA, mode %s.\", AUTOSTART_COLLECTION,\n                            REQUIRED_COLLECTION_MODE));\n                }\n\n            }\n\n            LOG.debug(String.format(\"Found %s xquery scripts in '%s'.\", paths.size(), AUTOSTART_COLLECTION));\n\n        } catch (PermissionDeniedException ex) {\n            LOG.error(ex.getMessage());\n\n        } finally {\n            // Clean up resources\n            if (collection != null) {\n                collection.release(Lock.READ_LOCK);\n            }\n        }\n\n        return paths;\n\n    }","commit_id":"6a4dc1e2e9b496cdda016b335a2135767ffe7b7e","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * Store a new bug collection for a project.\n\t * The collection is stored in the session, and also in\n\t * a file in the project.\n\t * \n\t * @param project         the project\n\t * @param bugCollection   the bug collection\n\t * @param findbugsProject the FindBugs Project object\n\t * @param monitor         progress monitor\n\t * @throws IOException\n\t * @throws CoreException\n\t */\n\tpublic static void storeBugCollection(\n\t\t\tIProject project,\n\t\t\tfinal SortedBugCollection bugCollection,\n\t\t\tfinal Project findbugsProject,\n\t\t\tIProgressMonitor monitor) throws IOException, CoreException {\n\t\t\n\t\t// Store the bug collection and findbugs project in the session\n\t\tproject.setSessionProperty(SESSION_PROPERTY_BUG_COLLECTION, bugCollection);\n\t\tproject.setSessionProperty(SESSION_PROPERTY_FB_PROJECT, findbugsProject);\n\n\t\t// Save to file\n\t\tIFile bugCollectionFile = FindbugsPlugin.getBugCollectionFile(project);\n\t\t\n\t\tFileOutput fileOutput = new FileOutput() {\n\t\t\tpublic void writeFile(OutputStream os) throws IOException {\n\t\t\t\tbugCollection.writeXML(os, findbugsProject);\n\t\t\t}\n\n\t\t\tpublic String getTaskDescription() {\n\t\t\t\treturn \"creating XML FindBugs data file\";\n\t\t\t}\n\t\t};\n\n\t\tIO.writeFile(bugCollectionFile, fileOutput, monitor);\n\t}","id":63468,"modified_method":"/**\n\t * Store a new bug collection for a project.\n\t * The collection is stored in the session, and also in\n\t * a file in the project.\n\t * \n\t * @param project         the project\n\t * @param bugCollection   the bug collection\n\t * @param findbugsProject the FindBugs Project object\n\t * @param monitor         progress monitor\n\t * @throws IOException\n\t * @throws CoreException\n\t */\n\tpublic static void storeBugCollection(\n\t\t\tIProject project,\n\t\t\tfinal SortedBugCollection bugCollection,\n\t\t\tfinal Project findbugsProject,\n\t\t\tIProgressMonitor monitor) throws IOException, CoreException {\n\t\t\n\t\t// Store the bug collection and findbugs project in the session\n\t\tproject.setSessionProperty(SESSION_PROPERTY_BUG_COLLECTION, bugCollection);\n\t\tproject.setSessionProperty(SESSION_PROPERTY_FB_PROJECT, findbugsProject);\n\n\t\twriteBugCollection(project, bugCollection, findbugsProject, monitor);\n\t}","commit_id":"7c7e598b7bfcfce396d00f3acc7f190a4f51e07b","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n\t * Read saved bug collection and findbugs project from file.\n\t * Will populate the bug collection and findbugs project session\n\t * properties.  If there is no saved bug collection and project\n\t * for the eclipse project, then the session properties will\n\t * be set to null.\n\t * \n\t * @param project the eclipse project\n\t * @param monitor a progress monitor\n\t * @throws IOException\n\t * @throws DocumentException\n\t * @throws CoreException\n\t */\n\tprivate static void readBugCollectionAndProject(IProject project, IProgressMonitor monitor) throws IOException, DocumentException, CoreException {\n\t\tSortedBugCollection bugCollection;\n\t\tProject findbugsProject;\n\t\t\n\t\tIFile bugCollectionFile = getBugCollectionFile(project);\n\t\tif (bugCollectionFile.exists()) {\n\t\t\tbugCollection = new SortedBugCollection();\n\t\t\tfindbugsProject = new Project();\n\n\t\t\t// FIXME: use progress monitor\n\t\t\tbugCollection.readXML(bugCollectionFile.getContents(), findbugsProject);\n\t\t} else {\n\t\t\tbugCollection = null;\n\t\t\tfindbugsProject = null;\n\t\t}\n\n\t\tproject.setSessionProperty(SESSION_PROPERTY_BUG_COLLECTION, bugCollection);\n\t\tproject.setSessionProperty(SESSION_PROPERTY_FB_PROJECT, findbugsProject);\n\t}","id":63469,"modified_method":"/**\n\t * Read saved bug collection and findbugs project from file.\n\t * Will populate the bug collection and findbugs project session\n\t * properties if successful.  If there is no saved bug collection and project\n\t * for the eclipse project, then FileNotFoundException will\n\t * be thrown.\n\t * \n\t * @param project the eclipse project\n\t * @param monitor a progress monitor\n\t * @throws java.io.FileNotFoundException the saved bug collection doesn't exist\n\t * @throws IOException\n\t * @throws DocumentException\n\t * @throws CoreException\n\t */\n\tprivate static void readBugCollectionAndProject(IProject project, IProgressMonitor monitor) throws IOException, DocumentException, CoreException {\n\t\tSortedBugCollection bugCollection;\n\t\tProject findbugsProject;\n\t\t\n\t\tIFile bugCollectionFile = getBugCollectionFile(project);\n\t\tif (!bugCollectionFile.exists()) {\n\t\t\tthrow new FileNotFoundException(bugCollectionFile.getLocation().toOSString());\n\t\t}\n\n\t\tbugCollection = new SortedBugCollection();\n\t\tfindbugsProject = new Project();\n\n\t\t// FIXME: use progress monitor\n\t\tbugCollection.readXML(bugCollectionFile.getContents(), findbugsProject);\n\n\t\tcacheBugCollectionAndProject(project, bugCollection, findbugsProject);\n\t}","commit_id":"7c7e598b7bfcfce396d00f3acc7f190a4f51e07b","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n\t * Read stored BugCollection for project.\n\t * If there is no stored bug collection for the project,\n\t * or if an error occurs reading the stored bug collection,\n\t * a default empty collection is created and returned.\n\t * \n\t * @param project the eclipse project\n\t * @param monitor a progress monitor\n\t * @return the stored BugCollection\n\t * @throws CoreException \n\t */\n\tpublic static SortedBugCollection readBugCollection(\n\t\t\tIProject project, IProgressMonitor monitor) throws CoreException {\n\t\tSortedBugCollection bugCollection = (SortedBugCollection) project.getSessionProperty(\n\t\t\t\tSESSION_PROPERTY_BUG_COLLECTION);\n\t\tif (bugCollection == null) {\n\t\t\ttry {\n\t\t\t\treadBugCollectionAndProject(project, monitor);\n\t\t\t\tbugCollection = (SortedBugCollection) project.getSessionProperty(\n\t\t\t\t\t\tSESSION_PROPERTY_BUG_COLLECTION);\n\t\t\t} catch (IOException e) {\n\t\t\t\tFindbugsPlugin.getDefault().logException(e, \"Could not read bug collection for project\");\n\t\t\t\tbugCollection = createDefaultEmptyBugCollection(project);\n\t\t\t} catch (DocumentException e) {\n\t\t\t\tFindbugsPlugin.getDefault().logException(e, \"Could not read bug collection for project\");\n\t\t\t\tbugCollection = createDefaultEmptyBugCollection(project);\n\t\t\t}\n\t\t}\n\t\treturn bugCollection;\n\t}","id":63470,"modified_method":"/**\n\t * Get the stored BugCollection for project.\n\t * If there is no stored bug collection for the project,\n\t * or if an error occurs reading the stored bug collection,\n\t * a default empty collection is created and returned.\n\t * \n\t * @param project the eclipse project\n\t * @param monitor a progress monitor\n\t * @return the stored BugCollection\n\t * @throws CoreException \n\t */\n\tpublic static SortedBugCollection getBugCollection(\n\t\t\tIProject project, IProgressMonitor monitor) throws CoreException {\n\t\tSortedBugCollection bugCollection = (SortedBugCollection) project.getSessionProperty(\n\t\t\t\tSESSION_PROPERTY_BUG_COLLECTION);\n\t\tif (bugCollection == null) {\n\t\t\ttry {\n\t\t\t\treadBugCollectionAndProject(project, monitor);\n\t\t\t\tbugCollection = (SortedBugCollection) project.getSessionProperty(\n\t\t\t\t\t\tSESSION_PROPERTY_BUG_COLLECTION);\n\t\t\t} catch (IOException e) {\n\t\t\t\tFindbugsPlugin.getDefault().logException(e, \"Could not read bug collection for project\");\n\t\t\t\tbugCollection = createDefaultEmptyBugCollection(project);\n\t\t\t} catch (DocumentException e) {\n\t\t\t\tFindbugsPlugin.getDefault().logException(e, \"Could not read bug collection for project\");\n\t\t\t\tbugCollection = createDefaultEmptyBugCollection(project);\n\t\t\t}\n\t\t}\n\t\treturn bugCollection;\n\t}","commit_id":"7c7e598b7bfcfce396d00f3acc7f190a4f51e07b","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n\t * Get the file resource used to store findbugs warnings for a project.\n\t * \n\t * @param project the project\n\t * @return the IFile (which may not actually exist in the filesystem yet)\n\t */\n\tpublic static IFile getBugCollectionFile(IProject project) {\n\t\tIFile file = project.getFile(\".fbwarnings\");\n\t\treturn file;\n\t}","id":63471,"modified_method":"/**\n\t * Get the file resource used to store findbugs warnings for a project.\n\t * \n\t * @param project the project\n\t * @return the IFile (which may not actually exist in the filesystem yet)\n\t */\n\tprivate static IFile getBugCollectionFile(IProject project) {\n\t\tIFile file = project.getFile(\".fbwarnings\");\n\t\treturn file;\n\t}","commit_id":"7c7e598b7bfcfce396d00f3acc7f190a4f51e07b","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private static SortedBugCollection createDefaultEmptyBugCollection(IProject project)\n\t\t\tthrows CoreException {\n\t\tSortedBugCollection bugCollection = new SortedBugCollection();\n\t\tProject fbProject = new Project();\n\t\t\n\t\tproject.setSessionProperty(SESSION_PROPERTY_BUG_COLLECTION, bugCollection);\n\t\tproject.setSessionProperty(SESSION_PROPERTY_FB_PROJECT, fbProject);\n\t\t\n\t\treturn bugCollection;\n\t}","id":63472,"modified_method":"private static SortedBugCollection createDefaultEmptyBugCollection(IProject project)\n\t\t\tthrows CoreException {\n\t\tSortedBugCollection bugCollection = new SortedBugCollection();\n\t\tProject fbProject = new Project();\n\t\t\n\t\tcacheBugCollectionAndProject(project, bugCollection, fbProject);\n\t\t\n\t\treturn bugCollection;\n\t}","commit_id":"7c7e598b7bfcfce396d00f3acc7f190a4f51e07b","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void start(BundleContext context) throws Exception {\n\t\tsuper.start(context);\n\t\t\n\t\t// TODO hardcore workaround for findbugs home property\n\t\t// - see de.tobject.findbugs.builder.FindBugsWorker.work() too\n\t\tString findBugsHome = getFindBugsEnginePluginLocation();\n\t\tif (DEBUG) {\n\t\t\tSystem.out.println(\"Looking for detecors in: \" + findBugsHome);\n\t\t}\n\t\tSystem.setProperty(\"findbugs.home\", findBugsHome);\n\t}","id":63473,"modified_method":"public void start(BundleContext context) throws Exception {\n\t\tsuper.start(context);\n\t\t\n\t\t// TODO hardcore workaround for findbugs home property\n\t\t// - see de.tobject.findbugs.builder.FindBugsWorker.work() too\n\t\tString findBugsHome = getFindBugsEnginePluginLocation();\n\t\tif (DEBUG) {\n\t\t\tSystem.out.println(\"Looking for detecors in: \" + findBugsHome);\n\t\t}\n\t\tSystem.setProperty(\"findbugs.home\", findBugsHome);\n\t\t\n\t\t// Register our save participant\n\t\tFindbugsSaveParticipant saveParticipant = new FindbugsSaveParticipant();\n\t\tResourcesPlugin.getWorkspace().addSaveParticipant(this, saveParticipant);\n\t}","commit_id":"7c7e598b7bfcfce396d00f3acc7f190a4f51e07b","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n\t * Read stored findbugs Project for a project.\n\t * Returns null if there is no stored project.\n\t * \n\t * @param project the eclipse project\n\t * @param monitor a progress monitor\n\t * @return the saved findbugs Project, or null if there is no saved project\n\t * @throws CoreException\n\t * @throws DocumentException\n\t * @throws DocumentException\n\t * @throws IOException\n\t */\n\tpublic static Project readProject(IProject project, IProgressMonitor monitor)\n\t\t\tthrows CoreException, DocumentException, DocumentException, IOException {\n\t\tProject findbugsProject = (Project) project.getSessionProperty(\n\t\t\t\tSESSION_PROPERTY_FB_PROJECT);\n\t\tif (findbugsProject == null) {\n\t\t\treadBugCollectionAndProject(project, monitor);\n\t\t\tfindbugsProject =  (Project) project.getSessionProperty(\n\t\t\t\t\tSESSION_PROPERTY_FB_PROJECT);\n\t\t}\n\t\treturn findbugsProject;\n\t}","id":63474,"modified_method":"/**\n\t * If necessary, save current bug collection for project to disk.\n\t * \n\t * @param project the project\n\t * @param monitor a progress monitor\n\t * @throws CoreException \n\t * @throws IOException \n\t */\n\tpublic static void saveCurrentBugCollection(\n\t\t\tIProject project, IProgressMonitor monitor)\n\t\t\tthrows CoreException, IOException {\n\t\tif (isBugCollectionDirty(project)) {\n\t\t\tSortedBugCollection bugCollection = (SortedBugCollection)\n\t\t\t(SortedBugCollection) project.getSessionProperty(SESSION_PROPERTY_BUG_COLLECTION);\n\t\t\tProject fbProject = (Project) project.getSessionProperty(SESSION_PROPERTY_FB_PROJECT);\n\t\t\t\n\t\t\tif (bugCollection != null && fbProject != null) {\n\t\t\t\twriteBugCollection(project, bugCollection, fbProject, monitor);\n\t\t\t}\n\t\t}\n\t}","commit_id":"7c7e598b7bfcfce396d00f3acc7f190a4f51e07b","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n\t * Read saved bug collection and findbugs project from file.\n\t * Will populate the bug collection and findbugs project session\n\t * properties if successful.  If there is no saved bug collection and project\n\t * for the eclipse project, then FileNotFoundException will\n\t * be thrown.\n\t *\n\t * @param project the eclipse project\n\t * @param monitor a progress monitor\n\t * @throws java.io.FileNotFoundException the saved bug collection doesn't exist\n\t * @throws IOException\n\t * @throws DocumentException\n\t * @throws CoreException\n\t */\n\tprivate static void readBugCollectionAndProject(IProject project, IProgressMonitor monitor) throws IOException, DocumentException, CoreException {\n\t\tSortedBugCollection bugCollection;\n\t\tProject findbugsProject;\n\n\t\tIPath bugCollectionPath = getBugCollectionFile(project);\n\t\t// Don't turn the path to an IFile because it isn't local to the project.\n\t\t// see the javadoc for org.eclipse.core.runtime.Plugin\n\t\tFile bugCollectionFile = bugCollectionPath.toFile();\n\t\tif (!bugCollectionFile.exists()) {\n\t\t\t//throw new FileNotFoundException(bugCollectionFile.getLocation().toOSString());\n\t\t\tgetDefault().logInfo(\"creating new bug collection: \"+bugCollectionPath.toOSString());\n\t\t\tcreateDefaultEmptyBugCollection(project); // since we no longer throw, have to do this here\n\t\t\treturn;\n\t\t}\n\n\t\tbugCollection = new SortedBugCollection();\n\t\tfindbugsProject = bugCollection.getProject();\n\n\t\tbugCollection.readXML(bugCollectionFile);\n\n\t\tcacheBugCollectionAndProject(project, bugCollection, findbugsProject);\n\t}","id":63475,"modified_method":"/**\n\t * Read saved bug collection and findbugs project from file.\n\t * Will populate the bug collection and findbugs project session\n\t * properties if successful.  If there is no saved bug collection and project\n\t * for the eclipse project, then FileNotFoundException will\n\t * be thrown.\n\t *\n\t * @param project the eclipse project\n\t * @param monitor a progress monitor\n\t * @throws java.io.FileNotFoundException the saved bug collection doesn't exist\n\t * @throws IOException\n\t * @throws DocumentException\n\t * @throws CoreException\n\t */\n\tprivate static void readBugCollectionAndProject(IProject project, IProgressMonitor monitor) throws IOException, DocumentException, CoreException {\n\t\tSortedBugCollection bugCollection;\n\t\t\n\t\tIPath bugCollectionPath = getBugCollectionFile(project);\n\t\t// Don't turn the path to an IFile because it isn't local to the project.\n\t\t// see the javadoc for org.eclipse.core.runtime.Plugin\n\t\tFile bugCollectionFile = bugCollectionPath.toFile();\n\t\tif (!bugCollectionFile.exists()) {\n\t\t\t//throw new FileNotFoundException(bugCollectionFile.getLocation().toOSString());\n\t\t\tgetDefault().logInfo(\"creating new bug collection: \"+bugCollectionPath.toOSString());\n\t\t\tcreateDefaultEmptyBugCollection(project); // since we no longer throw, have to do this here\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tbugCollection = new SortedBugCollection();\n\t\t\n\t\tbugCollection.readXML(bugCollectionFile);\n\n\t\tcacheBugCollectionAndProject(project, bugCollection, bugCollection.getProject());\n\t}","commit_id":"cb529bb60cd04c29732bc7916e2b318b0bbd5ce1","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"MineBugHistoryCommandLine() {\n\t\t\taddOption(\"-prio\", \"min priority\", \"set min priority\");\n\t\t\taddOption(\"-categories\", \"cat1[,cat2...]\", \"set categories\");\n\t\t}","id":63476,"modified_method":"MineBugHistoryCommandLine() {\n\t\t\taddSwitch(\"-formatDates\", \"render dates in textual form\");\n\t\t\taddOption(\"-prio\", \"min priority\", \"set min priority\");\n\t\t\taddOption(\"-categories\", \"cat1[,cat2...]\", \"set categories\");\n\t\t}","commit_id":"8fc526adfa26614c4aecf5babeb02e944a63dad9","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void handleOption(String option, String optionalExtraPart) {\n\t\t\tthrow new IllegalArgumentException(\"unknown option: \" + option);\n\t\t}","id":63477,"modified_method":"public void handleOption(String option, String optionalExtraPart) {\n\t\t\tif  (option.equals(\"-formatDates\")) \n\t\t\t\tsetFormatDates(true);\n\t\t\telse \n\t\t\tthrow new IllegalArgumentException(\"unknown option: \" + option);\n\t\t}","commit_id":"8fc526adfa26614c4aecf5babeb02e944a63dad9","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void dump(PrintStream out) {\n\t\tout.println(\"seq,release,time,added,removed,persist,dead,newCode,removedCode,active\");\n\t\tfor (int i = 0; i < versionList.length; ++i) {\n\t\t\tVersion version = versionList[i];\n\t\t\tAppVersion appVersion = sequenceToAppVersionMap.get(version.getSequence());\n\t\t\tout.print(i);\n\t\t\tout.print(',');\n\t\t\tout.print(appVersion != null ? appVersion.getReleaseName() : \"\");\n\t\t\tout.print(',');\n\t\t\tout.print(appVersion != null ? appVersion.getTimestamp() : 0L);\n\t\t\tfor (int j = 0; j < TUPLE_SIZE; ++j) {\n\t\t\t\tout.print(',');\n\t\t\t\tout.print(version.get(j));\n\t\t\t}\n\t\t\tout.println();\n\t\t}\n\t}","id":63478,"modified_method":"public void dump(PrintStream out) {\n\t\tout.println(\"seq,release,time,added,removed,persist,dead,newCode,removedCode,active\");\n\t\tfor (int i = 0; i < versionList.length; ++i) {\n\t\t\tVersion version = versionList[i];\n\t\t\tAppVersion appVersion = sequenceToAppVersionMap.get(version.getSequence());\n\t\t\tout.print(i);\n\t\t\tout.print(',');\n\t\t\tout.print(appVersion != null ? appVersion.getReleaseName() : \"\");\n\t\t\tout.print(',');\n\t\t\tif (formatDates)\n\t\t\t\tout.print(\"\\\"\" + (appVersion != null ?  new Date(appVersion.getTimestamp()).toString() : \"\") + \"\\\"\");\n\t\t\telse out.print(appVersion != null ? appVersion.getTimestamp() : 0L);\n\t\t\tfor (int j = 0; j < TUPLE_SIZE; ++j) {\n\t\t\t\tout.print(',');\n\t\t\t\tout.print(version.get(j));\n\t\t\t}\n\t\t\tout.println();\n\t\t}\n\t}","commit_id":"8fc526adfa26614c4aecf5babeb02e944a63dad9","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void handleOptionWithArgument(String option, String argument) {\n\t\t\tif (option.equals(\"-prio\")) {\n\t\t\t\tprio = Integer.parseInt(argument);\n\t\t\t} else if (option.equals(\"-categories\")) {\n\t\t\t\tcategories = argument;\n\t\t\t} else {\n\t\t\t\tthrow new IllegalArgumentException(\"unknown option: \" + option);\n\t\t\t}\n\t\t}","id":63479,"modified_method":"public void handleOptionWithArgument(String option, String argument) {\n\t\t\tif (option.equals(\"-prio\")) {\n\t\t\t\tsetPrio(Integer.parseInt(argument));\n\t\t\t} else if (option.equals(\"-categories\")) {\n\t\t\t\tsetCategories(argument);\n\t\t\t} else {\n\t\t\t\tthrow new IllegalArgumentException(\"unknown option: \" + option);\n\t\t\t}\n\t\t}","commit_id":"8fc526adfa26614c4aecf5babeb02e944a63dad9","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public MineBugHistory(BugCollection bugCollection) {\n\t\tthis.bugCollection = bugCollection;\n\t\tthis.sequenceToAppVersionMap = new HashMap<Long, AppVersion>();\n\t\tthis.categorySet = new HashSet<String>();\n\t}","id":63480,"modified_method":"public MineBugHistory(BugCollection bugCollection) {\n\t\tthis.bugCollection = bugCollection;\n\t}","commit_id":"8fc526adfa26614c4aecf5babeb02e944a63dad9","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public static void main(String[] args) throws Exception {\n\t\tDetectorFactoryCollection.instance(); // load plugins\n\n\t\tMineBugHistoryCommandLine commandLine = new MineBugHistoryCommandLine();\n\t\tint argCount = commandLine.parse(args);\n\n\t\tif (args.length - argCount > 1) {\n\t\t\tSystem.err.println(\"Usage: \" + MineBugHistory.class.getName() + \" [options] <bug collection>\");\n\t\t\tSystem.err.println(\"Options:\");\n\t\t\tcommandLine.printUsage(System.err);\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tSortedBugCollection bugCollection = new SortedBugCollection();\n\t\tif (argCount == args.length)  \n\t\tbugCollection.readXML(System.in, new Project());\n\t\telse bugCollection.readXML(args[argCount], new Project());\n\n\t\tMineBugHistory mineBugHistory = new MineBugHistory(bugCollection);\n\t\tmineBugHistory.setPrio(commandLine.getPrio());\n\t\tmineBugHistory.setCategories(commandLine.getCategories());\n\n\t\tmineBugHistory.execute();\n\t\tmineBugHistory.dump(System.out);\n\t\t\n\t}","id":63481,"modified_method":"public static void main(String[] args) throws Exception {\n\t\tDetectorFactoryCollection.instance(); // load plugins\n\n\t\tMineBugHistory mineBugHistory = new MineBugHistory();\n\t\tMineBugHistoryCommandLine commandLine = mineBugHistory.new MineBugHistoryCommandLine();\n\t\tint argCount = commandLine.parse(args, 0, 2, \"Usage: \" + MineBugHistory.class.getName()\n\t\t\t\t+ \" [options] [<xml results> [<history]] \");\n\n\t\tSortedBugCollection bugCollection = new SortedBugCollection();\n\t\tif (argCount < args.length)  \n\t\t\tbugCollection.readXML(args[argCount++], new Project());\n\t\telse bugCollection.readXML(System.in, new Project());\n\t\tmineBugHistory.setBugCollection(bugCollection);\n\n\t\tmineBugHistory.execute();\n\t\tif (argCount < args.length)  \n\t\t\tmineBugHistory.dump(new PrintStream(args[argCount++]));\n\t\telse \n\t\t\tmineBugHistory.dump(System.out);\n\t\t\n\t}","commit_id":"8fc526adfa26614c4aecf5babeb02e944a63dad9","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n\t * Constructor.\n\t * @param method TODO\n\t * @param methodGen             the MethodGen whose CFG we'll be analyzing\n\t * @param cfg                   the control flow graph\n\t * @param dfs                   DepthFirstSearch of the method\n\t * @param typeMerger            object to merge types\n\t * @param visitor               a TypeFrameModelingVisitor to use to model the effect\n\t *                              of instructions\n\t * @param lookupFailureCallback lookup failure callback\n\t * @param exceptionSetFactory   factory for creating ExceptionSet objects\n\t */\n\tpublic TypeAnalysis(Method method, MethodGen methodGen, CFG cfg,\n\t                    DepthFirstSearch dfs, TypeMerger typeMerger,\n\t                    TypeFrameModelingVisitor visitor,\n\t                    RepositoryLookupFailureCallback lookupFailureCallback, ExceptionSetFactory exceptionSetFactory) {\n\t\tsuper(dfs);\n        this.method = method;\n        Code code = method.getCode();\n        if (code == null) throw new IllegalArgumentException(method.getName() + \" has no code\");\n        for(Attribute a : code.getAttributes()) {\n        \tif (a instanceof LocalVariableTypeTable) {\n        \t\ttypeTable = (LocalVariableTypeTable) a;\n        \t\tfor (LocalVariable v : typeTable.getLocalVariableTable()) {\n        \t\t\tstartOfLocalTypedVariables.set(v.getStartPC());\n        \t\t}\n        \t}\n        }\n\t\tthis.methodGen = methodGen;\n\t\tthis.cfg = cfg;\n\t\tthis.typeMerger = typeMerger;\n\t\tthis.visitor = visitor;\n\t\tthis.thrownExceptionSetMap = new HashMap<BasicBlock, CachedExceptionSet>();\n\t\tthis.lookupFailureCallback = lookupFailureCallback;\n\t\tthis.exceptionSetFactory = exceptionSetFactory;\n\t\tthis.instanceOfCheckMap = new HashMap<BasicBlock, InstanceOfCheck>();\n\t\tif (DEBUG) {\n\t\t\tSystem.out.println(\"\\n\\nAnalyzing \" + methodGen);\n\t\t}\n\t}","id":63482,"modified_method":"/**\n\t * Constructor.\n\t * @param method TODO\n\t * @param methodGen             the MethodGen whose CFG we'll be analyzing\n\t * @param cfg                   the control flow graph\n\t * @param dfs                   DepthFirstSearch of the method\n\t * @param typeMerger            object to merge types\n\t * @param visitor               a TypeFrameModelingVisitor to use to model the effect\n\t *                              of instructions\n\t * @param lookupFailureCallback lookup failure callback\n\t * @param exceptionSetFactory   factory for creating ExceptionSet objects\n\t */\n\tpublic TypeAnalysis(Method method, MethodGen methodGen, CFG cfg,\n\t                    DepthFirstSearch dfs, TypeMerger typeMerger,\n\t                    TypeFrameModelingVisitor visitor,\n\t                    RepositoryLookupFailureCallback lookupFailureCallback, ExceptionSetFactory exceptionSetFactory) {\n\t\tsuper(dfs);\n        this.method = method;\n        Code code = method.getCode();\n        if (code == null) throw new IllegalArgumentException(method.getName() + \" has no code\");\n        for(Attribute a : code.getAttributes()) {\n        \tif (a instanceof LocalVariableTypeTable) {\n        \t\ttypeTable = (LocalVariableTypeTable) a;\n        \t\tfor (LocalVariable v : typeTable.getLocalVariableTable()) {\n        \t\t\tint startPC = v.getStartPC();\n\t\t\t\t\tif (startPC >= 0) startOfLocalTypedVariables.set(startPC);\n        \t\t}\n        \t}\n        }\n\t\tthis.methodGen = methodGen;\n\t\tthis.cfg = cfg;\n\t\tthis.typeMerger = typeMerger;\n\t\tthis.visitor = visitor;\n\t\tthis.thrownExceptionSetMap = new HashMap<BasicBlock, CachedExceptionSet>();\n\t\tthis.lookupFailureCallback = lookupFailureCallback;\n\t\tthis.exceptionSetFactory = exceptionSetFactory;\n\t\tthis.instanceOfCheckMap = new HashMap<BasicBlock, InstanceOfCheck>();\n\t\tif (DEBUG) {\n\t\t\tSystem.out.println(\"\\n\\nAnalyzing \" + methodGen);\n\t\t}\n\t}","commit_id":"edf4e10c2a95e4e01bedc8be9e9071edc1d9e6a7","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private void build(MethodGen methodGen) {\n\t\tCodeExceptionGen[] handlerList = methodGen.getExceptionHandlers();\n\n\t\t// Process exception handlers in decreasing order of priority.\n\t\tfor (int i = 0; i < handlerList.length; ++i) {\n\t\t\tCodeExceptionGen exceptionHandler = handlerList[i];\n\t\t\tboolean isUniversalHandler = (exceptionHandler.getCatchType() == null);\n\n\t\t\tstartInstructionToHandlerMap.put(exceptionHandler.getHandlerPC(), exceptionHandler);\n\n\t\t\tInstructionHandle handle;\n\t\t\tInstructionHandle next = exceptionHandler.getStartPC();\n\t\t\tInstructionHandle end = exceptionHandler.getEndPC();\n\n\t\t\tdo {\n\t\t\t\thandle = next;\n\n\t\t\t\t// We can only add an exception edge if the instruction isn't already handled\n\t\t\t\t// by a universal handler.\n\t\t\t\tif (!coveredByUniversalHandler.contains(handle)) {\n\t\t\t\t\taddHandler(handle, exceptionHandler);\n\n\t\t\t\t\t// If this is a universal handler, then no other (lower-priority)\n\t\t\t\t\t// exception handlers are reachable.\n\t\t\t\t\tif (isUniversalHandler)\n\t\t\t\t\t\tcoveredByUniversalHandler.add(handle);\n\t\t\t\t}\n\n\t\t\t\tnext = handle.getNext();\n\t\t\t} while (handle != end);\n\t\t}\n\t}","id":63483,"modified_method":"private void build(MethodGen methodGen) {\n\t\tCodeExceptionGen[] handlerList = methodGen.getExceptionHandlers();\n\n\t\t// Map handler start instructions to the actual exception handlers\n\t\tfor (int i = 0; i < handlerList.length; ++i) {\n\t\t\tCodeExceptionGen exceptionHandler = handlerList[i];\n\t\t\tstartInstructionToHandlerMap.put(exceptionHandler.getHandlerPC(), exceptionHandler);\n\t\t}\n\n\t\t// For each instruction, determine which handlers it can reach\n\t\tInstructionHandle handle = methodGen.getInstructionList().getStart();\n\t\twhile (handle != null) {\n\t\t\tint offset = handle.getPosition();\n\n\t\thandlerLoop:\n\t\t\tfor (int i = 0; i < handlerList.length; ++i) {\n\t\t\t\tCodeExceptionGen exceptionHandler = handlerList[i];\n\t\t\t\tint startOfRange = exceptionHandler.getStartPC().getPosition();\n\t\t\t\tint endOfRange = exceptionHandler.getEndPC().getPosition();\n\n\t\t\t\tif (offset >= startOfRange && offset <= endOfRange) {\n\t\t\t\t\t// This handler is reachable from the instruction\n\t\t\t\t\taddHandler(handle, exceptionHandler);\n\n\t\t\t\t\t// If this handler handles all exception types\n\t\t\t\t\t// (i.e., an ANY handler), then no further (lower-priority)\n\t\t\t\t\t// handlers are reachable from the instruction.\n\t\t\t\t\tif (exceptionHandler.getCatchType() == null)\n\t\t\t\t\t\tbreak handlerLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thandle = handle.getNext();\n\t\t}\n\t}","commit_id":"2f342abca3fe711e4185c3bbe23ef6913d43be43","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n\t * Constructor.\n\t * @param methodGen the method to build the map for\n\t */\n\tpublic ExceptionHandlerMap(MethodGen methodGen) {\n\t\tcodeToHandlerMap = new IdentityHashMap<InstructionHandle, List<CodeExceptionGen>>();\n\t\tstartInstructionToHandlerMap = new IdentityHashMap<InstructionHandle, CodeExceptionGen>();\n\t\tcoveredByUniversalHandler = new HashSet<InstructionHandle>();\n\t\tbuild(methodGen);\n\t}","id":63484,"modified_method":"/**\n\t * Constructor.\n\t * @param methodGen the method to build the map for\n\t */\n\tpublic ExceptionHandlerMap(MethodGen methodGen) {\n\t\tcodeToHandlerMap = new IdentityHashMap<InstructionHandle, List<CodeExceptionGen>>();\n\t\tstartInstructionToHandlerMap = new IdentityHashMap<InstructionHandle, CodeExceptionGen>();\n\t\tbuild(methodGen);\n\t}","commit_id":"2f342abca3fe711e4185c3bbe23ef6913d43be43","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n\t * Gets the content of a defined section in a given template file and its subtemplates\n\t * with the given parameters. \n\t * \n\t * @see getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters)\n\t * @param cms CmsObject Object for accessing system resources.\n\t * @param templateFile Filename of the template file.\n\t * @param elementName Element name of this template in our parent template.\n\t * @param parameters Hashtable with all template class parameters.\n\t * @param templateSelector template section that should be processed.\n\t */\n\tpublic byte[] getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters, String templateSelector) throws CmsException {\n\t\t\n\t\t// get the session\n\t\tI_CmsSession session = cms.getRequestContext().getSession(true);\n\t\t\n\t\t// load the template file\n\t\tCmsXmlWpTemplateFile xmlTemplateDocument = (CmsXmlWpTemplateFile)getOwnTemplateFile(cms, templateFile, elementName, parameters, templateSelector);\n\t\tString filter = (String)parameters.get(\"filter\");\n\t\tString action = (String)parameters.get(\"action\");\n\t\t\n\t\txmlTemplateDocument.setData(\"onload\", \"\");\n\t\t\n\t\tif(\"restoreproject\".equals(action)) {\n\t\t\t// restore the old project..\n\t\t\tInteger oldId = (Integer) session.getValue(\"oldProjectId\");\n\t\t\t\n\t\t\tif(oldId != null) {\n\t\t\t\tcms.getRequestContext().setCurrentProject(oldId.intValue());\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tsession.removeValue(\"oldProjectId\");\n\t\t\t\n\t\t\t// redirect to the needed headfile.\n\t\t\ttry {\n\t\t\t\tcms.getRequestContext().getResponse().sendCmsRedirect( getConfigFile(cms).getWorkplaceActionPath() + \"administration_head_5.html\");\n\t\t\t} catch(IOException exc) {\n\t\t\t\tthrow new CmsException(\"Could not redirect to administration_head_5.html\", exc);\n\t\t\t}\n\t\t\t\n\t\t\t//return \"\".getBytes();\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tif(filter == null) {\n\t\t\t// this is the first time, this page is called\n\t\t\tfilter = \"all\";\n\n\t\t\tif(session.getValue(\"oldProjectId\") == null) {\n\t\t\t\tint projectId = Integer.parseInt((String)parameters.get(\"projectid\"));\n\t\t\t\n\t\t\t\tsession.putValue(\"oldProjectId\", new Integer(cms.getRequestContext().currentProject().getId()));\n\t\t\n\t\t\t\t// set this project temporarly\n\t\t\t\tcms.getRequestContext().setCurrentProject(projectId);\n\t\t\t\n\t\t\t\t// update the head-frame\n\t\t\t\txmlTemplateDocument.setData(\"onload\", \"window.top.body.admin_head.location.href='administration_head_4.html';\");\n\t\t\t}\n\t\t}\n\t\t\n\t\t// store the chosen filter into the session\n\t\tsession.putValue(\"filter\", filter);\n\n\t\t// Finally start the processing\n\t\treturn startProcessing(cms, xmlTemplateDocument, elementName, parameters, templateSelector);\n\t}","id":63485,"modified_method":"/**\n\t * Gets the content of a defined section in a given template file and its subtemplates\n\t * with the given parameters. \n\t * \n\t * @see getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters)\n\t * @param cms CmsObject Object for accessing system resources.\n\t * @param templateFile Filename of the template file.\n\t * @param elementName Element name of this template in our parent template.\n\t * @param parameters Hashtable with all template class parameters.\n\t * @param templateSelector template section that should be processed.\n\t */\n\tpublic byte[] getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters, String templateSelector) throws CmsException {\n\t\t\n\t\t// get the session\n\t\tI_CmsSession session = cms.getRequestContext().getSession(true);\n\t\tint currentProjectId = cms.getRequestContext().currentProject().getId();\n\t\t\n\t\t// load the template file\n\t\tCmsXmlWpTemplateFile xmlTemplateDocument = (CmsXmlWpTemplateFile)getOwnTemplateFile(cms, templateFile, elementName, parameters, templateSelector);\n\t\tString filter = (String)parameters.get(\"filter\");\n\t\tString action = (String)parameters.get(\"action\");\n\t\t\n\t\txmlTemplateDocument.setData(\"onload\", \"\");\n\t\t\n\t\tif(\"restoreproject\".equals(action)) {\n\t\t\t// restore the old project..\n\t\t\tInteger oldId = (Integer) session.getValue(\"oldProjectId\");\n\t\t\t\n\t\t\tif(oldId != null) {\n\t\t\t\tcms.getRequestContext().setCurrentProject(oldId.intValue());\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tsession.removeValue(\"oldProjectId\");\n\t\t\t\n\t\t\t// redirect to the needed headfile.\n\t\t\ttry {\n\t\t\t\tcms.getRequestContext().getResponse().sendCmsRedirect( getConfigFile(cms).getWorkplaceActionPath() + \"administration_head_5.html\");\n\t\t\t} catch(IOException exc) {\n\t\t\t\tthrow new CmsException(\"Could not redirect to administration_head_5.html\", exc);\n\t\t\t}\n\t\t\t\n\t\t\t//return \"\".getBytes();\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tif(filter == null) {\n\t\t\t// this is the first time, this page is called\n\t\t\tfilter = \"all\";\n\n\t\t\tif(session.getValue(\"oldProjectId\") == null) {\n\t\t\t\tint projectId = Integer.parseInt((String)parameters.get(\"projectid\"));\n\t\t\t\n\t\t\t\tsession.putValue(\"oldProjectId\", new Integer(cms.getRequestContext().currentProject().getId()));\n\t\t\n\t\t\t\t// set this project temporarly\n\t\t\t\tcms.getRequestContext().setCurrentProject(projectId);\n\t\t\t\n\t\t\t\t// update the head-frame\n\t\t\t\txmlTemplateDocument.setData(\"onload\", \"window.top.body.admin_head.location.href='administration_head_4.html';\");\n\t\t\t}\n\t\t}\n\t\t\n\t\t// store the chosen filter into the session\n\t\tsession.putValue(\"filter\", filter);\n\n\t\t// Finally start the processing\n\t\tbyte[] content = startProcessing(cms, xmlTemplateDocument, elementName, parameters, templateSelector);\n\t\t\n\t\t//set the current project back\n\t\tcms.getRequestContext().setCurrentProject(currentProjectId);\n\t\t\n\t\treturn content;\n\t}","commit_id":"b49d2d486e8312f0ceb8714aef3ae35de990038d","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Gets the content of a defined section in a given template file and its subtemplates\n     * with the given parameters.\n     *\n     * @see getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters)\n     * @param cms CmsObject Object for accessing system resources.\n     * @param templateFile Filename of the template file.\n     * @param elementName Element name of this template in our parent template.\n     * @param parameters Hashtable with all template class parameters.\n     * @param templateSelector template section that should be processed.\n     */\n\n    public byte[] getContent(CmsObject cms, String templateFile, String elementName,\n            Hashtable parameters, String templateSelector) throws CmsException {\n\n        // get the session\n        I_CmsSession session = cms.getRequestContext().getSession(true);\n        int currentProjectId = cms.getRequestContext().currentProject().getId();\n\n        // load the template file\n        CmsXmlWpTemplateFile xmlTemplateDocument = (CmsXmlWpTemplateFile)getOwnTemplateFile(cms,\n                templateFile, elementName, parameters, templateSelector);\n        String filter = (String)parameters.get(\"filter\");\n        String action = (String)parameters.get(\"action\");\n        xmlTemplateDocument.setData(\"onload\", \"\");\n        if(\"restoreproject\".equals(action)) {\n\n            // restore the old project..\n            Integer oldId = (Integer)session.getValue(\"oldProjectId\");\n            if(oldId != null) {\n                cms.getRequestContext().setCurrentProject(oldId.intValue());\n            }\n            session.removeValue(\"oldProjectId\");\n\n            // redirect to the needed headfile.\n            try {\n                cms.getRequestContext().getResponse().sendCmsRedirect(getConfigFile(cms).getWorkplaceActionPath()\n                        + \"administration_head_5.html\");\n            }\n            catch(IOException exc) {\n                throw new CmsException(\"Could not redirect to administration_head_5.html\", exc);\n            }\n\n            //return \"\".getBytes();\n            return null;\n        }\n        if(filter == null) {\n\n            // this is the first time, this page is called\n            filter = \"all\";\n            if(session.getValue(\"oldProjectId\") == null) {\n                int projectId = Integer.parseInt((String)parameters.get(\"projectid\"));\n                session.putValue(\"oldProjectId\", new Integer(cms.getRequestContext().currentProject().getId()));\n\n                // set this project temporarly\n                cms.getRequestContext().setCurrentProject(projectId);\n\n                // update the head-frame\n                xmlTemplateDocument.setData(\"onload\",\n                        \"window.top.body.admin_head.location.href='administration_head_4.html';\");\n            }\n        }\n\n        // store the chosen filter into the session\n        session.putValue(\"filter\", filter);\n\n        // Finally start the processing\n\n        //return startProcessing(cms, xmlTemplateDocument, elementName, parameters, templateSelector);\n\n        // Finally start the processing\n        byte[] content = startProcessing(cms, xmlTemplateDocument, elementName,\n                parameters, templateSelector);\n\n        //set the current project back\n        //cms.getRequestContext().setCurrentProject(currentProjectId);\n        return content;\n    }","id":63486,"modified_method":"/**\n     * Gets the content of a defined section in a given template file and its subtemplates\n     * with the given parameters.\n     *\n     * @see getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters)\n     * @param cms CmsObject Object for accessing system resources.\n     * @param templateFile Filename of the template file.\n     * @param elementName Element name of this template in our parent template.\n     * @param parameters Hashtable with all template class parameters.\n     * @param templateSelector template section that should be processed.\n     */\n\n    public byte[] getContent(CmsObject cms, String templateFile, String elementName,\n            Hashtable parameters, String templateSelector) throws CmsException {\n        // get the session\n        I_CmsSession session = cms.getRequestContext().getSession(true);\n        // load the template file\n        CmsXmlWpTemplateFile xmlTemplateDocument = (CmsXmlWpTemplateFile)getOwnTemplateFile(cms,\n                templateFile, elementName, parameters, templateSelector);\n        String filter = (String)parameters.get(\"filter\");\n        String projectId = (String)parameters.get(\"projectid\");\n        String action = (String)parameters.get(\"action\");\n        if(filter == null || \"\".equalsIgnoreCase(filter)){\n            filter=(String)session.getValue(\"filter\");\n            if(filter == null || \"\".equalsIgnoreCase(filter)){\n                filter = \"all\";\n            }\n            xmlTemplateDocument.setData(\"loadheader\",xmlTemplateDocument.getProcessedDataValue(\"LOADHEADER\", this));\n        } else {\n            xmlTemplateDocument.setData(\"loadheader\",xmlTemplateDocument.getProcessedDataValue(\"NOTLOADHEADER\", this));\n        }\n        if(projectId == null || \"\".equalsIgnoreCase(projectId)){\n            projectId = (String)session.getValue(\"projectid\");\n            if(projectId == null || \"\".equalsIgnoreCase(projectId)){\n                projectId = \"\"+cms.getRequestContext().currentProject().getId();\n            }\n        }\n\n        // store the chosen filter and projectid into the session\n        session.putValue(\"filter\", filter);\n        session.putValue(\"projectid\", projectId);\n\n        if(action != null && \"restore\".equalsIgnoreCase(action)){\n            session.removeValue(\"projectid\");\n            session.removeValue(\"filter\");\n        }\n        // Finally start the processing\n        return startProcessing(cms, xmlTemplateDocument, elementName, parameters, templateSelector);\n    }","commit_id":"9c8f4bf212f915efebde1ddfd415cefd3820771b","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Export the VFS (Virtual File System) resources.\n     */\n    public CmsAdminDatabaseExportThread(CmsObject cms, String fileName,\n            String[] exportPaths, boolean excludeSystem, boolean excludeUnchanged,\n            boolean exportUserdata, \n            long contentAge,\n            I_CmsSession session) {\n        m_cms = cms;\n        m_exportPaths = exportPaths;\n        m_fileName = fileName;\n        m_excludeSystem = excludeSystem;\n        m_excludeUnchanged = excludeUnchanged;\n        m_exportUserdata = exportUserdata;\n        m_contentAge = contentAge;\n        m_session = session;\n        m_report = new CmsReport(new String[]{\"<br>\"});\n        m_moduledataExport = false;\n    }","id":63487,"modified_method":"/**\n     * Export the VFS (Virtual File System) resources.\n     */\n    public CmsAdminDatabaseExportThread(CmsObject cms, String fileName,\n            String[] exportPaths, boolean excludeSystem, boolean excludeUnchanged,\n            boolean exportUserdata, \n            long contentAge,\n            I_CmsSession session) {\n        m_cms = cms;\n        m_exportPaths = exportPaths;\n        m_fileName = fileName;\n        m_excludeSystem = excludeSystem;\n        m_excludeUnchanged = excludeUnchanged;\n        m_exportUserdata = exportUserdata;\n        m_contentAge = contentAge;\n        m_session = session;\n        String locale = I_CmsWpConstants.C_DEFAULT_LANGUAGE;\n        try { \n            locale = CmsXmlLanguageFile.getCurrentUserLanguage(cms);\n        } catch (CmsException e) {} // we will have the default then\n        m_report = new CmsHtmlReport(locale);\n        m_moduledataExport = false;\n    }","commit_id":"f44036f0a75c0164328423184285ee70f421a5d5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Export the COS (Content Object Store) resources, ie. the module data\n     */\n\n    public CmsAdminDatabaseExportThread(CmsObject cms, String fileName,\n            String[] exportChannels, String[] exportModules, I_CmsSession session) {\n        m_cms = cms;\n        m_exportPaths = exportChannels;\n        m_exportModules = exportModules;\n        m_fileName = fileName;\n        m_session = session;\n        m_moduledataExport = true;\n    }","id":63488,"modified_method":"/**\n     * Export the COS (Content Object Store) resources, ie. the module data\n     */\n\n    public CmsAdminDatabaseExportThread(CmsObject cms, String fileName,\n            String[] exportChannels, String[] exportModules, I_CmsSession session) {\n        m_cms = cms;\n        m_cms.getRequestContext().setUpdateSessionEnabled(false);        \n        m_exportPaths = exportChannels;\n        m_exportModules = exportModules;\n        m_fileName = fileName;\n        m_session = session;\n        m_moduledataExport = true;\n    }","commit_id":"f44036f0a75c0164328423184285ee70f421a5d5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Insert the method's description here.\n     * Creation date: (13.09.00 09:52:24)\n     */\n\n    public CmsAdminDatabaseImportThread(CmsObject cms, String existingFile, I_CmsSession session) {\n        m_cms = cms;\n        m_existingFile = existingFile;\n        m_session = session;\n        m_report = new CmsReport(new String[]{\"<br>\", \"<br><p>updating linkmanagement.<\/p><br>\"});\n    }","id":63489,"modified_method":"/**\n     * Insert the method's description here.\n     * Creation date: (13.09.00 09:52:24)\n     */\n\n    public CmsAdminDatabaseImportThread(CmsObject cms, String existingFile, I_CmsSession session) {\n        m_cms = cms;\n        m_cms.getRequestContext().setUpdateSessionEnabled(false);        \n        m_existingFile = existingFile;\n        m_session = session;\n        String locale = I_CmsWpConstants.C_DEFAULT_LANGUAGE;\n        try {\n            locale = CmsXmlLanguageFile.getCurrentUserLanguage(cms);\n        } catch (CmsException e) {} // we will have the default then\n        m_report = new CmsHtmlReport(locale);\n    }","commit_id":"f44036f0a75c0164328423184285ee70f421a5d5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public void run() {\n         // Dont try to get the session this way in a thread!\n         // It will result in a NullPointerException sometimes.\n         // !I_CmsSession session = m_cms.getRequestContext().getSession(true);\n        try {\n            (new LinkChecker()).checkProject(m_cms, m_projectId, m_report);\n        }\n        catch(CmsException e) {\n            /*\n            m_report.addSeperator(0);\n            m_report.addString(e.getMessage());    \n            */      \n             \n            if(I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging() ) {\n                A_OpenCms.log(A_OpenCms.C_OPENCMS_CRITICAL, e.getMessage());\n                \n                /*\n                StackTraceElement[] stack = e.getStackTrace();\n                int len = (stack.length>5)?5:stack.length;\n                for (int i=0; i<len; i++) {\n                    A_OpenCms.log(A_OpenCms.C_OPENCMS_CRITICAL, \" > \" + stack[i]);\n                }\n                */\n            }\n        }\n    }","id":63490,"modified_method":"public void run() {\n        try {\n            m_report.addSeperator(I_CmsReport.C_LINK_CHECK_BEGIN);            \n            (new LinkChecker()).checkProject(m_cms, m_projectId, m_report);\n            m_report.addSeperator(I_CmsReport.C_LINK_CHECK_END);            \n        } catch(CmsException e) {\n            m_report.println(e);\n            if(I_CmsLogChannels.C_LOGGING && A_OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_CRITICAL) ) {\n                A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL, e.getMessage());                \n            }\n        } finally {\n            if (m_directPublishResourceName != null) {\n                // if this was a direct publish project delete it here \n                // another project will be created for the publish\n                // if the user selects \"continue\" on the workplace dialog\n                try {\n                    // make sure all resources are removed from the temp project\n                    // m_cms.lockResource(m_directPublishResourceName, true);\n                    // m_cms.unlockResource(m_directPublishResourceName);\n                    m_cms.changeLockedInProject(m_oldProjectId, m_directPublishResourceName);\n                    // delete the direct publish project\n                    m_cms.deleteProject(m_projectId);\n                } catch (Exception e) {\n                    // ignore exception, nothing we can do here\n                    if(I_CmsLogChannels.C_LOGGING && A_OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_CRITICAL) ) {\n                        A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL, e.getMessage());\n                    }                \n                }\n            }\n        }\n    }","commit_id":"f44036f0a75c0164328423184285ee70f421a5d5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * shows if there are broken links in this project so far.\n     */\n    public boolean brokenLinksFound(){\n        return m_report.containsPageLinks();\n    }","id":63491,"modified_method":"/**\n     * shows if there are broken links in this project so far.\n     */\n    public boolean brokenLinksFound(){\n        return m_report.hasBrokenLinks();\n    }","commit_id":"f44036f0a75c0164328423184285ee70f421a5d5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public CmsAdminLinkmanagementThread(CmsObject cms, int projectId) {\n        m_cms = cms;\n        m_projectId = projectId;\n        m_report = new CmsReport(new String[]{\"<br>\", \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\", \"<b>\", \"<\/b>\"});\n    }","id":63492,"modified_method":"public CmsAdminLinkmanagementThread(CmsObject cms, int projectId) {\n        this (cms, projectId, null);\n    }","commit_id":"f44036f0a75c0164328423184285ee70f421a5d5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Gets the content of a defined section in a given template file and its subtemplates\n     * with the given parameters.\n     *\n     * @see getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters)\n     * @param cms CmsObject Object for accessing system resources.\n     * @param templateFile Filename of the template file.\n     * @param elementName Element name of this template in our parent template.\n     * @param parameters Hashtable with all template class parameters.\n     * @param templateSelector template section that should be processed.\n     */\n    public byte[] getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters, String templateSelector) throws CmsException {\n        if(I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging() && C_DEBUG) {\n            A_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"getting content of element \" + ((elementName == null) ? \"<root>\" : elementName));\n            A_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"template file is: \" + templateFile);\n            A_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"selected template section is: \" + ((templateSelector == null) ? \"<default>\" : templateSelector));\n        }\n        CmsXmlTemplateFile xmlDocument = getOwnTemplateFile(cms, templateFile, elementName, parameters, templateSelector);\n        CmsRequestContext reqCont = cms.getRequestContext();\n        I_CmsRegistry reg = cms.getRegistry();\n        I_CmsSession session = cms.getRequestContext().getSession(true);\n        String step = (String)parameters.get(C_STEP);\n        String moduleName = (String)parameters.get(C_MODULE);\n        if((step != null) && (\"working\".equals(step))) {\n\n            // Thread is already running\n            Thread doDelete = (Thread)session.getValue(C_MODULE_THREAD);\n            if(doDelete.isAlive()) {\n                String time = (String)parameters.get(\"time\");\n                int wert = Integer.parseInt(time);\n                wert += 20;\n                xmlDocument.setData(\"time\", \"\" + wert);\n                return startProcessing(cms, xmlDocument, elementName, parameters, C_WAIT);\n            }\n            else {\n                return startProcessing(cms, xmlDocument, elementName, parameters, C_DONE);\n            }\n        }\n        if(step == null) {\n            xmlDocument.setData(\"name\", moduleName);\n            xmlDocument.setData(\"version\", \"\" + reg.getModuleVersion(moduleName));\n        }\n        else {\n            if(C_DELETE.equals(step)) {\n                Vector otherModules = reg.deleteCheckDependencies(moduleName);\n                if(!otherModules.isEmpty()) {\n\n                    // Don't delete; send message error\n                    xmlDocument.setData(\"name\", moduleName);\n                    xmlDocument.setData(\"version\", \"\" + reg.getModuleVersion(moduleName));\n                    String depModules = \"\";\n                    for(int i = 0;i < otherModules.size();i++) {\n                        depModules += (String)otherModules.elementAt(i) + \"\\n\";\n                    }\n                    xmlDocument.setData(\"precondition\", depModules);\n                    templateSelector = C_ERROR;\n                }\n                else {\n\n                    // now we will look if ther are any conflicting files\n                    Vector filesWithProperty = new Vector();\n                    Vector missingFiles = new Vector();\n                    Vector wrongChecksum = new Vector();\n                    Vector filesInUse = new Vector();\n                    Vector resourcesForProject = new Vector();\n                    reqCont.setCurrentProject(cms.onlineProject().getId());\n                    reg.deleteGetConflictingFileNames(moduleName, filesWithProperty, missingFiles, wrongChecksum, filesInUse, resourcesForProject);\n                    session.putValue(C_SESSION_MODULENAME, moduleName);\n                    session.putValue(C_SESSION_MODULE_PROJECTFILES, resourcesForProject);\n                    if(filesWithProperty.isEmpty() && missingFiles.isEmpty() && wrongChecksum.isEmpty() && filesInUse.isEmpty()) {\n                        step = \"fromerrorpage\";\n                    }\n                    else {\n                        session.putValue(C_SESSION_MODULE_DELETE_STEP, \"0\");\n                        session.putValue(C_SESSION_MODULE_CHECKSUM, wrongChecksum);\n                        session.putValue(C_SESSION_MODULE_PROPFILES, filesWithProperty);\n                        session.putValue(C_SESSION_MODULE_INUSE, filesInUse);\n                        session.putValue(C_SESSION_MODULE_MISSFILES, missingFiles);\n                        templateSelector = C_WARNING;\n                    }\n                }\n            }\n        }\n        if((step != null) && (\"fromerrorpage\".equals(step))) {\n            Vector exclusion = (Vector)session.getValue(C_SESSION_MODULE_EXCLUSION);\n            // use the root folder instead of: Vector resourcesForProject = (Vector)session.getValue(C_SESSION_MODULE_PROJECTFILES);\n            Vector resourcesForProject = new Vector();\n            resourcesForProject.add(\"/\");\n            if(exclusion == null) {\n                exclusion = new Vector();\n            }\n            moduleName = (String)session.getValue(C_SESSION_MODULENAME);\n            Thread doDelete = new CmsAdminModuleDeleteThread(cms, reg, moduleName, exclusion, resourcesForProject);\n            doDelete.start();\n            session.putValue(C_MODULE_THREAD, doDelete);\n            xmlDocument.setData(\"time\", \"10\");\n            templateSelector = C_WAIT;\n        }\n\n        // Now load the template file and start the processing\n        return startProcessing(cms, xmlDocument, elementName, parameters, templateSelector);\n    }","id":63493,"modified_method":"/**\n     * Gets the content of a defined section in a given template file and its subtemplates\n     * with the given parameters.\n     *\n     * @see getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters)\n     * @param cms CmsObject Object for accessing system resources.\n     * @param templateFile Filename of the template file.\n     * @param elementName Element name of this template in our parent template.\n     * @param parameters Hashtable with all template class parameters.\n     * @param templateSelector template section that should be processed.\n     */\n    public byte[] getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters, String templateSelector) throws CmsException {\n        if(I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging() && C_DEBUG) {\n            A_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"getting content of element \" + ((elementName == null) ? \"<root>\" : elementName));\n            A_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"template file is: \" + templateFile);\n            A_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"selected template section is: \" + ((templateSelector == null) ? \"<default>\" : templateSelector));\n        }\n        \n        CmsXmlWpTemplateFile xmlTemplateDocument = (CmsXmlWpTemplateFile)getOwnTemplateFile(cms, templateFile, elementName, parameters, templateSelector);\n        CmsRequestContext reqCont = cms.getRequestContext();\n        I_CmsRegistry reg = cms.getRegistry();\n        I_CmsSession session = cms.getRequestContext().getSession(true);\n        String step = (String)parameters.get(C_STEP);\n        String moduleName = (String)parameters.get(C_MODULE);\n        \n        if(step == null) {\n            xmlTemplateDocument.setData(\"name\", moduleName);\n            xmlTemplateDocument.setData(\"version\", \"\" + reg.getModuleVersion(moduleName));\n            \n        } else if(\"showResult\".equals(step)){\n            // first look if there is already a thread running.\n            CmsAdminModuleDeleteThread doTheWork = (CmsAdminModuleDeleteThread)session.getValue(C_MODULE_THREAD);\n            if(doTheWork.isAlive()){\n                // thread is still running\n                xmlTemplateDocument.setData(\"endMethod\", \"\");\n                xmlTemplateDocument.setData(\"text\", \"\");\n            }else{\n                // thread is finished, activate the buttons\n                xmlTemplateDocument.setData(\"endMethod\", xmlTemplateDocument.getDataValue(\"endMethod\"));\n                xmlTemplateDocument.setData(\"autoUpdate\",\"\");\n                xmlTemplateDocument.setData(\"text\", xmlTemplateDocument.getLanguageFile().getDataValue(\"module.lable.deleteend\"));\n                session.removeValue(C_MODULE_THREAD);\n            }\n            xmlTemplateDocument.setData(\"data\", doTheWork.getReportUpdate());\n            return startProcessing(cms, xmlTemplateDocument, elementName, parameters, \"updateReport\");\n\n        /*\n        } else if (\"working\".equals(step)) {\n            // Thread is already running\n            Thread doDelete = (Thread)session.getValue(C_MODULE_THREAD);\n            if(doDelete.isAlive()) {\n                String time = (String)parameters.get(\"time\");\n                int wert = Integer.parseInt(time);\n                wert += 20;\n                xmlDocument.setData(\"time\", \"\" + wert);\n                return startProcessing(cms, xmlDocument, elementName, parameters, C_WAIT);\n            }\n            else {\n                return startProcessing(cms, xmlDocument, elementName, parameters, C_DONE);\n            }\n        */\n            \n        } else if(C_DELETE.equals(step)) {            \n            Vector otherModules = reg.deleteCheckDependencies(moduleName);\n            if(!otherModules.isEmpty()) {\n                // don't delete; send message error\n                xmlTemplateDocument.setData(\"name\", moduleName);\n                xmlTemplateDocument.setData(\"version\", \"\" + reg.getModuleVersion(moduleName));\n                String depModules = \"\";\n                for(int i = 0;i < otherModules.size();i++) {\n                    depModules += (String)otherModules.elementAt(i) + \"\\n\";\n                }\n                xmlTemplateDocument.setData(\"precondition\", depModules);\n                templateSelector = C_ERROR;\n            }\n            else {\n                // now we will look if there are any conflicting files\n                Vector filesWithProperty = new Vector();\n                Vector missingFiles = new Vector();\n                Vector wrongChecksum = new Vector();\n                Vector filesInUse = new Vector();\n                Vector resourcesForProject = new Vector();\n                reqCont.setCurrentProject(cms.onlineProject().getId());\n                reg.deleteGetConflictingFileNames(moduleName, filesWithProperty, missingFiles, wrongChecksum, filesInUse, resourcesForProject);\n                session.putValue(C_SESSION_MODULENAME, moduleName);\n                session.putValue(C_SESSION_MODULE_PROJECTFILES, resourcesForProject);\n                if(filesWithProperty.isEmpty() && missingFiles.isEmpty() && wrongChecksum.isEmpty() && filesInUse.isEmpty()) {\n                    step = \"fromerrorpage\";\n                } else {\n                    session.putValue(C_SESSION_MODULE_DELETE_STEP, \"0\");\n                    session.putValue(C_SESSION_MODULE_CHECKSUM, wrongChecksum);\n                    session.putValue(C_SESSION_MODULE_PROPFILES, filesWithProperty);\n                    session.putValue(C_SESSION_MODULE_INUSE, filesInUse);\n                    session.putValue(C_SESSION_MODULE_MISSFILES, missingFiles);\n                    templateSelector = C_WARNING;\n                }\n            }\n            \n        }\n        // no else here because the value of \"step\" might have been changed above \n        if (\"fromerrorpage\".equals(step)) {\n            moduleName = (String)session.getValue(C_SESSION_MODULENAME);\n            Vector conflictFiles = (Vector)session.getValue(C_SESSION_MODULE_EXCLUSION);\n            if(conflictFiles == null) {\n                conflictFiles = new Vector();\n            }            \n            // add root folder as file list for the project\n            Vector projectFiles = new Vector();\n            projectFiles.add(\"/\");\n            Thread doDelete = new CmsAdminModuleDeleteThread(cms, reg, moduleName, conflictFiles, projectFiles);\n            doDelete.start();\n            session.putValue(C_MODULE_THREAD, doDelete);\n            xmlTemplateDocument.setData(\"time\", \"5\");\n            templateSelector = \"showresult\";            \n        }\n\n        // Now load the template file and start the processing\n        return startProcessing(cms, xmlTemplateDocument, elementName, parameters, templateSelector);\n    }","commit_id":"f44036f0a75c0164328423184285ee70f421a5d5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Insert the method's description here.\n     * Creation date: (13.09.00 09:52:24)\n     */\n    public CmsAdminModuleDeleteThread(CmsObject cms, I_CmsRegistry reg, String moduleZipName, Vector exclusion, Vector projectFiles) {\n        m_moduleName = moduleZipName;\n        m_registry = reg;\n        m_exclusion = exclusion;\n        m_cms = cms;\n        m_projectFiles = projectFiles;\n    }","id":63494,"modified_method":"/**\n     * Creates the module delete thread.\n     *\n     * @param cms the current cms context\n     * @param reg the registry to write the new module information to\n     * @param moduleName the name of the module\n     * @param conflictFiles vector of conflict files\n     * @param exclusion vector of files to exclude\n     * @param projectFiles vector of project files\n     */\n    public CmsAdminModuleDeleteThread(CmsObject cms, I_CmsRegistry reg, String moduleName, Vector conflictFiles, Vector projectFiles) {\n        m_cms = cms;\n        m_cms.getRequestContext().setUpdateSessionEnabled(false);\n        m_moduleName = moduleName;\n        m_registry = reg;\n        m_conflictFiles = conflictFiles;\n        m_projectFiles = projectFiles;\n        String locale = I_CmsWpConstants.C_DEFAULT_LANGUAGE;\n        try {\n            locale = CmsXmlLanguageFile.getCurrentUserLanguage(cms);\n        } catch (CmsException e) {} // we will have the default then\n        m_report = new CmsHtmlReport(locale);\n        if (DEBUG) System.err.println(\"CmsAdminModuleDeleteThread() constructed\");\n    }","commit_id":"f44036f0a75c0164328423184285ee70f421a5d5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public void run() {\n         // Dont try to get the session this way in a thread!\n         // It will result in a NullPointerException sometimes.\n         // !I_CmsSession session = m_cms.getRequestContext().getSession(true);\n        CmsRequestContext reqCont = m_cms.getRequestContext();\n        String at = \"createProject: \";\n        try {\n\n            // create a Project to delete the module.\n            CmsProject project = m_cms.createProject(\"DeleteModule\", \"A System generated Project to delete The Module \" + m_moduleName, C_GROUP_ADMIN, C_GROUP_ADMIN, C_PROJECT_TYPE_TEMPORARY);\n            reqCont.setCurrentProject(project.getId());\n\n            at = \"copyResourceToProject: \";\n            // copy the resources to the project\n            for(int i = 0;i < m_projectFiles.size();i++) {\n                m_cms.copyResourceToProject((String)m_projectFiles.elementAt(i));\n            }\n            at = \"delete files: \";\n            m_registry.deleteModule(m_moduleName, m_exclusion);\n\n            at = \"publishProject: \";\n            // now publish the project\n            m_cms.unlockProject(project.getId());\n            m_cms.publishProject(project.getId());\n        }\n        catch(CmsException e) {\n            if(I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging() ) {\n                A_OpenCms.log(A_OpenCms.C_OPENCMS_CRITICAL, \"delete module failed \"+at + e.getMessage());\n            }\n        }\n    }","id":63495,"modified_method":"/**\n     * @see java.lang.Runnable#run()\n     */\n    public void run() {\n        try {\n            if (DEBUG) System.err.println(\"CmsAdminModuleDeleteThread() started\");\n            String moduleName = m_moduleName.replace('\\\\', '/');\n\n            // create a Project to delete the module.\n            CmsProject project = m_cms.createProject(\"DeleteModule\", \"A System generated project to delete the module \" + moduleName, \n                I_CmsConstants.C_GROUP_ADMIN,\n                I_CmsConstants.C_GROUP_ADMIN,\n                I_CmsConstants.C_PROJECT_TYPE_TEMPORARY);            \n            m_cms.getRequestContext().setCurrentProject(project.getId());\n\n            m_report.addSeperator(I_CmsReport.C_MODULE_DELETE_BEGIN, \" <i>\" + moduleName + \"<\/i>\");\n\n            // copy the resources to the project\n            for(int i = 0;i < m_projectFiles.size();i++) {\n                m_cms.copyResourceToProject((String)m_projectFiles.elementAt(i));\n            }\n            // import the module\n            m_registry.deleteModule(m_moduleName, m_conflictFiles, m_report);\n\n            m_report.addSeperator(I_CmsReport.C_PUBLISH_PROJECT_BEGIN);\n            // now unlock and publish the project\n            m_cms.unlockProject(project.getId());\n            m_cms.publishProject(project.getId(), m_report);\n\n            m_report.addSeperator(I_CmsReport.C_PUBLISH_PROJECT_END);\n            m_report.addSeperator(I_CmsReport.C_MODULE_DELETE_END);\n\n            if (DEBUG) System.err.println(\"CmsAdminModuleDeleteThread() finished\");\n        }\n        catch(CmsException e) {\n            if(I_CmsLogChannels.C_LOGGING && A_OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_CRITICAL) ) {\n                A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL, e.getMessage());\n            }\n            if (DEBUG) System.err.println(\"CmsAdminModuleDeleteThread() Exception:\" + e.getMessage());\n        }\n    }","commit_id":"f44036f0a75c0164328423184285ee70f421a5d5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Collects all resources of a module to be exported in a string array. By setting the module property\n\t * \"additional_folders\" as a folder list separated by \";\", you can specify folders outside the \n\t * \"system/modules\" directory to be exported with the module!\n\t *\n\t * @see getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters)\n\t * @param cms CmsObject Object for accessing system resources.\n\t * @param templateFile Filename of the template file.\n\t * @param elementName Element name of this template in our parent template.\n\t * @param parameters Hashtable with all template class parameters.\n\t * @param templateSelector template section that should be processed.\n\t */\n\tpublic byte[] getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters, String templateSelector) throws CmsException {\n\t\tif (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging() && C_DEBUG) {\n\t\t\tA_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"getting content of element \" + ((elementName == null) ? \"<root>\" : elementName));\n\t\t\tA_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"template file is: \" + templateFile);\n\t\t\tA_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"selected template section is: \" + ((templateSelector == null) ? \"<default>\" : templateSelector));\n\t\t}\n\t\tCmsXmlTemplateFile templateDocument = getOwnTemplateFile(cms, templateFile, elementName, parameters, templateSelector);\n\t\tCmsRequestContext reqCont = cms.getRequestContext();\n\t\tI_CmsRegistry reg = cms.getRegistry();\n\n\t\tString step = (String) parameters.get(C_ACTION);\n\t\tString moduleName = (String) parameters.get(C_MODULE);\n\n\t\tif ((step != null) && (\"ok\".equals(step))) {\n\t\t\tString exportName = (String) parameters.get(\"modulename\");\n\t\t\tString[] resourcen = null;\n\t\t\tint resourceCount = 0;\n\t\t\tint i = 0;\n\n\t\t\tif (reg.getModuleType(exportName).equals(CmsRegistry.C_MODULE_TYPE_SIMPLE)) {\n\t\t\t\t// SIMPLE MODULE\n\t\t\t\tif (DEBUG > 0) {\n\t\t\t\t\tSystem.out.println(exportName + \" is a simple module\");\n\t\t\t\t}\n\n\t\t\t\t// check if additional resources outside the system/modules/{exportName} folder were \n\t\t\t\t// specified as module resources by reading the property {C_MODULE_PROPERTY_ADDITIONAL_RESOURCES}\n\t\t\t\t// to the module (in the module administration)\n\t\t\t\tString additionalResources = OpenCms.getRegistry().getModuleParameterString(exportName, I_CmsConstants.C_MODULE_PROPERTY_ADDITIONAL_RESOURCES);\n\t\t\t\tint additionalResourceCount = 0;\n\t\t\t\tStringTokenizer additionalResourceTokens = null;\n\n\t\t\t\tif (additionalResources != null && !additionalResources.equals(\"\")) {\n\t\t\t\t\t// add each additonal folder plus its content folder under \"content/bodys\"\n\t\t\t\t\tadditionalResourceTokens = new StringTokenizer(additionalResources, I_CmsConstants.C_MODULE_PROPERTY_ADDITIONAL_RESOURCES_SEPARATOR);\n\n\t\t\t\t\tresourceCount = (additionalResourceTokens.countTokens() * 2) + CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT;\n\n\t\t\t\t\tresourcen = new String[resourceCount];\n\n\t\t\t\t\t// add each resource plus its equivalent at content/bodys to \n\t\t\t\t\t// the string array of all resources for the export\n\t\t\t\t\twhile (additionalResourceTokens.hasMoreTokens()) {\n\t\t\t\t\t\tString currentResource = additionalResourceTokens.nextToken();\n\n\t\t\t\t\t\tif (DEBUG > 0) {\n\t\t\t\t\t\t\tSystem.err.println(\"Adding resource: \" + currentResource);\n\t\t\t\t\t\t\tSystem.err.println(\"Adding resource: \" + C_VFS_PATH_BODIES.substring(0, C_VFS_PATH_BODIES.length() - 1) + currentResource);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresourcen[i++] = currentResource;\n\t\t\t\t\t\tresourcen[i++] = C_VFS_PATH_BODIES.substring(0, C_VFS_PATH_BODIES.length() - 1) + currentResource;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// no additional resources were specified...\n\t\t\t\t    resourceCount = CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT;\n\t\t\t\t\tresourcen = new String[resourceCount];\n\t\t\t\t\ti = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// TRADITIONAL MODULE\n\t\t\t\tif (DEBUG > 0) {\n\t\t\t\t\tSystem.out.println(exportName + \" is a traditional module\");\n\t\t\t\t}\n\n\t\t\t\tresourceCount = CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT;\n\t\t\t\tresourcen = new String[resourceCount];\n\t\t\t\ti = 0;\n\t\t\t}\n\n\t\t\t// finally, add the \"standard\" module resources to the string of all resources for the export\n\t\t\t// if you add or remove paths here, ensure to adjust CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT to the proper length!\n\t\t\tresourcen[i++] = C_VFS_PATH_MODULES + exportName + \"/\";\n\n\t\t\tif (!C_VFS_NEW_STRUCTURE) {\n\t\t\t\tresourcen[i++] = C_VFS_PATH_MODULEDEMOS + exportName + \"/\";\n\t\t\t\tresourcen[i++] = C_VFS_PATH_BODIES.substring(0, C_VFS_PATH_BODIES.length() - 1) + C_VFS_PATH_MODULEDEMOS + exportName + \"/\";\n\t\t\t}\n\n\t\t\t// check if all resources exists and can be read\n\t\t\tfor (i = 0; i < resourceCount; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tif (resourcen[i] != null) {\n\t\t\t\t\t\tif (DEBUG > 0) {\n\t\t\t\t\t\t\tSystem.err.println(\"reading file header of: \" + resourcen[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcms.readFileHeader(resourcen[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (CmsException e) {\n                    // resource did not exist / could not be read\n\t\t\t\t\tif (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {\n\t\t\t\t\t\tA_OpenCms.log(I_CmsLogChannels.C_MODULE_DEBUG, \"error exporting module: couldn't add \" + resourcen[i] + \" to Module\\n\" + Utils.getStackTrace(e));\n\t\t\t\t\t}\n\t\t\t\t\tresourcen[i] = resourcen[resourceCount - CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT];\n\t\t\t\t}\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tcms.readFileHeader(resourcen[resourceCount - CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT]);\n\t\t\t}\n\t\t\tcatch (CmsException e) {\n\t\t\t\tif (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {\n\t\t\t\t\tA_OpenCms.log(I_CmsLogChannels.C_MODULE_DEBUG, \"error exporting module: couldn't add \" + resourcen[resourceCount - CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT] + \" to Module\\n\" + \"You dont have this module in this project!\");\n\t\t\t\t}\n\t\t\t\treturn startProcessing(cms, templateDocument, elementName, parameters, \"done\");\n\t\t\t}\n\n\t\t\treg.exportModule(exportName, resourcen, com.opencms.boot.CmsBase.getAbsolutePath(cms.readExportPath()) + \"/\" + I_CmsRegistry.C_MODULE_PATH + exportName + \"_\" + reg.getModuleVersion(exportName));\n\t\t\ttemplateSelector = \"done\";\n\t\t}\n\t\telse {\n\t\t\t// first call\n\t\t\ttemplateDocument.setData(\"modulename\", moduleName);\n\t\t}\n\n\t\t// now load the template file and start the processing\n\t\treturn startProcessing(cms, templateDocument, elementName, parameters, templateSelector);\n\t}","id":63496,"modified_method":"/**\n\t * Collects all resources of a module to be exported in a string array. By setting the module property\n\t * \"additional_folders\" as a folder list separated by \";\", you can specify folders outside the \n\t * \"system/modules\" directory to be exported with the module!\n\t *\n\t * @see getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters)\n\t * @param cms CmsObject Object for accessing system resources.\n\t * @param templateFile Filename of the template file.\n\t * @param elementName Element name of this template in our parent template.\n\t * @param parameters Hashtable with all template class parameters.\n\t * @param templateSelector template section that should be processed.\n\t */\n\tpublic byte[] getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters, String templateSelector) throws CmsException {\n\t\tif (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging() && C_DEBUG) {\n\t\t\tA_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"getting content of element \" + ((elementName == null) ? \"<root>\" : elementName));\n\t\t\tA_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"template file is: \" + templateFile);\n\t\t\tA_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"selected template section is: \" + ((templateSelector == null) ? \"<default>\" : templateSelector));\n\t\t}\n        \n        CmsXmlWpTemplateFile xmlTemplateDocument = (CmsXmlWpTemplateFile)getOwnTemplateFile(cms, templateFile, elementName, parameters, templateSelector);\n        CmsRequestContext reqCont = cms.getRequestContext();\n        I_CmsRegistry reg = cms.getRegistry();\n        I_CmsSession session = cms.getRequestContext().getSession(true);\n\n\t\tString step = (String) parameters.get(C_ACTION);\n        String moduleName = (String) parameters.get(C_MODULENAME);\n               \n\t\tif (step == null) {\n            // first call\n            xmlTemplateDocument.setData(\"modulename\", (String)parameters.get(C_MODULE));    \n            \n        } else if(\"showResult\".equals(step)){\n            if (DEBUG > 1) System.out.println(\"showResult for export\");\n                     \n            // first look if there is already a thread running.\n            CmsAdminModuleExportThread doTheWork = (CmsAdminModuleExportThread)session.getValue(C_MODULE_THREAD);\n            if(doTheWork.isAlive()){\n                if (DEBUG > 1) System.out.println(\"showResult: thread is still running\");\n                // thread is still running\n                xmlTemplateDocument.setData(\"endMethod\", \"\");\n                xmlTemplateDocument.setData(\"text\", \"\");\n            }else{\n                if (DEBUG > 1) System.out.println(\"showResult: thread is finished\");\n                // thread is finished, activate the buttons\n                xmlTemplateDocument.setData(\"endMethod\", xmlTemplateDocument.getDataValue(\"endMethod\"));\n                xmlTemplateDocument.setData(\"autoUpdate\",\"\");\n                xmlTemplateDocument.setData(\"text\", xmlTemplateDocument.getLanguageFile().getDataValue(\"module.lable.exportend\"));\n                session.removeValue(C_MODULE_THREAD);\n            }\n            xmlTemplateDocument.setData(\"data\", doTheWork.getReportUpdate());\n            return startProcessing(cms, xmlTemplateDocument, elementName, parameters, \"updateReport\");            \n                  \n        } else if (\"ok\".equals(step)) {\n            // export is confirmed\t\t\t\n\t\t\tString[] resourcen = null;\n\t\t\tint resourceCount = 0;\n\t\t\tint i = 0;\n\n\t\t\tif (reg.getModuleType(moduleName).equals(CmsRegistry.C_MODULE_TYPE_SIMPLE)) {\n\t\t\t\t// SIMPLE MODULE\n\t\t\t\tif (DEBUG > 0) {\n\t\t\t\t\tSystem.out.println(moduleName + \" is a simple module\");\n\t\t\t\t}\n\n\t\t\t\t// check if additional resources outside the system/modules/{exportName} folder were \n\t\t\t\t// specified as module resources by reading the property {C_MODULE_PROPERTY_ADDITIONAL_RESOURCES}\n\t\t\t\t// to the module (in the module administration)\n\t\t\t\tString additionalResources = OpenCms.getRegistry().getModuleParameterString(moduleName, I_CmsConstants.C_MODULE_PROPERTY_ADDITIONAL_RESOURCES);\n\t\t\t\tint additionalResourceCount = 0;\n\t\t\t\tStringTokenizer additionalResourceTokens = null;\n\n\t\t\t\tif (additionalResources != null && !additionalResources.equals(\"\")) {\n\t\t\t\t\t// add each additonal folder plus its content folder under \"content/bodys\"\n\t\t\t\t\tadditionalResourceTokens = new StringTokenizer(additionalResources, I_CmsConstants.C_MODULE_PROPERTY_ADDITIONAL_RESOURCES_SEPARATOR);\n\n\t\t\t\t\tresourceCount = (additionalResourceTokens.countTokens() * 2) + CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT;\n\n\t\t\t\t\tresourcen = new String[resourceCount];\n\n\t\t\t\t\t// add each resource plus its equivalent at content/bodys to \n\t\t\t\t\t// the string array of all resources for the export\n\t\t\t\t\twhile (additionalResourceTokens.hasMoreTokens()) {\n\t\t\t\t\t\tString currentResource = additionalResourceTokens.nextToken();\n\n\t\t\t\t\t\tif (DEBUG > 0) {\n\t\t\t\t\t\t\tSystem.err.println(\"Adding resource: \" + currentResource);\n\t\t\t\t\t\t\tSystem.err.println(\"Adding resource: \" + C_VFS_PATH_BODIES.substring(0, C_VFS_PATH_BODIES.length() - 1) + currentResource);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresourcen[i++] = currentResource;\n\t\t\t\t\t\tresourcen[i++] = C_VFS_PATH_BODIES.substring(0, C_VFS_PATH_BODIES.length() - 1) + currentResource;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// no additional resources were specified...\n\t\t\t\t    resourceCount = CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT;\n\t\t\t\t\tresourcen = new String[resourceCount];\n\t\t\t\t\ti = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// TRADITIONAL MODULE\n\t\t\t\tif (DEBUG > 0) {\n\t\t\t\t\tSystem.out.println(moduleName + \" is a traditional module\");\n\t\t\t\t}\n\n\t\t\t\tresourceCount = CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT;\n\t\t\t\tresourcen = new String[resourceCount];\n\t\t\t\ti = 0;\n\t\t\t}\n\n\t\t\t// finally, add the \"standard\" module resources to the string of all resources for the export\n\t\t\t// if you add or remove paths here, ensure to adjust CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT to the proper length!\n\t\t\tresourcen[i++] = C_VFS_PATH_MODULES + moduleName + \"/\";\n\n\t\t\tif (!C_VFS_NEW_STRUCTURE) {\n\t\t\t\tresourcen[i++] = C_VFS_PATH_MODULEDEMOS + moduleName + \"/\";\n\t\t\t\tresourcen[i++] = C_VFS_PATH_BODIES.substring(0, C_VFS_PATH_BODIES.length() - 1) + C_VFS_PATH_MODULEDEMOS + moduleName + \"/\";\n\t\t\t}\n\n\t\t\t// check if all resources exists and can be read\n\t\t\tfor (i = 0; i < resourceCount; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tif (resourcen[i] != null) {\n\t\t\t\t\t\tif (DEBUG > 0) {\n\t\t\t\t\t\t\tSystem.err.println(\"reading file header of: \" + resourcen[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcms.readFileHeader(resourcen[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (CmsException e) {\n                    // resource did not exist / could not be read\n\t\t\t\t\tif (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {\n\t\t\t\t\t\tA_OpenCms.log(I_CmsLogChannels.C_MODULE_DEBUG, \"error exporting module: couldn't add \" + resourcen[i] + \" to Module\\n\" + Utils.getStackTrace(e));\n\t\t\t\t\t}\n\t\t\t\t\tresourcen[i] = resourcen[resourceCount - CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT];\n\t\t\t\t}\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tcms.readFileHeader(resourcen[resourceCount - CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT]);\n\t\t\t}\n\t\t\tcatch (CmsException e) {\n\t\t\t\tif (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {\n\t\t\t\t\tA_OpenCms.log(I_CmsLogChannels.C_MODULE_DEBUG, \"error exporting module: couldn't add \" + resourcen[resourceCount - CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT] + \" to Module\\n\" + \"You dont have this module in this project!\");\n\t\t\t\t}\n\t\t\t\treturn startProcessing(cms, xmlTemplateDocument, elementName, parameters, \"done\");\n\t\t\t}\n\n\n            /*\n\t\t\treg.exportModule(exportName, resourcen, com.opencms.boot.CmsBase.getAbsolutePath(cms.readExportPath()) + \"/\" + I_CmsRegistry.C_MODULE_PATH + exportName + \"_\" + reg.getModuleVersion(exportName));\n\t\t\ttemplateSelector = \"done\";\n            */\n\n            String filename = CmsBase.getAbsolutePath(cms.readExportPath()) + \"/\" + I_CmsRegistry.C_MODULE_PATH + moduleName + \"_\" + reg.getModuleVersion(moduleName);\n            Thread doExport = new CmsAdminModuleExportThread(cms, reg, moduleName, resourcen, filename);\n            doExport.start();\n            session.putValue(C_MODULE_THREAD, doExport);\n            xmlTemplateDocument.setData(\"time\", \"5\");\n            templateSelector = \"showresult\";\n\t\t}\n\n\t\t// now load the template file and start the processing\n\t\treturn startProcessing(cms, xmlTemplateDocument, elementName, parameters, templateSelector);\n\t}","commit_id":"f44036f0a75c0164328423184285ee70f421a5d5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Gets the content of a defined section in a given template file and its subtemplates\n     * with the given parameters.\n     *\n     * @see getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters)\n     * @param cms CmsObject Object for accessing system resources.\n     * @param templateFile Filename of the template file.\n     * @param elementName Element name of this template in our parent template.\n     * @param parameters Hashtable with all template class parameters.\n     * @param templateSelector template section that should be processed.\n     */\n    public byte[] getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters, String templateSelector) throws CmsException {\n        if(I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging() && C_DEBUG ) {\n            A_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"getting content of element \" + ((elementName == null) ? \"<root>\" : elementName));\n            A_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"template file is: \" + templateFile);\n            A_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"selected template section is: \" + ((templateSelector == null) ? \"<default>\" : templateSelector));\n        }\n\n        //CmsXmlTemplateFile xmlTemplateDocument = getOwnTemplateFile(cms, templateFile, elementName, parameters, templateSelector);\n        CmsXmlWpTemplateFile xmlTemplateDocument = new CmsXmlWpTemplateFile(cms, templateFile);\n\n        //Get the registry\n        I_CmsRegistry reg = cms.getRegistry();\n        I_CmsSession session = cms.getRequestContext().getSession(true);\n        String errorNavigation = (String)parameters.get(C_FROMERRORPAGE);\n        if(errorNavigation != null) {\n            templateSelector = importModule(cms, reg, xmlTemplateDocument, session, null);\n            return startProcessing(cms, xmlTemplateDocument, elementName, parameters, templateSelector);\n        }\n        String step = (String)parameters.get(\"step\");\n\n        // first look if there is already a thread running.\n        if((step != null) && (\"working\".equals(step))) {\n\n            // Thread is already running\n            Thread doImport = (Thread)session.getValue(C_MODULE_THREAD);\n            if(doImport.isAlive()) {\n                String time = (String)parameters.get(\"time\");\n                int wert = Integer.parseInt(time);\n                wert += 20;\n                xmlTemplateDocument.setData(\"time\", \"\" + wert);\n                return startProcessing(cms, xmlTemplateDocument, elementName, parameters, C_WAIT);\n            }\n            else {\n                CmsXmlWpTemplateFile.clearcache();\n                return startProcessing(cms, xmlTemplateDocument, elementName, parameters, C_DONE);\n            }\n        }\n        if(step != null) {\n            if(\"server\".equals(step)) {\n                File modulefolder = new File(com.opencms.boot.CmsBase.getAbsolutePath(cms.readExportPath()) + \"/\" + I_CmsRegistry.C_MODULE_PATH);\n                if(!modulefolder.exists()) {\n                    boolean success = modulefolder.mkdir();\n                    if(I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging() && (!success)) {\n                        A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INFO, \"[CmsAccessFilesystem] Couldn't create folder \" + com.opencms.boot.CmsBase.getAbsolutePath(cms.readExportPath()) + \"/\" + I_CmsRegistry.C_MODULE_PATH + \".\");\n                    }\n                }\n                String listentrys = \"\";\n                if(modulefolder.exists()) {\n                    String[] modules = modulefolder.list();\n                    for(int i = 0;i < modules.length;i++) {\n                        xmlTemplateDocument.setData(\"modulname\", modules[i]);\n                        listentrys += xmlTemplateDocument.getProcessedDataValue(\"optionentry\");\n                    }\n                }\n                xmlTemplateDocument.setData(\"entries\", listentrys);\n                templateSelector = \"server\";\n            }\n            else {\n                if(\"local\".equals(step)) {\n                    templateSelector = \"local\";\n                }\n                else {\n                    if(\"localupload\".equals(step)) {\n\n                        // get the filename\n                        String filename = null;\n                        Enumeration files = cms.getRequestContext().getRequest().getFileNames();\n                        while(files.hasMoreElements()) {\n                            filename = (String)files.nextElement();\n                        }\n                        if(filename != null) {\n                            session.putValue(C_PARA_FILE, filename);\n                        }\n                        filename = (String)session.getValue(C_PARA_FILE);\n\n                        // get the filecontent\n                        byte[] filecontent = new byte[0];\n                        if(filename != null) {\n                            filecontent = cms.getRequestContext().getRequest().getFile(filename);\n                        }\n                        if(filecontent != null) {\n                            session.putValue(C_PARA_FILECONTENT, filecontent);\n                        }\n                        filecontent = (byte[])session.getValue(C_PARA_FILECONTENT);\n\n                        // first create the folder if it doesnt exists\n                        File discFolder = new File(com.opencms.boot.CmsBase.getAbsolutePath(cms.readExportPath()) + \"/\" + I_CmsRegistry.C_MODULE_PATH);\n                        if(!discFolder.exists()) {\n                            boolean success = discFolder.mkdir();\n                            if(I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging() && (!success)) {\n                                A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INFO, \"[CmsAccessFilesystem] Couldn't create folder \" + com.opencms.boot.CmsBase.getAbsolutePath(cms.readExportPath()) + \"/\" + I_CmsRegistry.C_MODULE_PATH + \".\");\n                            }\n                        }\n\n                        // now write the file into the modules dierectory in the exportpaht\n                        File discFile = new File(com.opencms.boot.CmsBase.getAbsolutePath(cms.readExportPath()) + \"/\" + I_CmsRegistry.C_MODULE_PATH + filename);\n                        try {\n\n                            // write the new file to disk\n                            OutputStream s = new FileOutputStream(discFile);\n                            s.write(filecontent);\n                            s.close();\n                        }\n                        catch(Exception e) {\n                            throw new CmsException(\"[\" + this.getClass().getName() + \"] \" + e.getMessage());\n                        }\n                        session.removeValue(C_MODULE_NAV);\n                        templateSelector = importModule(cms, reg, xmlTemplateDocument, session, com.opencms.boot.CmsBase.getAbsolutePath(cms.readExportPath()) + \"/\" + I_CmsRegistry.C_MODULE_PATH + filename);\n                    }\n                    else {\n                        if(\"serverupload\".equals(step)) {\n                            String filename = (String)parameters.get(\"moduleselect\");\n                            session.removeValue(C_MODULE_NAV);\n                            if((filename == null) || (\"\".equals(filename))) {\n                                templateSelector = C_DONE;\n                            }\n                            else {\n                                templateSelector = importModule(cms, reg, xmlTemplateDocument, session, com.opencms.boot.CmsBase.getAbsolutePath(cms.readExportPath()) + \"/\" + I_CmsRegistry.C_MODULE_PATH + filename);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        // Now load the template file and start the processing\n        return startProcessing(cms, xmlTemplateDocument, elementName, parameters, templateSelector);\n    }","id":63497,"modified_method":"/**\n     * Gets the content of a defined section in a given template file and its subtemplates\n     * with the given parameters.\n     *\n     * @see getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters)\n     * @param cms CmsObject Object for accessing system resources.\n     * @param templateFile Filename of the template file.\n     * @param elementName Element name of this template in our parent template.\n     * @param parameters Hashtable with all template class parameters.\n     * @param templateSelector template section that should be processed.\n     */\n    public byte[] getContent(CmsObject cms, String templateFile, String elementName, Hashtable parameters, String templateSelector) throws CmsException {\n        if(I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging() && C_DEBUG ) {\n            A_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"getting content of element \" + ((elementName == null) ? \"<root>\" : elementName));\n            A_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"template file is: \" + templateFile);\n            A_OpenCms.log(C_OPENCMS_DEBUG, this.getClassName() + \"selected template section is: \" + ((templateSelector == null) ? \"<default>\" : templateSelector));\n        }\n\n        CmsXmlWpTemplateFile xmlTemplateDocument = new CmsXmlWpTemplateFile(cms, templateFile);\n\n        // get the registry\n        I_CmsRegistry reg = cms.getRegistry();\n        I_CmsSession session = cms.getRequestContext().getSession(true);\n        String errorNavigation = (String)parameters.get(C_FROMERRORPAGE);\n        if(errorNavigation != null) {\n            templateSelector = importModule(cms, reg, xmlTemplateDocument, session, null);\n            return startProcessing(cms, xmlTemplateDocument, elementName, parameters, templateSelector);\n        }\n        \n        String step = (String)parameters.get(\"step\");\n\n        // first look if there is already a thread running.\n        if(\"showResult\".equals(step)){\n            CmsAdminModuleImportThread doTheWork = (CmsAdminModuleImportThread)session.getValue(C_MODULE_THREAD);\n            if(doTheWork.isAlive()){\n                // thread is still running\n                xmlTemplateDocument.setData(\"endMethod\", \"\");\n                xmlTemplateDocument.setData(\"text\", \"\");\n            }else{\n                // thread is finished, activate the buttons \n                xmlTemplateDocument.setData(\"endMethod\", xmlTemplateDocument.getDataValue(\"endMethod\"));\n                xmlTemplateDocument.setData(\"autoUpdate\",\"\");\n                xmlTemplateDocument.setData(\"text\", xmlTemplateDocument.getLanguageFile().getDataValue(\"module.lable.importend\"));\n                session.removeValue(C_MODULE_THREAD);\n            }\n            xmlTemplateDocument.setData(\"data\", doTheWork.getReportUpdate());\n            return startProcessing(cms, xmlTemplateDocument, elementName, parameters, \"updateReport\");\n            \n            /*\n        } \n        else if (\"working\".equals(step)) {\n\n            // TODO: remove this old code once the reports work without problems  \n            Thread doImport = (Thread) session.getValue(C_MODULE_THREAD);\n            if (doImport.isAlive()) {\n                String time = (String) parameters.get(\"time\");\n                int wert = Integer.parseInt(time);\n                wert += 20;\n                xmlTemplateDocument.setData(\"time\", \"\" + wert);\n                return startProcessing(cms, xmlTemplateDocument, elementName, parameters, C_WAIT);\n            } else {\n                CmsXmlWpTemplateFile.clearcache();\n                return startProcessing(cms, xmlTemplateDocument, elementName, parameters, C_DONE);\n            }\n        */            \n        } else if (\"server\".equals(step)) {\n            File modulefolder =\n                new File(\n                    com.opencms.boot.CmsBase.getAbsolutePath(cms.readExportPath())\n                        + \"/\"\n                        + I_CmsRegistry.C_MODULE_PATH);\n            if (!modulefolder.exists()) {\n                boolean success = modulefolder.mkdir();\n                if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING\n                    && A_OpenCms.isLogging()\n                    && (!success)) {\n                    A_OpenCms.log(\n                        I_CmsLogChannels.C_OPENCMS_INFO,\n                        \"[CmsAccessFilesystem] Couldn't create folder \"\n                            + com.opencms.boot.CmsBase.getAbsolutePath(cms.readExportPath())\n                            + \"/\"\n                            + I_CmsRegistry.C_MODULE_PATH\n                            + \".\");\n                }\n            }\n            String listentrys = \"\";\n            if (modulefolder.exists()) {\n                String[] modules = modulefolder.list();\n                for (int i = 0; i < modules.length; i++) {\n                    xmlTemplateDocument.setData(\"modulname\", modules[i]);\n                    listentrys += xmlTemplateDocument.getProcessedDataValue(\"optionentry\");\n                }\n            }\n            xmlTemplateDocument.setData(\"entries\", listentrys);\n            templateSelector = \"server\";\n\n        } else if (\"local\".equals(step)) {\n            templateSelector = \"local\";\n\n        } else if (\"localupload\".equals(step)) {\n            // get the filename\n            String filename = null;\n            Enumeration files = cms.getRequestContext().getRequest().getFileNames();\n            while (files.hasMoreElements()) {\n                filename = (String) files.nextElement();\n            }\n            if (filename != null) {\n                session.putValue(C_PARA_FILE, filename);\n            }\n            filename = (String) session.getValue(C_PARA_FILE);\n\n            // get the filecontent\n            byte[] filecontent = new byte[0];\n            if (filename != null) {\n                filecontent = cms.getRequestContext().getRequest().getFile(filename);\n            }\n            if (filecontent != null) {\n                session.putValue(C_PARA_FILECONTENT, filecontent);\n            }\n            filecontent = (byte[]) session.getValue(C_PARA_FILECONTENT);\n\n            // first create the folder if it doesnt exists\n            File discFolder =\n                new File(\n                    com.opencms.boot.CmsBase.getAbsolutePath(cms.readExportPath())\n                        + \"/\"\n                        + I_CmsRegistry.C_MODULE_PATH);\n            if (!discFolder.exists()) {\n                boolean success = discFolder.mkdir();\n                if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING\n                    && A_OpenCms.isLogging()\n                    && (!success)) {\n                    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INFO,\n                        \"[CmsAccessFilesystem] Couldn't create folder \"\n                            + com.opencms.boot.CmsBase.getAbsolutePath(cms.readExportPath())\n                            + \"/\"\n                            + I_CmsRegistry.C_MODULE_PATH\n                            + \".\");\n                }\n            }\n\n            // now write the file into the modules dierectory in the exportpaht\n            File discFile =\n                new File(com.opencms.boot.CmsBase.getAbsolutePath(cms.readExportPath())\n                    + \"/\" + I_CmsRegistry.C_MODULE_PATH + filename);\n            try {\n\n                // write the new file to disk\n                OutputStream s = new FileOutputStream(discFile);\n                s.write(filecontent);\n                s.close();\n            } catch (Exception e) {\n                throw new CmsException(\"[\" + this.getClass().getName() + \"] \" + e.getMessage());\n            }\n            session.removeValue(C_MODULE_NAV);\n            templateSelector = \n                importModule(cms, reg, xmlTemplateDocument, session,\n                    com.opencms.boot.CmsBase.getAbsolutePath(cms.readExportPath())\n                        + \"/\"\n                        + I_CmsRegistry.C_MODULE_PATH\n                        + filename);\n                        \n        } else if (\"serverupload\".equals(step)) {\n            String filename = (String) parameters.get(\"moduleselect\");\n            session.removeValue(C_MODULE_NAV);\n            if ((filename == null) || (\"\".equals(filename))) {\n                templateSelector = C_DONE;\n            } else {\n                templateSelector = \n                    importModule(cms, reg, xmlTemplateDocument, session,\n                        com.opencms.boot.CmsBase.getAbsolutePath(cms.readExportPath())\n                            + \"/\"\n                            + I_CmsRegistry.C_MODULE_PATH\n                            + filename);\n            }\n        }\n\n        // Now load the template file and start the processing\n        return startProcessing(cms, xmlTemplateDocument, elementName, parameters, templateSelector);\n    }","commit_id":"f44036f0a75c0164328423184285ee70f421a5d5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Imports the file zipName.\n     * Creation date: (05.09.00 10:17:56)\n     * @param reg com.opencms.file.I_CmsRegistry\n     * @param zipName the complete path and name of the zip-file to import.\n     * @return the new templateSelector.\n     */\n    private String importModule(CmsObject cms, I_CmsRegistry reg, CmsXmlTemplateFile xmlDocument, I_CmsSession session, String zipName) throws CmsException {\n        String nav = (String)session.getValue(C_MODULE_NAV);\n        Vector conflictFiles = null;\n        if(nav == null) {\n\n            // this is the first go. Try to import the module and if it dont't work return the corresponding errorpage\n            String moduleName = reg.importGetModuleName(zipName);\n            if(reg.moduleExists(moduleName)) {\n                xmlDocument.setData(\"name\", moduleName);\n                xmlDocument.setData(\"version\", \"\" + reg.getModuleVersion(moduleName));\n                session.removeValue(C_MODULE_NAV);\n                return C_ERRORREPLACE;\n            }\n            Vector needs = reg.importCheckDependencies(zipName);\n            if(!needs.isEmpty()) {\n\n                // there are dependences not fulfilled\n                xmlDocument.setData(\"name\", moduleName);\n                xmlDocument.setData(\"version\", \"\" + reg.getModuleVersion(moduleName));\n                String preconditions = \"\";\n                for(int i = 0;i < needs.size();i++) {\n                    preconditions += \"<br><br>\" + needs.elementAt(i);\n                }\n                xmlDocument.setData(\"precondition\", preconditions);\n                session.removeValue(C_MODULE_NAV);\n                return C_ERRORDEP;\n            }\n            conflictFiles = reg.importGetConflictingFileNames(zipName);\n            if(!conflictFiles.isEmpty()) {\n\n                //\n                session.putValue(C_SESSION_MODULE_VECTOR, conflictFiles);\n                session.putValue(C_MODULE_NAV, C_FILES);\n                session.putValue(C_MODULE_FILENAME, zipName);\n                return C_FILES;\n            }\n        }\n        else {\n            if(C_FILES.equals(nav)) {\n\n                //\n                zipName = (String)session.getValue(C_MODULE_FILENAME);\n                conflictFiles = (Vector)session.getValue(C_SESSION_MODULE_VECTOR);\n                session.removeValue(C_MODULE_NAV);\n            }\n        }\n        // just use the rootfolder instead of: Vector projectFiles = reg.importGetResourcesForProject(zipName);\n        Vector projectFiles = new Vector();\n        projectFiles.add(\"/\");\n        Thread doTheImport = new CmsAdminModuleImport(cms, reg, zipName, conflictFiles, projectFiles);\n        doTheImport.start();\n        session.putValue(C_MODULE_THREAD, doTheImport);\n        xmlDocument.setData(\"time\", \"10\");\n        return C_WAIT;\n    }","id":63498,"modified_method":"/**\n     * Imports the file zipName.\n     * Creation date: (05.09.00 10:17:56)\n     * @param reg com.opencms.file.I_CmsRegistry\n     * @param zipName the complete path and name of the zip-file to import.\n     * @return the new templateSelector.\n     */\n    private String importModule(CmsObject cms, I_CmsRegistry reg, CmsXmlTemplateFile xmlDocument, I_CmsSession session, String zipName) throws CmsException {\n        String nav = (String)session.getValue(C_MODULE_NAV);\n        Vector conflictFiles = null;\n        if(nav == null) {\n\n            // this is the first go. Try to import the module and if it dont't work return the corresponding errorpage\n            String moduleName = reg.importGetModuleName(zipName);\n            if(reg.moduleExists(moduleName)) {\n                xmlDocument.setData(\"name\", moduleName);\n                xmlDocument.setData(\"version\", \"\" + reg.getModuleVersion(moduleName));\n                session.removeValue(C_MODULE_NAV);\n                return C_ERRORREPLACE;\n            }\n            Vector needs = reg.importCheckDependencies(zipName);\n            if(!needs.isEmpty()) {\n\n                // there are dependences not fulfilled\n                xmlDocument.setData(\"name\", moduleName);\n                xmlDocument.setData(\"version\", \"\" + reg.getModuleVersion(moduleName));\n                String preconditions = \"\";\n                for(int i = 0;i < needs.size();i++) {\n                    preconditions += \"<br><br>\" + needs.elementAt(i);\n                }\n                xmlDocument.setData(\"precondition\", preconditions);\n                session.removeValue(C_MODULE_NAV);\n                return C_ERRORDEP;\n            }\n            conflictFiles = reg.importGetConflictingFileNames(zipName);\n            if(!conflictFiles.isEmpty()) {\n\n                //\n                session.putValue(C_SESSION_MODULE_VECTOR, conflictFiles);\n                session.putValue(C_MODULE_NAV, C_FILES);\n                session.putValue(C_MODULE_FILENAME, zipName);\n                return C_FILES;\n            }\n        }\n        else {\n            if(C_FILES.equals(nav)) {\n\n                //\n                zipName = (String)session.getValue(C_MODULE_FILENAME);\n                conflictFiles = (Vector)session.getValue(C_SESSION_MODULE_VECTOR);\n                session.removeValue(C_MODULE_NAV);\n            }\n        }\n        \t\n        // add root folder as file list for the project\n        Vector projectFiles = new Vector();\n        projectFiles.add(\"/\");\n        Thread doTheImport = new CmsAdminModuleImportThread(cms, reg, zipName, conflictFiles, projectFiles);\n        doTheImport.start();\n        session.putValue(C_MODULE_THREAD, doTheImport);\n        xmlDocument.setData(\"time\", \"5\");      \n        return \"showresult\";                \n    }","commit_id":"f44036f0a75c0164328423184285ee70f421a5d5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public void run() {\n         // Dont try to get the session this way in a thread!\n         // It will result in a NullPointerException sometimes.\n         // !I_CmsSession session = m_cms.getRequestContext().getSession(true);\n        try {\n            m_cms.publishProject(m_projectId, m_report);\n        }\n        catch(CmsException e) {\n            /*\n            m_report.addSeperator(0);\n            m_report.addSeperator(0);\n            m_report.addString(e.getMessage());\n            */\n            \n            if(I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging() ) {\n                A_OpenCms.log(A_OpenCms.C_OPENCMS_CRITICAL, e.getMessage());\n            }\n        }\n    }","id":63499,"modified_method":"public void run() {\n        try {\n            m_report.addSeperator(I_CmsReport.C_PUBLISH_PROJECT_BEGIN);\n            m_cms.publishProject(m_projectId, m_report);\n            m_report.addSeperator(I_CmsReport.C_PUBLISH_PROJECT_END);\n        }\n        catch(CmsException e) {\n            m_report.println(e);\n            if(I_CmsLogChannels.C_LOGGING && A_OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_CRITICAL) ) {\n                A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL, e.getMessage());\n            }\n        }\n    }","commit_id":"f44036f0a75c0164328423184285ee70f421a5d5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * returns the part of the report that is ready.\n     */\n    public String getReportUpdate(){\n        return m_report.getReportUpdate();\n    }","id":63500,"modified_method":"/**\n     * Returns the part of the report that is ready.\n     * \n     * @return the part of the report that is ready\n     */\n    public String getReportUpdate(){\n        return m_report.getReportUpdate();\n    }","commit_id":"f44036f0a75c0164328423184285ee70f421a5d5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Insert the method's description here.\n     * Creation date: (13.09.00 09:52:24)\n     */\n\n    public CmsAdminPublishProjectThread(CmsObject cms, int projectId, I_CmsSession session) {\n        m_cms = cms;\n        m_session = session;\n        m_projectId = projectId;\n        m_report = new CmsReport(new String[]{\"<br>\", \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\", \"<b>\", \"<\/b>\", \"<br><b>Static Export<\/b><br>&nbsp; links to start:\",\"<span style='color:#009900'>\",\"<\/span><br><br>\"});\n    }","id":63501,"modified_method":"public CmsAdminPublishProjectThread(CmsObject cms, int projectId, I_CmsSession session) {\n        m_cms = cms;\n        m_cms.getRequestContext().setUpdateSessionEnabled(false);\n        m_session = session;\n        m_projectId = projectId;\n        String locale = I_CmsWpConstants.C_DEFAULT_LANGUAGE;\n        try {\n            locale = CmsXmlLanguageFile.getCurrentUserLanguage(cms);\n        } catch (CmsException e) {} // we will have the default then\n        m_report = new CmsHtmlReport(locale);\n    }","commit_id":"f44036f0a75c0164328423184285ee70f421a5d5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public CmsAdminStaticExportThread(CmsObject cms, I_CmsSession session) {\n        m_cms = cms;\n        m_report = new CmsReport(new String[]{\"<br>\", \"&nbsp;&nbsp;&nbsp;\", \"<b>\", \"<\/b>\", \"<b>Static Export<\/b><br>&nbsp; links to start:\",\"<span style='color:#009900'>\",\"<\/span><br><br>\"});\n    }","id":63502,"modified_method":"public CmsAdminStaticExportThread(CmsObject cms, I_CmsSession session) {\n        m_cms = cms;\n        m_cms.getRequestContext().setUpdateSessionEnabled(false);\n        String locale = I_CmsWpConstants.C_DEFAULT_LANGUAGE;\n        try {\n            locale = CmsXmlLanguageFile.getCurrentUserLanguage(cms);\n        } catch (CmsException e) {} // we will have the default then\n        m_report = new CmsHtmlReport(locale);\n    }","commit_id":"f44036f0a75c0164328423184285ee70f421a5d5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Overwrites the getContent method of the CmsWorkplaceDefault.<br>\n     * Gets the content of the undelete template and processed the data input.\n     * @param cms The CmsObject.\n     * @param templateFile The undelete template file\n     * @param elementName not used\n     * @param parameters Parameters of the request and the template.\n     * @param templateSelector Selector of the template tag to be displayed.\n     * @return Bytearre containgine the processed data of the template.\n     * @exception Throws CmsException if something goes wrong.\n     */\n\n    public byte[] getContent(CmsObject cms, String templateFile, String elementName,\n            Hashtable parameters, String templateSelector) throws CmsException {\n        I_CmsSession session = cms.getRequestContext().getSession(true);\n        CmsXmlWpTemplateFile xmlTemplateDocument = new CmsXmlWpTemplateFile(cms, templateFile);\n        CmsXmlLanguageFile lang = xmlTemplateDocument.getLanguageFile();\n\n        // the template to be displayed\n        String template = null;\n\n        // clear session values on first load\n        String initial = (String)parameters.get(C_PARA_INITIAL);\n        if(initial != null) {\n            // remove all session values\n            session.removeValue(C_PARA_FILE);\n            session.removeValue(\"lasturl\");\n        }\n        String action = (String)parameters.get(\"action\");\n\n        // here we show the report updates when the threads are allready running.\n        if(\"showResult\".equals(action)){\n            // ok. Thread is started and we shoud show the report information.\n            CmsAdminLinkmanagementThread doTheWork = (CmsAdminLinkmanagementThread)session.getValue(C_PUBLISH_LINKCHECK_THREAD);\n            //still working?\n            if(doTheWork.isAlive()){\n                xmlTemplateDocument.setData(\"endMethod\", \"\");\n                xmlTemplateDocument.setData(\"text\", lang.getDataValue(\"project.publish.message_linkcheck\"));\n            }else{\n                if(doTheWork.brokenLinksFound()){\n                    xmlTemplateDocument.setData(\"endMethod\", xmlTemplateDocument.getDataValue(\"endMethod2\"));\n                    xmlTemplateDocument.setData(\"autoUpdate\",\"\");\n                    xmlTemplateDocument.setData(\"text\", lang.getDataValue(\"project.publish.message_brokenlinks\")\n                                                +\"<br>\"+lang.getDataValue(\"project.publish.message_brokenlinks2\"));\n                }else{\n                    xmlTemplateDocument.setData(\"endMethod\", xmlTemplateDocument.getDataValue(\"endMethod3\"));\n                    xmlTemplateDocument.setData(\"autoUpdate\",\"\");\n                    xmlTemplateDocument.setData(\"text\", \"\");\n                }\n                session.removeValue(C_PUBLISH_LINKCHECK_THREAD);\n            }\n            xmlTemplateDocument.setData(\"data\", doTheWork.getReportUpdate());\n            return startProcessing(cms, xmlTemplateDocument, elementName, parameters, \"updateReport\");\n        }\n        if(\"doThePublish\".equals(action)){\n            // linkcheck is ready. Now we can start the publishing\n            int projectId = ((Integer)session.getValue(C_TEMP_PROJECT_ID)).intValue();\n            session.removeValue(C_TEMP_PROJECT_ID);\n            Thread doPublish = new CmsAdminPublishProjectThread(cms, projectId, session);\n            doPublish.start();\n            session.putValue(C_PUBLISH_THREAD, doPublish);\n            xmlTemplateDocument.setData(\"actionParameter\", \"showPublishResult\");\n            return startProcessing(cms, xmlTemplateDocument, elementName, parameters, \"showresult\");\n        }\n\n        if(\"showPublishResult\".equals(action)){\n            // ok. Thread is started and we shoud show the report information.\n            CmsAdminPublishProjectThread doTheWork = (CmsAdminPublishProjectThread)session.getValue(C_PUBLISH_THREAD);\n            //still working?\n            if(doTheWork.isAlive()){\n                xmlTemplateDocument.setData(\"endMethod\", \"\");\n                xmlTemplateDocument.setData(\"text\", lang.getDataValue(\"project.publish.message_publish\"));\n            }else{\n                xmlTemplateDocument.setData(\"endMethod\", xmlTemplateDocument.getDataValue(\"endMethod\"));\n                xmlTemplateDocument.setData(\"autoUpdate\",\"\");\n                xmlTemplateDocument.setData(\"text\", lang.getDataValue(\"project.publish.message_publish2\"));\n                session.removeValue(C_PUBLISH_THREAD);\n            }\n            xmlTemplateDocument.setData(\"data\", doTheWork.getReportUpdate());\n            return startProcessing(cms, xmlTemplateDocument, elementName, parameters, \"updateReport\");\n        }\n        if(\"done\".equals(action)){\n            String delTempProject = (String)parameters.get(\"deleteTempProject\");\n            if(\"true\".equals(delTempProject)){\n                // we have to delete the temp project\n                // first save the resource to the current project\n                String resourceName = (String)session.getValue(C_PARA_FILE);\n                cms.lockResource(resourceName, true);\n                cms.unlockResource(resourceName);\n                int delProjectId = ((Integer)session.getValue(C_TEMP_PROJECT_ID)).intValue();\n                cms.deleteProject(delProjectId);\n            }\n            // cleanup the session\n            session.removeValue(\"lasturlForPublishResource\");\n            session.removeValue(C_PARA_FILE);\n            session.removeValue(C_TEMP_PROJECT_ID);\n            // return to filelist\n            String lasturl = (String)session.getValue(\"lasturlForPublishResource\");\n            try {\n                if(lasturl == null || \"\".equals(lasturl)) {\n                    cms.getRequestContext().getResponse().sendCmsRedirect(getConfigFile(cms).getWorkplaceActionPath()\n                                + C_WP_EXPLORER_FILELIST);\n                }else {\n                    cms.getRequestContext().getResponse().sendRedirect(lasturl);\n                }\n            }catch(Exception e) {\n                    throw new CmsException(\"Redirect fails :\"\n                            + getConfigFile(cms).getWorkplaceActionPath()\n                            + C_WP_EXPLORER_FILELIST, CmsException.C_UNKNOWN_EXCEPTION, e);\n            }\n            return null;\n        }\n        // get the lasturl parameter\n        String lasturl = getLastUrl(cms, parameters);\n\n        String filename = (String)parameters.get(C_PARA_FILE);\n        if(filename != null) {\n            session.putValue(C_PARA_FILE, filename);\n        }\n        filename = (String)session.getValue(C_PARA_FILE);\n        CmsResource file = null;\n        if(filename.endsWith(\"/\")){\n            file = (CmsResource)cms.readFolder(filename, true);\n        } else {\n            file = (CmsResource)cms.readFileHeader(filename);\n        }\n\n        if(action!= null){\n            if (\"check\".equals(action)){\n                if(file.getState() != C_STATE_DELETED){\n                    if(checkLocked(cms, file)){\n                        action = \"wait\";\n                    } else {\n                        // ask user if the locks should be removed\n                        return startProcessing(cms, xmlTemplateDocument, elementName, parameters,\"asklock\");\n                    }\n                } else {\n                    action = \"wait\";\n                }\n            } else if(\"rmlocks\".equals(action)){\n                // remove the locks and publish\n                try{\n                    unlockResource(cms, file);\n                    action = \"wait\";\n                } catch (CmsException exc){\n                    xmlTemplateDocument.setData(\"details\", Utils.getStackTrace(exc));\n                    xmlTemplateDocument.setData(\"lasturl\", lasturl);\n                    return startProcessing(cms, xmlTemplateDocument, elementName, parameters,\"errorlock\");\n                }\n\n            //check if the name parameter was included in the request\n            // if not, the publishresource page is shown for the first time\n            }\n            if(\"wait\".equals(action)) {\n                return startProcessing(cms, xmlTemplateDocument, \"\", parameters, \"wait\");\n            }\n            if(\"ok\".equals(action)) {\n                // start for \"publish the resource\"\n                try{\n                    // ok here is the plan: first create the temp-project,\n                    // then start the link checker.\n                    // now if cancel delete the temp-project, else publish it.\n                    int tempProjectId = cms.publishResource(file.getAbsolutePath(), true);\n                    session.putValue(C_TEMP_PROJECT_ID, new Integer(tempProjectId));\n                    if(lasturl == null){\n                        lasturl = \"\";\n                    }\n                    session.putValue(\"lasturlForPublishResource\", lasturl);\n                    // first part of the publish: check for broken links\n                    CmsAdminLinkmanagementThread doCheck = new CmsAdminLinkmanagementThread(cms, tempProjectId);\n                    doCheck.start();\n                    session.putValue(C_PUBLISH_LINKCHECK_THREAD, doCheck);\n                    template = \"showresult\";\n                } catch(CmsException e){\n                    session.removeValue(C_PARA_FILE);\n                    xmlTemplateDocument.setData(\"details\", Utils.getStackTrace(e));\n                    xmlTemplateDocument.setData(\"lasturl\", lasturl);\n                    return startProcessing(cms, xmlTemplateDocument, \"\", parameters, \"error\");\n                }\n            }\n        }\n\n        // set the required datablocks\n        if(action == null) {\n            xmlTemplateDocument.setData(\"CHANGEDATE\", Utils.getNiceDate(file.getDateLastModified()));\n            xmlTemplateDocument.setData(\"USER\", cms.readUser(file.getResourceLastModifiedBy()).getName());\n            xmlTemplateDocument.setData(\"FILENAME\", file.getName());\n        }\n        // process the selected template\n        return startProcessing(cms, xmlTemplateDocument, \"\", parameters, template);\n    }","id":63503,"modified_method":"/**\n     * Overwrites the getContent method of the CmsWorkplaceDefault.<br>\n     * Gets the content of the undelete template and processed the data input.\n     * @param cms The CmsObject.\n     * @param templateFile The undelete template file\n     * @param elementName not used\n     * @param parameters Parameters of the request and the template.\n     * @param templateSelector Selector of the template tag to be displayed.\n     * @return Bytearre containgine the processed data of the template.\n     * @exception Throws CmsException if something goes wrong.\n     */\n    public byte[] getContent(CmsObject cms, String templateFile, String elementName,\n            Hashtable parameters, String templateSelector) \n    throws CmsException {\n\n        I_CmsSession session = cms.getRequestContext().getSession(true);\n        CmsXmlWpTemplateFile xmlTemplateDocument = new CmsXmlWpTemplateFile(cms, templateFile);\n        CmsXmlLanguageFile lang = xmlTemplateDocument.getLanguageFile();\n\n        // the template to be displayed\n        String template = null;\n\n        // clear session values on first load\n        String initial = (String)parameters.get(C_PARA_INITIAL);\n        if(initial != null) {          \n            // remove all session values\n            session.removeValue(C_PARA_FILE);\n            session.removeValue(C_PUBLISH_THREAD);\n            session.removeValue(C_PUBLISH_LINKCHECK_THREAD);   \n            session.removeValue(C_PUBLISH_LASTURL);                     \n            session.removeValue(\"lasturl\");\n        }       \n\n        // get the filename parameter\n        String filename = (String)parameters.get(C_PARA_FILE);\n        if(filename != null) {\n            session.putValue(C_PARA_FILE, filename);\n        }\n        filename = (String)session.getValue(C_PARA_FILE);\n\n        // now get the action paramter and perform the requested action\n        String action = (String)parameters.get(\"action\");\n        \n        // set the required datablocks\n        if(action == null) {\n            // initial request, display confirm dialog box            \n            CmsResource file = readResource(cms, filename);\n\n            xmlTemplateDocument.setData(\"CHANGEDATE\", Utils.getNiceDate(file.getDateLastModified()));\n            xmlTemplateDocument.setData(\"USER\", cms.readUser(file.getResourceLastModifiedBy()).getName());\n            xmlTemplateDocument.setData(\"FILENAME\", file.getName());\n            \n        } else if(\"showResult\".equals(action)){\n            CmsAdminLinkmanagementThread doTheWork = (CmsAdminLinkmanagementThread)session.getValue(C_PUBLISH_LINKCHECK_THREAD);\n            //still working?\n            if(doTheWork.isAlive()){\n                xmlTemplateDocument.setData(\"endMethod\", \"\");\n                xmlTemplateDocument.setData(\"text\", lang.getDataValue(\"project.publish.message_linkcheck\"));\n            }else{\n                if(doTheWork.brokenLinksFound()){\n                    xmlTemplateDocument.setData(\"endMethod\", xmlTemplateDocument.getDataValue(\"endMethod2\"));\n                    xmlTemplateDocument.setData(\"autoUpdate\",\"\");\n                    xmlTemplateDocument.setData(\"text\", lang.getDataValue(\"project.publish.message_brokenlinks\")\n                                                +\"<br>\"+lang.getDataValue(\"project.publish.message_brokenlinks2\"));\n                }else{\n                    xmlTemplateDocument.setData(\"endMethod\", xmlTemplateDocument.getDataValue(\"endMethod3\"));\n                    xmlTemplateDocument.setData(\"autoUpdate\",\"\");\n                    xmlTemplateDocument.setData(\"text\", \"\");\n                }\n                session.removeValue(C_PUBLISH_LINKCHECK_THREAD);\n            }\n            xmlTemplateDocument.setData(\"data\", doTheWork.getReportUpdate());\n            return startProcessing(cms, xmlTemplateDocument, elementName, parameters, \"updateReport\");\n            \n        } else if(\"doThePublish\".equals(action)){\n            \n            // linkcheck is ready. Now we can start the publishing\n            CmsResource file = readResource(cms, filename);                     \n            Thread doPublish = new CmsPublishResourceThread(cms, file.getAbsolutePath());\n            doPublish.start();\n            session.putValue(C_PUBLISH_THREAD, doPublish);\n            // indicate that changes in the user project etc. must be ignored here\n            xmlTemplateDocument.setData(\"actionParameter\", \"showPublishResult\");\n            return startProcessing(cms, xmlTemplateDocument, elementName, parameters, \"showresult\");\n            \n        } else if(\"showPublishResult\".equals(action)){\n            \n            // thread is started and we shoud show the report information.\n            CmsPublishResourceThread doTheWork = (CmsPublishResourceThread)session.getValue(C_PUBLISH_THREAD);\n            if(doTheWork.isAlive()){\n                xmlTemplateDocument.setData(\"endMethod\", \"\");\n                xmlTemplateDocument.setData(\"text\", lang.getDataValue(\"project.publish.message_publish\"));\n            }else{\n                xmlTemplateDocument.setData(\"endMethod\", xmlTemplateDocument.getDataValue(\"endMethod\"));\n                xmlTemplateDocument.setData(\"autoUpdate\",\"\");\n                xmlTemplateDocument.setData(\"text\", lang.getDataValue(\"project.publish.message_publish2\"));\n                session.removeValue(C_PUBLISH_THREAD);\n            }\n            xmlTemplateDocument.setData(\"data\", doTheWork.getReportUpdate());\n            return startProcessing(cms, xmlTemplateDocument, elementName, parameters, \"updateReport\");\n            \n        } else if(\"done\".equals(action)){\n            // cleanup the session\n            session.removeValue(C_PUBLISH_LASTURL);\n            session.removeValue(C_PARA_FILE);\n            // return to filelist\n            String lasturl = getLastUrl(cms, parameters);            \n            try {\n                if(lasturl == null || \"\".equals(lasturl)) {\n                    cms.getRequestContext().getResponse().sendCmsRedirect(getConfigFile(cms).getWorkplaceActionPath()\n                                + C_WP_EXPLORER_FILELIST);\n                }else {\n                    cms.getRequestContext().getResponse().sendRedirect(lasturl);\n                }\n            } catch (Exception e) {\n                    throw new CmsException(\"Redirect fails :\"\n                            + getConfigFile(cms).getWorkplaceActionPath()\n                            + C_WP_EXPLORER_FILELIST, CmsException.C_UNKNOWN_EXCEPTION, e);\n            }\n            return null;\n        } else {            \n            CmsResource file = readResource(cms, filename);\n            String lasturl = getLastUrl(cms, parameters);\n                        \n            if (\"check\".equals(action)){\n                if(file.getState() != C_STATE_DELETED){\n                    if(checkLocked(cms, file)){\n                        action = \"ok\";\n                    } else {\n                        // ask user if the locks should be removed\n                        return startProcessing(cms, xmlTemplateDocument, elementName, parameters,\"asklock\");\n                    }\n                } else {\n                    action = \"ok\";\n                }\n            } else if(\"rmlocks\".equals(action)){\n                // remove the locks and publish\n                try{\n                    unlockResource(cms, file);\n                    action = \"ok\";\n                } catch (CmsException exc){\n                    xmlTemplateDocument.setData(\"details\", Utils.getStackTrace(exc));\n                    xmlTemplateDocument.setData(\"lasturl\", lasturl);\n                    return startProcessing(cms, xmlTemplateDocument, elementName, parameters,\"errorlock\");\n                }\n            }\n            if(\"ok\".equals(action)) {\n                // publish is confirmed, let's go\n                try{\n                    // here is the plan: \n                    // first create a direct publish temp project (A)\n                    // then start the link checker with this project (A)\n                    // the link checker will delete project (A) after having checked the links\n                    // if broken links where found, display a confirmation dialog\n                    // if the user continues the publish (or no broken links where found)\n                    // auto-create a direct publish temp project (B) and publish this directly\n                    \n                    int tempProjectId = cms.publishResource(file.getAbsolutePath(), true);\n                    if(lasturl == null){\n                        lasturl = \"\";\n                    }\n                    session.putValue(C_PUBLISH_LASTURL, lasturl);\n                    // first part of the publish: check for broken links\n                    CmsAdminLinkmanagementThread doCheck = new CmsAdminLinkmanagementThread(cms, tempProjectId, file.getAbsolutePath());\n                    doCheck.start();\n                    session.putValue(C_PUBLISH_LINKCHECK_THREAD, doCheck);\n                    template = \"showresult\";\n                \n                } catch(CmsException e){\n                    session.removeValue(C_PARA_FILE);\n                    xmlTemplateDocument.setData(\"details\", Utils.getStackTrace(e));\n                    xmlTemplateDocument.setData(\"lasturl\", lasturl);\n                    return startProcessing(cms, xmlTemplateDocument, \"\", parameters, \"error\");\n                }\n            }\n        }        \n        // process the selected template\n        return startProcessing(cms, xmlTemplateDocument, \"\", parameters, template);\n    }","commit_id":"f44036f0a75c0164328423184285ee70f421a5d5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public PsiReference getReference() {\n    final PsiReference[] refs = getReferences();\n    if (refs != null && refs.length > 0){\n      return refs[0];\n    }\n    return null;\n  }","id":63504,"modified_method":"public PsiReference getReference() {\n    final PsiReference[] refs = getReferences();\n    if (refs.length > 0) return refs[0];\n    return null;\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Object[] getVariants() {\n      final List<String> variants = new ArrayList<String>();\n\n      final XmlElementDescriptor parentDescriptor = getParent().getDescriptor();\n      if (parentDescriptor != null){\n        final XmlTag declarationTag = getParent();\n        final XmlAttribute[] attributes = declarationTag.getAttributes();\n        final XmlAttributeDescriptor[] descriptors = parentDescriptor.getAttributesDescriptors();\n        outer:\n        for (XmlAttributeDescriptor descriptor1 : descriptors) {\n          for (final XmlAttribute attribute : attributes) {\n            if (attribute == XmlAttributeImpl.this) continue;\n            final String name = attribute.getName();\n            if (name != null && name.equals(descriptor1.getName())) continue outer;\n          }\n          final XmlAttributeDescriptor descriptor = descriptor1;\n          variants.add(descriptor.getName());\n        }\n      }\n      return variants.toArray();\n    }","id":63505,"modified_method":"public Object[] getVariants() {\n      final List<String> variants = new ArrayList<String>();\n\n      final XmlElementDescriptor parentDescriptor = getParent().getDescriptor();\n      if (parentDescriptor != null){\n        final XmlTag declarationTag = getParent();\n        final XmlAttribute[] attributes = declarationTag.getAttributes();\n        final XmlAttributeDescriptor[] descriptors = parentDescriptor.getAttributesDescriptors();\n        outer:\n        for (XmlAttributeDescriptor descriptor : descriptors) {\n          for (final XmlAttribute attribute : attributes) {\n            if (attribute == XmlAttributeImpl.this) continue;\n            final String name = attribute.getName();\n            if (name.equals(descriptor.getName())) continue outer;\n          }\n          variants.add(descriptor.getName());\n        }\n      }\n      return variants.toArray();\n    }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public PsiReference[] getReferences() {\n    final PsiElement parent = getParent();\n    if (!(parent instanceof XmlTag)) return PsiReference.EMPTY_ARRAY;\n    final XmlElementDescriptor descr = ((XmlTag)parent).getDescriptor();\n    if (descr != null){\n      return new PsiReference[]{new MyPsiReference(descr)};\n    }\n    return PsiReference.EMPTY_ARRAY;\n  }","id":63506,"modified_method":"@NotNull\n  public PsiReference[] getReferences() {\n    final PsiElement parentElement = getParent();\n    if (!(parentElement instanceof XmlTag)) return PsiReference.EMPTY_ARRAY;\n    final XmlElementDescriptor descr = ((XmlTag)parentElement).getDescriptor();\n    if (descr != null){\n      return new PsiReference[]{new MyPsiReference(descr)};\n    }\n    return PsiReference.EMPTY_ARRAY;\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public XmlAttributeDescriptor getDescriptor() {\n    final PsiElement parent = getParent();\n    if (parent instanceof XmlDecl) return null;\n    final XmlElementDescriptor descr = ((XmlTag)parent).getDescriptor();\n    if (descr == null) return null;\n    final XmlAttributeDescriptor attributeDescr = descr.getAttributeDescriptor(this);\n    return attributeDescr == null ? descr.getAttributeDescriptor(getName()) : attributeDescr;\n  }","id":63507,"modified_method":"@Nullable\n  public XmlAttributeDescriptor getDescriptor() {\n    final PsiElement parentElement = getParent();\n    if (parentElement instanceof XmlDecl) return null;\n    final XmlElementDescriptor descr = ((XmlTag)parentElement).getDescriptor();\n    if (descr == null) return null;\n    final XmlAttributeDescriptor attributeDescr = descr.getAttributeDescriptor(this);\n    return attributeDescr == null ? descr.getAttributeDescriptor(getName()) : attributeDescr;\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String getLocalName() {\n    return getName() != null ? XmlUtil.findLocalNameByQualifiedName(getName()) : \"\";\n  }","id":63508,"modified_method":"@NotNull\n  public String getLocalName() {\n    return XmlUtil.findLocalNameByQualifiedName(getName());\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String getNamespace() {\n    final String name = getName();\n    if(name != null){\n      final String prefixByQualifiedName = XmlUtil.findPrefixByQualifiedName(name);\n      if(prefixByQualifiedName.length() == 0) return getParent().getNamespace();\n      return getParent().getNamespaceByPrefix(prefixByQualifiedName);\n    }\n    return XmlUtil.EMPTY_URI;\n  }","id":63509,"modified_method":"@NotNull\n  public String getNamespace() {\n    final String name = getName();\n    final String prefixByQualifiedName = XmlUtil.findPrefixByQualifiedName(name);\n    if(prefixByQualifiedName.length() == 0) return getParent().getNamespace();\n    return getParent().getNamespaceByPrefix(prefixByQualifiedName);\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static PsiElement parseEntityRef(PsiFile targetFile, XmlEntityRef ref, boolean cacheValue) {\n    int type = getContextType(ref);\n\n    {\n      final XmlEntityDecl entityDecl = ref.resolve(targetFile);\n      if (entityDecl != null) return parseEntityDecl(entityDecl, targetFile, type, cacheValue, ref);\n    }\n\n    PsiElement e = ref;\n    while (e != null) {\n      if (e.getUserData(XmlElement.ORIGINAL_ELEMENT) != null) {\n        e = (PsiElement)e.getUserData(XmlElement.ORIGINAL_ELEMENT);\n        final PsiFile f = e.getContainingFile();\n        if (f != null) {\n          final XmlEntityDecl entityDecl = ref.resolve(targetFile);\n          if (entityDecl != null) return parseEntityDecl(entityDecl, targetFile, type, cacheValue, ref);\n        }\n\n        continue;\n      }\n      if (e instanceof PsiFile) {\n        PsiFile refFile = (PsiFile)e;\n        final XmlEntityDecl entityDecl = ref.resolve(refFile);\n        if (entityDecl != null) return parseEntityDecl(entityDecl, targetFile, type, cacheValue, ref);\n        break;\n      }\n\n      e = e.getParent();\n    }\n\n    final PsiElement element = ref.getUserData(XmlElement.DEPENDING_ELEMENT);\n    if (element instanceof XmlFile) {\n      final XmlEntityDecl entityDecl = ref.resolve((PsiFile)element);\n      if (entityDecl != null) return parseEntityDecl(entityDecl, targetFile, type, cacheValue, ref); \n    }\n    \n    return null;\n  }","id":63510,"modified_method":"private static PsiElement parseEntityRef(PsiFile targetFile, XmlEntityRef ref, boolean cacheValue) {\n    int type = getContextType(ref);\n\n    {\n      final XmlEntityDecl entityDecl = ref.resolve(targetFile);\n      if (entityDecl != null) return parseEntityDecl(entityDecl, targetFile, type, cacheValue, ref);\n    }\n\n    PsiElement e = ref;\n    while (e != null) {\n      if (e.getUserData(XmlElement.ORIGINAL_ELEMENT) != null) {\n        e = e.getUserData(XmlElement.ORIGINAL_ELEMENT);\n        final PsiFile f = e.getContainingFile();\n        if (f != null) {\n          final XmlEntityDecl entityDecl = ref.resolve(targetFile);\n          if (entityDecl != null) return parseEntityDecl(entityDecl, targetFile, type, cacheValue, ref);\n        }\n\n        continue;\n      }\n      if (e instanceof PsiFile) {\n        PsiFile refFile = (PsiFile)e;\n        final XmlEntityDecl entityDecl = ref.resolve(refFile);\n        if (entityDecl != null) return parseEntityDecl(entityDecl, targetFile, type, cacheValue, ref);\n        break;\n      }\n\n      e = e.getParent();\n    }\n\n    final PsiElement element = ref.getUserData(XmlElement.DEPENDING_ELEMENT);\n    if (element instanceof XmlFile) {\n      final XmlEntityDecl entityDecl = ref.resolve((PsiFile)element);\n      if (entityDecl != null) return parseEntityDecl(entityDecl, targetFile, type, cacheValue, ref); \n    }\n    \n    return null;\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static final String findPrefixByQualifiedName(String name) {\n    final int prefixEnd = name.indexOf(':');\n    if (prefixEnd > 0) {\n      return name.substring(0, prefixEnd);\n    }\n    return \"\";\n  }","id":63511,"modified_method":"public static String findPrefixByQualifiedName(String name) {\n    final int prefixEnd = name.indexOf(':');\n    if (prefixEnd > 0) {\n      return name.substring(0, prefixEnd);\n    }\n    return \"\";\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static XmlElementDescriptor findXmlDescriptorByType(final XmlTag xmlTag) {\n    XmlElementDescriptor elementDescriptor = null;\n    final String type = xmlTag.getAttributeValue(\"type\", XML_SCHEMA_INSTANCE_URI);\n\n    if(type != null){\n      final String namespaceByPrefix = findNamespaceByPrefix(findPrefixByQualifiedName(type), xmlTag);\n      final XmlNSDescriptor typeDecr = xmlTag.getNSDescriptor(namespaceByPrefix, true);\n\n      if(typeDecr instanceof XmlNSDescriptorImpl){\n        final XmlNSDescriptorImpl schemaDescriptor = ((XmlNSDescriptorImpl)typeDecr);\n        final XmlElementDescriptor descriptorByType = schemaDescriptor.getDescriptorByType(type, xmlTag);\n        elementDescriptor = descriptorByType;\n      }\n    }\n\n    return elementDescriptor;\n  }","id":63512,"modified_method":"public static XmlElementDescriptor findXmlDescriptorByType(final XmlTag xmlTag) {\n    XmlElementDescriptor elementDescriptor = null;\n    final String type = xmlTag.getAttributeValue(\"type\", XML_SCHEMA_INSTANCE_URI);\n\n    if(type != null){\n      final String namespaceByPrefix = findNamespaceByPrefix(findPrefixByQualifiedName(type), xmlTag);\n      final XmlNSDescriptor typeDecr = xmlTag.getNSDescriptor(namespaceByPrefix, true);\n\n      if(typeDecr instanceof XmlNSDescriptorImpl){\n        final XmlNSDescriptorImpl schemaDescriptor = ((XmlNSDescriptorImpl)typeDecr);\n        elementDescriptor = schemaDescriptor.getDescriptorByType(type, xmlTag);\n      }\n    }\n\n    return elementDescriptor;\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static final boolean toCode(String str) {\n    for (int i = 0; i < str.length(); i++) {\n      if (toCode(str.charAt(i))) return true;\n    }\n    return false;\n  }","id":63513,"modified_method":"public static boolean toCode(String str) {\n    for (int i = 0; i < str.length(); i++) {\n      if (toCode(str.charAt(i))) return true;\n    }\n    return false;\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void computeTag(XmlTag tag, final Map<String,List<String>> tagsMap, final Map<String,List<MyAttributeInfo>> attributesMap) {\n    if (tag == null) {\n      return;\n    }\n    final String tagName = tag.getName();\n\n    {\n      List<MyAttributeInfo> list = attributesMap.get(tagName);\n      if (list == null) {\n        list = new ArrayList<MyAttributeInfo>();\n        final XmlAttribute[] attributes = tag.getAttributes();\n        for (int i = 0; i < attributes.length; i++) {\n          final XmlAttribute attribute = attributes[i];\n          list.add(new MyAttributeInfo(attribute.getName()));\n        }\n      }\n      else {\n        final XmlAttribute[] attributes = tag.getAttributes();\n        Collections.sort((List)list);\n        Arrays.sort(attributes, new Comparator() {\n          public int compare(Object o1, Object o2) {\n            return ((XmlAttribute)o1).getName().compareTo(((XmlAttribute)o2).getName());\n          }\n        });\n\n        final Iterator<MyAttributeInfo> iter = list.iterator();\n        int index = 0;\n        list = new ArrayList<MyAttributeInfo>();\n        while (iter.hasNext()) {\n          final MyAttributeInfo info = iter.next();\n          boolean requiredFlag = false;\n          while (attributes.length > index) {\n            if (info.compareTo(attributes[index]) != 0) {\n              if (info.compareTo(attributes[index]) < 0) {\n                break;\n              }\n              if (attributes[index].getValue() != null) list.add(new MyAttributeInfo(attributes[index].getName(), false));\n              index++;\n            }\n            else {\n              requiredFlag = true;\n              index++;\n              break;\n            }\n          }\n          info.myRequired &= requiredFlag;\n          list.add(info);\n        }\n        while (attributes.length > index) {\n          if (attributes[index].getValue() != null) {\n            list.add(new MyAttributeInfo(attributes[index++].getName(), false));\n          }\n          else {\n            index++;\n          }\n        }\n      }\n      attributesMap.put(tagName, list);\n    }\n    {\n      final List<String> tags = tagsMap.get(tagName) != null ? tagsMap.get(tagName) : new ArrayList<String>();\n      tagsMap.put(tagName, tags);\n      tag.processElements(new FilterElementProcessor(new ClassFilter(XmlTag.class)) {\n        public void add(PsiElement element) {\n          XmlTag tag = (XmlTag)element;\n          if (!tags.contains(tag.getName())) {\n            tags.add(tag.getName());\n          }\n          computeTag(tag, tagsMap, attributesMap);\n        }\n      }, tag);\n    }\n  }","id":63514,"modified_method":"private static void computeTag(XmlTag tag, final Map<String,List<String>> tagsMap, final Map<String,List<MyAttributeInfo>> attributesMap) {\n    if (tag == null) {\n      return;\n    }\n    final String tagName = tag.getName();\n\n    {\n      List<MyAttributeInfo> list = attributesMap.get(tagName);\n      if (list == null) {\n        list = new ArrayList<MyAttributeInfo>();\n        final XmlAttribute[] attributes = tag.getAttributes();\n        for (final XmlAttribute attribute : attributes) {\n          list.add(new MyAttributeInfo(attribute.getName()));\n        }\n      }\n      else {\n        final XmlAttribute[] attributes = tag.getAttributes();\n        Collections.sort(list);\n        Arrays.sort(attributes, new Comparator<XmlAttribute>() {\n          public int compare(XmlAttribute attr1, XmlAttribute attr2) {\n            return attr1.getName().compareTo(attr2.getName());\n          }\n        });\n\n        final Iterator<MyAttributeInfo> iter = list.iterator();\n        int index = 0;\n        list = new ArrayList<MyAttributeInfo>();\n        while (iter.hasNext()) {\n          final MyAttributeInfo info = iter.next();\n          boolean requiredFlag = false;\n          while (attributes.length > index) {\n            if (info.compareTo(attributes[index]) != 0) {\n              if (info.compareTo(attributes[index]) < 0) {\n                break;\n              }\n              if (attributes[index].getValue() != null) list.add(new MyAttributeInfo(attributes[index].getName(), false));\n              index++;\n            }\n            else {\n              requiredFlag = true;\n              index++;\n              break;\n            }\n          }\n          info.myRequired &= requiredFlag;\n          list.add(info);\n        }\n        while (attributes.length > index) {\n          if (attributes[index].getValue() != null) {\n            list.add(new MyAttributeInfo(attributes[index++].getName(), false));\n          }\n          else {\n            index++;\n          }\n        }\n      }\n      attributesMap.put(tagName, list);\n    }\n    {\n      final List<String> tags = tagsMap.get(tagName) != null ? tagsMap.get(tagName) : new ArrayList<String>();\n      tagsMap.put(tagName, tags);\n      tag.processElements(new FilterElementProcessor(new ClassFilter(XmlTag.class)) {\n        public void add(PsiElement element) {\n          XmlTag tag = (XmlTag)element;\n          if (!tags.contains(tag.getName())) {\n            tags.add(tag.getName());\n          }\n          computeTag(tag, tagsMap, attributesMap);\n        }\n      }, tag);\n    }\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static XmlFile findXmlFile(PsiFile base, String uri) {\n    PsiFile result = null;\n    if (ApplicationManager.getApplication().isUnitTestMode()) {\n      final JspFile jspFile = PsiUtil.getJspFile(base);\n      String data = jspFile != null ? jspFile.getUserData(TEST_PATH) : base.getUserData(TEST_PATH);\n\n      if (data == null && base.getOriginalFile() != null) {\n        data = base.getOriginalFile().getUserData(TEST_PATH);\n      }\n      if (data != null) {\n        String filePath = data + \"/\" + uri;\n        final VirtualFile path = LocalFileSystem.getInstance().findFileByPath(filePath.replace(File.separatorChar, '/'));\n        if (path != null) {\n          result = base.getManager().findFile(path);\n        }\n      }\n    }\n    if (result == null) {\n      result = PsiUtil.findRelativeFile(uri, base);\n    }\n\n    if (result == null && PsiUtil.isInJspFile(base)) {\n      result = JspManager.getInstance(base.getProject()).getTldFileByUri(uri, PsiUtil.getJspFile(base));\n    }\n\n    if (result instanceof XmlFile) {\n      XmlFile xmlFile = (XmlFile)result;\n      return xmlFile;\n    }\n    if (PsiUtil.isInJspFile(base)) return JspManager.getInstance(base.getProject()).getTldFileByUri(uri, PsiUtil.getJspFile(base));\n    return null;\n  }","id":63515,"modified_method":"public static XmlFile findXmlFile(PsiFile base, String uri) {\n    PsiFile result = null;\n    if (ApplicationManager.getApplication().isUnitTestMode()) {\n      final JspFile jspFile = PsiUtil.getJspFile(base);\n      String data = jspFile != null ? jspFile.getUserData(TEST_PATH) : base.getUserData(TEST_PATH);\n\n      if (data == null) {\n        PsiFile originalFile = base.getOriginalFile();\n        if (originalFile != null) {\n          data = originalFile.getUserData(TEST_PATH);\n        }\n      }\n      if (data != null) {\n        String filePath = data + \"/\" + uri;\n        final VirtualFile path = LocalFileSystem.getInstance().findFileByPath(filePath.replace(File.separatorChar, '/'));\n        if (path != null) {\n          result = base.getManager().findFile(path);\n        }\n      }\n    }\n    if (result == null) {\n      result = PsiUtil.findRelativeFile(uri, base);\n    }\n\n    if (result == null && PsiUtil.isInJspFile(base)) {\n      result = JspManager.getInstance(base.getProject()).getTldFileByUri(uri, PsiUtil.getJspFile(base));\n    }\n\n    if (result instanceof XmlFile) {\n      return (XmlFile)result;\n    }\n    if (PsiUtil.isInJspFile(base)) return JspManager.getInstance(base.getProject()).getTldFileByUri(uri, PsiUtil.getJspFile(base));\n    return null;\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static final boolean toCode(char ch) {\n    return \"<&>\\u00a0\".indexOf(ch) >= 0;\n  }","id":63516,"modified_method":"public static boolean toCode(char ch) {\n    return \"<&>\\u00a0\".indexOf(ch) >= 0;\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String generateAttributeDTD(MyAttributeInfo info) {\n    if (info.myName.endsWith(CompletionUtil.DUMMY_IDENTIFIER.trim())) return \"\";\n    final StringBuffer buffer = new StringBuffer();\n    buffer.append(info.myName + \" \");\n    //if (\"id\".equals(info.myName)) {\n    //  buffer.append(\"ID\");\n    //}\n    //else if (\"ref\".equals(info.myName)) {\n    //  buffer.append(\"IDREF\");\n    //} else {\n      buffer.append(\"CDATA\");\n    //}\n    if (info.myRequired) {\n      buffer.append(\" #REQUIRED\");\n    }\n    else {\n      buffer.append(\" #IMPLIED\");\n    }\n    return buffer.toString();\n  }","id":63517,"modified_method":"private static String generateAttributeDTD(MyAttributeInfo info) {\n    if (info.myName.endsWith(CompletionUtil.DUMMY_IDENTIFIER.trim())) return \"\";\n    final StringBuffer buffer = new StringBuffer();\n    buffer.append(info.myName).append(\" \");\n    //if (\"id\".equals(info.myName)) {\n    //  buffer.append(\"ID\");\n    //}\n    //else if (\"ref\".equals(info.myName)) {\n    //  buffer.append(\"IDREF\");\n    //} else {\n      buffer.append(\"CDATA\");\n    //}\n    if (info.myRequired) {\n      buffer.append(\" #REQUIRED\");\n    }\n    else {\n      buffer.append(\" #IMPLIED\");\n    }\n    return buffer.toString();\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String generateElementDTD(String name, List<String> tags, List<MyAttributeInfo> attributes) {\n    if (name == null || \"\".equals(name)) return \"\";\n    if (name.endsWith(CompletionUtil.DUMMY_IDENTIFIER.trim())) return \"\";\n\n    final StringBuffer buffer = new StringBuffer();\n    {\n      buffer.append(\"<!ELEMENT \" + name + \" \");\n      if (tags.isEmpty()) {\n        buffer.append(\"(#PCDATA)>\\n\");\n      }\n      else {\n        buffer.append(\"(\");\n        final Iterator<String> iter = tags.iterator();\n        while (iter.hasNext()) {\n          final String tagName = iter.next();\n          buffer.append(tagName);\n          if (iter.hasNext()) {\n            buffer.append(\"|\");\n          }\n          else {\n            buffer.append(\")*\");\n          }\n        }\n        buffer.append(\">\\n\");\n      }\n    }\n    {\n      if (!attributes.isEmpty()) {\n        buffer.append(\"<!ATTLIST \" + name);\n        final Iterator<MyAttributeInfo> iter = attributes.iterator();\n        while (iter.hasNext()) {\n          final MyAttributeInfo info = iter.next();\n          buffer.append(\"\\n    \" + generateAttributeDTD(info));\n        }\n        buffer.append(\">\\n\");\n      }\n    }\n    return buffer.toString();\n  }","id":63518,"modified_method":"public static String generateElementDTD(String name, List<String> tags, List<MyAttributeInfo> attributes) {\n    if (name == null || \"\".equals(name)) return \"\";\n    if (name.endsWith(CompletionUtil.DUMMY_IDENTIFIER.trim())) return \"\";\n\n    final StringBuffer buffer = new StringBuffer();\n    {\n      buffer.append(\"<!ELEMENT \").append(name).append(\" \");\n      if (tags.isEmpty()) {\n        buffer.append(\"(#PCDATA)>\\n\");\n      }\n      else {\n        buffer.append(\"(\");\n        final Iterator<String> iter = tags.iterator();\n        while (iter.hasNext()) {\n          final String tagName = iter.next();\n          buffer.append(tagName);\n          if (iter.hasNext()) {\n            buffer.append(\"|\");\n          }\n          else {\n            buffer.append(\")*\");\n          }\n        }\n        buffer.append(\">\\n\");\n      }\n    }\n    {\n      if (!attributes.isEmpty()) {\n        buffer.append(\"<!ATTLIST \").append(name);\n        for (final MyAttributeInfo info : attributes) {\n          buffer.append(\"\\n    \").append(generateAttributeDTD(info));\n        }\n        buffer.append(\">\\n\");\n      }\n    }\n    return buffer.toString();\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static XmlToken getTokenOfType(PsiElement element, IElementType type) {\n    if (element == null) {\n      return null;\n    }\n\n    PsiElement[] children = element.getChildren();\n\n    for (int i = 0; i < children.length; i++) {\n      PsiElement child = children[i];\n\n      if (child instanceof XmlToken) {\n        XmlToken token = (XmlToken)child;\n\n        if (token.getTokenType() == type) {\n          return token;\n        }\n      }\n    }\n\n    return null;\n  }","id":63519,"modified_method":"public static XmlToken getTokenOfType(PsiElement element, IElementType type) {\n    if (element == null) {\n      return null;\n    }\n\n    PsiElement[] children = element.getChildren();\n\n    for (PsiElement child : children) {\n      if (child instanceof XmlToken) {\n        XmlToken token = (XmlToken) child;\n\n        if (token.getTokenType() == type) {\n          return token;\n        }\n      }\n    }\n\n    return null;\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String generateDocumentDTD(XmlDocument doc) {\n    final StringBuffer buffer = new StringBuffer();\n    final Map<String,List<String>> tags = new HashMap<String, List<String>>();\n    final Map<String,List<MyAttributeInfo>> attributes = new HashMap<String, List<MyAttributeInfo>>();\n    final XmlTag rootTag = doc.getRootTag();\n    computeTag(rootTag, tags, attributes);\n    \n    // For supporting not welformed XML\n    for(PsiElement element = rootTag != null ? rootTag.getNextSibling():null; \n        element != null; \n        element = element.getNextSibling()\n    ) {\n      if (element instanceof XmlTag) {\n        computeTag((XmlTag)element, tags, attributes);\n      }\n    }\n    \n    final Iterator<String> iter = tags.keySet().iterator();\n    while (iter.hasNext()) {\n      final String tagName = iter.next();\n      buffer.append(generateElementDTD(tagName, tags.get(tagName), attributes.get(tagName)));\n    }\n    return buffer.toString();\n  }","id":63520,"modified_method":"public static String generateDocumentDTD(XmlDocument doc) {\n    final StringBuffer buffer = new StringBuffer();\n    final Map<String,List<String>> tags = new HashMap<String, List<String>>();\n    final Map<String,List<MyAttributeInfo>> attributes = new HashMap<String, List<MyAttributeInfo>>();\n    final XmlTag rootTag = doc.getRootTag();\n    computeTag(rootTag, tags, attributes);\n    \n    // For supporting not welformed XML\n    for(PsiElement element = rootTag != null ? rootTag.getNextSibling():null; \n        element != null; \n        element = element.getNextSibling()\n    ) {\n      if (element instanceof XmlTag) {\n        computeTag((XmlTag)element, tags, attributes);\n      }\n    }\n\n    for (final String tagName : tags.keySet()) {\n      buffer.append(generateElementDTD(tagName, tags.get(tagName), attributes.get(tagName)));\n    }\n    return buffer.toString();\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String[] findNamespacesByURI(XmlFile file, String uri) {\n    if (file == null) return ArrayUtil.EMPTY_STRING_ARRAY;\n    final XmlDocument document = file.getDocument();\n    if (document == null) return ArrayUtil.EMPTY_STRING_ARRAY;\n    final XmlTag tag = document.getRootTag();\n    if (tag == null) return ArrayUtil.EMPTY_STRING_ARRAY;\n    XmlAttribute[] attributes = tag.getAttributes();\n\n\n    List<String> result = new ArrayList<String>();\n\n    for (int i = 0; i < attributes.length; i++) {\n      XmlAttribute attribute = attributes[i];\n      if (attribute.getName().startsWith(\"xmlns:\") &&\n          attribute.getValue().equals(uri)) {\n        result.add(attribute.getName().substring(\"xmlns:\".length()));\n      }\n      if (\"xmlns\".equals(attribute.getName()) && attribute.getValue().equals(uri)) result.add(\"\");\n    }\n\n    return result.toArray(new String[result.size()]);\n  }","id":63521,"modified_method":"public static String[] findNamespacesByURI(XmlFile file, String uri) {\n    if (file == null) return ArrayUtil.EMPTY_STRING_ARRAY;\n    final XmlDocument document = file.getDocument();\n    if (document == null) return ArrayUtil.EMPTY_STRING_ARRAY;\n    final XmlTag tag = document.getRootTag();\n    if (tag == null) return ArrayUtil.EMPTY_STRING_ARRAY;\n    XmlAttribute[] attributes = tag.getAttributes();\n\n\n    List<String> result = new ArrayList<String>();\n\n    for (XmlAttribute attribute : attributes) {\n      if (attribute.getName().startsWith(\"xmlns:\") &&\n          attribute.getValue().equals(uri)) {\n        result.add(attribute.getName().substring(\"xmlns:\".length()));\n      }\n      if (\"xmlns\".equals(attribute.getName()) && attribute.getValue().equals(uri)) result.add(\"\");\n    }\n\n    return result.toArray(new String[result.size()]);\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static PsiElement parseEntityDecl(final XmlEntityDecl entityDecl,\n                                            final PsiFile targetFile,\n                                            final int type,\n                                            boolean cacheValue,\n                                            final XmlEntityRef entityRef) {\n    if (!cacheValue) return entityDecl.parse(targetFile, type, entityRef);\n\n    CachedValue<PsiElement> value = entityRef.getUserData(PARSED_DECL_KEY);\n//    return entityDecl.parse(targetFile, type);\n\n    if (value == null) {\n      value = entityDecl.getManager().getCachedValuesManager().createCachedValue(new CachedValueProvider<PsiElement>() {\n        public CachedValueProvider.Result<PsiElement> compute() {\n          final PsiElement res = entityDecl.parse(targetFile, type, entityRef);\n          if (res == null) return new Result<PsiElement>(res, new Object[]{targetFile});\n          if (!entityDecl.isInternalReference()) XmlEntityRefImpl.copyEntityCaches(res.getContainingFile(), targetFile);\n          return new CachedValueProvider.Result<PsiElement>(res, new Object[]{res.getUserData(XmlElement.DEPENDING_ELEMENT), entityDecl, targetFile, entityRef});\n        }\n      }, false);\n      entityRef.putUserData(PARSED_DECL_KEY, value);\n    }\n\n    return value.getValue();\n  }","id":63522,"modified_method":"private static PsiElement parseEntityDecl(final XmlEntityDecl entityDecl,\n                                            final PsiFile targetFile,\n                                            final int type,\n                                            boolean cacheValue,\n                                            final XmlEntityRef entityRef) {\n    if (!cacheValue) return entityDecl.parse(targetFile, type, entityRef);\n\n    CachedValue<PsiElement> value = entityRef.getUserData(PARSED_DECL_KEY);\n//    return entityDecl.parse(targetFile, type);\n\n    if (value == null) {\n      value = entityDecl.getManager().getCachedValuesManager().createCachedValue(new CachedValueProvider<PsiElement>() {\n        public CachedValueProvider.Result<PsiElement> compute() {\n          final PsiElement res = entityDecl.parse(targetFile, type, entityRef);\n          if (res == null) return new Result<PsiElement>(res, targetFile);\n          if (!entityDecl.isInternalReference()) XmlEntityRefImpl.copyEntityCaches(res.getContainingFile(), targetFile);\n          return new CachedValueProvider.Result<PsiElement>(res, res.getUserData(XmlElement.DEPENDING_ELEMENT), entityDecl, targetFile, entityRef);\n        }\n      }, false);\n      entityRef.putUserData(PARSED_DECL_KEY, value);\n    }\n\n    return value.getValue();\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static final String findLocalNameByQualifiedName(String name) {\n    return name.substring(name.indexOf(':') + 1);\n  }","id":63523,"modified_method":"public static String findLocalNameByQualifiedName(String name) {\n    return name.substring(name.indexOf(':') + 1);\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String findNamespaceByPrefix(final String prefix, XmlTag contextTag) {\n    final String s = contextTag.getNamespaceByPrefix(prefix);\n    if (s != null) return s;\n    return EMPTY_URI;\n  }","id":63524,"modified_method":"public static String findNamespaceByPrefix(final String prefix, XmlTag contextTag) {\n    return contextTag.getNamespaceByPrefix(prefix);\n  }","commit_id":"f87ddbdc5deed4c1c35bfe13cafbcd3fda513aa6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public PsiFile getResourceLocation(@NotNull @NonNls final String url, @NotNull final PsiFile baseFile, final String version) {\n    VirtualFile file = baseFile.getVirtualFile();\n    if (file == null && baseFile.getOriginalFile() != null) {\n      file = baseFile.getOriginalFile().getVirtualFile();\n    }\n    \n    final Module moduleForFile =\n      file != null ? ProjectRootManager.getInstance(baseFile.getProject()).getFileIndex().getModuleForFile(file):null;\n    final XmlFile schema = moduleForFile != null ? XmlSchemaProvider.findSchema(url, moduleForFile,baseFile):null;\n    if (schema != null) {\n      return schema;\n    }\n    final String location = getResourceLocation(url, version);\n    return XmlUtil.findXmlFile(baseFile, location);\n  }","id":63525,"modified_method":"public PsiFile getResourceLocation(@NotNull @NonNls final String url, @NotNull final PsiFile baseFile, final String version) {\n    VirtualFile file = baseFile.getVirtualFile();\n    if (file == null) {\n      final PsiFile originalFile = baseFile.getOriginalFile();\n      if (originalFile != null)\n        file = originalFile.getVirtualFile();\n    }\n\n    final Module moduleForFile =\n      file != null ? ProjectRootManager.getInstance(baseFile.getProject()).getFileIndex().getModuleForFile(file):null;\n    final XmlFile schema = XmlSchemaProvider.findSchema(url, moduleForFile,baseFile);\n    if (schema != null) {\n      return schema;\n    }\n    final String location = getResourceLocation(url, version);\n    return XmlUtil.findXmlFile(baseFile, location);\n  }","commit_id":"722b4fa36e38f7a54bbefc455bfafa60fab20c45","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private Collection<PsiFileSystemItem> getContextByFile(@NotNull PsiFile file) {\n    final PsiElement context = file.getContext();\n    if (context != null) file = context.getContainingFile();\n    \n    final Project project = file.getProject();\n    final FileContextProvider contextProvider = FileContextProvider.getProvider(file);\n    if (contextProvider != null) {\n      final Collection<PsiFileSystemItem> folders = contextProvider.getContextFolders(file);\n      if (!folders.isEmpty()) {\n        return folders;\n      }\n      if (useIncludingFileAsContext()) {\n        final PsiFile contextFile = contextProvider.getContextFile(file);\n        if (contextFile != null) {\n          return Collections.<PsiFileSystemItem>singleton(contextFile.getParent());\n        }\n      }\n    }\n\n    VirtualFile virtualFile = file.getVirtualFile();\n    if (virtualFile == null && file.getOriginalFile() != null) {\n      virtualFile = file.getOriginalFile().getVirtualFile();\n    }\n\n    if (virtualFile != null) {\n      final FileReferenceHelper[] helpers = FileReferenceHelperRegistrar.getHelpers();\n      final ArrayList<PsiFileSystemItem> list = new ArrayList<PsiFileSystemItem>();\n      for (FileReferenceHelper helper : helpers) {\n        if (helper.isMine(project, virtualFile)) {\n          list.addAll(helper.getContexts(project, virtualFile));  \n        }\n      }\n      if (list.size() > 0) {\n        return list;\n      }\n      final VirtualFile parent = virtualFile.getParent();\n      if (parent != null) {\n        final PsiDirectory directory = file.getManager().findDirectory(parent);\n        if (directory != null) {\n          return Collections.<PsiFileSystemItem>singleton(directory);\n        }\n      }\n    }\n    return Collections.emptyList();\n  }","id":63526,"modified_method":"@Nullable\n  private Collection<PsiFileSystemItem> getContextByFile(@NotNull PsiFile file) {\n    final PsiElement context = file.getContext();\n    if (context != null) file = context.getContainingFile();\n    \n    if (useIncludingFileAsContext()) {\n      final FileContextProvider contextProvider = FileContextProvider.getProvider(file);\n      if (contextProvider != null) {\n        final Collection<PsiFileSystemItem> folders = contextProvider.getContextFolders(file);\n        if (!folders.isEmpty()) {\n          return folders;\n        }\n        final PsiFile contextFile = contextProvider.getContextFile(file);\n        if (contextFile != null) {\n          return Collections.<PsiFileSystemItem>singleton(contextFile.getParent());\n        }\n      }\n    }\n\n    VirtualFile virtualFile = file.getVirtualFile();\n    final PsiFile originalFile = file.getOriginalFile();\n    if (virtualFile == null && originalFile != null) {\n      virtualFile = originalFile.getVirtualFile();\n    }\n\n    if (virtualFile != null) {\n      final FileReferenceHelper[] helpers = FileReferenceHelperRegistrar.getHelpers();\n      final ArrayList<PsiFileSystemItem> list = new ArrayList<PsiFileSystemItem>();\n      final Project project = file.getProject();\n      for (FileReferenceHelper helper : helpers) {\n        if (helper.isMine(project, virtualFile)) {\n          list.addAll(helper.getContexts(project, virtualFile));  \n        }\n      }\n      if (list.size() > 0) {\n        return list;\n      }\n      final VirtualFile parent = virtualFile.getParent();\n      if (parent != null) {\n        final PsiDirectory directory = file.getManager().findDirectory(parent);\n        if (directory != null) {\n          return Collections.<PsiFileSystemItem>singleton(directory);\n        }\n      }\n    }\n    return Collections.emptyList();\n  }","commit_id":"f7385493d32957062cff358533e199110caa747c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * @param plugins\n     */\n    static void installWebStartPlugins() {\n       URL pluginListProperties = DetectorFactoryCollection.getCoreResource(\"pluginlist.properties\");\n        if (pluginListProperties != null) {\n            try {\n\n                DetectorFactoryCollection.jawsDebugMessage(pluginListProperties.toString());\n                URL base = getUrlBase(pluginListProperties);\n\n                BufferedReader in = UTF8.bufferedReader(pluginListProperties.openStream());\n                while (true) {\n                    String plugin = in.readLine();\n\n                    if (plugin == null)\n                        break;\n                    URL url = new URL(base, plugin);\n                    try {\n                        URLConnection connection = url.openConnection();\n                        String contentType = connection.getContentType();\n                        DetectorFactoryCollection.jawsDebugMessage(\"contentType : \" + contentType);\n                        if (connection instanceof HttpURLConnection)\n                            ((HttpURLConnection) connection).disconnect();\n                        loadInitialPlugin(url, true, false);\n                    } catch (Exception e) {\n                        DetectorFactoryCollection.jawsDebugMessage(\"error loading \" + url + \" : \" + e.getMessage());\n\n                    }\n\n                }\n                in.close();\n            } catch (Exception e) {\n                DetectorFactoryCollection.jawsDebugMessage(\"error : \" + e.getMessage());\n\n            }\n\n        }\n    }","id":63527,"modified_method":"/**\n     * @param plugins\n     */\n    static void installWebStartPlugins() {\n       URL pluginListProperties = DetectorFactoryCollection.getCoreResource(\"pluginlist.properties\");\n       BufferedReader in = null;\n        if (pluginListProperties != null) {\n            try {\n\n                DetectorFactoryCollection.jawsDebugMessage(pluginListProperties.toString());\n                URL base = getUrlBase(pluginListProperties);\n\n                in = UTF8.bufferedReader(pluginListProperties.openStream());\n                while (true) {\n                    String plugin = in.readLine();\n\n                    if (plugin == null)\n                        break;\n                    URL url = new URL(base, plugin);\n                    try {\n                        URLConnection connection = url.openConnection();\n                        String contentType = connection.getContentType();\n                        DetectorFactoryCollection.jawsDebugMessage(\"contentType : \" + contentType);\n                        if (connection instanceof HttpURLConnection)\n                            ((HttpURLConnection) connection).disconnect();\n                        loadInitialPlugin(url, true, false);\n                    } catch (Exception e) {\n                        DetectorFactoryCollection.jawsDebugMessage(\"error loading \" + url + \" : \" + e.getMessage());\n\n                    }\n\n                }\n            } catch (Exception e) {\n                DetectorFactoryCollection.jawsDebugMessage(\"error : \" + e.getMessage());\n            } finally {\n                Util.closeSilently(in);\n            }\n\n        }\n    }","commit_id":"022993a65c8d302d407bf33b027d81690d938d70","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@SuppressWarnings(\"boxing\")\n    public String getBugReportSourceCode(BugInstance b) {\n        StringWriter stringWriter = new StringWriter();\n        PrintWriter out = new PrintWriter(stringWriter);\n        ClassAnnotation primaryClass = b.getPrimaryClass();\n\n        int firstLine = Integer.MAX_VALUE;\n        int lastLine = Integer.MIN_VALUE;\n        for (BugAnnotation a : b.getAnnotations())\n            if (a instanceof SourceLineAnnotation) {\n                SourceLineAnnotation s = (SourceLineAnnotation) a;\n                if (s.getClassName().equals(primaryClass.getClassName()) && s.getStartLine() > 0) {\n                    firstLine = Math.min(firstLine, s.getStartLine());\n                    lastLine = Math.max(lastLine, s.getEndLine());\n\n                }\n\n            }\n\n        SourceLineAnnotation primarySource = primaryClass.getSourceLines();\n        if (primarySource.isSourceFileKnown() && firstLine >= 1 && firstLine <= lastLine && lastLine - firstLine < 50) {\n            try {\n                Project project = cloud.getBugCollection().getProject();\n                SourceFile sourceFile = project.getSourceFinder().findSourceFile(primarySource);\n                BufferedReader in = UTF8.bufferedReader(sourceFile.getInputStream());\n                int lineNumber = 1;\n                String commonWhiteSpace = null;\n                List<SourceLine> source = new ArrayList<SourceLine>();\n                while (lineNumber <= lastLine + 4) {\n                    String txt = in.readLine();\n                    if (txt == null)\n                        break;\n                    if (lineNumber >= firstLine - 4) {\n                        String trimmed = txt.trim();\n                        if (trimmed.length() == 0) {\n                            if (lineNumber > lastLine)\n                                break;\n                            txt = trimmed;\n\n                        }\n                        source.add(new SourceLine(lineNumber, txt));\n                        commonWhiteSpace = commonLeadingWhitespace(commonWhiteSpace, txt);\n                    }\n                    lineNumber++;\n                }\n                in.close();\n                if (commonWhiteSpace == null)\n                    commonWhiteSpace = \"\";\n                out.println(\"\\nRelevant source code:\");\n                for (SourceLine s : source) {\n                    if (s.text.length() == 0)\n                        out.printf(\"%5d: %n\", s.line);\n                    else\n                        out.printf(\"%5d:   %s%n\", s.line, s.text.substring(commonWhiteSpace.length()));\n                }\n\n                out.println();\n            } catch (IOException e) {\n                assert true;\n            }\n            out.close();\n            return stringWriter.toString();\n\n        }\n        return \"\";\n    }","id":63528,"modified_method":"@SuppressWarnings(\"boxing\")\n    public String getBugReportSourceCode(BugInstance b) {\n        StringWriter stringWriter = new StringWriter();\n        PrintWriter out = new PrintWriter(stringWriter);\n        ClassAnnotation primaryClass = b.getPrimaryClass();\n\n        int firstLine = Integer.MAX_VALUE;\n        int lastLine = Integer.MIN_VALUE;\n        for (BugAnnotation a : b.getAnnotations())\n            if (a instanceof SourceLineAnnotation) {\n                SourceLineAnnotation s = (SourceLineAnnotation) a;\n                if (s.getClassName().equals(primaryClass.getClassName()) && s.getStartLine() > 0) {\n                    firstLine = Math.min(firstLine, s.getStartLine());\n                    lastLine = Math.max(lastLine, s.getEndLine());\n\n                }\n\n            }\n\n        SourceLineAnnotation primarySource = primaryClass.getSourceLines();\n        if (primarySource.isSourceFileKnown() && firstLine >= 1 && firstLine <= lastLine && lastLine - firstLine < 50) {\n            BufferedReader in = null;\n            try {\n                Project project = cloud.getBugCollection().getProject();\n                SourceFile sourceFile = project.getSourceFinder().findSourceFile(primarySource);\n                in = UTF8.bufferedReader(sourceFile.getInputStream());\n                int lineNumber = 1;\n                String commonWhiteSpace = null;\n                List<SourceLine> source = new ArrayList<SourceLine>();\n                while (lineNumber <= lastLine + 4) {\n                    String txt = in.readLine();\n                    if (txt == null)\n                        break;\n                    if (lineNumber >= firstLine - 4) {\n                        String trimmed = txt.trim();\n                        if (trimmed.length() == 0) {\n                            if (lineNumber > lastLine)\n                                break;\n                            txt = trimmed;\n\n                        }\n                        source.add(new SourceLine(lineNumber, txt));\n                        commonWhiteSpace = commonLeadingWhitespace(commonWhiteSpace, txt);\n                    }\n                    lineNumber++;\n                }\n                if (commonWhiteSpace == null)\n                    commonWhiteSpace = \"\";\n                out.println(\"\\nRelevant source code:\");\n                for (SourceLine s : source) {\n                    if (s.text.length() == 0)\n                        out.printf(\"%5d: %n\", s.line);\n                    else\n                        out.printf(\"%5d:   %s%n\", s.line, s.text.substring(commonWhiteSpace.length()));\n                }\n\n                out.println();\n            } catch (IOException e) {\n                assert true;\n            } finally {\n                Util.closeSilently(in);\n            }\n            out.close();\n            return stringWriter.toString();\n\n        }\n        return \"\";\n    }","commit_id":"460502d1e7bd21270bb49430727786e7bdeb6b8d","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public ProjectPackagePrefixes() {\n        URL u = DetectorFactoryCollection.getCoreResource(\"projectPaths.properties\");\n        if (u != null) {\n\n            try {\n                BufferedReader in = UTF8.bufferedReader(u.openStream());\n                while (true) {\n                    String s = in.readLine();\n                    if (s == null)\n                        break;\n                    String[] parts = s.split(\"=\");\n                    if (parts.length == 2 && !map.containsKey(parts[0]))\n                        map.put(parts[0], new PrefixFilter(parts[1]));\n                }\n                in.close();\n            } catch (IOException e1) {\n\n                AnalysisContext.logError(\"Error loading projects paths\", e1);\n            }\n\n        }\n\n    }","id":63529,"modified_method":"public ProjectPackagePrefixes() {\n        URL u = DetectorFactoryCollection.getCoreResource(\"projectPaths.properties\");\n        if (u != null) {\n\n            BufferedReader in = null;\n            try {\n                 in = UTF8.bufferedReader(u.openStream());\n                while (true) {\n                    String s = in.readLine();\n                    if (s == null)\n                        break;\n                    String[] parts = s.split(\"=\");\n                    if (parts.length == 2 && !map.containsKey(parts[0]))\n                        map.put(parts[0], new PrefixFilter(parts[1]));\n                }\n            } catch (IOException e1) {\n\n                AnalysisContext.logError(\"Error loading projects paths\", e1);\n            } finally {\n               Util.closeSilently(in);\n            }\n\n        }\n\n    }","commit_id":"460502d1e7bd21270bb49430727786e7bdeb6b8d","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n     * Handle -xargs command line option by reading jar file names from standard\n     * input and adding them to the project.\n     *\n     * @throws IOException\n     */\n    public void handleXArgs() throws IOException {\n        if (getXargs()) {\n            BufferedReader in = UTF8.bufferedReader(System.in);\n            while (true) {\n                String s = in.readLine();\n                if (s == null)\n                    break;\n                project.addFile(s);\n            }\n            in.close();\n        }\n    }","id":63530,"modified_method":"/**\n     * Handle -xargs command line option by reading jar file names from standard\n     * input and adding them to the project.\n     *\n     * @throws IOException\n     */\n    public void handleXArgs() throws IOException {\n        if (getXargs()) {\n            BufferedReader in = UTF8.bufferedReader(System.in);\n            try {\n            while (true) {\n                String s = in.readLine();\n                if (s == null)\n                    break;\n                project.addFile(s);\n            }\n            } finally {\n             Util.closeSilently(in);\n            }\n        }\n    }","commit_id":"460502d1e7bd21270bb49430727786e7bdeb6b8d","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private boolean isRuleMatchingFilter(Notification notif, String rule) {\n        try {\n            return FilterDaoFactory.getInstance().isRuleMatching(rule);\n        } catch (FilterParseException e) {\n            log().error(\"Invalid filter rule for notification \" + notif.getName() + \": \" + notif.getRule(), e);\n            return true;\n        } catch (Throwable t) {\n            log().error(\"Filter query threw exception: \" + notif.getName() + \": \" + notif.getRule(), t);\n            return true;\n        }\n    }","id":63531,"modified_method":"private boolean isRuleMatchingFilter(Notification notif, String rule) {\n        try {\n            return FilterDaoFactory.getInstance().isRuleMatching(rule);\n        } catch (FilterParseException e) {\n            log().error(\"Invalid filter rule for notification \" + notif.getName() + \": \" + notif.getRule(), e);\n            throw e;\n        }\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrServiceSpecificWrongService() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be false\",\n                                           1, \"192.168.1.1\", \"ICMP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","id":63532,"modified_method":"public void testIpAddrServiceSpecificWrongService() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", \"ICMP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This should match because even though the node is not set in the event,\n     * the IP address is in the database on *some* node.\n     */\n    public void testNoNodeIdWithIpAddr() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           0, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63533,"modified_method":"/**\n     * This should match because even though the node is not set in the event,\n     * the IP address is in the database on *some* node.\n     */\n    public void testNoNodeIdWithIpAddr() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           0, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testRuleBogus() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(aklsdfjweklj89jaikj)\",\n                                           false);\n    }","id":63534,"modified_method":"public void testRuleBogus() {\n        try {\n            doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                               1, \"192.168.1.1\", \"HTTP\",\n                                               \"(aklsdfjweklj89jaikj)\",\n                                               false);\n            fail(\"Expected exception to be thrown!\");\n        } catch (FilterParseException e) {\n            // I expected this\n        }\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIplikeAllStars() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr IPLIKE *.*.*.*)\",\n                                           true);\n    }","id":63535,"modified_method":"public void testIplikeAllStars() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr IPLIKE *.*.*.*)\",\n                                           true);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrServiceSpecificPass() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63536,"modified_method":"public void testIpAddrServiceSpecificPass() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrSpecificPass() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63537,"modified_method":"public void testIpAddrSpecificPass() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testMultipleCategoriesNotMember() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           2, \"192.168.1.1\", \"HTTP\",\n                                           \"(catincCategoryOne) & (catincCategoryTwo) & (catincCategoryThree)\",\n                                           false);\n    }","id":63538,"modified_method":"public void testMultipleCategoriesNotMember() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           2, \"192.168.1.1\", \"HTTP\",\n                                           \"(catincCategoryOne) & (catincCategoryTwo) & (catincCategoryThree)\",\n                                           false);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testNodeOnlyMatch() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, null, null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63539,"modified_method":"public void testNodeOnlyMatch() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, null, null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Trapd sends events like this (with no nodeId set but an interface set)\n     * when it gets a trap from a device with an IP that isn't in the\n     * database.  This shouldn't send an event.\n     */\n    public void testNoNodeIdWithIpAddrNotInDb() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           0, \"192.168.1.2\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","id":63540,"modified_method":"/**\n     * Trapd sends events like this (with no nodeId set but an interface set)\n     * when it gets a trap from a device with an IP that isn't in the\n     * database.  This shouldn't send an event.\n     */\n    public void testNoNodeIdWithIpAddrNotInDb() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           0, \"192.168.1.2\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrServiceSpecificFail() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be false\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.2')\",\n                                           false);\n    }","id":63541,"modified_method":"public void testIpAddrServiceSpecificFail() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.2')\",\n                                           false);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testWrongNodeId() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           2, \"192.168.1.1\", \"HTTP\",\n                                           \"(nodeid == 1)\",\n                                           false);\n    }","id":63542,"modified_method":"public void testWrongNodeId() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           2, \"192.168.1.1\", \"HTTP\",\n                                           \"(nodeid == 1)\",\n                                           false);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrServiceSpecificWrongIP() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be false\",\n                                           1, \"192.168.1.2\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","id":63543,"modified_method":"public void testIpAddrServiceSpecificWrongIP() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.2\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testNodeOnlyMatchZeroesIpAddr() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"0.0.0.0\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63544,"modified_method":"public void testNodeOnlyMatchZeroesIpAddr() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"0.0.0.0\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This should match because even though the node is not set in the event,\n     * the IP address and service is in the database on *some* node.\n     */\n    public void testNoNodeIdWithService() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           0, null, \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63545,"modified_method":"/**\n     * This should match because even though the node is not set in the event,\n     * the IP address and service is in the database on *some* node.\n     */\n    public void testNoNodeIdWithService() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           0, null, \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testNodeOnlyNoMatch() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           3, null, null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","id":63546,"modified_method":"public void testNodeOnlyNoMatch() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           3, null, null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This tests bugzilla bug #1807.  The problem happened when we add our\n     * own constraints to the filter but fail to wrap the user's filter in\n     * parens.  This isn't a problem when the outermost logic expression in\n     * the user's filter (if any) is an AND, but it is if it's an OR.\n     */\n    public void testRuleWithOrNoMatch() {\n        /*\n         * Note: the nodeLabel for nodeId=3/ipAddr=192.168.1.2 is 'node 3'\n         * which shouldn't match the filter.\n         */\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be false\",\n                3, \"192.168.1.2\", \"HTTP\",\n                \"(nodelabel=='node 1') | (nodelabel=='node 2')\",\n                false);\n    }","id":63547,"modified_method":"/**\n     * This tests bugzilla bug #1807.  The problem happened when we add our\n     * own constraints to the filter but fail to wrap the user's filter in\n     * parens.  This isn't a problem when the outermost logic expression in\n     * the user's filter (if any) is an AND, but it is if it's an OR.\n     */\n    public void testRuleWithOrNoMatch() {\n        /*\n         * Note: the nodeLabel for nodeId=3/ipAddr=192.168.1.2 is 'node 3'\n         * which shouldn't match the filter.\n         */\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                3, \"192.168.1.2\", \"HTTP\",\n                \"(nodelabel=='node 1') | (nodelabel=='node 2')\",\n                false);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testMultipleCategories() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(catincCategoryOne) & (catincCategoryTwo) & (catincCategoryThree)\",\n                                           true);\n    }","id":63548,"modified_method":"public void testMultipleCategories() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(catincCategoryOne) & (catincCategoryTwo) & (catincCategoryThree)\",\n                                           true);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testNoElement() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           0, null, null,\n                                           \"(ipaddr IPLIKE *.*.*.*)\",\n                                           true);\n    }","id":63549,"modified_method":"public void testNoElement() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           0, null, null,\n                                           \"(ipaddr IPLIKE *.*.*.*)\",\n                                           true);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrSpecificFail() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be false\",\n                                           1, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.2')\",\n                                           false);\n    }","id":63550,"modified_method":"public void testIpAddrSpecificFail() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.2')\",\n                                           false);\n    }","commit_id":"2119cbb3e44dab7903a9707b213d242acbecae8b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private boolean isRuleMatchingFilter(Notification notif, String rule) {\n        try {\n            return FilterDaoFactory.getInstance().isRuleMatching(rule);\n        } catch (FilterParseException e) {\n            log().error(\"Invalid filter rule for notification \" + notif.getName() + \": \" + notif.getRule(), e);\n            return true;\n        } catch (Throwable t) {\n            log().error(\"Filter query threw exception: \" + notif.getName() + \": \" + notif.getRule(), t);\n            return true;\n        }\n    }","id":63551,"modified_method":"private boolean isRuleMatchingFilter(Notification notif, String rule) {\n        try {\n            return FilterDaoFactory.getInstance().isRuleMatching(rule);\n        } catch (FilterParseException e) {\n            log().error(\"Invalid filter rule for notification \" + notif.getName() + \": \" + notif.getRule(), e);\n            throw e;\n        }\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Trapd sends events like this (with no nodeId set but an interface set)\n     * when it gets a trap from a device with an IP that isn't in the\n     * database.  This shouldn't send an event.\n     */\n    public void testNoNodeIdWithIpAddrNotInDb() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           0, \"192.168.1.2\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","id":63552,"modified_method":"/**\n     * Trapd sends events like this (with no nodeId set but an interface set)\n     * when it gets a trap from a device with an IP that isn't in the\n     * database.  This shouldn't send an event.\n     */\n    public void testNoNodeIdWithIpAddrNotInDb() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           0, \"192.168.1.2\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This tests bugzilla bug #1807.  The problem happened when we add our\n     * own constraints to the filter but fail to wrap the user's filter in\n     * parens.  This isn't a problem when the outermost logic expression in\n     * the user's filter (if any) is an AND, but it is if it's an OR.\n     */\n    public void testRuleWithOrNoMatch() {\n        /*\n         * Note: the nodeLabel for nodeId=3/ipAddr=192.168.1.2 is 'node 3'\n         * which shouldn't match the filter.\n         */\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be false\",\n                3, \"192.168.1.2\", \"HTTP\",\n                \"(nodelabel=='node 1') | (nodelabel=='node 2')\",\n                false);\n    }","id":63553,"modified_method":"/**\n     * This tests bugzilla bug #1807.  The problem happened when we add our\n     * own constraints to the filter but fail to wrap the user's filter in\n     * parens.  This isn't a problem when the outermost logic expression in\n     * the user's filter (if any) is an AND, but it is if it's an OR.\n     */\n    public void testRuleWithOrNoMatch() {\n        /*\n         * Note: the nodeLabel for nodeId=3/ipAddr=192.168.1.2 is 'node 3'\n         * which shouldn't match the filter.\n         */\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                3, \"192.168.1.2\", \"HTTP\",\n                \"(nodelabel=='node 1') | (nodelabel=='node 2')\",\n                false);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrSpecificFail() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be false\",\n                                           1, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.2')\",\n                                           false);\n    }","id":63554,"modified_method":"public void testIpAddrSpecificFail() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.2')\",\n                                           false);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testNodeOnlyMatchZeroesIpAddr() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"0.0.0.0\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63555,"modified_method":"public void testNodeOnlyMatchZeroesIpAddr() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"0.0.0.0\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This should match because even though the node is not set in the event,\n     * the IP address and service is in the database on *some* node.\n     */\n    public void testNoNodeIdWithService() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           0, null, \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63556,"modified_method":"/**\n     * This should match because even though the node is not set in the event,\n     * the IP address and service is in the database on *some* node.\n     */\n    public void testNoNodeIdWithService() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           0, null, \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testMultipleCategories() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(catincCategoryOne) & (catincCategoryTwo) & (catincCategoryThree)\",\n                                           true);\n    }","id":63557,"modified_method":"public void testMultipleCategories() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(catincCategoryOne) & (catincCategoryTwo) & (catincCategoryThree)\",\n                                           true);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testNodeOnlyNoMatch() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           3, null, null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","id":63558,"modified_method":"public void testNodeOnlyNoMatch() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           3, null, null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIplikeAllStars() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr IPLIKE *.*.*.*)\",\n                                           true);\n    }","id":63559,"modified_method":"public void testIplikeAllStars() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr IPLIKE *.*.*.*)\",\n                                           true);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testWrongNodeId() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           2, \"192.168.1.1\", \"HTTP\",\n                                           \"(nodeid == 1)\",\n                                           false);\n    }","id":63560,"modified_method":"public void testWrongNodeId() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           2, \"192.168.1.1\", \"HTTP\",\n                                           \"(nodeid == 1)\",\n                                           false);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrServiceSpecificWrongIP() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be false\",\n                                           1, \"192.168.1.2\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","id":63561,"modified_method":"public void testIpAddrServiceSpecificWrongIP() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.2\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testMultipleCategoriesNotMember() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           2, \"192.168.1.1\", \"HTTP\",\n                                           \"(catincCategoryOne) & (catincCategoryTwo) & (catincCategoryThree)\",\n                                           false);\n    }","id":63562,"modified_method":"public void testMultipleCategoriesNotMember() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           2, \"192.168.1.1\", \"HTTP\",\n                                           \"(catincCategoryOne) & (catincCategoryTwo) & (catincCategoryThree)\",\n                                           false);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrServiceSpecificPass() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63563,"modified_method":"public void testIpAddrServiceSpecificPass() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This should match because even though the node is not set in the event,\n     * the IP address is in the database on *some* node.\n     */\n    public void testNoNodeIdWithIpAddr() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           0, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63564,"modified_method":"/**\n     * This should match because even though the node is not set in the event,\n     * the IP address is in the database on *some* node.\n     */\n    public void testNoNodeIdWithIpAddr() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           0, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrServiceSpecificFail() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be false\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.2')\",\n                                           false);\n    }","id":63565,"modified_method":"public void testIpAddrServiceSpecificFail() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.2')\",\n                                           false);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrServiceSpecificWrongService() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be false\",\n                                           1, \"192.168.1.1\", \"ICMP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","id":63566,"modified_method":"public void testIpAddrServiceSpecificWrongService() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", \"ICMP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testRuleBogus() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(aklsdfjweklj89jaikj)\",\n                                           false);\n    }","id":63567,"modified_method":"public void testRuleBogus() {\n        try {\n            doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                               1, \"192.168.1.1\", \"HTTP\",\n                                               \"(aklsdfjweklj89jaikj)\",\n                                               false);\n            fail(\"Expected exception to be thrown!\");\n        } catch (FilterParseException e) {\n            // I expected this\n        }\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testNodeOnlyMatch() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, null, null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63568,"modified_method":"public void testNodeOnlyMatch() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, null, null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrSpecificPass() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63569,"modified_method":"public void testIpAddrSpecificPass() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testNoElement() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           0, null, null,\n                                           \"(ipaddr IPLIKE *.*.*.*)\",\n                                           true);\n    }","id":63570,"modified_method":"public void testNoElement() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           0, null, null,\n                                           \"(ipaddr IPLIKE *.*.*.*)\",\n                                           true);\n    }","commit_id":"798a566a648b0a674ec8c4281108a5cb545cfa89","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private boolean isRuleMatchingFilter(Notification notif, String rule) {\n        try {\n            return FilterDaoFactory.getInstance().isRuleMatching(rule);\n        } catch (FilterParseException e) {\n            log().error(\"Invalid filter rule for notification \" + notif.getName() + \": \" + notif.getRule(), e);\n            return true;\n        } catch (Throwable t) {\n            log().error(\"Filter query threw exception: \" + notif.getName() + \": \" + notif.getRule(), t);\n            return true;\n        }\n    }","id":63571,"modified_method":"private boolean isRuleMatchingFilter(Notification notif, String rule) {\n        try {\n            return FilterDaoFactory.getInstance().isRuleMatching(rule);\n        } catch (FilterParseException e) {\n            log().error(\"Invalid filter rule for notification \" + notif.getName() + \": \" + notif.getRule(), e);\n            throw e;\n        }\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This should match because even though the node is not set in the event,\n     * the IP address is in the database on *some* node.\n     */\n    public void testNoNodeIdWithIpAddr() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           0, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63572,"modified_method":"/**\n     * This should match because even though the node is not set in the event,\n     * the IP address is in the database on *some* node.\n     */\n    public void testNoNodeIdWithIpAddr() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           0, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Trapd sends events like this (with no nodeId set but an interface set)\n     * when it gets a trap from a device with an IP that isn't in the\n     * database.  This shouldn't send an event.\n     */\n    public void testNoNodeIdWithIpAddrNotInDb() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           0, \"192.168.1.2\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","id":63573,"modified_method":"/**\n     * Trapd sends events like this (with no nodeId set but an interface set)\n     * when it gets a trap from a device with an IP that isn't in the\n     * database.  This shouldn't send an event.\n     */\n    public void testNoNodeIdWithIpAddrNotInDb() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           0, \"192.168.1.2\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIplikeAllStars() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr IPLIKE *.*.*.*)\",\n                                           true);\n    }","id":63574,"modified_method":"public void testIplikeAllStars() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr IPLIKE *.*.*.*)\",\n                                           true);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testRuleBogus() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(aklsdfjweklj89jaikj)\",\n                                           false);\n    }","id":63575,"modified_method":"public void testRuleBogus() {\n        try {\n            doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                               1, \"192.168.1.1\", \"HTTP\",\n                                               \"(aklsdfjweklj89jaikj)\",\n                                               false);\n            fail(\"Expected exception to be thrown!\");\n        } catch (FilterParseException e) {\n            // I expected this\n        }\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This tests bugzilla bug #1807.  The problem happened when we add our\n     * own constraints to the filter but fail to wrap the user's filter in\n     * parens.  This isn't a problem when the outermost logic expression in\n     * the user's filter (if any) is an AND, but it is if it's an OR.\n     */\n    public void testRuleWithOrNoMatch() {\n        /*\n         * Note: the nodeLabel for nodeId=3/ipAddr=192.168.1.2 is 'node 3'\n         * which shouldn't match the filter.\n         */\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be false\",\n                3, \"192.168.1.2\", \"HTTP\",\n                \"(nodelabel=='node 1') | (nodelabel=='node 2')\",\n                false);\n    }","id":63576,"modified_method":"/**\n     * This tests bugzilla bug #1807.  The problem happened when we add our\n     * own constraints to the filter but fail to wrap the user's filter in\n     * parens.  This isn't a problem when the outermost logic expression in\n     * the user's filter (if any) is an AND, but it is if it's an OR.\n     */\n    public void testRuleWithOrNoMatch() {\n        /*\n         * Note: the nodeLabel for nodeId=3/ipAddr=192.168.1.2 is 'node 3'\n         * which shouldn't match the filter.\n         */\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                3, \"192.168.1.2\", \"HTTP\",\n                \"(nodelabel=='node 1') | (nodelabel=='node 2')\",\n                false);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrSpecificFail() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be false\",\n                                           1, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.2')\",\n                                           false);\n    }","id":63577,"modified_method":"public void testIpAddrSpecificFail() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.2')\",\n                                           false);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testNodeOnlyNoMatch() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           3, null, null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","id":63578,"modified_method":"public void testNodeOnlyNoMatch() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           3, null, null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrServiceSpecificPass() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63579,"modified_method":"public void testIpAddrServiceSpecificPass() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrServiceSpecificWrongService() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be false\",\n                                           1, \"192.168.1.1\", \"ICMP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","id":63580,"modified_method":"public void testIpAddrServiceSpecificWrongService() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", \"ICMP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testWrongNodeId() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           2, \"192.168.1.1\", \"HTTP\",\n                                           \"(nodeid == 1)\",\n                                           false);\n    }","id":63581,"modified_method":"public void testWrongNodeId() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           2, \"192.168.1.1\", \"HTTP\",\n                                           \"(nodeid == 1)\",\n                                           false);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This should match because even though the node is not set in the event,\n     * the IP address and service is in the database on *some* node.\n     */\n    public void testNoNodeIdWithService() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           0, null, \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63582,"modified_method":"/**\n     * This should match because even though the node is not set in the event,\n     * the IP address and service is in the database on *some* node.\n     */\n    public void testNoNodeIdWithService() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           0, null, \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testMultipleCategoriesNotMember() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           2, \"192.168.1.1\", \"HTTP\",\n                                           \"(catincCategoryOne) & (catincCategoryTwo) & (catincCategoryThree)\",\n                                           false);\n    }","id":63583,"modified_method":"public void testMultipleCategoriesNotMember() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           2, \"192.168.1.1\", \"HTTP\",\n                                           \"(catincCategoryOne) & (catincCategoryTwo) & (catincCategoryThree)\",\n                                           false);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testNodeOnlyMatchZeroesIpAddr() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"0.0.0.0\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63584,"modified_method":"public void testNodeOnlyMatchZeroesIpAddr() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"0.0.0.0\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testNodeOnlyMatch() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, null, null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63585,"modified_method":"public void testNodeOnlyMatch() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, null, null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testNoElement() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           0, null, null,\n                                           \"(ipaddr IPLIKE *.*.*.*)\",\n                                           true);\n    }","id":63586,"modified_method":"public void testNoElement() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           0, null, null,\n                                           \"(ipaddr IPLIKE *.*.*.*)\",\n                                           true);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrSpecificPass() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","id":63587,"modified_method":"public void testIpAddrSpecificPass() throws InterruptedException {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", null,\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           true);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testMultipleCategories() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be true\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(catincCategoryOne) & (catincCategoryTwo) & (catincCategoryThree)\",\n                                           true);\n    }","id":63588,"modified_method":"public void testMultipleCategories() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(catincCategoryOne) & (catincCategoryTwo) & (catincCategoryThree)\",\n                                           true);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrServiceSpecificFail() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be false\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.2')\",\n                                           false);\n    }","id":63589,"modified_method":"public void testIpAddrServiceSpecificFail() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.1\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.2')\",\n                                           false);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testIpAddrServiceSpecificWrongIP() {\n        doTestNodeInterfaceServiceWithRule(\"was expecting the node/interface/service match to be false\",\n                                           1, \"192.168.1.2\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","id":63590,"modified_method":"public void testIpAddrServiceSpecificWrongIP() {\n        doTestNodeInterfaceServiceWithRule(\"node/interface/service match\",\n                                           1, \"192.168.1.2\", \"HTTP\",\n                                           \"(ipaddr == '192.168.1.1')\",\n                                           false);\n    }","commit_id":"bcabf5d936e9ec67fc041d5c8991044708ce0477","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void testBackupMigrationAndRecovery(int nodeCount, int backupCount, int mapSize) throws Exception {\n        TestHazelcastInstanceFactory nodeFactory = createHazelcastInstanceFactory(nodeCount);\n        final String name = MAP_NAME;\n        final Config config = new Config();\n        config.setProperty(GroupProperties.PROP_PARTITION_BACKUP_SYNC_INTERVAL, \"1\");\n        config.getMapConfig(name).setBackupCount(backupCount).setStatisticsEnabled(true);\n\n        final HazelcastInstance[] instances = new HazelcastInstance[nodeCount];\n\n        HazelcastInstance hz = nodeFactory.newHazelcastInstance(config);\n        instances[0] = hz;\n        IMap<Integer, String> map1 = hz.getMap(name);\n        for (int i = 0; i < mapSize; i++) {\n            map1.put(i, \"value\" + i);\n        }\n        checkMapSizes(mapSize, backupCount, instances);\n\n        for (int i = 1; i < nodeCount; i++) {\n            instances[i] = nodeFactory.newHazelcastInstance(config);\n            checkMapSizes(mapSize, backupCount, instances);\n        }\n\n        final Random rand = new Random();\n        for (int i = 1; i < nodeCount; i++) {\n            int ix;\n            do {\n                ix = rand.nextInt(nodeCount);\n            } while (instances[ix] == null);\n\n            TestUtil.terminateInstance(instances[ix]);\n            instances[ix] = null;\n            checkMapSizes(mapSize, backupCount, instances);\n\n        }\n    }","id":63591,"modified_method":"private void testBackupMigrationAndRecovery(int nodeCount, int backupCount, int mapSize) throws Exception {\n        TestHazelcastInstanceFactory nodeFactory = createHazelcastInstanceFactory(nodeCount);\n        final String name = MAP_NAME;\n        final Config config = new Config();\n        config.setProperty(GroupProperties.PROP_PARTITION_BACKUP_SYNC_INTERVAL, \"5\");\n        config.getMapConfig(name).setBackupCount(backupCount).setStatisticsEnabled(true);\n\n        final HazelcastInstance[] instances = new HazelcastInstance[nodeCount];\n\n        HazelcastInstance hz = nodeFactory.newHazelcastInstance(config);\n        instances[0] = hz;\n        IMap<Integer, String> map1 = hz.getMap(name);\n        for (int i = 0; i < mapSize; i++) {\n            map1.put(i, \"value\" + i);\n        }\n        checkMapSizes(mapSize, backupCount, instances);\n\n        for (int i = 1; i < nodeCount; i++) {\n            instances[i] = nodeFactory.newHazelcastInstance(config);\n            checkMapSizes(mapSize, backupCount, instances);\n        }\n\n        final Random rand = new Random();\n        for (int i = 1; i < nodeCount; i++) {\n            int ix;\n            do {\n                ix = rand.nextInt(nodeCount);\n            } while (instances[ix] == null);\n\n            TestUtil.terminateInstance(instances[ix]);\n            instances[ix] = null;\n            checkMapSizes(mapSize, backupCount, instances);\n\n        }\n    }","commit_id":"b810737a486a8022efed517bfafeceb63bb065ae","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Test\n    public void testGracefulShutdown2() throws Exception {\n        Config config = new Config();\n\n        config.getMapConfig(MAP_NAME).setBackupCount(2);\n\n        TestHazelcastInstanceFactory f = createHazelcastInstanceFactory(6);\n        final HazelcastInstance hz = f.newHazelcastInstance(config);\n\n        final IMap<Integer, Integer> map = hz.getMap(MAP_NAME);\n        final int size = 50000;\n        for (int i = 0; i < size; i++) {\n            map.put(i, i);\n        }\n\n        final HazelcastInstance hz2 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map2 = hz2.getMap(MAP_NAME);\n\n        waitForSafeStateAndCheckSize(size, hz2, map2);\n\n        final HazelcastInstance hz3 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map3 = hz3.getMap(MAP_NAME);\n\n        final HazelcastInstance hz4 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map4 = hz4.getMap(MAP_NAME);\n\n        waitForSafeStateAndCheckSize(size, hz3, map3);\n        waitForSafeStateAndCheckSize(size, hz4, map4);\n\n        final HazelcastInstance hz5 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map5 = hz5.getMap(MAP_NAME);\n\n        final HazelcastInstance hz6 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map6 = hz6.getMap(MAP_NAME);\n\n        waitForSafeStateAndCheckSize(size, hz5, map5);\n        waitForSafeStateAndCheckSize(size, hz6, map6);\n\n        shutdownAndWait(hz);\n        shutdownAndWait(hz2);\n\n        waitForSafeStateAndCheckSize(size, hz3, map3);\n        waitForSafeStateAndCheckSize(size, hz4, map4);\n        waitForSafeStateAndCheckSize(size, hz5, map5);\n        waitForSafeStateAndCheckSize(size, hz6, map6);\n\n        shutdownAndWait(hz3);\n        shutdownAndWait(hz4);\n\n        waitForSafeStateAndCheckSize(size, hz5, map5);\n        waitForSafeStateAndCheckSize(size, hz6, map6);\n    }","id":63592,"modified_method":"@Test\n    public void testGracefulShutdown2() throws Exception {\n        Config config = new Config();\n        config.getMapConfig(MAP_NAME).setBackupCount(2);\n\n        TestHazelcastInstanceFactory f = createHazelcastInstanceFactory(6);\n        final HazelcastInstance hz = f.newHazelcastInstance(config);\n\n        final IMap<Integer, Integer> map = hz.getMap(MAP_NAME);\n        final int size = 50000;\n        for (int i = 0; i < size; i++) {\n            map.put(i, i);\n        }\n\n        final HazelcastInstance hz2 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map2 = hz2.getMap(MAP_NAME);\n\n        checkSizeEventually(size, map2);\n\n        final HazelcastInstance hz3 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map3 = hz3.getMap(MAP_NAME);\n\n        final HazelcastInstance hz4 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map4 = hz4.getMap(MAP_NAME);\n\n        checkSizeEventually(size, map3);\n        checkSizeEventually(size, map4);\n\n        final HazelcastInstance hz5 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map5 = hz5.getMap(MAP_NAME);\n\n        final HazelcastInstance hz6 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map6 = hz6.getMap(MAP_NAME);\n\n        checkSizeEventually(size, map5);\n        checkSizeEventually(size, map6);\n\n        hz.shutdown();\n        hz2.shutdown();\n\n        checkSizeEventually(size, map3);\n        checkSizeEventually(size, map4);\n        checkSizeEventually(size, map5);\n        checkSizeEventually(size, map6);\n\n        hz3.shutdown();\n        hz4.shutdown();\n\n        checkSizeEventually(size, map5);\n        checkSizeEventually(size, map6);\n    }","commit_id":"b810737a486a8022efed517bfafeceb63bb065ae","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private static void checkMapSizes(final int expectedSize, int backupCount, HazelcastInstance... instances)\n            throws InterruptedException {\n        int nodeCount = 0;\n        final IMap[] maps = new IMap[instances.length];\n        for (int i = 0; i < 20; i++) {\n            for (int j = 0; j < instances.length; j++) {\n                final HazelcastInstance hz = instances[j];\n                if (hz != null) {\n                    if (i == 0) {\n                        maps[j] = hz.getMap(MAP_NAME);\n                        nodeCount++;\n                    }\n                    assertEquals(expectedSize, maps[j].size());\n                }\n            }\n            Thread.sleep(10);\n        }\n        final int expectedBackupSize = Math.min(nodeCount - 1, backupCount) * expectedSize;\n\n        for (int i = 0; i < 1200; i++) {\n            long ownedSize = getTotalOwnedEntryCount(maps);\n            long backupSize = getTotalBackupEntryCount(maps);\n            if (ownedSize == expectedSize && backupSize == expectedBackupSize) {\n                int votes = 0;\n                for (HazelcastInstance hz : instances) {\n                    if (hz != null) {\n                        votes += TestUtil.getNode(hz).getPartitionService().hasOnGoingMigration() ? 0 : 1;\n                    }\n                }\n                if (votes == nodeCount) {\n                    break;\n                }\n            }\n            Thread.sleep(500);\n        }\n        long actualBackupSize = getTotalBackupEntryCount(maps);\n        if (expectedBackupSize > actualBackupSize) {\n            fail(\"Missing backups, node-count: \" + nodeCount + \", expected:<\" + expectedBackupSize\n                    + \"> but was:<\" + actualBackupSize + \">\");\n        }\n    }","id":63593,"modified_method":"private static void checkMapSizes(final int expectedSize, int backupCount, HazelcastInstance... instances)\n            throws InterruptedException {\n        int nodeCount = 0;\n        final IMap[] maps = new IMap[instances.length];\n        for (int i = 0; i < 20; i++) {\n            for (int j = 0; j < instances.length; j++) {\n                final HazelcastInstance hz = instances[j];\n                if (hz != null) {\n                    if (i == 0) {\n                        maps[j] = hz.getMap(MAP_NAME);\n                        nodeCount++;\n                    }\n                    assertEquals(expectedSize, maps[j].size());\n                }\n            }\n            Thread.sleep(10);\n        }\n        final int expectedBackupSize = Math.min(nodeCount - 1, backupCount) * expectedSize;\n\n        for (int i = 0; i < 600; i++) {\n            long ownedSize = getTotalOwnedEntryCount(maps);\n            long backupSize = getTotalBackupEntryCount(maps);\n            if (ownedSize == expectedSize && backupSize == expectedBackupSize) {\n                int votes = 0;\n                for (HazelcastInstance hz : instances) {\n                    if (hz != null) {\n                        votes += TestUtil.getNode(hz).getPartitionService().hasOnGoingMigration() ? 0 : 1;\n                    }\n                }\n                if (votes == nodeCount) {\n                    break;\n                }\n            }\n            Thread.sleep(1000);\n        }\n        long actualBackupSize = getTotalBackupEntryCount(maps);\n        if (expectedBackupSize > actualBackupSize) {\n            fail(\"Missing backups, node-count: \" + nodeCount + \", expected:<\" + expectedBackupSize\n                    + \"> but was:<\" + actualBackupSize + \">\");\n        }\n    }","commit_id":"b810737a486a8022efed517bfafeceb63bb065ae","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Test\n    public void testGracefulShutdown3() throws Exception {\n        Config config = new Config();\n        config.getMapConfig(MAP_NAME).setBackupCount(1);\n\n        TestHazelcastInstanceFactory f = createHazelcastInstanceFactory(6);\n        final HazelcastInstance hz = f.newHazelcastInstance(config);\n\n        final IMap<Integer, Integer> map = hz.getMap(MAP_NAME);\n        final int size = 50000;\n        for (int i = 0; i < size; i++) {\n            map.put(i, i);\n        }\n\n        final HazelcastInstance hz2 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map2 = hz2.getMap(MAP_NAME);\n\n        final HazelcastInstance hz3 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map3 = hz3.getMap(MAP_NAME);\n\n        final HazelcastInstance hz4 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map4 = hz4.getMap(MAP_NAME);\n\n        final HazelcastInstance hz5 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map5 = hz5.getMap(MAP_NAME);\n\n        final HazelcastInstance hz6 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map6 = hz6.getMap(MAP_NAME);\n\n        waitForSafeStateAndCheckSize(size, hz2, map2);\n        waitForSafeStateAndCheckSize(size, hz3, map3);\n        waitForSafeStateAndCheckSize(size, hz4, map4);\n        waitForSafeStateAndCheckSize(size, hz5, map5);\n        waitForSafeStateAndCheckSize(size, hz6, map6);\n\n        shutdownAndWait(hz6);\n        waitForSafeStateAndCheckSize(size, hz, map);\n        waitForSafeStateAndCheckSize(size, hz2, map2);\n        waitForSafeStateAndCheckSize(size, hz3, map3);\n        waitForSafeStateAndCheckSize(size, hz4, map4);\n        waitForSafeStateAndCheckSize(size, hz5, map5);\n\n        shutdownAndWait(hz2);\n        waitForSafeStateAndCheckSize(size, hz, map);\n        waitForSafeStateAndCheckSize(size, hz3, map3);\n        waitForSafeStateAndCheckSize(size, hz4, map4);\n        waitForSafeStateAndCheckSize(size, hz5, map5);\n\n        shutdownAndWait(hz5);\n        waitForSafeStateAndCheckSize(size, hz, map);\n        waitForSafeStateAndCheckSize(size, hz3, map3);\n        waitForSafeStateAndCheckSize(size, hz4, map4);\n\n        shutdownAndWait(hz3);\n        waitForSafeStateAndCheckSize(size, hz, map);\n        waitForSafeStateAndCheckSize(size, hz4, map4);\n\n        shutdownAndWait(hz4);\n        waitForSafeStateAndCheckSize(size, hz, map);\n    }","id":63594,"modified_method":"@Test\n    public void testGracefulShutdown3() throws Exception {\n        Config config = new Config();\n        config.getMapConfig(MAP_NAME).setBackupCount(1);\n\n        TestHazelcastInstanceFactory f = createHazelcastInstanceFactory(6);\n        final HazelcastInstance hz = f.newHazelcastInstance(config);\n\n        final IMap<Integer, Integer> map = hz.getMap(MAP_NAME);\n        final int size = 50000;\n        for (int i = 0; i < size; i++) {\n            map.put(i, i);\n        }\n\n        final HazelcastInstance hz2 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map2 = hz2.getMap(MAP_NAME);\n\n        final HazelcastInstance hz3 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map3 = hz3.getMap(MAP_NAME);\n\n        final HazelcastInstance hz4 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map4 = hz4.getMap(MAP_NAME);\n\n        final HazelcastInstance hz5 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map5 = hz5.getMap(MAP_NAME);\n\n        final HazelcastInstance hz6 = f.newHazelcastInstance(config);\n        final IMap<Integer, Integer> map6 = hz6.getMap(MAP_NAME);\n\n        checkSizeEventually(size, map2);\n        checkSizeEventually(size, map3);\n        checkSizeEventually(size, map4);\n        checkSizeEventually(size, map5);\n        checkSizeEventually(size, map6);\n\n        hz6.shutdown();\n        checkSizeEventually(size, map);\n        checkSizeEventually(size, map2);\n        checkSizeEventually(size, map3);\n        checkSizeEventually(size, map4);\n        checkSizeEventually(size, map5);\n\n        hz2.shutdown();\n        checkSizeEventually(size, map);\n        checkSizeEventually(size, map3);\n        checkSizeEventually(size, map4);\n        checkSizeEventually(size, map5);\n\n        hz5.shutdown();\n        checkSizeEventually(size, map);\n        checkSizeEventually(size, map3);\n        checkSizeEventually(size, map4);\n\n        hz3.shutdown();\n        checkSizeEventually(size, map);\n        checkSizeEventually(size, map4);\n\n        hz4.shutdown();\n        checkSizeEventually(size, map);\n    }","commit_id":"b810737a486a8022efed517bfafeceb63bb065ae","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Test\n    public void testGracefulShutdown() throws Exception {\n        int size = 50000;\n        TestHazelcastInstanceFactory nodeFactory = createHazelcastInstanceFactory(4);\n        final Config config = new Config();\n\n        HazelcastInstance h1 = nodeFactory.newHazelcastInstance(config);\n        IMap<Integer, Integer> m1 = h1.getMap(MAP_NAME);\n        for (int i = 0; i < size; i++) {\n            m1.put(i, i);\n        }\n\n        HazelcastInstance h2 = nodeFactory.newHazelcastInstance(config);\n        IMap<Integer, Integer> m2 = h2.getMap(MAP_NAME);\n        shutdownAndWait(h1);\n        waitForSafeStateAndCheckSize(size, h2, m2);\n\n        HazelcastInstance h3 = nodeFactory.newHazelcastInstance(config);\n        IMap<Integer, Integer> m3 = h3.getMap(MAP_NAME);\n        shutdownAndWait(h2);\n        waitForSafeStateAndCheckSize(size, h3, m3);\n\n        HazelcastInstance h4 = nodeFactory.newHazelcastInstance(config);\n        IMap<Integer, Integer> m4 = h4.getMap(MAP_NAME);\n        shutdownAndWait(h3);\n        waitForSafeStateAndCheckSize(size, h4, m4);\n    }","id":63595,"modified_method":"@Test\n    public void testGracefulShutdown() throws Exception {\n        int size = 50000;\n        TestHazelcastInstanceFactory nodeFactory = createHazelcastInstanceFactory(4);\n        final Config config = new Config();\n\n        HazelcastInstance h1 = nodeFactory.newHazelcastInstance(config);\n        IMap<Integer, Integer> m1 = h1.getMap(MAP_NAME);\n        for (int i = 0; i < size; i++) {\n            m1.put(i, i);\n        }\n\n        HazelcastInstance h2 = nodeFactory.newHazelcastInstance(config);\n        IMap<Integer, Integer> m2 = h2.getMap(MAP_NAME);\n        h1.shutdown();\n        checkSizeEventually(size, m2);\n\n        HazelcastInstance h3 = nodeFactory.newHazelcastInstance(config);\n        IMap<Integer, Integer> m3 = h3.getMap(MAP_NAME);\n        h2.shutdown();\n        checkSizeEventually(size, m3);\n\n        HazelcastInstance h4 = nodeFactory.newHazelcastInstance(config);\n        IMap<Integer, Integer> m4 = h4.getMap(MAP_NAME);\n        h3.shutdown();\n        checkSizeEventually(size, m4);\n    }","commit_id":"b810737a486a8022efed517bfafeceb63bb065ae","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"static String collapse2EclipsePath(final String url, final ModuleRootModel model) {\n    final Project project = model.getModule().getProject();\n    final VirtualFile contentRoot = getContentRoot(model);\n    VirtualFile file = VirtualFileManager.getInstance().findFileByUrl(url);\n    if (file != null) {\n      LOG.assertTrue(file.isValid());\n      if (file.getFileSystem() instanceof JarFileSystem) {\n        file = JarFileSystem.getInstance().getVirtualFileForJar(file);\n      }\n      LOG.assertTrue(file != null, url);\n      if (contentRoot != null && VfsUtil.isAncestor(contentRoot, file, false)) { //inside current project\n        return VfsUtilCore.getRelativePath(file, contentRoot, '/');\n      } else {\n        final String path = collapse2eclipseRelative2OtherModule(project, file); //relative to other project\n        if (path != null) {\n          return path;\n        }\n      }\n      return ProjectRootManagerImpl.extractLocalPath(url);  //absolute path\n    }\n    else { //try to avoid absolute path for deleted file\n      if (contentRoot != null) {\n        final String rootUrl = contentRoot.getUrl();\n        if (url.startsWith(rootUrl) && url.length() > rootUrl.length()) {\n          return url.substring(rootUrl.length() + 1); //without leading /\n        }\n      }\n      final VirtualFile projectBaseDir = contentRoot != null ? contentRoot.getParent() : project.getBaseDir();\n      assert projectBaseDir != null;\n      final String projectUrl = projectBaseDir.getUrl();\n      if (url.startsWith(projectUrl)) {\n        return url.substring(projectUrl.length()); //leading /\n      }\n\n      return ProjectRootManagerImpl.extractLocalPath(url);\n    }\n  }","id":63596,"modified_method":"static String collapse2EclipsePath(final String url, final ModuleRootModel model) {\n    final Project project = model.getModule().getProject();\n    final VirtualFile contentRoot = getContentRoot(model);\n    VirtualFile file = VirtualFileManager.getInstance().findFileByUrl(url);\n    if (file != null) {\n      LOG.assertTrue(file.isValid());\n      if (file.getFileSystem() instanceof JarFileSystem) {\n        final VirtualFile jarFile = JarFileSystem.getInstance().getVirtualFileForJar(file);\n        if (jarFile == null) {\n          LOG.assertTrue(false, \"Url: \\'\" + url + \"\\'; file: \" + file);\n          return ProjectRootManagerImpl.extractLocalPath(url);\n        }\n        file = jarFile;\n      }\n      if (contentRoot != null && VfsUtilCore.isAncestor(contentRoot, file, false)) { //inside current project\n        return VfsUtilCore.getRelativePath(file, contentRoot, '/');\n      } else {\n        final String path = collapse2eclipseRelative2OtherModule(project, file); //relative to other project\n        if (path != null) {\n          return path;\n        }\n      }\n      return ProjectRootManagerImpl.extractLocalPath(url);  //absolute path\n    }\n    else { //try to avoid absolute path for deleted file\n      if (contentRoot != null) {\n        final String rootUrl = contentRoot.getUrl();\n        if (url.startsWith(rootUrl) && url.length() > rootUrl.length()) {\n          return url.substring(rootUrl.length() + 1); //without leading /\n        }\n      }\n      final VirtualFile projectBaseDir = contentRoot != null ? contentRoot.getParent() : project.getBaseDir();\n      assert projectBaseDir != null;\n      final String projectUrl = projectBaseDir.getUrl();\n      if (url.startsWith(projectUrl)) {\n        return url.substring(projectUrl.length()); //leading /\n      }\n\n      return ProjectRootManagerImpl.extractLocalPath(url);\n    }\n  }","commit_id":"a0697014e1ad93773be3aab7d2a63481e32332a1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void createClasspathEntry(OrderEntry entry, Element classpathRoot) throws ConversionException {\n    final EclipseModuleManager eclipseModuleManager = EclipseModuleManager.getInstance(entry.getOwnerModule());\n    if (entry instanceof ModuleSourceOrderEntry) {\n      final boolean shouldPlaceSeparately =\n        eclipseModuleManager.isExpectedModuleSourcePlace(Arrays.binarySearch(myModel.getOrderEntries(), entry));\n      final ContentEntry[] entries = myModel.getContentEntries();\n      for (final ContentEntry contentEntry : entries) {\n        final VirtualFile contentRoot = contentEntry.getFile();\n        for (SourceFolder sourceFolder : contentEntry.getSourceFolders()) {\n          final String srcUrl = sourceFolder.getUrl();\n          String relativePath = EPathUtil.collapse2EclipsePath(srcUrl, myModel);\n          if (contentRoot != EPathUtil.getContentRoot(myModel)) {\n            final String linkedPath = EclipseModuleManager.getInstance(entry.getOwnerModule()).getEclipseLinkedSrcVariablePath(srcUrl);\n            if (linkedPath != null) {\n              relativePath = linkedPath;\n            }\n          }\n          final Integer idx = eclipseModuleManager.getSrcPlace(srcUrl);\n          addOrderEntry(EclipseXml.SRC_KIND, relativePath, classpathRoot, shouldPlaceSeparately && idx != null ? idx.intValue() : -1);\n        }\n      }\n    }\n    else if (entry instanceof ModuleOrderEntry) {\n      Element orderEntry = addOrderEntry(EclipseXml.SRC_KIND, \"/\" + ((ModuleOrderEntry)entry).getModuleName(), classpathRoot);\n      setAttributeIfAbsent(orderEntry, EclipseXml.COMBINEACCESSRULES_ATTR, EclipseXml.FALSE_VALUE);\n      setExported(orderEntry, ((ExportableOrderEntry)entry));\n    }\n    else if (entry instanceof LibraryOrderEntry) {\n      final LibraryOrderEntry libraryOrderEntry = (LibraryOrderEntry)entry;\n      final String libraryName = libraryOrderEntry.getLibraryName();\n      if (libraryOrderEntry.isModuleLevel()) {\n        final String[] files = libraryOrderEntry.getRootUrls(OrderRootType.CLASSES);\n        if (files.length > 0) {\n          if (libraryName != null &&\n              libraryName.contains(IdeaXml.JUNIT) &&\n              Comparing.strEqual(files[0], EclipseClasspathReader.getJunitClsUrl(libraryName.contains(\"4\")))) {\n            final Element orderEntry =\n              addOrderEntry(EclipseXml.CON_KIND, EclipseXml.JUNIT_CONTAINER + \"/\" + libraryName.substring(IdeaXml.JUNIT.length()),\n                            classpathRoot);\n            setExported(orderEntry, libraryOrderEntry);\n          }\n          else {\n            boolean newVarLibrary = false;\n            String eclipseVariablePath = eclipseModuleManager.getEclipseVariablePath(files[0]);\n            if (eclipseVariablePath == null && !eclipseModuleManager.isEclipseLibUrl(files[0])) { //new library was added\n              newVarLibrary = true;\n              eclipseVariablePath = EPathUtil.collapse2EclipseVariabledPath(libraryOrderEntry, OrderRootType.CLASSES);\n            }\n            Element orderEntry;\n            if (eclipseVariablePath != null) {\n              orderEntry = addOrderEntry(EclipseXml.VAR_KIND, eclipseVariablePath, classpathRoot);\n            }\n            else {\n              orderEntry = addOrderEntry(EclipseXml.LIB_KIND, EPathUtil.collapse2EclipsePath(files[0], myModel), classpathRoot);\n            }\n\n            final String srcRelativePath;\n            String eclipseSrcVariablePath = null;\n\n            boolean addSrcRoots = true;\n            final String[] srcFiles = libraryOrderEntry.getRootUrls(OrderRootType.SOURCES);\n            if (srcFiles.length == 0) {\n              srcRelativePath = null;\n            }\n            else {\n              final String srcFile = srcFiles[0];\n              srcRelativePath = EPathUtil.collapse2EclipsePath(srcFile, myModel);\n              if (eclipseVariablePath != null) {\n                eclipseSrcVariablePath = eclipseModuleManager.getEclipseSrcVariablePath(srcFile);\n                if (eclipseSrcVariablePath == null) {\n                  eclipseSrcVariablePath = EPathUtil.collapse2EclipseVariabledPath(libraryOrderEntry, OrderRootType.SOURCES);\n                  if (eclipseSrcVariablePath != null) {\n                    eclipseSrcVariablePath = \"/\" + eclipseSrcVariablePath;\n                  } else {\n                    if (newVarLibrary) { //new library which cannot be replaced with vars\n                      orderEntry.detach();\n                      orderEntry = addOrderEntry(EclipseXml.LIB_KIND, EPathUtil.collapse2EclipsePath(files[0], myModel), classpathRoot);\n                    }\n                    else {\n                      LOG.info(\"Added root \" + srcRelativePath + \" (in existing var library) can't be replaced with any variable; src roots placed in .eml only\");\n                      addSrcRoots = false;\n                    }\n                  }\n                }\n              }\n            }\n            setOrRemoveAttribute(orderEntry, EclipseXml.SOURCEPATH_ATTR, addSrcRoots ? (eclipseSrcVariablePath != null ? eclipseSrcVariablePath : srcRelativePath) : null);\n\n            EJavadocUtil.setupJavadocAttributes(orderEntry, libraryOrderEntry, myModel);\n            setExported(orderEntry, libraryOrderEntry);\n          }\n        }\n      }\n      else {\n        final Element orderEntry;\n        if (eclipseModuleManager.getUnknownCons().contains(libraryName)) {\n          orderEntry = addOrderEntry(EclipseXml.CON_KIND, libraryName, classpathRoot);\n        } else if (Comparing.strEqual(libraryName, IdeaXml.ECLIPSE_LIBRARY)) {\n          orderEntry = addOrderEntry(EclipseXml.CON_KIND, EclipseXml.ECLIPSE_PLATFORM, classpathRoot);\n        }\n        else {\n          orderEntry = addOrderEntry(EclipseXml.CON_KIND, EclipseXml.USER_LIBRARY + \"/\" + libraryName, classpathRoot);\n        }\n        setExported(orderEntry, libraryOrderEntry);\n      }\n    }\n    else if (entry instanceof JdkOrderEntry) {\n      if (entry instanceof InheritedJdkOrderEntry) {\n        if (!EclipseModuleManager.getInstance(entry.getOwnerModule()).isForceConfigureJDK()) {\n          addOrderEntry(EclipseXml.CON_KIND, EclipseXml.JRE_CONTAINER, classpathRoot);\n        }\n      }\n      else {\n        final Sdk jdk = ((JdkOrderEntry)entry).getJdk();\n        String jdkLink;\n        if (jdk == null) {\n          jdkLink = EclipseXml.JRE_CONTAINER;\n        }\n        else {\n          jdkLink = EclipseXml.JRE_CONTAINER;\n          if (jdk.getSdkType() instanceof JavaSdkType) {\n            jdkLink += EclipseXml.JAVA_SDK_TYPE;\n          }\n          jdkLink += \"/\" + jdk.getName();\n        }\n        addOrderEntry(EclipseXml.CON_KIND, jdkLink, classpathRoot);\n      }\n    }\n    else {\n      throw new ConversionException(\"Unknown EclipseProjectModel.ClasspathEntry: \" + entry.getClass());\n    }\n  }","id":63597,"modified_method":"private void createClasspathEntry(OrderEntry entry, Element classpathRoot) throws ConversionException {\n    final EclipseModuleManager eclipseModuleManager = EclipseModuleManager.getInstance(entry.getOwnerModule());\n    if (entry instanceof ModuleSourceOrderEntry) {\n      final boolean shouldPlaceSeparately =\n        eclipseModuleManager.isExpectedModuleSourcePlace(Arrays.binarySearch(myModel.getOrderEntries(), entry));\n      final ContentEntry[] entries = myModel.getContentEntries();\n      for (final ContentEntry contentEntry : entries) {\n        final VirtualFile contentRoot = contentEntry.getFile();\n        for (SourceFolder sourceFolder : contentEntry.getSourceFolders()) {\n          final String srcUrl = sourceFolder.getUrl();\n          String relativePath = EPathUtil.collapse2EclipsePath(srcUrl, myModel);\n          if (contentRoot != EPathUtil.getContentRoot(myModel)) {\n            final String linkedPath = EclipseModuleManager.getInstance(entry.getOwnerModule()).getEclipseLinkedSrcVariablePath(srcUrl);\n            if (linkedPath != null) {\n              relativePath = linkedPath;\n            }\n          }\n          final Integer idx = eclipseModuleManager.getSrcPlace(srcUrl);\n          addOrderEntry(EclipseXml.SRC_KIND, relativePath, classpathRoot, shouldPlaceSeparately && idx != null ? idx.intValue() : -1);\n        }\n      }\n    }\n    else if (entry instanceof ModuleOrderEntry) {\n      Element orderEntry = addOrderEntry(EclipseXml.SRC_KIND, \"/\" + ((ModuleOrderEntry)entry).getModuleName(), classpathRoot);\n      setAttributeIfAbsent(orderEntry, EclipseXml.COMBINEACCESSRULES_ATTR, EclipseXml.FALSE_VALUE);\n      setExported(orderEntry, ((ExportableOrderEntry)entry));\n    }\n    else if (entry instanceof LibraryOrderEntry) {\n      final LibraryOrderEntry libraryOrderEntry = (LibraryOrderEntry)entry;\n      final String libraryName = libraryOrderEntry.getLibraryName();\n      if (libraryOrderEntry.isModuleLevel()) {\n        final String[] files = libraryOrderEntry.getRootUrls(OrderRootType.CLASSES);\n        if (files.length > 0) {\n          if (libraryName != null &&\n              libraryName.contains(IdeaXml.JUNIT) &&\n              Comparing.strEqual(files[0], EclipseClasspathReader.getJunitClsUrl(libraryName.contains(\"4\")))) {\n            final Element orderEntry =\n              addOrderEntry(EclipseXml.CON_KIND, EclipseXml.JUNIT_CONTAINER + \"/\" + libraryName.substring(IdeaXml.JUNIT.length()),\n                            classpathRoot);\n            setExported(orderEntry, libraryOrderEntry);\n          }\n          else {\n            boolean newVarLibrary = false;\n            String eclipseVariablePath = eclipseModuleManager.getEclipseVariablePath(files[0]);\n            if (eclipseVariablePath == null && !eclipseModuleManager.isEclipseLibUrl(files[0])) { //new library was added\n              newVarLibrary = true;\n              eclipseVariablePath = EPathUtil.collapse2EclipseVariabledPath(libraryOrderEntry, OrderRootType.CLASSES);\n            }\n            Element orderEntry;\n            if (eclipseVariablePath != null) {\n              orderEntry = addOrderEntry(EclipseXml.VAR_KIND, eclipseVariablePath, classpathRoot);\n            }\n            else {\n              LOG.assertTrue(!StringUtil.isEmptyOrSpaces(files[0]), \"Library: \" + libraryName);\n              orderEntry = addOrderEntry(EclipseXml.LIB_KIND, EPathUtil.collapse2EclipsePath(files[0], myModel), classpathRoot);\n            }\n\n            final String srcRelativePath;\n            String eclipseSrcVariablePath = null;\n\n            boolean addSrcRoots = true;\n            final String[] srcFiles = libraryOrderEntry.getRootUrls(OrderRootType.SOURCES);\n            if (srcFiles.length == 0) {\n              srcRelativePath = null;\n            }\n            else {\n              final String srcFile = srcFiles[0];\n              srcRelativePath = EPathUtil.collapse2EclipsePath(srcFile, myModel);\n              if (eclipseVariablePath != null) {\n                eclipseSrcVariablePath = eclipseModuleManager.getEclipseSrcVariablePath(srcFile);\n                if (eclipseSrcVariablePath == null) {\n                  eclipseSrcVariablePath = EPathUtil.collapse2EclipseVariabledPath(libraryOrderEntry, OrderRootType.SOURCES);\n                  if (eclipseSrcVariablePath != null) {\n                    eclipseSrcVariablePath = \"/\" + eclipseSrcVariablePath;\n                  } else {\n                    if (newVarLibrary) { //new library which cannot be replaced with vars\n                      orderEntry.detach();\n                      orderEntry = addOrderEntry(EclipseXml.LIB_KIND, EPathUtil.collapse2EclipsePath(files[0], myModel), classpathRoot);\n                    }\n                    else {\n                      LOG.info(\"Added root \" + srcRelativePath + \" (in existing var library) can't be replaced with any variable; src roots placed in .eml only\");\n                      addSrcRoots = false;\n                    }\n                  }\n                }\n              }\n            }\n            setOrRemoveAttribute(orderEntry, EclipseXml.SOURCEPATH_ATTR, addSrcRoots ? (eclipseSrcVariablePath != null ? eclipseSrcVariablePath : srcRelativePath) : null);\n\n            EJavadocUtil.setupJavadocAttributes(orderEntry, libraryOrderEntry, myModel);\n            setExported(orderEntry, libraryOrderEntry);\n          }\n        }\n      }\n      else {\n        final Element orderEntry;\n        if (eclipseModuleManager.getUnknownCons().contains(libraryName)) {\n          orderEntry = addOrderEntry(EclipseXml.CON_KIND, libraryName, classpathRoot);\n        } else if (Comparing.strEqual(libraryName, IdeaXml.ECLIPSE_LIBRARY)) {\n          orderEntry = addOrderEntry(EclipseXml.CON_KIND, EclipseXml.ECLIPSE_PLATFORM, classpathRoot);\n        }\n        else {\n          orderEntry = addOrderEntry(EclipseXml.CON_KIND, EclipseXml.USER_LIBRARY + \"/\" + libraryName, classpathRoot);\n        }\n        setExported(orderEntry, libraryOrderEntry);\n      }\n    }\n    else if (entry instanceof JdkOrderEntry) {\n      if (entry instanceof InheritedJdkOrderEntry) {\n        if (!EclipseModuleManager.getInstance(entry.getOwnerModule()).isForceConfigureJDK()) {\n          addOrderEntry(EclipseXml.CON_KIND, EclipseXml.JRE_CONTAINER, classpathRoot);\n        }\n      }\n      else {\n        final Sdk jdk = ((JdkOrderEntry)entry).getJdk();\n        String jdkLink;\n        if (jdk == null) {\n          jdkLink = EclipseXml.JRE_CONTAINER;\n        }\n        else {\n          jdkLink = EclipseXml.JRE_CONTAINER;\n          if (jdk.getSdkType() instanceof JavaSdkType) {\n            jdkLink += EclipseXml.JAVA_SDK_TYPE;\n          }\n          jdkLink += \"/\" + jdk.getName();\n        }\n        addOrderEntry(EclipseXml.CON_KIND, jdkLink, classpathRoot);\n      }\n    }\n    else {\n      throw new ConversionException(\"Unknown EclipseProjectModel.ClasspathEntry: \" + entry.getClass());\n    }\n  }","commit_id":"a0697014e1ad93773be3aab7d2a63481e32332a1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  @Override\n  public Collection<VirtualFile> getRoots() {\n    return Arrays.asList(ModuleRootManager.getInstance(getValue()).getContentRoots());\n  }","id":63598,"modified_method":"@NotNull\n  @Override\n  public Collection<VirtualFile> getRoots() {\n    Module module = getValue();\n    return module != null ? Arrays.asList(ModuleRootManager.getInstance(module).getContentRoots()) : Collections.<VirtualFile>emptyList();\n  }","commit_id":"eab930dd855d85b36f247575ea082ef377c73e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean contains(@NotNull VirtualFile file) {\n    Module module = getValue();\n    if (module == null || module.isDisposed()) return false;\n\n    final VirtualFile testee;\n    if (file.getFileSystem() instanceof JarFileSystem) {\n      testee = JarFileSystem.getInstance().getVirtualFileForJar(file);\n      if (testee == null) return false;\n    }\n    else {\n      testee = file;\n    }\n    for (VirtualFile root : ModuleRootManager.getInstance(module).getContentRoots()) {\n      if (VfsUtilCore.isAncestor(root, testee, false)) return true;\n    }\n    return false;\n  }","id":63599,"modified_method":"@Override\n  public boolean contains(@NotNull VirtualFile file) {\n    Module module = getValue();\n    if (module == null || module.isDisposed()) return false;\n\n    if (file.getFileSystem() instanceof JarFileSystem) {\n      VirtualFile local = JarFileSystem.getInstance().getVirtualFileForJar(file);\n      if (local == null) return false;\n      file = local;\n    }\n\n    for (VirtualFile root : ModuleRootManager.getInstance(module).getContentRoots()) {\n      if (VfsUtilCore.isAncestor(root, file, false)) return true;\n    }\n\n    return false;\n  }","commit_id":"eab930dd855d85b36f247575ea082ef377c73e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public String getNavigateActionText(boolean focusEditor) {\n    return \"Open Module Settings\";\n  }","id":63600,"modified_method":"@Override\n  public String getNavigateActionText(boolean focusEditor) {\n    return ActionsBundle.message(\"action.ModuleSettings.navigate\");\n  }","commit_id":"eab930dd855d85b36f247575ea082ef377c73e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void update(PresentationData presentation) {\n    if (getValue().isDisposed()) {\n      setValue(null);\n      return;\n    }\n    presentation.setPresentableText(getValue().getName());\n    if (showModuleNameInBold()) {\n      presentation.addText(getValue().getName(), SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);\n    }\n\n    presentation.setIcon(ModuleType.get(getValue()).getIcon());\n  }","id":63601,"modified_method":"@Override\n  public void update(PresentationData presentation) {\n    Module module = getValue();\n    if (module == null || module.isDisposed()) {\n      setValue(null);\n      return;\n    }\n\n    presentation.setPresentableText(module.getName());\n    if (showModuleNameInBold()) {\n      presentation.addText(module.getName(), SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);\n    }\n\n    presentation.setIcon(ModuleType.get(module).getIcon());\n\n    presentation.setTooltip(ModuleType.get(module).getName());\n  }","commit_id":"eab930dd855d85b36f247575ea082ef377c73e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public String getNavigateActionText(boolean focusEditor) {\n    return \"Open Module Settings\";\n  }","id":63602,"modified_method":"@Override\n  public String getNavigateActionText(boolean focusEditor) {\n    return ActionsBundle.message(\"action.ModuleSettings.navigate\");\n  }","commit_id":"eab930dd855d85b36f247575ea082ef377c73e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void navigate(final boolean requestFocus) {\n    ProjectSettingsService.getInstance(myProject).openLibraryOrSdkSettings(getValue().getOrderEntry());\n  }","id":63603,"modified_method":"@Override\n  public void navigate(final boolean requestFocus) {\n    NamedLibraryElement library = getValue();\n    if (library != null) {\n      ProjectSettingsService.getInstance(myProject).openLibraryOrSdkSettings(library.getOrderEntry());\n    }\n  }","commit_id":"eab930dd855d85b36f247575ea082ef377c73e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean canNavigate() {\n    return ProjectSettingsService.getInstance(myProject).canOpenLibraryOrSdkSettings(getValue().getOrderEntry());\n  }","id":63604,"modified_method":"@Override\n  public boolean canNavigate() {\n    NamedLibraryElement library = getValue();\n    return library != null && ProjectSettingsService.getInstance(myProject).canOpenLibraryOrSdkSettings(library.getOrderEntry());\n  }","commit_id":"eab930dd855d85b36f247575ea082ef377c73e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public String getNavigateActionText(boolean focusEditor) {\n    return \"Open Library Settings\";\n  }","id":63605,"modified_method":"@Override\n  public String getNavigateActionText(boolean focusEditor) {\n    return ActionsBundle.message(\"action.LibrarySettings.navigate\");\n  }","commit_id":"eab930dd855d85b36f247575ea082ef377c73e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public String getTestPresentation() {\n    return \"Library: \" + getValue().getName();\n  }","id":63606,"modified_method":"@SuppressWarnings(\"deprecation\")\n  @Override\n  public String getTestPresentation() {\n    NamedLibraryElement library = getValue();\n    return \"Library: \" + (library != null ? library.getName() : \"(null)\");\n  }","commit_id":"eab930dd855d85b36f247575ea082ef377c73e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void update(PresentationData presentation) {\n    presentation.setPresentableText(getValue().getName());\n    final OrderEntry orderEntry = getValue().getOrderEntry();\n    Icon closedIcon = orderEntry instanceof JdkOrderEntry ? getJdkIcon((JdkOrderEntry)orderEntry) : AllIcons.Nodes.PpLibFolder;\n    presentation.setIcon(closedIcon);\n    if (orderEntry instanceof JdkOrderEntry) {\n      final JdkOrderEntry jdkOrderEntry = (JdkOrderEntry)orderEntry;\n      final Sdk projectJdk = jdkOrderEntry.getJdk();\n      if (projectJdk != null) { //jdk not specified\n        final String path = projectJdk.getHomePath();\n        if (path != null) {\n          presentation.setLocationString(FileUtil.toSystemDependentName(path));\n        }\n      }\n      presentation.setTooltip(null);\n    }\n    else {\n      presentation.setTooltip(StringUtil.capitalize(IdeBundle.message(\"node.projectview.library\", ((LibraryOrderEntry)orderEntry).getLibraryLevel())));\n    }\n  }","id":63607,"modified_method":"@Override\n  public void update(PresentationData presentation) {\n    NamedLibraryElement library = getValue();\n    if (library == null) return;\n\n    OrderEntry orderEntry = library.getOrderEntry();\n    presentation.setPresentableText(library.getName());\n    Icon closedIcon = orderEntry instanceof JdkOrderEntry ? getJdkIcon((JdkOrderEntry)orderEntry) : AllIcons.Nodes.PpLibFolder;\n    presentation.setIcon(closedIcon);\n    if (orderEntry instanceof JdkOrderEntry) {\n      JdkOrderEntry jdkOrderEntry = (JdkOrderEntry)orderEntry;\n      Sdk projectJdk = jdkOrderEntry.getJdk();\n      if (projectJdk != null) { //jdk not specified\n        final String path = projectJdk.getHomePath();\n        if (path != null) {\n          presentation.setLocationString(FileUtil.toSystemDependentName(path));\n        }\n      }\n      presentation.setTooltip(null);\n    }\n    else {\n      presentation.setTooltip(StringUtil.capitalize(IdeBundle.message(\"node.projectview.library\", ((LibraryOrderEntry)orderEntry).getLibraryLevel())));\n    }\n  }","commit_id":"eab930dd855d85b36f247575ea082ef377c73e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean contains(@NotNull VirtualFile file) {\n    return orderEntryContainsFile(getValue().getOrderEntry(), file);\n  }","id":63608,"modified_method":"@Override\n  public boolean contains(@NotNull VirtualFile file) {\n    NamedLibraryElement library = getValue();\n    if (library == null) return false;\n\n    for (OrderRootType rootType : OrderRootType.getAllTypes()) {\n      LibraryOrSdkOrderEntry orderEntry = library.getOrderEntry();\n      if (orderEntry.isValid()) {\n        for (VirtualFile virtualFile : orderEntry.getRootFiles(rootType)) {\n          if (VfsUtilCore.isAncestor(virtualFile, file, false)) return true;\n        }\n      }\n    }\n\n    return false;\n  }","commit_id":"eab930dd855d85b36f247575ea082ef377c73e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public String getName() {\n    return getValue().getName();\n  }","id":63609,"modified_method":"@Override\n  public String getName() {\n    NamedLibraryElement library = getValue();\n    return library != null ? library.getName() : \"\";\n  }","commit_id":"eab930dd855d85b36f247575ea082ef377c73e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  @NotNull\n  public Collection<AbstractTreeNode> getChildren() {\n    final List<AbstractTreeNode> children = new ArrayList<AbstractTreeNode>();\n    LibraryGroupNode.addLibraryChildren(getValue().getOrderEntry(), children, getProject(), this);\n    return children;\n  }","id":63610,"modified_method":"@Override\n  @NotNull\n  public Collection<AbstractTreeNode> getChildren() {\n    List<AbstractTreeNode> children = new ArrayList<AbstractTreeNode>();\n    NamedLibraryElement libraryElement = getValue();\n    if (libraryElement != null) {\n      LibraryGroupNode.addLibraryChildren(libraryElement.getOrderEntry(), children, getProject(), this);\n    }\n    return children;\n  }","commit_id":"eab930dd855d85b36f247575ea082ef377c73e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public String getNavigateActionText(boolean focusEditor) {\n    VirtualFile file = getVirtualFile();\n    Project project = getProject();\n\n    if (file != null && project != null) {\n      if (ProjectRootsUtil.isModuleContentRoot(file, project) || ProjectRootsUtil.isModuleSourceRoot(file, project)) {\n        return \"Open Module Settings\";\n      }\n      if (ProjectRootsUtil.isLibraryRoot(file, project)) {\n        return \"Open Library Settings\";\n      }\n    }\n\n    return null;\n  }","id":63611,"modified_method":"@Override\n  public String getNavigateActionText(boolean focusEditor) {\n    VirtualFile file = getVirtualFile();\n    Project project = getProject();\n\n    if (file != null && project != null) {\n      if (ProjectRootsUtil.isModuleContentRoot(file, project) || ProjectRootsUtil.isModuleSourceRoot(file, project)) {\n        return ActionsBundle.message(\"action.ModuleSettings.navigate\");\n      }\n      if (ProjectRootsUtil.isLibraryRoot(file, project)) {\n        return ActionsBundle.message(\"action.LibrarySettings.navigate\");\n      }\n    }\n\n    return null;\n  }","commit_id":"eab930dd855d85b36f247575ea082ef377c73e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public String getNavigateActionText(boolean focusEditor) {\n    if (isNavigatableLibraryRoot()) {\n      return \"Open Library Settings\";\n    }\n    return null;\n  }","id":63612,"modified_method":"@Override\n  public String getNavigateActionText(boolean focusEditor) {\n    return isNavigatableLibraryRoot() ? ActionsBundle.message(\"action.LibrarySettings.navigate\") : null;\n  }","commit_id":"eab930dd855d85b36f247575ea082ef377c73e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean writeIdeaSpecificClasspath(@NotNull Element root, @NotNull ModuleRootModel model) {\n    boolean isModified = false;\n\n    CompilerModuleExtension compilerModuleExtension = model.getModuleExtension(CompilerModuleExtension.class);\n    if (compilerModuleExtension.getCompilerOutputUrlForTests() != null) {\n      final Element pathElement = new Element(IdeaXml.OUTPUT_TEST_TAG);\n      pathElement.setAttribute(IdeaXml.URL_ATTR, compilerModuleExtension.getCompilerOutputUrlForTests());\n      root.addContent(pathElement);\n      isModified = true;\n    }\n    if (compilerModuleExtension.isCompilerOutputPathInherited()) {\n      root.setAttribute(IdeaXml.INHERIT_COMPILER_OUTPUT_ATTR, String.valueOf(true));\n      isModified = true;\n    }\n    if (compilerModuleExtension.isExcludeOutput()) {\n      root.addContent(new Element(IdeaXml.EXCLUDE_OUTPUT_TAG));\n      isModified = true;\n    }\n\n    LanguageLevelModuleExtensionImpl languageLevelModuleExtension = model.getModuleExtension(LanguageLevelModuleExtensionImpl.class);\n    if (languageLevelModuleExtension.getLanguageLevel() != null) {\n      languageLevelModuleExtension.writeExternal(root);\n      isModified = true;\n    }\n\n    for (ContentEntry entry : model.getContentEntries()) {\n      Element contentEntryElement = new Element(IdeaXml.CONTENT_ENTRY_TAG);\n      contentEntryElement.setAttribute(IdeaXml.URL_ATTR, entry.getUrl());\n      root.addContent(contentEntryElement);\n      for (SourceFolder sourceFolder : entry.getSourceFolders()) {\n        if (sourceFolder.isTestSource()) {\n          Element element = new Element(IdeaXml.TEST_FOLDER_TAG);\n          contentEntryElement.addContent(element);\n          element.setAttribute(IdeaXml.URL_ATTR, sourceFolder.getUrl());\n          isModified = true;\n        }\n        String packagePrefix = sourceFolder.getPackagePrefix();\n        if (!StringUtil.isEmptyOrSpaces(packagePrefix)) {\n          Element element = new Element(IdeaXml.PACKAGE_PREFIX_TAG);\n          contentEntryElement.addContent(element);\n          element.setAttribute(IdeaXml.URL_ATTR, sourceFolder.getUrl());\n          element.setAttribute(IdeaXml.PACKAGE_PREFIX_VALUE_ATTR, packagePrefix);\n          isModified = true;\n        }\n      }\n\n      VirtualFile entryFile = entry.getFile();\n      for (ExcludeFolder excludeFolder : entry.getExcludeFolders()) {\n        VirtualFile excludeFile = excludeFolder.getFile();\n        if (entryFile == null || excludeFile == null || VfsUtilCore.isAncestor(entryFile, excludeFile, false)) {\n          Element element = new Element(IdeaXml.EXCLUDE_FOLDER_TAG);\n          contentEntryElement.addContent(element);\n          element.setAttribute(IdeaXml.URL_ATTR, excludeFolder.getUrl());\n          isModified = true;\n        }\n      }\n    }\n\n    Map<String, String> libLevels = new LinkedHashMap<String, String>();\n    for (OrderEntry entry : model.getOrderEntries()) {\n      if (entry instanceof ModuleOrderEntry) {\n        final DependencyScope scope = ((ModuleOrderEntry)entry).getScope();\n        if (!scope.equals(DependencyScope.COMPILE)) {\n          Element element = new Element(\"module\");\n          element.setAttribute(\"name\", ((ModuleOrderEntry)entry).getModuleName());\n          element.setAttribute(\"scope\", scope.name());\n          root.addContent(element);\n          isModified = true;\n        }\n      }\n      if (entry instanceof JdkOrderEntry) {\n        final Sdk jdk = ((JdkOrderEntry)entry).getJdk();\n        if (EclipseModuleManagerImpl.getInstance(entry.getOwnerModule()).getInvalidJdk() != null || jdk != null) {\n          if (entry instanceof InheritedJdkOrderEntry) {\n            root.setAttribute(INHERIT_JDK, \"true\");\n          }\n          else {\n            root.setAttribute(\"jdk\", ((JdkOrderEntry)entry).getJdkName());\n            if (jdk != null) {\n              root.setAttribute(\"jdk_type\", jdk.getSdkType().getName());\n            }\n          }\n          isModified = true;\n        }\n      }\n      if (!(entry instanceof LibraryOrderEntry)) continue;\n\n      Element element = new Element(\"lib\");\n      LibraryOrderEntry libraryEntry = (LibraryOrderEntry)entry;\n\n      String libraryName = ((LibraryOrderEntry)entry).getLibraryName();\n      if (libraryName == null) {\n        final String[] urls = libraryEntry.getRootUrls(OrderRootType.CLASSES);\n        if (urls.length > 0) {\n          VirtualFile file = VirtualFileManager.getInstance().findFileByUrl(urls[0]);\n          file = JarFileSystem.getInstance().getVirtualFileForJar(file);\n          libraryName = file != null ? file.getName() : null;\n        }\n        if (libraryName == null) {\n          libraryName = libraryEntry.getPresentableName();\n        }\n      }\n\n      element.setAttribute(\"name\", libraryName);\n      DependencyScope scope = libraryEntry.getScope();\n      element.setAttribute(\"scope\", scope.name());\n      if (libraryEntry.isModuleLevel()) {\n        final String[] urls = libraryEntry.getRootUrls(OrderRootType.SOURCES);\n        String eclipseUrl = null;\n        if (urls.length > 0) {\n          eclipseUrl = urls[0];\n          final int jarSeparatorIdx = urls[0].indexOf(JarFileSystem.JAR_SEPARATOR);\n          if (jarSeparatorIdx > -1) {\n            eclipseUrl = eclipseUrl.substring(0, jarSeparatorIdx);\n          }\n        }\n        for (String url : urls) {\n          Element srcElement = new Element(SRCROOT_ATTR);\n          srcElement.setAttribute(\"url\", url);\n          if (!areUrlsPointTheSame(url, eclipseUrl)) {\n            srcElement.setAttribute(SRCROOT_BIND_ATTR, String.valueOf(false));\n          }\n          element.addContent(srcElement);\n        }\n\n        final String[] javadocUrls = libraryEntry.getRootUrls(JavadocOrderRootType.getInstance());\n        for (int i = 1; i < javadocUrls.length; i++) {\n          Element javadocElement = new Element(JAVADOCROOT_ATTR);\n          javadocElement.setAttribute(\"url\", javadocUrls[i]);\n          element.addContent(javadocElement);\n        }\n\n        for (String srcUrl : libraryEntry.getRootUrls(OrderRootType.SOURCES)) {\n          appendModuleRelatedRoot(element, srcUrl, RELATIVE_MODULE_SRC, model);\n        }\n\n        for (String classesUrl : libraryEntry.getRootUrls(OrderRootType.CLASSES)) {\n          appendModuleRelatedRoot(element, classesUrl, RELATIVE_MODULE_CLS, model);\n        }\n\n        for (String javadocUrl : libraryEntry.getRootUrls(JavadocOrderRootType.getInstance())) {\n          appendModuleRelatedRoot(element, javadocUrl, RELATIVE_MODULE_JAVADOC, model);\n        }\n\n        if (!element.getChildren().isEmpty()) {\n          root.addContent(element);\n          isModified = true;\n          continue;\n        }\n      }\n      else {\n        String libraryLevel = libraryEntry.getLibraryLevel();\n        if (!LibraryTablesRegistrar.APPLICATION_LEVEL.equals(libraryLevel)) {\n          libLevels.put(libraryEntry.getLibraryName(), libraryLevel);\n        }\n      }\n      if (!scope.equals(DependencyScope.COMPILE)) {\n        root.addContent(element);\n        isModified = true;\n      }\n    }\n\n    if (!libLevels.isEmpty()) {\n      Element libLevelsElement = new Element(\"levels\");\n      for (String libName : libLevels.keySet()) {\n        Element libElement = new Element(\"level\");\n        libElement.setAttribute(\"name\", libName);\n        libElement.setAttribute(\"value\", libLevels.get(libName));\n        libLevelsElement.addContent(libElement);\n      }\n      root.addContent(libLevelsElement);\n    }\n\n    PathMacroManager.getInstance(model.getModule()).collapsePaths(root);\n\n    return isModified;\n  }","id":63613,"modified_method":"public static boolean writeIdeaSpecificClasspath(@NotNull Element root, @NotNull ModuleRootModel model) {\n    boolean isModified = false;\n\n    CompilerModuleExtension compilerModuleExtension = model.getModuleExtension(CompilerModuleExtension.class);\n    if (compilerModuleExtension.getCompilerOutputUrlForTests() != null) {\n      final Element pathElement = new Element(IdeaXml.OUTPUT_TEST_TAG);\n      pathElement.setAttribute(IdeaXml.URL_ATTR, compilerModuleExtension.getCompilerOutputUrlForTests());\n      root.addContent(pathElement);\n      isModified = true;\n    }\n    if (compilerModuleExtension.isCompilerOutputPathInherited()) {\n      root.setAttribute(IdeaXml.INHERIT_COMPILER_OUTPUT_ATTR, String.valueOf(true));\n      isModified = true;\n    }\n    if (compilerModuleExtension.isExcludeOutput()) {\n      root.addContent(new Element(IdeaXml.EXCLUDE_OUTPUT_TAG));\n      isModified = true;\n    }\n\n    LanguageLevelModuleExtensionImpl languageLevelModuleExtension = model.getModuleExtension(LanguageLevelModuleExtensionImpl.class);\n    if (languageLevelModuleExtension.getLanguageLevel() != null) {\n      languageLevelModuleExtension.writeExternal(root);\n      isModified = true;\n    }\n\n    for (ContentEntry entry : model.getContentEntries()) {\n      Element contentEntryElement = new Element(IdeaXml.CONTENT_ENTRY_TAG);\n      contentEntryElement.setAttribute(IdeaXml.URL_ATTR, entry.getUrl());\n      root.addContent(contentEntryElement);\n      for (SourceFolder sourceFolder : entry.getSourceFolders()) {\n        if (sourceFolder.isTestSource()) {\n          Element element = new Element(IdeaXml.TEST_FOLDER_TAG);\n          contentEntryElement.addContent(element);\n          element.setAttribute(IdeaXml.URL_ATTR, sourceFolder.getUrl());\n          isModified = true;\n        }\n        String packagePrefix = sourceFolder.getPackagePrefix();\n        if (!StringUtil.isEmptyOrSpaces(packagePrefix)) {\n          Element element = new Element(IdeaXml.PACKAGE_PREFIX_TAG);\n          contentEntryElement.addContent(element);\n          element.setAttribute(IdeaXml.URL_ATTR, sourceFolder.getUrl());\n          element.setAttribute(IdeaXml.PACKAGE_PREFIX_VALUE_ATTR, packagePrefix);\n          isModified = true;\n        }\n      }\n\n      VirtualFile entryFile = entry.getFile();\n      for (ExcludeFolder excludeFolder : entry.getExcludeFolders()) {\n        VirtualFile excludeFile = excludeFolder.getFile();\n        if (entryFile == null || excludeFile == null || VfsUtilCore.isAncestor(entryFile, excludeFile, false)) {\n          Element element = new Element(IdeaXml.EXCLUDE_FOLDER_TAG);\n          contentEntryElement.addContent(element);\n          element.setAttribute(IdeaXml.URL_ATTR, excludeFolder.getUrl());\n          isModified = true;\n        }\n      }\n    }\n\n    Map<String, String> libLevels = new LinkedHashMap<String, String>();\n    for (OrderEntry entry : model.getOrderEntries()) {\n      if (entry instanceof ModuleOrderEntry) {\n        final DependencyScope scope = ((ModuleOrderEntry)entry).getScope();\n        if (!scope.equals(DependencyScope.COMPILE)) {\n          Element element = new Element(\"module\");\n          element.setAttribute(\"name\", ((ModuleOrderEntry)entry).getModuleName());\n          element.setAttribute(\"scope\", scope.name());\n          root.addContent(element);\n          isModified = true;\n        }\n      }\n      if (entry instanceof JdkOrderEntry) {\n        final Sdk jdk = ((JdkOrderEntry)entry).getJdk();\n        if (EclipseModuleManagerImpl.getInstance(entry.getOwnerModule()).getInvalidJdk() != null || jdk != null) {\n          if (entry instanceof InheritedJdkOrderEntry) {\n            root.setAttribute(INHERIT_JDK, \"true\");\n          }\n          else {\n            root.setAttribute(\"jdk\", ((JdkOrderEntry)entry).getJdkName());\n            if (jdk != null) {\n              root.setAttribute(\"jdk_type\", jdk.getSdkType().getName());\n            }\n          }\n          isModified = true;\n        }\n      }\n      if (!(entry instanceof LibraryOrderEntry)) continue;\n\n      Element element = new Element(\"lib\");\n      LibraryOrderEntry libraryEntry = (LibraryOrderEntry)entry;\n\n      String libraryName = ((LibraryOrderEntry)entry).getLibraryName();\n      if (libraryName == null) {\n        final String[] urls = libraryEntry.getRootUrls(OrderRootType.CLASSES);\n        if (urls.length > 0) {\n          VirtualFile file = VirtualFileManager.getInstance().findFileByUrl(urls[0]);\n          final VirtualFile fileForJar = JarFileSystem.getInstance().getVirtualFileForJar(file);\n          if (fileForJar != null) {\n            file = fileForJar;\n          }\n          libraryName = file != null ? file.getName() : null;\n        }\n        if (libraryName == null) {\n          libraryName = libraryEntry.getPresentableName();\n        }\n      }\n\n      element.setAttribute(\"name\", libraryName);\n      DependencyScope scope = libraryEntry.getScope();\n      element.setAttribute(\"scope\", scope.name());\n      if (libraryEntry.isModuleLevel()) {\n        final String[] urls = libraryEntry.getRootUrls(OrderRootType.SOURCES);\n        String eclipseUrl = null;\n        if (urls.length > 0) {\n          eclipseUrl = urls[0];\n          final int jarSeparatorIdx = urls[0].indexOf(JarFileSystem.JAR_SEPARATOR);\n          if (jarSeparatorIdx > -1) {\n            eclipseUrl = eclipseUrl.substring(0, jarSeparatorIdx);\n          }\n        }\n        for (String url : urls) {\n          Element srcElement = new Element(SRCROOT_ATTR);\n          srcElement.setAttribute(\"url\", url);\n          if (!areUrlsPointTheSame(url, eclipseUrl)) {\n            srcElement.setAttribute(SRCROOT_BIND_ATTR, String.valueOf(false));\n          }\n          element.addContent(srcElement);\n        }\n\n        final String[] javadocUrls = libraryEntry.getRootUrls(JavadocOrderRootType.getInstance());\n        for (int i = 1; i < javadocUrls.length; i++) {\n          Element javadocElement = new Element(JAVADOCROOT_ATTR);\n          javadocElement.setAttribute(\"url\", javadocUrls[i]);\n          element.addContent(javadocElement);\n        }\n\n        for (String srcUrl : libraryEntry.getRootUrls(OrderRootType.SOURCES)) {\n          appendModuleRelatedRoot(element, srcUrl, RELATIVE_MODULE_SRC, model);\n        }\n\n        for (String classesUrl : libraryEntry.getRootUrls(OrderRootType.CLASSES)) {\n          appendModuleRelatedRoot(element, classesUrl, RELATIVE_MODULE_CLS, model);\n        }\n\n        for (String javadocUrl : libraryEntry.getRootUrls(JavadocOrderRootType.getInstance())) {\n          appendModuleRelatedRoot(element, javadocUrl, RELATIVE_MODULE_JAVADOC, model);\n        }\n\n        if (!element.getChildren().isEmpty()) {\n          root.addContent(element);\n          isModified = true;\n          continue;\n        }\n      }\n      else {\n        String libraryLevel = libraryEntry.getLibraryLevel();\n        if (!LibraryTablesRegistrar.APPLICATION_LEVEL.equals(libraryLevel)) {\n          libLevels.put(libraryEntry.getLibraryName(), libraryLevel);\n        }\n      }\n      if (!scope.equals(DependencyScope.COMPILE)) {\n        root.addContent(element);\n        isModified = true;\n      }\n    }\n\n    if (!libLevels.isEmpty()) {\n      Element libLevelsElement = new Element(\"levels\");\n      for (String libName : libLevels.keySet()) {\n        Element libElement = new Element(\"level\");\n        libElement.setAttribute(\"name\", libName);\n        libElement.setAttribute(\"value\", libLevels.get(libName));\n        libLevelsElement.addContent(libElement);\n      }\n      root.addContent(libLevelsElement);\n    }\n\n    PathMacroManager.getInstance(model.getModule()).collapsePaths(root);\n\n    return isModified;\n  }","commit_id":"f182211f3354b3a89988db6807190b6f391f3658","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\r\n     *  checks for local/global IP range and local IP\r\n     */\r\n    @Override\r\n    public final boolean isLocal() {\r\n        if (this.isFile()) return true;\r\n        return domDomain(hash()) == 7;\r\n    }","id":63614,"modified_method":"/**\r\n     *  checks for local/global IP range and local IP\r\n     */\r\n    @Override\r\n    public final boolean isLocal() {\r\n        if (this.isFile()) return true;\r\n        return Domains.isLocal(this.host, this.hostAddress);\r\n    }","commit_id":"87f358058e527e05101837b8345937117df3911e","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"protected static int solrQuery(\r\n            final SearchEvent event,\r\n            final SolrQuery solrQuery,\r\n            final int offset,\r\n            final int count,\r\n            final Seed target,\r\n            final int partitions,\r\n            final Blacklist blacklist) {\r\n\r\n        //try {System.out.println(\"*** debug-query *** \" + URLDecoder.decode(solrQuery.toString(), \"UTF-8\"));} catch (UnsupportedEncodingException e) {}\r\n        \r\n        if (event.query.getQueryGoal().getQueryString(false) == null || event.query.getQueryGoal().getQueryString(false).length() == 0) {\r\n            return -1; // we cannot query solr only with word hashes, there is no clear text string\r\n        }\r\n        event.addExpectedRemoteReferences(count);\r\n        if (partitions > 0) solrQuery.set(\"partitions\", partitions);\r\n        solrQuery.setStart(offset);\r\n        solrQuery.setRows(count);\r\n        \r\n        // set highlighting query attributes\r\n        if (event.query.contentdom == Classification.ContentDomain.TEXT || event.query.contentdom == Classification.ContentDomain.ALL) {\r\n            solrQuery.setHighlight(true);\r\n            solrQuery.setHighlightFragsize(SearchEvent.SNIPPET_MAX_LENGTH);\r\n            //solrQuery.setHighlightRequireFieldMatch();\r\n            solrQuery.setHighlightSimplePost(\"<\/b>\");\r\n            solrQuery.setHighlightSimplePre(\"<b>\");\r\n            solrQuery.setHighlightSnippets(5);\r\n            for (CollectionSchema field: snippetFields) solrQuery.addHighlightField(field.getSolrFieldName());\r\n            //System.out.println(\"*** debug-query-highligh ***:\" + ConcurrentLog.stackTrace());\r\n        } else {\r\n            solrQuery.setHighlight(false);\r\n        }\r\n        boolean localsearch = target == null || target.equals(event.peers.mySeed());\r\n        Map<String, ReversibleScoreMap<String>> facets = new HashMap<String, ReversibleScoreMap<String>>(event.query.facetfields.size());\r\n        Map<String, LinkedHashSet<String>> snippets = new HashMap<String, LinkedHashSet<String>>(); // this will be a list of urlhash-snippet entries\r\n        final QueryResponse[] rsp = new QueryResponse[]{null};\r\n        final SolrDocumentList[] docList = new SolrDocumentList[]{null};\r\n        String ip = target.getIP();\r\n        {// encapsulate expensive solr QueryResponse object\r\n            if (localsearch && !Switchboard.getSwitchboard().getConfigBool(SwitchboardConstants.DEBUG_SEARCH_REMOTE_SOLR_TESTLOCAL, false)) {\r\n                // search the local index\r\n                try {\r\n                    SolrConnector sc = event.getQuery().getSegment().fulltext().getDefaultConnector();\r\n                    if (!sc.isClosed()) {\r\n                        rsp[0] = sc.getResponseByParams(solrQuery);\r\n                        docList[0] = rsp[0].getResults();\r\n                    }\r\n                } catch (final Throwable e) {\r\n                    Network.log.info(\"SEARCH failed (solr), localpeer (\" + e.getMessage() + \")\", e);\r\n                    return -1;\r\n                }\r\n            } else {\r\n                try {\r\n                    final boolean myseed = target == event.peers.mySeed();\r\n                    if (!myseed && !target.getFlagSolrAvailable()) { // skip if peer.dna has flag that last try resulted in error\r\n                        Network.log.info(\"SEARCH skip (solr), remote Solr interface not accessible, peer=\" + target.getName());\r\n                        return -1;\r\n                    }\r\n                    final String address = myseed ? \"localhost:\" + target.getPort() : target.getPublicAddress(ip);\r\n                    final int solrtimeout = Switchboard.getSwitchboard().getConfigInt(SwitchboardConstants.FEDERATED_SERVICE_SOLR_INDEXING_TIMEOUT, 6000);\r\n                    Thread remoteRequest = new Thread() {\r\n                        @Override\r\n                        public void run() {\r\n                            this.setName(\"Protocol.solrQuery(\" + solrQuery.getQuery() + \" to \" + target.hash + \")\");\r\n                            try {\r\n                                RemoteInstance instance = new RemoteInstance(\"http://\" + address, null, \"solr\", solrtimeout); // this is a 'patch configuration' which considers 'solr' as default collection\r\n                                try {\r\n                                    SolrConnector solrConnector = new RemoteSolrConnector(instance, myseed ? true : target.getVersion() >= 1.63, \"solr\");\r\n                                    if (!solrConnector.isClosed()) try {\r\n                                        rsp[0] = solrConnector.getResponseByParams(solrQuery);\r\n                                        docList[0] = rsp[0].getResults();\r\n                                    } catch (Throwable e) {} finally {\r\n                                        solrConnector.close();\r\n                                    }\r\n                                } catch (Throwable ee) {} finally {\r\n                                    instance.close();\r\n                                }\r\n                            } catch (Throwable eee) {}\r\n                        }\r\n                    };\r\n                    remoteRequest.start();\r\n                    remoteRequest.join(solrtimeout); // just wait until timeout appears\r\n                    if (remoteRequest.isAlive()) {\r\n                        try {remoteRequest.interrupt();} catch (Throwable e) {}\r\n                        Network.log.info(\"SEARCH failed (solr), remote Peer: \" + target.getName() + \"/\" + target.getPublicAddress(ip) + \" does not answer (time-out)\");\r\n                        target.setFlagSolrAvailable(false || myseed);\r\n                        return -1; // give up, leave remoteRequest abandoned.\r\n                    }\r\n                    // no need to close this here because that sends a commit to remote solr which is not wanted here\r\n                } catch (final Throwable e) {\r\n                    Network.log.info(\"SEARCH failed (solr), remote Peer: \" + target.getName() + \"/\" + target.getPublicAddress(ip) + \" (\" + e.getMessage() + \")\");\r\n                    target.setFlagSolrAvailable(false || localsearch);\r\n                    return -1;\r\n                }\r\n            }\r\n\r\n            if (rsp[0] == null || docList[0] == null) {\r\n                Network.log.info(\"SEARCH failed (solr), remote Peer: \" + target.getName() + \"/\" + target.getPublicAddress(ip) + \" returned null\");\r\n                target.setFlagSolrAvailable(false || localsearch);\r\n                return -1;\r\n            }\r\n            \r\n            // evaluate facets\r\n            for (String field: event.query.facetfields) {\r\n                FacetField facet = rsp[0].getFacetField(field);\r\n                ReversibleScoreMap<String> result = new ClusteredScoreMap<String>(UTF8.insensitiveUTF8Comparator);\r\n                List<Count> values = facet == null ? null : facet.getValues();\r\n                if (values == null) continue;\r\n                for (Count ff: values) {\r\n                    int c = (int) ff.getCount();\r\n                    if (c == 0) continue;\r\n                    if (ff.getName().length() == 0) continue; // facet entry without text is not useful\r\n                    result.set(ff.getName(), c);\r\n                }\r\n                if (result.size() > 0) facets.put(field, result);\r\n            }\r\n            \r\n            // evaluate snippets\r\n            Map<String, Map<String, List<String>>> rawsnippets = rsp[0].getHighlighting(); // a map from the urlhash to a map with key=field and value = list of snippets\r\n            if (rawsnippets != null) {\r\n                nextsnippet: for (Map.Entry<String, Map<String, List<String>>> re: rawsnippets.entrySet()) {\r\n                    Map<String, List<String>> rs = re.getValue();\r\n                    for (CollectionSchema field: snippetFields) {\r\n                        if (rs.containsKey(field.getSolrFieldName())) {\r\n                            List<String> s = rs.get(field.getSolrFieldName());\r\n                            if (s.size() > 0) {\r\n                                LinkedHashSet<String> ls = new LinkedHashSet<String>();\r\n                                ls.addAll(s);\r\n                                snippets.put(re.getKey(), ls);\r\n                                continue nextsnippet;\r\n                            }\r\n                        }\r\n                    }\r\n                    // no snippet found :( --we don't assign a value here by default; that can be done as an evaluation outside this method\r\n                }\r\n            }\r\n            rsp[0] = null;\r\n        }\r\n        \r\n        // evaluate result\r\n        if (docList == null || docList[0].size() == 0) {\r\n            Network.log.info(\"SEARCH (solr), returned 0 out of 0 documents from \" + (target == null ? \"shard\" : (\"peer \" + target.hash + \":\" + target.getName())) + \" query = \" + solrQuery.toString()) ;\r\n            return 0;\r\n        }\r\n        \r\n        List<URIMetadataNode> container = new ArrayList<URIMetadataNode>();\r\n        Network.log.info(\"SEARCH (solr), returned \" + docList[0].size() + \" out of \" + docList[0].getNumFound() + \" documents and \" + facets.size() + \" facets \" + facets.keySet().toString() + \" from \" + (target == null ? \"shard\" : (\"peer \" + target.hash + \":\" + target.getName())));\r\n        int term = count;\r\n        Collection<SolrInputDocument> docs;\r\n        if (event.addResultsToLocalIndex) { // only needed to store remote results\r\n            docs = new ArrayList<SolrInputDocument>(docList[0].size());\r\n        } else docs = null;\r\n        for (final SolrDocument doc: docList[0]) {\r\n            //System.out.println(\"***DEBUG*** \" + ((String) doc.getFieldValue(\"sku\")));\r\n            if ( term-- <= 0 ) {\r\n                break; // do not process more that requested (in case that evil peers fill us up with rubbish)\r\n            }\r\n            // get one single search result\r\n            if ( doc == null ) {\r\n                continue;\r\n            }\r\n            URIMetadataNode urlEntry;\r\n            try {\r\n                urlEntry = new URIMetadataNode(doc);\r\n            } catch (MalformedURLException ex) {\r\n                continue;\r\n            }\r\n\r\n            if ( blacklist.isListed(BlacklistType.SEARCH, urlEntry.url()) ) {\r\n                if ( Network.log.isInfo() ) {\r\n                    if (localsearch) {\r\n                        Network.log.info(\"local search (solr): filtered blacklisted url \" + urlEntry.url());\r\n                    } else {\r\n                        Network.log.info(\"remote search (solr): filtered blacklisted url \" + urlEntry.url() + \" from \" + (target == null ? \"shard\" : (\"peer \" + target.hash + \":\" + target.getName())));\r\n                    }\r\n                }\r\n                continue; // block with blacklist\r\n            }\r\n\r\n            final String urlRejectReason = Switchboard.getSwitchboard().crawlStacker.urlInAcceptedDomain(urlEntry.url());\r\n            if ( urlRejectReason != null ) {\r\n                if ( Network.log.isInfo() ) {\r\n                    if (localsearch) {\r\n                        Network.log.info(\"local search (solr): rejected url '\" + urlEntry.url() + \"' (\" + urlRejectReason + \")\");\r\n                    } else {\r\n                        Network.log.info(\"remote search (solr): rejected url '\" + urlEntry.url() + \"' (\" + urlRejectReason + \") from peer \" + target.getName());\r\n                    }\r\n                }\r\n                continue; // reject url outside of our domain\r\n            }\r\n\r\n            // passed all checks, store url\r\n            if (!localsearch) {\r\n                \r\n                // put the remote documents to the local index. We must convert the solr document to a solr input document:\r\n                if (event.addResultsToLocalIndex) {\r\n                    final SolrInputDocument sid = event.query.getSegment().fulltext().getDefaultConfiguration().toSolrInputDocument(doc);\r\n\r\n                    // the input document stays untouched because it contains top-level cloned objects\r\n                    docs.add(sid);\r\n                    // will be stored to index, and is a full solr document, can be added to firstseen\r\n                    event.query.getSegment().setFirstSeenTime(urlEntry.hash(), Math.min(urlEntry.moddate().getTime(), System.currentTimeMillis()));\r\n                }\r\n\r\n                // after this conversion we can remove the largest and not used field text_t and synonyms_sxt from the document\r\n                // because that goes into a search cache and would take a lot of memory in the search cache\r\n                //doc.removeFields(CollectionSchema.text_t.getSolrFieldName());\r\n                doc.removeFields(CollectionSchema.synonyms_sxt.getSolrFieldName());\r\n                \r\n                ResultURLs.stack(\r\n                    ASCII.String(urlEntry.url().hash()),\r\n                    urlEntry.url().getHost(),\r\n                    event.peers.mySeed().hash.getBytes(),\r\n                    UTF8.getBytes(target.hash),\r\n                    EventOrigin.QUERIES);\r\n            }\r\n\r\n            // add the url entry to the word indexes\r\n            container.add(urlEntry);\r\n        }\r\n        final int dls = docList[0].size();\r\n        final int numFound = (int) docList[0].getNumFound();\r\n        docList[0].clear();\r\n        docList[0] = null;\r\n        if (localsearch) {\r\n            event.addNodes(container, facets, snippets, true, \"localpeer\", numFound);\r\n            event.addFinalize();\r\n            event.addExpectedRemoteReferences(-count);\r\n            Network.log.info(\"local search (solr): localpeer sent \" + container.size() + \"/\" + numFound + \" references\");\r\n        } else {\r\n            if (event.addResultsToLocalIndex) {\r\n                for (SolrInputDocument doc: docs) {\r\n                    event.query.getSegment().putDocument(doc);\r\n                }\r\n                docs.clear(); docs = null;\r\n            }\r\n            event.addNodes(container, facets, snippets, false, target.getName() + \"/\" + target.hash, numFound);\r\n            event.addFinalize();\r\n            event.addExpectedRemoteReferences(-count);\r\n            Network.log.info(\"remote search (solr): peer \" + target.getName() + \" sent \" + (container.size() == 0 ? 0 : container.size()) + \"/\" + numFound + \" references\");\r\n        }\r\n        return dls;\r\n    }","id":63615,"modified_method":"protected static int solrQuery(\r\n            final SearchEvent event,\r\n            final SolrQuery solrQuery,\r\n            final int offset,\r\n            final int count,\r\n            final Seed target,\r\n            final int partitions,\r\n            final Blacklist blacklist) {\r\n\r\n        //try {System.out.println(\"*** debug-query *** \" + URLDecoder.decode(solrQuery.toString(), \"UTF-8\"));} catch (UnsupportedEncodingException e) {}\r\n        \r\n        if (event.query.getQueryGoal().getQueryString(false) == null || event.query.getQueryGoal().getQueryString(false).length() == 0) {\r\n            return -1; // we cannot query solr only with word hashes, there is no clear text string\r\n        }\r\n        event.addExpectedRemoteReferences(count);\r\n        if (partitions > 0) solrQuery.set(\"partitions\", partitions);\r\n        solrQuery.setStart(offset);\r\n        solrQuery.setRows(count);\r\n        \r\n        // set highlighting query attributes\r\n        if (event.query.contentdom == Classification.ContentDomain.TEXT || event.query.contentdom == Classification.ContentDomain.ALL) {\r\n            solrQuery.setHighlight(true);\r\n            solrQuery.setHighlightFragsize(SearchEvent.SNIPPET_MAX_LENGTH);\r\n            //solrQuery.setHighlightRequireFieldMatch();\r\n            solrQuery.setHighlightSimplePost(\"<\/b>\");\r\n            solrQuery.setHighlightSimplePre(\"<b>\");\r\n            solrQuery.setHighlightSnippets(5);\r\n            for (CollectionSchema field: snippetFields) solrQuery.addHighlightField(field.getSolrFieldName());\r\n            //System.out.println(\"*** debug-query-highligh ***:\" + ConcurrentLog.stackTrace());\r\n        } else {\r\n            solrQuery.setHighlight(false);\r\n        }\r\n        boolean localsearch = target == null || target.equals(event.peers.mySeed());\r\n        Map<String, ReversibleScoreMap<String>> facets = new HashMap<String, ReversibleScoreMap<String>>(event.query.facetfields.size());\r\n        Map<String, LinkedHashSet<String>> snippets = new HashMap<String, LinkedHashSet<String>>(); // this will be a list of urlhash-snippet entries\r\n        final QueryResponse[] rsp = new QueryResponse[]{null};\r\n        final SolrDocumentList[] docList = new SolrDocumentList[]{null};\r\n        String ip = target.getIP();\r\n        {// encapsulate expensive solr QueryResponse object\r\n            if (localsearch && !Switchboard.getSwitchboard().getConfigBool(SwitchboardConstants.DEBUG_SEARCH_REMOTE_SOLR_TESTLOCAL, false)) {\r\n                // search the local index\r\n                try {\r\n                    SolrConnector sc = event.getQuery().getSegment().fulltext().getDefaultConnector();\r\n                    if (!sc.isClosed()) {\r\n                        rsp[0] = sc.getResponseByParams(solrQuery);\r\n                        docList[0] = rsp[0].getResults();\r\n                    }\r\n                } catch (final Throwable e) {\r\n                    Network.log.info(\"SEARCH failed (solr), localpeer (\" + e.getMessage() + \")\", e);\r\n                    return -1;\r\n                }\r\n            } else {\r\n                try {\r\n                    final boolean myseed = target == event.peers.mySeed();\r\n                    if (!myseed && !target.getFlagSolrAvailable()) { // skip if peer.dna has flag that last try resulted in error\r\n                        Network.log.info(\"SEARCH skip (solr), remote Solr interface not accessible, peer=\" + target.getName());\r\n                        return -1;\r\n                    }\r\n                    final String address = myseed ? \"localhost:\" + target.getPort() : target.getPublicAddress(ip);\r\n                    final int solrtimeout = Switchboard.getSwitchboard().getConfigInt(SwitchboardConstants.FEDERATED_SERVICE_SOLR_INDEXING_TIMEOUT, 6000);\r\n                    Thread remoteRequest = new Thread() {\r\n                        @Override\r\n                        public void run() {\r\n                            this.setName(\"Protocol.solrQuery(\" + solrQuery.getQuery() + \" to \" + target.hash + \")\");\r\n                            try {\r\n                                RemoteInstance instance = new RemoteInstance(\"http://\" + address, null, \"solr\", solrtimeout); // this is a 'patch configuration' which considers 'solr' as default collection\r\n                                try {\r\n                                    SolrConnector solrConnector = new RemoteSolrConnector(instance, myseed ? true : target.getVersion() >= 1.63, \"solr\");\r\n                                    if (!solrConnector.isClosed()) try {\r\n                                        rsp[0] = solrConnector.getResponseByParams(solrQuery);\r\n                                        docList[0] = rsp[0].getResults();\r\n                                    } catch (Throwable e) {} finally {\r\n                                        solrConnector.close();\r\n                                    }\r\n                                } catch (Throwable ee) {} finally {\r\n                                    instance.close();\r\n                                }\r\n                            } catch (Throwable eee) {}\r\n                        }\r\n                    };\r\n                    remoteRequest.start();\r\n                    remoteRequest.join(solrtimeout); // just wait until timeout appears\r\n                    if (remoteRequest.isAlive()) {\r\n                        try {remoteRequest.interrupt();} catch (Throwable e) {}\r\n                        Network.log.info(\"SEARCH failed (solr), remote Peer: \" + target.getName() + \"/\" + target.getPublicAddress(ip) + \" does not answer (time-out)\");\r\n                        target.setFlagSolrAvailable(false || myseed);\r\n                        return -1; // give up, leave remoteRequest abandoned.\r\n                    }\r\n                    // no need to close this here because that sends a commit to remote solr which is not wanted here\r\n                } catch (final Throwable e) {\r\n                    Network.log.info(\"SEARCH failed (solr), remote Peer: \" + target.getName() + \"/\" + target.getPublicAddress(ip) + \" (\" + e.getMessage() + \")\");\r\n                    target.setFlagSolrAvailable(false || localsearch);\r\n                    return -1;\r\n                }\r\n            }\r\n\r\n            if (rsp[0] == null || docList[0] == null) {\r\n                Network.log.info(\"SEARCH failed (solr), remote Peer: \" + target.getName() + \"/\" + target.getPublicAddress(ip) + \" returned null\");\r\n                target.setFlagSolrAvailable(false || localsearch);\r\n                return -1;\r\n            }\r\n            \r\n            // evaluate facets\r\n            for (String field: event.query.facetfields) {\r\n                FacetField facet = rsp[0].getFacetField(field);\r\n                ReversibleScoreMap<String> result = new ClusteredScoreMap<String>(UTF8.insensitiveUTF8Comparator);\r\n                List<Count> values = facet == null ? null : facet.getValues();\r\n                if (values == null) continue;\r\n                for (Count ff: values) {\r\n                    int c = (int) ff.getCount();\r\n                    if (c == 0) continue;\r\n                    if (ff.getName().length() == 0) continue; // facet entry without text is not useful\r\n                    result.set(ff.getName(), c);\r\n                }\r\n                if (result.size() > 0) facets.put(field, result);\r\n            }\r\n            \r\n            // evaluate snippets\r\n            Map<String, Map<String, List<String>>> rawsnippets = rsp[0].getHighlighting(); // a map from the urlhash to a map with key=field and value = list of snippets\r\n            if (rawsnippets != null) {\r\n                nextsnippet: for (Map.Entry<String, Map<String, List<String>>> re: rawsnippets.entrySet()) {\r\n                    Map<String, List<String>> rs = re.getValue();\r\n                    for (CollectionSchema field: snippetFields) {\r\n                        if (rs.containsKey(field.getSolrFieldName())) {\r\n                            List<String> s = rs.get(field.getSolrFieldName());\r\n                            if (s.size() > 0) {\r\n                                LinkedHashSet<String> ls = new LinkedHashSet<String>();\r\n                                ls.addAll(s);\r\n                                snippets.put(re.getKey(), ls);\r\n                                continue nextsnippet;\r\n                            }\r\n                        }\r\n                    }\r\n                    // no snippet found :( --we don't assign a value here by default; that can be done as an evaluation outside this method\r\n                }\r\n            }\r\n            rsp[0] = null;\r\n        }\r\n        \r\n        // evaluate result\r\n        if (docList == null || docList[0].size() == 0) {\r\n            Network.log.info(\"SEARCH (solr), returned 0 out of 0 documents from \" + (target == null ? \"shard\" : (\"peer \" + target.hash + \":\" + target.getName())) + \" query = \" + solrQuery.toString()) ;\r\n            return 0;\r\n        }\r\n        \r\n        List<URIMetadataNode> container = new ArrayList<URIMetadataNode>();\r\n        Network.log.info(\"SEARCH (solr), returned \" + docList[0].size() + \" out of \" + docList[0].getNumFound() + \" documents and \" + facets.size() + \" facets \" + facets.keySet().toString() + \" from \" + (target == null ? \"shard\" : (\"peer \" + target.hash + \":\" + target.getName())));\r\n        int term = count;\r\n        Collection<SolrInputDocument> docs;\r\n        if (event.addResultsToLocalIndex) { // only needed to store remote results\r\n            docs = new ArrayList<SolrInputDocument>(docList[0].size());\r\n        } else docs = null;\r\n        for (final SolrDocument doc: docList[0]) {\r\n            //System.out.println(\"***DEBUG*** \" + ((String) doc.getFieldValue(\"sku\")));\r\n            if ( term-- <= 0 ) {\r\n                break; // do not process more that requested (in case that evil peers fill us up with rubbish)\r\n            }\r\n            // get one single search result\r\n            if ( doc == null ) {\r\n                continue;\r\n            }\r\n            URIMetadataNode urlEntry;\r\n            try {\r\n                urlEntry = new URIMetadataNode(doc);\r\n            } catch (MalformedURLException ex) {\r\n                continue;\r\n            }\r\n\r\n            if ( blacklist.isListed(BlacklistType.SEARCH, urlEntry.url()) ) {\r\n                if ( Network.log.isInfo() ) {\r\n                    if (localsearch) {\r\n                        Network.log.info(\"local search (solr): filtered blacklisted url \" + urlEntry.url().toNormalform(true));\r\n                    } else {\r\n                        Network.log.info(\"remote search (solr): filtered blacklisted url \" + urlEntry.url().toNormalform(true) + \" from \" + (target == null ? \"shard\" : (\"peer \" + target.hash + \":\" + target.getName())));\r\n                    }\r\n                }\r\n                continue; // block with blacklist\r\n            }\r\n\r\n            final String urlRejectReason = Switchboard.getSwitchboard().crawlStacker.urlInAcceptedDomain(urlEntry.url());\r\n            if ( urlRejectReason != null ) {\r\n                if ( Network.log.isInfo() ) {\r\n                    if (localsearch) {\r\n                        Network.log.info(\"local search (solr): rejected url '\" + urlEntry.url().toNormalform(true) + \"' (\" + urlRejectReason + \")\");\r\n                    } else {\r\n                        Network.log.info(\"remote search (solr): rejected url '\" + urlEntry.url().toNormalform(true) + \"' (\" + urlRejectReason + \") from peer \" + target.getName());\r\n                    }\r\n                }\r\n                continue; // reject url outside of our domain\r\n            }\r\n\r\n            // passed all checks, store url\r\n            if (!localsearch) {\r\n                \r\n                // put the remote documents to the local index. We must convert the solr document to a solr input document:\r\n                if (event.addResultsToLocalIndex) {\r\n                    final SolrInputDocument sid = event.query.getSegment().fulltext().getDefaultConfiguration().toSolrInputDocument(doc);\r\n\r\n                    // the input document stays untouched because it contains top-level cloned objects\r\n                    docs.add(sid);\r\n                    // will be stored to index, and is a full solr document, can be added to firstseen\r\n                    event.query.getSegment().setFirstSeenTime(urlEntry.hash(), Math.min(urlEntry.moddate().getTime(), System.currentTimeMillis()));\r\n                }\r\n\r\n                // after this conversion we can remove the largest and not used field text_t and synonyms_sxt from the document\r\n                // because that goes into a search cache and would take a lot of memory in the search cache\r\n                //doc.removeFields(CollectionSchema.text_t.getSolrFieldName());\r\n                doc.removeFields(CollectionSchema.synonyms_sxt.getSolrFieldName());\r\n                \r\n                ResultURLs.stack(\r\n                    ASCII.String(urlEntry.url().hash()),\r\n                    urlEntry.url().getHost(),\r\n                    event.peers.mySeed().hash.getBytes(),\r\n                    UTF8.getBytes(target.hash),\r\n                    EventOrigin.QUERIES);\r\n            }\r\n\r\n            // add the url entry to the word indexes\r\n            container.add(urlEntry);\r\n        }\r\n        final int dls = docList[0].size();\r\n        final int numFound = (int) docList[0].getNumFound();\r\n        docList[0].clear();\r\n        docList[0] = null;\r\n        if (localsearch) {\r\n            event.addNodes(container, facets, snippets, true, \"localpeer\", numFound);\r\n            event.addFinalize();\r\n            event.addExpectedRemoteReferences(-count);\r\n            Network.log.info(\"local search (solr): localpeer sent \" + container.size() + \"/\" + numFound + \" references\");\r\n        } else {\r\n            if (event.addResultsToLocalIndex) {\r\n                for (SolrInputDocument doc: docs) {\r\n                    event.query.getSegment().putDocument(doc);\r\n                }\r\n                docs.clear(); docs = null;\r\n            }\r\n            event.addNodes(container, facets, snippets, false, target.getName() + \"/\" + target.hash, numFound);\r\n            event.addFinalize();\r\n            event.addExpectedRemoteReferences(-count);\r\n            Network.log.info(\"remote search (solr): peer \" + target.getName() + \" sent \" + (container.size() == 0 ? 0 : container.size()) + \"/\" + numFound + \" references\");\r\n        }\r\n        return dls;\r\n    }","commit_id":"87f358058e527e05101837b8345937117df3911e","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"/**\r\n     * stacks a crawl item. The position can also be remote\r\n     * @param entry\r\n     * @return null if successful, a reason string if not successful\r\n     */\r\n    public String stackCrawl(final Request entry) {\r\n        //this.log.logFinest(\"stackCrawl: nexturlString='\" + nexturlString + \"'\");\r\n\r\n        byte[] handle = UTF8.getBytes(entry.profileHandle());\r\n        final CrawlProfile profile = this.crawler.get(handle);\r\n        String error;\r\n        if (profile == null) {\r\n            error = \"LOST STACKER PROFILE HANDLE '\" + entry.profileHandle() + \"' for URL \" + entry.url();\r\n            CrawlStacker.log.warn(error);\r\n            return error;\r\n        }\r\n\r\n        error = checkAcceptanceChangeable(entry.url(), profile, entry.depth());\r\n        if (error != null) return error;\r\n        error = checkAcceptanceInitially(entry.url(), profile);\r\n        if (error != null) return error;\r\n\r\n        // store information\r\n        final boolean local = Base64Order.enhancedCoder.equal(entry.initiator(), UTF8.getBytes(this.peers.mySeed().hash));\r\n        final boolean proxy = (entry.initiator() == null || entry.initiator().length == 0 || ASCII.String(entry.initiator()).equals(\"------------\")) && profile.handle().equals(this.crawler.defaultProxyProfile.handle());\r\n        final boolean remote = profile.handle().equals(this.crawler.defaultRemoteProfile.handle());\r\n        final boolean global =\r\n            (profile.remoteIndexing()) /* granted */ &&\r\n            (entry.depth() == profile.depth()) /* leaf node */ &&\r\n            //(initiatorHash.equals(yacyCore.seedDB.mySeed.hash)) /* not proxy */ &&\r\n            (\r\n                    (this.peers.mySeed().isSenior()) ||\r\n                    (this.peers.mySeed().isPrincipal())\r\n            ) /* qualified */;\r\n\r\n        if (!local && !global && !remote && !proxy) {\r\n            error = \"URL '\" + entry.url().toString() + \"' cannot be crawled. initiator = \" + ((entry.initiator() == null) ? \"\" : ASCII.String(entry.initiator())) + \", profile.handle = \" + profile.handle();\r\n            CrawlStacker.log.severe(error);\r\n            return error;\r\n        }\r\n\r\n        // check availability of parser and maxfilesize\r\n        String warning = null;\r\n        ContentDomain contentDomain = entry.url().getContentDomainFromExt();\r\n        if (contentDomain == ContentDomain.APP  ||\r\n            (contentDomain == ContentDomain.IMAGE && TextParser.supportsExtension(entry.url()) != null) ||\r\n            contentDomain == ContentDomain.AUDIO  ||\r\n            contentDomain == ContentDomain.VIDEO ||\r\n            contentDomain == ContentDomain.CTRL) {\r\n            warning = this.nextQueue.noticeURL.push(NoticedURL.StackType.NOLOAD, entry, profile, this.robots);\r\n            //if (warning != null && this.log.isFine()) this.log.logFine(\"CrawlStacker.stackCrawl of URL \" + entry.url().toNormalform(true, false) + \" - not pushed: \" + warning);\r\n            return null;\r\n        }\r\n\r\n        if (global) {\r\n            // it may be possible that global == true and local == true, so do not check an error case against it\r\n            if (proxy) CrawlStacker.log.warn(\"URL '\" + entry.url().toString() + \"' has conflicting initiator properties: global = true, proxy = true, initiator = proxy\" + \", profile.handle = \" + profile.handle());\r\n            if (remote) CrawlStacker.log.warn(\"URL '\" + entry.url().toString() + \"' has conflicting initiator properties: global = true, remote = true, initiator = \" + ASCII.String(entry.initiator()) + \", profile.handle = \" + profile.handle());\r\n            warning = this.nextQueue.noticeURL.push(NoticedURL.StackType.GLOBAL, entry, profile, this.robots);\r\n        } else if (local) {\r\n            if (proxy) CrawlStacker.log.warn(\"URL '\" + entry.url().toString() + \"' has conflicting initiator properties: local = true, proxy = true, initiator = proxy\" + \", profile.handle = \" + profile.handle());\r\n            if (remote) CrawlStacker.log.warn(\"URL '\" + entry.url().toString() + \"' has conflicting initiator properties: local = true, remote = true, initiator = \" + ASCII.String(entry.initiator()) + \", profile.handle = \" + profile.handle());\r\n            warning = this.nextQueue.noticeURL.push(NoticedURL.StackType.LOCAL, entry, profile, this.robots);\r\n        } else if (proxy) {\r\n            if (remote) CrawlStacker.log.warn(\"URL '\" + entry.url().toString() + \"' has conflicting initiator properties: proxy = true, remote = true, initiator = \" + ASCII.String(entry.initiator()) + \", profile.handle = \" + profile.handle());\r\n            warning = this.nextQueue.noticeURL.push(NoticedURL.StackType.LOCAL, entry, profile, this.robots);\r\n        } else if (remote) {\r\n            warning = this.nextQueue.noticeURL.push(NoticedURL.StackType.REMOTE, entry, profile, this.robots);\r\n        }\r\n        if (warning != null && CrawlStacker.log.isFine()) CrawlStacker.log.fine(\"CrawlStacker.stackCrawl of URL \" + entry.url().toNormalform(true) + \" - not pushed: \" + warning);\r\n\r\n        return null;\r\n    }","id":63616,"modified_method":"/**\r\n     * stacks a crawl item. The position can also be remote\r\n     * @param entry\r\n     * @return null if successful, a reason string if not successful\r\n     */\r\n    public String stackCrawl(final Request entry) {\r\n        //this.log.logFinest(\"stackCrawl: nexturlString='\" + nexturlString + \"'\");\r\n\r\n        byte[] handle = UTF8.getBytes(entry.profileHandle());\r\n        final CrawlProfile profile = this.crawler.get(handle);\r\n        String error;\r\n        if (profile == null) {\r\n            error = \"LOST STACKER PROFILE HANDLE '\" + entry.profileHandle() + \"' for URL \" + entry.url().toNormalform(true);\r\n            CrawlStacker.log.warn(error);\r\n            return error;\r\n        }\r\n\r\n        error = checkAcceptanceChangeable(entry.url(), profile, entry.depth());\r\n        if (error != null) return error;\r\n        error = checkAcceptanceInitially(entry.url(), profile);\r\n        if (error != null) return error;\r\n\r\n        // store information\r\n        final boolean local = Base64Order.enhancedCoder.equal(entry.initiator(), UTF8.getBytes(this.peers.mySeed().hash));\r\n        final boolean proxy = (entry.initiator() == null || entry.initiator().length == 0 || ASCII.String(entry.initiator()).equals(\"------------\")) && profile.handle().equals(this.crawler.defaultProxyProfile.handle());\r\n        final boolean remote = profile.handle().equals(this.crawler.defaultRemoteProfile.handle());\r\n        final boolean global =\r\n            (profile.remoteIndexing()) /* granted */ &&\r\n            (entry.depth() == profile.depth()) /* leaf node */ &&\r\n            //(initiatorHash.equals(yacyCore.seedDB.mySeed.hash)) /* not proxy */ &&\r\n            (\r\n                    (this.peers.mySeed().isSenior()) ||\r\n                    (this.peers.mySeed().isPrincipal())\r\n            ) /* qualified */;\r\n\r\n        if (!local && !global && !remote && !proxy) {\r\n            error = \"URL '\" + entry.url().toString() + \"' cannot be crawled. initiator = \" + ((entry.initiator() == null) ? \"\" : ASCII.String(entry.initiator())) + \", profile.handle = \" + profile.handle();\r\n            CrawlStacker.log.severe(error);\r\n            return error;\r\n        }\r\n\r\n        // check availability of parser and maxfilesize\r\n        String warning = null;\r\n        ContentDomain contentDomain = entry.url().getContentDomainFromExt();\r\n        if (contentDomain == ContentDomain.APP  ||\r\n            (contentDomain == ContentDomain.IMAGE && TextParser.supportsExtension(entry.url()) != null) ||\r\n            contentDomain == ContentDomain.AUDIO  ||\r\n            contentDomain == ContentDomain.VIDEO ||\r\n            contentDomain == ContentDomain.CTRL) {\r\n            warning = this.nextQueue.noticeURL.push(NoticedURL.StackType.NOLOAD, entry, profile, this.robots);\r\n            //if (warning != null && this.log.isFine()) this.log.logFine(\"CrawlStacker.stackCrawl of URL \" + entry.url().toNormalform(true, false) + \" - not pushed: \" + warning);\r\n            return null;\r\n        }\r\n\r\n        if (global) {\r\n            // it may be possible that global == true and local == true, so do not check an error case against it\r\n            if (proxy) CrawlStacker.log.warn(\"URL '\" + entry.url().toString() + \"' has conflicting initiator properties: global = true, proxy = true, initiator = proxy\" + \", profile.handle = \" + profile.handle());\r\n            if (remote) CrawlStacker.log.warn(\"URL '\" + entry.url().toString() + \"' has conflicting initiator properties: global = true, remote = true, initiator = \" + ASCII.String(entry.initiator()) + \", profile.handle = \" + profile.handle());\r\n            warning = this.nextQueue.noticeURL.push(NoticedURL.StackType.GLOBAL, entry, profile, this.robots);\r\n        } else if (local) {\r\n            if (proxy) CrawlStacker.log.warn(\"URL '\" + entry.url().toString() + \"' has conflicting initiator properties: local = true, proxy = true, initiator = proxy\" + \", profile.handle = \" + profile.handle());\r\n            if (remote) CrawlStacker.log.warn(\"URL '\" + entry.url().toString() + \"' has conflicting initiator properties: local = true, remote = true, initiator = \" + ASCII.String(entry.initiator()) + \", profile.handle = \" + profile.handle());\r\n            warning = this.nextQueue.noticeURL.push(NoticedURL.StackType.LOCAL, entry, profile, this.robots);\r\n        } else if (proxy) {\r\n            if (remote) CrawlStacker.log.warn(\"URL '\" + entry.url().toString() + \"' has conflicting initiator properties: proxy = true, remote = true, initiator = \" + ASCII.String(entry.initiator()) + \", profile.handle = \" + profile.handle());\r\n            warning = this.nextQueue.noticeURL.push(NoticedURL.StackType.LOCAL, entry, profile, this.robots);\r\n        } else if (remote) {\r\n            warning = this.nextQueue.noticeURL.push(NoticedURL.StackType.REMOTE, entry, profile, this.robots);\r\n        }\r\n        if (warning != null && CrawlStacker.log.isFine()) CrawlStacker.log.fine(\"CrawlStacker.stackCrawl of URL \" + entry.url().toNormalform(true) + \" - not pushed: \" + warning);\r\n\r\n        return null;\r\n    }","commit_id":"1609763be543ab4aa2c06a7bf4eb66fb458be550","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"private Response getFile(final FTPClient ftpClient, final Request request, final boolean acceptOnlyParseable) throws IOException {\r\n        // determine the mimetype of the resource\r\n        final DigestURL url = request.url();\r\n        final String mime = TextParser.mimeOf(url);\r\n        final String path = getPath(url);\r\n\r\n        // determine the file date\r\n        final Date fileDate = ftpClient.entryDate(path);\r\n\r\n        // create response header\r\n        final RequestHeader requestHeader = new RequestHeader();\r\n        if (request.referrerhash() != null) {\r\n            final DigestURL refurl = this.sb.getURL(request.referrerhash());\r\n            if (refurl != null) requestHeader.put(RequestHeader.REFERER, refurl.toNormalform(true));\r\n        }\r\n        final ResponseHeader responseHeader = new ResponseHeader(200);\r\n        responseHeader.put(HeaderFramework.LAST_MODIFIED, HeaderFramework.formatRFC1123(fileDate));\r\n        responseHeader.put(HeaderFramework.CONTENT_TYPE, mime);\r\n\r\n        // if the mimetype and file extension is supported we start to download the file\r\n        final long size = ftpClient.fileSize(path);\r\n        responseHeader.put(HeaderFramework.CONTENT_LENGTH, String.valueOf(size));\r\n        String parserError = null;\r\n        if ((acceptOnlyParseable && (parserError = TextParser.supports(url, mime)) != null) ||\r\n            (size > this.maxFileSize && this.maxFileSize >= 0)) {\r\n            // we know that we cannot process that file before loading\r\n            // only the metadata is returned\r\n\r\n            if (parserError != null) {\r\n                this.log.info(\"No parser available in FTP crawler: '\" + parserError + \"' for URL \" + request.url().toString() + \": parsing only metadata\");\r\n            } else {\r\n                this.log.info(\"Too big file in FTP crawler with size = \" + size + \" Bytes for URL \" + request.url().toString() + \": parsing only metadata\");\r\n            }\r\n\r\n            // create response with metadata only\r\n            responseHeader.put(HeaderFramework.CONTENT_TYPE, \"text/plain\");\r\n            final CrawlProfile profile = this.sb.crawler.get(ASCII.getBytes(request.profileHandle()));\r\n            final Response response = new Response(\r\n                    request,\r\n                    requestHeader,\r\n                    responseHeader,\r\n                    profile,\r\n                    false,\r\n                    null);\r\n            return response;\r\n        }\r\n\r\n        // download the remote file\r\n        final byte[] b = ftpClient.get(path);\r\n\r\n        // create a response\r\n        final CrawlProfile profile = this.sb.crawler.get(ASCII.getBytes(request.profileHandle()));\r\n        final Response response = new Response(\r\n                request,\r\n                requestHeader,\r\n                responseHeader,\r\n                profile,\r\n                false,\r\n                b);\r\n        return response;\r\n    }","id":63617,"modified_method":"private Response getFile(final FTPClient ftpClient, final Request request, final boolean acceptOnlyParseable) throws IOException {\r\n        // determine the mimetype of the resource\r\n        final DigestURL url = request.url();\r\n        final String mime = TextParser.mimeOf(url);\r\n        final String path = getPath(url);\r\n\r\n        // determine the file date\r\n        final Date fileDate = ftpClient.entryDate(path);\r\n\r\n        // create response header\r\n        final RequestHeader requestHeader = new RequestHeader();\r\n        if (request.referrerhash() != null) {\r\n            final DigestURL refurl = this.sb.getURL(request.referrerhash());\r\n            if (refurl != null) requestHeader.put(RequestHeader.REFERER, refurl.toNormalform(true));\r\n        }\r\n        final ResponseHeader responseHeader = new ResponseHeader(200);\r\n        responseHeader.put(HeaderFramework.LAST_MODIFIED, HeaderFramework.formatRFC1123(fileDate));\r\n        responseHeader.put(HeaderFramework.CONTENT_TYPE, mime);\r\n\r\n        // if the mimetype and file extension is supported we start to download the file\r\n        final long size = ftpClient.fileSize(path);\r\n        responseHeader.put(HeaderFramework.CONTENT_LENGTH, String.valueOf(size));\r\n        String parserError = null;\r\n        if ((acceptOnlyParseable && (parserError = TextParser.supports(url, mime)) != null) ||\r\n            (size > this.maxFileSize && this.maxFileSize >= 0)) {\r\n            // we know that we cannot process that file before loading\r\n            // only the metadata is returned\r\n\r\n            if (parserError != null) {\r\n                this.log.info(\"No parser available in FTP crawler: '\" + parserError + \"' for URL \" + request.url().toNormalform(true) + \": parsing only metadata\");\r\n            } else {\r\n                this.log.info(\"Too big file in FTP crawler with size = \" + size + \" Bytes for URL \" + request.url().toNormalform(true) + \": parsing only metadata\");\r\n            }\r\n\r\n            // create response with metadata only\r\n            responseHeader.put(HeaderFramework.CONTENT_TYPE, \"text/plain\");\r\n            final CrawlProfile profile = this.sb.crawler.get(ASCII.getBytes(request.profileHandle()));\r\n            final Response response = new Response(\r\n                    request,\r\n                    requestHeader,\r\n                    responseHeader,\r\n                    profile,\r\n                    false,\r\n                    null);\r\n            return response;\r\n        }\r\n\r\n        // download the remote file\r\n        final byte[] b = ftpClient.get(path);\r\n\r\n        // create a response\r\n        final CrawlProfile profile = this.sb.crawler.get(ASCII.getBytes(request.profileHandle()));\r\n        final Response response = new Response(\r\n                request,\r\n                requestHeader,\r\n                responseHeader,\r\n                profile,\r\n                false,\r\n                b);\r\n        return response;\r\n    }","commit_id":"ebd0be2cea2bf06a5bafa3e521d7b797f2df78c1","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"/**\r\n     * load a resource from the web, from ftp, from smb or a file\r\n     * @param request the request essentials\r\n     * @param cacheStratgy strategy according to NOCACHE, IFFRESH, IFEXIST, CACHEONLY\r\n     * @return the loaded entity in a Response object\r\n     * @throws IOException\r\n     */\r\n    private Response loadInternal(final Request request, CacheStrategy cacheStrategy, final int maxFileSize, final BlacklistType blacklistType, ClientIdentification.Agent agent) throws IOException {\r\n        // get the protocol of the next URL\r\n        final DigestURL url = request.url();\r\n        if (url.isFile() || url.isSMB()) cacheStrategy = CacheStrategy.NOCACHE; // load just from the file system\r\n        final String protocol = url.getProtocol();\r\n        final String host = url.getHost();\r\n        final CrawlProfile crawlProfile = request.profileHandle() == null ? null : this.sb.crawler.get(UTF8.getBytes(request.profileHandle()));\r\n        \r\n        // check if url is in blacklist\n        if (blacklistType != null && host != null && Switchboard.urlBlacklist.isListed(blacklistType, host.toLowerCase(), url.getFile())) {\n            this.sb.crawlQueues.errorURL.push(request.url(), request.depth(), crawlProfile, FailCategory.FINAL_LOAD_CONTEXT, \"url in blacklist\", -1);\r\n            throw new IOException(\"DISPATCHER Rejecting URL '\" + request.url().toString() + \"'. URL is in blacklist.$\");\r\n        }\r\n\r\n        // check if we have the page in the cache\r\n        if (cacheStrategy != CacheStrategy.NOCACHE && crawlProfile != null) {\r\n            // we have passed a first test if caching is allowed\r\n            // now see if there is a cache entry\r\n\r\n            final ResponseHeader cachedResponse = (url.isLocal()) ? null : Cache.getResponseHeader(url.hash());\r\n            if (cachedResponse != null && Cache.hasContent(url.hash())) {\r\n                // yes we have the content\r\n\r\n                // create request header values and a response object because we need that\r\n                // in case that we want to return the cached content in the next step\r\n                final RequestHeader requestHeader = new RequestHeader();\r\n                requestHeader.put(HeaderFramework.USER_AGENT, agent.userAgent);\r\n                DigestURL refererURL = null;\r\n                if (request.referrerhash() != null) refererURL = this.sb.getURL(request.referrerhash());\r\n                if (refererURL != null) requestHeader.put(RequestHeader.REFERER, refererURL.toNormalform(true));\r\n                final Response response = new Response(\r\n                        request,\r\n                        requestHeader,\r\n                        cachedResponse,\r\n                        crawlProfile,\r\n                        true,\r\n                        null);\r\n\r\n                // check which caching strategy shall be used\r\n                if (cacheStrategy == CacheStrategy.IFEXIST || cacheStrategy == CacheStrategy.CACHEONLY) {\r\n                    // well, just take the cache and don't care about freshness of the content\r\n                    final byte[] content = Cache.getContent(url.hash());\r\n                    if (content != null) {\r\n                        LoaderDispatcher.log.info(\"cache hit/useall for: \" + url.toNormalform(true));\r\n                        response.setContent(content);\r\n                        return response;\r\n                    }\r\n                }\r\n\r\n                // now the cacheStrategy must be CACHE_STRATEGY_IFFRESH, that means we should do a proxy freshness test\r\n                //assert cacheStrategy == CacheStrategy.IFFRESH : \"cacheStrategy = \" + cacheStrategy;\r\n                if (response.isFreshForProxy()) {\r\n                    final byte[] content = Cache.getContent(url.hash());\r\n                    if (content != null) {\r\n                        LoaderDispatcher.log.info(\"cache hit/fresh for: \" + url.toNormalform(true));\r\n                        response.setContent(content);\r\n                        return response;\r\n                    }\r\n                }\r\n                LoaderDispatcher.log.info(\"cache hit/stale for: \" + url.toNormalform(true));\r\n            } else if (cachedResponse != null) {\r\n                LoaderDispatcher.log.warn(\"HTCACHE contained response header, but not content for url \" + url.toNormalform(true));\r\n            }\r\n        }\r\n\r\n        // check case where we want results from the cache exclusively, and never from the Internet (offline mode)\r\n        if (cacheStrategy == CacheStrategy.CACHEONLY) {\r\n            // we had a chance to get the content from the cache .. its over. We don't have it.\r\n            throw new IOException(\"cache only strategy\");\r\n        }\r\n\r\n        // now forget about the cache, nothing there. Try to load the content from the Internet\r\n\r\n        // check access time: this is a double-check (we checked possibly already in the balancer)\r\n        // to make sure that we don't DoS the target by mistake\r\n        if (!url.isLocal()) {\r\n            final Long lastAccess = accessTime.get(host);\r\n            long wait = 0;\r\n            if (lastAccess != null) wait = Math.max(0, agent.minimumDelta + lastAccess.longValue() - System.currentTimeMillis());\r\n            if (wait > 0) {\r\n                // force a sleep here. Instead just sleep we clean up the accessTime map\r\n                final long untilTime = System.currentTimeMillis() + wait;\r\n                cleanupAccessTimeTable(untilTime);\r\n                if (System.currentTimeMillis() < untilTime) {\r\n                    long frcdslp = untilTime - System.currentTimeMillis();\r\n                    LoaderDispatcher.log.info(\"Forcing sleep of \" + frcdslp + \" ms for host \" + host);\r\n                    try {Thread.sleep(frcdslp);} catch (final InterruptedException ee) {}\r\n                }\r\n            }\r\n        }\r\n\r\n        // now it's for sure that we will access the target. Remember the access time\r\n        if (host != null) {\r\n            if (accessTime.size() > accessTimeMaxsize) accessTime.clear(); // prevent a memory leak here\r\n            accessTime.put(host, System.currentTimeMillis());\r\n        }\r\n\r\n        // load resource from the internet\r\n        Response response = null;\r\n        if (protocol.equals(\"http\") || protocol.equals(\"https\")) {\r\n            response = this.httpLoader.load(request, crawlProfile, maxFileSize, blacklistType, agent);\r\n        } else if (protocol.equals(\"ftp\")) {\r\n            response = this.ftpLoader.load(request, true);\r\n        } else if (protocol.equals(\"smb\")) {\r\n            response = this.smbLoader.load(request, true);\r\n        } else if (protocol.equals(\"file\")) {\r\n            response = this.fileLoader.load(request, true);\r\n        } else {\r\n            throw new IOException(\"Unsupported protocol '\" + protocol + \"' in url \" + url);\r\n        }\r\n        if (response == null) {\r\n            throw new IOException(\"no response (NULL) for url \" + url);\r\n        }\r\n        if (response.getContent() == null) {\r\n            throw new IOException(\"empty response (code \" + response.getStatus() + \") for url \" + url);\r\n        }\r\n\r\n        // we got something. Now check if we want to store that to the cache\r\n        // first check looks if we want to store the content to the cache\r\n        if (crawlProfile == null || !crawlProfile.storeHTCache()) {\r\n            // no caching wanted. Thats ok, do not write any message\r\n            return response;\r\n        }\r\n        // second check tells us if the protocol tells us something about caching\r\n        final String storeError = response.shallStoreCacheForCrawler();\r\n        if (storeError == null) {\r\n            try {\r\n                Cache.store(url, response.getResponseHeader(), response.getContent());\r\n            } catch (final IOException e) {\r\n                LoaderDispatcher.log.warn(\"cannot write \" + response.url() + \" to Cache (3): \" + e.getMessage(), e);\r\n            }\r\n        } else {\r\n            LoaderDispatcher.log.warn(\"cannot write \" + response.url() + \" to Cache (4): \" + storeError);\r\n        }\r\n        return response;\r\n    }","id":63618,"modified_method":"/**\r\n     * load a resource from the web, from ftp, from smb or a file\r\n     * @param request the request essentials\r\n     * @param cacheStratgy strategy according to NOCACHE, IFFRESH, IFEXIST, CACHEONLY\r\n     * @return the loaded entity in a Response object\r\n     * @throws IOException\r\n     */\r\n    private Response loadInternal(final Request request, CacheStrategy cacheStrategy, final int maxFileSize, final BlacklistType blacklistType, ClientIdentification.Agent agent) throws IOException {\r\n        // get the protocol of the next URL\r\n        final DigestURL url = request.url();\r\n        if (url.isFile() || url.isSMB()) cacheStrategy = CacheStrategy.NOCACHE; // load just from the file system\r\n        final String protocol = url.getProtocol();\r\n        final String host = url.getHost();\r\n        final CrawlProfile crawlProfile = request.profileHandle() == null ? null : this.sb.crawler.get(UTF8.getBytes(request.profileHandle()));\r\n        \r\n        // check if url is in blacklist\n        if (blacklistType != null && host != null && Switchboard.urlBlacklist.isListed(blacklistType, host.toLowerCase(), url.getFile())) {\n            this.sb.crawlQueues.errorURL.push(request.url(), request.depth(), crawlProfile, FailCategory.FINAL_LOAD_CONTEXT, \"url in blacklist\", -1);\r\n            throw new IOException(\"DISPATCHER Rejecting URL '\" + request.url().toString() + \"'. URL is in blacklist.$\");\r\n        }\r\n\r\n        // check if we have the page in the cache\r\n        if (cacheStrategy != CacheStrategy.NOCACHE && crawlProfile != null) {\r\n            // we have passed a first test if caching is allowed\r\n            // now see if there is a cache entry\r\n\r\n            final ResponseHeader cachedResponse = (url.isLocal()) ? null : Cache.getResponseHeader(url.hash());\r\n            if (cachedResponse != null && Cache.hasContent(url.hash())) {\r\n                // yes we have the content\r\n\r\n                // create request header values and a response object because we need that\r\n                // in case that we want to return the cached content in the next step\r\n                final RequestHeader requestHeader = new RequestHeader();\r\n                requestHeader.put(HeaderFramework.USER_AGENT, agent.userAgent);\r\n                DigestURL refererURL = null;\r\n                if (request.referrerhash() != null) refererURL = this.sb.getURL(request.referrerhash());\r\n                if (refererURL != null) requestHeader.put(RequestHeader.REFERER, refererURL.toNormalform(true));\r\n                final Response response = new Response(\r\n                        request,\r\n                        requestHeader,\r\n                        cachedResponse,\r\n                        crawlProfile,\r\n                        true,\r\n                        null);\r\n\r\n                // check which caching strategy shall be used\r\n                if (cacheStrategy == CacheStrategy.IFEXIST || cacheStrategy == CacheStrategy.CACHEONLY) {\r\n                    // well, just take the cache and don't care about freshness of the content\r\n                    final byte[] content = Cache.getContent(url.hash());\r\n                    if (content != null) {\r\n                        LoaderDispatcher.log.info(\"cache hit/useall for: \" + url.toNormalform(true));\r\n                        response.setContent(content);\r\n                        return response;\r\n                    }\r\n                }\r\n\r\n                // now the cacheStrategy must be CACHE_STRATEGY_IFFRESH, that means we should do a proxy freshness test\r\n                //assert cacheStrategy == CacheStrategy.IFFRESH : \"cacheStrategy = \" + cacheStrategy;\r\n                if (response.isFreshForProxy()) {\r\n                    final byte[] content = Cache.getContent(url.hash());\r\n                    if (content != null) {\r\n                        LoaderDispatcher.log.info(\"cache hit/fresh for: \" + url.toNormalform(true));\r\n                        response.setContent(content);\r\n                        return response;\r\n                    }\r\n                }\r\n                LoaderDispatcher.log.info(\"cache hit/stale for: \" + url.toNormalform(true));\r\n            } else if (cachedResponse != null) {\r\n                LoaderDispatcher.log.warn(\"HTCACHE contained response header, but not content for url \" + url.toNormalform(true));\r\n            }\r\n        }\r\n\r\n        // check case where we want results from the cache exclusively, and never from the Internet (offline mode)\r\n        if (cacheStrategy == CacheStrategy.CACHEONLY) {\r\n            // we had a chance to get the content from the cache .. its over. We don't have it.\r\n            throw new IOException(\"cache only strategy\");\r\n        }\r\n\r\n        // now forget about the cache, nothing there. Try to load the content from the Internet\r\n\r\n        // check access time: this is a double-check (we checked possibly already in the balancer)\r\n        // to make sure that we don't DoS the target by mistake\r\n        if (!url.isLocal()) {\r\n            final Long lastAccess = accessTime.get(host);\r\n            long wait = 0;\r\n            if (lastAccess != null) wait = Math.max(0, agent.minimumDelta + lastAccess.longValue() - System.currentTimeMillis());\r\n            if (wait > 0) {\r\n                // force a sleep here. Instead just sleep we clean up the accessTime map\r\n                final long untilTime = System.currentTimeMillis() + wait;\r\n                cleanupAccessTimeTable(untilTime);\r\n                if (System.currentTimeMillis() < untilTime) {\r\n                    long frcdslp = untilTime - System.currentTimeMillis();\r\n                    LoaderDispatcher.log.info(\"Forcing sleep of \" + frcdslp + \" ms for host \" + host);\r\n                    try {Thread.sleep(frcdslp);} catch (final InterruptedException ee) {}\r\n                }\r\n            }\r\n        }\r\n\r\n        // now it's for sure that we will access the target. Remember the access time\r\n        if (host != null) {\r\n            if (accessTime.size() > accessTimeMaxsize) accessTime.clear(); // prevent a memory leak here\r\n            accessTime.put(host, System.currentTimeMillis());\r\n        }\r\n\r\n        // load resource from the internet\r\n        Response response = null;\r\n        if (protocol.equals(\"http\") || protocol.equals(\"https\")) {\r\n            response = this.httpLoader.load(request, crawlProfile, maxFileSize, blacklistType, agent);\r\n        } else if (protocol.equals(\"ftp\")) {\r\n            response = this.ftpLoader.load(request, true);\r\n        } else if (protocol.equals(\"smb\")) {\r\n            response = this.smbLoader.load(request, true);\r\n        } else if (protocol.equals(\"file\")) {\r\n            response = this.fileLoader.load(request, true);\r\n        } else {\r\n            throw new IOException(\"Unsupported protocol '\" + protocol + \"' in url \" + url);\r\n        }\r\n        if (response == null) {\r\n            throw new IOException(\"no response (NULL) for url \" + url);\r\n        }\r\n        if (response.getContent() == null) {\r\n            throw new IOException(\"empty response (code \" + response.getStatus() + \") for url \" + url.toNormalform(true));\r\n        }\r\n\r\n        // we got something. Now check if we want to store that to the cache\r\n        // first check looks if we want to store the content to the cache\r\n        if (crawlProfile == null || !crawlProfile.storeHTCache()) {\r\n            // no caching wanted. Thats ok, do not write any message\r\n            return response;\r\n        }\r\n        // second check tells us if the protocol tells us something about caching\r\n        final String storeError = response.shallStoreCacheForCrawler();\r\n        if (storeError == null) {\r\n            try {\r\n                Cache.store(url, response.getResponseHeader(), response.getContent());\r\n            } catch (final IOException e) {\r\n                LoaderDispatcher.log.warn(\"cannot write \" + response.url() + \" to Cache (3): \" + e.getMessage(), e);\r\n            }\r\n        } else {\r\n            LoaderDispatcher.log.warn(\"cannot write \" + response.url() + \" to Cache (4): \" + storeError);\r\n        }\r\n        return response;\r\n    }","commit_id":"ebd0be2cea2bf06a5bafa3e521d7b797f2df78c1","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public QueryParams(\r\n        final QueryGoal queryGoal,\r\n        final QueryModifier modifier,\r\n        final int maxDistance,\r\n        final String prefer,\r\n        final ContentDomain contentdom,\r\n        final String language,\r\n        final Collection<Tagging.Metatag> metatags,\r\n        final CacheStrategy snippetCacheStrategy,\r\n        final int itemsPerPage,\r\n        final int offset,\r\n        final String urlMask,\r\n        final String tld,\r\n        final String inlink,\r\n        final Searchdom domType,\r\n        final Bitfield constraint,\r\n        final boolean allofconstraint,\r\n        final Set<String> siteexcludes,\r\n        final int domainzone,\r\n        final String host,\r\n        final boolean specialRights,\r\n        final Segment indexSegment,\r\n        final RankingProfile ranking,\r\n        final String userAgent,\r\n        final boolean filterfailurls,\r\n        final boolean filterscannerfail,\r\n        final double lat,\r\n        final double lon,\r\n        final double radius,\r\n        final String[] search_navigation\r\n        ) {\r\n        this.queryGoal = queryGoal;\r\n        this.modifier = modifier;\r\n        this.ranking = ranking;\r\n        this.maxDistance = maxDistance;\r\n        this.contentdom = contentdom;\r\n        this.itemsPerPage = Math.min((specialRights) ? 10000 : 1000, itemsPerPage);\r\n        this.offset = Math.max(0, Math.min((specialRights) ? 10000 - this.itemsPerPage : 1000 - this.itemsPerPage, offset));\r\n        try {\r\n            this.urlMask = Pattern.compile(urlMask.toLowerCase());\r\n        } catch (final PatternSyntaxException ex) {\r\n            throw new IllegalArgumentException(\"Not a valid regular expression: \" + urlMask, ex);\r\n        }\r\n        this.urlMask_isCatchall = this.urlMask.toString().equals(catchall_pattern.toString());\r\n        if (this.urlMask_isCatchall) {\r\n            String protocolfilter = modifier.protocol == null ? \".*\" : modifier.protocol;\r\n            String defaulthostprefix = modifier.protocol == null ? \"www\" : modifier.protocol;\r\n            String hostfilter = modifier.sitehost == null && tld == null ? \".*\" : modifier.sitehost == null ? \".*\\\\.\" + tld : modifier.sitehost.startsWith(defaulthostprefix + \".\") ? \"(\" + defaulthostprefix + \"\\\\.)?\" + modifier.sitehost.substring(4) : \"(\" + defaulthostprefix + \"\\\\.)?\" + modifier.sitehost;\r\n            String filefilter = modifier.filetype == null ? \".*\" : \".*\" + modifier.filetype + \".*\";\r\n            String filter = protocolfilter + \"://\" + hostfilter + \"/\" + filefilter;\r\n            if (!filter.equals(\".*://.*/.*\")) {\r\n                this.urlMask = Pattern.compile(filter);\r\n                this.urlMask_isCatchall = false;\r\n            }\r\n        }\r\n        this.tld = tld;\r\n        this.inlink = inlink;\r\n        try {\r\n            this.prefer = Pattern.compile(prefer);\r\n        } catch (final PatternSyntaxException ex) {\r\n            throw new IllegalArgumentException(\"Not a valid regular expression: \" + prefer, ex);\r\n        }\r\n        this.prefer.toString().equals(matchnothing_pattern.toString());\r\n        assert language != null;\r\n        this.targetlang = language;\r\n        this.metatags = metatags;\r\n        this.domType = domType;\r\n        this.zonecode = domainzone;\r\n        this.constraint = constraint;\r\n        this.allofconstraint = allofconstraint;\r\n        this.siteexcludes = siteexcludes != null && siteexcludes.isEmpty() ? null: siteexcludes;\r\n        this.snippetCacheStrategy = contentdom == ContentDomain.TEXT ? snippetCacheStrategy : contentdom == null ? null : CacheStrategy.CACHEONLY;\r\n        this.clienthost = host;\r\n        this.remotepeer = null;\r\n        this.starttime = Long.valueOf(System.currentTimeMillis());\r\n        this.maxtime = 10000;\r\n        this.timeout = this.starttime + this.timeout;\r\n        this.indexSegment = indexSegment;\r\n        this.userAgent = userAgent;\r\n        this.transmitcount = 0;\r\n        this.filterfailurls = filterfailurls;\r\n        this.filterscannerfail = filterscannerfail;\r\n        // we normalize here the location and radius because that should cause a better caching\r\n        // and as surplus it will increase privacy\r\n        this.lat = Math.floor(lat * this.kmNormal) / this.kmNormal;\r\n        this.lon = Math.floor(lon * this.kmNormal) / this.kmNormal;\r\n        this.radius = Math.floor(radius * this.kmNormal + 1) / this.kmNormal;\r\n        this.facetfields = new LinkedHashSet<String>();\r\n        \r\n        this.solrSchema = indexSegment.fulltext().getDefaultConfiguration();\r\n        for (String navkey: search_navigation) {\r\n            CollectionSchema f = defaultfacetfields.get(navkey);\r\n            // handle special field, authors_sxt (add to facet w/o contains check, as authors_sxt is not enabled (is copyfield))\r\n            if (f != null && (solrSchema.contains(f) || f.name().equals(\"author_sxt\"))) this.facetfields.add(f.getSolrFieldName());\r\n        }\r\n        for (Tagging v: LibraryProvider.autotagging.getVocabularies()) this.facetfields.add(CollectionSchema.VOCABULARY_PREFIX + v.getName() + CollectionSchema.VOCABULARY_SUFFIX);\r\n        this.maxfacets = defaultmaxfacets;\r\n        this.cachedQuery = null;\r\n    }","id":63619,"modified_method":"public QueryParams(\r\n        final QueryGoal queryGoal,\r\n        final QueryModifier modifier,\r\n        final int maxDistance,\r\n        final String prefer,\r\n        final ContentDomain contentdom,\r\n        final String language,\r\n        final Collection<Tagging.Metatag> metatags,\r\n        final CacheStrategy snippetCacheStrategy,\r\n        final int itemsPerPage,\r\n        final int offset,\r\n        final String urlMask,\r\n        final String tld,\r\n        final String inlink,\r\n        final Searchdom domType,\r\n        final Bitfield constraint,\r\n        final boolean allofconstraint,\r\n        final Set<String> siteexcludes,\r\n        final int domainzone,\r\n        final String host,\r\n        final boolean specialRights,\r\n        final Segment indexSegment,\r\n        final RankingProfile ranking,\r\n        final String userAgent,\r\n        final boolean filterfailurls,\r\n        final boolean filterscannerfail,\r\n        final double lat,\r\n        final double lon,\r\n        final double radius,\r\n        final String[] search_navigation\r\n        ) {\r\n        this.queryGoal = queryGoal;\r\n        this.modifier = modifier;\r\n        this.ranking = ranking;\r\n        this.maxDistance = maxDistance;\r\n        this.contentdom = contentdom;\r\n        this.itemsPerPage = Math.min((specialRights) ? 10000 : 1000, itemsPerPage);\r\n        this.offset = Math.max(0, Math.min((specialRights) ? 10000 - this.itemsPerPage : 1000 - this.itemsPerPage, offset));\r\n        try {\r\n            this.urlMask = Pattern.compile(urlMask.toLowerCase());\r\n        } catch (final PatternSyntaxException ex) {\r\n            throw new IllegalArgumentException(\"Not a valid regular expression: \" + urlMask, ex);\r\n        }\r\n        this.urlMask_isCatchall = this.urlMask.toString().equals(catchall_pattern.toString());\r\n        if (this.urlMask_isCatchall) {\r\n            String protocolfilter = modifier.protocol == null ? \".*\" : modifier.protocol;\r\n            String defaulthostprefix = modifier.protocol == null ? \"www\" : modifier.protocol;\r\n            String hostfilter = modifier.sitehost == null && tld == null ? \".*\" : modifier.sitehost == null ? \".*\\\\.\" + tld : modifier.sitehost.startsWith(defaulthostprefix + \".\") ? \"(\" + defaulthostprefix + \"\\\\.)?\" + modifier.sitehost.substring(4) : \"(\" + defaulthostprefix + \"\\\\.)?\" + modifier.sitehost;\r\n            String filefilter = modifier.filetype == null ? \".*\" : \".*\" + modifier.filetype + \".*\";\r\n            String filter = protocolfilter + \"://\" + hostfilter + \"/\" + filefilter;\r\n            if (!filter.equals(\".*://.*/.*\")) {\r\n                this.urlMask = Pattern.compile(filter);\r\n                this.urlMask_isCatchall = false;\r\n            }\r\n        }\r\n        this.tld = tld;\r\n        this.inlink = inlink;\r\n        try {\r\n            this.prefer = Pattern.compile(prefer);\r\n        } catch (final PatternSyntaxException ex) {\r\n            throw new IllegalArgumentException(\"Not a valid regular expression: \" + prefer, ex);\r\n        }\r\n        this.prefer.toString().equals(matchnothing_pattern.toString());\r\n        assert language != null;\r\n        this.targetlang = language;\r\n        this.metatags = metatags;\r\n        this.domType = domType;\r\n        this.zonecode = domainzone;\r\n        this.constraint = constraint;\r\n        this.allofconstraint = allofconstraint;\r\n        this.siteexcludes = siteexcludes != null && siteexcludes.isEmpty() ? null: siteexcludes;\r\n        this.snippetCacheStrategy = snippetCacheStrategy;\r\n        this.clienthost = host;\r\n        this.remotepeer = null;\r\n        this.starttime = Long.valueOf(System.currentTimeMillis());\r\n        this.maxtime = 10000;\r\n        this.timeout = this.starttime + this.timeout;\r\n        this.indexSegment = indexSegment;\r\n        this.userAgent = userAgent;\r\n        this.transmitcount = 0;\r\n        this.filterfailurls = filterfailurls;\r\n        this.filterscannerfail = filterscannerfail;\r\n        // we normalize here the location and radius because that should cause a better caching\r\n        // and as surplus it will increase privacy\r\n        this.lat = Math.floor(lat * this.kmNormal) / this.kmNormal;\r\n        this.lon = Math.floor(lon * this.kmNormal) / this.kmNormal;\r\n        this.radius = Math.floor(radius * this.kmNormal + 1) / this.kmNormal;\r\n        this.facetfields = new LinkedHashSet<String>();\r\n        \r\n        this.solrSchema = indexSegment.fulltext().getDefaultConfiguration();\r\n        for (String navkey: search_navigation) {\r\n            CollectionSchema f = defaultfacetfields.get(navkey);\r\n            // handle special field, authors_sxt (add to facet w/o contains check, as authors_sxt is not enabled (is copyfield))\r\n            if (f != null && (solrSchema.contains(f) || f.name().equals(\"author_sxt\"))) this.facetfields.add(f.getSolrFieldName());\r\n        }\r\n        for (Tagging v: LibraryProvider.autotagging.getVocabularies()) this.facetfields.add(CollectionSchema.VOCABULARY_PREFIX + v.getName() + CollectionSchema.VOCABULARY_SUFFIX);\r\n        this.maxfacets = defaultmaxfacets;\r\n        this.cachedQuery = null;\r\n    }","commit_id":"ebd0be2cea2bf06a5bafa3e521d7b797f2df78c1","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public boolean drainStacksToResult() {\n        // we take one entry from both stacks at the same time\n        boolean success = false;\n        Element<URIMetadataNode> localEntryElement = this.nodeStack.sizeQueue() > 0 ? this.nodeStack.poll() : null;\n        URIMetadataNode node = localEntryElement == null ? null : localEntryElement.getElement();\n        if (node != null) {\n            LinkedHashSet<String> solrsnippetlines = this.snippets.remove(ASCII.String(node.hash())); // we can remove this because it's used only once\n            if (solrsnippetlines != null && solrsnippetlines.size() > 0) {\n                OpensearchResponseWriter.removeSubsumedTitle(solrsnippetlines, node.dc_title());\n                final TextSnippet solrsnippet = new TextSnippet(node.hash(), OpensearchResponseWriter.getLargestSnippet(solrsnippetlines), true, ResultClass.SOURCE_CACHE, \"\");\n                final TextSnippet yacysnippet = new TextSnippet(this.loader,\n                        node,\n                        this.query.getQueryGoal().getIncludeHashes(),\n                        CacheStrategy.CACHEONLY,\n                        false,\n                        180,\n                        false);\n                final String solrsnippetline = solrsnippet.descriptionline(this.getQuery().getQueryGoal());\n                final String yacysnippetline = yacysnippet.descriptionline(this.getQuery().getQueryGoal());\n                ResultEntry re = new ResultEntry(node, this.query.getSegment(), this.peers, solrsnippetline.length() >  yacysnippetline.length() ? solrsnippet : yacysnippet, 0);\n                addResult(re);\n                success = true;\n            } else {\n                // we don't have a snippet from solr, try to get it in our way (by reloading, if necessary)\n                if (SearchEvent.this.snippetFetchAlive.get() >= 10) {\n                    // too many concurrent processes\n                    addResult(getSnippet(node, null));\n                    success = true;\n                } else {\n                    final URIMetadataNode node1 = node;\n                    new Thread() {\n                        @Override\n                        public void run() {\n                            SearchEvent.this.oneFeederStarted();\n                            try {\n                                SearchEvent.this.snippetFetchAlive.incrementAndGet();\n                                try {\n                                    addResult(getSnippet(node1, SearchEvent.this.query.snippetCacheStrategy));\n                                } catch (final Throwable e) {} finally {\n                                    SearchEvent.this.snippetFetchAlive.decrementAndGet();\n                                }\n                            } catch (final Throwable e) {} finally {\n                                SearchEvent.this.oneFeederTerminated();\n                            }\n                        }\n                    }.start();\n                }\n            }\n        }\n        if (SearchEvent.this.snippetFetchAlive.get() >= 10 || MemoryControl.shortStatus()) {\n            // too many concurrent processes\n            node = pullOneFilteredFromRWI(true);\n            if (node != null) {\n                addResult(getSnippet(node, null));\n                success = true;\n            }\n        } else {\n            new Thread() {\n                @Override\n                public void run() {\n                    SearchEvent.this.oneFeederStarted();\n                    try {\n                        final URIMetadataNode node = pullOneFilteredFromRWI(true);\n                        if (node != null) {\n                            SearchEvent.this.snippetFetchAlive.incrementAndGet();\n                            try {\n                                addResult(getSnippet(node, SearchEvent.this.query.snippetCacheStrategy));\n                            } catch (final Throwable e) {} finally {\n                                SearchEvent.this.snippetFetchAlive.decrementAndGet();\n                            }\n                        }\n                    } catch (final Throwable e) {} finally {\n                        SearchEvent.this.oneFeederTerminated();\n                    }\n                }\n            }.start();\n        }\n        return success;\n    }","id":63620,"modified_method":"public boolean drainStacksToResult() {\n        // we take one entry from both stacks at the same time\n        boolean success = false;\n        Element<URIMetadataNode> localEntryElement = this.nodeStack.sizeQueue() > 0 ? this.nodeStack.poll() : null;\n        URIMetadataNode node = localEntryElement == null ? null : localEntryElement.getElement();\n        if (node != null) {\n            LinkedHashSet<String> solrsnippetlines = this.snippets.remove(ASCII.String(node.hash())); // we can remove this because it's used only once\n            if (solrsnippetlines != null && solrsnippetlines.size() > 0) {\n                OpensearchResponseWriter.removeSubsumedTitle(solrsnippetlines, node.dc_title());\n                final TextSnippet solrsnippet = new TextSnippet(node.hash(), OpensearchResponseWriter.getLargestSnippet(solrsnippetlines), true, ResultClass.SOURCE_CACHE, \"\");\n                final TextSnippet yacysnippet = new TextSnippet(this.loader,\n                        node,\n                        this.query.getQueryGoal().getIncludeHashes(),\n                        CacheStrategy.CACHEONLY,\n                        false,\n                        180,\n                        false);\n                final String solrsnippetline = solrsnippet.descriptionline(this.getQuery().getQueryGoal());\n                final String yacysnippetline = yacysnippet.descriptionline(this.getQuery().getQueryGoal());\n                ResultEntry re = new ResultEntry(node, this.query.getSegment(), this.peers, solrsnippetline.length() >  yacysnippetline.length() ? solrsnippet : yacysnippet, 0);\n                addResult(re);\n                success = true;\n            } else {\n                // we don't have a snippet from solr, try to get it in our way (by reloading, if necessary)\n                if (SearchEvent.this.snippetFetchAlive.get() >= 10) {\n                    // too many concurrent processes\n                    addResult(getSnippet(node, null));\n                    success = true;\n                } else {\n                    final URIMetadataNode node1 = node;\n                    new Thread() {\n                        @Override\n                        public void run() {\n                            SearchEvent.this.oneFeederStarted();\n                            try {\n                                SearchEvent.this.snippetFetchAlive.incrementAndGet();\n                                try {\n                                    addResult(getSnippet(node1, SearchEvent.this.query.snippetCacheStrategy));\n                                } catch (final Throwable e) {} finally {\n                                    SearchEvent.this.snippetFetchAlive.decrementAndGet();\n                                }\n                            } catch (final Throwable e) {} finally {\n                                SearchEvent.this.oneFeederTerminated();\n                            }\n                        }\n                    }.start();\n                }\n            }\n        }\n        if (SearchEvent.this.snippetFetchAlive.get() >= 10 || MemoryControl.shortStatus()) {\n            // too many concurrent processes\n            node = pullOneFilteredFromRWI(true);\n            if (node != null) {\n                addResult(getSnippet(node, null));\n                success = true;\n            }\n        } else {\n            Thread t = new Thread() {\n                @Override\n                public void run() {\n                    SearchEvent.this.oneFeederStarted();\n                    try {\n                        final URIMetadataNode node = pullOneFilteredFromRWI(true);\n                        if (node != null) {\n                            SearchEvent.this.snippetFetchAlive.incrementAndGet();\n                            try {\n                                addResult(getSnippet(node, SearchEvent.this.query.snippetCacheStrategy));\n                            } catch (final Throwable e) {\n                                ConcurrentLog.logException(e);\n                            } finally {    \n                                SearchEvent.this.snippetFetchAlive.decrementAndGet();\n                            }\n                        }\n                    } catch (final Throwable e) {} finally {\n                        SearchEvent.this.oneFeederTerminated();\n                    }\n                }\n            };\n            if (SearchEvent.this.query.snippetCacheStrategy == null) t.run(); else t.start(); //no need for concurrency if there is no latency\n        }\n        return success;\n    }","commit_id":"ebd0be2cea2bf06a5bafa3e521d7b797f2df78c1","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public ResultEntry getSnippet(URIMetadataNode page, final CacheStrategy cacheStrategy) {\n        if (page == null) return null;\n\n        if (cacheStrategy == null) {\n            final TextSnippet snippet = new TextSnippet(\n                    null,\n                    page,\n                    this.snippetFetchWordHashes,\n                    null,\n                    ((this.query.constraint != null) && (this.query.constraint.get(Condenser.flag_cat_indexof))),\n                    SearchEvent.SNIPPET_MAX_LENGTH,\n                    !this.query.isLocal());\n            return new ResultEntry(page, this.query.getSegment(), this.peers, snippet, 0); // result without snippet\n        }\n\n        // load snippet\n        ContentDomain contentDomain = page.getContentDomain();\n        if (contentDomain == Classification.ContentDomain.TEXT || contentDomain == Classification.ContentDomain.ALL) {\n            // attach text snippet\n            long startTime = System.currentTimeMillis();\n            final TextSnippet snippet = new TextSnippet(\n                    this.loader,\n                    page,\n                    this.snippetFetchWordHashes,\n                    cacheStrategy,\n                    ((this.query.constraint != null) && (this.query.constraint.get(Condenser.flag_cat_indexof))),\n                    180,\n                    !this.query.isLocal());\n            final long snippetComputationTime = System.currentTimeMillis() - startTime;\n            SearchEvent.log.info(\"text snippet load time for \" + page.url() + \": \" + snippetComputationTime + \", \" + (!snippet.getErrorCode().fail() ? \"snippet found\" : (\"no snippet found (\" + snippet.getError() + \")\")));\n\n            if (!snippet.getErrorCode().fail()) {\n                // we loaded the file and found the snippet\n                return new ResultEntry(page, this.query.getSegment(), this.peers, snippet, snippetComputationTime); // result with snippet attached\n            } else if (cacheStrategy.mustBeOffline()) {\n                // we did not demand online loading, therefore a failure does not mean that the missing snippet causes a rejection of this result\n                // this may happen during a remote search, because snippet loading is omitted to retrieve results faster\n                return new ResultEntry(page, this.query.getSegment(), this.peers, null, snippetComputationTime); // result without snippet\n            } else {\n                // problems with snippet fetch\n                if (this.snippetFetchWordHashes.has(Segment.catchallHash)) {\n                    // we accept that because the word cannot be on the page\n                    return new ResultEntry(page, this.query.getSegment(), this.peers, null, 0);\n                }\n                final String reason = \"no text snippet; errorCode = \" + snippet.getErrorCode();\n                if (this.deleteIfSnippetFail) {\n                    this.workTables.failURLsRegisterMissingWord(this.query.getSegment().termIndex(), page.url(), this.query.getQueryGoal().getIncludeHashes(), reason);\n                }\n                SearchEvent.log.info(\"sorted out url \" + page.url().toNormalform(true) + \" during search: \" + reason);\n                return null;\n            }\n        }\n        return new ResultEntry(page, this.query.getSegment(), this.peers, null, 0); // result without snippet\n    }","id":63621,"modified_method":"public ResultEntry getSnippet(URIMetadataNode page, final CacheStrategy cacheStrategy) {\n        if (page == null) return null;\n\n        if (cacheStrategy == null) {\n            final TextSnippet snippet = new TextSnippet(\n                    null,\n                    page,\n                    this.snippetFetchWordHashes,\n                    null,\n                    ((this.query.constraint != null) && (this.query.constraint.get(Condenser.flag_cat_indexof))),\n                    SearchEvent.SNIPPET_MAX_LENGTH,\n                    !this.query.isLocal());\n            return new ResultEntry(page, this.query.getSegment(), this.peers, snippet, 0); // result without snippet\n        }\n\n        // load snippet\n        ContentDomain contentDomain = page.getContentDomain();\n        if (contentDomain == Classification.ContentDomain.TEXT || contentDomain == Classification.ContentDomain.ALL) {\n            // attach text snippet\n            long startTime = System.currentTimeMillis();\n            final TextSnippet snippet = new TextSnippet(\n                    this.loader,\n                    page,\n                    this.snippetFetchWordHashes,\n                    cacheStrategy,\n                    ((this.query.constraint != null) && (this.query.constraint.get(Condenser.flag_cat_indexof))),\n                    180,\n                    !this.query.isLocal());\n            final long snippetComputationTime = System.currentTimeMillis() - startTime;\n            SearchEvent.log.info(\"text snippet load time for \" + page.url().toNormalform(true) + \": \" + snippetComputationTime + \", \" + (!snippet.getErrorCode().fail() ? \"snippet found\" : (\"no snippet found (\" + snippet.getError() + \")\")));\n\n            if (!snippet.getErrorCode().fail()) {\n                // we loaded the file and found the snippet\n                return new ResultEntry(page, this.query.getSegment(), this.peers, snippet, snippetComputationTime); // result with snippet attached\n            } else if (cacheStrategy.mustBeOffline()) {\n                // we did not demand online loading, therefore a failure does not mean that the missing snippet causes a rejection of this result\n                // this may happen during a remote search, because snippet loading is omitted to retrieve results faster\n                return new ResultEntry(page, this.query.getSegment(), this.peers, null, snippetComputationTime); // result without snippet\n            } else {\n                // problems with snippet fetch\n                if (this.snippetFetchWordHashes.has(Segment.catchallHash)) {\n                    // we accept that because the word cannot be on the page\n                    return new ResultEntry(page, this.query.getSegment(), this.peers, null, 0);\n                }\n                final String reason = \"no text snippet; errorCode = \" + snippet.getErrorCode();\n                if (this.deleteIfSnippetFail) {\n                    this.workTables.failURLsRegisterMissingWord(this.query.getSegment().termIndex(), page.url(), this.query.getQueryGoal().getIncludeHashes(), reason);\n                }\n                SearchEvent.log.info(\"sorted out url \" + page.url().toNormalform(true) + \" during search: \" + reason);\n                return null;\n            }\n        }\n        return new ResultEntry(page, this.query.getSegment(), this.peers, null, 0); // result without snippet\n    }","commit_id":"ebd0be2cea2bf06a5bafa3e521d7b797f2df78c1","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"/**\n     * This is called from the constructor to perform post-initialization\n     * of the components in the form.\n     */\n    private void postInitComponents() {\n\tlogger = new ConsoleLogger(this);\n\t\n\tviewPanelLayout = (CardLayout) viewPanel.getLayout();\n\tnavigatorTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);\n\t\n\t// Add a tree selection listener to the navigator tree, so we can\n\t// ensure that the view is always consistent with the current selection.\n\tnavigatorTree.addTreeSelectionListener(new TreeSelectionListener() {\n\t    public void valueChanged(TreeSelectionEvent e) {\n\t\tnavigatorTreeSelectionChanged(e);\n\t    }\n\t});\n\t\n\tnavigatorTree.setCellRenderer(new FindBugsFrame.NavigatorCellRenderer());\n\tnavigatorTree.setRootVisible(false);\n\tnavigatorTree.setShowsRootHandles(false);\n\t\n\tbugTree.setCellRenderer(new FindBugsFrame.BugCellRenderer());\n\tbugTree.setRootVisible(false);\n\tbugTree.setShowsRootHandles(true);\n\t\n\tjarFileList.setModel(new DefaultListModel());\n\tsourceDirList.setModel(new DefaultListModel());\n\t\n\tgroupByChooser.addItem(GROUP_BY_CLASS);\n\tgroupByChooser.addItem(GROUP_BY_PACKAGE);\n\tgroupByChooser.addItem(GROUP_BY_BUG_TYPE);\n    }","id":63622,"modified_method":"/**\n     * This is called from the constructor to perform post-initialization\n     * of the components in the form.\n     */\n    private void postInitComponents() {\n\tlogger = new ConsoleLogger(this);\n\t\n\tviewPanelLayout = (CardLayout) viewPanel.getLayout();\n\tnavigatorTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);\n\t\n\t// Add a tree selection listener to the navigator tree, so we can\n\t// ensure that the view is always consistent with the current selection.\n\tnavigatorTree.addTreeSelectionListener(new TreeSelectionListener() {\n\t    public void valueChanged(TreeSelectionEvent e) {\n\t\tnavigatorTreeSelectionChanged(e);\n\t    }\n\t});\n\t\n\tnavigatorTree.setCellRenderer(new FindBugsFrame.NavigatorCellRenderer());\n\tnavigatorTree.setRootVisible(false);\n\tnavigatorTree.setShowsRootHandles(false);\n\t\n\tbugTree.setCellRenderer(new FindBugsFrame.BugCellRenderer());\n\tbugTree.setRootVisible(false);\n\tbugTree.setShowsRootHandles(true);\n\t\n\tjarFileList.setModel(new DefaultListModel());\n\tsourceDirList.setModel(new DefaultListModel());\n\t\n\tgroupByChooser.addItem(GROUP_BY_CLASS);\n\tgroupByChooser.addItem(GROUP_BY_PACKAGE);\n\tgroupByChooser.addItem(GROUP_BY_BUG_TYPE);\n\t\n\tbugTreeSourceViewSplitter.setDividerLocation(1.0);\n    }","commit_id":"353f1a8939da0cce807109be63c2a31a065a8ba9","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n     * @param args the command line arguments\n     */\n    public static void main(String args[]) {\n\tFindBugsFrame frame = new FindBugsFrame();\n\tframe.setSize(900, 700);\n\tframe.show();\n    }","id":63623,"modified_method":"/**\n     * @param args the command line arguments\n     */\n    public static void main(String args[]) {\n\tFindBugsFrame frame = new FindBugsFrame();\n\tframe.setSize(800, 600);\n\tframe.show();\n    }","commit_id":"353f1a8939da0cce807109be63c2a31a065a8ba9","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    private void initComponents() {//GEN-BEGIN:initComponents\n        java.awt.GridBagConstraints gridBagConstraints;\n\n        consoleSplitter = new javax.swing.JSplitPane();\n        navigatorViewSplitter = new javax.swing.JSplitPane();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        navigatorTree = new javax.swing.JTree();\n        viewPanel = new javax.swing.JPanel();\n        emptyPanel = new javax.swing.JPanel();\n        reportPanel = new javax.swing.JPanel();\n        editProjectPanel = new javax.swing.JPanel();\n        jarFileLabel = new javax.swing.JLabel();\n        jarNameTextField = new javax.swing.JTextField();\n        addJarButton = new javax.swing.JButton();\n        jarFileListLabel = new javax.swing.JLabel();\n        sourceDirLabel = new javax.swing.JLabel();\n        srcDirTextField = new javax.swing.JTextField();\n        addSourceDirButton = new javax.swing.JButton();\n        sourceDirListLabel = new javax.swing.JLabel();\n        removeJarButton = new javax.swing.JButton();\n        removeSrcDirButton = new javax.swing.JButton();\n        jSeparator1 = new javax.swing.JSeparator();\n        browseJarButton = new javax.swing.JButton();\n        browseSrcDirButton = new javax.swing.JButton();\n        editProjectLabel = new javax.swing.JLabel();\n        jSeparator2 = new javax.swing.JSeparator();\n        findBugsButton = new javax.swing.JButton();\n        jSeparator4 = new javax.swing.JSeparator();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        jarFileList = new javax.swing.JList();\n        jScrollPane3 = new javax.swing.JScrollPane();\n        sourceDirList = new javax.swing.JList();\n        bugTreePanel = new javax.swing.JPanel();\n        jScrollPane4 = new javax.swing.JScrollPane();\n        bugTree = new javax.swing.JTree();\n        groupByChooser = new javax.swing.JComboBox();\n        groupByLabel = new javax.swing.JLabel();\n        jScrollPane5 = new javax.swing.JScrollPane();\n        consoleMessageArea = new javax.swing.JTextArea();\n        jMenuBar1 = new javax.swing.JMenuBar();\n        fileMenu = new javax.swing.JMenu();\n        newProjectItem = new javax.swing.JMenuItem();\n        openProjectItem = new javax.swing.JMenuItem();\n        closeProjectItem = new javax.swing.JMenuItem();\n        jSeparator3 = new javax.swing.JSeparator();\n        exitItem = new javax.swing.JMenuItem();\n        viewMenu = new javax.swing.JMenu();\n        viewConsoleItem = new javax.swing.JCheckBoxMenuItem();\n        helpMenu = new javax.swing.JMenu();\n        aboutItem = new javax.swing.JMenuItem();\n\n        setTitle(\"FindBugs\");\n        addWindowListener(new java.awt.event.WindowAdapter() {\n            public void windowClosing(java.awt.event.WindowEvent evt) {\n                exitForm(evt);\n            }\n            public void windowOpened(java.awt.event.WindowEvent evt) {\n                formWindowOpened(evt);\n            }\n        });\n\n        consoleSplitter.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);\n        consoleSplitter.setResizeWeight(1.0);\n        consoleSplitter.setOneTouchExpandable(true);\n        consoleSplitter.addPropertyChangeListener(new java.beans.PropertyChangeListener() {\n            public void propertyChange(java.beans.PropertyChangeEvent evt) {\n                consoleSplitterPropertyChange(evt);\n            }\n        });\n\n        jScrollPane1.setPreferredSize(new java.awt.Dimension(140, 0));\n        navigatorTree.setModel(createNavigatorTreeModel());\n        jScrollPane1.setViewportView(navigatorTree);\n\n        navigatorViewSplitter.setLeftComponent(jScrollPane1);\n\n        viewPanel.setLayout(new java.awt.CardLayout());\n\n        viewPanel.add(emptyPanel, \"EmptyPanel\");\n\n        viewPanel.add(reportPanel, \"ReportPanel\");\n\n        editProjectPanel.setLayout(new java.awt.GridBagLayout());\n\n        jarFileLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        jarFileLabel.setText(\"Jar file:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 3;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(jarFileLabel, gridBagConstraints);\n\n        jarNameTextField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jarNameTextFieldActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 3;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n        gridBagConstraints.weightx = 1.0;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);\n        editProjectPanel.add(jarNameTextField, gridBagConstraints);\n\n        addJarButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        addJarButton.setText(\"Add\");\n        addJarButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addJarButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 3;\n        gridBagConstraints.gridy = 3;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(addJarButton, gridBagConstraints);\n\n        jarFileListLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        jarFileListLabel.setText(\"Jar Files:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 4;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(jarFileListLabel, gridBagConstraints);\n\n        sourceDirLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        sourceDirLabel.setText(\"Source Dir:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 6;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(sourceDirLabel, gridBagConstraints);\n\n        srcDirTextField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                srcDirTextFieldActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 6;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n        gridBagConstraints.weightx = 1.0;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);\n        editProjectPanel.add(srcDirTextField, gridBagConstraints);\n\n        addSourceDirButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        addSourceDirButton.setText(\"Add\");\n        addSourceDirButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addSourceDirButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 3;\n        gridBagConstraints.gridy = 6;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(addSourceDirButton, gridBagConstraints);\n\n        sourceDirListLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        sourceDirListLabel.setText(\"Source Dirs:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 7;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(sourceDirListLabel, gridBagConstraints);\n\n        removeJarButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        removeJarButton.setText(\"Remove\");\n        removeJarButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeJarButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 3;\n        gridBagConstraints.gridy = 4;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(removeJarButton, gridBagConstraints);\n\n        removeSrcDirButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        removeSrcDirButton.setText(\"Remove\");\n        removeSrcDirButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeSrcDirButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 3;\n        gridBagConstraints.gridy = 7;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(removeSrcDirButton, gridBagConstraints);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 5;\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n        editProjectPanel.add(jSeparator1, gridBagConstraints);\n\n        browseJarButton.setText(\"...\");\n        browseJarButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                browseJarButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 2;\n        gridBagConstraints.gridy = 3;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(browseJarButton, gridBagConstraints);\n\n        browseSrcDirButton.setText(\"...\");\n        browseSrcDirButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                browseSrcDirButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 2;\n        gridBagConstraints.gridy = 6;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(browseSrcDirButton, gridBagConstraints);\n\n        editProjectLabel.setBackground(new java.awt.Color(0, 0, 204));\n        editProjectLabel.setFont(new java.awt.Font(\"Dialog\", 1, 24));\n        editProjectLabel.setForeground(new java.awt.Color(255, 255, 255));\n        editProjectLabel.setText(\"Project\");\n        editProjectLabel.setOpaque(true);\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        editProjectPanel.add(editProjectLabel, gridBagConstraints);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 2;\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n        editProjectPanel.add(jSeparator2, gridBagConstraints);\n\n        findBugsButton.setText(\"Find Bugs!\");\n        findBugsButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                findBugsButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 9;\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n        editProjectPanel.add(findBugsButton, gridBagConstraints);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 8;\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n        editProjectPanel.add(jSeparator4, gridBagConstraints);\n\n        jScrollPane2.setPreferredSize(new java.awt.Dimension(259, 1));\n        jarFileList.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));\n        jarFileList.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        jarFileList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);\n        jScrollPane2.setViewportView(jarFileList);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 4;\n        gridBagConstraints.gridwidth = 2;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.weighty = 0.7;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(jScrollPane2, gridBagConstraints);\n\n        jScrollPane3.setPreferredSize(new java.awt.Dimension(259, 1));\n        sourceDirList.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));\n        sourceDirList.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        sourceDirList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);\n        jScrollPane3.setViewportView(sourceDirList);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 7;\n        gridBagConstraints.gridwidth = 2;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.weighty = 0.3;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(jScrollPane3, gridBagConstraints);\n\n        viewPanel.add(editProjectPanel, \"EditProjectPanel\");\n\n        bugTreePanel.setLayout(new java.awt.GridBagLayout());\n\n        jScrollPane4.setViewportView(bugTree);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 1;\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.weightx = 1.0;\n        gridBagConstraints.weighty = 1.0;\n        bugTreePanel.add(jScrollPane4, gridBagConstraints);\n\n        groupByChooser.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                groupByChooserActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 2;\n        gridBagConstraints.gridy = 0;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        bugTreePanel.add(groupByChooser, gridBagConstraints);\n\n        groupByLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        groupByLabel.setText(\"Group:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 0;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        bugTreePanel.add(groupByLabel, gridBagConstraints);\n\n        viewPanel.add(bugTreePanel, \"BugTree\");\n\n        navigatorViewSplitter.setRightComponent(viewPanel);\n\n        consoleSplitter.setTopComponent(navigatorViewSplitter);\n\n        jScrollPane5.setMinimumSize(new java.awt.Dimension(22, 100));\n        jScrollPane5.setPreferredSize(new java.awt.Dimension(0, 100));\n        consoleMessageArea.setBackground(new java.awt.Color(204, 204, 204));\n        consoleMessageArea.setEditable(false);\n        consoleMessageArea.setFont(new java.awt.Font(\"Courier\", 0, 12));\n        consoleMessageArea.setMinimumSize(new java.awt.Dimension(0, 0));\n        consoleMessageArea.setPreferredSize(new java.awt.Dimension(0, 5));\n        jScrollPane5.setViewportView(consoleMessageArea);\n\n        consoleSplitter.setBottomComponent(jScrollPane5);\n\n        getContentPane().add(consoleSplitter, java.awt.BorderLayout.CENTER);\n\n        jMenuBar1.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        fileMenu.setMnemonic('F');\n        fileMenu.setText(\"File\");\n        fileMenu.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        newProjectItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        newProjectItem.setMnemonic('N');\n        newProjectItem.setText(\"New Project\");\n        newProjectItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newProjectItemActionPerformed(evt);\n            }\n        });\n\n        fileMenu.add(newProjectItem);\n\n        openProjectItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        openProjectItem.setMnemonic('O');\n        openProjectItem.setText(\"Open Project\");\n        fileMenu.add(openProjectItem);\n\n        closeProjectItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        closeProjectItem.setMnemonic('C');\n        closeProjectItem.setText(\"Close Project\");\n        fileMenu.add(closeProjectItem);\n\n        fileMenu.add(jSeparator3);\n\n        exitItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        exitItem.setMnemonic('X');\n        exitItem.setText(\"Exit\");\n        exitItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                exitItemActionPerformed(evt);\n            }\n        });\n\n        fileMenu.add(exitItem);\n\n        jMenuBar1.add(fileMenu);\n\n        viewMenu.setMnemonic('V');\n        viewMenu.setText(\"View\");\n        viewMenu.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        viewConsoleItem.setMnemonic('C');\n        viewConsoleItem.setSelected(true);\n        viewConsoleItem.setText(\"Console\");\n        viewConsoleItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                viewConsoleItemActionPerformed(evt);\n            }\n        });\n\n        viewMenu.add(viewConsoleItem);\n\n        jMenuBar1.add(viewMenu);\n\n        helpMenu.setMnemonic('H');\n        helpMenu.setText(\"Help\");\n        helpMenu.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        aboutItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        aboutItem.setMnemonic('A');\n        aboutItem.setText(\"About\");\n        aboutItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                aboutItemActionPerformed(evt);\n            }\n        });\n\n        helpMenu.add(aboutItem);\n\n        jMenuBar1.add(helpMenu);\n\n        setJMenuBar(jMenuBar1);\n\n        pack();\n    }","id":63624,"modified_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    private void initComponents() {//GEN-BEGIN:initComponents\n        java.awt.GridBagConstraints gridBagConstraints;\n\n        consoleSplitter = new javax.swing.JSplitPane();\n        navigatorViewSplitter = new javax.swing.JSplitPane();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        navigatorTree = new javax.swing.JTree();\n        viewPanel = new javax.swing.JPanel();\n        emptyPanel = new javax.swing.JPanel();\n        reportPanel = new javax.swing.JPanel();\n        editProjectPanel = new javax.swing.JPanel();\n        jarFileLabel = new javax.swing.JLabel();\n        jarNameTextField = new javax.swing.JTextField();\n        addJarButton = new javax.swing.JButton();\n        jarFileListLabel = new javax.swing.JLabel();\n        sourceDirLabel = new javax.swing.JLabel();\n        srcDirTextField = new javax.swing.JTextField();\n        addSourceDirButton = new javax.swing.JButton();\n        sourceDirListLabel = new javax.swing.JLabel();\n        removeJarButton = new javax.swing.JButton();\n        removeSrcDirButton = new javax.swing.JButton();\n        jSeparator1 = new javax.swing.JSeparator();\n        browseJarButton = new javax.swing.JButton();\n        browseSrcDirButton = new javax.swing.JButton();\n        editProjectLabel = new javax.swing.JLabel();\n        jSeparator2 = new javax.swing.JSeparator();\n        findBugsButton = new javax.swing.JButton();\n        jSeparator4 = new javax.swing.JSeparator();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        jarFileList = new javax.swing.JList();\n        jScrollPane3 = new javax.swing.JScrollPane();\n        sourceDirList = new javax.swing.JList();\n        bugTreePanel = new javax.swing.JPanel();\n        groupByChooser = new javax.swing.JComboBox();\n        groupByLabel = new javax.swing.JLabel();\n        bugTreeSourceViewSplitter = new javax.swing.JSplitPane();\n        jScrollPane4 = new javax.swing.JScrollPane();\n        bugTree = new javax.swing.JTree();\n        jScrollPane6 = new javax.swing.JScrollPane();\n        sourceTextArea = new javax.swing.JTextArea();\n        jScrollPane5 = new javax.swing.JScrollPane();\n        consoleMessageArea = new javax.swing.JTextArea();\n        jMenuBar1 = new javax.swing.JMenuBar();\n        fileMenu = new javax.swing.JMenu();\n        newProjectItem = new javax.swing.JMenuItem();\n        openProjectItem = new javax.swing.JMenuItem();\n        closeProjectItem = new javax.swing.JMenuItem();\n        jSeparator3 = new javax.swing.JSeparator();\n        exitItem = new javax.swing.JMenuItem();\n        viewMenu = new javax.swing.JMenu();\n        viewConsoleItem = new javax.swing.JCheckBoxMenuItem();\n        helpMenu = new javax.swing.JMenu();\n        aboutItem = new javax.swing.JMenuItem();\n\n        setTitle(\"FindBugs\");\n        addWindowListener(new java.awt.event.WindowAdapter() {\n            public void windowClosing(java.awt.event.WindowEvent evt) {\n                exitForm(evt);\n            }\n            public void windowOpened(java.awt.event.WindowEvent evt) {\n                formWindowOpened(evt);\n            }\n        });\n\n        consoleSplitter.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);\n        consoleSplitter.setResizeWeight(1.0);\n        consoleSplitter.setOneTouchExpandable(true);\n        consoleSplitter.addPropertyChangeListener(new java.beans.PropertyChangeListener() {\n            public void propertyChange(java.beans.PropertyChangeEvent evt) {\n                consoleSplitterPropertyChange(evt);\n            }\n        });\n\n        jScrollPane1.setPreferredSize(new java.awt.Dimension(140, 0));\n        navigatorTree.setModel(createNavigatorTreeModel());\n        jScrollPane1.setViewportView(navigatorTree);\n\n        navigatorViewSplitter.setLeftComponent(jScrollPane1);\n\n        viewPanel.setLayout(new java.awt.CardLayout());\n\n        viewPanel.add(emptyPanel, \"EmptyPanel\");\n\n        viewPanel.add(reportPanel, \"ReportPanel\");\n\n        editProjectPanel.setLayout(new java.awt.GridBagLayout());\n\n        jarFileLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        jarFileLabel.setText(\"Jar file:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 3;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(jarFileLabel, gridBagConstraints);\n\n        jarNameTextField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jarNameTextFieldActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 3;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n        gridBagConstraints.weightx = 1.0;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);\n        editProjectPanel.add(jarNameTextField, gridBagConstraints);\n\n        addJarButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        addJarButton.setText(\"Add\");\n        addJarButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addJarButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 3;\n        gridBagConstraints.gridy = 3;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(addJarButton, gridBagConstraints);\n\n        jarFileListLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        jarFileListLabel.setText(\"Jar Files:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 4;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(jarFileListLabel, gridBagConstraints);\n\n        sourceDirLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        sourceDirLabel.setText(\"Source Dir:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 6;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(sourceDirLabel, gridBagConstraints);\n\n        srcDirTextField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                srcDirTextFieldActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 6;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n        gridBagConstraints.weightx = 1.0;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);\n        editProjectPanel.add(srcDirTextField, gridBagConstraints);\n\n        addSourceDirButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        addSourceDirButton.setText(\"Add\");\n        addSourceDirButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addSourceDirButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 3;\n        gridBagConstraints.gridy = 6;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(addSourceDirButton, gridBagConstraints);\n\n        sourceDirListLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        sourceDirListLabel.setText(\"Source Dirs:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 7;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(sourceDirListLabel, gridBagConstraints);\n\n        removeJarButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        removeJarButton.setText(\"Remove\");\n        removeJarButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeJarButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 3;\n        gridBagConstraints.gridy = 4;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(removeJarButton, gridBagConstraints);\n\n        removeSrcDirButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        removeSrcDirButton.setText(\"Remove\");\n        removeSrcDirButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeSrcDirButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 3;\n        gridBagConstraints.gridy = 7;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(removeSrcDirButton, gridBagConstraints);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 5;\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n        editProjectPanel.add(jSeparator1, gridBagConstraints);\n\n        browseJarButton.setText(\"...\");\n        browseJarButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                browseJarButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 2;\n        gridBagConstraints.gridy = 3;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(browseJarButton, gridBagConstraints);\n\n        browseSrcDirButton.setText(\"...\");\n        browseSrcDirButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                browseSrcDirButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 2;\n        gridBagConstraints.gridy = 6;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(browseSrcDirButton, gridBagConstraints);\n\n        editProjectLabel.setBackground(new java.awt.Color(0, 0, 204));\n        editProjectLabel.setFont(new java.awt.Font(\"Dialog\", 1, 24));\n        editProjectLabel.setForeground(new java.awt.Color(255, 255, 255));\n        editProjectLabel.setText(\"Project\");\n        editProjectLabel.setOpaque(true);\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        editProjectPanel.add(editProjectLabel, gridBagConstraints);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 2;\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n        editProjectPanel.add(jSeparator2, gridBagConstraints);\n\n        findBugsButton.setText(\"Find Bugs!\");\n        findBugsButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                findBugsButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 9;\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n        editProjectPanel.add(findBugsButton, gridBagConstraints);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 8;\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n        editProjectPanel.add(jSeparator4, gridBagConstraints);\n\n        jScrollPane2.setPreferredSize(new java.awt.Dimension(259, 1));\n        jarFileList.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));\n        jarFileList.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        jarFileList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);\n        jScrollPane2.setViewportView(jarFileList);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 4;\n        gridBagConstraints.gridwidth = 2;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.weighty = 0.7;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(jScrollPane2, gridBagConstraints);\n\n        jScrollPane3.setPreferredSize(new java.awt.Dimension(259, 1));\n        sourceDirList.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));\n        sourceDirList.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        sourceDirList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);\n        jScrollPane3.setViewportView(sourceDirList);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 7;\n        gridBagConstraints.gridwidth = 2;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.weighty = 0.3;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(jScrollPane3, gridBagConstraints);\n\n        viewPanel.add(editProjectPanel, \"EditProjectPanel\");\n\n        bugTreePanel.setLayout(new java.awt.GridBagLayout());\n\n        groupByChooser.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                groupByChooserActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 0;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        bugTreePanel.add(groupByChooser, gridBagConstraints);\n\n        groupByLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        groupByLabel.setText(\"Group:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 0;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        bugTreePanel.add(groupByLabel, gridBagConstraints);\n\n        bugTreeSourceViewSplitter.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);\n        bugTreeSourceViewSplitter.setResizeWeight(1.0);\n        bugTreeSourceViewSplitter.setToolTipText(\"null\");\n        bugTreeSourceViewSplitter.setOneTouchExpandable(true);\n        bugTree.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mousePressed(java.awt.event.MouseEvent evt) {\n                bugTreeMousePressed(evt);\n            }\n        });\n\n        jScrollPane4.setViewportView(bugTree);\n\n        bugTreeSourceViewSplitter.setLeftComponent(jScrollPane4);\n\n        jScrollPane6.setPreferredSize(new java.awt.Dimension(0, 100));\n        sourceTextArea.setPreferredSize(new java.awt.Dimension(0, 5));\n        jScrollPane6.setViewportView(sourceTextArea);\n\n        bugTreeSourceViewSplitter.setRightComponent(jScrollPane6);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 1;\n        gridBagConstraints.gridwidth = 2;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.weightx = 1.0;\n        gridBagConstraints.weighty = 1.0;\n        bugTreePanel.add(bugTreeSourceViewSplitter, gridBagConstraints);\n\n        viewPanel.add(bugTreePanel, \"BugTree\");\n\n        navigatorViewSplitter.setRightComponent(viewPanel);\n\n        consoleSplitter.setTopComponent(navigatorViewSplitter);\n\n        jScrollPane5.setMinimumSize(new java.awt.Dimension(22, 100));\n        jScrollPane5.setPreferredSize(new java.awt.Dimension(0, 100));\n        consoleMessageArea.setBackground(new java.awt.Color(204, 204, 204));\n        consoleMessageArea.setEditable(false);\n        consoleMessageArea.setFont(new java.awt.Font(\"Courier\", 0, 12));\n        consoleMessageArea.setMinimumSize(new java.awt.Dimension(0, 0));\n        consoleMessageArea.setPreferredSize(new java.awt.Dimension(0, 5));\n        jScrollPane5.setViewportView(consoleMessageArea);\n\n        consoleSplitter.setBottomComponent(jScrollPane5);\n\n        getContentPane().add(consoleSplitter, java.awt.BorderLayout.CENTER);\n\n        jMenuBar1.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        fileMenu.setMnemonic('F');\n        fileMenu.setText(\"File\");\n        fileMenu.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        newProjectItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        newProjectItem.setMnemonic('N');\n        newProjectItem.setText(\"New Project\");\n        newProjectItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newProjectItemActionPerformed(evt);\n            }\n        });\n\n        fileMenu.add(newProjectItem);\n\n        openProjectItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        openProjectItem.setMnemonic('O');\n        openProjectItem.setText(\"Open Project\");\n        fileMenu.add(openProjectItem);\n\n        closeProjectItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        closeProjectItem.setMnemonic('C');\n        closeProjectItem.setText(\"Close Project\");\n        fileMenu.add(closeProjectItem);\n\n        fileMenu.add(jSeparator3);\n\n        exitItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        exitItem.setMnemonic('X');\n        exitItem.setText(\"Exit\");\n        exitItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                exitItemActionPerformed(evt);\n            }\n        });\n\n        fileMenu.add(exitItem);\n\n        jMenuBar1.add(fileMenu);\n\n        viewMenu.setMnemonic('V');\n        viewMenu.setText(\"View\");\n        viewMenu.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        viewConsoleItem.setMnemonic('C');\n        viewConsoleItem.setSelected(true);\n        viewConsoleItem.setText(\"Console\");\n        viewConsoleItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                viewConsoleItemActionPerformed(evt);\n            }\n        });\n\n        viewMenu.add(viewConsoleItem);\n\n        jMenuBar1.add(viewMenu);\n\n        helpMenu.setMnemonic('H');\n        helpMenu.setText(\"Help\");\n        helpMenu.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        aboutItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        aboutItem.setMnemonic('A');\n        aboutItem.setText(\"About\");\n        aboutItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                aboutItemActionPerformed(evt);\n            }\n        });\n\n        helpMenu.add(aboutItem);\n\n        jMenuBar1.add(helpMenu);\n\n        setJMenuBar(jMenuBar1);\n\n        pack();\n    }","commit_id":"353f1a8939da0cce807109be63c2a31a065a8ba9","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private void consoleSplitterPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_consoleSplitterPropertyChange\n\t// The idea here is to keep the View:Console checkbox up to date with\n\t// the real location of the divider of the consoleSplitter.\n\t// What we want is if any part of the console window is visible,\n\t// then the checkbox should be checked.\n\tString propertyName = evt.getPropertyName();\n\tif (propertyName.equals(JSplitPane.DIVIDER_LOCATION_PROPERTY)) {\n\t    Integer location = (Integer) evt.getNewValue();\n\t    /*\n\t    if (location.intValue() > consoleSplitter.getMaximumDividerLocation())\n\t\tthrow new IllegalStateException(\"JSplitPane is stupid\");\n\t    viewConsoleItem.setSelected(location.intValue() != consoleSplitter.getMaximumDividerLocation());\n\t     */\n\t    // FIXME - I need to find out the REAL maximum divider value.\n\t    // getMaximumDividerLocation() is based on minimum component sizes,\n\t    // but it may be violated if the user clicks the little \"contracter\"\n\t    // button put in place when the \"one touch expandable\" property was set.\n\t    // Here is a nasty hack which makes a guess based on the current size\n\t    // of the frame's content pane.\n\t    int contentPaneHeight = this.getContentPane().getHeight();\n\t    int hopefullyMaxDivider = contentPaneHeight - (consoleSplitter.getDividerSize() + DIVIDER_FUDGE);\n/*\n\t    System.out.println(\"pane height = \" + contentPaneHeight + \", dividerLoc=\" + location.intValue() +\n\t\t\", hopefullyMaxDivider=\" + hopefullyMaxDivider);\n */\n\t    \n\t    viewConsoleItem.setSelected(location.intValue() < hopefullyMaxDivider);\n\t}\n    }","id":63625,"modified_method":"private void consoleSplitterPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_consoleSplitterPropertyChange\n\t// The idea here is to keep the View:Console checkbox up to date with\n\t// the real location of the divider of the consoleSplitter.\n\t// What we want is if any part of the console window is visible,\n\t// then the checkbox should be checked.\n\tString propertyName = evt.getPropertyName();\n\tif (propertyName.equals(JSplitPane.DIVIDER_LOCATION_PROPERTY)) {\n            boolean isMaximized = isSplitterMaximized(consoleSplitter, evt);\n\t    viewConsoleItem.setSelected(!isMaximized);\n\t}\n    }","commit_id":"7d772c177466a59304413107b7d6321828b96e63","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    private void initComponents() {//GEN-BEGIN:initComponents\n        java.awt.GridBagConstraints gridBagConstraints;\n\n        consoleSplitter = new javax.swing.JSplitPane();\n        navigatorViewSplitter = new javax.swing.JSplitPane();\n        navigatorScrollPane = new javax.swing.JScrollPane();\n        navigatorTree = new javax.swing.JTree();\n        viewPanel = new javax.swing.JPanel();\n        emptyPanel = new javax.swing.JPanel();\n        reportPanel = new javax.swing.JPanel();\n        editProjectPanel = new javax.swing.JPanel();\n        jarFileLabel = new javax.swing.JLabel();\n        jarNameTextField = new javax.swing.JTextField();\n        addJarButton = new javax.swing.JButton();\n        jarFileListLabel = new javax.swing.JLabel();\n        sourceDirLabel = new javax.swing.JLabel();\n        srcDirTextField = new javax.swing.JTextField();\n        addSourceDirButton = new javax.swing.JButton();\n        sourceDirListLabel = new javax.swing.JLabel();\n        removeJarButton = new javax.swing.JButton();\n        removeSrcDirButton = new javax.swing.JButton();\n        jSeparator1 = new javax.swing.JSeparator();\n        browseJarButton = new javax.swing.JButton();\n        browseSrcDirButton = new javax.swing.JButton();\n        editProjectLabel = new javax.swing.JLabel();\n        jSeparator2 = new javax.swing.JSeparator();\n        findBugsButton = new javax.swing.JButton();\n        jSeparator4 = new javax.swing.JSeparator();\n        jarFileListScrollPane = new javax.swing.JScrollPane();\n        jarFileList = new javax.swing.JList();\n        sourceDirListScrollPane = new javax.swing.JScrollPane();\n        sourceDirList = new javax.swing.JList();\n        bugTreePanel = new javax.swing.JPanel();\n        groupByChooser = new javax.swing.JComboBox();\n        groupByLabel = new javax.swing.JLabel();\n        bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();\n        bugTreeScrollPane = new javax.swing.JScrollPane();\n        bugTree = new javax.swing.JTree();\n        bugDetailsTabbedPane = new javax.swing.JTabbedPane();\n        sourceTextAreaScrollPane = new javax.swing.JScrollPane();\n        sourceTextArea = new javax.swing.JTextArea();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        jEditorPane1 = new javax.swing.JEditorPane();\n        consoleScrollPane = new javax.swing.JScrollPane();\n        consoleMessageArea = new javax.swing.JTextArea();\n        theMenuBar = new javax.swing.JMenuBar();\n        fileMenu = new javax.swing.JMenu();\n        newProjectItem = new javax.swing.JMenuItem();\n        openProjectItem = new javax.swing.JMenuItem();\n        saveProjectItem = new javax.swing.JMenuItem();\n        closeProjectItem = new javax.swing.JMenuItem();\n        jSeparator3 = new javax.swing.JSeparator();\n        exitItem = new javax.swing.JMenuItem();\n        viewMenu = new javax.swing.JMenu();\n        viewConsoleItem = new javax.swing.JCheckBoxMenuItem();\n        helpMenu = new javax.swing.JMenu();\n        aboutItem = new javax.swing.JMenuItem();\n\n        setTitle(\"FindBugs\");\n        addWindowListener(new java.awt.event.WindowAdapter() {\n            public void windowClosing(java.awt.event.WindowEvent evt) {\n                exitForm(evt);\n            }\n            public void windowOpened(java.awt.event.WindowEvent evt) {\n                formWindowOpened(evt);\n            }\n        });\n\n        consoleSplitter.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);\n        consoleSplitter.setResizeWeight(1.0);\n        consoleSplitter.setOneTouchExpandable(true);\n        consoleSplitter.addPropertyChangeListener(new java.beans.PropertyChangeListener() {\n            public void propertyChange(java.beans.PropertyChangeEvent evt) {\n                consoleSplitterPropertyChange(evt);\n            }\n        });\n\n        navigatorScrollPane.setPreferredSize(new java.awt.Dimension(140, 0));\n        navigatorTree.setModel(createNavigatorTreeModel());\n        navigatorScrollPane.setViewportView(navigatorTree);\n\n        navigatorViewSplitter.setLeftComponent(navigatorScrollPane);\n\n        viewPanel.setLayout(new java.awt.CardLayout());\n\n        viewPanel.add(emptyPanel, \"EmptyPanel\");\n\n        viewPanel.add(reportPanel, \"ReportPanel\");\n\n        editProjectPanel.setLayout(new java.awt.GridBagLayout());\n\n        jarFileLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        jarFileLabel.setText(\"Jar file:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 3;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(jarFileLabel, gridBagConstraints);\n\n        jarNameTextField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jarNameTextFieldActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 3;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n        gridBagConstraints.weightx = 1.0;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);\n        editProjectPanel.add(jarNameTextField, gridBagConstraints);\n\n        addJarButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        addJarButton.setText(\"Add\");\n        addJarButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addJarButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 3;\n        gridBagConstraints.gridy = 3;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(addJarButton, gridBagConstraints);\n\n        jarFileListLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        jarFileListLabel.setText(\"Jar Files:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 4;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(jarFileListLabel, gridBagConstraints);\n\n        sourceDirLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        sourceDirLabel.setText(\"Source Dir:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 6;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(sourceDirLabel, gridBagConstraints);\n\n        srcDirTextField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                srcDirTextFieldActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 6;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n        gridBagConstraints.weightx = 1.0;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);\n        editProjectPanel.add(srcDirTextField, gridBagConstraints);\n\n        addSourceDirButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        addSourceDirButton.setText(\"Add\");\n        addSourceDirButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addSourceDirButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 3;\n        gridBagConstraints.gridy = 6;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(addSourceDirButton, gridBagConstraints);\n\n        sourceDirListLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        sourceDirListLabel.setText(\"Source Dirs:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 7;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(sourceDirListLabel, gridBagConstraints);\n\n        removeJarButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        removeJarButton.setText(\"Remove\");\n        removeJarButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeJarButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 3;\n        gridBagConstraints.gridy = 4;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(removeJarButton, gridBagConstraints);\n\n        removeSrcDirButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        removeSrcDirButton.setText(\"Remove\");\n        removeSrcDirButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeSrcDirButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 3;\n        gridBagConstraints.gridy = 7;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(removeSrcDirButton, gridBagConstraints);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 5;\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n        editProjectPanel.add(jSeparator1, gridBagConstraints);\n\n        browseJarButton.setText(\"...\");\n        browseJarButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                browseJarButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 2;\n        gridBagConstraints.gridy = 3;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(browseJarButton, gridBagConstraints);\n\n        browseSrcDirButton.setText(\"...\");\n        browseSrcDirButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                browseSrcDirButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 2;\n        gridBagConstraints.gridy = 6;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(browseSrcDirButton, gridBagConstraints);\n\n        editProjectLabel.setBackground(new java.awt.Color(0, 0, 204));\n        editProjectLabel.setFont(new java.awt.Font(\"Dialog\", 1, 24));\n        editProjectLabel.setForeground(new java.awt.Color(255, 255, 255));\n        editProjectLabel.setText(\"Project\");\n        editProjectLabel.setOpaque(true);\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        editProjectPanel.add(editProjectLabel, gridBagConstraints);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 2;\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n        editProjectPanel.add(jSeparator2, gridBagConstraints);\n\n        findBugsButton.setText(\"Find Bugs!\");\n        findBugsButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                findBugsButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 9;\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n        editProjectPanel.add(findBugsButton, gridBagConstraints);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 8;\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n        editProjectPanel.add(jSeparator4, gridBagConstraints);\n\n        jarFileListScrollPane.setPreferredSize(new java.awt.Dimension(259, 1));\n        jarFileList.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));\n        jarFileList.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        jarFileList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);\n        jarFileListScrollPane.setViewportView(jarFileList);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 4;\n        gridBagConstraints.gridwidth = 2;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.weighty = 0.7;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(jarFileListScrollPane, gridBagConstraints);\n\n        sourceDirListScrollPane.setPreferredSize(new java.awt.Dimension(259, 1));\n        sourceDirList.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));\n        sourceDirList.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        sourceDirList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);\n        sourceDirListScrollPane.setViewportView(sourceDirList);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 7;\n        gridBagConstraints.gridwidth = 2;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.weighty = 0.3;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(sourceDirListScrollPane, gridBagConstraints);\n\n        viewPanel.add(editProjectPanel, \"EditProjectPanel\");\n\n        bugTreePanel.setLayout(new java.awt.GridBagLayout());\n\n        groupByChooser.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                groupByChooserActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 0;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        bugTreePanel.add(groupByChooser, gridBagConstraints);\n\n        groupByLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        groupByLabel.setText(\"Group:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 0;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        bugTreePanel.add(groupByLabel, gridBagConstraints);\n\n        bugTreeBugDetailsSplitter.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);\n        bugTreeBugDetailsSplitter.setResizeWeight(1.0);\n        bugTreeBugDetailsSplitter.setOneTouchExpandable(true);\n        bugTreeScrollPane.setViewportView(bugTree);\n\n        bugTreeBugDetailsSplitter.setLeftComponent(bugTreeScrollPane);\n\n        sourceTextAreaScrollPane.setMinimumSize(new java.awt.Dimension(22, 180));\n        sourceTextAreaScrollPane.setPreferredSize(new java.awt.Dimension(0, 100));\n        sourceTextArea.setEditable(false);\n        sourceTextArea.setFont(new java.awt.Font(\"Lucida Sans Typewriter\", 0, 12));\n        sourceTextAreaScrollPane.setViewportView(sourceTextArea);\n\n        bugDetailsTabbedPane.addTab(\"Source code\", sourceTextAreaScrollPane);\n\n        jScrollPane1.setViewportView(jEditorPane1);\n\n        bugDetailsTabbedPane.addTab(\"Details\", jScrollPane1);\n\n        bugTreeBugDetailsSplitter.setRightComponent(bugDetailsTabbedPane);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 1;\n        gridBagConstraints.gridwidth = 2;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.weightx = 1.0;\n        gridBagConstraints.weighty = 1.0;\n        bugTreePanel.add(bugTreeBugDetailsSplitter, gridBagConstraints);\n\n        viewPanel.add(bugTreePanel, \"BugTree\");\n\n        navigatorViewSplitter.setRightComponent(viewPanel);\n\n        consoleSplitter.setTopComponent(navigatorViewSplitter);\n\n        consoleScrollPane.setMinimumSize(new java.awt.Dimension(22, 100));\n        consoleScrollPane.setPreferredSize(new java.awt.Dimension(0, 100));\n        consoleMessageArea.setBackground(new java.awt.Color(204, 204, 204));\n        consoleMessageArea.setEditable(false);\n        consoleMessageArea.setFont(new java.awt.Font(\"Lucida Sans Typewriter\", 0, 12));\n        consoleMessageArea.setMinimumSize(new java.awt.Dimension(0, 0));\n        consoleMessageArea.setAutoscrolls(false);\n        consoleScrollPane.setViewportView(consoleMessageArea);\n\n        consoleSplitter.setBottomComponent(consoleScrollPane);\n\n        getContentPane().add(consoleSplitter, java.awt.BorderLayout.CENTER);\n\n        theMenuBar.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        fileMenu.setMnemonic('F');\n        fileMenu.setText(\"File\");\n        fileMenu.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        newProjectItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        newProjectItem.setMnemonic('N');\n        newProjectItem.setText(\"New Project\");\n        newProjectItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newProjectItemActionPerformed(evt);\n            }\n        });\n\n        fileMenu.add(newProjectItem);\n\n        openProjectItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        openProjectItem.setMnemonic('O');\n        openProjectItem.setText(\"Open Project\");\n        openProjectItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                openProjectItemActionPerformed(evt);\n            }\n        });\n\n        fileMenu.add(openProjectItem);\n\n        saveProjectItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        saveProjectItem.setMnemonic('S');\n        saveProjectItem.setText(\"Save project\");\n        saveProjectItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                saveProjectItemActionPerformed(evt);\n            }\n        });\n\n        fileMenu.add(saveProjectItem);\n\n        closeProjectItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        closeProjectItem.setMnemonic('C');\n        closeProjectItem.setText(\"Close Project\");\n        fileMenu.add(closeProjectItem);\n\n        fileMenu.add(jSeparator3);\n\n        exitItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        exitItem.setMnemonic('X');\n        exitItem.setText(\"Exit\");\n        exitItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                exitItemActionPerformed(evt);\n            }\n        });\n\n        fileMenu.add(exitItem);\n\n        theMenuBar.add(fileMenu);\n\n        viewMenu.setMnemonic('V');\n        viewMenu.setText(\"View\");\n        viewMenu.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        viewConsoleItem.setMnemonic('C');\n        viewConsoleItem.setSelected(true);\n        viewConsoleItem.setText(\"Console\");\n        viewConsoleItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                viewConsoleItemActionPerformed(evt);\n            }\n        });\n\n        viewMenu.add(viewConsoleItem);\n\n        theMenuBar.add(viewMenu);\n\n        helpMenu.setMnemonic('H');\n        helpMenu.setText(\"Help\");\n        helpMenu.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        aboutItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        aboutItem.setMnemonic('A');\n        aboutItem.setText(\"About\");\n        aboutItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                aboutItemActionPerformed(evt);\n            }\n        });\n\n        helpMenu.add(aboutItem);\n\n        theMenuBar.add(helpMenu);\n\n        setJMenuBar(theMenuBar);\n\n        pack();\n    }","id":63626,"modified_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    private void initComponents() {//GEN-BEGIN:initComponents\n        java.awt.GridBagConstraints gridBagConstraints;\n\n        consoleSplitter = new javax.swing.JSplitPane();\n        navigatorViewSplitter = new javax.swing.JSplitPane();\n        navigatorScrollPane = new javax.swing.JScrollPane();\n        navigatorTree = new javax.swing.JTree();\n        viewPanel = new javax.swing.JPanel();\n        emptyPanel = new javax.swing.JPanel();\n        reportPanel = new javax.swing.JPanel();\n        editProjectPanel = new javax.swing.JPanel();\n        jarFileLabel = new javax.swing.JLabel();\n        jarNameTextField = new javax.swing.JTextField();\n        addJarButton = new javax.swing.JButton();\n        jarFileListLabel = new javax.swing.JLabel();\n        sourceDirLabel = new javax.swing.JLabel();\n        srcDirTextField = new javax.swing.JTextField();\n        addSourceDirButton = new javax.swing.JButton();\n        sourceDirListLabel = new javax.swing.JLabel();\n        removeJarButton = new javax.swing.JButton();\n        removeSrcDirButton = new javax.swing.JButton();\n        jSeparator1 = new javax.swing.JSeparator();\n        browseJarButton = new javax.swing.JButton();\n        browseSrcDirButton = new javax.swing.JButton();\n        editProjectLabel = new javax.swing.JLabel();\n        jSeparator2 = new javax.swing.JSeparator();\n        findBugsButton = new javax.swing.JButton();\n        jSeparator4 = new javax.swing.JSeparator();\n        jarFileListScrollPane = new javax.swing.JScrollPane();\n        jarFileList = new javax.swing.JList();\n        sourceDirListScrollPane = new javax.swing.JScrollPane();\n        sourceDirList = new javax.swing.JList();\n        bugTreePanel = new javax.swing.JPanel();\n        groupByChooser = new javax.swing.JComboBox();\n        groupByLabel = new javax.swing.JLabel();\n        bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();\n        bugTreeScrollPane = new javax.swing.JScrollPane();\n        bugTree = new javax.swing.JTree();\n        bugDetailsTabbedPane = new javax.swing.JTabbedPane();\n        bugDescriptionScrollPane = new javax.swing.JScrollPane();\n        bugDescriptionEditorPane = new javax.swing.JEditorPane();\n        sourceTextAreaScrollPane = new javax.swing.JScrollPane();\n        sourceTextArea = new javax.swing.JTextArea();\n        consoleScrollPane = new javax.swing.JScrollPane();\n        consoleMessageArea = new javax.swing.JTextArea();\n        theMenuBar = new javax.swing.JMenuBar();\n        fileMenu = new javax.swing.JMenu();\n        newProjectItem = new javax.swing.JMenuItem();\n        openProjectItem = new javax.swing.JMenuItem();\n        saveProjectItem = new javax.swing.JMenuItem();\n        closeProjectItem = new javax.swing.JMenuItem();\n        jSeparator3 = new javax.swing.JSeparator();\n        exitItem = new javax.swing.JMenuItem();\n        viewMenu = new javax.swing.JMenu();\n        viewConsoleItem = new javax.swing.JCheckBoxMenuItem();\n        viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();\n        helpMenu = new javax.swing.JMenu();\n        aboutItem = new javax.swing.JMenuItem();\n\n        setTitle(\"FindBugs\");\n        addWindowListener(new java.awt.event.WindowAdapter() {\n            public void windowClosing(java.awt.event.WindowEvent evt) {\n                exitForm(evt);\n            }\n            public void windowOpened(java.awt.event.WindowEvent evt) {\n                formWindowOpened(evt);\n            }\n        });\n\n        consoleSplitter.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);\n        consoleSplitter.setResizeWeight(1.0);\n        consoleSplitter.setOneTouchExpandable(true);\n        consoleSplitter.addPropertyChangeListener(new java.beans.PropertyChangeListener() {\n            public void propertyChange(java.beans.PropertyChangeEvent evt) {\n                consoleSplitterPropertyChange(evt);\n            }\n        });\n\n        navigatorScrollPane.setPreferredSize(new java.awt.Dimension(140, 0));\n        navigatorTree.setModel(createNavigatorTreeModel());\n        navigatorScrollPane.setViewportView(navigatorTree);\n\n        navigatorViewSplitter.setLeftComponent(navigatorScrollPane);\n\n        viewPanel.setLayout(new java.awt.CardLayout());\n\n        viewPanel.add(emptyPanel, \"EmptyPanel\");\n\n        viewPanel.add(reportPanel, \"ReportPanel\");\n\n        editProjectPanel.setLayout(new java.awt.GridBagLayout());\n\n        jarFileLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        jarFileLabel.setText(\"Jar file:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 3;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(jarFileLabel, gridBagConstraints);\n\n        jarNameTextField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jarNameTextFieldActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 3;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n        gridBagConstraints.weightx = 1.0;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);\n        editProjectPanel.add(jarNameTextField, gridBagConstraints);\n\n        addJarButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        addJarButton.setText(\"Add\");\n        addJarButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addJarButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 3;\n        gridBagConstraints.gridy = 3;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(addJarButton, gridBagConstraints);\n\n        jarFileListLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        jarFileListLabel.setText(\"Jar Files:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 4;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(jarFileListLabel, gridBagConstraints);\n\n        sourceDirLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        sourceDirLabel.setText(\"Source Dir:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 6;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(sourceDirLabel, gridBagConstraints);\n\n        srcDirTextField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                srcDirTextFieldActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 6;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n        gridBagConstraints.weightx = 1.0;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);\n        editProjectPanel.add(srcDirTextField, gridBagConstraints);\n\n        addSourceDirButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        addSourceDirButton.setText(\"Add\");\n        addSourceDirButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addSourceDirButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 3;\n        gridBagConstraints.gridy = 6;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(addSourceDirButton, gridBagConstraints);\n\n        sourceDirListLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        sourceDirListLabel.setText(\"Source Dirs:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 7;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(sourceDirListLabel, gridBagConstraints);\n\n        removeJarButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        removeJarButton.setText(\"Remove\");\n        removeJarButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeJarButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 3;\n        gridBagConstraints.gridy = 4;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(removeJarButton, gridBagConstraints);\n\n        removeSrcDirButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        removeSrcDirButton.setText(\"Remove\");\n        removeSrcDirButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeSrcDirButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 3;\n        gridBagConstraints.gridy = 7;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(removeSrcDirButton, gridBagConstraints);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 5;\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n        editProjectPanel.add(jSeparator1, gridBagConstraints);\n\n        browseJarButton.setText(\"...\");\n        browseJarButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                browseJarButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 2;\n        gridBagConstraints.gridy = 3;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(browseJarButton, gridBagConstraints);\n\n        browseSrcDirButton.setText(\"...\");\n        browseSrcDirButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                browseSrcDirButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 2;\n        gridBagConstraints.gridy = 6;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(browseSrcDirButton, gridBagConstraints);\n\n        editProjectLabel.setBackground(new java.awt.Color(0, 0, 204));\n        editProjectLabel.setFont(new java.awt.Font(\"Dialog\", 1, 24));\n        editProjectLabel.setForeground(new java.awt.Color(255, 255, 255));\n        editProjectLabel.setText(\"Project\");\n        editProjectLabel.setOpaque(true);\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        editProjectPanel.add(editProjectLabel, gridBagConstraints);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 2;\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n        editProjectPanel.add(jSeparator2, gridBagConstraints);\n\n        findBugsButton.setText(\"Find Bugs!\");\n        findBugsButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                findBugsButtonActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 9;\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n        editProjectPanel.add(findBugsButton, gridBagConstraints);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 8;\n        gridBagConstraints.gridwidth = 4;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n        editProjectPanel.add(jSeparator4, gridBagConstraints);\n\n        jarFileListScrollPane.setPreferredSize(new java.awt.Dimension(259, 1));\n        jarFileList.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));\n        jarFileList.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        jarFileList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);\n        jarFileListScrollPane.setViewportView(jarFileList);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 4;\n        gridBagConstraints.gridwidth = 2;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.weighty = 0.7;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(jarFileListScrollPane, gridBagConstraints);\n\n        sourceDirListScrollPane.setPreferredSize(new java.awt.Dimension(259, 1));\n        sourceDirList.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));\n        sourceDirList.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        sourceDirList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);\n        sourceDirListScrollPane.setViewportView(sourceDirList);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 7;\n        gridBagConstraints.gridwidth = 2;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.weighty = 0.3;\n        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n        editProjectPanel.add(sourceDirListScrollPane, gridBagConstraints);\n\n        viewPanel.add(editProjectPanel, \"EditProjectPanel\");\n\n        bugTreePanel.setLayout(new java.awt.GridBagLayout());\n\n        groupByChooser.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                groupByChooserActionPerformed(evt);\n            }\n        });\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 1;\n        gridBagConstraints.gridy = 0;\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n        bugTreePanel.add(groupByChooser, gridBagConstraints);\n\n        groupByLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        groupByLabel.setText(\"Group:\");\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 0;\n        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 0);\n        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n        bugTreePanel.add(groupByLabel, gridBagConstraints);\n\n        bugTreeBugDetailsSplitter.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);\n        bugTreeBugDetailsSplitter.setResizeWeight(1.0);\n        bugTreeBugDetailsSplitter.setOneTouchExpandable(true);\n        bugTreeScrollPane.setViewportView(bugTree);\n\n        bugTreeBugDetailsSplitter.setLeftComponent(bugTreeScrollPane);\n\n        bugDescriptionScrollPane.setViewportView(bugDescriptionEditorPane);\n\n        bugDetailsTabbedPane.addTab(\"Details\", bugDescriptionScrollPane);\n\n        sourceTextAreaScrollPane.setMinimumSize(new java.awt.Dimension(22, 180));\n        sourceTextAreaScrollPane.setPreferredSize(new java.awt.Dimension(0, 100));\n        sourceTextArea.setEditable(false);\n        sourceTextArea.setFont(new java.awt.Font(\"Lucida Sans Typewriter\", 0, 12));\n        sourceTextAreaScrollPane.setViewportView(sourceTextArea);\n\n        bugDetailsTabbedPane.addTab(\"Source code\", sourceTextAreaScrollPane);\n\n        bugTreeBugDetailsSplitter.setRightComponent(bugDetailsTabbedPane);\n\n        gridBagConstraints = new java.awt.GridBagConstraints();\n        gridBagConstraints.gridx = 0;\n        gridBagConstraints.gridy = 1;\n        gridBagConstraints.gridwidth = 2;\n        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n        gridBagConstraints.weightx = 1.0;\n        gridBagConstraints.weighty = 1.0;\n        bugTreePanel.add(bugTreeBugDetailsSplitter, gridBagConstraints);\n\n        viewPanel.add(bugTreePanel, \"BugTree\");\n\n        navigatorViewSplitter.setRightComponent(viewPanel);\n\n        consoleSplitter.setTopComponent(navigatorViewSplitter);\n\n        consoleScrollPane.setMinimumSize(new java.awt.Dimension(22, 100));\n        consoleScrollPane.setPreferredSize(new java.awt.Dimension(0, 100));\n        consoleMessageArea.setBackground(new java.awt.Color(204, 204, 204));\n        consoleMessageArea.setEditable(false);\n        consoleMessageArea.setFont(new java.awt.Font(\"Lucida Sans Typewriter\", 0, 12));\n        consoleMessageArea.setMinimumSize(new java.awt.Dimension(0, 0));\n        consoleMessageArea.setAutoscrolls(false);\n        consoleScrollPane.setViewportView(consoleMessageArea);\n\n        consoleSplitter.setBottomComponent(consoleScrollPane);\n\n        getContentPane().add(consoleSplitter, java.awt.BorderLayout.CENTER);\n\n        theMenuBar.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        fileMenu.setMnemonic('F');\n        fileMenu.setText(\"File\");\n        fileMenu.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        newProjectItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        newProjectItem.setMnemonic('N');\n        newProjectItem.setText(\"New Project\");\n        newProjectItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newProjectItemActionPerformed(evt);\n            }\n        });\n\n        fileMenu.add(newProjectItem);\n\n        openProjectItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        openProjectItem.setMnemonic('O');\n        openProjectItem.setText(\"Open Project\");\n        openProjectItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                openProjectItemActionPerformed(evt);\n            }\n        });\n\n        fileMenu.add(openProjectItem);\n\n        saveProjectItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        saveProjectItem.setMnemonic('S');\n        saveProjectItem.setText(\"Save project\");\n        saveProjectItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                saveProjectItemActionPerformed(evt);\n            }\n        });\n\n        fileMenu.add(saveProjectItem);\n\n        closeProjectItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        closeProjectItem.setMnemonic('C');\n        closeProjectItem.setText(\"Close Project\");\n        fileMenu.add(closeProjectItem);\n\n        fileMenu.add(jSeparator3);\n\n        exitItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        exitItem.setMnemonic('X');\n        exitItem.setText(\"Exit\");\n        exitItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                exitItemActionPerformed(evt);\n            }\n        });\n\n        fileMenu.add(exitItem);\n\n        theMenuBar.add(fileMenu);\n\n        viewMenu.setMnemonic('V');\n        viewMenu.setText(\"View\");\n        viewMenu.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        viewConsoleItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        viewConsoleItem.setMnemonic('C');\n        viewConsoleItem.setSelected(true);\n        viewConsoleItem.setText(\"Console\");\n        viewConsoleItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                viewConsoleItemActionPerformed(evt);\n            }\n        });\n\n        viewMenu.add(viewConsoleItem);\n\n        viewBugDetailsItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        viewBugDetailsItem.setMnemonic('D');\n        viewBugDetailsItem.setSelected(true);\n        viewBugDetailsItem.setText(\"Bug Details\");\n        viewMenu.add(viewBugDetailsItem);\n\n        theMenuBar.add(viewMenu);\n\n        helpMenu.setMnemonic('H');\n        helpMenu.setText(\"Help\");\n        helpMenu.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        aboutItem.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n        aboutItem.setMnemonic('A');\n        aboutItem.setText(\"About\");\n        aboutItem.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                aboutItemActionPerformed(evt);\n            }\n        });\n\n        helpMenu.add(aboutItem);\n\n        theMenuBar.add(helpMenu);\n\n        setJMenuBar(theMenuBar);\n\n        pack();\n    }","commit_id":"7d772c177466a59304413107b7d6321828b96e63","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n     * @return the enabled/disabled states of all FileListReportModules\n     */\n    Map<FileReportModule, Boolean> getFileListModuleStates() {\n        Map<FileReportModule, Boolean> fileModuleStates = new LinkedHashMap<>();\n        for (Entry<ReportModule, Boolean> module : moduleStates.entrySet()) {\n            if (module.getKey() instanceof FileReportModule) {\n                fileModuleStates.put((FileReportModule) module.getKey(), module.getValue());\n            }\n        }\n        return fileModuleStates;\n    }","id":63627,"modified_method":"/**\n     * Get the selection status of the FileReportModules.\n     * \n     * @return \n     */\n    Map<FileReportModule, Boolean> getFileModuleStates() {\n        Map<FileReportModule, Boolean> reportModuleStates = new LinkedHashMap<>();\n        ReportModule mod = getSelectedModule();\n        if (fileModules.contains(mod)) {\n            reportModuleStates.put((FileReportModule) mod, Boolean.TRUE);\n        }\n        return reportModuleStates;\n    }","commit_id":"1f153727db6a718a840a75a5bd8a45cc4c89464c","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * @return the enabled/disabled states of all TableReportModules\n     */\n    Map<TableReportModule, Boolean> getTableModuleStates() {\n        Map<TableReportModule, Boolean> tableModuleStates = new LinkedHashMap<>();\n        for (Entry<ReportModule, Boolean> module : moduleStates.entrySet()) {\n            if (module.getKey() instanceof TableReportModule) {\n                tableModuleStates.put((TableReportModule) module.getKey(), module.getValue());\n            }\n        }\n        return tableModuleStates;\n    }","id":63628,"modified_method":"/**\n     * Get the Selection status of the TableModules.\n     * \n     * @return \n     */\n    Map<TableReportModule, Boolean> getTableModuleStates() {\n        Map<TableReportModule, Boolean> reportModuleStates = new LinkedHashMap<>();\n        ReportModule mod = getSelectedModule();\n        if (tableModules.contains(mod)) {\n            reportModuleStates.put((TableReportModule) mod, Boolean.TRUE);\n        }\n        return reportModuleStates;\n    }","commit_id":"1f153727db6a718a840a75a5bd8a45cc4c89464c","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Creates new form ReportVisualPanel1\n     */\n    public ReportVisualPanel1(ReportWizardPanel1 wizPanel) {\n        moduleStates = new LinkedHashMap<>();\n        initComponents();\n        initModules();\n        this.wizPanel = wizPanel;\n        configurationPanel.setLayout(new BorderLayout());\n        descriptionTextPane.setEditable(false);\n        modulesTable.setRowSelectionInterval(0, 0);\n    }","id":63629,"modified_method":"/**\n     * Creates new form ReportVisualPanel1\n     */\n    public ReportVisualPanel1(ReportWizardPanel1 wizPanel) {\n        this.wizPanel = wizPanel;\n        initComponents();\n        configurationPanel.setLayout(new BorderLayout());\n        descriptionTextPane.setEditable(false);\n        initModules();\n    }","commit_id":"1f153727db6a718a840a75a5bd8a45cc4c89464c","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void initModules() {\n        for (ReportModule module : Lookup.getDefault().lookupAll(TableReportModule.class)) {\n            if (module.getName().equals(\"Results - HTML\")) {\n                moduleStates.put(module, Boolean.TRUE);\n            } else {\n                moduleStates.put(module, Boolean.FALSE);\n            }\n        }\n        for (ReportModule module : Lookup.getDefault().lookupAll(GeneralReportModule.class)) {\n            moduleStates.put(module, Boolean.FALSE);\n        }\n        for (ReportModule module : Lookup.getDefault().lookupAll(FileReportModule.class)) {\n            moduleStates.put(module, Boolean.FALSE);\n        }\n        \n        modules.addAll(moduleStates.keySet());\n        Collections.sort(modules, new Comparator<ReportModule>() {\n            @Override\n            public int compare(ReportModule rm1, ReportModule rm2) {\n                return rm1.getName().compareTo(rm2.getName());\n            }\n            \n        });\n        \n        modulesModel = new ModulesTableModel();\n        modulesListener = new ModuleSelectionListener();\n        modulesTable.setModel(modulesModel);\n        modulesTable.getSelectionModel().addListSelectionListener(modulesListener);\n        modulesTable.setTableHeader(null);\n        modulesTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n        modulesTable.setRowHeight(modulesTable.getRowHeight() + 5);\n        \n        int width = modulesScrollPane.getPreferredSize().width;\n        for (int i = 0; i < modulesTable.getColumnCount(); i++) {\n            TableColumn column = modulesTable.getColumnModel().getColumn(i);\n            if (i == 0) {\n                column.setPreferredWidth(((int) (width * 0.15)));\n            } else {\n                column.setPreferredWidth(((int) (width * 0.84)));\n            }\n        }\n    }","id":63630,"modified_method":"private void initModules() {\n        for (TableReportModule module : Lookup.getDefault().lookupAll(TableReportModule.class)) {\n            tableModules.add(module);\n            modules.add(module);\n        }\n        \n        for (GeneralReportModule module : Lookup.getDefault().lookupAll(GeneralReportModule.class)) {\n            generalModules.add(module);\n            modules.add(module);\n        }\n        \n        for (FileReportModule module : Lookup.getDefault().lookupAll(FileReportModule.class)) {\n            fileModules.add(module);\n            modules.add(module);\n        }\n        \n        Collections.sort(modules, new Comparator<ReportModule>() {\n            @Override\n            public int compare(ReportModule rm1, ReportModule rm2) {\n                return rm1.getName().compareTo(rm2.getName());\n            }\n        });\n        \n        modulesJList.getSelectionModel().addListSelectionListener(this);\n        modulesJList.setCellRenderer(new ModuleCellRenderer());\n        modulesJList.setListData(modules.toArray());\n        selectedIndex = 0;\n        modulesJList.setSelectedIndex(selectedIndex);\n    }","commit_id":"1f153727db6a718a840a75a5bd8a45cc4c89464c","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * @return the enabled/disabled states of all GeneralReportModules\n     */\n    Map<GeneralReportModule, Boolean> getGeneralModuleStates() {\n        Map<GeneralReportModule, Boolean> generalModuleStates = new LinkedHashMap<>();\n        for (Entry<ReportModule, Boolean> module : moduleStates.entrySet()) {\n            if (module.getKey() instanceof GeneralReportModule) {\n                generalModuleStates.put((GeneralReportModule) module.getKey(), module.getValue());\n            }\n        }\n        return generalModuleStates;\n    }","id":63631,"modified_method":"/**\n     * Get the selection status of the GeneralReportModules.\n     * \n     * @return \n     */\n    Map<GeneralReportModule, Boolean> getGeneralModuleStates() {\n        Map<GeneralReportModule, Boolean> reportModuleStates = new LinkedHashMap<>();\n        ReportModule mod = getSelectedModule();\n        if (generalModules.contains(mod)) {\n            reportModuleStates.put((GeneralReportModule) mod, Boolean.TRUE);\n        }\n        return reportModuleStates;\n    }","commit_id":"1f153727db6a718a840a75a5bd8a45cc4c89464c","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        modulesScrollPane = new javax.swing.JScrollPane();\n        modulesTable = new javax.swing.JTable();\n        reportModulesLabel = new javax.swing.JLabel();\n        configurationPanel = new javax.swing.JPanel();\n        descriptionScrollPane = new javax.swing.JScrollPane();\n        descriptionTextPane = new javax.swing.JTextPane();\n\n        setPreferredSize(new java.awt.Dimension(650, 250));\n\n        modulesTable.setBackground(new java.awt.Color(240, 240, 240));\n        modulesTable.setModel(new javax.swing.table.DefaultTableModel(\n            new Object [][] {\n\n            },\n            new String [] {\n\n            }\n        ));\n        modulesTable.setShowHorizontalLines(false);\n        modulesTable.setShowVerticalLines(false);\n        modulesScrollPane.setViewportView(modulesTable);\n\n        org.openide.awt.Mnemonics.setLocalizedText(reportModulesLabel, org.openide.util.NbBundle.getMessage(ReportVisualPanel1.class, \"ReportVisualPanel1.reportModulesLabel.text\")); // NOI18N\n\n        configurationPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(125, 125, 125)));\n\n        javax.swing.GroupLayout configurationPanelLayout = new javax.swing.GroupLayout(configurationPanel);\n        configurationPanel.setLayout(configurationPanelLayout);\n        configurationPanelLayout.setHorizontalGroup(\n            configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 432, Short.MAX_VALUE)\n        );\n        configurationPanelLayout.setVerticalGroup(\n            configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 0, Short.MAX_VALUE)\n        );\n\n        descriptionScrollPane.setBorder(null);\n\n        descriptionTextPane.setBackground(new java.awt.Color(240, 240, 240));\n        descriptionTextPane.setBorder(null);\n        descriptionScrollPane.setViewportView(descriptionTextPane);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(reportModulesLabel)\n                    .addComponent(modulesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(10, 10, 10)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(configurationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addComponent(descriptionScrollPane))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(reportModulesLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(modulesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(configurationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(descriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                .addContainerGap())\n        );\n    }","id":63632,"modified_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        reportModulesLabel = new javax.swing.JLabel();\n        configurationPanel = new javax.swing.JPanel();\n        descriptionScrollPane = new javax.swing.JScrollPane();\n        descriptionTextPane = new javax.swing.JTextPane();\n        modulesScrollPane = new javax.swing.JScrollPane();\n        modulesJList = new javax.swing.JList();\n\n        setPreferredSize(new java.awt.Dimension(650, 250));\n\n        org.openide.awt.Mnemonics.setLocalizedText(reportModulesLabel, org.openide.util.NbBundle.getMessage(ReportVisualPanel1.class, \"ReportVisualPanel1.reportModulesLabel.text\")); // NOI18N\n\n        configurationPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(125, 125, 125)));\n\n        javax.swing.GroupLayout configurationPanelLayout = new javax.swing.GroupLayout(configurationPanel);\n        configurationPanel.setLayout(configurationPanelLayout);\n        configurationPanelLayout.setHorizontalGroup(\n            configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 432, Short.MAX_VALUE)\n        );\n        configurationPanelLayout.setVerticalGroup(\n            configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 168, Short.MAX_VALUE)\n        );\n\n        descriptionScrollPane.setBorder(null);\n\n        descriptionTextPane.setBackground(new java.awt.Color(240, 240, 240));\n        descriptionTextPane.setBorder(null);\n        descriptionScrollPane.setViewportView(descriptionTextPane);\n\n        modulesJList.setBackground(new java.awt.Color(240, 240, 240));\n        modulesJList.setModel(new javax.swing.AbstractListModel() {\n            String[] strings = { \"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\", \"Item 5\" };\n            public int getSize() { return strings.length; }\n            public Object getElementAt(int i) { return strings[i]; }\n        });\n        modulesScrollPane.setViewportView(modulesJList);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(reportModulesLabel)\n                    .addComponent(modulesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(configurationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addComponent(descriptionScrollPane))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(reportModulesLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(configurationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(descriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addComponent(modulesScrollPane))\n                .addContainerGap())\n        );\n    }","commit_id":"1f153727db6a718a840a75a5bd8a45cc4c89464c","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * When the Generate Report button or menu item is selected, open the reporting wizard.\n     * When the wizard is finished, create a ReportGenerator with the wizard information,\n     * and start all necessary reports.\n     */\n    public static void doReportWizard() {\n        WizardDescriptor wiz = new WizardDescriptor(new ReportWizardIterator());\n        wiz.setTitleFormat(new MessageFormat(\"{0} {1}\"));\n        wiz.setTitle(\"Generate Report\");        \n        if (DialogDisplayer.getDefault().notify(wiz) == WizardDescriptor.FINISH_OPTION) {\n            ReportGenerator generator = new ReportGenerator((Map<TableReportModule, Boolean>)wiz.getProperty(\"tableModuleStates\"), \n                    (Map<GeneralReportModule, Boolean>)wiz.getProperty(\"generalModuleStates\"),\n                    (Map<FileReportModule, Boolean>)wiz.getProperty(\"fileListModuleStates\"));\n            generator.generateArtifactTableReports((Map<ARTIFACT_TYPE, Boolean>)wiz.getProperty(\"artifactStates\"), (Map<String, Boolean>)wiz.getProperty(\"tagStates\"));\n            generator.generateFileListReports((Map<FileReportDataTypes, Boolean>)wiz.getProperty(\"fileReportOptions\"));\n            generator.generateGeneralReports();\n            generator.displayProgressPanels();\n        }        \n    }","id":63633,"modified_method":"/**\n     * When the Generate Report button or menu item is selected, open the reporting wizard.\n     * When the wizard is finished, create a ReportGenerator with the wizard information,\n     * and start all necessary reports.\n     */\n    public static void doReportWizard() {\n        WizardDescriptor wiz = new WizardDescriptor(new ReportWizardIterator());\n        wiz.setTitleFormat(new MessageFormat(\"{0} {1}\"));\n        wiz.setTitle(\"Generate Report\");\n        if (DialogDisplayer.getDefault().notify(wiz) == WizardDescriptor.FINISH_OPTION) {\n            ReportGenerator generator = new ReportGenerator((Map<TableReportModule, Boolean>)wiz.getProperty(\"tableModuleStates\"), \n                    (Map<GeneralReportModule, Boolean>)wiz.getProperty(\"generalModuleStates\"),\n                    (Map<FileReportModule, Boolean>)wiz.getProperty(\"fileModuleStates\"));\n            generator.generateArtifactTableReports((Map<ARTIFACT_TYPE, Boolean>)wiz.getProperty(\"artifactStates\"), (Map<String, Boolean>)wiz.getProperty(\"tagStates\"));\n            generator.generateFileListReports((Map<FileReportDataTypes, Boolean>)wiz.getProperty(\"fileReportOptions\"));\n            generator.generateGeneralReports();\n            generator.displayProgressPanels();\n        }        \n    }","commit_id":"1f153727db6a718a840a75a5bd8a45cc4c89464c","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Change which panels will be shown based on the selection of reporting modules.\n     * @param tableConfig true if a TableReportModule was selected\n     * @param fileConfig true if a FileReportModule was selected\n     */\n    private void enableConfigPanels(boolean tableConfig, boolean fileConfig) {\n        if (tableConfig && fileConfig) {\n            panels = Arrays.asList(allConfigPanels);\n        } else if (tableConfig) {\n            // Only TableReport Modules need configuration\n            panels = Arrays.asList(tableConfigPanels);\n        } else {\n            // Only FileReport Modules need configuration.\n            // If no modules need configuration, finish button will be pressed\n            // and we won't get to this function.\n            panels = Arrays.asList(fileConfigPanels);\n        }\n    }","id":63634,"modified_method":"/**\n     * Change which panels will be shown based on the selection of reporting modules.\n     * @param moreConfig true if a GeneralReportModule was selected\n     * @param tableConfig true if a TReportModule was selected\n     */\n    private void enableConfigPanels(boolean generalModule, boolean tableModule) {\n        if (generalModule) {\n            // General Module selected, no additional panels\n        } else if (tableModule) {\n            // Table Module selected, need Artifact Configuration Panel\n            // (ReportWizardPanel2)\n            panels = Arrays.asList(tableConfigPanels);\n        } else {\n            // File Module selected, need File Report Configuration Panel\n            // (ReportWizardFileOptionsPanel)\n            panels = Arrays.asList(fileConfigPanels);\n        }\n    }","commit_id":"1f153727db6a718a840a75a5bd8a45cc4c89464c","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n    public void nextPanel() {\n        if (!hasNext()) {\n            throw new NoSuchElementException();\n        }\n        \n        if(index == 0) {\n            // Update path through configuration panels\n            boolean tableConfig, fileConfig;\n            // These preferences are set in ReportWizardPanel1.storeSettings()\n            tableConfig = NbPreferences.forModule(ReportWizardPanel1.class).getBoolean(\"tableConfig\", true);\n            fileConfig = NbPreferences.forModule(ReportWizardPanel1.class).getBoolean(\"fileConfig\", true);\n            enableConfigPanels(tableConfig, fileConfig);\n        }\n        \n        index++;\n    }","id":63635,"modified_method":"@Override\n    public void nextPanel() {\n        if (!hasNext()) {\n            throw new NoSuchElementException();\n        }\n        \n        if(index == 0) {\n            // Update path through configuration panels\n            boolean generalModule, tableModule;\n            // These preferences are set in ReportWizardPanel1.storeSettings()\n            generalModule = NbPreferences.forModule(ReportWizardPanel1.class).getBoolean(\"generalModule\", true);\n            tableModule = NbPreferences.forModule(ReportWizardPanel1.class).getBoolean(\"tableModule\", true);\n            enableConfigPanels(generalModule, tableModule);\n        }\n        \n        index++;\n    }","commit_id":"1f153727db6a718a840a75a5bd8a45cc4c89464c","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n    public void storeSettings(WizardDescriptor wiz) {\n        Map<TableReportModule, Boolean> tables = getComponent().getTableModuleStates();\n        Map<FileReportModule, Boolean> files = getComponent().getFileListModuleStates();\n        wiz.putProperty(\"tableModuleStates\", tables);\n        wiz.putProperty(\"generalModuleStates\", getComponent().getGeneralModuleStates());\n        wiz.putProperty(\"fileListModuleStates\", files);\n        \n        // Store preferences that WizardIterator will use to determine what \n        // panels need to be shown\n        Preferences prefs = NbPreferences.forModule(ReportWizardPanel1.class);\n        prefs.putBoolean(\"tableConfig\", any(tables.values()));\n        prefs.putBoolean(\"fileConfig\", any(files.values()));\n    }","id":63636,"modified_method":"@Override\n    public void storeSettings(WizardDescriptor wiz) {\n        Map<TableReportModule, Boolean> tables = getComponent().getTableModuleStates();\n        Map<GeneralReportModule, Boolean> generals = getComponent().getGeneralModuleStates();\n        wiz.putProperty(\"tableModuleStates\", tables);\n        wiz.putProperty(\"generalModuleStates\", generals);\n        wiz.putProperty(\"fileListModuleStates\", getComponent().getFileModuleStates());\n        \n        // Store preferences that WizardIterator will use to determine what \n        // panels need to be shown\n        Preferences prefs = NbPreferences.forModule(ReportWizardPanel1.class);\n        prefs.putBoolean(\"tableModule\", any(tables.values()));\n        prefs.putBoolean(\"generalModule\", any(generals.values()));\n    }","commit_id":"1f153727db6a718a840a75a5bd8a45cc4c89464c","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public void setFinish(boolean enabled) {\n        // If FileReportModules need to be configured, disable the Finish button\n        // and enable the next button.\n        if (NbPreferences.forModule(ReportWizardPanel1.class).getBoolean(\"fileConfig\", false)) {\n            finishButton.setEnabled(false);\n            nextButton.setEnabled(enabled);\n        } else {\n            nextButton.setEnabled(false);\n            finishButton.setEnabled(enabled);\n        }\n    }","id":63637,"modified_method":"public void setFinish(boolean enabled) {\n        nextButton.setEnabled(false);\n        finishButton.setEnabled(enabled);\n    }","commit_id":"1f153727db6a718a840a75a5bd8a45cc4c89464c","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jScrollPane1 = new javax.swing.JScrollPane();\n        jPanel1 = new javax.swing.JPanel();\n        jSplitPane1 = new javax.swing.JSplitPane();\n        mimePanel = new javax.swing.JPanel();\n        jLabel1 = new javax.swing.JLabel();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        mimeTable = new javax.swing.JTable();\n        newTypeButton = new javax.swing.JButton();\n        removeTypeButton = new javax.swing.JButton();\n        extensionPanel = new javax.swing.JPanel();\n        newExtButton = new javax.swing.JButton();\n        jScrollPane3 = new javax.swing.JScrollPane();\n        extTable = new javax.swing.JTable();\n        removeExtButton = new javax.swing.JButton();\n        extHeaderLabel = new javax.swing.JLabel();\n\n        jScrollPane1.setBorder(null);\n\n        jPanel1.setPreferredSize(new java.awt.Dimension(687, 450));\n\n        jSplitPane1.setDividerLocation(430);\n        jSplitPane1.setDividerSize(1);\n\n        jLabel1.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.jLabel1.text\")); // NOI18N\n\n        mimeTable.setModel(mimeTableModel);\n        jScrollPane2.setViewportView(mimeTable);\n\n        newTypeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        newTypeButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.newTypeButton.text\")); // NOI18N\n        newTypeButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newTypeButtonActionPerformed(evt);\n            }\n        });\n\n        removeTypeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        removeTypeButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.removeTypeButton.text\")); // NOI18N\n        removeTypeButton.setToolTipText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.removeTypeButton.toolTipText\")); // NOI18N\n        removeTypeButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeTypeButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout mimePanelLayout = new javax.swing.GroupLayout(mimePanel);\n        mimePanel.setLayout(mimePanelLayout);\n        mimePanelLayout.setHorizontalGroup(\n            mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mimePanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)\n                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mimePanelLayout.createSequentialGroup()\n                        .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mimePanelLayout.createSequentialGroup()\n                                .addComponent(newTypeButton)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(removeTypeButton)))\n                        .addGap(0, 191, Short.MAX_VALUE)))\n                .addContainerGap())\n        );\n        mimePanelLayout.setVerticalGroup(\n            mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(mimePanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jLabel1)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(newTypeButton)\n                    .addComponent(removeTypeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap())\n        );\n\n        jSplitPane1.setLeftComponent(mimePanel);\n\n        newExtButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        newExtButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.newExtButton.text\")); // NOI18N\n        newExtButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newExtButtonActionPerformed(evt);\n            }\n        });\n\n        extTable.setModel(extTableModel);\n        jScrollPane3.setViewportView(extTable);\n\n        removeExtButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        removeExtButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.removeExtButton.text\")); // NOI18N\n        removeExtButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeExtButtonActionPerformed(evt);\n            }\n        });\n\n        extHeaderLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.extHeaderLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout extensionPanelLayout = new javax.swing.GroupLayout(extensionPanel);\n        extensionPanel.setLayout(extensionPanelLayout);\n        extensionPanelLayout.setHorizontalGroup(\n            extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(extensionPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(extensionPanelLayout.createSequentialGroup()\n                        .addComponent(extHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addContainerGap(111, Short.MAX_VALUE))\n                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)\n                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, extensionPanelLayout.createSequentialGroup()\n                        .addComponent(newExtButton)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(removeExtButton)\n                        .addGap(0, 0, Short.MAX_VALUE))))\n        );\n        extensionPanelLayout.setVerticalGroup(\n            extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, extensionPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(extHeaderLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(newExtButton)\n                    .addComponent(removeExtButton))\n                .addContainerGap())\n        );\n\n        jSplitPane1.setRightComponent(extensionPanel);\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jSplitPane1))\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jSplitPane1)\n                .addContainerGap())\n        );\n\n        jScrollPane1.setViewportView(jPanel1);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)\n                .addGap(0, 0, 0))\n        );\n    }","id":63638,"modified_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jPanel1 = new javax.swing.JPanel();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        jSplitPane1 = new javax.swing.JSplitPane();\n        mimePanel = new javax.swing.JPanel();\n        jLabel1 = new javax.swing.JLabel();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        mimeTable = new javax.swing.JTable();\n        newTypeButton = new javax.swing.JButton();\n        removeTypeButton = new javax.swing.JButton();\n        extensionPanel = new javax.swing.JPanel();\n        newExtButton = new javax.swing.JButton();\n        jScrollPane3 = new javax.swing.JScrollPane();\n        extTable = new javax.swing.JTable();\n        removeExtButton = new javax.swing.JButton();\n        extHeaderLabel = new javax.swing.JLabel();\n\n        jPanel1.setPreferredSize(new java.awt.Dimension(687, 450));\n\n        jSplitPane1.setDividerLocation(430);\n        jSplitPane1.setDividerSize(1);\n\n        jLabel1.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.jLabel1.text\")); // NOI18N\n\n        mimeTable.setModel(mimeTableModel);\n        jScrollPane2.setViewportView(mimeTable);\n\n        newTypeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        newTypeButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.newTypeButton.text\")); // NOI18N\n        newTypeButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newTypeButtonActionPerformed(evt);\n            }\n        });\n\n        removeTypeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        removeTypeButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.removeTypeButton.text\")); // NOI18N\n        removeTypeButton.setToolTipText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.removeTypeButton.toolTipText\")); // NOI18N\n        removeTypeButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeTypeButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout mimePanelLayout = new javax.swing.GroupLayout(mimePanel);\n        mimePanel.setLayout(mimePanelLayout);\n        mimePanelLayout.setHorizontalGroup(\n            mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mimePanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)\n                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mimePanelLayout.createSequentialGroup()\n                        .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mimePanelLayout.createSequentialGroup()\n                                .addComponent(newTypeButton)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(removeTypeButton)))\n                        .addGap(0, 191, Short.MAX_VALUE)))\n                .addContainerGap())\n        );\n        mimePanelLayout.setVerticalGroup(\n            mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(mimePanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jLabel1)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(removeTypeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(newTypeButton))\n                .addContainerGap())\n        );\n\n        jSplitPane1.setLeftComponent(mimePanel);\n\n        newExtButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        newExtButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.newExtButton.text\")); // NOI18N\n        newExtButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newExtButtonActionPerformed(evt);\n            }\n        });\n\n        extTable.setModel(extTableModel);\n        jScrollPane3.setViewportView(extTable);\n\n        removeExtButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        removeExtButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.removeExtButton.text\")); // NOI18N\n        removeExtButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeExtButtonActionPerformed(evt);\n            }\n        });\n\n        extHeaderLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.extHeaderLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout extensionPanelLayout = new javax.swing.GroupLayout(extensionPanel);\n        extensionPanel.setLayout(extensionPanelLayout);\n        extensionPanelLayout.setHorizontalGroup(\n            extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(extensionPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(extensionPanelLayout.createSequentialGroup()\n                        .addComponent(extHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)\n                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, extensionPanelLayout.createSequentialGroup()\n                        .addComponent(newExtButton)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(removeExtButton)\n                        .addGap(0, 0, Short.MAX_VALUE))))\n        );\n        extensionPanelLayout.setVerticalGroup(\n            extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, extensionPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(extHeaderLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(removeExtButton)\n                    .addComponent(newExtButton))\n                .addContainerGap())\n        );\n\n        jSplitPane1.setRightComponent(extensionPanel);\n\n        jScrollPane1.setViewportView(jSplitPane1);\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 818, Short.MAX_VALUE)\n                .addContainerGap())\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jScrollPane1)\n                .addContainerGap())\n        );\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)\n        );\n    }","commit_id":"01c2487157c6da422feb9af6cc6e73d97353cb6e","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** Creates and arranges the Swing components in the dialog. */\n  private void createComponents() {\n    dialog.setResizable(true);\n\n    Container pane = dialog.getContentPane();\n    pane.setLayout(new GridBagLayout());\n\n    { // Shows \"Filter by Category\" and the combo box for selecting a category\n      GridBagConstraints c = new GridBagConstraints();\n      c.gridx = 0;\n      c.gridy = 0;\n\n      JPanel filterPanel = new JPanel();\n      filterPanel.setLayout(new BoxLayout(filterPanel, BoxLayout.X_AXIS));\n      pane.add(filterPanel, c);\n\n      filterPanel.add(Box.createHorizontalStrut(6));\n\n      JLabel categoryLabel = new JLabel(\"Category:\");\n      filterPanel.add(categoryLabel);\n\n      filterPanel.add(Box.createHorizontalStrut(5));\n\n      categoryChooser = new JComboBox();\n      categoryChooser.setMaximumRowCount(20);\n      updateCategoryChooser();\n      filterPanel.add(categoryChooser, c);\n      categoryChooser.addItemListener(new ItemListener() {\n        public void itemStateChanged(ItemEvent e) {\n          category = (String) categoryChooser.getSelectedItem();\n          if (ContributionManagerDialog.ANY_CATEGORY.equals(category)) {\n            category = null;\n          }\n          filterLibraries(category, filterField.filters);\n        }\n      });\n      \n      filterPanel.add(Box.createHorizontalStrut(5));\n//      filterPanel.add(Box.createHorizontalGlue());\n      filterField = new FilterField();\n      filterPanel.add(filterField);\n//      filterPanel.add(Box.createHorizontalGlue());\n    }\n\n    { // The scroll area containing the contribution listing and the status bar.\n      GridBagConstraints c = new GridBagConstraints();\n      c.fill = GridBagConstraints.BOTH;\n      c.gridx = 0;\n      c.gridy = 1;\n      c.gridwidth = 2;\n      c.weighty = 1;\n      c.weightx = 1;\n\n      scrollPane = new JScrollPane();\n      scrollPane.setPreferredSize(new Dimension(300, 300));\n      scrollPane.setViewportView(contributionListPanel);\n      scrollPane.getViewport().setOpaque(true);\n      scrollPane.getViewport().setBackground(contributionListPanel.getBackground());\n      scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);\n      scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);\n\n      status = new StatusPanel();\n      status.setBorder(BorderFactory.createEtchedBorder());\n\n      final JLayeredPane layeredPane = new JLayeredPane();\n      layeredPane.add(scrollPane, JLayeredPane.DEFAULT_LAYER);\n      layeredPane.add(status, JLayeredPane.PALETTE_LAYER);\n\n      layeredPane.addComponentListener(new ComponentAdapter() {\n\n        void resizeLayers() {\n          scrollPane.setSize(layeredPane.getSize());\n          scrollPane.updateUI();\n        }\n\n        public void componentShown(ComponentEvent e) {\n          resizeLayers();\n        }\n\n        public void componentResized(ComponentEvent arg0) {\n          resizeLayers();\n        }\n      });\n\n      final JViewport viewport = scrollPane.getViewport();\n      viewport.addComponentListener(new ComponentAdapter() {\n        void resizeLayers() {\n          status.setLocation(0, viewport.getHeight() - 18);\n\n          Dimension d = viewport.getSize();\n          d.height = 20;\n          d.width += 3;\n          status.setSize(d);\n        }\n        public void componentShown(ComponentEvent e) {\n          resizeLayers();\n        }\n        public void componentResized(ComponentEvent e) {\n          resizeLayers();\n        }\n      });\n\n      pane.add(layeredPane, c);\n    }\n\n//    { // The filter text area\n//      GridBagConstraints c = new GridBagConstraints();\n//      c.gridx = 0;\n//      c.gridy = 2;\n//      c.gridwidth = 2;\n//      c.weightx = 1;\n//      c.fill = GridBagConstraints.HORIZONTAL;\n//      filterField = new FilterField();\n//\n//      pane.add(filterField, c);\n//    }\n\n    dialog.setMinimumSize(new Dimension(450, 400));\n  }","id":63639,"modified_method":"/** Creates and arranges the Swing components in the dialog. */\n  private void createComponents() {\n    dialog.setResizable(true);\n\n    Container pane = dialog.getContentPane();\n//    pane.setLayout(new GridBagLayout());\n//\n//    { // Shows \"Filter by Category\" and the combo box for selecting a category\n//      GridBagConstraints c = new GridBagConstraints();\n//      c.gridx = 0;\n//      c.gridy = 0;\n    pane.setLayout(new BorderLayout());\n\n      JPanel filterPanel = new JPanel();\n      filterPanel.setLayout(new BoxLayout(filterPanel, BoxLayout.X_AXIS));\n//      pane.add(filterPanel, c);\n      pane.add(filterPanel, BorderLayout.NORTH);\n\n      filterPanel.add(Box.createHorizontalStrut(6));\n\n      JLabel categoryLabel = new JLabel(\"Category:\");\n      filterPanel.add(categoryLabel);\n\n      filterPanel.add(Box.createHorizontalStrut(5));\n\n      categoryChooser = new JComboBox();\n      categoryChooser.setMaximumRowCount(20);\n      updateCategoryChooser();\n//      filterPanel.add(categoryChooser, c);\n      filterPanel.add(categoryChooser);\n      categoryChooser.addItemListener(new ItemListener() {\n        public void itemStateChanged(ItemEvent e) {\n          category = (String) categoryChooser.getSelectedItem();\n          if (ContributionManagerDialog.ANY_CATEGORY.equals(category)) {\n            category = null;\n          }\n          filterLibraries(category, filterField.filters);\n        }\n      });\n      \n      filterPanel.add(Box.createHorizontalStrut(5));\n//      filterPanel.add(Box.createHorizontalGlue());\n      filterField = new FilterField();\n      filterPanel.add(filterField);\n//      filterPanel.add(Box.createHorizontalGlue());\n//    }\n      //filterPanel.setBorder(new EmptyBorder(13, 13, 13, 13));\n      filterPanel.setBorder(new EmptyBorder(7, 7, 7, 7));\n      \n//    { // The scroll area containing the contribution listing and the status bar.\n//      GridBagConstraints c = new GridBagConstraints();\n//      c.fill = GridBagConstraints.BOTH;\n//      c.gridx = 0;\n//      c.gridy = 1;\n//      c.gridwidth = 2;\n//      c.weighty = 1;\n//      c.weightx = 1;\n\n      scrollPane = new JScrollPane();\n      scrollPane.setPreferredSize(new Dimension(300, 300));\n      scrollPane.setViewportView(contributionListPanel);\n//      scrollPane.getViewport().setOpaque(true);\n//      scrollPane.getViewport().setBackground(contributionListPanel.getBackground());\n      scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);\n      scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);\n//      scrollPane.setBorder(new EmptyBorder(0, 7, 0, 7));\n      pane.add(scrollPane, BorderLayout.CENTER);\n      \n      pane.add(Box.createHorizontalStrut(10), BorderLayout.WEST);\n      pane.add(Box.createHorizontalStrut(10), BorderLayout.EAST);\n\n      status = new StatusPanel();\n      status.setBorder(new EmptyBorder(4, 7, 3, 7));\n      pane.add(status, BorderLayout.SOUTH);\n\n      \n//      status = new StatusPanel();\n//      status.setBorder(BorderFactory.createEtchedBorder());\n\n//      final JLayeredPane layeredPane = new JLayeredPane();\n//      layeredPane.add(scrollPane, JLayeredPane.DEFAULT_LAYER);\n//      layeredPane.add(status, JLayeredPane.PALETTE_LAYER);\n//\n//      layeredPane.addComponentListener(new ComponentAdapter() {\n//\n//        void resizeLayers() {\n//          scrollPane.setSize(layeredPane.getSize());\n//          scrollPane.updateUI();\n//        }\n//\n//        public void componentShown(ComponentEvent e) {\n//          resizeLayers();\n//        }\n//\n//        public void componentResized(ComponentEvent arg0) {\n//          resizeLayers();\n//        }\n//      });\n//\n//      final JViewport viewport = scrollPane.getViewport();\n//      viewport.addComponentListener(new ComponentAdapter() {\n//        void resizeLayers() {\n//          status.setLocation(0, viewport.getHeight() - 18);\n//\n//          Dimension d = viewport.getSize();\n//          d.height = 20;\n//          d.width += 3;\n//          status.setSize(d);\n//        }\n//        public void componentShown(ComponentEvent e) {\n//          resizeLayers();\n//        }\n//        public void componentResized(ComponentEvent e) {\n//          resizeLayers();\n//        }\n//      });\n//\n//      pane.add(layeredPane, c);\n//    }\n\n//    { // The filter text area\n//      GridBagConstraints c = new GridBagConstraints();\n//      c.gridx = 0;\n//      c.gridy = 2;\n//      c.gridwidth = 2;\n//      c.weightx = 1;\n//      c.fill = GridBagConstraints.HORIZONTAL;\n//      filterField = new FilterField();\n//\n//      pane.add(filterField, c);\n//    }\n\n    dialog.setMinimumSize(new Dimension(450, 400));\n  }","commit_id":"bbb16272ef5e23796311684c8934d255e3b070bb","url":"https://github.com/processing/processing"},{"original_method":"/**\n\t * Expects to read a XML_BLOB type marker, and then the data.\n\t */\n\tpublic static byte [] decodeBlob(InputStream istream) throws IOException {\n\t\tTypeAndVal tv = decodeTypeAndVal(istream);\n\t\t\n\t\tif (XML_BLOB != tv.type()) {\n\t\t\tthrow new IOException(\"Unexpected type, expected XML_BLOB \" + XML_BLOB + \",\" +\n\t\t\t\t\t\" got \" + tv.type());\n\t\t}\n\t\treturn decodeBlob(istream, (int)tv.val());\n\t}","id":63640,"modified_method":"/**\n\t * Expects to read a XML_BLOB type marker, and then the data.\n\t */\n\tpublic static byte [] decodeBlob(InputStream istream) throws IOException {\n\t\tTypeAndVal tv = decodeTypeAndVal(istream);\n\t\t\n\t\tif ((null == tv) || (XML_BLOB != tv.type())) {\n\t\t\tthrow new IOException(\"Unexpected type, expected XML_BLOB \" + XML_BLOB + \",\" +\n\t\t\t\t\t\" got \" + ((null != tv) ? tv.type() : \"not a tag.\"));\n\t\t}\n\t\treturn decodeBlob(istream, (int)tv.val());\n\t}","commit_id":"4d9b86ba88fc53c5f0c933f737edf7be2e204561","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public static void encodeBlob(OutputStream ostream, byte [] blob) throws IOException {\n\t\tencodeTypeAndVal(XML_BLOB, blob.length, ostream);\n\t\tostream.write(blob);\n\t}","id":63641,"modified_method":"public static void encodeBlob(OutputStream ostream, byte [] blob) throws IOException {\n\t\tencodeTypeAndVal(XML_BLOB, ((null == blob) ? 0 : blob.length), ostream);\n\t\tif (null != blob) {\n\t\t\tostream.write(blob);\n\t\t}\n\t}","commit_id":"4d9b86ba88fc53c5f0c933f737edf7be2e204561","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public static TypeAndVal decodeTypeAndVal(InputStream istream) throws IOException {\n\t\t\n\t\tint next;\n\t\tint type = -1;\n\t\tlong val = 0;\n\t\t\n\t\tdo {\n\t\t\tnext = istream.read();\n\t\t\t\n\t\t\tif (0 == (next & XML_TT_NO_MORE)) {\n\t\t\t\tval = val << XML_REG_VAL_BITS;\n\t\t\t\tval |= (next & XML_REG_VAL_MASK);\n\t\t\t} else {\n\t\t\t\t// last byte\n\t\t\t\ttype = next & XML_TT_MASK;\n\t\t\t\tval = val << XML_TT_VAL_BITS;\n\t\t\t\tval |= ((next >>> XML_TT_BITS) & XML_TT_VAL_MASK);\n\t\t\t}\n\t\t\t\n\t\t} while (0 == (next & XML_TT_NO_MORE));\n\t\t\n\t\treturn new TypeAndVal(type, val);\n\t}","id":63642,"modified_method":"public static TypeAndVal decodeTypeAndVal(InputStream istream) throws IOException {\n\t\t\n\t\tint next;\n\t\tint type = -1;\n\t\tlong val = 0;\n\t\t\n\t\tdo {\n\t\t\tnext = istream.read();\n\t\t\t\n\t\t\tif (next < 0) {\n\t\t\t\tif (istream instanceof com.parc.ccn.library.io.CCNInputStream) {\n\t\t\t\t\tLibrary.logger().info(\"Reached EOF in decodeTypeAndVal.\");\n\t\t\t\t}\n\t\t\t\treturn null; // at EOF\n\t\t\t}\n\t\t\t\n\t\t\tif (0 == (next & XML_TT_NO_MORE)) {\n\t\t\t\tval = val << XML_REG_VAL_BITS;\n\t\t\t\tval |= (next & XML_REG_VAL_MASK);\n\t\t\t} else {\n\t\t\t\t// last byte\n\t\t\t\ttype = next & XML_TT_MASK;\n\t\t\t\tval = val << XML_TT_VAL_BITS;\n\t\t\t\tval |= ((next >>> XML_TT_BITS) & XML_TT_VAL_MASK);\n\t\t\t}\n\t\t\t\n\t\t} while (0 == (next & XML_TT_NO_MORE));\n\t\t\n\t\treturn new TypeAndVal(type, val);\n\t}","commit_id":"4d9b86ba88fc53c5f0c933f737edf7be2e204561","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Expects to read a XML_UDATA type marker, and then the data.\n\t * This will not decode a TAG or ATTR ustring.\n\t */\n\tpublic static String decodeUString(InputStream istream) throws IOException {\n\t\tTypeAndVal tv = decodeTypeAndVal(istream);\n\t\t\n\t\tif (XML_UDATA != tv.type()) {\n\t\t\tthrow new IOException(\"Unexpected type, expected XML_USTRING \" + XML_UDATA + \",\" +\n\t\t\t\t\t\" got \" + tv.type());\n\t\t}\n\t\treturn decodeUString(istream, (int)tv.val());\n\t}","id":63643,"modified_method":"/**\n\t * Expects to read a XML_UDATA type marker, and then the data.\n\t * This will not decode a TAG or ATTR ustring.\n\t */\n\tpublic static String decodeUString(InputStream istream) throws IOException {\n\t\tTypeAndVal tv = decodeTypeAndVal(istream);\n\t\t\n\t\tif ((null == tv) || (XML_UDATA != tv.type())) {\n\t\t\tthrow new IOException(\"Unexpected type, expected XML_USTRING \" + XML_UDATA + \",\" +\n\t\t\t\t\t\" got \" + ((null != tv) ? tv.type() : \"not a tag.\"));\n\t\t}\n\t\treturn decodeUString(istream, (int)tv.val());\n\t}","commit_id":"4d9b86ba88fc53c5f0c933f737edf7be2e204561","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public void readStartElement(String startTag,\n\t\t\t\t\t\t\t    TreeMap<String, String> attributes) throws XMLStreamException {\n\t\ttry {\n\t\t\tBinaryXMLCodec.TypeAndVal tv = BinaryXMLCodec.decodeTypeAndVal(_istream);\n\t\t\t\n\t\t\tString decodedTag = null;\n\t\t\t\n\t\t\tif (tv.type() == BinaryXMLCodec.XML_TAG) {\n\t\t\t\tLibrary.logger().info(\"Unexpected: got tag in readStartElement; looking for tag \" + startTag + \" got length: \" + (int)tv.val()+1);\n\t\t\t\t// Tag value represents length-1 as tags can never be empty.\n\t\t\t\tdecodedTag = BinaryXMLCodec.decodeUString(_istream, (int)tv.val()+1);\n\t\t\t\t\n\t\t\t} else if (tv.type() == BinaryXMLCodec.XML_DTAG) {\n\t\t\t\tdecodedTag = _dictionary.peek().decodeTag(tv.val());\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif ((null ==  decodedTag) || (!decodedTag.equals(startTag))) {\n\t\t\t\tthrow new XMLStreamException(\"Expected start element: \" + startTag + \" got: \" + decodedTag + \"(\" + tv.val() + \")\");\n\t\t\t}\n\t\t\t\n\t\t\t// DKS: does not read attributes out of stream if caller doesn't\n\t\t\t// ask for them. Should possibly peek and skip over them regardless.\n\t\t\t// TODO: fix this\n\t\t\tif (null != attributes) {\n\t\t\t\n\t\t\t\t// Now need to get attributes.\n\t\t\t\tBinaryXMLCodec.TypeAndVal nextTV = BinaryXMLCodec.peekTypeAndVal(_istream);\n\t\t\t\t\n\t\t\t\twhile ((null != nextTV) && ((BinaryXMLCodec.XML_ATTR == nextTV.type()) ||\n\t\t\t\t\t\t\t\t\t\t\t(BinaryXMLCodec.XML_DATTR == nextTV.type()))) {\n\t\t\t\t\t\n\t\t\t\t\t// Decode this attribute. First, really read the type and value.\n\t\t\t\t\tBinaryXMLCodec.TypeAndVal thisTV = BinaryXMLCodec.decodeTypeAndVal(_istream);\n\t\t\t\t\t\n\t\t\t\t\tString attributeName = null;\n\t\t\t\t\tif (BinaryXMLCodec.XML_ATTR == thisTV.type()) {\n\t\t\t\t\t\t// Tag value represents length-1 as attribute names cannot be empty.\n\t\t\t\t\t\tattributeName = BinaryXMLCodec.decodeUString(_istream, (int)thisTV.val()+1);\n\t\t\t\t\t\n\t\t\t\t\t} else if (BinaryXMLCodec.XML_DATTR == thisTV.type()) {\n\t\t\t\t\t\t// DKS TODO are attributes same or different dictionary?\n\t\t\t\t\t\tattributeName = _dictionary.peek().decodeTag(tv.val());\n\t\t\t\t\t\tif (null == attributeName) {\n\t\t\t\t\t\t\tthrow new XMLStreamException(\"Unknown DATTR value\" + tv.val());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Attribute values are always UDATA\n\t\t\t\t\tString attributeValue = BinaryXMLCodec.decodeUString(_istream);\n\t\t\t\t\t\n\t\t\t\t\tattributes.put(attributeName, attributeValue);\n\t\t\t\t\t\n\t\t\t\t\tnextTV = BinaryXMLCodec.peekTypeAndVal(_istream);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t} catch (IOException e) {\n\t\t\tthrow new XMLStreamException(\"readStartElement\", e);\n\t\t}\n\t}","id":63644,"modified_method":"public void readStartElement(String startTag,\n\t\t\t\t\t\t\t    TreeMap<String, String> attributes) throws XMLStreamException {\n\t\ttry {\n\t\t\tBinaryXMLCodec.TypeAndVal tv = BinaryXMLCodec.decodeTypeAndVal(_istream);\n\t\t\t\n\t\t\tif (null == tv) {\n\t\t\t\tthrow new XMLStreamException(\"Expected start element: \" + startTag + \" got something not a tag.\");\n\t\t\t}\n\t\t\t\n\t\t\tString decodedTag = null;\n\t\t\t\n\t\t\tif (tv.type() == BinaryXMLCodec.XML_TAG) {\n\t\t\t\tLibrary.logger().info(\"Unexpected: got tag in readStartElement; looking for tag \" + startTag + \" got length: \" + (int)tv.val()+1);\n\t\t\t\t// Tag value represents length-1 as tags can never be empty.\n\t\t\t\tdecodedTag = BinaryXMLCodec.decodeUString(_istream, (int)tv.val()+1);\n\t\t\t\t\n\t\t\t} else if (tv.type() == BinaryXMLCodec.XML_DTAG) {\n\t\t\t\tdecodedTag = _dictionary.peek().decodeTag(tv.val());\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif ((null ==  decodedTag) || (!decodedTag.equals(startTag))) {\n\t\t\t\tthrow new XMLStreamException(\"Expected start element: \" + startTag + \" got: \" + decodedTag + \"(\" + tv.val() + \")\");\n\t\t\t}\n\t\t\t\n\t\t\t// DKS: does not read attributes out of stream if caller doesn't\n\t\t\t// ask for them. Should possibly peek and skip over them regardless.\n\t\t\t// TODO: fix this\n\t\t\tif (null != attributes) {\n\t\t\t\n\t\t\t\t// Now need to get attributes.\n\t\t\t\tBinaryXMLCodec.TypeAndVal nextTV = BinaryXMLCodec.peekTypeAndVal(_istream);\n\t\t\t\t\n\t\t\t\twhile ((null != nextTV) && ((BinaryXMLCodec.XML_ATTR == nextTV.type()) ||\n\t\t\t\t\t\t\t\t\t\t\t(BinaryXMLCodec.XML_DATTR == nextTV.type()))) {\n\t\t\t\t\t\n\t\t\t\t\t// Decode this attribute. First, really read the type and value.\n\t\t\t\t\tBinaryXMLCodec.TypeAndVal thisTV = BinaryXMLCodec.decodeTypeAndVal(_istream);\n\t\t\t\t\t\n\t\t\t\t\tString attributeName = null;\n\t\t\t\t\tif (BinaryXMLCodec.XML_ATTR == thisTV.type()) {\n\t\t\t\t\t\t// Tag value represents length-1 as attribute names cannot be empty.\n\t\t\t\t\t\tattributeName = BinaryXMLCodec.decodeUString(_istream, (int)thisTV.val()+1);\n\t\t\t\t\t\n\t\t\t\t\t} else if (BinaryXMLCodec.XML_DATTR == thisTV.type()) {\n\t\t\t\t\t\t// DKS TODO are attributes same or different dictionary?\n\t\t\t\t\t\tattributeName = _dictionary.peek().decodeTag(tv.val());\n\t\t\t\t\t\tif (null == attributeName) {\n\t\t\t\t\t\t\tthrow new XMLStreamException(\"Unknown DATTR value\" + tv.val());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Attribute values are always UDATA\n\t\t\t\t\tString attributeValue = BinaryXMLCodec.decodeUString(_istream);\n\t\t\t\t\t\n\t\t\t\t\tattributes.put(attributeName, attributeValue);\n\t\t\t\t\t\n\t\t\t\t\tnextTV = BinaryXMLCodec.peekTypeAndVal(_istream);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t} catch (IOException e) {\n\t\t\tthrow new XMLStreamException(\"readStartElement\", e);\n\t\t}\n\t}","commit_id":"4d9b86ba88fc53c5f0c933f737edf7be2e204561","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public boolean peekStartElement(String startTag) throws XMLStreamException {\n\t\tif (!_istream.markSupported()) {\n\t\t\tLibrary.logger().info(\"Cannot peek -- stream without marking ability!\");\n\t\t\tthrow new XMLStreamException(\"No lookahead in stream!\");\n\t\t}\n\n\t\tboolean isCorrectTag = false; \n\n\t\t_istream.mark(MARK_LEN);\n\n\t\ttry {\n\t\t\t// Have to distinguish genuine errors from wrong tags. Could either use\n\t\t\t// a special exception subtype, or redo the work here.\n\t\t\tBinaryXMLCodec.TypeAndVal tv = BinaryXMLCodec.decodeTypeAndVal(_istream);\n\n\t\t\tString decodedTag = null;\n\n\t\t\tif (tv.type() == BinaryXMLCodec.XML_TAG) {\n\t\t\t\tLibrary.logger().info(\"Unexpected: got tag in peekStartElement; looking for tag \" + startTag + \" got length: \" + (int)tv.val()+1);\n\n\t\t\t\tif (tv.val()+1 > DEBUG_MAX_LEN) {\n\t\t\t\t\tthrow new XMLStreamException(\"Decoding error: length \" + tv.val()+1 + \" longer than expected maximum length!\");\n\t\t\t\t}\n\n\t\t\t\t// Tag value represents length-1 as tags can never be empty.\n\t\t\t\tdecodedTag = BinaryXMLCodec.decodeUString(_istream, (int)tv.val()+1);\n\n\t\t\t} else if (tv.type() == BinaryXMLCodec.XML_DTAG) {\n\t\t\t\tdecodedTag = _dictionary.peek().decodeTag(tv.val());\t\t\t\t\t\n\t\t\t}\n\n\t\t\tif ((null !=  decodedTag) && (decodedTag.equals(startTag))) {\n\t\t\t\tisCorrectTag = true;\n\t\t\t}\n\t\t} catch (XMLStreamException e) {\n\t\t\ttry {\n\t\t\t\t_istream.reset();\n\t\t\t\t_istream.mark(MARK_LEN);\n\t\t\t\tlong ms = System.currentTimeMillis();\n\t\t\t\tFile tempFile = new File(\"data_\" + Long.toString(ms) + \".ccnb\");\n\t\t\t\tFileOutputStream fos = new FileOutputStream(tempFile);\n\t\t\t\tbyte buf[] = new byte[1024];\n\t\t\t\twhile (_istream.available() > 0) {\n\t\t\t\t\tint count = _istream.read(buf);\n\t\t\t\t\tfos.write(buf,0, count);\n\t\t\t\t}\n\t\t\t\tfos.close();\n\t\t\t\t_istream.reset();\n\t\t\t\tLibrary.logger().info(\"BinaryXMLDecoder: exception in peekStartElement, dumping offending object to file: \" + tempFile.getAbsolutePath());\n\t\t\t\tthrow e;\n\t\t\t\t\n\t\t\t} catch (IOException ie) {\n\t\t\t\tLibrary.logger().info(\"IOException in BinaryXMLDecoder error handling: \" + e.getMessage());\n\t\t\t\tthrow new XMLStreamException(\"peekStartElement\", e);\n\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\tLibrary.logger().info(\"IOException in BinaryXMLDecoder: \" + e.getMessage());\n\t\t\tthrow new XMLStreamException(\"peekStartElement\", e);\n\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\t_istream.reset();\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new XMLStreamException(\"Cannot reset stream! \" + e.getMessage(), e);\n\t\t\t}\n\t\t}\n\t\treturn isCorrectTag;\n\t}","id":63645,"modified_method":"public boolean peekStartElement(String startTag) throws XMLStreamException {\n\t\tif (!_istream.markSupported()) {\n\t\t\tLibrary.logger().info(\"Cannot peek -- stream without marking ability!\");\n\t\t\tthrow new XMLStreamException(\"No lookahead in stream!\");\n\t\t}\n\n\t\tboolean isCorrectTag = false; \n\n\t\t_istream.mark(MARK_LEN);\n\n\t\ttry {\n\t\t\t// Have to distinguish genuine errors from wrong tags. Could either use\n\t\t\t// a special exception subtype, or redo the work here.\n\t\t\tBinaryXMLCodec.TypeAndVal tv = BinaryXMLCodec.decodeTypeAndVal(_istream);\n\n\t\t\tif (null != tv) {\n\n\t\t\t\tString decodedTag = null;\n\n\t\t\t\tif (tv.type() == BinaryXMLCodec.XML_TAG) {\n\t\t\t\t\tLibrary.logger().info(\"Unexpected: got tag in peekStartElement; looking for tag \" + startTag + \" got length: \" + (int)tv.val()+1);\n\n\t\t\t\t\tif (tv.val()+1 > DEBUG_MAX_LEN) {\n\t\t\t\t\t\tthrow new XMLStreamException(\"Decoding error: length \" + tv.val()+1 + \" longer than expected maximum length!\");\n\t\t\t\t\t}\n\n\t\t\t\t\t// Tag value represents length-1 as tags can never be empty.\n\t\t\t\t\tdecodedTag = BinaryXMLCodec.decodeUString(_istream, (int)tv.val()+1);\n\n\t\t\t\t} else if (tv.type() == BinaryXMLCodec.XML_DTAG) {\n\t\t\t\t\tdecodedTag = _dictionary.peek().decodeTag(tv.val());\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\tif ((null !=  decodedTag) && (decodedTag.equals(startTag))) {\n\t\t\t\t\tisCorrectTag = true;\n\t\t\t\t}\n\t\t\t} // else, not a type and val, probably an end element. rewind and return false.\n\n\t\t} catch (XMLStreamException e) {\n\t\t\ttry {\n\t\t\t\t_istream.reset();\n\t\t\t\t_istream.mark(MARK_LEN);\n\t\t\t\tlong ms = System.currentTimeMillis();\n\t\t\t\tFile tempFile = new File(\"data_\" + Long.toString(ms) + \".ccnb\");\n\t\t\t\tFileOutputStream fos = new FileOutputStream(tempFile);\n\t\t\t\tbyte buf[] = new byte[1024];\n\t\t\t\twhile (_istream.available() > 0) {\n\t\t\t\t\tint count = _istream.read(buf);\n\t\t\t\t\tfos.write(buf,0, count);\n\t\t\t\t}\n\t\t\t\tfos.close();\n\t\t\t\t_istream.reset();\n\t\t\t\tLibrary.logger().info(\"BinaryXMLDecoder: exception in peekStartElement, dumping offending object to file: \" + tempFile.getAbsolutePath());\n\t\t\t\tthrow e;\n\t\t\t\t\n\t\t\t} catch (IOException ie) {\n\t\t\t\tLibrary.logger().info(\"IOException in BinaryXMLDecoder error handling: \" + e.getMessage());\n\t\t\t\tthrow new XMLStreamException(\"peekStartElement\", e);\n\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\tLibrary.logger().info(\"IOException in BinaryXMLDecoder: \" + e.getMessage());\n\t\t\tthrow new XMLStreamException(\"peekStartElement\", e);\n\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\t_istream.reset();\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new XMLStreamException(\"Cannot reset stream! \" + e.getMessage(), e);\n\t\t\t}\n\t\t}\n\t\treturn isCorrectTag;\n\t}","commit_id":"4d9b86ba88fc53c5f0c933f737edf7be2e204561","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"@Override\n\tpublic int read() throws IOException {\n\t\tbyte [] b = new byte[1];\n\t\tread(b, 0, 1);\n\t\treturn b[0];\n\t}","id":63646,"modified_method":"@Override\n\tpublic int read() throws IOException {\n\t\tbyte [] b = new byte[1];\n\t\tif (read(b, 0, 1) < 0) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn (0x000000FF & b[0]);\n\t}","commit_id":"4d9b86ba88fc53c5f0c933f737edf7be2e204561","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Reads a packet/block into the buffer. If the buffer is shorter than\n\t * the packet's length, reads out of the current block for now.\n\t * Aim is really to do packet-sized reads. Probably ought to be a DatagramSocket subclass.\n\t * @param buf the buffer into which to write.\n\t * @param offset the offset into buf at which to write data\n\t * @param len the number of bytes to write\n\t * @return\n\t * @throws IOException \n\t */\n\t@Override\n\tpublic int read(byte[] buf, int offset, int len) throws IOException {\n\n\t\tif (null == buf)\n\t\t\tthrow new NullPointerException(\"Buffer cannot be null!\");\n\n\t\treturn readInternal(buf, offset, len);\n\t}","id":63647,"modified_method":"/**\n\t * Reads a packet/block into the buffer. If the buffer is shorter than\n\t * the packet's length, reads out of the current block for now.\n\t * Aim is really to do packet-sized reads. Probably ought to be a DatagramSocket subclass.\n\t * @param buf the buffer into which to write.\n\t * @param offset the offset into buf at which to write data\n\t * @param len the number of bytes to write\n\t * @return -1 if at EOF, or number of bytes read\n\t * @throws IOException \n\t */\n\t@Override\n\tpublic int read(byte[] buf, int offset, int len) throws IOException {\n\n\t\tif (null == buf)\n\t\t\tthrow new NullPointerException(\"Buffer cannot be null!\");\n\t\t\n\t\treturn readInternal(buf, offset, len);\n\t}","commit_id":"4d9b86ba88fc53c5f0c933f737edf7be2e204561","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"@Override\n\tpublic int available() throws IOException {\n\t\t\n\t\tif(_currentBlock!=null){\n\t\t\treturn _currentBlock.content().length - _blockOffset;\n\t\t}\n\t\telse{\n\t\t\treturn 0;\n\t\t}\n\t\t\t\n\t\t//int available = 0;\n\t\t//if (null != _header) {\n\t\t//\tavailable =  (int)(_header.length() - blockIndex()*_header.blockSize() - _blockOffset);\n\t\t//\t//available =  (int)(_header.length() - (blockIndex()-_header.start())*_header.blockSize() - _blockOffset);\n\t\t//} else if (null != _currentBlock) {\n\t\t//\tavailable =  _currentBlock.content().length - _blockOffset;\n\t\t//}\n\t\t//Library.logger().info(\"available(): \" + available);\n\t\t//return available; /* unknown */\n\t}","id":63648,"modified_method":"@Override\n\tpublic int available() throws IOException {\n\t\tif (_atEOF)\n\t\t\treturn 0;\n\t\tif (_currentBlock != null){\n\t\t\treturn _currentBlock.content().length - _blockOffset;\n\t\t}\n\t\telse{\n\t\t\treturn 0;\n\t\t}\n\t\t\t\n\t\t//int available = 0;\n\t\t//if (null != _header) {\n\t\t//\tavailable =  (int)(_header.length() - blockIndex()*_header.blockSize() - _blockOffset);\n\t\t//\t//available =  (int)(_header.length() - (blockIndex()-_header.start())*_header.blockSize() - _blockOffset);\n\t\t//} else if (null != _currentBlock) {\n\t\t//\tavailable =  _currentBlock.content().length - _blockOffset;\n\t\t//}\n\t\t//Library.logger().info(\"available(): \" + available);\n\t\t//return available; /* unknown */\n\t}","commit_id":"4d9b86ba88fc53c5f0c933f737edf7be2e204561","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"@Override\n\tpublic synchronized void mark(int readlimit) {\n\t\t_readlimit = readlimit;\n\t\t_markBlock = blockIndex();\n\t\t_markOffset = _blockOffset;\n\t}","id":63649,"modified_method":"@Override\n\tpublic synchronized void mark(int readlimit) {\n\t\t_readlimit = readlimit;\n\t\t_markBlock = blockIndex();\n\t\t_markOffset = _blockOffset;\n\t\tLibrary.logger().info(\"mark: block: \" + blockIndex() + \" offset: \" + _blockOffset);\n\t}","commit_id":"4d9b86ba88fc53c5f0c933f737edf7be2e204561","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"protected int readInternal(byte [] buf, int offset, int len) throws IOException {\n\t\t\n\t\tif (_atEOF)\n\t\t\treturn 0;\n\t\t\n\t\tLibrary.logger().info(\"CCNInputStream: reading \" + len + \" bytes into buffer of length \" + \n\t\t\t\t((null != buf) ? buf.length : \"null\") + \" at offset \" + offset);\n\t\t// is this the first block?\n\t\tif (null == _currentBlock) {\n\t\t\t_currentBlock = getFirstBlock();\n\t\t\t_blockOffset = 0;\n\t\t\tif (null == _currentBlock)\n\t\t\t\treturn 0; // nothing to read\n\t\t} \n\t\t\n\t\t// Now we have a block in place. Read from it. If we run out of block before\n\t\t// we've read len bytes, pull next block.\n\t\tint lenToRead = len;\n\t\tint lenRead = 0;\n\t\twhile (lenToRead > 0) {\n\t\t\tif (_blockOffset >= _currentBlock.content().length) {\n\t\t\t\t// DKS make sure we don't miss a byte...\n\t\t\t\t_currentBlock = getNextBlock();\n\t\t\t\t_blockOffset = 0;\n\t\t\t\tif (null == _currentBlock) {\n\t\t\t\t\tLibrary.logger().info(\"next block was null, setting _atEOF\");\n\t\t\t\t\t_atEOF = true;\n\t\t\t\t\treturn lenRead;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint readCount = ((_currentBlock.content().length - _blockOffset) > lenToRead) ? lenToRead : (_currentBlock.content().length - _blockOffset);\n\t\t\tif (null != buf) {} // use for skip\n\t\t\t\tLibrary.logger().info(\"before arraycopy: content length \"+_currentBlock.content().length+\" _blockOffset \"+_blockOffset+\" dst length \"+buf.length+\" dst index \"+offset+\" len to copy \"+readCount);\n\t\t\t\tSystem.arraycopy(_currentBlock.content(), _blockOffset, buf, offset, readCount);\n\t\t\t\n\t\t\t_blockOffset += readCount;\n\t\t\toffset += readCount;\n\t\t\tlenToRead -= readCount;\n\t\t\tlenRead += readCount;\n\t\t\tLibrary.logger().info(\"     read \" + readCount + \" bytes for \" + lenRead + \" total, \" + lenToRead + \" remaining.\");\n\t\t\t\n\t\t}\n\t\treturn lenRead;\n\t}","id":63650,"modified_method":"protected int readInternal(byte [] buf, int offset, int len) throws IOException {\n\t\t\n\t\tif (_atEOF) {\n\t\t\treturn -1;\n\t\t}\n\t\t\n\t\tLibrary.logger().finer(baseName() + \": reading \" + len + \" bytes into buffer of length \" + \n\t\t\t\t((null != buf) ? buf.length : \"null\") + \" at offset \" + offset);\n\t\t// is this the first block?\n\t\tif (null == _currentBlock) {\n\t\t\t_currentBlock = getFirstBlock();\n\t\t\t_blockOffset = 0;\n\t\t\tif (null == _currentBlock) {\n\t\t\t\t_atEOF = true;\n\t\t\t\treturn -1; // nothing to read\n\t\t\t}\n\t\t} \n\t\tLibrary.logger().finer(\"reading from block: \" + _currentBlock.name() + \" length: \" + \n\t\t\t\t_currentBlock.content().length +\n\t\t\t\t\" at offset \" + _blockOffset);\n\t\t\n\t\t// Now we have a block in place. Read from it. If we run out of block before\n\t\t// we've read len bytes, pull next block.\n\t\tint lenToRead = len;\n\t\tint lenRead = 0;\n\t\twhile (lenToRead > 0) {\n\t\t\tif (_blockOffset >= _currentBlock.content().length) {\n\t\t\t\t// DKS make sure we don't miss a byte...\n\t\t\t\t_currentBlock = getNextBlock();\n\t\t\t\t_blockOffset = 0;\n\t\t\t\tif (null == _currentBlock) {\n\t\t\t\t\tLibrary.logger().info(\"next block was null, setting _atEOF\");\n\t\t\t\t\t_atEOF = true;\n\t\t\t\t\tif (lenRead > 0) {\n\t\t\t\t\t\treturn lenRead;\n\t\t\t\t\t}\n\t\t\t\t\treturn -1; // no bytes read, at eof\n\t\t\t\t}\n\t\t\t\tLibrary.logger().info(\"now reading from block: \" + _currentBlock.name() + \" length: \" + \n\t\t\t\t\t\t_currentBlock.content().length +\n\t\t\t\t\t\t\" at offset \" + _blockOffset);\n\t\t\t}\n\t\t\tint readCount = ((_currentBlock.content().length - _blockOffset) > lenToRead) ? lenToRead : (_currentBlock.content().length - _blockOffset);\n\t\t\tif (null != buf) {} // use for skip\n\t\t\t\tLibrary.logger().finest(\"before arraycopy: content length \"+_currentBlock.content().length+\" _blockOffset \"+_blockOffset+\" dst length \"+buf.length+\" dst index \"+offset+\" len to copy \"+readCount);\n\t\t\t\tSystem.arraycopy(_currentBlock.content(), _blockOffset, buf, offset, readCount);\n\t\t\t\n\t\t\t_blockOffset += readCount;\n\t\t\toffset += readCount;\n\t\t\tlenToRead -= readCount;\n\t\t\tlenRead += readCount;\n\t\t\tLibrary.logger().finest(\"     read \" + readCount + \" bytes for \" + lenRead + \" total, \" + lenToRead + \" remaining.\");\n\t\t\t\n\t\t}\n\t\treturn lenRead;\n\t}","commit_id":"4d9b86ba88fc53c5f0c933f737edf7be2e204561","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"@Override\n\tpublic synchronized void reset() throws IOException {\n\t\tgetBlock(_markBlock);\n\t\t_blockOffset = _markOffset;\n\t}","id":63651,"modified_method":"@Override\n\tpublic synchronized void reset() throws IOException {\n\t\t_currentBlock = getBlock(_markBlock);\n\t\t_blockOffset = _markOffset;\n\t\t_atEOF = false;\n\t\tLibrary.logger().info(\"reset: block: \" + blockIndex() + \" offset: \" + _blockOffset + \" eof? \" + _atEOF);\n\t}","commit_id":"4d9b86ba88fc53c5f0c933f737edf7be2e204561","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public static byte [] readFile(InputStream inputStream, int fileLength) throws IOException, XMLStreamException {\n\t\t\n\t\tDigestInputStream dis = null;\n\t\ttry {\n\t\t\tdis = new DigestInputStream(inputStream, MessageDigest.getInstance(\"SHA1\"));\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tLibrary.logger().severe(\"No SHA1 available!\");\n\t\t\tAssert.fail(\"No SHA1 available!\");\n\t\t}\n\t\tint elapsed = 0;\n\t\tint read = 0;\n\t\tbyte [] bytes = new byte[BUF_SIZE];\n\t\twhile (elapsed < fileLength) {\n\t\t\tread = dis.read(bytes);\n\t\t\telapsed += read;\n\t\t\tif (read == 0) {\n\t\t\t\tSystem.out.println(\"Ran out of things to read at \" + elapsed + \" bytes out of \" + fileLength);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tSystem.out.println(\" read \" + elapsed + \" bytes out of \" + fileLength);\n\t\t}\n\t\treturn dis.getMessageDigest().digest();\n\t}","id":63652,"modified_method":"public static byte [] readFile(InputStream inputStream, int fileLength) throws IOException, XMLStreamException {\n\t\t\n\t\tDigestInputStream dis = null;\n\t\ttry {\n\t\t\tdis = new DigestInputStream(inputStream, MessageDigest.getInstance(\"SHA1\"));\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tLibrary.logger().severe(\"No SHA1 available!\");\n\t\t\tAssert.fail(\"No SHA1 available!\");\n\t\t}\n\t\tint elapsed = 0;\n\t\tint read = 0;\n\t\tbyte [] bytes = new byte[BUF_SIZE];\n\t\twhile (elapsed < fileLength) {\n\t\t\tread = dis.read(bytes);\n\t\t\tif (read <= 0) {\n\t\t\t\tSystem.out.println(\"Ran out of things to read at \" + elapsed + \" bytes out of \" + fileLength);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telapsed += read;\n\t\t\tSystem.out.println(\" read \" + elapsed + \" bytes out of \" + fileLength);\n\t\t}\n\t\treturn dis.getMessageDigest().digest();\n\t}","commit_id":"4d9b86ba88fc53c5f0c933f737edf7be2e204561","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"protected ContentObject[] buildBlocks(ContentName rootName,\n\t\t\tlong baseSegmentNumber, SignedInfo signedInfo, \n\t\t\tbyte[] content, int offset, int length, int blockWidth) \n\t\t\t\t\t\t\tthrows InvalidKeyException, InvalidAlgorithmParameterException, IOException {\n\t\t\n\t\tint blockCount = CCNMerkleTree.blockCount(length, blockWidth);\n\t\tContentObject [] blocks = new ContentObject[blockCount];\n\n\t\tlong nextSegmentIndex = baseSegmentNumber;\n\t\t\n\t\tByteArrayInputStream dataStream = new ByteArrayInputStream(content, offset, length);\n\t\tInputStream inputStream = dataStream;\n\t\tCipher thisCipher = null;\n\t\tif (null != _keys) {\n\t\t\t// DKS TODO -- move to streaming version to cut down copies. Here using input\n\t\t\t// streams, eventually push down with this at the end of an output stream.\n\n\t\t\t// Make a separate cipher, so this segmenter can be used by multiple callers at once.\n\t\t\tthisCipher = _keys.getSegmentEncryptionCipher(null, nextSegmentIndex);\n\t\t\t// Override content type to mark encryption.\n\t\t\t// Note: we don't require that writers use our facilities for encryption, so\n\t\t\t// content previously encrypted may not be marked as type ENCR. So on the decryption\n\t\t\t// side we don't require that encrypted data be marked ENCR -- if you give us a\n\t\t\t// decryption key, we'll try to decrypt it.\n\t\t\tsignedInfo.setType(ContentType.ENCR);\n\t\t\t\t\n\t\t\tinputStream = new CipherInputStream(dataStream, thisCipher);\n\t\t} \n\t\t\n\t\tfor (int i=0; i < blockCount; ++i) {\n\t\t\tblocks[i] =  \n\t\t\t\tnew ContentObject(\n\t\t\t\t\t\tSegmentationProfile.segmentName(rootName, nextSegmentIndex),\n\t\t\t\t\t\tsignedInfo,\n\t\t\t\t\t\tinputStream, blockWidth);\n\t\t\tnextSegmentIndex = nextSegmentIndex(nextSegmentIndex, \n\t\t\t\t\t\t\t\t\t\t\t\tblocks[i].contentLength());\n\t\t}\n\t\tif (dataStream.available() > 0) {\n\t\t\t// ByteArrayInputStream supports available() correctly.\n\t\t\tLibrary.logger().warning(\"Unexpected -- not writing out all data blocks!!!\");\n\t\t}\n\t\treturn blocks;\n\t}","id":63653,"modified_method":"protected ContentObject[] buildBlocks(ContentName rootName,\n\t\t\tlong baseSegmentNumber, SignedInfo signedInfo, \n\t\t\tbyte[] content, int offset, int length, int blockWidth) \n\t\t\t\t\t\t\tthrows InvalidKeyException, InvalidAlgorithmParameterException, IOException {\n\t\t\n\t\tint blockCount = CCNMerkleTree.blockCount(length, blockWidth);\n\t\tContentObject [] blocks = new ContentObject[blockCount];\n\n\t\tlong nextSegmentIndex = baseSegmentNumber;\n\t\t\n\t\tfor (int i=0; i < blockCount; ++i) {\n\t\t\tInputStream dataStream = new ByteArrayInputStream(content, offset, length);\n\t\t\tif (null != _keys) {\n\t\t\t\t// DKS TODO -- move to streaming version to cut down copies. Here using input\n\t\t\t\t// streams, eventually push down with this at the end of an output stream.\n\n\t\t\t\t// Make a separate cipher, so this segmenter can be used by multiple callers at once.\n\t\t\t\tCipher thisCipher = _keys.getSegmentEncryptionCipher(null, nextSegmentIndex);\n\t\t\t\tLibrary.logger().finest(\"Created new encryption cipher \"+thisCipher);\n\t\t\t\t// Override content type to mark encryption.\n\t\t\t\t// Note: we don't require that writers use our facilities for encryption, so\n\t\t\t\t// content previously encrypted may not be marked as type ENCR. So on the decryption\n\t\t\t\t// side we don't require that encrypted data be marked ENCR -- if you give us a\n\t\t\t\t// decryption key, we'll try to decrypt it.\n\t\t\t\tsignedInfo.setType(ContentType.ENCR);\n\n\t\t\t\tdataStream = new CipherInputStream(dataStream, thisCipher);\n\t\t\t}\n\t\t\tblocks[i] =  \n\t\t\t\tnew ContentObject(\n\t\t\t\t\t\tSegmentationProfile.segmentName(rootName, nextSegmentIndex),\n\t\t\t\t\t\tsignedInfo,\n\t\t\t\t\t\tdataStream, blockWidth);\n\t\t\tLibrary.logger().finest(\"Created content object - segment \"+nextSegmentIndex+\" before encr=\"+content[offset]+\" after encr=\"+blocks[i].content()[0]);\n\n\t\t\tnextSegmentIndex = nextSegmentIndex(nextSegmentIndex, \n\t\t\t\t\t\t\t\t\t\t\t\tblocks[i].contentLength());\n\t\t\toffset += blockWidth;\n\t\t\tlength -= blockWidth;\n\t\t}\n\t\treturn blocks;\n\t}","commit_id":"311a2581c2fd044c756fdaf6d707f8f20f88cfeb","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"protected ContentObject getFirstBlock() throws IOException {\n\t\tif (null != _startingBlockIndex) {\n\t\t\treturn getBlock(_startingBlockIndex);\n\t\t}\n\t\t// DKS TODO FIX - use get left child; the following is a first stab at that.\n\t\tLibrary.logger().info(\"getFirstBlock: getting \" + _baseName);\n\t\tContentObject result =  _library.getLower(_baseName, 2, _timeout);\n\t\tif (null != result){\n\t\t\tLibrary.logger().info(\"getFirstBlock: retrieved \" + result.name());\n\t\t\t// Now need to verify the block we got\n\t\t\tif (!verifyBlock(result)) {\n\t\t\t\treturn null;\n\t\t\t}\t\n\t\t}\n\t\treturn result;\n\t}","id":63654,"modified_method":"protected ContentObject getFirstBlock() throws IOException {\n\t\tif (null != _startingBlockIndex) {\n\t\t\treturn getBlock(_startingBlockIndex);\n\t\t}\n\t\t// DKS TODO FIX - use get left child; the following is a first stab at that.\n\t\tLibrary.logger().info(\"getFirstBlock: getting \" + _baseName);\n\t\tContentObject result =  _library.getLower(_baseName, 2, _timeout);\n\t\tif (null != result){\n\t\t\tLibrary.logger().info(\"getFirstBlock: retrieved \" + result.name() + \" type: \" + result.signedInfo().getTypeName());\n\t\t\t// Now need to verify the block we got\n\t\t\tif (!verifyBlock(result)) {\n\t\t\t\treturn null;\n\t\t\t}\t\n\t\t}\n\t\treturn result;\n\t}","commit_id":"2372bec24c4d1c53c6e9a731340bffa2d8f5c026","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"boolean verifyBlock(ContentObject block) {\n\n\t\t// First we verify. \n\t\t// Low-level verify just checks that signer actually signed.\n\t\t// High-level verify checks trust.\n\t\ttry {\n\n\t\t\t// We could have several options here. This block could be simply signed.\n\t\t\t// or this could be part of a Merkle Hash Tree. If the latter, we could\n\t\t\t// already have its signing information.\n\t\t\tif (null == block.signature().witness()) {\n\t\t\t\treturn block.verify(null);\n\t\t\t}\n\n\t\t\t// Compare to see whether this block matches the root signature we previously verified, if\n\t\t\t// not, verify and store the current signature.\n\t\t\t// We need to compute the proxy regardless.\n\t\t\tbyte [] proxy = block.computeProxy();\n\n\t\t\t// OK, if we have an existing verified signature, and it matches this block's\n\t\t\t// signature, the proxy ought to match as well.\n\t\t\tif ((null != _verifiedRootSignature) || (Arrays.equals(_verifiedRootSignature, block.signature().signature()))) {\n\t\t\t\tif ((null == proxy) || (null == _verifiedProxy) || (!Arrays.equals(_verifiedProxy, proxy))) {\n\t\t\t\t\tLibrary.logger().warning(\"Found block: \" + block.name().toString() + \" whose digest fails to verify.\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Verifying a new block. See if the signature verifies, otherwise store the signature\n\t\t\t\t// and proxy.\n\t\t\t\tif (!ContentObject.verify(proxy, block.signature().signature(), block.signedInfo(), block.signature().digestAlgorithm(), null)) {\n\t\t\t\t\tLibrary.logger().warning(\"Found block: \" + block.name().toString() + \" whose signature fails to verify.\");\t\t\n\t\t\t\t} else {\n\t\t\t\t\t// Remember current verifiers\n\t\t\t\t\t_verifiedRootSignature = block.signature().signature();\n\t\t\t\t\t_verifiedProxy = proxy;\n\t\t\t\t}\n\t\t\t} \n\t\t\tLibrary.logger().info(\"Got block: \" + block.name().toString() + \", verified.\");\n\t\t} catch (Exception e) {\n\t\t\tLibrary.logger().warning(\"Got an \" + e.getClass().getName() + \" exception attempting to verify block: \" + block.name().toString() + \", treat as failure to verify.\");\n\t\t\tLibrary.warningStackTrace(e);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}","id":63655,"modified_method":"boolean verifyBlock(ContentObject block) {\n\n\t\t// First we verify. \n\t\t// Low-level verify just checks that signer actually signed.\n\t\t// High-level verify checks trust.\n\t\ttry {\n\n\t\t\t// We could have several options here. This block could be simply signed.\n\t\t\t// or this could be part of a Merkle Hash Tree. If the latter, we could\n\t\t\t// already have its signing information.\n\t\t\tif (null == block.signature().witness()) {\n\t\t\t\treturn block.verify(null);\n\t\t\t}\n\n\t\t\t// Compare to see whether this block matches the root signature we previously verified, if\n\t\t\t// not, verify and store the current signature.\n\t\t\t// We need to compute the proxy regardless.\n\t\t\tbyte [] proxy = block.computeProxy();\n\n\t\t\t// OK, if we have an existing verified signature, and it matches this block's\n\t\t\t// signature, the proxy ought to match as well.\n\t\t\tif ((null != _verifiedRootSignature) && (Arrays.equals(_verifiedRootSignature, block.signature().signature()))) {\n\t\t\t\tif ((null == proxy) || (null == _verifiedProxy) || (!Arrays.equals(_verifiedProxy, proxy))) {\n\t\t\t\t\tLibrary.logger().warning(\"Found block: \" + block.name() + \" whose digest fails to verify; block length: \" + block.content().length);\n\t\t\t\t\tLibrary.logger().finer(\"Verification failure: \" + block.name() + \" timestamp: \" + block.signedInfo().getTimestamp() + \" content length: \" + block.content().length + \n\t\t\t\t\t\t\t\" content digest: \" + DataUtils.printBytes(block.contentDigest()) + \" proxy: \" + \n\t\t\t\t\t\t\tDataUtils.printBytes(proxy) + \" expected proxy: \" + DataUtils.printBytes(_verifiedProxy));\n\t \t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Verifying a new block. See if the signature verifies, otherwise store the signature\n\t\t\t\t// and proxy.\n\t\t\t\tif (!ContentObject.verify(proxy, block.signature().signature(), block.signedInfo(), block.signature().digestAlgorithm(), null)) {\n\t\t\t\t\tLibrary.logger().warning(\"Found block: \" + block.name().toString() + \" whose signature fails to verify; block length: \" + block.content().length + \".\");\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\t// Remember current verifiers\n\t\t\t\t\t_verifiedRootSignature = block.signature().signature();\n\t\t\t\t\t_verifiedProxy = proxy;\n\t\t\t\t}\n\t\t\t} \n\t\t\tLibrary.logger().info(\"Got block: \" + block.name().toString() + \", verified.\");\n\t\t} catch (Exception e) {\n\t\t\tLibrary.logger().warning(\"Got an \" + e.getClass().getName() + \" exception attempting to verify block: \" + block.name().toString() + \", treat as failure to verify.\");\n\t\t\tLibrary.warningStackTrace(e);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}","commit_id":"2372bec24c4d1c53c6e9a731340bffa2d8f5c026","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public long tell() {\r\n\t\treturn 0;\r\n\t}","id":63656,"modified_method":"public long tell() {\r\n\t\tif (null == _currentBlock)\r\n\t\t\treturn 0;\r\n\t\treturn ((_header.blockSize() * StandardCCNLibrary.getFragmentNumber(_currentBlock.name())) + _readOffset);\r\n\t}","commit_id":"b7029c41b94ee8746ef646bc1cfc8129caff9e55","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"protected int seek(int blockNumber) {\r\n\t\t_readOffset = 0;\r\n\t\treturn 0;\r\n\t}","id":63657,"modified_method":"protected int seek(int blockNumber) throws IOException, InterruptedException {\r\n\t\t_currentBlock = getBlock(blockNumber);\r\n\t\t_readOffset = 0;\r\n\t\treturn 0;\r\n\t}","commit_id":"b7029c41b94ee8746ef646bc1cfc8129caff9e55","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\r\n\t * Support ideas of seek, etc, even if fuse doesn't\r\n\t * require them. Seek actually does a get on the appropriate content block.\r\n\t */\r\n\tpublic int seek(long offset, Enum<SeekWhence> whence) {\r\n\t\treturn 0;\r\n\t}","id":63658,"modified_method":"/**\r\n\t * Support ideas of seek, etc, even if fuse doesn't\r\n\t * require them. Seek actually does a get on the appropriate content block.\r\n\t * @throws InterruptedException \r\n\t * @throws IOException \r\n\t */\r\n\tpublic int seek(long offset, Enum<SeekWhence> whence) throws IOException, InterruptedException {\r\n\t\t// Assumption that block indices begin at 0.\r\n\t\tif (SeekWhence.SEEK_END == whence) {\r\n\t\t\t\r\n\t\t} else if ((SeekWhence.SEEK_SET == whence) || (null == _currentBlock)) {\r\n\t\t\t// if _currentBlock is null, we are at the beginning regardless of\r\n\t\t\t// whether we were asked for SEEK_CUR\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// SEEK_CUR\r\n\t\t\t// how many bytes are left in this block?\r\n\t\t\tlong bytesRemaining = _currentBlock.content().length - _readOffset;\r\n\t\t\toffset -= bytesRemaining;\r\n\t\t\t\r\n\t\t\tint blockIncrement = (int)Math.floor(offset/_header.blockSize());\r\n\t\t\t\r\n\t\t\tint thisBlock = StandardCCNLibrary.getFragmentNumber(_currentBlock.name());\r\n\t\t\t\r\n\t\t\tseek(thisBlock+blockIncrement);\r\n\t\t\t_readOffset += offset % _header.blockSize();\r\n\t\t}\r\n\t\treturn 0;\r\n\t}","commit_id":"b7029c41b94ee8746ef646bc1cfc8129caff9e55","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"protected ContentObject getBlock(int number) throws IOException, InterruptedException {\r\n\t\t\r\n\t\tContentName blockName = StandardCCNLibrary.fragmentName(_baseName, number);\r\n\r\n\t\tArrayList<ContentObject> blocks = _library.get(blockName, _headerAuthenticator, true);\r\n\t\t\r\n\t\tif ((null == blocks) || (blocks.size() == 0)) {\r\n\t\t\tLibrary.logger().info(\"Cannot get block \" + number + \" of file \" + _baseName + \" expected block: \" + blockName.toString());\r\n\t\t\tthrow new IOException(\"Cannot get block \" + number + \" of file \" + _baseName + \" expected block: \" + blockName.toString());\r\n\t\t}\r\n\t\t// So for each header, we assume we have a potential document.\r\n\t\t\r\n\t\t// First we verify. (Or should get have done this for us?)\r\n\t\t// We don't bother complaining unless we have more than one\r\n\t\t// header that matches. Given that we would complain for\r\n\t\t// that, we need an enumerate that operates at this level.)\r\n\t\tIterator<ContentObject> blockIt = blocks.iterator();\r\n\t\twhile (blockIt.hasNext()) {\r\n\t\t\tContentObject block = blockIt.next();\r\n\t\t\t// TODO: DKS: should this be header.verify()?\r\n\t\t\t// Need low-level verify as well as high-level verify...\r\n\t\t\t// Low-level verify just checks that signer actually signed.\r\n\t\t\t// High-level verify checks trust.\r\n\t\t\ttry {\r\n\t\t\t\tif (!ContentObject.verifyContentDigest(block.authenticator().contentDigest(), block.content())) {\r\n\t\t\t\t\tLibrary.logger().warning(\"Found block: \" + block.name().toString() + \" that fails to verify.\");\r\n\t\t\t\t\tblockIt.remove();\r\n\t\t\t\t}\r\n\t\t\t\t// Compare to see whether this block matches the root signature we previously verified, if\r\n\t\t\t\t// not, verify and store the current signature.\r\n\t\t\t\t// DKS TODO -- and move original verification inside constructor\r\n\t\t\t\t//if ()\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tLibrary.logger().warning(\"Got an \" + e.getClass().getName() + \" exception attempting to verify header: \" + block.name().toString() + \", treat as failure to verify.\");\r\n\t\t\t\tLibrary.warningStackTrace(e);\r\n\t\t\t\tblockIt.remove();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (blocks.size() == 0) {\r\n\t\t\tLibrary.logger().info(\"No available verifiable content named: \" + blockName.toString());\r\n\t\t\tthrow new FileNotFoundException(\"No available verifiable content named: \" + blockName.toString());\r\n\t\t}\r\n\t\tif (blocks.size() > 1) {\r\n\t\t\tLibrary.logger().info(\"Found \" + blocks.size() + \" blocks matching the name: \" + blockName.toString());\r\n\t\t\tthrow new IOException(\"CCNException: More than one (\" + blocks.size() + \") valid block found for name: \" + blockName.toString() + \" in open!\");\r\n\t\t}\r\n\t\tif (blocks.get(0) == null) {\r\n\t\t\tLibrary.logger().info(\"Found only null blocks matching the name: \" + blockName.toString());\r\n\t\t\tthrow new IOException(\"CCNException: No non-null blocks found for name: \" + blockName.toString() + \" in open!\");\r\n\t\t}\r\n\t\treturn null;\r\n\t}","id":63659,"modified_method":"protected ContentObject getBlock(int number) throws IOException, InterruptedException {\r\n\t\t\r\n\t\tContentName blockName = StandardCCNLibrary.fragmentName(_baseName, number);\r\n\r\n\t\tArrayList<ContentObject> blocks = _library.get(blockName, _headerAuthenticator, true);\r\n\t\t\r\n\t\tif ((null == blocks) || (blocks.size() == 0)) {\r\n\t\t\tLibrary.logger().info(\"Cannot get block \" + number + \" of file \" + _baseName + \" expected block: \" + blockName.toString());\r\n\t\t\tthrow new IOException(\"Cannot get block \" + number + \" of file \" + _baseName + \" expected block: \" + blockName.toString());\r\n\t\t}\r\n\t\t// So for each header, we assume we have a potential document.\r\n\t\t\r\n\t\t// First we verify. (Or should get have done this for us?)\r\n\t\t// We don't bother complaining unless we have more than one\r\n\t\t// header that matches. Given that we would complain for\r\n\t\t// that, we need an enumerate that operates at this level.)\r\n\t\tIterator<ContentObject> blockIt = blocks.iterator();\r\n\t\twhile (blockIt.hasNext()) {\r\n\t\t\tContentObject block = blockIt.next();\r\n\t\t\t// TODO: DKS: should this be header.verify()?\r\n\t\t\t// Need low-level verify as well as high-level verify...\r\n\t\t\t// Low-level verify just checks that signer actually signed.\r\n\t\t\t// High-level verify checks trust.\r\n\t\t\ttry {\r\n\t\t\t\tif (!ContentObject.verifyContentDigest(block.authenticator().contentDigest(), block.content())) {\r\n\t\t\t\t\tLibrary.logger().warning(\"Found block: \" + block.name().toString() + \" whose digest fails to verify.\");\r\n\t\t\t\t\tblockIt.remove();\r\n\t\t\t\t}\r\n\t\t\t\t// Compare to see whether this block matches the root signature we previously verified, if\r\n\t\t\t\t// not, verify and store the current signature.\r\n\t\t\t\tif ((null == _verifiedRootSignature) || (!Arrays.equals(_verifiedRootSignature, block.signature()))) {\r\n\t\t\t\t\tif (!ContentObject.verifyContentSignature(block.name(), block.authenticator(), block.signature(), null)) {\r\n\t\t\t\t\t\tLibrary.logger().warning(\"Found block: \" + block.name().toString() + \" whose signature fails to verify.\");\r\n\t\t\t\t\t\tblockIt.remove();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t_verifiedRootSignature = block.signature();\r\n\t\t\t\t\t}\r\n\t\t\t\t} // otherwise, it matches previously verified signature.\r\n\t\t\t\t\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tLibrary.logger().warning(\"Got an \" + e.getClass().getName() + \" exception attempting to verify block: \" + block.name().toString() + \", treat as failure to verify.\");\r\n\t\t\t\tLibrary.warningStackTrace(e);\r\n\t\t\t\tblockIt.remove();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (blocks.size() == 0) {\r\n\t\t\tLibrary.logger().info(\"No available verifiable content named: \" + blockName.toString());\r\n\t\t\tthrow new FileNotFoundException(\"No available verifiable content named: \" + blockName.toString());\r\n\t\t}\r\n\t\tif (blocks.size() > 1) {\r\n\t\t\tLibrary.logger().info(\"Found \" + blocks.size() + \" blocks matching the name: \" + blockName.toString());\r\n\t\t\tthrow new IOException(\"CCNException: More than one (\" + blocks.size() + \") valid block found for name: \" + blockName.toString() + \" in open!\");\r\n\t\t}\r\n\t\tif (blocks.get(0) == null) {\r\n\t\t\tLibrary.logger().info(\"Found only null blocks matching the name: \" + blockName.toString());\r\n\t\t\tthrow new IOException(\"CCNException: No non-null blocks found for name: \" + blockName.toString() + \" in open!\");\r\n\t\t}\r\n\t\treturn blocks.get(0);\r\n\t}","commit_id":"b7029c41b94ee8746ef646bc1cfc8129caff9e55","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\r\n\t * Right now, take callers word that they already\r\n\t * verified this object. Verify blocks with respect\r\n\t * to the information in the header. We could instead\r\n\t * verify in the constructor and except if fail; letting\r\n\t * callers use the constructor to verify.\r\n\t * @param headerObject\r\n\t * @param verified\r\n\t * @throws XMLStreamException if the object is not a valid Header\r\n\t */\r\n\tpublic CCNDescriptor(ContentObject headerObject, \r\n\t\t\t\t\t\t boolean verified,\r\n\t\t\t\t\t\t CCNLibrary library) throws XMLStreamException {\r\n\t\t_library = library; \r\n\t\tif (null == _library) {\r\n\t\t\tthrow new IllegalArgumentException(\"Unexpected null library in CCNDescriptor constructor!\");\r\n\t\t}\r\n\r\n\t\t_headerAuthenticator = headerObject.authenticator();\r\n\t\t_baseName = StandardCCNLibrary.headerRoot(headerObject.name());\r\n\t\t\r\n\t\t_header = new Header();\r\n\t\t_header.decode(headerObject.content());\r\n\t}","id":63660,"modified_method":"/**\r\n\t * Open header of existing object for reading. Eventually might\r\n\t * want to not start from header, and might need to make this\r\n\t * constructor also work for write for open.\r\n\t * @param headerObject\r\n\t * @param verified\r\n\t * @throws XMLStreamException if the object is not a valid Header\r\n\t * @throws InterruptedException \r\n\t * @throws IOException \r\n\t */\r\n\tpublic CCNDescriptor(CompleteName name,\r\n\t\t\t\t\t\t CCNLibrary library) throws XMLStreamException, IOException, InterruptedException {\r\n\t\t_library = library; \r\n\t\tif (null == _library) {\r\n\t\t\tthrow new IllegalArgumentException(\"Unexpected null library in CCNDescriptor constructor!\");\r\n\t\t}\r\n\r\n\t\tContentName nameToOpen = name.name();\r\n\t\tif (StandardCCNLibrary.isFragment(name.name())) {\r\n\t\t\t// DKS TODO: should we do this?\r\n\t\t\tnameToOpen = StandardCCNLibrary.fragmentRoot(nameToOpen);\r\n\t\t}\r\n\t\tif (!_library.isVersioned(nameToOpen)) {\r\n\t\t\t// if publisherID is null, will get any publisher\r\n\t\t\tnameToOpen = \r\n\t\t\t\t_library.getLatestVersionName(nameToOpen, \r\n\t\t\t\t\t\t\t\t\t name.authenticator().publisherKeyID());\r\n\t\t}\r\n\t\t\r\n\t\t// Should have name of root of version we want to\r\n\t\t// open. Get the header block. Already stripped to\r\n\t\t// root. We've altered the header semantics, so that\r\n\t\t// we can just get headers rather than a plethora of\r\n\t\t// fragments. \r\n\t\tContentName headerName = StandardCCNLibrary.headerName(nameToOpen);\r\n\t\t// This might not be unique - \r\n\t\t// we could have here either multiple versions of\r\n\t\t// a given number, or multiple of a given number\r\n\t\t// by a given publisher. If the latter, pick by latest\r\n\t\t// after verifying. If the former, pick by latest\r\n\t\t// version crossed with trust.\r\n\t\t// DKS TODO figure out how to intermix trust information.\r\n\t\t// DKS TODO -- overloaded authenticator as query;\r\n\t\t// doesn't work well - would have to check that right things\r\n\t\t// are asked.\r\n\t\t// DKS TODO -- does get itself do a certain amount of\r\n\t\t// prefiltering? Can it mark objects as verified?\r\n\t\t// do we want to use the low-level get, as the high-level\r\n\t\t// one might unfragment?\r\n\t\tArrayList<ContentObject> headers = _library.get(headerName, name.authenticator(),false);\r\n\t\t\r\n\t\tif ((null == headers) || (headers.size() == 0)) {\r\n\t\t\tLibrary.logger().info(\"No available content named: \" + headerName.toString());\r\n\t\t\tthrow new FileNotFoundException(\"No available content named: \" + headerName.toString());\r\n\t\t}\r\n\t\t// So for each header, we assume we have a potential document.\r\n\t\t\r\n\t\t// First we verify. (Or should get have done this for us?)\r\n\t\t// We don't bother complaining unless we have more than one\r\n\t\t// header that matches. Given that we would complain for\r\n\t\t// that, we need an enumerate that operates at this level.)\r\n\t\tIterator<ContentObject> headerIt = headers.iterator();\r\n\t\twhile (headerIt.hasNext()) {\r\n\t\t\tContentObject header = headerIt.next();\r\n\t\t\t// TODO: DKS: should this be header.verify()?\r\n\t\t\t// Need low-level verify as well as high-level verify...\r\n\t\t\t// Low-level verify just checks that signer actually signed.\r\n\t\t\t// High-level verify checks trust.\r\n\t\t\ttry {\r\n\t\t\t\tif (!_library.verify(header, null)) {\r\n\t\t\t\t\tLibrary.logger().warning(\"Found header: \" + header.name().toString() + \" that fails to verify.\");\r\n\t\t\t\t\theaderIt.remove();\r\n\t\t\t\t}\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tLibrary.logger().warning(\"Got an \" + e.getClass().getName() + \" exception attempting to verify header: \" + header.name().toString() + \", treat as failure to verify.\");\r\n\t\t\t\tLibrary.warningStackTrace(e);\r\n\t\t\t\theaderIt.remove();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (headers.size() == 0) {\r\n\t\t\tLibrary.logger().info(\"No available verifiable content named: \" + headerName.toString());\r\n\t\t\tthrow new FileNotFoundException(\"No available verifiable content named: \" + headerName.toString());\r\n\t\t}\r\n\t\tif (headers.size() > 1) {\r\n\t\t\tLibrary.logger().info(\"Found \" + headers.size() + \" headers matching the name: \" + headerName.toString());\r\n\t\t\tthrow new IOException(\"CCNException: More than one (\" + headers.size() + \") valid header found for name: \" + headerName.toString() + \" in open!\");\r\n\t\t}\r\n\t\t\r\n\t\tContentObject headerObject = headers.get(0);\r\n\t\t\r\n\t\tif (headerObject == null) {\r\n\t\t\tLibrary.logger().info(\"Found only null headers matching the name: \" + headerName.toString());\r\n\t\t\tthrow new IOException(\"CCNException: No non-null header found for name: \" + headerName.toString() + \" in open!\");\r\n\t\t}\r\n\t\t\r\n\t\t_headerAuthenticator = headerObject.authenticator();\r\n\t\t_baseName = StandardCCNLibrary.headerRoot(headerObject.name());\r\n\t\t\r\n\t\t_header = new Header();\r\n\t\t_header.decode(headerObject.content());\r\n\t}","commit_id":"b7029c41b94ee8746ef646bc1cfc8129caff9e55","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\r\n\t * Reads from this object into buf. Starts at the current position in\r\n\t * the object. By default, that starts at the beginning of the object (byte 0)\r\n\t * after open, and subsequent calls to read pick up where the last left off\r\n\t * (analogous to fread), but it can be moved by calling seek.\r\n\t * @param buf the buffer into which to write.\r\n\t * @param offset the offset into buf at which to write data\r\n\t * @param len the number of bytes to write\r\n\t * @return\r\n\t */\r\n\tpublic long read(byte[] buf, long offset, long len) {\r\n\t\tint result = 0;\r\n\t\t\r\n\t\t// is this the first block?\r\n\t\tif (null == _currentBlock) {\r\n\t\t\t// Sets _currentBlock and _readOffset.\r\n\t\t\tresult = seek(0);\r\n\t\t\tif (result != 0) {\r\n\t\t\t\treturn result; // errno analogy?\r\n\t\t\t}\r\n\t\t} \r\n\t\t\r\n\t\t// Now we have a block in place. Read from it. If we run out of block before\r\n\t\t// we've read len bytes, pull next block.\r\n\t\tlong lenToRead = len;\r\n\t\twhile (lenToRead > 0) {\r\n\t\t\tif (_readOffset >= _currentBlock.content().length) {\r\n\t\t\t\t// DKS make sure we don't miss a byte...\r\n\t\t\t\tresult = seek(StandardCCNLibrary.getFragment(_currentBlock.name())+1);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 0;\r\n\t}","id":63661,"modified_method":"/**\r\n\t * Reads from this object into buf. Starts at the current position in\r\n\t * the object. By default, that starts at the beginning of the object (byte 0)\r\n\t * after open, and subsequent calls to read pick up where the last left off\r\n\t * (analogous to fread), but it can be moved by calling seek.\r\n\t * @param buf the buffer into which to write.\r\n\t * @param offset the offset into buf at which to write data\r\n\t * @param len the number of bytes to write\r\n\t * @return\r\n\t * @throws InterruptedException \r\n\t * @throws IOException \r\n\t */\r\n\tpublic long read(byte[] buf, long offset, long len) throws IOException, InterruptedException {\r\n\t\t\r\n\t\tint result = 0;\r\n\t\t\r\n\t\t// is this the first block?\r\n\t\tif (null == _currentBlock) {\r\n\t\t\t// Sets _currentBlock and _readOffset.\r\n\t\t\tresult = seek(0);\r\n\t\t\tif (result != 0) {\r\n\t\t\t\treturn result; // errno analogy?\r\n\t\t\t}\r\n\t\t} \r\n\t\t\r\n\t\t// Now we have a block in place. Read from it. If we run out of block before\r\n\t\t// we've read len bytes, pull next block.\r\n\t\tlong lenToRead = len;\r\n\t\twhile (lenToRead > 0) {\r\n\t\t\tif (_readOffset >= _currentBlock.content().length) {\r\n\t\t\t\t// DKS make sure we don't miss a byte...\r\n\t\t\t\tresult = seek(StandardCCNLibrary.getFragmentNumber(_currentBlock.name())+1);\r\n\t\t\t}\r\n\t\t\tlong readCount = ((_currentBlock.content().length - _readOffset) > len) ? len : (_currentBlock.content().length - _readOffset);\r\n\t\t\tSystem.arraycopy(_currentBlock.content(), (int)_readOffset, buf, (int)offset, (int)readCount);\r\n\t\t\t_readOffset += readCount;\r\n\t\t\toffset += readCount;\r\n\t\t\tlenToRead -= readCount;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}","commit_id":"b7029c41b94ee8746ef646bc1cfc8129caff9e55","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\r\n\t * Extract the fragment information from this name.\r\n\t */\r\n\tpublic static int getFragment(ContentName name) {\r\n\t\tint offset = name.containsWhere(FRAGMENT_MARKER);\r\n\t\treturn Integer.valueOf(ContentName.componentPrint(name.component(offset+1)));\r\n\t}","id":63662,"modified_method":"/**\r\n\t * Extract the fragment information from this name.\r\n\t */\r\n\tpublic static int getFragmentNumber(ContentName name) {\r\n\t\tint offset = name.containsWhere(FRAGMENT_MARKER);\r\n\t\treturn Integer.valueOf(ContentName.componentPrint(name.component(offset+1)));\r\n\t}","commit_id":"b7029c41b94ee8746ef646bc1cfc8129caff9e55","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\r\n\t * Open this name for reading (for now). If the name\r\n\t * is versioned, open that version. Otherwise, open the\r\n\t * latest version. If the name is a fragment, just open that one.\r\n\t * Implicitly implements query match.\r\n\t * Currently suggests can query match only on publisher...\r\n\t * need to systematize this. Some of this might want\r\n\t * to move into CCNDescriptor.\r\n\t * \r\n\t * For now, it looks like the library-level (defragmenting)\r\n\t * get will be implemented in terms of these operations,\r\n\t * rather than the other way 'round. So these should use\r\n\t * the low-level (CCNBase/CCNRepository/CCNNetwork) get.\r\n\t * @throws IOException \r\n\t * @throws InterruptedException \r\n\t */\r\n\tpublic CCNDescriptor open(CompleteName name) throws IOException, InterruptedException {\r\n\t\tContentName nameToOpen = name.name();\r\n\t\tif (isFragment(name.name())) {\r\n\t\t\t// DKS TODO: should we do this?\r\n\t\t\tnameToOpen = fragmentRoot(nameToOpen);\r\n\t\t}\r\n\t\tif (!isVersioned(nameToOpen)) {\r\n\t\t\t// if publisherID is null, will get any publisher\r\n\t\t\tnameToOpen = \r\n\t\t\t\tgetLatestVersionName(nameToOpen, \r\n\t\t\t\t\t\t\t\t\t name.authenticator().publisherKeyID());\r\n\t\t}\r\n\t\t\r\n\t\t// Should have name of root of version we want to\r\n\t\t// open. Get the header block. Already stripped to\r\n\t\t// root. We've altered the header semantics, so that\r\n\t\t// we can just get headers rather than a plethora of\r\n\t\t// fragments. \r\n\t\tContentName headerName = headerName(nameToOpen);\r\n\t\t// This might not be unique - \r\n\t\t// we could have here either multiple versions of\r\n\t\t// a given number, or multiple of a given number\r\n\t\t// by a given publisher. If the latter, pick by latest\r\n\t\t// after verifying. If the former, pick by latest\r\n\t\t// version crossed with trust.\r\n\t\t// DKS TODO figure out how to intermix trust information.\r\n\t\t// DKS TODO -- overloaded authenticator as query;\r\n\t\t// doesn't work well - would have to check that right things\r\n\t\t// are asked.\r\n\t\t// DKS TODO -- does get itself do a certain amount of\r\n\t\t// prefiltering? Can it mark objects as verified?\r\n\t\t// do we want to use the low-level get, as the high-level\r\n\t\t// one might unfragment?\r\n\t\tArrayList<ContentObject> headers = get(headerName, name.authenticator(),false);\r\n\t\t\r\n\t\tif ((null == headers) || (headers.size() == 0)) {\r\n\t\t\tLibrary.logger().info(\"No available content named: \" + headerName.toString());\r\n\t\t\tthrow new FileNotFoundException(\"No available content named: \" + headerName.toString());\r\n\t\t}\r\n\t\t// So for each header, we assume we have a potential document.\r\n\t\t\r\n\t\t// First we verify. (Or should get have done this for us?)\r\n\t\t// We don't bother complaining unless we have more than one\r\n\t\t// header that matches. Given that we would complain for\r\n\t\t// that, we need an enumerate that operates at this level.)\r\n\t\tIterator<ContentObject> headerIt = headers.iterator();\r\n\t\twhile (headerIt.hasNext()) {\r\n\t\t\tContentObject header = headerIt.next();\r\n\t\t\t// TODO: DKS: should this be header.verify()?\r\n\t\t\t// Need low-level verify as well as high-level verify...\r\n\t\t\t// Low-level verify just checks that signer actually signed.\r\n\t\t\t// High-level verify checks trust.\r\n\t\t\ttry {\r\n\t\t\t\tif (!verify(header, null)) {\r\n\t\t\t\t\tLibrary.logger().warning(\"Found header: \" + header.name().toString() + \" that fails to verify.\");\r\n\t\t\t\t\theaderIt.remove();\r\n\t\t\t\t}\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tLibrary.logger().warning(\"Got an \" + e.getClass().getName() + \" exception attempting to verify header: \" + header.name().toString() + \", treat as failure to verify.\");\r\n\t\t\t\tLibrary.warningStackTrace(e);\r\n\t\t\t\theaderIt.remove();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (headers.size() == 0) {\r\n\t\t\tLibrary.logger().info(\"No available verifiable content named: \" + headerName.toString());\r\n\t\t\tthrow new FileNotFoundException(\"No available verifiable content named: \" + headerName.toString());\r\n\t\t}\r\n\t\tif (headers.size() > 1) {\r\n\t\t\tLibrary.logger().info(\"Found \" + headers.size() + \" headers matching the name: \" + headerName.toString());\r\n\t\t\tthrow new IOException(\"CCNException: More than one (\" + headers.size() + \") valid header found for name: \" + headerName.toString() + \" in open!\");\r\n\t\t}\r\n\t\tif (headers.get(0) == null) {\r\n\t\t\tLibrary.logger().info(\"Found only null headers matching the name: \" + headerName.toString());\r\n\t\t\tthrow new IOException(\"CCNException: No non-null header found for name: \" + headerName.toString() + \" in open!\");\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\treturn new CCNDescriptor(headers.get(0), true, this);\r\n\t\t} catch (XMLStreamException e) {\r\n\t\t\tLibrary.logger().warning(\"XMLStreamException: trying to create a CCNDescriptor from header: \" + headerName.toString());\r\n\t\t\tLibrary.warningStackTrace(e);\r\n\t\t\tthrow new IOException(\"XMLStreamException: trying to create a CCNDescriptor from header: \" + headerName.toString());\r\n\t\t}\r\n\t}","id":63663,"modified_method":"/**\r\n\t * Open this name for reading (for now). If the name\r\n\t * is versioned, open that version. Otherwise, open the\r\n\t * latest version. If the name is a fragment, just open that one.\r\n\t * Implicitly implements query match.\r\n\t * Currently suggests can query match only on publisher...\r\n\t * need to systematize this. Some of this might want\r\n\t * to move into CCNDescriptor.\r\n\t * \r\n\t * For now, it looks like the library-level (defragmenting)\r\n\t * get will be implemented in terms of these operations,\r\n\t * rather than the other way 'round. So these should use\r\n\t * the low-level (CCNBase/CCNRepository/CCNNetwork) get.\r\n\t * @throws IOException \r\n\t * @throws InterruptedException \r\n\t */\r\n\tpublic CCNDescriptor open(CompleteName name) throws IOException, InterruptedException, XMLStreamException {\r\n\t\treturn new CCNDescriptor(name, this);\r\n\t}","commit_id":"b7029c41b94ee8746ef646bc1cfc8129caff9e55","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"@Override\n    public void execute(final Editor editor, final DataContext dataContext) {\n      FeatureUsageTracker.getInstance().triggerFeatureUsed(CodeCompletionFeatures.EDITING_COMPLETION_FINISH_BY_SMART_ENTER);\n      TypedHandler.finishLookup(Lookup.COMPLETE_STATEMENT_SELECT_CHAR, ChooseItemAction.getLookup(editor), new Runnable() {\n        public void run() {\n          EditorActionManager.getInstance().getActionHandler(IdeActions.ACTION_EDITOR_TAB).execute(editor, dataContext);\n        }\n      });\n    }","id":63664,"modified_method":"@Override\n    public void execute(Editor editor, DataContext dataContext) {\n      FeatureUsageTracker.getInstance().triggerFeatureUsed(CodeCompletionFeatures.EDITING_COMPLETION_FINISH_BY_SMART_ENTER);\n      ChooseItemAction.getLookup(editor).finishLookup(Lookup.COMPLETE_STATEMENT_SELECT_CHAR);\n    }","commit_id":"563c859bbaecadb28d410b0253ff5100f5207ac5","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void execute(final Editor editor, final DataContext dataContext) {\n      FeatureUsageTracker.getInstance().triggerFeatureUsed(CodeCompletionFeatures.EDITING_COMPLETION_REPLACE);\n      TypedHandler.finishLookup(Lookup.REPLACE_SELECT_CHAR, ChooseItemAction.getLookup(editor), new Runnable() {\n        public void run() {\n          EditorActionManager.getInstance().getActionHandler(IdeActions.ACTION_EDITOR_TAB).execute(editor, dataContext);\n        }\n      });\n    }","id":63665,"modified_method":"@Override\n    public void execute(Editor editor, DataContext dataContext) {\n      FeatureUsageTracker.getInstance().triggerFeatureUsed(CodeCompletionFeatures.EDITING_COMPLETION_REPLACE);\n      ChooseItemAction.getLookup(editor).finishLookup(Lookup.REPLACE_SELECT_CHAR);\n    }","commit_id":"563c859bbaecadb28d410b0253ff5100f5207ac5","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void execute(@NotNull final Editor editor, final DataContext dataContext) {\n      LookupImpl lookup = getLookup(editor);\n      if (!lookup.isFocused()) {\n        FeatureUsageTracker.getInstance().triggerFeatureUsed(CodeCompletionFeatures.EDITING_COMPLETION_CONTROL_ENTER);\n      }\n\n      TypedHandler.finishLookup(Lookup.NORMAL_SELECT_CHAR, lookup, new Runnable() {\n        public void run() {\n          EditorActionManager.getInstance().getActionHandler(IdeActions.ACTION_EDITOR_ENTER).execute(editor, dataContext);\n        }\n      });\n    }","id":63666,"modified_method":"public void execute(@NotNull final Editor editor, final DataContext dataContext) {\n      LookupImpl lookup = getLookup(editor);\n      if (!lookup.isFocused()) {\n        FeatureUsageTracker.getInstance().triggerFeatureUsed(CodeCompletionFeatures.EDITING_COMPLETION_CONTROL_ENTER);\n      }\n\n      lookup.finishLookup(Lookup.NORMAL_SELECT_CHAR);\n    }","commit_id":"08666bd6f4fb6200b2620c3b732d5930da84d8d6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static Runnable rememberDocumentState(final Editor editor) {\n    final String documentText = editor.getDocument().getText();\n    final int caret = editor.getCaretModel().getOffset();\n    final int selStart = editor.getSelectionModel().getSelectionStart();\n    final int selEnd = editor.getSelectionModel().getSelectionEnd();\n\n    return new Runnable() {\n      @Override\n      public void run() {\n        DocumentEx document = (DocumentEx) editor.getDocument();\n\n        // restore the text in two steps, because otherwise the dumb caret model will scroll the editor\n        document.replaceString(0, editor.getCaretModel().getOffset(), documentText.substring(0, caret));\n        document.replaceString(caret, document.getTextLength(), documentText.substring(caret));\n        editor.getSelectionModel().setSelection(selStart, selEnd);\n      }\n    };\n  }","id":63667,"modified_method":"public static Runnable rememberDocumentState(final Editor editor) {\n    final String documentText = editor.getDocument().getText();\n    final int caret = editor.getCaretModel().getOffset();\n    final int selStart = editor.getSelectionModel().getSelectionStart();\n    final int selEnd = editor.getSelectionModel().getSelectionEnd();\n\n    final int vOffset = editor.getScrollingModel().getVerticalScrollOffset();\n    final int hOffset = editor.getScrollingModel().getHorizontalScrollOffset();\n\n    return new Runnable() {\n      @Override\n      public void run() {\n        DocumentEx document = (DocumentEx) editor.getDocument();\n\n        document.replaceString(0, document.getTextLength(), documentText);\n        editor.getCaretModel().moveToOffset(caret);\n        editor.getSelectionModel().setSelection(selStart, selEnd);\n\n        editor.getScrollingModel().scrollHorizontally(hOffset);\n        editor.getScrollingModel().scrollVertically(vOffset);\n      }\n    };\n  }","commit_id":"08666bd6f4fb6200b2620c3b732d5930da84d8d6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static TreebankLangParserParams getLanguageParams(Language lang) {\n    TreebankLangParserParams tlpp; // initialized below\n    switch(lang) {\n    case Arabic:\n      tlpp = new ArabicTreebankParserParams();\n      break;\n   \n    case Chinese:\n      tlpp = new ChineseTreebankParserParams();\n      break;\n\n    case German:\n      tlpp = new NegraPennTreebankParserParams();\n      break;\n\n    case French:\n      tlpp = new FrenchTreebankParserParams();\n      break;\n\n    case Hebrew:\n      tlpp = new HebrewTreebankParserParams();\n      break;\n\n    case Spanish:\n      tlpp = new SpanishTreebankParserParams();\n      break;\n\n    default:\n      tlpp = new EnglishTreebankParserParams();\n    }\n    return tlpp;\n  }","id":63668,"modified_method":"public static TreebankLangParserParams getLanguageParams(Language lang) {\n    TreebankLangParserParams tlpp; // initialized below\n    switch(lang) {\n    case Arabic:\n      tlpp = new ArabicTreebankParserParams();\n      break;\n   \n    case Chinese:\n      tlpp = new ChineseTreebankParserParams();\n      break;\n\n    case German:\n      tlpp = new NegraPennTreebankParserParams();\n      break;\n\n    case French:\n      tlpp = new FrenchTreebankParserParams();\n      break;\n\n    case Hebrew:\n      tlpp = new HebrewTreebankParserParams();\n      break;\n\n    default:\n      tlpp = new EnglishTreebankParserParams();\n    }\n    return tlpp;\n  }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static String getOverrideTag(String word, String containingPhrase) {\n      if (containingPhrase == null)\n        return null;\n\n      if (word.equalsIgnoreCase(\"este\") && !containingPhrase.startsWith(word))\n        return \"np00000\";\n      else if (word.equals(\"Sin\") && containingPhrase.startsWith(\"Sin embargo\"))\n        return \"sp000\";\n      else if (word.equals(\"contra\")\n        && (containingPhrase.startsWith(\"en contra\") || containingPhrase.startsWith(\"En contra\")))\n        return \"nc0s000\";\n      else if (word.equals(\"total\") && containingPhrase.startsWith(\"ese\"))\n        return \"nc0s000\";\n      else if (word.equals(\"DEL\"))\n        // Uses of \"Del\" in corpus are proper nouns, but uses of \"DEL\" are\n        // prepositions.. convenient for our purposes\n        return \"sp000\";\n      else if (word.equals(\"sí\") && containingPhrase.contains(\"por sí\")\n        || containingPhrase.contains(\"fuera de sí\"))\n        return \"pp000000\";\n      else if (pPronounDeterminers.matcher(word).matches() && containingPhrase.endsWith(word))\n        // Determiners tailing a phrase are pronouns: \"sobre todo,\" \"al otro\", etc.\n        return \"pi000000\";\n      else if (word.equals(\"cuando\") && containingPhrase.endsWith(word))\n        return \"pi000000\";\n      else if ((word.equalsIgnoreCase(\"contra\") && containingPhrase.endsWith(word)))\n        return \"nc0s000\";\n      else if (word.equals(\"salvo\") && containingPhrase.endsWith(\"salvo\"))\n        return \"aq0000\";\n      else if (word.equals(\"mira\") && containingPhrase.endsWith(word))\n        return \"nc0s000\";\n      else if (word.equals(\"pro\") && containingPhrase.startsWith(\"en pro\"))\n        return \"nc0s000\";\n      else if (word.equals(\"espera\") && containingPhrase.endsWith(\"espera de\"))\n        return \"nc0s000\";\n      else if (word.equals(\"Paso\") && containingPhrase.equals(\"El Paso\"))\n        return \"np00000\";\n      else if (word.equals(\"medio\") && (containingPhrase.endsWith(\"medio de\") || containingPhrase.endsWith(\"ambiente\")\n        || containingPhrase.endsWith(\"por medio\") || containingPhrase.contains(\"por medio\")\n        || containingPhrase.endsWith(\"medio\")))\n        return \"nc0s000\";\n      else if (word.equals(\"Medio\") && containingPhrase.contains(\"Ambiente\"))\n        return \"nc0s000\";\n      else if (word.equals(\"Medio\") && containingPhrase.equals(\"Oriente Medio\"))\n        return \"aq0000\";\n      else if (word.equals(\"media\") && containingPhrase.equals(\"mass media\"))\n        return \"nc0n000\";\n      else if (word.equals(\"cuenta\")) // tomar en cuenta, darse cuenta de, ...\n        return \"nc0s000\";\n\n      if (word.equals(\"Al\")) {\n        // \"Al\" is sometimes a part of name phrases: Arabic names, Al Gore, etc.\n        // Mark it a noun if its containing phrase has some other capitalized word\n        if (otherNamePattern.matcher(containingPhrase).find())\n          return \"np00000\";\n        else\n          return \"sp000\";\n      }\n\n      if (actuallyNames.contains(word))\n        return \"np00000\";\n\n      if (word.equals(\"sino\") && containingPhrase.endsWith(word))\n        return \"nc0s000\";\n      else if (word.equals(\"mañana\") || word.equals(\"paso\") || word.equals(\"monta\") || word.equals(\"deriva\")\n        || word.equals(\"visto\"))\n        return \"nc0s000\";\n      else if (word.equals(\"frente\") && containingPhrase.startsWith(\"al frente\"))\n        return \"nc0s000\";\n\n      return null;\n    }","id":63669,"modified_method":"public static String getOverrideTag(String word, String containingPhrase) {\n      if (containingPhrase == null)\n        return null;\n\n      if (word.equalsIgnoreCase(\"este\") && !containingPhrase.startsWith(word))\n        return \"np00000\";\n      else if (word.equals(\"Al\") && containingPhrase.startsWith(\"Al fin\"))\n        return \"sp000\";\n      else if (word.equals(\"Sin\") && containingPhrase.startsWith(\"Sin embargo\"))\n        return \"sp000\";\n\n      if (actuallyNames.contains(word))\n        return \"np00000\";\n\n      if (word.equals(\"sino\") && containingPhrase.endsWith(word))\n        return \"nc0s000\";\n      else if (word.equals(\"mañana\"))\n        return \"nc0s000\";\n\n      return null;\n    }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Attempt to infer the part of speech of the given preterminal node, which\n   * was created during the expansion of a multi-word token.\n   */\n  private static String inferPOS(Tree t, Tree parent,\n                                 TwoDimensionalCounter<String, String> unigramTagger) {\n    String word = t.firstChild().value();\n    String containingPhraseStr = getContainingPhrase(t, parent);\n\n    // Overrides: let the manual POS model handle a few special cases first\n    String overrideTag = ManualUWModel.getOverrideTag(word, containingPhraseStr);\n    if (overrideTag != null)\n      return overrideTag;\n\n    Set<String> unigramTaggerKeys = unigramTagger.firstKeySet();\n\n    // Try treating this word as a verb and stripping any clitic\n    // pronouns. If the stripped version exists in the unigram\n    // tagger, then stick with the verb hypothesis\n    Pair<String, List<String>> strippedVerb = SpanishVerbStripper.separatePronouns(word);\n    if (strippedVerb != null && unigramTaggerKeys.contains(strippedVerb.first())) {\n      String pos = Counters.argmax(unigramTagger.getCounter(strippedVerb.first()));\n      if (pos.startsWith(\"v\"))\n        return pos;\n    }\n\n    if (unigramTagger.firstKeySet().contains(word))\n      return Counters.argmax(unigramTagger.getCounter(word));\n\n    return ManualUWModel.getTag(word, containingPhraseStr);\n  }","id":63670,"modified_method":"/**\n   * Attempt to infer the part of speech of the given preterminal node, which\n   * was created during the expansion of a multi-word token.\n   */\n  private static String inferPOS(Tree t, Tree parent,\n                                 TwoDimensionalCounter<String, String> unigramTagger) {\n    String word = t.firstChild().value();\n    String containingPhraseStr = getContainingPhrase(t, parent);\n\n    // Overrides: let the manual POS model handle a few special cases first\n    String overrideTag = ManualUWModel.getOverrideTag(word, containingPhraseStr);\n    if (overrideTag != null)\n      return overrideTag;\n\n    if (unigramTagger.firstKeySet().contains(word))\n      return Counters.argmax(unigramTagger.getCounter(word));\n\n    return ManualUWModel.getTag(word, containingPhraseStr);\n  }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static void resolveDummyTags(File treeFile,\n                                       TwoDimensionalCounter<String, String> pretermLabel,\n                                       TwoDimensionalCounter<String, String> unigramTagger,\n                                       boolean retainNER, TreeNormalizer tn) {\n    TreeFactory tf = new LabeledScoredTreeFactory();\n\n    try {\n      BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(treeFile), \"UTF-8\"));\n      TreeReaderFactory trf = new SpanishTreeReaderFactory();\n      TreeReader tr = trf.newTreeReader(br);\n\n      PrintWriter pw = new PrintWriter(new PrintStream(new FileOutputStream(new File(treeFile + \".fixed\")),false,\"UTF-8\"));\n\n      int nTrees = 0;\n      for(Tree t; (t = tr.readTree()) != null;nTrees++) {\n        traverseAndFix(t, null, pretermLabel, unigramTagger, retainNER);\n\n        // Now \"decompress\" further the expanded trees formed by\n        // multiword token splitting\n        t = MultiWordTreeExpander.expandPhrases(t, tn, tf);\n\n        if (tn != null)\n          t = tn.normalizeWholeTree(t, tf);\n\n        pw.println(t.toString());\n      }\n\n      pw.close();\n      tr.close();\n\n      System.out.println(\"Processed \" +nTrees+ \" trees\");\n\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    } catch (FileNotFoundException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","id":63671,"modified_method":"private static void resolveDummyTags(File treeFile,\n                                       TwoDimensionalCounter<String, String> pretermLabel,\n                                       TwoDimensionalCounter<String, String> unigramTagger,\n                                       boolean retainNER, TreeNormalizer tn) {\n    TreeFactory tf = new LabeledScoredTreeFactory();\n\n    try {\n      BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(treeFile), \"UTF-8\"));\n      TreeReaderFactory trf = new SpanishTreeReaderFactory();\n      TreeReader tr = trf.newTreeReader(br);\n\n      PrintWriter pw = new PrintWriter(new PrintStream(new FileOutputStream(new File(treeFile + \".fixed\")),false,\"UTF-8\"));\n\n      int nTrees = 0;\n      for(Tree t; (t = tr.readTree()) != null;nTrees++) {\n        traverseAndFix(t, null, pretermLabel, unigramTagger, retainNER);\n\n        // Now \"decompress\" further the expanded trees formed by\n        // multiword token splitting\n        t = MultiWordTreeExpander.expandPhrases(t);\n\n        if (tn != null)\n          t = tn.normalizeWholeTree(t, tf);\n\n        pw.println(t.toString());\n      }\n\n      pw.close();\n      tr.close();\n\n      System.out.println(\"Processed \" +nTrees+ \" trees\");\n\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    } catch (FileNotFoundException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Recognize candidate patterns for expansion in the given tree and\n   * perform the expansions. See the class documentation for more\n   * information.\n   */\n  public static Tree expandPhrases(Tree t, TreeNormalizer tn, TreeFactory tf) {\n    // Keep running this sequence of patterns until no changes are\n    // affected. We need this for nested expressions like \"para tratar\n    // de regresar al empleo.\" This first step produces lots of\n    // \"intermediate\" tree structures which need to be cleaned up later.\n    Tree oldTree;\n    do {\n      oldTree = t.deepCopy();\n      t = Tsurgeon.processPatternsOnTree(firstStepExpansions, t);\n    } while (!t.equals(oldTree));\n\n    // Now clean up intermediate tree structures\n    t = Tsurgeon.processPatternsOnTree(intermediateExpansions, t);\n\n    // Normalize first to allow for contraction expansion, etc.\n    t = tn.normalizeWholeTree(t, tf);\n\n    // Final cleanup\n    t = Tsurgeon.processPatternsOnTree(finalCleanup, t);\n\n    return t;\n  }","id":63672,"modified_method":"/**\n   * Recognize candidate patterns for expansion in the given tree and\n   * perform the expansions. See the class documentation for more\n   * information.\n   */\n  public static Tree expandPhrases(Tree t) {\n    // Keep running this sequence of patterns until no changes are\n    // affected. We need this for nested expressions like \"para tratar\n    // de regresar al empleo.\" This first step produces lots of\n    // \"intermediate\" tree structures which need to be cleaned up later.\n    Tree oldTree;\n    do {\n      oldTree = t.deepCopy();\n      t = Tsurgeon.processPatternsOnTree(firstStepExpansions, t);\n    } while (!t.equals(oldTree));\n\n    // Now clean up intermediate tree structures\n    t = Tsurgeon.processPatternsOnTree(intermediateExpansions, t);\n\n    t = Tsurgeon.processPatternsOnTree(finalCleanup, t);\n\n    return t;\n  }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Separate clitic pronouns into their own tokens in the given tree.\n   * (The clitic pronouns are attached under new `grup.nom` constituents\n   * which follow the verbs to which they were formerly attached.)\n   */\n  private static Tree expandCliticPronouns(Tree t) {\n    TregexMatcher matcher = verbWithCliticPronouns.matcher(t);\n    while (matcher.find()) {\n      Tree clause = matcher.getNode(\"clause\");\n      Tree target = matcher.getNode(\"target\");\n      Tree verb = matcher.getNode(\"vb\");\n\n      // Calculate index at which to insert pronominal phrase\n      int idx = clause.objectIndexOf(target) + 1;\n\n      Pair<String, List<String>> split =\n        SpanishVerbStripper.separatePronouns(verb.value());\n      if (split == null)\n        continue;\n\n      // Insert clitic pronouns as leaves of pronominal phrases which are\n      // siblings of `target`. Iterate in reverse order since pronouns are\n      // attached to immediate right of `target`\n      List<String> pronouns = split.second();\n      for (int i = pronouns.size() - 1; i >= 0; i--) {\n        String pronoun = pronouns.get(i);\n        String patternString = String.format(\"[insert (morfema.pronominal (pp000000 %s)) $- target]\", pronoun);\n        TsurgeonPattern pattern = Tsurgeon.parseOperation(patternString);\n        t = pattern.evaluate(t, matcher);\n      }\n\n      TsurgeonPattern relabelOperation =\n        Tsurgeon.parseOperation(String.format(\"[relabel vb /%s/]\", split.first()));\n      t = relabelOperation.evaluate(t, matcher);\n    }\n\n    return t;\n  }","id":63673,"modified_method":"/**\n   * Separate clitic pronouns into their own tokens in the given tree.\n   * (The clitic pronouns are attached under new `grup.nom` constituents\n   * which follow the verbs to which they were formerly attached.)\n   */\n  private static Tree expandCliticPronouns(Tree t) {\n    TregexMatcher matcher = verbWithCliticPronouns.matcher(t);\n    while (matcher.find()) {\n      Tree clause = matcher.getNode(\"clause\");\n      Tree target = matcher.getNode(\"target\");\n      Tree verb = matcher.getNode(\"vb\");\n\n      // Calculate index at which to insert pronominal phrase\n      int idx = clause.objectIndexOf(target) + 1;\n\n      Pair<String, List<String>> split =\n        SpanishVerbStripper.separatePronouns(verb.value());\n      if (split == null)\n        continue;\n\n      // Insert clitic pronouns as leaves of pronominal phrases which are\n      // siblings of `target`. Iterate in reverse order since pronouns are\n      // attached to immediate right of `target`\n      List<String> pronouns = split.second();\n      for (int i = pronouns.size() - 1; i >= 0; i--) {\n        String pronoun = pronouns.get(i);\n        String patternString = String.format(\"[insert (sn (grup.nom (pp000000 %s))) $- target]\", pronoun);\n        TsurgeonPattern pattern = Tsurgeon.parseOperation(patternString);\n        t = pattern.evaluate(t, matcher);\n      }\n\n      TsurgeonPattern relabelOperation =\n        Tsurgeon.parseOperation(String.format(\"[relabel vb /%s/]\", split.first()));\n      t = relabelOperation.evaluate(t, matcher);\n    }\n\n    return t;\n  }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Return the (single or multiple) words which make up the given\n   * token.\n   */\n  private String[] getMultiWords(String token) {\n    token = prepareForMultiWordExtraction(token);\n\n    Matcher quoteMatcher = pQuoted.matcher(token);\n    if (quoteMatcher.matches()) {\n      String[] ret = new String[3];\n      ret[0] = \"\\\"\";\n      ret[1] = quoteMatcher.group(1);\n      ret[2] = \"\\\"\";\n\n      return ret;\n    }\n\n    // Confusing: we are using a tokenizer to split a token into its\n    // constituent words\n    StringTokenizer splitter = new StringTokenizer(token, WORD_SEPARATORS,\n                                                   true);\n    int remainingTokens = splitter.countTokens();\n\n    List<String> words = new ArrayList<String>();\n\n    while (splitter.hasMoreTokens()) {\n      String word = splitter.nextToken();\n      remainingTokens--;\n\n      if (shouldDropWord(word))\n        // This is a delimiter that we should drop\n        continue;\n\n      if (remainingTokens >= 2 && hyphenBoundMorphemes.contains(word)) {\n        String hyphen = splitter.nextToken();\n        remainingTokens--;\n\n        if (!hyphen.equals(\"-\")) {\n          // Ouch. We expected a hyphen here. Clean things up and keep\n          // moving.\n          words.add(word);\n\n          if (!shouldDropWord(hyphen))\n            words.add(hyphen);\n\n          continue;\n        }\n\n        String freeMorpheme = splitter.nextToken();\n        remainingTokens--;\n\n        words.add(word + hyphen + freeMorpheme);\n        continue;\n      }\n\n      // Otherwise..\n      words.add(word);\n    }\n\n    return words.toArray(new String[words.size()]);\n  }","id":63674,"modified_method":"/**\n   * Return the (single or multiple) words which make up the given\n   * token.\n   */\n  private String[] getMultiWords(String token) {\n    token = prepareForMultiWordExtraction(token);\n\n    Matcher quoteMatcher = pQuoted.matcher(token);\n    if (quoteMatcher.matches()) {\n      String[] ret = new String[3];\n      ret[0] = \"\\\"\";\n      ret[1] = quoteMatcher.group(1);\n      ret[2] = \"\\\"\";\n\n      return ret;\n    }\n\n    // Confusing: we are using a tokenizer to split a token into its\n    // constituent words\n    StringTokenizer splitter = new StringTokenizer(token, WORD_SEPARATORS,\n                                                   true);\n    int remainingTokens = splitter.countTokens();\n\n    List<String> words = new ArrayList<String>();\n\n    while (splitter.hasMoreTokens()) {\n      String word = splitter.nextToken();\n      remainingTokens--;\n\n      if (word.length() == 1\n          && WORD_SEPARATORS_DROP.indexOf(word.charAt(0)) != -1)\n        // This is a delimiter that we should drop\n        continue;\n\n      if (remainingTokens >= 2 && hyphenBoundMorphemes.contains(word)) {\n        String hyphen = splitter.nextToken();\n        remainingTokens--;\n\n        if (!hyphen.equals(\"-\")) {\n          // Ouch. We expected a hyphen here. Clean things up and keep\n          // moving.\n          words.add(word);\n          words.add(hyphen);\n          continue;\n        }\n\n        String freeMorpheme = splitter.nextToken();\n        remainingTokens--;\n\n        words.add(word + hyphen + freeMorpheme);\n        continue;\n      }\n\n      // Otherwise..\n      words.add(word);\n    }\n\n    return words.toArray(new String[words.size()]);\n  }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public SpanishTreeNormalizer(boolean simplifiedTagset,\n                               boolean aggressiveNormalization,\n                               boolean retainNER) {\n    super(new SpanishTreebankLanguagePack());\n\n    if (retainNER && !simplifiedTagset)\n      throw new IllegalArgumentException(\"retainNER argument only valid when \" +\n                                         \"simplified tagset is used\");\n\n    this.simplifiedTagset = simplifiedTagset;\n    this.aggressiveNormalization = aggressiveNormalization;\n    this.retainNER = retainNER;\n  }","id":63675,"modified_method":"public SpanishTreeNormalizer(boolean simplifiedTagset,\n                               boolean aggressiveNormalization,\n                               boolean retainNER) {\n    if (retainNER && !simplifiedTagset)\n      throw new IllegalArgumentException(\"retainNER argument only valid when \" +\n                                         \"simplified tagset is used\");\n\n    this.simplifiedTagset = simplifiedTagset;\n    this.aggressiveNormalization = aggressiveNormalization;\n    this.retainNER = retainNER;\n  }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter).spliceOut(aOverAFilter);\n\n    // Now start some simple cleanup\n    tree = Tsurgeon.processPatternsOnTree(cleanup, tree);\n\n    // Find all named entities which are not multi-word tokens and nest\n    // them within named entity NP groups\n    if (retainNER)\n      markSimpleNamedEntities(tree);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // More tregex-powered fixes\n    tree = expandElisions(tree);\n    tree = expandCliticPronouns(tree);\n\n    // Make sure the tree has a top-level unary rewrite; the root\n    // should have a proper root label\n    String rootLabel = tlp.startSymbol();\n    if (!tree.value().equals(rootLabel))\n      tree = tf.newTreeNode(rootLabel, Collections.singletonList(tree));\n\n    return tree;\n  }","id":63676,"modified_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter);\n\n    // Find all named entities which are not multi-word tokens and nest\n    // them within named entity NP groups\n    if (retainNER)\n      markSimpleNamedEntities(tree);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // More tregex-powered fixes\n    tree = expandElisions(tree);\n    tree = expandCliticPronouns(tree);\n\n    return tree;\n  }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Returns a String array of punctuation words for this treebank/language.\n   *\n   * @return The punctuation words\n   */\n  @Override\n  public String[] punctuationWords() {\n    return punctWords;\n  }","id":63677,"modified_method":"/**\n   * Returns a String array of punctuation words for this treebank/language.\n   *\n   * @return The punctuation words\n   */\n  @Override\n  public String[] punctuationWords() {\n    return frenchPunctWords;\n  }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Returns a String array of sentence final punctuation words for this\n   * treebank/language.\n   *\n   * @return The sentence final punctuation tags\n   */\n  public String[] sentenceFinalPunctuationWords() {\n    return sentenceFinalPunctWords;\n  }","id":63678,"modified_method":"/**\n   * Returns a String array of sentence final punctuation words for this\n   * treebank/language.\n   *\n   * @return The sentence final punctuation tags\n   */\n  public String[] sentenceFinalPunctuationWords() {\n    return frenchSFPunctWords;\n  }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Returns a String array of sentence final punctuation tags for this\n   * treebank/language.\n   *\n   * @return The sentence final punctuation tags\n   */\n  @Override\n  public String[] sentenceFinalPunctuationTags() {\n    return sentenceFinalPunctTags;\n  }","id":63679,"modified_method":"/**\n   * Returns a String array of sentence final punctuation tags for this\n   * treebank/language.\n   *\n   * @return The sentence final punctuation tags\n   */\n  @Override\n  public String[] sentenceFinalPunctuationTags() {\n    return frenchSFPunctTags;\n  }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public String getEncoding() {\n    return STB_ENCODING;\n  }","id":63680,"modified_method":"@Override\n  public String getEncoding() {\n    return FTB_ENCODING;\n  }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Returns a String array of treebank start symbols.\n   *\n   * @return The start symbols\n   */\n  @Override\n  public String[] startSymbols() {\n    return startSymbols;\n  }","id":63681,"modified_method":"/**\n   * Returns a String array of treebank start symbols.\n   *\n   * @return The start symbols\n   */\n  @Override\n  public String[] startSymbols() {\n    return frenchStartSymbols;\n  }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Returns a String array of punctuation tags for this treebank/language.\n   *\n   * @return The punctuation tags\n   */\n  @Override\n  public String[] punctuationTags() {\n    return punctTags;\n  }","id":63682,"modified_method":"/**\n   * Returns a String array of punctuation tags for this treebank/language.\n   *\n   * @return The punctuation tags\n   */\n  @Override\n  public String[] punctuationTags() {\n    return frenchPunctTags;\n  }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Attempt to separate attached pronouns from the given verb.\n   *\n   * @param verb Spanish verb\n   * @return A pair containing the verb (pronouns removed) and a list of\n   *           the pronouns which were attached to the verb, or\n   *           <tt>null<\/tt> if no pronouns could be located and\n   *           separated.\n   */\n  public static Pair<String, List<String>> separatePronouns(String verb) {\n    Pair<String, List<String>> separated;\n\n    // Try to strip just one pronoun first\n    separated = stripSuffix(verb, pOneAttachedPronoun);\n    if (separated != null && validateVerbPair(separated))\n      return separated;\n\n    // Now two\n    separated = stripSuffix(verb, pTwoAttachedPronouns);\n    if (separated != null && validateVerbPair(separated))\n      return separated;\n\n    return null;\n  }","id":63683,"modified_method":"/**\n   * Attempt to separate attached pronouns from the given verb.\n   *\n   * @param verb Spanish verb\n   * @return A pair containing the verb (pronouns removed) and a list of\n   *           the pronouns which were attached to the verb, or\n   *           <tt>null<\/tt> if no pronouns could be located and\n   *           separated.\n   */\n  public static Pair<String, List<String>> separatePronouns(String verb) {\n    Pair<String, List<String>> separated;\n\n    // Try to strip just one pronoun first\n    separated = stripSuffix(verb, pOneAttachedPronoun);\n    // Try `word + 'd'` as well for cases like 'sentaos'; stripped this\n    // becomes 'senta', and we only have the form 'sentad' in the\n    // dictionary\n    if (separated != null) {\n      String stripped = separated.first().toLowerCase();\n\n      if (isVerb(stripped) || isVerb(stripped + 'd'))\n        return separated;\n    }\n\n    separated = stripSuffix(verb, pTwoAttachedPronouns);\n    if (separated != null) {\n      String stripped = separated.first().toLowerCase();\n\n      if (isVerb(stripped) || isVerb(stripped + 'd'))\n        return separated;\n    }\n\n    return null;\n  }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"unchecked\")\n  public static void testSeparatePronouns() {\n    List<String> pronouns = new ArrayList<String>();\n    pronouns.add(\"me\");\n    assertEquals(new Pair(\"decir\", pronouns),\n                 SpanishVerbStripper.separatePronouns(\"decirme\"));\n\n    // Should match capitalized verbs as well\n    assertEquals(new Pair(\"Decir\", pronouns),\n      SpanishVerbStripper.separatePronouns(\"Decirme\"));\n\n    pronouns.clear();\n    pronouns.add(\"se\");\n    pronouns.add(\"lo\");\n    assertEquals(new Pair(\"contando\", pronouns),\n                 SpanishVerbStripper.separatePronouns(\"contándoselo\"));\n\n    pronouns.clear();\n    pronouns.add(\"se\");\n    pronouns.add(\"les\");\n    assertEquals(new Pair(\"aplicar\", pronouns),\n      SpanishVerbStripper.separatePronouns(\"aplicárseles\"));\n\n    // Don't treat plural past participles as 2nd-person commands!\n    assertNull(SpanishVerbStripper.separatePronouns(\"sentados\"));\n    pronouns.clear();\n    pronouns.add(\"os\");\n    assertEquals(new Pair(\"sentad\", pronouns),\n      SpanishVerbStripper.separatePronouns(\"sentaos\"));\n\n    // Looks like a verb with a clitic pronoun.. but it's not! There are\n    // a *lot* of these in Spanish.\n    assertNull(SpanishVerbStripper.separatePronouns(\"címbalo\"));\n\n    assertNull(SpanishVerbStripper.separatePronouns(\"contando\"));\n  }","id":63684,"modified_method":"@SuppressWarnings(\"unchecked\")\n  public static void testSeparatePronouns() {\n    List<String> pronouns = new ArrayList<String>();\n    pronouns.add(\"me\");\n    assertEquals(new Pair(\"decir\", pronouns),\n                 SpanishVerbStripper.separatePronouns(\"decirme\"));\n\n    // Should match capitalized verbs as well\n    assertEquals(new Pair(\"Decir\", pronouns),\n      SpanishVerbStripper.separatePronouns(\"Decirme\"));\n\n    pronouns.clear();\n    pronouns.add(\"se\");\n    pronouns.add(\"lo\");\n    assertEquals(new Pair(\"contando\", pronouns),\n                 SpanishVerbStripper.separatePronouns(\"contándoselo\"));\n\n    pronouns.clear();\n    pronouns.add(\"se\");\n    pronouns.add(\"les\");\n    assertEquals(new Pair(\"aplicar\", pronouns),\n      SpanishVerbStripper.separatePronouns(\"aplicárseles\"));\n\n    // Looks like a verb with a clitic pronoun.. but it's not! There are\n    // a *lot* of these in Spanish.\n    assertNull(SpanishVerbStripper.separatePronouns(\"címbalo\"));\n\n    assertNull(SpanishVerbStripper.separatePronouns(\"contando\"));\n  }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void testStripVerb() {\n    assertEquals(\"decir\", SpanishVerbStripper.stripVerb(\"decirme\"));\n    assertEquals(\"decir\", SpanishVerbStripper.stripVerb(\"decirnos\"));\n    assertEquals(\"jugar\", SpanishVerbStripper.stripVerb(\"jugarles\"));\n    assertEquals(\"mandar\", SpanishVerbStripper.stripVerb(\"mandarlos\"));\n    assertEquals(\"leer\", SpanishVerbStripper.stripVerb(\"leerlo\"));\n    assertEquals(\"jugar\", SpanishVerbStripper.stripVerb(\"jugarla\"));\n    assertEquals(\"jugar\", SpanishVerbStripper.stripVerb(\"jugárselos\"));\n    assertEquals(\"jugar\", SpanishVerbStripper.stripVerb(\"jugaros\"));\n    assertEquals(\"decir\", SpanishVerbStripper.stripVerb(\"decírmelo\"));\n    assertEquals(\"contando\", SpanishVerbStripper.stripVerb(\"contándolo\"));\n    assertEquals(\"yendo\", SpanishVerbStripper.stripVerb(\"yéndole\"));\n    assertEquals(\"viviendo\", SpanishVerbStripper.stripVerb(\"viviéndolo\"));\n    assertEquals(\"leyendo\", SpanishVerbStripper.stripVerb(\"leyéndolo\"));\n    assertEquals(\"buscando\", SpanishVerbStripper.stripVerb(\"buscándome\"));\n    assertEquals(\"sentad\", SpanishVerbStripper.stripVerb(\"sentaos\"));\n    assertEquals(\"vestid\", SpanishVerbStripper.stripVerb(\"vestíos\"));\n    assertEquals(\"compre\", SpanishVerbStripper.stripVerb(\"cómprelos\"));\n    assertEquals(\"haz\", SpanishVerbStripper.stripVerb(\"házmelo\"));\n    assertEquals(\"oír\", SpanishVerbStripper.stripVerb(\"oírse\"));\n  }","id":63685,"modified_method":"public static void testStripVerb() {\n    assertEquals(\"decir\", SpanishVerbStripper.stripVerb(\"decirme\"));\n    assertEquals(\"decir\", SpanishVerbStripper.stripVerb(\"decirnos\"));\n    assertEquals(\"jugar\", SpanishVerbStripper.stripVerb(\"jugarles\"));\n    assertEquals(\"mandar\", SpanishVerbStripper.stripVerb(\"mandarlos\"));\n    assertEquals(\"leer\", SpanishVerbStripper.stripVerb(\"leerlo\"));\n    assertEquals(\"jugar\", SpanishVerbStripper.stripVerb(\"jugarla\"));\n    assertEquals(\"jugar\", SpanishVerbStripper.stripVerb(\"jugárselos\"));\n    assertEquals(\"decir\", SpanishVerbStripper.stripVerb(\"decírmelo\"));\n    assertEquals(\"contando\", SpanishVerbStripper.stripVerb(\"contándolo\"));\n    assertEquals(\"yendo\", SpanishVerbStripper.stripVerb(\"yéndole\"));\n    assertEquals(\"viviendo\", SpanishVerbStripper.stripVerb(\"viviéndolo\"));\n    assertEquals(\"leyendo\", SpanishVerbStripper.stripVerb(\"leyéndolo\"));\n    assertEquals(\"buscando\", SpanishVerbStripper.stripVerb(\"buscándome\"));\n    assertEquals(\"senta\", SpanishVerbStripper.stripVerb(\"sentaos\"));\n    assertEquals(\"vesti\", SpanishVerbStripper.stripVerb(\"vestíos\"));\n    assertEquals(\"compre\", SpanishVerbStripper.stripVerb(\"cómprelos\"));\n    assertEquals(\"haz\", SpanishVerbStripper.stripVerb(\"házmelo\"));\n    assertEquals(\"oír\", SpanishVerbStripper.stripVerb(\"oírse\"));\n  }","commit_id":"d204b04a49d70beb6002b57dc852b6765637a477","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Normalize a whole tree -- one can assume that this is the\n   * root.  This implementation deletes empty elements (ones with\n   * nonterminal tag label '-NONE-') from the tree, and splices out\n   * unary A over A nodes.  It does work for a null tree.\n   */\n  @Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    return tree.prune(emptyFilter, tf).spliceOut(aOverAFilter, tf);\n  }","id":63686,"modified_method":"/**\n   * Normalize a whole tree -- one can assume that this is the\n   * root.  This implementation deletes empty elements (ones with\n   * nonterminal tag label '-NONE-') from the tree, and splices out\n   * unary A over A nodes.  It assumes that it is not given a\n   * null tree, but it may return one if there are no real words.\n   */\n  @Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    Tree middle = tree.prune(emptyFilter, tf);\n    if (middle == null) {\n      return null;\n    } else {\n      return middle.spliceOut(aOverAFilter, tf);\n    }\n  }","commit_id":"6060328bc548e9cfc47422941a7b3b254fd51066","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Remove things like hyphened functional tags and equals from the\n   * end of a node label.  This version always just returns the phrase\n   * structure category, or \"ROOT\" if the label was <code>null<\/code>.\n   *\n   * @param label The label from the treebank\n   * @return The cleaned up label (phrase structure category)\n   */\n  protected String cleanUpLabel(final String label) {\n    if (label == null || label.length() == 0) {\n      return \"ROOT\";\n      // String constants are always interned\n    } else {\n      return tlp.basicCategory(label);\n    }\n  }","id":63687,"modified_method":"/**\n   * Remove things like hyphened functional tags and equals from the\n   * end of a node label.  This version always just returns the phrase\n   * structure category, or \"ROOT\" if the label was <code>null<\/code>.\n   *\n   * @param label The label from the treebank\n   * @return The cleaned up label (phrase structure category)\n   */\n  protected String cleanUpLabel(final String label) {\n    if (label == null || label.isEmpty()) {\n      return \"ROOT\";\n      // String constants are always interned\n    } else {\n      return tlp.basicCategory(label);\n    }\n  }","commit_id":"6060328bc548e9cfc47422941a7b3b254fd51066","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Reads a single tree in standard Penn Treebank format from the\n   * input stream. The method supports additional parentheses around the\n   * tree (an unnamed ROOT node) so long as they are balanced. If the token stream\n   * ends before the current tree is complete, then the method will throw an\n   * <code>IOException<\/code>.\n   * <p>\n   * Note that the method will skip malformed trees and attempt to\n   * read additional trees from the input stream. It is possible, however,\n   * that a malformed tree will corrupt the token stream. In this case,\n   * an <code>IOException<\/code> will eventually be thrown.\n   *\n   * @return A single tree, or <code>null<\/code> at end of token stream.\n   */\n  @Override\n  public Tree readTree() throws IOException {\n    Tree t = null;\n\n    while (tokenizer.hasNext() && t == null) {\n\n      //Setup PDA\n      this.currentTree = null;\n      this.stack = new ArrayList<Tree>();\n\n      try {\n        t = getTreeFromInputStream();\n      } catch (NoSuchElementException e) {\n        throw new IOException(\"End of token stream encountered before parsing could complete.\");\n      }\n\n      if (t != null) {\n        // cdm 20100618: Don't do this!  This was never the historical behavior!!!\n        // Escape empty trees e.g. (())\n        // while(t != null && (t.value() == null || t.value().equals(\"\")) && t.numChildren() <= 1)\n        //   t = t.firstChild();\n\n        if (treeNormalizer != null && treeFactory != null) {\n          t = treeNormalizer.normalizeWholeTree(t, treeFactory);\n        }\n        t.indexLeaves(true);\n      }\n    }\n\n    return t;\n  }","id":63688,"modified_method":"/**\n   * Reads a single tree in standard Penn Treebank format from the\n   * input stream. The method supports additional parentheses around the\n   * tree (an unnamed ROOT node) so long as they are balanced. If the token stream\n   * ends before the current tree is complete, then the method will throw an\n   * <code>IOException<\/code>.\n   * <p>\n   * Note that the method will skip malformed trees and attempt to\n   * read additional trees from the input stream. It is possible, however,\n   * that a malformed tree will corrupt the token stream. In this case,\n   * an <code>IOException<\/code> will eventually be thrown.\n   *\n   * @return A single tree, or <code>null<\/code> at end of token stream.\n   */\n  @Override\n  public Tree readTree() throws IOException {\n    Tree t = null;\n\n    while (tokenizer.hasNext() && t == null) {\n\n      //Setup PDA\n      this.currentTree = null;\n      this.stack = new ArrayList<>();\n\n      try {\n        t = getTreeFromInputStream();\n      } catch (NoSuchElementException e) {\n        throw new IOException(\"End of token stream encountered before parsing could complete.\");\n      }\n\n      if (t != null) {\n        // cdm 20100618: Don't do this!  This was never the historical behavior!!!\n        // Escape empty trees e.g. (())\n        // while(t != null && (t.value() == null || t.value().equals(\"\")) && t.numChildren() <= 1)\n        //   t = t.firstChild();\n\n        if (treeNormalizer != null && treeFactory != null) {\n          t = treeNormalizer.normalizeWholeTree(t, treeFactory);\n        }\n        if (t != null) {\n          t.indexLeaves(true);\n        }\n      }\n    }\n\n    return t;\n  }","commit_id":"6060328bc548e9cfc47422941a7b3b254fd51066","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static TreebankLangParserParams getLanguageParams(Language lang) {\n    TreebankLangParserParams tlpp; // initialized below\n    switch(lang) {\n    case Arabic:\n      tlpp = new ArabicTreebankParserParams();\n      break;\n   \n    case Chinese:\n      tlpp = new ChineseTreebankParserParams();\n      break;\n\n    case German:\n      tlpp = new NegraPennTreebankParserParams();\n      break;\n\n    case French:\n      tlpp = new FrenchTreebankParserParams();\n      break;\n\n    case Hebrew:\n      tlpp = new HebrewTreebankParserParams();\n      break;\n\n    case Spanish:\n      tlpp = new SpanishTreebankParserParams();\n      break;\n\n    default:\n      tlpp = new EnglishTreebankParserParams();\n    }\n    return tlpp;\n  }","id":63689,"modified_method":"public static TreebankLangParserParams getLanguageParams(Language lang) {\n    TreebankLangParserParams tlpp; // initialized below\n    switch(lang) {\n    case Arabic:\n      tlpp = new ArabicTreebankParserParams();\n      break;\n   \n    case Chinese:\n      tlpp = new ChineseTreebankParserParams();\n      break;\n\n    case German:\n      tlpp = new NegraPennTreebankParserParams();\n      break;\n\n    case French:\n      tlpp = new FrenchTreebankParserParams();\n      break;\n\n    case Hebrew:\n      tlpp = new HebrewTreebankParserParams();\n      break;\n\n    default:\n      tlpp = new EnglishTreebankParserParams();\n    }\n    return tlpp;\n  }","commit_id":"832e42c9097e3841e3d5e38907cf42a356198d3a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static String getOverrideTag(String word, String containingPhrase) {\n      if (containingPhrase == null)\n        return null;\n\n      if (word.equalsIgnoreCase(\"este\") && !containingPhrase.startsWith(word))\n        return \"np00000\";\n      else if (word.equals(\"Sin\") && containingPhrase.startsWith(\"Sin embargo\"))\n        return \"sp000\";\n      else if (word.equals(\"contra\")\n        && (containingPhrase.startsWith(\"en contra\") || containingPhrase.startsWith(\"En contra\")))\n        return \"nc0s000\";\n      else if (word.equals(\"total\") && containingPhrase.startsWith(\"ese\"))\n        return \"nc0s000\";\n      else if (word.equals(\"DEL\"))\n        // Uses of \"Del\" in corpus are proper nouns, but uses of \"DEL\" are\n        // prepositions.. convenient for our purposes\n        return \"sp000\";\n      else if (word.equals(\"sí\") && containingPhrase.contains(\"por sí\")\n        || containingPhrase.contains(\"fuera de sí\"))\n        return \"pp000000\";\n      else if (pPronounDeterminers.matcher(word).matches() && containingPhrase.endsWith(word))\n        // Determiners tailing a phrase are pronouns: \"sobre todo,\" \"al otro\", etc.\n        return \"pi000000\";\n      else if (word.equals(\"cuando\") && containingPhrase.endsWith(word))\n        return \"pi000000\";\n      else if ((word.equalsIgnoreCase(\"contra\") && containingPhrase.endsWith(word)))\n        return \"nc0s000\";\n      else if (word.equals(\"salvo\") && containingPhrase.endsWith(\"salvo\"))\n        return \"aq0000\";\n      else if (word.equals(\"mira\") && containingPhrase.endsWith(word))\n        return \"nc0s000\";\n      else if (word.equals(\"pro\") && containingPhrase.startsWith(\"en pro\"))\n        return \"nc0s000\";\n      else if (word.equals(\"espera\") && containingPhrase.endsWith(\"espera de\"))\n        return \"nc0s000\";\n      else if (word.equals(\"Paso\") && containingPhrase.equals(\"El Paso\"))\n        return \"np00000\";\n      else if (word.equals(\"medio\") && (containingPhrase.endsWith(\"medio de\") || containingPhrase.endsWith(\"ambiente\")\n        || containingPhrase.endsWith(\"por medio\") || containingPhrase.contains(\"por medio\")\n        || containingPhrase.endsWith(\"medio\")))\n        return \"nc0s000\";\n      else if (word.equals(\"Medio\") && containingPhrase.contains(\"Ambiente\"))\n        return \"nc0s000\";\n      else if (word.equals(\"Medio\") && containingPhrase.equals(\"Oriente Medio\"))\n        return \"aq0000\";\n      else if (word.equals(\"media\") && containingPhrase.equals(\"mass media\"))\n        return \"nc0n000\";\n      else if (word.equals(\"cuenta\") && containingPhrase.endsWith(\"en cuenta\"))\n        return \"nc0s000\";\n\n      if (word.equals(\"Al\")) {\n        // \"Al\" is sometimes a part of name phrases: Arabic names, Al Gore, etc.\n        // Mark it a noun if its containing phrase has some other capitalized word\n        if (otherNamePattern.matcher(containingPhrase).find())\n          return \"np00000\";\n        else\n          return \"sp000\";\n      }\n\n      if (actuallyNames.contains(word))\n        return \"np00000\";\n\n      if (word.equals(\"sino\") && containingPhrase.endsWith(word))\n        return \"nc0s000\";\n      else if (word.equals(\"mañana\") || word.equals(\"paso\") || word.equals(\"monta\") || word.equals(\"deriva\")\n        || word.equals(\"visto\"))\n        return \"nc0s000\";\n      else if (word.equals(\"frente\") && containingPhrase.startsWith(\"al frente\"))\n        return \"nc0s000\";\n\n      return null;\n    }","id":63690,"modified_method":"public static String getOverrideTag(String word, String containingPhrase) {\n      if (containingPhrase == null)\n        return null;\n\n      if (word.equalsIgnoreCase(\"este\") && !containingPhrase.startsWith(word))\n        return \"np00000\";\n      else if (word.equals(\"Al\") && containingPhrase.startsWith(\"Al fin\"))\n        return \"sp000\";\n      else if (word.equals(\"Sin\") && containingPhrase.startsWith(\"Sin embargo\"))\n        return \"sp000\";\n\n      if (actuallyNames.contains(word))\n        return \"np00000\";\n\n      if (word.equals(\"sino\") && containingPhrase.endsWith(word))\n        return \"nc0s000\";\n      else if (word.equals(\"mañana\"))\n        return \"nc0s000\";\n\n      return null;\n    }","commit_id":"832e42c9097e3841e3d5e38907cf42a356198d3a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static void resolveDummyTags(File treeFile,\n                                       TwoDimensionalCounter<String, String> pretermLabel,\n                                       TwoDimensionalCounter<String, String> unigramTagger,\n                                       boolean retainNER, TreeNormalizer tn) {\n    TreeFactory tf = new LabeledScoredTreeFactory();\n\n    try {\n      BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(treeFile), \"UTF-8\"));\n      TreeReaderFactory trf = new SpanishTreeReaderFactory();\n      TreeReader tr = trf.newTreeReader(br);\n\n      PrintWriter pw = new PrintWriter(new PrintStream(new FileOutputStream(new File(treeFile + \".fixed\")),false,\"UTF-8\"));\n\n      int nTrees = 0;\n      for(Tree t; (t = tr.readTree()) != null;nTrees++) {\n        traverseAndFix(t, null, pretermLabel, unigramTagger, retainNER);\n\n        // Now \"decompress\" further the expanded trees formed by\n        // multiword token splitting\n        t = MultiWordTreeExpander.expandPhrases(t, tn, tf);\n\n        if (tn != null)\n          t = tn.normalizeWholeTree(t, tf);\n\n        pw.println(t.toString());\n      }\n\n      pw.close();\n      tr.close();\n\n      System.out.println(\"Processed \" +nTrees+ \" trees\");\n\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    } catch (FileNotFoundException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","id":63691,"modified_method":"private static void resolveDummyTags(File treeFile,\n                                       TwoDimensionalCounter<String, String> pretermLabel,\n                                       TwoDimensionalCounter<String, String> unigramTagger,\n                                       boolean retainNER, TreeNormalizer tn) {\n    TreeFactory tf = new LabeledScoredTreeFactory();\n\n    try {\n      BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(treeFile), \"UTF-8\"));\n      TreeReaderFactory trf = new SpanishTreeReaderFactory();\n      TreeReader tr = trf.newTreeReader(br);\n\n      PrintWriter pw = new PrintWriter(new PrintStream(new FileOutputStream(new File(treeFile + \".fixed\")),false,\"UTF-8\"));\n\n      int nTrees = 0;\n      for(Tree t; (t = tr.readTree()) != null;nTrees++) {\n        traverseAndFix(t, null, pretermLabel, unigramTagger, retainNER);\n\n        // Now \"decompress\" further the expanded trees formed by\n        // multiword token splitting\n        t = MultiWordTreeExpander.expandPhrases(t);\n\n        if (tn != null)\n          t = tn.normalizeWholeTree(t, tf);\n\n        pw.println(t.toString());\n      }\n\n      pw.close();\n      tr.close();\n\n      System.out.println(\"Processed \" +nTrees+ \" trees\");\n\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    } catch (FileNotFoundException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"832e42c9097e3841e3d5e38907cf42a356198d3a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Recognize candidate patterns for expansion in the given tree and\n   * perform the expansions. See the class documentation for more\n   * information.\n   */\n  public static Tree expandPhrases(Tree t, TreeNormalizer tn, TreeFactory tf) {\n    // Keep running this sequence of patterns until no changes are\n    // affected. We need this for nested expressions like \"para tratar\n    // de regresar al empleo.\" This first step produces lots of\n    // \"intermediate\" tree structures which need to be cleaned up later.\n    Tree oldTree;\n    do {\n      oldTree = t.deepCopy();\n      t = Tsurgeon.processPatternsOnTree(firstStepExpansions, t);\n    } while (!t.equals(oldTree));\n\n    // Now clean up intermediate tree structures\n    t = Tsurgeon.processPatternsOnTree(intermediateExpansions, t);\n\n    // Normalize first to allow for contraction expansion, etc.\n    t = tn.normalizeWholeTree(t, tf);\n\n    // Final cleanup\n    t = Tsurgeon.processPatternsOnTree(finalCleanup, t);\n\n    return t;\n  }","id":63692,"modified_method":"/**\n   * Recognize candidate patterns for expansion in the given tree and\n   * perform the expansions. See the class documentation for more\n   * information.\n   */\n  public static Tree expandPhrases(Tree t) {\n    // Keep running this sequence of patterns until no changes are\n    // affected. We need this for nested expressions like \"para tratar\n    // de regresar al empleo.\" This first step produces lots of\n    // \"intermediate\" tree structures which need to be cleaned up later.\n    Tree oldTree;\n    do {\n      oldTree = t.deepCopy();\n      t = Tsurgeon.processPatternsOnTree(firstStepExpansions, t);\n    } while (!t.equals(oldTree));\n\n    // Now clean up intermediate tree structures\n    t = Tsurgeon.processPatternsOnTree(intermediateExpansions, t);\n\n    t = Tsurgeon.processPatternsOnTree(finalCleanup, t);\n\n    return t;\n  }","commit_id":"832e42c9097e3841e3d5e38907cf42a356198d3a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter).spliceOut(aOverAFilter);\n\n    // Now start some simple cleanup\n    tree = Tsurgeon.processPatternsOnTree(cleanup, tree);\n\n    // Find all named entities which are not multi-word tokens and nest\n    // them within named entity NP groups\n    if (retainNER)\n      markSimpleNamedEntities(tree);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // More tregex-powered fixes\n    tree = expandElisions(tree);\n    tree = expandCliticPronouns(tree);\n\n    // Make sure the tree has a top-level unary rewrite; the root\n    // should have a proper root label\n    String rootLabel = tlp.startSymbol();\n    if (!tree.value().equals(rootLabel))\n      tree = tf.newTreeNode(rootLabel, Collections.singletonList(tree));\n\n    return tree;\n  }","id":63693,"modified_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter);\n\n    // Find all named entities which are not multi-word tokens and nest\n    // them within named entity NP groups\n    if (retainNER)\n      markSimpleNamedEntities(tree);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // More tregex-powered fixes\n    tree = expandElisions(tree);\n    tree = expandCliticPronouns(tree);\n\n    return tree;\n  }","commit_id":"832e42c9097e3841e3d5e38907cf42a356198d3a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public SpanishTreeNormalizer(boolean simplifiedTagset,\n                               boolean aggressiveNormalization,\n                               boolean retainNER) {\n    super(new SpanishTreebankLanguagePack());\n\n    if (retainNER && !simplifiedTagset)\n      throw new IllegalArgumentException(\"retainNER argument only valid when \" +\n                                         \"simplified tagset is used\");\n\n    this.simplifiedTagset = simplifiedTagset;\n    this.aggressiveNormalization = aggressiveNormalization;\n    this.retainNER = retainNER;\n  }","id":63694,"modified_method":"public SpanishTreeNormalizer(boolean simplifiedTagset,\n                               boolean aggressiveNormalization,\n                               boolean retainNER) {\n    if (retainNER && !simplifiedTagset)\n      throw new IllegalArgumentException(\"retainNER argument only valid when \" +\n                                         \"simplified tagset is used\");\n\n    this.simplifiedTagset = simplifiedTagset;\n    this.aggressiveNormalization = aggressiveNormalization;\n    this.retainNER = retainNER;\n  }","commit_id":"832e42c9097e3841e3d5e38907cf42a356198d3a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Return the (single or multiple) words which make up the given\n   * token.\n   */\n  private String[] getMultiWords(String token) {\n    token = prepareForMultiWordExtraction(token);\n\n    Matcher quoteMatcher = pQuoted.matcher(token);\n    if (quoteMatcher.matches()) {\n      String[] ret = new String[3];\n      ret[0] = \"\\\"\";\n      ret[1] = quoteMatcher.group(1);\n      ret[2] = \"\\\"\";\n\n      return ret;\n    }\n\n    // Confusing: we are using a tokenizer to split a token into its\n    // constituent words\n    StringTokenizer splitter = new StringTokenizer(token, WORD_SEPARATORS,\n                                                   true);\n    int remainingTokens = splitter.countTokens();\n\n    List<String> words = new ArrayList<String>();\n\n    while (splitter.hasMoreTokens()) {\n      String word = splitter.nextToken();\n      remainingTokens--;\n\n      if (shouldDropWord(word))\n        // This is a delimiter that we should drop\n        continue;\n\n      if (remainingTokens >= 2 && hyphenBoundMorphemes.contains(word)) {\n        String hyphen = splitter.nextToken();\n        remainingTokens--;\n\n        if (!hyphen.equals(\"-\")) {\n          // Ouch. We expected a hyphen here. Clean things up and keep\n          // moving.\n          words.add(word);\n\n          if (!shouldDropWord(hyphen))\n            words.add(hyphen);\n\n          continue;\n        }\n\n        String freeMorpheme = splitter.nextToken();\n        remainingTokens--;\n\n        words.add(word + hyphen + freeMorpheme);\n        continue;\n      }\n\n      // Otherwise..\n      words.add(word);\n    }\n\n    return words.toArray(new String[words.size()]);\n  }","id":63695,"modified_method":"/**\n   * Return the (single or multiple) words which make up the given\n   * token.\n   */\n  private String[] getMultiWords(String token) {\n    token = prepareForMultiWordExtraction(token);\n\n    Matcher quoteMatcher = pQuoted.matcher(token);\n    if (quoteMatcher.matches()) {\n      String[] ret = new String[3];\n      ret[0] = \"\\\"\";\n      ret[1] = quoteMatcher.group(1);\n      ret[2] = \"\\\"\";\n\n      return ret;\n    }\n\n    // Confusing: we are using a tokenizer to split a token into its\n    // constituent words\n    StringTokenizer splitter = new StringTokenizer(token, WORD_SEPARATORS,\n                                                   true);\n    int remainingTokens = splitter.countTokens();\n\n    List<String> words = new ArrayList<String>();\n\n    while (splitter.hasMoreTokens()) {\n      String word = splitter.nextToken();\n      remainingTokens--;\n\n      if (word.length() == 1\n          && WORD_SEPARATORS_DROP.indexOf(word.charAt(0)) != -1)\n        // This is a delimiter that we should drop\n        continue;\n\n      if (remainingTokens >= 2 && hyphenBoundMorphemes.contains(word)) {\n        String hyphen = splitter.nextToken();\n        remainingTokens--;\n\n        if (!hyphen.equals(\"-\")) {\n          // Ouch. We expected a hyphen here. Clean things up and keep\n          // moving.\n          words.add(word);\n          words.add(hyphen);\n          continue;\n        }\n\n        String freeMorpheme = splitter.nextToken();\n        remainingTokens--;\n\n        words.add(word + hyphen + freeMorpheme);\n        continue;\n      }\n\n      // Otherwise..\n      words.add(word);\n    }\n\n    return words.toArray(new String[words.size()]);\n  }","commit_id":"832e42c9097e3841e3d5e38907cf42a356198d3a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public String getEncoding() {\n    return STB_ENCODING;\n  }","id":63696,"modified_method":"@Override\n  public String getEncoding() {\n    return FTB_ENCODING;\n  }","commit_id":"832e42c9097e3841e3d5e38907cf42a356198d3a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Returns a String array of punctuation words for this treebank/language.\n   *\n   * @return The punctuation words\n   */\n  @Override\n  public String[] punctuationWords() {\n    return punctWords;\n  }","id":63697,"modified_method":"/**\n   * Returns a String array of punctuation words for this treebank/language.\n   *\n   * @return The punctuation words\n   */\n  @Override\n  public String[] punctuationWords() {\n    return frenchPunctWords;\n  }","commit_id":"832e42c9097e3841e3d5e38907cf42a356198d3a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Returns a String array of sentence final punctuation tags for this\n   * treebank/language.\n   *\n   * @return The sentence final punctuation tags\n   */\n  @Override\n  public String[] sentenceFinalPunctuationTags() {\n    return sentenceFinalPunctTags;\n  }","id":63698,"modified_method":"/**\n   * Returns a String array of sentence final punctuation tags for this\n   * treebank/language.\n   *\n   * @return The sentence final punctuation tags\n   */\n  @Override\n  public String[] sentenceFinalPunctuationTags() {\n    return frenchSFPunctTags;\n  }","commit_id":"832e42c9097e3841e3d5e38907cf42a356198d3a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Returns a String array of treebank start symbols.\n   *\n   * @return The start symbols\n   */\n  @Override\n  public String[] startSymbols() {\n    return startSymbols;\n  }","id":63699,"modified_method":"/**\n   * Returns a String array of treebank start symbols.\n   *\n   * @return The start symbols\n   */\n  @Override\n  public String[] startSymbols() {\n    return frenchStartSymbols;\n  }","commit_id":"832e42c9097e3841e3d5e38907cf42a356198d3a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Returns a String array of punctuation tags for this treebank/language.\n   *\n   * @return The punctuation tags\n   */\n  @Override\n  public String[] punctuationTags() {\n    return punctTags;\n  }","id":63700,"modified_method":"/**\n   * Returns a String array of punctuation tags for this treebank/language.\n   *\n   * @return The punctuation tags\n   */\n  @Override\n  public String[] punctuationTags() {\n    return frenchPunctTags;\n  }","commit_id":"832e42c9097e3841e3d5e38907cf42a356198d3a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Returns a String array of sentence final punctuation words for this\n   * treebank/language.\n   *\n   * @return The sentence final punctuation tags\n   */\n  public String[] sentenceFinalPunctuationWords() {\n    return sentenceFinalPunctWords;\n  }","id":63701,"modified_method":"/**\n   * Returns a String array of sentence final punctuation words for this\n   * treebank/language.\n   *\n   * @return The sentence final punctuation tags\n   */\n  public String[] sentenceFinalPunctuationWords() {\n    return frenchSFPunctWords;\n  }","commit_id":"832e42c9097e3841e3d5e38907cf42a356198d3a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private void processAlreadyHasTypeCast(PsiTypeCastExpression typeCast){\n      PsiElement parent = typeCast.getParent();\n      while(parent instanceof PsiParenthesizedExpression) parent = parent.getParent();\n      if (parent instanceof PsiExpressionList) return; // do not replace in arg lists - should be handled by parent\n      if (parent instanceof PsiReturnStatement) return;\n      if (parent instanceof PsiTypeCastExpression) return;\n\n      if (isTypeCastSemantic(typeCast)) return;\n\n      PsiTypeElement typeElement = typeCast.getCastType();\n      if (typeElement == null) return;\n      final PsiType castTo = typeElement.getType();\n      final PsiExpression operand = typeCast.getOperand();\n\n      PsiType opType = operand.getType();\n      final PsiType expectedTypeByParent = PsiTypesUtil.getExpectedTypeByParent(typeCast);\n      if (expectedTypeByParent != null) {\n        final PsiDeclarationStatement declarationStatement =\n          (PsiDeclarationStatement)JavaPsiFacade.getElementFactory(operand.getProject()).createStatementFromText(\n            expectedTypeByParent.getCanonicalText() + \" l = \" + operand.getText() + \";\", parent);\n        final PsiExpression initializer = ((PsiLocalVariable)declarationStatement.getDeclaredElements()[0]).getInitializer();\n        LOG.assertTrue(initializer != null, operand.getText());\n        opType = initializer.getType();\n      }\n\n      if (opType == null) return;\n      if (parent instanceof PsiReferenceExpression) {\n        if (castTo instanceof PsiClassType && opType instanceof PsiPrimitiveType) return; //explicit boxing\n        //Check accessibility\n        if (opType instanceof PsiClassType) {\n          final PsiReferenceExpression refExpression = (PsiReferenceExpression)parent;\n          PsiElement element = refExpression.resolve();\n          if (!(element instanceof PsiMember)) return;\n          PsiClass accessClass = ((PsiClassType)opType).resolve();\n          if (accessClass == null) return;\n          if (!JavaPsiFacade.getInstance(parent.getProject()).getResolveHelper().isAccessible((PsiMember)element, typeCast, accessClass)) return;\n          if (!isCastRedundantInRefExpression(refExpression, operand)) return;\n        }\n      }\n\n      if (arrayAccessAtTheLeftSideOfAssignment(parent)) {\n        if (TypeConversionUtil.isAssignable(opType, castTo, false) && opType.getArrayDimensions() == castTo.getArrayDimensions()) {\n          addToResults(typeCast);\n        }\n      }\n      else {\n        if (TypeConversionUtil.isAssignable(castTo, opType, false)) {\n          addToResults(typeCast);\n        }\n      }\n    }","id":63702,"modified_method":"private void processAlreadyHasTypeCast(PsiTypeCastExpression typeCast){\n      PsiElement parent = typeCast.getParent();\n      while(parent instanceof PsiParenthesizedExpression) parent = parent.getParent();\n      if (parent instanceof PsiExpressionList) return; // do not replace in arg lists - should be handled by parent\n      if (parent instanceof PsiReturnStatement) return;\n      if (parent instanceof PsiTypeCastExpression) return;\n\n      if (isTypeCastSemantic(typeCast)) return;\n\n      PsiTypeElement typeElement = typeCast.getCastType();\n      if (typeElement == null) return;\n      final PsiType castTo = typeElement.getType();\n      final PsiExpression operand = typeCast.getOperand();\n\n      PsiType opType = operand.getType();\n      final PsiType expectedTypeByParent = PsiTypesUtil.getExpectedTypeByParent(typeCast);\n      if (expectedTypeByParent != null) {\n        final PsiDeclarationStatement declarationStatement =\n          (PsiDeclarationStatement)JavaPsiFacade.getElementFactory(operand.getProject()).createStatementFromText(\n            expectedTypeByParent.getCanonicalText() + \" l = \" + operand.getText() + \";\", parent);\n        final PsiExpression initializer = ((PsiLocalVariable)declarationStatement.getDeclaredElements()[0]).getInitializer();\n        LOG.assertTrue(initializer != null, operand.getText());\n        opType = initializer.getType();\n      }\n\n      if (opType == null) return;\n      if (parent instanceof PsiReferenceExpression) {\n        if (castTo instanceof PsiClassType && opType instanceof PsiPrimitiveType) return; //explicit boxing\n        //Check accessibility\n        if (opType instanceof PsiClassType) {\n          final PsiReferenceExpression refExpression = (PsiReferenceExpression)parent;\n          PsiElement element = refExpression.resolve();\n          if (!(element instanceof PsiMember)) return;\n          PsiClass accessClass = ((PsiClassType)opType).resolve();\n          if (accessClass == null) return;\n          if (!JavaPsiFacade.getInstance(parent.getProject()).getResolveHelper().isAccessible((PsiMember)element, typeCast, accessClass)) return;\n          if (!isCastRedundantInRefExpression(refExpression, operand)) return;\n        }\n      }\n\n      if (arrayAccessAtTheLeftSideOfAssignment(parent)) {\n        if (TypeConversionUtil.isAssignable(opType, castTo, false) && opType.getArrayDimensions() == castTo.getArrayDimensions()) {\n          addToResults(typeCast);\n        }\n      }\n      else {\n        if (parent instanceof PsiInstanceOfExpression && opType instanceof PsiPrimitiveType) {\n          return;\n        }\n        if (parent instanceof PsiInstanceOfExpression || TypeConversionUtil.isAssignable(castTo, opType, false)) {\n          addToResults(typeCast);\n        }\n      }\n    }","commit_id":"5c737f48bd23e4d84eaf1d8f6fed5b19270cfdc6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected static boolean argConstraints(PsiExpression arg,\n                                          @Nullable InferenceSession session,\n                                          PsiMethod sInterfaceMethod,\n                                          PsiSubstitutor sSubstitutor, \n                                          PsiMethod tInterfaceMethod, \n                                          PsiSubstitutor tSubstitutor) {\n    if (arg instanceof PsiLambdaExpression && ((PsiLambdaExpression)arg).hasFormalParameterTypes()) {\n      final PsiType sReturnType = sSubstitutor.substitute(sInterfaceMethod.getReturnType());\n      final PsiType tReturnType = tSubstitutor.substitute(tInterfaceMethod.getReturnType());\n\n      if (tReturnType == PsiType.VOID) {\n        return true;\n      }\n\n      final List<PsiExpression> returnExpressions = LambdaUtil.getReturnExpressions((PsiLambdaExpression)arg);\n      if (sReturnType == PsiType.VOID) {\n        return returnExpressions.isEmpty() && session == null;\n      }\n\n      if (LambdaUtil.isFunctionalType(sReturnType) && LambdaUtil.isFunctionalType(tReturnType) && \n          !TypeConversionUtil.isAssignable(TypeConversionUtil.erasure(sReturnType), TypeConversionUtil.erasure(tReturnType)) &&\n          !TypeConversionUtil.isAssignable(TypeConversionUtil.erasure(tReturnType), TypeConversionUtil.erasure(sReturnType))) {\n\n        //Otherwise, if R1 and R2 are functional interface types, and neither interface is a subinterface of the other, \n        //then these rules are applied recursively to R1 and R2, for each result expression in expi.\n        if (!isFunctionalTypeMoreSpecific(sReturnType, tReturnType, session, returnExpressions.toArray(new PsiExpression[returnExpressions.size()]))) {\n          return false;\n        }\n      } else {\n        final boolean sPrimitive = sReturnType instanceof PsiPrimitiveType && sReturnType != PsiType.VOID;\n        final boolean tPrimitive = tReturnType instanceof PsiPrimitiveType && tReturnType != PsiType.VOID;\n        if (sPrimitive ^ tPrimitive) {\n          for (PsiExpression returnExpression : returnExpressions) {\n            if (!PsiPolyExpressionUtil.isPolyExpression(returnExpression)) {\n              final PsiType returnExpressionType = returnExpression.getType();\n              if (sPrimitive) {\n                if (!(returnExpressionType instanceof PsiPrimitiveType)) {\n                  return false;\n                }\n              } else {\n                if (!(returnExpressionType instanceof PsiClassType)) {\n                  return false;\n                }\n              }\n            }\n          }\n          return true;\n        }\n        if (session != null) {\n          session.addConstraint(new StrictSubtypingConstraint(tReturnType, sReturnType));\n          return true;\n        } else {\n          return TypeConversionUtil.isAssignable(sReturnType, tReturnType); \n        }\n      }\n    }\n\n    if (arg instanceof PsiMethodReferenceExpression && ((PsiMethodReferenceExpression)arg).isExact()) {\n      final PsiParameter[] sParameters = sInterfaceMethod.getParameterList().getParameters();\n      final PsiParameter[] tParameters = tInterfaceMethod.getParameterList().getParameters();\n      if (session != null) {\n        LOG.assertTrue(sParameters.length == tParameters.length);\n        for (int i = 0; i < tParameters.length; i++) {\n          session.addConstraint(new TypeEqualityConstraint(tSubstitutor.substitute(tParameters[i].getType()),\n                                                           sSubstitutor.substitute(sParameters[i].getType())));\n        }\n      }\n      final PsiType sReturnType = sSubstitutor.substitute(sInterfaceMethod.getReturnType());\n      final PsiType tReturnType = tSubstitutor.substitute(tInterfaceMethod.getReturnType());\n      if (tReturnType == PsiType.VOID) {\n        return true;\n      }\n\n      if (sReturnType == PsiType.VOID && session != null) {\n        return false;\n      }\n\n      final boolean sPrimitive = sReturnType instanceof PsiPrimitiveType && sReturnType != PsiType.VOID;\n      final boolean tPrimitive = tReturnType instanceof PsiPrimitiveType && tReturnType != PsiType.VOID;\n\n      if (sPrimitive ^ tPrimitive) {\n        final PsiMember member = ((PsiMethodReferenceExpression)arg).getPotentiallyApplicableMember();\n        LOG.assertTrue(member != null);\n        if (member instanceof PsiMethod) {\n          final PsiType methodReturnType = ((PsiMethod)member).getReturnType();\n          if (sPrimitive && methodReturnType instanceof PsiPrimitiveType && methodReturnType != PsiType.VOID ||\n              tPrimitive && methodReturnType instanceof PsiClassType) {\n            return true;\n          }\n        }\n        return false;\n      }\n\n      if (session != null) {\n        session.addConstraint(new StrictSubtypingConstraint(tReturnType, sReturnType));\n        return true;\n      } else {\n        return TypeConversionUtil.isAssignable(sReturnType, tReturnType);\n      }\n    }\n\n    if (arg instanceof PsiParenthesizedExpression) {\n      return argConstraints(((PsiParenthesizedExpression)arg).getExpression(), session, sInterfaceMethod, sSubstitutor, tInterfaceMethod, tSubstitutor);\n    }\n\n    if (arg instanceof PsiConditionalExpression) {\n      final PsiExpression thenExpression = ((PsiConditionalExpression)arg).getThenExpression();\n      final PsiExpression elseExpression = ((PsiConditionalExpression)arg).getElseExpression();\n      return argConstraints(thenExpression, session, sInterfaceMethod, sSubstitutor, tInterfaceMethod, tSubstitutor) &&\n             argConstraints(elseExpression, session, sInterfaceMethod, sSubstitutor, tInterfaceMethod, tSubstitutor);\n    }\n    return false;\n  }","id":63703,"modified_method":"protected static boolean argConstraints(PsiExpression arg,\n                                          @Nullable InferenceSession session,\n                                          PsiMethod sInterfaceMethod,\n                                          PsiSubstitutor sSubstitutor, \n                                          PsiMethod tInterfaceMethod, \n                                          PsiSubstitutor tSubstitutor) {\n    if (arg instanceof PsiLambdaExpression && ((PsiLambdaExpression)arg).hasFormalParameterTypes()) {\n      final PsiType sReturnType = sSubstitutor.substitute(sInterfaceMethod.getReturnType());\n      final PsiType tReturnType = tSubstitutor.substitute(tInterfaceMethod.getReturnType());\n\n      if (tReturnType == PsiType.VOID) {\n        return true;\n      }\n\n      final List<PsiExpression> returnExpressions = LambdaUtil.getReturnExpressions((PsiLambdaExpression)arg);\n      if (sReturnType == PsiType.VOID) {\n        return returnExpressions.isEmpty() && session == null;\n      }\n\n      if (LambdaUtil.isFunctionalType(sReturnType) && LambdaUtil.isFunctionalType(tReturnType) && \n          !TypeConversionUtil.isAssignable(TypeConversionUtil.erasure(sReturnType), TypeConversionUtil.erasure(tReturnType)) &&\n          !TypeConversionUtil.isAssignable(TypeConversionUtil.erasure(tReturnType), TypeConversionUtil.erasure(sReturnType))) {\n\n        //Otherwise, if R1 and R2 are functional interface types, and neither interface is a subinterface of the other, \n        //then these rules are applied recursively to R1 and R2, for each result expression in expi.\n        if (!isFunctionalTypeMoreSpecific(sReturnType, tReturnType, session, returnExpressions.toArray(new PsiExpression[returnExpressions.size()]))) {\n          return false;\n        }\n      } else {\n        final boolean sPrimitive = sReturnType instanceof PsiPrimitiveType && sReturnType != PsiType.VOID;\n        final boolean tPrimitive = tReturnType instanceof PsiPrimitiveType && tReturnType != PsiType.VOID;\n        if (sPrimitive ^ tPrimitive) {\n          for (PsiExpression returnExpression : returnExpressions) {\n            if (!PsiPolyExpressionUtil.isPolyExpression(returnExpression)) {\n              final PsiType returnExpressionType = returnExpression.getType();\n              if (sPrimitive) {\n                if (!(returnExpressionType instanceof PsiPrimitiveType)) {\n                  return false;\n                }\n              } else {\n                if (!(returnExpressionType instanceof PsiClassType)) {\n                  return false;\n                }\n              }\n            }\n          }\n          return true;\n        }\n        if (session != null) {\n          session.addConstraint(new StrictSubtypingConstraint(tReturnType, sReturnType));\n          return true;\n        } else {\n          return sReturnType != null && tReturnType != null && TypeConversionUtil.isAssignable(sReturnType, tReturnType); \n        }\n      }\n    }\n\n    if (arg instanceof PsiMethodReferenceExpression && ((PsiMethodReferenceExpression)arg).isExact()) {\n      final PsiParameter[] sParameters = sInterfaceMethod.getParameterList().getParameters();\n      final PsiParameter[] tParameters = tInterfaceMethod.getParameterList().getParameters();\n      if (session != null) {\n        LOG.assertTrue(sParameters.length == tParameters.length);\n        for (int i = 0; i < tParameters.length; i++) {\n          session.addConstraint(new TypeEqualityConstraint(tSubstitutor.substitute(tParameters[i].getType()),\n                                                           sSubstitutor.substitute(sParameters[i].getType())));\n        }\n      }\n      final PsiType sReturnType = sSubstitutor.substitute(sInterfaceMethod.getReturnType());\n      final PsiType tReturnType = tSubstitutor.substitute(tInterfaceMethod.getReturnType());\n      if (tReturnType == PsiType.VOID) {\n        return true;\n      }\n\n      if (sReturnType == PsiType.VOID && session != null) {\n        return false;\n      }\n\n      final boolean sPrimitive = sReturnType instanceof PsiPrimitiveType && sReturnType != PsiType.VOID;\n      final boolean tPrimitive = tReturnType instanceof PsiPrimitiveType && tReturnType != PsiType.VOID;\n\n      if (sPrimitive ^ tPrimitive) {\n        final PsiMember member = ((PsiMethodReferenceExpression)arg).getPotentiallyApplicableMember();\n        LOG.assertTrue(member != null);\n        if (member instanceof PsiMethod) {\n          final PsiType methodReturnType = ((PsiMethod)member).getReturnType();\n          if (sPrimitive && methodReturnType instanceof PsiPrimitiveType && methodReturnType != PsiType.VOID ||\n              tPrimitive && methodReturnType instanceof PsiClassType) {\n            return true;\n          }\n        }\n        return false;\n      }\n\n      if (session != null) {\n        session.addConstraint(new StrictSubtypingConstraint(tReturnType, sReturnType));\n        return true;\n      } else {\n        return sReturnType != null && tReturnType != null && TypeConversionUtil.isAssignable(sReturnType, tReturnType);\n      }\n    }\n\n    if (arg instanceof PsiParenthesizedExpression) {\n      return argConstraints(((PsiParenthesizedExpression)arg).getExpression(), session, sInterfaceMethod, sSubstitutor, tInterfaceMethod, tSubstitutor);\n    }\n\n    if (arg instanceof PsiConditionalExpression) {\n      final PsiExpression thenExpression = ((PsiConditionalExpression)arg).getThenExpression();\n      final PsiExpression elseExpression = ((PsiConditionalExpression)arg).getElseExpression();\n      return argConstraints(thenExpression, session, sInterfaceMethod, sSubstitutor, tInterfaceMethod, tSubstitutor) &&\n             argConstraints(elseExpression, session, sInterfaceMethod, sSubstitutor, tInterfaceMethod, tSubstitutor);\n    }\n    return false;\n  }","commit_id":"98ab76f0604e090e4d7dad44a2bf1c241f48b591","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static HighlightInfo createIncompatibleTypeHighlightInfo(final PsiType lType,\n                                                                   final PsiType rType,\n                                                                   final TextRange textRange) {\n    PsiType lType1 = lType;\n    PsiType rType1 = rType;\n    String toolTip = \"<html><body>Incompatible types.\";\n    toolTip += \"<table><tr>\";\n    PsiTypeParameter[] lTypeParams = PsiTypeParameter.EMPTY_ARRAY;\n    PsiSubstitutor lTypeSubstitutor = PsiSubstitutor.EMPTY;\n    if (lType1 instanceof PsiClassType) {\n      PsiClassType.ClassResolveResult resolveResult = ((PsiClassType)lType1).resolveGenerics();\n      lTypeSubstitutor = resolveResult.getSubstitutor();\n      PsiClass psiClass = resolveResult.getElement();\n      if (psiClass instanceof PsiAnonymousClass) {\n        lType1 = ((PsiAnonymousClass)psiClass).getBaseClassType();\n        resolveResult = ((PsiClassType)lType1).resolveGenerics();\n        lTypeSubstitutor = resolveResult.getSubstitutor();\n        psiClass = resolveResult.getElement();\n      }\n      lTypeParams = psiClass == null ? PsiTypeParameter.EMPTY_ARRAY : psiClass.getTypeParameters();\n    }\n    PsiTypeParameter[] rTypeParams = PsiTypeParameter.EMPTY_ARRAY;\n    PsiSubstitutor rTypeSubstitutor = PsiSubstitutor.EMPTY;\n    if (rType1 instanceof PsiClassType) {\n      PsiClassType.ClassResolveResult resolveResult = ((PsiClassType)rType1).resolveGenerics();\n      rTypeSubstitutor = resolveResult.getSubstitutor();\n      PsiClass psiClass = resolveResult.getElement();\n      if (psiClass instanceof PsiAnonymousClass) {\n        rType1 = ((PsiAnonymousClass)psiClass).getBaseClassType();\n        resolveResult = ((PsiClassType)rType1).resolveGenerics();\n        rTypeSubstitutor = resolveResult.getSubstitutor();\n        psiClass = resolveResult.getElement();\n      }\n      rTypeParams = psiClass == null ? PsiTypeParameter.EMPTY_ARRAY : psiClass.getTypeParameters();\n    }\n\n    String description = MessageFormat.format(INCOMPATIBLE_TYPES, new Object[]{formatType(lType1), formatType(rType1)});\n\n    int typeParamColumns = Math.max(lTypeParams.length, rTypeParams.length);\n    String requredRow = \"\";\n    String foundRow = \"\";\n    for (int i = 0; i < typeParamColumns; i++) {\n      PsiTypeParameter lTypeParameter = i >= lTypeParams.length ? null : lTypeParams[i];\n      PsiTypeParameter rTypeParameter = i >= rTypeParams.length ? null : rTypeParams[i];\n      PsiType lSubstedType = lTypeParameter == null ? null : lTypeSubstitutor.substitute(lTypeParameter);\n      PsiType rSubstedType = rTypeParameter == null ? null : rTypeSubstitutor.substitute(rTypeParameter);\n      boolean matches = Comparing.equal(lSubstedType, rSubstedType);\n      String openBrace = i == 0 ? \"&lt;\" : \"\";\n      String closeBrace = i == typeParamColumns - 1 ? \"&gt;\" : \",\";\n      requredRow += \"<td>\" + (lTypeParams.length == 0 ? \"\" : openBrace) + redIfNotMatch(lSubstedType, matches) +\n                    (i < lTypeParams.length ? closeBrace : \"\") +\n                    \"<\/td>\";\n      foundRow += \"<td>\" + (rTypeParams.length == 0 ? \"\" : openBrace) + redIfNotMatch(rSubstedType, matches) +\n                  (i < rTypeParams.length ? closeBrace : \"\") +\n                  \"<\/td>\";\n    }\n    PsiType lRawType = lType1 instanceof PsiClassType ? ((PsiClassType)lType1).rawType() : lType1;\n    PsiType rRawType = rType1 instanceof PsiClassType ? ((PsiClassType)rType1).rawType() : rType1;\n    boolean assignable = TypeConversionUtil.isAssignable(lRawType, rRawType);\n    toolTip += \"<td>Required:<\/td>\" +\n               \"<td>\" + redIfNotMatch(lRawType, assignable) + \"<\/td>\" +\n               requredRow;\n    toolTip += \"<\/tr><tr>\";\n    toolTip += \"<td>Found:<\/td>\" +\n               \"<td>\" + redIfNotMatch(rRawType, assignable) + \"<\/td>\"\n               + foundRow;\n\n    toolTip += \"<\/tr><\/table><\/body><\/html>\";\n    return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR, textRange, description, toolTip);\n  }","id":63704,"modified_method":"private static HighlightInfo createIncompatibleTypeHighlightInfo(final PsiType lType,\n                                                                   final PsiType rType,\n                                                                   final TextRange textRange) {\n    PsiType lType1 = lType;\n    PsiType rType1 = rType;\n    String toolTip = \"<html><body>Incompatible types.\";\n    toolTip += \"<table><tr>\";\n    PsiTypeParameter[] lTypeParams = PsiTypeParameter.EMPTY_ARRAY;\n    PsiSubstitutor lTypeSubstitutor = PsiSubstitutor.EMPTY;\n    if (lType1 instanceof PsiClassType) {\n      PsiClassType.ClassResolveResult resolveResult = ((PsiClassType)lType1).resolveGenerics();\n      lTypeSubstitutor = resolveResult.getSubstitutor();\n      PsiClass psiClass = resolveResult.getElement();\n      if (psiClass instanceof PsiAnonymousClass) {\n        lType1 = ((PsiAnonymousClass)psiClass).getBaseClassType();\n        resolveResult = ((PsiClassType)lType1).resolveGenerics();\n        lTypeSubstitutor = resolveResult.getSubstitutor();\n        psiClass = resolveResult.getElement();\n      }\n      lTypeParams = psiClass == null ? PsiTypeParameter.EMPTY_ARRAY : psiClass.getTypeParameters();\n    }\n    PsiTypeParameter[] rTypeParams = PsiTypeParameter.EMPTY_ARRAY;\n    PsiSubstitutor rTypeSubstitutor = PsiSubstitutor.EMPTY;\n    if (rType1 instanceof PsiClassType) {\n      PsiClassType.ClassResolveResult resolveResult = ((PsiClassType)rType1).resolveGenerics();\n      rTypeSubstitutor = resolveResult.getSubstitutor();\n      PsiClass psiClass = resolveResult.getElement();\n      if (psiClass instanceof PsiAnonymousClass) {\n        rType1 = ((PsiAnonymousClass)psiClass).getBaseClassType();\n        resolveResult = ((PsiClassType)rType1).resolveGenerics();\n        rTypeSubstitutor = resolveResult.getSubstitutor();\n        psiClass = resolveResult.getElement();\n      }\n      rTypeParams = psiClass == null ? PsiTypeParameter.EMPTY_ARRAY : psiClass.getTypeParameters();\n    }\n\n    String description = MessageFormat.format(INCOMPATIBLE_TYPES, new Object[]{formatType(lType1), formatType(rType1)});\n\n    int typeParamColumns = Math.max(lTypeParams.length, rTypeParams.length);\n    String requredRow = \"\";\n    String foundRow = \"\";\n    for (int i = 0; i < typeParamColumns; i++) {\n      PsiTypeParameter lTypeParameter = i >= lTypeParams.length ? null : lTypeParams[i];\n      PsiTypeParameter rTypeParameter = i >= rTypeParams.length ? null : rTypeParams[i];\n      PsiType lSubstedType = lTypeParameter == null ? null : lTypeSubstitutor.substitute(lTypeParameter);\n      PsiType rSubstedType = rTypeParameter == null ? null : rTypeSubstitutor.substitute(rTypeParameter);\n      boolean matches = Comparing.equal(lSubstedType, rSubstedType);\n      String openBrace = i == 0 ? \"&lt;\" : \"\";\n      String closeBrace = i == typeParamColumns - 1 ? \"&gt;\" : \",\";\n      requredRow += \"<td>\" + (lTypeParams.length == 0 ? \"\" : openBrace) + redIfNotMatch(lSubstedType, matches) +\n                    (i < lTypeParams.length ? closeBrace : \"\") +\n                    \"<\/td>\";\n      foundRow += \"<td>\" + (rTypeParams.length == 0 ? \"\" : openBrace) + redIfNotMatch(rSubstedType, matches) +\n                  (i < rTypeParams.length ? closeBrace : \"\") +\n                  \"<\/td>\";\n    }\n    PsiType lRawType = lType1 instanceof PsiClassType ? ((PsiClassType)lType1).rawType() : lType1;\n    PsiType rRawType = rType1 instanceof PsiClassType ? ((PsiClassType)rType1).rawType() : rType1;\n    boolean assignable = lRawType == null || rRawType == null ? true : TypeConversionUtil.isAssignable(lRawType, rRawType);\n    toolTip += \"<td>Required:<\/td>\" +\n               \"<td>\" + redIfNotMatch(lRawType, assignable) + \"<\/td>\" +\n               requredRow;\n    toolTip += \"<\/tr><tr>\";\n    toolTip += \"<td>Found:<\/td>\" +\n               \"<td>\" + redIfNotMatch(rRawType, assignable) + \"<\/td>\"\n               + foundRow;\n\n    toolTip += \"<\/tr><\/table><\/body><\/html>\";\n    return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR, textRange, description, toolTip);\n  }","commit_id":"54425311e2fb2cf4592a471559023e724c82f5e4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean isAssignableByMethodCallConversion(PsiType lType, PsiType rType, PsiManager manager, GlobalSearchScope scope) {\n    if (isNumericType(lType) && isNumericType(rType)) {\n      lType = unboxPrimitiveTypeWrapper(lType);\n      rType = unboxPrimitiveTypeWrapper(rType);\n    } else {\n      rType = boxPrimitiveTypeAndEraseGenerics(rType, manager, scope);\n      lType = boxPrimitiveTypeAndEraseGenerics(lType, manager, scope);\n    }\n\n    return TypeConversionUtil.isAssignable(lType, rType);\n  }","id":63705,"modified_method":"public static boolean isAssignableByMethodCallConversion(PsiType lType, PsiType rType, PsiManager manager, GlobalSearchScope scope) {\n    if (isNumericType(lType) && isNumericType(rType)) {\n      lType = unboxPrimitiveTypeWrapper(lType);\n      rType = unboxPrimitiveTypeWrapper(rType);\n    } else {\n      rType = boxPrimitiveTypeAndEraseGenerics(rType, manager, scope);\n      lType = boxPrimitiveTypeAndEraseGenerics(lType, manager, scope);\n    }\n\n    return !(lType == null || rType == null) && TypeConversionUtil.isAssignable(lType, rType);\n\n  }","commit_id":"ae25b4fecd95f26bc6fc751feeb6d00cc7656922","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static Set<PsiType> flatten(PsiType[] conjuncts, Set<PsiType> types) {\n    for (PsiType conjunct : conjuncts) {\n      if (conjunct instanceof PsiIntersectionType) {\n        PsiIntersectionType type = (PsiIntersectionType)conjunct;\n        flatten(type.getConjuncts(), types);\n      }\n      else {\n        types.add(conjunct);\n      }\n    }\n    if (types.size() > 1) {\n      PsiType[] array = types.toArray(new PsiType[types.size()]);\n      for (Iterator<PsiType> iterator = types.iterator(); iterator.hasNext();) {\n        PsiType type = iterator.next();\n\n        for (PsiType existing : array) {\n          if (type != existing && TypeConversionUtil.isAssignable(type, existing, false)) {\n            iterator.remove();\n            break;\n          }\n        }\n      }\n      if (types.isEmpty()) {\n        types.add(array[0]);\n      }\n    }\n    return types;\n  }","id":63706,"modified_method":"private static Set<PsiType> flatten(PsiType[] conjuncts, Set<PsiType> types) {\n    for (PsiType conjunct : conjuncts) {\n      if (conjunct instanceof PsiIntersectionType) {\n        PsiIntersectionType type = (PsiIntersectionType)conjunct;\n        flatten(type.getConjuncts(), types);\n      }\n      else {\n        types.add(conjunct);\n      }\n    }\n    if (types.size() > 1) {\n      PsiType[] array = types.toArray(new PsiType[types.size()]);\n      for (Iterator<PsiType> iterator = types.iterator(); iterator.hasNext();) {\n        PsiType type = iterator.next();\n\n        for (PsiType existing : array) {\n          if (type != existing) {\n            final boolean allowUncheckedConversion = type instanceof PsiClassType && ((PsiClassType)type).isRaw();\n            if (TypeConversionUtil.isAssignable(type, existing, allowUncheckedConversion)) {\n              iterator.remove();\n              break;\n            }\n          }\n        }\n      }\n      if (types.isEmpty()) {\n        types.add(array[0]);\n      }\n    }\n    return types;\n  }","commit_id":"c233f807b2c9ecb38f3c940d1077c8c4dcbcdab4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void processAlreadyHasTypeCast(PsiTypeCastExpression typeCast){\n      PsiElement parent = typeCast.getParent();\n      while(parent instanceof PsiParenthesizedExpression) parent = parent.getParent();\n      if (parent instanceof PsiExpressionList) return; // do not replace in arg lists - should be handled by parent\n      if (parent instanceof PsiReturnStatement) return;\n      if (parent instanceof PsiTypeCastExpression) return;\n\n      if (isTypeCastSemantical(typeCast)) return;\n\n      PsiTypeElement typeElement = typeCast.getCastType();\n      if (typeElement == null) return;\n      PsiType castTo = typeElement.getType();\n      PsiType opType = typeCast.getOperand().getType();\n      if (opType == null) return;\n      if (parent instanceof PsiReferenceExpression) {\n        if (castTo instanceof PsiClassType && opType instanceof PsiPrimitiveType) return; //explicit boxing\n        //Check accessibility\n        if (opType instanceof PsiClassType) {\n          final PsiReferenceExpression refExpression = (PsiReferenceExpression)parent;\n          PsiElement element = refExpression.resolve();\n          if (!(element instanceof PsiMember)) return;\n          PsiClass accessClass = ((PsiClassType)opType).resolve();\n          if (accessClass == null) return;\n          if (!JavaPsiFacade.getInstance(parent.getProject()).getResolveHelper().isAccessible((PsiMember)element, typeCast, accessClass)) return;\n          if (!isCastRedundantInRefExpression(refExpression, typeCast.getOperand())) return;\n        }\n      }\n\n      if (someWhereAtTheLeftSideOfAssignment(parent)) {\n        if (TypeConversionUtil.isAssignable(opType, castTo, false)) {\n          addToResults(typeCast);\n        }\n      }\n      else {\n        if (TypeConversionUtil.isAssignable(castTo, opType, false)) {\n          addToResults(typeCast);\n        }\n      }\n    }","id":63707,"modified_method":"private void processAlreadyHasTypeCast(PsiTypeCastExpression typeCast){\n      PsiElement parent = typeCast.getParent();\n      while(parent instanceof PsiParenthesizedExpression) parent = parent.getParent();\n      if (parent instanceof PsiExpressionList) return; // do not replace in arg lists - should be handled by parent\n      if (parent instanceof PsiReturnStatement) return;\n      if (parent instanceof PsiTypeCastExpression) return;\n\n      if (isTypeCastSemantical(typeCast)) return;\n\n      PsiTypeElement typeElement = typeCast.getCastType();\n      if (typeElement == null) return;\n      final PsiType castTo = typeElement.getType();\n      final PsiType opType = typeCast.getOperand().getType();\n      if (opType == null) return;\n      if (parent instanceof PsiReferenceExpression) {\n        if (castTo instanceof PsiClassType && opType instanceof PsiPrimitiveType) return; //explicit boxing\n        //Check accessibility\n        if (opType instanceof PsiClassType) {\n          final PsiReferenceExpression refExpression = (PsiReferenceExpression)parent;\n          PsiElement element = refExpression.resolve();\n          if (!(element instanceof PsiMember)) return;\n          PsiClass accessClass = ((PsiClassType)opType).resolve();\n          if (accessClass == null) return;\n          if (!JavaPsiFacade.getInstance(parent.getProject()).getResolveHelper().isAccessible((PsiMember)element, typeCast, accessClass)) return;\n          if (!isCastRedundantInRefExpression(refExpression, typeCast.getOperand())) return;\n        }\n      }\n\n      if (arrayAccessAtTheLeftSideOfAssignment(parent)) {\n        if (TypeConversionUtil.isAssignable(opType, castTo, false) && opType.getArrayDimensions() == castTo.getArrayDimensions()) {\n          addToResults(typeCast);\n        }\n      }\n      else {\n        if (TypeConversionUtil.isAssignable(castTo, opType, false)) {\n          addToResults(typeCast);\n        }\n      }\n    }","commit_id":"b5921927fc8c686b6fb0f15f8faa4b4300326d14","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean someWhereAtTheLeftSideOfAssignment(PsiElement element) {\n      PsiAssignmentExpression assignment = PsiTreeUtil.getParentOfType(element, PsiAssignmentExpression.class, false, PsiMember.class);\n      if (assignment == null) return false;\n      PsiExpression lExpression = assignment.getLExpression();\n      return PsiTreeUtil.isAncestor(lExpression, element, false) && lExpression instanceof PsiArrayAccessExpression;\n    }","id":63708,"modified_method":"private static boolean arrayAccessAtTheLeftSideOfAssignment(PsiElement element) {\n      PsiAssignmentExpression assignment = PsiTreeUtil.getParentOfType(element, PsiAssignmentExpression.class, false, PsiMember.class);\n      if (assignment == null) return false;\n      PsiExpression lExpression = assignment.getLExpression();\n      return PsiTreeUtil.isAncestor(lExpression, element, false) && lExpression instanceof PsiArrayAccessExpression;\n    }","commit_id":"b5921927fc8c686b6fb0f15f8faa4b4300326d14","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void checkSameSignatures(@NotNull List<CandidateInfo> conflicts) {\n    // candidates should go in order of class hierarchy traversal\n    // in order for this to work\n    Map<MethodSignature, CandidateInfo> signatures = new THashMap<MethodSignature, CandidateInfo>(conflicts.size());\n    Set<PsiMethod> superMethods = new HashSet<PsiMethod>();\n    for (CandidateInfo conflict : conflicts) {\n      final PsiMethod method = ((MethodCandidateInfo)conflict).getElement();\n      for (HierarchicalMethodSignature methodSignature : method.getHierarchicalMethodSignature().getSuperSignatures()) {\n        final PsiMethod superMethod = methodSignature.getMethod();\n        if (!CommonClassNames.JAVA_LANG_OBJECT.equals(superMethod.getContainingClass().getQualifiedName())) {\n          superMethods.add(superMethod);\n        }\n      }\n    }\n    nextConflict:\n    for (int i=0; i<conflicts.size();i++) {\n      ProgressManager.checkCanceled();\n      CandidateInfo info = conflicts.get(i);\n      PsiMethod method = (PsiMethod)info.getElement();\n      assert method != null;\n\n      if (!method.hasModifierProperty(PsiModifier.STATIC) && superMethods.contains(method)) {\n        conflicts.remove(i);\n        i--;\n        continue;\n      }\n\n      PsiClass class1 = method.getContainingClass();\n      PsiSubstitutor infoSubstitutor = info.getSubstitutor();\n      MethodSignature signature = method.getSignature(infoSubstitutor);\n      CandidateInfo existing = signatures.get(signature);\n\n      if (existing == null) {\n        signatures.put(signature, info);\n        continue;\n      }\n      PsiMethod existingMethod = (PsiMethod)existing.getElement();\n      assert existingMethod != null;\n      PsiClass existingClass = existingMethod.getContainingClass();\n      if (class1.isInterface() && CommonClassNames.JAVA_LANG_OBJECT.equals(existingClass.getQualifiedName())) { //prefer interface methods to methods from Object\n        signatures.put(signature, info);\n        continue;\n      }\n      if (method == existingMethod) {\n        PsiElement scope1 = info.getCurrentFileResolveScope();\n        PsiElement scope2 = existing.getCurrentFileResolveScope();\n        if (scope1 instanceof PsiClass &&\n            scope2 instanceof PsiClass &&\n            PsiTreeUtil.isAncestor(scope1, scope2, true) &&\n            !existing.isAccessible()) { //prefer methods from outer class to inaccessible base class methods\n          signatures.put(signature, info);\n          continue;\n        }\n      }\n\n      // filter out methods with incorrect inferred bounds (for unrelated methods only)\n      boolean existingTypeParamAgree = areTypeParametersAgree(existing);\n      boolean infoTypeParamAgree = areTypeParametersAgree(info);\n      if (existingTypeParamAgree && !infoTypeParamAgree && !PsiSuperMethodImplUtil.isSuperMethodSmart(method, existingMethod)) {\n        conflicts.remove(i);\n        i--;\n        continue;\n      }\n      if (!existingTypeParamAgree && infoTypeParamAgree && !PsiSuperMethodImplUtil.isSuperMethodSmart(existingMethod, method)) {\n        signatures.put(signature, info);\n        int index = conflicts.indexOf(existing);\n        conflicts.remove(index);\n        i--;\n        continue;\n      }\n\n      if (InheritanceUtil.isInheritorOrSelf(class1, existingClass, true) ||\n          InheritanceUtil.isInheritorOrSelf(existingClass, class1, true)) {\n        PsiParameter[] parameters = method.getParameterList().getParameters();\n        final PsiParameter[] existingParameters = existingMethod.getParameterList().getParameters();\n        for (int i1 = 0, parametersLength = parameters.length; i1 < parametersLength; i1++) {\n          if (parameters[i1].getType() instanceof PsiArrayType &&\n              !(existingParameters[i1].getType() instanceof PsiArrayType)) {//prefer more specific type\n            signatures.put(signature, info);\n            continue nextConflict;\n          }\n        }\n        PsiType returnType1 = method.getReturnType();\n        PsiType returnType2 = existingMethod.getReturnType();\n        if (returnType1 != null && returnType2 != null) {\n          returnType1 = infoSubstitutor.substitute(returnType1);\n          returnType2 = existing.getSubstitutor().substitute(returnType2);\n          if (!returnType1.equals(returnType2) && returnType1.isAssignableFrom(returnType2)) {\n            conflicts.remove(i);\n            i--;\n            continue;\n          }\n        }\n\n        // prefer derived class\n        signatures.put(signature, info);\n      } else {\n        final PsiMethodCallExpression methodCallExpression = PsiTreeUtil.getParentOfType(myArgumentsList, PsiMethodCallExpression.class);\n        if (methodCallExpression != null) {\n          final PsiReferenceExpression expression = methodCallExpression.getMethodExpression();\n          final PsiExpression qualifierExpression = expression.getQualifierExpression();\n          PsiClass currentClass;\n          if (qualifierExpression != null) {\n            currentClass = PsiUtil.resolveClassInClassTypeOnly(qualifierExpression.getType());\n          } else {\n            currentClass = PsiTreeUtil.getParentOfType(expression, PsiClass.class);\n          }\n\n          if (currentClass != null && InheritanceUtil.isInheritorOrSelf(currentClass, class1, true) && InheritanceUtil.isInheritorOrSelf(currentClass, existingClass, true)) {\n            final PsiSubstitutor eSubstitutor = TypeConversionUtil.getSuperClassSubstitutor(existingClass, currentClass, PsiSubstitutor.EMPTY);\n            final PsiSubstitutor cSubstitutor = TypeConversionUtil.getSuperClassSubstitutor(class1, currentClass, PsiSubstitutor.EMPTY);\n            if (MethodSignatureUtil.areSignaturesEqual(existingMethod.getSignature(eSubstitutor), method.getSignature(cSubstitutor))) {\n              final PsiType returnType = eSubstitutor.substitute(existingMethod.getReturnType());\n              final PsiType returnType1 = cSubstitutor.substitute(method.getReturnType());\n              if (returnType != null && returnType1 != null && !returnType1.equals(returnType) && TypeConversionUtil.isAssignable(returnType, returnType1, false)) {\n                if (class1.isInterface() && !existingClass.isInterface()) continue;\n                conflicts.remove(existing);\n              } else {\n                conflicts.remove(i);\n              }\n              i--;\n              break;\n            }\n          }\n        }\n      }\n    }\n  }","id":63709,"modified_method":"private void checkSameSignatures(@NotNull List<CandidateInfo> conflicts) {\n    // candidates should go in order of class hierarchy traversal\n    // in order for this to work\n    Map<MethodSignature, CandidateInfo> signatures = new THashMap<MethodSignature, CandidateInfo>(conflicts.size());\n    Set<PsiMethod> superMethods = new HashSet<PsiMethod>();\n    for (CandidateInfo conflict : conflicts) {\n      final PsiMethod method = ((MethodCandidateInfo)conflict).getElement();\n      for (HierarchicalMethodSignature methodSignature : method.getHierarchicalMethodSignature().getSuperSignatures()) {\n        final PsiMethod superMethod = methodSignature.getMethod();\n        if (!CommonClassNames.JAVA_LANG_OBJECT.equals(superMethod.getContainingClass().getQualifiedName())) {\n          superMethods.add(superMethod);\n        }\n      }\n    }\n    nextConflict:\n    for (int i=0; i<conflicts.size();i++) {\n      ProgressManager.checkCanceled();\n      CandidateInfo info = conflicts.get(i);\n      PsiMethod method = (PsiMethod)info.getElement();\n      assert method != null;\n\n      if (!method.hasModifierProperty(PsiModifier.STATIC) && superMethods.contains(method)) {\n        conflicts.remove(i);\n        i--;\n        continue;\n      }\n\n      PsiClass class1 = method.getContainingClass();\n      PsiSubstitutor infoSubstitutor = info.getSubstitutor();\n      MethodSignature signature = method.getSignature(infoSubstitutor);\n      CandidateInfo existing = signatures.get(signature);\n\n      if (existing == null) {\n        signatures.put(signature, info);\n        continue;\n      }\n      PsiMethod existingMethod = (PsiMethod)existing.getElement();\n      assert existingMethod != null;\n      PsiClass existingClass = existingMethod.getContainingClass();\n      if (class1.isInterface() && CommonClassNames.JAVA_LANG_OBJECT.equals(existingClass.getQualifiedName())) { //prefer interface methods to methods from Object\n        signatures.put(signature, info);\n        continue;\n      }\n      if (method == existingMethod) {\n        PsiElement scope1 = info.getCurrentFileResolveScope();\n        PsiElement scope2 = existing.getCurrentFileResolveScope();\n        if (scope1 instanceof PsiClass &&\n            scope2 instanceof PsiClass &&\n            PsiTreeUtil.isAncestor(scope1, scope2, true) &&\n            !existing.isAccessible()) { //prefer methods from outer class to inaccessible base class methods\n          signatures.put(signature, info);\n          continue;\n        }\n      }\n\n      // filter out methods with incorrect inferred bounds (for unrelated methods only)\n      boolean existingTypeParamAgree = areTypeParametersAgree(existing);\n      boolean infoTypeParamAgree = areTypeParametersAgree(info);\n      if (existingTypeParamAgree && !infoTypeParamAgree && !PsiSuperMethodImplUtil.isSuperMethodSmart(method, existingMethod)) {\n        conflicts.remove(i);\n        i--;\n        continue;\n      }\n      if (!existingTypeParamAgree && infoTypeParamAgree && !PsiSuperMethodImplUtil.isSuperMethodSmart(existingMethod, method)) {\n        signatures.put(signature, info);\n        int index = conflicts.indexOf(existing);\n        conflicts.remove(index);\n        i--;\n        continue;\n      }\n\n      if (InheritanceUtil.isInheritorOrSelf(class1, existingClass, true) ||\n          InheritanceUtil.isInheritorOrSelf(existingClass, class1, true)) {\n        PsiParameter[] parameters = method.getParameterList().getParameters();\n        final PsiParameter[] existingParameters = existingMethod.getParameterList().getParameters();\n        for (int i1 = 0, parametersLength = parameters.length; i1 < parametersLength; i1++) {\n          if (parameters[i1].getType() instanceof PsiArrayType &&\n              !(existingParameters[i1].getType() instanceof PsiArrayType)) {//prefer more specific type\n            signatures.put(signature, info);\n            continue nextConflict;\n          }\n        }\n        PsiType returnType1 = method.getReturnType();\n        PsiType returnType2 = existingMethod.getReturnType();\n        if (returnType1 != null && returnType2 != null) {\n          returnType1 = infoSubstitutor.substitute(returnType1);\n          returnType2 = existing.getSubstitutor().substitute(returnType2);\n          if (!returnType1.equals(returnType2) && returnType1.isAssignableFrom(returnType2)) {\n            conflicts.remove(i);\n            i--;\n            continue;\n          }\n        }\n\n        // prefer derived class\n        signatures.put(signature, info);\n      } else {\n        final PsiMethodCallExpression methodCallExpression = PsiTreeUtil.getParentOfType(myArgumentsList, PsiMethodCallExpression.class);\n        if (methodCallExpression != null) {\n          final PsiReferenceExpression expression = methodCallExpression.getMethodExpression();\n          final PsiExpression qualifierExpression = expression.getQualifierExpression();\n          PsiClass currentClass;\n          if (qualifierExpression != null) {\n            currentClass = PsiUtil.resolveClassInClassTypeOnly(qualifierExpression.getType());\n          } else {\n            currentClass = PsiTreeUtil.getParentOfType(expression, PsiClass.class);\n          }\n\n          if (currentClass != null && InheritanceUtil.isInheritorOrSelf(currentClass, class1, true) && InheritanceUtil.isInheritorOrSelf(currentClass, existingClass, true)) {\n            final PsiSubstitutor eSubstitutor = TypeConversionUtil.getSuperClassSubstitutor(existingClass, currentClass, PsiSubstitutor.EMPTY);\n            final PsiSubstitutor cSubstitutor = TypeConversionUtil.getSuperClassSubstitutor(class1, currentClass, PsiSubstitutor.EMPTY);\n            if (MethodSignatureUtil.areSignaturesEqual(existingMethod.getSignature(eSubstitutor), method.getSignature(cSubstitutor))) {\n              final PsiType returnType = eSubstitutor.substitute(existingMethod.getReturnType());\n              final PsiType returnType1 = cSubstitutor.substitute(method.getReturnType());\n              if (returnType != null && returnType1 != null && !returnType1.equals(returnType)) {\n                if (TypeConversionUtil.isAssignable(returnType, returnType1, false)) {\n                  if (class1.isInterface() && !existingClass.isInterface()) continue;\n                  conflicts.remove(existing);\n                } else {\n                  if (!TypeConversionUtil.isAssignable(returnType1, returnType, false)) continue;\n                  conflicts.remove(i);\n                }\n                i--;\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n  }","commit_id":"3f49bd2d7303cbae112d7fe11f913227e5a6f590","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Specifics isMoreSpecific(final CandidateInfo info1,\n                                   final CandidateInfo info2,\n                                   @MethodCandidateInfo.ApplicabilityLevelConstant int applicabilityLevel,\n                                   @NotNull LanguageLevel languageLevel) {\n    PsiMethod method1 = (PsiMethod)info1.getElement();\n    PsiMethod method2 = (PsiMethod)info2.getElement();\n    final PsiClass class1 = method1.getContainingClass();\n    final PsiClass class2 = method2.getContainingClass();\n\n    final PsiParameter[] params1 = method1.getParameterList().getParameters();\n    final PsiParameter[] params2 = method2.getParameterList().getParameters();\n\n    final PsiTypeParameter[] typeParameters1 = method1.getTypeParameters();\n    final PsiTypeParameter[] typeParameters2 = method2.getTypeParameters();\n    final PsiSubstitutor classSubstitutor1 = info1.getSubstitutor(); //substitutions for method type parameters will be ignored\n    final PsiSubstitutor classSubstitutor2 = info2.getSubstitutor();\n\n    final int max = Math.max(params1.length, params2.length);\n    PsiType[] types1 = new PsiType[max];\n    PsiType[] types2 = new PsiType[max];\n    for (int i = 0; i < max; i++) {\n      ProgressManager.checkCanceled();\n      PsiType type1 = params1.length > 0 ? params1[Math.min(i, params1.length - 1)].getType() : null;\n      PsiType type2 = params2.length > 0 ? params2[Math.min(i, params2.length - 1)].getType() : null;\n      if (applicabilityLevel == MethodCandidateInfo.ApplicabilityLevel.VARARGS) {\n        if (type1 instanceof PsiEllipsisType && type2 instanceof PsiEllipsisType &&\n            params1.length == params2.length &&\n            (!JavaVersionService.getInstance().isAtLeast(class1, JavaSdkVersion.JDK_1_7) || ((PsiArrayType)type1).getComponentType().equalsToText(CommonClassNames.JAVA_LANG_OBJECT) || ((PsiArrayType)type2).getComponentType().equalsToText(CommonClassNames.JAVA_LANG_OBJECT))) {\n          type1 = ((PsiEllipsisType)type1).toArrayType();\n          type2 = ((PsiEllipsisType)type2).toArrayType();\n        }\n        else {\n          type1 = type1 instanceof PsiEllipsisType ? ((PsiArrayType)type1).getComponentType() : type1;\n          type2 = type2 instanceof PsiEllipsisType ? ((PsiArrayType)type2).getComponentType() : type2;\n        }\n      }\n\n      types1[i] = type1;\n      types2[i] = type2;\n    }\n\n    boolean sameBoxing = true;\n    int[] boxingHappened = new int[2];\n    for (int i = 0; i < types1.length; i++) {\n      ProgressManager.checkCanceled();\n      PsiType type1 = classSubstitutor1.substitute(types1[i]);\n      PsiType type2 = classSubstitutor2.substitute(types2[i]);\n      PsiType argType = i < myActualParameterTypes.length ? myActualParameterTypes[i] : null;\n\n      boolean boxingInFirst = false;\n      if (isBoxingHappened(argType, type1, languageLevel)) {\n        boxingHappened[0] += 1;\n        boxingInFirst = true;\n      }\n\n      boolean boxingInSecond = false;\n      if (isBoxingHappened(argType, type2, languageLevel)) {\n        boxingHappened[1] += 1;\n        boxingInSecond = true;\n      }\n      sameBoxing &= boxingInFirst == boxingInSecond;\n    }\n    if (boxingHappened[0] == 0 && boxingHappened[1] > 0) return Specifics.FIRST;\n    if (boxingHappened[0] > 0 && boxingHappened[1] == 0) return Specifics.SECOND;\n\n    if (sameBoxing) {\n      final PsiResolveHelper resolveHelper = PsiResolveHelper.SERVICE.getInstance(myArgumentsList.getProject());\n      int level1 = getLevel(applicabilityLevel, languageLevel, method1, typeParameters1, types2, types1, resolveHelper);\n      int level2 = getLevel(applicabilityLevel, languageLevel, method2, typeParameters2, types1, types2, resolveHelper);\n      if (level1 > level2) return Specifics.SECOND;\n      if (level2 > level1) return Specifics.FIRST;\n      final boolean raw1 = PsiUtil.isRawSubstitutor(method1, classSubstitutor1);\n      final boolean raw2 = PsiUtil.isRawSubstitutor(method2, classSubstitutor2);\n      if (raw1 ^ raw2) {\n        return raw1 ? Specifics.SECOND : Specifics.FIRST;\n      }\n    } \n    else if (applicabilityLevel == MethodCandidateInfo.ApplicabilityLevel.VARARGS) {\n      final PsiType lastParamType1 = classSubstitutor1.substitute(types1[types1.length - 1]);\n      final PsiType lastParamType2 = classSubstitutor2.substitute(types2[types1.length - 1]);\n      final boolean assignable1 = TypeConversionUtil.isAssignable(lastParamType2, lastParamType1);\n      final boolean assignable2 = TypeConversionUtil.isAssignable(lastParamType1, lastParamType2);\n      if (assignable1 && !assignable2) {\n        return Specifics.FIRST;\n      }\n      if (assignable2 && !assignable1) {\n        return Specifics.SECOND;\n      }\n    }\n\n    Specifics isMoreSpecific = null;\n    if (class1 != class2) {\n      if (class2.isInheritor(class1, true) || class1.isInterface() && !class2.isInterface()) {\n        if (MethodSignatureUtil.isSubsignature(method1.getSignature(info1.getSubstitutor()), method2.getSignature(info2.getSubstitutor()))) {\n          isMoreSpecific = Specifics.SECOND;\n        }\n        else if (method1.hasModifierProperty(PsiModifier.STATIC) && method2.hasModifierProperty(PsiModifier.STATIC) && boxingHappened[0] == 0) {\n          isMoreSpecific = Specifics.SECOND;\n        }\n      }\n      else if (class1.isInheritor(class2, true) || class2.isInterface()) {\n        if (MethodSignatureUtil.isSubsignature(method2.getSignature(info2.getSubstitutor()), method1.getSignature(info1.getSubstitutor()))) {\n          isMoreSpecific = Specifics.FIRST;\n        }\n        else if (method1.hasModifierProperty(PsiModifier.STATIC) && method2.hasModifierProperty(PsiModifier.STATIC) && boxingHappened[0] == 0) {\n          isMoreSpecific = Specifics.FIRST;\n        }\n      }\n    }\n    if (isMoreSpecific == null) {\n      return Specifics.NEITHER;\n    }\n\n    return isMoreSpecific;\n  }","id":63710,"modified_method":"private Specifics isMoreSpecific(final CandidateInfo info1,\n                                   final CandidateInfo info2,\n                                   @MethodCandidateInfo.ApplicabilityLevelConstant int applicabilityLevel,\n                                   @NotNull LanguageLevel languageLevel) {\n    PsiMethod method1 = (PsiMethod)info1.getElement();\n    PsiMethod method2 = (PsiMethod)info2.getElement();\n    final PsiClass class1 = method1.getContainingClass();\n    final PsiClass class2 = method2.getContainingClass();\n\n    final PsiParameter[] params1 = method1.getParameterList().getParameters();\n    final PsiParameter[] params2 = method2.getParameterList().getParameters();\n\n    final PsiTypeParameter[] typeParameters1 = method1.getTypeParameters();\n    final PsiTypeParameter[] typeParameters2 = method2.getTypeParameters();\n    final PsiSubstitutor classSubstitutor1 = info1.getSubstitutor(); //substitutions for method type parameters will be ignored\n    final PsiSubstitutor classSubstitutor2 = info2.getSubstitutor();\n\n    final int max = Math.max(params1.length, params2.length);\n    PsiType[] types1 = new PsiType[max];\n    PsiType[] types2 = new PsiType[max];\n    for (int i = 0; i < max; i++) {\n      ProgressManager.checkCanceled();\n      PsiType type1 = params1.length > 0 ? params1[Math.min(i, params1.length - 1)].getType() : null;\n      PsiType type2 = params2.length > 0 ? params2[Math.min(i, params2.length - 1)].getType() : null;\n      if (applicabilityLevel == MethodCandidateInfo.ApplicabilityLevel.VARARGS) {\n        if (type1 instanceof PsiEllipsisType && type2 instanceof PsiEllipsisType &&\n            params1.length == params2.length &&\n            (!JavaVersionService.getInstance().isAtLeast(class1, JavaSdkVersion.JDK_1_7) || ((PsiArrayType)type1).getComponentType().equalsToText(CommonClassNames.JAVA_LANG_OBJECT) || ((PsiArrayType)type2).getComponentType().equalsToText(CommonClassNames.JAVA_LANG_OBJECT))) {\n          type1 = ((PsiEllipsisType)type1).toArrayType();\n          type2 = ((PsiEllipsisType)type2).toArrayType();\n        }\n        else {\n          type1 = type1 instanceof PsiEllipsisType ? ((PsiArrayType)type1).getComponentType() : type1;\n          type2 = type2 instanceof PsiEllipsisType ? ((PsiArrayType)type2).getComponentType() : type2;\n        }\n      }\n\n      types1[i] = type1;\n      types2[i] = type2;\n    }\n\n    boolean sameBoxing = true;\n    int[] boxingHappened = new int[2];\n    for (int i = 0; i < types1.length; i++) {\n      ProgressManager.checkCanceled();\n      PsiType type1 = classSubstitutor1.substitute(types1[i]);\n      PsiType type2 = classSubstitutor2.substitute(types2[i]);\n      PsiType argType = i < myActualParameterTypes.length ? myActualParameterTypes[i] : null;\n\n      boolean boxingInFirst = false;\n      if (isBoxingHappened(argType, type1, languageLevel)) {\n        boxingHappened[0] += 1;\n        boxingInFirst = true;\n      }\n\n      boolean boxingInSecond = false;\n      if (isBoxingHappened(argType, type2, languageLevel)) {\n        boxingHappened[1] += 1;\n        boxingInSecond = true;\n      }\n      sameBoxing &= boxingInFirst == boxingInSecond;\n    }\n    if (boxingHappened[0] == 0 && boxingHappened[1] > 0) return Specifics.FIRST;\n    if (boxingHappened[0] > 0 && boxingHappened[1] == 0) return Specifics.SECOND;\n\n    if (sameBoxing) {\n      final PsiResolveHelper resolveHelper = PsiResolveHelper.SERVICE.getInstance(myArgumentsList.getProject());\n      int level1 = getLevel(applicabilityLevel, languageLevel, method1, typeParameters1, types2, types1, resolveHelper);\n      int level2 = getLevel(applicabilityLevel, languageLevel, method2, typeParameters2, types1, types2, resolveHelper);\n      if (level1 > level2) return Specifics.SECOND;\n      if (level2 > level1) return Specifics.FIRST;\n      final boolean raw1 = PsiUtil.isRawSubstitutor(method1, classSubstitutor1);\n      final boolean raw2 = PsiUtil.isRawSubstitutor(method2, classSubstitutor2);\n      if (raw1 ^ raw2) {\n        return raw1 ? Specifics.SECOND : Specifics.FIRST;\n      }\n    } \n    else if (applicabilityLevel == MethodCandidateInfo.ApplicabilityLevel.VARARGS) {\n      final PsiType lastParamType1 = classSubstitutor1.substitute(types1[types1.length - 1]);\n      final PsiType lastParamType2 = classSubstitutor2.substitute(types2[types1.length - 1]);\n      final boolean assignable1 = TypeConversionUtil.isAssignable(lastParamType2, lastParamType1);\n      final boolean assignable2 = TypeConversionUtil.isAssignable(lastParamType1, lastParamType2);\n      if (assignable1 && !assignable2) {\n        return Specifics.FIRST;\n      }\n      if (assignable2 && !assignable1) {\n        return Specifics.SECOND;\n      }\n    }\n\n    if (class1 != class2) {\n      if (class2.isInheritor(class1, true) || class1.isInterface() && !class2.isInterface()) {\n        if (MethodSignatureUtil.isSubsignature(method1.getSignature(info1.getSubstitutor()), method2.getSignature(info2.getSubstitutor()))) {\n          return Specifics.SECOND;\n        }\n        else if (method1.hasModifierProperty(PsiModifier.STATIC) && method2.hasModifierProperty(PsiModifier.STATIC) && boxingHappened[0] == 0) {\n          return Specifics.SECOND;\n        }\n      }\n      else if (class1.isInheritor(class2, true) || class2.isInterface()) {\n        if (MethodSignatureUtil.areErasedParametersEqual(method1.getSignature(PsiSubstitutor.EMPTY), method2.getSignature(PsiSubstitutor.EMPTY)) && \n            MethodSignatureUtil.isSubsignature(method2.getSignature(info2.getSubstitutor()), method1.getSignature(info1.getSubstitutor()))) {\n          return Specifics.FIRST;\n        }\n        else if (method1.hasModifierProperty(PsiModifier.STATIC) && method2.hasModifierProperty(PsiModifier.STATIC) && boxingHappened[0] == 0) {\n          return Specifics.FIRST;\n        }\n      }\n    }\n\n    return Specifics.NEITHER;\n  }","commit_id":"3f49bd2d7303cbae112d7fe11f913227e5a6f590","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean areErasedParametersEqual(@NotNull MethodSignature method1, @NotNull MethodSignature method2) {\n    PsiType[] erased1 = method1 instanceof MethodSignatureBase\n                        ? ((MethodSignatureBase)method1).getErasedParameterTypes() : calcErasedParameterTypes(method1);\n    PsiType[] erased2 = method2 instanceof MethodSignatureBase\n                        ? ((MethodSignatureBase)method2).getErasedParameterTypes() : calcErasedParameterTypes(method2);\n    return Arrays.equals(erased1, erased2);\n  }","id":63711,"modified_method":"public static boolean areErasedParametersEqual(@NotNull MethodSignature method1, @NotNull MethodSignature method2) {\n    PsiType[] erased1 = method1 instanceof MethodSignatureBase\n                        ? ((MethodSignatureBase)method1).getErasedParameterTypes() : calcErasedParameterTypes(method1);\n    PsiType[] erased2 = method2 instanceof MethodSignatureBase\n                        ? ((MethodSignatureBase)method2).getErasedParameterTypes() : calcErasedParameterTypes(method2);\n    return Arrays.equals(erased1, erased2);\n  }","commit_id":"3f49bd2d7303cbae112d7fe11f913227e5a6f590","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void processAlreadyHasTypeCast(PsiTypeCastExpression typeCast){\n      PsiElement parent = typeCast.getParent();\n      while(parent instanceof PsiParenthesizedExpression) parent = parent.getParent();\n      if (parent instanceof PsiExpressionList) return; // do not replace in arg lists - should be handled by parent\n      if (parent instanceof PsiReturnStatement) return;\n      if (parent instanceof PsiTypeCastExpression) return;\n\n      if (isTypeCastSemantic(typeCast)) return;\n\n      PsiTypeElement typeElement = typeCast.getCastType();\n      if (typeElement == null) return;\n      final PsiType castTo = typeElement.getType();\n      final PsiExpression operand = typeCast.getOperand();\n\n      PsiType opType = operand.getType();\n      final PsiType expectedTypeByParent = PsiTypesUtil.getExpectedTypeByParent(typeCast);\n      if (expectedTypeByParent != null) {\n        try {\n          final PsiDeclarationStatement declarationStatement =\n            (PsiDeclarationStatement)JavaPsiFacade.getElementFactory(operand.getProject()).createStatementFromText(\n              expectedTypeByParent.getCanonicalText() + \" l = \" + operand.getText() + \";\", parent);\n          final PsiExpression initializer = ((PsiLocalVariable)declarationStatement.getDeclaredElements()[0]).getInitializer();\n          LOG.assertTrue(initializer != null, operand.getText());\n          opType = initializer.getType();\n        }\n        catch (IncorrectOperationException ignore) {}\n      }\n\n      if (opType == null) return;\n      if (parent instanceof PsiReferenceExpression) {\n        if (castTo instanceof PsiClassType && opType instanceof PsiPrimitiveType) return; //explicit boxing\n        //Check accessibility\n        if (opType instanceof PsiClassType) {\n          final PsiReferenceExpression refExpression = (PsiReferenceExpression)parent;\n          PsiElement element = refExpression.resolve();\n          if (!(element instanceof PsiMember)) return;\n          PsiClass accessClass = ((PsiClassType)opType).resolve();\n          if (accessClass == null) return;\n          if (!JavaPsiFacade.getInstance(parent.getProject()).getResolveHelper().isAccessible((PsiMember)element, typeCast, accessClass)) return;\n          if (!isCastRedundantInRefExpression(refExpression, operand)) return;\n        }\n      }\n\n      if (arrayAccessAtTheLeftSideOfAssignment(parent)) {\n        if (TypeConversionUtil.isAssignable(opType, castTo, false) && opType.getArrayDimensions() == castTo.getArrayDimensions()) {\n          addToResults(typeCast);\n        }\n      }\n      else {\n        if (parent instanceof PsiInstanceOfExpression && opType instanceof PsiPrimitiveType) {\n          return;\n        }\n        if (parent instanceof PsiForeachStatement) {\n          if (InheritanceUtil.isInheritor(PsiUtil.resolveClassInType(opType), false, CommonClassNames.JAVA_LANG_ITERABLE)) {\n            addToResults(typeCast);\n            return;\n          }\n        }\n        if (parent instanceof PsiThrowStatement) {\n          final PsiClass thrownClass = PsiUtil.resolveClassInType(opType);\n          if (InheritanceUtil.isInheritor(thrownClass, false, CommonClassNames.JAVA_LANG_RUNTIME_EXCEPTION)) {\n            addToResults(typeCast);\n            return;\n          }\n          if (InheritanceUtil.isInheritor(thrownClass, false, CommonClassNames.JAVA_LANG_THROWABLE)) {\n            final PsiMethod method = PsiTreeUtil.getParentOfType(parent, PsiMethod.class);\n            if (method != null) {\n              for (PsiClassType thrownType : method.getThrowsList().getReferencedTypes()) {\n                if (TypeConversionUtil.isAssignable(thrownType, opType, false)) {\n                  addToResults(typeCast);\n                  return;\n                }\n              }\n            }\n          }\n        }\n        if (parent instanceof PsiInstanceOfExpression || TypeConversionUtil.isAssignable(castTo, opType, false)) {\n          addToResults(typeCast);\n        }\n      }\n    }","id":63712,"modified_method":"private void processAlreadyHasTypeCast(PsiTypeCastExpression typeCast){\n      PsiElement parent = typeCast.getParent();\n      while(parent instanceof PsiParenthesizedExpression) parent = parent.getParent();\n      if (parent instanceof PsiExpressionList) return; // do not replace in arg lists - should be handled by parent\n      if (parent instanceof PsiReturnStatement) return;\n      if (parent instanceof PsiTypeCastExpression) return;\n\n      if (isTypeCastSemantic(typeCast)) return;\n\n      PsiTypeElement typeElement = typeCast.getCastType();\n      if (typeElement == null) return;\n      final PsiType castTo = typeElement.getType();\n      final PsiExpression operand = typeCast.getOperand();\n\n      PsiType opType = operand.getType();\n      final PsiType expectedTypeByParent = PsiTypesUtil.getExpectedTypeByParent(typeCast);\n      if (expectedTypeByParent != null) {\n        try {\n          final PsiDeclarationStatement declarationStatement =\n            (PsiDeclarationStatement)JavaPsiFacade.getElementFactory(operand.getProject()).createStatementFromText(\n              expectedTypeByParent.getCanonicalText() + \" l = \" + operand.getText() + \";\", parent);\n          final PsiExpression initializer = ((PsiLocalVariable)declarationStatement.getDeclaredElements()[0]).getInitializer();\n          LOG.assertTrue(initializer != null, operand.getText());\n          opType = initializer.getType();\n        }\n        catch (IncorrectOperationException ignore) {}\n      }\n\n      if (opType == null) return;\n      if (parent instanceof PsiReferenceExpression) {\n        if (castTo instanceof PsiClassType && opType instanceof PsiPrimitiveType) return; //explicit boxing\n        //Check accessibility\n        if (opType instanceof PsiClassType) {\n          final PsiReferenceExpression refExpression = (PsiReferenceExpression)parent;\n          PsiElement element = refExpression.resolve();\n          if (!(element instanceof PsiMember)) return;\n          PsiClass accessClass = ((PsiClassType)opType).resolve();\n          if (accessClass == null) return;\n          if (!JavaPsiFacade.getInstance(parent.getProject()).getResolveHelper().isAccessible((PsiMember)element, typeCast, accessClass)) return;\n          if (!isCastRedundantInRefExpression(refExpression, operand)) return;\n        }\n      }\n\n      if (arrayAccessAtTheLeftSideOfAssignment(parent)) {\n        if (TypeConversionUtil.isAssignable(opType, castTo, false) && opType.getArrayDimensions() == castTo.getArrayDimensions()) {\n          addToResults(typeCast);\n        }\n      }\n      else {\n        if (parent instanceof PsiInstanceOfExpression && opType instanceof PsiPrimitiveType) {\n          return;\n        }\n        if (parent instanceof PsiForeachStatement) {\n          if (InheritanceUtil.isInheritor(PsiUtil.resolveClassInType(opType), false, CommonClassNames.JAVA_LANG_ITERABLE)) {\n            addToResults(typeCast);\n            return;\n          }\n        }\n        if (parent instanceof PsiThrowStatement) {\n          final PsiClass thrownClass = PsiUtil.resolveClassInType(opType);\n          if (InheritanceUtil.isInheritor(thrownClass, false, CommonClassNames.JAVA_LANG_RUNTIME_EXCEPTION)) {\n            addToResults(typeCast);\n            return;\n          }\n          if (InheritanceUtil.isInheritor(thrownClass, false, CommonClassNames.JAVA_LANG_THROWABLE)) {\n            final PsiMethod method = PsiTreeUtil.getParentOfType(parent, PsiMethod.class);\n            if (method != null) {\n              for (PsiClassType thrownType : method.getThrowsList().getReferencedTypes()) {\n                if (TypeConversionUtil.isAssignable(thrownType, opType, false)) {\n                  addToResults(typeCast);\n                  return;\n                }\n              }\n            }\n          }\n        }\n        if (parent instanceof PsiInstanceOfExpression || (TypeConversionUtil.isAssignable(castTo, opType, false) && \n                                                          (expectedTypeByParent == null || TypeConversionUtil.isAssignable(expectedTypeByParent, opType, false)))) {\n          addToResults(typeCast);\n        }\n      }\n    }","commit_id":"c46bd6acad8fd39921a76d611f3f25e9ca11a051","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static Specifics checkSubtyping(PsiType type1, PsiType type2) {\n    final boolean assignable2From1 = TypeConversionUtil.isAssignable(type2, type1, false);\n    final boolean assignable1From2 = TypeConversionUtil.isAssignable(type1, type2, false);\n    if (assignable1From2 || assignable2From1) {\n      if (assignable1From2 && assignable2From1) {\n        return null;\n      }\n\n      return assignable1From2 ? Specifics.FALSE : Specifics.TRUE;\n    }\n\n    return Specifics.CONFLICT;\n  }","id":63713,"modified_method":"private static Specifics checkSubtyping(PsiType type1, PsiType type2) {\n    boolean noBoxing = type1 instanceof PsiPrimitiveType == type2 instanceof PsiPrimitiveType;\n    final boolean assignable2From1 = noBoxing && TypeConversionUtil.isAssignable(type2, type1, false);\n    final boolean assignable1From2 = noBoxing && TypeConversionUtil.isAssignable(type1, type2, false);\n    if (assignable1From2 || assignable2From1) {\n      if (assignable1From2 && assignable2From1) {\n        return null;\n      }\n\n      return assignable1From2 ? Specifics.FALSE : Specifics.TRUE;\n    }\n\n    return Specifics.CONFLICT;\n  }","commit_id":"bec083b1b4b497d1dfa03f296cdd2e4426dc3f49","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n\tpublic BooleanQuery getFullQuery(SearchContext searchContext)\n\t\tthrows SearchException {\n\n\t\ttry {\n\t\t\tBooleanFilter fullQueryBooleanFilter = new BooleanFilter();\n\n\t\t\tfullQueryBooleanFilter.addRequiredTerm(\n\t\t\t\tField.COMPANY_ID, searchContext.getCompanyId());\n\n\t\t\tList<TrashHandler> trashHandlers =\n\t\t\t\tTrashHandlerRegistryUtil.getTrashHandlers();\n\n\t\t\tfor (TrashHandler trashHandler : trashHandlers) {\n\t\t\t\tFilter filter = trashHandler.getExcludeFilter(searchContext);\n\n\t\t\t\tif (filter != null) {\n\t\t\t\t\tfullQueryBooleanFilter.add(\n\t\t\t\t\t\tfilter, BooleanClauseOccur.MUST_NOT);\n\t\t\t\t}\n\n\t\t\t\tprocessTrashHandlerExcludeQuery(\n\t\t\t\t\tsearchContext, fullQueryBooleanFilter, trashHandler);\n\t\t\t}\n\n\t\t\tBooleanFilter groupBooleanFilter = new BooleanFilter();\n\n\t\t\tfor (long groupId : searchContext.getGroupIds()) {\n\t\t\t\tgroupBooleanFilter.addTerm(\n\t\t\t\t\tField.GROUP_ID, String.valueOf(groupId),\n\t\t\t\t\tBooleanClauseOccur.SHOULD);\n\t\t\t}\n\n\t\t\tif (groupBooleanFilter.hasClauses()) {\n\t\t\t\tfullQueryBooleanFilter.add(\n\t\t\t\t\tgroupBooleanFilter, BooleanClauseOccur.MUST);\n\t\t\t}\n\n\t\t\tfullQueryBooleanFilter.addRequiredTerm(\n\t\t\t\tField.STATUS, WorkflowConstants.STATUS_IN_TRASH);\n\n\t\t\tBooleanQuery fullQuery = createFullQuery(\n\t\t\t\tfullQueryBooleanFilter, searchContext);\n\n\t\t\treturn fullQuery;\n\t\t}\n\t\tcatch (SearchException se) {\n\t\t\tthrow se;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SearchException(e);\n\t\t}\n\t}","id":63714,"modified_method":"@Override\n\tpublic BooleanQuery getFullQuery(SearchContext searchContext)\n\t\tthrows SearchException {\n\n\t\ttry {\n\t\t\tBooleanFilter fullQueryBooleanFilter = new BooleanFilter();\n\n\t\t\tfullQueryBooleanFilter.addRequiredTerm(\n\t\t\t\tField.COMPANY_ID, searchContext.getCompanyId());\n\n\t\t\tList<TrashHandler> trashHandlers =\n\t\t\t\tTrashHandlerRegistryUtil.getTrashHandlers();\n\n\t\t\tfor (TrashHandler trashHandler : trashHandlers) {\n\t\t\t\tFilter filter = trashHandler.getExcludeFilter(searchContext);\n\n\t\t\t\tif (filter != null) {\n\t\t\t\t\tfullQueryBooleanFilter.add(\n\t\t\t\t\t\tfilter, BooleanClauseOccur.MUST_NOT);\n\t\t\t\t}\n\n\t\t\t\tprocessTrashHandlerExcludeQuery(\n\t\t\t\t\tsearchContext, fullQueryBooleanFilter, trashHandler);\n\t\t\t}\n\n\t\t\tlong[] groupIds = searchContext.getGroupIds();\n\n\t\t\tif (ArrayUtil.isNotEmpty(groupIds)) {\n\t\t\t\tTermsFilter groupTermsFilter = new TermsFilter(Field.GROUP_ID);\n\n\t\t\t\tgroupTermsFilter.addValues(ArrayUtil.toStringArray(groupIds));\n\n\t\t\t\tfullQueryBooleanFilter.add(\n\t\t\t\t\tgroupTermsFilter, BooleanClauseOccur.MUST);\n\t\t\t}\n\n\t\t\tfullQueryBooleanFilter.addRequiredTerm(\n\t\t\t\tField.STATUS, WorkflowConstants.STATUS_IN_TRASH);\n\n\t\t\tBooleanQuery fullQuery = createFullQuery(\n\t\t\t\tfullQueryBooleanFilter, searchContext);\n\n\t\t\treturn fullQuery;\n\t\t}\n\t\tcatch (SearchException se) {\n\t\t\tthrow se;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SearchException(e);\n\t\t}\n\t}","commit_id":"620e28dfc3c0d2bdef1f108ad5baeae4fbcdac67","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testGetMultipleGroups() throws Exception {\n\t\tUser dlc3User = UserLocalServiceUtil.getUserByScreenName(\n\t\t\tTestPropsValues.getCompanyId(), \"dlc3\");\n\n\t\tGroupLocalServiceUtil.addUserGroup(\n\t\t\tdlc3User.getUserId(), TestPropsValues.getGroupId());\n\n\t\tUser dlc4User = UserLocalServiceUtil.getUserByScreenName(\n\t\t\tTestPropsValues.getCompanyId(), \"dlc4\");\n\n\t\tGroupLocalServiceUtil.addUserGroup(\n\t\t\tdlc4User.getUserId(), TestPropsValues.getGroupId());\n\n\t\tlong[] groupIds = dlc4User.getGroupIds();\n\n\t\tfor (long groupId : dlc3User.getGroupIds()) {\n\t\t\tArrayUtil.remove(groupIds, groupId);\n\t\t}\n\n\t\tList<User> users = UserLocalServiceUtil.searchSocial(\n\t\t\tTestPropsValues.getCompanyId(), groupIds, \"dlc\", QueryUtil.ALL_POS,\n\t\t\tQueryUtil.ALL_POS);\n\n\t\tAssert.assertEquals(2, users.size());\n\n\t\tGroupLocalServiceUtil.deleteUserGroup(\n\t\t\tdlc3User.getUserId(), TestPropsValues.getGroupId());\n\t\tGroupLocalServiceUtil.deleteUserGroup(\n\t\t\tdlc4User.getUserId(), TestPropsValues.getGroupId());\n\t}","id":63715,"modified_method":"@Test\n\tpublic void testGetMultipleGroups() throws Exception {\n\t\tUser dlc3User = UserLocalServiceUtil.getUserByScreenName(\n\t\t\tTestPropsValues.getCompanyId(), \"dlc3\");\n\n\t\tGroupLocalServiceUtil.addUserGroup(\n\t\t\tdlc3User.getUserId(), TestPropsValues.getGroupId());\n\n\t\tUser dlc4User = UserLocalServiceUtil.getUserByScreenName(\n\t\t\tTestPropsValues.getCompanyId(), \"dlc4\");\n\n\t\tGroupLocalServiceUtil.addUserGroup(\n\t\t\tdlc4User.getUserId(), TestPropsValues.getGroupId());\n\n\t\tSet<Long> groupIds = SetUtil.intersect(\n\t\t\tdlc3User.getGroupIds(), dlc4User.getGroupIds());\n\n\t\tList<User> users = UserLocalServiceUtil.searchSocial(\n\t\t\tTestPropsValues.getCompanyId(),\n\t\t\tArrayUtil.toArray(groupIds.toArray(new Long[groupIds.size()])),\n\t\t\t\"dlc\", QueryUtil.ALL_POS, QueryUtil.ALL_POS);\n\n\t\tAssert.assertEquals(2, users.size());\n\n\t\tGroupLocalServiceUtil.deleteUserGroup(\n\t\t\tdlc3User.getUserId(), TestPropsValues.getGroupId());\n\t\tGroupLocalServiceUtil.deleteUserGroup(\n\t\t\tdlc4User.getUserId(), TestPropsValues.getGroupId());\n\t}","commit_id":"b3b6e5a383d7752ec6edde75001103e980cb0320","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected SQLQuery buildAssetQuerySQL(\n\t\tAssetEntryQuery entryQuery, boolean count, Session session) {\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tif (count) {\n\t\t\tsb.append(\"SELECT COUNT(AssetEntry.entryId) AS COUNT_VALUE \");\n\t\t}\n\t\telse {\n\t\t\tsb.append(\"SELECT DISTINCT {AssetEntry.*} \");\n\t\t}\n\n\t\tsb.append(\"FROM AssetEntry \");\n\n\t\tif (entryQuery.getAnyTagIds().length > 0) {\n\t\t\tsb.append(\"INNER JOIN \");\n\t\t\tsb.append(\"AssetEntries_AssetTags ON \");\n\t\t\tsb.append(\"(AssetEntries_AssetTags.entryId = \");\n\t\t\tsb.append(\"AssetEntry.entryId) \");\n\t\t\tsb.append(\"INNER JOIN \");\n\t\t\tsb.append(\"AssetTag ON \");\n\t\t\tsb.append(\"(AssetTag.tagId = AssetEntries_AssetTags.tagId) \");\n\t\t}\n\n\t\tif (entryQuery.getAnyCategoryIds().length > 0) {\n\t\t\tsb.append(\"INNER JOIN \");\n\t\t\tsb.append(\"AssetEntries_AssetCategories ON \");\n\t\t\tsb.append(\"(AssetEntries_AssetCategories.entryId = \");\n\t\t\tsb.append(\"AssetEntry.entryId) \");\n\t\t\tsb.append(\"INNER JOIN \");\n\t\t\tsb.append(\"AssetCategory ON \");\n\t\t\tsb.append(\"(AssetCategory.categoryId = \");\n\t\t\tsb.append(\"AssetEntries_AssetCategories.categoryId) \");\n\t\t}\n\n\t\tsb.append(\"WHERE (1 = 1)\");\n\n\t\tif (entryQuery.isVisible() != null) {\n\t\t\tsb.append(\" AND (visible = ?)\");\n\t\t}\n\n\t\tif (entryQuery.isExcludeZeroViewCount()) {\n\t\t\tsb.append(\" AND (AssetEntry.viewCount > 0)\");\n\t\t}\n\n\t\t// Category conditions\n\n\t\tif (entryQuery.getAllCategoryIds().length > 0) {\n\t\t\tbuildAllCategoriesSQL(entryQuery.getAllCategoryIds(), sb);\n\t\t}\n\n\t\tif (entryQuery.getAnyCategoryIds().length > 0) {\n\t\t\tsb.append(\" AND (\");\n\t\t\tsb.append(getCategoryIds(\n\t\t\t\tentryQuery.getAnyCategoryIds(), StringPool.EQUAL));\n\t\t\tsb.append(\") \");\n\t\t}\n\n\t\tif (entryQuery.getNotAllCategoryIds().length > 0) {\n\t\t\tbuildNotAnyCategoriesSQL(entryQuery.getNotAllCategoryIds(), sb);\n\t\t}\n\n\t\tif (entryQuery.getNotAnyCategoryIds().length > 0) {\n\t\t\tsb.append(\" AND (\");\n\t\t\tsb.append(getNotCategoryIds(entryQuery.getNotAnyCategoryIds()));\n\t\t\tsb.append(\") \");\n\t\t}\n\n\t\t// Tag conditions\n\n\t\tif (entryQuery.getAllTagIds().length > 0) {\n\t\t\tbuildAllTagsSQL(entryQuery.getAllTagIds(), sb);\n\t\t}\n\n\t\tif (entryQuery.getAnyTagIds().length > 0) {\n\t\t\tsb.append(\" AND (\");\n\t\t\tsb.append(getTagIds(entryQuery.getAnyTagIds(), StringPool.EQUAL));\n\t\t\tsb.append(\") \");\n\t\t}\n\n\t\tif (entryQuery.getNotAllTagIds().length > 0) {\n\t\t\tbuildNotAnyTagsSQL(entryQuery.getNotAllTagIds(), sb);\n\t\t}\n\n\t\tif (entryQuery.getNotAnyTagIds().length > 0) {\n\t\t\tsb.append(\" AND (\");\n\t\t\tsb.append(getNotTagIds(entryQuery.getNotAnyTagIds()));\n\t\t\tsb.append(\") \");\n\t\t}\n\n\t\t// Other conditions\n\n\t\tsb.append(\"[$DATES$]\");\n\n\t\tlong[] groupIds = entryQuery.getGroupIds();\n\n\t\tsb.append(getGroupIds(groupIds));\n\n\t\tlong[] classNameIds = entryQuery.getClassNameIds();\n\n\t\tsb.append(getClassNameIds(classNameIds));\n\n\t\tif (!count) {\n\t\t\tsb.append(\" ORDER BY AssetEntry.\");\n\t\t\tsb.append(entryQuery.getOrderByCol1());\n\t\t\tsb.append(StringPool.SPACE);\n\t\t\tsb.append(entryQuery.getOrderByType1());\n\n\t\t\tif (Validator.isNotNull(entryQuery.getOrderByCol2()) &&\n\t\t\t\t!entryQuery.getOrderByCol1().equals(\n\t\t\t\t\tentryQuery.getOrderByCol2())) {\n\n\t\t\t\tsb.append(\", AssetEntry.\");\n\t\t\t\tsb.append(entryQuery.getOrderByCol2());\n\t\t\t\tsb.append(StringPool.SPACE);\n\t\t\t\tsb.append(entryQuery.getOrderByType2());\n\t\t\t}\n\t\t}\n\n\t\tString sql = sb.toString();\n\n\t\tsql = getDates(\n\t\t\tsql, entryQuery.getPublishDate(), entryQuery.getExpirationDate());\n\n\t\tSQLQuery q = session.createSQLQuery(sql);\n\n\t\tif (count) {\n\t\t\tq.addScalar(COUNT_COLUMN_NAME, Type.LONG);\n\t\t}\n\t\telse {\n\t\t\tq.addEntity(\"AssetEntry\", AssetEntryImpl.class);\n\t\t}\n\n\t\tQueryPos qPos = QueryPos.getInstance(q);\n\n\t\tif (entryQuery.isVisible() != null) {\n\t\t\tqPos.add(entryQuery.isVisible().booleanValue());\n\t\t}\n\n\t\tqPos.add(entryQuery.getAllCategoryIds());\n\t\tqPos.add(entryQuery.getAnyCategoryIds());\n\t\tqPos.add(entryQuery.getNotAllCategoryIds());\n\t\tqPos.add(entryQuery.getNotAnyCategoryIds());\n\n\t\tqPos.add(entryQuery.getAllTagIds());\n\t\tqPos.add(entryQuery.getAnyTagIds());\n\t\tqPos.add(entryQuery.getNotAllTagIds());\n\t\tqPos.add(entryQuery.getNotAnyTagIds());\n\n\t\tsetDates(\n\t\t\tqPos, entryQuery.getPublishDate(),\n\t\t\tentryQuery.getExpirationDate());\n\n\t\tfor (long groupId : groupIds) {\n\t\t\tqPos.add(groupId);\n\t\t}\n\n\t\tfor (long classNameId : classNameIds) {\n\t\t\tqPos.add(classNameId);\n\t\t}\n\n\t\treturn q;\n\t}","id":63716,"modified_method":"protected SQLQuery buildAssetQuerySQL(\n\t\tAssetEntryQuery entryQuery, boolean count, Session session) {\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tif (count) {\n\t\t\tsb.append(\"SELECT COUNT(AssetEntry.entryId) AS COUNT_VALUE \");\n\t\t}\n\t\telse {\n\t\t\tsb.append(\"SELECT DISTINCT {AssetEntry.*} \");\n\t\t}\n\n\t\tsb.append(\"FROM AssetEntry \");\n\n\t\tif (entryQuery.getAnyTagIds().length > 0) {\n\t\t\tsb.append(\"INNER JOIN \");\n\t\t\tsb.append(\"AssetEntries_AssetTags ON \");\n\t\t\tsb.append(\"(AssetEntries_AssetTags.entryId = \");\n\t\t\tsb.append(\"AssetEntry.entryId) \");\n\t\t\tsb.append(\"INNER JOIN \");\n\t\t\tsb.append(\"AssetTag ON \");\n\t\t\tsb.append(\"(AssetTag.tagId = AssetEntries_AssetTags.tagId) \");\n\t\t}\n\n\t\tif (entryQuery.getAnyCategoryIds().length > 0) {\n\t\t\tsb.append(\"INNER JOIN \");\n\t\t\tsb.append(\"AssetEntries_AssetCategories ON \");\n\t\t\tsb.append(\"(AssetEntries_AssetCategories.entryId = \");\n\t\t\tsb.append(\"AssetEntry.entryId) \");\n\t\t\tsb.append(\"INNER JOIN \");\n\t\t\tsb.append(\"AssetCategory ON \");\n\t\t\tsb.append(\"(AssetCategory.categoryId = \");\n\t\t\tsb.append(\"AssetEntries_AssetCategories.categoryId) \");\n\t\t}\n\n\t\tsb.append(\"WHERE (1 = 1)\");\n\n\t\tif (entryQuery.isVisible() != null) {\n\t\t\tsb.append(\" AND (visible = ?)\");\n\t\t}\n\n\t\tif (entryQuery.isExcludeZeroViewCount()) {\n\t\t\tsb.append(\" AND (AssetEntry.viewCount > 0)\");\n\t\t}\n\n\t\t// Category conditions\n\n\t\tif (entryQuery.getAllCategoryIds().length > 0) {\n\t\t\tbuildAllCategoriesSQL(entryQuery.getAllCategoryIds(), sb);\n\t\t}\n\n\t\tif (entryQuery.getAnyCategoryIds().length > 0) {\n\t\t\tsb.append(\" AND (\");\n\t\t\tsb.append(getCategoryIds(\n\t\t\t\tentryQuery.getAnyCategoryIds(), StringPool.EQUAL));\n\t\t\tsb.append(\") \");\n\t\t}\n\n\t\tif (entryQuery.getNotAllCategoryIds().length > 0) {\n\t\t\tbuildNotAnyCategoriesSQL(entryQuery.getNotAllCategoryIds(), sb);\n\t\t}\n\n\t\tif (entryQuery.getNotAnyCategoryIds().length > 0) {\n\t\t\tsb.append(\" AND (\");\n\t\t\tsb.append(getNotCategoryIds(entryQuery.getNotAnyCategoryIds()));\n\t\t\tsb.append(\") \");\n\t\t}\n\n\t\t// Tag conditions\n\n\t\tif (entryQuery.getAllTagIds().length > 0) {\n\t\t\tbuildAllTagsSQL(entryQuery.getAllTagIds(), sb);\n\t\t}\n\n\t\tif (entryQuery.getAnyTagIds().length > 0) {\n\t\t\tsb.append(\" AND (\");\n\t\t\tsb.append(getTagIds(entryQuery.getAnyTagIds(), StringPool.EQUAL));\n\t\t\tsb.append(\") \");\n\t\t}\n\n\t\tif (entryQuery.getNotAllTagIds().length > 0) {\n\t\t\tbuildNotAnyTagsSQL(entryQuery.getNotAllTagIds(), sb);\n\t\t}\n\n\t\tif (entryQuery.getNotAnyTagIds().length > 0) {\n\t\t\tsb.append(\" AND (\");\n\t\t\tsb.append(getNotTagIds(entryQuery.getNotAnyTagIds()));\n\t\t\tsb.append(\") \");\n\t\t}\n\n\t\t// Other conditions\n\n\t\tsb.append(\"[$DATES$]\");\n\n\t\tsb.append(getGroupIds(entryQuery.getGroupIds()));\n\n\t\tsb.append(getClassNameIds(entryQuery.getClassNameIds()));\n\n\t\tif (!count) {\n\t\t\tsb.append(\" ORDER BY AssetEntry.\");\n\t\t\tsb.append(entryQuery.getOrderByCol1());\n\t\t\tsb.append(StringPool.SPACE);\n\t\t\tsb.append(entryQuery.getOrderByType1());\n\n\t\t\tif (Validator.isNotNull(entryQuery.getOrderByCol2()) &&\n\t\t\t\t!entryQuery.getOrderByCol1().equals(\n\t\t\t\t\tentryQuery.getOrderByCol2())) {\n\n\t\t\t\tsb.append(\", AssetEntry.\");\n\t\t\t\tsb.append(entryQuery.getOrderByCol2());\n\t\t\t\tsb.append(StringPool.SPACE);\n\t\t\t\tsb.append(entryQuery.getOrderByType2());\n\t\t\t}\n\t\t}\n\n\t\tString sql = sb.toString();\n\n\t\tsql = getDates(\n\t\t\tsql, entryQuery.getPublishDate(), entryQuery.getExpirationDate());\n\n\t\tSQLQuery q = session.createSQLQuery(sql);\n\n\t\tif (count) {\n\t\t\tq.addScalar(COUNT_COLUMN_NAME, Type.LONG);\n\t\t}\n\t\telse {\n\t\t\tq.addEntity(\"AssetEntry\", AssetEntryImpl.class);\n\t\t}\n\n\t\tQueryPos qPos = QueryPos.getInstance(q);\n\n\t\tif (entryQuery.isVisible() != null) {\n\t\t\tqPos.add(entryQuery.isVisible().booleanValue());\n\t\t}\n\n\t\tqPos.add(entryQuery.getAllCategoryIds());\n\t\tqPos.add(entryQuery.getAnyCategoryIds());\n\t\tqPos.add(entryQuery.getNotAllCategoryIds());\n\t\tqPos.add(entryQuery.getNotAnyCategoryIds());\n\n\t\tqPos.add(entryQuery.getAllTagIds());\n\t\tqPos.add(entryQuery.getAnyTagIds());\n\t\tqPos.add(entryQuery.getNotAllTagIds());\n\t\tqPos.add(entryQuery.getNotAnyTagIds());\n\n\t\tsetDates(\n\t\t\tqPos, entryQuery.getPublishDate(),\n\t\t\tentryQuery.getExpirationDate());\n\n\t\tqPos.add(entryQuery.getGroupIds());\n\n\t\tqPos.add(entryQuery.getClassNameIds());\n\n\t\treturn q;\n\t}","commit_id":"8fed0391582406b02382ea52dd601df105261466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n    public String build(Response response, JsonArray array, String contextName) {\n      StringBuilder sb = new StringBuilder();\n      if( array.size() == 0 ) { // Fake row, needed by builder\n        array = new JsonArray();\n        JsonObject fake = new JsonObject();\n        fake.addProperty(ROW, 0);\n        for( int i = 0; i < _f.numCols(); ++i )\n          format(fake, _f, 0, i);\n        array.add(fake);\n      }\n      sb.append(header(array));\n\n      JsonObject row = new JsonObject();\n\n      row.addProperty(ROW, MIN);\n      for( int i = 0; i < _f.numCols(); i++ )\n        row.addProperty(_f._names[i], _f.vecs()[i].min());\n      sb.append(ARRAY_HEADER_ROW_BUILDER.build(response, row, contextName));\n\n      row.addProperty(ROW, MAX);\n      for( int i = 0; i < _f.numCols(); i++ )\n        row.addProperty(_f._names[i], _f.vecs()[i].max());\n      sb.append(ARRAY_HEADER_ROW_BUILDER.build(response, row, contextName));\n\n      row.addProperty(ROW, FIRST_CHUNK);\n      for( int i = 0; i < _f.numCols(); i++ )\n        row.addProperty(_f._names[i], _f.vecs()[i].chunk(0).getClass().getSimpleName());\n      sb.append(ARRAY_HEADER_ROW_BUILDER.build(response, row, contextName));\n\n      if( _offset == INFO_PAGE ) {\n        for( int ci = 0; ci < _f.vecs()[0].nChunks(); ci++ ) {\n          Chunk chunk = _f.vecs()[ci].elem2BV(ci);\n          String prefix = CHUNK + \" \" + ci + \" \";\n\n          row.addProperty(ROW, prefix + TYPE);\n          for( int i = 0; i < _f.numCols(); i++ )\n            row.addProperty(_f._names[i], chunk.getClass().getSimpleName());\n          sb.append(defaultBuilder(row).build(response, row, contextName));\n\n          row.addProperty(ROW, prefix + SIZE);\n          for( int i = 0; i < _f.numCols(); i++ )\n            row.addProperty(_f._names[i], chunk.byteSize());\n          sb.append(defaultBuilder(row).build(response, row, contextName));\n        }\n      } else {\n        for( JsonElement e : array ) {\n          Builder builder = response.getBuilderFor(contextName + \"_ROW\");\n          if( builder == null )\n            builder = defaultBuilder(e);\n          sb.append(builder.build(response, e, contextName));\n        }\n      }\n\n      sb.append(footer(array));\n      return sb.toString();\n    }","id":63717,"modified_method":"@Override\n    public String build(Response response, JsonArray array, String contextName) {\n      StringBuilder sb = new StringBuilder();\n      if( array.size() == 0 ) { // Fake row, needed by builder\n        array = new JsonArray();\n        JsonObject fake = new JsonObject();\n        fake.addProperty(ROW, 0);\n        for( int i = 0; i < _f.numCols(); ++i )\n          format(fake, _f, 0, i);\n        array.add(fake);\n      }\n      sb.append(header(array));\n\n      JsonObject row = new JsonObject();\n\n      row.addProperty(ROW, MIN);\n      for( int i = 0; i < _f.numCols(); i++ )\n        row.addProperty(_f._names[i], _f.vecs()[i].min());\n      sb.append(ARRAY_HEADER_ROW_BUILDER.build(response, row, contextName));\n\n      row.addProperty(ROW, MAX);\n      for( int i = 0; i < _f.numCols(); i++ )\n        row.addProperty(_f._names[i], _f.vecs()[i].max());\n      sb.append(ARRAY_HEADER_ROW_BUILDER.build(response, row, contextName));\n\n      row.addProperty(ROW, FIRST_CHUNK);\n      for( int i = 0; i < _f.numCols(); i++ )\n        row.addProperty(_f._names[i], _f.vecs()[i].chunk(0).getClass().getSimpleName());\n      sb.append(ARRAY_HEADER_ROW_BUILDER.build(response, row, contextName));\n\n      if( _offset == INFO_PAGE ) {\n\n        for( int ci = 0; ci < _f.vecs()[0].nChunks(); ci++ ) {\n//          Chunk chunk = _f.vecs()[ci].elem2BV(ci);\n          String prefix = CHUNK + \" \" + ci + \" \";\n          row.addProperty(ROW, prefix + TYPE);\n          for( int i = 0; i < _f.numCols(); i++ )\n            row.addProperty(_f._names[i], _f.vecs()[i].elem2BV(ci).getClass().getSimpleName());\n          sb.append(defaultBuilder(row).build(response, row, contextName));\n          row.addProperty(ROW, prefix + SIZE);\n          for( int i = 0; i < _f.numCols(); i++ )\n            row.addProperty(_f._names[i], _f.vecs()[i].elem2BV(ci).byteSize());\n          sb.append(defaultBuilder(row).build(response, row, contextName));\n        }\n      } else {\n        for( JsonElement e : array ) {\n          Builder builder = response.getBuilderFor(contextName + \"_ROW\");\n          if( builder == null )\n            builder = defaultBuilder(e);\n          sb.append(builder.build(response, e, contextName));\n        }\n      }\n\n      sb.append(footer(array));\n      return sb.toString();\n    }","commit_id":"305795524f212d878e24688e2d39a0a9b1d8ebb1","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override public AutoBuffer write(AutoBuffer bb) { throw H2O.fail(); }","id":63718,"modified_method":"@Override public AutoBuffer write(AutoBuffer bb) { return bb.putA1(_mem,_len); }","commit_id":"58b26a1cb13324b641d7d77e0046dba2e2197a2a","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override public final void compute2() {\n    assert _left == null && _rite == null && _res == null;\n    if( _hi-_lo >= 2 ) { // Multi-chunk case: just divide-and-conquer to 1 chunk\n      final int mid = (_lo+_hi)>>>1; // Mid-point\n      _left = clone(); \n      _rite = clone(); \n      _left._hi = mid;          // Reset mid-point\n      _rite._lo = mid;          // Also set self mid-point\n      addToPendingCount(1);     // One fork awaiting completion\n      _left.fork();             // Runs in another thread/FJ instance\n      _rite.compute2();         // Runs in THIS F/J thread\n      return;                   // Not complete until the fork completes\n    } \n    // Zero or 1 chunks, and further chunk might not be homed here\n    if( _hi > _lo ) {           // Single chunk?\n      long start = _vec0.chunk2StartElem(_lo);\n      Key dkey = _vec0.chunkKey(_lo);\n      if( dkey.home() ) {       // And chunk is homed here?\n        // Call the various map() calls\n        BigVector bv = _vec0.elem2BV(start,_lo);\n        if( _vecs.length == 1 ) map(start, bv._len, bv);\n        if( _vecs.length == 2 ) map(start, bv._len, _vecs[0].elem2BV(start,_lo), _vecs[1].elem2BV(start,_lo));\n        if( _vecs.length > 2 ) throw H2O.unimpl();\n        _res = self();          // Save results since called map() at least once!\n      }\n    }\n    tryComplete();              // And this task is complete\n  }","id":63719,"modified_method":"@Override public final void compute2() {\n    assert _left == null && _rite == null && _res == null;\n    if( _hi-_lo >= 2 ) { // Multi-chunk case: just divide-and-conquer to 1 chunk\n      final int mid = (_lo+_hi)>>>1; // Mid-point\n      _left = clone(); \n      _rite = clone(); \n      _left._hi = mid;          // Reset mid-point\n      _rite._lo = mid;          // Also set self mid-point\n      addToPendingCount(1);     // One fork awaiting completion\n      _left.fork();             // Runs in another thread/FJ instance\n      _rite.compute2();         // Runs in THIS F/J thread\n      return;                   // Not complete until the fork completes\n    } \n    // Zero or 1 chunks, and further chunk might not be homed here\n    if( _hi > _lo ) {           // Single chunk?\n      long start = _vec0.chunk2StartElem(_lo);\n      Key dkey = _vec0.chunkKey(_lo);\n      if( dkey.home() ) {       // And chunk is homed here?\n\n        // Make decompression chunk headers for these chunks\n        BigVector bvs[] = new BigVector[_vecs.length];\n        for( int i=0; i<_vecs.length; i++ )\n          if( _vecs[i] != null )\n            bvs[i] = _vecs[i].elem2BV(start,_lo);\n        final int len = _vec0.elem2BV(start,_lo)._len;\n\n        // Call the various map() calls\n        if( _vecs.length == 1 ) map(start, len, bvs[0]);\n        if( _vecs.length == 2 ) map(start, len, bvs[0], bvs[1]);\n        if( _vecs.length > 2 ) throw H2O.unimpl();\n        _res = self();          // Save results since called map() at least once!\n\n        // Further D/K/V put any new vec results.\n        for( BigVector bv : bvs )\n          if( bv != null && bv instanceof NewVector )\n            ((NewVector)bv).close(_fs);\n      }\n    }\n    tryComplete();              // And this task is complete\n  }","commit_id":"58b26a1cb13324b641d7d77e0046dba2e2197a2a","url":"https://github.com/h2oai/h2o-2"},{"original_method":"private final void setupLocal() {\n    _topLocal = true;\n    // Check for global vs local work\n    if( _nlo >= 0 && _nlo < _nhi-1 ) { // Have global work?\n      // Note: some top-level calls have no other global work, so\n      // \"topLocal==true\" does not imply \"nlo < nhi-1\".\n      int selfidx = H2O.SELF.index();\n      if( _nlo   < selfidx ) _nleft = remote_compute(_nlo, selfidx );\n      if( selfidx+1 < _nhi ) _nrite = remote_compute(selfidx+1,_nhi);\n    }\n    _lo = 0;  _hi = _vec0.nChunks(); // Do All Chunks\n    init();                     // Setup any user's shared local structures\n  }","id":63720,"modified_method":"private final void setupLocal() {\n    _topLocal = true;\n    // Check for global vs local work\n    if( _nlo >= 0 && _nlo < _nhi-1 ) { // Have global work?\n      // Note: some top-level calls have no other global work, so\n      // \"topLocal==true\" does not imply \"nlo < nhi-1\".\n      int selfidx = H2O.SELF.index();\n      if( _nlo   < selfidx ) _nleft = remote_compute(_nlo, selfidx );\n      if( selfidx+1 < _nhi ) _nrite = remote_compute(selfidx+1,_nhi);\n    }\n    _lo = 0;  _hi = _vec0.nChunks(); // Do All Chunks\n    // If we have any output vectors, make a blockable Futures for them to\n    // block on.\n    for( Vec v : _vecs )\n      if( v != null && v instanceof NewVec ) {\n        _fs = new Futures();\n        break;\n      }\n    init();                     // Setup any user's shared local structures\n  }","commit_id":"58b26a1cb13324b641d7d77e0046dba2e2197a2a","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override public BigVector elem2BV( long i, int cidx ) { return new NewVector(cidx); }","id":63721,"modified_method":"@Override public BigVector elem2BV( long i, int cidx ) { return new NewVector(cidx,this); }","commit_id":"58b26a1cb13324b641d7d77e0046dba2e2197a2a","url":"https://github.com/h2oai/h2o-2"},{"original_method":"NewVector( int cidx ) { _cidx = cidx; }","id":63722,"modified_method":"NewVector( int cidx, Vec vec ) { _vec = vec; _cidx = cidx; }","commit_id":"58b26a1cb13324b641d7d77e0046dba2e2197a2a","url":"https://github.com/h2oai/h2o-2"},{"original_method":"private QuorumCall<AsyncLogger, GetJournalStateResponseProto> getJournalState() {\n    Map<AsyncLogger, ListenableFuture<GetJournalStateResponseProto>> calls =\n        Maps.newHashMap();\n    for (AsyncLogger logger : loggers) {\n      calls.put(logger, logger.getJournalState());\n    }\n    return QuorumCall.create(calls);    \n  }","id":63723,"modified_method":"public QuorumCall<AsyncLogger, GetJournalStateResponseProto> getJournalState() {\n    Map<AsyncLogger, ListenableFuture<GetJournalStateResponseProto>> calls =\n        Maps.newHashMap();\n    for (AsyncLogger logger : loggers) {\n      calls.put(logger, logger.getJournalState());\n    }\n    return QuorumCall.create(calls);    \n  }","commit_id":"8a8c9c18d37f0c8b219264796c0df4bcae6f4e38","url":"https://github.com/apache/hadoop"},{"original_method":"private void setEpoch(long e) {\n    for (AsyncLogger l : loggers) {\n      l.setEpoch(e);\n    }\n  }","id":63724,"modified_method":"void setEpoch(long e) {\n    Preconditions.checkState(!isEpochEstablished(),\n        \"Epoch already established: epoch=%s\", myEpoch);\n    myEpoch = e;\n    for (AsyncLogger l : loggers) {\n      l.setEpoch(e);\n    }\n  }","commit_id":"8a8c9c18d37f0c8b219264796c0df4bcae6f4e38","url":"https://github.com/apache/hadoop"},{"original_method":"private QuorumCall<AsyncLogger,NewEpochResponseProto> newEpoch(\n      NamespaceInfo nsInfo,\n      long epoch) {\n    Map<AsyncLogger, ListenableFuture<NewEpochResponseProto>> calls =\n        Maps.newHashMap();\n    for (AsyncLogger logger : loggers) {\n      calls.put(logger, logger.newEpoch(epoch));\n    }\n    return QuorumCall.create(calls);    \n  }","id":63725,"modified_method":"public QuorumCall<AsyncLogger,NewEpochResponseProto> newEpoch(\n      NamespaceInfo nsInfo,\n      long epoch) {\n    Map<AsyncLogger, ListenableFuture<NewEpochResponseProto>> calls =\n        Maps.newHashMap();\n    for (AsyncLogger logger : loggers) {\n      calls.put(logger, logger.newEpoch(epoch));\n    }\n    return QuorumCall.create(calls);    \n  }","commit_id":"8a8c9c18d37f0c8b219264796c0df4bcae6f4e38","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Wait for a quorum of loggers to respond to the given call. If a quorum\n   * can't be achieved, throws a QuorumException.\n   * @param q the quorum call\n   * @param timeoutMs the number of millis to wait\n   * @return a map of successful results\n   * @throws QuorumException if a quorum doesn't respond with success\n   * @throws IOException if the thread is interrupted or times out\n   */\n  <V> Map<AsyncLogger, V> waitForWriteQuorum(QuorumCall<AsyncLogger, V> q,\n      int timeoutMs) throws IOException {\n    int majority = getMajoritySize();\n    try {\n      q.waitFor(\n          loggers.size(), // either all respond \n          majority, // or we get a majority successes\n          majority, // or we get a majority failures,\n          timeoutMs);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new IOException(\"Interrupted waiting \" + timeoutMs + \"ms for a \" +\n          \"quorum of nodes to respond.\");\n    } catch (TimeoutException e) {\n      throw new IOException(\"Timed out waiting \" + timeoutMs + \"ms for a \" +\n          \"quorum of nodes to respond.\");\n    }\n    \n    if (q.countSuccesses() < majority) {\n      q.rethrowException(\"Got too many exceptions to achieve quorum size \" +\n          getMajorityString());\n    }\n    \n    return q.getResults();\n  }","id":63726,"modified_method":"/**\n   * Wait for a quorum of loggers to respond to the given call. If a quorum\n   * can't be achieved, throws a QuorumException.\n   * @param q the quorum call\n   * @param timeoutMs the number of millis to wait\n   * @param operationName textual description of the operation, for logging\n   * @return a map of successful results\n   * @throws QuorumException if a quorum doesn't respond with success\n   * @throws IOException if the thread is interrupted or times out\n   */\n  <V> Map<AsyncLogger, V> waitForWriteQuorum(QuorumCall<AsyncLogger, V> q,\n      int timeoutMs, String operationName) throws IOException {\n    int majority = getMajoritySize();\n    try {\n      q.waitFor(\n          loggers.size(), // either all respond \n          majority, // or we get a majority successes\n          majority, // or we get a majority failures,\n          timeoutMs, operationName);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new IOException(\"Interrupted waiting \" + timeoutMs + \"ms for a \" +\n          \"quorum of nodes to respond.\");\n    } catch (TimeoutException e) {\n      throw new IOException(\"Timed out waiting \" + timeoutMs + \"ms for a \" +\n          \"quorum of nodes to respond.\");\n    }\n    \n    if (q.countSuccesses() < majority) {\n      q.rethrowException(\"Got too many exceptions to achieve quorum size \" +\n          getMajorityString());\n    }\n    \n    return q.getResults();\n  }","commit_id":"8a8c9c18d37f0c8b219264796c0df4bcae6f4e38","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Wait for the quorum to achieve a certain number of responses.\n   * \n   * Note that, even after this returns, more responses may arrive,\n   * causing the return value of other methods in this class to change.\n   *\n   * @param minResponses return as soon as this many responses have been\n   * received, regardless of whether they are successes or exceptions\n   * @param minSuccesses return as soon as this many successful (non-exception)\n   * responses have been received\n   * @param maxExceptions return as soon as this many exception responses\n   * have been received. Pass 0 to return immediately if any exception is\n   * received.\n   * @param millis the number of milliseconds to wait for\n   * @throws InterruptedException if the thread is interrupted while waiting\n   * @throws TimeoutException if the specified timeout elapses before\n   * achieving the desired conditions\n   */\n  public synchronized void waitFor(\n      int minResponses, int minSuccesses, int maxExceptions,\n      int millis)\n      throws InterruptedException, TimeoutException {\n    long et = Time.monotonicNow() + millis;\n    while (true) {\n      if (minResponses > 0 && countResponses() >= minResponses) return;\n      if (minSuccesses > 0 && countSuccesses() >= minSuccesses) return;\n      if (maxExceptions >= 0 && countExceptions() > maxExceptions) return;\n      long rem = et - Time.monotonicNow();\n      if (rem <= 0) {\n        throw new TimeoutException();\n      }\n      wait(rem);\n    }\n  }","id":63727,"modified_method":"/**\n   * Wait for the quorum to achieve a certain number of responses.\n   * \n   * Note that, even after this returns, more responses may arrive,\n   * causing the return value of other methods in this class to change.\n   *\n   * @param minResponses return as soon as this many responses have been\n   * received, regardless of whether they are successes or exceptions\n   * @param minSuccesses return as soon as this many successful (non-exception)\n   * responses have been received\n   * @param maxExceptions return as soon as this many exception responses\n   * have been received. Pass 0 to return immediately if any exception is\n   * received.\n   * @param millis the number of milliseconds to wait for\n   * @throws InterruptedException if the thread is interrupted while waiting\n   * @throws TimeoutException if the specified timeout elapses before\n   * achieving the desired conditions\n   */\n  public synchronized void waitFor(\n      int minResponses, int minSuccesses, int maxExceptions,\n      int millis, String operationName)\n      throws InterruptedException, TimeoutException {\n    long st = Time.monotonicNow();\n    long nextLogTime = st + (long)(millis * WAIT_PROGRESS_INFO_THRESHOLD);\n    long et = st + millis;\n    while (true) {\n      if (minResponses > 0 && countResponses() >= minResponses) return;\n      if (minSuccesses > 0 && countSuccesses() >= minSuccesses) return;\n      if (maxExceptions >= 0 && countExceptions() > maxExceptions) return;\n      long now = Time.monotonicNow();\n      \n      if (now > nextLogTime) {\n        long waited = now - st;\n        String msg = String.format(\n            \"Waited %s ms (timeout=%s ms) for a response for %s\",\n            waited, millis, operationName);\n        if (waited > millis * WAIT_PROGRESS_WARN_THRESHOLD) {\n          QuorumJournalManager.LOG.warn(msg);\n        } else {\n          QuorumJournalManager.LOG.info(msg);\n        }\n        nextLogTime = now + WAIT_PROGRESS_INTERVAL_MILLIS;\n      }\n      long rem = et - now;\n      if (rem <= 0) {\n        throw new TimeoutException();\n      }\n      rem = Math.min(rem, nextLogTime - now);\n      rem = Math.max(rem, 1);\n      wait(rem);\n    }\n  }","commit_id":"8a8c9c18d37f0c8b219264796c0df4bcae6f4e38","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public void selectInputStreams(Collection<EditLogInputStream> streams,\n      long fromTxnId, boolean inProgressOk) throws IOException {\n\n    QuorumCall<AsyncLogger, RemoteEditLogManifest> q =\n        loggers.getEditLogManifest(fromTxnId);\n    Map<AsyncLogger, RemoteEditLogManifest> resps =\n        loggers.waitForWriteQuorum(q, selectInputStreamsTimeoutMs);\n    \n    LOG.debug(\"selectInputStream manifests:\\n\" +\n        Joiner.on(\"\\n\").withKeyValueSeparator(\": \").join(resps));\n    \n    final PriorityQueue<EditLogInputStream> allStreams = \n        new PriorityQueue<EditLogInputStream>(64,\n            JournalSet.EDIT_LOG_INPUT_STREAM_COMPARATOR);\n    for (Map.Entry<AsyncLogger, RemoteEditLogManifest> e : resps.entrySet()) {\n      AsyncLogger logger = e.getKey();\n      RemoteEditLogManifest manifest = e.getValue();\n      \n      for (RemoteEditLog remoteLog : manifest.getLogs()) {\n        URL url = logger.buildURLToFetchLogs(remoteLog.getStartTxId());\n\n        EditLogInputStream elis = EditLogFileInputStream.fromUrl(\n            url, remoteLog.getStartTxId(), remoteLog.getEndTxId(),\n            remoteLog.isInProgress());\n        allStreams.add(elis);\n      }\n    }\n    JournalSet.chainAndMakeRedundantStreams(\n        streams, allStreams, fromTxnId, inProgressOk);\n  }","id":63728,"modified_method":"@Override\n  public void selectInputStreams(Collection<EditLogInputStream> streams,\n      long fromTxnId, boolean inProgressOk) throws IOException {\n\n    QuorumCall<AsyncLogger, RemoteEditLogManifest> q =\n        loggers.getEditLogManifest(fromTxnId);\n    Map<AsyncLogger, RemoteEditLogManifest> resps =\n        loggers.waitForWriteQuorum(q, selectInputStreamsTimeoutMs,\n            \"selectInputStreams\");\n    \n    LOG.debug(\"selectInputStream manifests:\\n\" +\n        Joiner.on(\"\\n\").withKeyValueSeparator(\": \").join(resps));\n    \n    final PriorityQueue<EditLogInputStream> allStreams = \n        new PriorityQueue<EditLogInputStream>(64,\n            JournalSet.EDIT_LOG_INPUT_STREAM_COMPARATOR);\n    for (Map.Entry<AsyncLogger, RemoteEditLogManifest> e : resps.entrySet()) {\n      AsyncLogger logger = e.getKey();\n      RemoteEditLogManifest manifest = e.getValue();\n      \n      for (RemoteEditLog remoteLog : manifest.getLogs()) {\n        URL url = logger.buildURLToFetchLogs(remoteLog.getStartTxId());\n\n        EditLogInputStream elis = EditLogFileInputStream.fromUrl(\n            url, remoteLog.getStartTxId(), remoteLog.getEndTxId(),\n            remoteLog.isInProgress());\n        allStreams.add(elis);\n      }\n    }\n    JournalSet.chainAndMakeRedundantStreams(\n        streams, allStreams, fromTxnId, inProgressOk);\n  }","commit_id":"8a8c9c18d37f0c8b219264796c0df4bcae6f4e38","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public void format(NamespaceInfo nsInfo) throws IOException {\n    QuorumCall<AsyncLogger,Void> call = loggers.format(nsInfo);\n    try {\n      call.waitFor(loggers.size(), loggers.size(), 0, FORMAT_TIMEOUT_MS);\n    } catch (InterruptedException e) {\n      throw new IOException(\"Interrupted waiting for format() response\");\n    } catch (TimeoutException e) {\n      throw new IOException(\"Timed out waiting for format() response\");\n    }\n    \n    if (call.countExceptions() > 0) {\n      call.rethrowException(\"Could not format one or more JournalNodes\");\n    }\n  }","id":63729,"modified_method":"@Override\n  public void format(NamespaceInfo nsInfo) throws IOException {\n    QuorumCall<AsyncLogger,Void> call = loggers.format(nsInfo);\n    try {\n      call.waitFor(loggers.size(), loggers.size(), 0, FORMAT_TIMEOUT_MS,\n          \"format\");\n    } catch (InterruptedException e) {\n      throw new IOException(\"Interrupted waiting for format() response\");\n    } catch (TimeoutException e) {\n      throw new IOException(\"Timed out waiting for format() response\");\n    }\n    \n    if (call.countExceptions() > 0) {\n      call.rethrowException(\"Could not format one or more JournalNodes\");\n    }\n  }","commit_id":"8a8c9c18d37f0c8b219264796c0df4bcae6f4e38","url":"https://github.com/apache/hadoop"},{"original_method":"QuorumJournalManager(Configuration conf,\n      URI uri, NamespaceInfo nsInfo,\n      AsyncLogger.Factory loggerFactory) throws IOException {\n    Preconditions.checkArgument(conf != null, \"must be configured\");\n\n    this.conf = conf;\n    this.uri = uri;\n    this.nsInfo = nsInfo;\n    this.loggers = new AsyncLoggerSet(createLoggers(loggerFactory));\n\n    // Configure timeouts.\n    this.startSegmentTimeoutMs = conf.getInt(\n        DFSConfigKeys.DFS_QJOURNAL_START_SEGMENT_TIMEOUT_KEY,\n        DFSConfigKeys.DFS_QJOURNAL_START_SEGMENT_TIMEOUT_DEFAULT);\n    this.prepareRecoveryTimeoutMs = conf.getInt(\n        DFSConfigKeys.DFS_QJOURNAL_PREPARE_RECOVERY_TIMEOUT_KEY,\n        DFSConfigKeys.DFS_QJOURNAL_PREPARE_RECOVERY_TIMEOUT_DEFAULT);\n    this.acceptRecoveryTimeoutMs = conf.getInt(\n        DFSConfigKeys.DFS_QJOURNAL_ACCEPT_RECOVERY_TIMEOUT_KEY,\n        DFSConfigKeys.DFS_QJOURNAL_ACCEPT_RECOVERY_TIMEOUT_DEFAULT);\n    this.finalizeSegmentTimeoutMs = conf.getInt(\n        DFSConfigKeys.DFS_QJOURNAL_FINALIZE_SEGMENT_TIMEOUT_KEY,\n        DFSConfigKeys.DFS_QJOURNAL_FINALIZE_SEGMENT_TIMEOUT_DEFAULT);\n    this.selectInputStreamsTimeoutMs = conf.getInt(\n        DFSConfigKeys.DFS_QJOURNAL_SELECT_INPUT_STREAMS_TIMEOUT_KEY,\n        DFSConfigKeys.DFS_QJOURNAL_SELECT_INPUT_STREAMS_TIMEOUT_DEFAULT);\n        \n  }","id":63730,"modified_method":"QuorumJournalManager(Configuration conf,\n      URI uri, NamespaceInfo nsInfo,\n      AsyncLogger.Factory loggerFactory) throws IOException {\n    Preconditions.checkArgument(conf != null, \"must be configured\");\n\n    this.conf = conf;\n    this.uri = uri;\n    this.nsInfo = nsInfo;\n    this.loggers = new AsyncLoggerSet(createLoggers(loggerFactory));\n\n    // Configure timeouts.\n    this.startSegmentTimeoutMs = conf.getInt(\n        DFSConfigKeys.DFS_QJOURNAL_START_SEGMENT_TIMEOUT_KEY,\n        DFSConfigKeys.DFS_QJOURNAL_START_SEGMENT_TIMEOUT_DEFAULT);\n    this.prepareRecoveryTimeoutMs = conf.getInt(\n        DFSConfigKeys.DFS_QJOURNAL_PREPARE_RECOVERY_TIMEOUT_KEY,\n        DFSConfigKeys.DFS_QJOURNAL_PREPARE_RECOVERY_TIMEOUT_DEFAULT);\n    this.acceptRecoveryTimeoutMs = conf.getInt(\n        DFSConfigKeys.DFS_QJOURNAL_ACCEPT_RECOVERY_TIMEOUT_KEY,\n        DFSConfigKeys.DFS_QJOURNAL_ACCEPT_RECOVERY_TIMEOUT_DEFAULT);\n    this.finalizeSegmentTimeoutMs = conf.getInt(\n        DFSConfigKeys.DFS_QJOURNAL_FINALIZE_SEGMENT_TIMEOUT_KEY,\n        DFSConfigKeys.DFS_QJOURNAL_FINALIZE_SEGMENT_TIMEOUT_DEFAULT);\n    this.selectInputStreamsTimeoutMs = conf.getInt(\n        DFSConfigKeys.DFS_QJOURNAL_SELECT_INPUT_STREAMS_TIMEOUT_KEY,\n        DFSConfigKeys.DFS_QJOURNAL_SELECT_INPUT_STREAMS_TIMEOUT_DEFAULT);\n    this.getJournalStateTimeoutMs = conf.getInt(\n        DFSConfigKeys.DFS_QJOURNAL_GET_JOURNAL_STATE_TIMEOUT_KEY,\n        DFSConfigKeys.DFS_QJOURNAL_GET_JOURNAL_STATE_TIMEOUT_DEFAULT);\n    this.newEpochTimeoutMs = conf.getInt(\n        DFSConfigKeys.DFS_QJOURNAL_NEW_EPOCH_TIMEOUT_KEY,\n        DFSConfigKeys.DFS_QJOURNAL_NEW_EPOCH_TIMEOUT_DEFAULT);\n    \n        \n  }","commit_id":"8a8c9c18d37f0c8b219264796c0df4bcae6f4e38","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public boolean hasSomeData() throws IOException {\n    QuorumCall<AsyncLogger, Boolean> call =\n        loggers.isFormatted();\n\n    try {\n      call.waitFor(loggers.size(), 0, 0, HASDATA_TIMEOUT_MS);\n    } catch (InterruptedException e) {\n      throw new IOException(\"Interrupted while determining if JNs have data\");\n    } catch (TimeoutException e) {\n      throw new IOException(\"Timed out waiting for response from loggers\");\n    }\n    \n    if (call.countExceptions() > 0) {\n      call.rethrowException(\n          \"Unable to check if JNs are ready for formatting\");\n    }\n    \n    // If any of the loggers returned with a non-empty manifest, then\n    // we should prompt for format.\n    for (Boolean hasData : call.getResults().values()) {\n      if (hasData) {\n        return true;\n      }\n    }\n\n    // Otherwise, none were formatted, we can safely format.\n    return false;\n  }","id":63731,"modified_method":"@Override\n  public boolean hasSomeData() throws IOException {\n    QuorumCall<AsyncLogger, Boolean> call =\n        loggers.isFormatted();\n\n    try {\n      call.waitFor(loggers.size(), 0, 0, HASDATA_TIMEOUT_MS, \"hasSomeData\");\n    } catch (InterruptedException e) {\n      throw new IOException(\"Interrupted while determining if JNs have data\");\n    } catch (TimeoutException e) {\n      throw new IOException(\"Timed out waiting for response from loggers\");\n    }\n    \n    if (call.countExceptions() > 0) {\n      call.rethrowException(\n          \"Unable to check if JNs are ready for formatting\");\n    }\n    \n    // If any of the loggers returned with a non-empty manifest, then\n    // we should prompt for format.\n    for (Boolean hasData : call.getResults().values()) {\n      if (hasData) {\n        return true;\n      }\n    }\n\n    // Otherwise, none were formatted, we can safely format.\n    return false;\n  }","commit_id":"8a8c9c18d37f0c8b219264796c0df4bcae6f4e38","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public void finalizeLogSegment(long firstTxId, long lastTxId)\n      throws IOException {\n    QuorumCall<AsyncLogger,Void> q = loggers.finalizeLogSegment(\n        firstTxId, lastTxId);\n    loggers.waitForWriteQuorum(q, finalizeSegmentTimeoutMs);\n  }","id":63732,"modified_method":"@Override\n  public void finalizeLogSegment(long firstTxId, long lastTxId)\n      throws IOException {\n    QuorumCall<AsyncLogger,Void> q = loggers.finalizeLogSegment(\n        firstTxId, lastTxId);\n    loggers.waitForWriteQuorum(q, finalizeSegmentTimeoutMs,\n        String.format(\"finalizeLogSegment(%s-%s)\", firstTxId, lastTxId));\n  }","commit_id":"8a8c9c18d37f0c8b219264796c0df4bcae6f4e38","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Run recovery/synchronization for a specific segment.\n   * Postconditions:\n   * <ul>\n   * <li>This segment will be finalized on a majority\n   * of nodes.<\/li>\n   * <li>All nodes which contain the finalized segment will\n   * agree on the length.<\/li>\n   * <\/ul>\n   * \n   * @param segmentTxId the starting txid of the segment\n   * @throws IOException\n   */\n  private void recoverUnclosedSegment(long segmentTxId) throws IOException {\n    Preconditions.checkArgument(segmentTxId > 0);\n    LOG.info(\"Beginning recovery of unclosed segment starting at txid \" +\n        segmentTxId);\n    \n    // Step 1. Prepare recovery\n    QuorumCall<AsyncLogger,PrepareRecoveryResponseProto> prepare =\n        loggers.prepareRecovery(segmentTxId);\n    Map<AsyncLogger, PrepareRecoveryResponseProto> prepareResponses=\n        loggers.waitForWriteQuorum(prepare, prepareRecoveryTimeoutMs);\n    LOG.info(\"Recovery prepare phase complete. Responses:\\n\" +\n        QuorumCall.mapToString(prepareResponses));\n\n    // Determine the logger who either:\n    // a) Has already accepted a previous proposal that's higher than any\n    //    other\n    //\n    //  OR, if no such logger exists:\n    //\n    // b) Has the longest log starting at this transaction ID\n    \n    // TODO: we should collect any \"ties\" and pass the URL for all of them\n    // when syncing, so we can tolerate failure during recovery better.\n    Entry<AsyncLogger, PrepareRecoveryResponseProto> bestEntry = Collections.max(\n        prepareResponses.entrySet(), SegmentRecoveryComparator.INSTANCE); \n    AsyncLogger bestLogger = bestEntry.getKey();\n    PrepareRecoveryResponseProto bestResponse = bestEntry.getValue();\n    \n    // Log the above decision, check invariants.\n    if (bestResponse.hasAcceptedInEpoch()) {\n      LOG.info(\"Using already-accepted recovery for segment \" +\n          \"starting at txid \" + segmentTxId + \": \" +\n          bestEntry);\n    } else if (bestResponse.hasSegmentState()) {\n      LOG.info(\"Using longest log: \" + bestEntry);\n    } else {\n      // None of the responses to prepareRecovery() had a segment at the given\n      // txid. This can happen for example in the following situation:\n      // - 3 JNs: JN1, JN2, JN3\n      // - writer starts segment 101 on JN1, then crashes before\n      //   writing to JN2 and JN3\n      // - during newEpoch(), we saw the segment on JN1 and decide to\n      //   recover segment 101\n      // - before prepare(), JN1 crashes, and we only talk to JN2 and JN3,\n      //   neither of which has any entry for this log.\n      // In this case, it is allowed to do nothing for recovery, since the\n      // segment wasn't started on a quorum of nodes.\n\n      // Sanity check: we should only get here if none of the responses had\n      // a log. This should be a postcondition of the recovery comparator,\n      // but a bug in the comparator might cause us to get here.\n      for (PrepareRecoveryResponseProto resp : prepareResponses.values()) {\n        assert !resp.hasSegmentState() :\n          \"One of the loggers had a response, but no best logger \" +\n          \"was found.\";\n      }\n\n      LOG.info(\"None of the responders had a log to recover: \" +\n          QuorumCall.mapToString(prepareResponses));\n      return;\n    }\n    \n    \n    // TODO: check that md5s match up between any \"tied\" logs\n    \n    SegmentStateProto logToSync = bestResponse.getSegmentState();\n    assert segmentTxId == logToSync.getStartTxId();\n    \n    // Sanity check: none of the loggers should be aware of a higher\n    // txid than the txid we intend to truncate to\n    for (Map.Entry<AsyncLogger, PrepareRecoveryResponseProto> e :\n         prepareResponses.entrySet()) {\n      AsyncLogger logger = e.getKey();\n      PrepareRecoveryResponseProto resp = e.getValue();\n\n      if (resp.hasLastCommittedTxId() &&\n          resp.getLastCommittedTxId() > logToSync.getEndTxId()) {\n        throw new AssertionError(\"Decided to synchronize log to \" + logToSync +\n            \" but logger \" + logger + \" had seen txid \" +\n            resp.getLastCommittedTxId() + \" committed\");\n      }\n    }\n    \n    URL syncFromUrl = bestLogger.buildURLToFetchLogs(segmentTxId);\n    \n    QuorumCall<AsyncLogger,Void> accept = loggers.acceptRecovery(logToSync, syncFromUrl);\n    loggers.waitForWriteQuorum(accept, acceptRecoveryTimeoutMs);\n    \n    // TODO:\n    // we should only try to finalize loggers who successfully synced above\n    // eg if a logger was down, we don't want to send the finalize request.\n    // write a test for this!\n    \n    QuorumCall<AsyncLogger, Void> finalize =\n        loggers.finalizeLogSegment(logToSync.getStartTxId(), logToSync.getEndTxId()); \n    loggers.waitForWriteQuorum(finalize, finalizeSegmentTimeoutMs);\n  }","id":63733,"modified_method":"/**\n   * Run recovery/synchronization for a specific segment.\n   * Postconditions:\n   * <ul>\n   * <li>This segment will be finalized on a majority\n   * of nodes.<\/li>\n   * <li>All nodes which contain the finalized segment will\n   * agree on the length.<\/li>\n   * <\/ul>\n   * \n   * @param segmentTxId the starting txid of the segment\n   * @throws IOException\n   */\n  private void recoverUnclosedSegment(long segmentTxId) throws IOException {\n    Preconditions.checkArgument(segmentTxId > 0);\n    LOG.info(\"Beginning recovery of unclosed segment starting at txid \" +\n        segmentTxId);\n    \n    // Step 1. Prepare recovery\n    QuorumCall<AsyncLogger,PrepareRecoveryResponseProto> prepare =\n        loggers.prepareRecovery(segmentTxId);\n    Map<AsyncLogger, PrepareRecoveryResponseProto> prepareResponses=\n        loggers.waitForWriteQuorum(prepare, prepareRecoveryTimeoutMs,\n            \"prepareRecovery(\" + segmentTxId + \")\");\n    LOG.info(\"Recovery prepare phase complete. Responses:\\n\" +\n        QuorumCall.mapToString(prepareResponses));\n\n    // Determine the logger who either:\n    // a) Has already accepted a previous proposal that's higher than any\n    //    other\n    //\n    //  OR, if no such logger exists:\n    //\n    // b) Has the longest log starting at this transaction ID\n    \n    // TODO: we should collect any \"ties\" and pass the URL for all of them\n    // when syncing, so we can tolerate failure during recovery better.\n    Entry<AsyncLogger, PrepareRecoveryResponseProto> bestEntry = Collections.max(\n        prepareResponses.entrySet(), SegmentRecoveryComparator.INSTANCE); \n    AsyncLogger bestLogger = bestEntry.getKey();\n    PrepareRecoveryResponseProto bestResponse = bestEntry.getValue();\n    \n    // Log the above decision, check invariants.\n    if (bestResponse.hasAcceptedInEpoch()) {\n      LOG.info(\"Using already-accepted recovery for segment \" +\n          \"starting at txid \" + segmentTxId + \": \" +\n          bestEntry);\n    } else if (bestResponse.hasSegmentState()) {\n      LOG.info(\"Using longest log: \" + bestEntry);\n    } else {\n      // None of the responses to prepareRecovery() had a segment at the given\n      // txid. This can happen for example in the following situation:\n      // - 3 JNs: JN1, JN2, JN3\n      // - writer starts segment 101 on JN1, then crashes before\n      //   writing to JN2 and JN3\n      // - during newEpoch(), we saw the segment on JN1 and decide to\n      //   recover segment 101\n      // - before prepare(), JN1 crashes, and we only talk to JN2 and JN3,\n      //   neither of which has any entry for this log.\n      // In this case, it is allowed to do nothing for recovery, since the\n      // segment wasn't started on a quorum of nodes.\n\n      // Sanity check: we should only get here if none of the responses had\n      // a log. This should be a postcondition of the recovery comparator,\n      // but a bug in the comparator might cause us to get here.\n      for (PrepareRecoveryResponseProto resp : prepareResponses.values()) {\n        assert !resp.hasSegmentState() :\n          \"One of the loggers had a response, but no best logger \" +\n          \"was found.\";\n      }\n\n      LOG.info(\"None of the responders had a log to recover: \" +\n          QuorumCall.mapToString(prepareResponses));\n      return;\n    }\n    \n    \n    // TODO: check that md5s match up between any \"tied\" logs\n    \n    SegmentStateProto logToSync = bestResponse.getSegmentState();\n    assert segmentTxId == logToSync.getStartTxId();\n    \n    // Sanity check: none of the loggers should be aware of a higher\n    // txid than the txid we intend to truncate to\n    for (Map.Entry<AsyncLogger, PrepareRecoveryResponseProto> e :\n         prepareResponses.entrySet()) {\n      AsyncLogger logger = e.getKey();\n      PrepareRecoveryResponseProto resp = e.getValue();\n\n      if (resp.hasLastCommittedTxId() &&\n          resp.getLastCommittedTxId() > logToSync.getEndTxId()) {\n        throw new AssertionError(\"Decided to synchronize log to \" + logToSync +\n            \" but logger \" + logger + \" had seen txid \" +\n            resp.getLastCommittedTxId() + \" committed\");\n      }\n    }\n    \n    URL syncFromUrl = bestLogger.buildURLToFetchLogs(segmentTxId);\n    \n    QuorumCall<AsyncLogger,Void> accept = loggers.acceptRecovery(logToSync, syncFromUrl);\n    loggers.waitForWriteQuorum(accept, acceptRecoveryTimeoutMs,\n        \"acceptRecovery(\" + TextFormat.shortDebugString(logToSync) + \")\");\n    \n    // TODO:\n    // we should only try to finalize loggers who successfully synced above\n    // eg if a logger was down, we don't want to send the finalize request.\n    // write a test for this!\n    \n    QuorumCall<AsyncLogger, Void> finalize =\n        loggers.finalizeLogSegment(logToSync.getStartTxId(), logToSync.getEndTxId()); \n    loggers.waitForWriteQuorum(finalize, finalizeSegmentTimeoutMs,\n        String.format(\"finalizeLogSegment(%s-%s)\",\n            logToSync.getStartTxId(),\n            logToSync.getEndTxId()));\n  }","commit_id":"8a8c9c18d37f0c8b219264796c0df4bcae6f4e38","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public EditLogOutputStream startLogSegment(long txId) throws IOException {\n    Preconditions.checkState(isActiveWriter,\n        \"must recover segments before starting a new one\");\n    QuorumCall<AsyncLogger,Void> q = loggers.startLogSegment(txId);\n    loggers.waitForWriteQuorum(q, startSegmentTimeoutMs);\n    return new QuorumOutputStream(loggers, txId);\n  }","id":63734,"modified_method":"@Override\n  public EditLogOutputStream startLogSegment(long txId) throws IOException {\n    Preconditions.checkState(isActiveWriter,\n        \"must recover segments before starting a new one\");\n    QuorumCall<AsyncLogger,Void> q = loggers.startLogSegment(txId);\n    loggers.waitForWriteQuorum(q, startSegmentTimeoutMs,\n        \"startLogSegment(\" + txId + \")\");\n    return new QuorumOutputStream(loggers, txId);\n  }","commit_id":"8a8c9c18d37f0c8b219264796c0df4bcae6f4e38","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public void recoverUnfinalizedSegments() throws IOException {\n    Preconditions.checkState(!isActiveWriter, \"already active writer\");\n    \n    Map<AsyncLogger, NewEpochResponseProto> resps =\n        loggers.createNewUniqueEpoch(nsInfo);\n    LOG.info(\"newEpoch(\" + loggers.getEpoch() + \") responses:\\n\" +\n        QuorumCall.mapToString(resps));\n    \n    long mostRecentSegmentTxId = Long.MIN_VALUE;\n    for (NewEpochResponseProto r : resps.values()) {\n      if (r.hasLastSegmentTxId()) {\n        mostRecentSegmentTxId = Math.max(mostRecentSegmentTxId,\n            r.getLastSegmentTxId());\n      }\n    }\n    \n    // On a completely fresh system, none of the journals have any\n    // segments, so there's nothing to recover.\n    if (mostRecentSegmentTxId != Long.MIN_VALUE) {\n      recoverUnclosedSegment(mostRecentSegmentTxId);\n    }\n    isActiveWriter = true;\n  }","id":63735,"modified_method":"@Override\n  public void recoverUnfinalizedSegments() throws IOException {\n    Preconditions.checkState(!isActiveWriter, \"already active writer\");\n    \n    Map<AsyncLogger, NewEpochResponseProto> resps = createNewUniqueEpoch();\n    LOG.info(\"newEpoch(\" + loggers.getEpoch() + \") responses:\\n\" +\n        QuorumCall.mapToString(resps));\n    \n    long mostRecentSegmentTxId = Long.MIN_VALUE;\n    for (NewEpochResponseProto r : resps.values()) {\n      if (r.hasLastSegmentTxId()) {\n        mostRecentSegmentTxId = Math.max(mostRecentSegmentTxId,\n            r.getLastSegmentTxId());\n      }\n    }\n    \n    // On a completely fresh system, none of the journals have any\n    // segments, so there's nothing to recover.\n    if (mostRecentSegmentTxId != Long.MIN_VALUE) {\n      recoverUnclosedSegment(mostRecentSegmentTxId);\n    }\n    isActiveWriter = true;\n  }","commit_id":"8a8c9c18d37f0c8b219264796c0df4bcae6f4e38","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  protected void flushAndSync(boolean durable) throws IOException {\n    int numReadyBytes = buf.countReadyBytes();\n    if (numReadyBytes > 0) {\n      int numReadyTxns = buf.countReadyTxns();\n      long firstTxToFlush = buf.getFirstReadyTxId();\n\n      assert numReadyTxns > 0;\n\n      // Copy from our double-buffer into a new byte array. This is for\n      // two reasons:\n      // 1) The IPC code has no way of specifying to send only a slice of\n      //    a larger array.\n      // 2) because the calls to the underlying nodes are asynchronous, we\n      //    need a defensive copy to avoid accidentally mutating the buffer\n      //    before it is sent.\n      DataOutputBuffer bufToSend = new DataOutputBuffer(numReadyBytes);\n      buf.flushTo(bufToSend);\n      assert bufToSend.getLength() == numReadyBytes;\n      byte[] data = bufToSend.getData();\n      assert data.length == bufToSend.getLength();\n\n      QuorumCall<AsyncLogger, Void> qcall = loggers.sendEdits(\n          segmentTxId, firstTxToFlush,\n          numReadyTxns, data);\n      loggers.waitForWriteQuorum(qcall, 20000); // TODO: configurable timeout\n      \n      // Since we successfully wrote this batch, let the loggers know. Any future\n      // RPCs will thus let the loggers know of the most recent transaction, even\n      // if a logger has fallen behind.\n      loggers.setCommittedTxId(firstTxToFlush + numReadyTxns - 1);\n    }\n  }","id":63736,"modified_method":"@Override\n  protected void flushAndSync(boolean durable) throws IOException {\n    int numReadyBytes = buf.countReadyBytes();\n    if (numReadyBytes > 0) {\n      int numReadyTxns = buf.countReadyTxns();\n      long firstTxToFlush = buf.getFirstReadyTxId();\n\n      assert numReadyTxns > 0;\n\n      // Copy from our double-buffer into a new byte array. This is for\n      // two reasons:\n      // 1) The IPC code has no way of specifying to send only a slice of\n      //    a larger array.\n      // 2) because the calls to the underlying nodes are asynchronous, we\n      //    need a defensive copy to avoid accidentally mutating the buffer\n      //    before it is sent.\n      DataOutputBuffer bufToSend = new DataOutputBuffer(numReadyBytes);\n      buf.flushTo(bufToSend);\n      assert bufToSend.getLength() == numReadyBytes;\n      byte[] data = bufToSend.getData();\n      assert data.length == bufToSend.getLength();\n\n      QuorumCall<AsyncLogger, Void> qcall = loggers.sendEdits(\n          segmentTxId, firstTxToFlush,\n          numReadyTxns, data);\n      loggers.waitForWriteQuorum(qcall, 20000, \"sendEdits\"); // TODO: configurable timeout\n      \n      // Since we successfully wrote this batch, let the loggers know. Any future\n      // RPCs will thus let the loggers know of the most recent transaction, even\n      // if a logger has fallen behind.\n      loggers.setCommittedTxId(firstTxToFlush + numReadyTxns - 1);\n    }\n  }","commit_id":"8a8c9c18d37f0c8b219264796c0df4bcae6f4e38","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testSingleThreaded() throws IOException {\n    Configuration conf = new Configuration();\n    MiniJournalCluster cluster = new MiniJournalCluster.Builder(conf).build();\n    URI uri = cluster.getQuorumJournalURI(JID);\n    QuorumJournalManager qjm = new QuorumJournalManager(\n        conf, uri, FAKE_NSINFO);\n    qjm.format(FAKE_NSINFO);\n    \n    try {\n      // With no failures or contention, epochs should increase one-by-one\n      for (int i = 0; i < 5; i++) {\n        AsyncLoggerSet als = new AsyncLoggerSet(\n            QuorumJournalManager.createLoggers(conf, uri, FAKE_NSINFO,\n                IPCLoggerChannel.FACTORY));\n        als.createNewUniqueEpoch(FAKE_NSINFO);\n        assertEquals(i + 1, als.getEpoch());\n      }\n      \n      long prevEpoch = 5;\n      // With some failures injected, it should still always increase, perhaps\n      // skipping some\n      for (int i = 0; i < 20; i++) {\n        AsyncLoggerSet als = new AsyncLoggerSet(\n            makeFaulty(QuorumJournalManager.createLoggers(conf, uri, FAKE_NSINFO,\n                IPCLoggerChannel.FACTORY)));\n        long newEpoch = -1;\n        while (true) {\n          try {\n            als.createNewUniqueEpoch(FAKE_NSINFO);\n            newEpoch = als.getEpoch();\n            break;\n          } catch (IOException ioe) {\n            // It's OK to fail to create an epoch, since we randomly inject\n            // faults. It's possible we'll inject faults in too many of the\n            // underlying nodes, and a failure is expected in that case\n          }\n        }\n        LOG.info(\"Created epoch \" + newEpoch);\n        assertTrue(\"New epoch \" + newEpoch + \" should be greater than previous \" +\n            prevEpoch, newEpoch > prevEpoch);\n        prevEpoch = newEpoch;\n      }\n    } finally {\n      cluster.shutdown();\n    }\n  }","id":63737,"modified_method":"@Test\n  public void testSingleThreaded() throws IOException {\n    Configuration conf = new Configuration();\n    MiniJournalCluster cluster = new MiniJournalCluster.Builder(conf).build();\n    URI uri = cluster.getQuorumJournalURI(JID);\n    QuorumJournalManager qjm = new QuorumJournalManager(\n        conf, uri, FAKE_NSINFO);\n    try {\n      qjm.format(FAKE_NSINFO);\n    } finally {\n      qjm.close();\n    }\n    \n    try {\n      // With no failures or contention, epochs should increase one-by-one\n      for (int i = 0; i < 5; i++) {\n        qjm = new QuorumJournalManager(\n            conf, uri, FAKE_NSINFO);\n        try {\n          qjm.createNewUniqueEpoch();\n          assertEquals(i + 1, qjm.getLoggerSetForTests().getEpoch());\n        } finally {\n          qjm.close();\n        }\n      }\n      \n      long prevEpoch = 5;\n      // With some failures injected, it should still always increase, perhaps\n      // skipping some\n      for (int i = 0; i < 20; i++) {\n        long newEpoch = -1;\n        while (true) {\n          qjm = new QuorumJournalManager(\n              conf, uri, FAKE_NSINFO, new FaultyLoggerFactory());\n          try {\n            qjm.createNewUniqueEpoch();\n            newEpoch = qjm.getLoggerSetForTests().getEpoch();\n            break;\n          } catch (IOException ioe) {\n            // It's OK to fail to create an epoch, since we randomly inject\n            // faults. It's possible we'll inject faults in too many of the\n            // underlying nodes, and a failure is expected in that case\n          } finally {\n            qjm.close();\n          }\n        }\n        LOG.info(\"Created epoch \" + newEpoch);\n        assertTrue(\"New epoch \" + newEpoch + \" should be greater than previous \" +\n            prevEpoch, newEpoch > prevEpoch);\n        prevEpoch = newEpoch;\n      }\n    } finally {\n      cluster.shutdown();\n    }\n  }","commit_id":"8a8c9c18d37f0c8b219264796c0df4bcae6f4e38","url":"https://github.com/apache/hadoop"},{"original_method":"@Test(timeout=10000)\n  public void testQuorums() throws Exception {\n    Map<String, SettableFuture<String>> futures = ImmutableMap.of(\n        \"f1\", SettableFuture.<String>create(),\n        \"f2\", SettableFuture.<String>create(),\n        \"f3\", SettableFuture.<String>create());\n    \n    QuorumCall<String, String> q = QuorumCall.create(futures);\n    assertEquals(0, q.countResponses());\n    \n    futures.get(\"f1\").set(\"first future\");\n    q.waitFor(1, 0, 0, 100000); // wait for 1 response\n    q.waitFor(0, 1, 0, 100000); // wait for 1 success\n    assertEquals(1, q.countResponses());\n    \n    \n    futures.get(\"f2\").setException(new Exception(\"error\"));\n    assertEquals(2, q.countResponses());\n    \n    futures.get(\"f3\").set(\"second future\");\n    q.waitFor(3, 0, 100, 100000); // wait for 3 responses\n    q.waitFor(0, 2, 100, 100000); // 2 successes\n\n    assertEquals(3, q.countResponses());\n    assertEquals(\"f1=first future,f3=second future\",\n        Joiner.on(\",\").withKeyValueSeparator(\"=\").join(\n            new TreeMap<String, String>(q.getResults())));\n    \n    try {\n      q.waitFor(0, 4, 100, 10);\n      fail(\"Didn't time out waiting for more responses than came back\");\n    } catch (TimeoutException te) {\n      // expected\n    }\n  }","id":63738,"modified_method":"@Test(timeout=10000)\n  public void testQuorums() throws Exception {\n    Map<String, SettableFuture<String>> futures = ImmutableMap.of(\n        \"f1\", SettableFuture.<String>create(),\n        \"f2\", SettableFuture.<String>create(),\n        \"f3\", SettableFuture.<String>create());\n    \n    QuorumCall<String, String> q = QuorumCall.create(futures);\n    assertEquals(0, q.countResponses());\n    \n    futures.get(\"f1\").set(\"first future\");\n    q.waitFor(1, 0, 0, 100000, \"test\"); // wait for 1 response\n    q.waitFor(0, 1, 0, 100000, \"test\"); // wait for 1 success\n    assertEquals(1, q.countResponses());\n    \n    \n    futures.get(\"f2\").setException(new Exception(\"error\"));\n    assertEquals(2, q.countResponses());\n    \n    futures.get(\"f3\").set(\"second future\");\n    q.waitFor(3, 0, 100, 100000, \"test\"); // wait for 3 responses\n    q.waitFor(0, 2, 100, 100000, \"test\"); // 2 successes\n\n    assertEquals(3, q.countResponses());\n    assertEquals(\"f1=first future,f3=second future\",\n        Joiner.on(\",\").withKeyValueSeparator(\"=\").join(\n            new TreeMap<String, String>(q.getResults())));\n    \n    try {\n      q.waitFor(0, 4, 100, 10, \"test\");\n      fail(\"Didn't time out waiting for more responses than came back\");\n    } catch (TimeoutException te) {\n      // expected\n    }\n  }","commit_id":"8a8c9c18d37f0c8b219264796c0df4bcae6f4e38","url":"https://github.com/apache/hadoop"},{"original_method":"BlockReceiver(final ExtendedBlock block, final StorageType storageType,\n      final DataInputStream in,\n      final String inAddr, final String myAddr,\n      final BlockConstructionStage stage, \n      final long newGs, final long minBytesRcvd, final long maxBytesRcvd, \n      final String clientname, final DatanodeInfo srcDataNode,\n      final DataNode datanode, DataChecksum requestedChecksum,\n      CachingStrategy cachingStrategy,\n      final boolean allowLazyPersist,\n      final boolean pinning) throws IOException {\n    try{\n      this.block = block;\n      this.in = in;\n      this.inAddr = inAddr;\n      this.myAddr = myAddr;\n      this.srcDataNode = srcDataNode;\n      this.datanode = datanode;\n\n      this.clientname = clientname;\n      this.isDatanode = clientname.length() == 0;\n      this.isClient = !this.isDatanode;\n      this.restartBudget = datanode.getDnConf().restartReplicaExpiry;\n      this.datanodeSlowLogThresholdMs = datanode.getDnConf().datanodeSlowIoWarningThresholdMs;\n      // For replaceBlock() calls response should be sent to avoid socketTimeout\n      // at clients. So sending with the interval of 0.5 * socketTimeout\n      this.responseInterval = (long) (datanode.getDnConf().socketTimeout * 0.5);\n      //for datanode, we have\n      //1: clientName.length() == 0, and\n      //2: stage == null or PIPELINE_SETUP_CREATE\n      this.stage = stage;\n      this.isTransfer = stage == BlockConstructionStage.TRANSFER_RBW\n          || stage == BlockConstructionStage.TRANSFER_FINALIZED;\n\n      this.pinning = pinning;\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(getClass().getSimpleName() + \": \" + block\n            + \"\\n  isClient  =\" + isClient + \", clientname=\" + clientname\n            + \"\\n  isDatanode=\" + isDatanode + \", srcDataNode=\" + srcDataNode\n            + \"\\n  inAddr=\" + inAddr + \", myAddr=\" + myAddr\n            + \"\\n  cachingStrategy = \" + cachingStrategy\n            + \"\\n  pinning=\" + pinning\n            );\n      }\n\n      //\n      // Open local disk out\n      //\n      if (isDatanode) { //replication or move\n        replicaHandler = datanode.data.createTemporary(storageType, block);\n      } else {\n        switch (stage) {\n        case PIPELINE_SETUP_CREATE:\n          replicaHandler = datanode.data.createRbw(storageType, block, allowLazyPersist);\n          datanode.notifyNamenodeReceivingBlock(\n              block, replicaHandler.getReplica().getStorageUuid());\n          break;\n        case PIPELINE_SETUP_STREAMING_RECOVERY:\n          replicaHandler = datanode.data.recoverRbw(\n              block, newGs, minBytesRcvd, maxBytesRcvd);\n          block.setGenerationStamp(newGs);\n          break;\n        case PIPELINE_SETUP_APPEND:\n          replicaHandler = datanode.data.append(block, newGs, minBytesRcvd);\n          block.setGenerationStamp(newGs);\n          datanode.notifyNamenodeReceivingBlock(\n              block, replicaHandler.getReplica().getStorageUuid());\n          break;\n        case PIPELINE_SETUP_APPEND_RECOVERY:\n          replicaHandler = datanode.data.recoverAppend(block, newGs, minBytesRcvd);\n          block.setGenerationStamp(newGs);\n          datanode.notifyNamenodeReceivingBlock(\n              block, replicaHandler.getReplica().getStorageUuid());\n          break;\n        case TRANSFER_RBW:\n        case TRANSFER_FINALIZED:\n          // this is a transfer destination\n          replicaHandler =\n              datanode.data.createTemporary(storageType, block);\n          break;\n        default: throw new IOException(\"Unsupported stage \" + stage + \n              \" while receiving block \" + block + \" from \" + inAddr);\n        }\n      }\n      replicaInfo = replicaHandler.getReplica();\n      this.dropCacheBehindWrites = (cachingStrategy.getDropBehind() == null) ?\n        datanode.getDnConf().dropCacheBehindWrites :\n          cachingStrategy.getDropBehind();\n      this.syncBehindWrites = datanode.getDnConf().syncBehindWrites;\n      this.syncBehindWritesInBackground = datanode.getDnConf().\n          syncBehindWritesInBackground;\n      \n      final boolean isCreate = isDatanode || isTransfer \n          || stage == BlockConstructionStage.PIPELINE_SETUP_CREATE;\n      streams = replicaInfo.createStreams(isCreate, requestedChecksum);\n      assert streams != null : \"null streams!\";\n\n      // read checksum meta information\n      this.clientChecksum = requestedChecksum;\n      this.diskChecksum = streams.getChecksum();\n      this.needsChecksumTranslation = !clientChecksum.equals(diskChecksum);\n      this.bytesPerChecksum = diskChecksum.getBytesPerChecksum();\n      this.checksumSize = diskChecksum.getChecksumSize();\n\n      this.out = streams.getDataOut();\n      if (out instanceof FileOutputStream) {\n        this.outFd = ((FileOutputStream)out).getFD();\n      } else {\n        LOG.warn(\"Could not get file descriptor for outputstream of class \" +\n            out.getClass());\n      }\n      this.checksumOut = new DataOutputStream(new BufferedOutputStream(\n          streams.getChecksumOut(), DFSUtilClient.getSmallBufferSize(\n          datanode.getConf())));\n      // write data chunk header if creating a new replica\n      if (isCreate) {\n        BlockMetadataHeader.writeHeader(checksumOut, diskChecksum);\n      } \n    } catch (ReplicaAlreadyExistsException bae) {\n      throw bae;\n    } catch (ReplicaNotFoundException bne) {\n      throw bne;\n    } catch(IOException ioe) {\n      if (replicaInfo != null) {\n        replicaInfo.releaseAllBytesReserved();\n      }\n      IOUtils.closeStream(this);\n      cleanupBlock();\n      \n      // check if there is a disk error\n      IOException cause = DatanodeUtil.getCauseIfDiskError(ioe);\n      DataNode.LOG.warn(\"IOException in BlockReceiver constructor\"\n          + (cause == null ? \"\" : \". Cause is \"), cause);\n      \n      if (cause != null) { // possible disk error\n        ioe = cause;\n        datanode.checkDiskErrorAsync();\n      }\n      \n      throw ioe;\n    }\n  }","id":63739,"modified_method":"BlockReceiver(final ExtendedBlock block, final StorageType storageType,\n      final DataInputStream in,\n      final String inAddr, final String myAddr,\n      final BlockConstructionStage stage, \n      final long newGs, final long minBytesRcvd, final long maxBytesRcvd, \n      final String clientname, final DatanodeInfo srcDataNode,\n      final DataNode datanode, DataChecksum requestedChecksum,\n      CachingStrategy cachingStrategy,\n      final boolean allowLazyPersist,\n      final boolean pinning) throws IOException {\n    try{\n      this.block = block;\n      this.in = in;\n      this.inAddr = inAddr;\n      this.myAddr = myAddr;\n      this.srcDataNode = srcDataNode;\n      this.datanode = datanode;\n\n      this.clientname = clientname;\n      this.isDatanode = clientname.length() == 0;\n      this.isClient = !this.isDatanode;\n      this.restartBudget = datanode.getDnConf().restartReplicaExpiry;\n      this.datanodeSlowLogThresholdMs = datanode.getDnConf().datanodeSlowIoWarningThresholdMs;\n      // For replaceBlock() calls response should be sent to avoid socketTimeout\n      // at clients. So sending with the interval of 0.5 * socketTimeout\n      final long readTimeout = datanode.getDnConf().socketTimeout;\n      this.responseInterval = (long) (readTimeout * 0.5);\n      //for datanode, we have\n      //1: clientName.length() == 0, and\n      //2: stage == null or PIPELINE_SETUP_CREATE\n      this.stage = stage;\n      this.isTransfer = stage == BlockConstructionStage.TRANSFER_RBW\n          || stage == BlockConstructionStage.TRANSFER_FINALIZED;\n\n      this.pinning = pinning;\n      this.lastSentTime = Time.monotonicNow();\n      // Downstream will timeout in readTimeout on receiving the next packet.\n      // If there is no data traffic, a heartbeat packet is sent at\n      // the interval of 0.5*readTimeout. Here, we set 0.9*readTimeout to be\n      // the threshold for detecting congestion.\n      this.maxSendIdleTime = (long) (readTimeout * 0.9);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(getClass().getSimpleName() + \": \" + block\n            + \"\\n  isClient  =\" + isClient + \", clientname=\" + clientname\n            + \"\\n  isDatanode=\" + isDatanode + \", srcDataNode=\" + srcDataNode\n            + \"\\n  inAddr=\" + inAddr + \", myAddr=\" + myAddr\n            + \"\\n  cachingStrategy = \" + cachingStrategy\n            + \"\\n  pinning=\" + pinning\n            );\n      }\n\n      //\n      // Open local disk out\n      //\n      if (isDatanode) { //replication or move\n        replicaHandler = datanode.data.createTemporary(storageType, block);\n      } else {\n        switch (stage) {\n        case PIPELINE_SETUP_CREATE:\n          replicaHandler = datanode.data.createRbw(storageType, block, allowLazyPersist);\n          datanode.notifyNamenodeReceivingBlock(\n              block, replicaHandler.getReplica().getStorageUuid());\n          break;\n        case PIPELINE_SETUP_STREAMING_RECOVERY:\n          replicaHandler = datanode.data.recoverRbw(\n              block, newGs, minBytesRcvd, maxBytesRcvd);\n          block.setGenerationStamp(newGs);\n          break;\n        case PIPELINE_SETUP_APPEND:\n          replicaHandler = datanode.data.append(block, newGs, minBytesRcvd);\n          block.setGenerationStamp(newGs);\n          datanode.notifyNamenodeReceivingBlock(\n              block, replicaHandler.getReplica().getStorageUuid());\n          break;\n        case PIPELINE_SETUP_APPEND_RECOVERY:\n          replicaHandler = datanode.data.recoverAppend(block, newGs, minBytesRcvd);\n          block.setGenerationStamp(newGs);\n          datanode.notifyNamenodeReceivingBlock(\n              block, replicaHandler.getReplica().getStorageUuid());\n          break;\n        case TRANSFER_RBW:\n        case TRANSFER_FINALIZED:\n          // this is a transfer destination\n          replicaHandler =\n              datanode.data.createTemporary(storageType, block);\n          break;\n        default: throw new IOException(\"Unsupported stage \" + stage + \n              \" while receiving block \" + block + \" from \" + inAddr);\n        }\n      }\n      replicaInfo = replicaHandler.getReplica();\n      this.dropCacheBehindWrites = (cachingStrategy.getDropBehind() == null) ?\n        datanode.getDnConf().dropCacheBehindWrites :\n          cachingStrategy.getDropBehind();\n      this.syncBehindWrites = datanode.getDnConf().syncBehindWrites;\n      this.syncBehindWritesInBackground = datanode.getDnConf().\n          syncBehindWritesInBackground;\n      \n      final boolean isCreate = isDatanode || isTransfer \n          || stage == BlockConstructionStage.PIPELINE_SETUP_CREATE;\n      streams = replicaInfo.createStreams(isCreate, requestedChecksum);\n      assert streams != null : \"null streams!\";\n\n      // read checksum meta information\n      this.clientChecksum = requestedChecksum;\n      this.diskChecksum = streams.getChecksum();\n      this.needsChecksumTranslation = !clientChecksum.equals(diskChecksum);\n      this.bytesPerChecksum = diskChecksum.getBytesPerChecksum();\n      this.checksumSize = diskChecksum.getChecksumSize();\n\n      this.out = streams.getDataOut();\n      if (out instanceof FileOutputStream) {\n        this.outFd = ((FileOutputStream)out).getFD();\n      } else {\n        LOG.warn(\"Could not get file descriptor for outputstream of class \" +\n            out.getClass());\n      }\n      this.checksumOut = new DataOutputStream(new BufferedOutputStream(\n          streams.getChecksumOut(), DFSUtilClient.getSmallBufferSize(\n          datanode.getConf())));\n      // write data chunk header if creating a new replica\n      if (isCreate) {\n        BlockMetadataHeader.writeHeader(checksumOut, diskChecksum);\n      } \n    } catch (ReplicaAlreadyExistsException bae) {\n      throw bae;\n    } catch (ReplicaNotFoundException bne) {\n      throw bne;\n    } catch(IOException ioe) {\n      if (replicaInfo != null) {\n        replicaInfo.releaseAllBytesReserved();\n      }\n      IOUtils.closeStream(this);\n      cleanupBlock();\n      \n      // check if there is a disk error\n      IOException cause = DatanodeUtil.getCauseIfDiskError(ioe);\n      DataNode.LOG.warn(\"IOException in BlockReceiver constructor\"\n          + (cause == null ? \"\" : \". Cause is \"), cause);\n      \n      if (cause != null) { // possible disk error\n        ioe = cause;\n        datanode.checkDiskErrorAsync();\n      }\n      \n      throw ioe;\n    }\n  }","commit_id":"99e5204ff5326430558b6f6fd9da7c44654c15d7","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n     * Thread to process incoming acks.\n     * @see java.lang.Runnable#run()\n     */\n    @Override\n    public void run() {\n      boolean lastPacketInBlock = false;\n      final long startTime = ClientTraceLog.isInfoEnabled() ? System.nanoTime() : 0;\n      while (isRunning() && !lastPacketInBlock) {\n        long totalAckTimeNanos = 0;\n        boolean isInterrupted = false;\n        try {\n          Packet pkt = null;\n          long expected = -2;\n          PipelineAck ack = new PipelineAck();\n          long seqno = PipelineAck.UNKOWN_SEQNO;\n          long ackRecvNanoTime = 0;\n          try {\n            if (type != PacketResponderType.LAST_IN_PIPELINE && !mirrorError) {\n              // read an ack from downstream datanode\n              ack.readFields(downstreamIn);\n              ackRecvNanoTime = System.nanoTime();\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(myString + \" got \" + ack);\n              }\n              // Process an OOB ACK.\n              Status oobStatus = ack.getOOBStatus();\n              if (oobStatus != null) {\n                LOG.info(\"Relaying an out of band ack of type \" + oobStatus);\n                sendAckUpstream(ack, PipelineAck.UNKOWN_SEQNO, 0L, 0L,\n                    PipelineAck.combineHeader(datanode.getECN(),\n                      Status.SUCCESS));\n                continue;\n              }\n              seqno = ack.getSeqno();\n            }\n            if (seqno != PipelineAck.UNKOWN_SEQNO\n                || type == PacketResponderType.LAST_IN_PIPELINE) {\n              pkt = waitForAckHead(seqno);\n              if (!isRunning()) {\n                break;\n              }\n              expected = pkt.seqno;\n              if (type == PacketResponderType.HAS_DOWNSTREAM_IN_PIPELINE\n                  && seqno != expected) {\n                throw new IOException(myString + \"seqno: expected=\" + expected\n                    + \", received=\" + seqno);\n              }\n              if (type == PacketResponderType.HAS_DOWNSTREAM_IN_PIPELINE) {\n                // The total ack time includes the ack times of downstream\n                // nodes.\n                // The value is 0 if this responder doesn't have a downstream\n                // DN in the pipeline.\n                totalAckTimeNanos = ackRecvNanoTime - pkt.ackEnqueueNanoTime;\n                // Report the elapsed time from ack send to ack receive minus\n                // the downstream ack time.\n                long ackTimeNanos = totalAckTimeNanos\n                    - ack.getDownstreamAckTimeNanos();\n                if (ackTimeNanos < 0) {\n                  if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"Calculated invalid ack time: \" + ackTimeNanos\n                        + \"ns.\");\n                  }\n                } else {\n                  datanode.metrics.addPacketAckRoundTripTimeNanos(ackTimeNanos);\n                }\n              }\n              lastPacketInBlock = pkt.lastPacketInBlock;\n            }\n          } catch (InterruptedException ine) {\n            isInterrupted = true;\n          } catch (IOException ioe) {\n            if (Thread.interrupted()) {\n              isInterrupted = true;\n            } else {\n              // continue to run even if can not read from mirror\n              // notify client of the error\n              // and wait for the client to shut down the pipeline\n              mirrorError = true;\n              LOG.info(myString, ioe);\n            }\n          }\n\n          if (Thread.interrupted() || isInterrupted) {\n            /*\n             * The receiver thread cancelled this thread. We could also check\n             * any other status updates from the receiver thread (e.g. if it is\n             * ok to write to replyOut). It is prudent to not send any more\n             * status back to the client because this datanode has a problem.\n             * The upstream datanode will detect that this datanode is bad, and\n             * rightly so.\n             *\n             * The receiver thread can also interrupt this thread for sending\n             * an out-of-band response upstream.\n             */\n            LOG.info(myString + \": Thread is interrupted.\");\n            running = false;\n            continue;\n          }\n\n          if (lastPacketInBlock) {\n            // Finalize the block and close the block file\n            finalizeBlock(startTime);\n          }\n\n          Status myStatus = pkt != null ? pkt.ackStatus : Status.SUCCESS;\n          sendAckUpstream(ack, expected, totalAckTimeNanos,\n            (pkt != null ? pkt.offsetInBlock : 0),\n            PipelineAck.combineHeader(datanode.getECN(), myStatus));\n          if (pkt != null) {\n            // remove the packet from the ack queue\n            removeAckHead();\n          }\n        } catch (IOException e) {\n          LOG.warn(\"IOException in BlockReceiver.run(): \", e);\n          if (running) {\n            datanode.checkDiskErrorAsync();\n            LOG.info(myString, e);\n            running = false;\n            if (!Thread.interrupted()) { // failure not caused by interruption\n              receiverThread.interrupt();\n            }\n          }\n        } catch (Throwable e) {\n          if (running) {\n            LOG.info(myString, e);\n            running = false;\n            receiverThread.interrupt();\n          }\n        }\n      }\n      LOG.info(myString + \" terminating\");\n    }","id":63740,"modified_method":"/**\n     * Thread to process incoming acks.\n     * @see java.lang.Runnable#run()\n     */\n    @Override\n    public void run() {\n      boolean lastPacketInBlock = false;\n      final long startTime = ClientTraceLog.isInfoEnabled() ? System.nanoTime() : 0;\n      while (isRunning() && !lastPacketInBlock) {\n        long totalAckTimeNanos = 0;\n        boolean isInterrupted = false;\n        try {\n          Packet pkt = null;\n          long expected = -2;\n          PipelineAck ack = new PipelineAck();\n          long seqno = PipelineAck.UNKOWN_SEQNO;\n          long ackRecvNanoTime = 0;\n          try {\n            if (type != PacketResponderType.LAST_IN_PIPELINE && !mirrorError) {\n              // read an ack from downstream datanode\n              ack.readFields(downstreamIn);\n              ackRecvNanoTime = System.nanoTime();\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(myString + \" got \" + ack);\n              }\n              // Process an OOB ACK.\n              Status oobStatus = ack.getOOBStatus();\n              if (oobStatus != null) {\n                LOG.info(\"Relaying an out of band ack of type \" + oobStatus);\n                sendAckUpstream(ack, PipelineAck.UNKOWN_SEQNO, 0L, 0L,\n                    PipelineAck.combineHeader(datanode.getECN(),\n                      Status.SUCCESS));\n                continue;\n              }\n              seqno = ack.getSeqno();\n            }\n            if (seqno != PipelineAck.UNKOWN_SEQNO\n                || type == PacketResponderType.LAST_IN_PIPELINE) {\n              pkt = waitForAckHead(seqno);\n              if (!isRunning()) {\n                break;\n              }\n              expected = pkt.seqno;\n              if (type == PacketResponderType.HAS_DOWNSTREAM_IN_PIPELINE\n                  && seqno != expected) {\n                throw new IOException(myString + \"seqno: expected=\" + expected\n                    + \", received=\" + seqno);\n              }\n              if (type == PacketResponderType.HAS_DOWNSTREAM_IN_PIPELINE) {\n                // The total ack time includes the ack times of downstream\n                // nodes.\n                // The value is 0 if this responder doesn't have a downstream\n                // DN in the pipeline.\n                totalAckTimeNanos = ackRecvNanoTime - pkt.ackEnqueueNanoTime;\n                // Report the elapsed time from ack send to ack receive minus\n                // the downstream ack time.\n                long ackTimeNanos = totalAckTimeNanos\n                    - ack.getDownstreamAckTimeNanos();\n                if (ackTimeNanos < 0) {\n                  if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"Calculated invalid ack time: \" + ackTimeNanos\n                        + \"ns.\");\n                  }\n                } else {\n                  datanode.metrics.addPacketAckRoundTripTimeNanos(ackTimeNanos);\n                }\n              }\n              lastPacketInBlock = pkt.lastPacketInBlock;\n            }\n          } catch (InterruptedException ine) {\n            isInterrupted = true;\n          } catch (IOException ioe) {\n            if (Thread.interrupted()) {\n              isInterrupted = true;\n            } else if (ioe instanceof EOFException && !packetSentInTime()) {\n              // The downstream error was caused by upstream including this\n              // node not sending packet in time. Let the upstream determine\n              // who is at fault.  If the immediate upstream node thinks it\n              // has sent a packet in time, this node will be reported as bad.\n              // Otherwise, the upstream node will propagate the error up by\n              // closing the connection.\n              LOG.warn(\"The downstream error might be due to congestion in \" +\n                  \"upstream including this node. Propagating the error: \",\n                  ioe);\n              throw ioe;\n            } else {\n              // continue to run even if can not read from mirror\n              // notify client of the error\n              // and wait for the client to shut down the pipeline\n              mirrorError = true;\n              LOG.info(myString, ioe);\n            }\n          }\n\n          if (Thread.interrupted() || isInterrupted) {\n            /*\n             * The receiver thread cancelled this thread. We could also check\n             * any other status updates from the receiver thread (e.g. if it is\n             * ok to write to replyOut). It is prudent to not send any more\n             * status back to the client because this datanode has a problem.\n             * The upstream datanode will detect that this datanode is bad, and\n             * rightly so.\n             *\n             * The receiver thread can also interrupt this thread for sending\n             * an out-of-band response upstream.\n             */\n            LOG.info(myString + \": Thread is interrupted.\");\n            running = false;\n            continue;\n          }\n\n          if (lastPacketInBlock) {\n            // Finalize the block and close the block file\n            finalizeBlock(startTime);\n          }\n\n          Status myStatus = pkt != null ? pkt.ackStatus : Status.SUCCESS;\n          sendAckUpstream(ack, expected, totalAckTimeNanos,\n            (pkt != null ? pkt.offsetInBlock : 0),\n            PipelineAck.combineHeader(datanode.getECN(), myStatus));\n          if (pkt != null) {\n            // remove the packet from the ack queue\n            removeAckHead();\n          }\n        } catch (IOException e) {\n          LOG.warn(\"IOException in BlockReceiver.run(): \", e);\n          if (running) {\n            datanode.checkDiskErrorAsync();\n            LOG.info(myString, e);\n            running = false;\n            if (!Thread.interrupted()) { // failure not caused by interruption\n              receiverThread.interrupt();\n            }\n          }\n        } catch (Throwable e) {\n          if (running) {\n            LOG.info(myString, e);\n            running = false;\n            receiverThread.interrupt();\n          }\n        }\n      }\n      LOG.info(myString + \" terminating\");\n    }","commit_id":"99e5204ff5326430558b6f6fd9da7c44654c15d7","url":"https://github.com/apache/hadoop"},{"original_method":"/** \n   * Receives and processes a packet. It can contain many chunks.\n   * returns the number of data bytes that the packet has.\n   */\n  private int receivePacket() throws IOException {\n    // read the next packet\n    packetReceiver.receiveNextPacket(in);\n\n    PacketHeader header = packetReceiver.getHeader();\n    if (LOG.isDebugEnabled()){\n      LOG.debug(\"Receiving one packet for block \" + block +\n                \": \" + header);\n    }\n\n    // Sanity check the header\n    if (header.getOffsetInBlock() > replicaInfo.getNumBytes()) {\n      throw new IOException(\"Received an out-of-sequence packet for \" + block + \n          \"from \" + inAddr + \" at offset \" + header.getOffsetInBlock() +\n          \". Expecting packet starting at \" + replicaInfo.getNumBytes());\n    }\n    if (header.getDataLen() < 0) {\n      throw new IOException(\"Got wrong length during writeBlock(\" + block + \n                            \") from \" + inAddr + \" at offset \" + \n                            header.getOffsetInBlock() + \": \" +\n                            header.getDataLen()); \n    }\n\n    long offsetInBlock = header.getOffsetInBlock();\n    long seqno = header.getSeqno();\n    boolean lastPacketInBlock = header.isLastPacketInBlock();\n    final int len = header.getDataLen();\n    boolean syncBlock = header.getSyncBlock();\n\n    // avoid double sync'ing on close\n    if (syncBlock && lastPacketInBlock) {\n      this.syncOnClose = false;\n    }\n\n    // update received bytes\n    final long firstByteInBlock = offsetInBlock;\n    offsetInBlock += len;\n    if (replicaInfo.getNumBytes() < offsetInBlock) {\n      replicaInfo.setNumBytes(offsetInBlock);\n    }\n    \n    // put in queue for pending acks, unless sync was requested\n    if (responder != null && !syncBlock && !shouldVerifyChecksum()) {\n      ((PacketResponder) responder.getRunnable()).enqueue(seqno,\n          lastPacketInBlock, offsetInBlock, Status.SUCCESS);\n    }\n\n    //First write the packet to the mirror:\n    if (mirrorOut != null && !mirrorError) {\n      try {\n        long begin = Time.monotonicNow();\n        packetReceiver.mirrorPacketTo(mirrorOut);\n        mirrorOut.flush();\n        long duration = Time.monotonicNow() - begin;\n        if (duration > datanodeSlowLogThresholdMs) {\n          LOG.warn(\"Slow BlockReceiver write packet to mirror took \" + duration\n              + \"ms (threshold=\" + datanodeSlowLogThresholdMs + \"ms)\");\n        }\n      } catch (IOException e) {\n        handleMirrorOutError(e);\n      }\n    }\n    \n    ByteBuffer dataBuf = packetReceiver.getDataSlice();\n    ByteBuffer checksumBuf = packetReceiver.getChecksumSlice();\n    \n    if (lastPacketInBlock || len == 0) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"Receiving an empty packet or the end of the block \" + block);\n      }\n      // sync block if requested\n      if (syncBlock) {\n        flushOrSync(true);\n      }\n    } else {\n      final int checksumLen = diskChecksum.getChecksumSize(len);\n      final int checksumReceivedLen = checksumBuf.capacity();\n\n      if (checksumReceivedLen > 0 && checksumReceivedLen != checksumLen) {\n        throw new IOException(\"Invalid checksum length: received length is \"\n            + checksumReceivedLen + \" but expected length is \" + checksumLen);\n      }\n\n      if (checksumReceivedLen > 0 && shouldVerifyChecksum()) {\n        try {\n          verifyChunks(dataBuf, checksumBuf);\n        } catch (IOException ioe) {\n          // checksum error detected locally. there is no reason to continue.\n          if (responder != null) {\n            try {\n              ((PacketResponder) responder.getRunnable()).enqueue(seqno,\n                  lastPacketInBlock, offsetInBlock,\n                  Status.ERROR_CHECKSUM);\n              // Wait until the responder sends back the response\n              // and interrupt this thread.\n              Thread.sleep(3000);\n            } catch (InterruptedException e) { }\n          }\n          throw new IOException(\"Terminating due to a checksum error.\" + ioe);\n        }\n \n        if (needsChecksumTranslation) {\n          // overwrite the checksums in the packet buffer with the\n          // appropriate polynomial for the disk storage.\n          translateChunks(dataBuf, checksumBuf);\n        }\n      }\n\n      if (checksumReceivedLen == 0 && !streams.isTransientStorage()) {\n        // checksum is missing, need to calculate it\n        checksumBuf = ByteBuffer.allocate(checksumLen);\n        diskChecksum.calculateChunkedSums(dataBuf, checksumBuf);\n      }\n      \n      // by this point, the data in the buffer uses the disk checksum\n\n      final boolean shouldNotWriteChecksum = checksumReceivedLen == 0\n          && streams.isTransientStorage();\n      try {\n        long onDiskLen = replicaInfo.getBytesOnDisk();\n        if (onDiskLen<offsetInBlock) {\n          // Normally the beginning of an incoming packet is aligned with the\n          // existing data on disk. If the beginning packet data offset is not\n          // checksum chunk aligned, the end of packet will not go beyond the\n          // next chunk boundary.\n          // When a failure-recovery is involved, the client state and the\n          // the datanode state may not exactly agree. I.e. the client may\n          // resend part of data that is already on disk. Correct number of\n          // bytes should be skipped when writing the data and checksum\n          // buffers out to disk.\n          long partialChunkSizeOnDisk = onDiskLen % bytesPerChecksum;\n          long lastChunkBoundary = onDiskLen - partialChunkSizeOnDisk;\n          boolean alignedOnDisk = partialChunkSizeOnDisk == 0;\n          boolean alignedInPacket = firstByteInBlock % bytesPerChecksum == 0;\n\n          // If the end of the on-disk data is not chunk-aligned, the last\n          // checksum needs to be overwritten.\n          boolean overwriteLastCrc = !alignedOnDisk && !shouldNotWriteChecksum;\n          // If the starting offset of the packat data is at the last chunk\n          // boundary of the data on disk, the partial checksum recalculation\n          // can be skipped and the checksum supplied by the client can be used\n          // instead. This reduces disk reads and cpu load.\n          boolean doCrcRecalc = overwriteLastCrc &&\n              (lastChunkBoundary != firstByteInBlock);\n\n          // If this is a partial chunk, then verify that this is the only\n          // chunk in the packet. If the starting offset is not chunk\n          // aligned, the packet should terminate at or before the next\n          // chunk boundary.\n          if (!alignedInPacket && len > bytesPerChecksum) {\n            throw new IOException(\"Unexpected packet data length for \"\n                +  block + \" from \" + inAddr + \": a partial chunk must be \"\n                + \" sent in an individual packet (data length = \" + len\n                +  \" > bytesPerChecksum = \" + bytesPerChecksum + \")\");\n          }\n\n          // If the last portion of the block file is not a full chunk,\n          // then read in pre-existing partial data chunk and recalculate\n          // the checksum so that the checksum calculation can continue\n          // from the right state. If the client provided the checksum for\n          // the whole chunk, this is not necessary.\n          Checksum partialCrc = null;\n          if (doCrcRecalc) {\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"receivePacket for \" + block \n                  + \": previous write did not end at the chunk boundary.\"\n                  + \" onDiskLen=\" + onDiskLen);\n            }\n            long offsetInChecksum = BlockMetadataHeader.getHeaderSize() +\n                onDiskLen / bytesPerChecksum * checksumSize;\n            partialCrc = computePartialChunkCrc(onDiskLen, offsetInChecksum);\n          }\n\n          // The data buffer position where write will begin. If the packet\n          // data and on-disk data have no overlap, this will not be at the\n          // beginning of the buffer.\n          int startByteToDisk = (int)(onDiskLen-firstByteInBlock) \n              + dataBuf.arrayOffset() + dataBuf.position();\n\n          // Actual number of data bytes to write.\n          int numBytesToDisk = (int)(offsetInBlock-onDiskLen);\n          \n          // Write data to disk.\n          long begin = Time.monotonicNow();\n          out.write(dataBuf.array(), startByteToDisk, numBytesToDisk);\n          long duration = Time.monotonicNow() - begin;\n          if (duration > datanodeSlowLogThresholdMs) {\n            LOG.warn(\"Slow BlockReceiver write data to disk cost:\" + duration\n                + \"ms (threshold=\" + datanodeSlowLogThresholdMs + \"ms)\");\n          }\n\n          final byte[] lastCrc;\n          if (shouldNotWriteChecksum) {\n            lastCrc = null;\n          } else {\n            int skip = 0;\n            byte[] crcBytes = null;\n\n            // First, prepare to overwrite the partial crc at the end.\n            if (overwriteLastCrc) { // not chunk-aligned on disk\n              // prepare to overwrite last checksum\n              adjustCrcFilePosition();\n            }\n\n            // The CRC was recalculated for the last partial chunk. Update the\n            // CRC by reading the rest of the chunk, then write it out.\n            if (doCrcRecalc) {\n              // Calculate new crc for this chunk.\n              int bytesToReadForRecalc =\n                  (int)(bytesPerChecksum - partialChunkSizeOnDisk);\n              if (numBytesToDisk < bytesToReadForRecalc) {\n                bytesToReadForRecalc = numBytesToDisk;\n              }\n\n              partialCrc.update(dataBuf.array(), startByteToDisk,\n                  bytesToReadForRecalc);\n              byte[] buf = FSOutputSummer.convertToByteStream(partialCrc,\n                  checksumSize);\n              crcBytes = copyLastChunkChecksum(buf, checksumSize, buf.length);\n              checksumOut.write(buf);\n              if(LOG.isDebugEnabled()) {\n                LOG.debug(\"Writing out partial crc for data len \" + len +\n                    \", skip=\" + skip);\n              }\n              skip++; //  For the partial chunk that was just read.\n            }\n\n            // Determine how many checksums need to be skipped up to the last\n            // boundary. The checksum after the boundary was already counted\n            // above. Only count the number of checksums skipped up to the\n            // boundary here.\n            long skippedDataBytes = lastChunkBoundary - firstByteInBlock;\n\n            if (skippedDataBytes > 0) {\n              skip += (int)(skippedDataBytes / bytesPerChecksum) +\n                  ((skippedDataBytes % bytesPerChecksum == 0) ? 0 : 1);\n            }\n            skip *= checksumSize; // Convert to number of bytes\n\n            // write the rest of checksum\n            final int offset = checksumBuf.arrayOffset() +\n                checksumBuf.position() + skip;\n            final int end = offset + checksumLen - skip;\n            // If offset > end, there is no more checksum to write.\n            // I.e. a partial chunk checksum rewrite happened and there is no\n            // more to write after that.\n            if (offset > end) {\n              assert crcBytes != null;\n              lastCrc = crcBytes;\n            } else {\n              final int remainingBytes = checksumLen - skip;\n              lastCrc = copyLastChunkChecksum(checksumBuf.array(),\n                  checksumSize, end);\n              checksumOut.write(checksumBuf.array(), offset, remainingBytes);\n            }\n          }\n\n          /// flush entire packet, sync if requested\n          flushOrSync(syncBlock);\n          \n          replicaInfo.setLastChecksumAndDataLen(offsetInBlock, lastCrc);\n\n          datanode.metrics.incrBytesWritten(len);\n          datanode.metrics.incrTotalWriteTime(duration);\n\n          manageWriterOsCache(offsetInBlock);\n        }\n      } catch (IOException iex) {\n        datanode.checkDiskErrorAsync();\n        throw iex;\n      }\n    }\n\n    // if sync was requested, put in queue for pending acks here\n    // (after the fsync finished)\n    if (responder != null && (syncBlock || shouldVerifyChecksum())) {\n      ((PacketResponder) responder.getRunnable()).enqueue(seqno,\n          lastPacketInBlock, offsetInBlock, Status.SUCCESS);\n    }\n\n    /*\n     * Send in-progress responses for the replaceBlock() calls back to caller to\n     * avoid timeouts due to balancer throttling. HDFS-6247\n     */\n    if (isReplaceBlock\n        && (Time.monotonicNow() - lastResponseTime > responseInterval)) {\n      BlockOpResponseProto.Builder response = BlockOpResponseProto.newBuilder()\n          .setStatus(Status.IN_PROGRESS);\n      response.build().writeDelimitedTo(replyOut);\n      replyOut.flush();\n\n      lastResponseTime = Time.monotonicNow();\n    }\n\n    if (throttler != null) { // throttle I/O\n      throttler.throttle(len);\n    }\n    \n    return lastPacketInBlock?-1:len;\n  }","id":63741,"modified_method":"/** \n   * Receives and processes a packet. It can contain many chunks.\n   * returns the number of data bytes that the packet has.\n   */\n  private int receivePacket() throws IOException {\n    // read the next packet\n    packetReceiver.receiveNextPacket(in);\n\n    PacketHeader header = packetReceiver.getHeader();\n    if (LOG.isDebugEnabled()){\n      LOG.debug(\"Receiving one packet for block \" + block +\n                \": \" + header);\n    }\n\n    // Sanity check the header\n    if (header.getOffsetInBlock() > replicaInfo.getNumBytes()) {\n      throw new IOException(\"Received an out-of-sequence packet for \" + block + \n          \"from \" + inAddr + \" at offset \" + header.getOffsetInBlock() +\n          \". Expecting packet starting at \" + replicaInfo.getNumBytes());\n    }\n    if (header.getDataLen() < 0) {\n      throw new IOException(\"Got wrong length during writeBlock(\" + block + \n                            \") from \" + inAddr + \" at offset \" + \n                            header.getOffsetInBlock() + \": \" +\n                            header.getDataLen()); \n    }\n\n    long offsetInBlock = header.getOffsetInBlock();\n    long seqno = header.getSeqno();\n    boolean lastPacketInBlock = header.isLastPacketInBlock();\n    final int len = header.getDataLen();\n    boolean syncBlock = header.getSyncBlock();\n\n    // avoid double sync'ing on close\n    if (syncBlock && lastPacketInBlock) {\n      this.syncOnClose = false;\n    }\n\n    // update received bytes\n    final long firstByteInBlock = offsetInBlock;\n    offsetInBlock += len;\n    if (replicaInfo.getNumBytes() < offsetInBlock) {\n      replicaInfo.setNumBytes(offsetInBlock);\n    }\n    \n    // put in queue for pending acks, unless sync was requested\n    if (responder != null && !syncBlock && !shouldVerifyChecksum()) {\n      ((PacketResponder) responder.getRunnable()).enqueue(seqno,\n          lastPacketInBlock, offsetInBlock, Status.SUCCESS);\n    }\n\n    // Drop heartbeat for testing.\n    if (seqno < 0 && len == 0 &&\n        DataNodeFaultInjector.get().dropHeartbeatPacket()) {\n      return 0;\n    }\n\n    //First write the packet to the mirror:\n    if (mirrorOut != null && !mirrorError) {\n      try {\n        long begin = Time.monotonicNow();\n        packetReceiver.mirrorPacketTo(mirrorOut);\n        mirrorOut.flush();\n        long now = Time.monotonicNow();\n        setLastSentTime(now);\n        long duration = now - begin;\n        if (duration > datanodeSlowLogThresholdMs) {\n          LOG.warn(\"Slow BlockReceiver write packet to mirror took \" + duration\n              + \"ms (threshold=\" + datanodeSlowLogThresholdMs + \"ms)\");\n        }\n      } catch (IOException e) {\n        handleMirrorOutError(e);\n      }\n    }\n    \n    ByteBuffer dataBuf = packetReceiver.getDataSlice();\n    ByteBuffer checksumBuf = packetReceiver.getChecksumSlice();\n    \n    if (lastPacketInBlock || len == 0) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"Receiving an empty packet or the end of the block \" + block);\n      }\n      // sync block if requested\n      if (syncBlock) {\n        flushOrSync(true);\n      }\n    } else {\n      final int checksumLen = diskChecksum.getChecksumSize(len);\n      final int checksumReceivedLen = checksumBuf.capacity();\n\n      if (checksumReceivedLen > 0 && checksumReceivedLen != checksumLen) {\n        throw new IOException(\"Invalid checksum length: received length is \"\n            + checksumReceivedLen + \" but expected length is \" + checksumLen);\n      }\n\n      if (checksumReceivedLen > 0 && shouldVerifyChecksum()) {\n        try {\n          verifyChunks(dataBuf, checksumBuf);\n        } catch (IOException ioe) {\n          // checksum error detected locally. there is no reason to continue.\n          if (responder != null) {\n            try {\n              ((PacketResponder) responder.getRunnable()).enqueue(seqno,\n                  lastPacketInBlock, offsetInBlock,\n                  Status.ERROR_CHECKSUM);\n              // Wait until the responder sends back the response\n              // and interrupt this thread.\n              Thread.sleep(3000);\n            } catch (InterruptedException e) { }\n          }\n          throw new IOException(\"Terminating due to a checksum error.\" + ioe);\n        }\n \n        if (needsChecksumTranslation) {\n          // overwrite the checksums in the packet buffer with the\n          // appropriate polynomial for the disk storage.\n          translateChunks(dataBuf, checksumBuf);\n        }\n      }\n\n      if (checksumReceivedLen == 0 && !streams.isTransientStorage()) {\n        // checksum is missing, need to calculate it\n        checksumBuf = ByteBuffer.allocate(checksumLen);\n        diskChecksum.calculateChunkedSums(dataBuf, checksumBuf);\n      }\n      \n      // by this point, the data in the buffer uses the disk checksum\n\n      final boolean shouldNotWriteChecksum = checksumReceivedLen == 0\n          && streams.isTransientStorage();\n      try {\n        long onDiskLen = replicaInfo.getBytesOnDisk();\n        if (onDiskLen<offsetInBlock) {\n          // Normally the beginning of an incoming packet is aligned with the\n          // existing data on disk. If the beginning packet data offset is not\n          // checksum chunk aligned, the end of packet will not go beyond the\n          // next chunk boundary.\n          // When a failure-recovery is involved, the client state and the\n          // the datanode state may not exactly agree. I.e. the client may\n          // resend part of data that is already on disk. Correct number of\n          // bytes should be skipped when writing the data and checksum\n          // buffers out to disk.\n          long partialChunkSizeOnDisk = onDiskLen % bytesPerChecksum;\n          long lastChunkBoundary = onDiskLen - partialChunkSizeOnDisk;\n          boolean alignedOnDisk = partialChunkSizeOnDisk == 0;\n          boolean alignedInPacket = firstByteInBlock % bytesPerChecksum == 0;\n\n          // If the end of the on-disk data is not chunk-aligned, the last\n          // checksum needs to be overwritten.\n          boolean overwriteLastCrc = !alignedOnDisk && !shouldNotWriteChecksum;\n          // If the starting offset of the packat data is at the last chunk\n          // boundary of the data on disk, the partial checksum recalculation\n          // can be skipped and the checksum supplied by the client can be used\n          // instead. This reduces disk reads and cpu load.\n          boolean doCrcRecalc = overwriteLastCrc &&\n              (lastChunkBoundary != firstByteInBlock);\n\n          // If this is a partial chunk, then verify that this is the only\n          // chunk in the packet. If the starting offset is not chunk\n          // aligned, the packet should terminate at or before the next\n          // chunk boundary.\n          if (!alignedInPacket && len > bytesPerChecksum) {\n            throw new IOException(\"Unexpected packet data length for \"\n                +  block + \" from \" + inAddr + \": a partial chunk must be \"\n                + \" sent in an individual packet (data length = \" + len\n                +  \" > bytesPerChecksum = \" + bytesPerChecksum + \")\");\n          }\n\n          // If the last portion of the block file is not a full chunk,\n          // then read in pre-existing partial data chunk and recalculate\n          // the checksum so that the checksum calculation can continue\n          // from the right state. If the client provided the checksum for\n          // the whole chunk, this is not necessary.\n          Checksum partialCrc = null;\n          if (doCrcRecalc) {\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"receivePacket for \" + block \n                  + \": previous write did not end at the chunk boundary.\"\n                  + \" onDiskLen=\" + onDiskLen);\n            }\n            long offsetInChecksum = BlockMetadataHeader.getHeaderSize() +\n                onDiskLen / bytesPerChecksum * checksumSize;\n            partialCrc = computePartialChunkCrc(onDiskLen, offsetInChecksum);\n          }\n\n          // The data buffer position where write will begin. If the packet\n          // data and on-disk data have no overlap, this will not be at the\n          // beginning of the buffer.\n          int startByteToDisk = (int)(onDiskLen-firstByteInBlock) \n              + dataBuf.arrayOffset() + dataBuf.position();\n\n          // Actual number of data bytes to write.\n          int numBytesToDisk = (int)(offsetInBlock-onDiskLen);\n          \n          // Write data to disk.\n          long begin = Time.monotonicNow();\n          out.write(dataBuf.array(), startByteToDisk, numBytesToDisk);\n          long duration = Time.monotonicNow() - begin;\n          if (duration > datanodeSlowLogThresholdMs) {\n            LOG.warn(\"Slow BlockReceiver write data to disk cost:\" + duration\n                + \"ms (threshold=\" + datanodeSlowLogThresholdMs + \"ms)\");\n          }\n\n          final byte[] lastCrc;\n          if (shouldNotWriteChecksum) {\n            lastCrc = null;\n          } else {\n            int skip = 0;\n            byte[] crcBytes = null;\n\n            // First, prepare to overwrite the partial crc at the end.\n            if (overwriteLastCrc) { // not chunk-aligned on disk\n              // prepare to overwrite last checksum\n              adjustCrcFilePosition();\n            }\n\n            // The CRC was recalculated for the last partial chunk. Update the\n            // CRC by reading the rest of the chunk, then write it out.\n            if (doCrcRecalc) {\n              // Calculate new crc for this chunk.\n              int bytesToReadForRecalc =\n                  (int)(bytesPerChecksum - partialChunkSizeOnDisk);\n              if (numBytesToDisk < bytesToReadForRecalc) {\n                bytesToReadForRecalc = numBytesToDisk;\n              }\n\n              partialCrc.update(dataBuf.array(), startByteToDisk,\n                  bytesToReadForRecalc);\n              byte[] buf = FSOutputSummer.convertToByteStream(partialCrc,\n                  checksumSize);\n              crcBytes = copyLastChunkChecksum(buf, checksumSize, buf.length);\n              checksumOut.write(buf);\n              if(LOG.isDebugEnabled()) {\n                LOG.debug(\"Writing out partial crc for data len \" + len +\n                    \", skip=\" + skip);\n              }\n              skip++; //  For the partial chunk that was just read.\n            }\n\n            // Determine how many checksums need to be skipped up to the last\n            // boundary. The checksum after the boundary was already counted\n            // above. Only count the number of checksums skipped up to the\n            // boundary here.\n            long skippedDataBytes = lastChunkBoundary - firstByteInBlock;\n\n            if (skippedDataBytes > 0) {\n              skip += (int)(skippedDataBytes / bytesPerChecksum) +\n                  ((skippedDataBytes % bytesPerChecksum == 0) ? 0 : 1);\n            }\n            skip *= checksumSize; // Convert to number of bytes\n\n            // write the rest of checksum\n            final int offset = checksumBuf.arrayOffset() +\n                checksumBuf.position() + skip;\n            final int end = offset + checksumLen - skip;\n            // If offset > end, there is no more checksum to write.\n            // I.e. a partial chunk checksum rewrite happened and there is no\n            // more to write after that.\n            if (offset > end) {\n              assert crcBytes != null;\n              lastCrc = crcBytes;\n            } else {\n              final int remainingBytes = checksumLen - skip;\n              lastCrc = copyLastChunkChecksum(checksumBuf.array(),\n                  checksumSize, end);\n              checksumOut.write(checksumBuf.array(), offset, remainingBytes);\n            }\n          }\n\n          /// flush entire packet, sync if requested\n          flushOrSync(syncBlock);\n          \n          replicaInfo.setLastChecksumAndDataLen(offsetInBlock, lastCrc);\n\n          datanode.metrics.incrBytesWritten(len);\n          datanode.metrics.incrTotalWriteTime(duration);\n\n          manageWriterOsCache(offsetInBlock);\n        }\n      } catch (IOException iex) {\n        datanode.checkDiskErrorAsync();\n        throw iex;\n      }\n    }\n\n    // if sync was requested, put in queue for pending acks here\n    // (after the fsync finished)\n    if (responder != null && (syncBlock || shouldVerifyChecksum())) {\n      ((PacketResponder) responder.getRunnable()).enqueue(seqno,\n          lastPacketInBlock, offsetInBlock, Status.SUCCESS);\n    }\n\n    /*\n     * Send in-progress responses for the replaceBlock() calls back to caller to\n     * avoid timeouts due to balancer throttling. HDFS-6247\n     */\n    if (isReplaceBlock\n        && (Time.monotonicNow() - lastResponseTime > responseInterval)) {\n      BlockOpResponseProto.Builder response = BlockOpResponseProto.newBuilder()\n          .setStatus(Status.IN_PROGRESS);\n      response.build().writeDelimitedTo(replyOut);\n      replyOut.flush();\n\n      lastResponseTime = Time.monotonicNow();\n    }\n\n    if (throttler != null) { // throttle I/O\n      throttler.throttle(len);\n    }\n    \n    return lastPacketInBlock?-1:len;\n  }","commit_id":"99e5204ff5326430558b6f6fd9da7c44654c15d7","url":"https://github.com/apache/hadoop"},{"original_method":"public static String bytesToHex(ByteBuffer bytes)\n    {\n        StringBuilder sb = new StringBuilder();\n        for (int i = bytes.position(); i < bytes.limit(); i++)\n        {\n            int bint = bytes.get(i) & 0xff;\n            if (bint <= 0xF)\n                // toHexString does not 0 pad its results.\n                sb.append(\"0\");\n            sb.append(Integer.toHexString(bint));\n        }\n        return sb.toString();\n    }","id":63742,"modified_method":"public static String bytesToHex(ByteBuffer bytes)\n    {\n        final int offset = bytes.position();\n        final int size = bytes.remaining();\n        final char[] c = new char[size * 2];\n        for (int i = 0; i < size; i++)\n        {\n            final int bint = bytes.get(i+offset);\n            c[i * 2] = FBUtilities.byteToChar[(bint & 0xf0) >> 4];\n            c[1 + i * 2] = FBUtilities.byteToChar[bint & 0x0f];\n        }\n        return FBUtilities.wrapCharArray(c);\n    }","commit_id":"bf436b05180b44e2c7f950ffb017607e03b41550","url":"https://github.com/apache/cassandra"},{"original_method":"@Test\n    public void testHexBytesConversion()\n    {\n        for (int i = Byte.MIN_VALUE; i <= Byte.MAX_VALUE; i++)\n        {\n            ByteBuffer bb = ByteBuffer.allocate(1);\n            bb.put((byte)i);\n            bb.clear();\n            String s = ByteBufferUtil.bytesToHex(bb);\n            ByteBuffer bb2 = ByteBufferUtil.hexToBytes(s);\n            assert bb.equals(bb2);\n        }\n    }","id":63743,"modified_method":"@Test\n    public void testHexBytesConversion()\n    {\n        for (int i = Byte.MIN_VALUE; i <= Byte.MAX_VALUE; i++)\n        {\n            ByteBuffer bb = ByteBuffer.allocate(1);\n            bb.put((byte) i);\n            bb.clear();\n            String s = ByteBufferUtil.bytesToHex(bb);\n            ByteBuffer bb2 = ByteBufferUtil.hexToBytes(s);\n            assertEquals(bb, bb2);\n        }\n        // check that non-zero buffer positions work,\n        // i.e. that conversion accounts for the buffer offset and limit correctly\n        ByteBuffer bb = ByteBuffer.allocate(4);\n        for (int i = 0; i < 4; i++)\n        {\n            bb.put((byte) i);\n        }\n        // use a chunk out of the middle of the buffer\n        bb.position(1);\n        bb.limit(3);\n        assertEquals(2, bb.remaining());\n        String s = ByteBufferUtil.bytesToHex(bb);\n        ByteBuffer bb2 = ByteBufferUtil.hexToBytes(s);\n        assertEquals(bb, bb2);\n        assertEquals(\"0102\", s);\n    }","commit_id":"bf436b05180b44e2c7f950ffb017607e03b41550","url":"https://github.com/apache/cassandra"},{"original_method":"public static String bytesToHex(byte... bytes)\n    {\n        StringBuilder sb = new StringBuilder();\n        for (byte b : bytes)\n        {\n            int bint = b & 0xff;\n            if (bint <= 0xF)\n                // toHexString does not 0 pad its results.\n                sb.append(\"0\");\n            sb.append(Integer.toHexString(bint));\n        }\n        return sb.toString();\n    }","id":63744,"modified_method":"public static String bytesToHex(byte... bytes)\n    {\n        char[] c = new char[bytes.length * 2];\n        for (int i = 0; i < bytes.length; i++)\n        {\n            int bint = bytes[i];\n            c[i * 2] = FBUtilities.byteToChar[(bint & 0xf0) >> 4];\n            c[1 + i * 2] = FBUtilities.byteToChar[bint & 0x0f];\n        }\n\n        return wrapCharArray(c);\n    }","commit_id":"bf436b05180b44e2c7f950ffb017607e03b41550","url":"https://github.com/apache/cassandra"},{"original_method":"public static byte[] hexToBytes(String str)\n    {\n        if (str.length() % 2 == 1)\n            str = \"0\" + str;\n        byte[] bytes = new byte[str.length()/2];\n        for (int i = 0; i < bytes.length; i++)\n        {\n            bytes[i] = (byte)Integer.parseInt(str.substring(i*2, i*2+2), 16);\n        }\n        return bytes;\n    }","id":63745,"modified_method":"public static byte[] hexToBytes(String str)\n    {\n        if (str.length() % 2 == 1)\n            str = \"0\" + str;\n        byte[] bytes = new byte[str.length()/2];\n        for (int i = 0; i < bytes.length; i++)\n        {\n            bytes[i] = (byte)((charToByte[str.charAt(i * 2)] << 4) | charToByte[str.charAt(i*2 + 1)]);\n        }\n        return bytes;\n    }","commit_id":"bf436b05180b44e2c7f950ffb017607e03b41550","url":"https://github.com/apache/cassandra"},{"original_method":"public static List<String> parseQuery(String query)\n    {\n        if (query == null) {\n            return null;\n        }\n\n        /*\n         * Mark any parser string keyword matches by interposing the #SQL_PARSER_STRING_KEYWORD#\n         * tag. Which is later stripped at the end of this procedure. This tag is here to\n         * aide the evaluation of SetOp and AutoSplit REGEXPs, meaning that an\n         * 'explain select foo from bar will cause SetOp and AutoSplit match on the select as\n         * is prefixed with the #SQL_PARSER_STRING_KEYWORD#\n         *\n         * For example\n         *     'explain select foo from bar'\n         *  becomes\n         *     'explain #SQL_PARSER_STRING_KEYWORD#select foo from bar'\n         */\n        query = ParserStringKeywords.matcher(query).replaceAll(\" $1 #SQL_PARSER_STRING_KEYWORD#$2 \");\n        /*\n         * strip out single line comments\n         */\n        query = SingleLineComments.matcher(query).replaceAll(\"\");\n        /*\n         * replace all escaped single quotes with the #(SQL_PARSER_ESCAPE_SINGLE_QUOTE) tag\n         */\n        query = EscapedSingleQuote.matcher(query).replaceAll(\"#(SQL_PARSER_ESCAPE_SINGLE_QUOTE)\");\n\n        /*\n         * move all single quoted strings into the string fragments list, and do in place\n         * replacements with numbered instances of the #(SQL_PARSER_STRING_FRAGMENT#[n]) tag\n         *\n         */\n        Matcher stringFragmentMatcher = Extract.matcher(query);\n        ArrayList<String> stringFragments = new ArrayList<String>();\n        int i = 0;\n        while(stringFragmentMatcher.find())\n        {\n            stringFragments.add(stringFragmentMatcher.group());\n            query = stringFragmentMatcher.replaceFirst(\"#(SQL_PARSER_STRING_FRAGMENT#\" + i + \")\");\n            stringFragmentMatcher = Extract.matcher(query);\n            i++;\n        }\n\n        /*\n         * Mark all SQL keywords that are part of another statement so they don't get auto-split\n         */\n        query = SetOp.matcher(query).replaceAll(\"$1$2$3$4SQL_PARSER_SAME_SELECT\");\n        query = Subquery.matcher(query).replaceAll(\"$1$2$3SQL_PARSER_SAME_SELECT\");\n        query = CreateView.matcher(query).replaceAll(\"$1$2SQL_PARSER_SAME_CREATEVIEW\");\n        query = CreateProcedureSelect.matcher(query).replaceAll(\"$1$2SQL_PARSER_SAME_CREATESELECT\");\n        query = CreateProcedureInsert.matcher(query).replaceAll(\"$1$2SQL_PARSER_SAME_CREATEINSERT\");\n        query = CreateProcedureUpdate.matcher(query).replaceAll(\"$1$2SQL_PARSER_SAME_CREATEUPDATE\");\n        query = CreateProcedureDelete.matcher(query).replaceAll(\"$1$2SQL_PARSER_SAME_CREATEDELETE\");\n        query = InsertIntoSelect.matcher(query).replaceAll(\"$1SQL_PARSER_SAME_INSERTINTOSELECT\");\n        query = AutoSplit.matcher(query).replaceAll(\";$2$4 \"); // there be dragons here\n        query = query.replaceAll(\"SQL_PARSER_SAME_SELECT\", \"select\");\n        query = query.replaceAll(\"SQL_PARSER_SAME_CREATEVIEW\", \"select\");\n        query = query.replaceAll(\"SQL_PARSER_SAME_CREATESELECT\", \"select\");\n        query = query.replaceAll(\"SQL_PARSER_SAME_CREATEINSERT\", \"insert\");\n        query = query.replaceAll(\"SQL_PARSER_SAME_CREATEUPDATE\", \"update\");\n        query = query.replaceAll(\"SQL_PARSER_SAME_CREATEDELETE\", \"delete\");\n        query = query.replaceAll(\"SQL_PARSER_SAME_INSERTINTOSELECT\", \"select\");\n        String[] sqlFragments = query.split(\"\\\\s*;+\\\\s*\");\n\n        ArrayList<String> queries = new ArrayList<String>();\n        for(int j = 0;j<sqlFragments.length;j++)\n        {\n            sqlFragments[j] = sqlFragments[j].trim();\n            if (sqlFragments[j].length() != 0)\n            {\n                if(sqlFragments[j].indexOf(\"#(SQL_PARSER_STRING_FRAGMENT#\") > -1) {\n                    for(int k = 0;k<stringFragments.size();k++) {\n                        sqlFragments[j] = sqlFragments[j].replace(\"#(SQL_PARSER_STRING_FRAGMENT#\" + k + \")\", stringFragments.get(k));\n                    }\n                }\n                sqlFragments[j] = sqlFragments[j].replace(\"#(SQL_PARSER_ESCAPE_SINGLE_QUOTE)\", \"''\");\n                sqlFragments[j] = sqlFragments[j].replace(\"#SQL_PARSER_STRING_KEYWORD#\",\"\");\n                queries.add(sqlFragments[j]);\n            }\n        }\n        return queries;\n    }","id":63746,"modified_method":"public static List<String> parseQuery(String query)\n    {\n        if (query == null) {\n            return null;\n        }\n\n        /*\n         * Mark any parser string keyword matches by interposing the #SQL_PARSER_STRING_KEYWORD#\n         * tag. Which is later stripped at the end of this procedure. This tag is here to\n         * aide the evaluation of SetOp and AutoSplit REGEXPs, meaning that an\n         * 'explain select foo from bar will cause SetOp and AutoSplit match on the select as\n         * is prefixed with the #SQL_PARSER_STRING_KEYWORD#\n         *\n         * For example\n         *     'explain select foo from bar'\n         *  becomes\n         *     'explain #SQL_PARSER_STRING_KEYWORD#select foo from bar'\n         */\n        query = ParserStringKeywords.matcher(query).replaceAll(\" $1 #SQL_PARSER_STRING_KEYWORD#$2 \");\n        /*\n         * strip out single line comments\n         */\n        query = SingleLineComments.matcher(query).replaceAll(\"\");\n        /*\n         * replace all escaped single quotes with the #(SQL_PARSER_ESCAPE_SINGLE_QUOTE) tag\n         */\n        query = EscapedSingleQuote.matcher(query).replaceAll(\"#(SQL_PARSER_ESCAPE_SINGLE_QUOTE)\");\n\n        /*\n         * move all single quoted strings into the string fragments list, and do in place\n         * replacements with numbered instances of the #(SQL_PARSER_STRING_FRAGMENT#[n]) tag\n         *\n         */\n        Matcher stringFragmentMatcher = Extract.matcher(query);\n        ArrayList<String> stringFragments = new ArrayList<String>();\n        int i = 0;\n        while (stringFragmentMatcher.find()) {\n            stringFragments.add(stringFragmentMatcher.group());\n            query = stringFragmentMatcher.replaceFirst(\"#(SQL_PARSER_STRING_FRAGMENT#\" + i + \")\");\n            stringFragmentMatcher = Extract.matcher(query);\n            i++;\n        }\n\n        /*\n         * Mark all SQL keywords that are part of another statement so they don't get auto-split\n         */\n        query = SetOp.matcher(query).replaceAll(\"$1$2$3$4SQL_PARSER_SAME_SELECT\");\n        query = Subquery.matcher(query).replaceAll(\"$1$2$3SQL_PARSER_SAME_SELECT\");\n        query = CreateView.matcher(query).replaceAll(\"$1$2SQL_PARSER_SAME_CREATEVIEW\");\n        query = CreateProcedureSelect.matcher(query).replaceAll(\"$1$2SQL_PARSER_SAME_CREATESELECT\");\n        query = CreateProcedureInsert.matcher(query).replaceAll(\"$1$2SQL_PARSER_SAME_CREATEINSERT\");\n        query = CreateProcedureUpdate.matcher(query).replaceAll(\"$1$2SQL_PARSER_SAME_CREATEUPDATE\");\n        query = CreateProcedureDelete.matcher(query).replaceAll(\"$1$2SQL_PARSER_SAME_CREATEDELETE\");\n        query = InsertIntoSelect.matcher(query).replaceAll(\"$1SQL_PARSER_SAME_INSERTINTOSELECT\");\n        query = AutoSplit.matcher(query).replaceAll(\";$2$4 \"); // there be dragons here\n        query = query.replaceAll(\"SQL_PARSER_SAME_SELECT\", \"select\");\n        query = query.replaceAll(\"SQL_PARSER_SAME_CREATEVIEW\", \"select\");\n        query = query.replaceAll(\"SQL_PARSER_SAME_CREATESELECT\", \"select\");\n        query = query.replaceAll(\"SQL_PARSER_SAME_CREATEINSERT\", \"insert\");\n        query = query.replaceAll(\"SQL_PARSER_SAME_CREATEUPDATE\", \"update\");\n        query = query.replaceAll(\"SQL_PARSER_SAME_CREATEDELETE\", \"delete\");\n        query = query.replaceAll(\"SQL_PARSER_SAME_INSERTINTOSELECT\", \"select\");\n        String[] sqlFragments = query.split(\"\\\\s*;+\\\\s*\");\n\n        ArrayList<String> queries = new ArrayList<String>();\n        for (String fragment : sqlFragments) {\n            fragment = fragment.trim();\n            if (fragment.isEmpty()) {\n                continue;\n            }\n            if (fragment.indexOf(\"#(SQL_PARSER_STRING_FRAGMENT#\") > -1) {\n                int k = 0;\n                for (String strFrag : stringFragments) {\n                    fragment = fragment.replace(\"#(SQL_PARSER_STRING_FRAGMENT#\" + k + \")\", strFrag);\n                    k++;\n                }\n            }\n            fragment = fragment.replace(\"#(SQL_PARSER_ESCAPE_SINGLE_QUOTE)\", \"''\");\n            fragment = fragment.replace(\"#SQL_PARSER_STRING_KEYWORD#\",\"\");\n            queries.add(fragment);\n        }\n        return queries;\n    }","commit_id":"b2e10000f966e1008a00877634049dcd2fb96d91","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private static boolean isUpdateResult(VoltTable table)\n    {\n        return ((table.getColumnName(0).length() == 0 || table.getColumnName(0).equals(\"modified_tuples\"))&& table.getRowCount() == 1 && table.getColumnCount() == 1 && table.getColumnType(0) == VoltType.BIGINT);\n    }","id":63747,"modified_method":"private static boolean isUpdateResult(VoltTable table)\n    {\n        return ((table.getColumnName(0).isEmpty() || table.getColumnName(0).equals(\"modified_tuples\")) &&\n                 table.getRowCount() == 1 && table.getColumnCount() == 1 && table.getColumnType(0) == VoltType.BIGINT);\n    }","commit_id":"b2e10000f966e1008a00877634049dcd2fb96d91","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private static void executeQuery(String query) throws Exception\n    {\n        m_startTime = System.nanoTime();\n\n        if (ExecuteCall.matcher(query).find())\n        {\n            query = ExecuteCall.matcher(query).replaceFirst(\"\");\n            List<String> params = parseQueryProcedureCallParameters(query);\n            String procedure = params.remove(0);\n            if (!Procedures.containsKey(procedure)) {\n                throw new Exception(\"Undefined procedure: \" + procedure);\n            }\n\n            List<String> paramTypes = Procedures.get(procedure).get(params.size());\n            if (paramTypes == null || params.size() != paramTypes.size()) {\n                String expectedSizes = \"\";\n                for (Integer expectedSize : Procedures.get(procedure).keySet()) {\n                    expectedSizes += expectedSize + \", \";\n                }\n                throw new Exception(\"Invalid parameter count for procedure: \" + procedure + \"(expected: \" + expectedSizes + \" received: \" + params.size() + \")\");\n            }\n            Object[] objectParams = new Object[params.size()];\n            if (procedure.equals(\"@SnapshotDelete\"))\n            {\n                objectParams[0] = new String[] { Unquote.matcher(params.get(0)).replaceAll(\"\").replace(\"''\",\"'\") };\n                objectParams[1] = new String[] { Unquote.matcher(params.get(1)).replaceAll(\"\").replace(\"''\",\"'\") };\n            }\n            else\n            {\n                for(int i = 0;i<params.size();i++)\n                {\n                    String paramType = paramTypes.get(i);\n                    String param = params.get(i);\n                    if (paramType.equals(\"bit\"))\n                    {\n                        if(param.equals(\"yes\") || param.equals(\"true\") || param.equals(\"1\")) {\n                            objectParams[i] = (byte)1;\n                        } else {\n                            objectParams[i] = (byte)0;\n                        }\n                    }\n                    else if (paramType.equals(\"tinyint\"))\n                    {\n                        if (IsNull.matcher(param).matches()) {\n                            objectParams[i] = null;\n                        } else {\n                            try\n                            {\n                                objectParams[i] = Byte.parseByte(param);\n                            }\n                            catch (NumberFormatException nfe)\n                            {\n                                throw new Exception(\"Invalid parameter:  Expected a byte numeric value, got '\" + param + \"' (param \" + (i+1) + \").\");\n                            }\n                        }\n                    }\n                    else if (paramType.equals(\"smallint\"))\n                    {\n                        if (IsNull.matcher(param).matches()) {\n                            objectParams[i] = null;\n                        } else {\n                            try\n                            {\n                                objectParams[i] = Short.parseShort(param);\n                            }\n                            catch (NumberFormatException nfe)\n                            {\n                                throw new Exception(\"Invalid parameter:  Expected a short numeric value, got '\" + param + \"' (param \" + (i+1) + \").\");\n                            }\n                        }\n                    }\n                    else if (paramType.equals(\"int\") || paramType.equals(\"integer\"))\n                    {\n                        if (IsNull.matcher(param).matches()) {\n                            objectParams[i] = null;\n                        } else {\n                            try\n                            {\n                                objectParams[i] = Integer.parseInt(param);\n                            }\n                            catch (NumberFormatException nfe)\n                            {\n                                throw new Exception(\"Invalid parameter:  Expected a numeric value, got '\" + param + \"' (param \" + (i+1) + \").\");\n                            }\n                        }\n                    }\n                    else if (paramType.equals(\"bigint\"))\n                    {\n                        if (IsNull.matcher(param).matches()) {\n                            objectParams[i] = null;\n                        } else {\n                            try\n                            {\n                                objectParams[i] = Long.parseLong(param);\n                            }\n                            catch (NumberFormatException nfe)\n                            {\n                                throw new Exception(\"Invalid parameter:  Expected a numeric value, got '\" + param + \"' (param \" + (i+1) + \").\");\n                            }\n                        }\n                    }\n                    else if (paramType.equals(\"float\"))\n                    {\n                        if (IsNull.matcher(param).matches()) {\n                            objectParams[i] = null;\n                        } else {\n                            try\n                            {\n                                objectParams[i] = Double.parseDouble(param);\n                            }\n                            catch (NumberFormatException nfe)\n                            {\n                                throw new Exception(\"Invalid parameter:  Expected a float value, got '\" + param + \"' (param \" + (i+1) + \").\");\n                            }\n                        }\n                    }\n                    else if (paramType.equals(\"varchar\"))\n                    {\n                        if (IsNull.matcher(param).matches()) {\n                            objectParams[i] = null;\n                        } else {\n                            objectParams[i] = Unquote.matcher(param).replaceAll(\"\").replace(\"''\",\"'\");\n                        }\n                    }\n                    else if (paramType.equals(\"decimal\"))\n                    {\n                        if (IsNull.matcher(param).matches()) {\n                            objectParams[i] = null;\n                        } else {\n                            objectParams[i] = new BigDecimal(param);\n                        }\n                    }\n                    else if (paramType.equals(\"timestamp\"))\n                    {\n                        if (IsNull.matcher(param).matches())\n                        {\n                            objectParams[i] = null;\n                        }\n                        else\n                        {\n                            // Remove any quotes around the timestamp value.  ENG-2623\n                            objectParams[i] = DateParser.parse(param.replaceAll(\"^\\\"|\\\"$\", \"\").replaceAll(\"^'|'$\", \"\"));\n                        }\n                    }\n                    else if (paramType.equals(\"statisticscomponent\"))\n                    {\n                        String p = preprocessParam(param);\n                        objectParams[i] = p;\n                    }\n                    else if (paramType.equals(\"sysinfoselector\"))\n                    {\n                        String p = preprocessParam(param);\n                        objectParams[i] = p;\n                    }\n                    else if (paramType.equals(\"metadataselector\"))\n                    {\n                        String p = preprocessParam(param);\n                        objectParams[i] = p;\n                    }\n                    else if (paramType.equals(\"varbinary\") || paramType.equals(\"tinyint_array\"))\n                    {\n                        if (IsNull.matcher(param).matches()) {\n                            objectParams[i] = null;\n                        } else {\n                            // Make sure we have an even amount of characters, otherwise it is an invalid hex string\n                            if (param.length() % 2 == 1) {\n                                throw new Exception(\"Invalid varbinary value: input must have an even amount of characters to be a valid hex string.\");\n                            }\n                            String val = Unquote.matcher(param).replaceAll(\"\").replace(\"''\",\"'\");\n                            objectParams[i] = Encoder.hexDecode(val);\n                        }\n                    } else {\n                        throw new Exception(\"Unsupported Data Type: \" + paramType);\n                    }\n                }\n            }\n            if (procedure.equals(\"@UpdateApplicationCatalog\"))\n            {\n                File catfile = null;\n                if (objectParams[0] != null) {\n                    catfile = new File((String)objectParams[0]);\n                }\n                File depfile = null;\n                if (objectParams[1] != null) {\n                    depfile = new File((String)objectParams[1]);\n                }\n                printResponse(VoltDB.updateApplicationCatalog(catfile, depfile));\n\n                // Need to update the stored procedures after a catalog change (could have added/removed SPs!).  ENG-3726\n                Procedures.clear();\n                loadSystemProcedures();\n                loadStoredProcedures(Procedures, Classlist);\n            }\n            else if (procedure.equals(\"@UpdateClasses\"))\n            {\n                File jarfile = null;\n                if (objectParams[0] != null) {\n                    jarfile = new File((String)objectParams[0]);\n                }\n                printResponse(VoltDB.updateClasses(jarfile, (String)objectParams[1]));\n                // Need to reload the procedures and classes\n                Procedures.clear();\n                loadSystemProcedures();\n                loadStoredProcedures(Procedures, Classlist);\n            }\n            else\n            {\n                printResponse(VoltDB.callProcedure(procedure, objectParams));\n            }\n        }\n        else if (ExplainCall.matcher(query).find())\n        {\n            // We've got a query that starts with \"explain\", pre-pend\n            // the @Explain sp invocatino ahead of the query (after stripping \"explain\").\n            query = query.substring(\"explain \".length());\n            query = StripCRLF.matcher(query).replaceAll(\" \");\n            printResponse(VoltDB.callProcedure(\"@Explain\", query));\n        }\n        else if (ExplainProcCall.matcher(query).find())\n        {\n            // We've got a query that starts with \"explainplan\", pre-pend\n            // the @ExplainPlan sp invocation ahead of the query (after stripping \"explainplan\").\n            query = query.substring(\"explainProc \".length());\n            query = StripCRLF.matcher(query).replaceAll(\" \");\n            printResponse(VoltDB.callProcedure(\"@ExplainProc\", query));\n        }\n        else  // Ad hoc query\n        {\n            query = StripCRLF.matcher(query).replaceAll(\" \");\n            printResponse(VoltDB.callProcedure(\"@AdHoc\", query));\n            // if the query was DDL, reload the stored procedures.\n            if (SQLLexer.extractDDLToken(query) != null) {\n                Procedures.clear();\n                loadSystemProcedures();\n                loadStoredProcedures(Procedures, Classlist);\n            }\n        }\n        return;\n    }","id":63748,"modified_method":"private static void executeQuery(String query) throws Exception\n    {\n        m_startTime = System.nanoTime();\n        Matcher matcher = ExecuteCall.matcher(query);\n        if (matcher.find()) {\n            query = matcher.replaceFirst(\"\");\n            List<String> params = parseQueryProcedureCallParameters(query);\n            String procedure = params.remove(0);\n            Map<Integer, List<String>> signature = Procedures.get(procedure);\n            if (signature == null) {\n                throw new Exception(\"Undefined procedure: \" + procedure);\n            }\n\n            List<String> paramTypes = signature.get(params.size());\n            if (paramTypes == null || params.size() != paramTypes.size()) {\n                String expectedSizes = \"\";\n                for (Integer expectedSize : signature.keySet()) {\n                    expectedSizes += expectedSize + \", \";\n                }\n                throw new Exception(\"Invalid parameter count for procedure: \" + procedure + \"(expected: \" + expectedSizes + \" received: \" + params.size() + \")\");\n            }\n            Object[] objectParams = new Object[params.size()];\n            if (procedure.equals(\"@SnapshotDelete\")) {\n                objectParams[0] = new String[] { Unquote.matcher(params.get(0)).replaceAll(\"\").replace(\"''\",\"'\") };\n                objectParams[1] = new String[] { Unquote.matcher(params.get(1)).replaceAll(\"\").replace(\"''\",\"'\") };\n            }\n            else {\n                for (int i = 0; i < params.size(); i++) {\n                    String paramType = paramTypes.get(i);\n                    String param = params.get(i);\n                    if (paramType.equals(\"bit\")) {\n                        if (param.equals(\"yes\") || param.equals(\"true\") || param.equals(\"1\")) {\n                            objectParams[i] = (byte)1;\n                        } else {\n                            objectParams[i] = (byte)0;\n                        }\n                    }\n                    else if (paramType.equals(\"tinyint\")) {\n                        if (IsNull.matcher(param).matches()) {\n                            objectParams[i] = null;\n                        } else {\n                            try {\n                                objectParams[i] = Byte.parseByte(param);\n                            }\n                            catch (NumberFormatException nfe) {\n                                throw new Exception(\"Invalid parameter:  Expected a byte numeric value, got '\" + param + \"' (param \" + (i+1) + \").\");\n                            }\n                        }\n                    }\n                    else if (paramType.equals(\"smallint\")) {\n                        if (IsNull.matcher(param).matches()) {\n                            objectParams[i] = null;\n                        } else {\n                            try {\n                                objectParams[i] = Short.parseShort(param);\n                            }\n                            catch (NumberFormatException nfe) {\n                                throw new Exception(\"Invalid parameter:  Expected a short numeric value, got '\" + param + \"' (param \" + (i+1) + \").\");\n                            }\n                        }\n                    }\n                    else if (paramType.equals(\"int\") || paramType.equals(\"integer\")) {\n                        if (IsNull.matcher(param).matches()) {\n                            objectParams[i] = null;\n                        } else {\n                            try {\n                                objectParams[i] = Integer.parseInt(param);\n                            }\n                            catch (NumberFormatException nfe) {\n                                throw new Exception(\"Invalid parameter:  Expected a numeric value, got '\" + param + \"' (param \" + (i+1) + \").\");\n                            }\n                        }\n                    }\n                    else if (paramType.equals(\"bigint\")) {\n                        if (IsNull.matcher(param).matches()) {\n                            objectParams[i] = null;\n                        } else {\n                            try {\n                                objectParams[i] = Long.parseLong(param);\n                            }\n                            catch (NumberFormatException nfe) {\n                                throw new Exception(\"Invalid parameter:  Expected a numeric value, got '\" + param + \"' (param \" + (i+1) + \").\");\n                            }\n                        }\n                    }\n                    else if (paramType.equals(\"float\")) {\n                        if (IsNull.matcher(param).matches()) {\n                            objectParams[i] = null;\n                        } else {\n                            try {\n                                objectParams[i] = Double.parseDouble(param);\n                            }\n                            catch (NumberFormatException nfe) {\n                                throw new Exception(\"Invalid parameter:  Expected a float value, got '\" + param + \"' (param \" + (i+1) + \").\");\n                            }\n                        }\n                    }\n                    else if (paramType.equals(\"varchar\")) {\n                        if (IsNull.matcher(param).matches()) {\n                            objectParams[i] = null;\n                        } else {\n                            objectParams[i] = Unquote.matcher(param).replaceAll(\"\").replace(\"''\",\"'\");\n                        }\n                    }\n                    else if (paramType.equals(\"decimal\")) {\n                        if (IsNull.matcher(param).matches()) {\n                            objectParams[i] = null;\n                        } else {\n                            objectParams[i] = new BigDecimal(param);\n                        }\n                    }\n                    else if (paramType.equals(\"timestamp\")) {\n                        if (IsNull.matcher(param).matches()) {\n                            objectParams[i] = null;\n                        } else {\n                            // Remove any quotes around the timestamp value.  ENG-2623\n                            objectParams[i] = DateParser.parse(param.replaceAll(\"^\\\"|\\\"$\", \"\").replaceAll(\"^'|'$\", \"\"));\n                        }\n                    }\n                    else if (paramType.equals(\"statisticscomponent\")) {\n                        String p = preprocessParam(param);\n                        objectParams[i] = p;\n                    }\n                    else if (paramType.equals(\"sysinfoselector\")) {\n                        String p = preprocessParam(param);\n                        objectParams[i] = p;\n                    }\n                    else if (paramType.equals(\"metadataselector\")) {\n                        String p = preprocessParam(param);\n                        objectParams[i] = p;\n                    }\n                    else if (paramType.equals(\"varbinary\") || paramType.equals(\"tinyint_array\")) {\n                        if (IsNull.matcher(param).matches()) {\n                            objectParams[i] = null;\n                        } else {\n                            // Make sure we have an even amount of characters, otherwise it is an invalid hex string\n                            if (param.length() % 2 == 1) {\n                                throw new Exception(\"Invalid varbinary value: input must have an even amount of characters to be a valid hex string.\");\n                            }\n                            String val = Unquote.matcher(param).replaceAll(\"\").replace(\"''\",\"'\");\n                            objectParams[i] = Encoder.hexDecode(val);\n                        }\n                    } else {\n                        throw new Exception(\"Unsupported Data Type: \" + paramType);\n                    }\n                }\n            }\n            if (procedure.equals(\"@UpdateApplicationCatalog\")) {\n                File catfile = null;\n                if (objectParams[0] != null) {\n                    catfile = new File((String)objectParams[0]);\n                }\n                File depfile = null;\n                if (objectParams[1] != null) {\n                    depfile = new File((String)objectParams[1]);\n                }\n                printResponse(VoltDB.updateApplicationCatalog(catfile, depfile));\n\n                // Need to update the stored procedures after a catalog change (could have added/removed SPs!).  ENG-3726\n                Procedures.clear();\n                loadSystemProcedures();\n                loadStoredProcedures(Procedures, Classlist);\n            }\n            else if (procedure.equals(\"@UpdateClasses\")) {\n                File jarfile = null;\n                if (objectParams[0] != null) {\n                    jarfile = new File((String)objectParams[0]);\n                }\n                printResponse(VoltDB.updateClasses(jarfile, (String)objectParams[1]));\n                // Need to reload the procedures and classes\n                Procedures.clear();\n                loadSystemProcedures();\n                loadStoredProcedures(Procedures, Classlist);\n            }\n            else {\n                printResponse(VoltDB.callProcedure(procedure, objectParams));\n            }\n        }\n        else if (ExplainCall.matcher(query).matches()) {\n            // We've got a query that starts with \"explain\", pre-pend\n            // the @Explain sp invocatino ahead of the query (after stripping \"explain\").\n            query = query.substring(\"explain \".length());\n            query = StripCRLF.matcher(query).replaceAll(\" \");\n            printResponse(VoltDB.callProcedure(\"@Explain\", query));\n        }\n        else if (ExplainProcCall.matcher(query).matches()) {\n            // We've got a query that starts with \"explainplan\", pre-pend\n            // the @ExplainPlan sp invocation ahead of the query (after stripping \"explainplan\").\n            query = query.substring(\"explainProc \".length());\n            query = StripCRLF.matcher(query).replaceAll(\" \");\n            printResponse(VoltDB.callProcedure(\"@ExplainProc\", query));\n        }\n        // Ad hoc query\n        else {\n            query = StripCRLF.matcher(query).replaceAll(\" \");\n            printResponse(VoltDB.callProcedure(\"@AdHoc\", query));\n            // if the query was DDL, reload the stored procedures.\n            if (SQLLexer.extractDDLToken(query) != null) {\n                Procedures.clear();\n                loadSystemProcedures();\n                loadStoredProcedures(Procedures, Classlist);\n            }\n        }\n        return;\n    }","commit_id":"b2e10000f966e1008a00877634049dcd2fb96d91","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private static void loadStoredProcedures(Map<String,Map<Integer, List<String>>> procedures,\n            Map<String, List<Boolean>> classlist)\n    {\n        VoltTable procs = null;\n        VoltTable params = null;\n        VoltTable classes = null;\n        try\n        {\n            procs = VoltDB.callProcedure(\"@SystemCatalog\", \"PROCEDURES\").getResults()[0];\n            params = VoltDB.callProcedure(\"@SystemCatalog\", \"PROCEDURECOLUMNS\").getResults()[0];\n            classes = VoltDB.callProcedure(\"@SystemCatalog\", \"CLASSES\").getResults()[0];\n        }\n        catch (NoConnectionsException e)\n        {\n            e.printStackTrace();\n            return;\n        }\n        catch (IOException e)\n        {\n            e.printStackTrace();\n            return;\n        }\n        catch (ProcCallException e)\n        {\n            e.printStackTrace();\n            return;\n        }\n        Map<String, Integer> proc_param_counts =\n            Collections.synchronizedMap(new HashMap<String, Integer>());\n        while (params.advanceRow())\n        {\n            String this_proc = params.getString(\"PROCEDURE_NAME\");\n            if (!proc_param_counts.containsKey(this_proc))\n            {\n                proc_param_counts.put(this_proc, 0);\n            }\n            int curr_val = proc_param_counts.get(this_proc);\n            proc_param_counts.put(this_proc, ++curr_val);\n        }\n        params.resetRowPosition();\n        while (procs.advanceRow())\n        {\n            String proc_name = procs.getString(\"PROCEDURE_NAME\");\n            ArrayList<String> this_params = new ArrayList<String>();\n            // prepopulate it to make sure the size is right\n            if (proc_param_counts.get(proc_name) != null)\n            {\n                for (int i = 0; i < proc_param_counts.get(procs.getString(\"PROCEDURE_NAME\")); i++) {\n                    this_params.add(null);\n                }\n            }\n            HashMap<Integer, List<String>> argLists = new HashMap<Integer, List<String>>();\n            if (proc_param_counts.containsKey(proc_name)) {\n                argLists.put(proc_param_counts.get(proc_name), this_params);\n            } else {\n                argLists.put(0, this_params);\n\n            }\n            procedures.put(procs.getString(\"PROCEDURE_NAME\"), argLists);\n        }\n        classlist.clear();\n        while (classes.advanceRow())\n        {\n            String classname = classes.getString(\"CLASS_NAME\");\n            boolean isProc = (classes.getLong(\"VOLT_PROCEDURE\") == 1L);\n            boolean isActive = (classes.getLong(\"ACTIVE_PROC\") == 1L);\n            if (!classlist.containsKey(classname)) {\n                List<Boolean> stuff = Collections.synchronizedList(new ArrayList<Boolean>());\n                stuff.add(isProc);\n                stuff.add(isActive);\n                classlist.put(classname, stuff);\n            }\n        }\n\n        // Retrieve the parameter types.  Note we have to do some special checking\n        // for array types.  ENG-3101\n        params.resetRowPosition();\n        while (params.advanceRow())\n        {\n            Map<Integer, List<String>> argLists = procedures.get(params.getString(\"PROCEDURE_NAME\"));\n            assert(argLists.size() == 1);\n            List<String> this_params = argLists.values().iterator().next();\n            int idx = (int)params.getLong(\"ORDINAL_POSITION\") - 1;\n            String param_type = params.getString(\"TYPE_NAME\").toLowerCase();\n            // Detect if this parameter is supposed to be an array.  It's kind of clunky, we have to\n            // look in the remarks column...\n            String param_remarks = params.getString(\"REMARKS\");\n            if (null != param_remarks)\n            {\n                param_type += (param_remarks.equalsIgnoreCase(\"ARRAY_PARAMETER\") ? \"_array\" : \"\");\n            }\n            this_params.set(idx, param_type);\n        }\n    }","id":63749,"modified_method":"private static void loadStoredProcedures(Map<String,Map<Integer, List<String>>> procedures,\n            Map<String, List<Boolean>> classlist)\n    {\n        VoltTable procs = null;\n        VoltTable params = null;\n        VoltTable classes = null;\n        try {\n            procs = VoltDB.callProcedure(\"@SystemCatalog\", \"PROCEDURES\").getResults()[0];\n            params = VoltDB.callProcedure(\"@SystemCatalog\", \"PROCEDURECOLUMNS\").getResults()[0];\n            classes = VoltDB.callProcedure(\"@SystemCatalog\", \"CLASSES\").getResults()[0];\n        }\n        catch (NoConnectionsException e) {\n            e.printStackTrace();\n            return;\n        }\n        catch (IOException e) {\n            e.printStackTrace();\n            return;\n        }\n        catch (ProcCallException e) {\n            e.printStackTrace();\n            return;\n        }\n        Map<String, Integer> proc_param_counts =\n            Collections.synchronizedMap(new HashMap<String, Integer>());\n        while (params.advanceRow()) {\n            String this_proc = params.getString(\"PROCEDURE_NAME\");\n            Integer curr_val = proc_param_counts.get(this_proc);\n            if (curr_val == null) {\n                curr_val = 0;\n            } else {\n                ++curr_val;\n            }\n            proc_param_counts.put(this_proc, curr_val);\n        }\n        params.resetRowPosition();\n        while (procs.advanceRow()) {\n            String proc_name = procs.getString(\"PROCEDURE_NAME\");\n            Integer param_count = proc_param_counts.get(proc_name);\n            ArrayList<String> this_params = new ArrayList<String>();\n            // prepopulate it to make sure the size is right\n            if (param_count != null) {\n                for (int i = 0; i < param_count; i++) {\n                    this_params.add(null);\n                }\n            }\n            else {\n                param_count = 0;\n            }\n            HashMap<Integer, List<String>> argLists = new HashMap<Integer, List<String>>();\n            argLists.put(param_count, this_params);\n            procedures.put(proc_name, argLists);\n        }\n        classlist.clear();\n        while (classes.advanceRow()) {\n            String classname = classes.getString(\"CLASS_NAME\");\n            boolean isProc = (classes.getLong(\"VOLT_PROCEDURE\") == 1L);\n            boolean isActive = (classes.getLong(\"ACTIVE_PROC\") == 1L);\n            if (!classlist.containsKey(classname)) {\n                List<Boolean> stuff = Collections.synchronizedList(new ArrayList<Boolean>());\n                stuff.add(isProc);\n                stuff.add(isActive);\n                classlist.put(classname, stuff);\n            }\n        }\n\n        // Retrieve the parameter types.  Note we have to do some special checking\n        // for array types.  ENG-3101\n        params.resetRowPosition();\n        while (params.advanceRow()) {\n            Map<Integer, List<String>> argLists = procedures.get(params.getString(\"PROCEDURE_NAME\"));\n            assert(argLists.size() == 1);\n            List<String> this_params = argLists.values().iterator().next();\n            int idx = (int)params.getLong(\"ORDINAL_POSITION\") - 1;\n            String param_type = params.getString(\"TYPE_NAME\").toLowerCase();\n            // Detect if this parameter is supposed to be an array.  It's kind of clunky, we have to\n            // look in the remarks column...\n            String param_remarks = params.getString(\"REMARKS\");\n            if (null != param_remarks) {\n                param_type += (param_remarks.equalsIgnoreCase(\"ARRAY_PARAMETER\") ? \"_array\" : \"\");\n            }\n            this_params.set(idx, param_type);\n        }\n    }","commit_id":"b2e10000f966e1008a00877634049dcd2fb96d91","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private static void printTables(final String name, final Collection<String> tables)\n    {\n        System.out.printf(\"\\n--- %s --------------------------------------------\\n\", name);\n        Iterator<String> list = tables.iterator();\n        while(list.hasNext()) {\n            System.out.println(list.next());\n        }\n        System.out.print(\"\\n\");\n    }","id":63750,"modified_method":"private static void printTables(final String name, final Collection<String> tables)\n    {\n        System.out.printf(\"\\n--- %s --------------------------------------------\\n\", name);\n        for (String table : tables) {\n            System.out.println(table);\n        }\n        System.out.print(\"\\n\");\n    }","commit_id":"b2e10000f966e1008a00877634049dcd2fb96d91","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static String readScriptFile(String filePath)\n    {\n        try\n        {\n            StringBuilder query = new StringBuilder();\n            BufferedReader script = new BufferedReader(new FileReader(filePath));\n            String line;\n            while ((line = script.readLine()) != null)\n            {\n                // Strip out RECALL, EXIT and GO commands\n                if (!(RecallToken.matcher(line).matches() || ExitToken.matcher(line).matches() || GoToken.matcher(line).matches()))\n                {\n                    // Recursively process FILE commands, any failure will cause a recursive failure\n                    if (FileToken.matcher(line).matches())\n                    {\n                        Matcher m = FileToken.matcher(line);\n                        if (m.find())\n                        {\n                            line = readScriptFile(m.group(1));\n                            if (line == null) {\n                                return null;\n                            }\n                            query.append(line);\n                            query.append(\"\\n\");\n                        }\n                        else\n                        {\n                            System.err.print(\"Invalid FILE command: '\" + line + \"'.\");\n                            return null;\n                        }\n                    }\n                    else\n                    {\n                        query.append(line);\n                        query.append(\"\\n\");\n                    }\n                }\n            }\n            script.close();\n            return query.toString().trim();\n        }\n        catch(FileNotFoundException e)\n        {\n            System.err.println(\"Script file '\" + filePath + \"' could not be found.\");\n            return null;\n        }\n        catch(Exception x)\n        {\n            System.err.println(x.getMessage());\n            return null;\n        }\n    }","id":63751,"modified_method":"public static String readScriptFile(String filePath)\n    {\n        BufferedReader script = null;\n        try {\n            StringBuilder query = new StringBuilder();\n            script = new BufferedReader(new FileReader(filePath));\n            String line;\n            while ((line = script.readLine()) != null) {\n                // Strip out RECALL, EXIT and GO commands\n                if (RecallToken.matcher(line).matches() ||\n                      ExitToken.matcher(line).matches() ||\n                      GoToken.matcher(line).matches()) {\n                    continue;\n                }\n                // Recursively process FILE commands, any failure will cause a recursive failure\n                Matcher m = FileToken.matcher(line);\n                if (m.matches()) {\n                    line = readScriptFile(m.group(1));\n                    if (line == null) {\n                        return null;\n                    }\n                }\n                query.append(line);\n                query.append(\"\\n\");\n            }\n            return query.toString().trim();\n        }\n        catch (FileNotFoundException e) {\n            System.err.println(\"Script file '\" + filePath + \"' could not be found.\");\n            return null;\n        }\n        catch (Exception x) {\n            System.err.println(x.getMessage());\n            return null;\n        }\n        finally {\n            if (script != null) {\n                try {\n                    script.close();\n                } catch (IOException e) { }\n            }\n        }\n    }","commit_id":"b2e10000f966e1008a00877634049dcd2fb96d91","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private static void openURL()\n    {\n        URL url;\n\n        try {\n            // Read the response from VoltDB\n            String a=\"http://community.voltdb.com/versioncheck?app=sqlcmd&ver=\" + org.voltdb.VoltDB.instance().getVersionString();\n            url = new URL(a);\n            URLConnection conn = url.openConnection();\n\n            // open the stream and put it into BufferedReader\n            BufferedReader br = new BufferedReader(\n                               new InputStreamReader(conn.getInputStream()));\n\n            String inputLine;\n            while ((inputLine = br.readLine()) != null) {\n                // At this time do nothing, just drain the stream.\n                // In the future we'll notify the user that a new version of VoltDB is available.\n            }\n            br.close();\n        } catch (Throwable e) {\n            // ignore any error\n        }\n    }","id":63752,"modified_method":"private static void openURL()\n    {\n        URL url;\n\n        try {\n            // Read the response from VoltDB\n            String a=\"http://community.voltdb.com/versioncheck?app=sqlcmd&ver=\" + org.voltdb.VoltDB.instance().getVersionString();\n            url = new URL(a);\n            URLConnection conn = url.openConnection();\n\n            // open the stream and put it into BufferedReader\n            BufferedReader br = new BufferedReader(\n                               new InputStreamReader(conn.getInputStream()));\n\n            while (br.readLine() != null) {\n                // At this time do nothing, just drain the stream.\n                // In the future we'll notify the user that a new version of VoltDB is available.\n            }\n            br.close();\n        } catch (Throwable e) {\n            // ignore any error\n        }\n    }","commit_id":"b2e10000f966e1008a00877634049dcd2fb96d91","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private static String preprocessParam(String param)\n    {\n        param = param.toUpperCase();\n        if (param.startsWith(\"'\") && param.endsWith(\"'\")) {\n            param = param.substring(1, param.length()-1);\n        }\n        if (param.charAt(0)=='\"' && param.charAt(param.length()-1)=='\"') {\n            param = param.substring(1, param.length()-1);\n        }\n        param = param.trim();\n        return param;\n    }","id":63753,"modified_method":"private static String preprocessParam(String param)\n    {\n        if ((param.charAt(0)=='\\'' && param.charAt(param.length()-1)=='\\'') ||\n                (param.charAt(0)=='\"' && param.charAt(param.length()-1)=='\"')) {\n            param = param.substring(1, param.length()-2);\n        }\n        param = param.trim();\n        param = param.toUpperCase();\n        return param;\n    }","commit_id":"b2e10000f966e1008a00877634049dcd2fb96d91","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static void main(String args[])\n    {\n        TimeZone.setDefault(TimeZone.getTimeZone(\"GMT+0\"));\n        boolean debug = false;\n        try\n        {\n            // Initialize parameter defaults\n            String serverList = \"localhost\";\n            int port = 21212;\n            String user = \"\";\n            String password = \"\";\n            String kerberos = \"\";\n            List<String> queries = null;\n\n            // Parse out parameters\n            for(int i = 0; i < args.length; i++)\n            {\n                String arg = args[i];\n                if (arg.startsWith(\"--servers=\")) {\n                    serverList = arg.split(\"=\")[1];\n                } else if (arg.startsWith(\"--port=\")) {\n                    port = Integer.valueOf(arg.split(\"=\")[1]);\n                } else if (arg.startsWith(\"--user=\")) {\n                    user = arg.split(\"=\")[1];\n                } else if (arg.startsWith(\"--password=\")) {\n                    password = arg.split(\"=\")[1];\n                } else if (arg.startsWith(\"--kerberos=\")) {\n                    kerberos = arg.split(\"=\")[1];\n                } else if (arg.startsWith(\"--kerberos\")) {\n                    kerberos = \"VoltDBClient\";\n                } else if (arg.startsWith(\"--query=\"))\n                {\n                    List<String> argQueries = parseQuery(arg.substring(8));\n                    if (!argQueries.isEmpty()) {\n                        if (queries == null)\n                        {\n                            queries = argQueries;\n                        }\n                        else\n                        {\n                            queries.addAll(argQueries);\n                        }\n                    }\n                }\n                else if (arg.startsWith(\"--output-format=\"))\n                {\n                    if (Pattern.compile(\"(fixed|csv|tab)\", Pattern.CASE_INSENSITIVE).matcher(arg.split(\"=\")[1].toLowerCase()).matches())\n                    {\n                        String formatName = arg.split(\"=\")[1].toLowerCase();\n                        if (formatName.equals(\"fixed\"))\n                        {\n                            m_outputFormatter = new SQLCommandOutputFormatterDefault();\n                        }\n                        else if (formatName.equals(\"csv\"))\n                        {\n                            m_outputFormatter = new SQLCommandOutputFormatterCSV();\n                        }\n                        else\n                        {\n                            m_outputFormatter = new SQLCommandOutputFormatterTabDelimited();\n                        }\n                    }\n                    else\n                    {\n                        printUsage(\"Invalid value for --output-format\");\n                    }\n                }\n                else if (arg.equals(\"--output-skip-metadata\")) {\n                    m_outputShowMetadata = false;\n                }\n                else if (arg.equals(\"--debug\")) {\n                    debug = true;\n                }\n                else if (arg.equals(\"--help\"))\n                {\n                    printHelp(System.out); // Print readme to the screen\n                    System.out.println(\"\\n\\n\");\n                    printUsage(0);\n                }\n                else if ((arg.equals(\"--usage\")) || (arg.equals(\"-?\"))) {\n                    printUsage(0);\n                }\n                else {\n                    printUsage(\"Invalid Parameter: \" + arg);\n                }\n            }\n\n            // Split server list\n            String[] servers = serverList.split(\",\");\n\n            // Phone home to see if there is a newer version of VoltDB\n            openURLAsync();\n\n            // Load system procedures\n            loadSystemProcedures();\n\n            // Don't ask... Java is such a crippled language!\n            DateParser.setLenient(true);\n\n            // Create connection\n            ClientConfig config = new ClientConfig(user, password);\n            config.setProcedureCallTimeout(0);  // Set procedure all to infinite timeout, see ENG-2670\n\n            // if specified enable kerberos\n            if (!kerberos.isEmpty()) {\n                config.enableKerberosAuthentication(kerberos);\n            }\n            VoltDB = getClient(config, servers, port);\n\n            // Load user stored procs\n            loadStoredProcedures(Procedures, Classlist);\n\n            in = new FileInputStream(FileDescriptor.in);\n            out = System.out;\n            lineInputReader = new SQLConsoleReader(in, out);\n\n            lineInputReader.setBellEnabled(false);\n\n            // Provide a custom completer.\n            Completer completer = new SQLCompleter(m_commandPrefixes);\n            lineInputReader.addCompleter(completer);\n\n            // Maintain persistent history in ~/.sqlcmd_history.\n            historyFile = new FileHistory(new File(System.getProperty(\"user.home\"), \".sqlcmd_history\"));\n            lineInputReader.setHistory(historyFile);\n\n            // Make Ctrl-D (EOF) exit if on an empty line, otherwise delete the next character.\n            KeyMap keyMap = lineInputReader.getKeys();\n            keyMap.bind(new Character(KeyMap.CTRL_D).toString(), new ActionListener() {\n                @Override\n                public void actionPerformed(ActionEvent e)\n                {\n                    CursorBuffer cursorBuffer = lineInputReader.getCursorBuffer();\n                    if (cursorBuffer.length() == 0) {\n                        System.exit(0);\n                    }\n                    else {\n                        try {\n                            lineInputReader.delete();\n                        }\n                        catch (IOException e1) {}\n                    }\n                }\n            });\n\n            // Removed code to prevent Ctrl-C from exiting. The original code is visible\n            // in Git history hash 837df236c059b5b4362ffca7e7a5426fba1b7f20.\n\n            boolean interactive = true;\n            if (queries != null && !queries.isEmpty())\n            {\n                // If queries are provided via command line options run them in\n                // non-interactive mode.\n                //TODO: Someday we should honor batching.\n                interactive = false;\n                for(int i = 0;i<queries.size();i++) {\n                    executeQuery(queries.get(i));\n                }\n            }\n            if (System.in.available() > 0)\n            {\n                // If Standard input comes loaded with data, run in non-interactive mode\n                interactive = false;\n                queries = getQuery(false);\n                if (queries == null) {\n                    System.exit(0);\n                } else {\n                    for(int i = 0;i<queries.size();i++) {\n                        executeQuery(queries.get(i));\n                    }\n                }\n            }\n            if (interactive)\n            {\n                // Print out welcome message\n                System.out.printf(\"SQL Command :: %s%s:%d\\n\", (user == \"\" ? \"\" : user + \"@\"), serverList, port);\n\n                while((queries = getQuery(true)) != null)\n                {\n                    try\n                    {\n                        for(int i = 0;i<queries.size();i++) {\n                            executeQuery(queries.get(i));\n                        }\n                    }\n                    catch(Exception x)\n                    {\n                        System.err.println(x.getMessage());\n                        if (debug) {\n                            x.printStackTrace(System.err);\n                        }\n                    }\n                }\n            }\n       }\n        catch (Exception e)\n        {\n            System.err.println(e.getMessage());\n            if (debug) {\n                e.printStackTrace(System.err);\n            }\n            System.exit(-1);\n        }\n        finally\n        {\n            try { VoltDB.close(); } catch(Exception _) {}\n            // Flush input history to a file.\n            if (historyFile != null) {\n                try {\n                    historyFile.flush();\n                }\n                catch (IOException e) {\n                    System.err.printf(\"* Unable to write history to \\\"%s\\\" *\\n\",\n                                      historyFile.getFile().getPath());\n                    e.printStackTrace();\n                }\n            }\n            // Clean up jline2 resources.\n            if (lineInputReader != null) {\n                lineInputReader.shutdown();\n            }\n        }\n    }","id":63754,"modified_method":"public static void main(String args[])\n    {\n        TimeZone.setDefault(TimeZone.getTimeZone(\"GMT+0\"));\n        boolean debug = false;\n        try {\n            // Initialize parameter defaults\n            String serverList = \"localhost\";\n            int port = 21212;\n            String user = \"\";\n            String password = \"\";\n            String kerberos = \"\";\n            List<String> queries = null;\n\n            // Parse out parameters\n            for (int i = 0; i < args.length; i++) {\n                String arg = args[i];\n                if (arg.startsWith(\"--servers=\")) {\n                    serverList = arg.split(\"=\")[1];\n                } else if (arg.startsWith(\"--port=\")) {\n                    port = Integer.valueOf(arg.split(\"=\")[1]);\n                } else if (arg.startsWith(\"--user=\")) {\n                    user = arg.split(\"=\")[1];\n                } else if (arg.startsWith(\"--password=\")) {\n                    password = arg.split(\"=\")[1];\n                } else if (arg.startsWith(\"--kerberos=\")) {\n                    kerberos = arg.split(\"=\")[1];\n                } else if (arg.startsWith(\"--kerberos\")) {\n                    kerberos = \"VoltDBClient\";\n                } else if (arg.startsWith(\"--query=\")) {\n                    List<String> argQueries = parseQuery(arg.substring(8));\n                    if (!argQueries.isEmpty()) {\n                        if (queries == null) {\n                            queries = argQueries;\n                        }\n                        else {\n                            queries.addAll(argQueries);\n                        }\n                    }\n                }\n                else if (arg.startsWith(\"--output-format=\")) {\n                    String formatName = arg.split(\"=\")[1].toLowerCase();\n                    if (formatName.equals(\"fixed\")) {\n                        m_outputFormatter = new SQLCommandOutputFormatterDefault();\n                    }\n                    else if (formatName.equals(\"csv\")) {\n                        m_outputFormatter = new SQLCommandOutputFormatterCSV();\n                    }\n                    else if (formatName.equals(\"tab\")) {\n                        m_outputFormatter = new SQLCommandOutputFormatterTabDelimited();\n                    }\n                    else {\n                        printUsage(\"Invalid value for --output-format\");\n                    }\n                }\n                else if (arg.equals(\"--output-skip-metadata\")) {\n                    m_outputShowMetadata = false;\n                }\n                else if (arg.equals(\"--debug\")) {\n                    debug = true;\n                }\n                else if (arg.equals(\"--help\")) {\n                    printHelp(System.out); // Print readme to the screen\n                    System.out.println(\"\\n\\n\");\n                    printUsage(0);\n                }\n                else if ((arg.equals(\"--usage\")) || (arg.equals(\"-?\"))) {\n                    printUsage(0);\n                }\n                else {\n                    printUsage(\"Invalid Parameter: \" + arg);\n                }\n            }\n\n            // Split server list\n            String[] servers = serverList.split(\",\");\n\n            // Phone home to see if there is a newer version of VoltDB\n            openURLAsync();\n\n            // Load system procedures\n            loadSystemProcedures();\n\n            // Don't ask... Java is such a crippled language!\n            DateParser.setLenient(true);\n\n            // Create connection\n            ClientConfig config = new ClientConfig(user, password);\n            config.setProcedureCallTimeout(0);  // Set procedure all to infinite timeout, see ENG-2670\n\n            // if specified enable kerberos\n            if (!kerberos.isEmpty()) {\n                config.enableKerberosAuthentication(kerberos);\n            }\n            VoltDB = getClient(config, servers, port);\n\n            // Load user stored procs\n            loadStoredProcedures(Procedures, Classlist);\n\n            in = new FileInputStream(FileDescriptor.in);\n            out = System.out;\n            lineInputReader = new SQLConsoleReader(in, out);\n\n            lineInputReader.setBellEnabled(false);\n\n            // Provide a custom completer.\n            Completer completer = new SQLCompleter(m_commandPrefixes);\n            lineInputReader.addCompleter(completer);\n\n            // Maintain persistent history in ~/.sqlcmd_history.\n            historyFile = new FileHistory(new File(System.getProperty(\"user.home\"), \".sqlcmd_history\"));\n            lineInputReader.setHistory(historyFile);\n\n            // Make Ctrl-D (EOF) exit if on an empty line, otherwise delete the next character.\n            KeyMap keyMap = lineInputReader.getKeys();\n            keyMap.bind(new Character(KeyMap.CTRL_D).toString(), new ActionListener() {\n                @Override\n                public void actionPerformed(ActionEvent e)\n                {\n                    CursorBuffer cursorBuffer = lineInputReader.getCursorBuffer();\n                    if (cursorBuffer.length() == 0) {\n                        System.exit(0);\n                    }\n                    else {\n                        try {\n                            lineInputReader.delete();\n                        }\n                        catch (IOException e1) {}\n                    }\n                }\n            });\n\n            // Removed code to prevent Ctrl-C from exiting. The original code is visible\n            // in Git history hash 837df236c059b5b4362ffca7e7a5426fba1b7f20.\n\n            boolean interactive = true;\n            if (queries != null && !queries.isEmpty()) {\n                // If queries are provided via command line options run them in\n                // non-interactive mode.\n                //TODO: Someday we should honor batching.\n                interactive = false;\n                for (String query : queries) {\n                    executeQuery(query);\n                }\n            }\n            if (System.in.available() > 0) {\n                // If Standard input comes loaded with data, run in non-interactive mode\n                interactive = false;\n                queries = getQuery(false);\n                if (queries == null) {\n                    System.exit(0);\n                } else {\n                    for (String query : queries) {\n                        executeQuery(query);\n                    }\n                }\n            }\n            if (interactive) {\n                // Print out welcome message\n                System.out.printf(\"SQL Command :: %s%s:%d\\n\", (user == \"\" ? \"\" : user + \"@\"), serverList, port);\n\n                while ((queries = getQuery(true)) != null) {\n                    try {\n                        for (String query : queries) {\n                            executeQuery(query);\n                        }\n                    }\n                    catch (Exception x) {\n                        System.err.println(x.getMessage());\n                        if (debug) {\n                            x.printStackTrace(System.err);\n                        }\n                    }\n                }\n            }\n        }\n        catch (Exception e) {\n            System.err.println(e.getMessage());\n            if (debug) {\n                e.printStackTrace(System.err);\n            }\n            System.exit(-1);\n        }\n        finally {\n            try { VoltDB.close(); } catch (Exception _) {}\n            // Flush input history to a file.\n            if (historyFile != null) {\n                try {\n                    historyFile.flush();\n                }\n                catch (IOException e) {\n                    System.err.printf(\"* Unable to write history to \\\"%s\\\" *\\n\",\n                                      historyFile.getFile().getPath());\n                    e.printStackTrace();\n                }\n            }\n            // Clean up jline2 resources.\n            if (lineInputReader != null) {\n                lineInputReader.shutdown();\n            }\n        }\n    }","commit_id":"b2e10000f966e1008a00877634049dcd2fb96d91","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static String bytesToHex(ByteBuffer bytes)\n    {\n        StringBuilder sb = new StringBuilder();\n        for (int i = bytes.position(); i < bytes.limit(); i++)\n        {\n            int bint = bytes.get(i) & 0xff;\n            if (bint <= 0xF)\n                // toHexString does not 0 pad its results.\n                sb.append(\"0\");\n            sb.append(Integer.toHexString(bint));\n        }\n        return sb.toString();\n    }","id":63755,"modified_method":"public static String bytesToHex(ByteBuffer bytes)\n    {\n        final int offset = bytes.position();\n        final int size = bytes.remaining();\n        final char[] c = new char[size * 2];\n        for (int i = 0; i < size; i++)\n        {\n            final int bint = bytes.get(i+offset);\n            c[i * 2] = FBUtilities.byteToChar[(bint & 0xf0) >> 4];\n            c[1 + i * 2] = FBUtilities.byteToChar[bint & 0x0f];\n        }\n        return FBUtilities.wrapCharArray(c);\n    }","commit_id":"a7595918ec46a5dfa24c216418596ab462356692","url":"https://github.com/apache/cassandra"},{"original_method":"@Test\n    public void testHexBytesConversion()\n    {\n        for (int i = Byte.MIN_VALUE; i <= Byte.MAX_VALUE; i++)\n        {\n            ByteBuffer bb = ByteBuffer.allocate(1);\n            bb.put((byte)i);\n            bb.clear();\n            String s = ByteBufferUtil.bytesToHex(bb);\n            ByteBuffer bb2 = ByteBufferUtil.hexToBytes(s);\n            assert bb.equals(bb2);\n        }\n    }","id":63756,"modified_method":"@Test\n    public void testHexBytesConversion()\n    {\n        for (int i = Byte.MIN_VALUE; i <= Byte.MAX_VALUE; i++)\n        {\n            ByteBuffer bb = ByteBuffer.allocate(1);\n            bb.put((byte) i);\n            bb.clear();\n            String s = ByteBufferUtil.bytesToHex(bb);\n            ByteBuffer bb2 = ByteBufferUtil.hexToBytes(s);\n            assertEquals(bb, bb2);\n        }\n        // check that non-zero buffer positions work,\n        // i.e. that conversion accounts for the buffer offset and limit correctly\n        ByteBuffer bb = ByteBuffer.allocate(4);\n        for (int i = 0; i < 4; i++)\n        {\n            bb.put((byte) i);\n        }\n        // use a chunk out of the middle of the buffer\n        bb.position(1);\n        bb.limit(3);\n        assertEquals(2, bb.remaining());\n        String s = ByteBufferUtil.bytesToHex(bb);\n        ByteBuffer bb2 = ByteBufferUtil.hexToBytes(s);\n        assertEquals(bb, bb2);\n        assertEquals(\"0102\", s);\n    }","commit_id":"a7595918ec46a5dfa24c216418596ab462356692","url":"https://github.com/apache/cassandra"},{"original_method":"public static String bytesToHex(byte... bytes)\n    {\n        StringBuilder sb = new StringBuilder();\n        for (byte b : bytes)\n        {\n            int bint = b & 0xff;\n            if (bint <= 0xF)\n                // toHexString does not 0 pad its results.\n                sb.append(\"0\");\n            sb.append(Integer.toHexString(bint));\n        }\n        return sb.toString();\n    }","id":63757,"modified_method":"public static String bytesToHex(byte... bytes)\n    {\n        char[] c = new char[bytes.length * 2];\n        for (int i = 0; i < bytes.length; i++)\n        {\n            int bint = bytes[i];\n            c[i * 2] = FBUtilities.byteToChar[(bint & 0xf0) >> 4];\n            c[1 + i * 2] = FBUtilities.byteToChar[bint & 0x0f];\n        }\n\n        return wrapCharArray(c);\n    }","commit_id":"a7595918ec46a5dfa24c216418596ab462356692","url":"https://github.com/apache/cassandra"},{"original_method":"public static byte[] hexToBytes(String str)\n    {\n        if (str.length() % 2 == 1)\n            str = \"0\" + str;\n        byte[] bytes = new byte[str.length()/2];\n        for (int i = 0; i < bytes.length; i++)\n        {\n            bytes[i] = (byte)Integer.parseInt(str.substring(i*2, i*2+2), 16);\n        }\n        return bytes;\n    }","id":63758,"modified_method":"public static byte[] hexToBytes(String str)\n    {\n        if (str.length() % 2 == 1)\n            str = \"0\" + str;\n        byte[] bytes = new byte[str.length()/2];\n        for (int i = 0; i < bytes.length; i++)\n        {\n            bytes[i] = (byte)((charToByte[str.charAt(i * 2)] << 4) | charToByte[str.charAt(i*2 + 1)]);\n        }\n        return bytes;\n    }","commit_id":"a7595918ec46a5dfa24c216418596ab462356692","url":"https://github.com/apache/cassandra"},{"original_method":"private int iterateByWritePagesSubRing(NavigableSet<PagedKey> subSet, int writePagesToFlush, int flushedWritePages,\n        boolean forceFlush) throws IOException {\n      Iterator<PagedKey> entriesIterator = subSet.iterator();\n      long currentTime = System.currentTimeMillis();\n\n      int flushedRegions = 0;\n\n      long lastPageIndex = -1;\n      while (entriesIterator.hasNext() && (flushedWritePages < writePagesToFlush || flushedRegions < 2)) {\n        PagedKey entry = entriesIterator.next();\n        Lock groupLock = lockManager.acquireExclusiveLock(entry);\n        try {\n          final PageGroup group = cachePages.get(entry);\n          if (group == null) {\n            entriesIterator.remove();\n            continue;\n          }\n\n          final boolean weakLockMode = group.creationTime - currentTime < groupTTL && !forceFlush;\n          if (group.recencyBit && weakLockMode)\n            group.recencyBit = false;\n          else {\n            group.recencyBit = false;\n\n            final OCachePointer pagePointer = group.page;\n\n            if (!pagePointer.tryAcquireSharedLock())\n              continue;\n\n            try {\n              flushPage(entry.fileId, entry.pageIndex, pagePointer.getDataPointer());\n\n              final OLogSequenceNumber flushedLSN = ODurablePage.getLogSequenceNumberFromPage(pagePointer.getDataPointer());\n              pagePointer.setLastFlushedLsn(flushedLSN);\n            } finally {\n              pagePointer.releaseSharedLock();\n            }\n\n            pagePointer.decrementWritersReferrer();\n            pagePointer.setWritersListener(null);\n\n            entriesIterator.remove();\n            cachePages.remove(entry);\n          }\n        } finally {\n          lockManager.releaseLock(groupLock);\n        }\n\n        lastPageKey = entry;\n        flushedWritePages++;\n\n        if (lastPageIndex >= 0 && lastPageIndex + 1 != entry.pageIndex)\n          flushedRegions++;\n\n        lastPageIndex = entry.pageIndex;\n\n        cacheSize.decrement();\n      }\n\n      return flushedWritePages;\n    }","id":63759,"modified_method":"private int iterateByWritePagesSubRing(NavigableSet<PagedKey> subSet, int writePagesToFlush, int flushedWritePages,\n        boolean forceFlush) throws IOException {\n      Iterator<PagedKey> entriesIterator = subSet.iterator();\n      long currentTime = System.currentTimeMillis();\n\n      int flushedRegions = 0;\n\n      long lastPageIndex = -1;\n      while (entriesIterator.hasNext()) {\n        PagedKey entry = entriesIterator.next();\n        if (lastPageIndex >= 0) {\n          if (entry.pageIndex != lastPageIndex + 1) {\n            flushedRegions++;\n          }\n        }\n\n        if (flushedWritePages > writePagesToFlush && flushedRegions >= 4)\n          break;\n\n        Lock groupLock = lockManager.acquireExclusiveLock(entry);\n        try {\n\n          PageGroup group = cachePages.get(entry);\n          if (group == null) {\n            entriesIterator.remove();\n            continue;\n          }\n\n          final boolean weakLockMode = group.creationTime - currentTime < groupTTL && !forceFlush;\n          if (group.recencyBit && weakLockMode)\n            group.recencyBit = false;\n          else {\n            group.recencyBit = false;\n\n            final OCachePointer pagePointer = group.page;\n\n            if (!pagePointer.tryAcquireSharedLock())\n              continue;\n\n            try {\n              flushPage(entry.fileId, entry.pageIndex, pagePointer.getDataPointer());\n\n              final OLogSequenceNumber flushedLSN = ODurablePage.getLogSequenceNumberFromPage(pagePointer.getDataPointer());\n              pagePointer.setLastFlushedLsn(flushedLSN);\n            } finally {\n              pagePointer.releaseSharedLock();\n            }\n\n            pagePointer.decrementWritersReferrer();\n            pagePointer.setWritersListener(null);\n\n            entriesIterator.remove();\n            cachePages.remove(entry);\n          }\n        } finally {\n          lockManager.releaseLock(groupLock);\n        }\n\n        lastWritePageKey = entry;\n        flushedWritePages++;\n\n        lastPageIndex = entry.pageIndex;\n\n        cacheSize.decrement();\n      }\n\n      return flushedWritePages;\n    }","commit_id":"af054336030644f9c1be9587c78e246f05935a8e","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n    public void run() {\n      try {\n        if (cachePages.isEmpty())\n          return;\n\n        int writePagesToFlush = 0;\n\n        final long wcs = writeCacheSize.get();\n        final long cs = cacheSize.get();\n\n        boolean iterateByWritePagesFirst = false;\n        boolean forceFlush = false;\n\n        double writeCacheThreshold = ((double) wcs) / writeCacheMaxSize;\n        if (writeCacheThreshold > 0.3) {\n          if (writeCacheThreshold > 0.7) {\n            writeCacheThreshold = 0.7;\n            forceFlush = true;\n          }\n\n          writePagesToFlush = (int) Math.floor(writeCacheThreshold * wcs);\n          iterateByWritePagesFirst = true;\n        }\n\n        double cacheThreshold = ((double) cs) / cacheMaxSize;\n        if (cacheThreshold > 0.3) {\n          if (cacheThreshold > 0.7) {\n            cacheThreshold = 0.7;\n            forceFlush = true;\n          }\n\n          final int pagesToFlush = (int) Math.floor((cacheThreshold - 0.7) * cs);\n          writePagesToFlush = Math.max(pagesToFlush, writePagesToFlush);\n        }\n\n        if (writePagesToFlush < 4)\n          writePagesToFlush = 4;\n\n        int flushedPages = 0;\n\n        flushedPages = flushRing(writePagesToFlush, flushedPages, false, iterateByWritePagesFirst);\n\n        if (flushedPages < writePagesToFlush && iterateByWritePagesFirst)\n          flushedPages = flushRing(writePagesToFlush, flushedPages, false, false);\n\n        if (flushedPages < writePagesToFlush && forceFlush) {\n          flushedPages = flushRing(writePagesToFlush, flushedPages, true, iterateByWritePagesFirst);\n\n          if (flushedPages < writePagesToFlush && iterateByWritePagesFirst)\n            flushedPages = flushRing(writePagesToFlush, flushedPages, true, false);\n        }\n\n      } catch (Exception e) {\n        OLogManager.instance().error(this, \"Exception during data flush.\", e);\n      }\n    }","id":63760,"modified_method":"@Override\n    public void run() {\n      try {\n        if (cachePages.isEmpty())\n          return;\n\n        int writePagesToFlush = 0;\n\n        final long wcs = writeCacheSize.get();\n        final long cs = cacheSize.get();\n\n        boolean iterateByWritePagesFirst = false;\n        boolean forceFlush = false;\n\n        double writeCacheThreshold = ((double) wcs) / writeCacheMaxSize;\n\n        if (writeCacheThreshold > 0.3) {\n          writePagesToFlush = (int) Math.floor(((writeCacheThreshold - 0.3) / 0.4) * MAX_PAGES_PER_FLUSH);\n          iterateByWritePagesFirst = true;\n\n          if (writeCacheThreshold > 0.7)\n            forceFlush = true;\n        }\n\n        double cacheThreshold = ((double) cs) / cacheMaxSize;\n        if (cacheThreshold > 0.3) {\n          final int pagesToFlush = (int) Math.floor(((cacheThreshold - 0.3) / 0.4) * MAX_PAGES_PER_FLUSH);\n\n          writePagesToFlush = Math.max(pagesToFlush, writePagesToFlush);\n          if (cacheThreshold > 0.7)\n            forceFlush = true;\n        }\n\n        writePagesToFlush = Math.max(4, Math.min(MAX_PAGES_PER_FLUSH, writePagesToFlush));\n\n        int flushedPages = 0;\n\n        flushedPages = flushRing(writePagesToFlush, flushedPages, false, iterateByWritePagesFirst);\n        if (flushedPages < writePagesToFlush) {\n          flushedPages = flushRing(writePagesToFlush, flushedPages, false, iterateByWritePagesFirst);\n        }\n\n        if (flushedPages < writePagesToFlush && iterateByWritePagesFirst) {\n          flushedPages = flushRing(writePagesToFlush, flushedPages, false, false);\n        }\n\n        if (flushedPages < writePagesToFlush && forceFlush) {\n          flushedPages = flushRing(writePagesToFlush, flushedPages, true, iterateByWritePagesFirst);\n\n\n          if (flushedPages < writePagesToFlush && iterateByWritePagesFirst) {\n            flushRing(writePagesToFlush, flushedPages, true, false);\n\n            if (flushedPages < writePagesToFlush) {\n              flushRing(writePagesToFlush, flushedPages, true, false);\n            }\n          }\n        }\n      } catch (Exception e) {\n        OLogManager.instance().error(this, \"Exception during data flush.\", e);\n      }\n    }","commit_id":"af054336030644f9c1be9587c78e246f05935a8e","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public OWOWCache(boolean syncOnPageFlush, int pageSize, long groupTTL, OWriteAheadLog writeAheadLog, long pageFlushInterval,\n      long writeCacheMaxSize, long cacheMaxSize, OLocalPaginatedStorage storageLocal, boolean checkMinSize, int id) {\n    filesLock.acquireWriteLock();\n    try {\n      this.id = id;\n      this.files = new ConcurrentHashMap<Integer, OFileClassic>();\n\n      this.syncOnPageFlush = syncOnPageFlush;\n      this.pageSize = pageSize;\n      this.groupTTL = groupTTL;\n      this.writeAheadLog = writeAheadLog;\n\n      int writeNormalizedSize = normalizeMemory(writeCacheMaxSize, pageSize);\n      if (checkMinSize && writeNormalizedSize < MIN_CACHE_SIZE)\n        writeNormalizedSize = MIN_CACHE_SIZE;\n\n      int normalizedSize = normalizeMemory(cacheMaxSize, pageSize);\n      if (checkMinSize && normalizedSize < MIN_CACHE_SIZE)\n        normalizedSize = MIN_CACHE_SIZE;\n\n      this.writeCacheMaxSize = writeNormalizedSize;\n      this.cacheMaxSize = normalizedSize;\n\n      this.storageLocal = storageLocal;\n\n      this.storagePath = storageLocal.getVariableParser().resolveVariables(storageLocal.getStoragePath());\n\n      final OBinarySerializerFactory binarySerializerFactory = storageLocal.getComponentsFactory().binarySerializerFactory;\n      this.stringSerializer = binarySerializerFactory.getObjectSerializer(OType.STRING);\n\n      commitExecutor = Executors.newSingleThreadScheduledExecutor(new FlushThreadFactory(storageLocal.getName()));\n      lowSpaceEventsPublisher = Executors.newCachedThreadPool(new LowSpaceEventsPublisherFactory(storageLocal.getName()));\n\n      if (pageFlushInterval > 0)\n        commitExecutor.scheduleWithFixedDelay(new PeriodicFlushTask(), pageFlushInterval, pageFlushInterval, TimeUnit.MILLISECONDS);\n\n    } finally {\n      filesLock.releaseWriteLock();\n    }\n  }","id":63761,"modified_method":"public OWOWCache(boolean syncOnPageFlush, int pageSize, long groupTTL, OWriteAheadLog writeAheadLog, long pageFlushInterval,\n      long writeCacheMaxSize, long cacheMaxSize, OLocalPaginatedStorage storageLocal, boolean checkMinSize, int id) {\n    filesLock.acquireWriteLock();\n    try {\n      this.id = id;\n      this.files = new ConcurrentHashMap<Integer, OFileClassic>();\n\n      this.syncOnPageFlush = syncOnPageFlush;\n      this.pageSize = pageSize;\n      this.groupTTL = groupTTL;\n      this.writeAheadLog = writeAheadLog;\n\n      int writeNormalizedSize = normalizeMemory(writeCacheMaxSize, pageSize);\n      if (checkMinSize && writeNormalizedSize < MIN_CACHE_SIZE)\n        writeNormalizedSize = MIN_CACHE_SIZE;\n\n      int normalizedSize = normalizeMemory(cacheMaxSize, pageSize);\n      if (checkMinSize && normalizedSize < MIN_CACHE_SIZE)\n        normalizedSize = MIN_CACHE_SIZE;\n\n      this.writeCacheMaxSize = writeNormalizedSize;\n      this.cacheMaxSize = normalizedSize;\n\n      this.storageLocal = storageLocal;\n\n      this.storagePath = storageLocal.getVariableParser().resolveVariables(storageLocal.getStoragePath());\n\n      final OBinarySerializerFactory binarySerializerFactory = storageLocal.getComponentsFactory().binarySerializerFactory;\n      this.stringSerializer = binarySerializerFactory.getObjectSerializer(OType.STRING);\n\n      commitExecutor = Executors.newSingleThreadScheduledExecutor(new FlushThreadFactory(storageLocal.getName()));\n      lowSpaceEventsPublisher = Executors.newCachedThreadPool(new LowSpaceEventsPublisherFactory(storageLocal.getName()));\n\n      MAX_PAGES_PER_FLUSH = (int) (4000 / (1000.0 / pageFlushInterval));\n\n      if (pageFlushInterval > 0)\n        commitExecutor.scheduleWithFixedDelay(new PeriodicFlushTask(), pageFlushInterval, pageFlushInterval, TimeUnit.MILLISECONDS);\n\n    } finally {\n      filesLock.releaseWriteLock();\n    }\n  }","commit_id":"af054336030644f9c1be9587c78e246f05935a8e","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"private int flushRing(int writePagesToFlush, int flushedPages, boolean forceFlush, boolean iterateByWritePagesFirst)\n        throws IOException {\n      NavigableMap<PagedKey, PageGroup> subMap = null;\n      NavigableSet<PagedKey> writePagesSubset = null;\n\n      if (iterateByWritePagesFirst) {\n        writePagesSubset = writePages.tailSet(lastPageKey, false);\n      } else {\n        subMap = cachePages.tailMap(lastPageKey, false);\n      }\n\n      flushedPages = iterateBySubRing(subMap, writePagesSubset, writePagesToFlush, flushedPages, forceFlush,\n          iterateByWritePagesFirst);\n\n      if (flushedPages < writePagesToFlush) {\n        flushedPages = iterateBySubRing(cachePages, writePages, writePagesToFlush, flushedPages, forceFlush,\n            iterateByWritePagesFirst);\n      }\n\n      return flushedPages;\n    }","id":63762,"modified_method":"private int flushRing(int writePagesToFlush, int flushedPages, boolean forceFlush, boolean iterateByWritePagesFirst)\n        throws IOException {\n\n      NavigableMap<PagedKey, PageGroup> subMap = null;\n      NavigableSet<PagedKey> writePagesSubset = null;\n\n      if (iterateByWritePagesFirst) {\n        writePagesSubset = writePages.tailSet(lastWritePageKey, false);\n      } else {\n        subMap = cachePages.tailMap(lastPageKey, false);\n      }\n\n      flushedPages = iterateBySubRing(subMap, writePagesSubset, writePagesToFlush, flushedPages, forceFlush,\n          iterateByWritePagesFirst);\n\n      if (flushedPages < writePagesToFlush) {\n        flushedPages = iterateBySubRing(cachePages, writePages, writePagesToFlush, flushedPages, forceFlush,\n            iterateByWritePagesFirst);\n      }\n\n      return flushedPages;\n    }","commit_id":"af054336030644f9c1be9587c78e246f05935a8e","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n    public Void call() throws Exception {\n      final PagedKey firstKey = new PagedKey(fileId, 0);\n      final PagedKey lastKey = new PagedKey(fileId, Long.MAX_VALUE);\n\n      NavigableMap<PagedKey, PageGroup> subMap = cachePages.subMap(firstKey, true, lastKey, true);\n      Iterator<Map.Entry<PagedKey, PageGroup>> entryIterator = subMap.entrySet().iterator();\n\n      while (entryIterator.hasNext()) {\n        Map.Entry<PagedKey, PageGroup> entry = entryIterator.next();\n        final PageGroup pageGroup = entry.getValue();\n        final PagedKey pagedKey = entry.getKey();\n\n        Lock groupLock = lockManager.acquireExclusiveLock(pagedKey);\n        try {\n\n          final OCachePointer pagePointer = pageGroup.page;\n\n          if (!pagePointer.tryAcquireSharedLock())\n            continue;\n\n          try {\n            flushPage(pagedKey.fileId, pagedKey.pageIndex, pagePointer.getDataPointer());\n          } finally {\n            pagePointer.releaseSharedLock();\n          }\n\n          pagePointer.decrementWritersReferrer();\n          pagePointer.setWritersListener(null);\n\n          cacheSize.decrement();\n          entryIterator.remove();\n        } finally {\n          lockManager.releaseLock(groupLock);\n        }\n      }\n\n      files.get(fileId).synch();\n      return null;\n    }","id":63763,"modified_method":"@Override\n    public Void call() throws Exception {\n      final PagedKey firstKey = new PagedKey(fileId, 0);\n      final PagedKey lastKey = new PagedKey(fileId, Long.MAX_VALUE);\n\n      flushRing(cachePages.subMap(firstKey, true, lastKey, true));\n\n      files.get(fileId).synch();\n      return null;\n    }","commit_id":"af054336030644f9c1be9587c78e246f05935a8e","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"private int iterateByCacheSubRing(NavigableMap<PagedKey, PageGroup> subMap, int writePagesToFlush, int flushedWritePages,\n        boolean forceFlush) throws IOException {\n      Iterator<Map.Entry<PagedKey, PageGroup>> entriesIterator = subMap.entrySet().iterator();\n      long currentTime = System.currentTimeMillis();\n\n      int flushedRegions = 0;\n\n      long lastPageIndex = -1;\n      while (entriesIterator.hasNext() && (flushedWritePages < writePagesToFlush || flushedRegions < 2)) {\n        Map.Entry<PagedKey, PageGroup> entry = entriesIterator.next();\n        final PageGroup group = entry.getValue();\n        final PagedKey pagedKey = entry.getKey();\n\n        final boolean weakLockMode = group.creationTime - currentTime < groupTTL && !forceFlush;\n        if (group.recencyBit && weakLockMode) {\n          group.recencyBit = false;\n          continue;\n        }\n\n        Lock groupLock = lockManager.acquireExclusiveLock(entry.getKey());\n        try {\n          if (group.recencyBit && weakLockMode)\n            group.recencyBit = false;\n          else {\n            group.recencyBit = false;\n\n            final OCachePointer pagePointer = group.page;\n\n            if (!pagePointer.tryAcquireSharedLock())\n              continue;\n\n            try {\n              flushPage(pagedKey.fileId, pagedKey.pageIndex, pagePointer.getDataPointer());\n\n              final OLogSequenceNumber flushedLSN = ODurablePage.getLogSequenceNumberFromPage(pagePointer.getDataPointer());\n              pagePointer.setLastFlushedLsn(flushedLSN);\n            } finally {\n              pagePointer.releaseSharedLock();\n            }\n\n            pagePointer.decrementWritersReferrer();\n            pagePointer.setWritersListener(null);\n\n            entriesIterator.remove();\n            writePages.remove(entry.getKey());\n          }\n        } finally {\n          lockManager.releaseLock(groupLock);\n        }\n\n        lastPageKey = pagedKey;\n        flushedWritePages++;\n\n        if (lastPageIndex >= 0 && lastPageIndex + 1 != pagedKey.pageIndex)\n          flushedRegions++;\n\n        lastPageIndex = pagedKey.pageIndex;\n\n        cacheSize.decrement();\n      }\n\n      return flushedWritePages;\n    }","id":63764,"modified_method":"private int iterateByCacheSubRing(NavigableMap<PagedKey, PageGroup> subMap, int writePagesToFlush, int flushedWritePages,\n        boolean forceFlush) throws IOException {\n      Iterator<Map.Entry<PagedKey, PageGroup>> entriesIterator = subMap.entrySet().iterator();\n      long currentTime = System.currentTimeMillis();\n\n      int flushedRegions = 0;\n\n      long lastPageIndex = -1;\n      while (entriesIterator.hasNext()) {\n        Map.Entry<PagedKey, PageGroup> entry = entriesIterator.next();\n\n        final PageGroup group = entry.getValue();\n        final PagedKey pagedKey = entry.getKey();\n\n        if (lastPageIndex >= 0) {\n          if (pagedKey.pageIndex != lastPageIndex + 1) {\n            flushedRegions++;\n\n            if (flushedWritePages > writePagesToFlush && flushedRegions >= 4)\n              break;\n          }\n        }\n\n        final boolean weakLockMode = group.creationTime - currentTime < groupTTL && !forceFlush;\n        if (group.recencyBit && weakLockMode) {\n          group.recencyBit = false;\n          continue;\n        }\n\n        Lock groupLock = lockManager.acquireExclusiveLock(entry.getKey());\n        try {\n          if (group.recencyBit && weakLockMode)\n            group.recencyBit = false;\n          else {\n            group.recencyBit = false;\n\n            final OCachePointer pagePointer = group.page;\n\n            if (!pagePointer.tryAcquireSharedLock())\n              continue;\n\n            try {\n              flushPage(pagedKey.fileId, pagedKey.pageIndex, pagePointer.getDataPointer());\n\n              final OLogSequenceNumber flushedLSN = ODurablePage.getLogSequenceNumberFromPage(pagePointer.getDataPointer());\n              pagePointer.setLastFlushedLsn(flushedLSN);\n            } finally {\n              pagePointer.releaseSharedLock();\n            }\n\n            pagePointer.decrementWritersReferrer();\n            pagePointer.setWritersListener(null);\n\n            entriesIterator.remove();\n          }\n        } finally {\n          lockManager.releaseLock(groupLock);\n        }\n\n        lastPageKey = pagedKey;\n\n        flushedWritePages++;\n        lastPageIndex = pagedKey.pageIndex;\n\n        cacheSize.decrement();\n      }\n\n      return flushedWritePages;\n    }","commit_id":"af054336030644f9c1be9587c78e246f05935a8e","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public OCachePointer load(long fileId, long pageIndex, boolean addNewPages) throws IOException {\n    final int intId = extractFileId(fileId);\n\n    filesLock.acquireReadLock();\n    try {\n      final PagedKey pagedKey = new PagedKey(intId, pageIndex);\n      Lock groupLock = lockManager.acquireSharedLock(pagedKey);\n      try {\n        final PageGroup pageGroup = cachePages.get(pagedKey);\n\n        OCachePointer pagePointer;\n        if (pageGroup == null) {\n          pagePointer = cacheFileContent(fileId, intId, pageIndex, addNewPages);\n          if (pagePointer == null)\n            return null;\n\n          pagePointer.incrementReadersReferrer();\n          return pagePointer;\n        }\n\n        pagePointer = pageGroup.page;\n        pagePointer.incrementReadersReferrer();\n        return pagePointer;\n      } finally {\n        lockManager.releaseLock(groupLock);\n      }\n    } finally {\n      filesLock.releaseReadLock();\n    }\n  }","id":63765,"modified_method":"public OCachePointer load(long fileId, long pageIndex, boolean addNewPages) throws IOException {\n    final int intId = extractFileId(fileId);\n\n    filesLock.acquireReadLock();\n    try {\n      final PagedKey pagedKey = new PagedKey(intId, pageIndex);\n      Lock groupLock = lockManager.acquireSharedLock(pagedKey);\n      try {\n        PageGroup pageGroup = cachePages.get(pagedKey);\n\n        OCachePointer pagePointer;\n        if (pageGroup == null) {\n          pagePointer = cacheFileContent(fileId, intId, pageIndex, addNewPages);\n          if (pagePointer == null)\n            return null;\n\n          pagePointer.incrementReadersReferrer();\n          return pagePointer;\n        }\n\n        pagePointer = pageGroup.page;\n        pagePointer.incrementReadersReferrer();\n        return pagePointer;\n      } finally {\n        lockManager.releaseLock(groupLock);\n      }\n    } finally {\n      filesLock.releaseReadLock();\n    }\n  }","commit_id":"af054336030644f9c1be9587c78e246f05935a8e","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n    public Void call() throws Exception {\n      final PagedKey firstKey = new PagedKey(fileId, 0);\n      final PagedKey lastKey = new PagedKey(fileId, Long.MAX_VALUE);\n\n      NavigableMap<PagedKey, PageGroup> subMap = cachePages.subMap(firstKey, true, lastKey, true);\n      Iterator<Map.Entry<PagedKey, PageGroup>> entryIterator = subMap.entrySet().iterator();\n\n      while (entryIterator.hasNext()) {\n        Map.Entry<PagedKey, PageGroup> entry = entryIterator.next();\n        PageGroup pageGroup = entry.getValue();\n        PagedKey pagedKey = entry.getKey();\n\n        Lock groupLock = lockManager.acquireExclusiveLock(pagedKey);\n        try {\n          final OCachePointer pagePointer = pageGroup.page;\n          pagePointer.acquireExclusiveLock();\n          try {\n            pagePointer.decrementWritersReferrer();\n            pagePointer.setWritersListener(null);\n            cacheSize.decrement();\n          } finally {\n            pagePointer.releaseExclusiveLock();\n          }\n\n          entryIterator.remove();\n        } finally {\n          lockManager.releaseLock(groupLock);\n        }\n      }\n\n      return null;\n    }","id":63766,"modified_method":"@Override\n    public Void call() throws Exception {\n      final PagedKey firstKey = new PagedKey(fileId, 0);\n      final PagedKey lastKey = new PagedKey(fileId, Long.MAX_VALUE);\n\n      removeFromRing(cachePages.subMap(firstKey, true, lastKey, true));\n\n      return null;\n    }","commit_id":"af054336030644f9c1be9587c78e246f05935a8e","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n    public void run() {\n      OLogSequenceNumber minLsn = writeAheadLog.getFlushedLSN();\n\n      for (Map.Entry<PagedKey, PageGroup> entry : cachePages.entrySet()) {\n        Lock groupLock = lockManager.acquireExclusiveLock(entry.getKey());\n        try {\n          PageGroup group = entry.getValue();\n          final OCachePointer pagePointer = group.page;\n          if (pagePointer.getLastFlushedLsn() != null) {\n            if (minLsn.compareTo(pagePointer.getLastFlushedLsn()) > 0) {\n              minLsn = pagePointer.getLastFlushedLsn();\n            }\n          }\n        } finally {\n          lockManager.releaseLock(groupLock);\n        }\n      }\n\n      OLogManager.instance().debug(this, \"Start fuzzy checkpoint flushed LSN is %s\", minLsn);\n      try {\n        writeAheadLog.logFuzzyCheckPointStart(minLsn);\n        for (OFileClassic fileClassic : files.values()) {\n          fileClassic.synch();\n        }\n        writeAheadLog.logFuzzyCheckPointEnd();\n        writeAheadLog.flush();\n\n        if (minLsn.compareTo(new OLogSequenceNumber(-1, -1)) > 0)\n          writeAheadLog.cutTill(minLsn);\n      } catch (IOException ioe) {\n        OLogManager.instance().error(this, \"Error during fuzzy checkpoint\", ioe);\n      }\n\n      OLogManager.instance().debug(this, \"End fuzzy checkpoint\");\n    }","id":63767,"modified_method":"@Override\n    public void run() {\n      OLogSequenceNumber minLsn = writeAheadLog.getFlushedLSN();\n\n      minLsn = findMinLsn(minLsn, cachePages);\n\n      OLogManager.instance().debug(this, \"Start fuzzy checkpoint flushed LSN is %s\", minLsn);\n      try {\n        writeAheadLog.logFuzzyCheckPointStart(minLsn);\n        for (OFileClassic fileClassic : files.values()) {\n          fileClassic.synch();\n        }\n        writeAheadLog.logFuzzyCheckPointEnd();\n        writeAheadLog.flush();\n\n        if (minLsn.compareTo(new OLogSequenceNumber(-1, -1)) > 0)\n          writeAheadLog.cutTill(minLsn);\n      } catch (IOException ioe) {\n        OLogManager.instance().error(this, \"Error during fuzzy checkpoint\", ioe);\n      }\n\n      OLogManager.instance().debug(this, \"End fuzzy checkpoint\");\n    }","commit_id":"af054336030644f9c1be9587c78e246f05935a8e","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"/**\n   * Sets up the in-memory operation executor and the data fabric\n   */\n  @BeforeClass\n  public static void setupDataFabric() {\n    // use Guice to inject an in-memory opex\n    final Injector injector =\n      // Guice.createInjector(new DataFabricModules().getInMemoryModules());\n      Guice.createInjector(new DataFabricLocalModule(\"jdbc:hsqldb:mem:membenchdb\", null));\n    opex = injector.getInstance(OperationExecutor.class);\n    // and create a data fabric with the default operation context\n    fabric = new DataFabricImpl(opex, OperationUtil.DEFAULT);\n  }","id":63768,"modified_method":"/**\n   * Sets up the in-memory operation executor and the data fabric\n   */\n  @BeforeClass\n  public static void setupDataFabric() {\n    // use Guice to inject an in-memory opex\n    final Injector injector =\n      Guice.createInjector(new DataFabricModules().getInMemoryModules());\n      // Guice.createInjector(new DataFabricLocalModule(\"jdbc:hsqldb:mem:membenchdb\", null));\n    opex = injector.getInstance(OperationExecutor.class);\n    // and create a data fabric with the default operation context\n    fabric = new DataFabricImpl(opex, OperationUtil.DEFAULT);\n  }","commit_id":"8311954c81a09cb58bd5fc508a15264ce59ea8ac","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public Scanner scan(ReadPointer readPointer) {\n    return new MemoryScanner(this.map.entrySet().iterator(), readPointer);\n  }","id":63769,"modified_method":"@Override\n  public Scanner scan(ReadPointer readPointer) {\n    return scan(null, null, null, readPointer);\n  }","commit_id":"8311954c81a09cb58bd5fc508a15264ce59ea8ac","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public Scanner scan(byte[] startRow, byte[] stopRow, byte[][] columns, ReadPointer readPointer) {\n    return new MemoryScanner(this.map.subMap(new RowLockTable.Row(startRow), new RowLockTable.Row(stopRow)).entrySet().iterator(), columns, readPointer);\n  }","id":63770,"modified_method":"@Override\n  public Scanner scan(byte[] startRow, byte[] stopRow, byte[][] columns, ReadPointer readPointer) {\n    ConcurrentNavigableMap<RowLockTable.Row, NavigableMap<Column, NavigableMap<Version, Value>>> submap;\n    if (startRow != null) {\n      if (stopRow != null) {\n        submap = this.map.subMap(new RowLockTable.Row(startRow), new RowLockTable.Row(stopRow));\n      } else {\n        submap = this.map.tailMap(new RowLockTable.Row(startRow));\n      }\n    } else {\n      if (stopRow != null) {\n        submap = this.map.headMap(new RowLockTable.Row(stopRow));\n      } else {\n        submap = this.map;\n      }\n    }\n    return new MemoryScanner(submap.entrySet().iterator(), columns, readPointer);\n  }","commit_id":"8311954c81a09cb58bd5fc508a15264ce59ea8ac","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public Scanner scan(byte[] startRow, byte[] stopRow, ReadPointer readPointer) {\n    return new MemoryScanner(this.map.subMap(new RowLockTable.Row(startRow), new RowLockTable.Row(stopRow)).entrySet\n      ().iterator(), readPointer);\n  }","id":63771,"modified_method":"@Override\n  public Scanner scan(byte[] startRow, byte[] stopRow, ReadPointer readPointer) {\n    return scan(startRow, stopRow, null, readPointer);\n  }","commit_id":"8311954c81a09cb58bd5fc508a15264ce59ea8ac","url":"https://github.com/caskdata/cdap"},{"original_method":"@BeforeClass\n  public static void configure() throws Exception {\n    DataSet kv = new Table(\"test\");\n    DataSet t1 = new Table(\"t1\");\n    DataSet t2 = new Table(\"t2\");\n    DataSet t3 = new Table(\"t3\");\n    DataSet t4 = new Table(\"t4\");\n    setupInstantiator(Lists.newArrayList(kv, t1, t2, t3, t4));\n    table = instantiator.getDataSet(\"test\");\n  }","id":63772,"modified_method":"@BeforeClass\n  public static void configure() throws Exception {\n    DataSet kv = new Table(\"test\");\n    DataSet t1 = new Table(\"t1\");\n    DataSet t2 = new Table(\"t2\");\n    DataSet t3 = new Table(\"t3\");\n    DataSet t4 = new Table(\"t4\");\n    DataSet tBatch = new Table(\"tBatch\");\n    setupInstantiator(Lists.newArrayList(kv, t1, t2, t3, t4, tBatch));\n    table = instantiator.getDataSet(\"test\");\n  }","commit_id":"8311954c81a09cb58bd5fc508a15264ce59ea8ac","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void doApply(@NotNull Editor editor, @NotNull PySmartEnterProcessor processor, @NotNull PyFunction function)\n    throws IncorrectOperationException {\n    final PsiElement colon = PyPsiUtils.getFirstChildOfType(function, PyTokenTypes.COLON);\n    if (!isFakeFunction(function) && colon == null) {\n      final PyParameterList parameterList = function.getParameterList();\n      if (function.getNameNode() == null) {\n        processor.registerUnresolvedError(parameterList.getTextOffset());\n      }\n      editor.getDocument().insertString(parameterList.getTextRange().getEndOffset(), \":\");\n    }\n  }","id":63773,"modified_method":"@Override\n  public void doApply(@NotNull Editor editor, @NotNull PySmartEnterProcessor processor, @NotNull PyFunction function)\n    throws IncorrectOperationException {\n    final PsiElement colon = PyPsiUtils.getFirstChildOfType(function, PyTokenTypes.COLON);\n    if (!isFakeFunction(function) && colon == null) {\n      final PyParameterList parameterList = function.getParameterList();\n      if (function.getNameNode() == null) {\n        processor.registerUnresolvedError(parameterList.getTextOffset());\n      }\n      final int colonOffset;\n      final PyAnnotation annotation = function.getAnnotation();\n      if (annotation != null) {\n        colonOffset = annotation.getTextRange().getEndOffset();\n      }\n      else {\n        colonOffset = parameterList.getTextRange().getEndOffset();\n      }\n      editor.getDocument().insertString(colonOffset, \":\");\n    }\n  }","commit_id":"9b49498808adf21df9dd4b76e6b11915514e6e72","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testGoogleDocStringIndentAfterSection() {\n    runWithDocStringFormat(DocStringFormat.GOOGLE, new Runnable() {\n      public void run() {\n        doTest();\n      }\n    });\n  }","id":63774,"modified_method":"public void testGoogleDocStringIndentAfterSection() {\n    runWithDocStringFormat(DocStringFormat.GOOGLE, this::doTest);\n  }","commit_id":"9b49498808adf21df9dd4b76e6b11915514e6e72","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected static List<SmartEnterProcessor> getSmartProcessors(Language language) {\n    return SmartEnterProcessors.INSTANCE.forKey(language);\n  }","id":63775,"modified_method":"private static List<SmartEnterProcessor> getSmartProcessors(Language language) {\n    return SmartEnterProcessors.INSTANCE.forKey(language);\n  }","commit_id":"9b49498808adf21df9dd4b76e6b11915514e6e72","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testGoogleDocStringColonAndIndentAfterSection() {\n    runWithDocStringFormat(DocStringFormat.GOOGLE, new Runnable() {\n      public void run() {\n        doTest();\n      }\n    });\n  }","id":63776,"modified_method":"public void testGoogleDocStringColonAndIndentAfterSection() {\n    runWithDocStringFormat(DocStringFormat.GOOGLE, this::doTest);\n  }","commit_id":"9b49498808adf21df9dd4b76e6b11915514e6e72","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testGoogleDocStringIndentAfterSectionCustomIndent() {\n    getIndentOptions().INDENT_SIZE = 2;\n    runWithDocStringFormat(DocStringFormat.GOOGLE, new Runnable() {\n      public void run() {\n        doTest();\n      }\n    });\n  }","id":63777,"modified_method":"public void testGoogleDocStringIndentAfterSectionCustomIndent() {\n    getIndentOptions().INDENT_SIZE = 2;\n    runWithDocStringFormat(DocStringFormat.GOOGLE, this::doTest);\n  }","commit_id":"9b49498808adf21df9dd4b76e6b11915514e6e72","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void removeUnusedNodes(MPSTreeNode root) {\n    List<MPSTreeNode> children = ListSequence.fromListWithValues(new ArrayList<MPSTreeNode>(), root);\n    for (MPSTreeNode n : ListSequence.fromList(children)) {\n      DependencyTreeNode node = as_9bg0dz_a0a0a1a7(n, DependencyTreeNode.class);\n      if (node != null && !(node.isUsed())) {\n        node.removeFromParent();\n      } else {\n        removeUnusedNodes(n);\n      }\n    }\n  }","id":63778,"modified_method":"private void removeUnusedNodes(MPSTreeNode root) {\n    List<MPSTreeNode> children = ListSequence.fromListWithValues(new ArrayList<MPSTreeNode>(), root);\n    for (MPSTreeNode n : ListSequence.fromList(children)) {\n      DependencyTreeNode node = as_9bg0dz_a0a0a1a8(n, DependencyTreeNode.class);\n      if (node != null && !(node.isUsed())) {\n        node.removeFromParent();\n      } else {\n        removeUnusedNodes(n);\n      }\n    }\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static <T> T as_9bg0dz_a0a1a0a8(Object o, Class<T> type) {\n    return (type.isInstance(o) ?\n      (T) o :\n      null\n    );\n  }","id":63779,"modified_method":"private static <T> T as_9bg0dz_a0a0a1a8(Object o, Class<T> type) {\n    return (type.isInstance(o) ?\n      (T) o :\n      null\n    );\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static IModule check_9bg0dz_a1a4a21(DependencyTreeNode checkedDotOperand) {\n    if (null != checkedDotOperand) {\n      return checkedDotOperand.getModule();\n    }\n    return null;\n  }","id":63780,"modified_method":"private static IModule check_9bg0dz_a1a4a31(DependencyTreeNode checkedDotOperand) {\n    if (null != checkedDotOperand) {\n      return checkedDotOperand.getModule();\n    }\n    return null;\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void setUsed(DependencyTreeNode node, final Map<DependencyTreeNode, List<DependencyTreeNode>> backDeps) {\n    if (node != null && !(node.isUsed())) {\n      node.setUsed();\n      setUsed(as_9bg0dz_a0a1a0a8(node.getParent(), DependencyTreeNode.class), backDeps);\n      ListSequence.fromList(MapSequence.fromMap(backDeps).get(node)).visitAll(new IVisitor<DependencyTreeNode>() {\n        public void visit(DependencyTreeNode it) {\n          setUsed(it, backDeps);\n        }\n      });\n    }\n  }","id":63781,"modified_method":"public void setUsed(DependencyTreeNode node, final Map<DependencyTreeNode, List<DependencyTreeNode>> backDeps) {\n    if (node != null && !(node.isUsed())) {\n      node.setUsed();\n      setUsed(as_9bg0dz_a0a1a0a9(node.getParent(), DependencyTreeNode.class), backDeps);\n      ListSequence.fromList(MapSequence.fromMap(backDeps).get(node)).visitAll(new IVisitor<DependencyTreeNode>() {\n        public void visit(DependencyTreeNode it) {\n          setUsed(it, backDeps);\n        }\n      });\n    }\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static <T> T as_9bg0dz_a0a0a21(Object o, Class<T> type) {\n    return (type.isInstance(o) ?\n      (T) o :\n      null\n    );\n  }","id":63782,"modified_method":"private static <T> T as_9bg0dz_a0a0a31(Object o, Class<T> type) {\n    return (type.isInstance(o) ?\n      (T) o :\n      null\n    );\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static <T> T as_9bg0dz_a0a0a1a7(Object o, Class<T> type) {\n    return (type.isInstance(o) ?\n      (T) o :\n      null\n    );\n  }","id":63783,"modified_method":"private static <T> T as_9bg0dz_a0a1a0a9(Object o, Class<T> type) {\n    return (type.isInstance(o) ?\n      (T) o :\n      null\n    );\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static <T> T as_9bg0dz_a0a0a4a21(Object o, Class<T> type) {\n    return (type.isInstance(o) ?\n      (T) o :\n      null\n    );\n  }","id":63784,"modified_method":"private static <T> T as_9bg0dz_a0a0a4a31(Object o, Class<T> type) {\n    return (type.isInstance(o) ?\n      (T) o :\n      null\n    );\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"private MPSTreeNode buildTree(IModule from, Set<IModule> dependency, Set<IModule> usedlanguage) {\n    Set<DependencyPathTree.Link> vis = SetSequence.fromSet(new HashSet<DependencyPathTree.Link>());\n    Map<Tuples._2<IModule, DependencyPathTree.Role>, DependencyTreeNode> visited = MapSequence.fromMap(new HashMap<Tuples._2<IModule, DependencyPathTree.Role>, DependencyTreeNode>());\n    Queue<DependencyTreeNode> unprocessed = QueueSequence.fromQueue(new LinkedList<DependencyTreeNode>());\n\n    Map<DependencyTreeNode, List<DependencyTreeNode>> backDeps = MapSequence.fromMap(new HashMap<DependencyTreeNode, List<DependencyTreeNode>>());\n\n    DependencyTreeNode root = new DependencyTreeNode(new DependencyPathTree.Link(from, DependencyPathTree.Role.None, null), \"\", null);\n    QueueSequence.fromQueue(unprocessed).addLastElement(root);\n\n    while (QueueSequence.fromQueue(unprocessed).isNotEmpty()) {\n      DependencyTreeNode node = QueueSequence.fromQueue(unprocessed).removeFirstElement();\n      if (node.getLink().role == DependencyPathTree.Role.UsedLanguage && SetSequence.fromSet(usedlanguage).contains(node.getLink().module) || (node.getLink().role == DependencyPathTree.Role.DTDependency_ || node.getLink().role == DependencyPathTree.Role.RTDependency) && SetSequence.fromSet(dependency).contains(node.getLink().module)) {\n        node.setLeaf();\n        // mark as used \n        setUsed(node, backDeps);\n        while (node != null && !(node.isUsed())) {\n          // todo: move shortest branch up \n          node.setUsed();\n        }\n      } else if (MapSequence.fromMap(visited).containsKey(MultiTuple.<IModule,DependencyPathTree.Role>from(node.getLink().module, node.getLink().role))) {\n        if (!(isShowAll())) {\n          continue;\n        }\n        DependencyTreeNode n = MapSequence.fromMap(visited).get(MultiTuple.<IModule,DependencyPathTree.Role>from(node.getLink().module, node.getLink().role));\n        if (!(MapSequence.fromMap(backDeps).containsKey(n))) {\n          MapSequence.fromMap(backDeps).put(n, ListSequence.fromList(new ArrayList<DependencyTreeNode>()));\n        }\n        node.setLinkLeaf(n);\n        ListSequence.fromList(MapSequence.fromMap(backDeps).get(n)).addElement(node);\n        if (n.isUsed()) {\n          setUsed(node, backDeps);\n        }\n      } else {\n        MapSequence.fromMap(visited).put(MultiTuple.<IModule,DependencyPathTree.Role>from(node.getLink().module, node.getLink().role), node);\n        for (DependencyPathTree.Link link : ListSequence.fromList(dependencies(node.getLink().role, node.getLink().module, isShowRuntime()))) {\n          DependencyTreeNode n = new DependencyTreeNode(link, link.linktype.toString(), null);\n          node.add(n);\n          QueueSequence.fromQueue(unprocessed).addLastElement(n);\n        }\n      }\n    }\n\n    return root;\n  }","id":63785,"modified_method":"private MPSTreeNode buildTree(IModule from, Set<IModule> dependency, Set<IModule> usedlanguage) {\n    Set<DependencyUtil.Link> vis = SetSequence.fromSet(new HashSet<DependencyUtil.Link>());\n    Map<Tuples._2<IModule, DependencyUtil.Role>, DependencyTreeNode> visited = MapSequence.fromMap(new HashMap<Tuples._2<IModule, DependencyUtil.Role>, DependencyTreeNode>());\n    Queue<DependencyTreeNode> unprocessed = QueueSequence.fromQueue(new LinkedList<DependencyTreeNode>());\n\n    Map<DependencyTreeNode, List<DependencyTreeNode>> backDeps = MapSequence.fromMap(new HashMap<DependencyTreeNode, List<DependencyTreeNode>>());\n\n    DependencyTreeNode root = new DependencyTreeNode(new DependencyUtil.Link(from, DependencyUtil.Role.None, null), null);\n    if (myCycles != null && SetSequence.fromSet(myCycles).contains(MultiTuple.<DependencyUtil.Role,IModule>from(DependencyUtil.Role.None, from))) {\n      root.setCyclic();\n    }\n    QueueSequence.fromQueue(unprocessed).addLastElement(root);\n\n    while (QueueSequence.fromQueue(unprocessed).isNotEmpty()) {\n      DependencyTreeNode node = QueueSequence.fromQueue(unprocessed).removeFirstElement();\n      if (node.getLink().role == DependencyUtil.Role.UsedLanguage && SetSequence.fromSet(usedlanguage).contains(node.getLink().module) || (node.getLink().role == DependencyUtil.Role.DTDependency_ || node.getLink().role == DependencyUtil.Role.RTDependency) && SetSequence.fromSet(dependency).contains(node.getLink().module)) {\n        setUsed(node, backDeps);\n        if (myCycles == null) {\n          node.setLeaf();\n          continue;\n        }\n      }\n      // <node> \n      if (MapSequence.fromMap(visited).containsKey(MultiTuple.<IModule,DependencyUtil.Role>from(node.getLink().module, node.getLink().role))) {\n        if (!(isShowAll() || myCycles != null)) {\n          continue;\n        }\n        DependencyTreeNode n = MapSequence.fromMap(visited).get(MultiTuple.<IModule,DependencyUtil.Role>from(node.getLink().module, node.getLink().role));\n        if (isShowAll() && !(MapSequence.fromMap(backDeps).containsKey(n))) {\n          MapSequence.fromMap(backDeps).put(n, ListSequence.fromList(new ArrayList<DependencyTreeNode>()));\n        }\n        node.setLinkLeaf(n);\n        ListSequence.fromList(MapSequence.fromMap(backDeps).get(n)).addElement(node);\n        if (n.isUsed()) {\n          setUsed(node, backDeps);\n        }\n      } else {\n        MapSequence.fromMap(visited).put(MultiTuple.<IModule,DependencyUtil.Role>from(node.getLink().module, node.getLink().role), node);\n        DependencyUtil.dependencies(node.getLink().role, node.getLink().module, isShowRuntime());\n        for (DependencyUtil.Link link : ListSequence.fromList(DependencyUtil.dependencies(node.getLink().role, node.getLink().module, isShowRuntime()))) {\n          DependencyTreeNode n = new DependencyTreeNode(link, null);\n          if (myCycles != null && SetSequence.fromSet(myCycles).contains(MultiTuple.<DependencyUtil.Role,IModule>from(link.role, link.module))) {\n            n.setCyclic();\n            setUsed(node, backDeps);\n          }\n          node.add(n);\n          QueueSequence.fromQueue(unprocessed).addLastElement(n);\n        }\n      }\n\n      // <node> \n    }\n\n    return root;\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Nullable\n  public Object getData(@NonNls String id) {\n    DependencyTreeNode current = as_9bg0dz_a0a0a21(getCurrentNode(), DependencyTreeNode.class);\n    if (current == null) {\n      return null;\n    }\n    if (id.equals(MPSDataKeys.OPERATION_CONTEXT.getName())) {\n      return current.getOperationContext();\n    }\n    if (id.equals(MPSDataKeys.MODULE.getName())) {\n      return current.getModule();\n    }\n    if (id.equals(MPSDataKeys.CONTEXT_MODULE.getName()) && current.getLink().linktype == DependencyPathTree.LinkType.Depends) {\n      DependencyTreeNode node = as_9bg0dz_a0a0a4a21(current.getParent(), DependencyTreeNode.class);\n      return check_9bg0dz_a1a4a21(node);\n    }\n    return null;\n  }","id":63786,"modified_method":"@Nullable\n  public Object getData(@NonNls String id) {\n    DependencyTreeNode current = as_9bg0dz_a0a0a31(getCurrentNode(), DependencyTreeNode.class);\n    if (current == null) {\n      return null;\n    }\n    if (id.equals(MPSDataKeys.OPERATION_CONTEXT.getName())) {\n      return current.getOperationContext();\n    }\n    if (id.equals(MPSDataKeys.MODULE.getName())) {\n      return current.getModule();\n    }\n    if (id.equals(MPSDataKeys.CONTEXT_MODULE.getName()) && current.getLink().linktype == DependencyUtil.LinkType.Depends) {\n      DependencyTreeNode node = as_9bg0dz_a0a0a4a31(current.getParent(), DependencyTreeNode.class);\n      return check_9bg0dz_a1a4a31(node);\n    }\n    return null;\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected JPopupMenu createPopupMenu(MPSTreeNode treeNode) {\n    TreePath[] selection = getSelectionPaths();\n    if (selection != null && selection.length > 1) {\n      return null;\n    }\n    ModuleDependencyNode current = as_he3vmc_a0a2a7(getCurrentNode(), ModuleDependencyNode.class);\n    if (current == null || ListSequence.fromList(current.getModules()).count() != 1) {\n      return null;\n    }\n\n    DefaultActionGroup group = ActionUtils.groupFromActions(((BaseAction) ActionManager.getInstance().getAction(\"jetbrains.mps.ide.actions.ModuleProperties_Action\")));\n    return ActionManager.getInstance().createActionPopupMenu(ActionPlaces.UNKNOWN, group).getComponent();\n  }","id":63787,"modified_method":"@Override\n  protected JPopupMenu createPopupMenu(MPSTreeNode treeNode) {\n    TreePath[] selection = getSelectionPaths();\n    if (selection != null && selection.length > 1) {\n      return null;\n    }\n    ModuleDependencyNode current = as_he3vmc_a0a2a9(getCurrentNode(), ModuleDependencyNode.class);\n    if (current == null || ListSequence.fromList(current.getModules()).count() != 1) {\n      return null;\n    }\n\n    DefaultActionGroup group = ActionUtils.groupFromActions(((BaseAction) ActionManager.getInstance().getAction(\"jetbrains.mps.ide.actions.ModuleProperties_Action\")));\n    return ActionManager.getInstance().createActionPopupMenu(ActionPlaces.UNKNOWN, group).getComponent();\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Nullable\n  public Object getData(@NonNls String id) {\n    TreePath[] selection = getSelectionPaths();\n    if (selection != null && selection.length > 1) {\n      return null;\n    }\n    ModuleDependencyNode current = as_he3vmc_a0a2a8(getCurrentNode(), ModuleDependencyNode.class);\n    if (current == null) {\n      return null;\n    }\n\n    if (id.equals(MPSDataKeys.OPERATION_CONTEXT.getName())) {\n      return current.getOperationContext();\n    }\n    if (id.equals(MPSDataKeys.MODULE.getName())) {\n      return ListSequence.fromList(current.getModules()).first();\n    }\n    return null;\n  }","id":63788,"modified_method":"@Nullable\n  public Object getData(@NonNls String id) {\n    TreePath[] selection = getSelectionPaths();\n    if (selection != null && selection.length > 1) {\n      return null;\n    }\n    ModuleDependencyNode current = as_he3vmc_a0a2a01(getCurrentNode(), ModuleDependencyNode.class);\n    if (current == null) {\n      return null;\n    }\n\n    if (id.equals(MPSDataKeys.OPERATION_CONTEXT.getName())) {\n      return current.getOperationContext();\n    }\n    if (id.equals(MPSDataKeys.MODULE.getName())) {\n      return ListSequence.fromList(current.getModules()).first();\n    }\n    return null;\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected MPSTreeNode rebuild() {\n    if (myModules == null || ListSequence.fromList(myModules).isEmpty()) {\n      return new TextMPSTreeNode(\"No Content\", null);\n    }\n    MPSTreeNode root = new ModuleDependencyNode(myModules, null);\n    expandRoot();\n    return root;\n  }","id":63789,"modified_method":"protected MPSTreeNode rebuild() {\n    if (myModules == null || ListSequence.fromList(myModules).isEmpty()) {\n      return new TextMPSTreeNode(\"No Content\", null);\n    }\n    ModuleDependencyNode root = new ModuleDependencyNode(myModules, null);\n    if (myCycles != null && SetSequence.fromSet(myCycles).select(new ISelector<Tuples._2<DependencyUtil.Role, IModule>, IModule>() {\n      public IModule select(Tuples._2<DependencyUtil.Role, IModule> it) {\n        return it._1();\n      }\n    }).intersect(ListSequence.fromList(myModules)).isNotEmpty()) {\n      root.setCyclic();\n    }\n    expandRoot();\n    return root;\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static <T> T as_he3vmc_a0a2a7(Object o, Class<T> type) {\n    return (type.isInstance(o) ?\n      (T) o :\n      null\n    );\n  }","id":63790,"modified_method":"private static <T> T as_he3vmc_a0a2a9(Object o, Class<T> type) {\n    return (type.isInstance(o) ?\n      (T) o :\n      null\n    );\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static <T> T as_he3vmc_a0a2a8(Object o, Class<T> type) {\n    return (type.isInstance(o) ?\n      (T) o :\n      null\n    );\n  }","id":63791,"modified_method":"private static <T> T as_he3vmc_a0a2a01(Object o, Class<T> type) {\n    return (type.isInstance(o) ?\n      (T) o :\n      null\n    );\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doUpdatePresentation() {\n    super.doUpdatePresentation();\n    if (myColor != null) {\n      setColor(myColor);\n    }\n  }","id":63792,"modified_method":"public void doUpdatePresentation() {\n    super.doUpdatePresentation();\n    if (myIsCyclic) {\n      setColor(Color.RED);\n    }\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static IModule check_akkfj9_a0a1(DependencyPathTree.Link checkedDotOperand) {\n    if (null != checkedDotOperand) {\n      return checkedDotOperand.module;\n    }\n    return null;\n  }","id":63793,"modified_method":"private static IModule check_akkfj9_a0a1(DependencyUtil.Link checkedDotOperand) {\n    if (null != checkedDotOperand) {\n      return checkedDotOperand.module;\n    }\n    return null;\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public DependencyTreeNode(DependencyPathTree.Link link, String role, IOperationContext operationContext) {\n    super(link, operationContext);\n    myLink = link;\n    setIcon(IconManager.getIconFor(getModule()));\n    String ss = (link.linktype == null ?\n      \"\" :\n      link.linktype.toString() + \" \"\n    );\n    setNodeIdentifier(ss + link.module.getModuleFqName());\n    setText(\"<html>\" + \"<i>\" + ss + \"<\/i>\" + link.module.getModuleFqName() + \"<\/html>\");\n  }","id":63794,"modified_method":"public DependencyTreeNode(DependencyUtil.Link link, IOperationContext operationContext) {\n    super(link, operationContext);\n    myLink = link;\n    setIcon(IconManager.getIconFor(getModule()));\n    String linktype = (link.linktype == null ?\n      \"\" :\n      \"<i>\" + link.linktype.toString() + \"<\/i> \"\n    );\n    setNodeIdentifier(link.linktype + link.module.getModuleFqName());\n    setText(\"<html>\" + linktype + link.module.getModuleFqName() + \"<\/html>\");\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void setLinkLeaf(DependencyTreeNode linkedNode) {\n    myIsLeaf = true;\n    myLinkedNode = linkedNode;\n    String ss = (myLink.linktype == null ?\n      \"\" :\n      myLink.linktype.toString() + \" \"\n    );\n    setText(\"<html>\" + \"<i>\" + ss + \"<\/i>\" + myLink.module.getModuleFqName() + \"... <b>--><\/b><\/html>\");\n  }","id":63795,"modified_method":"public void setLinkLeaf(DependencyTreeNode linkedNode) {\n    myIsLeaf = true;\n    myLinkedNode = linkedNode;\n    String linktype = (myLink.linktype == null ?\n      \"\" :\n      \"<i>\" + myLink.linktype.toString() + \"<\/i> \"\n    );\n    setText(\"<html>\" + linktype + myLink.module.getModuleFqName() + \"... <b>--><\/b><\/html>\");\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doubleClick() {\n    if (myLinkedNode == null) {\n      ProjectPane.getInstance(check_akkfj9_a0a0a0a7(((DependencyPathTree) getTree()), this)).selectModule(getModule(), false);\n    } else {\n      getTree().selectNode(myLinkedNode);\n    }\n  }","id":63796,"modified_method":"public void doubleClick() {\n    if (myLinkedNode == null) {\n      ProjectPane.getInstance(check_akkfj9_a0a0a0a8(((DependencyPathTree) getTree()), this)).selectModule(getModule(), false);\n    } else {\n      getTree().selectNode(myLinkedNode);\n    }\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public DependencyPathTree.Link getLink() {\n    return myLink;\n  }","id":63797,"modified_method":"public DependencyUtil.Link getLink() {\n    return myLink;\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static Project check_akkfj9_a0a0a0a7(DependencyPathTree checkedDotOperand, DependencyTreeNode checkedDotThisExpression) {\n    if (null != checkedDotOperand) {\n      return checkedDotOperand.getProject();\n    }\n    return null;\n  }","id":63798,"modified_method":"private static Project check_akkfj9_a0a0a0a8(DependencyPathTree checkedDotOperand, DependencyTreeNode checkedDotThisExpression) {\n    if (null != checkedDotOperand) {\n      return checkedDotOperand.getProject();\n    }\n    return null;\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void setLeaf() {\n    myIsLeaf = true;\n    String ss = (myLink.linktype == null ?\n      \"\" :\n      myLink.linktype.toString() + \" \"\n    );\n    setText(\"<html>\" + \"<i>\" + ss + \"<\/i><b>\" + myLink.module.getModuleFqName() + \"<\/b><\/html>\");\n  }","id":63799,"modified_method":"public void setLeaf() {\n    myIsLeaf = true;\n    String linktype = (myLink.linktype == null ?\n      \"\" :\n      \"<i>\" + myLink.linktype.toString() + \"<\/i> \"\n    );\n    setText(\"<html>\" + linktype + \"<b>\" + myLink.module.getModuleFqName() + \"<\/b><\/html>\");\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void setShowCycles(boolean b) {\n  }","id":63800,"modified_method":"public void setShowCycles(boolean b) {\n    if (b) {\n      calcCycles();\n    } else {\n      myCycles = null;\n    }\n    myLeftTree.setCycles(myCycles);\n    myLeftTree.rebuildLater();\n    myRightTree.rebuildLater();\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void setModules(List<IModule> modules) {\n    myLeftTree.setModules(modules);\n    myLeftTree.rebuildLater();\n    myRightTree.resetDependencies();\n    myRightTree.rebuildLater();\n  }","id":63801,"modified_method":"public void setModules(List<IModule> modules) {\n    myModules = modules;\n    setShowCycles(myCycles != null);\n    myLeftTree.setModules(modules);\n    myLeftTree.rebuildLater();\n    resetDependencies();\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void resetAll() {\n    myLeftTree.rebuildLater();\n    myRightTree.resetDependencies();\n  }","id":63802,"modified_method":"public void resetAll() {\n    if (myCycles != null) {\n      calcCycles();\n    }\n    myLeftTree.setCycles(myCycles);\n    myLeftTree.rebuildLater();\n    resetDependencies();\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void resetDependencies() {\n    myRightTree.resetDependencies();\n\n    Map<List<IModule>, List<IModule>> dependencies = MapSequence.fromMap(new HashMap<List<IModule>, List<IModule>>());\n    Map<List<IModule>, List<IModule>> usedlanguages = MapSequence.fromMap(new HashMap<List<IModule>, List<IModule>>());\n\n    TreePath[] paths = myLeftTree.getSelectionPaths();\n    if (paths != null) {\n      for (TreePath path : paths) {\n        MPSTreeNode node = (MPSTreeNode) path.getLastPathComponent();\n        if (node instanceof ModuleDependencyNode) {\n          ModuleDependencyNode n = (ModuleDependencyNode) node;\n          List<IModule> from = check_jxc64t_a0b0b0a0g0b(n.getFromNode());\n          if (from != null) {\n            Map<List<IModule>, List<IModule>> collection = (n.isUsedLanguage() ?\n              usedlanguages :\n              dependencies\n            );\n            if (!(MapSequence.fromMap(collection).containsKey(from))) {\n              MapSequence.fromMap(collection).put(from, ListSequence.fromList(new ArrayList<IModule>()));\n            }\n            ListSequence.fromList(MapSequence.fromMap(collection).get(from)).addSequence(ListSequence.fromList(n.getModules()));\n          }\n        }\n      }\n    }\n    for (List<IModule> key : SetSequence.fromSet(MapSequence.fromMap(dependencies).keySet()).union(SetSequence.fromSet(MapSequence.fromMap(usedlanguages).keySet()))) {\n      myRightTree.addDependency(key, MapSequence.fromMap(dependencies).get(key), MapSequence.fromMap(usedlanguages).get(key));\n    }\n    myRightTree.rebuildLater();\n  }","id":63803,"modified_method":"public void resetDependencies() {\n    myRightTree.resetDependencies();\n\n    Map<List<IModule>, List<IModule>> dependencies = MapSequence.fromMap(new HashMap<List<IModule>, List<IModule>>());\n    Map<List<IModule>, List<IModule>> usedlanguages = MapSequence.fromMap(new HashMap<List<IModule>, List<IModule>>());\n\n    TreePath[] paths = myLeftTree.getSelectionPaths();\n    if (paths != null) {\n      for (TreePath path : paths) {\n        MPSTreeNode node = (MPSTreeNode) path.getLastPathComponent();\n        if (node instanceof ModuleDependencyNode) {\n          ModuleDependencyNode n = (ModuleDependencyNode) node;\n          List<IModule> from = check_jxc64t_a0b0b0a0g0b(n.getFromNode());\n          if (from != null) {\n            Map<List<IModule>, List<IModule>> collection = (n.isUsedLanguage() ?\n              usedlanguages :\n              dependencies\n            );\n            if (!(MapSequence.fromMap(collection).containsKey(from))) {\n              MapSequence.fromMap(collection).put(from, ListSequence.fromList(new ArrayList<IModule>()));\n            }\n            ListSequence.fromList(MapSequence.fromMap(collection).get(from)).addSequence(ListSequence.fromList(n.getModules()));\n          }\n        }\n      }\n    }\n    for (List<IModule> key : SetSequence.fromSet(MapSequence.fromMap(dependencies).keySet()).union(SetSequence.fromSet(MapSequence.fromMap(usedlanguages).keySet()))) {\n      myRightTree.addDependency(key, MapSequence.fromMap(dependencies).get(key), MapSequence.fromMap(usedlanguages).get(key));\n    }\n    myRightTree.setCycles(myCycles);\n    myRightTree.rebuildLater();\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected void doInit() {\n    Set<IModule> reqModules = SetSequence.fromSet(new HashSet<IModule>());\n    Set<IModule> rtModules = SetSequence.fromSet(new HashSet<IModule>());\n    Set<Language> usedLanguages = SetSequence.fromSet(new HashSet<Language>());\n\n    for (IModule module : ListSequence.fromList(myModules)) {\n      DependenciesManager depManager = module.getDependenciesManager();\n      SetSequence.fromSet(reqModules).addSequence(SetSequence.fromSet(depManager.getAllVisibleModules()));\n      SetSequence.fromSet(rtModules).addSequence(SetSequence.fromSet(depManager.getAllRequiredModules()));\n      SetSequence.fromSet(usedLanguages).addSequence(SetSequence.fromSet(depManager.getAllUsedLanguages()));\n    }\n\n    DependencyTree tree = (DependencyTree) getTree();\n\n    Set<IModule> allModules = (tree.isShowRuntime() ?\n      rtModules :\n      reqModules\n    );\n    for (IModule m : SetSequence.fromSet(allModules).sort(new ISelector<IModule, Comparable<?>>() {\n      public Comparable<?> select(IModule it) {\n        return it.getModuleFqName();\n      }\n    }, true)) {\n      add(new ModuleDependencyNode(m, false, !(SetSequence.fromSet(reqModules).contains(m)), getOperationContext()));\n    }\n\n    if (tree.isShowUsedLanguage()) {\n      MPSTreeNode usedlanguages = new TextMPSTreeNode(\"Used languages\", getOperationContext());\n      for (Language l : SetSequence.fromSet(usedLanguages).sort(new ISelector<Language, Comparable<?>>() {\n        public Comparable<?> select(Language it) {\n          return it.getModuleFqName();\n        }\n      }, true)) {\n        usedlanguages.add(new ModuleDependencyNode(l, true, false, getOperationContext()));\n      }\n      add(usedlanguages);\n    }\n    myInitialized = true;\n  }","id":63804,"modified_method":"protected void doInit() {\n    Set<IModule> reqModules = SetSequence.fromSet(new HashSet<IModule>());\n    Set<IModule> rtModules = SetSequence.fromSet(new HashSet<IModule>());\n    Set<Language> usedLanguages = SetSequence.fromSet(new HashSet<Language>());\n\n    DependencyTree tree = (DependencyTree) getTree();\n\n    for (IModule module : ListSequence.fromList(myModules)) {\n      DependenciesManager depManager = module.getDependenciesManager();\n      SetSequence.fromSet(reqModules).addSequence(SetSequence.fromSet(depManager.getAllVisibleModules()));\n      SetSequence.fromSet(rtModules).addSequence(SetSequence.fromSet(depManager.getAllRequiredModules()));\n      SetSequence.fromSet(usedLanguages).addSequence(SetSequence.fromSet(depManager.getAllUsedLanguages()));\n    }\n\n    Set<IModule> depLoops = SetSequence.fromSet(new HashSet<IModule>());\n    Set<IModule> langLoops = SetSequence.fromSet(new HashSet<IModule>());\n    if (tree.getCycles() != null) {\n      SetSequence.fromSet(depLoops).addSequence(SetSequence.fromSet(tree.getCycles()).where(new IWhereFilter<Tuples._2<DependencyUtil.Role, IModule>>() {\n        public boolean accept(Tuples._2<DependencyUtil.Role, IModule> it) {\n          return it._0() == DependencyUtil.Role.DTDependency_ || it._0() == DependencyUtil.Role.RTDependency || it._0() == DependencyUtil.Role.None;\n        }\n      }).select(new ISelector<Tuples._2<DependencyUtil.Role, IModule>, IModule>() {\n        public IModule select(Tuples._2<DependencyUtil.Role, IModule> it) {\n          return it._1();\n        }\n      }));\n      SetSequence.fromSet(langLoops).addSequence(SetSequence.fromSet(tree.getCycles()).where(new IWhereFilter<Tuples._2<DependencyUtil.Role, IModule>>() {\n        public boolean accept(Tuples._2<DependencyUtil.Role, IModule> it) {\n          return it._0() == DependencyUtil.Role.UsedLanguage || it._0() == DependencyUtil.Role.None;\n        }\n      }).select(new ISelector<Tuples._2<DependencyUtil.Role, IModule>, IModule>() {\n        public IModule select(Tuples._2<DependencyUtil.Role, IModule> it) {\n          return it._1();\n        }\n      }));\n    }\n\n    Set<IModule> allModules = (tree.isShowRuntime() ?\n      rtModules :\n      reqModules\n    );\n    for (IModule m : SetSequence.fromSet(allModules).sort(new ISelector<IModule, Comparable<?>>() {\n      public Comparable<?> select(IModule it) {\n        return it.getModuleFqName();\n      }\n    }, true)) {\n      add(new ModuleDependencyNode(m, false, !(SetSequence.fromSet(reqModules).contains(m)), SetSequence.fromSet(depLoops).contains(m), getOperationContext()));\n    }\n\n    if (tree.isShowUsedLanguage()) {\n      MPSTreeNode usedlanguages = new TextMPSTreeNode(\"Used languages\", getOperationContext());\n      for (Language l : SetSequence.fromSet(usedLanguages).sort(new ISelector<Language, Comparable<?>>() {\n        public Comparable<?> select(Language it) {\n          return it.getModuleFqName();\n        }\n      }, true)) {\n        usedlanguages.add(new ModuleDependencyNode(l, true, false, SetSequence.fromSet(langLoops).contains(l), getOperationContext()));\n      }\n      add(usedlanguages);\n    }\n    myInitialized = true;\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static Project check_lba8jw_a0a0a0a5(DependencyTree checkedDotOperand, ModuleDependencyNode checkedDotThisExpression) {\n    if (null != checkedDotOperand) {\n      return checkedDotOperand.getProject();\n    }\n    return null;\n  }","id":63805,"modified_method":"private static Project check_lba8jw_a0a0a0a6(DependencyTree checkedDotOperand, ModuleDependencyNode checkedDotThisExpression) {\n    if (null != checkedDotOperand) {\n      return checkedDotOperand.getProject();\n    }\n    return null;\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doubleClick() {\n    if ((int) ListSequence.fromList(myModules).count() == 1) {\n      ProjectPane.getInstance(check_lba8jw_a0a0a0a5(((DependencyTree) getTree()), this)).selectModule(ListSequence.fromList(myModules).first(), false);\n    }\n  }","id":63806,"modified_method":"public void doubleClick() {\n    if ((int) ListSequence.fromList(myModules).count() == 1) {\n      ProjectPane.getInstance(check_lba8jw_a0a0a0a6(((DependencyTree) getTree()), this)).selectModule(ListSequence.fromList(myModules).first(), false);\n    }\n  }","commit_id":"3c78ce40a4303a0cbe81ab0fd2e22daabf3952d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public KVMStoragePool createStoragePool(String name, String host, int port,\n                                            String path, String userInfo, StoragePoolType type) {\n        StoragePool sp = null;\n        Connect conn = null;\n        try {\n            conn = LibvirtConnection.getConnection();\n        } catch (LibvirtException e) {\n            throw new CloudRuntimeException(e.toString());\n        }\n\n        try {\n            sp = conn.storagePoolLookupByUUIDString(name);\n            if (sp.getInfo().state != StoragePoolState.VIR_STORAGE_POOL_RUNNING) {\n                sp.undefine();\n                sp = null;\n            }\n        } catch (LibvirtException e) {\n\n        }\n\n        if (sp == null) {\n            if (type == StoragePoolType.NetworkFilesystem) {\n                sp = createNfsStoragePool(conn, name, host, path);\n            } else if (type == StoragePoolType.SharedMountPoint\n                    || type == StoragePoolType.Filesystem) {\n                sp = CreateSharedStoragePool(conn, name, host, path);\n            } else if (type == StoragePoolType.RBD) {\n                sp = createRBDStoragePool(conn, name, host, port, userInfo, path);\n            }\n        }\n\n        try {\n            StoragePoolInfo spi = sp.getInfo();\n            if (spi.state != StoragePoolState.VIR_STORAGE_POOL_RUNNING) {\n                sp.create(0);\n            }\n\n            LibvirtStoragePoolDef spd = getStoragePoolDef(conn, sp);\n            LibvirtStoragePool pool = new LibvirtStoragePool(name,\n                    sp.getName(), type, this, sp);\n\n            if (pool.getType() != StoragePoolType.RBD) {\n                pool.setLocalPath(spd.getTargetPath());\n            } else {\n                pool.setLocalPath(\"\");\n            }\n\n            if (pool.getType() == StoragePoolType.RBD) {\n                pool.setCapacity(sp.getInfo().capacity);\n                pool.setUsed(sp.getInfo().allocation);\n            } else {\n                getStats(pool);\n            }\n            return pool;\n        } catch (LibvirtException e) {\n            throw new CloudRuntimeException(e.toString());\n        }\n    }","id":63807,"modified_method":"@Override\n    public KVMStoragePool createStoragePool(String name, String host, int port,\n                                            String path, String userInfo, StoragePoolType type) {\n        StoragePool sp = null;\n        Connect conn = null;\n        try {\n            conn = LibvirtConnection.getConnection();\n        } catch (LibvirtException e) {\n            throw new CloudRuntimeException(e.toString());\n        }\n\n        try {\n            sp = conn.storagePoolLookupByUUIDString(name);\n            if (sp.getInfo().state != StoragePoolState.VIR_STORAGE_POOL_RUNNING) {\n                sp.undefine();\n                sp = null;\n            }\n        } catch (LibvirtException e) {\n\n        }\n\n        if (sp == null) {\n            if (type == StoragePoolType.NetworkFilesystem) {\n                sp = createNfsStoragePool(conn, name, host, path);\n            } else if (type == StoragePoolType.SharedMountPoint\n                    || type == StoragePoolType.Filesystem) {\n                sp = CreateSharedStoragePool(conn, name, host, path);\n            } else if (type == StoragePoolType.RBD) {\n                sp = createRBDStoragePool(conn, name, host, port, userInfo, path);\n            }\n        }\n\n        try {\n            StoragePoolInfo spi = sp.getInfo();\n            if (spi.state != StoragePoolState.VIR_STORAGE_POOL_RUNNING) {\n                sp.create(0);\n            }\n\n            LibvirtStoragePoolDef spd = getStoragePoolDef(conn, sp);\n            LibvirtStoragePool pool = new LibvirtStoragePool(name,\n                    sp.getName(), type, this, sp);\n\n            if (pool.getType() != StoragePoolType.RBD) {\n                pool.setLocalPath(spd.getTargetPath());\n            } else {\n                pool.setLocalPath(\"\");\n            }\n\n            pool.setCapacity(sp.getInfo().capacity);\n            pool.setUsed(sp.getInfo().allocation);\n  \n            return pool;\n        } catch (LibvirtException e) {\n            throw new CloudRuntimeException(e.toString());\n        }\n    }","commit_id":"2ffc9907f7b0d371737e39b7649f7af23026f5cf","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public KVMStoragePool getStoragePool(String uuid) {\n        StoragePool storage = null;\n        try {\n            Connect conn = LibvirtConnection.getConnection();\n            storage = conn.storagePoolLookupByUUIDString(uuid);\n\n            if (storage.getInfo().state != StoragePoolState.VIR_STORAGE_POOL_RUNNING) {\n                storage.create(0);\n            }\n            LibvirtStoragePoolDef spd = getStoragePoolDef(conn, storage);\n            StoragePoolType type = null;\n            if (spd.getPoolType() == LibvirtStoragePoolDef.poolType.NETFS\n                    || spd.getPoolType() == LibvirtStoragePoolDef.poolType.DIR) {\n                type = StoragePoolType.Filesystem;\n            } else if (spd.getPoolType() == LibvirtStoragePoolDef.poolType.RBD) {\n                type = StoragePoolType.RBD;\n            }\n\n            LibvirtStoragePool pool = new LibvirtStoragePool(uuid, storage.getName(),\n                                                            type, this, storage);\n\n            if (pool.getType() != StoragePoolType.RBD) {\n                pool.setLocalPath(spd.getTargetPath());\n            } else {\n                pool.setLocalPath(\"\");\n                pool.setSourceHost(spd.getSourceHost());\n                pool.setSourcePort(spd.getSourcePort());\n                pool.setSourceDir(spd.getSourceDir());\n                String authUsername = spd.getAuthUserName();\n                if (authUsername != null) {\n                    Secret secret = conn.secretLookupByUUIDString(spd.getSecretUUID());\n                    String secretValue = new String(Base64.encodeBase64(secret.getByteValue()));\n                    pool.setAuthUsername(authUsername);\n                    pool.setAuthSecret(secretValue);\n                }\n            }\n\n            if (pool.getType() == StoragePoolType.RBD) {\n                pool.setCapacity(storage.getInfo().capacity);\n                pool.setUsed(storage.getInfo().allocation);\n            } else {\n                getStats(pool);\n            }\n\n            return pool;\n        } catch (LibvirtException e) {\n            throw new CloudRuntimeException(e.toString());\n        }\n    }","id":63808,"modified_method":"@Override\n    public KVMStoragePool getStoragePool(String uuid) {\n        StoragePool storage = null;\n        try {\n            Connect conn = LibvirtConnection.getConnection();\n            storage = conn.storagePoolLookupByUUIDString(uuid);\n\n            if (storage.getInfo().state != StoragePoolState.VIR_STORAGE_POOL_RUNNING) {\n                storage.create(0);\n            }\n            LibvirtStoragePoolDef spd = getStoragePoolDef(conn, storage);\n            StoragePoolType type = null;\n            if (spd.getPoolType() == LibvirtStoragePoolDef.poolType.NETFS\n                    || spd.getPoolType() == LibvirtStoragePoolDef.poolType.DIR) {\n                type = StoragePoolType.Filesystem;\n            } else if (spd.getPoolType() == LibvirtStoragePoolDef.poolType.RBD) {\n                type = StoragePoolType.RBD;\n            }\n\n            LibvirtStoragePool pool = new LibvirtStoragePool(uuid, storage.getName(),\n                                                            type, this, storage);\n\n            if (pool.getType() != StoragePoolType.RBD) {\n                pool.setLocalPath(spd.getTargetPath());\n            } else {\n                pool.setLocalPath(\"\");\n                pool.setSourceHost(spd.getSourceHost());\n                pool.setSourcePort(spd.getSourcePort());\n                pool.setSourceDir(spd.getSourceDir());\n                String authUsername = spd.getAuthUserName();\n                if (authUsername != null) {\n                    Secret secret = conn.secretLookupByUUIDString(spd.getSecretUUID());\n                    String secretValue = new String(Base64.encodeBase64(secret.getByteValue()));\n                    pool.setAuthUsername(authUsername);\n                    pool.setAuthSecret(secretValue);\n                }\n            }\n\n            pool.refresh();\n            pool.setCapacity(storage.getInfo().capacity);\n            pool.setUsed(storage.getInfo().allocation);\n\n            return pool;\n        } catch (LibvirtException e) {\n            throw new CloudRuntimeException(e.toString());\n        }\n    }","commit_id":"2ffc9907f7b0d371737e39b7649f7af23026f5cf","url":"https://github.com/apache/cloudstack"},{"original_method":"/** returns true if the cart was changed and rules need to be re-evaluted */\n    protected static ActionResultInfo performAction(GenericValue productPromoAction, ShoppingCart cart, GenericDelegator delegator, LocalDispatcher dispatcher, Timestamp nowTimestamp) throws GenericEntityException, CartItemModifyException {\n        ActionResultInfo actionResultInfo = new ActionResultInfo();\n        \n        String productPromoActionEnumId = productPromoAction.getString(\"productPromoActionEnumId\");\n\n        if (\"PROMO_GWP\".equals(productPromoActionEnumId)) {\n            String productStoreId = cart.getProductStoreId();\n            \n            // the code was in there for this, so even though I don't think we want to restrict this, just adding this flag to make it easy to change; could make option dynamic, but now implied by the use limit\n            boolean allowMultipleGwp = true;\n            \n            Integer itemLoc = findPromoItem(productPromoAction, cart);\n            if (!allowMultipleGwp && itemLoc != null) {\n                if (Debug.verboseOn()) Debug.logVerbose(\"Not adding promo item, already there; action: \" + productPromoAction, module);\n                actionResultInfo.ranAction = false;\n            } else {\n                double quantity = productPromoAction.get(\"quantity\") == null ? 0.0 : productPromoAction.getDouble(\"quantity\").doubleValue();\n                \n                List optionProductIds = FastList.newInstance();\n                String productId = productPromoAction.getString(\"productId\");\n                \n                GenericValue product = null;\n                if (UtilValidate.isNotEmpty(productId)) {\n                    // Debug.logInfo(\"======== Got GWP productId [\" + productId + \"]\", module);\n                    product = delegator.findByPrimaryKeyCache(\"Product\", UtilMisc.toMap(\"productId\", productId));\n                    if (product == null) {\n                        String errMsg = \"GWP Product not found with ID [\" + productId + \"] for ProductPromoAction [\" + productPromoAction.get(\"productPromoId\") + \":\" + productPromoAction.get(\"productPromoRuleId\") + \":\" + productPromoAction.get(\"productPromoActionSeqId\") + \"]\";\n                        Debug.logError(errMsg, module);\n                        throw new CartItemModifyException(errMsg);\n                    }\n                    if (\"Y\".equals(product.getString(\"isVirtual\"))) {\n                        List productAssocs = EntityUtil.filterByDate(product.getRelatedCache(\"MainProductAssoc\", \n                                UtilMisc.toMap(\"productAssocTypeId\", \"PRODUCT_VARIANT\"), UtilMisc.toList(\"sequenceNum\")));\n                        Iterator productAssocIter = productAssocs.iterator();\n                        while (productAssocIter.hasNext()) {\n                            GenericValue productAssoc = (GenericValue) productAssocIter.next();\n                            optionProductIds.add(productAssoc.get(\"productIdTo\"));\n                        }\n                        productId = null;\n                        product = null;\n                        // Debug.logInfo(\"======== GWP productId [\" + productId + \"] is a virtual with \" + productAssocs.size() + \" variants\", module);\n                    } else {\n                        // check inventory on this product, make sure it is available before going on\n                        //NOTE: even though the store may not require inventory for purchase, we will always require inventory for gifts\n                        try {\n                            Map invReqResult = dispatcher.runSync(\"isStoreInventoryAvailable\", UtilMisc.<String, Object>toMap(\"productStoreId\", productStoreId, \"productId\", productId, \"product\", product, \"quantity\", new Double(quantity)));\n                            if (ServiceUtil.isError(invReqResult)) {\n                                Debug.logError(\"Error calling isStoreInventoryAvailable service, result is: \" + invReqResult, module);\n                                throw new CartItemModifyException((String) invReqResult.get(ModelService.ERROR_MESSAGE));\n                            } else if (!\"Y\".equals((String) invReqResult.get(\"available\"))) {\n                                Debug.logWarning(UtilProperties.getMessage(resource_error,\"OrderNotApplyingGwpBecauseProductIdIsOutOfStockForProductPromoAction\", UtilMisc.toMap(\"productId\", productId, \"productPromoAction\", productPromoAction), cart.getLocale()), module);\n                                productId = null;\n                                product = null;\n                            }\n                        } catch (GenericServiceException e) {\n                            String errMsg = \"Fatal error calling inventory checking services: \" + e.toString();\n                            Debug.logError(e, errMsg, module);\n                            throw new CartItemModifyException(errMsg);\n                        }\n                    }\n                }\n                \n                // support multiple gift options if products are attached to the action, or if the productId on the action is a virtual product\n                Set productIds = ProductPromoWorker.getPromoRuleActionProductIds(productPromoAction, delegator, nowTimestamp);\n                if (productIds != null) {\n                    optionProductIds.addAll(productIds);\n                }\n                \n                // make sure these optionProducts have inventory...\n                Iterator optionProductIdIter = optionProductIds.iterator();\n                while (optionProductIdIter.hasNext()) {\n                    String optionProductId = (String) optionProductIdIter.next();\n\n                    try {\n                        Map invReqResult = dispatcher.runSync(\"isStoreInventoryAvailable\", UtilMisc.<String, Object>toMap(\"productStoreId\", productStoreId, \"productId\", optionProductId, \"product\", product, \"quantity\", new Double(quantity)));\n                        if (ServiceUtil.isError(invReqResult)) {\n                            Debug.logError(\"Error calling isStoreInventoryAvailable service, result is: \" + invReqResult, module);\n                            throw new CartItemModifyException((String) invReqResult.get(ModelService.ERROR_MESSAGE));\n                        } else if (!\"Y\".equals((String) invReqResult.get(\"available\"))) {\n                            optionProductIdIter.remove();\n                        }\n                    } catch (GenericServiceException e) {\n                        String errMsg = \"Fatal error calling inventory checking services: \" + e.toString();\n                        Debug.logError(e, errMsg, module);\n                        throw new CartItemModifyException(errMsg);\n                    }\n                }\n                \n                // check to see if any desired productIds have been selected for this promo action\n                String alternateGwpProductId = cart.getDesiredAlternateGiftByAction(productPromoAction.getPrimaryKey());\n                if (UtilValidate.isNotEmpty(alternateGwpProductId)) {\n                    // also check to make sure this isn't a spoofed ID somehow, check to see if it is in the Set\n                    if (optionProductIds.contains(alternateGwpProductId)) {\n                        if (UtilValidate.isNotEmpty(productId)) {\n                            optionProductIds.add(productId);\n                        }\n                        optionProductIds.remove(alternateGwpProductId);\n                        productId = alternateGwpProductId;\n                        product = delegator.findByPrimaryKeyCache(\"Product\", UtilMisc.toMap(\"productId\", productId));\n                    } else {\n                        Debug.logWarning(UtilProperties.getMessage(resource_error,\"OrderAnAlternateGwpProductIdWasInPlaceButWasEitherNotValidOrIsNoLongerInStockForId\", UtilMisc.toMap(\"alternateGwpProductId\",alternateGwpProductId), cart.getLocale()), module);\n                    }\n                }\n                \n                // if product is null, get one from the productIds set\n                if (product == null && optionProductIds.size() > 0) {\n                    // get the first from an iterator and remove it since it will be the current one\n                    Iterator optionProductIdTempIter = optionProductIds.iterator();\n                    productId = (String) optionProductIdTempIter.next();\n                    optionProductIdTempIter.remove();\n                    product = delegator.findByPrimaryKeyCache(\"Product\", UtilMisc.toMap(\"productId\", productId));\n                }\n                    \n                if (product == null) {\n                    // no product found to add as GWP, just return\n                    return actionResultInfo;\n                }\n\n                // pass null for cartLocation to add to end of cart, pass false for doPromotions to avoid infinite recursion\n                ShoppingCartItem gwpItem = null;\n                try {\n                    // just leave the prodCatalogId null, this line won't be associated with a catalog\n                    String prodCatalogId = null;\n                    gwpItem = ShoppingCartItem.makeItem(null, product, null, quantity, null, null, null, null, null, null, null, null, prodCatalogId, null, null, null, dispatcher, cart, Boolean.FALSE, Boolean.TRUE, null, Boolean.FALSE, Boolean.FALSE);\n                    if (optionProductIds.size() > 0) {\n                        gwpItem.setAlternativeOptionProductIds(optionProductIds);\n                    } else {\n                        gwpItem.setAlternativeOptionProductIds(null);\n                    }\n                } catch (CartItemModifyException e) {\n                    int gwpItemIndex = cart.getItemIndex(gwpItem);\n                    cart.removeCartItem(gwpItemIndex, dispatcher);\n                    throw e;\n                }\n\n                double discountAmount = -(quantity * gwpItem.getBasePrice());\n\n                doOrderItemPromoAction(productPromoAction, gwpItem, discountAmount, \"amount\", delegator);\n                \n                // set promo after create; note that to setQuantity we must clear this flag, setQuantity, then re-set the flag\n                gwpItem.setIsPromo(true);\n                if (Debug.verboseOn()) Debug.logVerbose(\"gwpItem adjustments: \" + gwpItem.getAdjustments(), module);\n\n                actionResultInfo.ranAction = true;\n                actionResultInfo.totalDiscountAmount = discountAmount;\n            }\n        } else if (\"PROMO_FREE_SHIPPING\".equals(productPromoActionEnumId)) {\n            // this may look a bit funny: on each pass all rules that do free shipping will set their own rule id for it,\n            // and on unapply if the promo and rule ids are the same then it will clear it; essentially on any pass\n            // through the promos and rules if any free shipping should be there, it will be there\n            cart.addFreeShippingProductPromoAction(productPromoAction);\n            // don't consider this as a cart change?\n            actionResultInfo.ranAction = true;\n            // should probably set the totalDiscountAmount to something, but we have no idea what it will be, so leave at 0, will still get run\n        } else if (\"PROMO_PROD_DISC\".equals(productPromoActionEnumId)) {\n            double quantityDesired = productPromoAction.get(\"quantity\") == null ? 1.0 : productPromoAction.getDouble(\"quantity\").doubleValue();\n            double startingQuantity = quantityDesired;\n            double discountAmountTotal = 0;\n\n            Set productIds = ProductPromoWorker.getPromoRuleActionProductIds(productPromoAction, delegator, nowTimestamp);\n\n            List lineOrderedByBasePriceList = cart.getLineListOrderedByBasePrice(false);\n            Iterator lineOrderedByBasePriceIter = lineOrderedByBasePriceList.iterator();\n            while (quantityDesired > 0 && lineOrderedByBasePriceIter.hasNext()) {\n                ShoppingCartItem cartItem = (ShoppingCartItem) lineOrderedByBasePriceIter.next();\n                // only include if it is in the productId Set for this check and if it is not a Promo (GWP) item\n                GenericValue product = cartItem.getProduct();\n                String parentProductId = cartItem.getParentProductId();\n                if (!cartItem.getIsPromo() && \n                        (productIds.contains(cartItem.getProductId()) || (parentProductId != null && productIds.contains(parentProductId))) &&\n                        (product == null || !\"N\".equals(product.getString(\"includeInPromotions\")))) {\n                    // reduce quantity still needed to qualify for promo (quantityNeeded)\n                    double quantityUsed = cartItem.addPromoQuantityCandidateUse(quantityDesired, productPromoAction, false);\n                    if (quantityUsed > 0) {\n                        quantityDesired -= quantityUsed;\n\n                        // create an adjustment and add it to the cartItem that implements the promotion action\n                        double percentModifier = productPromoAction.get(\"amount\") == null ? 0.0 : (productPromoAction.getDouble(\"amount\").doubleValue()/100.0);\n                        double lineAmount = quantityUsed * cartItem.getBasePrice();\n                        double discountAmount = -(lineAmount * percentModifier);\n                        discountAmountTotal += discountAmount;\n                        // not doing this any more, now distributing among conditions and actions (see call below): doOrderItemPromoAction(productPromoAction, cartItem, discountAmount, \"amount\", delegator);\n                    }\n                }\n            }\n\n            if (quantityDesired == startingQuantity || quantityDesired > 0) {\n                // couldn't find any (or enough) cart items to give a discount to, don't consider action run\n                actionResultInfo.ranAction = false;\n                // clear out any action uses for this so they don't become part of anything else\n                cart.resetPromoRuleUse(productPromoAction.getString(\"productPromoId\"), productPromoAction.getString(\"productPromoRuleId\"));\n            } else {\n                double totalAmount = getCartItemsUsedTotalAmount(cart, productPromoAction);\n                if (Debug.verboseOn()) Debug.logVerbose(\"Applying promo [\" + productPromoAction.getPrimaryKey() + \"]\\n totalAmount=\" + totalAmount + \", discountAmountTotal=\" + discountAmountTotal, module);\n                distributeDiscountAmount(discountAmountTotal, totalAmount, getCartItemsUsed(cart, productPromoAction), productPromoAction, delegator);\n                actionResultInfo.ranAction = true;\n                actionResultInfo.totalDiscountAmount = discountAmountTotal;\n                actionResultInfo.quantityLeftInAction = quantityDesired;\n            }\n        } else if (\"PROMO_PROD_AMDISC\".equals(productPromoActionEnumId)) {\n            double quantityDesired = productPromoAction.get(\"quantity\") == null ? 1.0 : productPromoAction.getDouble(\"quantity\").doubleValue();\n            double startingQuantity = quantityDesired;\n            double discountAmountTotal = 0;\n            \n            Set productIds = ProductPromoWorker.getPromoRuleActionProductIds(productPromoAction, delegator, nowTimestamp);\n\n            List lineOrderedByBasePriceList = cart.getLineListOrderedByBasePrice(false);\n            Iterator lineOrderedByBasePriceIter = lineOrderedByBasePriceList.iterator();\n            while (quantityDesired > 0 && lineOrderedByBasePriceIter.hasNext()) {\n                ShoppingCartItem cartItem = (ShoppingCartItem) lineOrderedByBasePriceIter.next();\n                // only include if it is in the productId Set for this check and if it is not a Promo (GWP) item\n                String parentProductId = cartItem.getParentProductId();\n                GenericValue product = cartItem.getProduct();\n                if (!cartItem.getIsPromo() && \n                        (productIds.contains(cartItem.getProductId()) || (parentProductId != null && productIds.contains(parentProductId))) &&\n                        (product == null || !\"N\".equals(product.getString(\"includeInPromotions\")))) {\n                    // reduce quantity still needed to qualify for promo (quantityNeeded)\n                    double quantityUsed = cartItem.addPromoQuantityCandidateUse(quantityDesired, productPromoAction, false);\n                    quantityDesired -= quantityUsed;\n\n                    // create an adjustment and add it to the cartItem that implements the promotion action\n                    double discount = productPromoAction.get(\"amount\") == null ? 0.0 : productPromoAction.getDouble(\"amount\").doubleValue();\n                    // don't allow the discount to be greater than the price\n                    if (discount > cartItem.getBasePrice()) {\n                        discount = cartItem.getBasePrice();\n                    }\n                    double discountAmount = -(quantityUsed * discount);\n                    discountAmountTotal += discountAmount;\n                    // not doing this any more, now distributing among conditions and actions (see call below): doOrderItemPromoAction(productPromoAction, cartItem, discountAmount, \"amount\", delegator);\n                }\n            }\n\n            if (quantityDesired == startingQuantity) {\n                // couldn't find any cart items to give a discount to, don't consider action run\n                actionResultInfo.ranAction = false;\n            } else {\n                double totalAmount = getCartItemsUsedTotalAmount(cart, productPromoAction);\n                if (Debug.verboseOn()) Debug.logVerbose(\"Applying promo [\" + productPromoAction.getPrimaryKey() + \"]\\n totalAmount=\" + totalAmount + \", discountAmountTotal=\" + discountAmountTotal, module);\n                distributeDiscountAmount(discountAmountTotal, totalAmount, getCartItemsUsed(cart, productPromoAction), productPromoAction, delegator);\n                actionResultInfo.ranAction = true;\n                actionResultInfo.totalDiscountAmount = discountAmountTotal;\n                actionResultInfo.quantityLeftInAction = quantityDesired;\n            }\n        } else if (\"PROMO_PROD_PRICE\".equals(productPromoActionEnumId)) {\n            // with this we want the set of used items to be one price, so total the price for all used items, subtract the amount we want them to cost, and create an adjustment for what is left\n            double quantityDesired = productPromoAction.get(\"quantity\") == null ? 1.0 : productPromoAction.getDouble(\"quantity\").doubleValue();\n            double desiredAmount = productPromoAction.get(\"amount\") == null ? 0.0 : productPromoAction.getDouble(\"amount\").doubleValue();\n            double totalAmount = 0;\n\n            Set productIds = ProductPromoWorker.getPromoRuleActionProductIds(productPromoAction, delegator, nowTimestamp);\n\n            List cartItemsUsed = FastList.newInstance();\n            List lineOrderedByBasePriceList = cart.getLineListOrderedByBasePrice(false);\n            Iterator lineOrderedByBasePriceIter = lineOrderedByBasePriceList.iterator();\n            while (quantityDesired > 0 && lineOrderedByBasePriceIter.hasNext()) {\n                ShoppingCartItem cartItem = (ShoppingCartItem) lineOrderedByBasePriceIter.next();\n                // only include if it is in the productId Set for this check and if it is not a Promo (GWP) item\n                String parentProductId = cartItem.getParentProductId();\n                GenericValue product = cartItem.getProduct();\n                if (!cartItem.getIsPromo() && (productIds.contains(cartItem.getProductId()) || (parentProductId != null && productIds.contains(parentProductId))) &&\n                        (product == null || !\"N\".equals(product.getString(\"includeInPromotions\")))) {\n                    // reduce quantity still needed to qualify for promo (quantityNeeded)\n                    double quantityUsed = cartItem.addPromoQuantityCandidateUse(quantityDesired, productPromoAction, false);\n                    if (quantityUsed > 0) {\n                        quantityDesired -= quantityUsed;\n                        totalAmount += quantityUsed * cartItem.getBasePrice();\n                        cartItemsUsed.add(cartItem);\n                    }\n                }\n            }\n\n            if (totalAmount > desiredAmount && quantityDesired == 0) {\n                double discountAmountTotal = -(totalAmount - desiredAmount);\n                distributeDiscountAmount(discountAmountTotal, totalAmount, cartItemsUsed, productPromoAction, delegator);\n                actionResultInfo.ranAction = true;\n                actionResultInfo.totalDiscountAmount = discountAmountTotal;\n                // no use setting the quantityLeftInAction because that does not apply for buy X for $Y type promotions, it is all or nothing\n            } else {\n                actionResultInfo.ranAction = false;\n                // clear out any action uses for this so they don't become part of anything else\n                cart.resetPromoRuleUse(productPromoAction.getString(\"productPromoId\"), productPromoAction.getString(\"productPromoRuleId\"));\n            }\n        } else if (\"PROMO_ORDER_PERCENT\".equals(productPromoActionEnumId)) {\n            double percentage = -(productPromoAction.get(\"amount\") == null ? 0.0 : (productPromoAction.getDouble(\"amount\").doubleValue() / 100.0));\n            double amount = cart.getSubTotalForPromotions() * percentage;\n            if (amount != 0) {\n                doOrderPromoAction(productPromoAction, cart, amount, \"amount\", delegator);\n                actionResultInfo.ranAction = true;\n                actionResultInfo.totalDiscountAmount = amount;\n            }\n        } else if (\"PROMO_ORDER_AMOUNT\".equals(productPromoActionEnumId)) {\n            double amount = -(productPromoAction.get(\"amount\") == null ? 0.0 : productPromoAction.getDouble(\"amount\").doubleValue());\n            // if amount is greater than the order sub total, set equal to order sub total, this normally wouldn't happen because there should be a condition that the order total be above a certain amount, but just in case...\n            double subTotal = cart.getSubTotalForPromotions();\n            if (-amount > subTotal) {\n                amount = -subTotal;\n            }\n            if (amount != 0) {\n                doOrderPromoAction(productPromoAction, cart, amount, \"amount\", delegator);\n                actionResultInfo.ranAction = true;\n                actionResultInfo.totalDiscountAmount = amount;\n            }\n        } else if (\"PROMO_PROD_SPPRC\".equals(productPromoActionEnumId)) {\n            // if there are productIds associated with the action then restrict to those productIds, otherwise apply for all products\n            Set productIds = ProductPromoWorker.getPromoRuleActionProductIds(productPromoAction, delegator, nowTimestamp);\n\n            // go through the cart items and for each product that has a specialPromoPrice use that price\n            Iterator cartItemIter = cart.items().iterator();\n            while (cartItemIter.hasNext()) {\n                ShoppingCartItem cartItem = (ShoppingCartItem) cartItemIter.next();\n                String itemProductId = cartItem.getProductId();\n                if (UtilValidate.isEmpty(itemProductId)) {\n                    continue;\n                }\n                \n                if (productIds.size() > 0 && !productIds.contains(itemProductId)) {\n                    continue;\n                }\n                \n                if (cartItem.getSpecialPromoPrice() == null) {\n                    continue;\n                }\n                \n                // get difference between basePrice and specialPromoPrice and adjust for that\n                double difference = -(cartItem.getBasePrice() - cartItem.getSpecialPromoPrice().doubleValue());\n\n                if (difference != 0.0) {\n                    double quantityUsed = cartItem.addPromoQuantityCandidateUse(cartItem.getQuantity(), productPromoAction, false);\n                    if (quantityUsed > 0) {\n                        double amount = difference * quantityUsed;\n                        doOrderItemPromoAction(productPromoAction, cartItem, amount, \"amount\", delegator);\n                        actionResultInfo.ranAction = true;\n                        actionResultInfo.totalDiscountAmount = amount;\n                    }\n                }\n            }\n        } else {\n            Debug.logError(\"An un-supported productPromoActionType was used: \" + productPromoActionEnumId + \", not performing any action\", module);\n            actionResultInfo.ranAction = false;\n        }\n\n        if (actionResultInfo.ranAction) {\n            // in action, if doesn't have enough quantity to use the promo at all, remove candidate promo uses and increment promoQuantityUsed; this should go for all actions, if any action runs we confirm\n            cart.confirmPromoRuleUse(productPromoAction.getString(\"productPromoId\"), productPromoAction.getString(\"productPromoRuleId\"));\n        } else {\n            cart.resetPromoRuleUse(productPromoAction.getString(\"productPromoId\"), productPromoAction.getString(\"productPromoRuleId\"));\n        }\n\n        return actionResultInfo;\n    }","id":63809,"modified_method":"/** returns true if the cart was changed and rules need to be re-evaluted */\n    protected static ActionResultInfo performAction(GenericValue productPromoAction, ShoppingCart cart, GenericDelegator delegator, LocalDispatcher dispatcher, Timestamp nowTimestamp) throws GenericEntityException, CartItemModifyException {\n        ActionResultInfo actionResultInfo = new ActionResultInfo();\n        \n        String productPromoActionEnumId = productPromoAction.getString(\"productPromoActionEnumId\");\n\n        if (\"PROMO_GWP\".equals(productPromoActionEnumId)) {\n            String productStoreId = cart.getProductStoreId();\n            \n            // the code was in there for this, so even though I don't think we want to restrict this, just adding this flag to make it easy to change; could make option dynamic, but now implied by the use limit\n            boolean allowMultipleGwp = true;\n            \n            Integer itemLoc = findPromoItem(productPromoAction, cart);\n            if (!allowMultipleGwp && itemLoc != null) {\n                if (Debug.verboseOn()) Debug.logVerbose(\"Not adding promo item, already there; action: \" + productPromoAction, module);\n                actionResultInfo.ranAction = false;\n            } else {\n                double quantity = productPromoAction.get(\"quantity\") == null ? 0.0 : productPromoAction.getDouble(\"quantity\").doubleValue();\n                \n                List optionProductIds = FastList.newInstance();\n                String productId = productPromoAction.getString(\"productId\");\n                \n                GenericValue product = null;\n                if (UtilValidate.isNotEmpty(productId)) {\n                    // Debug.logInfo(\"======== Got GWP productId [\" + productId + \"]\", module);\n                    product = delegator.findByPrimaryKeyCache(\"Product\", UtilMisc.toMap(\"productId\", productId));\n                    if (product == null) {\n                        String errMsg = \"GWP Product not found with ID [\" + productId + \"] for ProductPromoAction [\" + productPromoAction.get(\"productPromoId\") + \":\" + productPromoAction.get(\"productPromoRuleId\") + \":\" + productPromoAction.get(\"productPromoActionSeqId\") + \"]\";\n                        Debug.logError(errMsg, module);\n                        throw new CartItemModifyException(errMsg);\n                    }\n                    if (\"Y\".equals(product.getString(\"isVirtual\"))) {\n                        List productAssocs = EntityUtil.filterByDate(product.getRelatedCache(\"MainProductAssoc\", \n                                UtilMisc.toMap(\"productAssocTypeId\", \"PRODUCT_VARIANT\"), UtilMisc.toList(\"sequenceNum\")));\n                        Iterator productAssocIter = productAssocs.iterator();\n                        while (productAssocIter.hasNext()) {\n                            GenericValue productAssoc = (GenericValue) productAssocIter.next();\n                            optionProductIds.add(productAssoc.get(\"productIdTo\"));\n                        }\n                        productId = null;\n                        product = null;\n                        // Debug.logInfo(\"======== GWP productId [\" + productId + \"] is a virtual with \" + productAssocs.size() + \" variants\", module);\n                    } else {\n                        // check inventory on this product, make sure it is available before going on\n                        //NOTE: even though the store may not require inventory for purchase, we will always require inventory for gifts\n                        try {\n                            Map invReqResult = dispatcher.runSync(\"isStoreInventoryAvailable\", UtilMisc.<String, Object>toMap(\"productStoreId\", productStoreId, \"productId\", productId, \"product\", product, \"quantity\", new Double(quantity)));\n                            if (ServiceUtil.isError(invReqResult)) {\n                                Debug.logError(\"Error calling isStoreInventoryAvailable service, result is: \" + invReqResult, module);\n                                throw new CartItemModifyException((String) invReqResult.get(ModelService.ERROR_MESSAGE));\n                            } else if (!\"Y\".equals((String) invReqResult.get(\"available\"))) {\n                                Debug.logWarning(UtilProperties.getMessage(resource_error,\"OrderNotApplyingGwpBecauseProductIdIsOutOfStockForProductPromoAction\", UtilMisc.toMap(\"productId\", productId, \"productPromoAction\", productPromoAction), cart.getLocale()), module);\n                                productId = null;\n                                product = null;\n                            }\n                        } catch (GenericServiceException e) {\n                            String errMsg = \"Fatal error calling inventory checking services: \" + e.toString();\n                            Debug.logError(e, errMsg, module);\n                            throw new CartItemModifyException(errMsg);\n                        }\n                    }\n                }\n                \n                // support multiple gift options if products are attached to the action, or if the productId on the action is a virtual product\n                Set productIds = ProductPromoWorker.getPromoRuleActionProductIds(productPromoAction, delegator, nowTimestamp);\n                if (productIds != null) {\n                    optionProductIds.addAll(productIds);\n                }\n                \n                // make sure these optionProducts have inventory...\n                Iterator optionProductIdIter = optionProductIds.iterator();\n                while (optionProductIdIter.hasNext()) {\n                    String optionProductId = (String) optionProductIdIter.next();\n\n                    try {\n                        Map invReqResult = dispatcher.runSync(\"isStoreInventoryAvailable\", UtilMisc.<String, Object>toMap(\"productStoreId\", productStoreId, \"productId\", optionProductId, \"product\", product, \"quantity\", new Double(quantity)));\n                        if (ServiceUtil.isError(invReqResult)) {\n                            Debug.logError(\"Error calling isStoreInventoryAvailable service, result is: \" + invReqResult, module);\n                            throw new CartItemModifyException((String) invReqResult.get(ModelService.ERROR_MESSAGE));\n                        } else if (!\"Y\".equals((String) invReqResult.get(\"available\"))) {\n                            optionProductIdIter.remove();\n                        }\n                    } catch (GenericServiceException e) {\n                        String errMsg = \"Fatal error calling inventory checking services: \" + e.toString();\n                        Debug.logError(e, errMsg, module);\n                        throw new CartItemModifyException(errMsg);\n                    }\n                }\n                \n                // check to see if any desired productIds have been selected for this promo action\n                String alternateGwpProductId = cart.getDesiredAlternateGiftByAction(productPromoAction.getPrimaryKey());\n                if (UtilValidate.isNotEmpty(alternateGwpProductId)) {\n                    // also check to make sure this isn't a spoofed ID somehow, check to see if it is in the Set\n                    if (optionProductIds.contains(alternateGwpProductId)) {\n                        if (UtilValidate.isNotEmpty(productId)) {\n                            optionProductIds.add(productId);\n                        }\n                        optionProductIds.remove(alternateGwpProductId);\n                        productId = alternateGwpProductId;\n                        product = delegator.findByPrimaryKeyCache(\"Product\", UtilMisc.toMap(\"productId\", productId));\n                    } else {\n                        Debug.logWarning(UtilProperties.getMessage(resource_error,\"OrderAnAlternateGwpProductIdWasInPlaceButWasEitherNotValidOrIsNoLongerInStockForId\", UtilMisc.toMap(\"alternateGwpProductId\",alternateGwpProductId), cart.getLocale()), module);\n                    }\n                }\n                \n                // if product is null, get one from the productIds set\n                if (product == null && optionProductIds.size() > 0) {\n                    // get the first from an iterator and remove it since it will be the current one\n                    Iterator optionProductIdTempIter = optionProductIds.iterator();\n                    productId = (String) optionProductIdTempIter.next();\n                    optionProductIdTempIter.remove();\n                    product = delegator.findByPrimaryKeyCache(\"Product\", UtilMisc.toMap(\"productId\", productId));\n                }\n                    \n                if (product == null) {\n                    // no product found to add as GWP, just return\n                    return actionResultInfo;\n                }\n\n                // pass null for cartLocation to add to end of cart, pass false for doPromotions to avoid infinite recursion\n                ShoppingCartItem gwpItem = null;\n                try {\n                    // just leave the prodCatalogId null, this line won't be associated with a catalog\n                    String prodCatalogId = null;\n                    gwpItem = ShoppingCartItem.makeItem(null, product, null, quantity, null, null, null, null, null, null, null, null, prodCatalogId, null, null, null, dispatcher, cart, Boolean.FALSE, Boolean.TRUE, null, Boolean.FALSE, Boolean.FALSE);\n                    if (optionProductIds.size() > 0) {\n                        gwpItem.setAlternativeOptionProductIds(optionProductIds);\n                    } else {\n                        gwpItem.setAlternativeOptionProductIds(null);\n                    }\n                } catch (CartItemModifyException e) {\n                    int gwpItemIndex = cart.getItemIndex(gwpItem);\n                    cart.removeCartItem(gwpItemIndex, dispatcher);\n                    throw e;\n                }\n\n                double discountAmount = -(quantity * gwpItem.getBasePrice());\n\n                doOrderItemPromoAction(productPromoAction, gwpItem, discountAmount, \"amount\", delegator);\n                \n                // set promo after create; note that to setQuantity we must clear this flag, setQuantity, then re-set the flag\n                gwpItem.setIsPromo(true);\n                if (Debug.verboseOn()) Debug.logVerbose(\"gwpItem adjustments: \" + gwpItem.getAdjustments(), module);\n\n                actionResultInfo.ranAction = true;\n                actionResultInfo.totalDiscountAmount = discountAmount;\n            }\n        } else if (\"PROMO_FREE_SHIPPING\".equals(productPromoActionEnumId)) {\n            // this may look a bit funny: on each pass all rules that do free shipping will set their own rule id for it,\n            // and on unapply if the promo and rule ids are the same then it will clear it; essentially on any pass\n            // through the promos and rules if any free shipping should be there, it will be there\n            cart.addFreeShippingProductPromoAction(productPromoAction);\n            // don't consider this as a cart change?\n            actionResultInfo.ranAction = true;\n            // should probably set the totalDiscountAmount to something, but we have no idea what it will be, so leave at 0, will still get run\n        } else if (\"PROMO_PROD_DISC\".equals(productPromoActionEnumId)) {\n            double quantityDesired = productPromoAction.get(\"quantity\") == null ? 1.0 : productPromoAction.getDouble(\"quantity\").doubleValue();\n            double startingQuantity = quantityDesired;\n            double discountAmountTotal = 0;\n\n            Set productIds = ProductPromoWorker.getPromoRuleActionProductIds(productPromoAction, delegator, nowTimestamp);\n\n            List lineOrderedByBasePriceList = cart.getLineListOrderedByBasePrice(false);\n            Iterator lineOrderedByBasePriceIter = lineOrderedByBasePriceList.iterator();\n            while (quantityDesired > 0 && lineOrderedByBasePriceIter.hasNext()) {\n                ShoppingCartItem cartItem = (ShoppingCartItem) lineOrderedByBasePriceIter.next();\n                // only include if it is in the productId Set for this check and if it is not a Promo (GWP) item\n                GenericValue product = cartItem.getProduct();\n                String parentProductId = cartItem.getParentProductId();\n                if (!cartItem.getIsPromo() && \n                        (productIds.contains(cartItem.getProductId()) || (parentProductId != null && productIds.contains(parentProductId))) &&\n                        (product == null || !\"N\".equals(product.getString(\"includeInPromotions\")))) {\n                    // reduce quantity still needed to qualify for promo (quantityNeeded)\n                    double quantityUsed = cartItem.addPromoQuantityCandidateUse(quantityDesired, productPromoAction, false);\n                    if (quantityUsed > 0) {\n                        quantityDesired -= quantityUsed;\n\n                        // create an adjustment and add it to the cartItem that implements the promotion action\n                        double percentModifier = productPromoAction.get(\"amount\") == null ? 0.0 : (productPromoAction.getDouble(\"amount\").doubleValue()/100.0);\n                        double lineAmount = quantityUsed * cartItem.getBasePrice() * cartItem.getRentalAdjustment();\n                        double discountAmount = -(lineAmount * percentModifier);\n                        discountAmountTotal += discountAmount;\n                        // not doing this any more, now distributing among conditions and actions (see call below): doOrderItemPromoAction(productPromoAction, cartItem, discountAmount, \"amount\", delegator);\n                    }\n                }\n            }\n\n            if (quantityDesired == startingQuantity || quantityDesired > 0) {\n                // couldn't find any (or enough) cart items to give a discount to, don't consider action run\n                actionResultInfo.ranAction = false;\n                // clear out any action uses for this so they don't become part of anything else\n                cart.resetPromoRuleUse(productPromoAction.getString(\"productPromoId\"), productPromoAction.getString(\"productPromoRuleId\"));\n            } else {\n                double totalAmount = getCartItemsUsedTotalAmount(cart, productPromoAction);\n                if (Debug.verboseOn()) Debug.logVerbose(\"Applying promo [\" + productPromoAction.getPrimaryKey() + \"]\\n totalAmount=\" + totalAmount + \", discountAmountTotal=\" + discountAmountTotal, module);\n                distributeDiscountAmount(discountAmountTotal, totalAmount, getCartItemsUsed(cart, productPromoAction), productPromoAction, delegator);\n                actionResultInfo.ranAction = true;\n                actionResultInfo.totalDiscountAmount = discountAmountTotal;\n                actionResultInfo.quantityLeftInAction = quantityDesired;\n            }\n        } else if (\"PROMO_PROD_AMDISC\".equals(productPromoActionEnumId)) {\n            double quantityDesired = productPromoAction.get(\"quantity\") == null ? 1.0 : productPromoAction.getDouble(\"quantity\").doubleValue();\n            double startingQuantity = quantityDesired;\n            double discountAmountTotal = 0;\n            \n            Set productIds = ProductPromoWorker.getPromoRuleActionProductIds(productPromoAction, delegator, nowTimestamp);\n\n            List lineOrderedByBasePriceList = cart.getLineListOrderedByBasePrice(false);\n            Iterator lineOrderedByBasePriceIter = lineOrderedByBasePriceList.iterator();\n            while (quantityDesired > 0 && lineOrderedByBasePriceIter.hasNext()) {\n                ShoppingCartItem cartItem = (ShoppingCartItem) lineOrderedByBasePriceIter.next();\n                // only include if it is in the productId Set for this check and if it is not a Promo (GWP) item\n                String parentProductId = cartItem.getParentProductId();\n                GenericValue product = cartItem.getProduct();\n                if (!cartItem.getIsPromo() && \n                        (productIds.contains(cartItem.getProductId()) || (parentProductId != null && productIds.contains(parentProductId))) &&\n                        (product == null || !\"N\".equals(product.getString(\"includeInPromotions\")))) {\n                    // reduce quantity still needed to qualify for promo (quantityNeeded)\n                    double quantityUsed = cartItem.addPromoQuantityCandidateUse(quantityDesired, productPromoAction, false);\n                    quantityDesired -= quantityUsed;\n\n                    // create an adjustment and add it to the cartItem that implements the promotion action\n                    double discount = productPromoAction.get(\"amount\") == null ? 0.0 : productPromoAction.getDouble(\"amount\").doubleValue();\n                    // don't allow the discount to be greater than the price\n                    if (discount > cartItem.getBasePrice() * cartItem.getRentalAdjustment()) {\n                        discount = cartItem.getBasePrice() * cartItem.getRentalAdjustment();\n                    }\n                    double discountAmount = -(quantityUsed * discount);\n                    discountAmountTotal += discountAmount;\n                    // not doing this any more, now distributing among conditions and actions (see call below): doOrderItemPromoAction(productPromoAction, cartItem, discountAmount, \"amount\", delegator);\n                }\n            }\n\n            if (quantityDesired == startingQuantity) {\n                // couldn't find any cart items to give a discount to, don't consider action run\n                actionResultInfo.ranAction = false;\n            } else {\n                double totalAmount = getCartItemsUsedTotalAmount(cart, productPromoAction);\n                if (Debug.verboseOn()) Debug.logVerbose(\"Applying promo [\" + productPromoAction.getPrimaryKey() + \"]\\n totalAmount=\" + totalAmount + \", discountAmountTotal=\" + discountAmountTotal, module);\n                distributeDiscountAmount(discountAmountTotal, totalAmount, getCartItemsUsed(cart, productPromoAction), productPromoAction, delegator);\n                actionResultInfo.ranAction = true;\n                actionResultInfo.totalDiscountAmount = discountAmountTotal;\n                actionResultInfo.quantityLeftInAction = quantityDesired;\n            }\n        } else if (\"PROMO_PROD_PRICE\".equals(productPromoActionEnumId)) {\n            // with this we want the set of used items to be one price, so total the price for all used items, subtract the amount we want them to cost, and create an adjustment for what is left\n            double quantityDesired = productPromoAction.get(\"quantity\") == null ? 1.0 : productPromoAction.getDouble(\"quantity\").doubleValue();\n            double desiredAmount = productPromoAction.get(\"amount\") == null ? 0.0 : productPromoAction.getDouble(\"amount\").doubleValue();\n            double totalAmount = 0;\n\n            Set productIds = ProductPromoWorker.getPromoRuleActionProductIds(productPromoAction, delegator, nowTimestamp);\n\n            List cartItemsUsed = FastList.newInstance();\n            List lineOrderedByBasePriceList = cart.getLineListOrderedByBasePrice(false);\n            Iterator lineOrderedByBasePriceIter = lineOrderedByBasePriceList.iterator();\n            while (quantityDesired > 0 && lineOrderedByBasePriceIter.hasNext()) {\n                ShoppingCartItem cartItem = (ShoppingCartItem) lineOrderedByBasePriceIter.next();\n                // only include if it is in the productId Set for this check and if it is not a Promo (GWP) item\n                String parentProductId = cartItem.getParentProductId();\n                GenericValue product = cartItem.getProduct();\n                if (!cartItem.getIsPromo() && (productIds.contains(cartItem.getProductId()) || (parentProductId != null && productIds.contains(parentProductId))) &&\n                        (product == null || !\"N\".equals(product.getString(\"includeInPromotions\")))) {\n                    // reduce quantity still needed to qualify for promo (quantityNeeded)\n                    double quantityUsed = cartItem.addPromoQuantityCandidateUse(quantityDesired, productPromoAction, false);\n                    if (quantityUsed > 0) {\n                        quantityDesired -= quantityUsed;\n                        totalAmount += quantityUsed * cartItem.getBasePrice() * cartItem.getRentalAdjustment();\n                        cartItemsUsed.add(cartItem);\n                    }\n                }\n            }\n\n            if (totalAmount > desiredAmount && quantityDesired == 0) {\n                double discountAmountTotal = -(totalAmount - desiredAmount);\n                distributeDiscountAmount(discountAmountTotal, totalAmount, cartItemsUsed, productPromoAction, delegator);\n                actionResultInfo.ranAction = true;\n                actionResultInfo.totalDiscountAmount = discountAmountTotal;\n                // no use setting the quantityLeftInAction because that does not apply for buy X for $Y type promotions, it is all or nothing\n            } else {\n                actionResultInfo.ranAction = false;\n                // clear out any action uses for this so they don't become part of anything else\n                cart.resetPromoRuleUse(productPromoAction.getString(\"productPromoId\"), productPromoAction.getString(\"productPromoRuleId\"));\n            }\n        } else if (\"PROMO_ORDER_PERCENT\".equals(productPromoActionEnumId)) {\n            double percentage = -(productPromoAction.get(\"amount\") == null ? 0.0 : (productPromoAction.getDouble(\"amount\").doubleValue() / 100.0));\n            double amount = cart.getSubTotalForPromotions() * percentage;\n            if (amount != 0) {\n                doOrderPromoAction(productPromoAction, cart, amount, \"amount\", delegator);\n                actionResultInfo.ranAction = true;\n                actionResultInfo.totalDiscountAmount = amount;\n            }\n        } else if (\"PROMO_ORDER_AMOUNT\".equals(productPromoActionEnumId)) {\n            double amount = -(productPromoAction.get(\"amount\") == null ? 0.0 : productPromoAction.getDouble(\"amount\").doubleValue());\n            // if amount is greater than the order sub total, set equal to order sub total, this normally wouldn't happen because there should be a condition that the order total be above a certain amount, but just in case...\n            double subTotal = cart.getSubTotalForPromotions();\n            if (-amount > subTotal) {\n                amount = -subTotal;\n            }\n            if (amount != 0) {\n                doOrderPromoAction(productPromoAction, cart, amount, \"amount\", delegator);\n                actionResultInfo.ranAction = true;\n                actionResultInfo.totalDiscountAmount = amount;\n            }\n        } else if (\"PROMO_PROD_SPPRC\".equals(productPromoActionEnumId)) {\n            // if there are productIds associated with the action then restrict to those productIds, otherwise apply for all products\n            Set productIds = ProductPromoWorker.getPromoRuleActionProductIds(productPromoAction, delegator, nowTimestamp);\n\n            // go through the cart items and for each product that has a specialPromoPrice use that price\n            Iterator cartItemIter = cart.items().iterator();\n            while (cartItemIter.hasNext()) {\n                ShoppingCartItem cartItem = (ShoppingCartItem) cartItemIter.next();\n                String itemProductId = cartItem.getProductId();\n                if (UtilValidate.isEmpty(itemProductId)) {\n                    continue;\n                }\n                \n                if (productIds.size() > 0 && !productIds.contains(itemProductId)) {\n                    continue;\n                }\n                \n                if (cartItem.getSpecialPromoPrice() == null) {\n                    continue;\n                }\n                \n                // get difference between basePrice and specialPromoPrice and adjust for that\n                double difference = -(cartItem.getBasePrice() * cartItem.getRentalAdjustment() - cartItem.getSpecialPromoPrice().doubleValue());\n\n                if (difference != 0.0) {\n                    double quantityUsed = cartItem.addPromoQuantityCandidateUse(cartItem.getQuantity(), productPromoAction, false);\n                    if (quantityUsed > 0) {\n                        double amount = difference * quantityUsed;\n                        doOrderItemPromoAction(productPromoAction, cartItem, amount, \"amount\", delegator);\n                        actionResultInfo.ranAction = true;\n                        actionResultInfo.totalDiscountAmount = amount;\n                    }\n                }\n            }\n        } else {\n            Debug.logError(\"An un-supported productPromoActionType was used: \" + productPromoActionEnumId + \", not performing any action\", module);\n            actionResultInfo.ranAction = false;\n        }\n\n        if (actionResultInfo.ranAction) {\n            // in action, if doesn't have enough quantity to use the promo at all, remove candidate promo uses and increment promoQuantityUsed; this should go for all actions, if any action runs we confirm\n            cart.confirmPromoRuleUse(productPromoAction.getString(\"productPromoId\"), productPromoAction.getString(\"productPromoRuleId\"));\n        } else {\n            cart.resetPromoRuleUse(productPromoAction.getString(\"productPromoId\"), productPromoAction.getString(\"productPromoRuleId\"));\n        }\n\n        return actionResultInfo;\n    }","commit_id":"8722dcfa006ea6eb3f142345040886e9d16fb784","url":"https://github.com/apache/ofbiz"},{"original_method":"@Test\n    public void testAnnotatedAdapter(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        // Provide the Sequencer to the adapeter bundle service (see main/src/.../adapter/*.java). \n        m.add(m.createComponent().setImplementation(this).setInterface(Sequencer.class.getName(), null));\n        m_ensure.waitForStep(4, 10000);\n    }","id":63810,"modified_method":"/**\n     * Check if an adapter gets injected with its adaptee using default auto config mode.\n     */\n    @Test\n    public void testAnnotatedAdapterAutoConfig(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        // Provide the Sequencer to the org.apache.felix.dm.test.bundle.annotation.adapter.AdapterTest bundle \n        m.add(makeSequencer(m, \"AdapterAutoConfig\"));\n        m_ensure.waitForStep(3, 10000);\n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"/**\n     * Registers the Sequencer interface, for activating a given testcase\n     */\n    protected void registerSequencer(DependencyManager m, final String testName) \n    {\n        m.add(m.createComponent()\n              .setImplementation(this)\n              .setInterface(Sequencer.class.getName(),new Hashtable() {{\n                  put(\"test\", testName);\n              }}));\n    }","id":63811,"modified_method":"/**\n     * Provide a Sequencer with a name service property.\n     */\n    protected Component makeSequencer(DependencyManager m, String name)\n    {\n        Hashtable props = new Hashtable();\n        props.put(\"name\", name);\n        return m.createComponent().setImplementation(this).setInterface(Sequencer.class.getName(), props);\n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"@Test\n    public void testAnnotatedAspect(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        // Provide the Sequencer to the \"ServiceProvider\" service (see main/src/.../AspectTest.java). \n        Dictionary props = new Hashtable() {{ put(\"test\", \"aspect.ServiceProvider\"); }};\n        m.add(m.createComponent().setImplementation(this).setInterface(Sequencer.class.getName(), props));\n        // Check if the ServiceProvider has been injected in the AspectTest service.\n        m_ensure.waitForStep(1, 10000);\n        // Provide the Sequencer for activating the ServiceProviderAspect service\n        props = new Hashtable() {{ put(\"test\", \"aspect.ServiceProviderAspect\"); }};\n        m.add(m.createComponent().setImplementation(this).setInterface(Sequencer.class.getName(), props));\n        // And check if the AspectTest has been injected with the aspect\n        m_ensure.waitForStep(2, 10000);\n    }","id":63812,"modified_method":"@Test\n    public void testAspectChain(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        // Activate service consumer\n        Component scSequencer = makeSequencer(m, \"AspectChainTest.ServiceConsumer\");\n        m.add(scSequencer);\n        // Activate service provider\n        Component spSequencer = makeSequencer(m, \"AspectChainTest.ServiceProvider\");\n        m.add(spSequencer);\n        // Activate service aspect 2\n        Component sa2Sequencer = makeSequencer(m, \"AspectChainTest.ServiceAspect2\");\n        m.add(sa2Sequencer);\n        // Activate service aspect 3\n        Component sa3Sequencer = makeSequencer(m, \"AspectChainTest.ServiceAspect3\");\n        m.add(sa3Sequencer);\n        // Activate service aspect 1\n        Component sa1Sequencer = makeSequencer(m, \"AspectChainTest.ServiceAspect1\");\n        m.add(sa1Sequencer);\n\n        m_ensure.step();\n        m_ensure.waitForStep(7, 10000);\n\n        // Deactivate service provider\n        m.remove(spSequencer);\n        // Make sure that service aspect 1 has been called in ts removed and stop callbacks \n        m_ensure.waitForStep(9, 10000);\n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"public void log(ServiceReference sr, int level, String message)\n    {\n        StringBuilder sb = new StringBuilder();\n        sb.append(getLevel(level) + \" \");\n        sb.append(message);\n        System.out.println(sb.toString());\n    }","id":63813,"modified_method":"public void log(ServiceReference sr, int level, String message)\n    {\n        if (LOG_LEVEL >= level) {\n            StringBuilder sb = new StringBuilder();\n            sb.append(getLevel(level) + \" \");\n            sb.append(message);\n            System.out.println(sb.toString());\n        }\n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"public void log(int level, String message, Throwable exception)\n    {\n        StringBuilder sb = new StringBuilder();\n        sb.append(getLevel(level) + \" \");\n        sb.append(message);\n        parse(sb, exception);\n        System.out.println(sb.toString());\n    }","id":63814,"modified_method":"public void log(int level, String message, Throwable exception)\n    {\n        if (LOG_LEVEL >= level) {\n            StringBuilder sb = new StringBuilder();\n            sb.append(getLevel(level) + \" \");\n            sb.append(message);\n            parse(sb, exception);\n            System.out.println(sb.toString());\n        }\n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"public void log(ServiceReference sr, int level, String message, Throwable exception)\n    {\n        StringBuilder sb = new StringBuilder();\n        sb.append(getLevel(level) + \" \");\n        sb.append(message);\n        parse(sb, exception);\n        System.out.println(sb.toString());\n    }","id":63815,"modified_method":"public void log(ServiceReference sr, int level, String message, Throwable exception)\n    {\n        if (LOG_LEVEL >= level) {\n            StringBuilder sb = new StringBuilder();\n            sb.append(getLevel(level) + \" \");\n            sb.append(message);\n            parse(sb, exception);\n            System.out.println(sb.toString());\n        }\n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"public void log(int level, String message)\n    {\n        System.out.println(getLevel(level) + \" \" + message);\n    }","id":63816,"modified_method":"public void log(int level, String message)\n    {\n        if (LOG_LEVEL >= level) {\n            System.out.println(getLevel(level) + \" \" + message);\n        }\n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"@Test\n    public void testComposite(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        // Provide the Sequencer service to the \"Component\" service.\n        m.add(m.createComponent() .setImplementation(this).setInterface(Sequencer.class.getName(), null));\n        // Check if the components have been initialized orderly\n        m_ensure.waitForStep(4, 10000);\n        // Stop the bundle\n        stopBundle(\"CompositeAnnotationsTest\", context);\n        // And check if the components lifecycle callbacks are called orderly\n        m_ensure.waitForStep(10, 10000);\n    }","id":63817,"modified_method":"@Test\n    public void testComposite(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        // Provide the Sequencer service to the \"Component\" service.\n        m.add(makeSequencer(m, \"CompositeService\"));\n        m.add(makeSequencer(m, \"Dependency1\"));\n        m.add(makeSequencer(m, \"Dependency2\"));\n        // Check if the components have been initialized orderly\n        m_ensure.waitForStep(4, 10000);\n        // Stop the bundle\n        stopBundle(\"CompositeAnnotationsTest\", context);\n        // And check if the components lifecycle callbacks are called orderly\n        m_ensure.waitForStep(10, 10000);\n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"@Configuration\n    public static Option[] configuration()\n    {\n        return options(\n            systemProperty(DMLOG_PROPERTY).value( \"true\" ),\n            provision(\n                mavenBundle().groupId(\"org.osgi\").artifactId(\"org.osgi.compendium\").version(\"4.1.0\"),\n                mavenBundle().groupId(\"org.apache.felix\").artifactId(\"org.apache.felix.dependencymanager\").versionAsInProject(),\n                mavenBundle().groupId(\"org.apache.felix\").artifactId(\"org.apache.felix.dependencymanager.runtime\").versionAsInProject()),\n            provision(\n                new BundleGenerator()\n                    .set(Constants.BUNDLE_SYMBOLICNAME, \"CompositeAnnotationsTest\")\n                    .set(\"Export-Package\", \"org.apache.felix.dm.test.bundle.annotation.sequencer\")\n                    .set(\"Private-Package\", \"org.apache.felix.dm.test.bundle.annotation.composite\")\n                    .set(\"Import-Package\", \"*\")\n                    .set(\"-plugin\", \"org.apache.felix.dm.annotation.plugin.bnd.AnnotationPlugin\")\n                    .build()));            \n    }","id":63818,"modified_method":"@Configuration\n    public static Option[] configuration()\n    {\n        return options(\n            systemProperty(DMLOG_PROPERTY).value( \"true\" ),\n            provision(\n                mavenBundle().groupId(\"org.osgi\").artifactId(\"org.osgi.compendium\").version(\"4.1.0\"),\n                mavenBundle().groupId(\"org.apache.felix\").artifactId(\"org.apache.felix.dependencymanager\").versionAsInProject(),\n                mavenBundle().groupId(\"org.apache.felix\").artifactId(\"org.apache.felix.dependencymanager.runtime\").versionAsInProject()),\n            provision(\n                new BundleGenerator()\n                    .set(Constants.BUNDLE_SYMBOLICNAME, \"CompositeAnnotationsTest\")\n                    .set(\"Export-Package\", \"org.apache.felix.dm.test.bundle.annotation.sequencer\")\n                    .set(\"Private-Package\", \"org.apache.felix.dm.test.bundle.annotation.composite\")\n                    .set(\"Import-Package\", \"*\")\n                    .set(\"-plugin\", \"org.apache.felix.dm.annotation.plugin.bnd.AnnotationPlugin;log=warn\")\n                    .build()));            \n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"/**\n     *  Dynamically configure our \"D\" dependency, using a dependency customization map \n     */\n    @Init\n    Map<String, String> init()\n    {\n        m_sequencer.step(1);\n        // Configure a filter for our dependency whose name is \"D\"\n        Map<String, String> customization = new HashMap<String, String>()\n        {\n            {\n                put(\"D.filter\", \"(foo=bar2)\");\n            }\n        };\n        return customization;\n    }","id":63819,"modified_method":"/**\n     *  Dynamically configure our \"D\" dependency, using a dependency customization map \n     */\n    @Init\n    Map<String, String> init()\n    {\n        m_sequencer.step(1);\n        // Configure a filter for our dependency whose name is \"D\"\n        Map<String, String> customization = new HashMap<String, String>();\n        customization.put(\"D.filter\", \"(foo=bar2)\");\n        customization.put(\"D.required\", \"true\");\n        return customization;\n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"/** \n     * Our Service is starting, and our Composites will also be \n     */\n    @Start\n    void start()\n    {\n        m_sequencer.step(3);\n        m_runnable.run(); /* step 4 */\n        // Our Component.start() method should be called once this method returns.\n    }","id":63820,"modified_method":"/** \n     * Our Service is starting, and our Composites will also be \n     */\n    @Start\n    void start()\n    {\n        System.out.println(\"start: m_runnable=\" + m_runnable);\n        m_sequencer.step(3);\n        m_runnable.run(); /* step 4 */\n        // Our Component.start() method should be called once this method returns.\n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"/**\n     * A Service that just registers/unregisters its service, using the @ServiceLifecycle annotation.\n     */\n    @Test\n    public void testServiceDependencyPropagate(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        registerSequencer(m, \"ServiceDependencyPropagateTest\"); \n        m_ensure.waitForStep(3, 10000);\n    }","id":63821,"modified_method":"/**\n     * A Service that just registers/unregisters its service, using the @ServiceLifecycle annotation.\n     */\n    @Test\n    public void testServiceDependencyPropagate(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        m.add(makeSequencer(m, \"ServiceDependencyPropagateTest\")); \n        m_ensure.waitForStep(3, 10000);\n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"/**\n     * A Service instantiated from a FactorySet, and which registers/unregisters its service,\n     * using the @ServiceLifecycle annotation.\n     */\n    @Test\n    public void testFactoryServiceWithPublisher(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        registerSequencer(m, \"FactoryServiceTestWthPublisher\"); \n        m_ensure.waitForStep(5, 10000);\n    }","id":63822,"modified_method":"/**\n     * A Service instantiated from a FactorySet, and which registers/unregisters its service,\n     * using the @ServiceLifecycle annotation.\n     */\n    @Test\n    public void testFactoryServiceWithPublisher(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        m.add(makeSequencer(m, \"FactoryServiceTestWthPublisher\")); \n        m_ensure.waitForStep(5, 10000);\n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"/**\n     * Test a BundleAdapterService which provides its interface using a @ServiceLifecycle.\n     */\n    @Test\n    public void testBundleAdapterServiceWithPublisher(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        registerSequencer(m, \"BundleAdapterServiceTestWithPublisher\"); \n        m_ensure.waitForStep(5, 10000);\n    }","id":63823,"modified_method":"/**\n     * Test a BundleAdapterService which provides its interface using a @ServiceLifecycle.\n     */\n    @Test\n    public void testBundleAdapterServiceWithPublisher(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        m.add(makeSequencer(m, \"BundleAdapterServiceTestWithPublisher\")); \n        m_ensure.waitForStep(5, 10000);\n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"/**\n     * Test a FactoryConfigurationAdapterService which provides its interface using a @ServiceLifecycle.\n     */\n    @Test\n    public void testFactoryAdapterServiceWithPublisher(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        registerSequencer(m, \"FactoryConfigurationAdapterServiceTestWithPublisher\"); \n        m_ensure.waitForStep(5, 10000);\n    }","id":63824,"modified_method":"/**\n     * Test a FactoryConfigurationAdapterService which provides its interface using a @ServiceLifecycle.\n     */\n    @Test\n    public void testFactoryAdapterServiceWithPublisher(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        m.add(makeSequencer(m, \"FactoryConfigurationAdapterServiceTestWithPublisher\")); \n        m_ensure.waitForStep(5, 10000);\n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"/**\n     * Test a ResourceAdapterService which provides its interface using a @ServiceLifecycle.\n     */\n    @Test\n    public void TestResourceAdapterServiceWithPublisher(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        registerSequencer(m, \"ResourceAdapterServiceTestWithPublisher\"); \n        m_ensure.waitForStep(5, 10000);\n    }","id":63825,"modified_method":"/**\n     * Test a ResourceAdapterService which provides its interface using a @ServiceLifecycle.\n     */\n    @Test\n    public void TestResourceAdapterServiceWithPublisher(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        m.add(makeSequencer(m, \"ResourceAdapterServiceTestWithPublisher\")); \n        m_ensure.waitForStep(5, 10000);\n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"/**\n     * A Service that just registers/unregisters its service, using the @ServiceLifecycle annotation.\n     */\n    @Test\n    public void testServiceWithPublisher(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        registerSequencer(m, \"ServiceTestWthPublisher\"); \n        m_ensure.waitForStep(4, 10000);\n    }","id":63826,"modified_method":"/**\n     * A Service that just registers/unregisters its service, using the @ServiceLifecycle annotation.\n     */\n    @Test\n    public void testServiceWithPublisher(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        m.add(makeSequencer(m, \"ServiceTestWthPublisher\")); \n        m_ensure.waitForStep(4, 10000);\n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"/**\n     * Test an AdapterService which provides its interface using a @ServiceLifecycle.\n     */\n    @Test\n    public void testAdapterServiceWithPublisher(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        registerSequencer(m, \"AdapterServiceTestWithPublisher\"); \n        m_ensure.waitForStep(6, 10000);\n    }","id":63827,"modified_method":"/**\n     * Test an AdapterService which provides its interface using a @ServiceLifecycle.\n     */\n    @Test\n    public void testAdapterServiceWithPublisher(BundleContext context)\n    {\n        DependencyManager m = new DependencyManager(context);\n        m.add(makeSequencer(m, \"AdapterServiceTestWithPublisher\")); \n        m_ensure.waitForStep(6, 10000);\n    }","commit_id":"268f49b2c4f58edbe29dbeec465aca7a32ead3be","url":"https://github.com/apache/felix"},{"original_method":"private void setComponentValues(FileType toEdit) {\n        this.mimeTypeTextField.setText(toEdit.getMimeType());\n        for (Signature sig : toEdit.getSignatures()) {\n            this.signaturesListModel.addElement(sig);\n        }\n    }","id":63828,"modified_method":"/**\n     * Sets the values of the UI components according to the file type given.\n     *\n     * @param toEdit The file type used to set the components.\n     */\n    private void setComponentValues(FileType toEdit) {\n        this.mimeTypeTextField.setText(toEdit.getMimeType());\n        for (Signature sig : toEdit.getSignatures()) {\n            this.signaturesListModel.addElement(sig);\n        }\n    }","commit_id":"cbf5dc1726844166ae24aad9047225ad59816dbc","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"AddFileTypePanel(FileType toEdit) {\n        this();\n        this.setComponentValues(toEdit);\n    }","id":63829,"modified_method":"/**\n     * Creates a panel for editing a file type.\n     *\n     * @param toEdit The file type to edit\n     */\n    AddFileTypePanel(FileType toEdit) {\n        this();\n        this.setComponentValues(toEdit);\n    }","commit_id":"cbf5dc1726844166ae24aad9047225ad59816dbc","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void enableButtons() {\n        if (signatureList.getSelectedIndex() == -1) {\n            editSigButton.setEnabled(false);\n            deleteSigButton.setEnabled(false);\n        } else {\n            editSigButton.setEnabled(true);\n            deleteSigButton.setEnabled(true);\n        }\n    }","id":63830,"modified_method":"/**\n     * Enables or disables buttons based on whether or not an item in the list\n     * of signatures is selected.\n     */\n    private void enableButtons() {\n        if (signatureList.getSelectedIndex() == -1) {\n            editSigButton.setEnabled(false);\n            deleteSigButton.setEnabled(false);\n        } else {\n            editSigButton.setEnabled(true);\n            deleteSigButton.setEnabled(true);\n        }\n    }","commit_id":"cbf5dc1726844166ae24aad9047225ad59816dbc","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void addTypeListSelectionListener() {\n        this.signatureList.addListSelectionListener(new ListSelectionListener() {\n            @Override\n            public void valueChanged(ListSelectionEvent e) {\n                if (e.getValueIsAdjusting() == false) {\n                    enableButtons();\n\n                }\n            }\n        });\n    }","id":63831,"modified_method":"/**\n     * Adds the selection listener to the list so that actions are taken based\n     * on whether or not an item in the list of signatures is selected.\n     */\n    private void addTypeListSelectionListener() {\n        this.signatureList.addListSelectionListener(new ListSelectionListener() {\n            @Override\n            public void valueChanged(ListSelectionEvent e) {\n                if (e.getValueIsAdjusting() == false) {\n                    enableButtons();\n\n                }\n            }\n        });\n    }","commit_id":"cbf5dc1726844166ae24aad9047225ad59816dbc","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Determines whether or not the a file matches a user-defined or Autopsy\n     * predefined file type. If postToBlackBoard is true, and a match is found,\n     * and the file type definition calls for an alert on a match, an\n     * interesting file hit artifact is posted to the blackboard.\n     *\n     * @param file             The file to test.\n     * @param postToBlackBoard Whether an interesting file hit could be posted\n     *                         to the blackboard.\n     *\n     * @return The file type name string or null, if no match is detected.\n     *\n     * @throws TskCoreException\n     */\n    private String detectUserDefinedType(AbstractFile file, boolean postToBlackBoard) throws TskCoreException {\n        for (FileType fileType : userDefinedFileTypes) {\n            if (fileType.matches(file)) {\n                return fileType.getMimeType();\n            }\n        }\n        return null;\n    }","id":63832,"modified_method":"/**\n     * Determines whether or not the a file matches a user-defined or Autopsy\n     * predefined file type.\n     *\n     * @param file             The file to test.\n     *\n     * @return The file type name string or null, if no match is detected.\n     *\n     * @throws TskCoreException\n     */\n    private String detectUserDefinedType(AbstractFile file) throws TskCoreException {\n        for (FileType fileType : userDefinedFileTypes) {\n            if (fileType.matches(file)) {\n                return fileType.getMimeType();\n            }\n        }\n        return null;\n    }","commit_id":"cbf5dc1726844166ae24aad9047225ad59816dbc","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Detects the MIME type of a file. The result is saved to the case database\n     * only if the add to case dastabase flag is set.\n     *\n     * @param file        The file to test.\n     * @param addToCaseDb Whether the MIME type should be added to the case\n     *                    database. This flag is part of a partial workaround\n     *                    for a check-then-act-race condition (see notes in\n     *                    comments for details).\n     *\n     * @return A MIME type name. If file type could not be detected or results\n     *         were uncertain, octet-stream is returned.\n     *\n     * @throws TskCoreException If there is a problem writing the result to the\n     *                          case database.\n     */\n    private String detect(AbstractFile file, boolean addToCaseDb) throws TskCoreException {\n        /*\n         * Check to see if the file has already been typed. This is the \"check\"\n         * part of a check-then-act race condition (see note below).\n         */\n        String mimeType = file.getMIMEType();\n        if (null != mimeType) {\n            return mimeType;\n        }\n\n        /*\n         * Mark non-regular files (refer to TskData.TSK_FS_META_TYPE_ENUM),\n         * zero-sized files, unallocated space, and unused blocks (refer to\n         * TskData.TSK_DB_FILES_TYPE_ENUM) as octet-stream.\n         */\n        if (!file.isFile() || file.getSize() <= 0\n                || (file.getType() == TskData.TSK_DB_FILES_TYPE_ENUM.UNALLOC_BLOCKS)\n                || (file.getType() == TskData.TSK_DB_FILES_TYPE_ENUM.UNUSED_BLOCKS)\n                || (file.getType() == TskData.TSK_DB_FILES_TYPE_ENUM.VIRTUAL_DIR)) {\n            mimeType = MimeTypes.OCTET_STREAM;\n        }\n\n        /*\n         * If the file is a regular file, give precedence to user-defined types.\n         */\n        if (null == mimeType) {\n            mimeType = detectUserDefinedType(file, addToCaseDb);\n        }\n\n        /*\n         * If the file does not match a user-defined type, send the initial\n         * bytes to Tika.\n         */\n        if (null == mimeType) {\n            try {\n                byte buf[];\n                int len = file.read(buffer, 0, BUFFER_SIZE);\n                if (len < BUFFER_SIZE) {\n                    buf = new byte[len];\n                    System.arraycopy(buffer, 0, buf, 0, len);\n                } else {\n                    buf = buffer;\n                }\n                String tikaType = tika.detect(buf, file.getName());\n\n                /*\n                 * Remove the Tika suffix from the MIME type name.\n                 */\n                mimeType = tikaType.replace(\"tika-\", \"\"); //NON-NLS\n\n            } catch (Exception ignored) {\n                /*\n                 * This exception is swallowed and not logged rather than\n                 * propagated because files in data sources are not always\n                 * consistent with their file system metadata, making for read\n                 * errors. Also, Tika can be a bit flaky at times, making this a\n                 * best effort endeavor. Default to octet-stream.\n                 */\n                mimeType = MimeTypes.OCTET_STREAM;\n            }\n        }\n\n        /*\n         * If adding the result to the case database, do so now.\n         *\n         * NOTE: This condtional is a way to deal with the check-then-act race\n         * condition created by the gap between querying the MIME type and\n         * recording it. It is not really a problem for the mime_type column of\n         * the tsk_files table, but it can lead to duplicate blackboard posts,\n         * and the posts are required to maintain backward compatibility.\n         * Various mitigation strategies were considered. It was decided to go\n         * with the policy that only ingest modules are allowed to add file\n         * types to the case database, at least until such time as file types\n         * are no longer posted to the blackboard. Of course, this is not a\n         * perfect solution. It's not really enforceable for community\n         * contributed plug ins and it does not handle the unlikely but possible\n         * scenario of multiple processes typing the same file for a multi-user\n         * case.\n         */\n        if (addToCaseDb) {\n            /*\n             * Add the MIME type to the files table in the case database.\n             */\n            Case.getCurrentCase().getSleuthkitCase().setFileMIMEType(file, mimeType);\n\n            /*\n             * Post to the blackboard, adding the file type attribute to the\n             * general info artifact. A property change is not fired for this\n             * posting because general info artifacts are different from other\n             * artifacts, e.g., they are not displayed in the results tree.\n             */\n            BlackboardArtifact getInfoArt = file.getGenInfoArtifact();\n            @SuppressWarnings(\"deprecation\")\n            BlackboardAttribute batt = new BlackboardAttribute(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_FILE_TYPE_SIG, FileTypeIdModuleFactory.getModuleName(), mimeType);\n            getInfoArt.addAttribute(batt);\n        }\n\n        return mimeType;\n    }","id":63833,"modified_method":"/**\n     * Detects the MIME type of a file. The result is saved to the case database\n     * only if the add to case dastabase flag is set.\n     *\n     * @param file        The file to test.\n     * @param addToCaseDb Whether the MIME type should be added to the case\n     *                    database. This flag is part of a partial workaround\n     *                    for a check-then-act-race condition (see notes in\n     *                    comments for details).\n     *\n     * @return A MIME type name. If file type could not be detected or results\n     *         were uncertain, octet-stream is returned.\n     *\n     * @throws TskCoreException If there is a problem writing the result to the\n     *                          case database.\n     */\n    private String detect(AbstractFile file, boolean addToCaseDb) throws TskCoreException {\n        /*\n         * Check to see if the file has already been typed. This is the \"check\"\n         * part of a check-then-act race condition (see note below).\n         */\n        String mimeType = file.getMIMEType();\n        if (null != mimeType) {\n            return mimeType;\n        }\n\n        /*\n         * Mark non-regular files (refer to TskData.TSK_FS_META_TYPE_ENUM),\n         * zero-sized files, unallocated space, and unused blocks (refer to\n         * TskData.TSK_DB_FILES_TYPE_ENUM) as octet-stream.\n         */\n        if (!file.isFile() || file.getSize() <= 0\n                || (file.getType() == TskData.TSK_DB_FILES_TYPE_ENUM.UNALLOC_BLOCKS)\n                || (file.getType() == TskData.TSK_DB_FILES_TYPE_ENUM.UNUSED_BLOCKS)\n                || (file.getType() == TskData.TSK_DB_FILES_TYPE_ENUM.VIRTUAL_DIR)) {\n            mimeType = MimeTypes.OCTET_STREAM;\n        }\n\n        /*\n         * If the file is a regular file, give precedence to user-defined types.\n         */\n        if (null == mimeType) {\n            mimeType = detectUserDefinedType(file);\n        }\n\n        /*\n         * If the file does not match a user-defined type, send the initial\n         * bytes to Tika.\n         */\n        if (null == mimeType) {\n            try {\n                byte buf[];\n                int len = file.read(buffer, 0, BUFFER_SIZE);\n                if (len < BUFFER_SIZE) {\n                    buf = new byte[len];\n                    System.arraycopy(buffer, 0, buf, 0, len);\n                } else {\n                    buf = buffer;\n                }\n                String tikaType = tika.detect(buf, file.getName());\n\n                /*\n                 * Remove the Tika suffix from the MIME type name.\n                 */\n                mimeType = tikaType.replace(\"tika-\", \"\"); //NON-NLS\n\n            } catch (Exception ignored) {\n                /*\n                 * This exception is swallowed and not logged rather than\n                 * propagated because files in data sources are not always\n                 * consistent with their file system metadata, making for read\n                 * errors. Also, Tika can be a bit flaky at times, making this a\n                 * best effort endeavor. Default to octet-stream.\n                 */\n                mimeType = MimeTypes.OCTET_STREAM;\n            }\n        }\n\n        /*\n         * If adding the result to the case database, do so now.\n         *\n         * NOTE: This condtional is a way to deal with the check-then-act race\n         * condition created by the gap between querying the MIME type and\n         * recording it. It is not really a problem for the mime_type column of\n         * the tsk_files table, but it can lead to duplicate blackboard posts,\n         * and the posts are required to maintain backward compatibility.\n         * Various mitigation strategies were considered. It was decided to go\n         * with the policy that only ingest modules are allowed to add file\n         * types to the case database, at least until such time as file types\n         * are no longer posted to the blackboard. Of course, this is not a\n         * perfect solution. It's not really enforceable for community\n         * contributed plug ins and it does not handle the unlikely but possible\n         * scenario of multiple processes typing the same file for a multi-user\n         * case.\n         */\n        if (addToCaseDb) {\n            /*\n             * Add the MIME type to the files table in the case database.\n             */\n            Case.getCurrentCase().getSleuthkitCase().setFileMIMEType(file, mimeType);\n\n            /*\n             * Post to the blackboard, adding the file type attribute to the\n             * general info artifact. A property change is not fired for this\n             * posting because general info artifacts are different from other\n             * artifacts, e.g., they are not displayed in the results tree.\n             */\n            BlackboardArtifact getInfoArt = file.getGenInfoArtifact();\n            @SuppressWarnings(\"deprecation\")\n            BlackboardAttribute batt = new BlackboardAttribute(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_FILE_TYPE_SIG, FileTypeIdModuleFactory.getModuleName(), mimeType);\n            getInfoArt.addAttribute(batt);\n        }\n\n        return mimeType;\n    }","commit_id":"cbf5dc1726844166ae24aad9047225ad59816dbc","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void editTypeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTypeButtonActionPerformed\n        int selected = this.typesList.getSelectedIndex();\n        AddFileTypeDialog dialog = new AddFileTypeDialog(this.typesListModel.get(this.typesList.getSelectedIndex()));\n        AddFileTypeDialog.BUTTON_PRESSED result = dialog.getResult();\n        if (result == AddFileTypeDialog.BUTTON_PRESSED.OK) {\n            this.typesListModel.remove(selected);\n            this.typesListModel.add(selected, dialog.getFileType());\n            this.typesList.setSelectedIndex(selected);\n        }\n    }","id":63834,"modified_method":"private void editTypeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTypeButtonActionPerformed\n        int selected = this.typesList.getSelectedIndex();\n        AddFileTypeDialog dialog = new AddFileTypeDialog(this.typesListModel.get(this.typesList.getSelectedIndex()));\n        AddFileTypeDialog.BUTTON_PRESSED result = dialog.getResult();\n        if (result == AddFileTypeDialog.BUTTON_PRESSED.OK) {\n            this.fileTypes.remove(selected);\n            this.fileTypes.add(selected, dialog.getFileType());\n            updateFileTypesListModel();\n        }\n    }","commit_id":"cbf5dc1726844166ae24aad9047225ad59816dbc","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void newTypeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTypeButtonActionPerformed\n        AddFileTypeDialog dialog = new AddFileTypeDialog();\n        AddFileTypeDialog.BUTTON_PRESSED result = dialog.getResult();\n        if (result == AddFileTypeDialog.BUTTON_PRESSED.OK) {\n            this.typesListModel.addElement(dialog.getFileType());\n        }\n\n    }","id":63835,"modified_method":"private void newTypeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTypeButtonActionPerformed\n        AddFileTypeDialog dialog = new AddFileTypeDialog();\n        AddFileTypeDialog.BUTTON_PRESSED result = dialog.getResult();\n        if (result == AddFileTypeDialog.BUTTON_PRESSED.OK) {\n            fileTypes.add(dialog.getFileType());\n            updateFileTypesListModel();\n        }\n\n    }","commit_id":"cbf5dc1726844166ae24aad9047225ad59816dbc","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public final void selectElement(final Object element, VirtualFile virtualFile) {\n    if (element == null) {\n      return;\n    }\n\n    try {\n      AbstractTreeNode node = goDownToElement(element, virtualFile);\n      if (node == null) return;\n      AbstractTreeNode parentElement = node.getParent();\n      if (parentElement == null) return;\n\n      buildList(parentElement);\n\n      for (int i = 0; i < myModel.size(); i++) {\n        if (myModel.getElementAt(i) instanceof AbstractTreeNode) {\n          final AbstractTreeNode desc = (AbstractTreeNode)myModel.getElementAt(i);\n          if (desc.getValue() instanceof StructureViewTreeElement) {\n            StructureViewTreeElement treeelement = (StructureViewTreeElement)desc.getValue();\n            if (element.equals(treeelement.getValue())) {\n              ListScrollingUtil.selectItem(myList, i);\n            break;\n            }\n          }\n          else {\n            if (element.equals(desc.getValue())) {\n              ListScrollingUtil.selectItem(myList, i);\n            break;\n            }\n          }\n        }\n      }\n    }\n    finally {\n      updateParentTitle();\n    }\n  }","id":63836,"modified_method":"public final void selectElement(final Object element, VirtualFile virtualFile) {\n    if (element == null) {\n      return;\n    }\n\n    try {\n      AbstractTreeNode node = goDownToElement(element, virtualFile);\n      if (node == null) return;\n      AbstractTreeNode parentElement = node.getParent();\n      if (parentElement == null) return;\n\n      buildList(parentElement);\n\n      for (int i = 0; i < myModel.getSize(); i++) {\n        if (myModel.getElementAt(i) instanceof AbstractTreeNode) {\n          final AbstractTreeNode desc = (AbstractTreeNode)myModel.getElementAt(i);\n          if (desc.getValue() instanceof StructureViewTreeElement) {\n            StructureViewTreeElement treeelement = (StructureViewTreeElement)desc.getValue();\n            if (element.equals(treeelement.getValue())) {\n              ListScrollingUtil.selectItem(myList, i);\n            break;\n            }\n          }\n          else {\n            if (element.equals(desc.getValue())) {\n              ListScrollingUtil.selectItem(myList, i);\n            break;\n            }\n          }\n        }\n      }\n    }\n    finally {\n      updateParentTitle();\n    }\n  }","commit_id":"8c1e0e468e86383e1f29f7978074f5f1a15aabb2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void restoreSelection(final SelectionInfo selection) {\n    final ArrayList selectedObjects = selection.mySelectedObjects;\n    int leadIndex = -1;\n\n    final ListSelectionModel selectionModel = myList.getSelectionModel();\n\n    selectionModel.clearSelection();\n    if (selectedObjects.size() > 0) {\n      for (int i = 0; i < selectedObjects.size(); i++) {\n        final Object o = selectedObjects.get(i);\n        final int index = myModel.indexOf(o);\n        if (index > -1) {\n          selectionModel.addSelectionInterval(index, index);\n          if (o == selection.myLeadSelection) {\n            leadIndex = index;\n          }\n        }\n      }\n\n      if (selectionModel.getMinSelectionIndex() == -1) {\n        final int toSelect = Math.min(selection.myLeadSelectionIndex, myModel.size() - 1);\n        if (toSelect >= 0) {\n          myList.setSelectedIndex(toSelect);\n        }\n      }\n      else if (leadIndex != -1) {\n        selectionModel.setLeadSelectionIndex(leadIndex);\n      }\n    }\n  }","id":63837,"modified_method":"private void restoreSelection(final SelectionInfo selection) {\n    final ArrayList selectedObjects = selection.mySelectedObjects;\n    int leadIndex = -1;\n\n    final ListSelectionModel selectionModel = myList.getSelectionModel();\n\n    selectionModel.clearSelection();\n    if (selectedObjects.size() > 0) {\n      for (int i = 0; i < selectedObjects.size(); i++) {\n        final Object o = selectedObjects.get(i);\n        final int index = myModel.indexOf(o);\n        if (index > -1) {\n          selectionModel.addSelectionInterval(index, index);\n          if (o == selection.myLeadSelection) {\n            leadIndex = index;\n          }\n        }\n      }\n\n      if (selectionModel.getMinSelectionIndex() == -1) {\n        final int toSelect = Math.min(selection.myLeadSelectionIndex, myModel.getSize() - 1);\n        if (toSelect >= 0) {\n          myList.setSelectedIndex(toSelect);\n        }\n      }\n      else if (leadIndex != -1) {\n        selectionModel.setLeadSelectionIndex(leadIndex);\n      }\n    }\n  }","commit_id":"8c1e0e468e86383e1f29f7978074f5f1a15aabb2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private AbstractTreeNode performDeepSearch(Object[] nodes, Object element) {\n    for (int i = 0; i < nodes.length; i++) {\n      AbstractTreeNode node = (AbstractTreeNode)nodes[i];\n      if (nodeIsAcceptableForElement(node, element)) return node;\n      AbstractTreeNode nodeResult = performDeepSearch(getChildren(node), element);\n      if (nodeResult != null) {\n        return nodeResult;\n      }\n    }\n    return null;\n  }","id":63838,"modified_method":"private AbstractTreeNode performDeepSearch(Object[] nodes, Object element) {\n    for (Object node1 : nodes) {\n      AbstractTreeNode node = (AbstractTreeNode)node1;\n      if (nodeIsAcceptableForElement(node, element)) return node;\n      AbstractTreeNode nodeResult = performDeepSearch(getChildren(node), element);\n      if (nodeResult != null) {\n        return nodeResult;\n      }\n    }\n    return null;\n  }","commit_id":"8c1e0e468e86383e1f29f7978074f5f1a15aabb2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected final void updateList() {\n    if (myIsDisposed || myCurrentParent == null) {\n      return;\n    }\n    if (myTreeStructure.hasSomethingToCommit()) {\n      myTreeStructure.commit();\n    }\n\n    final AbstractTreeNode initialParentDescriptor = myCurrentParent;\n    AbstractTreeNode parentDescriptor = initialParentDescriptor;\n\n    while (true) {\n      parentDescriptor.update();\n      if (parentDescriptor.getValue() != null) break;\n      parentDescriptor = parentDescriptor.getParent();\n    }\n\n    final Object[] children = getChildren(parentDescriptor);\n    final com.intellij.util.containers.HashMap<Object,Integer> elementToIndexMap = new com.intellij.util.containers.HashMap<Object, Integer>();\n    for (int i = 0; i < children.length; i++) {\n      elementToIndexMap.put(children[i], new Integer(i));\n    }\n\n    final List resultDescriptors = new ArrayList();\n    final Object[] listChildren = myModel.toArray();\n    for (int i = 0; i < listChildren.length; i++) {\n      final Object child = listChildren[i];\n      if (!(child instanceof NodeDescriptor)) {\n      continue;\n      }\n      final NodeDescriptor descriptor = (NodeDescriptor)child;\n      descriptor.update();\n      final Object newElement = descriptor.getElement();\n      final Integer index = (newElement != null) ? elementToIndexMap.get(newElement) : null;\n      if (index != null) {\n        resultDescriptors.add(descriptor);\n        descriptor.setIndex(index.intValue());\n        elementToIndexMap.remove(newElement);\n      }\n    }\n\n    for (Iterator iterator = elementToIndexMap.keySet().iterator(); iterator.hasNext();) {\n      final Object child = iterator.next();\n      final Integer index = elementToIndexMap.get(child);\n      if (index != null) {\n        final NodeDescriptor childDescr = myTreeStructure.createDescriptor(child, parentDescriptor);\n        childDescr.setIndex(index.intValue());\n        childDescr.update();\n        resultDescriptors.add(childDescr);\n      }\n    }\n\n    final SelectionInfo selection = storeSelection();\n    if (myComparator != null) {\n      Collections.sort(resultDescriptors, myComparator);\n    }\n    else {\n      Collections.sort(resultDescriptors, IndexComparator.INSTANCE);\n    }\n\n    myModel.removeAllElements();\n    if (shouldAddTopElement()) {\n      myModel.addElement(new TopLevelNode(myProject, parentDescriptor.getValue()));\n    }\n    for (int i = 0; i < resultDescriptors.size(); i++) {\n      final NodeDescriptor descriptor = (NodeDescriptor)resultDescriptors.get(i);\n      myModel.addElement(descriptor);\n    }\n    restoreSelection(selection);\n    updateParentTitle();\n  }","id":63839,"modified_method":"protected final void updateList() {\n    if (myIsDisposed || myCurrentParent == null) {\n      return;\n    }\n    if (myTreeStructure.hasSomethingToCommit()) {\n      myTreeStructure.commit();\n    }\n\n    final AbstractTreeNode initialParentDescriptor = myCurrentParent;\n    AbstractTreeNode parentDescriptor = initialParentDescriptor;\n\n    while (true) {\n      parentDescriptor.update();\n      if (parentDescriptor.getValue() != null) break;\n      parentDescriptor = parentDescriptor.getParent();\n    }\n\n    final Object[] children = getChildren(parentDescriptor);\n    final com.intellij.util.containers.HashMap<Object,Integer> elementToIndexMap = new com.intellij.util.containers.HashMap<Object, Integer>();\n    for (int i = 0; i < children.length; i++) {\n      elementToIndexMap.put(children[i], new Integer(i));\n    }\n\n    final List resultDescriptors = new ArrayList();\n    final Object[] listChildren = myModel.toArray();\n    for (int i = 0; i < listChildren.length; i++) {\n      final Object child = listChildren[i];\n      if (!(child instanceof NodeDescriptor)) {\n      continue;\n      }\n      final NodeDescriptor descriptor = (NodeDescriptor)child;\n      descriptor.update();\n      final Object newElement = descriptor.getElement();\n      final Integer index = (newElement != null) ? elementToIndexMap.get(newElement) : null;\n      if (index != null) {\n        resultDescriptors.add(descriptor);\n        descriptor.setIndex(index.intValue());\n        elementToIndexMap.remove(newElement);\n      }\n    }\n\n    for (Iterator iterator = elementToIndexMap.keySet().iterator(); iterator.hasNext();) {\n      final Object child = iterator.next();\n      final Integer index = elementToIndexMap.get(child);\n      if (index != null) {\n        final NodeDescriptor childDescr = myTreeStructure.createDescriptor(child, parentDescriptor);\n        childDescr.setIndex(index.intValue());\n        childDescr.update();\n        resultDescriptors.add(childDescr);\n      }\n    }\n\n    final SelectionInfo selection = storeSelection();\n    if (myComparator != null) {\n      Collections.sort(resultDescriptors, myComparator);\n    }\n    else {\n      Collections.sort(resultDescriptors, IndexComparator.INSTANCE);\n    }\n    \n    if (shouldAddTopElement()) {\n      final List elems = new ArrayList();\n      elems.add(new TopLevelNode(myProject, parentDescriptor.getValue()));\n      elems.addAll(resultDescriptors);\n      myModel.replaceElements(elems);\n    }\n    else {\n      myModel.replaceElements(resultDescriptors);\n    }\n    \n    restoreSelection(selection);\n    updateParentTitle();\n  }","commit_id":"8c1e0e468e86383e1f29f7978074f5f1a15aabb2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private SelectionInfo storeSelection() {\n    final ListSelectionModel selectionModel = myList.getSelectionModel();\n    final ArrayList selectedObjects = new ArrayList();\n    final int[] selectedIndices = myList.getSelectedIndices();\n    final int leadSelectionIndex = selectionModel.getLeadSelectionIndex();\n    Object leadSelection = null;\n    for (int i = 0; i < selectedIndices.length; i++) {\n      final int index = selectedIndices[i];\n      if (index < myList.getModel().getSize()) {\n        final Object o = myModel.get(index);\n        selectedObjects.add(o);\n        if (index == leadSelectionIndex) {\n          leadSelection = o;\n        }\n      }\n    }\n    return new SelectionInfo(selectedObjects, leadSelectionIndex, leadSelection);\n  }","id":63840,"modified_method":"private SelectionInfo storeSelection() {\n    final ListSelectionModel selectionModel = myList.getSelectionModel();\n    final ArrayList selectedObjects = new ArrayList();\n    final int[] selectedIndices = myList.getSelectedIndices();\n    final int leadSelectionIndex = selectionModel.getLeadSelectionIndex();\n    Object leadSelection = null;\n    for (int i = 0; i < selectedIndices.length; i++) {\n      final int index = selectedIndices[i];\n      if (index < myList.getModel().getSize()) {\n        final Object o = myModel.getElementAt(index);\n        selectedObjects.add(o);\n        if (index == leadSelectionIndex) {\n          leadSelection = o;\n        }\n      }\n    }\n    return new SelectionInfo(selectedObjects, leadSelectionIndex, leadSelection);\n  }","commit_id":"8c1e0e468e86383e1f29f7978074f5f1a15aabb2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"AbstractListBuilder(\n    final Project project,\n    final JList list,\n    final DefaultListModel model,\n    final AbstractTreeStructure treeStructure,\n    final Comparator comparator,\n    final boolean showRoot\n    ) {\n    myProject = project;\n    myList = list;\n    myModel = model;\n    myTreeStructure = treeStructure;\n    myComparator = comparator;\n\n    final Object rootElement = myTreeStructure.getRootElement();\n    final Object[] rootChildren = myTreeStructure.getChildElements(rootElement);\n\n    if (!showRoot && rootChildren.length == 1) {\n      myShownRoot = (AbstractTreeNode)rootChildren[0];\n    }\n    else {\n      myShownRoot = (AbstractTreeNode)rootElement;\n    }\n  }","id":63841,"modified_method":"AbstractListBuilder(\n    final Project project,\n    final JList list,\n    final Model model,\n    final AbstractTreeStructure treeStructure,\n    final Comparator comparator,\n    final boolean showRoot\n    ) {\n    myProject = project;\n    myList = list;\n    myModel = model;\n    myTreeStructure = treeStructure;\n    myComparator = comparator;\n\n    final Object rootElement = myTreeStructure.getRootElement();\n    final Object[] rootChildren = myTreeStructure.getChildElements(rootElement);\n\n    if (!showRoot && rootChildren.length == 1) {\n      myShownRoot = (AbstractTreeNode)rootChildren[0];\n    }\n    else {\n      myShownRoot = (AbstractTreeNode)rootElement;\n    }\n  }","commit_id":"8c1e0e468e86383e1f29f7978074f5f1a15aabb2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"final void goUp() {\n    if (myCurrentParent == myShownRoot.getParent()) {\n      return;\n    }\n    final AbstractTreeNode element = myCurrentParent.getParent();\n    if (element == null) {\n      return;\n    }\n\n    try {\n      AbstractTreeNode oldParent = myCurrentParent;\n\n      buildList(element);\n\n      for (int i = 0; i < myModel.size(); i++) {\n        if (myModel.getElementAt(i) instanceof NodeDescriptor) {\n          final NodeDescriptor desc = (NodeDescriptor)myModel.getElementAt(i);\n          final Object elem = desc.getElement();\n          if (oldParent.equals(elem)) {\n            ListScrollingUtil.selectItem(myList, i);\n          break;\n          }\n        }\n      }\n    }\n    finally {\n      updateParentTitle();\n    }\n  }","id":63842,"modified_method":"final void goUp() {\n    if (myCurrentParent == myShownRoot.getParent()) {\n      return;\n    }\n    final AbstractTreeNode element = myCurrentParent.getParent();\n    if (element == null) {\n      return;\n    }\n\n    try {\n      AbstractTreeNode oldParent = myCurrentParent;\n\n      buildList(element);\n\n      for (int i = 0; i < myModel.getSize(); i++) {\n        if (myModel.getElementAt(i) instanceof NodeDescriptor) {\n          final NodeDescriptor desc = (NodeDescriptor)myModel.getElementAt(i);\n          final Object elem = desc.getElement();\n          if (oldParent.equals(elem)) {\n            ListScrollingUtil.selectItem(myList, i);\n          break;\n          }\n        }\n      }\n    }\n    finally {\n      updateParentTitle();\n    }\n  }","commit_id":"8c1e0e468e86383e1f29f7978074f5f1a15aabb2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public final void enterElement(final PsiElement element, VirtualFile file) {\n    try {\n      AbstractTreeNode lastPathNode = null;\n      lastPathNode = goDownToElement(element, file);\n      if (lastPathNode == null) return;\n      buildList(lastPathNode);\n      ListScrollingUtil.ensureSelectionExists(myList);\n    }\n    finally {\n      updateParentTitle();\n    }\n  }","id":63843,"modified_method":"public final void enterElement(final PsiElement element, VirtualFile file) {\n    try {\n      AbstractTreeNode lastPathNode = goDownToElement(element, file);\n      if (lastPathNode == null) return;\n      buildList(lastPathNode);\n      ListScrollingUtil.ensureSelectionExists(myList);\n    }\n    finally {\n      updateParentTitle();\n    }\n  }","commit_id":"8c1e0e468e86383e1f29f7978074f5f1a15aabb2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected static void assertListsEqual(DefaultListModel model, String expected) {\n    assertEquals(expected, IdeaTestUtil.print(model));\n  }","id":63844,"modified_method":"protected static void assertListsEqual(ListModel model, String expected) {\n    assertEquals(expected, IdeaTestUtil.print(model));\n  }","commit_id":"8c1e0e468e86383e1f29f7978074f5f1a15aabb2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public CommanderPanel(final Project project, final boolean enablePopupMenu) {\n    super(new BorderLayout());\n    myProject = project;\n    myModel = new DefaultListModel();\n    myList = new JList(myModel);\n    myList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n\n    if (enablePopupMenu) {\n      myCopyPasteDelegator = new CopyPasteManagerEx.CopyPasteDelegator(myProject, myList) {\n        @NotNull\n        protected PsiElement[] getSelectedElements() {\n          return CommanderPanel.this.getSelectedElements();\n        }\n      };\n    }\n\n    myListSpeedSearch = new ListSpeedSearch(myList);\n\n    ListScrollingUtil.installActions(myList);\n\n    myList.registerKeyboardAction(new ActionListener() {\n      public void actionPerformed(final ActionEvent e) {\n        if (myBuilder == null) return;\n        myBuilder.buildRoot();\n      }\n    }, KeyStroke.getKeyStroke(KeyEvent.VK_BACK_SLASH, SystemInfo.isMac ? KeyEvent.META_MASK : KeyEvent.CTRL_MASK), JComponent.WHEN_FOCUSED);\n\n    myList.getInputMap(JComponent.WHEN_FOCUSED).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), ACTION_DRILL_DOWN);\n    myList.getInputMap(JComponent.WHEN_FOCUSED)\n      .put(KeyStroke.getKeyStroke(KeyEvent.VK_PAGE_DOWN, SystemInfo.isMac ? KeyEvent.META_MASK : KeyEvent.CTRL_MASK), ACTION_DRILL_DOWN);\n    myList.getActionMap().put(ACTION_DRILL_DOWN, new AbstractAction() {\n      public void actionPerformed(final ActionEvent e) {\n        drillDown();\n      }\n    });\n    myList.addMouseListener(new MouseAdapter() {\n      public void mouseClicked(final MouseEvent e) {\n        if (e.getClickCount() == 2) {\n          drillDown();\n        }\n      }\n    });\n    myList.getInputMap(JComponent.WHEN_FOCUSED)\n      .put(KeyStroke.getKeyStroke(KeyEvent.VK_PAGE_UP, SystemInfo.isMac ? KeyEvent.META_MASK : KeyEvent.CTRL_MASK), ACTION_GO_UP);\n    myList.getInputMap(JComponent.WHEN_FOCUSED).put(KeyStroke.getKeyStroke(KeyEvent.VK_BACK_SPACE, 0), ACTION_GO_UP);\n    myList.getActionMap().put(ACTION_GO_UP, new AbstractAction() {\n      public void actionPerformed(final ActionEvent e) {\n        goUp();\n      }\n    });\n\n    myList.getActionMap().put(\"selectAll\", new AbstractAction() {\n      public void actionPerformed(final ActionEvent e) {\n      }\n    });\n\n\n    if (enablePopupMenu) {\n      myList.addMouseListener(new PopupHandler() {\n        public void invokePopup(final Component comp, final int x, final int y) {\n          CommanderPanel.this.invokePopup(comp, x, y);\n        }\n      });\n    }\n\n    myList.addKeyListener(new KeyAdapter() {\n      public void keyPressed(final KeyEvent e) {\n        if (KeyEvent.VK_ESCAPE == e.getKeyCode()) {\n          if (e.isConsumed()) return;\n          final CopyPasteManagerEx copyPasteManager = (CopyPasteManagerEx)CopyPasteManager.getInstance();\n          final boolean[] isCopied = new boolean[1];\n          if (copyPasteManager.getElements(isCopied) != null && !isCopied[0]) {\n            copyPasteManager.clear();\n            e.consume();\n          }\n        }\n      }\n    });\n\n    myList.addFocusListener(new FocusAdapter() {\n      public void focusGained(final FocusEvent e) {\n        setActive(true);\n      }\n\n      public void focusLost(final FocusEvent e) {\n        setActive(false);\n      }\n    });\n\n    ListToolTipHandler.install(myList);\n  }","id":63845,"modified_method":"public CommanderPanel(final Project project, final boolean enablePopupMenu) {\n    super(new BorderLayout());\n    myProject = project;\n    myModel = new MyModel();\n    myList = new JList(myModel);\n    myList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n\n    if (enablePopupMenu) {\n      myCopyPasteDelegator = new CopyPasteManagerEx.CopyPasteDelegator(myProject, myList) {\n        @NotNull\n        protected PsiElement[] getSelectedElements() {\n          return CommanderPanel.this.getSelectedElements();\n        }\n      };\n    }\n\n    myListSpeedSearch = new ListSpeedSearch(myList);\n\n    ListScrollingUtil.installActions(myList);\n\n    myList.registerKeyboardAction(new ActionListener() {\n      public void actionPerformed(final ActionEvent e) {\n        if (myBuilder == null) return;\n        myBuilder.buildRoot();\n      }\n    }, KeyStroke.getKeyStroke(KeyEvent.VK_BACK_SLASH, SystemInfo.isMac ? KeyEvent.META_MASK : KeyEvent.CTRL_MASK), JComponent.WHEN_FOCUSED);\n\n    myList.getInputMap(JComponent.WHEN_FOCUSED).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), ACTION_DRILL_DOWN);\n    myList.getInputMap(JComponent.WHEN_FOCUSED)\n      .put(KeyStroke.getKeyStroke(KeyEvent.VK_PAGE_DOWN, SystemInfo.isMac ? KeyEvent.META_MASK : KeyEvent.CTRL_MASK), ACTION_DRILL_DOWN);\n    myList.getActionMap().put(ACTION_DRILL_DOWN, new AbstractAction() {\n      public void actionPerformed(final ActionEvent e) {\n        drillDown();\n      }\n    });\n    myList.addMouseListener(new MouseAdapter() {\n      public void mouseClicked(final MouseEvent e) {\n        if (e.getClickCount() == 2) {\n          drillDown();\n        }\n      }\n    });\n    myList.getInputMap(JComponent.WHEN_FOCUSED)\n      .put(KeyStroke.getKeyStroke(KeyEvent.VK_PAGE_UP, SystemInfo.isMac ? KeyEvent.META_MASK : KeyEvent.CTRL_MASK), ACTION_GO_UP);\n    myList.getInputMap(JComponent.WHEN_FOCUSED).put(KeyStroke.getKeyStroke(KeyEvent.VK_BACK_SPACE, 0), ACTION_GO_UP);\n    myList.getActionMap().put(ACTION_GO_UP, new AbstractAction() {\n      public void actionPerformed(final ActionEvent e) {\n        goUp();\n      }\n    });\n\n    myList.getActionMap().put(\"selectAll\", new AbstractAction() {\n      public void actionPerformed(final ActionEvent e) {\n      }\n    });\n\n\n    if (enablePopupMenu) {\n      myList.addMouseListener(new PopupHandler() {\n        public void invokePopup(final Component comp, final int x, final int y) {\n          CommanderPanel.this.invokePopup(comp, x, y);\n        }\n      });\n    }\n\n    myList.addKeyListener(new KeyAdapter() {\n      public void keyPressed(final KeyEvent e) {\n        if (KeyEvent.VK_ESCAPE == e.getKeyCode()) {\n          if (e.isConsumed()) return;\n          final CopyPasteManagerEx copyPasteManager = (CopyPasteManagerEx)CopyPasteManager.getInstance();\n          final boolean[] isCopied = new boolean[1];\n          if (copyPasteManager.getElements(isCopied) != null && !isCopied[0]) {\n            copyPasteManager.clear();\n            e.consume();\n          }\n        }\n      }\n    });\n\n    myList.addFocusListener(new FocusAdapter() {\n      public void focusGained(final FocusEvent e) {\n        setActive(true);\n      }\n\n      public void focusLost(final FocusEvent e) {\n        setActive(false);\n      }\n    });\n\n    ListToolTipHandler.install(myList);\n  }","commit_id":"8c1e0e468e86383e1f29f7978074f5f1a15aabb2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void load() {\n        try {\n\t\t\tdataSourceVector = new java.util.Vector();\n            File f = new File(xmlFilename);\n            if (f.exists()) {\n                dataSourceManager = unMarshall(f); \n                dataSourceManager. notifyDataSourceListeners();\n            } else {\n                debug(\"Installed datasources not found\");\n            }\n        }  catch (Throwable t) {\n//\t\t\tt.printStackTrace();\n//            tufts.vue.VueUtil.alert(\"Error instantiating Provider support\",\"Error\");\n            Log.warn(\"In load via Castor \" + t.getMessage());\n        }\n    }","id":63846,"modified_method":"public static void load() {\n        try {\n            File f = new File(xmlFilename);\n            if (f.exists()) {\n\n                // Note: this class has no member variables, so assigning the new\n                // dataSourceManager here has no effect -- it might as well be a final\n                // constant for now (e.g., getInstance() isn't needed at the moment).\n                // However, should member variables be added in the future, we'll need\n                // the existing semantics.\n                \n                dataSourceManager = unMarshall(f); \n                dataSourceManager.notifyDataSourceListeners();\n            } else {\n                debug(\"Installed datasources not found\");\n            }\n        }  catch (Throwable t) {\n            tufts.vue.VueUtil.alert(\"Error instantiating Provider support\",\"Error\");\n            Log.warn(\"In load via Castor\", t);\n        }\n    }","commit_id":"374812810bf638ec3049874beaed91436578c1b1","url":"https://github.com/VUE/VUE"},{"original_method":"public VueDataSourceManager() {\n    }","id":63847,"modified_method":"/** this is public for castor persistance support only */\n    public VueDataSourceManager() {}","commit_id":"374812810bf638ec3049874beaed91436578c1b1","url":"https://github.com/VUE/VUE"},{"original_method":"public  static void marshall(File file,VueDataSourceManager dsm) {\n    //    System.out.println(\"Marshalling: file -\"+ file.getAbsolutePath());\n        Marshaller marshaller = null;\n        //Mapping mapping = new Mapping();\n        Mapping mapping = tufts.vue.action.ActionUtil.getDefaultMapping();\n        marshalling = true;\n        try {\n            FileWriter writer = new FileWriter(file);\n            marshaller = new Marshaller(writer);\n            //mapping.loadMapping(XML_MAPPING_DEFAULT);\n            marshaller.setMapping(mapping);\n            marshaller.marshal(dsm);\n            writer.flush();\n            writer.close();\n        } catch (Throwable t) {\n            t.printStackTrace();\n            System.err.println(\"VueDataSourceManager.marshall \" + t.getMessage());\n        }\n        marshalling = false;\n    }","id":63848,"modified_method":"public static synchronized void marshall(File file,VueDataSourceManager dsm)\n    {\n        //System.out.println(\"Marshalling: file -\"+ file.getAbsolutePath());\n\n        dataSourceVector.clear();\n        synchronized (DataSources) {\n            dataSourceVector.addAll(DataSources);\n        }\n\n        marshalling = true;\n        try {\n            Mapping mapping = tufts.vue.action.ActionUtil.getDefaultMapping();\n            FileWriter writer = new FileWriter(file);\n            Marshaller marshaller = new Marshaller(writer);\n            marshaller.setMapping(mapping);\n            Log.debug(\"Marshalling to \" + file + \"...\");\n            marshaller.marshal(dsm);\n            writer.flush();\n            writer.close();\n            Log.info(\" Marshalled to \" + file);\n        } catch (Throwable t) {\n            Log.error(\"marshall to \" + file, t);\n        } finally {\n            marshalling = false;\n        }\n    }","commit_id":"374812810bf638ec3049874beaed91436578c1b1","url":"https://github.com/VUE/VUE"},{"original_method":"/**\n     */\n    public org.osid.repository.Repository[] getIncludedRepositories() {\n\t\tremoveDuplicatesFromVector();\n        java.util.Vector results = new java.util.Vector();\n        int size = dataSourceVector.size();\n        for (int i=0; i < size; i++) {\n            edu.tufts.vue.dsm.DataSource ds = (edu.tufts.vue.dsm.DataSource)dataSourceVector.elementAt(i);\n            if (ds.isIncludedInSearch()) {\n\t\t\t\ttry {\n\t\t\t\t\tdebug(\"Getting included data source0 \" + ds.getId().getIdString());\n\t\t\t\t\tdebug(\"Getting included data source1 \" + ds.getRepository());\n\t\t\t\t\tdebug(\"Getting included data source2 \" + ds.getRepository().getDisplayName());\n\t\t\t\t\tdebug(\"Getting included data source3 \" + ds.getRepository().getId().getIdString());\n\t\t\t\t} catch (Throwable t) {\n\t\t\t\t}\n                results.addElement(ds.getRepository());\n            }\n        }\n        size = results.size();\n        org.osid.repository.Repository repositories[] = new org.osid.repository.Repository[size];\n        for (int i=0; i < size; i++) {\n            repositories[i] = (org.osid.repository.Repository)results.elementAt(i);\n        }\n        return repositories;\n    }","id":63849,"modified_method":"/**\n     */\n    public org.osid.repository.Repository[] getIncludedRepositories() {\n\n        final List<Repository> included = new ArrayList();\n\n        for (DataSource ds : DataSources)\n            if (ds.isIncludedInSearch())\n                included.add(ds.getRepository());\n\n        return included.toArray(new Repository[included.size()]);\n        \n//         removeDuplicatesFromVector();\n//         java.util.Vector results = new java.util.Vector();\n//         int size = dataSourceVector.size();\n//         for (int i=0; i < size; i++) {\n//             edu.tufts.vue.dsm.DataSource ds = (edu.tufts.vue.dsm.DataSource)dataSourceVector.elementAt(i);\n//             if (ds.isIncludedInSearch()) {\n//                 try {\n//                     debug(\"Getting included data sourceA \" + tufts.Util.tag(ds));\n//                     debug(\"Getting included data sourceB \" + tufts.Util.tags(ds.getId()));\n//                     debug(\"Getting included data source0 \" + ds.getId().getIdString());\n//                     debug(\"Getting included data source1 \" + ds.getRepository());\n//                     debug(\"Getting included data source2 \" + ds.getRepository().getDisplayName());\n//                     debug(\"Getting included data source3 \" + ds.getRepository().getId().getIdString());\n//                 } catch (Throwable t) {\n//                 }\n//                 results.addElement(ds.getRepository());\n//             }\n//         }\n//         size = results.size();\n//         org.osid.repository.Repository repositories[] = new org.osid.repository.Repository[size];\n//         for (int i=0; i < size; i++) {\n//             repositories[i] = (org.osid.repository.Repository)results.elementAt(i);\n//         }\n//         return repositories;\n        \n    }","commit_id":"374812810bf638ec3049874beaed91436578c1b1","url":"https://github.com/VUE/VUE"},{"original_method":"public static  VueDataSourceManager unMarshall(File file) throws java.io.IOException, org.exolab.castor.xml.MarshalException, org.exolab.castor.mapping.MappingException, org.exolab.castor.xml.ValidationException {\n     // System.out.println(\"UnMarshalling: file -\"+ file.getAbsolutePath());\n        \n        Unmarshaller unmarshaller = tufts.vue.action.ActionUtil.getDefaultUnmarshaller(file.toString());\n        /*\n        Unmarshaller unmarshaller = null;\n        Mapping mapping = new Mapping();\n        unmarshaller = new Unmarshaller();\n        unmarshaller.setIgnoreExtraElements(true);\n        mapping.loadMapping(XML_MAPPING_DEFAULT);\n        unmarshaller.setMapping(mapping);\n        */\n        marshalling = true;\n        FileReader reader = new FileReader(file);\n        VueDataSourceManager dsm = (VueDataSourceManager) unmarshaller.unmarshal(new InputSource(reader));\n\t\t\t\t\n\t\tint size = dataSourceVector.size();\n        for (int i=0; i < size; i++) {\n            edu.tufts.vue.dsm.DataSource ds = (edu.tufts.vue.dsm.DataSource)dataSourceVector.elementAt(i);\n\t\t\ttry {\n\t\t\t\tdebug(\"Unmarshalled data source0 \" + ds.getId().getIdString());\n\t\t\t\tdebug(\"Unmarshalled data source1 \" + ds.getRepository());\n\t\t\t\tdebug(\"Unmarshalled data source2 \" + ds.getRepository().getDisplayName());\n\t\t\t\tdebug(\"Unmarshalled data source3 \" + ds.getRepository().getId().getIdString());\n\t\t\t} catch (Throwable t) {\n\t\t\t}\n\t\t}\n\t\t\n        reader.close();\n        marshalling = false;\n        return dsm;\n    }","id":63850,"modified_method":"public static synchronized VueDataSourceManager unMarshall(File file)\n        throws java.io.IOException, org.exolab.castor.xml.MarshalException,\n               org.exolab.castor.mapping.MappingException,\n               org.exolab.castor.xml.ValidationException\n    {\n        //System.out.println(\"UnMarshalling: file -\"+ file.getAbsolutePath());\n        \n        Unmarshaller unmarshaller = tufts.vue.action.ActionUtil.getDefaultUnmarshaller(file.toString());\n        \n        VueDataSourceManager dsm = null;\n        marshalling = true;\n        try {\n            \n            final FileReader reader = new FileReader(file);\n            dataSourceVector.clear();\n            dsm = (VueDataSourceManager) unmarshaller.unmarshal(new InputSource(reader));\n            reader.close();\n\n            // Note that we do NOT clear DataSources here -- thus multiple unmarshalls\n            // may load DataSources with multiple instances (as we're currently\n            // only unique via identity hash code) -- this was the old behavior.\n            // Si if we were ever to unmarshall more than once during a runtime, the impl\n            // will need to handle full uniqueness based on ID, or again we'll\n            // get repeats, even in the DataSources set.\n            \n            synchronized (DataSources) {\n                for (DataSource ds : dataSourceVector) {\n                    try {\n                        debug(\"Unmarshalled: \" + ds + \"; RepositoryID=\" + ds.getRepository().getId().getIdString());\n                    } catch (Throwable t) {\n                        Log.warn(\"Unmarshalling\", t);\n                    }\n                    DataSources.add(ds);\n                }\n            }\n        } finally {\n            marshalling = false;\n        }\n        \n//         int size = dataSourceVector.size();\n//         for (int i=0; i < size; i++) {\n//             edu.tufts.vue.dsm.DataSource ds = (edu.tufts.vue.dsm.DataSource)dataSourceVector.elementAt(i);\n//             try {\n//                 debug(\"Unmarshalled data sourceA #\" + i + \" \" + tufts.Util.tag(ds));\n//                 debug(\"Unmarshalled data sourceB \" + tufts.Util.tags(ds.getId()));\n//                 debug(\"Unmarshalled data source0 \" + ds.getId().getIdString());\n//                 debug(\"Unmarshalled data source1 \" + ds.getRepository());\n//                 debug(\"Unmarshalled data source2 \" + ds.getRepository().getDisplayName());\n//                 debug(\"Unmarshalled data source3 \" + ds.getRepository().getId().getIdString());\n//             } catch (Throwable t) {\n//             }\n//         }\n\t\n        return dsm;\n    }","commit_id":"374812810bf638ec3049874beaed91436578c1b1","url":"https://github.com/VUE/VUE"},{"original_method":"/**\n     */\n    public edu.tufts.vue.dsm.DataSource getDataSource(org.osid.shared.Id dataSourceId) {\n        try {\n            for (int i=0, size = dataSourceVector.size(); i < size; i++) {\n                edu.tufts.vue.dsm.DataSource ds = (edu.tufts.vue.dsm.DataSource)dataSourceVector.elementAt(i);\n                if (dataSourceId.isEqual(ds.getId())) {\n                    return ds;\n                }\n            }\n        } catch (Throwable t) {\n            edu.tufts.vue.util.Logger.log(\"no datasource with id found\");\n        }\n        return null;\n    }","id":63851,"modified_method":"/**\n     */\n    public edu.tufts.vue.dsm.DataSource getDataSource(org.osid.shared.Id dataSourceId) {\n\n        try {\n            synchronized (DataSources) {\n                for (DataSource ds : DataSources)\n                    if (dataSourceId.isEqual(ds.getId()))\n                        return ds;\n            }\n        } catch (Throwable t) {\n            Log.warn(\"found no DataSource with id \" + Util.tags(dataSourceId));\n        }\n        return null;\n    }","commit_id":"374812810bf638ec3049874beaed91436578c1b1","url":"https://github.com/VUE/VUE"},{"original_method":"/**\n     */\n    public void remove(org.osid.shared.Id dataSourceId) {\n        try {\n            for (int i=0, size = dataSourceVector.size(); i < size; i++) {\n                edu.tufts.vue.dsm.DataSource ds = (edu.tufts.vue.dsm.DataSource)dataSourceVector.elementAt(i);\n                if (dataSourceId.isEqual(ds.getId())) {\n                    dataSourceVector.removeElementAt(i);\n                    if(!marshalling) save();\n                }\n            }\n        } catch (Throwable t) {\n            \n        }\n    }","id":63852,"modified_method":"/**\n     * Add the given data source to the global list if it's there (any matching the id, tho there should be only one).\n     * Will immediately save if anything was removed.\n     */\n\n    public void remove(org.osid.shared.Id id) {\n\n        if (id == null) {\n            Util.printStackTrace(this + \".remove: null id\");\n            return;\n        }\n\n        synchronized (DataSources) {\n            boolean removed = false;\n            try {\n                for (DataSource ds : DataSources) {\n                    if (id.isEqual(ds.getId())) {\n                        DataSources.remove(ds);\n                        if (removed)\n                            Log.warn(\"removed again: \" + ds);\n                        else\n                            Log.info(\"removed: \" + ds);\n                        removed = true;\n                        // should be able to break, but just in case different instances have same ID..\n                    }\n                }\n            } catch (Throwable t) {\n                Log.error(\"remove \" + Util.tags(id), t);\n            }\n\n            if (removed && !marshalling)\n                save();\n        }\n    }","commit_id":"374812810bf638ec3049874beaed91436578c1b1","url":"https://github.com/VUE/VUE"},{"original_method":"public edu.tufts.vue.dsm.DataSource[] getIncludedDataSources() {\n\t\tremoveDuplicatesFromVector();\n        java.util.Vector results = new java.util.Vector();\n        int size = dataSourceVector.size();\n        for (int i=0; i < size; i++) {\n            edu.tufts.vue.dsm.DataSource ds = (edu.tufts.vue.dsm.DataSource)dataSourceVector.elementAt(i);\n\t\t\tif (ds.isIncludedInSearch()) {\n                results.addElement(ds);\n            }\n        }\n        size = results.size();\n        edu.tufts.vue.dsm.DataSource dataSources[] = new edu.tufts.vue.dsm.DataSource[size];\n        for (int i=0; i < size; i++) {\n            dataSources[i] = (edu.tufts.vue.dsm.DataSource)results.elementAt(i);\n        }\n        return dataSources;\n\t}","id":63853,"modified_method":"public edu.tufts.vue.dsm.DataSource[] getIncludedDataSources() {\n\n        final List<DataSource> included = new ArrayList();\n\n        synchronized (DataSources) {\n            for (DataSource ds : DataSources)\n                if (ds.isIncludedInSearch())\n                    included.add(ds);\n        }\n\n        return included.toArray(new DataSource[included.size()]);\n    }","commit_id":"374812810bf638ec3049874beaed91436578c1b1","url":"https://github.com/VUE/VUE"},{"original_method":"/**\n     */\n    public void add(edu.tufts.vue.dsm.DataSource dataSource) {\n        try {\n            // we have to worry about duplicates\n            org.osid.shared.Id dataSourceId = dataSource.getId();\n            for (int i=0, size = dataSourceVector.size(); i < size; i++) {\n                edu.tufts.vue.dsm.DataSource ds = (edu.tufts.vue.dsm.DataSource)dataSourceVector.elementAt(i);\n                if (dataSourceId.isEqual(ds.getId())) {\n                    // duplicate, no error\n                    edu.tufts.vue.util.Logger.log(\"cannot add a data source with an id already in use\");\n                    return;\n                }\n            }\n\t\t\ttry {\t\t\t\t\n\t\t\t\tLog.info(\"Adding data source \" + dataSource.getId().getIdString() + \" \" + dataSource.getRepository().getDisplayName());\n\t\t\t} catch (Throwable t) {\n\t\t\t}\n            dataSourceVector.addElement(dataSource);\n            if(!marshalling) save();\n        } catch (Throwable t) {\n            t.printStackTrace();\n        }\n    }","id":63854,"modified_method":"/**\n     * Add the given data source to the global list if it isn't already there.\n     * Will immediately save if it was added.\n     */\n    public void add(edu.tufts.vue.dsm.DataSource dataSource) {\n\n        synchronized (DataSources) {\n            if (DataSources.add(dataSource)) {\n                Log.info(\"add data src: \" + dataSource);\n                //Log.info(\"added data source: \" + dataSource);\n                if (!marshalling)\n                    save();\n            }\n        }\n    }","commit_id":"374812810bf638ec3049874beaed91436578c1b1","url":"https://github.com/VUE/VUE"},{"original_method":"public Vector getDataSourceVector() {\n        return dataSourceVector;\n    }","id":63855,"modified_method":"/** for castor persistance only -- should not be used for fetching the data source list\n     * This will normally return null except during marshalling */\n    public Vector getDataSourceVector() {\n        return marshalling ? dataSourceVector : null;\n    }","commit_id":"374812810bf638ec3049874beaed91436578c1b1","url":"https://github.com/VUE/VUE"},{"original_method":"public edu.tufts.vue.dsm.DataSource[] getDataSources() {\n\t\t// There appears to be a bug that causes duplicates in the vector\n\t\t// no idea why.  Calling a method to clear those out.\n\t\tremoveDuplicatesFromVector();\n        int size = dataSourceVector.size();\n        edu.tufts.vue.dsm.DataSource dataSources[] = new edu.tufts.vue.dsm.DataSource[size];\n\t\ttry {\n\t\t\tfor (int i=0; i < size; i++) \n\t\t\t{\n\t\t\t\tdataSources[i] = (edu.tufts.vue.dsm.DataSource)dataSourceVector.elementAt(i);\n\t\t\t}\n\t\t} catch (Throwable t) {\n\t\t\tt.printStackTrace();\n\t\t}\n        return dataSources;\n    }","id":63856,"modified_method":"public edu.tufts.vue.dsm.DataSource[] getDataSources() {\n        synchronized (DataSources) {\n            return DataSources.toArray(new DataSource[DataSources.size()]);\n        }\n    }","commit_id":"374812810bf638ec3049874beaed91436578c1b1","url":"https://github.com/VUE/VUE"},{"original_method":"@CheckForNull\n  public QualityProfileDto getByKey(String key) {\n    DbSession dbSession = db.openSession(false);\n    try {\n      return db.qualityProfileDao().selectByKey(dbSession, key);\n    } finally {\n      dbSession.close();\n    }\n  }","id":63857,"modified_method":"@CheckForNull\n  public QualityProfileDto getByKey(String key) {\n    DbSession dbSession = dbClient.openSession(false);\n    try {\n      return dbClient.qualityProfileDao().selectByKey(dbSession, key);\n    } finally {\n      dbSession.close();\n    }\n  }","commit_id":"aaf2651b94c2f15b3c47e482fe519a6b56e31256","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public QProfileLoader(DbClient db, IndexClient index, UserSession userSession) {\n    this.db = db;\n    this.index = index;\n    this.userSession = userSession;\n  }","id":63858,"modified_method":"public QProfileLoader(DbClient dbClient, IndexClient index, UserSession userSession) {\n    this.dbClient = dbClient;\n    this.index = index;\n    this.userSession = userSession;\n  }","commit_id":"aaf2651b94c2f15b3c47e482fe519a6b56e31256","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Returns all Quality profiles as DTOs. This is a temporary solution as long as\n   * profiles are not indexed and declared as a business object\n   */\n  public List<QualityProfileDto> findAll() {\n    DbSession dbSession = db.openSession(false);\n    try {\n      return db.qualityProfileDao().selectAll(dbSession);\n    } finally {\n      dbSession.close();\n    }\n  }","id":63859,"modified_method":"/**\n   * Returns all Quality profiles as DTOs. This is a temporary solution as long as\n   * profiles are not indexed and declared as a business object\n   */\n  public List<QualityProfileDto> findAll() {\n    DbSession dbSession = dbClient.openSession(false);\n    try {\n      return dbClient.qualityProfileDao().selectAll(dbSession);\n    } finally {\n      dbSession.close();\n    }\n  }","commit_id":"aaf2651b94c2f15b3c47e482fe519a6b56e31256","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@CheckForNull\n  public QualityProfileDto getByLangAndName(String lang, String name) {\n    DbSession dbSession = db.openSession(false);\n    try {\n      return db.qualityProfileDao().selectByNameAndLanguage(name, lang, dbSession);\n    } finally {\n      dbSession.close();\n    }\n  }","id":63860,"modified_method":"@CheckForNull\n  public QualityProfileDto getByLangAndName(String lang, String name) {\n    DbSession dbSession = dbClient.openSession(false);\n    try {\n      return dbClient.qualityProfileDao().selectByNameAndLanguage(name, lang, dbSession);\n    } finally {\n      dbSession.close();\n    }\n  }","commit_id":"aaf2651b94c2f15b3c47e482fe519a6b56e31256","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void handle(Request request, Response response) throws Exception {\n    List<String> fields = request.paramAsStrings(Param.FIELDS);\n\n    String language = request.param(PARAM_LANGUAGE);\n\n    List<QProfile> profiles = null;\n    if (language == null) {\n      profiles = profileLookup.allProfiles();\n    } else {\n      profiles = profileLookup.profiles(language);\n    }\n\n    Collections.sort(profiles, new Comparator<QProfile>() {\n      @Override\n      public int compare(QProfile o1, QProfile o2) {\n        return new CompareToBuilder()\n          .append(o1.language(), o2.language())\n          .append(o1.name(), o2.name())\n          .toComparison();\n      }\n    });\n\n    JsonWriter json = response.newJsonWriter().beginObject();\n    writeProfiles(json, profiles, fields);\n    json.endObject().close();\n  }","id":63861,"modified_method":"@Override\n  public void handle(Request request, Response response) throws Exception {\n    List<String> fields = request.paramAsStrings(Param.FIELDS);\n\n    String language = request.param(PARAM_LANGUAGE);\n\n    List<QProfile> profiles;\n    if (language == null) {\n      profiles = profileLookup.allProfiles();\n    } else {\n      profiles = profileLookup.profiles(language);\n    }\n\n    Collections.sort(profiles, new Comparator<QProfile>() {\n      @Override\n      public int compare(QProfile o1, QProfile o2) {\n        return new CompareToBuilder()\n          .append(o1.language(), o2.language())\n          .append(o1.name(), o2.name())\n          .toComparison();\n      }\n    });\n    WsSearchResponse protobufResponse = buildResponse(profiles, fields);\n\n    writeProtobuf(protobufResponse, request, response);\n  }","commit_id":"aaf2651b94c2f15b3c47e482fe519a6b56e31256","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeProfiles(JsonWriter json, List<QProfile> profiles, List<String> fields) {\n    Map<String, QProfile> profilesByKey = Maps.uniqueIndex(profiles, new NonNullInputFunction<QProfile, String>() {\n      @Override\n      protected String doApply(QProfile input) {\n        return input.key();\n      }\n    });\n    Map<String, Long> activeRuleCountByKey = profileLoader.countAllActiveRules();\n    Map<String, Long> projectCountByKey = qualityProfileDao.countProjectsByProfileKey();\n\n    json.name(\"profiles\")\n      .beginArray();\n    for (QProfile profile : profiles) {\n      if (languages.get(profile.language()) == null) {\n        // Hide profiles on an unsupported language\n        continue;\n      }\n\n      String key = profile.key();\n      Long activeRuleCount = activeRuleCountByKey.containsKey(key) ? activeRuleCountByKey.get(key) : 0L;\n      Long projectCount = projectCountByKey.containsKey(key) ? projectCountByKey.get(key) : 0L;\n      json.beginObject()\n        .prop(FIELD_KEY, nullUnlessNeeded(FIELD_KEY, key, fields))\n        .prop(FIELD_NAME, nullUnlessNeeded(FIELD_NAME, profile.name(), fields))\n        .prop(FIELD_ACTIVE_RULE_COUNT, nullUnlessNeeded(FIELD_ACTIVE_RULE_COUNT, activeRuleCount, fields));\n\n      if (!profile.isDefault()) {\n        json.prop(FIELD_PROJECT_COUNT, nullUnlessNeeded(FIELD_PROJECT_COUNT, projectCount, fields));\n      }\n      writeLanguageFields(json, profile, fields);\n      writeParentFields(json, profile, fields, profilesByKey);\n      // Special case for booleans\n      if (fieldIsNeeded(FIELD_IS_INHERITED, fields)) {\n        json.prop(FIELD_IS_INHERITED, profile.isInherited());\n      }\n      if (fieldIsNeeded(FIELD_IS_DEFAULT, fields)) {\n        json.prop(FIELD_IS_DEFAULT, profile.isDefault());\n      }\n      json.endObject();\n    }\n    json.endArray();\n  }","id":63862,"modified_method":"private WsSearchResponse buildResponse(List<QProfile> profiles, List<String> fields) {\n    Map<String, QProfile> profilesByKey = Maps.uniqueIndex(profiles, new NonNullInputFunction<QProfile, String>() {\n      @Override\n      protected String doApply(QProfile input) {\n        return input.key();\n      }\n    });\n    Map<String, Long> activeRuleCountByKey = profileLoader.countAllActiveRules();\n    Map<String, Long> projectCountByKey = qualityProfileDao.countProjectsByProfileKey();\n\n    WsSearchResponse.Builder response = WsSearchResponse.newBuilder();\n    QualityProfile.Builder profileBuilder = QualityProfile.newBuilder();\n\n    for (QProfile profile : profiles) {\n      if (languages.get(profile.language()) == null) {\n        // Hide profiles on an unsupported language\n        continue;\n      }\n\n      String key = profile.key();\n      Long activeRuleCount = activeRuleCountByKey.containsKey(key) ? activeRuleCountByKey.get(key) : 0L;\n      Long projectCount = projectCountByKey.containsKey(key) ? projectCountByKey.get(key) : 0L;\n      profileBuilder.clear();\n\n      if (shouldSetValue(FIELD_KEY, profile.key(), fields)) {\n        profileBuilder.setKey(profile.key());\n      }\n      if (shouldSetValue(FIELD_NAME, profile.name(), fields)) {\n        profileBuilder.setName(profile.name());\n      }\n      if (shouldSetValue(FIELD_ACTIVE_RULE_COUNT, activeRuleCount, fields)) {\n        profileBuilder.setActiveRuleCount(activeRuleCount);\n      }\n      if (!profile.isDefault() && shouldSetValue(FIELD_PROJECT_COUNT, projectCount, fields)) {\n        profileBuilder.setProjectCount(projectCount);\n      }\n\n      writeLanguageFields(profileBuilder, profile, fields);\n      writeParentFields(profileBuilder, profile, fields, profilesByKey);\n      // Special case for booleans\n      if (fieldIsNeeded(FIELD_IS_INHERITED, fields)) {\n        profileBuilder.setIsInherited(profile.isInherited());\n      }\n      if (fieldIsNeeded(FIELD_IS_DEFAULT, fields)) {\n        profileBuilder.setIsDefault(profile.isDefault());\n      }\n      response.addProfiles(profileBuilder);\n    }\n\n    return response.build();\n  }","commit_id":"aaf2651b94c2f15b3c47e482fe519a6b56e31256","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeLanguageFields(JsonWriter json, QProfile profile, List<String> fields) {\n    String languageKey = profile.language();\n    json.prop(FIELD_LANGUAGE, nullUnlessNeeded(FIELD_LANGUAGE, languageKey, fields))\n      .prop(FIELD_LANGUAGE_NAME, nullUnlessNeeded(FIELD_LANGUAGE_NAME, languages.get(languageKey).getName(), fields));\n  }","id":63863,"modified_method":"private void writeLanguageFields(QualityProfile.Builder profileBuilder, QProfile profile, List<String> fields) {\n    String languageKey = profile.language();\n    if (shouldSetValue(FIELD_LANGUAGE, languageKey, fields)) {\n      profileBuilder.setLanguage(languageKey);\n    }\n    String languageName = languages.get(languageKey).getName();\n    if (shouldSetValue(FIELD_LANGUAGE_NAME, languageName, fields)) {\n      profileBuilder.setLanguageName(languageName);\n    }\n  }","commit_id":"aaf2651b94c2f15b3c47e482fe519a6b56e31256","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void define(WebService.NewController controller) {\n    NewAction search = controller.createAction(\"search\")\n      .setSince(\"5.2\")\n      .setDescription(\"List quality profiles.\")\n      .setHandler(this)\n      .addFieldsParam(ALL_FIELDS)\n      .setResponseExample(getClass().getResource(\"example-search.json\"));\n\n    search.createParam(PARAM_LANGUAGE)\n      .setDescription(\"The key of a language supported by the platform. If specified, only profiles for the given language are returned.\")\n      .setPossibleValues(LanguageParamUtils.getLanguageKeys(languages));\n  }","id":63864,"modified_method":"@Override\n  public void define(WebService.NewController controller) {\n    NewAction action = controller.createAction(\"search\")\n      .setSince(\"5.2\")\n      .setDescription(\"List quality profiles.\")\n      .setHandler(this)\n      .addFieldsParam(ALL_FIELDS)\n      .setResponseExample(getClass().getResource(\"example-search.json\"));\n\n    action.createParam(PARAM_LANGUAGE)\n      .setDescription(\"The key of a language supported by the platform. If specified, only profiles for the given language are returned.\")\n      .setPossibleValues(LanguageParamUtils.getLanguageKeys(languages));\n\n    action.createParam(PARAM_COMPONENT_KEY)\n      .setDescription(\"Project or module key\")\n      .setExampleValue(\"org.codehaus.sonar:sonar\");\n\n    action.createParam(PARAM_DEFAULT)\n      .setDescription(\"Return default quality profiles\")\n      .setBooleanPossibleValues();\n\n    action.createParam(PARAM_PROFILE_NAME)\n      .setDescription(\"Profile name\")\n      .setExampleValue(\"SonarQube Way\");\n  }","commit_id":"aaf2651b94c2f15b3c47e482fe519a6b56e31256","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeParentFields(JsonWriter json, QProfile profile, List<String> fields, Map<String, QProfile> profilesByKey) {\n    String parentKey = profile.parent();\n    QProfile parent = parentKey == null ? null : profilesByKey.get(parentKey);\n    json.prop(FIELD_PARENT_KEY, nullUnlessNeeded(FIELD_PARENT_KEY, parentKey, fields))\n      .prop(FIELD_PARENT_NAME, nullUnlessNeeded(FIELD_PARENT_NAME, parent == null ? parentKey : parent.name(), fields));\n  }","id":63865,"modified_method":"private static void writeParentFields(QualityProfile.Builder profileBuilder, QProfile profile, List<String> fields, Map<String, QProfile> profilesByKey) {\n    String parentKey = profile.parent();\n    QProfile parent = parentKey == null ? null : profilesByKey.get(parentKey);\n    if (shouldSetValue(FIELD_PARENT_KEY, parentKey, fields)) {\n      profileBuilder.setParentKey(parentKey);\n    }\n    if (parent != null && shouldSetValue(FIELD_PARENT_NAME, parent.name(), fields)) {\n      profileBuilder.setParentName(parent.name());\n    }\n  }","commit_id":"aaf2651b94c2f15b3c47e482fe519a6b56e31256","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@CheckForNull\n  private <T> T nullUnlessNeeded(String field, T value, @Nullable List<String> fields) {\n    return fieldIsNeeded(field, fields) ? value : null;\n  }","id":63866,"modified_method":"@CheckForNull\n  private static <T> T valueIfFieldNeeded(String field, T value, @Nullable List<String> fields) {\n    return fieldIsNeeded(field, fields) ? value : null;\n  }","commit_id":"aaf2651b94c2f15b3c47e482fe519a6b56e31256","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void search_nominal() throws Exception {\n    when(profileLoader.countAllActiveRules()).thenReturn(ImmutableMap.of(\n      \"sonar-way-xoo1-12345\", 11L,\n      \"my-sonar-way-xoo2-34567\", 33L\n    ));\n\n    qualityProfileDao.insert(session,\n      QualityProfileDto.createFor(\"sonar-way-xoo1-12345\").setLanguage(xoo1.getKey()).setName(\"Sonar way\").setDefault(true),\n      QualityProfileDto.createFor(\"sonar-way-xoo2-23456\").setLanguage(xoo2.getKey()).setName(\"Sonar way\"),\n      QualityProfileDto.createFor(\"my-sonar-way-xoo2-34567\").setLanguage(xoo2.getKey()).setName(\"My Sonar way\").setParentKee(\"sonar-way-xoo2-23456\"),\n      QualityProfileDto.createFor(\"sonar-way-other-666\").setLanguage(\"other\").setName(\"Sonar way\").setDefault(true)\n    );\n    new ComponentDao().insert(session,\n      ComponentTesting.newProjectDto(\"project-uuid1\"),\n      ComponentTesting.newProjectDto(\"project-uuid2\"));\n    qualityProfileDao.insertProjectProfileAssociation(\"project-uuid1\", \"sonar-way-xoo2-23456\", session);\n    qualityProfileDao.insertProjectProfileAssociation(\"project-uuid2\", \"sonar-way-xoo2-23456\", session);\n    session.commit();\n\n    tester.newGetRequest(\"api/qualityprofiles\", \"search\").execute().assertJson(this.getClass(), \"search.json\");\n  }","id":63867,"modified_method":"@Test\n  public void search_nominal() throws Exception {\n    when(profileLoader.countAllActiveRules()).thenReturn(ImmutableMap.of(\n      \"sonar-way-xoo1-12345\", 11L,\n      \"my-sonar-way-xoo2-34567\", 33L\n      ));\n\n    qualityProfileDao.insert(dbSession,\n      QualityProfileDto.createFor(\"sonar-way-xoo1-12345\").setLanguage(xoo1.getKey()).setName(\"Sonar way\").setDefault(true),\n      QualityProfileDto.createFor(\"sonar-way-xoo2-23456\").setLanguage(xoo2.getKey()).setName(\"Sonar way\"),\n      QualityProfileDto.createFor(\"my-sonar-way-xoo2-34567\").setLanguage(xoo2.getKey()).setName(\"My Sonar way\").setParentKee(\"sonar-way-xoo2-23456\"),\n      QualityProfileDto.createFor(\"sonar-way-other-666\").setLanguage(\"other\").setName(\"Sonar way\").setDefault(true)\n      );\n    new ComponentDao().insert(dbSession,\n      ComponentTesting.newProjectDto(\"project-uuid1\"),\n      ComponentTesting.newProjectDto(\"project-uuid2\"));\n    qualityProfileDao.insertProjectProfileAssociation(\"project-uuid1\", \"sonar-way-xoo2-23456\", dbSession);\n    qualityProfileDao.insertProjectProfileAssociation(\"project-uuid2\", \"sonar-way-xoo2-23456\", dbSession);\n    commit();\n\n    String result = ws.newRequest().execute().getInput();\n\n    assertJson(result).isSimilarTo(getClass().getResource(\"SearchActionTest/search.json\"));\n  }","commit_id":"aaf2651b94c2f15b3c47e482fe519a6b56e31256","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Before\n  public void setUp() {\n    dbTester.truncateTables();\n    qualityProfileDao = new QualityProfileDao(dbTester.myBatis(), mock(System2.class));\n    dbClient = new DbClient(dbTester.database(), dbTester.myBatis(), qualityProfileDao);\n    session = dbClient.openSession(false);\n\n    // TODO Replace with actual implementation after removal of DaoV2...\n    profileLoader = mock(QProfileLoader.class);\n\n    xoo1 = LanguageTesting.newLanguage(\"xoo1\");\n    xoo2 = LanguageTesting.newLanguage(\"xoo2\");\n\n    tester = new WsTester(new QProfilesWs(\n      mock(RuleActivationActions.class),\n      mock(BulkRuleActivationActions.class),\n      mock(ProjectAssociationActions.class),\n      new SearchAction(new Languages(xoo1, xoo2), new QProfileLookup(dbClient), profileLoader, qualityProfileDao)));\n  }","id":63868,"modified_method":"@Before\n  public void setUp() {\n    db.truncateTables();\n    dbClient = db.getDbClient();\n    qualityProfileDao = dbClient.qualityProfileDao();\n    dbSession = db.getSession();\n\n    xoo1 = LanguageTesting.newLanguage(\"xoo1\");\n    xoo2 = LanguageTesting.newLanguage(\"xoo2\");\n\n    ws = new WsActionTester(new SearchAction(\n      new Languages(xoo1, xoo2),\n      new QProfileLookup(dbClient),\n      profileLoader,\n      qualityProfileDao));\n  }","commit_id":"aaf2651b94c2f15b3c47e482fe519a6b56e31256","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void search_for_language() throws Exception {\n    qualityProfileDao.insert(session,\n      QualityProfileDto.createFor(\"sonar-way-xoo1-12345\").setLanguage(xoo1.getKey()).setName(\"Sonar way\")\n    );\n    session.commit();\n\n    tester.newGetRequest(\"api/qualityprofiles\", \"search\").setParam(\"language\", xoo1.getKey()).execute().assertJson(this.getClass(), \"search_xoo1.json\");\n  }","id":63869,"modified_method":"@Test\n  public void search_for_language() throws Exception {\n    qualityProfileDao.insert(dbSession,\n      QualityProfileDto.createFor(\"sonar-way-xoo1-12345\").setLanguage(xoo1.getKey()).setName(\"Sonar way\")\n    );\n    commit();\n\n    String result = ws.newRequest().setParam(\"language\", xoo1.getKey()).execute().getInput();\n\n    assertJson(result).isSimilarTo(getClass().getResource(\"SearchActionTest/search_xoo1.json\"));\n  }","commit_id":"aaf2651b94c2f15b3c47e482fe519a6b56e31256","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void search_with_fields() throws Exception {\n    qualityProfileDao.insert(session,\n      QualityProfileDto.createFor(\"sonar-way-xoo1-12345\").setLanguage(xoo1.getKey()).setName(\"Sonar way\").setDefault(true),\n      QualityProfileDto.createFor(\"sonar-way-xoo2-23456\").setLanguage(xoo2.getKey()).setName(\"Sonar way\"),\n      QualityProfileDto.createFor(\"my-sonar-way-xoo2-34567\").setLanguage(xoo2.getKey()).setName(\"My Sonar way\").setParentKee(\"sonar-way-xoo2-23456\")\n    );\n    session.commit();\n\n    tester.newGetRequest(\"api/qualityprofiles\", \"search\").setParam(Param.FIELDS, \"key,language\").execute().assertJson(this.getClass(), \"search_fields.json\");\n  }","id":63870,"modified_method":"@Test\n  public void search_with_fields() throws Exception {\n    qualityProfileDao.insert(dbSession,\n      QualityProfileDto.createFor(\"sonar-way-xoo1-12345\").setLanguage(xoo1.getKey()).setName(\"Sonar way\").setDefault(true),\n      QualityProfileDto.createFor(\"sonar-way-xoo2-23456\").setLanguage(xoo2.getKey()).setName(\"Sonar way\"),\n      QualityProfileDto.createFor(\"my-sonar-way-xoo2-34567\").setLanguage(xoo2.getKey()).setName(\"My Sonar way\").setParentKee(\"sonar-way-xoo2-23456\")\n      );\n    commit();\n\n    String result = ws.newRequest().setParam(Param.FIELDS, \"key,language\").execute().getInput();\n\n    assertJson(result).isSimilarTo(getClass().getResource(\"SearchActionTest/search_fields.json\"));\n  }","commit_id":"aaf2651b94c2f15b3c47e482fe519a6b56e31256","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\r\n     * Creates device combobox model\r\n     * @param parent the parent component\r\n     * @param deviceConfiguration the current device configuration\r\n     * @param type the device - audio/video\r\n     */\r\n    public DeviceConfigurationComboBoxModel(\r\n            Component parent,\r\n            DeviceConfiguration deviceConfiguration,\r\n            int type)\r\n    {\r\n        if (deviceConfiguration == null)\r\n            throw new IllegalArgumentException(\"deviceConfiguration\");\r\n        if ((type != AUDIO)\r\n                && (type != AUDIO_CAPTURE)\r\n                && (type != AUDIO_NOTIFY)\r\n                && (type != AUDIO_PLAYBACK)\r\n                && (type != VIDEO))\r\n            throw new IllegalArgumentException(\"type\");\r\n\r\n        this.deviceConfiguration = deviceConfiguration;\r\n        this.type = type;\r\n\r\n        if (type == AUDIO\r\n            || type == AUDIO_CAPTURE\r\n            || type == AUDIO_NOTIFY\r\n            || type == AUDIO_PLAYBACK)\r\n        {\r\n            deviceConfiguration.addPropertyChangeListener(this);\r\n        }\r\n    }","id":63871,"modified_method":"/**\r\n     * Creates device combobox model\r\n     * @param parent the parent component\r\n     * @param deviceConfiguration the current device configuration\r\n     * @param type the device - audio/video\r\n     */\r\n    public DeviceConfigurationComboBoxModel(\r\n            DeviceConfiguration deviceConfiguration,\r\n            int type)\r\n    {\r\n        if (deviceConfiguration == null)\r\n            throw new IllegalArgumentException(\"deviceConfiguration\");\r\n        if ((type != AUDIO)\r\n                && (type != AUDIO_CAPTURE)\r\n                && (type != AUDIO_NOTIFY)\r\n                && (type != AUDIO_PLAYBACK)\r\n                && (type != VIDEO))\r\n            throw new IllegalArgumentException(\"type\");\r\n\r\n        this.deviceConfiguration = deviceConfiguration;\r\n        this.type = type;\r\n\r\n        if (type == AUDIO\r\n            || type == AUDIO_CAPTURE\r\n            || type == AUDIO_NOTIFY\r\n            || type == AUDIO_PLAYBACK)\r\n        {\r\n            deviceConfiguration.addPropertyChangeListener(this);\r\n        }\r\n    }","commit_id":"05b8c6cad6569d8e62cc6349755b8ef3c005df8b","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Creates basic controls for a type (AUDIO or VIDEO).\n     *\n     * @param type the type.\n     * @return the build Component.\n     */\n    private Component createBasicControls(final int type)\n    {\n        final JComboBox deviceComboBox = new JComboBox();\n\n        deviceComboBox.setEditable(false);\n        deviceComboBox.setModel(\n                new DeviceConfigurationComboBoxModel(\n                        deviceComboBox,\n                        mediaService.getDeviceConfiguration(),\n                        type));\n\n        JLabel deviceLabel = new JLabel(getLabelText(type));\n\n        deviceLabel.setDisplayedMnemonic(getDisplayedMnemonic(type));\n        deviceLabel.setLabelFor(deviceComboBox);\n\n        final Container devicePanel\n            = new TransparentPanel(new FlowLayout(FlowLayout.CENTER));\n\n        devicePanel.setMaximumSize(new Dimension(WIDTH, 25));\n\n        final boolean isAudioSystemComboDisabled\n            = (type == DeviceConfigurationComboBoxModel.AUDIO)\n                && NeomediaActivator.getConfigurationService().getBoolean(\n                        MediaServiceImpl.DISABLE_SET_AUDIO_SYSTEM_PNAME,\n                        false);\n\n        // For audio configuration form first check if the audio system\n        // property is disabled.\n        if (!isAudioSystemComboDisabled)\n        {\n            devicePanel.add(deviceLabel);\n            devicePanel.add(deviceComboBox);\n        }\n\n        final JPanel deviceAndPreviewPanel\n            = new TransparentPanel(new BorderLayout());\n        int preferredDeviceAndPreviewPanelHeight;\n\n        switch (type)\n        {\n        case DeviceConfigurationComboBoxModel.AUDIO:\n            preferredDeviceAndPreviewPanelHeight\n                = isAudioSystemComboDisabled ? 180 : 225;\n            break;\n        case DeviceConfigurationComboBoxModel.VIDEO:\n            preferredDeviceAndPreviewPanelHeight = 305;\n            break;\n        default:\n            preferredDeviceAndPreviewPanelHeight = 0;\n            break;\n        }\n        if (preferredDeviceAndPreviewPanelHeight > 0)\n        {\n            deviceAndPreviewPanel.setPreferredSize(\n                    new Dimension(WIDTH, preferredDeviceAndPreviewPanelHeight));\n        }\n        deviceAndPreviewPanel.add(devicePanel, BorderLayout.NORTH);\n\n        // For audio configuration if the audio system combo is disabled we're\n        // going to look directly in the device configuration and show the\n        // preview panel, which in this case contains audio configuration\n        // components.\n        if (isAudioSystemComboDisabled)\n        {\n            Component preview = null;\n            if (mediaService.getDeviceConfiguration().getAudioSystem() != null)\n            {\n                preview = createPreview(type, deviceComboBox,\n                                deviceAndPreviewPanel.getPreferredSize());\n            }\n\n            if (preview != null)\n            {\n                deviceAndPreviewPanel.add(preview, BorderLayout.CENTER);\n            }\n        }\n\n        final ActionListener deviceComboBoxActionListener\n            = new ActionListener()\n            {\n                public void actionPerformed(ActionEvent event)\n                {\n                    boolean revalidateAndRepaint = false;\n\n                    for (int i = deviceAndPreviewPanel.getComponentCount() - 1;\n                            i >= 0;\n                            i--)\n                    {\n                        Component c = deviceAndPreviewPanel.getComponent(i);\n\n                        if (c != devicePanel)\n                        {\n                            deviceAndPreviewPanel.remove(i);\n                            revalidateAndRepaint = true;\n                        }\n                    }\n\n                    Component preview = null;\n\n                    if ((deviceComboBox.getSelectedItem() != null)\n                            && (deviceComboBox.isShowing()\n                                || isAudioSystemComboDisabled))\n                    {\n                        preview\n                            = createPreview(\n                                    type,\n                                    deviceComboBox,\n                                    deviceAndPreviewPanel.getPreferredSize());\n                    }\n\n                    if (preview != null)\n                    {\n                        deviceAndPreviewPanel.add(preview, BorderLayout.CENTER);\n                        revalidateAndRepaint = true;\n                    }\n\n                    if (revalidateAndRepaint)\n                    {\n                        deviceAndPreviewPanel.revalidate();\n                        deviceAndPreviewPanel.repaint();\n                    }\n                }\n            };\n\n        deviceComboBox.addActionListener(deviceComboBoxActionListener);\n\n        /*\n         * We have to initialize the controls to reflect the configuration\n         * at the time of creating this instance. Additionally, because the\n         * video preview will stop when it and its associated controls\n         * become unnecessary, we have to restart it when the mentioned\n         * controls become necessary again. We'll address the two goals\n         * described by pretending there's a selection in the video combo\n         * box when the combo box in question becomes displayable.\n         */\n        deviceComboBox.addHierarchyListener(\n                new HierarchyListener()\n                {\n                    public void hierarchyChanged(HierarchyEvent event)\n                    {\n                        if ((event.getChangeFlags()\n                                    & HierarchyEvent.SHOWING_CHANGED)\n                                != 0)\n                        {\n                            SwingUtilities.invokeLater(\n                                    new Runnable()\n                                    {\n                                        public void run()\n                                        {\n                                            deviceComboBoxActionListener\n                                                .actionPerformed(null);\n                                        }\n                                    });\n                        }\n                    }\n                });\n\n        return deviceAndPreviewPanel;\n    }","id":63872,"modified_method":"/**\n     * Creates basic controls for a type (AUDIO or VIDEO).\n     *\n     * @param type the type.\n     * @return the build Component.\n     */\n    private Component createBasicControls(final int type)\n    {\n        final boolean setAudioSystemIsDisabled\n            = (type == DeviceConfigurationComboBoxModel.AUDIO)\n                && NeomediaActivator.getConfigurationService().getBoolean(\n                        MediaServiceImpl.DISABLE_SET_AUDIO_SYSTEM_PNAME,\n                        false);\n        final JComboBox deviceComboBox;\n        final Container devicePanel;\n\n        if (setAudioSystemIsDisabled)\n        {\n            deviceComboBox = null;\n            devicePanel = null;\n        }\n        else\n        {\n            deviceComboBox = new JComboBox();\n            deviceComboBox.setEditable(false);\n            deviceComboBox.setModel(\n                    new DeviceConfigurationComboBoxModel(\n                            mediaService.getDeviceConfiguration(),\n                            type));\n\n            JLabel deviceLabel = new JLabel(getLabelText(type));\n\n            deviceLabel.setDisplayedMnemonic(getDisplayedMnemonic(type));\n            deviceLabel.setLabelFor(deviceComboBox);\n\n            devicePanel\n                = new TransparentPanel(new FlowLayout(FlowLayout.CENTER));\n            devicePanel.setMaximumSize(new Dimension(WIDTH, 25));\n            devicePanel.add(deviceLabel);\n            devicePanel.add(deviceComboBox);\n        }\n\n        final JPanel deviceAndPreviewPanel\n            = new TransparentPanel(new BorderLayout());\n        int preferredDeviceAndPreviewPanelHeight;\n\n        switch (type)\n        {\n        case DeviceConfigurationComboBoxModel.AUDIO:\n            preferredDeviceAndPreviewPanelHeight\n                = (devicePanel == null) ? 180 : 225;\n            break;\n        case DeviceConfigurationComboBoxModel.VIDEO:\n            preferredDeviceAndPreviewPanelHeight = 305;\n            break;\n        default:\n            preferredDeviceAndPreviewPanelHeight = 0;\n            break;\n        }\n        if (preferredDeviceAndPreviewPanelHeight > 0)\n        {\n            deviceAndPreviewPanel.setPreferredSize(\n                    new Dimension(WIDTH, preferredDeviceAndPreviewPanelHeight));\n        }\n        if (devicePanel != null)\n            deviceAndPreviewPanel.add(devicePanel, BorderLayout.NORTH);\n\n        final ActionListener deviceComboBoxActionListener\n            = new ActionListener()\n            {\n                public void actionPerformed(ActionEvent ev)\n                {\n                    boolean revalidateAndRepaint = false;\n\n                    for (int i = deviceAndPreviewPanel.getComponentCount() - 1;\n                            i >= 0;\n                            i--)\n                    {\n                        Component c = deviceAndPreviewPanel.getComponent(i);\n\n                        if (c != devicePanel)\n                        {\n                            deviceAndPreviewPanel.remove(i);\n                            revalidateAndRepaint = true;\n                        }\n                    }\n\n                    Component preview = null;\n\n                    if ((deviceComboBox == null)\n                            || ((deviceComboBox.getSelectedItem() != null)\n                                    && deviceComboBox.isShowing()))\n                    {\n                        preview\n                            = createPreview(\n                                    type,\n                                    deviceComboBox,\n                                    deviceAndPreviewPanel.getPreferredSize());\n                    }\n\n                    if (preview != null)\n                    {\n                        deviceAndPreviewPanel.add(preview, BorderLayout.CENTER);\n                        revalidateAndRepaint = true;\n                    }\n\n                    if (revalidateAndRepaint)\n                    {\n                        deviceAndPreviewPanel.revalidate();\n                        deviceAndPreviewPanel.repaint();\n                    }\n                }\n            };\n\n        if (deviceComboBox != null)\n            deviceComboBox.addActionListener(deviceComboBoxActionListener);\n\n        /*\n         * We have to initialize the controls to reflect the configuration at\n         * the time of creating this instance. Additionally, because the \n         * preview will stop when it and its associated controls become\n         * unnecessary, we have to restart it when the mentioned controls become\n         * necessary again. We'll address the two goals described by pretending\n         * there's a selection in the combo box when user interface becomes\n         * displayable.\n         */\n        deviceAndPreviewPanel.addHierarchyListener(\n                new HierarchyListener()\n                {\n                    public void hierarchyChanged(HierarchyEvent event)\n                    {\n                        if ((event.getChangeFlags()\n                                    & HierarchyEvent.SHOWING_CHANGED)\n                                != 0)\n                        {\n                            SwingUtilities.invokeLater(\n                                    new Runnable()\n                                    {\n                                        public void run()\n                                        {\n                                            deviceComboBoxActionListener\n                                                .actionPerformed(null);\n                                        }\n                                    });\n                        }\n                    }\n                });\n\n        return deviceAndPreviewPanel;\n    }","commit_id":"05b8c6cad6569d8e62cc6349755b8ef3c005df8b","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Creates the UI controls which are to control the details of a specific\n     * <tt>AudioSystem<\/tt>.\n     *\n     * @param audioSystem the <tt>AudioSystem<\/tt> for which the UI controls to\n     * control its details are to be created\n     * @param container the <tt>JComponent<\/tt> into which the UI controls which\n     * are to control the details of the specified <tt>audioSystem<\/tt> are to\n     * be added\n     */\n    public void createAudioSystemControls(\n            AudioSystem audioSystem,\n            JComponent container)\n    {\n        GridBagConstraints constraints = new GridBagConstraints();\n\n        constraints.anchor = GridBagConstraints.NORTHWEST;\n        constraints.fill = GridBagConstraints.HORIZONTAL;\n        constraints.weighty = 0;\n\n        int audioSystemFeatures = audioSystem.getFeatures();\n        boolean featureNotifyAndPlaybackDevices\n            = ((audioSystemFeatures\n                    & AudioSystem.FEATURE_NOTIFY_AND_PLAYBACK_DEVICES)\n                != 0);\n\n        constraints.gridx = 0;\n        constraints.insets = new Insets(3, 0, 3, 3);\n        constraints.weightx = 0;\n\n        constraints.gridy = 0;\n        container.add(new JLabel(getLabelText(\n            DeviceConfigurationComboBoxModel.AUDIO_CAPTURE)), constraints);\n        if (featureNotifyAndPlaybackDevices)\n        {\n            constraints.gridy = 2;\n            container.add(new JLabel(getLabelText(\n                DeviceConfigurationComboBoxModel.AUDIO_PLAYBACK)), constraints);\n            constraints.gridy = 3;\n            container.add(new JLabel(getLabelText(\n                DeviceConfigurationComboBoxModel.AUDIO_NOTIFY)), constraints);\n        }\n\n        constraints.gridx = 1;\n        constraints.insets = new Insets(3, 3, 3, 0);\n        constraints.weightx = 1;\n\n        JComboBox captureCombo = null;\n\n        if (featureNotifyAndPlaybackDevices)\n        {\n            captureCombo = new JComboBox();\n            captureCombo.setEditable(false);\n            captureCombo.setModel(\n                    new DeviceConfigurationComboBoxModel(\n                            captureCombo,\n                            mediaService.getDeviceConfiguration(),\n                            DeviceConfigurationComboBoxModel.AUDIO_CAPTURE));\n            constraints.gridy = 0;\n            container.add(captureCombo, constraints);\n        }\n\n        int anchor = constraints.anchor;\n        SoundLevelIndicator capturePreview\n            = new SoundLevelIndicator(\n                    SimpleAudioLevelListener.MIN_LEVEL,\n                    SimpleAudioLevelListener.MAX_LEVEL);\n\n        constraints.anchor = GridBagConstraints.CENTER;\n        constraints.gridy = (captureCombo == null) ? 0 : 1;\n        container.add(capturePreview, constraints);\n        constraints.anchor = anchor;\n\n        constraints.gridy = GridBagConstraints.RELATIVE;\n\n        if (featureNotifyAndPlaybackDevices)\n        {\n            playbackCombo = new JComboBox();\n            playbackCombo.setEditable(false);\n            playbackCombo.setModel(\n                    new DeviceConfigurationComboBoxModel(\n                            captureCombo,\n                            mediaService.getDeviceConfiguration(),\n                            DeviceConfigurationComboBoxModel.AUDIO_PLAYBACK));\n            playbackCombo.addActionListener(this);\n            container.add(playbackCombo, constraints);\n\n            notifyCombo = new JComboBox();\n            notifyCombo.setEditable(false);\n            notifyCombo.setModel(\n                    new DeviceConfigurationComboBoxModel(\n                            captureCombo,\n                            mediaService.getDeviceConfiguration(),\n                            DeviceConfigurationComboBoxModel.AUDIO_NOTIFY));\n            notifyCombo.addActionListener(this);\n            container.add(notifyCombo, constraints);\n        }\n\n        if ((AudioSystem.FEATURE_ECHO_CANCELLATION & audioSystemFeatures) != 0)\n        {\n            final SIPCommCheckBox echoCancelCheckBox\n                = new SIPCommCheckBox(\n                        NeomediaActivator.getResources().getI18NString(\n                                \"impl.media.configform.ECHOCANCEL\"));\n\n            /*\n             * First set the selected one, then add the listener in order to\n             * avoid saving the value when using the default one and only\n             * showing to user without modification.\n             */\n            echoCancelCheckBox.setSelected(\n                    mediaService.getDeviceConfiguration().isEchoCancel());\n            echoCancelCheckBox.addItemListener(\n                    new ItemListener()\n                    {\n                        public void itemStateChanged(ItemEvent e)\n                        {\n                            mediaService.getDeviceConfiguration().setEchoCancel(\n                                    echoCancelCheckBox.isSelected());\n                        }\n                    });\n            container.add(echoCancelCheckBox, constraints);\n        }\n\n        if ((AudioSystem.FEATURE_DENOISE & audioSystemFeatures) != 0)\n        {\n            final SIPCommCheckBox denoiseCheckBox\n                = new SIPCommCheckBox(\n                        NeomediaActivator.getResources().getI18NString(\n                                \"impl.media.configform.DENOISE\"));\n\n            /*\n             * First set the selected one, then add the listener in order to\n             * avoid saving the value when using the default one and only\n             * showing to user without modification.\n             */\n            denoiseCheckBox.setSelected(\n                    mediaService.getDeviceConfiguration().isDenoise());\n            denoiseCheckBox.addItemListener(\n                    new ItemListener()\n                    {\n                        public void itemStateChanged(ItemEvent e)\n                        {\n                            mediaService.getDeviceConfiguration().setDenoise(\n                                    denoiseCheckBox.isSelected());\n                        }\n                    });\n            container.add(denoiseCheckBox, constraints);\n        }\n\n        // Adds the play buttons for testing playback and notification devices.\n        constraints.gridx = 2;\n        constraints.insets = new Insets(3, 3, 3, 0);\n        constraints.weightx = 0;\n\n        if (featureNotifyAndPlaybackDevices)\n        {\n            // Playback play sound button.\n            constraints.gridy = 2;\n            playbackPlaySoundButton\n                = new JButton(new ImageIcon(NeomediaActivator.getResources()\n                            .getImageInBytes(\n                                \"plugin.notificationconfig.PLAY_ICON\")));\n            playbackPlaySoundButton.setMinimumSize(new Dimension(30,30));\n            playbackPlaySoundButton.setPreferredSize(new Dimension(30,30));\n            if(((DeviceConfigurationComboBoxModel.CaptureDevice)\n                        playbackCombo.getSelectedItem()).info == null)\n            {\n                playbackPlaySoundButton.setEnabled(false);\n            }\n            playbackPlaySoundButton.setOpaque(false);\n            playbackPlaySoundButton.addActionListener(this);\n            container.add(playbackPlaySoundButton, constraints);\n\n            // Notification play sound button.\n            constraints.gridy = 3;\n            notificationPlaySoundButton\n                = new JButton(new ImageIcon(NeomediaActivator.getResources()\n                            .getImageInBytes(\n                                \"plugin.notificationconfig.PLAY_ICON\")));\n            notificationPlaySoundButton.setMinimumSize(new Dimension(30,30));\n            notificationPlaySoundButton.setPreferredSize(new Dimension(30,30));\n            if(((DeviceConfigurationComboBoxModel.CaptureDevice)\n                        notifyCombo.getSelectedItem()).info == null)\n            {\n                notificationPlaySoundButton.setEnabled(false);\n            }\n            notificationPlaySoundButton.setOpaque(false);\n            notificationPlaySoundButton.addActionListener(this);\n            container.add(notificationPlaySoundButton, constraints);\n        }\n\n        if(audioLevelListenerThread == null)\n        {\n            audioLevelListenerThread = new AudioLevelListenerThread(\n                    audioSystem,\n                    captureCombo,\n                    capturePreview);\n        }\n        else\n        {\n            audioLevelListenerThread.init(\n                    audioSystem,\n                    captureCombo,\n                    capturePreview);\n        }\n    }","id":63873,"modified_method":"/**\n     * Creates the UI controls which are to control the details of a specific\n     * <tt>AudioSystem<\/tt>.\n     *\n     * @param audioSystem the <tt>AudioSystem<\/tt> for which the UI controls to\n     * control its details are to be created\n     * @param container the <tt>JComponent<\/tt> into which the UI controls which\n     * are to control the details of the specified <tt>audioSystem<\/tt> are to\n     * be added\n     */\n    public void createAudioSystemControls(\n            AudioSystem audioSystem,\n            JComponent container)\n    {\n        GridBagConstraints cnstrnts = new GridBagConstraints();\n\n        cnstrnts.anchor = GridBagConstraints.NORTHWEST;\n        cnstrnts.fill = GridBagConstraints.HORIZONTAL;\n        cnstrnts.weighty = 0;\n\n        int audioSystemFeatures = audioSystem.getFeatures();\n        boolean featureNotifyAndPlaybackDevices\n            = ((audioSystemFeatures\n                    & AudioSystem.FEATURE_NOTIFY_AND_PLAYBACK_DEVICES)\n                != 0);\n\n        cnstrnts.gridx = 0;\n        cnstrnts.insets = new Insets(3, 0, 3, 3);\n        cnstrnts.weightx = 0;\n\n        cnstrnts.gridy = 0;\n        container.add(new JLabel(getLabelText(\n            DeviceConfigurationComboBoxModel.AUDIO_CAPTURE)), cnstrnts);\n        if (featureNotifyAndPlaybackDevices)\n        {\n            cnstrnts.gridy = 2;\n            container.add(new JLabel(getLabelText(\n                DeviceConfigurationComboBoxModel.AUDIO_PLAYBACK)), cnstrnts);\n            cnstrnts.gridy = 3;\n            container.add(new JLabel(getLabelText(\n                DeviceConfigurationComboBoxModel.AUDIO_NOTIFY)), cnstrnts);\n        }\n\n        cnstrnts.gridx = 1;\n        cnstrnts.insets = new Insets(3, 3, 3, 0);\n        cnstrnts.weightx = 1;\n\n        JComboBox captureCombo = null;\n\n        if (featureNotifyAndPlaybackDevices)\n        {\n            captureCombo = new JComboBox();\n            captureCombo.setEditable(false);\n            captureCombo.setModel(\n                    new DeviceConfigurationComboBoxModel(\n                            mediaService.getDeviceConfiguration(),\n                            DeviceConfigurationComboBoxModel.AUDIO_CAPTURE));\n            cnstrnts.gridy = 0;\n            container.add(captureCombo, cnstrnts);\n        }\n\n        int anchor = cnstrnts.anchor;\n        SoundLevelIndicator capturePreview\n            = new SoundLevelIndicator(\n                    SimpleAudioLevelListener.MIN_LEVEL,\n                    SimpleAudioLevelListener.MAX_LEVEL);\n\n        cnstrnts.anchor = GridBagConstraints.CENTER;\n        cnstrnts.gridy = (captureCombo == null) ? 0 : 1;\n        container.add(capturePreview, cnstrnts);\n        cnstrnts.anchor = anchor;\n\n        cnstrnts.gridy = GridBagConstraints.RELATIVE;\n\n        if (featureNotifyAndPlaybackDevices)\n        {\n            playbackCombo = new JComboBox();\n            playbackCombo.setEditable(false);\n            playbackCombo.setModel(\n                    new DeviceConfigurationComboBoxModel(\n                            mediaService.getDeviceConfiguration(),\n                            DeviceConfigurationComboBoxModel.AUDIO_PLAYBACK));\n            playbackCombo.addActionListener(this);\n            container.add(playbackCombo, cnstrnts);\n\n            notifyCombo = new JComboBox();\n            notifyCombo.setEditable(false);\n            notifyCombo.setModel(\n                    new DeviceConfigurationComboBoxModel(\n                            mediaService.getDeviceConfiguration(),\n                            DeviceConfigurationComboBoxModel.AUDIO_NOTIFY));\n            notifyCombo.addActionListener(this);\n            container.add(notifyCombo, cnstrnts);\n        }\n\n        if ((AudioSystem.FEATURE_ECHO_CANCELLATION & audioSystemFeatures) != 0)\n        {\n            final SIPCommCheckBox echoCancelCheckBox\n                = new SIPCommCheckBox(\n                        NeomediaActivator.getResources().getI18NString(\n                                \"impl.media.configform.ECHOCANCEL\"));\n\n            /*\n             * First set the selected one, then add the listener in order to\n             * avoid saving the value when using the default one and only\n             * showing to user without modification.\n             */\n            echoCancelCheckBox.setSelected(\n                    mediaService.getDeviceConfiguration().isEchoCancel());\n            echoCancelCheckBox.addItemListener(\n                    new ItemListener()\n                    {\n                        public void itemStateChanged(ItemEvent e)\n                        {\n                            mediaService.getDeviceConfiguration().setEchoCancel(\n                                    echoCancelCheckBox.isSelected());\n                        }\n                    });\n            container.add(echoCancelCheckBox, cnstrnts);\n        }\n\n        if ((AudioSystem.FEATURE_DENOISE & audioSystemFeatures) != 0)\n        {\n            final SIPCommCheckBox denoiseCheckBox\n                = new SIPCommCheckBox(\n                        NeomediaActivator.getResources().getI18NString(\n                                \"impl.media.configform.DENOISE\"));\n\n            /*\n             * First set the selected one, then add the listener in order to\n             * avoid saving the value when using the default one and only\n             * showing to user without modification.\n             */\n            denoiseCheckBox.setSelected(\n                    mediaService.getDeviceConfiguration().isDenoise());\n            denoiseCheckBox.addItemListener(\n                    new ItemListener()\n                    {\n                        public void itemStateChanged(ItemEvent e)\n                        {\n                            mediaService.getDeviceConfiguration().setDenoise(\n                                    denoiseCheckBox.isSelected());\n                        }\n                    });\n            container.add(denoiseCheckBox, cnstrnts);\n        }\n\n        // Adds the play buttons for testing playback and notification devices.\n        cnstrnts.gridx = 2;\n        cnstrnts.insets = new Insets(3, 3, 3, 0);\n        cnstrnts.weightx = 0;\n\n        if (featureNotifyAndPlaybackDevices)\n        {\n            // Playback play sound button.\n            cnstrnts.gridy = 2;\n            playbackPlaySoundButton\n                = new JButton(new ImageIcon(NeomediaActivator.getResources()\n                            .getImageInBytes(\n                                \"plugin.notificationconfig.PLAY_ICON\")));\n            playbackPlaySoundButton.setMinimumSize(new Dimension(30,30));\n            playbackPlaySoundButton.setPreferredSize(new Dimension(30,30));\n            if(((DeviceConfigurationComboBoxModel.CaptureDevice)\n                        playbackCombo.getSelectedItem()).info == null)\n            {\n                playbackPlaySoundButton.setEnabled(false);\n            }\n            playbackPlaySoundButton.setOpaque(false);\n            playbackPlaySoundButton.addActionListener(this);\n            container.add(playbackPlaySoundButton, cnstrnts);\n\n            // Notification play sound button.\n            cnstrnts.gridy = 3;\n            notificationPlaySoundButton\n                = new JButton(new ImageIcon(NeomediaActivator.getResources()\n                            .getImageInBytes(\n                                \"plugin.notificationconfig.PLAY_ICON\")));\n            notificationPlaySoundButton.setMinimumSize(new Dimension(30,30));\n            notificationPlaySoundButton.setPreferredSize(new Dimension(30,30));\n            if(((DeviceConfigurationComboBoxModel.CaptureDevice)\n                        notifyCombo.getSelectedItem()).info == null)\n            {\n                notificationPlaySoundButton.setEnabled(false);\n            }\n            notificationPlaySoundButton.setOpaque(false);\n            notificationPlaySoundButton.addActionListener(this);\n            container.add(notificationPlaySoundButton, cnstrnts);\n        }\n\n        if (audioLevelListenerThread == null)\n        {\n            audioLevelListenerThread\n                = new AudioLevelListenerThread(\n                        audioSystem,\n                        captureCombo,\n                        capturePreview);\n        }\n        else\n        {\n            audioLevelListenerThread.init(\n                    audioSystem,\n                    captureCombo,\n                    capturePreview);\n        }\n    }","commit_id":"05b8c6cad6569d8e62cc6349755b8ef3c005df8b","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Create preview component.\n     * @param type type\n     * @param comboBox the options.\n     * @param prefSize the preferred size\n     * @return the component.\n     */\n    private Component createPreview(\n            int type,\n            final JComboBox comboBox,\n            Dimension prefSize)\n    {\n        JComponent preview = null;\n\n        if (type == DeviceConfigurationComboBoxModel.AUDIO)\n        {\n            AudioSystem audioSystem = null;\n\n            // If the Audio System combo box is disabled, we're looking for the\n            // default device configuration.\n            if (NeomediaActivator.getConfigurationService().getBoolean(\n                    MediaServiceImpl.DISABLE_SET_AUDIO_SYSTEM_PNAME,\n                    false))\n            {\n                audioSystem\n                    = mediaService.getDeviceConfiguration().getAudioSystem();\n            }\n            else\n            {\n                Object selectedItem = comboBox.getSelectedItem();\n\n                if (selectedItem instanceof AudioSystem)\n                    audioSystem = (AudioSystem) selectedItem;\n            }\n\n            if ((audioSystem != null)\n                    && !NoneAudioSystem.LOCATOR_PROTOCOL.equalsIgnoreCase(\n                            audioSystem.getLocatorProtocol()))\n            {\n                preview = new TransparentPanel(new GridBagLayout());\n                createAudioSystemControls(audioSystem, preview);\n            }\n            else\n            {\n                /*\n                 * If there are AudioSystems other than \"None\" and they have all\n                 * not been reported as available, then each of them failed to\n                 * detect any devices whatsoever.\n                 */\n                AudioSystem[] audioSystems = AudioSystem.getAudioSystems();\n\n                if ((audioSystems != null) && (audioSystems.length != 1))\n                {\n                    AudioSystem[] availableAudioSystems\n                        = mediaService\n                            .getDeviceConfiguration()\n                                .getAvailableAudioSystems();\n\n                    if ((availableAudioSystems != null)\n                            && (availableAudioSystems.length == 1))\n                    {\n                        String noAvailableAudioDevice\n                            = NeomediaActivator.getResources().getI18NString(\n                                    \"impl.media.configform.NO_AVAILABLE_AUDIO_DEVICE\");\n\n                        preview = new TransparentPanel(new GridBagLayout());\n                        preview.add(new JLabel(noAvailableAudioDevice));\n                    }\n                }\n            }\n        }\n        else if (type == DeviceConfigurationComboBoxModel.VIDEO)\n        {\n            JLabel noPreview\n                = new JLabel(\n                        NeomediaActivator.getResources().getI18NString(\n                                \"impl.media.configform.NO_PREVIEW\"));\n\n            noPreview.setHorizontalAlignment(SwingConstants.CENTER);\n            noPreview.setVerticalAlignment(SwingConstants.CENTER);\n\n            preview = createVideoContainer(noPreview);\n            preview.setPreferredSize(prefSize);\n\n            Object selectedItem = comboBox.getSelectedItem();\n            CaptureDeviceInfo device = null;\n            if (selectedItem\n                    instanceof\n                        DeviceConfigurationComboBoxModel.CaptureDevice)\n                device\n                    = ((DeviceConfigurationComboBoxModel.CaptureDevice)\n                            selectedItem)\n                        .info;\n\n            Exception exception;\n            try\n            {\n                createVideoPreview(device, preview);\n                exception = null;\n            }\n            catch (IOException ex)\n            {\n                exception = ex;\n            }\n            catch (MediaException ex)\n            {\n                exception = ex;\n            }\n            if (exception != null)\n            {\n                logger.error(\n                    \"Failed to create preview for device \" + device,\n                    exception);\n                device = null;\n            }\n        }\n\n        return preview;\n    }","id":63874,"modified_method":"/**\n     * Initializes a new <tt>Component<\/tt> which.is to preview and/or allow\n     * detailed configuration of an audio or video <tt>DeviceSystem<\/tt>.\n     *\n     * @param type either {@link DeviceConfigurationComboBoxModel#AUDIO} or\n     * {@link DeviceConfigurationComboBoxModel#VIDEO}\n     * @param comboBox the <tt>JComboBox<\/tt> which lists the available\n     * alternatives and the selection which is to be previewed. May be\n     * <tt>null<\/tt> in the case of audio in which case it is assumed that the\n     * user is not allowed to set the <tt>AudioSystem<\/tt> to be used and the\n     * selection is determined by the <tt>DeviceConfiguration<\/tt> of the\n     * <tt>MediaService<\/tt>.\n     * @param prefSize the preferred size to be applied to the preview\n     * @return a new <tt>Component<\/tt> which is to preview and/or allow\n     * detailed configuration of the <tt>DeviceSystem<\/tt> identified by\n     * <tt>type<\/tt> and <tt>comboBox<\/tt>\n     */\n    private Component createPreview(\n            int type,\n            JComboBox comboBox,\n            Dimension prefSize)\n    {\n        JComponent preview = null;\n\n        if (type == DeviceConfigurationComboBoxModel.AUDIO)\n        {\n            AudioSystem audioSystem = null;\n\n            /*\n             * If the Audio System combo box is disabled (i.e. the user is not\n             * allowed to set the AudioSystem to be used), the current\n             * AudioSystem (specified by the DeviceConfiguration of the\n             * MediaService) is to be configured.\n             */\n            if ((comboBox == null) || !comboBox.isEnabled())\n            {\n                audioSystem\n                    = mediaService.getDeviceConfiguration().getAudioSystem();\n            }\n            else\n            {\n                Object selectedItem = comboBox.getSelectedItem();\n\n                if (selectedItem instanceof AudioSystem)\n                {\n                    audioSystem = (AudioSystem) selectedItem;\n\n                    AudioSystem mediaServiceDeviceConfigurationAudioSystem\n                        = mediaService\n                            .getDeviceConfiguration()\n                                .getAudioSystem();\n\n                    if (audioSystem\n                            != mediaServiceDeviceConfigurationAudioSystem)\n                    {\n                        logger.warn(\n                                \"JComboBox.selectedItem is not identical to MediaService.deviceConfiguration.audioSystem!\");\n                    }\n                }\n            }\n\n            if ((audioSystem != null)\n                    && !NoneAudioSystem.LOCATOR_PROTOCOL.equalsIgnoreCase(\n                            audioSystem.getLocatorProtocol()))\n            {\n                preview = new TransparentPanel(new GridBagLayout());\n                createAudioSystemControls(audioSystem, preview);\n            }\n            else\n            {\n                /*\n                 * If there are AudioSystems other than \"None\" and they have all\n                 * not been reported as available, then each of them failed to\n                 * detect any devices whatsoever.\n                 */\n                AudioSystem[] audioSystems = AudioSystem.getAudioSystems();\n\n                if ((audioSystems != null) && (audioSystems.length != 1))\n                {\n                    AudioSystem[] availableAudioSystems\n                        = mediaService\n                            .getDeviceConfiguration()\n                                .getAvailableAudioSystems();\n\n                    if ((availableAudioSystems != null)\n                            && (availableAudioSystems.length == 1))\n                    {\n                        String noAvailableAudioDevice\n                            = NeomediaActivator.getResources().getI18NString(\n                                    \"impl.media.configform.NO_AVAILABLE_AUDIO_DEVICE\");\n\n                        preview = new TransparentPanel(new GridBagLayout());\n                        preview.add(new JLabel(noAvailableAudioDevice));\n                    }\n                }\n            }\n        }\n        else if (type == DeviceConfigurationComboBoxModel.VIDEO)\n        {\n            JLabel noPreview\n                = new JLabel(\n                        NeomediaActivator.getResources().getI18NString(\n                                \"impl.media.configform.NO_PREVIEW\"));\n\n            noPreview.setHorizontalAlignment(SwingConstants.CENTER);\n            noPreview.setVerticalAlignment(SwingConstants.CENTER);\n\n            preview = createVideoContainer(noPreview);\n            preview.setPreferredSize(prefSize);\n\n            Object selectedItem = comboBox.getSelectedItem();\n            CaptureDeviceInfo device = null;\n            if (selectedItem\n                    instanceof\n                        DeviceConfigurationComboBoxModel.CaptureDevice)\n                device\n                    = ((DeviceConfigurationComboBoxModel.CaptureDevice)\n                            selectedItem)\n                        .info;\n\n            Exception exception;\n            try\n            {\n                createVideoPreview(device, preview);\n                exception = null;\n            }\n            catch (IOException ex)\n            {\n                exception = ex;\n            }\n            catch (MediaException ex)\n            {\n                exception = ex;\n            }\n            if (exception != null)\n            {\n                logger.error(\n                        \"Failed to create preview for device \" + device,\n                        exception);\n            }\n        }\n\n        return preview;\n    }","commit_id":"05b8c6cad6569d8e62cc6349755b8ef3c005df8b","url":"https://github.com/jitsi/jitsi"},{"original_method":"public DRBrowser()\n    {\n       \n        setBorder(new TitledBorder(\"DR Browser\"));\n               \n         //File System\n         //Possible Oki Filing implementation - Later\n              Vector fileVector  = new Vector();\n         fileVector.add(new File(\"C:\\\\\"));\n      //   fileVector.add(new File(\"D:\\\\\"));\n          VueDragTree fileTree = new VueDragTree(fileVector.iterator(),\"File System\");\n          JScrollPane jSP = new JScrollPane(fileTree);\n           add(\"File\", jSP);  \n        \n       //Fedora \n       // add fedora pane\n         add(\"FEDORA\",getFedoraPane());\n       \n        //Search\n        SearchPanel searchPanel = new SearchPanel();\n        add(\"Search\", searchPanel);\n      \n    }","id":63875,"modified_method":"public DRBrowser()\n    {\n        //super(JSplitPane.VERTICAL_SPLIT);\n        //setOneTouchExpandable(true);\n        //setContinuousLayout(false);\n        //setResizeWeight(0.25);\n        setLayout(new BorderLayout());\n        DataSourceViewer dsViewer = new DataSourceViewer(this);\n        add(dsViewer,BorderLayout.NORTH);\n        //setTopComponent(panel);\n       // JDesktopPane jDP = new JDesktopPane();\n       // jDP.add(dsViewer);\n        //add(\"Test\", dsViewer);\n        //setLeftComponent(dsViewer);\n      /*** OLD CODE - to be removed \n       // setBorder(new TitledBorder(\"DR Browser\"));\n               \n         //File System\n         //Possible Oki Filing implementation - Later\n              Vector fileVector  = new Vector();\n         fileVector.add(new File(\"C:\\\\\"));\n      //   fileVector.add(new File(\"D:\\\\\"));\n          VueDragTree fileTree = new VueDragTree(fileVector.iterator(),\"File System\");\n          JScrollPane jSP = new JScrollPane(fileTree);\n           add(\"File\", jSP);  \n        \n       //Fedora \n       // add fedora pane\n         add(\"FEDORA\",getFedoraPane());\n       \n        //Search\n        SearchPanel searchPanel = new SearchPanel();\n        add(\"Search\", searchPanel);\n        add(\"test\",new DataSourceViewer());\n       */\n    }","commit_id":"31140e322e63947e0438835f9a1c1edb28afa281","url":"https://github.com/VUE/VUE"},{"original_method":"private static void  setMenuToolbars(JFrame frame, Action[] windowActions)\n    {\n        final int metaMask = VueUtil.isMacPlatform() ? Event.META_MASK : Event.CTRL_MASK;\n        \n        JMenuBar menuBar = new JMenuBar();\n        JMenu fileMenu = new JMenu(\"File\");\n        JMenu editMenu = new JMenu(\"Edit\");\n        JMenu viewMenu = new JMenu(\"View\");\n        JMenu formatMenu = new JMenu(\"Format\");\n        JMenu arrangeMenu = new JMenu(\"Arrange\");\n        //JMenu alignMenu = new JMenu(\"Align\");\n        JMenu windowMenu = new JMenu(\"Window\");\n        JMenu optionsMenu = new JMenu(\"Options\");\n        JMenu helpMenu = new JMenu(\"Help\");\n        \n        menuBar.add(fileMenu);\n        menuBar.add(editMenu);\n        menuBar.add(viewMenu);\n        menuBar.add(formatMenu);\n        menuBar.add(arrangeMenu);\n        menuBar.add(windowMenu);\n        menuBar.add(optionsMenu);\n        menuBar.add(helpMenu);\n        //adding actions\n        SaveAction saveAction = new SaveAction(\"Save\", false);\n        SaveAction saveAsAction = new SaveAction(\"Save As...\");\n        OpenAction openAction = new OpenAction(\"Open\");\n        ExitAction exitAction = new ExitAction(\"Quit\");\n        fileMenu.add(Actions.NewMap);\n        fileMenu.add(openAction).setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, metaMask));\n        fileMenu.add(saveAction).setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, metaMask));\n        fileMenu.add(saveAsAction);\n        fileMenu.add(Actions.CloseMap);\n        //fileMenu.add(htmlAction);\n        fileMenu.add(new JMenuItem(\"Export ...\"));\n        fileMenu.addSeparator();\n        fileMenu.add(exitAction);\n        \n        editMenu.add(Actions.Undo);\n        editMenu.add(Actions.Redo);\n        editMenu.addSeparator();\n        editMenu.add(Actions.NewNode);\n        editMenu.add(Actions.NewText);\n        editMenu.add(Actions.Rename);\n        editMenu.add(Actions.Duplicate);\n        editMenu.addSeparator();\n        editMenu.add(Actions.Cut);\n        editMenu.add(Actions.Copy);\n        editMenu.add(Actions.Paste);\n        editMenu.addSeparator();\n        editMenu.add(Actions.SelectAll);\n        editMenu.add(Actions.DeselectAll);\n        \n        viewMenu.add(Actions.ZoomIn);\n        viewMenu.add(Actions.ZoomOut);\n        viewMenu.add(Actions.ZoomFit);\n        viewMenu.add(Actions.ZoomActual);\n        viewMenu.addSeparator();\n        viewMenu.add(new JMenuItem(\"Resources\"));\n        viewMenu.add(new JMenuItem(\"Collection\"));\n        viewMenu.add(new JMenuItem(\"Inspector\"));\n        viewMenu.add(new JMenuItem(\"Pathway\"));\n        viewMenu.add(new JMenuItem(\"Toolbar\"));\n        viewMenu.add(new JMenuItem(\"Overview\"));\n        \n        JMenu fontMenu = new JMenu(\"Font\");\n\n        /*\n        // this list bigger than screen & menu isn't scrolling for us!\n        String[] fonts = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();\n        System.out.println(java.util.Arrays.asList(fonts));\n        for (int i = 0; i < fonts.length; i++) {\n            JMenuItem fm = new JMenuItem(fonts[i]);\n            fontMenu.add(fm);\n        }\n        */\n                           \n        //formatMenu.add(fontMenu);\n        formatMenu.add(Actions.FontSmaller);\n        formatMenu.add(Actions.FontBigger);\n        formatMenu.add(Actions.FontBold);\n        formatMenu.add(Actions.FontItalic);\n        //formatMenu.add(new JMenuItem(\"Size\"));\n        //formatMenu.add(new JMenuItem(\"Style\"));\n        formatMenu.add(\"Text Justify\").setEnabled(false);\n\n\n        for (int i = 0; i < Actions.ALIGN_MENU_ACTIONS.length; i++) {\n            Action a = Actions.ALIGN_MENU_ACTIONS[i];\n            if (a == null)\n                alignMenu.addSeparator();\n            else\n                alignMenu.add(a);\n        }\n        /*\n        alignMenu.add(Actions.AlignLeftEdges);\n        alignMenu.add(Actions.AlignRightEdges);\n        alignMenu.add(Actions.AlignTopEdges);\n        alignMenu.add(Actions.AlignBottomEdges);\n        alignMenu.addSeparator();\n        alignMenu.add(Actions.AlignCentersRow);\n        alignMenu.add(Actions.AlignCentersColumn);\n        alignMenu.addSeparator();\n        alignMenu.add(Actions.DistributeVertically);\n        alignMenu.add(Actions.DistributeHorizontally);\n        */\n        \n        arrangeMenu.add(Actions.BringToFront);\n        arrangeMenu.add(Actions.BringForward);\n        arrangeMenu.add(Actions.SendToBack);\n        arrangeMenu.add(Actions.SendBackward);\n        arrangeMenu.addSeparator();\n        arrangeMenu.add(Actions.Group);\n        arrangeMenu.add(Actions.Ungroup);\n        arrangeMenu.addSeparator();\n        arrangeMenu.add(alignMenu);\n        \n        for (int i = 0; i < windowActions.length; i++) {\n            System.out.println(\"adding \" + windowActions[i]);\n            windowMenu.add(new JCheckBoxMenuItem(windowActions[i]));\n        }\n\n        optionsMenu.add(new JMenuItem(\"Node Types...\"));\n        optionsMenu.add(new JMenuItem(\"Map Preference...\"));\n        optionsMenu.add(new JMenuItem(\"Preferences...\"));\n        \n        helpMenu.add(new JMenuItem(\"Help\"));\n        \n\n        //extra additions by the power team members\n        PDFTransform pdfAction = new PDFTransform(\"PDF\");\n        HTMLConversion htmlAction = new HTMLConversion(\"HTML\");\n        XMLView xmlAction = new XMLView(\"XML\");\n        ImageConversion imageAction = new ImageConversion(\"JPEG\");\n        ImageMap imageMap = new ImageMap(\"IMAP\");\n        SVGConversion svgAction = new SVGConversion(\"SVG\");\n        PrintAction printAction = new PrintAction(\"Print\");\n        \n        JToolBar toolBar = new JToolBar();\n        toolBar.add(Actions.NewMap);\n        toolBar.add(openAction);\n        toolBar.add(Actions.CloseMap);\n        toolBar.add(saveAction);\n        toolBar.add(saveAsAction);\n        toolBar.add(printAction);\n        toolBar.add(imageAction);\n        toolBar.add(htmlAction);\n        toolBar.add(xmlAction);\n        toolBar.add(pdfAction);\n        toolBar.add(imageMap);\n        toolBar.add(svgAction);\n        toolBar.add(new JButton(new ImageIcon(\"tufts/vue/images/ZoomOut16.gif\")));\n        frame.setJMenuBar(menuBar);\n        //frame.getContentPane().add(toolBar,BorderLayout.NORTH);\n        frame.addWindowListener(new WindowAdapter() {\n            public void windowClosing(WindowEvent e) {System.exit(0);}});\n\n    }","id":63876,"modified_method":"private static void  setMenuToolbars(JFrame frame, Action[] windowActions)\n    {\n        final int metaMask = VueUtil.isMacPlatform() ? Event.META_MASK : Event.CTRL_MASK;\n        \n        JMenuBar menuBar = new JMenuBar();\n        JMenu fileMenu = new JMenu(\"File\");\n        JMenu editMenu = new JMenu(\"Edit\");\n        JMenu viewMenu = new JMenu(\"View\");\n        JMenu formatMenu = new JMenu(\"Format\");\n        JMenu arrangeMenu = new JMenu(\"Arrange\");\n        //JMenu alignMenu = new JMenu(\"Align\");\n        JMenu windowMenu = new JMenu(\"Window\");\n        JMenu optionsMenu = new JMenu(\"Options\");\n        JMenu helpMenu = new JMenu(\"Help\");\n        \n        menuBar.add(fileMenu);\n        menuBar.add(editMenu);\n        menuBar.add(viewMenu);\n        menuBar.add(formatMenu);\n        menuBar.add(arrangeMenu);\n        menuBar.add(windowMenu);\n        menuBar.add(optionsMenu);\n        menuBar.add(helpMenu);\n        //adding actions\n        SaveAction saveAction = new SaveAction(\"Save\", false);\n        SaveAction saveAsAction = new SaveAction(\"Save As...\");\n        OpenAction openAction = new OpenAction(\"Open\");\n        ExitAction exitAction = new ExitAction(\"Quit\");\n        fileMenu.add(Actions.NewMap);\n        fileMenu.add(openAction).setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, metaMask));\n        fileMenu.add(saveAction).setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, metaMask));\n        fileMenu.add(saveAsAction);\n        fileMenu.add(Actions.CloseMap);\n        //fileMenu.add(htmlAction);\n        fileMenu.add(new JMenuItem(\"Export ...\"));\n        fileMenu.addSeparator();\n        fileMenu.add(exitAction);\n        \n        editMenu.add(Actions.Undo);\n        editMenu.add(Actions.Redo);\n        editMenu.addSeparator();\n        editMenu.add(Actions.NewNode);\n        editMenu.add(Actions.NewText);\n        editMenu.add(Actions.Rename);\n        editMenu.add(Actions.Duplicate);\n        editMenu.addSeparator();\n        editMenu.add(Actions.Cut);\n        editMenu.add(Actions.Copy);\n        editMenu.add(Actions.Paste);\n        editMenu.addSeparator();\n        editMenu.add(Actions.SelectAll);\n        editMenu.add(Actions.DeselectAll);\n        \n        viewMenu.add(Actions.ZoomIn);\n        viewMenu.add(Actions.ZoomOut);\n        viewMenu.add(Actions.ZoomFit);\n        viewMenu.add(Actions.ZoomActual);\n        viewMenu.addSeparator();\n        viewMenu.add(new JMenuItem(\"Resources\"));\n        viewMenu.add(new JMenuItem(\"Collection\"));\n        viewMenu.add(new JMenuItem(\"Inspector\"));\n        viewMenu.add(new JMenuItem(\"Pathway\"));\n        viewMenu.add(new JMenuItem(\"Toolbar\"));\n        viewMenu.add(new JMenuItem(\"Overview\"));\n        \n        JMenu fontMenu = new JMenu(\"Font\");\n\n        /*\n        // this list bigger than screen & menu isn't scrolling for us!\n        String[] fonts = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();\n        System.out.println(java.util.Arrays.asList(fonts));\n        for (int i = 0; i < fonts.length; i++) {\n            JMenuItem fm = new JMenuItem(fonts[i]);\n            fontMenu.add(fm);\n        }\n        */\n                           \n        //formatMenu.add(fontMenu);\n        formatMenu.add(Actions.FontSmaller);\n        formatMenu.add(Actions.FontBigger);\n        formatMenu.add(Actions.FontBold);\n        formatMenu.add(Actions.FontItalic);\n        //formatMenu.add(new JMenuItem(\"Size\"));\n        //formatMenu.add(new JMenuItem(\"Style\"));\n        formatMenu.add(\"Text Justify\").setEnabled(false);\n\n\n        for (int i = 0; i < Actions.ALIGN_MENU_ACTIONS.length; i++) {\n            Action a = Actions.ALIGN_MENU_ACTIONS[i];\n            if (a == null)\n                alignMenu.addSeparator();\n            else\n                alignMenu.add(a);\n        }\n        /*\n        alignMenu.add(Actions.AlignLeftEdges);\n        alignMenu.add(Actions.AlignRightEdges);\n        alignMenu.add(Actions.AlignTopEdges);\n        alignMenu.add(Actions.AlignBottomEdges);\n        alignMenu.addSeparator();\n        alignMenu.add(Actions.AlignCentersRow);\n        alignMenu.add(Actions.AlignCentersColumn);\n        alignMenu.addSeparator();\n        alignMenu.add(Actions.DistributeVertically);\n        alignMenu.add(Actions.DistributeHorizontally);\n        */\n        \n        arrangeMenu.add(Actions.BringToFront);\n        arrangeMenu.add(Actions.BringForward);\n        arrangeMenu.add(Actions.SendToBack);\n        arrangeMenu.add(Actions.SendBackward);\n        arrangeMenu.addSeparator();\n        arrangeMenu.add(Actions.Group);\n        arrangeMenu.add(Actions.Ungroup);\n        arrangeMenu.addSeparator();\n        arrangeMenu.add(alignMenu);\n        \n        for (int i = 0; i < windowActions.length; i++) {\n            System.out.println(\"adding \" + windowActions[i]);\n            windowMenu.add(new JCheckBoxMenuItem(windowActions[i]));\n        }\n\n        optionsMenu.add(new JMenuItem(\"Node Types...\"));\n        optionsMenu.add(new JMenuItem(\"Map Preference...\"));\n        optionsMenu.add(new JMenuItem(\"Preferences...\"));\n        \n        helpMenu.add(new JMenuItem(\"Help\"));\n        \n\n        //extra additions by the power team members\n        PDFTransform pdfAction = new PDFTransform(\"PDF\");\n        HTMLConversion htmlAction = new HTMLConversion(\"HTML\");\n        XMLView xmlAction = new XMLView(\"XML\");\n        ImageConversion imageAction = new ImageConversion(\"JPEG\");\n        ImageMap imageMap = new ImageMap(\"IMAP\");\n        SVGConversion svgAction = new SVGConversion(\"SVG\");\n        PrintAction printAction = new PrintAction(\"Print\");\n        \n        JToolBar toolBar = new JToolBar();\n        toolBar.add(Actions.NewMap);\n        toolBar.add(openAction);\n        toolBar.add(Actions.CloseMap);\n        toolBar.add(saveAction);\n        toolBar.add(saveAsAction);\n        toolBar.add(printAction);\n        toolBar.add(imageAction);\n        toolBar.add(htmlAction);\n        toolBar.add(xmlAction);\n        toolBar.add(pdfAction);\n        toolBar.add(imageMap);\n        toolBar.add(svgAction);\n       // toolBar.add(new JButton(new ImageIcon(\"tufts/vue/images/ZoomOut16.gif\")));\n        toolBar.add(new JButton(new PolygonIcon(Color.RED)));\n        frame.setJMenuBar(menuBar);\n        //frame.getContentPane().add(toolBar,BorderLayout.NORTH);\n        frame.addWindowListener(new WindowAdapter() {\n            public void windowClosing(WindowEvent e) {System.exit(0);}});\n\n    }","commit_id":"31140e322e63947e0438835f9a1c1edb28afa281","url":"https://github.com/VUE/VUE"},{"original_method":"public VueDragTree(Object obj, String treeName) {\n       \n        //create the treemodel\n        \n        \n        \n        setModel(createTreeModel(obj, treeName));\n        \n        //Implement Drag\n        \n        \n        DragSource dragSource = DragSource.getDefaultDragSource();\n\n\t\tdragSource.createDefaultDragGestureRecognizer(\n\t\t\t\t\tthis, // component where drag originates\n\t\t\t\t\tDnDConstants.ACTION_COPY_OR_MOVE, // actions\n\t\t\t\t\tthis); // drag gesture recognizer\n\n\t\taddTreeExpansionListener(new TreeExpansionListener(){\n\t\t\tpublic void treeCollapsed(TreeExpansionEvent e) {\n\t\t\t}\n\t\t\tpublic void treeExpanded(TreeExpansionEvent e) {\n\t\t\t\tTreePath path = e.getPath();\n                                if(path != null) {\n\t\t\t\t\tFileNode node = (FileNode)\n\t\t\t\t\t\t\t\t   path.getLastPathComponent();\n\n\t\t\t\t\tif( !node.isExplored()) {\n\t\t\t\t\t\tDefaultTreeModel model = \n\t\t\t\t\t\t\t\t\t(DefaultTreeModel)getModel();\n\t\t\t\t\t\tnode.explore();\n\t\t\t\t\t\tmodel.nodeStructureChanged(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n         \n                VueDragTreeCellRenderer renderer = new VueDragTreeCellRenderer(this);\n               \n         \n              \n                  this.setCellRenderer(renderer);\n                  \n                ToolTipManager.sharedInstance().registerComponent(this);\n        \n       \n        \n    }","id":63877,"modified_method":"public VueDragTree(Object obj, String treeName) {\n       \n        //create the treemodel\n       \n        if (obj instanceof FavoritesNode){\n            System.out.println(\"I am in fav node\");\n          \n               setModel(new DefaultTreeModel((FavoritesNode)obj));\n                  this.setShowsRootHandles(true);\n              \n          \n        }\n        else{\n          \n             setModel(createTreeModel(obj, treeName));\n        }\n       \n        implementDrag(this);\n        \n      \n    }","commit_id":"31140e322e63947e0438835f9a1c1edb28afa281","url":"https://github.com/VUE/VUE"},{"original_method":"private DefaultTreeModel createTreeModel(Object obj, String treeName){\n        \n        \n        DefaultMutableTreeNode root = new DefaultMutableTreeNode(treeName); \n          \n        \n   \n        if (obj instanceof AssetIterator){\n            AssetIterator i = (AssetIterator)obj;\n            try{\n                while (i.hasNext())\n                            root.add(new AssetNode(i.next()));\n            }catch (Exception e){System.out.println(\"VueDragTree.createTreeModel\"+e);}\n                      \n        } else{\n            Iterator i = (Iterator)obj;\n             while (i.hasNext()){\n                Object resource = i.next(); \n                if (resource instanceof File)\n                {\n                             \n                    FileNode rootNode = new FileNode((File)resource);\n                    root.add(rootNode);\n                    rootNode.explore();\n                }\n                else \n                    root.add(new DefaultMutableTreeNode(resource));\n            }\n        }\n                  \n     return new DefaultTreeModel(root);\n       \n    }","id":63878,"modified_method":"private DefaultTreeModel createTreeModel(Object obj, String treeName ){\n        \n        \n          \n      \n           DefaultMutableTreeNode root = new DefaultMutableTreeNode(treeName); \n          \n   \n       if (obj instanceof AssetIterator){\n            AssetIterator i = (AssetIterator)obj;\n            try{\n                while (i.hasNext())\n                            root.add(new AssetNode(i.next()));\n            }catch (Exception e){System.out.println(\"VueDragTree.createTreeModel\"+e);}\n                      \n        } else if(obj instanceof Iterator){\n            Iterator i = (Iterator)obj;\n             while (i.hasNext()){\n                Object resource = i.next(); \n                if (resource instanceof File)\n                {\n                             \n                    FileNode rootNode = new FileNode((File)resource);\n                    root.add(rootNode);\n                    rootNode.explore();\n                }\n                else {\n                    root.add(new DefaultMutableTreeNode(resource));\n                 }\n             }\n            \n            \n        }else {}\n       //todo we need a constructor with just tree name      \n     return new DefaultTreeModel(root);\n       \n    }","commit_id":"31140e322e63947e0438835f9a1c1edb28afa281","url":"https://github.com/VUE/VUE"},{"original_method":"private void updateLists() {\n    Object qualifier = myAvailableQualifiersList.getSelectedValue();\n    myAvailableQualifiersList.setModel(new CollectionListModel(myAvailableQualifiersConfig.getQualifiers()));\n    myAvailableQualifiersList.setSelectedValue(qualifier, true);\n\n    if (myAvailableQualifiersList.getSelectedValue() == null && myAvailableQualifiersList.getItemsCount() > 0) {\n      myAvailableQualifiersList.setSelectedIndex(0);\n    }\n\n    qualifier = myChosenQualifiersList.getSelectedValue();\n    myChosenQualifiersList.setModel(new CollectionListModel(myChosenQualifiersConfig.getQualifiers()));\n    myChosenQualifiersList.setSelectedValue(qualifier, true);\n\n    if (myChosenQualifiersList.getSelectedValue() == null && myChosenQualifiersList.getItemsCount() > 0) {\n      myChosenQualifiersList.setSelectedIndex(0);\n    }\n  }","id":63879,"modified_method":"private void updateLists() {\n    Object qualifier = myAvailableQualifiersList.getSelectedValue();\n    final ResourceQualifier[] availableQualifiers = filterUnsupportedQualifiers(myAvailableQualifiersConfig.getQualifiers());\n    myAvailableQualifiersList.setModel(new CollectionListModel(availableQualifiers));\n    myAvailableQualifiersList.setSelectedValue(qualifier, true);\n\n    if (myAvailableQualifiersList.getSelectedValue() == null && myAvailableQualifiersList.getItemsCount() > 0) {\n      myAvailableQualifiersList.setSelectedIndex(0);\n    }\n\n    qualifier = myChosenQualifiersList.getSelectedValue();\n    final ResourceQualifier[] chosenQualifiers = filterUnsupportedQualifiers(myChosenQualifiersConfig.getQualifiers());\n    myChosenQualifiersList.setModel(new CollectionListModel(chosenQualifiers));\n    myChosenQualifiersList.setSelectedValue(qualifier, true);\n\n    if (myChosenQualifiersList.getSelectedValue() == null && myChosenQualifiersList.getItemsCount() > 0) {\n      myChosenQualifiersList.setSelectedIndex(0);\n    }\n  }","commit_id":"34b237d99d967270ec9d378f94595675c366382c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public FixedComboBoxEditor() {\n    if (SystemInfo.isMac && UIUtil.isUnderAquaLookAndFeel()) {\n      myField = new MacComboBoxTextField();\n    }\n    else {\n      myField = new JBTextField();\n      myField.setBorder(null);\n    }\n  }","id":63880,"modified_method":"public FixedComboBoxEditor() {\n    if (SystemInfo.isMac && (UIUtil.isUnderAquaLookAndFeel() || UIUtil.isUnderIntelliJLaF())) {\n      myField = new MacComboBoxTextField();\n    }\n    else {\n      myField = new JBTextField();\n      myField.setBorder(null);\n    }\n  }","commit_id":"163764450bf43d2a78eaf0dc12ddbe05439fd7e2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private MacComboBoxTextField() {\n      setBorder(isEnabled() ? EDITOR_BORDER : DISABLED_EDITOR_BORDER);\n      //setFont(UIUtil.getListFont());\n\n      final InputMap inputMap = getInputMap();\n\n      inputMap.put(KeyStroke.getKeyStroke(\"DOWN\"), \"aquaSelectNext\");\n      inputMap.put(KeyStroke.getKeyStroke(\"KP_DOWN\"), \"aquaSelectNext\");\n      inputMap.put(KeyStroke.getKeyStroke(\"UP\"), \"aquaSelectPrevious\");\n      inputMap.put(KeyStroke.getKeyStroke(\"KP_UP\"), \"aquaSelectPrevious\");\n\n      inputMap.put(KeyStroke.getKeyStroke(\"HOME\"), \"aquaSelectHome\");\n      inputMap.put(KeyStroke.getKeyStroke(\"END\"), \"aquaSelectEnd\");\n      inputMap.put(KeyStroke.getKeyStroke(\"PAGE_UP\"), \"aquaSelectPageUp\");\n      inputMap.put(KeyStroke.getKeyStroke(\"PAGE_DOWN\"), \"aquaSelectPageDown\");\n\n      inputMap.put(KeyStroke.getKeyStroke(\"ENTER\"), \"aquaEnterPressed\");\n      inputMap.put(KeyStroke.getKeyStroke(\"SPACE\"), \"aquaSpacePressed\");\n\n      //getActionMap().put(\"macEnterPressed\", macEnterPressedAction);\n      //getDocument().addDocumentListener(this);\n\n      addPropertyChangeListener(new PropertyChangeListener() {\n        @Override\n        public void propertyChange(PropertyChangeEvent evt) {\n          if (\"enabled\".equals(evt.getPropertyName())) {\n            setBorder(Boolean.TRUE.equals(evt.getNewValue()) ? EDITOR_BORDER : DISABLED_EDITOR_BORDER);\n            repaint();\n          }\n        }\n      });\n\n      addFocusListener(this);\n    }","id":63881,"modified_method":"private MacComboBoxTextField() {\n      if (SystemInfo.isMac && UIUtil.isUnderIntelliJLaF()) {\n        setBorder(JBUI.Borders.empty());\n        setOpaque(false);\n      } else {\n        setBorder(isEnabled() ? EDITOR_BORDER : DISABLED_EDITOR_BORDER);\n      }\n      //setFont(UIUtil.getListFont());\n\n      final InputMap inputMap = getInputMap();\n\n      inputMap.put(KeyStroke.getKeyStroke(\"DOWN\"), \"aquaSelectNext\");\n      inputMap.put(KeyStroke.getKeyStroke(\"KP_DOWN\"), \"aquaSelectNext\");\n      inputMap.put(KeyStroke.getKeyStroke(\"UP\"), \"aquaSelectPrevious\");\n      inputMap.put(KeyStroke.getKeyStroke(\"KP_UP\"), \"aquaSelectPrevious\");\n\n      inputMap.put(KeyStroke.getKeyStroke(\"HOME\"), \"aquaSelectHome\");\n      inputMap.put(KeyStroke.getKeyStroke(\"END\"), \"aquaSelectEnd\");\n      inputMap.put(KeyStroke.getKeyStroke(\"PAGE_UP\"), \"aquaSelectPageUp\");\n      inputMap.put(KeyStroke.getKeyStroke(\"PAGE_DOWN\"), \"aquaSelectPageDown\");\n\n      inputMap.put(KeyStroke.getKeyStroke(\"ENTER\"), \"aquaEnterPressed\");\n      inputMap.put(KeyStroke.getKeyStroke(\"SPACE\"), \"aquaSpacePressed\");\n\n      //getActionMap().put(\"macEnterPressed\", macEnterPressedAction);\n      //getDocument().addDocumentListener(this);\n\n      addPropertyChangeListener(new PropertyChangeListener() {\n        @Override\n        public void propertyChange(PropertyChangeEvent evt) {\n          if (\"enabled\".equals(evt.getPropertyName())) {\n            setBorder(Boolean.TRUE.equals(evt.getNewValue()) ? EDITOR_BORDER : DISABLED_EDITOR_BORDER);\n            repaint();\n          }\n        }\n      });\n\n      addFocusListener(this);\n    }","commit_id":"163764450bf43d2a78eaf0dc12ddbe05439fd7e2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void paintComponent(Graphics g) {\n    super.paintComponent(g);\n    if (UIUtil.isUnderAquaLookAndFeel()) {\n      return;\n    }\n\n    switch (getState()) {\n      case DONT_CARE:\n        Icon icon = getIcon();\n        if (icon == null) {\n          icon = UIManager.getIcon(\"CheckBox.icon\");\n        }\n        if (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF()) {\n          icon = EmptyIcon.create(20, 18);\n        }\n        if (icon != null) {\n          final Insets i = getInsets();\n          final Rectangle r = getBounds();\n          final Rectangle r1 = new Rectangle();\n          r1.x = i.left;\n          r1.y = i.top;\n          r1.width = r.width - (i.right + r1.x);\n          r1.height = r.height - (i.bottom + r1.y);\n\n          final Rectangle r2 = new Rectangle();\n          final Rectangle r3 = new Rectangle();\n          SwingUtilities.layoutCompoundLabel(\n            this, getFontMetrics(getFont()), getText(), icon,\n            getVerticalAlignment(), getHorizontalAlignment(),\n            getVerticalTextPosition(), getHorizontalTextPosition(),\n            r1, r2, r3,\n            getText() == null ? 0 : getIconTextGap());\n\n          // selected table cell: do not paint white on white\n          g.setColor(UIUtil.getTreeForeground());\n          int height = r2.height / 10;\n          int width = r2.width / 3;\n          g.fillRect(r2.x + r2.width / 2 - width / 2, r2.y + r2.height / 2 - height / 2, width, height);\n        }\n        break;\n      default:\n        break;\n    }\n  }","id":63882,"modified_method":"@Override\n  protected void paintComponent(Graphics g) {\n    super.paintComponent(g);\n    if (UIUtil.isUnderAquaLookAndFeel() || (SystemInfo.isMac && UIUtil.isUnderIntelliJLaF())) {\n      return;\n    }\n\n    switch (getState()) {\n      case DONT_CARE:\n        Icon icon = getIcon();\n        if (icon == null) {\n          icon = UIManager.getIcon(\"CheckBox.icon\");\n        }\n        if (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF()) {\n          icon = EmptyIcon.create(20, 18);\n        }\n        if (icon != null) {\n          final Insets i = getInsets();\n          final Rectangle r = getBounds();\n          final Rectangle r1 = new Rectangle();\n          r1.x = i.left;\n          r1.y = i.top;\n          r1.width = r.width - (i.right + r1.x);\n          r1.height = r.height - (i.bottom + r1.y);\n\n          final Rectangle r2 = new Rectangle();\n          final Rectangle r3 = new Rectangle();\n          SwingUtilities.layoutCompoundLabel(\n            this, getFontMetrics(getFont()), getText(), icon,\n            getVerticalAlignment(), getHorizontalAlignment(),\n            getVerticalTextPosition(), getHorizontalTextPosition(),\n            r1, r2, r3,\n            getText() == null ? 0 : getIconTextGap());\n\n          // selected table cell: do not paint white on white\n          g.setColor(UIUtil.getTreeForeground());\n          int height = r2.height / 10;\n          int width = r2.width / 3;\n          g.fillRect(r2.x + r2.width / 2 - width / 2, r2.y + r2.height / 2 - height / 2, width, height);\n        }\n        break;\n      default:\n        break;\n    }\n  }","commit_id":"8ae761de0f2177d89b2460524e4aa696250f2ae1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public final void setEditor(final ComboBoxEditor editor) {\n    ComboBoxEditor _editor = editor;\n    if (SystemInfo.isMac && UIUtil.isUnderAquaLookAndFeel()) {\n      if (\"AquaComboBoxEditor\".equals(editor.getClass().getSimpleName())) {\n        _editor = new FixedComboBoxEditor();\n      }\n    }\n\n    super.setEditor(new MyEditor(this, _editor));\n  }","id":63883,"modified_method":"public final void setEditor(final ComboBoxEditor editor) {\n    ComboBoxEditor _editor = editor;\n    if (SystemInfo.isMac && (UIUtil.isUnderAquaLookAndFeel() || UIUtil.isUnderIntelliJLaF())) {\n      if (\"AquaComboBoxEditor\".equals(editor.getClass().getSimpleName()) || UIUtil.isUnderIntelliJLaF()) {\n        _editor = new FixedComboBoxEditor();\n      }\n    }\n\n    super.setEditor(new MyEditor(this, _editor));\n  }","commit_id":"d63f225db7a009898107a39d705fc6269d1914d7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private FixedSizeButton(int size, JComponent component) {\n    Icon icon = AllIcons.General.Ellipsis;\n    if (icon != null) {\n      // loading may fail at design time\n      setIcon(icon);\n    }\n    else {\n      setText(\".\");\n    }\n    mySize = size;\n    myComponent = component;\n    setMargin(new Insets(0, 0, 0, 0));\n    setDefaultCapable(false);\n    setFocusable(false);\n    if (UIUtil.isUnderAquaLookAndFeel() && size == -1) {\n      putClientProperty(\"JButton.buttonType\", \"square\");\n    }\n  }","id":63884,"modified_method":"private FixedSizeButton(int size, JComponent component) {\n    Icon icon = AllIcons.General.Ellipsis;\n    if (icon != null) {\n      // loading may fail at design time\n      setIcon(icon);\n    }\n    else {\n      setText(\".\");\n    }\n    mySize = size;\n    myComponent = component;\n    setMargin(new Insets(0, 0, 0, 0));\n    setDefaultCapable(false);\n    setFocusable(false);\n    if (((UIUtil.isUnderAquaLookAndFeel())&& size == -1) || UIUtil.isUnderIntelliJLaF() || UIUtil.isUnderDarcula()) {\n      putClientProperty(\"JButton.buttonType\", \"square\");\n    }\n  }","commit_id":"9a5b1b5be590c78d9bbc83391a71d2affa80ab53","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void paint(Graphics g, JComponent comp) {\n    UISettings.setupAntialiasing(g);\n    JMenuItem jmenuitem = (JMenuItem)comp;\n    ButtonModel buttonmodel = jmenuitem.getModel();\n    int mnemonicIndex = jmenuitem.getDisplayedMnemonicIndex();\n    Icon icon1 = getIcon();\n    Icon icon2 = getAllowedIcon();\n    int j1 = jmenuitem.getWidth();\n    int k1 = jmenuitem.getHeight();\n    Insets insets = comp.getInsets();\n    initBounds();\n    f.setBounds(0, 0, j1, k1);\n    f.x += insets.left;\n    f.y += insets.top;\n    f.width -= insets.right + f.x;\n    f.height -= insets.bottom + f.y;\n    Font font = g.getFont();\n    Font font1 = comp.getFont();\n    g.setFont(font1);\n    FontMetrics fontmetrics = g.getFontMetrics(font1);\n    FontMetrics fontmetrics1 = g.getFontMetrics(acceleratorFont);\n    String keyStrokeText;\n    if (jmenuitem instanceof ActionMenuItem) {\n      keyStrokeText = ((ActionMenuItem)jmenuitem).getFirstShortcutText();\n    }else{\n      keyStrokeText = getKeyStrokeText(jmenuitem.getAccelerator());\n    }\n    String s1 = layoutMenuItem(fontmetrics, jmenuitem.getText(), fontmetrics1, keyStrokeText, icon1, icon2, arrowIcon, jmenuitem.getVerticalAlignment(), jmenuitem.getHorizontalAlignment(), jmenuitem.getVerticalTextPosition(), jmenuitem.getHorizontalTextPosition(), f, l, j, c, h, d, jmenuitem.getText() != null ? defaultTextIconGap : 0, defaultTextIconGap);\n    Color color2 = g.getColor();\n    if (comp.isOpaque()){\n      g.setColor(jmenuitem.getBackground());\n      g.fillRect(0, 0, j1, k1);\n      if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()){\n        if (UIUtil.isUnderAquaLookAndFeel()) {\n          myAquaSelectedBackgroundPainter.paintBorder(comp, g, 0, 0, j1, k1);\n        } else {\n          g.setColor(selectionBackground);\n          if (icon2 != null && !(UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())){\n            g.fillRect(k, 0, j1 - k, k1);\n          }\n          else{\n            g.fillRect(0, 0, j1, k1);\n            //graphics.setColor(BegResources.q);\n            //graphics.drawLine(0, 0, 0, k1);\n            g.setColor(selectionBackground);\n          }\n          //graphics.setColor(BegResources.r);\n          //graphics.drawLine(j1 - 1, 0, j1 - 1, k1);\n        }\n      }\n      g.setColor(color2);\n    }\n    if (icon2 != null){\n      if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()){\n        g.setColor(selectionForeground);\n      }\n      else{\n        g.setColor(jmenuitem.getForeground());\n      }\n      if (useCheckAndArrow()){\n        icon2.paintIcon(comp, g, h.x, h.y);\n      }\n      g.setColor(color2);\n      if (menuItem.isArmed()){\n        drawIconBorder(g);\n      }\n    }\n    if (icon1 != null){\n      if (!buttonmodel.isEnabled()){\n        icon1 = jmenuitem.getDisabledIcon();\n      }\n      else\n        if (buttonmodel.isPressed() && buttonmodel.isArmed()){\n          icon1 = jmenuitem.getPressedIcon();\n          if (icon1 == null){\n            icon1 = jmenuitem.getIcon();\n          }\n        }\n      if (icon1 != null){\n        icon1.paintIcon(comp, g, l.x, l.y);\n      }\n    }\n    if (s1 != null && s1.length() > 0){\n      if (buttonmodel.isEnabled()){\n        if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()){\n          g.setColor(selectionForeground);\n        }\n        else{\n          g.setColor(jmenuitem.getForeground());\n        }\n        BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent());\n      }\n      else {\n        final Object disabledForeground = UIUtil.getMenuItemDisabledForegroundObject();\n        if (disabledForeground instanceof Color){\n          g.setColor((Color)disabledForeground);\n          BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent());\n        }\n        else{\n          g.setColor(jmenuitem.getBackground().brighter());\n          BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent());\n          g.setColor(jmenuitem.getBackground().darker());\n          BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x - 1, (j.y + fontmetrics.getAscent()) - 1);\n        }\n      }\n    }\n    if (keyStrokeText != null && !keyStrokeText.isEmpty()){\n      g.setFont(acceleratorFont);\n      if (buttonmodel.isEnabled()){\n        if (UIUtil.isUnderAquaBasedLookAndFeel() && (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected())) {\n          g.setColor(selectionForeground);\n        }\n        else {\n          if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) {\n            g.setColor(acceleratorSelectionForeground);\n          }\n          else {\n            g.setColor(acceleratorForeground);\n          }\n        }\n        BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent());\n      }\n      else\n        if (disabledForeground != null){\n          g.setColor(disabledForeground);\n          BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent());\n        }\n        else{\n          g.setColor(jmenuitem.getBackground().brighter());\n          BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent());\n          g.setColor(jmenuitem.getBackground().darker());\n          BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x - 1, (c.y + fontmetrics.getAscent()) - 1);\n        }\n    }\n    if (arrowIcon != null){\n      if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()){\n        g.setColor(selectionForeground);\n      }\n      if (useCheckAndArrow()){\n        arrowIcon.paintIcon(comp, g, d.x, d.y);\n      }\n    }\n    g.setColor(color2);\n    g.setFont(font);\n  }","id":63885,"modified_method":"public void paint(Graphics g, JComponent comp) {\n    UISettings.setupAntialiasing(g);\n    JMenuItem jmenuitem = (JMenuItem)comp;\n    ButtonModel buttonmodel = jmenuitem.getModel();\n    int mnemonicIndex = jmenuitem.getDisplayedMnemonicIndex();\n    Icon icon1 = getIcon();\n    Icon icon2 = getAllowedIcon();\n    int j1 = jmenuitem.getWidth();\n    int k1 = jmenuitem.getHeight();\n    Insets insets = comp.getInsets();\n    initBounds();\n    f.setBounds(0, 0, j1, k1);\n    f.x += insets.left;\n    f.y += insets.top;\n    f.width -= insets.right + f.x;\n    f.height -= insets.bottom + f.y;\n    Font font = g.getFont();\n    Font font1 = comp.getFont();\n    g.setFont(font1);\n    FontMetrics fontmetrics = g.getFontMetrics(font1);\n    FontMetrics fontmetrics1 = g.getFontMetrics(acceleratorFont);\n    String keyStrokeText;\n    if (jmenuitem instanceof ActionMenuItem) {\n      keyStrokeText = ((ActionMenuItem)jmenuitem).getFirstShortcutText();\n    }else{\n      keyStrokeText = getKeyStrokeText(jmenuitem.getAccelerator());\n    }\n    String s1 = layoutMenuItem(fontmetrics, jmenuitem.getText(), fontmetrics1, keyStrokeText, icon1, icon2, arrowIcon, jmenuitem.getVerticalAlignment(), jmenuitem.getHorizontalAlignment(), jmenuitem.getVerticalTextPosition(), jmenuitem.getHorizontalTextPosition(), f, l, j, c, h, d, jmenuitem.getText() != null ? defaultTextIconGap : 0, defaultTextIconGap);\n    Color color2 = g.getColor();\n    if (comp.isOpaque() || (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())){\n      g.setColor(jmenuitem.getBackground());\n      g.fillRect(0, 0, j1, k1);\n      if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()){\n        if (UIUtil.isUnderAquaLookAndFeel()) {\n          myAquaSelectedBackgroundPainter.paintBorder(comp, g, 0, 0, j1, k1);\n        } else {\n          g.setColor(selectionBackground);\n          if (icon2 != null && !(UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())){\n            g.fillRect(k, 0, j1 - k, k1);\n          }\n          else{\n            g.fillRect(0, 0, j1, k1);\n            //graphics.setColor(BegResources.q);\n            //graphics.drawLine(0, 0, 0, k1);\n            g.setColor(selectionBackground);\n          }\n          //graphics.setColor(BegResources.r);\n          //graphics.drawLine(j1 - 1, 0, j1 - 1, k1);\n        }\n      }\n      g.setColor(color2);\n    }\n    if (icon2 != null){\n      if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()){\n        g.setColor(selectionForeground);\n      }\n      else{\n        g.setColor(jmenuitem.getForeground());\n      }\n      if (useCheckAndArrow()){\n        icon2.paintIcon(comp, g, h.x, h.y);\n      }\n      g.setColor(color2);\n      if (menuItem.isArmed()){\n        drawIconBorder(g);\n      }\n    }\n    if (icon1 != null){\n      if (!buttonmodel.isEnabled()){\n        icon1 = jmenuitem.getDisabledIcon();\n      }\n      else\n        if (buttonmodel.isPressed() && buttonmodel.isArmed()){\n          icon1 = jmenuitem.getPressedIcon();\n          if (icon1 == null){\n            icon1 = jmenuitem.getIcon();\n          }\n        }\n      if (icon1 != null){\n        icon1.paintIcon(comp, g, l.x, l.y);\n      }\n    }\n    if (s1 != null && s1.length() > 0){\n      if (buttonmodel.isEnabled()){\n        if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()){\n          g.setColor(selectionForeground);\n        }\n        else{\n          g.setColor(jmenuitem.getForeground());\n        }\n        BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent());\n      }\n      else {\n        final Object disabledForeground = UIUtil.getMenuItemDisabledForegroundObject();\n        if (disabledForeground instanceof Color){\n          g.setColor((Color)disabledForeground);\n          BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent());\n        }\n        else{\n          g.setColor(jmenuitem.getBackground().brighter());\n          BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent());\n          g.setColor(jmenuitem.getBackground().darker());\n          BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x - 1, (j.y + fontmetrics.getAscent()) - 1);\n        }\n      }\n    }\n    if (keyStrokeText != null && !keyStrokeText.isEmpty()){\n      g.setFont(acceleratorFont);\n      if (buttonmodel.isEnabled()){\n        if (UIUtil.isUnderAquaBasedLookAndFeel() && (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected())) {\n          g.setColor(selectionForeground);\n        }\n        else {\n          if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) {\n            g.setColor(acceleratorSelectionForeground);\n          }\n          else {\n            g.setColor(acceleratorForeground);\n          }\n        }\n        BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent());\n      }\n      else\n        if (disabledForeground != null){\n          g.setColor(disabledForeground);\n          BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent());\n        }\n        else{\n          g.setColor(jmenuitem.getBackground().brighter());\n          BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent());\n          g.setColor(jmenuitem.getBackground().darker());\n          BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x - 1, (c.y + fontmetrics.getAscent()) - 1);\n        }\n    }\n    if (arrowIcon != null){\n      if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()){\n        g.setColor(selectionForeground);\n      }\n      if (useCheckAndArrow()){\n        arrowIcon.paintIcon(comp, g, d.x, d.y);\n      }\n    }\n    g.setColor(color2);\n    g.setFont(font);\n  }","commit_id":"a7554ffef1d753b5769069c3c18bd5976046c4b2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void paint(Graphics g, JComponent comp) {\n    UISettings.setupAntialiasing(g);\n    JMenu jMenu = (JMenu)comp;\n    ButtonModel buttonmodel = jMenu.getModel();\n    int mnemonicIndex = jMenu.getDisplayedMnemonicIndex();\n    Icon icon = getIcon();\n    Icon allowedIcon = getAllowedIcon();\n    Insets insets = comp.getInsets();\n    resetRects();\n    ourViewRect.setBounds(0, 0, jMenu.getWidth(), jMenu.getHeight());\n    ourViewRect.x += insets.left;\n    ourViewRect.y += insets.top;\n    ourViewRect.width -= insets.right + ourViewRect.x;\n    ourViewRect.height -= insets.bottom + ourViewRect.y;\n    Font font = g.getFont();\n    Font font1 = comp.getFont();\n    g.setFont(font1);\n    FontMetrics fontmetrics = g.getFontMetrics(font1);\n    String s1 = layoutMenuItem(\n      fontmetrics,\n      jMenu.getText(),\n      icon,\n      allowedIcon,\n      arrowIcon,\n      jMenu.getVerticalAlignment(),\n      jMenu.getHorizontalAlignment(),\n      jMenu.getVerticalTextPosition(),\n      jMenu.getHorizontalTextPosition(),\n      ourViewRect,\n      ourIconRect,\n      ourTextRect,\n      ourAcceleratorRect,\n      ourCheckIconRect,\n      ourArrowIconRect,\n      jMenu.getText() != null ? defaultTextIconGap : 0,\n      defaultTextIconGap\n    );\n    Color color2 = g.getColor();\n    if (comp.isOpaque()){\n      g.setColor(jMenu.getBackground());\n      g.fillRect(0, 0, jMenu.getWidth(), jMenu.getHeight());\n      if (buttonmodel.isArmed() || buttonmodel.isSelected()){\n        if (UIUtil.isUnderAquaLookAndFeel()) {\n           myAquaSelectedBackgroundPainter.paintBorder(comp, g, 0, 0, jMenu.getWidth(), jMenu.getHeight());\n        } else {\n          g.setColor(selectionBackground);\n          if (allowedIcon != null) {\n            g.fillRect(k, 0, jMenu.getWidth() - k, jMenu.getHeight());\n          }\n          else {\n            g.fillRect(0, 0, jMenu.getWidth(), jMenu.getHeight());\n            g.setColor(selectionBackground);\n          }\n        }\n      }\n      g.setColor(color2);\n    }\n    if (allowedIcon != null){\n      if (buttonmodel.isArmed() || buttonmodel.isSelected()){\n        g.setColor(selectionForeground);\n      }\n      else{\n        g.setColor(jMenu.getForeground());\n      }\n      if (useCheckAndArrow()){\n        allowedIcon.paintIcon(comp, g, ourCheckIconRect.x, ourCheckIconRect.y);\n      }\n      g.setColor(color2);\n      if (menuItem.isArmed()){\n        drawIconBorder(g);\n      }\n    }\n    if (icon != null){\n      if (!buttonmodel.isEnabled()){\n        icon = jMenu.getDisabledIcon();\n      }\n      else\n        if (buttonmodel.isPressed() && buttonmodel.isArmed()){\n          icon = jMenu.getPressedIcon();\n          if (icon == null){\n            icon = jMenu.getIcon();\n          }\n        }\n      if (icon != null){\n        icon.paintIcon(comp, g, ourIconRect.x, ourIconRect.y);\n      }\n    }\n    if (s1 != null && s1.length() > 0){\n      if (buttonmodel.isEnabled()){\n        if (buttonmodel.isArmed() || buttonmodel.isSelected()){\n          g.setColor(selectionForeground);\n        }\n        else{\n          g.setColor(jMenu.getForeground());\n        }\n        BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, ourTextRect.x, ourTextRect.y + fontmetrics.getAscent());\n      }\n      else {\n        final Object disabledForeground = UIUtil.getMenuItemDisabledForeground();\n        if (disabledForeground instanceof Color){\n          g.setColor((Color)disabledForeground);\n          BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, ourTextRect.x, ourTextRect.y + fontmetrics.getAscent());\n        }\n        else{\n          g.setColor(jMenu.getBackground().brighter());\n          BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, ourTextRect.x, ourTextRect.y + fontmetrics.getAscent());\n          g.setColor(jMenu.getBackground().darker());\n          BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, ourTextRect.x - 1, (ourTextRect.y + fontmetrics.getAscent()) - 1);\n        }\n      }\n    }\n    if (arrowIcon != null){\n      if (buttonmodel.isArmed() || buttonmodel.isSelected()){\n        g.setColor(selectionForeground);\n      }\n      if (useCheckAndArrow()){\n        try {\n          if (SystemInfo.isMac && myAquaInvertedArrowIcon != null && (buttonmodel.isArmed() || buttonmodel.isSelected()) && UIUtil.isUnderAquaLookAndFeel()) {\n            myAquaInvertedArrowIcon.paintIcon(comp, g, ourArrowIconRect.x, ourArrowIconRect.y);\n          } else if (SystemInfo.isMac && myAquaDisabledArrowIcon != null && !buttonmodel.isEnabled() && UIUtil.isUnderAquaLookAndFeel()) {\n            myAquaDisabledArrowIcon.paintIcon(comp, g, ourArrowIconRect.x, ourArrowIconRect.y);\n          } else arrowIcon.paintIcon(comp, g, ourArrowIconRect.x, ourArrowIconRect.y);\n        }\n        catch (NullPointerException npe) {\n          // GTKIconFactory$MenuArrowIcon.paintIcon since it doesn't expect to be given a null instead of SynthContext\n          // http://www.jetbrains.net/jira/browse/IDEADEV-22360\n        }\n      }\n    }\n    g.setColor(color2);\n    g.setFont(font);\n  }","id":63886,"modified_method":"public void paint(Graphics g, JComponent comp) {\n    UISettings.setupAntialiasing(g);\n    JMenu jMenu = (JMenu)comp;\n    ButtonModel buttonmodel = jMenu.getModel();\n    int mnemonicIndex = jMenu.getDisplayedMnemonicIndex();\n    Icon icon = getIcon();\n    Icon allowedIcon = getAllowedIcon();\n    Insets insets = comp.getInsets();\n    resetRects();\n    ourViewRect.setBounds(0, 0, jMenu.getWidth(), jMenu.getHeight());\n    ourViewRect.x += insets.left;\n    ourViewRect.y += insets.top;\n    ourViewRect.width -= insets.right + ourViewRect.x;\n    ourViewRect.height -= insets.bottom + ourViewRect.y;\n    Font font = g.getFont();\n    Font font1 = comp.getFont();\n    g.setFont(font1);\n    FontMetrics fontmetrics = g.getFontMetrics(font1);\n    String s1 = layoutMenuItem(\n      fontmetrics,\n      jMenu.getText(),\n      icon,\n      allowedIcon,\n      arrowIcon,\n      jMenu.getVerticalAlignment(),\n      jMenu.getHorizontalAlignment(),\n      jMenu.getVerticalTextPosition(),\n      jMenu.getHorizontalTextPosition(),\n      ourViewRect,\n      ourIconRect,\n      ourTextRect,\n      ourAcceleratorRect,\n      ourCheckIconRect,\n      ourArrowIconRect,\n      jMenu.getText() != null ? defaultTextIconGap : 0,\n      defaultTextIconGap\n    );\n    Color color2 = g.getColor();\n    if (comp.isOpaque()){\n      g.setColor(jMenu.getBackground());\n      g.fillRect(0, 0, jMenu.getWidth(), jMenu.getHeight());\n      if (buttonmodel.isArmed() || buttonmodel.isSelected()){\n        if (UIUtil.isUnderAquaLookAndFeel()) {\n           myAquaSelectedBackgroundPainter.paintBorder(comp, g, 0, 0, jMenu.getWidth(), jMenu.getHeight());\n        } else {\n          g.setColor(selectionBackground);\n          if (allowedIcon != null) {\n            g.fillRect(k, 0, jMenu.getWidth() - k, jMenu.getHeight());\n          }\n          else {\n            g.fillRect(0, 0, jMenu.getWidth(), jMenu.getHeight());\n            g.setColor(selectionBackground);\n          }\n        }\n      }\n      g.setColor(color2);\n    }\n    if (allowedIcon != null){\n      if (buttonmodel.isArmed() || buttonmodel.isSelected()){\n        g.setColor(selectionForeground);\n      }\n      else{\n        g.setColor(jMenu.getForeground());\n      }\n      if (useCheckAndArrow()){\n        allowedIcon.paintIcon(comp, g, ourCheckIconRect.x, ourCheckIconRect.y);\n      }\n      g.setColor(color2);\n      if (menuItem.isArmed()){\n        drawIconBorder(g);\n      }\n    }\n    if (icon != null){\n      if (!buttonmodel.isEnabled()){\n        icon = jMenu.getDisabledIcon();\n      }\n      else\n        if (buttonmodel.isPressed() && buttonmodel.isArmed()){\n          icon = jMenu.getPressedIcon();\n          if (icon == null){\n            icon = jMenu.getIcon();\n          }\n        }\n      if (icon != null){\n        icon.paintIcon(comp, g, ourIconRect.x, ourIconRect.y);\n      }\n    }\n    if (s1 != null && s1.length() > 0){\n      if (buttonmodel.isEnabled()){\n        if (buttonmodel.isArmed() || buttonmodel.isSelected()){\n          g.setColor(selectionForeground);\n        }\n        else{\n          g.setColor(jMenu.getForeground());\n        }\n        BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, ourTextRect.x, ourTextRect.y + fontmetrics.getAscent());\n      }\n      else {\n        final Object disabledForeground = UIUtil.getMenuItemDisabledForeground();\n        if (disabledForeground instanceof Color){\n          g.setColor((Color)disabledForeground);\n          BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, ourTextRect.x, ourTextRect.y + fontmetrics.getAscent());\n        }\n        else{\n          g.setColor(jMenu.getBackground().brighter());\n          BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, ourTextRect.x, ourTextRect.y + fontmetrics.getAscent());\n          g.setColor(jMenu.getBackground().darker());\n          BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, ourTextRect.x - 1, (ourTextRect.y + fontmetrics.getAscent()) - 1);\n        }\n      }\n    }\n    if (arrowIcon != null){\n      if (buttonmodel.isArmed() || buttonmodel.isSelected()){\n        g.setColor(selectionForeground);\n      }\n      if (useCheckAndArrow()){\n        try {\n          if (SystemInfo.isMac && myAquaInvertedArrowIcon != null && (buttonmodel.isArmed() || buttonmodel.isSelected()) && (UIUtil.isUnderAquaLookAndFeel() || UIUtil.isUnderIntelliJLaF())) {\n            myAquaInvertedArrowIcon.paintIcon(comp, g, ourArrowIconRect.x, ourArrowIconRect.y);\n          } else if (SystemInfo.isMac && myAquaDisabledArrowIcon != null && !buttonmodel.isEnabled() && (UIUtil.isUnderAquaLookAndFeel() || UIUtil.isUnderIntelliJLaF())) {\n            myAquaDisabledArrowIcon.paintIcon(comp, g, ourArrowIconRect.x, ourArrowIconRect.y);\n          } else arrowIcon.paintIcon(comp, g, ourArrowIconRect.x, ourArrowIconRect.y);\n        }\n        catch (NullPointerException npe) {\n          // GTKIconFactory$MenuArrowIcon.paintIcon since it doesn't expect to be given a null instead of SynthContext\n          // http://www.jetbrains.net/jira/browse/IDEADEV-22360\n        }\n      }\n    }\n    g.setColor(color2);\n    g.setFont(font);\n  }","commit_id":"a7554ffef1d753b5769069c3c18bd5976046c4b2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public IdeaMenuUI() {\n    myMaxGutterIconWidth = JBUI.scale(18);\n\n    if (UIUtil.isUnderAquaLookAndFeel()) {\n      if (myAquaSelectedBackgroundPainter == null) myAquaSelectedBackgroundPainter = (Border) UIManager.get(\"MenuItem.selectedBackgroundPainter\");\n      if (myAquaInvertedArrowIcon == null) myAquaInvertedArrowIcon = (Icon) UIManager.get(\"Menu.invertedArrowIcon\");\n      if (myAquaDisabledArrowIcon == null) myAquaDisabledArrowIcon = (Icon) UIManager.get(\"Menu.disabledArrowIcon\");\n    }\n  }","id":63887,"modified_method":"public IdeaMenuUI() {\n    myMaxGutterIconWidth = JBUI.scale(18);\n\n    if (UIUtil.isUnderAquaLookAndFeel() || UIUtil.isUnderIntelliJLaF()) {\n      if (myAquaSelectedBackgroundPainter == null) myAquaSelectedBackgroundPainter = (Border) UIManager.get(\"MenuItem.selectedBackgroundPainter\");\n      if (myAquaInvertedArrowIcon == null) myAquaInvertedArrowIcon = (Icon) UIManager.get(\"Menu.invertedArrowIcon\");\n      if (myAquaDisabledArrowIcon == null) myAquaDisabledArrowIcon = (Icon) UIManager.get(\"Menu.disabledArrowIcon\");\n    }\n  }","commit_id":"a7554ffef1d753b5769069c3c18bd5976046c4b2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void fixMenuIssues(UIDefaults uiDefaults) {\n    if (UIUtil.isUnderAquaLookAndFeel()) {\n      // update ui for popup menu to get round corners\n      uiDefaults.put(\"PopupMenuUI\", MacPopupMenuUI.class.getCanonicalName());\n      uiDefaults.put(\"Menu.invertedArrowIcon\", getAquaMenuInvertedIcon());\n      uiDefaults.put(\"Menu.disabledArrowIcon\", getAquaMenuDisabledIcon());\n    }\n    else if (UIUtil.isUnderJGoodiesLookAndFeel()) {\n      uiDefaults.put(\"Menu.opaque\", true);\n      uiDefaults.put(\"MenuItem.opaque\", true);\n    }\n    uiDefaults.put(\"MenuItem.background\", UIManager.getColor(\"Menu.background\"));\n  }","id":63888,"modified_method":"private static void fixMenuIssues(UIDefaults uiDefaults) {\n    if (UIUtil.isUnderAquaLookAndFeel() || (SystemInfo.isMac && UIUtil.isUnderIntelliJLaF())) {\n      // update ui for popup menu to get round corners\n      uiDefaults.put(\"PopupMenuUI\", MacPopupMenuUI.class.getCanonicalName());\n      uiDefaults.put(\"Menu.invertedArrowIcon\", getAquaMenuInvertedIcon());\n      uiDefaults.put(\"Menu.disabledArrowIcon\", getAquaMenuDisabledIcon());\n    }\n    else if (UIUtil.isUnderJGoodiesLookAndFeel()) {\n      uiDefaults.put(\"Menu.opaque\", true);\n      uiDefaults.put(\"MenuItem.opaque\", true);\n    }\n    uiDefaults.put(\"MenuItem.background\", UIManager.getColor(\"Menu.background\"));\n  }","commit_id":"a7554ffef1d753b5769069c3c18bd5976046c4b2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static Icon getAquaMenuInvertedIcon() {\n    if (!UIUtil.isUnderAquaLookAndFeel()) return null;\n    final Icon arrow = (Icon)UIManager.get(\"Menu.arrowIcon\");\n    if (arrow == null) return null;\n\n    try {\n      final Method method = ReflectionUtil.getMethod(arrow.getClass(), \"getInvertedIcon\");\n      if (method != null) {\n        return (Icon)method.invoke(arrow);\n      }\n      return null;\n    }\n    catch (InvocationTargetException e1) {\n      return null;\n    }\n    catch (IllegalAccessException e1) {\n      return null;\n    }\n  }","id":63889,"modified_method":"@Nullable\n  private static Icon getAquaMenuInvertedIcon() {\n    if (UIUtil.isUnderAquaLookAndFeel() || (SystemInfo.isMac && UIUtil.isUnderIntelliJLaF())) {\n      final Icon arrow = (Icon)UIManager.get(\"Menu.arrowIcon\");\n      if (arrow == null) return null;\n\n      try {\n        final Method method = ReflectionUtil.getMethod(arrow.getClass(), \"getInvertedIcon\");\n        if (method != null) {\n          return (Icon)method.invoke(arrow);\n        }\n        return null;\n      }\n      catch (InvocationTargetException e1) {\n        return null;\n      }\n      catch (IllegalAccessException e1) {\n        return null;\n      }\n    }\n    return null;\n  }","commit_id":"a7554ffef1d753b5769069c3c18bd5976046c4b2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Poll the specified address for service availability.\n     * \n     * During the poll an attempt is made to connect on the specified port. If\n     * the connection request is successful, the banner line generated by the\n     * interface is parsed and if the banner text indicates that we are talking\n     * to Provided that the interface's response is valid we set the service\n     * status to SERVICE_AVAILABLE and return.\n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availibility of the interface and if a transition event\n     *         should be supressed.\n     * \n     * @throws java.lang.RuntimeException\n     *             Thrown if the interface experiences errors during the poll.\n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\t\t\n\t\tString reason = null;\n\n        //\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4) {\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n        }\n\n        TimeoutTracker tracker = new TimeoutTracker(parameters, DEFAULT_RETRY, DEFAULT_TIMEOUT);\n        String command = ParameterMap.getKeyedString(parameters, \"command\", NrpePacket.HELLO_COMMAND);\n        int port = ParameterMap.getKeyedInteger(parameters, \"port\", CheckNrpe.DEFAULT_PORT);\n        int padding = ParameterMap.getKeyedInteger(parameters, \"padding\", NrpePacket.DEFAULT_PADDING);\n        m_useSsl = ParameterMap.getKeyedBoolean(parameters, \"usessl\", false);\n\n\t\t/*\n        // Port\n        //\n        int port = ParameterMap.getKeyedInteger(parameters, \"port\", DEFAULT_PORT);\n        if (port == DEFAULT_PORT) {\n            throw new RuntimeException(\"NrpeMonitor: required parameter 'port' is not present in supplied properties.\");\n        }\n        */\n\n        // BannerMatch\n        //\n        //Commented out because it is not currently referenced in this monitor\n        //String strBannerMatch = (String) parameters.get(\"banner\");\n\n        // Get the address instance.\n        //\n        InetAddress ipv4Addr = (InetAddress) iface.getAddress();\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"poll: address = \" + ipv4Addr.getHostAddress() + \", port = \" + port + \", \" + tracker);\n        }\n\n        // Give it a whirl\n        //\n        int serviceStatus = PollStatus.SERVICE_UNAVAILABLE;\n        Double responseTime = null;\n\n        for (tracker.reset(); tracker.shouldRetry() && serviceStatus != PollStatus.SERVICE_AVAILABLE; tracker.nextAttempt()) {\n            Socket socket = null;\n            try {\n                //\n                // create a connected socket\n                //\n                tracker.startAttempt();\n\n                socket = new Socket();\n                socket.connect(new InetSocketAddress(ipv4Addr, port), tracker.getConnectionTimeout());\n                socket.setSoTimeout(tracker.getSoTimeout());\n                log().debug(\"NrpeMonitor: connected to host: \" + ipv4Addr + \" on port: \" + port);\n                \n            \treason = \"Perhaps check the value of 'usessl' for this monitor against the NRPE daemon configuration\";\n                socket = wrapSocket(socket);\n\n                // We're connected, so upgrade status to unresponsive\n                serviceStatus = PollStatus.SERVICE_UNRESPONSIVE;\n            \treason = \"Connected successfully, but no response received\";\n\n\t\t\t\tNrpePacket p = new NrpePacket(NrpePacket.QUERY_PACKET, (short) 0,\n\t\t\t\t\t\tcommand);\n\t\t\t\tbyte[] b = p.buildPacket(padding);\n\t\t\t\tOutputStream o = socket.getOutputStream();\n\t\t\t\to.write(b);\n\n\t\t\t\t/*\n                if (strBannerMatch == null || strBannerMatch.length() == 0 || strBannerMatch.equals(\"*\")) {\n\n\t\t\t\tif (true) {\n                    serviceStatus = SERVICE_AVAILABLE;\n                    // Store response time in RRD\n                    if (responseTime >= 0 && rrdPath != null) {\n                        try {\n                            this.updateRRD(rrdPath, ipv4Addr, dsName, responseTime, pkg);\n                        } catch (RuntimeException rex) {\n                            log.debug(\"There was a problem writing the RRD:\" + rex);\n                        }\n                    }\n                    break;\n                }\n\n                BufferedReader rdr = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n\n                //\n                // Tokenize the Banner Line, and check the first\n                // line for a valid return.\n                //\n                String response = rdr.readLine();\n                responseTime = System.currentTimeMillis() - sentTime;\n\n                if (response == null)\n                    continue;\n                if (log.isDebugEnabled()) {\n                    log.debug(\"poll: banner = \" + response);\n                    log.debug(\"poll: responseTime= \" + responseTime + \"ms\");\n                }\n\n                if (response.indexOf(strBannerMatch) > -1) {\n                */\n\n\t\t\t\tNrpePacket response = NrpePacket.receivePacket(socket.getInputStream(), padding);\n                responseTime = tracker.elapsedTimeInMillis();\n\t\t\t\tif (response.getResultCode() == 0) {\n                    serviceStatus = PollStatus.SERVICE_AVAILABLE;\n                    reason = null;\n                } else {\n                    serviceStatus = PollStatus.SERVICE_UNAVAILABLE;\n\t\t\t\t\treason = \"NRPE command returned code \" + response.getResultCode() +\n\t\t\t\t\t\t\" and message: \" + response.getBuffer();\n                }\n            } catch (NoRouteToHostException e) {\n\t\t\t\treason = \"No route to host exception for address \" + ipv4Addr.getHostAddress();\n                if (log().isEnabledFor(Level.WARN)) {\n\t                e.fillInStackTrace();\n                    log().warn(\"poll: \" + reason, e);\n                }\n            } catch (InterruptedIOException e) {\n                reason = \"did not connect to host within \" + tracker;\n                log().debug(\"NrpeMonitor: did not connect to host within \" + tracker);\n            } catch (ConnectException e) {\n\t\t\t\treason = \"Connection exception for address: \" + ipv4Addr;\n                // Connection refused. Continue to retry.\n                //\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } catch (NrpeException e) {\n\t\t\t\treason = \"NrpeException while polling address: \" + ipv4Addr;\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } catch (IOException e) {\n                // Ignore\n\t\t\t\treason = \"IOException while polling address: \" + ipv4Addr;\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } finally {\n                try {\n                    // Close the socket\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException e) {\n                    if (log().isDebugEnabled()) {\n\t                    e.fillInStackTrace();\n                        log().debug(\"poll: Error closing socket.\", e);\n                    }\n                }\n            }\n        }\n\n        //\n        // return the status of the service\n        //\n        if (reason == null) {\n            return PollStatus.get(serviceStatus, responseTime);\n        } else {\n            return PollStatus.get(serviceStatus, reason);\n        }\n    }","id":63890,"modified_method":"/**\n     * Poll the specified address for service availability.\n     * \n     * During the poll an attempt is made to connect on the specified port. If\n     * the connection request is successful, the banner line generated by the\n     * interface is parsed and if the banner text indicates that we are talking\n     * to Provided that the interface's response is valid we set the service\n     * status to SERVICE_AVAILABLE and return.\n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availibility of the interface and if a transition event\n     *         should be supressed.\n     * \n     * @throws java.lang.RuntimeException\n     *             Thrown if the interface experiences errors during the poll.\n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\t\t\n\t\tString reason = null;\n\n        //\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4) {\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n        }\n\n        TimeoutTracker tracker = new TimeoutTracker(parameters, DEFAULT_RETRY, DEFAULT_TIMEOUT);\n        String command = ParameterMap.getKeyedString(parameters, \"command\", NrpePacket.HELLO_COMMAND);\n        int port = ParameterMap.getKeyedInteger(parameters, \"port\", CheckNrpe.DEFAULT_PORT);\n        int padding = ParameterMap.getKeyedInteger(parameters, \"padding\", NrpePacket.DEFAULT_PADDING);\n        boolean useSsl = ParameterMap.getKeyedBoolean(parameters, \"usessl\", DEFAULT_USE_SSL);\n\n\t\t/*\n        // Port\n        //\n        int port = ParameterMap.getKeyedInteger(parameters, \"port\", DEFAULT_PORT);\n        if (port == DEFAULT_PORT) {\n            throw new RuntimeException(\"NrpeMonitor: required parameter 'port' is not present in supplied properties.\");\n        }\n        */\n\n        // BannerMatch\n        //\n        //Commented out because it is not currently referenced in this monitor\n        //String strBannerMatch = (String) parameters.get(\"banner\");\n\n        // Get the address instance.\n        //\n        InetAddress ipv4Addr = (InetAddress) iface.getAddress();\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"poll: address = \" + ipv4Addr.getHostAddress() + \", port = \" + port + \", \" + tracker);\n        }\n\n        // Give it a whirl\n        //\n        int serviceStatus = PollStatus.SERVICE_UNAVAILABLE;\n        Double responseTime = null;\n\n        for (tracker.reset(); tracker.shouldRetry() && serviceStatus != PollStatus.SERVICE_AVAILABLE; tracker.nextAttempt()) {\n            Socket socket = null;\n            try {\n                //\n                // create a connected socket\n                //\n                tracker.startAttempt();\n\n                socket = new Socket();\n                socket.connect(new InetSocketAddress(ipv4Addr, port), tracker.getConnectionTimeout());\n                socket.setSoTimeout(tracker.getSoTimeout());\n                log().debug(\"NrpeMonitor: connected to host: \" + ipv4Addr + \" on port: \" + port);\n                \n            \treason = \"Perhaps check the value of 'usessl' for this monitor against the NRPE daemon configuration\";\n                socket = wrapSocket(socket, useSsl);\n\n                // We're connected, so upgrade status to unresponsive\n                serviceStatus = PollStatus.SERVICE_UNRESPONSIVE;\n            \treason = \"Connected successfully, but no response received\";\n\n\t\t\t\tNrpePacket p = new NrpePacket(NrpePacket.QUERY_PACKET, (short) 0,\n\t\t\t\t\t\tcommand);\n\t\t\t\tbyte[] b = p.buildPacket(padding);\n\t\t\t\tOutputStream o = socket.getOutputStream();\n\t\t\t\to.write(b);\n\n\t\t\t\t/*\n                if (strBannerMatch == null || strBannerMatch.length() == 0 || strBannerMatch.equals(\"*\")) {\n\n\t\t\t\tif (true) {\n                    serviceStatus = SERVICE_AVAILABLE;\n                    // Store response time in RRD\n                    if (responseTime >= 0 && rrdPath != null) {\n                        try {\n                            this.updateRRD(rrdPath, ipv4Addr, dsName, responseTime, pkg);\n                        } catch (RuntimeException rex) {\n                            log.debug(\"There was a problem writing the RRD:\" + rex);\n                        }\n                    }\n                    break;\n                }\n\n                BufferedReader rdr = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n\n                //\n                // Tokenize the Banner Line, and check the first\n                // line for a valid return.\n                //\n                String response = rdr.readLine();\n                responseTime = System.currentTimeMillis() - sentTime;\n\n                if (response == null)\n                    continue;\n                if (log.isDebugEnabled()) {\n                    log.debug(\"poll: banner = \" + response);\n                    log.debug(\"poll: responseTime= \" + responseTime + \"ms\");\n                }\n\n                if (response.indexOf(strBannerMatch) > -1) {\n                */\n\n\t\t\t\tNrpePacket response = NrpePacket.receivePacket(socket.getInputStream(), padding);\n                responseTime = tracker.elapsedTimeInMillis();\n\t\t\t\tif (response.getResultCode() == 0) {\n                    serviceStatus = PollStatus.SERVICE_AVAILABLE;\n                    reason = null;\n                } else {\n                    serviceStatus = PollStatus.SERVICE_UNAVAILABLE;\n\t\t\t\t\treason = \"NRPE command returned code \" + response.getResultCode() +\n\t\t\t\t\t\t\" and message: \" + response.getBuffer();\n                }\n            } catch (NoRouteToHostException e) {\n\t\t\t\treason = \"No route to host exception for address \" + ipv4Addr.getHostAddress();\n                if (log().isEnabledFor(Level.WARN)) {\n\t                e.fillInStackTrace();\n                    log().warn(\"poll: \" + reason, e);\n                }\n            } catch (InterruptedIOException e) {\n                reason = \"did not connect to host within \" + tracker;\n                log().debug(\"NrpeMonitor: did not connect to host within \" + tracker);\n            } catch (ConnectException e) {\n\t\t\t\treason = \"Connection exception for address: \" + ipv4Addr;\n                // Connection refused. Continue to retry.\n                //\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } catch (NrpeException e) {\n\t\t\t\treason = \"NrpeException while polling address: \" + ipv4Addr;\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } catch (IOException e) {\n                // Ignore\n\t\t\t\treason = \"IOException while polling address: \" + ipv4Addr;\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } finally {\n                try {\n                    // Close the socket\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException e) {\n                    if (log().isDebugEnabled()) {\n\t                    e.fillInStackTrace();\n                        log().debug(\"poll: Error closing socket.\", e);\n                    }\n                }\n            }\n        }\n\n        //\n        // return the status of the service\n        //\n        if (reason == null) {\n            return PollStatus.get(serviceStatus, responseTime);\n        } else {\n            return PollStatus.get(serviceStatus, reason);\n        }\n    }","commit_id":"103b920fcd4a2a4640cb9b563b371b22d8089f9e","url":"https://github.com/OpenNMS/opennms"},{"original_method":"protected Socket wrapSocket(Socket socket) throws IOException {\n    \tif (! m_useSsl) {\n    \t\treturn socket;\n    \t}\n    \t\n        SSLSocketFactory sslSF = null;\n        TrustManager[] tm = { new RelaxedX509TrustManager() };\n        SSLContext sslContext = null;\n        try {\n            sslContext = SSLContext.getInstance(\"SSL\");\n            sslContext.init(null, tm, new java.security.SecureRandom());\n        } catch (NoSuchAlgorithmException e) {\n            log().error(\"wrapSocket: Error wrapping socket, throwing runtime exception...\"+e);\n            throw new IllegalStateException(\"No such algorithm in SSLSocketFactory: \"+e);\n        } catch (KeyManagementException e) {\n            log().error(\"wrapSocket: Error wrapping socket, throwing runtime exception...\"+e);\n            throw new IllegalStateException(\"Key management exception in SSLSocketFactory: \"+e);\n        }\n        sslSF = sslContext.getSocketFactory();\n        Socket wrappedSocket;\n        InetAddress inetAddress = socket.getInetAddress();\n        String hostAddress = inetAddress.getHostAddress();\n        int port = socket.getPort();\n        wrappedSocket = sslSF.createSocket(socket, hostAddress, port, true);\n        SSLSocket sslSocket = (SSLSocket)wrappedSocket;\n        // Set this socket to use anonymous Diffie-Hellman ciphers. This removes the authentication\n        // benefits of SSL, but it's how NRPE rolls so we have to play along.\n        sslSocket.setEnabledCipherSuites(ADH_CIPHER_SUITES);\n        return wrappedSocket;\n    }","id":63891,"modified_method":"protected Socket wrapSocket(Socket socket, boolean useSsl) throws IOException {\n    \tif (! useSsl) {\n    \t\treturn socket;\n    \t}\n    \t\n        SSLSocketFactory sslSF = null;\n        TrustManager[] tm = { new RelaxedX509TrustManager() };\n        SSLContext sslContext = null;\n        try {\n            sslContext = SSLContext.getInstance(\"SSL\");\n            sslContext.init(null, tm, new java.security.SecureRandom());\n        } catch (NoSuchAlgorithmException e) {\n            log().error(\"wrapSocket: Error wrapping socket, throwing runtime exception...\"+e);\n            throw new IllegalStateException(\"No such algorithm in SSLSocketFactory: \"+e);\n        } catch (KeyManagementException e) {\n            log().error(\"wrapSocket: Error wrapping socket, throwing runtime exception...\"+e);\n            throw new IllegalStateException(\"Key management exception in SSLSocketFactory: \"+e);\n        }\n        sslSF = sslContext.getSocketFactory();\n        Socket wrappedSocket;\n        InetAddress inetAddress = socket.getInetAddress();\n        String hostAddress = inetAddress.getHostAddress();\n        int port = socket.getPort();\n        wrappedSocket = sslSF.createSocket(socket, hostAddress, port, true);\n        SSLSocket sslSocket = (SSLSocket)wrappedSocket;\n        // Set this socket to use anonymous Diffie-Hellman ciphers. This removes the authentication\n        // benefits of SSL, but it's how NRPE rolls so we have to play along.\n        sslSocket.setEnabledCipherSuites(ADH_CIPHER_SUITES);\n        return wrappedSocket;\n    }","commit_id":"103b920fcd4a2a4640cb9b563b371b22d8089f9e","url":"https://github.com/OpenNMS/opennms"},{"original_method":"protected Socket wrapSocket(Socket socket) throws IOException {\n    \tif (! m_useSsl) {\n    \t\treturn socket;\n    \t}\n    \t\n        SSLSocketFactory sslSF = null;\n        TrustManager[] tm = { new RelaxedX509TrustManager() };\n        SSLContext sslContext = null;\n        try {\n            sslContext = SSLContext.getInstance(\"SSL\");\n            sslContext.init(null, tm, new java.security.SecureRandom());\n        } catch (NoSuchAlgorithmException e) {\n            log().error(\"wrapSocket: Error wrapping socket, throwing runtime exception...\"+e);\n            throw new IllegalStateException(\"No such algorithm in SSLSocketFactory: \"+e);\n        } catch (KeyManagementException e) {\n            log().error(\"wrapSocket: Error wrapping socket, throwing runtime exception...\"+e);\n            throw new IllegalStateException(\"Key management exception in SSLSocketFactory: \"+e);\n        }\n        sslSF = sslContext.getSocketFactory();\n        Socket wrappedSocket;\n        InetAddress inetAddress = socket.getInetAddress();\n        String hostAddress = inetAddress.getHostAddress();\n        int port = socket.getPort();\n        wrappedSocket = sslSF.createSocket(socket, hostAddress, port, true);\n        SSLSocket sslSocket = (SSLSocket)wrappedSocket;\n        // Set this socket to use anonymous Diffie-Hellman ciphers. This removes the authentication\n        // benefits of SSL, but it's how NRPE rolls so we have to play along.\n        sslSocket.setEnabledCipherSuites(ADH_CIPHER_SUITES);\n        return wrappedSocket;\n    }","id":63892,"modified_method":"protected Socket wrapSocket(Socket socket, boolean useSsl) throws IOException {\n    \tif (! useSsl) {\n    \t\treturn socket;\n    \t}\n    \t\n        SSLSocketFactory sslSF = null;\n        TrustManager[] tm = { new RelaxedX509TrustManager() };\n        SSLContext sslContext = null;\n        try {\n            sslContext = SSLContext.getInstance(\"SSL\");\n            sslContext.init(null, tm, new java.security.SecureRandom());\n        } catch (NoSuchAlgorithmException e) {\n            log().error(\"wrapSocket: Error wrapping socket, throwing runtime exception...\"+e);\n            throw new IllegalStateException(\"No such algorithm in SSLSocketFactory: \"+e);\n        } catch (KeyManagementException e) {\n            log().error(\"wrapSocket: Error wrapping socket, throwing runtime exception...\"+e);\n            throw new IllegalStateException(\"Key management exception in SSLSocketFactory: \"+e);\n        }\n        sslSF = sslContext.getSocketFactory();\n        Socket wrappedSocket;\n        InetAddress inetAddress = socket.getInetAddress();\n        String hostAddress = inetAddress.getHostAddress();\n        int port = socket.getPort();\n        wrappedSocket = sslSF.createSocket(socket, hostAddress, port, true);\n        SSLSocket sslSocket = (SSLSocket)wrappedSocket;\n        // Set this socket to use anonymous Diffie-Hellman ciphers. This removes the authentication\n        // benefits of SSL, but it's how NRPE rolls so we have to play along.\n        sslSocket.setEnabledCipherSuites(ADH_CIPHER_SUITES);\n        return wrappedSocket;\n    }","commit_id":"c5f925844152eea41e43e71dad36a24877532a91","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Poll the specified address for service availability.\n     * \n     * During the poll an attempt is made to connect on the specified port. If\n     * the connection request is successful, the banner line generated by the\n     * interface is parsed and if the banner text indicates that we are talking\n     * to Provided that the interface's response is valid we set the service\n     * status to SERVICE_AVAILABLE and return.\n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availibility of the interface and if a transition event\n     *         should be supressed.\n     * \n     * @throws java.lang.RuntimeException\n     *             Thrown if the interface experiences errors during the poll.\n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\t\t\n\t\tString reason = null;\n\n        //\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4) {\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n        }\n\n        TimeoutTracker tracker = new TimeoutTracker(parameters, DEFAULT_RETRY, DEFAULT_TIMEOUT);\n        String command = ParameterMap.getKeyedString(parameters, \"command\", NrpePacket.HELLO_COMMAND);\n        int port = ParameterMap.getKeyedInteger(parameters, \"port\", CheckNrpe.DEFAULT_PORT);\n        int padding = ParameterMap.getKeyedInteger(parameters, \"padding\", NrpePacket.DEFAULT_PADDING);\n        m_useSsl = ParameterMap.getKeyedBoolean(parameters, \"usessl\", false);\n\n\t\t/*\n        // Port\n        //\n        int port = ParameterMap.getKeyedInteger(parameters, \"port\", DEFAULT_PORT);\n        if (port == DEFAULT_PORT) {\n            throw new RuntimeException(\"NrpeMonitor: required parameter 'port' is not present in supplied properties.\");\n        }\n        */\n\n        // BannerMatch\n        //\n        //Commented out because it is not currently referenced in this monitor\n        //String strBannerMatch = (String) parameters.get(\"banner\");\n\n        // Get the address instance.\n        //\n        InetAddress ipv4Addr = (InetAddress) iface.getAddress();\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"poll: address = \" + ipv4Addr.getHostAddress() + \", port = \" + port + \", \" + tracker);\n        }\n\n        // Give it a whirl\n        //\n        int serviceStatus = PollStatus.SERVICE_UNAVAILABLE;\n        Double responseTime = null;\n\n        for (tracker.reset(); tracker.shouldRetry() && serviceStatus != PollStatus.SERVICE_AVAILABLE; tracker.nextAttempt()) {\n            Socket socket = null;\n            try {\n                //\n                // create a connected socket\n                //\n                tracker.startAttempt();\n\n                socket = new Socket();\n                socket.connect(new InetSocketAddress(ipv4Addr, port), tracker.getConnectionTimeout());\n                socket.setSoTimeout(tracker.getSoTimeout());\n                log().debug(\"NrpeMonitor: connected to host: \" + ipv4Addr + \" on port: \" + port);\n                \n            \treason = \"Perhaps check the value of 'usessl' for this monitor against the NRPE daemon configuration\";\n                socket = wrapSocket(socket);\n\n                // We're connected, so upgrade status to unresponsive\n                serviceStatus = PollStatus.SERVICE_UNRESPONSIVE;\n            \treason = \"Connected successfully, but no response received\";\n\n\t\t\t\tNrpePacket p = new NrpePacket(NrpePacket.QUERY_PACKET, (short) 0,\n\t\t\t\t\t\tcommand);\n\t\t\t\tbyte[] b = p.buildPacket(padding);\n\t\t\t\tOutputStream o = socket.getOutputStream();\n\t\t\t\to.write(b);\n\n\t\t\t\t/*\n                if (strBannerMatch == null || strBannerMatch.length() == 0 || strBannerMatch.equals(\"*\")) {\n\n\t\t\t\tif (true) {\n                    serviceStatus = SERVICE_AVAILABLE;\n                    // Store response time in RRD\n                    if (responseTime >= 0 && rrdPath != null) {\n                        try {\n                            this.updateRRD(rrdPath, ipv4Addr, dsName, responseTime, pkg);\n                        } catch (RuntimeException rex) {\n                            log.debug(\"There was a problem writing the RRD:\" + rex);\n                        }\n                    }\n                    break;\n                }\n\n                BufferedReader rdr = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n\n                //\n                // Tokenize the Banner Line, and check the first\n                // line for a valid return.\n                //\n                String response = rdr.readLine();\n                responseTime = System.currentTimeMillis() - sentTime;\n\n                if (response == null)\n                    continue;\n                if (log.isDebugEnabled()) {\n                    log.debug(\"poll: banner = \" + response);\n                    log.debug(\"poll: responseTime= \" + responseTime + \"ms\");\n                }\n\n                if (response.indexOf(strBannerMatch) > -1) {\n                */\n\n\t\t\t\tNrpePacket response = NrpePacket.receivePacket(socket.getInputStream(), padding);\n                responseTime = tracker.elapsedTimeInMillis();\n\t\t\t\tif (response.getResultCode() == 0) {\n                    serviceStatus = PollStatus.SERVICE_AVAILABLE;\n                    reason = null;\n                } else {\n                    serviceStatus = PollStatus.SERVICE_UNAVAILABLE;\n\t\t\t\t\treason = \"NRPE command returned code \" + response.getResultCode() +\n\t\t\t\t\t\t\" and message: \" + response.getBuffer();\n                }\n            } catch (NoRouteToHostException e) {\n\t\t\t\treason = \"No route to host exception for address \" + ipv4Addr.getHostAddress();\n                if (log().isEnabledFor(Level.WARN)) {\n\t                e.fillInStackTrace();\n                    log().warn(\"poll: \" + reason, e);\n                }\n            } catch (InterruptedIOException e) {\n                reason = \"did not connect to host within \" + tracker;\n                log().debug(\"NrpeMonitor: did not connect to host within \" + tracker);\n            } catch (ConnectException e) {\n\t\t\t\treason = \"Connection exception for address: \" + ipv4Addr;\n                // Connection refused. Continue to retry.\n                //\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } catch (NrpeException e) {\n\t\t\t\treason = \"NrpeException while polling address: \" + ipv4Addr;\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } catch (IOException e) {\n                // Ignore\n\t\t\t\treason = \"IOException while polling address: \" + ipv4Addr;\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } finally {\n                try {\n                    // Close the socket\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException e) {\n                    if (log().isDebugEnabled()) {\n\t                    e.fillInStackTrace();\n                        log().debug(\"poll: Error closing socket.\", e);\n                    }\n                }\n            }\n        }\n\n        //\n        // return the status of the service\n        //\n        if (reason == null) {\n            return PollStatus.get(serviceStatus, responseTime);\n        } else {\n            return PollStatus.get(serviceStatus, reason);\n        }\n    }","id":63893,"modified_method":"/**\n     * Poll the specified address for service availability.\n     * \n     * During the poll an attempt is made to connect on the specified port. If\n     * the connection request is successful, the banner line generated by the\n     * interface is parsed and if the banner text indicates that we are talking\n     * to Provided that the interface's response is valid we set the service\n     * status to SERVICE_AVAILABLE and return.\n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availibility of the interface and if a transition event\n     *         should be supressed.\n     * \n     * @throws java.lang.RuntimeException\n     *             Thrown if the interface experiences errors during the poll.\n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\t\t\n\t\tString reason = null;\n\n        //\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4) {\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n        }\n\n        TimeoutTracker tracker = new TimeoutTracker(parameters, DEFAULT_RETRY, DEFAULT_TIMEOUT);\n        String command = ParameterMap.getKeyedString(parameters, \"command\", NrpePacket.HELLO_COMMAND);\n        int port = ParameterMap.getKeyedInteger(parameters, \"port\", CheckNrpe.DEFAULT_PORT);\n        int padding = ParameterMap.getKeyedInteger(parameters, \"padding\", NrpePacket.DEFAULT_PADDING);\n        boolean useSsl = ParameterMap.getKeyedBoolean(parameters, \"usessl\", DEFAULT_USE_SSL);\n\n\t\t/*\n        // Port\n        //\n        int port = ParameterMap.getKeyedInteger(parameters, \"port\", DEFAULT_PORT);\n        if (port == DEFAULT_PORT) {\n            throw new RuntimeException(\"NrpeMonitor: required parameter 'port' is not present in supplied properties.\");\n        }\n        */\n\n        // BannerMatch\n        //\n        //Commented out because it is not currently referenced in this monitor\n        //String strBannerMatch = (String) parameters.get(\"banner\");\n\n        // Get the address instance.\n        //\n        InetAddress ipv4Addr = (InetAddress) iface.getAddress();\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"poll: address = \" + ipv4Addr.getHostAddress() + \", port = \" + port + \", \" + tracker);\n        }\n\n        // Give it a whirl\n        //\n        int serviceStatus = PollStatus.SERVICE_UNAVAILABLE;\n        Double responseTime = null;\n\n        for (tracker.reset(); tracker.shouldRetry() && serviceStatus != PollStatus.SERVICE_AVAILABLE; tracker.nextAttempt()) {\n            Socket socket = null;\n            try {\n                //\n                // create a connected socket\n                //\n                tracker.startAttempt();\n\n                socket = new Socket();\n                socket.connect(new InetSocketAddress(ipv4Addr, port), tracker.getConnectionTimeout());\n                socket.setSoTimeout(tracker.getSoTimeout());\n                log().debug(\"NrpeMonitor: connected to host: \" + ipv4Addr + \" on port: \" + port);\n                \n            \treason = \"Perhaps check the value of 'usessl' for this monitor against the NRPE daemon configuration\";\n                socket = wrapSocket(socket, useSsl);\n\n                // We're connected, so upgrade status to unresponsive\n                serviceStatus = PollStatus.SERVICE_UNRESPONSIVE;\n            \treason = \"Connected successfully, but no response received\";\n\n\t\t\t\tNrpePacket p = new NrpePacket(NrpePacket.QUERY_PACKET, (short) 0,\n\t\t\t\t\t\tcommand);\n\t\t\t\tbyte[] b = p.buildPacket(padding);\n\t\t\t\tOutputStream o = socket.getOutputStream();\n\t\t\t\to.write(b);\n\n\t\t\t\t/*\n                if (strBannerMatch == null || strBannerMatch.length() == 0 || strBannerMatch.equals(\"*\")) {\n\n\t\t\t\tif (true) {\n                    serviceStatus = SERVICE_AVAILABLE;\n                    // Store response time in RRD\n                    if (responseTime >= 0 && rrdPath != null) {\n                        try {\n                            this.updateRRD(rrdPath, ipv4Addr, dsName, responseTime, pkg);\n                        } catch (RuntimeException rex) {\n                            log.debug(\"There was a problem writing the RRD:\" + rex);\n                        }\n                    }\n                    break;\n                }\n\n                BufferedReader rdr = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n\n                //\n                // Tokenize the Banner Line, and check the first\n                // line for a valid return.\n                //\n                String response = rdr.readLine();\n                responseTime = System.currentTimeMillis() - sentTime;\n\n                if (response == null)\n                    continue;\n                if (log.isDebugEnabled()) {\n                    log.debug(\"poll: banner = \" + response);\n                    log.debug(\"poll: responseTime= \" + responseTime + \"ms\");\n                }\n\n                if (response.indexOf(strBannerMatch) > -1) {\n                */\n\n\t\t\t\tNrpePacket response = NrpePacket.receivePacket(socket.getInputStream(), padding);\n                responseTime = tracker.elapsedTimeInMillis();\n\t\t\t\tif (response.getResultCode() == 0) {\n                    serviceStatus = PollStatus.SERVICE_AVAILABLE;\n                    reason = null;\n                } else {\n                    serviceStatus = PollStatus.SERVICE_UNAVAILABLE;\n\t\t\t\t\treason = \"NRPE command returned code \" + response.getResultCode() +\n\t\t\t\t\t\t\" and message: \" + response.getBuffer();\n                }\n            } catch (NoRouteToHostException e) {\n\t\t\t\treason = \"No route to host exception for address \" + ipv4Addr.getHostAddress();\n                if (log().isEnabledFor(Level.WARN)) {\n\t                e.fillInStackTrace();\n                    log().warn(\"poll: \" + reason, e);\n                }\n            } catch (InterruptedIOException e) {\n                reason = \"did not connect to host within \" + tracker;\n                log().debug(\"NrpeMonitor: did not connect to host within \" + tracker);\n            } catch (ConnectException e) {\n\t\t\t\treason = \"Connection exception for address: \" + ipv4Addr;\n                // Connection refused. Continue to retry.\n                //\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } catch (NrpeException e) {\n\t\t\t\treason = \"NrpeException while polling address: \" + ipv4Addr;\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } catch (IOException e) {\n                // Ignore\n\t\t\t\treason = \"IOException while polling address: \" + ipv4Addr;\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } finally {\n                try {\n                    // Close the socket\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException e) {\n                    if (log().isDebugEnabled()) {\n\t                    e.fillInStackTrace();\n                        log().debug(\"poll: Error closing socket.\", e);\n                    }\n                }\n            }\n        }\n\n        //\n        // return the status of the service\n        //\n        if (reason == null) {\n            return PollStatus.get(serviceStatus, responseTime);\n        } else {\n            return PollStatus.get(serviceStatus, reason);\n        }\n    }","commit_id":"c5f925844152eea41e43e71dad36a24877532a91","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Poll the specified address for service availability.\n     * \n     * During the poll an attempt is made to connect on the specified port. If\n     * the connection request is successful, the banner line generated by the\n     * interface is parsed and if the banner text indicates that we are talking\n     * to Provided that the interface's response is valid we set the service\n     * status to SERVICE_AVAILABLE and return.\n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availibility of the interface and if a transition event\n     *         should be supressed.\n     * \n     * @throws java.lang.RuntimeException\n     *             Thrown if the interface experiences errors during the poll.\n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\t\t\n\t\tString reason = null;\n\n        //\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4) {\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n        }\n\n        TimeoutTracker tracker = new TimeoutTracker(parameters, DEFAULT_RETRY, DEFAULT_TIMEOUT);\n        String command = ParameterMap.getKeyedString(parameters, \"command\", NrpePacket.HELLO_COMMAND);\n        int port = ParameterMap.getKeyedInteger(parameters, \"port\", CheckNrpe.DEFAULT_PORT);\n        int padding = ParameterMap.getKeyedInteger(parameters, \"padding\", NrpePacket.DEFAULT_PADDING);\n        m_useSsl = ParameterMap.getKeyedBoolean(parameters, \"usessl\", false);\n\n\t\t/*\n        // Port\n        //\n        int port = ParameterMap.getKeyedInteger(parameters, \"port\", DEFAULT_PORT);\n        if (port == DEFAULT_PORT) {\n            throw new RuntimeException(\"NrpeMonitor: required parameter 'port' is not present in supplied properties.\");\n        }\n        */\n\n        // BannerMatch\n        //\n        //Commented out because it is not currently referenced in this monitor\n        //String strBannerMatch = (String) parameters.get(\"banner\");\n\n        // Get the address instance.\n        //\n        InetAddress ipv4Addr = (InetAddress) iface.getAddress();\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"poll: address = \" + ipv4Addr.getHostAddress() + \", port = \" + port + \", \" + tracker);\n        }\n\n        // Give it a whirl\n        //\n        int serviceStatus = PollStatus.SERVICE_UNAVAILABLE;\n        Double responseTime = null;\n\n        for (tracker.reset(); tracker.shouldRetry() && serviceStatus != PollStatus.SERVICE_AVAILABLE; tracker.nextAttempt()) {\n            Socket socket = null;\n            try {\n                //\n                // create a connected socket\n                //\n                tracker.startAttempt();\n\n                socket = new Socket();\n                socket.connect(new InetSocketAddress(ipv4Addr, port), tracker.getConnectionTimeout());\n                socket.setSoTimeout(tracker.getSoTimeout());\n                log().debug(\"NrpeMonitor: connected to host: \" + ipv4Addr + \" on port: \" + port);\n                \n            \treason = \"Perhaps check the value of 'usessl' for this monitor against the NRPE daemon configuration\";\n                socket = wrapSocket(socket);\n\n                // We're connected, so upgrade status to unresponsive\n                serviceStatus = PollStatus.SERVICE_UNRESPONSIVE;\n            \treason = \"Connected successfully, but no response received\";\n\n\t\t\t\tNrpePacket p = new NrpePacket(NrpePacket.QUERY_PACKET, (short) 0,\n\t\t\t\t\t\tcommand);\n\t\t\t\tbyte[] b = p.buildPacket(padding);\n\t\t\t\tOutputStream o = socket.getOutputStream();\n\t\t\t\to.write(b);\n\n\t\t\t\t/*\n                if (strBannerMatch == null || strBannerMatch.length() == 0 || strBannerMatch.equals(\"*\")) {\n\n\t\t\t\tif (true) {\n                    serviceStatus = SERVICE_AVAILABLE;\n                    // Store response time in RRD\n                    if (responseTime >= 0 && rrdPath != null) {\n                        try {\n                            this.updateRRD(rrdPath, ipv4Addr, dsName, responseTime, pkg);\n                        } catch (RuntimeException rex) {\n                            log.debug(\"There was a problem writing the RRD:\" + rex);\n                        }\n                    }\n                    break;\n                }\n\n                BufferedReader rdr = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n\n                //\n                // Tokenize the Banner Line, and check the first\n                // line for a valid return.\n                //\n                String response = rdr.readLine();\n                responseTime = System.currentTimeMillis() - sentTime;\n\n                if (response == null)\n                    continue;\n                if (log.isDebugEnabled()) {\n                    log.debug(\"poll: banner = \" + response);\n                    log.debug(\"poll: responseTime= \" + responseTime + \"ms\");\n                }\n\n                if (response.indexOf(strBannerMatch) > -1) {\n                */\n\n\t\t\t\tNrpePacket response = NrpePacket.receivePacket(socket.getInputStream(), padding);\n                responseTime = tracker.elapsedTimeInMillis();\n\t\t\t\tif (response.getResultCode() == 0) {\n                    serviceStatus = PollStatus.SERVICE_AVAILABLE;\n                    reason = null;\n                } else {\n                    serviceStatus = PollStatus.SERVICE_UNAVAILABLE;\n\t\t\t\t\treason = \"NRPE command returned code \" + response.getResultCode() +\n\t\t\t\t\t\t\" and message: \" + response.getBuffer();\n                }\n            } catch (NoRouteToHostException e) {\n\t\t\t\treason = \"No route to host exception for address \" + ipv4Addr.getHostAddress();\n                if (log().isEnabledFor(Level.WARN)) {\n\t                e.fillInStackTrace();\n                    log().warn(\"poll: \" + reason, e);\n                }\n            } catch (InterruptedIOException e) {\n                reason = \"did not connect to host within \" + tracker;\n                log().debug(\"NrpeMonitor: did not connect to host within \" + tracker);\n            } catch (ConnectException e) {\n\t\t\t\treason = \"Connection exception for address: \" + ipv4Addr;\n                // Connection refused. Continue to retry.\n                //\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } catch (NrpeException e) {\n\t\t\t\treason = \"NrpeException while polling address: \" + ipv4Addr;\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } catch (IOException e) {\n                // Ignore\n\t\t\t\treason = \"IOException while polling address: \" + ipv4Addr;\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } finally {\n                try {\n                    // Close the socket\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException e) {\n                    if (log().isDebugEnabled()) {\n\t                    e.fillInStackTrace();\n                        log().debug(\"poll: Error closing socket.\", e);\n                    }\n                }\n            }\n        }\n\n        //\n        // return the status of the service\n        //\n        if (reason == null) {\n            return PollStatus.get(serviceStatus, responseTime);\n        } else {\n            return PollStatus.get(serviceStatus, reason);\n        }\n    }","id":63894,"modified_method":"/**\n     * Poll the specified address for service availability.\n     * \n     * During the poll an attempt is made to connect on the specified port. If\n     * the connection request is successful, the banner line generated by the\n     * interface is parsed and if the banner text indicates that we are talking\n     * to Provided that the interface's response is valid we set the service\n     * status to SERVICE_AVAILABLE and return.\n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availibility of the interface and if a transition event\n     *         should be supressed.\n     * \n     * @throws java.lang.RuntimeException\n     *             Thrown if the interface experiences errors during the poll.\n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\t\t\n\t\tString reason = null;\n\n        //\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4) {\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n        }\n\n        TimeoutTracker tracker = new TimeoutTracker(parameters, DEFAULT_RETRY, DEFAULT_TIMEOUT);\n        String command = ParameterMap.getKeyedString(parameters, \"command\", NrpePacket.HELLO_COMMAND);\n        int port = ParameterMap.getKeyedInteger(parameters, \"port\", CheckNrpe.DEFAULT_PORT);\n        int padding = ParameterMap.getKeyedInteger(parameters, \"padding\", NrpePacket.DEFAULT_PADDING);\n        boolean useSsl = ParameterMap.getKeyedBoolean(parameters, \"usessl\", DEFAULT_USE_SSL);\n\n\t\t/*\n        // Port\n        //\n        int port = ParameterMap.getKeyedInteger(parameters, \"port\", DEFAULT_PORT);\n        if (port == DEFAULT_PORT) {\n            throw new RuntimeException(\"NrpeMonitor: required parameter 'port' is not present in supplied properties.\");\n        }\n        */\n\n        // BannerMatch\n        //\n        //Commented out because it is not currently referenced in this monitor\n        //String strBannerMatch = (String) parameters.get(\"banner\");\n\n        // Get the address instance.\n        //\n        InetAddress ipv4Addr = (InetAddress) iface.getAddress();\n\n        if (log().isDebugEnabled()) {\n            log().debug(\"poll: address = \" + ipv4Addr.getHostAddress() + \", port = \" + port + \", \" + tracker);\n        }\n\n        // Give it a whirl\n        //\n        int serviceStatus = PollStatus.SERVICE_UNAVAILABLE;\n        Double responseTime = null;\n\n        for (tracker.reset(); tracker.shouldRetry() && serviceStatus != PollStatus.SERVICE_AVAILABLE; tracker.nextAttempt()) {\n            Socket socket = null;\n            try {\n                //\n                // create a connected socket\n                //\n                tracker.startAttempt();\n\n                socket = new Socket();\n                socket.connect(new InetSocketAddress(ipv4Addr, port), tracker.getConnectionTimeout());\n                socket.setSoTimeout(tracker.getSoTimeout());\n                log().debug(\"NrpeMonitor: connected to host: \" + ipv4Addr + \" on port: \" + port);\n                \n            \treason = \"Perhaps check the value of 'usessl' for this monitor against the NRPE daemon configuration\";\n                socket = wrapSocket(socket, useSsl);\n\n                // We're connected, so upgrade status to unresponsive\n                serviceStatus = PollStatus.SERVICE_UNRESPONSIVE;\n            \treason = \"Connected successfully, but no response received\";\n\n\t\t\t\tNrpePacket p = new NrpePacket(NrpePacket.QUERY_PACKET, (short) 0,\n\t\t\t\t\t\tcommand);\n\t\t\t\tbyte[] b = p.buildPacket(padding);\n\t\t\t\tOutputStream o = socket.getOutputStream();\n\t\t\t\to.write(b);\n\n\t\t\t\t/*\n                if (strBannerMatch == null || strBannerMatch.length() == 0 || strBannerMatch.equals(\"*\")) {\n\n\t\t\t\tif (true) {\n                    serviceStatus = SERVICE_AVAILABLE;\n                    // Store response time in RRD\n                    if (responseTime >= 0 && rrdPath != null) {\n                        try {\n                            this.updateRRD(rrdPath, ipv4Addr, dsName, responseTime, pkg);\n                        } catch (RuntimeException rex) {\n                            log.debug(\"There was a problem writing the RRD:\" + rex);\n                        }\n                    }\n                    break;\n                }\n\n                BufferedReader rdr = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n\n                //\n                // Tokenize the Banner Line, and check the first\n                // line for a valid return.\n                //\n                String response = rdr.readLine();\n                responseTime = System.currentTimeMillis() - sentTime;\n\n                if (response == null)\n                    continue;\n                if (log.isDebugEnabled()) {\n                    log.debug(\"poll: banner = \" + response);\n                    log.debug(\"poll: responseTime= \" + responseTime + \"ms\");\n                }\n\n                if (response.indexOf(strBannerMatch) > -1) {\n                */\n\n\t\t\t\tNrpePacket response = NrpePacket.receivePacket(socket.getInputStream(), padding);\n                responseTime = tracker.elapsedTimeInMillis();\n\t\t\t\tif (response.getResultCode() == 0) {\n                    serviceStatus = PollStatus.SERVICE_AVAILABLE;\n                    reason = null;\n                } else {\n                    serviceStatus = PollStatus.SERVICE_UNAVAILABLE;\n\t\t\t\t\treason = \"NRPE command returned code \" + response.getResultCode() +\n\t\t\t\t\t\t\" and message: \" + response.getBuffer();\n                }\n            } catch (NoRouteToHostException e) {\n\t\t\t\treason = \"No route to host exception for address \" + ipv4Addr.getHostAddress();\n                if (log().isEnabledFor(Level.WARN)) {\n\t                e.fillInStackTrace();\n                    log().warn(\"poll: \" + reason, e);\n                }\n            } catch (InterruptedIOException e) {\n                reason = \"did not connect to host within \" + tracker;\n                log().debug(\"NrpeMonitor: did not connect to host within \" + tracker);\n            } catch (ConnectException e) {\n\t\t\t\treason = \"Connection exception for address: \" + ipv4Addr;\n                // Connection refused. Continue to retry.\n                //\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } catch (NrpeException e) {\n\t\t\t\treason = \"NrpeException while polling address: \" + ipv4Addr;\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } catch (IOException e) {\n                // Ignore\n\t\t\t\treason = \"IOException while polling address: \" + ipv4Addr;\n                if (log().isDebugEnabled()) {\n\t                e.fillInStackTrace();\n                    log().debug(\"poll: \" + reason, e);\n                }\n            } finally {\n                try {\n                    // Close the socket\n                    if (socket != null) {\n                        socket.close();\n                    }\n                } catch (IOException e) {\n                    if (log().isDebugEnabled()) {\n\t                    e.fillInStackTrace();\n                        log().debug(\"poll: Error closing socket.\", e);\n                    }\n                }\n            }\n        }\n\n        //\n        // return the status of the service\n        //\n        if (reason == null) {\n            return PollStatus.get(serviceStatus, responseTime);\n        } else {\n            return PollStatus.get(serviceStatus, reason);\n        }\n    }","commit_id":"0fbecb1b3656d4c27a41872844804065b2237b5a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"protected Socket wrapSocket(Socket socket) throws IOException {\n    \tif (! m_useSsl) {\n    \t\treturn socket;\n    \t}\n    \t\n        SSLSocketFactory sslSF = null;\n        TrustManager[] tm = { new RelaxedX509TrustManager() };\n        SSLContext sslContext = null;\n        try {\n            sslContext = SSLContext.getInstance(\"SSL\");\n            sslContext.init(null, tm, new java.security.SecureRandom());\n        } catch (NoSuchAlgorithmException e) {\n            log().error(\"wrapSocket: Error wrapping socket, throwing runtime exception...\"+e);\n            throw new IllegalStateException(\"No such algorithm in SSLSocketFactory: \"+e);\n        } catch (KeyManagementException e) {\n            log().error(\"wrapSocket: Error wrapping socket, throwing runtime exception...\"+e);\n            throw new IllegalStateException(\"Key management exception in SSLSocketFactory: \"+e);\n        }\n        sslSF = sslContext.getSocketFactory();\n        Socket wrappedSocket;\n        InetAddress inetAddress = socket.getInetAddress();\n        String hostAddress = inetAddress.getHostAddress();\n        int port = socket.getPort();\n        wrappedSocket = sslSF.createSocket(socket, hostAddress, port, true);\n        SSLSocket sslSocket = (SSLSocket)wrappedSocket;\n        // Set this socket to use anonymous Diffie-Hellman ciphers. This removes the authentication\n        // benefits of SSL, but it's how NRPE rolls so we have to play along.\n        sslSocket.setEnabledCipherSuites(ADH_CIPHER_SUITES);\n        return wrappedSocket;\n    }","id":63895,"modified_method":"protected Socket wrapSocket(Socket socket, boolean useSsl) throws IOException {\n    \tif (! useSsl) {\n    \t\treturn socket;\n    \t}\n    \t\n        SSLSocketFactory sslSF = null;\n        TrustManager[] tm = { new RelaxedX509TrustManager() };\n        SSLContext sslContext = null;\n        try {\n            sslContext = SSLContext.getInstance(\"SSL\");\n            sslContext.init(null, tm, new java.security.SecureRandom());\n        } catch (NoSuchAlgorithmException e) {\n            log().error(\"wrapSocket: Error wrapping socket, throwing runtime exception...\"+e);\n            throw new IllegalStateException(\"No such algorithm in SSLSocketFactory: \"+e);\n        } catch (KeyManagementException e) {\n            log().error(\"wrapSocket: Error wrapping socket, throwing runtime exception...\"+e);\n            throw new IllegalStateException(\"Key management exception in SSLSocketFactory: \"+e);\n        }\n        sslSF = sslContext.getSocketFactory();\n        Socket wrappedSocket;\n        InetAddress inetAddress = socket.getInetAddress();\n        String hostAddress = inetAddress.getHostAddress();\n        int port = socket.getPort();\n        wrappedSocket = sslSF.createSocket(socket, hostAddress, port, true);\n        SSLSocket sslSocket = (SSLSocket)wrappedSocket;\n        // Set this socket to use anonymous Diffie-Hellman ciphers. This removes the authentication\n        // benefits of SSL, but it's how NRPE rolls so we have to play along.\n        sslSocket.setEnabledCipherSuites(ADH_CIPHER_SUITES);\n        return wrappedSocket;\n    }","commit_id":"0fbecb1b3656d4c27a41872844804065b2237b5a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static void main(String[] args) throws Exception {\n        Settings settings = settingsBuilder()\n                .put(\"index.engine.robin.refreshInterval\", \"-1\")\n                .put(\"gateway.type\", \"local\")\n                .put(SETTING_NUMBER_OF_SHARDS, 1)\n                .put(SETTING_NUMBER_OF_REPLICAS, 0)\n                .build();\n\n        Node node1 = nodeBuilder().settings(settingsBuilder().put(settings).put(\"name\", \"node1\")).node();\n        Client client = node1.client();\n\n        long COUNT = SizeValue.parseSizeValue(\"1m\").singles();\n        int CHILD_COUNT = 5;\n        int BATCH = 100;\n        int QUERY_WARMUP = 20;\n        int QUERY_COUNT = 50;\n        String indexName = \"test\";\n\n        Thread.sleep(10000);\n        try {\n            client.admin().indices().create(createIndexRequest(indexName)).actionGet();\n            client.admin().indices().preparePutMapping(indexName).setType(\"child\").setSource(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                    .startObject(\"_parent\").field(\"type\", \"parent\").endObject()\n                    .endObject().endObject()).execute().actionGet();\n            Thread.sleep(5000);\n\n            StopWatch stopWatch = new StopWatch().start();\n\n            System.out.println(\"--> Indexing [\" + COUNT + \"] parent document and [\" + (COUNT * CHILD_COUNT) + \" child documents\");\n            long ITERS = COUNT / BATCH;\n            long i = 1;\n            int counter = 0;\n            for (; i <= ITERS; i++) {\n                BulkRequestBuilder request = client.prepareBulk();\n                for (int j = 0; j < BATCH; j++) {\n                    counter++;\n                    request.add(Requests.indexRequest(indexName).type(\"parent\").id(Integer.toString(counter))\n                            .source(parentSource(Integer.toString(counter), \"test\" + counter)));\n                    for (int k = 0; k < CHILD_COUNT; k++) {\n                        request.add(Requests.indexRequest(indexName).type(\"child\").id(Integer.toString(counter) + \"_\" + k)\n                                .parent(Integer.toString(counter))\n                                .source(childSource(Integer.toString(counter), \"tag\" + k)));\n                    }\n                }\n                BulkResponse response = request.execute().actionGet();\n                if (response.hasFailures()) {\n                    System.err.println(\"--> failures...\");\n                }\n                if (((i * BATCH) % 10000) == 0) {\n                    System.out.println(\"--> Indexed \" + (i * BATCH) * (1 + CHILD_COUNT) + \" took \" + stopWatch.stop().lastTaskTime());\n                    stopWatch.start();\n                }\n            }\n            System.out.println(\"--> Indexing took \" + stopWatch.totalTime() + \", TPS \" + (((double) (COUNT * (1 + CHILD_COUNT))) / stopWatch.totalTime().secondsFrac()));\n        } catch (Exception e) {\n            System.out.println(\"--> Index already exists, ignoring indexing phase, waiting for green\");\n            ClusterHealthResponse clusterHealthResponse = client.admin().cluster().prepareHealth(indexName).setWaitForGreenStatus().setTimeout(\"10m\").execute().actionGet();\n            if (clusterHealthResponse.timedOut()) {\n                System.err.println(\"--> Timed out waiting for cluster health\");\n            }\n        }\n        client.admin().indices().prepareRefresh().execute().actionGet();\n        System.out.println(\"--> Number of docs in index: \" + client.prepareCount().setQuery(matchAllQuery()).execute().actionGet().count());\n\n        System.out.println(\"--> Running just child query\");\n        // run just the child query, warm up first\n        for (int j = 0; j < QUERY_WARMUP; j++) {\n            SearchResponse searchResponse = client.prepareSearch().setQuery(termQuery(\"child.tag\", \"tag1\")).execute().actionGet();\n            if (j == 0) {\n                System.out.println(\"--> Warmup took: \" + searchResponse.took());\n            }\n            if (searchResponse.hits().totalHits() != COUNT) {\n                System.err.println(\"--> mismatch on hits\");\n            }\n        }\n\n        long totalQueryTime = 0;\n        for (int j = 0; j < QUERY_COUNT; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(termQuery(\"child.tag\", \"tag1\")).execute().actionGet();\n            if (searchResponse.hits().totalHits() != COUNT) {\n                System.err.println(\"--> mismatch on hits\");\n            }\n            totalQueryTime += searchResponse.tookInMillis();\n        }\n        System.out.println(\"--> Just Child Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n\n        NodesStatsResponse statsResponse = client.admin().cluster().prepareNodesStats()\n                .setJvm(true).execute().actionGet();\n        System.out.println(\"--> Committed heap size: \" + statsResponse.nodes()[0].getJvm().getMem().getHeapCommitted());\n        System.out.println(\"--> Used heap size: \" + statsResponse.nodes()[0].getJvm().getMem().getHeapUsed());\n\n        String[] executionTypes = new String[]{\"uid\"/*, \"bitset\"*/};// either uid (faster, in general a bit more memory) or bitset (slower, but in general a bit less memory)\n        for (String executionType : executionTypes) {\n            System.out.println(\"--> Running has_child filter with execution type \" + executionType);\n            // run parent child constant query\n            for (int j = 0; j < QUERY_WARMUP; j++) {\n                SearchResponse searchResponse = client.prepareSearch(indexName)\n                        .setQuery(\n                                filteredQuery(\n                                        matchAllQuery(),\n                                        hasChildFilter(\"child\", termQuery(\"tag\", \"tag1\")).executionType(executionType)\n                                )\n                        )\n                        .execute().actionGet();\n                if (searchResponse.failedShards() > 0) {\n                    System.err.println(\"Search Failures \" + Arrays.toString(searchResponse.shardFailures()));\n                }\n                if (searchResponse.hits().totalHits() != COUNT) {\n                    System.err.println(\"--> mismatch on hits [\" + j + \"], got [\" + searchResponse.hits().totalHits() + \"], expected [\" + COUNT + \"]\");\n                }\n            }\n\n            totalQueryTime = 0;\n            for (int j = 0; j < QUERY_COUNT; j++) {\n                SearchResponse searchResponse = client.prepareSearch(indexName)\n                        .setQuery(\n                                filteredQuery(\n                                        matchAllQuery(),\n                                        hasChildFilter(\"child\", termQuery(\"tag\", \"tag1\")).executionType(executionType)\n                                )\n                        )\n                        .execute().actionGet();\n                if (searchResponse.failedShards() > 0) {\n                    System.err.println(\"Search Failures \" + Arrays.toString(searchResponse.shardFailures()));\n                }\n                if (searchResponse.hits().totalHits() != COUNT) {\n                    System.err.println(\"--> mismatch on hits [\" + j + \"], got [\" + searchResponse.hits().totalHits() + \"], expected [\" + COUNT + \"]\");\n                }\n                totalQueryTime += searchResponse.tookInMillis();\n            }\n            System.out.println(\"--> has_child[\" + executionType + \"] filter Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n\n            System.out.println(\"--> Running has_child[\" + executionType + \"] filter with match_all child query\");\n            totalQueryTime = 0;\n            for (int j = 1; j <= QUERY_COUNT; j++) {\n                SearchResponse searchResponse = client.prepareSearch(indexName)\n                        .setQuery(\n                                filteredQuery(\n                                        matchAllQuery(),\n                                        hasChildFilter(\"child\", matchAllQuery()).executionType(executionType)\n                                )\n                        )\n                        .execute().actionGet();\n                if (searchResponse.failedShards() > 0) {\n                    System.err.println(\"Search Failures \" + Arrays.toString(searchResponse.shardFailures()));\n                }\n                long expected = (COUNT / BATCH) * BATCH;\n                if (searchResponse.hits().totalHits() != expected) {\n                    System.err.println(\"--> mismatch on hits [\" + j + \"], got [\" + searchResponse.hits().totalHits() + \"], expected [\" + expected + \"]\");\n                }\n                totalQueryTime += searchResponse.tookInMillis();\n            }\n            System.out.println(\"--> has_child[\" + executionType + \"] filter with match_all child query, Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n        }\n\n        for (String executionType : executionTypes) {\n            System.out.println(\"--> Running has_parent filter with \" + executionType + \" execution type\");\n            // run parent child constant query\n            for (int j = 0; j < QUERY_WARMUP; j++) {\n                SearchResponse searchResponse = client.prepareSearch(indexName)\n                        .setQuery(\n                                filteredQuery(\n                                        matchAllQuery(),\n                                        hasParentFilter(\"parent\", termQuery(\"name\", \"test1\")).executionType(executionType)\n                                )\n                        )\n                        .execute().actionGet();\n                if (searchResponse.failedShards() > 0) {\n                    System.err.println(\"Search Failures \" + Arrays.toString(searchResponse.shardFailures()));\n                }\n                if (searchResponse.hits().totalHits() != CHILD_COUNT) {\n                    System.err.println(\"--> mismatch on hits [\" + j + \"], got [\" + searchResponse.hits().totalHits() + \"], expected [\" + CHILD_COUNT + \"]\");\n                }\n            }\n\n            totalQueryTime = 0;\n            for (int j = 1; j <= QUERY_COUNT; j++) {\n                SearchResponse searchResponse = client.prepareSearch(indexName)\n                        .setQuery(\n                                filteredQuery(\n                                        matchAllQuery(),\n                                        hasParentFilter(\"parent\", termQuery(\"name\", \"test1\")).executionType(executionType)\n                                )\n                        )\n                        .execute().actionGet();\n                if (searchResponse.failedShards() > 0) {\n                    System.err.println(\"Search Failures \" + Arrays.toString(searchResponse.shardFailures()));\n                }\n                if (searchResponse.hits().totalHits() != CHILD_COUNT) {\n                    System.err.println(\"--> mismatch on hits [\" + j + \"], got [\" + searchResponse.hits().totalHits() + \"], expected [\" + CHILD_COUNT + \"]\");\n                }\n                totalQueryTime += searchResponse.tookInMillis();\n            }\n            System.out.println(\"--> has_parent[\" + executionType + \"] filter Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n\n            System.out.println(\"--> Running has_parent[\" + executionType + \"] filter with match_all parent query \");\n            totalQueryTime = 0;\n            for (int j = 1; j <= QUERY_COUNT; j++) {\n                SearchResponse searchResponse = client.prepareSearch(indexName)\n                        .setQuery(filteredQuery(\n                                matchAllQuery(),\n                                hasParentFilter(\"parent\", matchAllQuery()).executionType(executionType)\n                        ))\n                        .execute().actionGet();\n                if (searchResponse.failedShards() > 0) {\n                    System.err.println(\"Search Failures \" + Arrays.toString(searchResponse.shardFailures()));\n                }\n                if (searchResponse.hits().totalHits() != 5000000) {\n                    System.err.println(\"--> mismatch on hits [\" + j + \"], got [\" + searchResponse.hits().totalHits() + \"], expected [\" + 5000000 + \"]\");\n                }\n                totalQueryTime += searchResponse.tookInMillis();\n            }\n            System.out.println(\"--> has_parent[\" + executionType + \"] filter with match_all parent query, Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n        }\n        System.out.println(\"--> Running top_children query\");\n        // run parent child score query\n        for (int j = 0; j < QUERY_WARMUP; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(topChildrenQuery(\"child\", termQuery(\"tag\", \"tag1\"))).execute().actionGet();\n            // we expect to have mismatch on hits here\n//            if (searchResponse.hits().totalHits() != COUNT) {\n//                System.err.println(\"mismatch on hits\");\n//            }\n        }\n\n        totalQueryTime = 0;\n        for (int j = 0; j < QUERY_COUNT; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(topChildrenQuery(\"child\", termQuery(\"tag\", \"tag1\"))).execute().actionGet();\n            // we expect to have mismatch on hits here\n//            if (searchResponse.hits().totalHits() != COUNT) {\n//                System.err.println(\"mismatch on hits\");\n//            }\n            totalQueryTime += searchResponse.tookInMillis();\n        }\n        System.out.println(\"--> top_children Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n\n        statsResponse = client.admin().cluster().prepareNodesStats()\n                .setJvm(true).setIndices(true).execute().actionGet();\n\n        System.out.println(\"--> Id cache size: \" + statsResponse.nodes()[0].getIndices().getCache().getIdCacheSize());\n        System.out.println(\"--> Used heap size: \" + statsResponse.nodes()[0].getJvm().getMem().getHeapUsed());\n\n        System.out.println(\"--> Running has_child query with score type\");\n        // run parent child score query\n        for (int j = 0; j < QUERY_WARMUP; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(hasChildQuery(\"child\", termQuery(\"tag\", \"tag1\")).scoreType(\"max\")).execute().actionGet();\n            if (searchResponse.hits().totalHits() != COUNT) {\n                System.err.println(\"mismatch on hits\");\n            }\n        }\n\n        totalQueryTime = 0;\n        for (int j = 0; j < QUERY_COUNT; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(hasChildQuery(\"child\", termQuery(\"tag\", \"tag1\")).scoreType(\"max\")).execute().actionGet();\n            if (searchResponse.hits().totalHits() != COUNT) {\n                System.err.println(\"mismatch on hits\");\n            }\n            totalQueryTime += searchResponse.tookInMillis();\n        }\n        System.out.println(\"--> has_child Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n\n        totalQueryTime = 0;\n        for (int j = 0; j < QUERY_COUNT; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(hasChildQuery(\"child\", matchAllQuery()).scoreType(\"max\")).execute().actionGet();\n            long expected = (COUNT / BATCH) * BATCH;\n            if (searchResponse.hits().totalHits() != expected) {\n                System.err.println(\"mismatch on hits\");\n            }\n            totalQueryTime += searchResponse.tookInMillis();\n        }\n        System.out.println(\"--> has_child query with match_all Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n\n        System.out.println(\"--> Running has_parent query with score type\");\n        // run parent child score query\n        for (int j = 0; j < QUERY_WARMUP; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(hasParentQuery(\"parent\", termQuery(\"name\", \"test1\")).scoreType(\"score\")).execute().actionGet();\n            if (searchResponse.hits().totalHits() != CHILD_COUNT) {\n                System.err.println(\"mismatch on hits\");\n            }\n        }\n\n        totalQueryTime = 0;\n        for (int j = 0; j < QUERY_COUNT; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(hasParentQuery(\"parent\", termQuery(\"name\", \"test1\")).scoreType(\"score\")).execute().actionGet();\n            if (searchResponse.hits().totalHits() != CHILD_COUNT) {\n                System.err.println(\"mismatch on hits\");\n            }\n            totalQueryTime += searchResponse.tookInMillis();\n        }\n        System.out.println(\"--> has_parent Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n\n        totalQueryTime = 0;\n        for (int j = 0; j < QUERY_COUNT; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(hasParentQuery(\"parent\", matchAllQuery()).scoreType(\"score\")).execute().actionGet();\n            if (searchResponse.hits().totalHits() != 5000000) {\n                System.err.println(\"mismatch on hits\");\n            }\n            totalQueryTime += searchResponse.tookInMillis();\n        }\n        System.out.println(\"--> has_parent query with match_all Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n\n\n        statsResponse = client.admin().cluster().prepareNodesStats()\n                .setJvm(true).setIndices(true).execute().actionGet();\n\n        System.out.println(\"--> Id cache size: \" + statsResponse.nodes()[0].getIndices().getCache().getIdCacheSize());\n        System.out.println(\"--> Used heap size: \" + statsResponse.nodes()[0].getJvm().getMem().getHeapUsed());\n\n        client.close();\n        node1.close();\n    }","id":63896,"modified_method":"public static void main(String[] args) throws Exception {\n        Settings settings = settingsBuilder()\n                .put(\"index.engine.robin.refreshInterval\", \"-1\")\n                .put(\"gateway.type\", \"local\")\n                .put(SETTING_NUMBER_OF_SHARDS, 1)\n                .put(SETTING_NUMBER_OF_REPLICAS, 0)\n                .build();\n\n        Node node1 = nodeBuilder().settings(settingsBuilder().put(settings).put(\"name\", \"node1\")).node();\n        Client client = node1.client();\n\n        long COUNT = SizeValue.parseSizeValue(\"1m\").singles();\n        int CHILD_COUNT = 5;\n        int BATCH = 100;\n        int QUERY_WARMUP = 20;\n        int QUERY_COUNT = 50;\n        String indexName = \"test\";\n\n        Thread.sleep(10000);\n        try {\n            client.admin().indices().create(createIndexRequest(indexName)).actionGet();\n            client.admin().indices().preparePutMapping(indexName).setType(\"child\").setSource(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                    .startObject(\"_parent\").field(\"type\", \"parent\").endObject()\n                    .endObject().endObject()).execute().actionGet();\n            Thread.sleep(5000);\n\n            StopWatch stopWatch = new StopWatch().start();\n\n            System.out.println(\"--> Indexing [\" + COUNT + \"] parent document and [\" + (COUNT * CHILD_COUNT) + \" child documents\");\n            long ITERS = COUNT / BATCH;\n            long i = 1;\n            int counter = 0;\n            for (; i <= ITERS; i++) {\n                BulkRequestBuilder request = client.prepareBulk();\n                for (int j = 0; j < BATCH; j++) {\n                    counter++;\n                    request.add(Requests.indexRequest(indexName).type(\"parent\").id(Integer.toString(counter))\n                            .source(parentSource(Integer.toString(counter), \"test\" + counter)));\n                    for (int k = 0; k < CHILD_COUNT; k++) {\n                        request.add(Requests.indexRequest(indexName).type(\"child\").id(Integer.toString(counter) + \"_\" + k)\n                                .parent(Integer.toString(counter))\n                                .source(childSource(Integer.toString(counter), \"tag\" + k)));\n                    }\n                }\n                BulkResponse response = request.execute().actionGet();\n                if (response.hasFailures()) {\n                    System.err.println(\"--> failures...\");\n                }\n                if (((i * BATCH) % 10000) == 0) {\n                    System.out.println(\"--> Indexed \" + (i * BATCH) * (1 + CHILD_COUNT) + \" took \" + stopWatch.stop().lastTaskTime());\n                    stopWatch.start();\n                }\n            }\n            System.out.println(\"--> Indexing took \" + stopWatch.totalTime() + \", TPS \" + (((double) (COUNT * (1 + CHILD_COUNT))) / stopWatch.totalTime().secondsFrac()));\n        } catch (Exception e) {\n            System.out.println(\"--> Index already exists, ignoring indexing phase, waiting for green\");\n            ClusterHealthResponse clusterHealthResponse = client.admin().cluster().prepareHealth(indexName).setWaitForGreenStatus().setTimeout(\"10m\").execute().actionGet();\n            if (clusterHealthResponse.timedOut()) {\n                System.err.println(\"--> Timed out waiting for cluster health\");\n            }\n        }\n        client.admin().indices().prepareRefresh().execute().actionGet();\n        System.out.println(\"--> Number of docs in index: \" + client.prepareCount().setQuery(matchAllQuery()).execute().actionGet().count());\n\n        System.out.println(\"--> Running just child query\");\n        // run just the child query, warm up first\n        for (int j = 0; j < QUERY_WARMUP; j++) {\n            SearchResponse searchResponse = client.prepareSearch().setQuery(termQuery(\"child.tag\", \"tag1\")).execute().actionGet();\n            if (j == 0) {\n                System.out.println(\"--> Warmup took: \" + searchResponse.took());\n            }\n            if (searchResponse.hits().totalHits() != COUNT) {\n                System.err.println(\"--> mismatch on hits\");\n            }\n        }\n\n        long totalQueryTime = 0;\n        for (int j = 0; j < QUERY_COUNT; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(termQuery(\"child.tag\", \"tag1\")).execute().actionGet();\n            if (searchResponse.hits().totalHits() != COUNT) {\n                System.err.println(\"--> mismatch on hits\");\n            }\n            totalQueryTime += searchResponse.tookInMillis();\n        }\n        System.out.println(\"--> Just Child Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n\n        NodesStatsResponse statsResponse = client.admin().cluster().prepareNodesStats()\n                .setJvm(true).execute().actionGet();\n        System.out.println(\"--> Committed heap size: \" + statsResponse.nodes()[0].getJvm().getMem().getHeapCommitted());\n        System.out.println(\"--> Used heap size: \" + statsResponse.nodes()[0].getJvm().getMem().getHeapUsed());\n\n        // run parent child constant query\n        for (int j = 0; j < QUERY_WARMUP; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName)\n                    .setQuery(\n                            filteredQuery(\n                                    matchAllQuery(),\n                                    hasChildFilter(\"child\", termQuery(\"tag\", \"tag1\"))\n                            )\n                    )\n                    .execute().actionGet();\n            if (searchResponse.failedShards() > 0) {\n                System.err.println(\"Search Failures \" + Arrays.toString(searchResponse.shardFailures()));\n            }\n            if (searchResponse.hits().totalHits() != COUNT) {\n                System.err.println(\"--> mismatch on hits [\" + j + \"], got [\" + searchResponse.hits().totalHits() + \"], expected [\" + COUNT + \"]\");\n            }\n        }\n\n        totalQueryTime = 0;\n        for (int j = 0; j < QUERY_COUNT; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName)\n                    .setQuery(\n                            filteredQuery(\n                                    matchAllQuery(),\n                                    hasChildFilter(\"child\", termQuery(\"tag\", \"tag1\"))\n                            )\n                    )\n                    .execute().actionGet();\n            if (searchResponse.failedShards() > 0) {\n                System.err.println(\"Search Failures \" + Arrays.toString(searchResponse.shardFailures()));\n            }\n            if (searchResponse.hits().totalHits() != COUNT) {\n                System.err.println(\"--> mismatch on hits [\" + j + \"], got [\" + searchResponse.hits().totalHits() + \"], expected [\" + COUNT + \"]\");\n            }\n            totalQueryTime += searchResponse.tookInMillis();\n        }\n        System.out.println(\"--> has_child filter Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n\n        System.out.println(\"--> Running has_child filter with match_all child query\");\n        totalQueryTime = 0;\n        for (int j = 1; j <= QUERY_COUNT; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName)\n                    .setQuery(\n                            filteredQuery(\n                                    matchAllQuery(),\n                                    hasChildFilter(\"child\", matchAllQuery())\n                            )\n                    )\n                    .execute().actionGet();\n            if (searchResponse.failedShards() > 0) {\n                System.err.println(\"Search Failures \" + Arrays.toString(searchResponse.shardFailures()));\n            }\n            long expected = (COUNT / BATCH) * BATCH;\n            if (searchResponse.hits().totalHits() != expected) {\n                System.err.println(\"--> mismatch on hits [\" + j + \"], got [\" + searchResponse.hits().totalHits() + \"], expected [\" + expected + \"]\");\n            }\n            totalQueryTime += searchResponse.tookInMillis();\n        }\n        System.out.println(\"--> has_child filter with match_all child query, Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n\n        // run parent child constant query\n        for (int j = 0; j < QUERY_WARMUP; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName)\n                    .setQuery(\n                            filteredQuery(\n                                    matchAllQuery(),\n                                    hasParentFilter(\"parent\", termQuery(\"name\", \"test1\"))\n                            )\n                    )\n                    .execute().actionGet();\n            if (searchResponse.failedShards() > 0) {\n                System.err.println(\"Search Failures \" + Arrays.toString(searchResponse.shardFailures()));\n            }\n            if (searchResponse.hits().totalHits() != CHILD_COUNT) {\n                System.err.println(\"--> mismatch on hits [\" + j + \"], got [\" + searchResponse.hits().totalHits() + \"], expected [\" + CHILD_COUNT + \"]\");\n            }\n        }\n\n        totalQueryTime = 0;\n        for (int j = 1; j <= QUERY_COUNT; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName)\n                    .setQuery(\n                            filteredQuery(\n                                    matchAllQuery(),\n                                    hasParentFilter(\"parent\", termQuery(\"name\", \"test1\"))\n                            )\n                    )\n                    .execute().actionGet();\n            if (searchResponse.failedShards() > 0) {\n                System.err.println(\"Search Failures \" + Arrays.toString(searchResponse.shardFailures()));\n            }\n            if (searchResponse.hits().totalHits() != CHILD_COUNT) {\n                System.err.println(\"--> mismatch on hits [\" + j + \"], got [\" + searchResponse.hits().totalHits() + \"], expected [\" + CHILD_COUNT + \"]\");\n            }\n            totalQueryTime += searchResponse.tookInMillis();\n        }\n        System.out.println(\"--> has_parent filter Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n\n        System.out.println(\"--> Running has_parent filter with match_all parent query \");\n        totalQueryTime = 0;\n        for (int j = 1; j <= QUERY_COUNT; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName)\n                    .setQuery(filteredQuery(\n                            matchAllQuery(),\n                            hasParentFilter(\"parent\", matchAllQuery())\n                    ))\n                    .execute().actionGet();\n            if (searchResponse.failedShards() > 0) {\n                System.err.println(\"Search Failures \" + Arrays.toString(searchResponse.shardFailures()));\n            }\n            if (searchResponse.hits().totalHits() != 5000000) {\n                System.err.println(\"--> mismatch on hits [\" + j + \"], got [\" + searchResponse.hits().totalHits() + \"], expected [\" + 5000000 + \"]\");\n            }\n            totalQueryTime += searchResponse.tookInMillis();\n        }\n        System.out.println(\"--> has_parent filter with match_all parent query, Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n        System.out.println(\"--> Running top_children query\");\n        // run parent child score query\n        for (int j = 0; j < QUERY_WARMUP; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(topChildrenQuery(\"child\", termQuery(\"tag\", \"tag1\"))).execute().actionGet();\n            // we expect to have mismatch on hits here\n//            if (searchResponse.hits().totalHits() != COUNT) {\n//                System.err.println(\"mismatch on hits\");\n//            }\n        }\n\n        totalQueryTime = 0;\n        for (int j = 0; j < QUERY_COUNT; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(topChildrenQuery(\"child\", termQuery(\"tag\", \"tag1\"))).execute().actionGet();\n            // we expect to have mismatch on hits here\n//            if (searchResponse.hits().totalHits() != COUNT) {\n//                System.err.println(\"mismatch on hits\");\n//            }\n            totalQueryTime += searchResponse.tookInMillis();\n        }\n        System.out.println(\"--> top_children Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n\n        statsResponse = client.admin().cluster().prepareNodesStats()\n                .setJvm(true).setIndices(true).execute().actionGet();\n\n        System.out.println(\"--> Id cache size: \" + statsResponse.nodes()[0].getIndices().getCache().getIdCacheSize());\n        System.out.println(\"--> Used heap size: \" + statsResponse.nodes()[0].getJvm().getMem().getHeapUsed());\n\n        System.out.println(\"--> Running has_child query with score type\");\n        // run parent child score query\n        for (int j = 0; j < QUERY_WARMUP; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(hasChildQuery(\"child\", termQuery(\"tag\", \"tag1\")).scoreType(\"max\")).execute().actionGet();\n            if (searchResponse.hits().totalHits() != COUNT) {\n                System.err.println(\"mismatch on hits\");\n            }\n        }\n\n        totalQueryTime = 0;\n        for (int j = 0; j < QUERY_COUNT; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(hasChildQuery(\"child\", termQuery(\"tag\", \"tag1\")).scoreType(\"max\")).execute().actionGet();\n            if (searchResponse.hits().totalHits() != COUNT) {\n                System.err.println(\"mismatch on hits\");\n            }\n            totalQueryTime += searchResponse.tookInMillis();\n        }\n        System.out.println(\"--> has_child Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n\n        totalQueryTime = 0;\n        for (int j = 0; j < QUERY_COUNT; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(hasChildQuery(\"child\", matchAllQuery()).scoreType(\"max\")).execute().actionGet();\n            long expected = (COUNT / BATCH) * BATCH;\n            if (searchResponse.hits().totalHits() != expected) {\n                System.err.println(\"mismatch on hits\");\n            }\n            totalQueryTime += searchResponse.tookInMillis();\n        }\n        System.out.println(\"--> has_child query with match_all Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n\n        System.out.println(\"--> Running has_parent query with score type\");\n        // run parent child score query\n        for (int j = 0; j < QUERY_WARMUP; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(hasParentQuery(\"parent\", termQuery(\"name\", \"test1\")).scoreType(\"score\")).execute().actionGet();\n            if (searchResponse.hits().totalHits() != CHILD_COUNT) {\n                System.err.println(\"mismatch on hits\");\n            }\n        }\n\n        totalQueryTime = 0;\n        for (int j = 0; j < QUERY_COUNT; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(hasParentQuery(\"parent\", termQuery(\"name\", \"test1\")).scoreType(\"score\")).execute().actionGet();\n            if (searchResponse.hits().totalHits() != CHILD_COUNT) {\n                System.err.println(\"mismatch on hits\");\n            }\n            totalQueryTime += searchResponse.tookInMillis();\n        }\n        System.out.println(\"--> has_parent Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n\n        totalQueryTime = 0;\n        for (int j = 0; j < QUERY_COUNT; j++) {\n            SearchResponse searchResponse = client.prepareSearch(indexName).setQuery(hasParentQuery(\"parent\", matchAllQuery()).scoreType(\"score\")).execute().actionGet();\n            if (searchResponse.hits().totalHits() != 5000000) {\n                System.err.println(\"mismatch on hits\");\n            }\n            totalQueryTime += searchResponse.tookInMillis();\n        }\n        System.out.println(\"--> has_parent query with match_all Query Avg: \" + (totalQueryTime / QUERY_COUNT) + \"ms\");\n\n\n        statsResponse = client.admin().cluster().prepareNodesStats()\n                .setJvm(true).setIndices(true).execute().actionGet();\n\n        System.out.println(\"--> Id cache size: \" + statsResponse.nodes()[0].getIndices().getCache().getIdCacheSize());\n        System.out.println(\"--> Used heap size: \" + statsResponse.nodes()[0].getJvm().getMem().getHeapUsed());\n\n        client.close();\n        node1.close();\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static HasChildFilter create(Query childQuery, String parentType, String childType, SearchContext searchContext, String executionType) {\n        // This mechanism is experimental and will most likely be removed.\n        if (\"bitset\".equals(executionType)) {\n            return new Bitset(childQuery, parentType, childType, searchContext);\n        } else if (\"uid\".endsWith(executionType)) {\n            return new Uid(childQuery, parentType, childType, searchContext);\n        }\n        throw new ElasticSearchIllegalStateException(\"Illegal has_child execution type: \" + executionType);\n    }","id":63897,"modified_method":"public static HasChildFilter create(Query childQuery, String parentType, String childType, SearchContext searchContext) {\n        return new Uid(childQuery, parentType, childType, searchContext);\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    protected void doXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject(HasChildFilterParser.NAME);\n        if (queryBuilder != null) {\n            builder.field(\"query\");\n            queryBuilder.toXContent(builder, params);\n        } else if (filterBuilder != null) {\n            builder.field(\"filter\");\n            filterBuilder.toXContent(builder, params);\n        }\n        builder.field(\"child_type\", childType);\n        if (filterName != null) {\n            builder.field(\"_name\", filterName);\n        }\n        if (executionType != null) {\n            builder.field(\"execution_type\", executionType);\n        }\n        builder.endObject();\n    }","id":63898,"modified_method":"@Override\n    protected void doXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject(HasChildFilterParser.NAME);\n        if (queryBuilder != null) {\n            builder.field(\"query\");\n            queryBuilder.toXContent(builder, params);\n        } else if (filterBuilder != null) {\n            builder.field(\"filter\");\n            filterBuilder.toXContent(builder, params);\n        }\n        builder.field(\"child_type\", childType);\n        if (filterName != null) {\n            builder.field(\"_name\", filterName);\n        }\n        builder.endObject();\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public Filter parse(QueryParseContext parseContext) throws IOException, QueryParsingException {\n        XContentParser parser = parseContext.parser();\n\n        Query query = null;\n        boolean queryFound = false;\n        String childType = null;\n\n        String executionType = \"uid\";\n        String filterName = null;\n        String currentFieldName = null;\n        XContentParser.Token token;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (token == XContentParser.Token.START_OBJECT) {\n                if (\"query\".equals(currentFieldName)) {\n                    // TODO we need to set the type, but, `query` can come before `type`...\n                    // since we switch types, make sure we change the context\n                    String[] origTypes = QueryParseContext.setTypesWithPrevious(childType == null ? null : new String[]{childType});\n                    try {\n                        query = parseContext.parseInnerQuery();\n                        queryFound = true;\n                    } finally {\n                        QueryParseContext.setTypes(origTypes);\n                    }\n                } else if (\"filter\".equals(currentFieldName)) {\n                    // TODO handle `filter` element before `type` element...\n                    String[] origTypes = QueryParseContext.setTypesWithPrevious(childType == null ? null : new String[]{childType});\n                    try {\n                        Filter innerFilter = parseContext.parseInnerFilter();\n                        query = new XConstantScoreQuery(innerFilter);\n                        queryFound = true;\n                    } finally {\n                        QueryParseContext.setTypes(origTypes);\n                    }\n                } else {\n                    throw new QueryParsingException(parseContext.index(), \"[has_child] filter does not support [\" + currentFieldName + \"]\");\n                }\n            } else if (token.isValue()) {\n                if (\"type\".equals(currentFieldName) || \"child_type\".equals(currentFieldName) || \"childType\".equals(currentFieldName)) {\n                    childType = parser.text();\n                } else if (\"_scope\".equals(currentFieldName)) {\n                    throw new QueryParsingException(parseContext.index(), \"the [_scope] support in [has_child] filter has been removed, use a filter as a facet_filter in the relevant global facet\");\n                } else if (\"_name\".equals(currentFieldName)) {\n                    filterName = parser.text();\n                } else if (\"execution_type\".equals(currentFieldName) || \"executionType\".equals(currentFieldName)) {// This option is experimental and will most likely be removed.\n                    executionType = parser.text();\n                } else {\n                    throw new QueryParsingException(parseContext.index(), \"[has_child] filter does not support [\" + currentFieldName + \"]\");\n                }\n            }\n        }\n        if (!queryFound) {\n            throw new QueryParsingException(parseContext.index(), \"[child] filter requires 'query' field\");\n        }\n        if (query == null) {\n            return null;\n        }\n        if (childType == null) {\n            throw new QueryParsingException(parseContext.index(), \"[child] filter requires 'type' field\");\n        }\n\n        DocumentMapper childDocMapper = parseContext.mapperService().documentMapper(childType);\n        if (childDocMapper == null) {\n            throw new QueryParsingException(parseContext.index(), \"No mapping for for type [\" + childType + \"]\");\n        }\n        if (childDocMapper.parentFieldMapper() == null) {\n            throw new QueryParsingException(parseContext.index(), \"Type [\" + childType + \"] does not have parent mapping\");\n        }\n        String parentType = childDocMapper.parentFieldMapper().type();\n\n        // wrap the query with type query\n        query = new XFilteredQuery(query, parseContext.cacheFilter(childDocMapper.typeFilter(), null));\n\n        SearchContext searchContext = SearchContext.current();\n\n        HasChildFilter childFilter = HasChildFilter.create(query, parentType, childType, searchContext, executionType);\n        searchContext.addRewrite(childFilter);\n\n        if (filterName != null) {\n            parseContext.addNamedFilter(filterName, childFilter);\n        }\n        return childFilter;\n    }","id":63899,"modified_method":"@Override\n    public Filter parse(QueryParseContext parseContext) throws IOException, QueryParsingException {\n        XContentParser parser = parseContext.parser();\n\n        Query query = null;\n        boolean queryFound = false;\n        String childType = null;\n\n        String filterName = null;\n        String currentFieldName = null;\n        XContentParser.Token token;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (token == XContentParser.Token.START_OBJECT) {\n                if (\"query\".equals(currentFieldName)) {\n                    // TODO we need to set the type, but, `query` can come before `type`...\n                    // since we switch types, make sure we change the context\n                    String[] origTypes = QueryParseContext.setTypesWithPrevious(childType == null ? null : new String[]{childType});\n                    try {\n                        query = parseContext.parseInnerQuery();\n                        queryFound = true;\n                    } finally {\n                        QueryParseContext.setTypes(origTypes);\n                    }\n                } else if (\"filter\".equals(currentFieldName)) {\n                    // TODO handle `filter` element before `type` element...\n                    String[] origTypes = QueryParseContext.setTypesWithPrevious(childType == null ? null : new String[]{childType});\n                    try {\n                        Filter innerFilter = parseContext.parseInnerFilter();\n                        query = new XConstantScoreQuery(innerFilter);\n                        queryFound = true;\n                    } finally {\n                        QueryParseContext.setTypes(origTypes);\n                    }\n                } else {\n                    throw new QueryParsingException(parseContext.index(), \"[has_child] filter does not support [\" + currentFieldName + \"]\");\n                }\n            } else if (token.isValue()) {\n                if (\"type\".equals(currentFieldName) || \"child_type\".equals(currentFieldName) || \"childType\".equals(currentFieldName)) {\n                    childType = parser.text();\n                } else if (\"_scope\".equals(currentFieldName)) {\n                    throw new QueryParsingException(parseContext.index(), \"the [_scope] support in [has_child] filter has been removed, use a filter as a facet_filter in the relevant global facet\");\n                } else if (\"_name\".equals(currentFieldName)) {\n                    filterName = parser.text();\n                } else {\n                    throw new QueryParsingException(parseContext.index(), \"[has_child] filter does not support [\" + currentFieldName + \"]\");\n                }\n            }\n        }\n        if (!queryFound) {\n            throw new QueryParsingException(parseContext.index(), \"[child] filter requires 'query' field\");\n        }\n        if (query == null) {\n            return null;\n        }\n        if (childType == null) {\n            throw new QueryParsingException(parseContext.index(), \"[child] filter requires 'type' field\");\n        }\n\n        DocumentMapper childDocMapper = parseContext.mapperService().documentMapper(childType);\n        if (childDocMapper == null) {\n            throw new QueryParsingException(parseContext.index(), \"No mapping for for type [\" + childType + \"]\");\n        }\n        if (childDocMapper.parentFieldMapper() == null) {\n            throw new QueryParsingException(parseContext.index(), \"Type [\" + childType + \"] does not have parent mapping\");\n        }\n        String parentType = childDocMapper.parentFieldMapper().type();\n\n        // wrap the query with type query\n        query = new XFilteredQuery(query, parseContext.cacheFilter(childDocMapper.typeFilter(), null));\n\n        SearchContext searchContext = SearchContext.current();\n\n        HasChildFilter childFilter = HasChildFilter.create(query, parentType, childType, searchContext);\n        searchContext.addRewrite(childFilter);\n\n        if (filterName != null) {\n            parseContext.addNamedFilter(filterName, childFilter);\n        }\n        return childFilter;\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    protected void doXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject(HasChildQueryParser.NAME);\n        builder.field(\"query\");\n        queryBuilder.toXContent(builder, params);\n        builder.field(\"child_type\", childType);\n        if (boost != 1.0f) {\n            builder.field(\"boost\", boost);\n        }\n        if (scoreType != null) {\n            builder.field(\"score_type\", scoreType);\n        }\n        if (executionType != null) {\n            builder.field(\"execution_type\", executionType);\n        }\n        builder.endObject();\n    }","id":63900,"modified_method":"@Override\n    protected void doXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject(HasChildQueryParser.NAME);\n        builder.field(\"query\");\n        queryBuilder.toXContent(builder, params);\n        builder.field(\"child_type\", childType);\n        if (boost != 1.0f) {\n            builder.field(\"boost\", boost);\n        }\n        if (scoreType != null) {\n            builder.field(\"score_type\", scoreType);\n        }\n        builder.endObject();\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public Query parse(QueryParseContext parseContext) throws IOException, QueryParsingException {\n        XContentParser parser = parseContext.parser();\n\n        Query innerQuery = null;\n        boolean queryFound = false;\n        float boost = 1.0f;\n        String childType = null;\n        ScoreType scoreType = null;\n        String executionType = \"uid\";\n\n        String currentFieldName = null;\n        XContentParser.Token token;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (token == XContentParser.Token.START_OBJECT) {\n                if (\"query\".equals(currentFieldName)) {\n                    // TODO we need to set the type, but, `query` can come before `type`... (see HasChildFilterParser)\n                    // since we switch types, make sure we change the context\n                    String[] origTypes = QueryParseContext.setTypesWithPrevious(childType == null ? null : new String[]{childType});\n                    try {\n                        innerQuery = parseContext.parseInnerQuery();\n                        queryFound = true;\n                    } finally {\n                        QueryParseContext.setTypes(origTypes);\n                    }\n                } else {\n                    throw new QueryParsingException(parseContext.index(), \"[has_child] query does not support [\" + currentFieldName + \"]\");\n                }\n            } else if (token.isValue()) {\n                if (\"type\".equals(currentFieldName) || \"child_type\".equals(currentFieldName) || \"childType\".equals(currentFieldName)) {\n                    childType = parser.text();\n                } else if (\"execution_type\".equals(currentFieldName) || \"executionType\".equals(currentFieldName)) {// This option is experimental and will most likely be removed.\n                    executionType = parser.text();\n                } else if (\"_scope\".equals(currentFieldName)) {\n                    throw new QueryParsingException(parseContext.index(), \"the [_scope] support in [has_child] query has been removed, use a filter as a facet_filter in the relevant global facet\");\n                } else if (\"score_type\".equals(currentFieldName) || \"scoreType\".equals(currentFieldName)) {\n                    String scoreTypeValue = parser.text();\n                    if (!\"none\".equals(scoreTypeValue)) {\n                        scoreType = ScoreType.fromString(scoreTypeValue);\n                    }\n                } else if (\"boost\".equals(currentFieldName)) {\n                    boost = parser.floatValue();\n                } else {\n                    throw new QueryParsingException(parseContext.index(), \"[has_child] query does not support [\" + currentFieldName + \"]\");\n                }\n            }\n        }\n        if (!queryFound) {\n            throw new QueryParsingException(parseContext.index(), \"[has_child] requires 'query' field\");\n        }\n        if (innerQuery == null) {\n            return null;\n        }\n        if (childType == null) {\n            throw new QueryParsingException(parseContext.index(), \"[has_child] requires 'type' field\");\n        }\n        innerQuery.setBoost(boost);\n\n        DocumentMapper childDocMapper = parseContext.mapperService().documentMapper(childType);\n        if (childDocMapper == null) {\n            throw new QueryParsingException(parseContext.index(), \"[has_child] No mapping for for type [\" + childType + \"]\");\n        }\n        if (childDocMapper.parentFieldMapper() == null) {\n            throw new QueryParsingException(parseContext.index(), \"[has_child]  Type [\" + childType + \"] does not have parent mapping\");\n        }\n        String parentType = childDocMapper.parentFieldMapper().type();\n        DocumentMapper parentDocMapper = parseContext.mapperService().documentMapper(parentType);\n\n        // wrap the query with type query\n        SearchContext searchContext = SearchContext.current();\n        Query query;\n        if (scoreType != null) {\n            Filter parentFilter = parseContext.cacheFilter(parentDocMapper.typeFilter(), null);\n            ChildrenQuery childrenQuery = new ChildrenQuery(searchContext, parentType, childType, parentFilter, innerQuery, scoreType);\n            searchContext.addRewrite(childrenQuery);\n            query = childrenQuery;\n        } else {\n            HasChildFilter hasChildFilter = HasChildFilter.create(innerQuery, parentType, childType, searchContext, executionType);\n            searchContext.addRewrite(hasChildFilter);\n            query = new ConstantScoreQuery(hasChildFilter);\n        }\n        query.setBoost(boost);\n        return query;\n    }","id":63901,"modified_method":"@Override\n    public Query parse(QueryParseContext parseContext) throws IOException, QueryParsingException {\n        XContentParser parser = parseContext.parser();\n\n        Query innerQuery = null;\n        boolean queryFound = false;\n        float boost = 1.0f;\n        String childType = null;\n        ScoreType scoreType = null;\n\n        String currentFieldName = null;\n        XContentParser.Token token;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (token == XContentParser.Token.START_OBJECT) {\n                if (\"query\".equals(currentFieldName)) {\n                    // TODO we need to set the type, but, `query` can come before `type`... (see HasChildFilterParser)\n                    // since we switch types, make sure we change the context\n                    String[] origTypes = QueryParseContext.setTypesWithPrevious(childType == null ? null : new String[]{childType});\n                    try {\n                        innerQuery = parseContext.parseInnerQuery();\n                        queryFound = true;\n                    } finally {\n                        QueryParseContext.setTypes(origTypes);\n                    }\n                } else {\n                    throw new QueryParsingException(parseContext.index(), \"[has_child] query does not support [\" + currentFieldName + \"]\");\n                }\n            } else if (token.isValue()) {\n                if (\"type\".equals(currentFieldName) || \"child_type\".equals(currentFieldName) || \"childType\".equals(currentFieldName)) {\n                    childType = parser.text();\n                } else if (\"_scope\".equals(currentFieldName)) {\n                    throw new QueryParsingException(parseContext.index(), \"the [_scope] support in [has_child] query has been removed, use a filter as a facet_filter in the relevant global facet\");\n                } else if (\"score_type\".equals(currentFieldName) || \"scoreType\".equals(currentFieldName)) {\n                    String scoreTypeValue = parser.text();\n                    if (!\"none\".equals(scoreTypeValue)) {\n                        scoreType = ScoreType.fromString(scoreTypeValue);\n                    }\n                } else if (\"boost\".equals(currentFieldName)) {\n                    boost = parser.floatValue();\n                } else {\n                    throw new QueryParsingException(parseContext.index(), \"[has_child] query does not support [\" + currentFieldName + \"]\");\n                }\n            }\n        }\n        if (!queryFound) {\n            throw new QueryParsingException(parseContext.index(), \"[has_child] requires 'query' field\");\n        }\n        if (innerQuery == null) {\n            return null;\n        }\n        if (childType == null) {\n            throw new QueryParsingException(parseContext.index(), \"[has_child] requires 'type' field\");\n        }\n        innerQuery.setBoost(boost);\n\n        DocumentMapper childDocMapper = parseContext.mapperService().documentMapper(childType);\n        if (childDocMapper == null) {\n            throw new QueryParsingException(parseContext.index(), \"[has_child] No mapping for for type [\" + childType + \"]\");\n        }\n        if (childDocMapper.parentFieldMapper() == null) {\n            throw new QueryParsingException(parseContext.index(), \"[has_child]  Type [\" + childType + \"] does not have parent mapping\");\n        }\n        String parentType = childDocMapper.parentFieldMapper().type();\n        DocumentMapper parentDocMapper = parseContext.mapperService().documentMapper(parentType);\n\n        // wrap the query with type query\n        SearchContext searchContext = SearchContext.current();\n        Query query;\n        if (scoreType != null) {\n            Filter parentFilter = parseContext.cacheFilter(parentDocMapper.typeFilter(), null);\n            ChildrenQuery childrenQuery = new ChildrenQuery(searchContext, parentType, childType, parentFilter, innerQuery, scoreType);\n            searchContext.addRewrite(childrenQuery);\n            query = childrenQuery;\n        } else {\n            HasChildFilter hasChildFilter = HasChildFilter.create(innerQuery, parentType, childType, searchContext);\n            searchContext.addRewrite(hasChildFilter);\n            query = new ConstantScoreQuery(hasChildFilter);\n        }\n        query.setBoost(boost);\n        return query;\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static HasParentFilter create(String executionType, Query query, String parentType, SearchContext context) {\n        // This mechanism is experimental and will most likely be removed.\n        if (\"bitset\".equals(executionType)) {\n            return new Bitset(query, parentType, context);\n        } else if (\"uid\".equals(executionType)) {\n            return new Uid(query, parentType, context);\n        }\n        throw new ElasticSearchIllegalStateException(\"Illegal has_parent execution type: \" + executionType);\n    }","id":63902,"modified_method":"public static HasParentFilter create(Query query, String parentType, SearchContext context) {\n        return new Uid(query, parentType, context);\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    protected void doXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject(HasParentFilterParser.NAME);\n        if (queryBuilder != null) {\n            builder.field(\"query\");\n            queryBuilder.toXContent(builder, params);\n        } else if (filterBuilder != null) {\n            builder.field(\"filter\");\n            filterBuilder.toXContent(builder, params);\n        }\n        builder.field(\"parent_type\", parentType);\n        if (filterName != null) {\n            builder.field(\"_name\", filterName);\n        }\n        if (executionType != null) {\n            builder.field(\"execution_type\", executionType);\n        }\n        builder.endObject();\n    }","id":63903,"modified_method":"@Override\n    protected void doXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject(HasParentFilterParser.NAME);\n        if (queryBuilder != null) {\n            builder.field(\"query\");\n            queryBuilder.toXContent(builder, params);\n        } else if (filterBuilder != null) {\n            builder.field(\"filter\");\n            filterBuilder.toXContent(builder, params);\n        }\n        builder.field(\"parent_type\", parentType);\n        if (filterName != null) {\n            builder.field(\"_name\", filterName);\n        }\n        builder.endObject();\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public Filter parse(QueryParseContext parseContext) throws IOException, QueryParsingException {\n        XContentParser parser = parseContext.parser();\n\n        Query query = null;\n        boolean queryFound = false;\n        String parentType = null;\n        String executionType = \"uid\";\n\n        String filterName = null;\n        String currentFieldName = null;\n        XContentParser.Token token;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (token == XContentParser.Token.START_OBJECT) {\n                if (\"query\".equals(currentFieldName)) {\n                    // TODO handle `query` element before `type` element...\n                    String[] origTypes = QueryParseContext.setTypesWithPrevious(parentType == null ? null : new String[]{parentType});\n                    try {\n                        query = parseContext.parseInnerQuery();\n                        queryFound = true;\n                    } finally {\n                        QueryParseContext.setTypes(origTypes);\n                    }\n                } else if (\"filter\".equals(currentFieldName)) {\n                    // TODO handle `filter` element before `type` element...\n                    String[] origTypes = QueryParseContext.setTypesWithPrevious(parentType == null ? null : new String[]{parentType});\n                    try {\n                        Filter innerFilter = parseContext.parseInnerFilter();\n                        query = new XConstantScoreQuery(innerFilter);\n                        queryFound = true;\n                    } finally {\n                        QueryParseContext.setTypes(origTypes);\n                    }\n                } else {\n                    throw new QueryParsingException(parseContext.index(), \"[has_parent] filter does not support [\" + currentFieldName + \"]\");\n                }\n            } else if (token.isValue()) {\n                if (\"type\".equals(currentFieldName) || \"parent_type\".equals(currentFieldName) || \"parentType\".equals(currentFieldName)) {\n                    parentType = parser.text();\n                } else if (\"_scope\".equals(currentFieldName)) {\n                    throw new QueryParsingException(parseContext.index(), \"the [_scope] support in [has_parent] filter has been removed, use a filter as a facet_filter in the relevant global facet\");\n                } else if (\"_name\".equals(currentFieldName)) {\n                    filterName = parser.text();\n                } else if (\"execution_type\".equals(currentFieldName) || \"executionType\".equals(currentFieldName)) { // This option is experimental and will most likely be removed.\n                    executionType = parser.text();\n                } else {\n                    throw new QueryParsingException(parseContext.index(), \"[has_parent] filter does not support [\" + currentFieldName + \"]\");\n                }\n            }\n        }\n        if (!queryFound) {\n            throw new QueryParsingException(parseContext.index(), \"[parent] filter requires 'query' field\");\n        }\n        if (query == null) {\n            return null;\n        }\n\n        if (parentType == null) {\n            throw new QueryParsingException(parseContext.index(), \"[parent] filter requires 'parent_type' field\");\n        }\n\n        DocumentMapper parentDocMapper = parseContext.mapperService().documentMapper(parentType);\n        if (parentDocMapper == null) {\n            throw new QueryParsingException(parseContext.index(), \"[parent] filter configured 'parent_type' [\" + parentType + \"] is not a valid type\");\n        }\n\n        // wrap the query with type query\n        query = new XFilteredQuery(query, parseContext.cacheFilter(parentDocMapper.typeFilter(), null));\n\n        SearchContext searchContext = SearchContext.current();\n\n        HasParentFilter parentFilter = HasParentFilter.create(executionType, query, parentType, searchContext);\n        searchContext.addRewrite(parentFilter);\n\n        if (filterName != null) {\n            parseContext.addNamedFilter(filterName, parentFilter);\n        }\n        return parentFilter;\n    }","id":63904,"modified_method":"@Override\n    public Filter parse(QueryParseContext parseContext) throws IOException, QueryParsingException {\n        XContentParser parser = parseContext.parser();\n\n        Query query = null;\n        boolean queryFound = false;\n        String parentType = null;\n\n        String filterName = null;\n        String currentFieldName = null;\n        XContentParser.Token token;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (token == XContentParser.Token.START_OBJECT) {\n                if (\"query\".equals(currentFieldName)) {\n                    // TODO handle `query` element before `type` element...\n                    String[] origTypes = QueryParseContext.setTypesWithPrevious(parentType == null ? null : new String[]{parentType});\n                    try {\n                        query = parseContext.parseInnerQuery();\n                        queryFound = true;\n                    } finally {\n                        QueryParseContext.setTypes(origTypes);\n                    }\n                } else if (\"filter\".equals(currentFieldName)) {\n                    // TODO handle `filter` element before `type` element...\n                    String[] origTypes = QueryParseContext.setTypesWithPrevious(parentType == null ? null : new String[]{parentType});\n                    try {\n                        Filter innerFilter = parseContext.parseInnerFilter();\n                        query = new XConstantScoreQuery(innerFilter);\n                        queryFound = true;\n                    } finally {\n                        QueryParseContext.setTypes(origTypes);\n                    }\n                } else {\n                    throw new QueryParsingException(parseContext.index(), \"[has_parent] filter does not support [\" + currentFieldName + \"]\");\n                }\n            } else if (token.isValue()) {\n                if (\"type\".equals(currentFieldName) || \"parent_type\".equals(currentFieldName) || \"parentType\".equals(currentFieldName)) {\n                    parentType = parser.text();\n                } else if (\"_scope\".equals(currentFieldName)) {\n                    throw new QueryParsingException(parseContext.index(), \"the [_scope] support in [has_parent] filter has been removed, use a filter as a facet_filter in the relevant global facet\");\n                } else if (\"_name\".equals(currentFieldName)) {\n                    filterName = parser.text();\n                } else {\n                    throw new QueryParsingException(parseContext.index(), \"[has_parent] filter does not support [\" + currentFieldName + \"]\");\n                }\n            }\n        }\n        if (!queryFound) {\n            throw new QueryParsingException(parseContext.index(), \"[parent] filter requires 'query' field\");\n        }\n        if (query == null) {\n            return null;\n        }\n\n        if (parentType == null) {\n            throw new QueryParsingException(parseContext.index(), \"[parent] filter requires 'parent_type' field\");\n        }\n\n        DocumentMapper parentDocMapper = parseContext.mapperService().documentMapper(parentType);\n        if (parentDocMapper == null) {\n            throw new QueryParsingException(parseContext.index(), \"[parent] filter configured 'parent_type' [\" + parentType + \"] is not a valid type\");\n        }\n\n        // wrap the query with type query\n        query = new XFilteredQuery(query, parseContext.cacheFilter(parentDocMapper.typeFilter(), null));\n\n        SearchContext searchContext = SearchContext.current();\n\n        HasParentFilter parentFilter = HasParentFilter.create(query, parentType, searchContext);\n        searchContext.addRewrite(parentFilter);\n\n        if (filterName != null) {\n            parseContext.addNamedFilter(filterName, parentFilter);\n        }\n        return parentFilter;\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"protected void doXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject(HasParentQueryParser.NAME);\n        builder.field(\"query\");\n        queryBuilder.toXContent(builder, params);\n        builder.field(\"parent_type\", parentType);\n        if (scoreType != null) {\n            builder.field(\"score_type\", scoreType);\n        }\n        if (executionType != null) {\n            builder.field(\"execution_type\", executionType);\n        }\n        if (boost != 1.0f) {\n            builder.field(\"boost\", boost);\n        }\n        builder.endObject();\n    }","id":63905,"modified_method":"protected void doXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject(HasParentQueryParser.NAME);\n        builder.field(\"query\");\n        queryBuilder.toXContent(builder, params);\n        builder.field(\"parent_type\", parentType);\n        if (scoreType != null) {\n            builder.field(\"score_type\", scoreType);\n        }\n        if (boost != 1.0f) {\n            builder.field(\"boost\", boost);\n        }\n        builder.endObject();\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public Query parse(QueryParseContext parseContext) throws IOException, QueryParsingException {\n        XContentParser parser = parseContext.parser();\n\n        Query innerQuery = null;\n        boolean queryFound = false;\n        float boost = 1.0f;\n        String parentType = null;\n        boolean score = false;\n        String executionType = \"uid\";\n\n        String currentFieldName = null;\n        XContentParser.Token token;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (token == XContentParser.Token.START_OBJECT) {\n                if (\"query\".equals(currentFieldName)) {\n                    // TODO handle `query` element before `type` element...\n                    String[] origTypes = QueryParseContext.setTypesWithPrevious(parentType == null ? null : new String[]{parentType});\n                    try {\n                        innerQuery = parseContext.parseInnerQuery();\n                        queryFound = true;\n                    } finally {\n                        QueryParseContext.setTypes(origTypes);\n                    }\n                } else {\n                    throw new QueryParsingException(parseContext.index(), \"[has_parent] query does not support [\" + currentFieldName + \"]\");\n                }\n            } else if (token.isValue()) {\n                if (\"type\".equals(currentFieldName) || \"parent_type\".equals(currentFieldName) || \"parentType\".equals(currentFieldName)) {\n                    parentType = parser.text();\n                } else if (\"_scope\".equals(currentFieldName)) {\n                    throw new QueryParsingException(parseContext.index(), \"the [_scope] support in [has_parent] query has been removed, use a filter as a facet_filter in the relevant global facet\");\n                } else if (\"execution_type\".equals(currentFieldName) || \"executionType\".equals(currentFieldName)) {\n                    executionType = parser.text();\n                } else if (\"score_type\".equals(currentFieldName) || \"scoreType\".equals(currentFieldName)) {\n                    String scoreTypeValue = parser.text();\n                    if (\"score\".equals(scoreTypeValue)) {\n                        score = true;\n                    } else if (\"none\".equals(scoreTypeValue)) {\n                        score = false;\n                    }\n                } else if (\"boost\".equals(currentFieldName)) {\n                    boost = parser.floatValue();\n                } else {\n                    throw new QueryParsingException(parseContext.index(), \"[has_parent] query does not support [\" + currentFieldName + \"]\");\n                }\n            }\n        }\n        if (!queryFound) {\n            throw new QueryParsingException(parseContext.index(), \"[parent] query requires 'query' field\");\n        }\n        if (innerQuery == null) {\n            return null;\n        }\n\n        if (parentType == null) {\n            throw new QueryParsingException(parseContext.index(), \"[parent] query requires 'parent_type' field\");\n        }\n\n        DocumentMapper parentDocMapper = parseContext.mapperService().documentMapper(parentType);\n        if (parentDocMapper == null) {\n            throw new QueryParsingException(parseContext.index(), \"[parent] query configured 'parent_type' [\" + parentType + \"] is not a valid type\");\n        }\n\n        List<String> childTypes = new ArrayList<String>(2);\n        for (DocumentMapper documentMapper : parseContext.mapperService()) {\n            ParentFieldMapper parentFieldMapper = documentMapper.parentFieldMapper();\n            if (parentFieldMapper == null) {\n                continue;\n            }\n\n            if (parentDocMapper.type().equals(parentFieldMapper.type())) {\n                childTypes.add(documentMapper.type());\n            }\n        }\n\n        Filter childFilter;\n        if (childTypes.size() == 1) {\n            DocumentMapper documentMapper = parseContext.mapperService().documentMapper(childTypes.get(0));\n            childFilter = parseContext.cacheFilter(documentMapper.typeFilter(), null);\n        } else {\n            XBooleanFilter childrenFilter = new XBooleanFilter();\n            for (String childType : childTypes) {\n                DocumentMapper documentMapper = parseContext.mapperService().documentMapper(childType);\n                Filter filter = parseContext.cacheFilter(documentMapper.typeFilter(), null);\n                childrenFilter.add(filter, BooleanClause.Occur.SHOULD);\n            }\n            childFilter = childrenFilter;\n        }\n\n        innerQuery.setBoost(boost);\n        // wrap the query with type query\n        innerQuery = new XFilteredQuery(innerQuery, parseContext.cacheFilter(parentDocMapper.typeFilter(), null));\n        SearchContext searchContext = SearchContext.current();\n        Query query;\n        if (score) {\n            ParentQuery parentQuery = new ParentQuery(searchContext, innerQuery, parentType, childTypes, childFilter);\n            searchContext.addRewrite(parentQuery);\n            query = parentQuery;\n        } else {\n            HasParentFilter hasParentFilter = HasParentFilter.create(executionType, innerQuery, parentType, searchContext);\n            searchContext.addRewrite(hasParentFilter);\n            query = new ConstantScoreQuery(hasParentFilter);\n        }\n        query.setBoost(boost);\n        return query;\n    }","id":63906,"modified_method":"@Override\n    public Query parse(QueryParseContext parseContext) throws IOException, QueryParsingException {\n        XContentParser parser = parseContext.parser();\n\n        Query innerQuery = null;\n        boolean queryFound = false;\n        float boost = 1.0f;\n        String parentType = null;\n        boolean score = false;\n\n        String currentFieldName = null;\n        XContentParser.Token token;\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                currentFieldName = parser.currentName();\n            } else if (token == XContentParser.Token.START_OBJECT) {\n                if (\"query\".equals(currentFieldName)) {\n                    // TODO handle `query` element before `type` element...\n                    String[] origTypes = QueryParseContext.setTypesWithPrevious(parentType == null ? null : new String[]{parentType});\n                    try {\n                        innerQuery = parseContext.parseInnerQuery();\n                        queryFound = true;\n                    } finally {\n                        QueryParseContext.setTypes(origTypes);\n                    }\n                } else {\n                    throw new QueryParsingException(parseContext.index(), \"[has_parent] query does not support [\" + currentFieldName + \"]\");\n                }\n            } else if (token.isValue()) {\n                if (\"type\".equals(currentFieldName) || \"parent_type\".equals(currentFieldName) || \"parentType\".equals(currentFieldName)) {\n                    parentType = parser.text();\n                } else if (\"_scope\".equals(currentFieldName)) {\n                    throw new QueryParsingException(parseContext.index(), \"the [_scope] support in [has_parent] query has been removed, use a filter as a facet_filter in the relevant global facet\");\n                } else if (\"score_type\".equals(currentFieldName) || \"scoreType\".equals(currentFieldName)) {\n                    String scoreTypeValue = parser.text();\n                    if (\"score\".equals(scoreTypeValue)) {\n                        score = true;\n                    } else if (\"none\".equals(scoreTypeValue)) {\n                        score = false;\n                    }\n                } else if (\"boost\".equals(currentFieldName)) {\n                    boost = parser.floatValue();\n                } else {\n                    throw new QueryParsingException(parseContext.index(), \"[has_parent] query does not support [\" + currentFieldName + \"]\");\n                }\n            }\n        }\n        if (!queryFound) {\n            throw new QueryParsingException(parseContext.index(), \"[parent] query requires 'query' field\");\n        }\n        if (innerQuery == null) {\n            return null;\n        }\n\n        if (parentType == null) {\n            throw new QueryParsingException(parseContext.index(), \"[parent] query requires 'parent_type' field\");\n        }\n\n        DocumentMapper parentDocMapper = parseContext.mapperService().documentMapper(parentType);\n        if (parentDocMapper == null) {\n            throw new QueryParsingException(parseContext.index(), \"[parent] query configured 'parent_type' [\" + parentType + \"] is not a valid type\");\n        }\n\n        List<String> childTypes = new ArrayList<String>(2);\n        for (DocumentMapper documentMapper : parseContext.mapperService()) {\n            ParentFieldMapper parentFieldMapper = documentMapper.parentFieldMapper();\n            if (parentFieldMapper == null) {\n                continue;\n            }\n\n            if (parentDocMapper.type().equals(parentFieldMapper.type())) {\n                childTypes.add(documentMapper.type());\n            }\n        }\n\n        Filter childFilter;\n        if (childTypes.size() == 1) {\n            DocumentMapper documentMapper = parseContext.mapperService().documentMapper(childTypes.get(0));\n            childFilter = parseContext.cacheFilter(documentMapper.typeFilter(), null);\n        } else {\n            XBooleanFilter childrenFilter = new XBooleanFilter();\n            for (String childType : childTypes) {\n                DocumentMapper documentMapper = parseContext.mapperService().documentMapper(childType);\n                Filter filter = parseContext.cacheFilter(documentMapper.typeFilter(), null);\n                childrenFilter.add(filter, BooleanClause.Occur.SHOULD);\n            }\n            childFilter = childrenFilter;\n        }\n\n        innerQuery.setBoost(boost);\n        // wrap the query with type query\n        innerQuery = new XFilteredQuery(innerQuery, parseContext.cacheFilter(parentDocMapper.typeFilter(), null));\n        SearchContext searchContext = SearchContext.current();\n        Query query;\n        if (score) {\n            ParentQuery parentQuery = new ParentQuery(searchContext, innerQuery, parentType, childTypes, childFilter);\n            searchContext.addRewrite(parentQuery);\n            query = parentQuery;\n        } else {\n            HasParentFilter hasParentFilter = HasParentFilter.create(innerQuery, parentType, searchContext);\n            searchContext.addRewrite(hasParentFilter);\n            query = new ConstantScoreQuery(hasParentFilter);\n        }\n        query.setBoost(boost);\n        return query;\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testDeletedParent() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n\n        client.admin().indices().prepareCreate(\"test\")\n                .setSettings(\n                        ImmutableSettings.settingsBuilder()\n                                .put(\"index.number_of_shards\", 1)\n                                .put(\"index.number_of_replicas\", 0)\n                ).execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n        client.admin().indices().preparePutMapping(\"test\").setType(\"child\").setSource(jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"_parent\").field(\"type\", \"parent\").endObject()\n                .endObject().endObject()).execute().actionGet();\n\n        // index simple data\n        client.prepareIndex(\"test\", \"parent\", \"p1\").setSource(\"p_field\", \"p_value1\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c1\").setSource(\"c_field\", \"red\").setParent(\"p1\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c2\").setSource(\"c_field\", \"yellow\").setParent(\"p1\").execute().actionGet();\n        client.prepareIndex(\"test\", \"parent\", \"p2\").setSource(\"p_field\", \"p_value2\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c3\").setSource(\"c_field\", \"blue\").setParent(\"p2\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c4\").setSource(\"c_field\", \"red\").setParent(\"p2\").execute().actionGet();\n\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        // TOP CHILDREN QUERY\n\n        SearchResponse searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"yellow\"))).execute().actionGet();\n        if (searchResponse.failedShards() > 0) {\n            logger.warn(\"Failed shards:\");\n            for (ShardSearchFailure shardSearchFailure : searchResponse.shardFailures()) {\n                logger.warn(\"-> {}\", shardSearchFailure);\n            }\n        }\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n        assertThat(searchResponse.hits().getAt(0).sourceAsString(), containsString(\"\\\"p_value1\\\"\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"yellow\")).executionType(getExecutionMethod()))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n        assertThat(searchResponse.hits().getAt(0).sourceAsString(), containsString(\"\\\"p_value1\\\"\"));\n\n        // update p1 and see what that we get updated values...\n\n        client.prepareIndex(\"test\", \"parent\", \"p1\").setSource(\"p_field\", \"p_value1_updated\").execute().actionGet();\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"yellow\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n        assertThat(searchResponse.hits().getAt(0).sourceAsString(), containsString(\"\\\"p_value1_updated\\\"\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"yellow\")).executionType(getExecutionMethod()))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n        assertThat(searchResponse.hits().getAt(0).sourceAsString(), containsString(\"\\\"p_value1_updated\\\"\"));\n    }","id":63907,"modified_method":"@Test\n    public void testDeletedParent() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n\n        client.admin().indices().prepareCreate(\"test\")\n                .setSettings(\n                        ImmutableSettings.settingsBuilder()\n                                .put(\"index.number_of_shards\", 1)\n                                .put(\"index.number_of_replicas\", 0)\n                ).execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n        client.admin().indices().preparePutMapping(\"test\").setType(\"child\").setSource(jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"_parent\").field(\"type\", \"parent\").endObject()\n                .endObject().endObject()).execute().actionGet();\n\n        // index simple data\n        client.prepareIndex(\"test\", \"parent\", \"p1\").setSource(\"p_field\", \"p_value1\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c1\").setSource(\"c_field\", \"red\").setParent(\"p1\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c2\").setSource(\"c_field\", \"yellow\").setParent(\"p1\").execute().actionGet();\n        client.prepareIndex(\"test\", \"parent\", \"p2\").setSource(\"p_field\", \"p_value2\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c3\").setSource(\"c_field\", \"blue\").setParent(\"p2\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c4\").setSource(\"c_field\", \"red\").setParent(\"p2\").execute().actionGet();\n\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        // TOP CHILDREN QUERY\n\n        SearchResponse searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"yellow\"))).execute().actionGet();\n        if (searchResponse.failedShards() > 0) {\n            logger.warn(\"Failed shards:\");\n            for (ShardSearchFailure shardSearchFailure : searchResponse.shardFailures()) {\n                logger.warn(\"-> {}\", shardSearchFailure);\n            }\n        }\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n        assertThat(searchResponse.hits().getAt(0).sourceAsString(), containsString(\"\\\"p_value1\\\"\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"yellow\")))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n        assertThat(searchResponse.hits().getAt(0).sourceAsString(), containsString(\"\\\"p_value1\\\"\"));\n\n        // update p1 and see what that we get updated values...\n\n        client.prepareIndex(\"test\", \"parent\", \"p1\").setSource(\"p_field\", \"p_value1_updated\").execute().actionGet();\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"yellow\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n        assertThat(searchResponse.hits().getAt(0).sourceAsString(), containsString(\"\\\"p_value1_updated\\\"\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"yellow\")))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n        assertThat(searchResponse.hits().getAt(0).sourceAsString(), containsString(\"\\\"p_value1_updated\\\"\"));\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void multiLevelChild() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n\n        client.admin().indices().prepareCreate(\"test\")\n                .setSettings(\n                        ImmutableSettings.settingsBuilder()\n                                .put(\"index.number_of_shards\", 1)\n                                .put(\"index.number_of_replicas\", 0)\n                ).execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n        client.admin().indices().preparePutMapping(\"test\").setType(\"child\").setSource(jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"_parent\").field(\"type\", \"parent\").endObject()\n                .endObject().endObject()).execute().actionGet();\n        client.admin().indices().preparePutMapping(\"test\").setType(\"grandchild\").setSource(jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"_parent\").field(\"type\", \"child\").endObject()\n                .endObject().endObject()).execute().actionGet();\n\n        client.prepareIndex(\"test\", \"parent\", \"p1\").setSource(\"p_field\", \"p_value1\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c1\").setSource(\"c_field\", \"c_value1\").setParent(\"p1\").execute().actionGet();\n        client.prepareIndex(\"test\", \"grandchild\", \"gc1\").setSource(\"gc_field\", \"gc_value1\").setParent(\"c1\").setRouting(\"gc1\").execute().actionGet();\n\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        SearchResponse searchResponse = client.prepareSearch(\"test\")\n                .setQuery(\n                        filteredQuery(\n                                matchAllQuery(),\n                                hasChildFilter(\n                                        \"child\",\n                                        filteredQuery(termQuery(\"c_field\", \"c_value1\"), hasChildFilter(\"grandchild\", termQuery(\"gc_field\", \"gc_value1\")).executionType(getExecutionMethod()))\n                                ).executionType(getExecutionMethod())\n                        )\n                )\n                .execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n    }","id":63908,"modified_method":"@Test\n    public void multiLevelChild() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n\n        client.admin().indices().prepareCreate(\"test\")\n                .setSettings(\n                        ImmutableSettings.settingsBuilder()\n                                .put(\"index.number_of_shards\", 1)\n                                .put(\"index.number_of_replicas\", 0)\n                ).execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n        client.admin().indices().preparePutMapping(\"test\").setType(\"child\").setSource(jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"_parent\").field(\"type\", \"parent\").endObject()\n                .endObject().endObject()).execute().actionGet();\n        client.admin().indices().preparePutMapping(\"test\").setType(\"grandchild\").setSource(jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"_parent\").field(\"type\", \"child\").endObject()\n                .endObject().endObject()).execute().actionGet();\n\n        client.prepareIndex(\"test\", \"parent\", \"p1\").setSource(\"p_field\", \"p_value1\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c1\").setSource(\"c_field\", \"c_value1\").setParent(\"p1\").execute().actionGet();\n        client.prepareIndex(\"test\", \"grandchild\", \"gc1\").setSource(\"gc_field\", \"gc_value1\").setParent(\"c1\").setRouting(\"gc1\").execute().actionGet();\n\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        SearchResponse searchResponse = client.prepareSearch(\"test\")\n                .setQuery(\n                        filteredQuery(\n                                matchAllQuery(),\n                                hasChildFilter(\n                                        \"child\",\n                                        filteredQuery(termQuery(\"c_field\", \"c_value1\"), hasChildFilter(\"grandchild\", termQuery(\"gc_field\", \"gc_value1\")))\n                                )\n                        )\n                )\n                .execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    // https://github.com/elasticsearch/elasticsearch/issues/2536\n    public void testParentChildQueriesCanHandleNoRelevantTypesInIndex() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n\n        client.admin().indices().prepareCreate(\"test\")\n                .addMapping(\"parent\", jsonBuilder()\n                        .startObject()\n                        .startObject(\"parent\")\n                        .endObject()\n                        .endObject()\n                ).addMapping(\"child\", jsonBuilder()\n                .startObject()\n                .startObject(\"child\")\n                .startObject(\"_parent\")\n                .field(\"type\", \"parent\")\n                .endObject()\n                .endObject()\n                .endObject()\n        ).setSettings(\n                ImmutableSettings.settingsBuilder()\n                        .put(\"index.number_of_shards\", 1)\n                        .put(\"index.number_of_replicas\", 0)\n        ).execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n\n        SearchResponse response = client.prepareSearch(\"test\")\n                .setQuery(QueryBuilders.hasChildQuery(\"child\", matchQuery(\"text\", \"value\")))\n                .execute().actionGet();\n        assertThat(response.failedShards(), equalTo(0));\n        assertThat(response.hits().totalHits(), equalTo(0l));\n\n        client.prepareIndex(\"test\", \"child1\").setSource(jsonBuilder().startObject().field(\"text\", \"value\").endObject())\n                .setRefresh(true)\n                .execute().actionGet();\n\n        client.prepareSearch(\"test\")\n                .setQuery(QueryBuilders.hasChildQuery(\"child\", matchQuery(\"text\", \"value\")).executionType(getExecutionMethod()))\n                .execute().actionGet();\n        assertThat(response.failedShards(), equalTo(0));\n        assertThat(response.hits().totalHits(), equalTo(0l));\n\n        client.prepareSearch(\"test\")\n                .setQuery(QueryBuilders.hasChildQuery(\"child\", matchQuery(\"text\", \"value\")).scoreType(\"max\"))\n                .execute().actionGet();\n        assertThat(response.failedShards(), equalTo(0));\n        assertThat(response.hits().totalHits(), equalTo(0l));\n\n        client.prepareSearch(\"test\")\n                .setQuery(QueryBuilders.hasParentQuery(\"child\", matchQuery(\"text\", \"value\")).executionType(getExecutionMethod()))\n                .execute().actionGet();\n        assertThat(response.failedShards(), equalTo(0));\n        assertThat(response.hits().totalHits(), equalTo(0l));\n\n        client.prepareSearch(\"test\")\n                .setQuery(QueryBuilders.hasParentQuery(\"child\", matchQuery(\"text\", \"value\")).scoreType(\"score\"))\n                .execute().actionGet();\n        assertThat(response.failedShards(), equalTo(0));\n        assertThat(response.hits().totalHits(), equalTo(0l));\n    }","id":63909,"modified_method":"@Test\n    // https://github.com/elasticsearch/elasticsearch/issues/2536\n    public void testParentChildQueriesCanHandleNoRelevantTypesInIndex() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n\n        client.admin().indices().prepareCreate(\"test\")\n                .addMapping(\"parent\", jsonBuilder()\n                        .startObject()\n                        .startObject(\"parent\")\n                        .endObject()\n                        .endObject()\n                ).addMapping(\"child\", jsonBuilder()\n                .startObject()\n                .startObject(\"child\")\n                .startObject(\"_parent\")\n                .field(\"type\", \"parent\")\n                .endObject()\n                .endObject()\n                .endObject()\n        ).setSettings(\n                ImmutableSettings.settingsBuilder()\n                        .put(\"index.number_of_shards\", 1)\n                        .put(\"index.number_of_replicas\", 0)\n        ).execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n\n        SearchResponse response = client.prepareSearch(\"test\")\n                .setQuery(QueryBuilders.hasChildQuery(\"child\", matchQuery(\"text\", \"value\")))\n                .execute().actionGet();\n        assertThat(response.failedShards(), equalTo(0));\n        assertThat(response.hits().totalHits(), equalTo(0l));\n\n        client.prepareIndex(\"test\", \"child1\").setSource(jsonBuilder().startObject().field(\"text\", \"value\").endObject())\n                .setRefresh(true)\n                .execute().actionGet();\n\n        client.prepareSearch(\"test\")\n                .setQuery(QueryBuilders.hasChildQuery(\"child\", matchQuery(\"text\", \"value\")))\n                .execute().actionGet();\n        assertThat(response.failedShards(), equalTo(0));\n        assertThat(response.hits().totalHits(), equalTo(0l));\n\n        client.prepareSearch(\"test\")\n                .setQuery(QueryBuilders.hasChildQuery(\"child\", matchQuery(\"text\", \"value\")).scoreType(\"max\"))\n                .execute().actionGet();\n        assertThat(response.failedShards(), equalTo(0));\n        assertThat(response.hits().totalHits(), equalTo(0l));\n\n        client.prepareSearch(\"test\")\n                .setQuery(QueryBuilders.hasParentQuery(\"child\", matchQuery(\"text\", \"value\")))\n                .execute().actionGet();\n        assertThat(response.failedShards(), equalTo(0));\n        assertThat(response.hits().totalHits(), equalTo(0l));\n\n        client.prepareSearch(\"test\")\n                .setQuery(QueryBuilders.hasParentQuery(\"child\", matchQuery(\"text\", \"value\")).scoreType(\"score\"))\n                .execute().actionGet();\n        assertThat(response.failedShards(), equalTo(0));\n        assertThat(response.hits().totalHits(), equalTo(0l));\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testCountApiUsage() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n\n        client.admin().indices().prepareCreate(\"test\")\n                .setSettings(\n                        ImmutableSettings.settingsBuilder()\n                                .put(\"index.number_of_shards\", 1)\n                                .put(\"index.number_of_replicas\", 0)\n                ).execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n        client.admin().indices().preparePutMapping(\"test\").setType(\"child\").setSource(jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"_parent\").field(\"type\", \"parent\").endObject()\n                .endObject().endObject()).execute().actionGet();\n\n        String parentId = \"p1\";\n        client.prepareIndex(\"test\", \"parent\", parentId)\n                .setSource(\"p_field\", \"p_value1\")\n                .execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", parentId + \"_c1\")\n                .setSource(\"c_field1\", parentId)\n                .setParent(parentId)\n                .execute().actionGet();\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        CountResponse countResponse = client.prepareCount(\"test\")\n                .setQuery(topChildrenQuery(\"child\", termQuery(\"c_field1\", \"1\")))\n                .execute().actionGet();\n        assertThat(countResponse.failedShards(), equalTo(1));\n        assertThat(countResponse.shardFailures().get(0).reason().contains(\"top_children query hasn't executed properly\"), equalTo(true));\n\n        countResponse = client.prepareCount(\"test\")\n                .setQuery(hasChildQuery(\"child\", termQuery(\"c_field1\", \"2\")).scoreType(\"max\"))\n                .execute().actionGet();\n        assertThat(countResponse.failedShards(), equalTo(1));\n        assertThat(countResponse.shardFailures().get(0).reason().contains(\"has_child query hasn't executed properly\"), equalTo(true));\n\n        countResponse = client.prepareCount(\"test\")\n                .setQuery(hasParentQuery(\"parent\", termQuery(\"p_field1\", \"1\")).scoreType(\"score\"))\n                .execute().actionGet();\n        assertThat(countResponse.failedShards(), equalTo(1));\n        assertThat(countResponse.shardFailures().get(0).reason().contains(\"has_parent query hasn't executed properly\"), equalTo(true));\n\n        countResponse = client.prepareCount(\"test\")\n                .setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field1\", \"2\")).executionType(getExecutionMethod())))\n                .execute().actionGet();\n        assertThat(countResponse.failedShards(), equalTo(1));\n        assertThat(countResponse.shardFailures().get(0).reason().contains(\"has_child filter hasn't executed properly\"), equalTo(true));\n\n        countResponse = client.prepareCount(\"test\")\n                .setQuery(constantScoreQuery(hasParentFilter(\"parent\", termQuery(\"p_field1\", \"1\")).executionType(getExecutionMethod())))\n                .execute().actionGet();\n        assertThat(countResponse.failedShards(), equalTo(1));\n        assertThat(countResponse.shardFailures().get(0).reason().contains(\"has_parent filter hasn't executed properly\"), equalTo(true));\n    }","id":63910,"modified_method":"@Test\n    public void testCountApiUsage() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n\n        client.admin().indices().prepareCreate(\"test\")\n                .setSettings(\n                        ImmutableSettings.settingsBuilder()\n                                .put(\"index.number_of_shards\", 1)\n                                .put(\"index.number_of_replicas\", 0)\n                ).execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n        client.admin().indices().preparePutMapping(\"test\").setType(\"child\").setSource(jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"_parent\").field(\"type\", \"parent\").endObject()\n                .endObject().endObject()).execute().actionGet();\n\n        String parentId = \"p1\";\n        client.prepareIndex(\"test\", \"parent\", parentId)\n                .setSource(\"p_field\", \"p_value1\")\n                .execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", parentId + \"_c1\")\n                .setSource(\"c_field1\", parentId)\n                .setParent(parentId)\n                .execute().actionGet();\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        CountResponse countResponse = client.prepareCount(\"test\")\n                .setQuery(topChildrenQuery(\"child\", termQuery(\"c_field1\", \"1\")))\n                .execute().actionGet();\n        assertThat(countResponse.failedShards(), equalTo(1));\n        assertThat(countResponse.shardFailures().get(0).reason().contains(\"top_children query hasn't executed properly\"), equalTo(true));\n\n        countResponse = client.prepareCount(\"test\")\n                .setQuery(hasChildQuery(\"child\", termQuery(\"c_field1\", \"2\")).scoreType(\"max\"))\n                .execute().actionGet();\n        assertThat(countResponse.failedShards(), equalTo(1));\n        assertThat(countResponse.shardFailures().get(0).reason().contains(\"has_child query hasn't executed properly\"), equalTo(true));\n\n        countResponse = client.prepareCount(\"test\")\n                .setQuery(hasParentQuery(\"parent\", termQuery(\"p_field1\", \"1\")).scoreType(\"score\"))\n                .execute().actionGet();\n        assertThat(countResponse.failedShards(), equalTo(1));\n        assertThat(countResponse.shardFailures().get(0).reason().contains(\"has_parent query hasn't executed properly\"), equalTo(true));\n\n        countResponse = client.prepareCount(\"test\")\n                .setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field1\", \"2\"))))\n                .execute().actionGet();\n        assertThat(countResponse.failedShards(), equalTo(1));\n        assertThat(countResponse.shardFailures().get(0).reason().contains(\"has_child filter hasn't executed properly\"), equalTo(true));\n\n        countResponse = client.prepareCount(\"test\")\n                .setQuery(constantScoreQuery(hasParentFilter(\"parent\", termQuery(\"p_field1\", \"1\"))))\n                .execute().actionGet();\n        assertThat(countResponse.failedShards(), equalTo(1));\n        assertThat(countResponse.shardFailures().get(0).reason().contains(\"has_parent filter hasn't executed properly\"), equalTo(true));\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void simpleChildQueryWithFlush() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n\n        client.admin().indices().prepareCreate(\"test\")\n                .setSettings(\n                        ImmutableSettings.settingsBuilder()\n                                .put(\"index.number_of_shards\", 1)\n                                .put(\"index.number_of_replicas\", 0)\n                ).execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n        client.admin().indices().preparePutMapping(\"test\").setType(\"child\").setSource(jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"_parent\").field(\"type\", \"parent\").endObject()\n                .endObject().endObject()).execute().actionGet();\n\n        // index simple data with flushes, so we have many segments\n        client.prepareIndex(\"test\", \"parent\", \"p1\").setSource(\"p_field\", \"p_value1\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c1\").setSource(\"c_field\", \"red\").setParent(\"p1\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c2\").setSource(\"c_field\", \"yellow\").setParent(\"p1\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"parent\", \"p2\").setSource(\"p_field\", \"p_value2\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c3\").setSource(\"c_field\", \"blue\").setParent(\"p2\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c4\").setSource(\"c_field\", \"red\").setParent(\"p2\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        // TOP CHILDREN QUERY\n\n        SearchResponse searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"yellow\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"blue\"))).execute().actionGet();\n        if (searchResponse.failedShards() > 0) {\n            logger.warn(\"Failed shards:\");\n            for (ShardSearchFailure shardSearchFailure : searchResponse.shardFailures()) {\n                logger.warn(\"-> {}\", shardSearchFailure);\n            }\n        }\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"red\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n\n        // HAS CHILD QUERY\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"yellow\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"blue\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"red\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n\n        // HAS CHILD FILTER\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"yellow\")).executionType(getExecutionMethod()))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"blue\")).executionType(getExecutionMethod()))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"red\")).executionType(getExecutionMethod()))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n    }","id":63911,"modified_method":"@Test\n    public void simpleChildQueryWithFlush() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n\n        client.admin().indices().prepareCreate(\"test\")\n                .setSettings(\n                        ImmutableSettings.settingsBuilder()\n                                .put(\"index.number_of_shards\", 1)\n                                .put(\"index.number_of_replicas\", 0)\n                ).execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n        client.admin().indices().preparePutMapping(\"test\").setType(\"child\").setSource(jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"_parent\").field(\"type\", \"parent\").endObject()\n                .endObject().endObject()).execute().actionGet();\n\n        // index simple data with flushes, so we have many segments\n        client.prepareIndex(\"test\", \"parent\", \"p1\").setSource(\"p_field\", \"p_value1\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c1\").setSource(\"c_field\", \"red\").setParent(\"p1\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c2\").setSource(\"c_field\", \"yellow\").setParent(\"p1\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"parent\", \"p2\").setSource(\"p_field\", \"p_value2\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c3\").setSource(\"c_field\", \"blue\").setParent(\"p2\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c4\").setSource(\"c_field\", \"red\").setParent(\"p2\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        // TOP CHILDREN QUERY\n\n        SearchResponse searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"yellow\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"blue\"))).execute().actionGet();\n        if (searchResponse.failedShards() > 0) {\n            logger.warn(\"Failed shards:\");\n            for (ShardSearchFailure shardSearchFailure : searchResponse.shardFailures()) {\n                logger.warn(\"-> {}\", shardSearchFailure);\n            }\n        }\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"red\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n\n        // HAS CHILD QUERY\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"yellow\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"blue\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"red\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n\n        // HAS CHILD FILTER\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"yellow\")))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"blue\")))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"red\")))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testHasParentFilter() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n        client.admin().indices().prepareCreate(\"test\")\n                .setSettings(\n                        ImmutableSettings.settingsBuilder()\n                                .put(\"index.number_of_shards\", 1)\n                                .put(\"index.number_of_replicas\", 0)\n                ).execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n        client.admin().indices().preparePutMapping(\"test\").setType(\"child\").setSource(jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"_parent\").field(\"type\", \"parent\").endObject()\n                .endObject().endObject()).execute().actionGet();\n\n        Map<String, List<String>> parentToChildren = newHashMap();\n        // Childless parent\n        client.prepareIndex(\"test\", \"parent\", \"p0\").setSource(\"p_field\", \"p0\").execute().actionGet();\n        parentToChildren.put(\"p0\", new ArrayList<String>());\n\n        String previousParentId = null;\n        int numChildDocs = 32;\n        int numChildDocsPerParent = 0;\n        for (int i = 1; i <= numChildDocs; i++) {\n            if (previousParentId == null || i % numChildDocsPerParent == 0) {\n                previousParentId = \"p\" + i;\n                client.prepareIndex(\"test\", \"parent\", previousParentId).setSource(\"p_field\", previousParentId).execute().actionGet();\n                client.admin().indices().prepareFlush(\"test\").execute().actionGet();\n                numChildDocsPerParent++;\n            }\n\n            String childId = \"c\" + i;\n            client.prepareIndex(\"test\", \"child\", childId)\n                    .setSource(\"c_field\", childId)\n                    .setParent(previousParentId)\n                    .execute().actionGet();\n\n            if (!parentToChildren.containsKey(previousParentId)) {\n                parentToChildren.put(previousParentId, new ArrayList<String>());\n            }\n            parentToChildren.get(previousParentId).add(childId);\n        }\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        assertThat(parentToChildren.isEmpty(), equalTo(false));\n        for (Map.Entry<String, List<String>> parentToChildrenEntry : parentToChildren.entrySet()) {\n            SearchResponse searchResponse = client.prepareSearch(\"test\")\n                    .setQuery(constantScoreQuery(hasParentFilter(\"parent\", termQuery(\"p_field\", parentToChildrenEntry.getKey())).executionType(getExecutionMethod())))\n                    .setSize(numChildDocsPerParent)\n                    .execute().actionGet();\n\n            assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n            assertThat(searchResponse.failedShards(), equalTo(0));\n            List<String> childIds = parentToChildrenEntry.getValue();\n            assertThat(searchResponse.hits().totalHits(), equalTo((long) childIds.size()));\n            int counter = 0;\n            for (String childId : childIds) {\n                assertThat(searchResponse.hits().getAt(counter++).id(), equalTo(childId));\n            }\n        }\n    }","id":63912,"modified_method":"@Test\n    public void testHasParentFilter() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n        client.admin().indices().prepareCreate(\"test\")\n                .setSettings(\n                        ImmutableSettings.settingsBuilder()\n                                .put(\"index.number_of_shards\", 1)\n                                .put(\"index.number_of_replicas\", 0)\n                ).execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n        client.admin().indices().preparePutMapping(\"test\").setType(\"child\").setSource(jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"_parent\").field(\"type\", \"parent\").endObject()\n                .endObject().endObject()).execute().actionGet();\n\n        Map<String, List<String>> parentToChildren = newHashMap();\n        // Childless parent\n        client.prepareIndex(\"test\", \"parent\", \"p0\").setSource(\"p_field\", \"p0\").execute().actionGet();\n        parentToChildren.put(\"p0\", new ArrayList<String>());\n\n        String previousParentId = null;\n        int numChildDocs = 32;\n        int numChildDocsPerParent = 0;\n        for (int i = 1; i <= numChildDocs; i++) {\n            if (previousParentId == null || i % numChildDocsPerParent == 0) {\n                previousParentId = \"p\" + i;\n                client.prepareIndex(\"test\", \"parent\", previousParentId).setSource(\"p_field\", previousParentId).execute().actionGet();\n                client.admin().indices().prepareFlush(\"test\").execute().actionGet();\n                numChildDocsPerParent++;\n            }\n\n            String childId = \"c\" + i;\n            client.prepareIndex(\"test\", \"child\", childId)\n                    .setSource(\"c_field\", childId)\n                    .setParent(previousParentId)\n                    .execute().actionGet();\n\n            if (!parentToChildren.containsKey(previousParentId)) {\n                parentToChildren.put(previousParentId, new ArrayList<String>());\n            }\n            parentToChildren.get(previousParentId).add(childId);\n        }\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        assertThat(parentToChildren.isEmpty(), equalTo(false));\n        for (Map.Entry<String, List<String>> parentToChildrenEntry : parentToChildren.entrySet()) {\n            SearchResponse searchResponse = client.prepareSearch(\"test\")\n                    .setQuery(constantScoreQuery(hasParentFilter(\"parent\", termQuery(\"p_field\", parentToChildrenEntry.getKey()))))\n                    .setSize(numChildDocsPerParent)\n                    .execute().actionGet();\n\n            assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n            assertThat(searchResponse.failedShards(), equalTo(0));\n            List<String> childIds = parentToChildrenEntry.getValue();\n            assertThat(searchResponse.hits().totalHits(), equalTo((long) childIds.size()));\n            int counter = 0;\n            for (String childId : childIds) {\n                assertThat(searchResponse.hits().getAt(counter++).id(), equalTo(childId));\n            }\n        }\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void simpleChildQueryWithFlushAnd3Shards() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n\n        client.admin().indices().prepareCreate(\"test\").setSettings(\n                ImmutableSettings.settingsBuilder()\n                        .put(\"index.number_of_shards\", 3)\n                        .put(\"index.number_of_replicas\", 0)\n        ).execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n        client.admin().indices().preparePutMapping(\"test\").setType(\"child\").setSource(jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"_parent\").field(\"type\", \"parent\").endObject()\n                .endObject().endObject()).execute().actionGet();\n\n        // index simple data with flushes, so we have many segments\n        client.prepareIndex(\"test\", \"parent\", \"p1\").setSource(\"p_field\", \"p_value1\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c1\").setSource(\"c_field\", \"red\").setParent(\"p1\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c2\").setSource(\"c_field\", \"yellow\").setParent(\"p1\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"parent\", \"p2\").setSource(\"p_field\", \"p_value2\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c3\").setSource(\"c_field\", \"blue\").setParent(\"p2\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c4\").setSource(\"c_field\", \"red\").setParent(\"p2\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        // TOP CHILDREN QUERY\n\n        SearchResponse searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"yellow\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"blue\"))).execute().actionGet();\n        if (searchResponse.failedShards() > 0) {\n            logger.warn(\"Failed shards:\");\n            for (ShardSearchFailure shardSearchFailure : searchResponse.shardFailures()) {\n                logger.warn(\"-> {}\", shardSearchFailure);\n            }\n        }\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"red\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n\n        // HAS CHILD QUERY\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"yellow\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"blue\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"red\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n\n        // HAS CHILD FILTER\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"yellow\")).executionType(getExecutionMethod()))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"blue\")).executionType(getExecutionMethod()))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"red\")).executionType(getExecutionMethod()))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n    }","id":63913,"modified_method":"@Test\n    public void simpleChildQueryWithFlushAnd3Shards() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n\n        client.admin().indices().prepareCreate(\"test\").setSettings(\n                ImmutableSettings.settingsBuilder()\n                        .put(\"index.number_of_shards\", 3)\n                        .put(\"index.number_of_replicas\", 0)\n        ).execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n        client.admin().indices().preparePutMapping(\"test\").setType(\"child\").setSource(jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"_parent\").field(\"type\", \"parent\").endObject()\n                .endObject().endObject()).execute().actionGet();\n\n        // index simple data with flushes, so we have many segments\n        client.prepareIndex(\"test\", \"parent\", \"p1\").setSource(\"p_field\", \"p_value1\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c1\").setSource(\"c_field\", \"red\").setParent(\"p1\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c2\").setSource(\"c_field\", \"yellow\").setParent(\"p1\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"parent\", \"p2\").setSource(\"p_field\", \"p_value2\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c3\").setSource(\"c_field\", \"blue\").setParent(\"p2\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c4\").setSource(\"c_field\", \"red\").setParent(\"p2\").execute().actionGet();\n        client.admin().indices().prepareFlush().execute().actionGet();\n\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        // TOP CHILDREN QUERY\n\n        SearchResponse searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"yellow\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"blue\"))).execute().actionGet();\n        if (searchResponse.failedShards() > 0) {\n            logger.warn(\"Failed shards:\");\n            for (ShardSearchFailure shardSearchFailure : searchResponse.shardFailures()) {\n                logger.warn(\"-> {}\", shardSearchFailure);\n            }\n        }\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"red\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n\n        // HAS CHILD QUERY\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"yellow\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"blue\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"red\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n\n        // HAS CHILD FILTER\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"yellow\")))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"blue\")))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"red\")))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void simpleChildQuery() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n\n        client.admin().indices().prepareCreate(\"test\")\n                .setSettings(\n                        ImmutableSettings.settingsBuilder()\n                                .put(\"index.number_of_shards\", 1)\n                                .put(\"index.number_of_replicas\", 0)\n                ).execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n        client.admin().indices().preparePutMapping(\"test\").setType(\"child\").setSource(jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"_parent\").field(\"type\", \"parent\").endObject()\n                .endObject().endObject()).execute().actionGet();\n\n        // index simple data\n        client.prepareIndex(\"test\", \"parent\", \"p1\").setSource(\"p_field\", \"p_value1\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c1\").setSource(\"c_field\", \"red\").setParent(\"p1\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c2\").setSource(\"c_field\", \"yellow\").setParent(\"p1\").execute().actionGet();\n        client.prepareIndex(\"test\", \"parent\", \"p2\").setSource(\"p_field\", \"p_value2\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c3\").setSource(\"c_field\", \"blue\").setParent(\"p2\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c4\").setSource(\"c_field\", \"red\").setParent(\"p2\").execute().actionGet();\n\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        // TEST FETCHING _parent from child\n        SearchResponse searchResponse = client.prepareSearch(\"test\")\n                .setQuery(idsQuery(\"child\").ids(\"c1\"))\n                .addFields(\"_parent\")\n                .execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"c1\"));\n        assertThat(searchResponse.hits().getAt(0).field(\"_parent\").value().toString(), equalTo(\"p1\"));\n\n        // TEST matching on parent\n        searchResponse = client.prepareSearch(\"test\")\n                .setQuery(termQuery(\"child._parent\", \"p1\"))\n                .addFields(\"_parent\")\n                .execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"c1\"), equalTo(\"c2\")));\n        assertThat(searchResponse.hits().getAt(0).field(\"_parent\").value().toString(), equalTo(\"p1\"));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"c1\"), equalTo(\"c2\")));\n        assertThat(searchResponse.hits().getAt(1).field(\"_parent\").value().toString(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\")\n                .setQuery(termQuery(\"_parent\", \"p1\"))\n                .addFields(\"_parent\")\n                .execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"c1\"), equalTo(\"c2\")));\n        assertThat(searchResponse.hits().getAt(0).field(\"_parent\").value().toString(), equalTo(\"p1\"));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"c1\"), equalTo(\"c2\")));\n        assertThat(searchResponse.hits().getAt(1).field(\"_parent\").value().toString(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\")\n                .setQuery(queryString(\"_parent:p1\"))\n                .addFields(\"_parent\")\n                .execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"c1\"), equalTo(\"c2\")));\n        assertThat(searchResponse.hits().getAt(0).field(\"_parent\").value().toString(), equalTo(\"p1\"));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"c1\"), equalTo(\"c2\")));\n        assertThat(searchResponse.hits().getAt(1).field(\"_parent\").value().toString(), equalTo(\"p1\"));\n\n\n        // TOP CHILDREN QUERY\n\n        searchResponse = client.prepareSearch(\"test\")\n                .setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"yellow\")))\n                .execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"blue\"))).execute().actionGet();\n        if (searchResponse.failedShards() > 0) {\n            logger.warn(\"Failed shards:\");\n            for (ShardSearchFailure shardSearchFailure : searchResponse.shardFailures()) {\n                logger.warn(\"-> {}\", shardSearchFailure);\n            }\n        }\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"red\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n\n        // HAS CHILD QUERY\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"yellow\"))).execute().actionGet();\n        if (searchResponse.failedShards() > 0) {\n            logger.warn(\"Failed shards:\");\n            for (ShardSearchFailure shardSearchFailure : searchResponse.shardFailures()) {\n                logger.warn(\"-> {}\", shardSearchFailure);\n            }\n        }\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"blue\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"red\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n\n        // HAS CHILD FILTER\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"yellow\")).executionType(getExecutionMethod()))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"blue\")).executionType(getExecutionMethod()))).execute().actionGet();\n        if (searchResponse.failedShards() > 0) {\n            logger.warn(\"Failed shards:\");\n            for (ShardSearchFailure shardSearchFailure : searchResponse.shardFailures()) {\n                logger.warn(\"-> {}\", shardSearchFailure);\n            }\n        }\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"red\")).executionType(getExecutionMethod()))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n\n        // HAS PARENT FILTER\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasParentFilter(\"parent\", termQuery(\"p_field\", \"p_value2\")).executionType(getExecutionMethod()))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"c3\"));\n        assertThat(searchResponse.hits().getAt(1).id(), equalTo(\"c4\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasParentFilter(\"parent\", termQuery(\"p_field\", \"p_value1\")).executionType(getExecutionMethod()))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"c1\"));\n        assertThat(searchResponse.hits().getAt(1).id(), equalTo(\"c2\"));\n\n        // HAS PARENT QUERY\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasParentQuery(\"parent\", termQuery(\"p_field\", \"p_value2\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"c3\"));\n        assertThat(searchResponse.hits().getAt(1).id(), equalTo(\"c4\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasParentQuery(\"parent\", termQuery(\"p_field\", \"p_value1\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"c1\"));\n        assertThat(searchResponse.hits().getAt(1).id(), equalTo(\"c2\"));\n    }","id":63914,"modified_method":"@Test\n    public void simpleChildQuery() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n\n        client.admin().indices().prepareCreate(\"test\")\n                .setSettings(\n                        ImmutableSettings.settingsBuilder()\n                                .put(\"index.number_of_shards\", 1)\n                                .put(\"index.number_of_replicas\", 0)\n                ).execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n        client.admin().indices().preparePutMapping(\"test\").setType(\"child\").setSource(jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"_parent\").field(\"type\", \"parent\").endObject()\n                .endObject().endObject()).execute().actionGet();\n\n        // index simple data\n        client.prepareIndex(\"test\", \"parent\", \"p1\").setSource(\"p_field\", \"p_value1\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c1\").setSource(\"c_field\", \"red\").setParent(\"p1\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c2\").setSource(\"c_field\", \"yellow\").setParent(\"p1\").execute().actionGet();\n        client.prepareIndex(\"test\", \"parent\", \"p2\").setSource(\"p_field\", \"p_value2\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c3\").setSource(\"c_field\", \"blue\").setParent(\"p2\").execute().actionGet();\n        client.prepareIndex(\"test\", \"child\", \"c4\").setSource(\"c_field\", \"red\").setParent(\"p2\").execute().actionGet();\n\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        // TEST FETCHING _parent from child\n        SearchResponse searchResponse = client.prepareSearch(\"test\")\n                .setQuery(idsQuery(\"child\").ids(\"c1\"))\n                .addFields(\"_parent\")\n                .execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"c1\"));\n        assertThat(searchResponse.hits().getAt(0).field(\"_parent\").value().toString(), equalTo(\"p1\"));\n\n        // TEST matching on parent\n        searchResponse = client.prepareSearch(\"test\")\n                .setQuery(termQuery(\"child._parent\", \"p1\"))\n                .addFields(\"_parent\")\n                .execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"c1\"), equalTo(\"c2\")));\n        assertThat(searchResponse.hits().getAt(0).field(\"_parent\").value().toString(), equalTo(\"p1\"));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"c1\"), equalTo(\"c2\")));\n        assertThat(searchResponse.hits().getAt(1).field(\"_parent\").value().toString(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\")\n                .setQuery(termQuery(\"_parent\", \"p1\"))\n                .addFields(\"_parent\")\n                .execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"c1\"), equalTo(\"c2\")));\n        assertThat(searchResponse.hits().getAt(0).field(\"_parent\").value().toString(), equalTo(\"p1\"));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"c1\"), equalTo(\"c2\")));\n        assertThat(searchResponse.hits().getAt(1).field(\"_parent\").value().toString(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\")\n                .setQuery(queryString(\"_parent:p1\"))\n                .addFields(\"_parent\")\n                .execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"c1\"), equalTo(\"c2\")));\n        assertThat(searchResponse.hits().getAt(0).field(\"_parent\").value().toString(), equalTo(\"p1\"));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"c1\"), equalTo(\"c2\")));\n        assertThat(searchResponse.hits().getAt(1).field(\"_parent\").value().toString(), equalTo(\"p1\"));\n\n\n        // TOP CHILDREN QUERY\n\n        searchResponse = client.prepareSearch(\"test\")\n                .setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"yellow\")))\n                .execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"blue\"))).execute().actionGet();\n        if (searchResponse.failedShards() > 0) {\n            logger.warn(\"Failed shards:\");\n            for (ShardSearchFailure shardSearchFailure : searchResponse.shardFailures()) {\n                logger.warn(\"-> {}\", shardSearchFailure);\n            }\n        }\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(topChildrenQuery(\"child\", termQuery(\"c_field\", \"red\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n\n        // HAS CHILD QUERY\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"yellow\"))).execute().actionGet();\n        if (searchResponse.failedShards() > 0) {\n            logger.warn(\"Failed shards:\");\n            for (ShardSearchFailure shardSearchFailure : searchResponse.shardFailures()) {\n                logger.warn(\"-> {}\", shardSearchFailure);\n            }\n        }\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"blue\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasChildQuery(\"child\", termQuery(\"c_field\", \"red\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n\n        // HAS CHILD FILTER\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"yellow\")))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p1\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"blue\")))).execute().actionGet();\n        if (searchResponse.failedShards() > 0) {\n            logger.warn(\"Failed shards:\");\n            for (ShardSearchFailure shardSearchFailure : searchResponse.shardFailures()) {\n                logger.warn(\"-> {}\", shardSearchFailure);\n            }\n        }\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(1l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"p2\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasChildFilter(\"child\", termQuery(\"c_field\", \"red\")))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n        assertThat(searchResponse.hits().getAt(1).id(), anyOf(equalTo(\"p2\"), equalTo(\"p1\")));\n\n        // HAS PARENT FILTER\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasParentFilter(\"parent\", termQuery(\"p_field\", \"p_value2\")))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"c3\"));\n        assertThat(searchResponse.hits().getAt(1).id(), equalTo(\"c4\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(constantScoreQuery(hasParentFilter(\"parent\", termQuery(\"p_field\", \"p_value1\")))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"c1\"));\n        assertThat(searchResponse.hits().getAt(1).id(), equalTo(\"c2\"));\n\n        // HAS PARENT QUERY\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasParentQuery(\"parent\", termQuery(\"p_field\", \"p_value2\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"c3\"));\n        assertThat(searchResponse.hits().getAt(1).id(), equalTo(\"c4\"));\n\n        searchResponse = client.prepareSearch(\"test\").setQuery(hasParentQuery(\"parent\", termQuery(\"p_field\", \"p_value1\"))).execute().actionGet();\n        assertThat(\"Failures \" + Arrays.toString(searchResponse.shardFailures()), searchResponse.shardFailures().length, equalTo(0));\n        assertThat(searchResponse.failedShards(), equalTo(0));\n        assertThat(searchResponse.hits().totalHits(), equalTo(2l));\n        assertThat(searchResponse.hits().getAt(0).id(), equalTo(\"c1\"));\n        assertThat(searchResponse.hits().getAt(1).id(), equalTo(\"c2\"));\n    }","commit_id":"9c3a86875b863684da060c4a70c7b5244e04cb18","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/** Looks up the service descriptor from a singleton cache and creates a new one if not found. */\n    public ServiceDescriptor lookupServiceDescriptor(String type, String name, Properties overrides) throws ServiceException\n    {\n        if (ServiceDescriptorFactory.PROVIDER_SERVICE_TYPE.equals(type))\n        {\n            ServiceReference[] transportRefs;\n            String filter = \"(\" + TransportServiceDescriptor.OSGI_HEADER_TRANSPORT + \"=\" + name + \")\";\n            try\n            {\n                transportRefs = bundleContext.getServiceReferences(TransportServiceDescriptor.class.getName(), filter);\n            }\n            catch (InvalidSyntaxException e)\n            {\n                throw new ServiceException(MessageFactory.createStaticMessage(\"Unable to look up TransportServiceDescriptors with filter: \" + filter), e);\n            }\n            \n            if (transportRefs == null || transportRefs.length < 1)\n            {\n                throw new ServiceException(MessageFactory.createStaticMessage(\"No transport available with the schema: \" + name));\n            }\n            else if (transportRefs.length > 1)\n            {\n                throw new ServiceException(MessageFactory.createStaticMessage(\"More than one transport is available with the schema: \" + name + \" and no algorithm is implemented to choose the correct one.\"));\n            }\n            else\n            {\n                ServiceDescriptor sd = (ServiceDescriptor) bundleContext.getService(transportRefs[0]);\n                return sd;\n            }\n        }\n        else\n        {\n            return super.lookupServiceDescriptor(type, name, overrides);\n        }\n    }","id":63915,"modified_method":"public ServiceDescriptor lookupServiceDescriptor(String type, String name, Properties overrides) throws ServiceException\n    {\n        if (ServiceDescriptorFactory.PROVIDER_SERVICE_TYPE.equals(type))\n        {\n            ServiceReference[] transportRefs = null;\n            String filter = \"(\" + TransportServiceDescriptor.OSGI_HEADER_TRANSPORT + \"=\" + name + \")\";\n            try\n            {\n                //transportRefs = bundleContext.getServiceReferences(TransportServiceDescriptor.class.getName(), filter);\n\n                // TODO The following block of code should all be replaced by the line above if the filter had\n                // the correct syntax.\n                ServiceReference[] refs = bundleContext.getServiceReferences(TransportServiceDescriptor.class.getName(), null);\n                int nRefs = refs.length;\n                logger.debug(\"Searching for transport = \" + name + \", \" + nRefs + \" TransportServiceDescriptor(s) found\");\n                String transport;\n                for (int i=0; i < nRefs; ++i)\n                {\n                    transport = (String) refs[i].getProperty(TransportServiceDescriptor.OSGI_HEADER_TRANSPORT);\n                    logger.debug(\"transport = \" + transport);\n                    if (name.equals(transport))\n                    {\n                        transportRefs = new ServiceReference[1];\n                        transportRefs[0] = refs[i];\n                        break;\n                    }\n                }\n            }\n            catch (InvalidSyntaxException e)\n            {\n                throw new ServiceException(MessageFactory.createStaticMessage(\"Unable to look up TransportServiceDescriptors with filter: \" + filter), e);\n            }\n            \n            if (transportRefs == null || transportRefs.length < 1)\n            {\n                throw new ServiceException(MessageFactory.createStaticMessage(\"No transport available with the schema: \" + name));\n            }\n            else if (transportRefs.length > 1)\n            {\n                throw new ServiceException(MessageFactory.createStaticMessage(\"More than one transport is available with the schema: \" + name + \" and no algorithm is implemented to choose the correct one.\"));\n            }\n            else\n            {\n                ServiceDescriptor sd = (ServiceDescriptor) bundleContext.getService(transportRefs[0]);\n                return sd;\n            }\n        }\n        else\n        {\n            return super.lookupServiceDescriptor(type, name, overrides);\n        }\n    }","commit_id":"723e7e9d385c8a189a5ce87c7557196ff114aa95","url":"https://github.com/mulesoft/mule"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    @Override\n    public <S> Collection<ServiceReference<S>> getServiceReferences(Class<S> clazz, String filter) throws InvalidSyntaxException {\n        return ImmutableList.<ServiceReference<S>>copyOf(getServiceReferences(clazz.getName(), filter));\n    }","id":63916,"modified_method":"@SuppressWarnings(\"unchecked\")\n    @Override\n    public <S> Collection<ServiceReference<S>> getServiceReferences(Class<S> clazz, String filter) throws InvalidSyntaxException {\n        ServiceReference<S>[] result = getServiceReferences(clazz.getName(), filter);\n        if (result == null) {\n            return ImmutableList.<ServiceReference<S>>of();\n        }\n        else {\n            return ImmutableList.<ServiceReference<S>>copyOf(result);\n        }\n    }","commit_id":"4ccf6c17101b1dadfaf7a471ce8443313ea749af","url":"https://github.com/apache/sling"},{"original_method":"@Test\n    public void testServiceRegistration() throws InvalidSyntaxException {\n        // prepare test services\n        String clazz1 = String.class.getName();\n        Object service1 = new Object();\n        Dictionary<String, Object> properties1 = getServiceProperties(null);\n        ServiceRegistration reg1 = bundleContext.registerService(clazz1, service1, properties1);\n\n        String[] clazzes2 = new String[] { String.class.getName(), Integer.class.getName() };\n        Object service2 = new Object();\n        Dictionary<String, Object> properties2 = getServiceProperties(null);\n        ServiceRegistration reg2 = bundleContext.registerService(clazzes2, service2, properties2);\n\n        String clazz3 = Integer.class.getName();\n        Object service3 = new Object();\n        Dictionary<String, Object> properties3 = getServiceProperties(100L);\n        ServiceRegistration reg3 = bundleContext.registerService(clazz3, service3, properties3);\n\n        // test get service references\n        ServiceReference<?> refString = bundleContext.getServiceReference(String.class.getName());\n        assertSame(reg1.getReference(), refString);\n\n        ServiceReference<?> refInteger = bundleContext.getServiceReference(Integer.class.getName());\n        assertSame(reg3.getReference(), refInteger);\n\n        ServiceReference<?>[] refsString = bundleContext.getServiceReferences(String.class.getName(), null);\n        assertEquals(2, refsString.length);\n        assertSame(reg1.getReference(), refsString[0]);\n        assertSame(reg2.getReference(), refsString[1]);\n\n        ServiceReference<?>[] refsInteger = bundleContext.getServiceReferences(Integer.class.getName(), null);\n        assertEquals(2, refsInteger.length);\n        assertSame(reg3.getReference(), refsInteger[0]);\n        assertSame(reg2.getReference(), refsInteger[1]);\n\n        ServiceReference<?>[] allRefsString = bundleContext.getAllServiceReferences(String.class.getName(), null);\n        assertArrayEquals(refsString, allRefsString);\n\n        // test get services\n        assertSame(service1, bundleContext.getService(refsString[0]));\n        assertSame(service2, bundleContext.getService(refsString[1]));\n        assertSame(service3, bundleContext.getService(refInteger));\n\n        // unget does nothing\n        bundleContext.ungetService(refsString[0]);\n        bundleContext.ungetService(refsString[1]);\n        bundleContext.ungetService(refInteger);\n    }","id":63917,"modified_method":"@Test\n    public void testServiceRegistration() throws InvalidSyntaxException {\n        // prepare test services\n        String clazz1 = String.class.getName();\n        Object service1 = new Object();\n        Dictionary<String, Object> properties1 = getServiceProperties(null);\n        ServiceRegistration reg1 = bundleContext.registerService(clazz1, service1, properties1);\n\n        String[] clazzes2 = new String[] { String.class.getName(), Integer.class.getName() };\n        Object service2 = new Object();\n        Dictionary<String, Object> properties2 = getServiceProperties(null);\n        ServiceRegistration reg2 = bundleContext.registerService(clazzes2, service2, properties2);\n\n        String clazz3 = Integer.class.getName();\n        Object service3 = new Object();\n        Dictionary<String, Object> properties3 = getServiceProperties(100L);\n        ServiceRegistration reg3 = bundleContext.registerService(clazz3, service3, properties3);\n\n        // test get service references\n        ServiceReference<?> refString = bundleContext.getServiceReference(String.class.getName());\n        assertSame(reg1.getReference(), refString);\n\n        ServiceReference<?> refInteger = bundleContext.getServiceReference(Integer.class.getName());\n        assertSame(reg3.getReference(), refInteger);\n\n        ServiceReference<?>[] refsString = bundleContext.getServiceReferences(String.class.getName(), null);\n        assertEquals(2, refsString.length);\n        assertSame(reg1.getReference(), refsString[0]);\n        assertSame(reg2.getReference(), refsString[1]);\n\n        Collection<ServiceReference<String>> refColString = bundleContext.getServiceReferences(String.class, null);\n        assertEquals(2, refColString.size());\n        assertSame(reg1.getReference(), refColString.iterator().next());\n\n        ServiceReference<?>[] refsInteger = bundleContext.getServiceReferences(Integer.class.getName(), null);\n        assertEquals(2, refsInteger.length);\n        assertSame(reg3.getReference(), refsInteger[0]);\n        assertSame(reg2.getReference(), refsInteger[1]);\n\n        ServiceReference<?>[] allRefsString = bundleContext.getAllServiceReferences(String.class.getName(), null);\n        assertArrayEquals(refsString, allRefsString);\n\n        // test get services\n        assertSame(service1, bundleContext.getService(refsString[0]));\n        assertSame(service2, bundleContext.getService(refsString[1]));\n        assertSame(service3, bundleContext.getService(refInteger));\n\n        // unget does nothing\n        bundleContext.ungetService(refsString[0]);\n        bundleContext.ungetService(refsString[1]);\n        bundleContext.ungetService(refInteger);\n    }","commit_id":"4ccf6c17101b1dadfaf7a471ce8443313ea749af","url":"https://github.com/apache/sling"},{"original_method":"public URI makeUri( String host, Integer port ) {\n    String uri;\n    try {\n      if ( NetworkUtil.testLocal( host ) && port != -1 ) {\n        return this.getLocalUri( );\n      } else {\n        try {\n          uri = String.format( this.getUriPattern( ), host, port );\n        } catch ( MissingFormatArgumentException e ) {\n\t\t      uri = String.format( this.getUriPattern( ), host, port , this.getLocalUri( ).getHost( ).replaceAll( \"RequestQueue\", \"Internal\" ) );\n        }\n        try {\n          URI u = new URI( uri );\n          u.parseServerAuthority( );\n          return u;\n        } catch ( URISyntaxException e ) {\n          LOG.error( e, e );\n          return URI.create( uri );\n        }\n      }\n    } catch ( Exception e ) {\n      return this.getLocalUri( );\n    }\n  }","id":63918,"modified_method":"public URI makeUri( String host, Integer port ) {\n    String uri;\n    try {\n      if ( NetworkUtil.testLocal( host ) ) {\n        return this.getLocalUri( );\n      } else {\n        return makeRemoteUri( host, port );\n      }\n    } catch ( Exception e ) {\n      return this.getLocalUri( );\n    }\n  }","commit_id":"614becc57245b0bbf7dedfc48ec0593df41d6abb","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public Service( Component parent, ServiceConfiguration serviceConfig ) {\n    this.parent = parent;\n    this.serviceConfiguration = serviceConfig;\n    if ( \"cluster\".equals( parent.getName( ) ) && com.eucalyptus.bootstrap.Component.eucalyptus.isLocal( ) ) /*ASAP: fix this disgusting hack.*/{\n      this.name = parent.getName( ) + \"@\" + serviceConfig.getHostName( );\n      URI uri = this.parent.getConfiguration( ).makeUri( serviceConfig.getHostName( ), serviceConfig.getPort( ) );\n      this.endpoint = new ServiceEndpoint( this, false, uri );\n    } else if ( serviceConfig.isLocal( ) ) {\n      URI uri = this.parent.getConfiguration( ).getLocalUri( );\n      this.name = parent.getName( ) + LOCAL_HOSTNAME;\n      this.endpoint = new ServiceEndpoint( this, true, uri );\n    } else {\n      Boolean local = false;\n      try {\n        if ( serviceConfig.getHostName( ) != null ) {\n          local = NetworkUtil.testLocal( serviceConfig.getHostName( ) );\n        } else {\n          local = true;\n        }\n      } catch ( Exception e ) {\n        local = true;\n      }\n      URI uri = null;\n      if ( !local ) {\n        this.name = parent.getName( ) + \"@\" + serviceConfig.getHostName( );\n        uri = this.parent.getConfiguration( ).makeUri( serviceConfig.getHostName( ), serviceConfig.getPort( ) );\n      } else {\n        this.name = parent.getName( ) + LOCAL_HOSTNAME;\n        uri = this.parent.getConfiguration( ).getLocalUri( );\n      }\n      this.endpoint = new ServiceEndpoint( this, local, uri );\n    }\n    this.keys = new Credentials( this );//TODO: integration with JAAS\n    this.dispatcher = DispatcherFactory.build( parent, this );\n  }","id":63919,"modified_method":"public Service( Component parent, ServiceConfiguration serviceConfig ) {\n    this.parent = parent;\n    this.serviceConfiguration = serviceConfig;\n    if ( \"cluster\".equals( parent.getName( ) ) && com.eucalyptus.bootstrap.Component.eucalyptus.isLocal( ) ) /*ASAP: fix this disgusting hack.*/{\n      this.name = parent.getName( ) + \"@\" + serviceConfig.getHostName( );\n      URI uri = this.parent.getConfiguration( ).makeRemoteUri( serviceConfig.getHostName( ), serviceConfig.getPort( ) );\n      this.endpoint = new ServiceEndpoint( this, false, uri );\n    } else if ( serviceConfig.isLocal( ) ) {\n      URI uri = this.parent.getConfiguration( ).getLocalUri( );\n      this.name = parent.getName( ) + LOCAL_HOSTNAME;\n      this.endpoint = new ServiceEndpoint( this, true, uri );\n    } else {\n      Boolean local = false;\n      try {\n        if ( serviceConfig.getHostName( ) != null ) {\n          local = NetworkUtil.testLocal( serviceConfig.getHostName( ) );\n        } else {\n          local = true;\n        }\n      } catch ( Exception e ) {\n        local = true;\n      }\n      URI uri = null;\n      if ( !local ) {\n        this.name = parent.getName( ) + \"@\" + serviceConfig.getHostName( );\n        uri = this.parent.getConfiguration( ).makeUri( serviceConfig.getHostName( ), serviceConfig.getPort( ) );\n      } else {\n        this.name = parent.getName( ) + LOCAL_HOSTNAME;\n        uri = this.parent.getConfiguration( ).getLocalUri( );\n      }\n      this.endpoint = new ServiceEndpoint( this, local, uri );\n    }\n    this.keys = new Credentials( this );//TODO: integration with JAAS\n    this.dispatcher = DispatcherFactory.build( parent, this );\n  }","commit_id":"614becc57245b0bbf7dedfc48ec0593df41d6abb","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n     * Register the given {@link Service} with the registry. Only used internally.\n     * \n     * @param service\n     * @throws ServiceRegistrationException\n     */\n    Service register( ServiceConfiguration config ) throws ServiceRegistrationException {\n      Service service = Services.newServiceInstance( config );\n      if ( config.isVmLocal( ) || config.isHostLocal( ) ) {\n        this.localService.set( service );\n      }\n      Service ret = this.services.putIfAbsent( config, service );\n      ret = ( ret != null ) ? ret : service;\n      EventRecord.caller( Component.class, EventType.COMPONENT_SERVICE_REGISTERED,\n                          Component.this.getName( ),\n                          ( config.isVmLocal( ) || config.isHostLocal( ) )\n                            ? \"local\"\n                            : \"remote\",\n                          config.getName( ), config.getUri( ) ).info( );\n      return ret;\n    }","id":63920,"modified_method":"/**\n     * Register the given {@link Service} with the registry. Only used internally.\n     * \n     * @param service\n     * @throws ServiceRegistrationException\n     */\n    Service register( ServiceConfiguration config ) throws ServiceRegistrationException {\n      Service service = Services.newServiceInstance( config );\n      if ( config.isVmLocal( ) || config.isHostLocal( ) ) {\n        this.localService.set( service );\n      }\n      Service ret = this.services.putIfAbsent( config, service );\n      ret = ( ret != null ) ? ret : service;\n      EventRecord.caller( Component.class, EventType.COMPONENT_SERVICE_REGISTERED,\n                          Component.this.getName( ),\n                          ( config.isVmLocal( ) || config.isHostLocal( ) )\n                            ? \"local\"\n                            : \"remote\",\n                          config.getName( ), config.getUri( ) ).info( );\n      Logs.exhaust( ).debug( \"Registered service \" + ret + \" for configuration: \" + config );\n      return ret;\n    }","commit_id":"c62861b44ea9dcfaa8025f7026bce4b516ab6f7a","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n   * Builds a Service instance for this cloudLocal component when Eucalyptus is remote.\n   * \n   * @return Service instance of the service\n   * @throws ServiceRegistrationException\n   */\n  public ServiceConfiguration initRemoteService( InetAddress addr ) throws ServiceRegistrationException {\n    if ( !Bootstrap.isCloudController( ) ) {\n      ServiceConfiguration config = this.getBuilder( ).newInstance( this.getComponentId( ).getPartition( ), addr.getHostAddress( ), addr.getHostAddress( ),\n                                                                    this.getComponentId( ).getPort( ) );\n      this.serviceRegistry.register( config );\n      return config;\n    } else if ( Bootstrap.isCloudController( ) && !Internets.testLocal( addr ) ) {\n      ServiceConfiguration config = this.getBuilder( ).newInstance( this.getComponentId( ).getPartition( ), addr.getHostAddress( ), addr.getHostAddress( ),\n                                                                    this.getComponentId( ).getPort( ) );\n      this.serviceRegistry.register( config );\n      return config;\n    } else {\n      throw new ServiceRegistrationException( \"Skipping invalid attempt to init remote service configuration for host \" + addr + \" on component \"\n                                              + this.getName( ) );\n    }\n  }","id":63921,"modified_method":"/**\n   * Builds a Service instance for this cloudLocal component when Eucalyptus is remote.\n   * \n   * @return Service instance of the service\n   * @throws ServiceRegistrationException\n   */\n  public ServiceConfiguration initRemoteService( InetAddress addr ) throws ServiceRegistrationException {\n    if( Internets.testLocal( addr ) ) {\n      throw new ServiceRegistrationException( \"Skipping invalid attempt to init remote service configuration for host \" + addr + \" on component \"\n                                              + this.getName( ) );\n    }\n    ServiceConfiguration config = this.getBuilder( ).newInstance( this.getComponentId( ).getPartition( ), addr.getHostAddress( ), addr.getHostAddress( ),\n                                                                  this.getComponentId( ).getPort( ) );\n    this.serviceRegistry.register( config );\n    LOG.debug( \"Initializing remote service for host \" + addr + \" with configuration: \" + config );\n    return config;\n  }","commit_id":"c62861b44ea9dcfaa8025f7026bce4b516ab6f7a","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static HostManager getInstance( ) {\n    if ( singleton != null ) {\n      return singleton;\n    } else {\n      synchronized ( HostManager.class ) {\n        if ( singleton != null ) {\n          return singleton;\n        } else {\n          singleton = new HostManager( );\n          LOG.info( \"Membership address for localhost: \" + Hosts.localHost( ) );\n          return singleton;\n        }\n      }\n    }\n  }","id":63922,"modified_method":"public static HostManager getInstance( ) {\n    if ( singleton != null ) {\n      return singleton;\n    } else {\n      synchronized ( HostManager.class ) {\n        if ( singleton != null ) {\n          return singleton;\n        } else {\n          singleton = new HostManager( );\n          return singleton;\n        }\n      }\n    }\n  }","commit_id":"c62861b44ea9dcfaa8025f7026bce4b516ab6f7a","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private boolean setupCloudLocals( InetAddress addr ) {\n    if ( !Internets.testReachability( addr ) ) {\n      return false;\n    } else {\n      try {\n        for ( Component c : Components.list( ) ) {//TODO:GRZE:URGENT THIS LIES\n          try {\n            ServiceConfiguration config = c.initRemoteService( addr );\n            c.loadService( config );\n          } catch ( ServiceRegistrationException ex ) {\n            LOG.error( ex );\n          }\n        }\n        for ( Bootstrap.Stage stage : Bootstrap.Stage.values( ) ) {\n          stage.updateBootstrapDependencies( );\n        }\n      } catch( RuntimeException ex ) {\n        LOG.error( ex, ex );\n        throw ex;\n      } finally {\n        this.currentView.set( this.currentView.getReference( ), false );\n      }\n      return true;\n    }\n  }","id":63923,"modified_method":"private boolean setupCloudLocals( InetAddress addr ) {\n    if ( !Internets.testReachability( addr ) ) {\n      return false;\n    } else {\n      try {\n        for ( Component c : Components.list( ) ) {//TODO:GRZE:URGENT THIS LIES\n          if( c.getComponentId( ).isCloudLocal( ) ) {\n            try {\n              ServiceConfiguration config = c.initRemoteService( addr );\n              c.loadService( config );\n            } catch ( ServiceRegistrationException ex ) {\n              LOG.error( ex );\n            }\n          }\n        }\n        for ( Bootstrap.Stage stage : Bootstrap.Stage.values( ) ) {\n          stage.updateBootstrapDependencies( );\n        }\n      } catch( RuntimeException ex ) {\n        LOG.error( ex, ex );\n        throw ex;\n      } finally {\n        this.currentView.set( this.currentView.getReference( ), false );\n      }\n      return true;\n    }\n  }","commit_id":"c62861b44ea9dcfaa8025f7026bce4b516ab6f7a","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static Collection<TypeQualifierValue> getRelevantTypeQualifiers(\n\t\t\tMethodDescriptor methodDescriptor)\n\t\t\tthrows CheckedAnalysisException {\n\t\t\n\t\tIAnalysisCache analysisCache = Global.getAnalysisCache();\n\t\tClassContext context = analysisCache.getClassAnalysis(ClassContext.class, methodDescriptor.getClassDescriptor());\n\t\tMethod method = analysisCache.getMethodAnalysis(Method.class, methodDescriptor);\n\t\t\n\t\tHashSet<TypeQualifierValue> result = new HashSet<TypeQualifierValue>();\n\t\t\n\t\tXMethod xMethod = XFactory.createXMethod(context.getJavaClass(), method);\n\t\tCollection<TypeQualifierAnnotation> applicableApplicationsForMethod = TypeQualifierApplications.getApplicableApplications(xMethod);\n\t\taddKnownTypeQualifiers(result, applicableApplicationsForMethod);\n\t\taddKnownTypeQualifiersForParameters(result, xMethod);\n\t\tCFG cfg = context.getCFG(method);\n\t\tfor (Iterator<Location> i = cfg.locationIterator(); i.hasNext();) {\n\t\t\tLocation location = i.next();\n\t\t\tInstruction ins = location.getHandle().getInstruction();\n\t\t\tif (ins instanceof FieldInstruction) {\n\t\t\t\tXField f = XFactory.createXField((FieldInstruction)ins, context.getConstantPoolGen());\n\t\t\t\tCollection<TypeQualifierAnnotation> applicableApplications = TypeQualifierApplications.getApplicableApplications(f);\n\t\t\t\taddKnownTypeQualifiers(result, applicableApplications);\n\t\t\t}\n\t\t\telse if (ins instanceof InvokeInstruction) {\n\t\t\t\tXMethod m = XFactory.createXMethod((InvokeInstruction)ins, context.getConstantPoolGen());\n\t\t\t\tCollection<TypeQualifierAnnotation> applicableApplications = TypeQualifierApplications.getApplicableApplications(m);\n\t\t\t\taddKnownTypeQualifiers(result, applicableApplications);\n\t\t\t\taddKnownTypeQualifiersForParameters(result, m);\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\treturn result;\n\t\t\n\t}","id":63924,"modified_method":"public static Collection<TypeQualifierValue> getRelevantTypeQualifiers(\n\t\t\tMethodDescriptor methodDescriptor)\n\t\t\tthrows CheckedAnalysisException {\n\t\t\n\t\tfinal IAnalysisCache analysisCache = Global.getAnalysisCache();\n\t\tfinal HashSet<TypeQualifierValue> result = new HashSet<TypeQualifierValue>();\n\n\t\tXMethod xmethod = analysisCache.getMethodAnalysis(XMethod.class, methodDescriptor);\n\n\t\tif (methodDescriptor.isStatic()) {\n\t\t\tgetDirectlyRelevantTypeQualifiers(xmethod, analysisCache, result);\n\t\t} else {\n\t\t\t\n\t\t\t// Instance method - must consider type qualifiers inherited from superclasses\n\t\t\t\n\t\t\tInheritanceGraphVisitor visitor = new OverriddenMethodsVisitor(xmethod) {\n\t\t\t\t/* (non-Javadoc)\n\t\t\t\t * @see edu.umd.cs.findbugs.ba.ch.OverriddenMethodsVisitor#visitOverriddenMethod(edu.umd.cs.findbugs.ba.XMethod)\n\t\t\t\t */\n\t\t\t\t@Override\n\t\t\t\tprotected boolean visitOverriddenMethod(XMethod xmethod) {\n\t\t\t\t\ttry {\n\t                    getDirectlyRelevantTypeQualifiers(xmethod, analysisCache, result);\n                    } catch (CheckedAnalysisException e) {\n                    \tif (DEBUG) {\n                    \t\tSystem.out.println(\"**** Error getting relevant type qualifiers ****\");\n                    \t\te.printStackTrace(System.out);\n                    \t}\n                    \tthrow new AnalysisException(\"Error getting relevant type qualifiers for \" + xmethod, e);\n                    }\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\ttry {\n\t\t\t\tAnalysisContext.currentAnalysisContext().getSubtypes2().traverseSupertypes(xmethod.getClassDescriptor(), visitor);\n\t\t\t} catch (ClassNotFoundException e) {\n\t\t\t\tAnalysisContext.currentAnalysisContext().getLookupFailureCallback().reportMissingClass(e);\n\t\t\t\treturn (Collection<TypeQualifierValue>) Collections.EMPTY_SET;\n\t\t\t} catch (AnalysisException e) {\n\t\t\t\tAnalysisContext.currentAnalysisContext().getLookupFailureCallback().logError(\n\t\t\t\t\t\t\"Error getting relevant type qualifiers for \" + xmethod.toString(), e);\n\t\t\t\treturn (Collection<TypeQualifierValue>) Collections.EMPTY_SET;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t\t\n\t}","commit_id":"79ce055d52611808ef02f9d509cf43c215c29ea7","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n\t * Get Collection of TypeQualifierValues that should be checked\n\t * in given method.\n\t * \n\t * @param methodDescriptor MethodDescriptor identifying a method\n\t * @return Collection of TypeQualifierValues that should be checked for the method\n\t * @throws CheckedAnalysisException\n\t */\n\tpublic static Collection<TypeQualifierValue> getRelevantTypeQualifiers(\n\t\t\t/*ClassContext context, Method method*/MethodDescriptor methodDescriptor)\n\t\t\tthrows CheckedAnalysisException {\n\t\t\n\t\tHashSet<TypeQualifierValue> result = new HashSet<TypeQualifierValue>();\n\t\t\n\t\t//XMethod xMethod = XFactory.createXMethod(context.getJavaClass(), method);\n\t\tIAnalysisCache analysisCache = Global.getAnalysisCache();\n\t\tXMethod xMethod = analysisCache.getMethodAnalysis(XMethod.class, methodDescriptor);\n\t\tMethodGen methodGen = analysisCache.getMethodAnalysis(MethodGen.class, methodDescriptor);\n\t\tConstantPoolGen cpg = analysisCache.getClassAnalysis(ConstantPoolGen.class, methodDescriptor.getClassDescriptor());\n\t\t\n\t\tCollection<TypeQualifierAnnotation> applicableApplicationsForMethod = TypeQualifierApplications.getApplicableApplications(xMethod);\n\t\t\n\t\taddKnownTypeQualifiers(result, applicableApplicationsForMethod);\n\t\taddKnownTypeQualifiersForParameters(result, xMethod);\n\t\t\n\t\t//CFG cfg = context.getCFG(method);\n\t\t\n//\t\tfor (Iterator<Location> i = cfg.locationIterator(); i.hasNext();) {\n//\t\t\tLocation location = i.next();\n//\t\t\tInstruction ins = location.getHandle().getInstruction();\n\t\tInstructionList il = methodGen.getInstructionList();\n\t\tfor (InstructionHandle handle : il.getInstructionHandles()) {\n\t\t\tInstruction ins = handle.getInstruction();\n\t\t\tif (ins instanceof FieldInstruction) {\n\t\t\t\tXField f = XFactory.createXField((FieldInstruction)ins, /*context.getConstantPoolGen()*/cpg);\n\t\t\t\tCollection<TypeQualifierAnnotation> applicableApplications = TypeQualifierApplications.getApplicableApplications(f);\n\t\t\t\taddKnownTypeQualifiers(result, applicableApplications);\n\t\t\t}\n\t\t\telse if (ins instanceof InvokeInstruction) {\n\t\t\t\tXMethod m = XFactory.createXMethod((InvokeInstruction)ins, /*context.getConstantPoolGen()*/cpg);\n\t\t\t\tCollection<TypeQualifierAnnotation> applicableApplications = TypeQualifierApplications.getApplicableApplications(m);\n\t\t\t\taddKnownTypeQualifiers(result, applicableApplications);\n\t\t\t\taddKnownTypeQualifiersForParameters(result, m);\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\treturn result;\n\t\t\n\t}","id":63925,"modified_method":"public static Collection<TypeQualifierValue> getRelevantTypeQualifiers(\n\t\t\t/*ClassContext context, Method method*/MethodDescriptor methodDescriptor)\n\t\t\tthrows CheckedAnalysisException {\n\t\t\n\t\tIAnalysisCache analysisCache = Global.getAnalysisCache();\n\t\tClassContext context = analysisCache.getClassAnalysis(ClassContext.class, methodDescriptor.getClassDescriptor());\n\t\tMethod method = analysisCache.getMethodAnalysis(Method.class, methodDescriptor);\n\t\t\n\t\tHashSet<TypeQualifierValue> result = new HashSet<TypeQualifierValue>();\n\t\tXMethod xMethod = XFactory.createXMethod(context.getJavaClass(), method);\n\t\tCollection<TypeQualifierAnnotation> applicableApplicationsForMethod = TypeQualifierApplications.getApplicableApplications(xMethod);\n\t\taddKnownTypeQualifiers(result, applicableApplicationsForMethod);\n\t\taddKnownTypeQualifiersForParameters(result, xMethod);\n\t\tCFG cfg = context.getCFG(method);\n\t\tfor (Iterator<Location> i = cfg.locationIterator(); i.hasNext();) {\n\t\t\tLocation location = i.next();\n\t\t\tInstruction ins = location.getHandle().getInstruction();\n\t\t\tif (ins instanceof FieldInstruction) {\n\t\t\t\tXField f = XFactory.createXField((FieldInstruction)ins, context.getConstantPoolGen());\n\t\t\t\tCollection<TypeQualifierAnnotation> applicableApplications = TypeQualifierApplications.getApplicableApplications(f);\n\t\t\t\taddKnownTypeQualifiers(result, applicableApplications);\n\t\t\t}\n\t\t\telse if (ins instanceof InvokeInstruction) {\n\t\t\t\tXMethod m = XFactory.createXMethod((InvokeInstruction)ins, context.getConstantPoolGen());\n\t\t\t\tCollection<TypeQualifierAnnotation> applicableApplications = TypeQualifierApplications.getApplicableApplications(m);\n\t\t\t\taddKnownTypeQualifiers(result, applicableApplications);\n\t\t\t\taddKnownTypeQualifiersForParameters(result, m);\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\treturn result;\n\t\t\n\t}","commit_id":"8e42e25f1230080ec33f6812aa80e45ac4a13504","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public FindUnsatisfiedObligation(BugReporter bugReporter) {\n\t\tthis.bugReporter = bugReporter;\n\t\tthis.factory = new ObligationFactory();\n\t\tthis.database = buildDatabase();\n\t}","id":63926,"modified_method":"public FindUnsatisfiedObligation(BugReporter bugReporter) {\n\t\tthis.bugReporter = bugReporter;\n\t}","commit_id":"72b697202f937a82d375b108a7755603b6de8e56","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n\tprotected void visitMethodCFG(MethodDescriptor methodDescriptor, CFG cfg) throws CheckedAnalysisException {\n\t\tif (DEBUG) {\n\t\t\tSystem.out.println(\"*** Analyzing method \" + methodDescriptor);\n\t\t}\n\n\t\ttry {\n\t\t\tIAnalysisCache analysisCache = Global.getAnalysisCache();\n\t\t\t\n\t\t\tMethodGen methodGen = analysisCache.getMethodAnalysis(MethodGen.class, methodDescriptor);\n\t\t\tDepthFirstSearch dfs = \n\t\t\t\tanalysisCache.getMethodAnalysis(DepthFirstSearch.class, methodDescriptor);\n\t\t\tTypeDataflow typeDataflow =\n\t\t\t\tanalysisCache.getMethodAnalysis(TypeDataflow.class, methodDescriptor);\n\t\t\tIsNullValueDataflow invDataflow =\n\t\t\t\tanalysisCache.getMethodAnalysis(IsNullValueDataflow.class, methodDescriptor);\n\t\t\tassert typeDataflow != null;\n\n\t\t\tObligationAnalysis analysis =\n\t\t\t\tnew ObligationAnalysis(dfs, typeDataflow, invDataflow, methodGen, factory, database, bugReporter);\n\t\t\tObligationDataflow dataflow =\n\t\t\t\tnew ObligationDataflow(cfg, analysis);\n\n\t\t\tProfiler profiler = Profiler.getInstance();\n\t\t\tprofiler.start(analysis.getClass());\n\t\t\ttry {\n\t\t\t\tdataflow.execute();\n\t\t\t} finally {\n\t\t\t\tprofiler.end(analysis.getClass());\n\t\t\t}\n\n\t\t\tif (DEBUG_PRINTCFG) {\n\t\t\t\tSystem.out.println(\"Dataflow CFG:\");\n\t\t\t\tDataflowCFGPrinter.printCFG(dataflow, System.out);\n\t\t\t}\n\n\t\t\t// See if there are any states with nonempty obligation sets\n\t\t\tStateSet factAtExit = dataflow.getStartFact(cfg.getExit());\n\t\t\tSet<Obligation> leakedObligationSet = new HashSet<Obligation>();\n\t\t\tfor (Iterator<State> i = factAtExit.stateIterator(); i.hasNext();) {\n\t\t\t\tState state = i.next();\n\t\t\t\tfor (int id = 0; id < factory.getMaxObligationTypes(); ++id) {\n\t\t\t\t\tif (state.getObligationSet().getCount(id) > 0) {\n\t\t\t\t\t\tleakedObligationSet.add(factory.getObligationById(id));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (Obligation obligation : leakedObligationSet) {\n\t\t\t\tbugReporter.reportBug(new BugInstance(this, \"OBL_LEAKED_OBLIGATION\", NORMAL_PRIORITY)\n\t\t\t\t\t\t.addClassAndMethod(methodDescriptor)\n\t\t\t\t\t\t.addClass(obligation.getClassName()).describe(\"CLASS_REFTYPE\")\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (CFGBuilderException e) {\n\t\t\tbugReporter.logError(\"Error building CFG for \" + methodDescriptor, e);\n\t\t} catch (DataflowAnalysisException e) {\n\t\t\tbugReporter.logError(\"ObligationAnalysis error while analyzing \" + methodDescriptor, e);\n\t\t}\n\t}","id":63927,"modified_method":"@Override\n\tprotected void visitMethodCFG(MethodDescriptor methodDescriptor, CFG cfg) throws CheckedAnalysisException {\n\t\tif (DEBUG) {\n\t\t\tSystem.out.println(\"*** Analyzing method \" + methodDescriptor);\n\t\t}\n\t\t\n\t\tif (DEBUG_METHOD != null && !methodDescriptor.getName().equals(DEBUG_METHOD)) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tIAnalysisCache analysisCache = Global.getAnalysisCache();\n\n\t\t\tObligationDataflow dataflow = analysisCache.getMethodAnalysis(ObligationDataflow.class, methodDescriptor);\n\t\t\t\n\t\t\t// The ObligationPolicyDatabase contains the ObligationFactory\n\t\t\tObligationPolicyDatabase database = analysisCache.getDatabase(ObligationPolicyDatabase.class);\n\t\t\t\n\t\t\t// See if there are any states with nonempty obligation sets\n\t\t\tStateSet factAtExit = dataflow.getStartFact(cfg.getExit());\n\t\t\tSet<Obligation> leakedObligationSet = new HashSet<Obligation>();\n\t\t\tfor (Iterator<State> i = factAtExit.stateIterator(); i.hasNext();) {\n\t\t\t\tState state = i.next();\n\t\t\t\tfor (int id = 0; id < database.getFactory().getMaxObligationTypes(); ++id) {\n\t\t\t\t\tif (state.getObligationSet().getCount(id) > 0) {\n\t\t\t\t\t\tleakedObligationSet.add(database.getFactory().getObligationById(id));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (Obligation obligation : leakedObligationSet) {\n\t\t\t\tbugReporter.reportBug(new BugInstance(this, \"OBL_LEAKED_OBLIGATION\", NORMAL_PRIORITY)\n\t\t\t\t\t\t.addClassAndMethod(methodDescriptor)\n\t\t\t\t\t\t.addClass(obligation.getClassName()).describe(\"CLASS_REFTYPE\")\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (CFGBuilderException e) {\n\t\t\tbugReporter.logError(\"Error building CFG for \" + methodDescriptor, e);\n\t\t} catch (DataflowAnalysisException e) {\n\t\t\tbugReporter.logError(\"ObligationAnalysis error while analyzing \" + methodDescriptor, e);\n\t\t}\n\t}","commit_id":"72b697202f937a82d375b108a7755603b6de8e56","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private Obligation addsOrDeletesObligation(InstructionHandle handle, int action) {\n\t\tInstruction ins = handle.getInstruction();\n\n\t\tif (!(ins instanceof InvokeInstruction))\n\t\t\treturn null;\n\n\t\tInvokeInstruction inv = (InvokeInstruction) ins;\n\n\t\tConstantPoolGen cpg = methodGen.getConstantPool();\n\n\t\t// FIXME: could prescreen class here...?\n\t\t\n\t\tReferenceType type = inv.getReferenceType(cpg);\n\t\tif (!(type instanceof ObjectType)) {\n\t\t\t// We'll assume that methods called on an array object\n\t\t\t// don't add or remove any obligations.\n\t\t\treturn null;\n\t\t}\n\t\tString className = ((ObjectType) type).getClassName();\n\n\t\tString methodName = inv.getName(cpg);\n\t\tString signature = inv.getSignature(cpg);\n\t\tboolean isStatic = inv.getOpcode() == Constants.INVOKESTATIC;\n\n\t\tif (DEBUG) {\n\t\t\tSystem.out.println(\"Checking instruction: \" + handle);\n\t\t\tSystem.out.println(\"  class    =\" + className);\n\t\t\tSystem.out.println(\"  method   =\" + methodName);\n\t\t\tSystem.out.println(\"  signature=\" + signature);\n\t\t}\n\n\t\ttry {\n\t\t\treturn database.lookup(\n\t\t\t\tclassName, methodName, signature, isStatic, action);\n\t\t} catch (ClassNotFoundException e) {\n\t\t\tlookupFailureCallback.reportMissingClass(e);\n\t\t\treturn null;\n\t\t}\n\n\t}","id":63928,"modified_method":"private Obligation addsOrDeletesObligation(InstructionHandle handle, int action) {\n\t\tInstruction ins = handle.getInstruction();\n\n\t\tif (!(ins instanceof InvokeInstruction))\n\t\t\treturn null;\n\n\t\tInvokeInstruction inv = (InvokeInstruction) ins;\n\n\t\tConstantPoolGen cpg = methodGen.getConstantPool();\n\n\t\t// FIXME: could prescreen class here...?\n\t\t\n\t\tReferenceType type = inv.getReferenceType(cpg);\n\t\tif (!(type instanceof ObjectType)) {\n\t\t\t// We'll assume that methods called on an array object\n\t\t\t// don't add or remove any obligations.\n\t\t\treturn null;\n\t\t}\n\t\tString className = ((ObjectType) type).getClassName();\n\n\t\tString methodName = inv.getName(cpg);\n\t\tString signature = inv.getSignature(cpg);\n\t\tboolean isStatic = inv.getOpcode() == Constants.INVOKESTATIC;\n\n\t\tif (DEBUG) {\n\t\t\tSystem.out.println(\"Checking instruction: \" + handle);\n\t\t\tSystem.out.println(\"  class    =\" + className);\n\t\t\tSystem.out.println(\"  method   =\" + methodName);\n\t\t\tSystem.out.println(\"  signature=\" + signature);\n\t\t}\n\n\t\ttry {\n\t\t\treturn database.lookup(\n\t\t\t\tclassName, methodName, signature, isStatic, action);\n\t\t} catch (ClassNotFoundException e) {\n\t\t\terrorLogger.reportMissingClass(e);\n\t\t\treturn null;\n\t\t}\n\n\t}","commit_id":"72b697202f937a82d375b108a7755603b6de8e56","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n\t * Constructor.\n\t * \n\t * @param dfs       a DepthFirstSearch on the method to be analyzed\n\t * @param methodGen the MethodGen of the method being analyzed\n\t * @param factory   the ObligationFactory defining the obligation types\n\t * @param database  the PolicyDatabase defining the methods which\n\t *                  add and delete obligations\n\t * @param lookupFailureCallback callback to use when reporting\n\t *                              missing classes\n\t */\n\tpublic ObligationAnalysis(\n\t\t\tDepthFirstSearch dfs,\n\t\t\tTypeDataflow typeDataflow,\n\t\t\tIsNullValueDataflow invDataflow,\n\t\t\tMethodGen methodGen,\n\t\t\tObligationFactory factory,\n\t\t\tObligationPolicyDatabase database,\n\t\t\tRepositoryLookupFailureCallback lookupFailureCallback) {\n\t\tsuper(dfs);\n\t\tthis.typeDataflow = typeDataflow;\n\t\tthis.invDataflow = invDataflow;\n\t\tthis.methodGen = methodGen;\n\t\tthis.factory = factory;\n\t\tthis.database = database;\n\t\tthis.lookupFailureCallback = lookupFailureCallback;\n\t}","id":63929,"modified_method":"/**\n\t * Constructor.\n\t * \n\t * @param dfs       a DepthFirstSearch on the method to be analyzed\n\t * @param methodGen the MethodGen of the method being analyzed\n\t * @param factory   the ObligationFactory defining the obligation types\n\t * @param database  the PolicyDatabase defining the methods which\n\t *                  add and delete obligations\n\t * @param errorLogger callback to use when reporting\n\t *                              missing classes\n\t */\n\tpublic ObligationAnalysis(\n\t\t\tDepthFirstSearch dfs,\n\t\t\tTypeDataflow typeDataflow,\n\t\t\tIsNullValueDataflow invDataflow,\n\t\t\tMethodGen methodGen,\n\t\t\tObligationFactory factory,\n\t\t\tObligationPolicyDatabase database,\n\t\t\t/*RepositoryLookupFailureCallback lookupFailureCallback*/IErrorLogger errorLogger) {\n\t\tsuper(dfs);\n\t\tthis.typeDataflow = typeDataflow;\n\t\tthis.invDataflow = invDataflow;\n\t\tthis.methodGen = methodGen;\n\t\tthis.factory = factory;\n\t\tthis.database = database;\n\t\t//this.lookupFailureCallback = lookupFailureCallback;\n\t\tthis.errorLogger = errorLogger;\n\t}","commit_id":"72b697202f937a82d375b108a7755603b6de8e56","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public ObligationPolicyDatabase() {\n\t\tthis.entryList = new LinkedList<Entry>();\n\t}","id":63930,"modified_method":"public ObligationPolicyDatabase() {\n\t\tthis.factory = new ObligationFactory();\n\t\tthis.entryList = new LinkedList<Entry>();\n\t}","commit_id":"72b697202f937a82d375b108a7755603b6de8e56","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private String getKeypass(boolean selfSigning) {\n    return selfSigning ? \"keypass\" : getKeypass();\n  }","id":63931,"modified_method":"private String getKeypass(boolean selfSigning) {\n    return selfSigning ? \"keypass\" : Base64Converter.decode(getKeypass());\n  }","commit_id":"c33979cca3359432769f45bb06bd141a331f09f7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private String getStorepass(boolean selfSigning) {\n    return selfSigning ? \"storepass\" : getStorepass();\n  }","id":63932,"modified_method":"private String getStorepass(boolean selfSigning) {\n    return selfSigning ? \"storepass\" : Base64Converter.decode(getStorepass());\n  }","commit_id":"c33979cca3359432769f45bb06bd141a331f09f7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void apply() {\n    myProperties.setTitle(myTitleTF.getText());\n    myProperties.setVendor(myVendorTF.getText());\n    myProperties.setDescription(myDescriptionEditorPane.getText());\n    myProperties.setAppClass(myAppClass.getText());\n    myProperties.setWidth(myWidthTF.getText());\n    myProperties.setHeight(myHeightTF.getText());\n    myProperties.setHtmlParamFile(myHtmlParams.getText());\n    myProperties.setParamFile(myParams.getText());\n    myProperties.setUpdateMode(myUpdateInBackgroundCB.isSelected() ? JavaFxPackagerConstants.UPDATE_MODE_BACKGROUND \n                                                                   : JavaFxPackagerConstants.UPDATE_MODE_ALWAYS);\n    myProperties.setEnabledSigning(myEnableSigningCB.isSelected());\n    if (myDialog != null) {\n      myProperties.setSelfSigning(myDialog.myPanel.mySelfSignedRadioButton.isSelected());\n      myProperties.setAlias(myDialog.myPanel.myAliasTF.getText());\n      myProperties.setKeystore(myDialog.myPanel.myKeystore.getText());\n      myProperties.setKeypass(myDialog.myPanel.myKeypassTF.getText());\n      myProperties.setStorepass(myDialog.myPanel.myStorePassTF.getText());\n    }\n  }","id":63933,"modified_method":"@Override\n  public void apply() {\n    myProperties.setTitle(myTitleTF.getText());\n    myProperties.setVendor(myVendorTF.getText());\n    myProperties.setDescription(myDescriptionEditorPane.getText());\n    myProperties.setAppClass(myAppClass.getText());\n    myProperties.setWidth(myWidthTF.getText());\n    myProperties.setHeight(myHeightTF.getText());\n    myProperties.setHtmlParamFile(myHtmlParams.getText());\n    myProperties.setParamFile(myParams.getText());\n    myProperties.setUpdateMode(myUpdateInBackgroundCB.isSelected() ? JavaFxPackagerConstants.UPDATE_MODE_BACKGROUND \n                                                                   : JavaFxPackagerConstants.UPDATE_MODE_ALWAYS);\n    myProperties.setEnabledSigning(myEnableSigningCB.isSelected());\n    if (myDialog != null) {\n      myProperties.setSelfSigning(myDialog.myPanel.mySelfSignedRadioButton.isSelected());\n      myProperties.setAlias(myDialog.myPanel.myAliasTF.getText());\n      myProperties.setKeystore(myDialog.myPanel.myKeystore.getText());\n      myProperties.setKeypass(Base64Converter.encode(String.valueOf((myDialog.myPanel.myKeypassTF.getPassword()))));\n      myProperties.setStorepass(Base64Converter.encode(String.valueOf(myDialog.myPanel.myStorePassTF.getPassword())));\n    }\n  }","commit_id":"c33979cca3359432769f45bb06bd141a331f09f7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean isModified() {\n    if (isModified(myProperties.getTitle(), myTitleTF)) return true;\n    if (isModified(myProperties.getVendor(), myVendorTF)) return true;\n    if (isModified(myProperties.getDescription(), myDescriptionEditorPane)) return true;\n    if (isModified(myProperties.getWidth(), myWidthTF)) return true;\n    if (isModified(myProperties.getHeight(), myHeightTF)) return true;\n    if (isModified(myProperties.getAppClass(), myAppClass)) return true;\n    if (isModified(myProperties.getHtmlParamFile(), myHtmlParams)) return true;\n    if (isModified(myProperties.getParamFile(), myParams)) return true;\n    final boolean inBackground = Comparing.strEqual(myProperties.getUpdateMode(), JavaFxPackagerConstants.UPDATE_MODE_BACKGROUND);\n    if (inBackground != myUpdateInBackgroundCB.isSelected()) return true;\n    if (myProperties.isEnabledSigning() != myEnableSigningCB.isSelected()) return true;\n    if (myDialog != null) {\n      if (isModified(myProperties.getAlias(), myDialog.myPanel.myAliasTF)) return true;\n      if (isModified(myProperties.getKeystore(), myDialog.myPanel.myKeystore)) return true;\n      if (isModified(myProperties.getKeypass(), myDialog.myPanel.myKeypassTF)) return true;\n      if (isModified(myProperties.getStorepass(), myDialog.myPanel.myStorePassTF)) return true;\n      if (myProperties.isSelfSigning() != myDialog.myPanel.mySelfSignedRadioButton.isSelected()) return true;\n    }\n    return false;\n  }","id":63934,"modified_method":"@Override\n  public boolean isModified() {\n    if (isModified(myProperties.getTitle(), myTitleTF)) return true;\n    if (isModified(myProperties.getVendor(), myVendorTF)) return true;\n    if (isModified(myProperties.getDescription(), myDescriptionEditorPane)) return true;\n    if (isModified(myProperties.getWidth(), myWidthTF)) return true;\n    if (isModified(myProperties.getHeight(), myHeightTF)) return true;\n    if (isModified(myProperties.getAppClass(), myAppClass)) return true;\n    if (isModified(myProperties.getHtmlParamFile(), myHtmlParams)) return true;\n    if (isModified(myProperties.getParamFile(), myParams)) return true;\n    final boolean inBackground = Comparing.strEqual(myProperties.getUpdateMode(), JavaFxPackagerConstants.UPDATE_MODE_BACKGROUND);\n    if (inBackground != myUpdateInBackgroundCB.isSelected()) return true;\n    if (myProperties.isEnabledSigning() != myEnableSigningCB.isSelected()) return true;\n    if (myDialog != null) {\n      if (isModified(myProperties.getAlias(), myDialog.myPanel.myAliasTF)) return true;\n      if (isModified(myProperties.getKeystore(), myDialog.myPanel.myKeystore)) return true;\n      final String keypass = myProperties.getKeypass();\n      if (isModified(keypass != null ? Base64Converter.decode(keypass) : \"\", myDialog.myPanel.myKeypassTF)) return true;\n      final String storepass = myProperties.getStorepass();\n      if (isModified(storepass != null ? Base64Converter.decode(storepass) : \"\", myDialog.myPanel.myStorePassTF)) return true;\n      if (myProperties.isSelfSigning() != myDialog.myPanel.mySelfSignedRadioButton.isSelected()) return true;\n    }\n    return false;\n  }","commit_id":"c33979cca3359432769f45bb06bd141a331f09f7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void doOKAction() {\n    if (myPanel.mySignedByKeyRadioButton.isSelected()) {\n      if (StringUtil.isEmptyOrSpaces(myPanel.myAliasTF.getText())) {\n        Messages.showErrorDialog(myPanel.myWholePanel, \"Alias should be non-empty\");\n        return;\n      }\n      final String keystore = myPanel.myKeystore.getText();\n      if (StringUtil.isEmptyOrSpaces(keystore)) {\n        Messages.showErrorDialog(myPanel.myWholePanel, \"Path to the keystore file should be set\");\n        return;\n      }\n      if (!new File(keystore).isFile()) {\n        Messages.showErrorDialog(myPanel.myWholePanel, \"Keystore file should exist\");\n        return;\n      }\n      if (StringUtil.isEmptyOrSpaces(myPanel.myKeypassTF.getText()) || StringUtil.isEmptyOrSpaces(myPanel.myStorePassTF.getText())) {\n        Messages.showErrorDialog(myPanel.myWholePanel, \"Passwords should be set\");\n        return;\n      }\n    }\n    super.doOKAction();\n  }","id":63935,"modified_method":"@Override\n  protected void doOKAction() {\n    if (myPanel.mySignedByKeyRadioButton.isSelected()) {\n      if (StringUtil.isEmptyOrSpaces(myPanel.myAliasTF.getText())) {\n        Messages.showErrorDialog(myPanel.myWholePanel, \"Alias should be non-empty\");\n        return;\n      }\n      final String keystore = myPanel.myKeystore.getText();\n      if (StringUtil.isEmptyOrSpaces(keystore)) {\n        Messages.showErrorDialog(myPanel.myWholePanel, \"Path to the keystore file should be set\");\n        return;\n      }\n      if (!new File(keystore).isFile()) {\n        Messages.showErrorDialog(myPanel.myWholePanel, \"Keystore file should exist\");\n        return;\n      }\n      if (StringUtil.isEmptyOrSpaces(String.valueOf(myPanel.myKeypassTF.getPassword())) || \n          StringUtil.isEmptyOrSpaces(String.valueOf(myPanel.myStorePassTF.getPassword()))) {\n        Messages.showErrorDialog(myPanel.myWholePanel, \"Passwords should be set\");\n        return;\n      }\n    }\n    super.doOKAction();\n  }","commit_id":"c33979cca3359432769f45bb06bd141a331f09f7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected JavaFxEditCertificatesDialog(JComponent parent, JavaFxArtifactProperties properties, Project project) {\n    super(parent, true);\n    setTitle(\"Choose Certificate\");\n    init();\n    final ActionListener actionListener = new ActionListener() {\n      @Override\n      public void actionPerformed(ActionEvent e) {\n        UIUtil.setEnabled(myPanel.myKeysPanel, !myPanel.mySelfSignedRadioButton.isSelected(), true);\n      }\n    };\n    myPanel.mySelfSignedRadioButton.addActionListener(actionListener);\n    myPanel.mySignedByKeyRadioButton.addActionListener(actionListener);\n    final boolean selfSigning = properties.isSelfSigning();\n    UIUtil.setEnabled(myPanel.myKeysPanel, !selfSigning, true);\n    myPanel.mySelfSignedRadioButton.setSelected(selfSigning);\n    myPanel.mySignedByKeyRadioButton.setSelected(!selfSigning);\n\n    myPanel.myAliasTF.setText(properties.getAlias());\n    myPanel.myKeystore.setText(properties.getKeystore());\n    myPanel.myKeypassTF.setText(properties.getKeypass());\n    myPanel.myStorePassTF.setText(properties.getStorepass());\n    myPanel.myKeystore.addBrowseFolderListener(\"Choose Keystore File\", \"Select file containing generated keys\", project, BrowseFilesListener.SINGLE_FILE_DESCRIPTOR);\n  }","id":63936,"modified_method":"protected JavaFxEditCertificatesDialog(JComponent parent, JavaFxArtifactProperties properties, Project project) {\n    super(parent, true);\n    setTitle(\"Choose Certificate\");\n    init();\n    final ActionListener actionListener = new ActionListener() {\n      @Override\n      public void actionPerformed(ActionEvent e) {\n        UIUtil.setEnabled(myPanel.myKeysPanel, !myPanel.mySelfSignedRadioButton.isSelected(), true);\n      }\n    };\n    myPanel.mySelfSignedRadioButton.addActionListener(actionListener);\n    myPanel.mySignedByKeyRadioButton.addActionListener(actionListener);\n    final boolean selfSigning = properties.isSelfSigning();\n    UIUtil.setEnabled(myPanel.myKeysPanel, !selfSigning, true);\n    myPanel.mySelfSignedRadioButton.setSelected(selfSigning);\n    myPanel.mySignedByKeyRadioButton.setSelected(!selfSigning);\n\n    myPanel.myAliasTF.setText(properties.getAlias());\n    myPanel.myKeystore.setText(properties.getKeystore());\n    final String keypass = properties.getKeypass();\n    myPanel.myKeypassTF.setText(keypass != null ? Base64Converter.decode(keypass) : \"\");\n    final String storepass = properties.getStorepass();\n    myPanel.myStorePassTF.setText(storepass != null ? Base64Converter.decode(storepass) : \"\");\n    myPanel.myKeystore.addBrowseFolderListener(\"Choose Keystore File\", \"Select file containing generated keys\", project, BrowseFilesListener.SINGLE_FILE_DESCRIPTOR);\n  }","commit_id":"c33979cca3359432769f45bb06bd141a331f09f7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean connectToFTP()\r\n    {\r\n    \tboolean retval=false;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif(ftpclient==null || !ftpclient.connected())\r\n\t\t\t{\r\n\t\t    \t // Create ftp client to host:port ...\r\n\t\t        ftpclient = new FTPClient();\r\n\t\t        String realServername = jobMeta.environmentSubstitute(wServerName.getText());\r\n\t\t        ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n\t\t        \r\n\t\t        if (!Const.isEmpty(wProxyHost.getText())) \r\n\t\t        {\r\n\t\t      \t  String realProxy_host = jobMeta.environmentSubstitute(wProxyHost.getText());\r\n\t\t      \t  ftpclient.setRemoteAddr(InetAddress.getByName(realProxy_host));\r\n\t\t      \t  if(Const.isEmpty(wPort.getText()))\r\n\t\t      \t\t  ftpclient.setRemotePort(Const.toInt(wPort.getText(),21));\r\n\t\t\r\n\t\t      \t  // FIXME: Proper default port for proxy    \t  \r\n\t\t      \t  int port = Const.toInt(jobMeta.environmentSubstitute(wProxyHost.getText()), 21);\r\n\t\t      \t  if (port != 0) \r\n\t\t      \t  {\r\n\t\t      \t     ftpclient.setRemotePort(port);\r\n\t\t      \t  }\r\n\t\t        } \r\n\t\t        else \r\n\t\t        {\r\n\t\t            ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n\t\t                           \r\n\t\t        }\r\n\t\r\n\t\t        // login to ftp host ...\r\n\t\t        ftpclient.connect();     \r\n\t\t        String realUsername = jobMeta.environmentSubstitute(wUserName.getText()) +\r\n\t\t                              (!Const.isEmpty(wProxyHost.getText()) ? \"@\" + realServername : \"\") + \r\n\t\t                              (!Const.isEmpty(wProxyUsername.getText()) ? \" \" + jobMeta.environmentSubstitute(wProxyUsername.getText()) \r\n\t\t                          \t\t                           : \"\"); \r\n\t\t           \t\t            \r\n\t\t        String realPassword = jobMeta.environmentSubstitute(wPassword.getText()) + \r\n\t\t                              (!Const.isEmpty(wProxyPassword.getText()) ? \" \" + jobMeta.environmentSubstitute(wProxyPassword.getText()) : \"\" );\r\n\t\t        // login now ...\r\n\t\t        ftpclient.login(realUsername, realPassword);\r\n\t\t\t}  \r\n\t       \r\n\t        \t\r\n\t        retval=true;\r\n\t\t}\r\n\t     catch (Exception e)\r\n\t    {\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTPDelete.ErrorConnect.NOK\",e.getMessage()) +Const.CR);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTPDelete.ErrorConnect.Title.Bad\"));\r\n\t\t\tmb.open(); \r\n\t    } \r\n\t    return retval;\r\n    }","id":63937,"modified_method":"private boolean connectToFTP()\r\n    {\r\n    \tboolean retval=false;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif(ftpclient==null || !ftpclient.connected())\r\n\t\t\t{\r\n\t\t    \t // Create ftp client to host:port ...\r\n\t\t        ftpclient = new FTPClient();\r\n\t\t        String realServername = jobMeta.environmentSubstitute(wServerName.getText());\r\n\t\t        ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n\t\t        \r\n\t\t        if (!Const.isEmpty(wProxyHost.getText())) \r\n\t\t        {\r\n\t\t      \t  String realProxy_host = jobMeta.environmentSubstitute(wProxyHost.getText());\r\n\t\t      \t  ftpclient.setRemoteAddr(InetAddress.getByName(realProxy_host));\r\n\t\t      \t  if(Const.isEmpty(wPort.getText()))\r\n\t\t      \t\t  ftpclient.setRemotePort(Const.toInt(wPort.getText(),21));\r\n\t\t\r\n\t\t      \t  // FIXME: Proper default port for proxy    \t  \r\n\t\t      \t  int port = Const.toInt(jobMeta.environmentSubstitute(wProxyHost.getText()), 21);\r\n\t\t      \t  if (port != 0) \r\n\t\t      \t  {\r\n\t\t      \t     ftpclient.setRemotePort(port);\r\n\t\t      \t  }\r\n\t\t        } \r\n\t\t        else \r\n\t\t        {\r\n\t\t            ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n\t\t                           \r\n\t\t        }\r\n\t\r\n\t\t        // login to ftp host ...\r\n\t\t        ftpclient.connect();     \r\n\t\t        String realUsername = jobMeta.environmentSubstitute(wUserName.getText()) +\r\n\t\t                              (!Const.isEmpty(wProxyHost.getText()) ? \"@\" + realServername : \"\") + \r\n\t\t                              (!Const.isEmpty(wProxyUsername.getText()) ? \" \" + jobMeta.environmentSubstitute(wProxyUsername.getText()) \r\n\t\t                          \t\t                           : \"\"); \r\n\t\t           \t\t            \r\n\t\t        String realPassword = jobMeta.environmentSubstitute(wPassword.getText()) + \r\n\t\t                              (!Const.isEmpty(wProxyPassword.getText()) ? \" \" + jobMeta.environmentSubstitute(wProxyPassword.getText()) : \"\" );\r\n\t\t        // login now ...\r\n\t\t        ftpclient.login(realUsername, realPassword);\r\n\t\t        pwdFolder=ftpclient.pwd();\r\n\t\t\t}  \t\r\n\t        retval=true;\r\n\t\t}\r\n\t     catch (Exception e)\r\n\t    {\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTPDelete.ErrorConnect.NOK\",e.getMessage()) +Const.CR);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTPDelete.ErrorConnect.Title.Bad\"));\r\n\t\t\tmb.open(); \r\n\t    } \r\n\t    return retval;\r\n    }","commit_id":"d9c5b35958554ae92e3ecec4f4ca43fc2bf6a45a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public JobEntryInterface open()\r\n    {\r\n        Shell parent = getParent();\r\n        Display display = parent.getDisplay();\r\n\r\n        shell = new Shell(parent, props.getJobsDialogStyle());\r\n        props.setLook(shell);\r\n        JobDialog.setShellImage(shell, jobEntry);\r\n\r\n        ModifyListener lsMod = new ModifyListener()\r\n        {\r\n            public void modifyText(ModifyEvent e)\r\n            {\r\n            \tftpclient=null;\r\n            \tsftpclient=null;\r\n            \tconn=null;\r\n                jobEntry.setChanged();\r\n            }\r\n        };\r\n        changed = jobEntry.hasChanged();\r\n\r\n        FormLayout formLayout = new FormLayout();\r\n        formLayout.marginWidth = Const.FORM_MARGIN;\r\n        formLayout.marginHeight = Const.FORM_MARGIN;\r\n\r\n        shell.setLayout(formLayout);\r\n        shell.setText(Messages.getString(\"JobFTPDelete.Title\"));\r\n\r\n        int middle = props.getMiddlePct();\r\n        int margin = Const.MARGIN;\r\n\r\n        // Job entry name line\r\n        wName = new LabelText(shell, Messages.getString(\"JobFTPDelete.Name.Label\"), Messages\r\n            .getString(\"JobFTPDelete.Name.Tooltip\"));\r\n        wName.addModifyListener(lsMod);\r\n        fdName = new FormData();\r\n        fdName.top = new FormAttachment(0, 0);\r\n        fdName.left = new FormAttachment(0, 0);\r\n        fdName.right = new FormAttachment(100, 0);\r\n        wName.setLayoutData(fdName);\r\n        \r\n        \r\n        wTabFolder = new CTabFolder(shell, SWT.BORDER);\r\n \t\tprops.setLook(wTabFolder, Props.WIDGET_STYLE_TAB);\r\n \t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF GENERAL TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\twGeneralTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twGeneralTab.setText(Messages.getString(\"JobFTPDelete.Tab.General.Label\"));\r\n\t\t\r\n\t\twGeneralComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wGeneralComp);\r\n\r\n\t\tFormLayout generalLayout = new FormLayout();\r\n\t\tgeneralLayout.marginWidth  = 3;\r\n\t\tgeneralLayout.marginHeight = 3;\r\n\t\twGeneralComp.setLayout(generalLayout);\r\n        \r\n\t     // ////////////////////////\r\n\t     // START OF SERVER SETTINGS GROUP///\r\n\t     // /\r\n\t    wServerSettings = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wServerSettings);\r\n\t    wServerSettings.setText(Messages.getString(\"JobFTPDelete.ServerSettings.Group.Label\"));\r\n\r\n\t    FormLayout ServerSettingsgroupLayout = new FormLayout();\r\n\t    ServerSettingsgroupLayout.marginWidth = 10;\r\n\t    ServerSettingsgroupLayout.marginHeight = 10;\r\n\r\n\t    wServerSettings.setLayout(ServerSettingsgroupLayout);\r\n\r\n\t    // Protocol\r\n        wlProtocol=new Label(wServerSettings, SWT.RIGHT);\r\n        wlProtocol.setText(Messages.getString(\"JobFTPDelete.Protocol.Label\"));\r\n        props.setLook(wlProtocol);\r\n        fdlProtocol=new FormData();\r\n        fdlProtocol.left  = new FormAttachment(0, 0);\r\n        fdlProtocol.top   = new FormAttachment(wName, margin);\r\n        fdlProtocol.right = new FormAttachment(middle, 0);\r\n        wlProtocol.setLayoutData(fdlProtocol);\r\n        wProtocol=new Combo(wServerSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n        wProtocol.setToolTipText(Messages.getString(\"JobFTPDelete.Protocol.Tooltip\"));\r\n        wProtocol.add(\"FTP\");\r\n        wProtocol.add(\"SFTP\");\r\n        wProtocol.add(\"SSH\");\r\n        props.setLook(wProtocol);\r\n        fdProtocol=new FormData();\r\n        fdProtocol.left = new FormAttachment(middle, margin);\r\n        fdProtocol.top  = new FormAttachment(wName, margin);\r\n        fdProtocol.right= new FormAttachment(100, 0);        \r\n        wProtocol.setLayoutData(fdProtocol);\r\n        wProtocol.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\t activeFTPProtocol();\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t});\r\n\t    \r\n       \r\n\t    \r\n        // ServerName line\r\n        wServerName = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.Server.Label\"), Messages\r\n            .getString(\"JobFTPDelete.Server.Tooltip\"));\r\n        props.setLook(wServerName);\r\n        wServerName.addModifyListener(lsMod);\r\n        fdServerName = new FormData();\r\n        fdServerName.left = new FormAttachment(0, 0);\r\n        fdServerName.top = new FormAttachment(wProtocol, margin);\r\n        fdServerName.right = new FormAttachment(100, 0);\r\n        wServerName.setLayoutData(fdServerName);\r\n        \r\n        // Proxy port line\r\n        wPort = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.Port.Label\"), Messages.getString(\"JobFTPDelete.Port.Tooltip\"));\r\n        props.setLook(wPort);\r\n        wPort.addModifyListener(lsMod);\r\n        fdPort = new FormData();\r\n        fdPort.left \t= new FormAttachment(0, 0);\r\n        fdPort.top  \t= new FormAttachment(wServerName, margin);\r\n        fdPort.right\t= new FormAttachment(100, 0);\r\n        wPort.setLayoutData(fdPort);\r\n\r\n        // UserName line\r\n        wUserName = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.User.Label\"), Messages\r\n            .getString(\"JobFTPDelete.User.Tooltip\"));\r\n        props.setLook(wUserName);\r\n        wUserName.addModifyListener(lsMod);\r\n        fdUserName = new FormData();\r\n        fdUserName.left = new FormAttachment(0, 0);\r\n        fdUserName.top = new FormAttachment(wPort, margin);\r\n        fdUserName.right = new FormAttachment(100, 0);\r\n        wUserName.setLayoutData(fdUserName);\r\n\r\n        // Password line\r\n        wPassword = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.Password.Label\"), Messages\r\n            .getString(\"JobFTPDelete.Password.Tooltip\"));\r\n        props.setLook(wPassword);\r\n        wPassword.setEchoChar('*');\r\n        wPassword.addModifyListener(lsMod);\r\n        fdPassword = new FormData();\r\n        fdPassword.left = new FormAttachment(0, 0);\r\n        fdPassword.top = new FormAttachment(wUserName, margin);\r\n        fdPassword.right = new FormAttachment(100, 0);\r\n        wPassword.setLayoutData(fdPassword);\r\n\r\n        // OK, if the password contains a variable, we don't want to have the password hidden...\r\n        wPassword.getTextWidget().addModifyListener(new ModifyListener()\r\n        {\r\n            public void modifyText(ModifyEvent e)\r\n            {\r\n                checkPasswordVisible();\r\n            }\r\n        });\r\n\r\n        \r\n        // Use proxy...\r\n        wluseProxy = new Label(wServerSettings, SWT.RIGHT);\r\n        wluseProxy.setText(Messages.getString(\"JobFTPDelete.useProxy.Label\"));\r\n        props.setLook(wluseProxy);\r\n        fdluseProxy = new FormData();\r\n        fdluseProxy.left = new FormAttachment(0, 0);\r\n        fdluseProxy.top = new FormAttachment(wPassword, margin);\r\n        fdluseProxy.right = new FormAttachment(middle, 0);\r\n        wluseProxy.setLayoutData(fdluseProxy);\r\n        wuseProxy = new Button(wServerSettings, SWT.CHECK);\r\n        props.setLook(wuseProxy);\r\n        wuseProxy.setToolTipText(Messages.getString(\"JobFTPDelete.useProxy.Tooltip\"));\r\n        fduseProxy = new FormData();\r\n        fduseProxy.left = new FormAttachment(middle, margin);\r\n        fduseProxy.top = new FormAttachment(wPassword, margin);\r\n        fduseProxy.right = new FormAttachment(100, 0);\r\n        wuseProxy.setLayoutData(fduseProxy);\r\n        wuseProxy.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\t activeProxy();\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t});\r\n      \r\n        \r\n        // Proxy host line\r\n        wProxyHost = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.ProxyHost.Label\"), Messages.getString(\"JobFTPDelete.ProxyHost.Tooltip\"));\r\n        props.setLook(wProxyHost);\r\n        wProxyHost.addModifyListener(lsMod);\r\n        fdProxyHost = new FormData();\r\n        fdProxyHost.left \t= new FormAttachment(0, 0);\r\n        fdProxyHost.top\t\t= new FormAttachment(wuseProxy, margin);\r\n        fdProxyHost.right\t= new FormAttachment(100, 0);\r\n        wProxyHost.setLayoutData(fdProxyHost);\r\n\r\n        // Proxy port line\r\n        wProxyPort = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.ProxyPort.Label\"), Messages.getString(\"JobFTPDelete.ProxyPort.Tooltip\"));\r\n        props.setLook(wProxyPort);\r\n        wProxyPort.addModifyListener(lsMod);\r\n        fdProxyPort = new FormData();\r\n        fdProxyPort.left \t= new FormAttachment(0, 0);\r\n        fdProxyPort.top  \t= new FormAttachment(wProxyHost, margin);\r\n        fdProxyPort.right\t= new FormAttachment(100, 0);\r\n        wProxyPort.setLayoutData(fdProxyPort);\r\n\r\n        // Proxy username line\r\n        wProxyUsername = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.ProxyUsername.Label\"), Messages.getString(\"JobFTPDelete.ProxyUsername.Tooltip\"));\r\n        props.setLook(wProxyUsername);\r\n        wProxyUsername.addModifyListener(lsMod);\r\n        fdProxyUsername = new FormData();\r\n        fdProxyUsername.left = new FormAttachment(0, 0);\r\n        fdProxyUsername.top  = new FormAttachment(wProxyPort, margin);\r\n        fdProxyUsername.right= new FormAttachment(100, 0);\r\n        wProxyUsername.setLayoutData(fdProxyUsername);\r\n        \r\n        // Proxy password line\r\n        wProxyPassword = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.ProxyPassword.Label\"), Messages.getString(\"JobFTPDelete.ProxyPassword.Tooltip\"));\r\n        props.setLook(wProxyPassword);\r\n        wProxyPassword.addModifyListener(lsMod);\r\n        fdProxyPasswd=new FormData();\r\n        fdProxyPasswd.left = new FormAttachment(0, 0);\r\n        fdProxyPasswd.top  = new FormAttachment(wProxyUsername, margin);\r\n        fdProxyPasswd.right= new FormAttachment(100, 0);\r\n        wProxyPassword.setLayoutData(fdProxyPasswd);\r\n        \r\n        \r\n        // usePublicKey\r\n        wlusePublicKey = new Label(wServerSettings, SWT.RIGHT);\r\n        wlusePublicKey.setText(Messages.getString(\"JobFTPDelete.usePublicKeyFiles.Label\"));\r\n        props.setLook(wlusePublicKey);\r\n        fdlusePublicKey = new FormData();\r\n        fdlusePublicKey.left = new FormAttachment(0, 0);\r\n        fdlusePublicKey.top = new FormAttachment(wProxyPassword, margin);\r\n        fdlusePublicKey.right = new FormAttachment(middle, 0);\r\n        wlusePublicKey.setLayoutData(fdlusePublicKey);\r\n        wusePublicKey = new Button(wServerSettings, SWT.CHECK);\r\n        wusePublicKey.setToolTipText(Messages.getString(\"JobFTPDelete.usePublicKeyFiles.Tooltip\"));\r\n        props.setLook(wusePublicKey);\r\n        fdusePublicKey = new FormData();\r\n        fdusePublicKey.left = new FormAttachment(middle, margin);\r\n        fdusePublicKey.top = new FormAttachment(wProxyPassword, margin);\r\n        fdusePublicKey.right = new FormAttachment(100, 0);\r\n        wusePublicKey.setLayoutData(fdusePublicKey);\r\n        wusePublicKey.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tactiveUsePublicKey();\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t});\r\n        \r\n        // Key File\r\n        wlKeyFilename = new Label(wServerSettings, SWT.RIGHT);\r\n        wlKeyFilename.setText(Messages.getString(\"JobFTPDelete.KeyFilename.Label\"));\r\n        props.setLook(wlKeyFilename);\r\n        fdlKeyFilename = new FormData();\r\n        fdlKeyFilename.left = new FormAttachment(0, 0);\r\n        fdlKeyFilename.top = new FormAttachment(wusePublicKey, margin);\r\n        fdlKeyFilename.right = new FormAttachment(middle, -margin);\r\n        wlKeyFilename.setLayoutData(fdlKeyFilename);\r\n\r\n        wbKeyFilename = new Button(wServerSettings, SWT.PUSH | SWT.CENTER);\r\n        props.setLook(wbKeyFilename);\r\n        wbKeyFilename.setText(Messages.getString(\"System.Button.Browse\"));\r\n        fdbKeyFilename = new FormData();\r\n        fdbKeyFilename.right = new FormAttachment(100, 0);\r\n        fdbKeyFilename.top = new FormAttachment(wusePublicKey, 0);\r\n        // fdbKeyFilename.height = 22;\r\n        wbKeyFilename.setLayoutData(fdbKeyFilename);\r\n\r\n        wKeyFilename = new TextVar(jobMeta,wServerSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n        wKeyFilename.setToolTipText(Messages.getString(\"JobFTPDelete.KeyFilename.Tooltip\"));\r\n        props.setLook(wKeyFilename);\r\n        wKeyFilename.addModifyListener(lsMod);\r\n        fdKeyFilename = new FormData();\r\n        fdKeyFilename.left = new FormAttachment(middle, margin);\r\n        fdKeyFilename.top = new FormAttachment(wusePublicKey, margin);\r\n        fdKeyFilename.right = new FormAttachment(wbKeyFilename, -margin);\r\n        wKeyFilename.setLayoutData(fdKeyFilename);\r\n\r\n        // Whenever something changes, set the tooltip to the expanded version:\r\n        wKeyFilename.addModifyListener(new ModifyListener()\r\n        {\r\n            public void modifyText(ModifyEvent e)\r\n            {\r\n                wKeyFilename.setToolTipText(jobMeta.environmentSubstitute(wKeyFilename.getText()));\r\n            }\r\n        });\r\n\r\n        wbKeyFilename.addSelectionListener(new SelectionAdapter()\r\n        {\r\n            public void widgetSelected(SelectionEvent e)\r\n            {\r\n                FileDialog dialog = new FileDialog(shell, SWT.OPEN);\r\n                dialog.setFilterExtensions(new String[] { \"*.pem\", \"*\" });\r\n                if (wKeyFilename.getText() != null)\r\n                {\r\n                    dialog.setFileName(jobMeta.environmentSubstitute(wKeyFilename.getText()));\r\n                }\r\n                dialog.setFilterNames(FILETYPES);\r\n                if (dialog.open() != null)\r\n                {\r\n                    wKeyFilename.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR + dialog.getFileName());\r\n                }\r\n            }\r\n        });\r\n\r\n        // keyfilePass line\r\n        wkeyfilePass = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.keyfilePass.Label\"), \r\n        \t\tMessages.getString(\"JobFTPDelete.keyfilePass.Tooltip\"));\r\n        props.setLook(wkeyfilePass);\r\n        wkeyfilePass.setEchoChar('*');\r\n        wkeyfilePass.addModifyListener(lsMod);\r\n        fdkeyfilePass = new FormData();\r\n        fdkeyfilePass.left = new FormAttachment(0, 0);\r\n        fdkeyfilePass.top = new FormAttachment(wKeyFilename, margin);\r\n        fdkeyfilePass.right = new FormAttachment(100, 0);\r\n        wkeyfilePass.setLayoutData(fdkeyfilePass);\r\n\r\n        // OK, if the keyfilePass contains a variable, we don't want to have the keyfilePass hidden...\r\n        wkeyfilePass.getTextWidget().addModifyListener(new ModifyListener()\r\n        {\r\n            public void modifyText(ModifyEvent e)\r\n            {\r\n            \tDatabaseDialog.checkPasswordVisible(wkeyfilePass.getTextWidget());\r\n            }\r\n        });\r\n        \r\n\r\n\r\n        \r\n        \r\n        \r\n\t\t// Test connection button\r\n\t\twTest=new Button(wServerSettings,SWT.PUSH);\r\n\t\twTest.setText(Messages.getString(\"JobFTPDelete.TestConnection.Label\"));\r\n\t \tprops.setLook(wTest);\r\n\t\tfdTest=new FormData();\r\n\t\twTest.setToolTipText(Messages.getString(\"JobFTPDelete.TestConnection.Tooltip\"));\r\n\t\t//fdTest.left = new FormAttachment(middle, 0);\r\n\t\tfdTest.top  = new FormAttachment(wkeyfilePass, margin);\r\n\t\tfdTest.right= new FormAttachment(100, 0);\r\n\t\twTest.setLayoutData(fdTest);\r\n        \r\n\r\n\t     fdServerSettings = new FormData();\r\n\t     fdServerSettings.left = new FormAttachment(0, margin);\r\n\t     fdServerSettings.top = new FormAttachment(wName, margin);\r\n\t     fdServerSettings.right = new FormAttachment(100, -margin);\r\n\t     wServerSettings.setLayoutData(fdServerSettings);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF SERVER SETTINGS GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n        \r\n\r\n\t   \r\n\r\n\t\tfdGeneralComp=new FormData();\r\n\t\tfdGeneralComp.left  = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.top   = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.right = new FormAttachment(100, 0);\r\n\t\tfdGeneralComp.bottom= new FormAttachment(100, 0);\r\n\t\twGeneralComp.setLayoutData(fdGeneralComp);\r\n\t\t\r\n\t\twGeneralComp.layout();\r\n\t\twGeneralTab.setControl(wGeneralComp);\r\n \t\tprops.setLook(wGeneralComp);\r\n \t\t\r\n \t\t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF GENERAL TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF Advanced TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\twFilesTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twFilesTab.setText(Messages.getString(\"JobFTPDelete.Tab.Files.Label\"));\r\n\t\t\r\n\t\twFilesComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wFilesComp);\r\n\r\n\t\tFormLayout AdvancedLayout = new FormLayout();\r\n\t\tAdvancedLayout.marginWidth  = 3;\r\n\t\tAdvancedLayout.marginHeight = 3;\r\n\t\twFilesComp.setLayout(AdvancedLayout);\r\n\t\t\r\n\t\t // ////////////////////////\r\n\t     // START OF Advanced SETTINGS GROUP///\r\n\t     // /\r\n\t     wAdvancedSettings = new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t     props.setLook(wAdvancedSettings);\r\n\t     wAdvancedSettings.setText(Messages.getString(\"JobFTPDelete.AdvancedSettings.Group.Label\"));\r\n\r\n\t     FormLayout AdvancedSettingsgroupLayout = new FormLayout();\r\n\t     AdvancedSettingsgroupLayout.marginWidth = 10;\r\n\t     AdvancedSettingsgroupLayout.marginHeight = 10;\r\n\r\n\t     wAdvancedSettings.setLayout(AdvancedSettingsgroupLayout);\r\n\t     \r\n\t     \r\n     // Timeout line\r\n     wTimeout = new LabelTextVar(jobMeta,wAdvancedSettings, Messages.getString(\"JobFTPDelete.Timeout.Label\"), Messages\r\n         .getString(\"JobFTPDelete.Timeout.Tooltip\"));\r\n     props.setLook(wTimeout);\r\n     wTimeout.addModifyListener(lsMod);\r\n     fdTimeout = new FormData();\r\n     fdTimeout.left = new FormAttachment(0, 0);\r\n     fdTimeout.top = new FormAttachment(wActive, margin);\r\n     fdTimeout.right = new FormAttachment(100, 0);\r\n     wTimeout.setLayoutData(fdTimeout);\r\n\r\n\r\n\t     // active connection?\r\n\t     wlActive = new Label(wAdvancedSettings, SWT.RIGHT);\r\n\t     wlActive.setText(Messages.getString(\"JobFTPDelete.ActiveConns.Label\"));\r\n\t     props.setLook(wlActive);\r\n\t     fdlActive = new FormData();\r\n\t     fdlActive.left = new FormAttachment(0, 0);\r\n\t     fdlActive.top = new FormAttachment(wTimeout, margin);\r\n\t     fdlActive.right = new FormAttachment(middle, 0);\r\n\t     wlActive.setLayoutData(fdlActive);\r\n\t     wActive = new Button(wAdvancedSettings, SWT.CHECK);\r\n\t     wActive.setToolTipText(Messages.getString(\"JobFTPDelete.ActiveConns.Tooltip\"));\r\n\t     props.setLook(wActive);\r\n\t     fdActive = new FormData();\r\n\t     fdActive.left = new FormAttachment(middle, margin);\r\n\t     fdActive.top = new FormAttachment(wTimeout, margin);\r\n\t     fdActive.right = new FormAttachment(100, 0);\r\n\t     wActive.setLayoutData(fdActive);\r\n \r\n\t    \r\n\t     fdAdvancedSettings = new FormData();\r\n\t     fdAdvancedSettings.left = new FormAttachment(0, margin);\r\n\t     fdAdvancedSettings.top = new FormAttachment(0, margin);\r\n\t     fdAdvancedSettings.right = new FormAttachment(100, -margin);\r\n\t     wAdvancedSettings.setLayoutData(fdAdvancedSettings);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF Advanced SETTINGS GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t // ////////////////////////\r\n\t     // START OF Remote SETTINGS GROUP///\r\n\t     // /\r\n\t    wRemoteSettings = new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wRemoteSettings);\r\n\t    wRemoteSettings.setText(Messages.getString(\"JobFTPDelete.RemoteSettings.Group.Label\"));\r\n\r\n\t    FormLayout RemoteSettinsgroupLayout = new FormLayout();\r\n\t    RemoteSettinsgroupLayout.marginWidth = 10;\r\n\t    RemoteSettinsgroupLayout.marginHeight = 10;\r\n\r\n\t    wRemoteSettings.setLayout(RemoteSettinsgroupLayout);\r\n\t    \r\n\t    \r\n\t    \r\n\r\n        // Get arguments from previous result...\r\n        wlgetPrevious = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlgetPrevious.setText(Messages.getString(\"JobFTPDelete.getPrevious.Label\"));\r\n        props.setLook(wlgetPrevious);\r\n        fdlgetPrevious = new FormData();\r\n        fdlgetPrevious.left = new FormAttachment(0, 0);\r\n        fdlgetPrevious.top = new FormAttachment(wAdvancedSettings, margin);\r\n        fdlgetPrevious.right = new FormAttachment(middle, 0);\r\n        wlgetPrevious.setLayoutData(fdlgetPrevious);\r\n        wgetPrevious = new Button(wRemoteSettings, SWT.CHECK);\r\n        props.setLook(wgetPrevious);\r\n        wgetPrevious.setToolTipText(Messages.getString(\"JobFTPDelete.getPrevious.Tooltip\"));\r\n        fdgetPrevious = new FormData();\r\n        fdgetPrevious.left = new FormAttachment(middle, margin);\r\n        fdgetPrevious.top = new FormAttachment(wAdvancedSettings, margin);\r\n        fdgetPrevious.right = new FormAttachment(100, 0);\r\n        wgetPrevious.setLayoutData(fdgetPrevious);\r\n        wgetPrevious.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\t activeCopyFromPrevious();\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t});\r\n\t    \r\n       // FTP directory\r\n       wlFtpDirectory = new Label(wRemoteSettings, SWT.RIGHT);\r\n       wlFtpDirectory.setText(Messages.getString(\"JobFTPDelete.RemoteDir.Label\"));\r\n       props.setLook(wlFtpDirectory);\r\n       fdlFtpDirectory= new FormData();\r\n       fdlFtpDirectory.left = new FormAttachment(0, 0);\r\n       fdlFtpDirectory.top = new FormAttachment(wgetPrevious, margin);\r\n       fdlFtpDirectory.right = new FormAttachment(middle, 0);\r\n       wlFtpDirectory.setLayoutData(fdlFtpDirectory);\r\n\t    \r\n\t    // Test remote folder  button ...\r\n\t\twbTestChangeFolderExists=new Button(wRemoteSettings, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTestChangeFolderExists);\r\n\t\twbTestChangeFolderExists.setText(Messages.getString(\"JobFTPDelete.TestFolderExists.Label\"));\r\n\t\tfdbTestChangeFolderExists=new FormData();\r\n\t\tfdbTestChangeFolderExists.right= new FormAttachment(100, 0);\r\n\t\tfdbTestChangeFolderExists.top  = new FormAttachment(wgetPrevious, margin);\r\n\t\twbTestChangeFolderExists.setLayoutData(fdbTestChangeFolderExists);\r\n\r\n       wFtpDirectory = new TextVar(jobMeta,wRemoteSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n          .getString(\"JobFTPDelete.RemoteDir.Tooltip\"));\r\n      props.setLook(wFtpDirectory);\r\n      wFtpDirectory.addModifyListener(lsMod);\r\n      fdFtpDirectory = new FormData();\r\n      fdFtpDirectory.left = new FormAttachment(middle, margin);\r\n      fdFtpDirectory.top = new FormAttachment(wgetPrevious, margin);\r\n      fdFtpDirectory.right = new FormAttachment(wbTestChangeFolderExists, -margin);\r\n      wFtpDirectory.setLayoutData(fdFtpDirectory);\r\n      \r\n       \r\n       // Wildcard line\r\n       wWildcard = new LabelTextVar(jobMeta,wRemoteSettings, Messages.getString(\"JobFTPDelete.Wildcard.Label\"), Messages\r\n           .getString(\"JobFTPDelete.Wildcard.Tooltip\"));\r\n       props.setLook(wWildcard);\r\n       wWildcard.addModifyListener(lsMod);\r\n       fdWildcard = new FormData();\r\n       fdWildcard.left = new FormAttachment(0, 0);\r\n       fdWildcard.top = new FormAttachment(wFtpDirectory, margin);\r\n       fdWildcard.right = new FormAttachment(100, 0);\r\n       wWildcard.setLayoutData(fdWildcard);\r\n       \r\n     \r\n     \r\n     \r\n      \r\n     \r\n       fdRemoteSettings = new FormData();\r\n       fdRemoteSettings.left = new FormAttachment(0, margin);\r\n       fdRemoteSettings.top = new FormAttachment(wAdvancedSettings, margin);\r\n       fdRemoteSettings.right = new FormAttachment(100, -margin);\r\n       wRemoteSettings.setLayoutData(fdRemoteSettings);\r\n      // ///////////////////////////////////////////////////////////\r\n      // / END OF Remote SETTINGSGROUP\r\n      // ///////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t // SuccessOngrouping?\r\n\t     // ////////////////////////\r\n\t     // START OF SUCCESS ON GROUP///\r\n\t     // /\r\n\t    wSuccessOn= new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wSuccessOn);\r\n\t    wSuccessOn.setText(Messages.getString(\"JobFTPDelete.SuccessOn.Group.Label\"));\r\n\r\n\t    FormLayout successongroupLayout = new FormLayout();\r\n\t    successongroupLayout.marginWidth = 10;\r\n\t    successongroupLayout.marginHeight = 10;\r\n\r\n\t    wSuccessOn.setLayout(successongroupLayout);\r\n\t    \r\n\r\n\t    //Success Condition\r\n\t  \twlSuccessCondition = new Label(wSuccessOn, SWT.RIGHT);\r\n\t  \twlSuccessCondition.setText(Messages.getString(\"JobFTPDelete.SuccessCondition.Label\") + \" \");\r\n\t  \tprops.setLook(wlSuccessCondition);\r\n\t  \tfdlSuccessCondition = new FormData();\r\n\t  \tfdlSuccessCondition.left = new FormAttachment(0, 0);\r\n\t  \tfdlSuccessCondition.right = new FormAttachment(middle, 0);\r\n\t  \tfdlSuccessCondition.top = new FormAttachment(wRemoteSettings, margin);\r\n\t  \twlSuccessCondition.setLayoutData(fdlSuccessCondition);\r\n\t  \twSuccessCondition = new CCombo(wSuccessOn, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTPDelete.SuccessWhenAllWorksFine.Label\"));\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTPDelete.SuccessWhenAtLeat.Label\"));\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTPDelete.SuccessWhenNrErrorsLessThan.Label\"));\r\n\t  \twSuccessCondition.select(0); // +1: starts at -1\r\n\t  \t\r\n\t\tprops.setLook(wSuccessCondition);\r\n\t\tfdSuccessCondition= new FormData();\r\n\t\tfdSuccessCondition.left = new FormAttachment(middle, 0);\r\n\t\tfdSuccessCondition.top = new FormAttachment(wRemoteSettings, margin);\r\n\t\tfdSuccessCondition.right = new FormAttachment(100, 0);\r\n\t\twSuccessCondition.setLayoutData(fdSuccessCondition);\r\n\t\twSuccessCondition.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tactiveSuccessCondition();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Success when number of errors less than\r\n\t\twlNrErrorsLessThan= new Label(wSuccessOn, SWT.RIGHT);\r\n\t\twlNrErrorsLessThan.setText(Messages.getString(\"JobFTPDelete.NrBadFormedLessThan.Label\") + \" \");\r\n\t\tprops.setLook(wlNrErrorsLessThan);\r\n\t\tfdlNrErrorsLessThan= new FormData();\r\n\t\tfdlNrErrorsLessThan.left = new FormAttachment(0, 0);\r\n\t\tfdlNrErrorsLessThan.top = new FormAttachment(wSuccessCondition, margin);\r\n\t\tfdlNrErrorsLessThan.right = new FormAttachment(middle, -margin);\r\n\t\twlNrErrorsLessThan.setLayoutData(fdlNrErrorsLessThan);\r\n\t\t\r\n\t\t\r\n\t\twNrErrorsLessThan= new TextVar(jobMeta,wSuccessOn, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n\t\t\t.getString(\"JobFTPDelete.NrBadFormedLessThan.Tooltip\"));\r\n\t\tprops.setLook(wNrErrorsLessThan);\r\n\t\twNrErrorsLessThan.addModifyListener(lsMod);\r\n\t\tfdNrErrorsLessThan= new FormData();\r\n\t\tfdNrErrorsLessThan.left = new FormAttachment(middle, 0);\r\n\t\tfdNrErrorsLessThan.top = new FormAttachment(wSuccessCondition, margin);\r\n\t\tfdNrErrorsLessThan.right = new FormAttachment(100, -margin);\r\n\t\twNrErrorsLessThan.setLayoutData(fdNrErrorsLessThan);\r\n\t\t\r\n\t\r\n\t    fdSuccessOn= new FormData();\r\n\t    fdSuccessOn.left = new FormAttachment(0, margin);\r\n\t    fdSuccessOn.top = new FormAttachment(wRemoteSettings, margin);\r\n\t    fdSuccessOn.right = new FormAttachment(100, -margin);\r\n\t    wSuccessOn.setLayoutData(fdSuccessOn);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF Success ON GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tfdFilesComp=new FormData();\r\n\t\tfdFilesComp.left  = new FormAttachment(0, 0);\r\n\t\tfdFilesComp.top   = new FormAttachment(0, 0);\r\n\t\tfdFilesComp.right = new FormAttachment(100, 0);\r\n\t\tfdFilesComp.bottom= new FormAttachment(100, 0);\r\n\t\twFilesComp.setLayoutData(fdFilesComp);\r\n\t\t\r\n\t\twFilesComp.layout();\r\n\t\twFilesTab.setControl(wFilesComp);\r\n \t\tprops.setLook(wFilesComp);\r\n \t\t\r\n \t\t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF Advanced TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t\r\n\t\tfdTabFolder = new FormData();\r\n\t\tfdTabFolder.left  = new FormAttachment(0, 0);\r\n\t\tfdTabFolder.top   = new FormAttachment(wName, margin);\r\n\t\tfdTabFolder.right = new FormAttachment(100, 0);\r\n\t\tfdTabFolder.bottom= new FormAttachment(100, -50);\r\n\t\twTabFolder.setLayoutData(fdTabFolder);\r\n\t\t\r\n\t\t\r\n\r\n        wOK = new Button(shell, SWT.PUSH);\r\n        wOK.setText(Messages.getString(\"System.Button.OK\"));\r\n        wCancel = new Button(shell, SWT.PUSH);\r\n        wCancel.setText(Messages.getString(\"System.Button.Cancel\"));\r\n\r\n        BaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, wTabFolder);\r\n\r\n        // Add listeners\r\n        lsCancel = new Listener()\r\n        {\r\n            public void handleEvent(Event e)\r\n            {\r\n                cancel();\r\n            }\r\n        };\r\n        lsOK = new Listener()\r\n        {\r\n            public void handleEvent(Event e)\r\n            {\r\n                ok();\r\n            }\r\n        };\r\n        lsTest     = new Listener() { public void handleEvent(Event e) { test(); } };\r\n        lsCheckFolder     = new Listener() { public void handleEvent(Event e) { checkFTPFolder(); } };\r\n        \r\n        wCancel.addListener(SWT.Selection, lsCancel);\r\n        wOK.addListener(SWT.Selection, lsOK);\r\n        wTest.addListener    (SWT.Selection, lsTest    );\r\n        wbTestChangeFolderExists.addListener    (SWT.Selection, lsCheckFolder    );\r\n\r\n        \r\n        lsDef = new SelectionAdapter()\r\n        {\r\n            public void widgetDefaultSelected(SelectionEvent e)\r\n            {\r\n                ok();\r\n            }\r\n        };\r\n\r\n        wName.addSelectionListener(lsDef);\r\n        wServerName.addSelectionListener(lsDef);\r\n        wUserName.addSelectionListener(lsDef);\r\n        wPassword.addSelectionListener(lsDef);\r\n        wFtpDirectory.addSelectionListener(lsDef);\r\n        wFtpDirectory.addSelectionListener(lsDef);\r\n        wWildcard.addSelectionListener(lsDef);\r\n        wTimeout.addSelectionListener(lsDef);\r\n\r\n        // Detect X or ALT-F4 or something that kills this window...\r\n        shell.addShellListener(new ShellAdapter()\r\n        {\r\n            public void shellClosed(ShellEvent e)\r\n            {\r\n                cancel();\r\n            }\r\n        });\r\n\r\n        getData();\r\n        activeSuccessCondition();\r\n        activeUsePublicKey();\r\n        activeProxy();\r\n        activeFTPProtocol();\r\n        activeCopyFromPrevious();\r\n        \r\n        wTabFolder.setSelection(0);\r\n        BaseStepDialog.setSize(shell);\r\n\r\n        shell.open();\r\n        props.setDialogSize(shell, \"JobFTPDeleteDialogSize\");\r\n        while (!shell.isDisposed())\r\n        {\r\n            if (!display.readAndDispatch())\r\n                display.sleep();\r\n        }\r\n        return jobEntry;\r\n    }","id":63938,"modified_method":"public JobEntryInterface open()\r\n    {\r\n        Shell parent = getParent();\r\n        Display display = parent.getDisplay();\r\n\r\n        shell = new Shell(parent, props.getJobsDialogStyle());\r\n        props.setLook(shell);\r\n        JobDialog.setShellImage(shell, jobEntry);\r\n\r\n        ModifyListener lsMod = new ModifyListener()\r\n        {\r\n            public void modifyText(ModifyEvent e)\r\n            {\r\n            \tpwdFolder=null;\r\n            \tftpclient=null;\r\n            \tsftpclient=null;\r\n            \tconn=null;\r\n                jobEntry.setChanged();\r\n            }\r\n        };\r\n        changed = jobEntry.hasChanged();\r\n\r\n        FormLayout formLayout = new FormLayout();\r\n        formLayout.marginWidth = Const.FORM_MARGIN;\r\n        formLayout.marginHeight = Const.FORM_MARGIN;\r\n\r\n        shell.setLayout(formLayout);\r\n        shell.setText(Messages.getString(\"JobFTPDelete.Title\"));\r\n\r\n        int middle = props.getMiddlePct();\r\n        int margin = Const.MARGIN;\r\n\r\n        // Job entry name line\r\n        wName = new LabelText(shell, Messages.getString(\"JobFTPDelete.Name.Label\"), Messages\r\n            .getString(\"JobFTPDelete.Name.Tooltip\"));\r\n        wName.addModifyListener(lsMod);\r\n        fdName = new FormData();\r\n        fdName.top = new FormAttachment(0, 0);\r\n        fdName.left = new FormAttachment(0, 0);\r\n        fdName.right = new FormAttachment(100, 0);\r\n        wName.setLayoutData(fdName);\r\n        \r\n        \r\n        wTabFolder = new CTabFolder(shell, SWT.BORDER);\r\n \t\tprops.setLook(wTabFolder, Props.WIDGET_STYLE_TAB);\r\n \t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF GENERAL TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\twGeneralTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twGeneralTab.setText(Messages.getString(\"JobFTPDelete.Tab.General.Label\"));\r\n\t\t\r\n\t\twGeneralComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wGeneralComp);\r\n\r\n\t\tFormLayout generalLayout = new FormLayout();\r\n\t\tgeneralLayout.marginWidth  = 3;\r\n\t\tgeneralLayout.marginHeight = 3;\r\n\t\twGeneralComp.setLayout(generalLayout);\r\n        \r\n\t     // ////////////////////////\r\n\t     // START OF SERVER SETTINGS GROUP///\r\n\t     // /\r\n\t    wServerSettings = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wServerSettings);\r\n\t    wServerSettings.setText(Messages.getString(\"JobFTPDelete.ServerSettings.Group.Label\"));\r\n\r\n\t    FormLayout ServerSettingsgroupLayout = new FormLayout();\r\n\t    ServerSettingsgroupLayout.marginWidth = 10;\r\n\t    ServerSettingsgroupLayout.marginHeight = 10;\r\n\r\n\t    wServerSettings.setLayout(ServerSettingsgroupLayout);\r\n\r\n\t    // Protocol\r\n        wlProtocol=new Label(wServerSettings, SWT.RIGHT);\r\n        wlProtocol.setText(Messages.getString(\"JobFTPDelete.Protocol.Label\"));\r\n        props.setLook(wlProtocol);\r\n        fdlProtocol=new FormData();\r\n        fdlProtocol.left  = new FormAttachment(0, 0);\r\n        fdlProtocol.top   = new FormAttachment(wName, margin);\r\n        fdlProtocol.right = new FormAttachment(middle, 0);\r\n        wlProtocol.setLayoutData(fdlProtocol);\r\n        wProtocol=new Combo(wServerSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n        wProtocol.setToolTipText(Messages.getString(\"JobFTPDelete.Protocol.Tooltip\"));\r\n        wProtocol.add(\"FTP\");\r\n        wProtocol.add(\"SFTP\");\r\n        wProtocol.add(\"SSH\");\r\n        props.setLook(wProtocol);\r\n        fdProtocol=new FormData();\r\n        fdProtocol.left = new FormAttachment(middle, margin);\r\n        fdProtocol.top  = new FormAttachment(wName, margin);\r\n        fdProtocol.right= new FormAttachment(100, 0);        \r\n        wProtocol.setLayoutData(fdProtocol);\r\n        wProtocol.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\t activeFTPProtocol();\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t});\r\n\t    \r\n       \r\n\t    \r\n        // ServerName line\r\n        wServerName = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.Server.Label\"), Messages\r\n            .getString(\"JobFTPDelete.Server.Tooltip\"));\r\n        props.setLook(wServerName);\r\n        wServerName.addModifyListener(lsMod);\r\n        fdServerName = new FormData();\r\n        fdServerName.left = new FormAttachment(0, 0);\r\n        fdServerName.top = new FormAttachment(wProtocol, margin);\r\n        fdServerName.right = new FormAttachment(100, 0);\r\n        wServerName.setLayoutData(fdServerName);\r\n        \r\n        // Proxy port line\r\n        wPort = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.Port.Label\"), Messages.getString(\"JobFTPDelete.Port.Tooltip\"));\r\n        props.setLook(wPort);\r\n        wPort.addModifyListener(lsMod);\r\n        fdPort = new FormData();\r\n        fdPort.left \t= new FormAttachment(0, 0);\r\n        fdPort.top  \t= new FormAttachment(wServerName, margin);\r\n        fdPort.right\t= new FormAttachment(100, 0);\r\n        wPort.setLayoutData(fdPort);\r\n\r\n        // UserName line\r\n        wUserName = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.User.Label\"), Messages\r\n            .getString(\"JobFTPDelete.User.Tooltip\"));\r\n        props.setLook(wUserName);\r\n        wUserName.addModifyListener(lsMod);\r\n        fdUserName = new FormData();\r\n        fdUserName.left = new FormAttachment(0, 0);\r\n        fdUserName.top = new FormAttachment(wPort, margin);\r\n        fdUserName.right = new FormAttachment(100, 0);\r\n        wUserName.setLayoutData(fdUserName);\r\n\r\n        // Password line\r\n        wPassword = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.Password.Label\"), Messages\r\n            .getString(\"JobFTPDelete.Password.Tooltip\"));\r\n        props.setLook(wPassword);\r\n        wPassword.setEchoChar('*');\r\n        wPassword.addModifyListener(lsMod);\r\n        fdPassword = new FormData();\r\n        fdPassword.left = new FormAttachment(0, 0);\r\n        fdPassword.top = new FormAttachment(wUserName, margin);\r\n        fdPassword.right = new FormAttachment(100, 0);\r\n        wPassword.setLayoutData(fdPassword);\r\n\r\n        // OK, if the password contains a variable, we don't want to have the password hidden...\r\n        wPassword.getTextWidget().addModifyListener(new ModifyListener()\r\n        {\r\n            public void modifyText(ModifyEvent e)\r\n            {\r\n                checkPasswordVisible();\r\n            }\r\n        });\r\n\r\n        \r\n        // Use proxy...\r\n        wluseProxy = new Label(wServerSettings, SWT.RIGHT);\r\n        wluseProxy.setText(Messages.getString(\"JobFTPDelete.useProxy.Label\"));\r\n        props.setLook(wluseProxy);\r\n        fdluseProxy = new FormData();\r\n        fdluseProxy.left = new FormAttachment(0, 0);\r\n        fdluseProxy.top = new FormAttachment(wPassword, margin);\r\n        fdluseProxy.right = new FormAttachment(middle, 0);\r\n        wluseProxy.setLayoutData(fdluseProxy);\r\n        wuseProxy = new Button(wServerSettings, SWT.CHECK);\r\n        props.setLook(wuseProxy);\r\n        wuseProxy.setToolTipText(Messages.getString(\"JobFTPDelete.useProxy.Tooltip\"));\r\n        fduseProxy = new FormData();\r\n        fduseProxy.left = new FormAttachment(middle, margin);\r\n        fduseProxy.top = new FormAttachment(wPassword, margin);\r\n        fduseProxy.right = new FormAttachment(100, 0);\r\n        wuseProxy.setLayoutData(fduseProxy);\r\n        wuseProxy.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\t activeProxy();\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t});\r\n      \r\n        \r\n        // Proxy host line\r\n        wProxyHost = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.ProxyHost.Label\"), Messages.getString(\"JobFTPDelete.ProxyHost.Tooltip\"));\r\n        props.setLook(wProxyHost);\r\n        wProxyHost.addModifyListener(lsMod);\r\n        fdProxyHost = new FormData();\r\n        fdProxyHost.left \t= new FormAttachment(0, 0);\r\n        fdProxyHost.top\t\t= new FormAttachment(wuseProxy, margin);\r\n        fdProxyHost.right\t= new FormAttachment(100, 0);\r\n        wProxyHost.setLayoutData(fdProxyHost);\r\n\r\n        // Proxy port line\r\n        wProxyPort = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.ProxyPort.Label\"), Messages.getString(\"JobFTPDelete.ProxyPort.Tooltip\"));\r\n        props.setLook(wProxyPort);\r\n        wProxyPort.addModifyListener(lsMod);\r\n        fdProxyPort = new FormData();\r\n        fdProxyPort.left \t= new FormAttachment(0, 0);\r\n        fdProxyPort.top  \t= new FormAttachment(wProxyHost, margin);\r\n        fdProxyPort.right\t= new FormAttachment(100, 0);\r\n        wProxyPort.setLayoutData(fdProxyPort);\r\n\r\n        // Proxy username line\r\n        wProxyUsername = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.ProxyUsername.Label\"), Messages.getString(\"JobFTPDelete.ProxyUsername.Tooltip\"));\r\n        props.setLook(wProxyUsername);\r\n        wProxyUsername.addModifyListener(lsMod);\r\n        fdProxyUsername = new FormData();\r\n        fdProxyUsername.left = new FormAttachment(0, 0);\r\n        fdProxyUsername.top  = new FormAttachment(wProxyPort, margin);\r\n        fdProxyUsername.right= new FormAttachment(100, 0);\r\n        wProxyUsername.setLayoutData(fdProxyUsername);\r\n        \r\n        // Proxy password line\r\n        wProxyPassword = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.ProxyPassword.Label\"), Messages.getString(\"JobFTPDelete.ProxyPassword.Tooltip\"));\r\n        props.setLook(wProxyPassword);\r\n        wProxyPassword.addModifyListener(lsMod);\r\n        fdProxyPasswd=new FormData();\r\n        fdProxyPasswd.left = new FormAttachment(0, 0);\r\n        fdProxyPasswd.top  = new FormAttachment(wProxyUsername, margin);\r\n        fdProxyPasswd.right= new FormAttachment(100, 0);\r\n        wProxyPassword.setLayoutData(fdProxyPasswd);\r\n        \r\n        \r\n        // usePublicKey\r\n        wlusePublicKey = new Label(wServerSettings, SWT.RIGHT);\r\n        wlusePublicKey.setText(Messages.getString(\"JobFTPDelete.usePublicKeyFiles.Label\"));\r\n        props.setLook(wlusePublicKey);\r\n        fdlusePublicKey = new FormData();\r\n        fdlusePublicKey.left = new FormAttachment(0, 0);\r\n        fdlusePublicKey.top = new FormAttachment(wProxyPassword, margin);\r\n        fdlusePublicKey.right = new FormAttachment(middle, 0);\r\n        wlusePublicKey.setLayoutData(fdlusePublicKey);\r\n        wusePublicKey = new Button(wServerSettings, SWT.CHECK);\r\n        wusePublicKey.setToolTipText(Messages.getString(\"JobFTPDelete.usePublicKeyFiles.Tooltip\"));\r\n        props.setLook(wusePublicKey);\r\n        fdusePublicKey = new FormData();\r\n        fdusePublicKey.left = new FormAttachment(middle, margin);\r\n        fdusePublicKey.top = new FormAttachment(wProxyPassword, margin);\r\n        fdusePublicKey.right = new FormAttachment(100, 0);\r\n        wusePublicKey.setLayoutData(fdusePublicKey);\r\n        wusePublicKey.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tactiveUsePublicKey();\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t});\r\n        \r\n        // Key File\r\n        wlKeyFilename = new Label(wServerSettings, SWT.RIGHT);\r\n        wlKeyFilename.setText(Messages.getString(\"JobFTPDelete.KeyFilename.Label\"));\r\n        props.setLook(wlKeyFilename);\r\n        fdlKeyFilename = new FormData();\r\n        fdlKeyFilename.left = new FormAttachment(0, 0);\r\n        fdlKeyFilename.top = new FormAttachment(wusePublicKey, margin);\r\n        fdlKeyFilename.right = new FormAttachment(middle, -margin);\r\n        wlKeyFilename.setLayoutData(fdlKeyFilename);\r\n\r\n        wbKeyFilename = new Button(wServerSettings, SWT.PUSH | SWT.CENTER);\r\n        props.setLook(wbKeyFilename);\r\n        wbKeyFilename.setText(Messages.getString(\"System.Button.Browse\"));\r\n        fdbKeyFilename = new FormData();\r\n        fdbKeyFilename.right = new FormAttachment(100, 0);\r\n        fdbKeyFilename.top = new FormAttachment(wusePublicKey, 0);\r\n        // fdbKeyFilename.height = 22;\r\n        wbKeyFilename.setLayoutData(fdbKeyFilename);\r\n\r\n        wKeyFilename = new TextVar(jobMeta,wServerSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n        wKeyFilename.setToolTipText(Messages.getString(\"JobFTPDelete.KeyFilename.Tooltip\"));\r\n        props.setLook(wKeyFilename);\r\n        wKeyFilename.addModifyListener(lsMod);\r\n        fdKeyFilename = new FormData();\r\n        fdKeyFilename.left = new FormAttachment(middle, margin);\r\n        fdKeyFilename.top = new FormAttachment(wusePublicKey, margin);\r\n        fdKeyFilename.right = new FormAttachment(wbKeyFilename, -margin);\r\n        wKeyFilename.setLayoutData(fdKeyFilename);\r\n\r\n        // Whenever something changes, set the tooltip to the expanded version:\r\n        wKeyFilename.addModifyListener(new ModifyListener()\r\n        {\r\n            public void modifyText(ModifyEvent e)\r\n            {\r\n                wKeyFilename.setToolTipText(jobMeta.environmentSubstitute(wKeyFilename.getText()));\r\n            }\r\n        });\r\n\r\n        wbKeyFilename.addSelectionListener(new SelectionAdapter()\r\n        {\r\n            public void widgetSelected(SelectionEvent e)\r\n            {\r\n                FileDialog dialog = new FileDialog(shell, SWT.OPEN);\r\n                dialog.setFilterExtensions(new String[] { \"*.pem\", \"*\" });\r\n                if (wKeyFilename.getText() != null)\r\n                {\r\n                    dialog.setFileName(jobMeta.environmentSubstitute(wKeyFilename.getText()));\r\n                }\r\n                dialog.setFilterNames(FILETYPES);\r\n                if (dialog.open() != null)\r\n                {\r\n                    wKeyFilename.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR + dialog.getFileName());\r\n                }\r\n            }\r\n        });\r\n\r\n        // keyfilePass line\r\n        wkeyfilePass = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPDelete.keyfilePass.Label\"), \r\n        \t\tMessages.getString(\"JobFTPDelete.keyfilePass.Tooltip\"));\r\n        props.setLook(wkeyfilePass);\r\n        wkeyfilePass.setEchoChar('*');\r\n        wkeyfilePass.addModifyListener(lsMod);\r\n        fdkeyfilePass = new FormData();\r\n        fdkeyfilePass.left = new FormAttachment(0, 0);\r\n        fdkeyfilePass.top = new FormAttachment(wKeyFilename, margin);\r\n        fdkeyfilePass.right = new FormAttachment(100, 0);\r\n        wkeyfilePass.setLayoutData(fdkeyfilePass);\r\n\r\n        // OK, if the keyfilePass contains a variable, we don't want to have the keyfilePass hidden...\r\n        wkeyfilePass.getTextWidget().addModifyListener(new ModifyListener()\r\n        {\r\n            public void modifyText(ModifyEvent e)\r\n            {\r\n            \tDatabaseDialog.checkPasswordVisible(wkeyfilePass.getTextWidget());\r\n            }\r\n        });\r\n        \r\n\r\n\r\n        \r\n        \r\n        \r\n\t\t// Test connection button\r\n\t\twTest=new Button(wServerSettings,SWT.PUSH);\r\n\t\twTest.setText(Messages.getString(\"JobFTPDelete.TestConnection.Label\"));\r\n\t \tprops.setLook(wTest);\r\n\t\tfdTest=new FormData();\r\n\t\twTest.setToolTipText(Messages.getString(\"JobFTPDelete.TestConnection.Tooltip\"));\r\n\t\t//fdTest.left = new FormAttachment(middle, 0);\r\n\t\tfdTest.top  = new FormAttachment(wkeyfilePass, margin);\r\n\t\tfdTest.right= new FormAttachment(100, 0);\r\n\t\twTest.setLayoutData(fdTest);\r\n        \r\n\r\n\t     fdServerSettings = new FormData();\r\n\t     fdServerSettings.left = new FormAttachment(0, margin);\r\n\t     fdServerSettings.top = new FormAttachment(wName, margin);\r\n\t     fdServerSettings.right = new FormAttachment(100, -margin);\r\n\t     wServerSettings.setLayoutData(fdServerSettings);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF SERVER SETTINGS GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n        \r\n\r\n\t   \r\n\r\n\t\tfdGeneralComp=new FormData();\r\n\t\tfdGeneralComp.left  = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.top   = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.right = new FormAttachment(100, 0);\r\n\t\tfdGeneralComp.bottom= new FormAttachment(100, 0);\r\n\t\twGeneralComp.setLayoutData(fdGeneralComp);\r\n\t\t\r\n\t\twGeneralComp.layout();\r\n\t\twGeneralTab.setControl(wGeneralComp);\r\n \t\tprops.setLook(wGeneralComp);\r\n \t\t\r\n \t\t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF GENERAL TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF Advanced TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\twFilesTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twFilesTab.setText(Messages.getString(\"JobFTPDelete.Tab.Files.Label\"));\r\n\t\t\r\n\t\twFilesComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wFilesComp);\r\n\r\n\t\tFormLayout AdvancedLayout = new FormLayout();\r\n\t\tAdvancedLayout.marginWidth  = 3;\r\n\t\tAdvancedLayout.marginHeight = 3;\r\n\t\twFilesComp.setLayout(AdvancedLayout);\r\n\t\t\r\n\t\t // ////////////////////////\r\n\t     // START OF Advanced SETTINGS GROUP///\r\n\t     // /\r\n\t     wAdvancedSettings = new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t     props.setLook(wAdvancedSettings);\r\n\t     wAdvancedSettings.setText(Messages.getString(\"JobFTPDelete.AdvancedSettings.Group.Label\"));\r\n\r\n\t     FormLayout AdvancedSettingsgroupLayout = new FormLayout();\r\n\t     AdvancedSettingsgroupLayout.marginWidth = 10;\r\n\t     AdvancedSettingsgroupLayout.marginHeight = 10;\r\n\r\n\t     wAdvancedSettings.setLayout(AdvancedSettingsgroupLayout);\r\n\t     \r\n\t     \r\n     // Timeout line\r\n     wTimeout = new LabelTextVar(jobMeta,wAdvancedSettings, Messages.getString(\"JobFTPDelete.Timeout.Label\"), Messages\r\n         .getString(\"JobFTPDelete.Timeout.Tooltip\"));\r\n     props.setLook(wTimeout);\r\n     wTimeout.addModifyListener(lsMod);\r\n     fdTimeout = new FormData();\r\n     fdTimeout.left = new FormAttachment(0, 0);\r\n     fdTimeout.top = new FormAttachment(wActive, margin);\r\n     fdTimeout.right = new FormAttachment(100, 0);\r\n     wTimeout.setLayoutData(fdTimeout);\r\n\r\n\r\n\t     // active connection?\r\n\t     wlActive = new Label(wAdvancedSettings, SWT.RIGHT);\r\n\t     wlActive.setText(Messages.getString(\"JobFTPDelete.ActiveConns.Label\"));\r\n\t     props.setLook(wlActive);\r\n\t     fdlActive = new FormData();\r\n\t     fdlActive.left = new FormAttachment(0, 0);\r\n\t     fdlActive.top = new FormAttachment(wTimeout, margin);\r\n\t     fdlActive.right = new FormAttachment(middle, 0);\r\n\t     wlActive.setLayoutData(fdlActive);\r\n\t     wActive = new Button(wAdvancedSettings, SWT.CHECK);\r\n\t     wActive.setToolTipText(Messages.getString(\"JobFTPDelete.ActiveConns.Tooltip\"));\r\n\t     props.setLook(wActive);\r\n\t     fdActive = new FormData();\r\n\t     fdActive.left = new FormAttachment(middle, margin);\r\n\t     fdActive.top = new FormAttachment(wTimeout, margin);\r\n\t     fdActive.right = new FormAttachment(100, 0);\r\n\t     wActive.setLayoutData(fdActive);\r\n \r\n\t    \r\n\t     fdAdvancedSettings = new FormData();\r\n\t     fdAdvancedSettings.left = new FormAttachment(0, margin);\r\n\t     fdAdvancedSettings.top = new FormAttachment(0, margin);\r\n\t     fdAdvancedSettings.right = new FormAttachment(100, -margin);\r\n\t     wAdvancedSettings.setLayoutData(fdAdvancedSettings);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF Advanced SETTINGS GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t // ////////////////////////\r\n\t     // START OF Remote SETTINGS GROUP///\r\n\t     // /\r\n\t    wRemoteSettings = new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wRemoteSettings);\r\n\t    wRemoteSettings.setText(Messages.getString(\"JobFTPDelete.RemoteSettings.Group.Label\"));\r\n\r\n\t    FormLayout RemoteSettinsgroupLayout = new FormLayout();\r\n\t    RemoteSettinsgroupLayout.marginWidth = 10;\r\n\t    RemoteSettinsgroupLayout.marginHeight = 10;\r\n\r\n\t    wRemoteSettings.setLayout(RemoteSettinsgroupLayout);\r\n\t    \r\n\t    \r\n\t    \r\n\r\n        // Get arguments from previous result...\r\n        wlgetPrevious = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlgetPrevious.setText(Messages.getString(\"JobFTPDelete.getPrevious.Label\"));\r\n        props.setLook(wlgetPrevious);\r\n        fdlgetPrevious = new FormData();\r\n        fdlgetPrevious.left = new FormAttachment(0, 0);\r\n        fdlgetPrevious.top = new FormAttachment(wAdvancedSettings, margin);\r\n        fdlgetPrevious.right = new FormAttachment(middle, 0);\r\n        wlgetPrevious.setLayoutData(fdlgetPrevious);\r\n        wgetPrevious = new Button(wRemoteSettings, SWT.CHECK);\r\n        props.setLook(wgetPrevious);\r\n        wgetPrevious.setToolTipText(Messages.getString(\"JobFTPDelete.getPrevious.Tooltip\"));\r\n        fdgetPrevious = new FormData();\r\n        fdgetPrevious.left = new FormAttachment(middle, margin);\r\n        fdgetPrevious.top = new FormAttachment(wAdvancedSettings, margin);\r\n        fdgetPrevious.right = new FormAttachment(100, 0);\r\n        wgetPrevious.setLayoutData(fdgetPrevious);\r\n        wgetPrevious.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\t activeCopyFromPrevious();\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t});\r\n\t    \r\n       // FTP directory\r\n       wlFtpDirectory = new Label(wRemoteSettings, SWT.RIGHT);\r\n       wlFtpDirectory.setText(Messages.getString(\"JobFTPDelete.RemoteDir.Label\"));\r\n       props.setLook(wlFtpDirectory);\r\n       fdlFtpDirectory= new FormData();\r\n       fdlFtpDirectory.left = new FormAttachment(0, 0);\r\n       fdlFtpDirectory.top = new FormAttachment(wgetPrevious, margin);\r\n       fdlFtpDirectory.right = new FormAttachment(middle, 0);\r\n       wlFtpDirectory.setLayoutData(fdlFtpDirectory);\r\n\t    \r\n\t    // Test remote folder  button ...\r\n\t\twbTestChangeFolderExists=new Button(wRemoteSettings, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTestChangeFolderExists);\r\n\t\twbTestChangeFolderExists.setText(Messages.getString(\"JobFTPDelete.TestFolderExists.Label\"));\r\n\t\tfdbTestChangeFolderExists=new FormData();\r\n\t\tfdbTestChangeFolderExists.right= new FormAttachment(100, 0);\r\n\t\tfdbTestChangeFolderExists.top  = new FormAttachment(wgetPrevious, margin);\r\n\t\twbTestChangeFolderExists.setLayoutData(fdbTestChangeFolderExists);\r\n\r\n       wFtpDirectory = new TextVar(jobMeta,wRemoteSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n          .getString(\"JobFTPDelete.RemoteDir.Tooltip\"));\r\n      props.setLook(wFtpDirectory);\r\n      wFtpDirectory.addModifyListener(lsMod);\r\n      fdFtpDirectory = new FormData();\r\n      fdFtpDirectory.left = new FormAttachment(middle, margin);\r\n      fdFtpDirectory.top = new FormAttachment(wgetPrevious, margin);\r\n      fdFtpDirectory.right = new FormAttachment(wbTestChangeFolderExists, -margin);\r\n      wFtpDirectory.setLayoutData(fdFtpDirectory);\r\n      \r\n       \r\n       // Wildcard line\r\n       wWildcard = new LabelTextVar(jobMeta,wRemoteSettings, Messages.getString(\"JobFTPDelete.Wildcard.Label\"), Messages\r\n           .getString(\"JobFTPDelete.Wildcard.Tooltip\"));\r\n       props.setLook(wWildcard);\r\n       wWildcard.addModifyListener(lsMod);\r\n       fdWildcard = new FormData();\r\n       fdWildcard.left = new FormAttachment(0, 0);\r\n       fdWildcard.top = new FormAttachment(wFtpDirectory, margin);\r\n       fdWildcard.right = new FormAttachment(100, 0);\r\n       wWildcard.setLayoutData(fdWildcard);\r\n       \r\n     \r\n     \r\n     \r\n      \r\n     \r\n       fdRemoteSettings = new FormData();\r\n       fdRemoteSettings.left = new FormAttachment(0, margin);\r\n       fdRemoteSettings.top = new FormAttachment(wAdvancedSettings, margin);\r\n       fdRemoteSettings.right = new FormAttachment(100, -margin);\r\n       wRemoteSettings.setLayoutData(fdRemoteSettings);\r\n      // ///////////////////////////////////////////////////////////\r\n      // / END OF Remote SETTINGSGROUP\r\n      // ///////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t // SuccessOngrouping?\r\n\t     // ////////////////////////\r\n\t     // START OF SUCCESS ON GROUP///\r\n\t     // /\r\n\t    wSuccessOn= new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wSuccessOn);\r\n\t    wSuccessOn.setText(Messages.getString(\"JobFTPDelete.SuccessOn.Group.Label\"));\r\n\r\n\t    FormLayout successongroupLayout = new FormLayout();\r\n\t    successongroupLayout.marginWidth = 10;\r\n\t    successongroupLayout.marginHeight = 10;\r\n\r\n\t    wSuccessOn.setLayout(successongroupLayout);\r\n\t    \r\n\r\n\t    //Success Condition\r\n\t  \twlSuccessCondition = new Label(wSuccessOn, SWT.RIGHT);\r\n\t  \twlSuccessCondition.setText(Messages.getString(\"JobFTPDelete.SuccessCondition.Label\") + \" \");\r\n\t  \tprops.setLook(wlSuccessCondition);\r\n\t  \tfdlSuccessCondition = new FormData();\r\n\t  \tfdlSuccessCondition.left = new FormAttachment(0, 0);\r\n\t  \tfdlSuccessCondition.right = new FormAttachment(middle, 0);\r\n\t  \tfdlSuccessCondition.top = new FormAttachment(wRemoteSettings, margin);\r\n\t  \twlSuccessCondition.setLayoutData(fdlSuccessCondition);\r\n\t  \twSuccessCondition = new CCombo(wSuccessOn, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTPDelete.SuccessWhenAllWorksFine.Label\"));\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTPDelete.SuccessWhenAtLeat.Label\"));\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTPDelete.SuccessWhenNrErrorsLessThan.Label\"));\r\n\t  \twSuccessCondition.select(0); // +1: starts at -1\r\n\t  \t\r\n\t\tprops.setLook(wSuccessCondition);\r\n\t\tfdSuccessCondition= new FormData();\r\n\t\tfdSuccessCondition.left = new FormAttachment(middle, 0);\r\n\t\tfdSuccessCondition.top = new FormAttachment(wRemoteSettings, margin);\r\n\t\tfdSuccessCondition.right = new FormAttachment(100, 0);\r\n\t\twSuccessCondition.setLayoutData(fdSuccessCondition);\r\n\t\twSuccessCondition.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tactiveSuccessCondition();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Success when number of errors less than\r\n\t\twlNrErrorsLessThan= new Label(wSuccessOn, SWT.RIGHT);\r\n\t\twlNrErrorsLessThan.setText(Messages.getString(\"JobFTPDelete.NrBadFormedLessThan.Label\") + \" \");\r\n\t\tprops.setLook(wlNrErrorsLessThan);\r\n\t\tfdlNrErrorsLessThan= new FormData();\r\n\t\tfdlNrErrorsLessThan.left = new FormAttachment(0, 0);\r\n\t\tfdlNrErrorsLessThan.top = new FormAttachment(wSuccessCondition, margin);\r\n\t\tfdlNrErrorsLessThan.right = new FormAttachment(middle, -margin);\r\n\t\twlNrErrorsLessThan.setLayoutData(fdlNrErrorsLessThan);\r\n\t\t\r\n\t\t\r\n\t\twNrErrorsLessThan= new TextVar(jobMeta,wSuccessOn, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n\t\t\t.getString(\"JobFTPDelete.NrBadFormedLessThan.Tooltip\"));\r\n\t\tprops.setLook(wNrErrorsLessThan);\r\n\t\twNrErrorsLessThan.addModifyListener(lsMod);\r\n\t\tfdNrErrorsLessThan= new FormData();\r\n\t\tfdNrErrorsLessThan.left = new FormAttachment(middle, 0);\r\n\t\tfdNrErrorsLessThan.top = new FormAttachment(wSuccessCondition, margin);\r\n\t\tfdNrErrorsLessThan.right = new FormAttachment(100, -margin);\r\n\t\twNrErrorsLessThan.setLayoutData(fdNrErrorsLessThan);\r\n\t\t\r\n\t\r\n\t    fdSuccessOn= new FormData();\r\n\t    fdSuccessOn.left = new FormAttachment(0, margin);\r\n\t    fdSuccessOn.top = new FormAttachment(wRemoteSettings, margin);\r\n\t    fdSuccessOn.right = new FormAttachment(100, -margin);\r\n\t    wSuccessOn.setLayoutData(fdSuccessOn);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF Success ON GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tfdFilesComp=new FormData();\r\n\t\tfdFilesComp.left  = new FormAttachment(0, 0);\r\n\t\tfdFilesComp.top   = new FormAttachment(0, 0);\r\n\t\tfdFilesComp.right = new FormAttachment(100, 0);\r\n\t\tfdFilesComp.bottom= new FormAttachment(100, 0);\r\n\t\twFilesComp.setLayoutData(fdFilesComp);\r\n\t\t\r\n\t\twFilesComp.layout();\r\n\t\twFilesTab.setControl(wFilesComp);\r\n \t\tprops.setLook(wFilesComp);\r\n \t\t\r\n \t\t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF Advanced TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t\r\n\t\tfdTabFolder = new FormData();\r\n\t\tfdTabFolder.left  = new FormAttachment(0, 0);\r\n\t\tfdTabFolder.top   = new FormAttachment(wName, margin);\r\n\t\tfdTabFolder.right = new FormAttachment(100, 0);\r\n\t\tfdTabFolder.bottom= new FormAttachment(100, -50);\r\n\t\twTabFolder.setLayoutData(fdTabFolder);\r\n\t\t\r\n\t\t\r\n\r\n        wOK = new Button(shell, SWT.PUSH);\r\n        wOK.setText(Messages.getString(\"System.Button.OK\"));\r\n        wCancel = new Button(shell, SWT.PUSH);\r\n        wCancel.setText(Messages.getString(\"System.Button.Cancel\"));\r\n\r\n        BaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, wTabFolder);\r\n\r\n        // Add listeners\r\n        lsCancel = new Listener()\r\n        {\r\n            public void handleEvent(Event e)\r\n            {\r\n                cancel();\r\n            }\r\n        };\r\n        lsOK = new Listener()\r\n        {\r\n            public void handleEvent(Event e)\r\n            {\r\n                ok();\r\n            }\r\n        };\r\n        lsTest     = new Listener() { public void handleEvent(Event e) { test(); } };\r\n        lsCheckFolder     = new Listener() { public void handleEvent(Event e) { checkFTPFolder(); } };\r\n        \r\n        wCancel.addListener(SWT.Selection, lsCancel);\r\n        wOK.addListener(SWT.Selection, lsOK);\r\n        wTest.addListener    (SWT.Selection, lsTest    );\r\n        wbTestChangeFolderExists.addListener    (SWT.Selection, lsCheckFolder    );\r\n\r\n        \r\n        lsDef = new SelectionAdapter()\r\n        {\r\n            public void widgetDefaultSelected(SelectionEvent e)\r\n            {\r\n                ok();\r\n            }\r\n        };\r\n\r\n        wName.addSelectionListener(lsDef);\r\n        wServerName.addSelectionListener(lsDef);\r\n        wUserName.addSelectionListener(lsDef);\r\n        wPassword.addSelectionListener(lsDef);\r\n        wFtpDirectory.addSelectionListener(lsDef);\r\n        wFtpDirectory.addSelectionListener(lsDef);\r\n        wWildcard.addSelectionListener(lsDef);\r\n        wTimeout.addSelectionListener(lsDef);\r\n\r\n        // Detect X or ALT-F4 or something that kills this window...\r\n        shell.addShellListener(new ShellAdapter()\r\n        {\r\n            public void shellClosed(ShellEvent e)\r\n            {\r\n                cancel();\r\n            }\r\n        });\r\n\r\n        getData();\r\n        activeSuccessCondition();\r\n        activeUsePublicKey();\r\n        activeProxy();\r\n        activeFTPProtocol();\r\n        activeCopyFromPrevious();\r\n        \r\n        wTabFolder.setSelection(0);\r\n        BaseStepDialog.setSize(shell);\r\n\r\n        shell.open();\r\n        props.setDialogSize(shell, \"JobFTPDeleteDialogSize\");\r\n        while (!shell.isDisposed())\r\n        {\r\n            if (!display.readAndDispatch())\r\n                display.sleep();\r\n        }\r\n        return jobEntry;\r\n    }","commit_id":"d9c5b35958554ae92e3ecec4f4ca43fc2bf6a45a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void checkFTPFolder()\r\n    {\r\n    \tboolean folderexists=false;\r\n    \tString errmsg=\"\";\r\n    \ttry\r\n    \t{\r\n\t    \tString realfoldername=jobMeta.environmentSubstitute(wFtpDirectory.getText());\r\n\t    \tif(!Const.isEmpty(realfoldername))\r\n\t    \t{\r\n\t    \t\tif(connect())\r\n\t    \t\t{\r\n\t    \t\t\tif(wProtocol.getText().equals(\"FTP\"))\r\n\t    \t\t\t{\r\n\t    \t\t\t\tftpclient.chdir(realfoldername);\r\n\t    \t\t\t\tfolderexists=true;\r\n\t    \t\t\t}\r\n\t    \t\t\telse if(wProtocol.getText().equals(\"FTP\"))\r\n\t    \t\t\t{\r\n\t    \t\t\t\tsftpclient.chdir(realfoldername);\r\n\t    \t\t\t\tfolderexists=true;\r\n\t    \t\t\t}\r\n\t    \t\t\telse if(wProtocol.getText().equals(\"SSH\"))\r\n\t    \t\t\t{\r\n\t    \t\t\t\tSFTPv3Client client = new SFTPv3Client(conn);\r\n\t    \t\t\t\tboolean folderexist=sshDirectoryExists(client,realfoldername);\r\n\t    \t\t\t\tclient.close();\r\n\t    \t\t\t\tif(folderexist)\r\n\t    \t\t\t\t{\r\n\t    \t\t\t\t\t// Folder exists\r\n\t    \t\t\t\t\tfolderexists=true;\r\n\t    \t\t\t\t}else\r\n\t    \t\t\t\t{\r\n\t    \t\t\t\t\t// we can not find folder\r\n\t    \t\t\t\t\tfolderexists=false;\r\n\t    \t\t\t\t}\r\n\t    \t\t\t}\r\n\t    \t\t\t\r\n\t    \t\t}\r\n\t    \t}\r\n    \t}catch(Exception e)\r\n    \t{\r\n    \t\terrmsg=e.getMessage();\r\n    \t}\r\n    \tif(folderexists)\r\n    \t{\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_INFORMATION );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTPDelete.FolderExists.OK\",wFtpDirectory.getText()) +Const.CR);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTPDelete.FolderExists.Title.Ok\"));\r\n\t\t\tmb.open();\t\r\n    \t}else\r\n    \t{\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTPDelete.FolderExists.NOK\",wFtpDirectory.getText()) +Const.CR + errmsg);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTPDelete.FolderExists.Title.Bad\"));\r\n\t\t\tmb.open(); \r\n    \t}\r\n    }","id":63939,"modified_method":"private void checkFTPFolder()\r\n    {\r\n    \tboolean folderexists=false;\r\n    \tString errmsg=\"\";\r\n    \ttry\r\n    \t{\r\n\t    \tString realfoldername=jobMeta.environmentSubstitute(wFtpDirectory.getText());\r\n\t    \tif(!Const.isEmpty(realfoldername))\r\n\t    \t{\r\n\t    \t\tif(connect())\r\n\t    \t\t{\r\n\t    \t\t\tif(wProtocol.getText().equals(\"FTP\"))\r\n\t    \t\t\t{\r\n\t    \t\t\t\tftpclient.chdir(pwdFolder);\r\n\t    \t\t\t\tftpclient.chdir(realfoldername);\r\n\t    \t\t\t\tfolderexists=true;\r\n\t    \t\t\t}\r\n\t    \t\t\telse if(wProtocol.getText().equals(\"SFTP\"))\r\n\t    \t\t\t{\r\n\t    \t\t\t\tsftpclient.chdir(pwdFolder);\r\n\t    \t\t\t\tsftpclient.chdir(realfoldername);\r\n\t    \t\t\t\tfolderexists=true;\r\n\t    \t\t\t}\r\n\t    \t\t\telse if(wProtocol.getText().equals(\"SSH\"))\r\n\t    \t\t\t{\r\n\t    \t\t\t\tSFTPv3Client client = new SFTPv3Client(conn);\r\n\t    \t\t\t\tboolean folderexist=sshDirectoryExists(client,realfoldername);\r\n\t    \t\t\t\tclient.close();\r\n\t    \t\t\t\tif(folderexist)\r\n\t    \t\t\t\t{\r\n\t    \t\t\t\t\t// Folder exists\r\n\t    \t\t\t\t\tfolderexists=true;\r\n\t    \t\t\t\t}else\r\n\t    \t\t\t\t{\r\n\t    \t\t\t\t\t// we can not find folder\r\n\t    \t\t\t\t\tfolderexists=false;\r\n\t    \t\t\t\t}\r\n\t    \t\t\t}\r\n\t    \t\t\t\r\n\t    \t\t}\r\n\t    \t}\r\n    \t}catch(Exception e)\r\n    \t{\r\n    \t\terrmsg=e.getMessage();\r\n    \t}\r\n    \tif(folderexists)\r\n    \t{\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_INFORMATION );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTPDelete.FolderExists.OK\",wFtpDirectory.getText()) +Const.CR);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTPDelete.FolderExists.Title.Ok\"));\r\n\t\t\tmb.open();\t\r\n    \t}else\r\n    \t{\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTPDelete.FolderExists.NOK\",wFtpDirectory.getText()) +Const.CR + errmsg);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTPDelete.FolderExists.Title.Bad\"));\r\n\t\t\tmb.open(); \r\n    \t}\r\n    }","commit_id":"d9c5b35958554ae92e3ecec4f4ca43fc2bf6a45a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean connectToSFTP()\r\n    {\r\n    \tboolean retval=false;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif(sftpclient==null)\r\n\t\t\t{\r\n\t\t\t\t// Create sftp client to host ...\r\n\t\t\t\tsftpclient = new SFTPClient(InetAddress.getByName(jobMeta.environmentSubstitute(wServerName.getText())), \r\n\t\t\t\t\t\tConst.toInt(jobMeta.environmentSubstitute(wPort.getText()), 22), \r\n\t\t\t\t\t\tjobMeta.environmentSubstitute(wUserName.getText()));\r\n\t\t\t\r\n\t\t\t\t// login to ftp host ...\r\n\t\t\t\tsftpclient.login(jobMeta.environmentSubstitute(wPassword.getText()));\r\n\t\t\t}  \r\n\t       \r\n\t        \t\r\n\t        retval=true;\r\n\t\t}\r\n\t     catch (Exception e)\r\n\t    {\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTPDelete.ErrorConnect.NOK\",e.getMessage()) +Const.CR);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTPDelete.ErrorConnect.Title.Bad\"));\r\n\t\t\tmb.open(); \r\n\t    } \r\n\t    return retval;\r\n    }","id":63940,"modified_method":"private boolean connectToSFTP()\r\n    {\r\n    \tboolean retval=false;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif(sftpclient==null)\r\n\t\t\t{\r\n\t\t\t\t// Create sftp client to host ...\r\n\t\t\t\tsftpclient = new SFTPClient(InetAddress.getByName(jobMeta.environmentSubstitute(wServerName.getText())), \r\n\t\t\t\t\t\tConst.toInt(jobMeta.environmentSubstitute(wPort.getText()), 22), \r\n\t\t\t\t\t\tjobMeta.environmentSubstitute(wUserName.getText()));\r\n\t\t\t\r\n\t\t\t\t// login to ftp host ...\r\n\t\t\t\tsftpclient.login(jobMeta.environmentSubstitute(wPassword.getText()));\r\n\t\t\t\tpwdFolder=sftpclient.pwd();\r\n\t\t\t}  \r\n\t       \r\n\t        \t\r\n\t        retval=true;\r\n\t\t}\r\n\t     catch (Exception e)\r\n\t    {\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTPDelete.ErrorConnect.NOK\",e.getMessage()) +Const.CR);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTPDelete.ErrorConnect.Title.Bad\"));\r\n\t\t\tmb.open(); \r\n\t    } \r\n\t    return retval;\r\n    }","commit_id":"d9c5b35958554ae92e3ecec4f4ca43fc2bf6a45a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public JobEntryInterface open()\r\n    {\r\n        Shell parent = getParent();\r\n        Display display = parent.getDisplay();\r\n\r\n        shell = new Shell(parent, props.getJobsDialogStyle());\r\n        props.setLook(shell);\r\n        JobDialog.setShellImage(shell, jobEntry);\r\n\r\n        ModifyListener lsMod = new ModifyListener()\r\n        {\r\n            public void modifyText(ModifyEvent e)\r\n            {\r\n            \tftpclient=null;\r\n                jobEntry.setChanged();\r\n            }\r\n        };\r\n        changed = jobEntry.hasChanged();\r\n\r\n        FormLayout formLayout = new FormLayout();\r\n        formLayout.marginWidth = Const.FORM_MARGIN;\r\n        formLayout.marginHeight = Const.FORM_MARGIN;\r\n\r\n        shell.setLayout(formLayout);\r\n        shell.setText(Messages.getString(\"JobFTP.Title\"));\r\n\r\n        int middle = props.getMiddlePct();\r\n        int margin = Const.MARGIN;\r\n\r\n        // Job entry name line\r\n        wName = new LabelText(shell, Messages.getString(\"JobFTP.Name.Label\"), Messages\r\n            .getString(\"JobFTP.Name.Tooltip\"));\r\n        wName.addModifyListener(lsMod);\r\n        fdName = new FormData();\r\n        fdName.top = new FormAttachment(0, 0);\r\n        fdName.left = new FormAttachment(0, 0);\r\n        fdName.right = new FormAttachment(100, 0);\r\n        wName.setLayoutData(fdName);\r\n        \r\n        \r\n        wTabFolder = new CTabFolder(shell, SWT.BORDER);\r\n \t\tprops.setLook(wTabFolder, Props.WIDGET_STYLE_TAB);\r\n \t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF GENERAL TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\twGeneralTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twGeneralTab.setText(Messages.getString(\"JobFTP.Tab.General.Label\"));\r\n\t\t\r\n\t\twGeneralComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wGeneralComp);\r\n\r\n\t\tFormLayout generalLayout = new FormLayout();\r\n\t\tgeneralLayout.marginWidth  = 3;\r\n\t\tgeneralLayout.marginHeight = 3;\r\n\t\twGeneralComp.setLayout(generalLayout);\r\n        \r\n\t     // ////////////////////////\r\n\t     // START OF SERVER SETTINGS GROUP///\r\n\t     // /\r\n\t    wServerSettings = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wServerSettings);\r\n\t    wServerSettings.setText(Messages.getString(\"JobFTP.ServerSettings.Group.Label\"));\r\n\r\n\t    FormLayout ServerSettingsgroupLayout = new FormLayout();\r\n\t    ServerSettingsgroupLayout.marginWidth = 10;\r\n\t    ServerSettingsgroupLayout.marginHeight = 10;\r\n\r\n\t    wServerSettings.setLayout(ServerSettingsgroupLayout);\r\n\r\n        // ServerName line\r\n        wServerName = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.Server.Label\"), Messages\r\n            .getString(\"JobFTP.Server.Tooltip\"));\r\n        props.setLook(wServerName);\r\n        wServerName.addModifyListener(lsMod);\r\n        fdServerName = new FormData();\r\n        fdServerName.left = new FormAttachment(0, 0);\r\n        fdServerName.top = new FormAttachment(wName, margin);\r\n        fdServerName.right = new FormAttachment(100, 0);\r\n        wServerName.setLayoutData(fdServerName);\r\n        \r\n        // Server port line\r\n        wPort = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.Port.Label\"), Messages.getString(\"JobFTP.Port.Tooltip\"));\r\n        props.setLook(wPort);\r\n        wPort.addModifyListener(lsMod);\r\n        fdPort = new FormData();\r\n        fdPort.left \t= new FormAttachment(0, 0);\r\n        fdPort.top  \t= new FormAttachment(wServerName, margin);\r\n        fdPort.right\t= new FormAttachment(100, 0);\r\n        wPort.setLayoutData(fdPort);\r\n\r\n        // UserName line\r\n        wUserName = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.User.Label\"), Messages\r\n            .getString(\"JobFTP.User.Tooltip\"));\r\n        props.setLook(wUserName);\r\n        wUserName.addModifyListener(lsMod);\r\n        fdUserName = new FormData();\r\n        fdUserName.left = new FormAttachment(0, 0);\r\n        fdUserName.top = new FormAttachment(wPort, margin);\r\n        fdUserName.right = new FormAttachment(100, 0);\r\n        wUserName.setLayoutData(fdUserName);\r\n\r\n        // Password line\r\n        wPassword = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.Password.Label\"), Messages\r\n            .getString(\"JobFTP.Password.Tooltip\"));\r\n        props.setLook(wPassword);\r\n        wPassword.setEchoChar('*');\r\n        wPassword.addModifyListener(lsMod);\r\n        fdPassword = new FormData();\r\n        fdPassword.left = new FormAttachment(0, 0);\r\n        fdPassword.top = new FormAttachment(wUserName, margin);\r\n        fdPassword.right = new FormAttachment(100, 0);\r\n        wPassword.setLayoutData(fdPassword);\r\n\r\n        // OK, if the password contains a variable, we don't want to have the password hidden...\r\n        wPassword.getTextWidget().addModifyListener(new ModifyListener()\r\n        {\r\n            public void modifyText(ModifyEvent e)\r\n            {\r\n                checkPasswordVisible();\r\n            }\r\n        });\r\n\r\n        \r\n        // Proxy host line\r\n        wProxyHost = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.ProxyHost.Label\"), Messages.getString(\"JobFTP.ProxyHost.Tooltip\"));\r\n        props.setLook(wProxyHost);\r\n        wProxyHost.addModifyListener(lsMod);\r\n        fdProxyHost = new FormData();\r\n        fdProxyHost.left \t= new FormAttachment(0, 0);\r\n        fdProxyHost.top\t\t= new FormAttachment(wPassword, 2*margin);\r\n        fdProxyHost.right\t= new FormAttachment(100, 0);\r\n        wProxyHost.setLayoutData(fdProxyHost);\r\n\r\n        // Proxy port line\r\n        wProxyPort = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.ProxyPort.Label\"), Messages.getString(\"JobFTP.ProxyPort.Tooltip\"));\r\n        props.setLook(wProxyPort);\r\n        wProxyPort.addModifyListener(lsMod);\r\n        fdProxyPort = new FormData();\r\n        fdProxyPort.left \t= new FormAttachment(0, 0);\r\n        fdProxyPort.top  \t= new FormAttachment(wProxyHost, margin);\r\n        fdProxyPort.right\t= new FormAttachment(100, 0);\r\n        wProxyPort.setLayoutData(fdProxyPort);\r\n\r\n        // Proxy username line\r\n        wProxyUsername = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.ProxyUsername.Label\"), Messages.getString(\"JobFTP.ProxyUsername.Tooltip\"));\r\n        props.setLook(wProxyUsername);\r\n        wProxyUsername.addModifyListener(lsMod);\r\n        fdProxyUsername = new FormData();\r\n        fdProxyUsername.left = new FormAttachment(0, 0);\r\n        fdProxyUsername.top  = new FormAttachment(wProxyPort, margin);\r\n        fdProxyUsername.right= new FormAttachment(100, 0);\r\n        wProxyUsername.setLayoutData(fdProxyUsername);\r\n        \r\n        // Proxy password line\r\n        wProxyPassword = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.ProxyPassword.Label\"), Messages.getString(\"JobFTP.ProxyPassword.Tooltip\"));\r\n        props.setLook(wProxyPassword);\r\n        wProxyPassword.addModifyListener(lsMod);\r\n        fdProxyPasswd=new FormData();\r\n        fdProxyPasswd.left = new FormAttachment(0, 0);\r\n        fdProxyPasswd.top  = new FormAttachment(wProxyUsername, margin);\r\n        fdProxyPasswd.right= new FormAttachment(100, 0);\r\n        wProxyPassword.setLayoutData(fdProxyPasswd);\r\n        \r\n\t\t// Test connection button\r\n\t\twTest=new Button(wServerSettings,SWT.PUSH);\r\n\t\twTest.setText(Messages.getString(\"JobFTP.TestConnection.Label\"));\r\n \t\tprops.setLook(wTest);\r\n\t\tfdTest=new FormData();\r\n\t\twTest.setToolTipText(Messages.getString(\"JobFTP.TestConnection.Tooltip\"));\r\n\t\t//fdTest.left = new FormAttachment(middle, 0);\r\n\t\tfdTest.top  = new FormAttachment(wProxyPassword, margin);\r\n\t\tfdTest.right= new FormAttachment(100, 0);\r\n\t\twTest.setLayoutData(fdTest);\r\n        \r\n        \r\n\t     fdServerSettings = new FormData();\r\n\t     fdServerSettings.left = new FormAttachment(0, margin);\r\n\t     fdServerSettings.top = new FormAttachment(wName, margin);\r\n\t     fdServerSettings.right = new FormAttachment(100, -margin);\r\n\t     wServerSettings.setLayoutData(fdServerSettings);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF SERVER SETTINGS GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n        \r\n\r\n\t     // ////////////////////////\r\n\t     // START OF Advanced SETTINGS GROUP///\r\n\t     // /\r\n\t     wAdvancedSettings = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n\t     props.setLook(wAdvancedSettings);\r\n\t     wAdvancedSettings.setText(Messages.getString(\"JobFTP.AdvancedSettings.Group.Label\"));\r\n\t     FormLayout AdvancedSettingsgroupLayout = new FormLayout();\r\n\t     AdvancedSettingsgroupLayout.marginWidth = 10;\r\n\t     AdvancedSettingsgroupLayout.marginHeight = 10;\r\n\t     wAdvancedSettings.setLayout(AdvancedSettingsgroupLayout);\r\n\r\n\t    \r\n\t     // Binary mode selection...\r\n        wlBinaryMode = new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlBinaryMode.setText(Messages.getString(\"JobFTP.BinaryMode.Label\"));\r\n        props.setLook(wlBinaryMode);\r\n        fdlBinaryMode = new FormData();\r\n        fdlBinaryMode.left = new FormAttachment(0, 0);\r\n        fdlBinaryMode.top = new FormAttachment(wServerSettings, margin);\r\n        fdlBinaryMode.right = new FormAttachment(middle, 0);\r\n        wlBinaryMode.setLayoutData(fdlBinaryMode);\r\n        wBinaryMode = new Button(wAdvancedSettings, SWT.CHECK);\r\n        props.setLook(wBinaryMode);\r\n        wBinaryMode.setToolTipText(Messages.getString(\"JobFTP.BinaryMode.Tooltip\"));\r\n        fdBinaryMode = new FormData();\r\n        fdBinaryMode.left = new FormAttachment(middle, margin);\r\n        fdBinaryMode.top = new FormAttachment(wServerSettings, margin);\r\n        fdBinaryMode.right = new FormAttachment(100, 0);\r\n        wBinaryMode.setLayoutData(fdBinaryMode);\r\n\r\n        // Timeout line\r\n        wTimeout = new LabelTextVar(jobMeta,wAdvancedSettings, Messages.getString(\"JobFTP.Timeout.Label\"), Messages\r\n            .getString(\"JobFTP.Timeout.Tooltip\"));\r\n        props.setLook(wTimeout);\r\n        wTimeout.addModifyListener(lsMod);\r\n        fdTimeout = new FormData();\r\n        fdTimeout.left = new FormAttachment(0, 0);\r\n        fdTimeout.top = new FormAttachment(wlBinaryMode, margin);\r\n        fdTimeout.right = new FormAttachment(100, 0);\r\n        wTimeout.setLayoutData(fdTimeout);\r\n\r\n\r\n        // active connection?\r\n        wlActive = new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlActive.setText(Messages.getString(\"JobFTP.ActiveConns.Label\"));\r\n        props.setLook(wlActive);\r\n        fdlActive = new FormData();\r\n        fdlActive.left = new FormAttachment(0, 0);\r\n        fdlActive.top = new FormAttachment(wTimeout, margin);\r\n        fdlActive.right = new FormAttachment(middle, 0);\r\n        wlActive.setLayoutData(fdlActive);\r\n        wActive = new Button(wAdvancedSettings, SWT.CHECK);\r\n        wActive.setToolTipText(Messages.getString(\"JobFTP.ActiveConns.Tooltip\"));\r\n        props.setLook(wActive);\r\n        fdActive = new FormData();\r\n        fdActive.left = new FormAttachment(middle, margin);\r\n        fdActive.top = new FormAttachment(wTimeout, margin);\r\n        fdActive.right = new FormAttachment(100, 0);\r\n        wActive.setLayoutData(fdActive);\r\n        \r\n        // Control encoding line\r\n        //\r\n        // The drop down is editable as it may happen an encoding may not be present\r\n        // on one machine, but you may want to use it on your execution server\r\n        //\r\n        wlControlEncoding=new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlControlEncoding.setText(Messages.getString(\"JobFTP.ControlEncoding.Label\"));\r\n        props.setLook(wlControlEncoding);\r\n        fdlControlEncoding=new FormData();\r\n        fdlControlEncoding.left  = new FormAttachment(0, 0);\r\n        fdlControlEncoding.top   = new FormAttachment(wActive, margin);\r\n        fdlControlEncoding.right = new FormAttachment(middle, 0);\r\n        wlControlEncoding.setLayoutData(fdlControlEncoding);\r\n        wControlEncoding=new Combo(wAdvancedSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n        wControlEncoding.setToolTipText(Messages.getString(\"JobFTP.ControlEncoding.Tooltip\"));\r\n        wControlEncoding.setItems(encodings);\r\n        props.setLook(wControlEncoding);\r\n        fdControlEncoding=new FormData();\r\n        fdControlEncoding.left = new FormAttachment(middle, margin);\r\n        fdControlEncoding.top  = new FormAttachment(wActive, margin);\r\n        fdControlEncoding.right= new FormAttachment(100, 0);        \r\n        wControlEncoding.setLayoutData(fdControlEncoding);\r\n    \r\n\t    \r\n\t     fdAdvancedSettings = new FormData();\r\n\t     fdAdvancedSettings.left = new FormAttachment(0, margin);\r\n\t     fdAdvancedSettings.top = new FormAttachment(wServerSettings, margin);\r\n\t     fdAdvancedSettings.right = new FormAttachment(100, -margin);\r\n\t     wAdvancedSettings.setLayoutData(fdAdvancedSettings);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF Advanced SETTINGS GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n\r\n\t\tfdGeneralComp=new FormData();\r\n\t\tfdGeneralComp.left  = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.top   = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.right = new FormAttachment(100, 0);\r\n\t\tfdGeneralComp.bottom= new FormAttachment(100, 0);\r\n\t\twGeneralComp.setLayoutData(fdGeneralComp);\r\n\t\t\r\n\t\twGeneralComp.layout();\r\n\t\twGeneralTab.setControl(wGeneralComp);\r\n \t\tprops.setLook(wGeneralComp);\r\n \t\t\r\n \t\t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF GENERAL TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF Files TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n \t\twFilesTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twFilesTab.setText(Messages.getString(\"JobFTP.Tab.Files.Label\"));\r\n\t\t\r\n\t\twFilesComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wFilesComp);\r\n\r\n\t\tFormLayout FilesLayout = new FormLayout();\r\n\t\tFilesLayout.marginWidth  = 3;\r\n\t\tFilesLayout.marginHeight = 3;\r\n\t\twFilesComp.setLayout(FilesLayout);\r\n \t\t\r\n\t\t // ////////////////////////\r\n\t     // START OF Remote SETTINGS GROUP///\r\n\t     // /\r\n\t    wRemoteSettings = new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wRemoteSettings);\r\n\t    wRemoteSettings.setText(Messages.getString(\"JobFTP.RemoteSettings.Group.Label\"));\r\n\r\n\t    FormLayout RemoteSettinsgroupLayout = new FormLayout();\r\n\t    RemoteSettinsgroupLayout.marginWidth = 10;\r\n\t    RemoteSettinsgroupLayout.marginHeight = 10;\r\n\r\n\t    wRemoteSettings.setLayout(RemoteSettinsgroupLayout);\r\n\t    \r\n\t    \r\n        // Move to directory\r\n        wlFtpDirectory = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlFtpDirectory.setText(Messages.getString(\"JobFTP.RemoteDir.Label\"));\r\n        props.setLook(wlFtpDirectory);\r\n        fdlFtpDirectory= new FormData();\r\n        fdlFtpDirectory.left = new FormAttachment(0, 0);\r\n        fdlFtpDirectory.top = new FormAttachment(0, margin);\r\n        fdlFtpDirectory.right = new FormAttachment(middle, 0);\r\n        wlFtpDirectory.setLayoutData(fdlFtpDirectory);\r\n\t    \r\n\t    // Test remote folder  button ...\r\n\t\twbTestChangeFolderExists=new Button(wRemoteSettings, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTestChangeFolderExists);\r\n\t\twbTestChangeFolderExists.setText(Messages.getString(\"JobFTP.TestFolderExists.Label\"));\r\n\t\tfdbTestChangeFolderExists=new FormData();\r\n\t\tfdbTestChangeFolderExists.right= new FormAttachment(100, 0);\r\n\t\tfdbTestChangeFolderExists.top  = new FormAttachment(0, margin);\r\n\t\twbTestChangeFolderExists.setLayoutData(fdbTestChangeFolderExists);\r\n\r\n        wFtpDirectory = new TextVar(jobMeta,wRemoteSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n           .getString(\"JobFTP.RemoteDir.Tooltip\"));\r\n       props.setLook(wFtpDirectory);\r\n       wFtpDirectory.addModifyListener(lsMod);\r\n       fdFtpDirectory = new FormData();\r\n       fdFtpDirectory.left = new FormAttachment(middle, margin);\r\n       fdFtpDirectory.top = new FormAttachment(0, margin);\r\n       fdFtpDirectory.right = new FormAttachment(wbTestChangeFolderExists, -margin);\r\n       wFtpDirectory.setLayoutData(fdFtpDirectory);\r\n       \r\n        \r\n        // Wildcard line\r\n        wWildcard = new LabelTextVar(jobMeta,wRemoteSettings, Messages.getString(\"JobFTP.Wildcard.Label\"), Messages\r\n            .getString(\"JobFTP.Wildcard.Tooltip\"));\r\n        props.setLook(wWildcard);\r\n        wWildcard.addModifyListener(lsMod);\r\n        fdWildcard = new FormData();\r\n        fdWildcard.left = new FormAttachment(0, 0);\r\n        fdWildcard.top = new FormAttachment(wFtpDirectory, margin);\r\n        fdWildcard.right = new FormAttachment(100, 0);\r\n        wWildcard.setLayoutData(fdWildcard);\r\n        \r\n        // Remove files after retrieval...\r\n        wlRemove = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlRemove.setText(Messages.getString(\"JobFTP.RemoveFiles.Label\"));\r\n        props.setLook(wlRemove);\r\n        fdlRemove = new FormData();\r\n        fdlRemove.left = new FormAttachment(0, 0);\r\n        fdlRemove.top = new FormAttachment(wWildcard, margin);\r\n        fdlRemove.right = new FormAttachment(middle, 0);\r\n        wlRemove.setLayoutData(fdlRemove);\r\n        wRemove = new Button(wRemoteSettings, SWT.CHECK);\r\n        wRemove.setToolTipText(Messages.getString(\"JobFTP.RemoveFiles.Tooltip\"));\r\n        props.setLook(wRemove);\r\n        fdRemove = new FormData();\r\n        fdRemove.left = new FormAttachment(middle, margin);\r\n        fdRemove.top = new FormAttachment(wWildcard, margin);\r\n        fdRemove.right = new FormAttachment(100, 0);\r\n        wRemove.setLayoutData(fdRemove);\r\n        \r\n        wRemove.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tif(wRemove.getSelection())\r\n\t\t\t\t{\r\n\t\t\t\t\twMove.setSelection(false);\r\n\t\t\t\t\tactivateMoveTo();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n        \r\n        // Move files after the transfert?...\r\n        wlMove = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlMove.setText(Messages.getString(\"JobFTP.MoveFiles.Label\"));\r\n        props.setLook(wlMove);\r\n        fdlMove = new FormData();\r\n        fdlMove.left = new FormAttachment(0, 0);\r\n        fdlMove.top = new FormAttachment(wRemove, margin);\r\n        fdlMove.right = new FormAttachment(middle, -margin);\r\n        wlMove.setLayoutData(fdlMove);\r\n        wMove = new Button(wRemoteSettings, SWT.CHECK);\r\n        props.setLook(wMove);\r\n        wMove.setToolTipText(Messages.getString(\"JobFTP.MoveFiles.Tooltip\"));\r\n        fdMove = new FormData();\r\n        fdMove.left = new FormAttachment(middle, margin);\r\n        fdMove.top = new FormAttachment(wRemove, margin);\r\n        fdMove.right = new FormAttachment(100, 0);\r\n        wMove.setLayoutData(fdMove);\r\n        wMove.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tactivateMoveTo();\r\n\t\t\t\tif(wMove.getSelection())\r\n\t\t\t\t{\r\n\t\t\t\t\twRemove.setSelection(false);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n        \r\n        // Move to directory\r\n        wlMoveToDirectory = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlMoveToDirectory.setText(Messages.getString(\"JobFTP.MoveFolder.Label\"));\r\n        props.setLook(wlMoveToDirectory);\r\n        fdlMoveToDirectory= new FormData();\r\n        fdlMoveToDirectory.left = new FormAttachment(0, 0);\r\n        fdlMoveToDirectory.top = new FormAttachment(wMove, margin);\r\n        fdlMoveToDirectory.right = new FormAttachment(middle, 0);\r\n        wlMoveToDirectory.setLayoutData(fdlMoveToDirectory);\r\n        \r\n\t    // Test remote folder  button ...\r\n\t\twbTestFolderExists=new Button(wRemoteSettings, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTestFolderExists);\r\n\t\twbTestFolderExists.setText(Messages.getString(\"JobFTP.TestFolderExists.Label\"));\r\n\t\tfdbTestFolderExists=new FormData();\r\n\t\tfdbTestFolderExists.right= new FormAttachment(100, 0);\r\n\t\tfdbTestFolderExists.top  = new FormAttachment(wMove, margin);\r\n\t\twbTestFolderExists.setLayoutData(fdbTestFolderExists);\r\n        \r\n        wMoveToDirectory = new TextVar(jobMeta,wRemoteSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n            .getString(\"JobFTP.MoveToDirectory.Tooltip\"));\r\n        wMoveToDirectory.setToolTipText(Messages.getString(\"JobFTP.MoveFolder.Tooltip\"));\r\n        props.setLook(wMoveToDirectory);\r\n        wMoveToDirectory.addModifyListener(lsMod);\r\n        fdMoveToDirectory = new FormData();\r\n        fdMoveToDirectory.left = new FormAttachment(middle, margin);\r\n        fdMoveToDirectory.top = new FormAttachment(wMove, margin);\r\n        fdMoveToDirectory.right = new FormAttachment(wbTestFolderExists, -margin);\r\n        wMoveToDirectory.setLayoutData(fdMoveToDirectory);\r\n        \r\n        \r\n        // create destination folder?...\r\n        wlCreateMoveFolder = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlCreateMoveFolder.setText(Messages.getString(\"JobFTP.CreateMoveFolder.Label\"));\r\n        props.setLook(wlCreateMoveFolder);\r\n        fdlCreateMoveFolder = new FormData();\r\n        fdlCreateMoveFolder.left = new FormAttachment(0, 0);\r\n        fdlCreateMoveFolder.top = new FormAttachment(wMoveToDirectory, margin);\r\n        fdlCreateMoveFolder.right = new FormAttachment(middle, 0);\r\n        wlCreateMoveFolder.setLayoutData(fdlCreateMoveFolder);\r\n        wCreateMoveFolder = new Button(wRemoteSettings, SWT.CHECK);\r\n        wCreateMoveFolder.setToolTipText(Messages.getString(\"JobFTP.CreateMoveFolder.Tooltip\"));\r\n        props.setLook(wCreateMoveFolder);\r\n        fdCreateMoveFolder = new FormData();\r\n        fdCreateMoveFolder.left = new FormAttachment(middle, margin);\r\n        fdCreateMoveFolder.top = new FormAttachment(wMoveToDirectory, margin);\r\n        fdCreateMoveFolder.right = new FormAttachment(100, 0);\r\n        wCreateMoveFolder.setLayoutData(fdCreateMoveFolder);\r\n      \r\n        fdRemoteSettings = new FormData();\r\n        fdRemoteSettings.left = new FormAttachment(0, margin);\r\n        fdRemoteSettings.top = new FormAttachment(0, 2*margin);\r\n        fdRemoteSettings.right = new FormAttachment(100, -margin);\r\n        wRemoteSettings.setLayoutData(fdRemoteSettings);\r\n       // ///////////////////////////////////////////////////////////\r\n       // / END OF Remote SETTINGSGROUP\r\n       // ///////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t // ////////////////////////\r\n\t     // START OF LOCAL SETTINGS GROUP///\r\n\t     // /\r\n\t    wLocalSettings = new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wLocalSettings);\r\n\t    wLocalSettings.setText(Messages.getString(\"JobFTP.LocalSettings.Group.Label\"));\r\n\r\n\t    FormLayout LocalSettinsgroupLayout = new FormLayout();\r\n\t    LocalSettinsgroupLayout.marginWidth = 10;\r\n\t    LocalSettinsgroupLayout.marginHeight = 10;\r\n\r\n\t    wLocalSettings.setLayout(LocalSettinsgroupLayout);\r\n\t      \r\n\t     \r\n\t     \r\n\t    // TargetDirectory\r\n\t\twlTargetDirectory = new Label(wLocalSettings, SWT.RIGHT);\r\n\t\twlTargetDirectory.setText(Messages.getString(\"JobFTP.TargetDir.Label\"));\r\n\t\tprops.setLook(wlTargetDirectory);\r\n\t\tfdlTargetDirectory = new FormData();\r\n\t\tfdlTargetDirectory.left = new FormAttachment(0, 0);\r\n\t\tfdlTargetDirectory.top = new FormAttachment(wRemoteSettings, margin);\r\n\t\tfdlTargetDirectory.right = new FormAttachment(middle, -margin);\r\n\t\twlTargetDirectory.setLayoutData(fdlTargetDirectory);\r\n\t\t\r\n\t    // Browse folders button ...\r\n\t\twbTargetDirectory=new Button(wLocalSettings, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTargetDirectory);\r\n\t\twbTargetDirectory.setText(Messages.getString(\"JobFTP.BrowseFolders.Label\"));\r\n\t\tfdbTargetDirectory=new FormData();\r\n\t\tfdbTargetDirectory.right= new FormAttachment(100, 0);\r\n\t\tfdbTargetDirectory.top  = new FormAttachment(wRemoteSettings, margin);\r\n\t\twbTargetDirectory.setLayoutData(fdbTargetDirectory);\r\n\t\twbTargetDirectory.addSelectionListener\r\n\t\t\t(\r\n\t\t\t\tnew SelectionAdapter()\r\n\t\t\t\t{\r\n\t\t\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tDirectoryDialog ddialog = new DirectoryDialog(shell, SWT.OPEN);\r\n\t\t\t\t\t\tif (wTargetDirectory.getText()!=null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tddialog.setFilterPath(jobMeta.environmentSubstitute(wTargetDirectory.getText()) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t // Calling open() will open and run the dialog.\r\n\t\t\t\t        // It will return the selected directory, or\r\n\t\t\t\t        // null if user cancels\r\n\t\t\t\t        String dir = ddialog.open();\r\n\t\t\t\t        if (dir != null) {\r\n\t\t\t\t          // Set the text box to the new selection\r\n\t\t\t\t        \twTargetDirectory.setText(dir);\r\n\t\t\t\t        }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\r\n\t\twTargetDirectory = new TextVar(jobMeta,wLocalSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n\t\t\t.getString(\"JobFTP.TargetDir.Tooltip\"));\r\n\t\tprops.setLook(wTargetDirectory);\r\n\t\twTargetDirectory.addModifyListener(lsMod);\r\n\t\tfdTargetDirectory = new FormData();\r\n\t\tfdTargetDirectory.left = new FormAttachment(middle, margin);\r\n\t\tfdTargetDirectory.top = new FormAttachment(wRemoteSettings, margin);\r\n\t\tfdTargetDirectory.right = new FormAttachment(wbTargetDirectory, -margin);\r\n\t\twTargetDirectory.setLayoutData(fdTargetDirectory);\r\n\t\t\r\n\r\n       \r\n       \r\n\t   \t// Create multi-part file?\r\n\t   \twlAddDate=new Label(wLocalSettings, SWT.RIGHT);\r\n\t   \twlAddDate.setText(Messages.getString(\"JobFTP.AddDate.Label\"));\r\n\t   \t\tprops.setLook(wlAddDate);\r\n\t   \tfdlAddDate=new FormData();\r\n\t   \tfdlAddDate.left = new FormAttachment(0, 0);\r\n\t   \tfdlAddDate.top  = new FormAttachment(wTargetDirectory, margin);\r\n\t   \tfdlAddDate.right= new FormAttachment(middle, -margin);\r\n\t   \twlAddDate.setLayoutData(fdlAddDate);\r\n\t   \twAddDate=new Button(wLocalSettings, SWT.CHECK);\r\n   \t\tprops.setLook(wAddDate);\r\n   \t\twAddDate.setToolTipText(Messages.getString(\"JobFTP.AddDate.Tooltip\"));\r\n\t   \tfdAddDate=new FormData();\r\n\t   \tfdAddDate.left = new FormAttachment(middle, margin);\r\n\t   \tfdAddDate.top  = new FormAttachment(wTargetDirectory, margin);\r\n\t   \tfdAddDate.right= new FormAttachment(100, 0);\r\n\t   \twAddDate.setLayoutData(fdAddDate);\r\n\t   \twAddDate.addSelectionListener(new SelectionAdapter() \r\n\t   \t\t{\r\n\t   \t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t   \t\t\t{\r\n\t   \t\t\t\tjobEntry.setChanged();\r\n\t   \t\t\t}\r\n\t   \t\t}\r\n\t   \t);\r\n\t   \t// Create multi-part file?\r\n\t   \twlAddTime=new Label(wLocalSettings, SWT.RIGHT);\r\n\t   \twlAddTime.setText(Messages.getString(\"JobFTP.AddTime.Label\"));\r\n   \t\tprops.setLook(wlAddTime);\r\n\t   \tfdlAddTime=new FormData();\r\n\t   \tfdlAddTime.left = new FormAttachment(0, 0);\r\n\t   \tfdlAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t   \tfdlAddTime.right= new FormAttachment(middle, -margin);\r\n\t   \twlAddTime.setLayoutData(fdlAddTime);\r\n\t   \twAddTime=new Button(wLocalSettings, SWT.CHECK);\r\n   \t\tprops.setLook(wAddTime);\r\n   \t\twAddTime.setToolTipText(Messages.getString(\"JobFTP.AddTime.Tooltip\"));\r\n\t   \tfdAddTime=new FormData();\r\n\t   \tfdAddTime.left = new FormAttachment(middle, margin);\r\n\t   \tfdAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t   \tfdAddTime.right= new FormAttachment(100, 0);\r\n\t   \twAddTime.setLayoutData(fdAddTime);\r\n\t   \twAddTime.addSelectionListener(new SelectionAdapter() \r\n\t   \t\t{\r\n\t   \t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t   \t\t\t{\r\n\t   \t\t\t\tjobEntry.setChanged();\r\n\t   \t\t\t}\r\n\t   \t\t}\r\n\t   \t);\r\n\t   \t\r\n\t   \t// Specify date time format?\r\n\t   \twlSpecifyFormat=new Label(wLocalSettings, SWT.RIGHT);\r\n\t   \twlSpecifyFormat.setText(Messages.getString(\"JobFTP.SpecifyFormat.Label\"));\r\n\t   \tprops.setLook(wlSpecifyFormat);\r\n\t   \tfdlSpecifyFormat=new FormData();\r\n\t   \tfdlSpecifyFormat.left = new FormAttachment(0, 0);\r\n\t   \tfdlSpecifyFormat.top  = new FormAttachment(wAddTime, margin);\r\n\t   \tfdlSpecifyFormat.right= new FormAttachment(middle, -margin);\r\n\t   \twlSpecifyFormat.setLayoutData(fdlSpecifyFormat);\r\n\t   \twSpecifyFormat=new Button(wLocalSettings, SWT.CHECK);\r\n\t   \tprops.setLook(wSpecifyFormat);\r\n\t   \twSpecifyFormat.setToolTipText(Messages.getString(\"JobFTP.SpecifyFormat.Tooltip\"));\r\n       fdSpecifyFormat=new FormData();\r\n\t   \tfdSpecifyFormat.left = new FormAttachment(middle, margin);\r\n\t   \tfdSpecifyFormat.top  = new FormAttachment(wAddTime, margin);\r\n\t   \tfdSpecifyFormat.right= new FormAttachment(100, 0);\r\n\t   \twSpecifyFormat.setLayoutData(fdSpecifyFormat);\r\n\t   \twSpecifyFormat.addSelectionListener(new SelectionAdapter() \r\n\t   \t\t{\r\n\t   \t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t   \t\t\t{\r\n\t   \t\t\t\tjobEntry.setChanged();\r\n\t   \t\t\t\tsetDateTimeFormat();\r\n\t   \t\t\t\tsetAddDateBeforeExtension();\r\n\t   \t\t\t}\r\n\t   \t\t}\r\n\t   \t);\r\n\r\n   \t\r\n\t   \t//\tPrepare a list of possible DateTimeFormats...\r\n\t   \tString dats[] = Const.getDateFormats();\r\n   \t\r\n   \t\t// DateTimeFormat\r\n\t   \twlDateTimeFormat=new Label(wLocalSettings, SWT.RIGHT);\r\n       wlDateTimeFormat.setText(Messages.getString(\"JobFTP.DateTimeFormat.Label\"));\r\n       props.setLook(wlDateTimeFormat);\r\n       fdlDateTimeFormat=new FormData();\r\n       fdlDateTimeFormat.left = new FormAttachment(0, 0);\r\n       fdlDateTimeFormat.top  = new FormAttachment(wSpecifyFormat, margin);\r\n       fdlDateTimeFormat.right= new FormAttachment(middle, -margin);\r\n       wlDateTimeFormat.setLayoutData(fdlDateTimeFormat);\r\n       wDateTimeFormat=new CCombo(wLocalSettings, SWT.BORDER | SWT.READ_ONLY);\r\n       wDateTimeFormat.setEditable(true);\r\n       props.setLook(wDateTimeFormat);\r\n       wDateTimeFormat.addModifyListener(lsMod);\r\n       fdDateTimeFormat=new FormData();\r\n       fdDateTimeFormat.left = new FormAttachment(middle, margin);\r\n       fdDateTimeFormat.top  = new FormAttachment(wSpecifyFormat, margin);\r\n       fdDateTimeFormat.right= new FormAttachment(100, 0);\r\n       wDateTimeFormat.setLayoutData(fdDateTimeFormat);\r\n       for (int x=0;x<dats.length;x++) wDateTimeFormat.add(dats[x]);\r\n       \r\n       // Add Date before extension?\r\n       wlAddDateBeforeExtension = new Label(wLocalSettings, SWT.RIGHT);\r\n       wlAddDateBeforeExtension.setText(Messages.getString(\"JobFTP.AddDateBeforeExtension.Label\"));\r\n       props.setLook(wlAddDateBeforeExtension);\r\n       fdlAddDateBeforeExtension = new FormData();\r\n       fdlAddDateBeforeExtension.left = new FormAttachment(0, 0);\r\n       fdlAddDateBeforeExtension.top = new FormAttachment(wDateTimeFormat, margin);\r\n       fdlAddDateBeforeExtension.right = new FormAttachment(middle, -margin);\r\n       wlAddDateBeforeExtension.setLayoutData(fdlAddDateBeforeExtension);\r\n       wAddDateBeforeExtension = new Button(wLocalSettings, SWT.CHECK);\r\n       props.setLook(wAddDateBeforeExtension);\r\n       wAddDateBeforeExtension.setToolTipText(Messages.getString(\"JobFTP.AddDateBeforeExtension.Tooltip\"));\r\n       fdAddDateBeforeExtension = new FormData();\r\n       fdAddDateBeforeExtension.left = new FormAttachment(middle, margin);\r\n       fdAddDateBeforeExtension.top = new FormAttachment(wDateTimeFormat, margin);\r\n       fdAddDateBeforeExtension.right = new FormAttachment(100, 0);\r\n       wAddDateBeforeExtension.setLayoutData(fdAddDateBeforeExtension);\r\n       wAddDateBeforeExtension.addSelectionListener(new SelectionAdapter()\r\n       {\r\n           public void widgetSelected(SelectionEvent e)\r\n           {\r\n               jobEntry.setChanged();\r\n           }\r\n       });\r\n\r\n       \r\n       // OnlyNew files after retrieval...\r\n       wlOnlyNew = new Label(wLocalSettings, SWT.RIGHT);\r\n       wlOnlyNew.setText(Messages.getString(\"JobFTP.DontOverwrite.Label\"));\r\n       props.setLook(wlOnlyNew);\r\n       fdlOnlyNew = new FormData();\r\n       fdlOnlyNew.left = new FormAttachment(0, 0);\r\n       fdlOnlyNew.top = new FormAttachment(wAddDateBeforeExtension, margin);\r\n       fdlOnlyNew.right = new FormAttachment(middle, 0);\r\n       wlOnlyNew.setLayoutData(fdlOnlyNew);\r\n       wOnlyNew = new Button(wLocalSettings, SWT.CHECK);\r\n       wOnlyNew.setToolTipText(Messages.getString(\"JobFTP.DontOverwrite.Tooltip\"));\r\n       props.setLook(wOnlyNew);\r\n       fdOnlyNew = new FormData();\r\n       fdOnlyNew.left = new FormAttachment(middle, margin);\r\n       fdOnlyNew.top = new FormAttachment(wAddDateBeforeExtension, margin);\r\n       fdOnlyNew.right = new FormAttachment(100, 0);\r\n       wOnlyNew.setLayoutData(fdOnlyNew);\r\n       wOnlyNew.addSelectionListener(new SelectionAdapter()\r\n       {\r\n           public void widgetSelected(SelectionEvent e)\r\n           {\r\n        \t   activeIfExists();\r\n               jobEntry.setChanged();\r\n           }\r\n       });\r\n       \r\n       // Add filenames to result filenames...\r\n       wlAddFilenameToResult = new Label(wLocalSettings, SWT.RIGHT);\r\n       wlAddFilenameToResult.setText(Messages.getString(\"JobFTP.AddFilenameToResult.Label\"));\r\n       props.setLook(wlAddFilenameToResult);\r\n       fdlAddFilenameToResult = new FormData();\r\n       fdlAddFilenameToResult.left = new FormAttachment(0, 0);\r\n       fdlAddFilenameToResult.top = new FormAttachment(wAddDateBeforeExtension, margin);\r\n       fdlAddFilenameToResult.right = new FormAttachment(middle, 0);\r\n       wlAddFilenameToResult.setLayoutData(fdlAddFilenameToResult);\r\n       wAddFilenameToResult = new Button(wLocalSettings, SWT.CHECK);\r\n       wAddFilenameToResult.setToolTipText(Messages.getString(\"JobFTP.AddFilenameToResult.Tooltip\"));\r\n       props.setLook(wAddFilenameToResult);\r\n       fdAddFilenameToResult = new FormData();\r\n       fdAddFilenameToResult.left = new FormAttachment(middle, margin);\r\n       fdAddFilenameToResult.top = new FormAttachment(wAddDateBeforeExtension, margin);\r\n       fdAddFilenameToResult.right = new FormAttachment(100, 0);\r\n       wAddFilenameToResult.setLayoutData(fdAddFilenameToResult);\r\n       \r\n       // If File Exists\r\n\t\twlIfFileExists = new Label(wLocalSettings, SWT.RIGHT);\r\n\t\twlIfFileExists.setText(Messages.getString(\"JobFTP.IfFileExists.Label\"));\r\n\t\tprops.setLook(wlIfFileExists);\r\n\t\tfdlIfFileExists = new FormData();\r\n\t\tfdlIfFileExists.left = new FormAttachment(0, 0);\r\n\t\tfdlIfFileExists.right = new FormAttachment(middle, 0);\r\n\t\tfdlIfFileExists.top = new FormAttachment(wOnlyNew, margin);\r\n\t\twlIfFileExists.setLayoutData(fdlIfFileExists);\r\n\t\twIfFileExists = new CCombo(wLocalSettings, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n\t\twIfFileExists.add(Messages.getString(\"JobFTP.Skip.Label\"));\r\n\t\twIfFileExists.add(Messages.getString(\"JobFTP.Give_Unique_Name.Label\"));\r\n\t\twIfFileExists.add(Messages.getString(\"JobFTP.Fail.Label\"));\r\n\t\twIfFileExists.select(0); // +1: starts at -1\r\n\r\n\t\tprops.setLook(wIfFileExists);\r\n\t\tfdIfFileExists= new FormData();\r\n\t\tfdIfFileExists.left = new FormAttachment(middle, 0);\r\n\t\tfdIfFileExists.top = new FormAttachment(wOnlyNew, margin);\r\n\t\tfdIfFileExists.right = new FormAttachment(100, 0);\r\n\t\twIfFileExists.setLayoutData(fdIfFileExists);\r\n\r\n\t\tfdIfFileExists = new FormData();\r\n\t\tfdIfFileExists.left = new FormAttachment(middle, margin);\r\n\t\tfdIfFileExists.top = new FormAttachment(wOnlyNew, margin);\r\n\t\tfdIfFileExists.right = new FormAttachment(100, 0);\r\n\t\twIfFileExists.setLayoutData(fdIfFileExists);\r\n\t\t\r\n\t\twIfFileExists.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n       // Add filenames to result filenames...\r\n       wlAddFilenameToResult = new Label(wLocalSettings, SWT.RIGHT);\r\n       wlAddFilenameToResult.setText(Messages.getString(\"JobFTP.AddFilenameToResult.Label\"));\r\n       props.setLook(wlAddFilenameToResult);\r\n       fdlAddFilenameToResult = new FormData();\r\n       fdlAddFilenameToResult.left = new FormAttachment(0, 0);\r\n       fdlAddFilenameToResult.top = new FormAttachment(wIfFileExists, 2*margin);\r\n       fdlAddFilenameToResult.right = new FormAttachment(middle, 0);\r\n       wlAddFilenameToResult.setLayoutData(fdlAddFilenameToResult);\r\n       wAddFilenameToResult = new Button(wLocalSettings, SWT.CHECK);\r\n       wAddFilenameToResult.setToolTipText(Messages.getString(\"JobFTP.AddFilenameToResult.Tooltip\"));\r\n       props.setLook(wAddFilenameToResult);\r\n       fdAddFilenameToResult = new FormData();\r\n       fdAddFilenameToResult.left = new FormAttachment(middle, margin);\r\n       fdAddFilenameToResult.top = new FormAttachment(wIfFileExists, 2*margin);\r\n       fdAddFilenameToResult.right = new FormAttachment(100, 0);\r\n       wAddFilenameToResult.setLayoutData(fdAddFilenameToResult);\r\n       \r\n       \r\n      fdLocalSettings = new FormData();\r\n      fdLocalSettings.left = new FormAttachment(0, margin);\r\n      fdLocalSettings.top = new FormAttachment(wRemoteSettings, margin);\r\n      fdLocalSettings.right = new FormAttachment(100, -margin);\r\n      wLocalSettings.setLayoutData(fdLocalSettings);\r\n      // ///////////////////////////////////////////////////////////\r\n      // / END OF LOCAL SETTINGSGROUP\r\n      // ///////////////////////////////////////////////////////////\r\n\t\t\r\n\t\tfdFilesComp=new FormData();\r\n\t\tfdFilesComp.left  = new FormAttachment(0, 0);\r\n\t\tfdFilesComp.top   = new FormAttachment(0, 0);\r\n\t\tfdFilesComp.right = new FormAttachment(100, 0);\r\n\t\tfdFilesComp.bottom= new FormAttachment(100, 0);\r\n\t\twFilesComp.setLayoutData(fdFilesComp);\r\n\t\t\r\n\t\twFilesComp.layout();\r\n\t\twFilesTab.setControl(wFilesComp);\r\n \t\tprops.setLook(wFilesComp);\r\n \t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF Files TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF Advanced TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n\r\n\t\twAdvancedTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twAdvancedTab.setText(Messages.getString(\"JobFTP.Tab.Advanced.Label\"));\r\n\t\t\r\n\t\twAdvancedComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wAdvancedComp);\r\n\r\n\t\tFormLayout AdvancedLayout = new FormLayout();\r\n\t\tAdvancedLayout.marginWidth  = 3;\r\n\t\tAdvancedLayout.marginHeight = 3;\r\n\t\twAdvancedComp.setLayout(AdvancedLayout);\r\n\t\t\r\n\t\t // SuccessOngrouping?\r\n\t     // ////////////////////////\r\n\t     // START OF SUCCESS ON GROUP///\r\n\t     // /\r\n\t    wSuccessOn= new Group(wAdvancedComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wSuccessOn);\r\n\t    wSuccessOn.setText(Messages.getString(\"JobFTP.SuccessOn.Group.Label\"));\r\n\r\n\t    FormLayout successongroupLayout = new FormLayout();\r\n\t    successongroupLayout.marginWidth = 10;\r\n\t    successongroupLayout.marginHeight = 10;\r\n\r\n\t    wSuccessOn.setLayout(successongroupLayout);\r\n\t    \r\n\r\n\t    //Success Condition\r\n\t  \twlSuccessCondition = new Label(wSuccessOn, SWT.RIGHT);\r\n\t  \twlSuccessCondition.setText(Messages.getString(\"JobFTP.SuccessCondition.Label\") + \" \");\r\n\t  \tprops.setLook(wlSuccessCondition);\r\n\t  \tfdlSuccessCondition = new FormData();\r\n\t  \tfdlSuccessCondition.left = new FormAttachment(0, 0);\r\n\t  \tfdlSuccessCondition.right = new FormAttachment(middle, 0);\r\n\t  \tfdlSuccessCondition.top = new FormAttachment(0, margin);\r\n\t  \twlSuccessCondition.setLayoutData(fdlSuccessCondition);\r\n\t  \twSuccessCondition = new CCombo(wSuccessOn, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTP.SuccessWhenAllWorksFine.Label\"));\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTP.SuccessWhenAtLeat.Label\"));\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTP.SuccessWhenNrErrorsLessThan.Label\"));\r\n\t  \twSuccessCondition.select(0); // +1: starts at -1\r\n\t  \t\r\n\t\tprops.setLook(wSuccessCondition);\r\n\t\tfdSuccessCondition= new FormData();\r\n\t\tfdSuccessCondition.left = new FormAttachment(middle, 0);\r\n\t\tfdSuccessCondition.top = new FormAttachment(0, margin);\r\n\t\tfdSuccessCondition.right = new FormAttachment(100, 0);\r\n\t\twSuccessCondition.setLayoutData(fdSuccessCondition);\r\n\t\twSuccessCondition.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tactiveSuccessCondition();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Success when number of errors less than\r\n\t\twlNrErrorsLessThan= new Label(wSuccessOn, SWT.RIGHT);\r\n\t\twlNrErrorsLessThan.setText(Messages.getString(\"JobFTP.NrBadFormedLessThan.Label\") + \" \");\r\n\t\tprops.setLook(wlNrErrorsLessThan);\r\n\t\tfdlNrErrorsLessThan= new FormData();\r\n\t\tfdlNrErrorsLessThan.left = new FormAttachment(0, 0);\r\n\t\tfdlNrErrorsLessThan.top = new FormAttachment(wSuccessCondition, margin);\r\n\t\tfdlNrErrorsLessThan.right = new FormAttachment(middle, -margin);\r\n\t\twlNrErrorsLessThan.setLayoutData(fdlNrErrorsLessThan);\r\n\t\t\r\n\t\t\r\n\t\twNrErrorsLessThan= new TextVar(jobMeta,wSuccessOn, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n\t\t\t.getString(\"JobFTP.NrBadFormedLessThan.Tooltip\"));\r\n\t\tprops.setLook(wNrErrorsLessThan);\r\n\t\twNrErrorsLessThan.addModifyListener(lsMod);\r\n\t\tfdNrErrorsLessThan= new FormData();\r\n\t\tfdNrErrorsLessThan.left = new FormAttachment(middle, 0);\r\n\t\tfdNrErrorsLessThan.top = new FormAttachment(wSuccessCondition, margin);\r\n\t\tfdNrErrorsLessThan.right = new FormAttachment(100, -margin);\r\n\t\twNrErrorsLessThan.setLayoutData(fdNrErrorsLessThan);\r\n\t\t\r\n\t\r\n\t    fdSuccessOn= new FormData();\r\n\t    fdSuccessOn.left = new FormAttachment(0, margin);\r\n\t    fdSuccessOn.top = new FormAttachment(0, margin);\r\n\t    fdSuccessOn.right = new FormAttachment(100, -margin);\r\n\t    wSuccessOn.setLayoutData(fdSuccessOn);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF Success ON GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n\r\n\t\tfdAdvancedComp=new FormData();\r\n\t\tfdAdvancedComp.left  = new FormAttachment(0, 0);\r\n\t\tfdAdvancedComp.top   = new FormAttachment(0, 0);\r\n\t\tfdAdvancedComp.right = new FormAttachment(100, 0);\r\n\t\tfdAdvancedComp.bottom= new FormAttachment(100, 0);\r\n\t\twAdvancedComp.setLayoutData(fdAdvancedComp);\r\n\t\t\r\n\t\twAdvancedComp.layout();\r\n\t\twAdvancedTab.setControl(wAdvancedComp);\r\n \t\tprops.setLook(wAdvancedComp);\r\n \t\t\r\n \t\t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF Advanced TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t\r\n\t\tfdTabFolder = new FormData();\r\n\t\tfdTabFolder.left  = new FormAttachment(0, 0);\r\n\t\tfdTabFolder.top   = new FormAttachment(wName, margin);\r\n\t\tfdTabFolder.right = new FormAttachment(100, 0);\r\n\t\tfdTabFolder.bottom= new FormAttachment(100, -50);\r\n\t\twTabFolder.setLayoutData(fdTabFolder);\r\n\t\t\r\n\t\t\r\n\r\n        wOK = new Button(shell, SWT.PUSH);\r\n        wOK.setText(Messages.getString(\"System.Button.OK\"));\r\n        wCancel = new Button(shell, SWT.PUSH);\r\n        wCancel.setText(Messages.getString(\"System.Button.Cancel\"));\r\n\r\n        BaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, wTabFolder);\r\n\r\n        // Add listeners\r\n        lsCancel = new Listener()\r\n        {\r\n            public void handleEvent(Event e)\r\n            {\r\n                cancel();\r\n            }\r\n        };\r\n        lsOK = new Listener()\r\n        {\r\n            public void handleEvent(Event e)\r\n            {\r\n                ok();\r\n            }\r\n        };\r\n        lsTest     = new Listener() { public void handleEvent(Event e) { test(); } };\r\n        lsCheckFolder     = new Listener() { public void handleEvent(Event e) { checkRemoteFolder(false,true,wMoveToDirectory.getText()); } };\r\n        lsCheckChangeFolder     = new Listener() { public void handleEvent(Event e) { checkRemoteFolder(true,false,wFtpDirectory.getText()); } };\r\n        \r\n        wCancel.addListener(SWT.Selection, lsCancel);\r\n        wOK.addListener(SWT.Selection, lsOK);\r\n        wTest.addListener    (SWT.Selection, lsTest    );\r\n        wbTestFolderExists.addListener    (SWT.Selection, lsCheckFolder    );\r\n        wbTestChangeFolderExists.addListener    (SWT.Selection, lsCheckChangeFolder    );\r\n        \r\n        lsDef = new SelectionAdapter()\r\n        {\r\n            public void widgetDefaultSelected(SelectionEvent e)\r\n            {\r\n                ok();\r\n            }\r\n        };\r\n\r\n        wName.addSelectionListener(lsDef);\r\n        wServerName.addSelectionListener(lsDef);\r\n        wUserName.addSelectionListener(lsDef);\r\n        wPassword.addSelectionListener(lsDef);\r\n        wFtpDirectory.addSelectionListener(lsDef);\r\n        wTargetDirectory.addSelectionListener(lsDef);\r\n        wFtpDirectory.addSelectionListener(lsDef);\r\n        wWildcard.addSelectionListener(lsDef);\r\n        wTimeout.addSelectionListener(lsDef);\r\n\r\n        // Detect X or ALT-F4 or something that kills this window...\r\n        shell.addShellListener(new ShellAdapter()\r\n        {\r\n            public void shellClosed(ShellEvent e)\r\n            {\r\n                cancel();\r\n            }\r\n        });\r\n\r\n        getData();\r\n        activateMoveTo();\r\n        setDateTimeFormat();\r\n        setAddDateBeforeExtension();\r\n        activeSuccessCondition();\r\n        activeIfExists();\r\n        \r\n        wTabFolder.setSelection(0);\r\n        BaseStepDialog.setSize(shell);\r\n\r\n        shell.open();\r\n        props.setDialogSize(shell, \"JobFTPDialogSize\");\r\n        while (!shell.isDisposed())\r\n        {\r\n            if (!display.readAndDispatch())\r\n                display.sleep();\r\n        }\r\n        return jobEntry;\r\n    }","id":63941,"modified_method":"public JobEntryInterface open()\r\n    {\r\n        Shell parent = getParent();\r\n        Display display = parent.getDisplay();\r\n\r\n        shell = new Shell(parent, props.getJobsDialogStyle());\r\n        props.setLook(shell);\r\n        JobDialog.setShellImage(shell, jobEntry);\r\n\r\n        ModifyListener lsMod = new ModifyListener()\r\n        {\r\n            public void modifyText(ModifyEvent e)\r\n            {\r\n            \tpwdFolder=null;\r\n            \tftpclient=null;\r\n                jobEntry.setChanged();\r\n            }\r\n        };\r\n        changed = jobEntry.hasChanged();\r\n\r\n        FormLayout formLayout = new FormLayout();\r\n        formLayout.marginWidth = Const.FORM_MARGIN;\r\n        formLayout.marginHeight = Const.FORM_MARGIN;\r\n\r\n        shell.setLayout(formLayout);\r\n        shell.setText(Messages.getString(\"JobFTP.Title\"));\r\n\r\n        int middle = props.getMiddlePct();\r\n        int margin = Const.MARGIN;\r\n\r\n        // Job entry name line\r\n        wName = new LabelText(shell, Messages.getString(\"JobFTP.Name.Label\"), Messages\r\n            .getString(\"JobFTP.Name.Tooltip\"));\r\n        wName.addModifyListener(lsMod);\r\n        fdName = new FormData();\r\n        fdName.top = new FormAttachment(0, 0);\r\n        fdName.left = new FormAttachment(0, 0);\r\n        fdName.right = new FormAttachment(100, 0);\r\n        wName.setLayoutData(fdName);\r\n        \r\n        \r\n        wTabFolder = new CTabFolder(shell, SWT.BORDER);\r\n \t\tprops.setLook(wTabFolder, Props.WIDGET_STYLE_TAB);\r\n \t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF GENERAL TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\twGeneralTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twGeneralTab.setText(Messages.getString(\"JobFTP.Tab.General.Label\"));\r\n\t\t\r\n\t\twGeneralComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wGeneralComp);\r\n\r\n\t\tFormLayout generalLayout = new FormLayout();\r\n\t\tgeneralLayout.marginWidth  = 3;\r\n\t\tgeneralLayout.marginHeight = 3;\r\n\t\twGeneralComp.setLayout(generalLayout);\r\n        \r\n\t     // ////////////////////////\r\n\t     // START OF SERVER SETTINGS GROUP///\r\n\t     // /\r\n\t    wServerSettings = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wServerSettings);\r\n\t    wServerSettings.setText(Messages.getString(\"JobFTP.ServerSettings.Group.Label\"));\r\n\r\n\t    FormLayout ServerSettingsgroupLayout = new FormLayout();\r\n\t    ServerSettingsgroupLayout.marginWidth = 10;\r\n\t    ServerSettingsgroupLayout.marginHeight = 10;\r\n\r\n\t    wServerSettings.setLayout(ServerSettingsgroupLayout);\r\n\r\n        // ServerName line\r\n        wServerName = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.Server.Label\"), Messages\r\n            .getString(\"JobFTP.Server.Tooltip\"));\r\n        props.setLook(wServerName);\r\n        wServerName.addModifyListener(lsMod);\r\n        fdServerName = new FormData();\r\n        fdServerName.left = new FormAttachment(0, 0);\r\n        fdServerName.top = new FormAttachment(wName, margin);\r\n        fdServerName.right = new FormAttachment(100, 0);\r\n        wServerName.setLayoutData(fdServerName);\r\n        \r\n        // Server port line\r\n        wPort = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.Port.Label\"), Messages.getString(\"JobFTP.Port.Tooltip\"));\r\n        props.setLook(wPort);\r\n        wPort.addModifyListener(lsMod);\r\n        fdPort = new FormData();\r\n        fdPort.left \t= new FormAttachment(0, 0);\r\n        fdPort.top  \t= new FormAttachment(wServerName, margin);\r\n        fdPort.right\t= new FormAttachment(100, 0);\r\n        wPort.setLayoutData(fdPort);\r\n\r\n        // UserName line\r\n        wUserName = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.User.Label\"), Messages\r\n            .getString(\"JobFTP.User.Tooltip\"));\r\n        props.setLook(wUserName);\r\n        wUserName.addModifyListener(lsMod);\r\n        fdUserName = new FormData();\r\n        fdUserName.left = new FormAttachment(0, 0);\r\n        fdUserName.top = new FormAttachment(wPort, margin);\r\n        fdUserName.right = new FormAttachment(100, 0);\r\n        wUserName.setLayoutData(fdUserName);\r\n\r\n        // Password line\r\n        wPassword = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.Password.Label\"), Messages\r\n            .getString(\"JobFTP.Password.Tooltip\"));\r\n        props.setLook(wPassword);\r\n        wPassword.setEchoChar('*');\r\n        wPassword.addModifyListener(lsMod);\r\n        fdPassword = new FormData();\r\n        fdPassword.left = new FormAttachment(0, 0);\r\n        fdPassword.top = new FormAttachment(wUserName, margin);\r\n        fdPassword.right = new FormAttachment(100, 0);\r\n        wPassword.setLayoutData(fdPassword);\r\n\r\n        // OK, if the password contains a variable, we don't want to have the password hidden...\r\n        wPassword.getTextWidget().addModifyListener(new ModifyListener()\r\n        {\r\n            public void modifyText(ModifyEvent e)\r\n            {\r\n                checkPasswordVisible();\r\n            }\r\n        });\r\n\r\n        \r\n        // Proxy host line\r\n        wProxyHost = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.ProxyHost.Label\"), Messages.getString(\"JobFTP.ProxyHost.Tooltip\"));\r\n        props.setLook(wProxyHost);\r\n        wProxyHost.addModifyListener(lsMod);\r\n        fdProxyHost = new FormData();\r\n        fdProxyHost.left \t= new FormAttachment(0, 0);\r\n        fdProxyHost.top\t\t= new FormAttachment(wPassword, 2*margin);\r\n        fdProxyHost.right\t= new FormAttachment(100, 0);\r\n        wProxyHost.setLayoutData(fdProxyHost);\r\n\r\n        // Proxy port line\r\n        wProxyPort = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.ProxyPort.Label\"), Messages.getString(\"JobFTP.ProxyPort.Tooltip\"));\r\n        props.setLook(wProxyPort);\r\n        wProxyPort.addModifyListener(lsMod);\r\n        fdProxyPort = new FormData();\r\n        fdProxyPort.left \t= new FormAttachment(0, 0);\r\n        fdProxyPort.top  \t= new FormAttachment(wProxyHost, margin);\r\n        fdProxyPort.right\t= new FormAttachment(100, 0);\r\n        wProxyPort.setLayoutData(fdProxyPort);\r\n\r\n        // Proxy username line\r\n        wProxyUsername = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.ProxyUsername.Label\"), Messages.getString(\"JobFTP.ProxyUsername.Tooltip\"));\r\n        props.setLook(wProxyUsername);\r\n        wProxyUsername.addModifyListener(lsMod);\r\n        fdProxyUsername = new FormData();\r\n        fdProxyUsername.left = new FormAttachment(0, 0);\r\n        fdProxyUsername.top  = new FormAttachment(wProxyPort, margin);\r\n        fdProxyUsername.right= new FormAttachment(100, 0);\r\n        wProxyUsername.setLayoutData(fdProxyUsername);\r\n        \r\n        // Proxy password line\r\n        wProxyPassword = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.ProxyPassword.Label\"), Messages.getString(\"JobFTP.ProxyPassword.Tooltip\"));\r\n        props.setLook(wProxyPassword);\r\n        wProxyPassword.addModifyListener(lsMod);\r\n        fdProxyPasswd=new FormData();\r\n        fdProxyPasswd.left = new FormAttachment(0, 0);\r\n        fdProxyPasswd.top  = new FormAttachment(wProxyUsername, margin);\r\n        fdProxyPasswd.right= new FormAttachment(100, 0);\r\n        wProxyPassword.setLayoutData(fdProxyPasswd);\r\n        \r\n\t\t// Test connection button\r\n\t\twTest=new Button(wServerSettings,SWT.PUSH);\r\n\t\twTest.setText(Messages.getString(\"JobFTP.TestConnection.Label\"));\r\n \t\tprops.setLook(wTest);\r\n\t\tfdTest=new FormData();\r\n\t\twTest.setToolTipText(Messages.getString(\"JobFTP.TestConnection.Tooltip\"));\r\n\t\t//fdTest.left = new FormAttachment(middle, 0);\r\n\t\tfdTest.top  = new FormAttachment(wProxyPassword, margin);\r\n\t\tfdTest.right= new FormAttachment(100, 0);\r\n\t\twTest.setLayoutData(fdTest);\r\n        \r\n        \r\n\t     fdServerSettings = new FormData();\r\n\t     fdServerSettings.left = new FormAttachment(0, margin);\r\n\t     fdServerSettings.top = new FormAttachment(wName, margin);\r\n\t     fdServerSettings.right = new FormAttachment(100, -margin);\r\n\t     wServerSettings.setLayoutData(fdServerSettings);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF SERVER SETTINGS GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n        \r\n\r\n\t     // ////////////////////////\r\n\t     // START OF Advanced SETTINGS GROUP///\r\n\t     // /\r\n\t     wAdvancedSettings = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n\t     props.setLook(wAdvancedSettings);\r\n\t     wAdvancedSettings.setText(Messages.getString(\"JobFTP.AdvancedSettings.Group.Label\"));\r\n\t     FormLayout AdvancedSettingsgroupLayout = new FormLayout();\r\n\t     AdvancedSettingsgroupLayout.marginWidth = 10;\r\n\t     AdvancedSettingsgroupLayout.marginHeight = 10;\r\n\t     wAdvancedSettings.setLayout(AdvancedSettingsgroupLayout);\r\n\r\n\t    \r\n\t     // Binary mode selection...\r\n        wlBinaryMode = new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlBinaryMode.setText(Messages.getString(\"JobFTP.BinaryMode.Label\"));\r\n        props.setLook(wlBinaryMode);\r\n        fdlBinaryMode = new FormData();\r\n        fdlBinaryMode.left = new FormAttachment(0, 0);\r\n        fdlBinaryMode.top = new FormAttachment(wServerSettings, margin);\r\n        fdlBinaryMode.right = new FormAttachment(middle, 0);\r\n        wlBinaryMode.setLayoutData(fdlBinaryMode);\r\n        wBinaryMode = new Button(wAdvancedSettings, SWT.CHECK);\r\n        props.setLook(wBinaryMode);\r\n        wBinaryMode.setToolTipText(Messages.getString(\"JobFTP.BinaryMode.Tooltip\"));\r\n        fdBinaryMode = new FormData();\r\n        fdBinaryMode.left = new FormAttachment(middle, margin);\r\n        fdBinaryMode.top = new FormAttachment(wServerSettings, margin);\r\n        fdBinaryMode.right = new FormAttachment(100, 0);\r\n        wBinaryMode.setLayoutData(fdBinaryMode);\r\n\r\n        // Timeout line\r\n        wTimeout = new LabelTextVar(jobMeta,wAdvancedSettings, Messages.getString(\"JobFTP.Timeout.Label\"), Messages\r\n            .getString(\"JobFTP.Timeout.Tooltip\"));\r\n        props.setLook(wTimeout);\r\n        wTimeout.addModifyListener(lsMod);\r\n        fdTimeout = new FormData();\r\n        fdTimeout.left = new FormAttachment(0, 0);\r\n        fdTimeout.top = new FormAttachment(wlBinaryMode, margin);\r\n        fdTimeout.right = new FormAttachment(100, 0);\r\n        wTimeout.setLayoutData(fdTimeout);\r\n\r\n\r\n        // active connection?\r\n        wlActive = new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlActive.setText(Messages.getString(\"JobFTP.ActiveConns.Label\"));\r\n        props.setLook(wlActive);\r\n        fdlActive = new FormData();\r\n        fdlActive.left = new FormAttachment(0, 0);\r\n        fdlActive.top = new FormAttachment(wTimeout, margin);\r\n        fdlActive.right = new FormAttachment(middle, 0);\r\n        wlActive.setLayoutData(fdlActive);\r\n        wActive = new Button(wAdvancedSettings, SWT.CHECK);\r\n        wActive.setToolTipText(Messages.getString(\"JobFTP.ActiveConns.Tooltip\"));\r\n        props.setLook(wActive);\r\n        fdActive = new FormData();\r\n        fdActive.left = new FormAttachment(middle, margin);\r\n        fdActive.top = new FormAttachment(wTimeout, margin);\r\n        fdActive.right = new FormAttachment(100, 0);\r\n        wActive.setLayoutData(fdActive);\r\n        \r\n        // Control encoding line\r\n        //\r\n        // The drop down is editable as it may happen an encoding may not be present\r\n        // on one machine, but you may want to use it on your execution server\r\n        //\r\n        wlControlEncoding=new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlControlEncoding.setText(Messages.getString(\"JobFTP.ControlEncoding.Label\"));\r\n        props.setLook(wlControlEncoding);\r\n        fdlControlEncoding=new FormData();\r\n        fdlControlEncoding.left  = new FormAttachment(0, 0);\r\n        fdlControlEncoding.top   = new FormAttachment(wActive, margin);\r\n        fdlControlEncoding.right = new FormAttachment(middle, 0);\r\n        wlControlEncoding.setLayoutData(fdlControlEncoding);\r\n        wControlEncoding=new Combo(wAdvancedSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n        wControlEncoding.setToolTipText(Messages.getString(\"JobFTP.ControlEncoding.Tooltip\"));\r\n        wControlEncoding.setItems(encodings);\r\n        props.setLook(wControlEncoding);\r\n        fdControlEncoding=new FormData();\r\n        fdControlEncoding.left = new FormAttachment(middle, margin);\r\n        fdControlEncoding.top  = new FormAttachment(wActive, margin);\r\n        fdControlEncoding.right= new FormAttachment(100, 0);        \r\n        wControlEncoding.setLayoutData(fdControlEncoding);\r\n    \r\n\t    \r\n\t     fdAdvancedSettings = new FormData();\r\n\t     fdAdvancedSettings.left = new FormAttachment(0, margin);\r\n\t     fdAdvancedSettings.top = new FormAttachment(wServerSettings, margin);\r\n\t     fdAdvancedSettings.right = new FormAttachment(100, -margin);\r\n\t     wAdvancedSettings.setLayoutData(fdAdvancedSettings);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF Advanced SETTINGS GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n\r\n\t\tfdGeneralComp=new FormData();\r\n\t\tfdGeneralComp.left  = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.top   = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.right = new FormAttachment(100, 0);\r\n\t\tfdGeneralComp.bottom= new FormAttachment(100, 0);\r\n\t\twGeneralComp.setLayoutData(fdGeneralComp);\r\n\t\t\r\n\t\twGeneralComp.layout();\r\n\t\twGeneralTab.setControl(wGeneralComp);\r\n \t\tprops.setLook(wGeneralComp);\r\n \t\t\r\n \t\t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF GENERAL TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF Files TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n \t\twFilesTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twFilesTab.setText(Messages.getString(\"JobFTP.Tab.Files.Label\"));\r\n\t\t\r\n\t\twFilesComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wFilesComp);\r\n\r\n\t\tFormLayout FilesLayout = new FormLayout();\r\n\t\tFilesLayout.marginWidth  = 3;\r\n\t\tFilesLayout.marginHeight = 3;\r\n\t\twFilesComp.setLayout(FilesLayout);\r\n \t\t\r\n\t\t // ////////////////////////\r\n\t     // START OF Remote SETTINGS GROUP///\r\n\t     // /\r\n\t    wRemoteSettings = new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wRemoteSettings);\r\n\t    wRemoteSettings.setText(Messages.getString(\"JobFTP.RemoteSettings.Group.Label\"));\r\n\r\n\t    FormLayout RemoteSettinsgroupLayout = new FormLayout();\r\n\t    RemoteSettinsgroupLayout.marginWidth = 10;\r\n\t    RemoteSettinsgroupLayout.marginHeight = 10;\r\n\r\n\t    wRemoteSettings.setLayout(RemoteSettinsgroupLayout);\r\n\t    \r\n\t    \r\n        // Move to directory\r\n        wlFtpDirectory = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlFtpDirectory.setText(Messages.getString(\"JobFTP.RemoteDir.Label\"));\r\n        props.setLook(wlFtpDirectory);\r\n        fdlFtpDirectory= new FormData();\r\n        fdlFtpDirectory.left = new FormAttachment(0, 0);\r\n        fdlFtpDirectory.top = new FormAttachment(0, margin);\r\n        fdlFtpDirectory.right = new FormAttachment(middle, 0);\r\n        wlFtpDirectory.setLayoutData(fdlFtpDirectory);\r\n\t    \r\n\t    // Test remote folder  button ...\r\n\t\twbTestChangeFolderExists=new Button(wRemoteSettings, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTestChangeFolderExists);\r\n\t\twbTestChangeFolderExists.setText(Messages.getString(\"JobFTP.TestFolderExists.Label\"));\r\n\t\tfdbTestChangeFolderExists=new FormData();\r\n\t\tfdbTestChangeFolderExists.right= new FormAttachment(100, 0);\r\n\t\tfdbTestChangeFolderExists.top  = new FormAttachment(0, margin);\r\n\t\twbTestChangeFolderExists.setLayoutData(fdbTestChangeFolderExists);\r\n\r\n        wFtpDirectory = new TextVar(jobMeta,wRemoteSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n           .getString(\"JobFTP.RemoteDir.Tooltip\"));\r\n       props.setLook(wFtpDirectory);\r\n       wFtpDirectory.addModifyListener(lsMod);\r\n       fdFtpDirectory = new FormData();\r\n       fdFtpDirectory.left = new FormAttachment(middle, margin);\r\n       fdFtpDirectory.top = new FormAttachment(0, margin);\r\n       fdFtpDirectory.right = new FormAttachment(wbTestChangeFolderExists, -margin);\r\n       wFtpDirectory.setLayoutData(fdFtpDirectory);\r\n       \r\n        \r\n        // Wildcard line\r\n        wWildcard = new LabelTextVar(jobMeta,wRemoteSettings, Messages.getString(\"JobFTP.Wildcard.Label\"), Messages\r\n            .getString(\"JobFTP.Wildcard.Tooltip\"));\r\n        props.setLook(wWildcard);\r\n        wWildcard.addModifyListener(lsMod);\r\n        fdWildcard = new FormData();\r\n        fdWildcard.left = new FormAttachment(0, 0);\r\n        fdWildcard.top = new FormAttachment(wFtpDirectory, margin);\r\n        fdWildcard.right = new FormAttachment(100, 0);\r\n        wWildcard.setLayoutData(fdWildcard);\r\n        \r\n        // Remove files after retrieval...\r\n        wlRemove = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlRemove.setText(Messages.getString(\"JobFTP.RemoveFiles.Label\"));\r\n        props.setLook(wlRemove);\r\n        fdlRemove = new FormData();\r\n        fdlRemove.left = new FormAttachment(0, 0);\r\n        fdlRemove.top = new FormAttachment(wWildcard, margin);\r\n        fdlRemove.right = new FormAttachment(middle, 0);\r\n        wlRemove.setLayoutData(fdlRemove);\r\n        wRemove = new Button(wRemoteSettings, SWT.CHECK);\r\n        wRemove.setToolTipText(Messages.getString(\"JobFTP.RemoveFiles.Tooltip\"));\r\n        props.setLook(wRemove);\r\n        fdRemove = new FormData();\r\n        fdRemove.left = new FormAttachment(middle, margin);\r\n        fdRemove.top = new FormAttachment(wWildcard, margin);\r\n        fdRemove.right = new FormAttachment(100, 0);\r\n        wRemove.setLayoutData(fdRemove);\r\n        \r\n        wRemove.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tif(wRemove.getSelection())\r\n\t\t\t\t{\r\n\t\t\t\t\twMove.setSelection(false);\r\n\t\t\t\t\tactivateMoveTo();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n        \r\n        // Move files after the transfert?...\r\n        wlMove = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlMove.setText(Messages.getString(\"JobFTP.MoveFiles.Label\"));\r\n        props.setLook(wlMove);\r\n        fdlMove = new FormData();\r\n        fdlMove.left = new FormAttachment(0, 0);\r\n        fdlMove.top = new FormAttachment(wRemove, margin);\r\n        fdlMove.right = new FormAttachment(middle, -margin);\r\n        wlMove.setLayoutData(fdlMove);\r\n        wMove = new Button(wRemoteSettings, SWT.CHECK);\r\n        props.setLook(wMove);\r\n        wMove.setToolTipText(Messages.getString(\"JobFTP.MoveFiles.Tooltip\"));\r\n        fdMove = new FormData();\r\n        fdMove.left = new FormAttachment(middle, margin);\r\n        fdMove.top = new FormAttachment(wRemove, margin);\r\n        fdMove.right = new FormAttachment(100, 0);\r\n        wMove.setLayoutData(fdMove);\r\n        wMove.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tactivateMoveTo();\r\n\t\t\t\tif(wMove.getSelection())\r\n\t\t\t\t{\r\n\t\t\t\t\twRemove.setSelection(false);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n        \r\n        // Move to directory\r\n        wlMoveToDirectory = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlMoveToDirectory.setText(Messages.getString(\"JobFTP.MoveFolder.Label\"));\r\n        props.setLook(wlMoveToDirectory);\r\n        fdlMoveToDirectory= new FormData();\r\n        fdlMoveToDirectory.left = new FormAttachment(0, 0);\r\n        fdlMoveToDirectory.top = new FormAttachment(wMove, margin);\r\n        fdlMoveToDirectory.right = new FormAttachment(middle, 0);\r\n        wlMoveToDirectory.setLayoutData(fdlMoveToDirectory);\r\n        \r\n\t    // Test remote folder  button ...\r\n\t\twbTestFolderExists=new Button(wRemoteSettings, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTestFolderExists);\r\n\t\twbTestFolderExists.setText(Messages.getString(\"JobFTP.TestFolderExists.Label\"));\r\n\t\tfdbTestFolderExists=new FormData();\r\n\t\tfdbTestFolderExists.right= new FormAttachment(100, 0);\r\n\t\tfdbTestFolderExists.top  = new FormAttachment(wMove, margin);\r\n\t\twbTestFolderExists.setLayoutData(fdbTestFolderExists);\r\n        \r\n        wMoveToDirectory = new TextVar(jobMeta,wRemoteSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n            .getString(\"JobFTP.MoveToDirectory.Tooltip\"));\r\n        wMoveToDirectory.setToolTipText(Messages.getString(\"JobFTP.MoveFolder.Tooltip\"));\r\n        props.setLook(wMoveToDirectory);\r\n        wMoveToDirectory.addModifyListener(lsMod);\r\n        fdMoveToDirectory = new FormData();\r\n        fdMoveToDirectory.left = new FormAttachment(middle, margin);\r\n        fdMoveToDirectory.top = new FormAttachment(wMove, margin);\r\n        fdMoveToDirectory.right = new FormAttachment(wbTestFolderExists, -margin);\r\n        wMoveToDirectory.setLayoutData(fdMoveToDirectory);\r\n        \r\n        \r\n        // create destination folder?...\r\n        wlCreateMoveFolder = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlCreateMoveFolder.setText(Messages.getString(\"JobFTP.CreateMoveFolder.Label\"));\r\n        props.setLook(wlCreateMoveFolder);\r\n        fdlCreateMoveFolder = new FormData();\r\n        fdlCreateMoveFolder.left = new FormAttachment(0, 0);\r\n        fdlCreateMoveFolder.top = new FormAttachment(wMoveToDirectory, margin);\r\n        fdlCreateMoveFolder.right = new FormAttachment(middle, 0);\r\n        wlCreateMoveFolder.setLayoutData(fdlCreateMoveFolder);\r\n        wCreateMoveFolder = new Button(wRemoteSettings, SWT.CHECK);\r\n        wCreateMoveFolder.setToolTipText(Messages.getString(\"JobFTP.CreateMoveFolder.Tooltip\"));\r\n        props.setLook(wCreateMoveFolder);\r\n        fdCreateMoveFolder = new FormData();\r\n        fdCreateMoveFolder.left = new FormAttachment(middle, margin);\r\n        fdCreateMoveFolder.top = new FormAttachment(wMoveToDirectory, margin);\r\n        fdCreateMoveFolder.right = new FormAttachment(100, 0);\r\n        wCreateMoveFolder.setLayoutData(fdCreateMoveFolder);\r\n      \r\n        fdRemoteSettings = new FormData();\r\n        fdRemoteSettings.left = new FormAttachment(0, margin);\r\n        fdRemoteSettings.top = new FormAttachment(0, 2*margin);\r\n        fdRemoteSettings.right = new FormAttachment(100, -margin);\r\n        wRemoteSettings.setLayoutData(fdRemoteSettings);\r\n       // ///////////////////////////////////////////////////////////\r\n       // / END OF Remote SETTINGSGROUP\r\n       // ///////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t // ////////////////////////\r\n\t     // START OF LOCAL SETTINGS GROUP///\r\n\t     // /\r\n\t    wLocalSettings = new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wLocalSettings);\r\n\t    wLocalSettings.setText(Messages.getString(\"JobFTP.LocalSettings.Group.Label\"));\r\n\r\n\t    FormLayout LocalSettinsgroupLayout = new FormLayout();\r\n\t    LocalSettinsgroupLayout.marginWidth = 10;\r\n\t    LocalSettinsgroupLayout.marginHeight = 10;\r\n\r\n\t    wLocalSettings.setLayout(LocalSettinsgroupLayout);\r\n\t      \r\n\t     \r\n\t     \r\n\t    // TargetDirectory\r\n\t\twlTargetDirectory = new Label(wLocalSettings, SWT.RIGHT);\r\n\t\twlTargetDirectory.setText(Messages.getString(\"JobFTP.TargetDir.Label\"));\r\n\t\tprops.setLook(wlTargetDirectory);\r\n\t\tfdlTargetDirectory = new FormData();\r\n\t\tfdlTargetDirectory.left = new FormAttachment(0, 0);\r\n\t\tfdlTargetDirectory.top = new FormAttachment(wRemoteSettings, margin);\r\n\t\tfdlTargetDirectory.right = new FormAttachment(middle, -margin);\r\n\t\twlTargetDirectory.setLayoutData(fdlTargetDirectory);\r\n\t\t\r\n\t    // Browse folders button ...\r\n\t\twbTargetDirectory=new Button(wLocalSettings, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTargetDirectory);\r\n\t\twbTargetDirectory.setText(Messages.getString(\"JobFTP.BrowseFolders.Label\"));\r\n\t\tfdbTargetDirectory=new FormData();\r\n\t\tfdbTargetDirectory.right= new FormAttachment(100, 0);\r\n\t\tfdbTargetDirectory.top  = new FormAttachment(wRemoteSettings, margin);\r\n\t\twbTargetDirectory.setLayoutData(fdbTargetDirectory);\r\n\t\twbTargetDirectory.addSelectionListener\r\n\t\t\t(\r\n\t\t\t\tnew SelectionAdapter()\r\n\t\t\t\t{\r\n\t\t\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tDirectoryDialog ddialog = new DirectoryDialog(shell, SWT.OPEN);\r\n\t\t\t\t\t\tif (wTargetDirectory.getText()!=null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tddialog.setFilterPath(jobMeta.environmentSubstitute(wTargetDirectory.getText()) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t // Calling open() will open and run the dialog.\r\n\t\t\t\t        // It will return the selected directory, or\r\n\t\t\t\t        // null if user cancels\r\n\t\t\t\t        String dir = ddialog.open();\r\n\t\t\t\t        if (dir != null) {\r\n\t\t\t\t          // Set the text box to the new selection\r\n\t\t\t\t        \twTargetDirectory.setText(dir);\r\n\t\t\t\t        }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\r\n\t\twTargetDirectory = new TextVar(jobMeta,wLocalSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n\t\t\t.getString(\"JobFTP.TargetDir.Tooltip\"));\r\n\t\tprops.setLook(wTargetDirectory);\r\n\t\twTargetDirectory.addModifyListener(lsMod);\r\n\t\tfdTargetDirectory = new FormData();\r\n\t\tfdTargetDirectory.left = new FormAttachment(middle, margin);\r\n\t\tfdTargetDirectory.top = new FormAttachment(wRemoteSettings, margin);\r\n\t\tfdTargetDirectory.right = new FormAttachment(wbTargetDirectory, -margin);\r\n\t\twTargetDirectory.setLayoutData(fdTargetDirectory);\r\n\t\t\r\n\r\n       \r\n       \r\n\t   \t// Create multi-part file?\r\n\t   \twlAddDate=new Label(wLocalSettings, SWT.RIGHT);\r\n\t   \twlAddDate.setText(Messages.getString(\"JobFTP.AddDate.Label\"));\r\n\t   \t\tprops.setLook(wlAddDate);\r\n\t   \tfdlAddDate=new FormData();\r\n\t   \tfdlAddDate.left = new FormAttachment(0, 0);\r\n\t   \tfdlAddDate.top  = new FormAttachment(wTargetDirectory, margin);\r\n\t   \tfdlAddDate.right= new FormAttachment(middle, -margin);\r\n\t   \twlAddDate.setLayoutData(fdlAddDate);\r\n\t   \twAddDate=new Button(wLocalSettings, SWT.CHECK);\r\n   \t\tprops.setLook(wAddDate);\r\n   \t\twAddDate.setToolTipText(Messages.getString(\"JobFTP.AddDate.Tooltip\"));\r\n\t   \tfdAddDate=new FormData();\r\n\t   \tfdAddDate.left = new FormAttachment(middle, margin);\r\n\t   \tfdAddDate.top  = new FormAttachment(wTargetDirectory, margin);\r\n\t   \tfdAddDate.right= new FormAttachment(100, 0);\r\n\t   \twAddDate.setLayoutData(fdAddDate);\r\n\t   \twAddDate.addSelectionListener(new SelectionAdapter() \r\n\t   \t\t{\r\n\t   \t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t   \t\t\t{\r\n\t   \t\t\t\tjobEntry.setChanged();\r\n\t   \t\t\t}\r\n\t   \t\t}\r\n\t   \t);\r\n\t   \t// Create multi-part file?\r\n\t   \twlAddTime=new Label(wLocalSettings, SWT.RIGHT);\r\n\t   \twlAddTime.setText(Messages.getString(\"JobFTP.AddTime.Label\"));\r\n   \t\tprops.setLook(wlAddTime);\r\n\t   \tfdlAddTime=new FormData();\r\n\t   \tfdlAddTime.left = new FormAttachment(0, 0);\r\n\t   \tfdlAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t   \tfdlAddTime.right= new FormAttachment(middle, -margin);\r\n\t   \twlAddTime.setLayoutData(fdlAddTime);\r\n\t   \twAddTime=new Button(wLocalSettings, SWT.CHECK);\r\n   \t\tprops.setLook(wAddTime);\r\n   \t\twAddTime.setToolTipText(Messages.getString(\"JobFTP.AddTime.Tooltip\"));\r\n\t   \tfdAddTime=new FormData();\r\n\t   \tfdAddTime.left = new FormAttachment(middle, margin);\r\n\t   \tfdAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t   \tfdAddTime.right= new FormAttachment(100, 0);\r\n\t   \twAddTime.setLayoutData(fdAddTime);\r\n\t   \twAddTime.addSelectionListener(new SelectionAdapter() \r\n\t   \t\t{\r\n\t   \t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t   \t\t\t{\r\n\t   \t\t\t\tjobEntry.setChanged();\r\n\t   \t\t\t}\r\n\t   \t\t}\r\n\t   \t);\r\n\t   \t\r\n\t   \t// Specify date time format?\r\n\t   \twlSpecifyFormat=new Label(wLocalSettings, SWT.RIGHT);\r\n\t   \twlSpecifyFormat.setText(Messages.getString(\"JobFTP.SpecifyFormat.Label\"));\r\n\t   \tprops.setLook(wlSpecifyFormat);\r\n\t   \tfdlSpecifyFormat=new FormData();\r\n\t   \tfdlSpecifyFormat.left = new FormAttachment(0, 0);\r\n\t   \tfdlSpecifyFormat.top  = new FormAttachment(wAddTime, margin);\r\n\t   \tfdlSpecifyFormat.right= new FormAttachment(middle, -margin);\r\n\t   \twlSpecifyFormat.setLayoutData(fdlSpecifyFormat);\r\n\t   \twSpecifyFormat=new Button(wLocalSettings, SWT.CHECK);\r\n\t   \tprops.setLook(wSpecifyFormat);\r\n\t   \twSpecifyFormat.setToolTipText(Messages.getString(\"JobFTP.SpecifyFormat.Tooltip\"));\r\n       fdSpecifyFormat=new FormData();\r\n\t   \tfdSpecifyFormat.left = new FormAttachment(middle, margin);\r\n\t   \tfdSpecifyFormat.top  = new FormAttachment(wAddTime, margin);\r\n\t   \tfdSpecifyFormat.right= new FormAttachment(100, 0);\r\n\t   \twSpecifyFormat.setLayoutData(fdSpecifyFormat);\r\n\t   \twSpecifyFormat.addSelectionListener(new SelectionAdapter() \r\n\t   \t\t{\r\n\t   \t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t   \t\t\t{\r\n\t   \t\t\t\tjobEntry.setChanged();\r\n\t   \t\t\t\tsetDateTimeFormat();\r\n\t   \t\t\t\tsetAddDateBeforeExtension();\r\n\t   \t\t\t}\r\n\t   \t\t}\r\n\t   \t);\r\n\r\n   \t\r\n\t   \t//\tPrepare a list of possible DateTimeFormats...\r\n\t   \tString dats[] = Const.getDateFormats();\r\n   \t\r\n   \t\t// DateTimeFormat\r\n\t   \twlDateTimeFormat=new Label(wLocalSettings, SWT.RIGHT);\r\n       wlDateTimeFormat.setText(Messages.getString(\"JobFTP.DateTimeFormat.Label\"));\r\n       props.setLook(wlDateTimeFormat);\r\n       fdlDateTimeFormat=new FormData();\r\n       fdlDateTimeFormat.left = new FormAttachment(0, 0);\r\n       fdlDateTimeFormat.top  = new FormAttachment(wSpecifyFormat, margin);\r\n       fdlDateTimeFormat.right= new FormAttachment(middle, -margin);\r\n       wlDateTimeFormat.setLayoutData(fdlDateTimeFormat);\r\n       wDateTimeFormat=new CCombo(wLocalSettings, SWT.BORDER | SWT.READ_ONLY);\r\n       wDateTimeFormat.setEditable(true);\r\n       props.setLook(wDateTimeFormat);\r\n       wDateTimeFormat.addModifyListener(lsMod);\r\n       fdDateTimeFormat=new FormData();\r\n       fdDateTimeFormat.left = new FormAttachment(middle, margin);\r\n       fdDateTimeFormat.top  = new FormAttachment(wSpecifyFormat, margin);\r\n       fdDateTimeFormat.right= new FormAttachment(100, 0);\r\n       wDateTimeFormat.setLayoutData(fdDateTimeFormat);\r\n       for (int x=0;x<dats.length;x++) wDateTimeFormat.add(dats[x]);\r\n       \r\n       // Add Date before extension?\r\n       wlAddDateBeforeExtension = new Label(wLocalSettings, SWT.RIGHT);\r\n       wlAddDateBeforeExtension.setText(Messages.getString(\"JobFTP.AddDateBeforeExtension.Label\"));\r\n       props.setLook(wlAddDateBeforeExtension);\r\n       fdlAddDateBeforeExtension = new FormData();\r\n       fdlAddDateBeforeExtension.left = new FormAttachment(0, 0);\r\n       fdlAddDateBeforeExtension.top = new FormAttachment(wDateTimeFormat, margin);\r\n       fdlAddDateBeforeExtension.right = new FormAttachment(middle, -margin);\r\n       wlAddDateBeforeExtension.setLayoutData(fdlAddDateBeforeExtension);\r\n       wAddDateBeforeExtension = new Button(wLocalSettings, SWT.CHECK);\r\n       props.setLook(wAddDateBeforeExtension);\r\n       wAddDateBeforeExtension.setToolTipText(Messages.getString(\"JobFTP.AddDateBeforeExtension.Tooltip\"));\r\n       fdAddDateBeforeExtension = new FormData();\r\n       fdAddDateBeforeExtension.left = new FormAttachment(middle, margin);\r\n       fdAddDateBeforeExtension.top = new FormAttachment(wDateTimeFormat, margin);\r\n       fdAddDateBeforeExtension.right = new FormAttachment(100, 0);\r\n       wAddDateBeforeExtension.setLayoutData(fdAddDateBeforeExtension);\r\n       wAddDateBeforeExtension.addSelectionListener(new SelectionAdapter()\r\n       {\r\n           public void widgetSelected(SelectionEvent e)\r\n           {\r\n               jobEntry.setChanged();\r\n           }\r\n       });\r\n\r\n       \r\n       // OnlyNew files after retrieval...\r\n       wlOnlyNew = new Label(wLocalSettings, SWT.RIGHT);\r\n       wlOnlyNew.setText(Messages.getString(\"JobFTP.DontOverwrite.Label\"));\r\n       props.setLook(wlOnlyNew);\r\n       fdlOnlyNew = new FormData();\r\n       fdlOnlyNew.left = new FormAttachment(0, 0);\r\n       fdlOnlyNew.top = new FormAttachment(wAddDateBeforeExtension, margin);\r\n       fdlOnlyNew.right = new FormAttachment(middle, 0);\r\n       wlOnlyNew.setLayoutData(fdlOnlyNew);\r\n       wOnlyNew = new Button(wLocalSettings, SWT.CHECK);\r\n       wOnlyNew.setToolTipText(Messages.getString(\"JobFTP.DontOverwrite.Tooltip\"));\r\n       props.setLook(wOnlyNew);\r\n       fdOnlyNew = new FormData();\r\n       fdOnlyNew.left = new FormAttachment(middle, margin);\r\n       fdOnlyNew.top = new FormAttachment(wAddDateBeforeExtension, margin);\r\n       fdOnlyNew.right = new FormAttachment(100, 0);\r\n       wOnlyNew.setLayoutData(fdOnlyNew);\r\n       wOnlyNew.addSelectionListener(new SelectionAdapter()\r\n       {\r\n           public void widgetSelected(SelectionEvent e)\r\n           {\r\n        \t   activeIfExists();\r\n               jobEntry.setChanged();\r\n           }\r\n       });\r\n       \r\n       // Add filenames to result filenames...\r\n       wlAddFilenameToResult = new Label(wLocalSettings, SWT.RIGHT);\r\n       wlAddFilenameToResult.setText(Messages.getString(\"JobFTP.AddFilenameToResult.Label\"));\r\n       props.setLook(wlAddFilenameToResult);\r\n       fdlAddFilenameToResult = new FormData();\r\n       fdlAddFilenameToResult.left = new FormAttachment(0, 0);\r\n       fdlAddFilenameToResult.top = new FormAttachment(wAddDateBeforeExtension, margin);\r\n       fdlAddFilenameToResult.right = new FormAttachment(middle, 0);\r\n       wlAddFilenameToResult.setLayoutData(fdlAddFilenameToResult);\r\n       wAddFilenameToResult = new Button(wLocalSettings, SWT.CHECK);\r\n       wAddFilenameToResult.setToolTipText(Messages.getString(\"JobFTP.AddFilenameToResult.Tooltip\"));\r\n       props.setLook(wAddFilenameToResult);\r\n       fdAddFilenameToResult = new FormData();\r\n       fdAddFilenameToResult.left = new FormAttachment(middle, margin);\r\n       fdAddFilenameToResult.top = new FormAttachment(wAddDateBeforeExtension, margin);\r\n       fdAddFilenameToResult.right = new FormAttachment(100, 0);\r\n       wAddFilenameToResult.setLayoutData(fdAddFilenameToResult);\r\n       \r\n       // If File Exists\r\n\t\twlIfFileExists = new Label(wLocalSettings, SWT.RIGHT);\r\n\t\twlIfFileExists.setText(Messages.getString(\"JobFTP.IfFileExists.Label\"));\r\n\t\tprops.setLook(wlIfFileExists);\r\n\t\tfdlIfFileExists = new FormData();\r\n\t\tfdlIfFileExists.left = new FormAttachment(0, 0);\r\n\t\tfdlIfFileExists.right = new FormAttachment(middle, 0);\r\n\t\tfdlIfFileExists.top = new FormAttachment(wOnlyNew, margin);\r\n\t\twlIfFileExists.setLayoutData(fdlIfFileExists);\r\n\t\twIfFileExists = new CCombo(wLocalSettings, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n\t\twIfFileExists.add(Messages.getString(\"JobFTP.Skip.Label\"));\r\n\t\twIfFileExists.add(Messages.getString(\"JobFTP.Give_Unique_Name.Label\"));\r\n\t\twIfFileExists.add(Messages.getString(\"JobFTP.Fail.Label\"));\r\n\t\twIfFileExists.select(0); // +1: starts at -1\r\n\r\n\t\tprops.setLook(wIfFileExists);\r\n\t\tfdIfFileExists= new FormData();\r\n\t\tfdIfFileExists.left = new FormAttachment(middle, 0);\r\n\t\tfdIfFileExists.top = new FormAttachment(wOnlyNew, margin);\r\n\t\tfdIfFileExists.right = new FormAttachment(100, 0);\r\n\t\twIfFileExists.setLayoutData(fdIfFileExists);\r\n\r\n\t\tfdIfFileExists = new FormData();\r\n\t\tfdIfFileExists.left = new FormAttachment(middle, margin);\r\n\t\tfdIfFileExists.top = new FormAttachment(wOnlyNew, margin);\r\n\t\tfdIfFileExists.right = new FormAttachment(100, 0);\r\n\t\twIfFileExists.setLayoutData(fdIfFileExists);\r\n\t\t\r\n\t\twIfFileExists.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n       // Add filenames to result filenames...\r\n       wlAddFilenameToResult = new Label(wLocalSettings, SWT.RIGHT);\r\n       wlAddFilenameToResult.setText(Messages.getString(\"JobFTP.AddFilenameToResult.Label\"));\r\n       props.setLook(wlAddFilenameToResult);\r\n       fdlAddFilenameToResult = new FormData();\r\n       fdlAddFilenameToResult.left = new FormAttachment(0, 0);\r\n       fdlAddFilenameToResult.top = new FormAttachment(wIfFileExists, 2*margin);\r\n       fdlAddFilenameToResult.right = new FormAttachment(middle, 0);\r\n       wlAddFilenameToResult.setLayoutData(fdlAddFilenameToResult);\r\n       wAddFilenameToResult = new Button(wLocalSettings, SWT.CHECK);\r\n       wAddFilenameToResult.setToolTipText(Messages.getString(\"JobFTP.AddFilenameToResult.Tooltip\"));\r\n       props.setLook(wAddFilenameToResult);\r\n       fdAddFilenameToResult = new FormData();\r\n       fdAddFilenameToResult.left = new FormAttachment(middle, margin);\r\n       fdAddFilenameToResult.top = new FormAttachment(wIfFileExists, 2*margin);\r\n       fdAddFilenameToResult.right = new FormAttachment(100, 0);\r\n       wAddFilenameToResult.setLayoutData(fdAddFilenameToResult);\r\n       \r\n       \r\n      fdLocalSettings = new FormData();\r\n      fdLocalSettings.left = new FormAttachment(0, margin);\r\n      fdLocalSettings.top = new FormAttachment(wRemoteSettings, margin);\r\n      fdLocalSettings.right = new FormAttachment(100, -margin);\r\n      wLocalSettings.setLayoutData(fdLocalSettings);\r\n      // ///////////////////////////////////////////////////////////\r\n      // / END OF LOCAL SETTINGSGROUP\r\n      // ///////////////////////////////////////////////////////////\r\n\t\t\r\n\t\tfdFilesComp=new FormData();\r\n\t\tfdFilesComp.left  = new FormAttachment(0, 0);\r\n\t\tfdFilesComp.top   = new FormAttachment(0, 0);\r\n\t\tfdFilesComp.right = new FormAttachment(100, 0);\r\n\t\tfdFilesComp.bottom= new FormAttachment(100, 0);\r\n\t\twFilesComp.setLayoutData(fdFilesComp);\r\n\t\t\r\n\t\twFilesComp.layout();\r\n\t\twFilesTab.setControl(wFilesComp);\r\n \t\tprops.setLook(wFilesComp);\r\n \t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF Files TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF Advanced TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n\r\n\t\twAdvancedTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twAdvancedTab.setText(Messages.getString(\"JobFTP.Tab.Advanced.Label\"));\r\n\t\t\r\n\t\twAdvancedComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wAdvancedComp);\r\n\r\n\t\tFormLayout AdvancedLayout = new FormLayout();\r\n\t\tAdvancedLayout.marginWidth  = 3;\r\n\t\tAdvancedLayout.marginHeight = 3;\r\n\t\twAdvancedComp.setLayout(AdvancedLayout);\r\n\t\t\r\n\t\t // SuccessOngrouping?\r\n\t     // ////////////////////////\r\n\t     // START OF SUCCESS ON GROUP///\r\n\t     // /\r\n\t    wSuccessOn= new Group(wAdvancedComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wSuccessOn);\r\n\t    wSuccessOn.setText(Messages.getString(\"JobFTP.SuccessOn.Group.Label\"));\r\n\r\n\t    FormLayout successongroupLayout = new FormLayout();\r\n\t    successongroupLayout.marginWidth = 10;\r\n\t    successongroupLayout.marginHeight = 10;\r\n\r\n\t    wSuccessOn.setLayout(successongroupLayout);\r\n\t    \r\n\r\n\t    //Success Condition\r\n\t  \twlSuccessCondition = new Label(wSuccessOn, SWT.RIGHT);\r\n\t  \twlSuccessCondition.setText(Messages.getString(\"JobFTP.SuccessCondition.Label\") + \" \");\r\n\t  \tprops.setLook(wlSuccessCondition);\r\n\t  \tfdlSuccessCondition = new FormData();\r\n\t  \tfdlSuccessCondition.left = new FormAttachment(0, 0);\r\n\t  \tfdlSuccessCondition.right = new FormAttachment(middle, 0);\r\n\t  \tfdlSuccessCondition.top = new FormAttachment(0, margin);\r\n\t  \twlSuccessCondition.setLayoutData(fdlSuccessCondition);\r\n\t  \twSuccessCondition = new CCombo(wSuccessOn, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTP.SuccessWhenAllWorksFine.Label\"));\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTP.SuccessWhenAtLeat.Label\"));\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTP.SuccessWhenNrErrorsLessThan.Label\"));\r\n\t  \twSuccessCondition.select(0); // +1: starts at -1\r\n\t  \t\r\n\t\tprops.setLook(wSuccessCondition);\r\n\t\tfdSuccessCondition= new FormData();\r\n\t\tfdSuccessCondition.left = new FormAttachment(middle, 0);\r\n\t\tfdSuccessCondition.top = new FormAttachment(0, margin);\r\n\t\tfdSuccessCondition.right = new FormAttachment(100, 0);\r\n\t\twSuccessCondition.setLayoutData(fdSuccessCondition);\r\n\t\twSuccessCondition.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tactiveSuccessCondition();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Success when number of errors less than\r\n\t\twlNrErrorsLessThan= new Label(wSuccessOn, SWT.RIGHT);\r\n\t\twlNrErrorsLessThan.setText(Messages.getString(\"JobFTP.NrBadFormedLessThan.Label\") + \" \");\r\n\t\tprops.setLook(wlNrErrorsLessThan);\r\n\t\tfdlNrErrorsLessThan= new FormData();\r\n\t\tfdlNrErrorsLessThan.left = new FormAttachment(0, 0);\r\n\t\tfdlNrErrorsLessThan.top = new FormAttachment(wSuccessCondition, margin);\r\n\t\tfdlNrErrorsLessThan.right = new FormAttachment(middle, -margin);\r\n\t\twlNrErrorsLessThan.setLayoutData(fdlNrErrorsLessThan);\r\n\t\t\r\n\t\t\r\n\t\twNrErrorsLessThan= new TextVar(jobMeta,wSuccessOn, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n\t\t\t.getString(\"JobFTP.NrBadFormedLessThan.Tooltip\"));\r\n\t\tprops.setLook(wNrErrorsLessThan);\r\n\t\twNrErrorsLessThan.addModifyListener(lsMod);\r\n\t\tfdNrErrorsLessThan= new FormData();\r\n\t\tfdNrErrorsLessThan.left = new FormAttachment(middle, 0);\r\n\t\tfdNrErrorsLessThan.top = new FormAttachment(wSuccessCondition, margin);\r\n\t\tfdNrErrorsLessThan.right = new FormAttachment(100, -margin);\r\n\t\twNrErrorsLessThan.setLayoutData(fdNrErrorsLessThan);\r\n\t\t\r\n\t\r\n\t    fdSuccessOn= new FormData();\r\n\t    fdSuccessOn.left = new FormAttachment(0, margin);\r\n\t    fdSuccessOn.top = new FormAttachment(0, margin);\r\n\t    fdSuccessOn.right = new FormAttachment(100, -margin);\r\n\t    wSuccessOn.setLayoutData(fdSuccessOn);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF Success ON GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n\r\n\t\tfdAdvancedComp=new FormData();\r\n\t\tfdAdvancedComp.left  = new FormAttachment(0, 0);\r\n\t\tfdAdvancedComp.top   = new FormAttachment(0, 0);\r\n\t\tfdAdvancedComp.right = new FormAttachment(100, 0);\r\n\t\tfdAdvancedComp.bottom= new FormAttachment(100, 0);\r\n\t\twAdvancedComp.setLayoutData(fdAdvancedComp);\r\n\t\t\r\n\t\twAdvancedComp.layout();\r\n\t\twAdvancedTab.setControl(wAdvancedComp);\r\n \t\tprops.setLook(wAdvancedComp);\r\n \t\t\r\n \t\t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF Advanced TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t\r\n\t\tfdTabFolder = new FormData();\r\n\t\tfdTabFolder.left  = new FormAttachment(0, 0);\r\n\t\tfdTabFolder.top   = new FormAttachment(wName, margin);\r\n\t\tfdTabFolder.right = new FormAttachment(100, 0);\r\n\t\tfdTabFolder.bottom= new FormAttachment(100, -50);\r\n\t\twTabFolder.setLayoutData(fdTabFolder);\r\n\t\t\r\n\t\t\r\n\r\n        wOK = new Button(shell, SWT.PUSH);\r\n        wOK.setText(Messages.getString(\"System.Button.OK\"));\r\n        wCancel = new Button(shell, SWT.PUSH);\r\n        wCancel.setText(Messages.getString(\"System.Button.Cancel\"));\r\n\r\n        BaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, wTabFolder);\r\n\r\n        // Add listeners\r\n        lsCancel = new Listener()\r\n        {\r\n            public void handleEvent(Event e)\r\n            {\r\n                cancel();\r\n            }\r\n        };\r\n        lsOK = new Listener()\r\n        {\r\n            public void handleEvent(Event e)\r\n            {\r\n                ok();\r\n            }\r\n        };\r\n        lsTest     = new Listener() { public void handleEvent(Event e) { test(); } };\r\n        lsCheckFolder     = new Listener() { public void handleEvent(Event e) { checkRemoteFolder(false,true,wMoveToDirectory.getText()); } };\r\n        lsCheckChangeFolder     = new Listener() { public void handleEvent(Event e) { checkRemoteFolder(true,false,wFtpDirectory.getText()); } };\r\n        \r\n        wCancel.addListener(SWT.Selection, lsCancel);\r\n        wOK.addListener(SWT.Selection, lsOK);\r\n        wTest.addListener    (SWT.Selection, lsTest    );\r\n        wbTestFolderExists.addListener    (SWT.Selection, lsCheckFolder    );\r\n        wbTestChangeFolderExists.addListener    (SWT.Selection, lsCheckChangeFolder    );\r\n        \r\n        lsDef = new SelectionAdapter()\r\n        {\r\n            public void widgetDefaultSelected(SelectionEvent e)\r\n            {\r\n                ok();\r\n            }\r\n        };\r\n\r\n        wName.addSelectionListener(lsDef);\r\n        wServerName.addSelectionListener(lsDef);\r\n        wUserName.addSelectionListener(lsDef);\r\n        wPassword.addSelectionListener(lsDef);\r\n        wFtpDirectory.addSelectionListener(lsDef);\r\n        wTargetDirectory.addSelectionListener(lsDef);\r\n        wFtpDirectory.addSelectionListener(lsDef);\r\n        wWildcard.addSelectionListener(lsDef);\r\n        wTimeout.addSelectionListener(lsDef);\r\n\r\n        // Detect X or ALT-F4 or something that kills this window...\r\n        shell.addShellListener(new ShellAdapter()\r\n        {\r\n            public void shellClosed(ShellEvent e)\r\n            {\r\n                cancel();\r\n            }\r\n        });\r\n\r\n        getData();\r\n        activateMoveTo();\r\n        setDateTimeFormat();\r\n        setAddDateBeforeExtension();\r\n        activeSuccessCondition();\r\n        activeIfExists();\r\n        \r\n        wTabFolder.setSelection(0);\r\n        BaseStepDialog.setSize(shell);\r\n\r\n        shell.open();\r\n        props.setDialogSize(shell, \"JobFTPDialogSize\");\r\n        while (!shell.isDisposed())\r\n        {\r\n            if (!display.readAndDispatch())\r\n                display.sleep();\r\n        }\r\n        return jobEntry;\r\n    }","commit_id":"d9c5b35958554ae92e3ecec4f4ca43fc2bf6a45a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean connectToFTP(boolean checkfolder,boolean checkmoveToFolder)\r\n    {\r\n    \tboolean retval=false;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif(ftpclient==null || !ftpclient.connected())\r\n\t\t\t{\r\n\t\t    \t // Create ftp client to host:port ...\r\n\t\t        ftpclient = new FTPClient();\r\n\t\t        String realServername = jobMeta.environmentSubstitute(wServerName.getText());\r\n\t\t        ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n\t\t        \r\n\t\t        if (!Const.isEmpty(wProxyHost.getText())) \r\n\t\t        {\r\n\t\t      \t  String realProxy_host = jobMeta.environmentSubstitute(wProxyHost.getText());\r\n\t\t      \t  ftpclient.setRemoteAddr(InetAddress.getByName(realProxy_host));\r\n\t\t\r\n\t\t      \t  // FIXME: Proper default port for proxy    \t  \r\n\t\t      \t  int port = Const.toInt(jobMeta.environmentSubstitute(wProxyHost.getText()), 21);\r\n\t\t      \t  if (port != 0) \r\n\t\t      \t  {\r\n\t\t      \t     ftpclient.setRemotePort(port);\r\n\t\t      \t  }\r\n\t\t        } \r\n\t\t        else \r\n\t\t        {\r\n\t\t            ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n\t\t                           \r\n\t\t        }\r\n\t\r\n\t\t        // login to ftp host ...\r\n\t\t        ftpclient.connect();     \r\n\t\t        String realUsername = jobMeta.environmentSubstitute(wUserName.getText()) +\r\n\t\t                              (!Const.isEmpty(wProxyHost.getText()) ? \"@\" + realServername : \"\") + \r\n\t\t                              (!Const.isEmpty(wProxyUsername.getText()) ? \" \" + jobMeta.environmentSubstitute(wProxyUsername.getText()) \r\n\t\t                          \t\t                           : \"\"); \r\n\t\t           \t\t            \r\n\t\t        String realPassword = jobMeta.environmentSubstitute(wPassword.getText()) + \r\n\t\t                              (!Const.isEmpty(wProxyPassword.getText()) ? \" \" + jobMeta.environmentSubstitute(wProxyPassword.getText()) : \"\" );\r\n\t\t        // login now ...\r\n\t\t        ftpclient.login(realUsername, realPassword);\r\n\t\t\t}  \r\n\t\t\t\r\n\t\t\t\r\n\t\t\tString realFtpDirectory =\"\";\r\n\t\t\tif (!Const.isEmpty(wFtpDirectory.getText()))\r\n\t\t\t\trealFtpDirectory = jobMeta.environmentSubstitute(wFtpDirectory.getText());\r\n\t\t\t\r\n\t        if(checkfolder)\r\n\t        {\r\n\t        \tftpclient.chdir(\"/\");\r\n\t        \t// move to spool dir ...\r\n\t\t\t\tif (!Const.isEmpty(realFtpDirectory))\r\n\t\t\t\t\tftpclient.chdir(realFtpDirectory);\r\n\t        }\r\n\t        if(checkmoveToFolder)\r\n\t        {\t   \r\n\t        \tftpclient.chdir(\"/\");\r\n\t        \t// move to folder ...\r\n\t\t\t\tif (!Const.isEmpty(wMoveToDirectory.getText()))\r\n\t\t\t\t{\r\n\t                String realMoveDirectory = jobMeta.environmentSubstitute(wMoveToDirectory.getText());\r\n\t                if(!Const.isEmpty(realFtpDirectory))\r\n\t                {\r\n\t                \trealMoveDirectory=realFtpDirectory+\"/\"+realMoveDirectory;\r\n\t                \tftpclient.chdir(realMoveDirectory);\r\n\t                }\r\n\t\t\t\t}\t\r\n\t        }\r\n\r\n\t        retval=true;\r\n\t\t}\r\n\t     catch (Exception e)\r\n\t    {\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTP.ErrorConnect.NOK\",e.getMessage()) +Const.CR);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTP.ErrorConnect.Title.Bad\"));\r\n\t\t\tmb.open(); \r\n\t    } \r\n\t    return retval;\r\n    }","id":63942,"modified_method":"private boolean connectToFTP(boolean checkfolder,boolean checkmoveToFolder)\r\n    {\r\n    \tboolean retval=false;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif(ftpclient==null || !ftpclient.connected())\r\n\t\t\t{\r\n\t\t    \t // Create ftp client to host:port ...\r\n\t\t        ftpclient = new FTPClient();\r\n\t\t        String realServername = jobMeta.environmentSubstitute(wServerName.getText());\r\n\t\t        ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n\t\t        \r\n\t\t        if (!Const.isEmpty(wProxyHost.getText())) \r\n\t\t        {\r\n\t\t      \t  String realProxy_host = jobMeta.environmentSubstitute(wProxyHost.getText());\r\n\t\t      \t  ftpclient.setRemoteAddr(InetAddress.getByName(realProxy_host));\r\n\t\t\r\n\t\t      \t  // FIXME: Proper default port for proxy    \t  \r\n\t\t      \t  int port = Const.toInt(jobMeta.environmentSubstitute(wProxyHost.getText()), 21);\r\n\t\t      \t  if (port != 0) \r\n\t\t      \t  {\r\n\t\t      \t     ftpclient.setRemotePort(port);\r\n\t\t      \t  }\r\n\t\t        } \r\n\t\t        else \r\n\t\t        {\r\n\t\t            ftpclient.setRemoteAddr(InetAddress.getByName(realServername));             \r\n\t\t        }\r\n\t\r\n\t\t        // login to ftp host ...\r\n\t\t        ftpclient.connect();     \r\n\t\t        String realUsername = jobMeta.environmentSubstitute(wUserName.getText()) +\r\n\t\t                              (!Const.isEmpty(wProxyHost.getText()) ? \"@\" + realServername : \"\") + \r\n\t\t                              (!Const.isEmpty(wProxyUsername.getText()) ? \" \" + jobMeta.environmentSubstitute(wProxyUsername.getText()) \r\n\t\t                          \t\t                           : \"\"); \r\n\t\t           \t\t            \r\n\t\t        String realPassword = jobMeta.environmentSubstitute(wPassword.getText()) + \r\n\t\t                              (!Const.isEmpty(wProxyPassword.getText()) ? \" \" + jobMeta.environmentSubstitute(wProxyPassword.getText()) : \"\" );\r\n\t\t        // login now ...\r\n\t\t        ftpclient.login(realUsername, realPassword);\r\n\t\t        \r\n\t\t        pwdFolder=ftpclient.pwd();\r\n\t\t\t}  \r\n\t\t\t\r\n\t\t\t\r\n\t\t\tString realFtpDirectory =\"\";\r\n\t\t\tif (!Const.isEmpty(wFtpDirectory.getText()))\r\n\t\t\t\trealFtpDirectory = jobMeta.environmentSubstitute(wFtpDirectory.getText());\r\n\t\t\t\r\n\t        if(checkfolder)\r\n\t        {\r\n\t        \tif(pwdFolder!=null) ftpclient.chdir(pwdFolder);\r\n\t        \t// move to spool dir ...\r\n\t\t\t\tif (!Const.isEmpty(realFtpDirectory))\r\n\t\t\t\t\tftpclient.chdir(realFtpDirectory);\r\n\t        }\r\n\t        if(checkmoveToFolder)\r\n\t        {\t   \r\n\t        \tif(pwdFolder!=null) ftpclient.chdir(pwdFolder);\r\n\t        \t// move to folder ...\r\n\t\t\t\tif (!Const.isEmpty(wMoveToDirectory.getText()))\r\n\t\t\t\t{\r\n\t                String realMoveDirectory = jobMeta.environmentSubstitute(wMoveToDirectory.getText());\r\n\t                if(!Const.isEmpty(realFtpDirectory))\r\n\t                {\r\n\t                \trealMoveDirectory=realFtpDirectory+\"/\"+realMoveDirectory;\r\n\t                \tftpclient.chdir(realMoveDirectory);\r\n\t                }\r\n\t\t\t\t}\t\r\n\t        }\r\n\r\n\t        retval=true;\r\n\t\t}\r\n\t     catch (Exception e)\r\n\t    {\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTP.ErrorConnect.NOK\",e.getMessage()) +Const.CR);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTP.ErrorConnect.Title.Bad\"));\r\n\t\t\tmb.open(); \r\n\t    } \r\n\t    return retval;\r\n    }","commit_id":"d9c5b35958554ae92e3ecec4f4ca43fc2bf6a45a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean connectToFTP(boolean checkfolder,String remoteFoldername)\r\n    {\r\n    \tboolean retval=false;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif(ftpclient==null || !ftpclient.connected())\r\n\t\t\t{\r\n\t\t    \t // Create ftp client to host:port ...\r\n\t\t        ftpclient = new FTPClient();\r\n\t\t        String realServername = jobMeta.environmentSubstitute(wServerName.getText());\r\n\t\t        ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n\t\t        \r\n\t\t        \r\n\t\t        if (!Const.isEmpty(wProxyHost.getText())) \r\n\t\t        {\r\n\t\t      \t  String realProxy_host = jobMeta.environmentSubstitute(wProxyHost.getText());\r\n\t\t      \t  ftpclient.setRemoteAddr(InetAddress.getByName(realProxy_host));\r\n\t\t\r\n\t\t      \t  // FIXME: Proper default port for proxy    \t  \r\n\t\t      \t  int port = Const.toInt(jobMeta.environmentSubstitute(wProxyHost.getText()), 21);\r\n\t\t      \t  if (port != 0) \r\n\t\t      \t  {\r\n\t\t      \t     ftpclient.setRemotePort(port);\r\n\t\t      \t  }\r\n\t\t        } \r\n\t\t        else \r\n\t\t        {\r\n\t\t            ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n\t\t                           \r\n\t\t        }\r\n\t\r\n\t\r\n\t\t        // login to ftp host ...\r\n\t\t        ftpclient.connect();     \r\n\t\t        String realUsername = jobMeta.environmentSubstitute(wUserName.getText());            \r\n\t\t        String realPassword = jobMeta.environmentSubstitute(wPassword.getText());\r\n\t\t        // login now ...\r\n\t\t        ftpclient.login(realUsername, realPassword);\r\n\t\t\t}  \r\n\t        if(checkfolder)\r\n\t        {\r\n\t        \t// move to spool dir ...\r\n\t\t\t\tif (!Const.isEmpty(remoteFoldername))\r\n\t\t\t\t{\r\n\t                String realFtpDirectory = jobMeta.environmentSubstitute(remoteFoldername);\r\n\t\t\t\t\tftpclient.chdir(realFtpDirectory);\r\n\t\t\t\t}\r\n\t        \tretval=true;\r\n\t        \t\r\n\t        }\r\n\t        \t\r\n\t        \t\r\n\t        retval=true;\r\n\t\t}\r\n\t     catch (Exception e)\r\n\t    {\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTPPUT.ErrorConnect.NOK\",e.getMessage()) +Const.CR);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTPPUT.ErrorConnect.Title.Bad\"));\r\n\t\t\tmb.open(); \r\n\t    } \r\n\t    return retval;\r\n    }","id":63943,"modified_method":"private boolean connectToFTP(boolean checkfolder,String remoteFoldername)\r\n    {\r\n    \tboolean retval=false;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif(ftpclient==null || !ftpclient.connected())\r\n\t\t\t{\r\n\t\t    \t // Create ftp client to host:port ...\r\n\t\t        ftpclient = new FTPClient();\r\n\t\t        String realServername = jobMeta.environmentSubstitute(wServerName.getText());\r\n\t\t        ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n\t\t        \r\n\t\t        \r\n\t\t        if (!Const.isEmpty(wProxyHost.getText())) \r\n\t\t        {\r\n\t\t      \t  String realProxy_host = jobMeta.environmentSubstitute(wProxyHost.getText());\r\n\t\t      \t  ftpclient.setRemoteAddr(InetAddress.getByName(realProxy_host));\r\n\t\t\r\n\t\t      \t  // FIXME: Proper default port for proxy    \t  \r\n\t\t      \t  int port = Const.toInt(jobMeta.environmentSubstitute(wProxyHost.getText()), 21);\r\n\t\t      \t  if (port != 0) \r\n\t\t      \t  {\r\n\t\t      \t     ftpclient.setRemotePort(port);\r\n\t\t      \t  }\r\n\t\t        } \r\n\t\t        else \r\n\t\t        {\r\n\t\t            ftpclient.setRemoteAddr(InetAddress.getByName(realServername));                  \r\n\t\t        }\r\n\t\r\n\t\t        // login to ftp host ...\r\n\t\t        ftpclient.connect();     \r\n\t\t        String realUsername = jobMeta.environmentSubstitute(wUserName.getText()) +\r\n\t\t                              (!Const.isEmpty(wProxyHost.getText()) ? \"@\" + realServername : \"\") + \r\n\t\t                              (!Const.isEmpty(wProxyUsername.getText()) ? \" \" + jobMeta.environmentSubstitute(wProxyUsername.getText()) \r\n\t\t                          \t\t                           : \"\"); \r\n\t\t           \t\t            \r\n\t\t        String realPassword = jobMeta.environmentSubstitute(wPassword.getText()) + \r\n\t\t                              (!Const.isEmpty(wProxyPassword.getText()) ? \" \" + jobMeta.environmentSubstitute(wProxyPassword.getText()) : \"\" );\r\n\t\t        // login now ...\r\n\t\t        ftpclient.login(realUsername, realPassword);\r\n\t\t        \r\n\t\t        pwdFolder=ftpclient.pwd();\r\n\t\t\t}  \r\n\t\t\t\r\n\t        if(checkfolder)\r\n\t        {\r\n\t        \tif(pwdFolder!=null)ftpclient.chdir(pwdFolder);\r\n\t        \t// move to spool dir ...\r\n\t\t\t\tif (!Const.isEmpty(remoteFoldername))\r\n\t\t\t\t{\r\n\t                String realFtpDirectory = jobMeta.environmentSubstitute(remoteFoldername);\r\n\t\t\t\t\tftpclient.chdir(realFtpDirectory);\r\n\t\t\t\t}\r\n\t        }\r\n\t        \t\r\n\t        retval=true;\r\n\t\t}\r\n\t     catch (Exception e)\r\n\t    {\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTPPUT.ErrorConnect.NOK\",e.getMessage()) +Const.CR);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTPPUT.ErrorConnect.Title.Bad\"));\r\n\t\t\tmb.open(); \r\n\t    } \r\n\t    return retval;\r\n    }","commit_id":"d9c5b35958554ae92e3ecec4f4ca43fc2bf6a45a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public JobEntryInterface open()\n    {\n        Shell parent = getParent();\n        Display display = parent.getDisplay();\n\n        shell = new Shell(parent, props.getJobsDialogStyle());\n        props.setLook(shell);\n        JobDialog.setShellImage(shell, jobEntry);\n\n        ModifyListener lsMod = new ModifyListener()\n        {\n            public void modifyText(ModifyEvent e)\n            {\r\n            \tftpclient=null;\n                jobEntry.setChanged();\n            }\n        };\n        changed = jobEntry.hasChanged();\n\n        FormLayout formLayout = new FormLayout();\n        formLayout.marginWidth = Const.FORM_MARGIN;\n        formLayout.marginHeight = Const.FORM_MARGIN;\n\n        shell.setLayout(formLayout);\n        shell.setText(Messages.getString(\"JobFTPPUT.Title\"));\n\n        int middle = props.getMiddlePct();\n        int margin = Const.MARGIN;\n\n        // Filename line\n        wlName = new Label(shell, SWT.RIGHT);\n        wlName.setText(Messages.getString(\"JobFTPPUT.Name.Label\"));\n        props.setLook(wlName);\n        fdlName = new FormData();\n        fdlName.left = new FormAttachment(0, 0);\n        fdlName.right = new FormAttachment(middle, -margin);\n        fdlName.top = new FormAttachment(0, margin);\n        wlName.setLayoutData(fdlName);\n        wName = new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wName);\n        wName.addModifyListener(lsMod);\n        fdName = new FormData();\n        fdName.left = new FormAttachment(middle, 0);\n        fdName.top = new FormAttachment(0, margin);\n        fdName.right = new FormAttachment(100, 0);\n        wName.setLayoutData(fdName);\r\n        \r\n        wTabFolder = new CTabFolder(shell, SWT.BORDER);\r\n \t\tprops.setLook(wTabFolder, Props.WIDGET_STYLE_TAB);\r\n \t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF GENERAL TAB   ///\r\n\t\t//////////////////////////\r\n\r\n\t\twGeneralTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twGeneralTab.setText(Messages.getString(\"JobFTPPUT.Tab.General.Label\"));\r\n\t\t\r\n\t\twGeneralComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wGeneralComp);\r\n\r\n\t\tFormLayout generalLayout = new FormLayout();\r\n\t\tgeneralLayout.marginWidth  = 3;\r\n\t\tgeneralLayout.marginHeight = 3;\r\n\t\twGeneralComp.setLayout(generalLayout);\r\n\t\t\r\n\t     // ////////////////////////\r\n\t     // START OF SERVER SETTINGS GROUP///\r\n\t     // /\r\n\t    wServerSettings = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wServerSettings);\r\n\t    wServerSettings.setText(Messages.getString(\"JobFTPPUT.ServerSettings.Group.Label\"));\r\n\r\n\t    FormLayout ServerSettingsgroupLayout = new FormLayout();\r\n\t    ServerSettingsgroupLayout.marginWidth = 10;\r\n\t    ServerSettingsgroupLayout.marginHeight = 10;\r\n\r\n\t    wServerSettings.setLayout(ServerSettingsgroupLayout);\n\n        // ServerName line\n        wlServerName = new Label(wServerSettings, SWT.RIGHT);\n        wlServerName.setText(Messages.getString(\"JobFTPPUT.Server.Label\"));\n        props.setLook(wlServerName);\n        fdlServerName = new FormData();\n        fdlServerName.left = new FormAttachment(0, 0);\n        fdlServerName.top = new FormAttachment(wName, margin);\n        fdlServerName.right = new FormAttachment(middle, 0);\n        wlServerName.setLayoutData(fdlServerName);\n        wServerName = new TextVar(jobMeta, wServerSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wServerName);\n        wServerName.addModifyListener(lsMod);\n        fdServerName = new FormData();\n        fdServerName.left = new FormAttachment(middle, margin);\n        fdServerName.top = new FormAttachment(wName, margin);\n        fdServerName.right = new FormAttachment(100, 0);\n        wServerName.setLayoutData(fdServerName);\n\n        // ServerPort line\n        wlServerPort = new Label(wServerSettings, SWT.RIGHT);\n        wlServerPort.setText(Messages.getString(\"JobFTPPUT.Port.Label\"));\n        props.setLook(wlServerPort);\n        fdlServerPort = new FormData();\n        fdlServerPort.left = new FormAttachment(0, 0);\n        fdlServerPort.top = new FormAttachment(wServerName, margin);\n        fdlServerPort.right = new FormAttachment(middle, 0);\n        wlServerPort.setLayoutData(fdlServerPort);\n        wServerPort = new TextVar(jobMeta, wServerSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wServerPort);\n        wServerPort.setToolTipText(Messages.getString(\"JobFTPPUT.Port.Tooltip\"));\n        wServerPort.addModifyListener(lsMod);\n        fdServerPort = new FormData();\n        fdServerPort.left = new FormAttachment(middle, margin);\n        fdServerPort.top = new FormAttachment(wServerName, margin);\n        fdServerPort.right = new FormAttachment(100, 0);\n        wServerPort.setLayoutData(fdServerPort);\n\n        // UserName line\n        wlUserName = new Label(wServerSettings, SWT.RIGHT);\n        wlUserName.setText(Messages.getString(\"JobFTPPUT.Username.Label\"));\n        props.setLook(wlUserName);\n        fdlUserName = new FormData();\n        fdlUserName.left = new FormAttachment(0, 0);\n        fdlUserName.top = new FormAttachment(wServerPort, margin);\n        fdlUserName.right = new FormAttachment(middle, 0);\n        wlUserName.setLayoutData(fdlUserName);\n        wUserName = new TextVar(jobMeta, wServerSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wUserName);\n        wUserName.addModifyListener(lsMod);\n        fdUserName = new FormData();\n        fdUserName.left = new FormAttachment(middle, margin);\n        fdUserName.top = new FormAttachment(wServerPort, margin);\n        fdUserName.right = new FormAttachment(100, 0);\n        wUserName.setLayoutData(fdUserName);\n\n        // Password line\n        wlPassword = new Label(wServerSettings, SWT.RIGHT);\n        wlPassword.setText(Messages.getString(\"JobFTPPUT.Password.Label\"));\n        props.setLook(wlPassword);\n        fdlPassword = new FormData();\n        fdlPassword.left = new FormAttachment(0, 0);\n        fdlPassword.top = new FormAttachment(wUserName, margin);\n        fdlPassword.right = new FormAttachment(middle, 0);\n        wlPassword.setLayoutData(fdlPassword);\n        wPassword = new TextVar(jobMeta, wServerSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wPassword);\n        wPassword.setEchoChar('*');\n        wPassword.addModifyListener(lsMod);\n        fdPassword = new FormData();\n        fdPassword.left = new FormAttachment(middle, margin);\n        fdPassword.top = new FormAttachment(wUserName, margin);\n        fdPassword.right = new FormAttachment(100, 0);\n        wPassword.setLayoutData(fdPassword);\r\n        \r\n        // Proxy host line\r\n        wProxyHost = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPPUT.ProxyHost.Label\"), Messages.getString(\"JobFTPPUT.ProxyHost.Tooltip\"));\r\n        props.setLook(wProxyHost);\r\n        wProxyHost.addModifyListener(lsMod);\r\n        fdProxyHost = new FormData();\r\n        fdProxyHost.left \t= new FormAttachment(0, 0);\r\n        fdProxyHost.top\t\t= new FormAttachment(wPassword, 2*margin);\r\n        fdProxyHost.right\t= new FormAttachment(100, 0);\r\n        wProxyHost.setLayoutData(fdProxyHost);\r\n\r\n        // Proxy port line\r\n        wProxyPort = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPPUT.ProxyPort.Label\"), Messages.getString(\"JobFTPPUT.ProxyPort.Tooltip\"));\r\n        props.setLook(wProxyPort);\r\n        wProxyPort.addModifyListener(lsMod);\r\n        fdProxyPort = new FormData();\r\n        fdProxyPort.left \t= new FormAttachment(0, 0);\r\n        fdProxyPort.top  \t= new FormAttachment(wProxyHost, margin);\r\n        fdProxyPort.right\t= new FormAttachment(100, 0);\r\n        wProxyPort.setLayoutData(fdProxyPort);\r\n\r\n        // Proxy username line\r\n        wProxyUsername = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPPUT.ProxyUsername.Label\"), Messages.getString(\"JobFTPPUT.ProxyUsername.Tooltip\"));\r\n        props.setLook(wProxyUsername);\r\n        wProxyUsername.addModifyListener(lsMod);\r\n        fdProxyUsername = new FormData();\r\n        fdProxyUsername.left = new FormAttachment(0, 0);\r\n        fdProxyUsername.top  = new FormAttachment(wProxyPort, margin);\r\n        fdProxyUsername.right= new FormAttachment(100, 0);\r\n        wProxyUsername.setLayoutData(fdProxyUsername);\r\n        \r\n        // Proxy password line\r\n        wProxyPassword = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPPUT.ProxyPassword.Label\"), Messages.getString(\"JobFTPPUT.ProxyPassword.Tooltip\"));\r\n        props.setLook(wProxyPassword);\r\n        wProxyPassword.addModifyListener(lsMod);\r\n        fdProxyPasswd=new FormData();\r\n        fdProxyPasswd.left = new FormAttachment(0, 0);\r\n        fdProxyPasswd.top  = new FormAttachment(wProxyUsername, margin);\r\n        fdProxyPasswd.right= new FormAttachment(100, 0);\r\n        wProxyPassword.setLayoutData(fdProxyPasswd);\r\n        \r\n        \r\n        // Test connection button\r\n\t\twTest=new Button(wServerSettings,SWT.PUSH);\r\n\t\twTest.setText(Messages.getString(\"JobFTPPUT.TestConnection.Label\"));\r\n \t\tprops.setLook(wTest);\r\n\t\tfdTest=new FormData();\r\n\t\twTest.setToolTipText(Messages.getString(\"JobFTPPUT.TestConnection.Tooltip\"));\r\n\t\tfdTest.top  = new FormAttachment(wProxyPassword, margin);\r\n\t\tfdTest.right= new FormAttachment(100, 0);\r\n\t\twTest.setLayoutData(fdTest);\n\r\n\t     fdServerSettings = new FormData();\r\n\t     fdServerSettings.left = new FormAttachment(0, margin);\r\n\t     fdServerSettings.top = new FormAttachment(wName, margin);\r\n\t     fdServerSettings.right = new FormAttachment(100, -margin);\r\n\t     wServerSettings.setLayoutData(fdServerSettings);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF SERVER SETTINGS GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n        \r\n\t     // ////////////////////////\r\n\t     // START OF Advanced SETTINGS GROUP///\r\n\t     // /\r\n\t     wAdvancedSettings = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n\t     props.setLook(wAdvancedSettings);\r\n\t     wAdvancedSettings.setText(Messages.getString(\"JobFTPPUT.AdvancedSettings.Group.Label\"));\r\n\t     FormLayout AdvancedSettingsgroupLayout = new FormLayout();\r\n\t     AdvancedSettingsgroupLayout.marginWidth = 10;\r\n\t     AdvancedSettingsgroupLayout.marginHeight = 10;\r\n\t     wAdvancedSettings.setLayout(AdvancedSettingsgroupLayout);\r\n\t     \r\n\t     // Binary mode selection...\r\n        wlBinaryMode = new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlBinaryMode.setText(Messages.getString(\"JobFTPPUT.BinaryMode.Label\"));\r\n        props.setLook(wlBinaryMode);\r\n        fdlBinaryMode = new FormData();\r\n        fdlBinaryMode.left = new FormAttachment(0, 0);\r\n        fdlBinaryMode.top = new FormAttachment(wServerSettings, margin);\r\n        fdlBinaryMode.right = new FormAttachment(middle, 0);\r\n        wlBinaryMode.setLayoutData(fdlBinaryMode);\r\n        wBinaryMode = new Button(wAdvancedSettings, SWT.CHECK);\r\n        props.setLook(wBinaryMode);\r\n        wBinaryMode.setToolTipText(Messages.getString(\"JobFTPPUT.BinaryMode.Tooltip\"));\r\n        fdBinaryMode = new FormData();\r\n        fdBinaryMode.left = new FormAttachment(middle, 0);\r\n        fdBinaryMode.top = new FormAttachment(wServerSettings, margin);\r\n        fdBinaryMode.right = new FormAttachment(100, 0);\r\n        wBinaryMode.setLayoutData(fdBinaryMode);\r\n        \r\n\t     // TimeOut...\r\n        wlTimeout = new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlTimeout.setText(Messages.getString(\"JobFTPPUT.Timeout.Label\"));\r\n        props.setLook(wlTimeout);\r\n        fdlTimeout = new FormData();\r\n        fdlTimeout.left = new FormAttachment(0, 0);\r\n        fdlTimeout.top = new FormAttachment(wBinaryMode, margin);\r\n        fdlTimeout.right = new FormAttachment(middle, 0);\r\n        wlTimeout.setLayoutData(fdlTimeout);\r\n        wTimeout = new TextVar(jobMeta, wAdvancedSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n                .getString(\"JobFTPPUT.Timeout.Tooltip\"));\r\n        props.setLook(wTimeout);\r\n        wTimeout.setToolTipText(Messages.getString(\"JobFTPPUT.Timeout.Tooltip\"));\r\n        fdTimeout = new FormData();\r\n        fdTimeout.left = new FormAttachment(middle, 0);\r\n        fdTimeout.top = new FormAttachment(wBinaryMode, margin);\r\n        fdTimeout.right = new FormAttachment(100, 0);\r\n        wTimeout.setLayoutData(fdTimeout);\r\n        \r\n        // active connection?\r\n        wlActive = new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlActive.setText(Messages.getString(\"JobFTPPUT.ActiveConns.Label\"));\r\n        props.setLook(wlActive);\r\n        fdlActive = new FormData();\r\n        fdlActive.left = new FormAttachment(0, 0);\r\n        fdlActive.top = new FormAttachment(wTimeout, margin);\r\n        fdlActive.right = new FormAttachment(middle, 0);\r\n        wlActive.setLayoutData(fdlActive);\r\n        wActive = new Button(wAdvancedSettings, SWT.CHECK);\r\n        wActive.setToolTipText(Messages.getString(\"JobFTPPUT.ActiveConns.Tooltip\"));\r\n        props.setLook(wActive);\r\n        fdActive = new FormData();\r\n        fdActive.left = new FormAttachment(middle, 0);\r\n        fdActive.top = new FormAttachment(wTimeout, margin);\r\n        fdActive.right = new FormAttachment(100, 0);\r\n        wActive.setLayoutData(fdActive);\r\n        \r\n        // Control encoding line\r\n        //\r\n        // The drop down is editable as it may happen an encoding may not be present\r\n        // on one machine, but you may want to use it on your execution server\r\n        //\r\n        wlControlEncoding=new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlControlEncoding.setText(Messages.getString(\"JobFTPPUT.ControlEncoding.Label\"));\r\n        props.setLook(wlControlEncoding);\r\n        fdlControlEncoding=new FormData();\r\n        fdlControlEncoding.left  = new FormAttachment(0, 0);\r\n        fdlControlEncoding.top   = new FormAttachment(wActive, margin);\r\n        fdlControlEncoding.right = new FormAttachment(middle, 0);\r\n        wlControlEncoding.setLayoutData(fdlControlEncoding);\r\n        wControlEncoding=new Combo(wAdvancedSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n        wControlEncoding.setToolTipText(Messages.getString(\"JobFTPPUT.ControlEncoding.Tooltip\"));\r\n        wControlEncoding.setItems(encodings);\r\n        props.setLook(wControlEncoding);\r\n        fdControlEncoding=new FormData();\r\n        fdControlEncoding.left = new FormAttachment(middle, 0);\r\n        fdControlEncoding.top  = new FormAttachment(wActive, margin);\r\n        fdControlEncoding.right= new FormAttachment(100, 0);        \r\n        wControlEncoding.setLayoutData(fdControlEncoding); \r\n        \r\n\t     fdAdvancedSettings = new FormData();\r\n\t     fdAdvancedSettings.left = new FormAttachment(0, margin);\r\n\t     fdAdvancedSettings.top = new FormAttachment(wServerSettings, margin);\r\n\t     fdAdvancedSettings.right = new FormAttachment(100, -margin);\r\n\t     wAdvancedSettings.setLayoutData(fdAdvancedSettings);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF Advanced SETTINGS GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t\r\n\t\tfdGeneralComp=new FormData();\r\n\t\tfdGeneralComp.left  = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.top   = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.right = new FormAttachment(100, 0);\r\n\t\tfdGeneralComp.bottom= new FormAttachment(100, 0);\r\n\t\twGeneralComp.setLayoutData(fdGeneralComp);\r\n\t\t\r\n\t\twGeneralComp.layout();\r\n\t\twGeneralTab.setControl(wGeneralComp);\r\n\t\tprops.setLook(wGeneralComp);\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF GENERAL TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t//////////////////////////\r\n\t\t// START OF Files TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n\t\twFilesTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twFilesTab.setText(Messages.getString(\"JobFTPPUT.Tab.Files.Label\"));\r\n\t\t\r\n\t\twFilesComp = new Composite(wTabFolder, SWT.NONE);\r\n\t\tprops.setLook(wFilesComp);\r\n\t\r\n\t\tFormLayout FilesLayout = new FormLayout();\r\n\t\tFilesLayout.marginWidth  = 3;\r\n\t\tFilesLayout.marginHeight = 3;\r\n\t\twFilesComp.setLayout(FilesLayout);\r\n\t\t\t\r\n\t\t // ////////////////////////\r\n\t     // START OF Source SETTINGS GROUP///\r\n\t     // /\r\n\t    wSourceSettings = new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wSourceSettings);\r\n\t    wSourceSettings.setText(Messages.getString(\"JobFTPPUT.SourceSettings.Group.Label\"));\r\n\t    FormLayout SourceSettinsgroupLayout = new FormLayout();\r\n\t    SourceSettinsgroupLayout.marginWidth = 10;\r\n\t    SourceSettinsgroupLayout.marginHeight = 10;\r\n\t    wSourceSettings.setLayout(SourceSettinsgroupLayout);\r\n\t     \n\n        // Local (source) directory line\n        wlLocalDirectory = new Label(wSourceSettings, SWT.RIGHT);\n        wlLocalDirectory.setText(Messages.getString(\"JobFTPPUT.LocalDir.Label\"));\n        props.setLook(wlLocalDirectory);\n        fdlLocalDirectory = new FormData();\n        fdlLocalDirectory.left = new FormAttachment(0, 0);\n        fdlLocalDirectory.top = new FormAttachment(0, margin);\n        fdlLocalDirectory.right = new FormAttachment(middle, -margin);\n        wlLocalDirectory.setLayoutData(fdlLocalDirectory);\n        \n        // Browse folders button ...\n\t\twbLocalDirectory=new Button(wSourceSettings, SWT.PUSH| SWT.CENTER);\n\t\tprops.setLook(wbLocalDirectory);\n\t\twbLocalDirectory.setText(Messages.getString(\"JobFTPPUT.BrowseFolders.Label\"));\n\t\tfdbLocalDirectory=new FormData();\n\t\tfdbLocalDirectory.right= new FormAttachment(100, 0);\n\t\tfdbLocalDirectory.top  = new FormAttachment(0, margin);\n\t\twbLocalDirectory.setLayoutData(fdbLocalDirectory);\n        \n        wLocalDirectory = new TextVar(jobMeta, wSourceSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\n            .getString(\"JobFTPPUT.LocalDir.Tooltip\"));\n        props.setLook(wLocalDirectory);\n        wLocalDirectory.addModifyListener(lsMod);\n        fdLocalDirectory = new FormData();\n        fdLocalDirectory.left = new FormAttachment(middle, 0);\n        fdLocalDirectory.top = new FormAttachment(0, margin);\n        fdLocalDirectory.right = new FormAttachment(wbLocalDirectory, -margin);\n        wLocalDirectory.setLayoutData(fdLocalDirectory);\r\n        \r\n        // Wildcard line\r\n        wlWildcard = new Label(wSourceSettings, SWT.RIGHT);\r\n        wlWildcard.setText(Messages.getString(\"JobFTPPUT.Wildcard.Label\"));\r\n        props.setLook(wlWildcard);\r\n        fdlWildcard = new FormData();\r\n        fdlWildcard.left = new FormAttachment(0, 0);\r\n        fdlWildcard.top = new FormAttachment(wLocalDirectory, margin);\r\n        fdlWildcard.right = new FormAttachment(middle, -margin);\r\n        wlWildcard.setLayoutData(fdlWildcard);\r\n        wWildcard = new TextVar(jobMeta, wSourceSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages.getString(\"JobFTPPUT.Wildcard.Tooltip\"));\r\n        props.setLook(wWildcard);\r\n        wWildcard.addModifyListener(lsMod);\r\n        fdWildcard = new FormData();\r\n        fdWildcard.left = new FormAttachment(middle, 0);\r\n        fdWildcard.top = new FormAttachment(wLocalDirectory, margin);\r\n        fdWildcard.right = new FormAttachment(100, 0);\r\n        wWildcard.setLayoutData(fdWildcard);\r\n        \r\n        // Remove files after retrieval...\r\n        wlRemove = new Label(wSourceSettings, SWT.RIGHT);\r\n        wlRemove.setText(Messages.getString(\"JobFTPPUT.RemoveFiles.Label\"));\r\n        props.setLook(wlRemove);\r\n        fdlRemove = new FormData();\r\n        fdlRemove.left = new FormAttachment(0, 0);\r\n        fdlRemove.top = new FormAttachment(wWildcard, 2*margin);\r\n        fdlRemove.right = new FormAttachment(middle, -margin);\r\n        wlRemove.setLayoutData(fdlRemove);\r\n        wRemove = new Button(wSourceSettings, SWT.CHECK);\r\n        props.setLook(wRemove);\r\n        wRemove.setToolTipText(Messages.getString(\"JobFTPPUT.RemoveFiles.Tooltip\"));\r\n        fdRemove = new FormData();\r\n        fdRemove.left = new FormAttachment(middle, 0);\r\n        fdRemove.top = new FormAttachment(wWildcard, 2*margin);\r\n        fdRemove.right = new FormAttachment(100, 0);\r\n        wRemove.setLayoutData(fdRemove);\r\n        \r\n        // OnlyNew files after retrieval...\r\n        wlOnlyNew = new Label(wSourceSettings, SWT.RIGHT);\r\n        wlOnlyNew.setText(Messages.getString(\"JobFTPPUT.DontOverwrite.Label\"));\r\n        props.setLook(wlOnlyNew);\r\n        fdlOnlyNew = new FormData();\r\n        fdlOnlyNew.left = new FormAttachment(0, 0);\r\n        fdlOnlyNew.top = new FormAttachment(wRemove, margin);\r\n        fdlOnlyNew.right = new FormAttachment(middle, 0);\r\n        wlOnlyNew.setLayoutData(fdlOnlyNew);\r\n        wOnlyNew = new Button(wSourceSettings, SWT.CHECK);\r\n        wOnlyNew.setToolTipText(Messages.getString(\"JobFTPPUT.DontOverwrite.Tooltip\"));\r\n        props.setLook(wOnlyNew);\r\n        fdOnlyNew = new FormData();\r\n        fdOnlyNew.left = new FormAttachment(middle, 0);\r\n        fdOnlyNew.top = new FormAttachment(wRemove, margin);\r\n        fdOnlyNew.right = new FormAttachment(100, 0);\r\n        wOnlyNew.setLayoutData(fdOnlyNew);\r\n        \r\n        fdSourceSettings = new FormData();\r\n        fdSourceSettings.left = new FormAttachment(0, margin);\r\n        fdSourceSettings.top = new FormAttachment(0, 2*margin);\r\n        fdSourceSettings.right = new FormAttachment(100, -margin);\r\n        wSourceSettings.setLayoutData(fdSourceSettings);\r\n       // ///////////////////////////////////////////////////////////\r\n       // / END OF Source SETTINGSGROUP\r\n       // ///////////////////////////////////////////////////////////\r\n\t\t\r\n        \r\n\t\t // ////////////////////////\r\n\t     // START OF Target SETTINGS GROUP///\r\n\t     // /\r\n\t    wTargetSettings = new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wTargetSettings);\r\n\t    wTargetSettings.setText(Messages.getString(\"JobFTPPUT.TargetSettings.Group.Label\"));\r\n\t    FormLayout TargetSettinsgroupLayout = new FormLayout();\r\n\t    TargetSettinsgroupLayout.marginWidth = 10;\r\n\t    TargetSettinsgroupLayout.marginHeight = 10;\r\n\t    wTargetSettings.setLayout(TargetSettinsgroupLayout);\n\n        // Remote Directory line\n        wlRemoteDirectory = new Label(wTargetSettings, SWT.RIGHT);\n        wlRemoteDirectory.setText(Messages.getString(\"JobFTPPUT.RemoteDir.Label\"));\n        props.setLook(wlRemoteDirectory);\n        fdlRemoteDirectory = new FormData();\n        fdlRemoteDirectory.left = new FormAttachment(0, 0);\n        fdlRemoteDirectory.top = new FormAttachment(wSourceSettings, margin);\n        fdlRemoteDirectory.right = new FormAttachment(middle, -margin);\n        wlRemoteDirectory.setLayoutData(fdlRemoteDirectory);\n       \r\n\t    // Test remote folder  button ...\r\n\t\twbTestRemoteDirectoryExists=new Button(wTargetSettings, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTestRemoteDirectoryExists);\r\n\t\twbTestRemoteDirectoryExists.setText(Messages.getString(\"JobFTPPUT.TestFolderExists.Label\"));\r\n\t\tfdbTestRemoteDirectoryExists=new FormData();\r\n\t\tfdbTestRemoteDirectoryExists.right= new FormAttachment(100, 0);\r\n\t\tfdbTestRemoteDirectoryExists.top  = new FormAttachment(wSourceSettings, margin);\r\n\t\twbTestRemoteDirectoryExists.setLayoutData(fdbTestRemoteDirectoryExists);\r\n        \r\n        wRemoteDirectory = new TextVar(jobMeta, wTargetSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\n            .getString(\"JobFTPPUT.RemoteDir.Tooltip\"));\n        props.setLook(wRemoteDirectory);\n        wRemoteDirectory.addModifyListener(lsMod);\n        fdRemoteDirectory = new FormData();\n        fdRemoteDirectory.left = new FormAttachment(middle, 0);\n        fdRemoteDirectory.top = new FormAttachment(wSourceSettings, margin);\n        fdRemoteDirectory.right = new FormAttachment(wbTestRemoteDirectoryExists, -margin);\n        wRemoteDirectory.setLayoutData(fdRemoteDirectory);\n        \r\n        fdTargetSettings = new FormData();\r\n        fdTargetSettings.left = new FormAttachment(0, margin);\r\n        fdTargetSettings.top = new FormAttachment(wSourceSettings, margin);\r\n        fdTargetSettings.right = new FormAttachment(100, -margin);\r\n        wTargetSettings.setLayoutData(fdTargetSettings);\r\n       // ///////////////////////////////////////////////////////////\r\n       // / END OF Target SETTINGSGROUP\r\n       // ///////////////////////////////////////////////////////////\n       \n\n\t\tfdFilesComp=new FormData();\r\n\t\tfdFilesComp.left  = new FormAttachment(0, 0);\r\n\t\tfdFilesComp.top   = new FormAttachment(0, 0);\r\n\t\tfdFilesComp.right = new FormAttachment(100, 0);\r\n\t\tfdFilesComp.bottom= new FormAttachment(100, 0);\r\n\t\twFilesComp.setLayoutData(fdFilesComp);\r\n\t\t\r\n\t\twFilesComp.layout();\r\n\t\twFilesTab.setControl(wFilesComp);\r\n \t\tprops.setLook(wFilesComp);\r\n \t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF Files TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n\t\tfdTabFolder = new FormData();\r\n\t\tfdTabFolder.left  = new FormAttachment(0, 0);\r\n\t\tfdTabFolder.top   = new FormAttachment(wName, margin);\r\n\t\tfdTabFolder.right = new FormAttachment(100, 0);\r\n\t\tfdTabFolder.bottom= new FormAttachment(100, -50);\r\n\t\twTabFolder.setLayoutData(fdTabFolder);\n\n     \n\n        wOK = new Button(shell, SWT.PUSH);\n        wOK.setText(Messages.getString(\"System.Button.OK\"));\n        wCancel = new Button(shell, SWT.PUSH);\n        wCancel.setText(Messages.getString(\"System.Button.Cancel\"));\n\n        BaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, wTabFolder);\n\n        // Add listeners\n        lsCancel = new Listener()\n        {\n            public void handleEvent(Event e)\n            {\n                cancel();\n            }\n        };\n        lsOK = new Listener()\n        {\n            public void handleEvent(Event e)\n            {\n                ok();\n            }\n        };\n        lsTest     = new Listener() { public void handleEvent(Event e) { test(); } };\r\n        lsCheckRemoteFolder     = new Listener() { public void handleEvent(Event e) { checkRemoteFolder(jobMeta.environmentSubstitute(wRemoteDirectory.getText())); } };\r\n        \n        wbLocalDirectory.addSelectionListener\n\t\t(\n\t\t\tnew SelectionAdapter()\n\t\t\t{\n\t\t\t\tpublic void widgetSelected(SelectionEvent e)\n\t\t\t\t{\n\t\t\t\t\tDirectoryDialog ddialog = new DirectoryDialog(shell, SWT.OPEN);\n\t\t\t\t\tif (wLocalDirectory.getText()!=null)\n\t\t\t\t\t{\n\t\t\t\t\t\tddialog.setFilterPath(jobMeta.environmentSubstitute(wLocalDirectory.getText()) );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t // Calling open() will open and run the dialog.\n\t\t\t        // It will return the selected directory, or\n\t\t\t        // null if user cancels\n\t\t\t        String dir = ddialog.open();\n\t\t\t        if (dir != null) {\n\t\t\t          // Set the text box to the new selection\n\t\t\t        \twLocalDirectory.setText(dir);\n\t\t\t        }\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t\n\n        wCancel.addListener(SWT.Selection, lsCancel);\n        wOK.addListener(SWT.Selection, lsOK);\n        wbTestRemoteDirectoryExists.addListener(SWT.Selection, lsCheckRemoteFolder    );\r\n  \r\n        wTest.addListener    (SWT.Selection, lsTest    );\r\n        \n        lsDef = new SelectionAdapter()\n        {\n            public void widgetDefaultSelected(SelectionEvent e)\n            {\n                ok();\n            }\n        };\n\n        wName.addSelectionListener(lsDef);\n        wServerName.addSelectionListener(lsDef);\n        wUserName.addSelectionListener(lsDef);\n        wPassword.addSelectionListener(lsDef);\n        wRemoteDirectory.addSelectionListener(lsDef);\n        wLocalDirectory.addSelectionListener(lsDef);\n        wWildcard.addSelectionListener(lsDef);\n\n        // Detect X or ALT-F4 or something that kills this window...\n        shell.addShellListener(new ShellAdapter()\n        {\n            public void shellClosed(ShellEvent e)\n            {\n                cancel();\n            }\n        });\n\n        getData();\n        wTabFolder.setSelection(0);\n        BaseStepDialog.setSize(shell);\n        shell.open();\n        props.setDialogSize(shell, \"JobSFTPDialogSize\");\n        while (!shell.isDisposed())\n        {\n            if (!display.readAndDispatch())\n                display.sleep();\n        }\n        return jobEntry;\n    }","id":63944,"modified_method":"public JobEntryInterface open()\n    {\n        Shell parent = getParent();\n        Display display = parent.getDisplay();\n\n        shell = new Shell(parent, props.getJobsDialogStyle());\n        props.setLook(shell);\n        JobDialog.setShellImage(shell, jobEntry);\n\n        ModifyListener lsMod = new ModifyListener()\n        {\n            public void modifyText(ModifyEvent e)\n            {\r\n            \tftpclient=null;\r\n            \tpwdFolder=null;\n                jobEntry.setChanged();\n            }\n        };\n        changed = jobEntry.hasChanged();\n\n        FormLayout formLayout = new FormLayout();\n        formLayout.marginWidth = Const.FORM_MARGIN;\n        formLayout.marginHeight = Const.FORM_MARGIN;\n\n        shell.setLayout(formLayout);\n        shell.setText(Messages.getString(\"JobFTPPUT.Title\"));\n\n        int middle = props.getMiddlePct();\n        int margin = Const.MARGIN;\n\n        // Filename line\n        wlName = new Label(shell, SWT.RIGHT);\n        wlName.setText(Messages.getString(\"JobFTPPUT.Name.Label\"));\n        props.setLook(wlName);\n        fdlName = new FormData();\n        fdlName.left = new FormAttachment(0, 0);\n        fdlName.right = new FormAttachment(middle, -margin);\n        fdlName.top = new FormAttachment(0, margin);\n        wlName.setLayoutData(fdlName);\n        wName = new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wName);\n        wName.addModifyListener(lsMod);\n        fdName = new FormData();\n        fdName.left = new FormAttachment(middle, 0);\n        fdName.top = new FormAttachment(0, margin);\n        fdName.right = new FormAttachment(100, 0);\n        wName.setLayoutData(fdName);\r\n        \r\n        wTabFolder = new CTabFolder(shell, SWT.BORDER);\r\n \t\tprops.setLook(wTabFolder, Props.WIDGET_STYLE_TAB);\r\n \t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF GENERAL TAB   ///\r\n\t\t//////////////////////////\r\n\r\n\t\twGeneralTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twGeneralTab.setText(Messages.getString(\"JobFTPPUT.Tab.General.Label\"));\r\n\t\t\r\n\t\twGeneralComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wGeneralComp);\r\n\r\n\t\tFormLayout generalLayout = new FormLayout();\r\n\t\tgeneralLayout.marginWidth  = 3;\r\n\t\tgeneralLayout.marginHeight = 3;\r\n\t\twGeneralComp.setLayout(generalLayout);\r\n\t\t\r\n\t     // ////////////////////////\r\n\t     // START OF SERVER SETTINGS GROUP///\r\n\t     // /\r\n\t    wServerSettings = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wServerSettings);\r\n\t    wServerSettings.setText(Messages.getString(\"JobFTPPUT.ServerSettings.Group.Label\"));\r\n\r\n\t    FormLayout ServerSettingsgroupLayout = new FormLayout();\r\n\t    ServerSettingsgroupLayout.marginWidth = 10;\r\n\t    ServerSettingsgroupLayout.marginHeight = 10;\r\n\r\n\t    wServerSettings.setLayout(ServerSettingsgroupLayout);\n\n        // ServerName line\n        wlServerName = new Label(wServerSettings, SWT.RIGHT);\n        wlServerName.setText(Messages.getString(\"JobFTPPUT.Server.Label\"));\n        props.setLook(wlServerName);\n        fdlServerName = new FormData();\n        fdlServerName.left = new FormAttachment(0, 0);\n        fdlServerName.top = new FormAttachment(wName, margin);\n        fdlServerName.right = new FormAttachment(middle, 0);\n        wlServerName.setLayoutData(fdlServerName);\n        wServerName = new TextVar(jobMeta, wServerSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wServerName);\n        wServerName.addModifyListener(lsMod);\n        fdServerName = new FormData();\n        fdServerName.left = new FormAttachment(middle, margin);\n        fdServerName.top = new FormAttachment(wName, margin);\n        fdServerName.right = new FormAttachment(100, 0);\n        wServerName.setLayoutData(fdServerName);\n\n        // ServerPort line\n        wlServerPort = new Label(wServerSettings, SWT.RIGHT);\n        wlServerPort.setText(Messages.getString(\"JobFTPPUT.Port.Label\"));\n        props.setLook(wlServerPort);\n        fdlServerPort = new FormData();\n        fdlServerPort.left = new FormAttachment(0, 0);\n        fdlServerPort.top = new FormAttachment(wServerName, margin);\n        fdlServerPort.right = new FormAttachment(middle, 0);\n        wlServerPort.setLayoutData(fdlServerPort);\n        wServerPort = new TextVar(jobMeta, wServerSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wServerPort);\n        wServerPort.setToolTipText(Messages.getString(\"JobFTPPUT.Port.Tooltip\"));\n        wServerPort.addModifyListener(lsMod);\n        fdServerPort = new FormData();\n        fdServerPort.left = new FormAttachment(middle, margin);\n        fdServerPort.top = new FormAttachment(wServerName, margin);\n        fdServerPort.right = new FormAttachment(100, 0);\n        wServerPort.setLayoutData(fdServerPort);\n\n        // UserName line\n        wlUserName = new Label(wServerSettings, SWT.RIGHT);\n        wlUserName.setText(Messages.getString(\"JobFTPPUT.Username.Label\"));\n        props.setLook(wlUserName);\n        fdlUserName = new FormData();\n        fdlUserName.left = new FormAttachment(0, 0);\n        fdlUserName.top = new FormAttachment(wServerPort, margin);\n        fdlUserName.right = new FormAttachment(middle, 0);\n        wlUserName.setLayoutData(fdlUserName);\n        wUserName = new TextVar(jobMeta, wServerSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wUserName);\n        wUserName.addModifyListener(lsMod);\n        fdUserName = new FormData();\n        fdUserName.left = new FormAttachment(middle, margin);\n        fdUserName.top = new FormAttachment(wServerPort, margin);\n        fdUserName.right = new FormAttachment(100, 0);\n        wUserName.setLayoutData(fdUserName);\n\n        // Password line\n        wlPassword = new Label(wServerSettings, SWT.RIGHT);\n        wlPassword.setText(Messages.getString(\"JobFTPPUT.Password.Label\"));\n        props.setLook(wlPassword);\n        fdlPassword = new FormData();\n        fdlPassword.left = new FormAttachment(0, 0);\n        fdlPassword.top = new FormAttachment(wUserName, margin);\n        fdlPassword.right = new FormAttachment(middle, 0);\n        wlPassword.setLayoutData(fdlPassword);\n        wPassword = new TextVar(jobMeta, wServerSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wPassword);\n        wPassword.setEchoChar('*');\n        wPassword.addModifyListener(lsMod);\n        fdPassword = new FormData();\n        fdPassword.left = new FormAttachment(middle, margin);\n        fdPassword.top = new FormAttachment(wUserName, margin);\n        fdPassword.right = new FormAttachment(100, 0);\n        wPassword.setLayoutData(fdPassword);\r\n        \r\n        // Proxy host line\r\n        wProxyHost = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPPUT.ProxyHost.Label\"), Messages.getString(\"JobFTPPUT.ProxyHost.Tooltip\"));\r\n        props.setLook(wProxyHost);\r\n        wProxyHost.addModifyListener(lsMod);\r\n        fdProxyHost = new FormData();\r\n        fdProxyHost.left \t= new FormAttachment(0, 0);\r\n        fdProxyHost.top\t\t= new FormAttachment(wPassword, 2*margin);\r\n        fdProxyHost.right\t= new FormAttachment(100, 0);\r\n        wProxyHost.setLayoutData(fdProxyHost);\r\n\r\n        // Proxy port line\r\n        wProxyPort = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPPUT.ProxyPort.Label\"), Messages.getString(\"JobFTPPUT.ProxyPort.Tooltip\"));\r\n        props.setLook(wProxyPort);\r\n        wProxyPort.addModifyListener(lsMod);\r\n        fdProxyPort = new FormData();\r\n        fdProxyPort.left \t= new FormAttachment(0, 0);\r\n        fdProxyPort.top  \t= new FormAttachment(wProxyHost, margin);\r\n        fdProxyPort.right\t= new FormAttachment(100, 0);\r\n        wProxyPort.setLayoutData(fdProxyPort);\r\n\r\n        // Proxy username line\r\n        wProxyUsername = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPPUT.ProxyUsername.Label\"), Messages.getString(\"JobFTPPUT.ProxyUsername.Tooltip\"));\r\n        props.setLook(wProxyUsername);\r\n        wProxyUsername.addModifyListener(lsMod);\r\n        fdProxyUsername = new FormData();\r\n        fdProxyUsername.left = new FormAttachment(0, 0);\r\n        fdProxyUsername.top  = new FormAttachment(wProxyPort, margin);\r\n        fdProxyUsername.right= new FormAttachment(100, 0);\r\n        wProxyUsername.setLayoutData(fdProxyUsername);\r\n        \r\n        // Proxy password line\r\n        wProxyPassword = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTPPUT.ProxyPassword.Label\"), Messages.getString(\"JobFTPPUT.ProxyPassword.Tooltip\"));\r\n        props.setLook(wProxyPassword);\r\n        wProxyPassword.addModifyListener(lsMod);\r\n        fdProxyPasswd=new FormData();\r\n        fdProxyPasswd.left = new FormAttachment(0, 0);\r\n        fdProxyPasswd.top  = new FormAttachment(wProxyUsername, margin);\r\n        fdProxyPasswd.right= new FormAttachment(100, 0);\r\n        wProxyPassword.setLayoutData(fdProxyPasswd);\r\n        \r\n        \r\n        // Test connection button\r\n\t\twTest=new Button(wServerSettings,SWT.PUSH);\r\n\t\twTest.setText(Messages.getString(\"JobFTPPUT.TestConnection.Label\"));\r\n \t\tprops.setLook(wTest);\r\n\t\tfdTest=new FormData();\r\n\t\twTest.setToolTipText(Messages.getString(\"JobFTPPUT.TestConnection.Tooltip\"));\r\n\t\tfdTest.top  = new FormAttachment(wProxyPassword, margin);\r\n\t\tfdTest.right= new FormAttachment(100, 0);\r\n\t\twTest.setLayoutData(fdTest);\n\r\n\t     fdServerSettings = new FormData();\r\n\t     fdServerSettings.left = new FormAttachment(0, margin);\r\n\t     fdServerSettings.top = new FormAttachment(wName, margin);\r\n\t     fdServerSettings.right = new FormAttachment(100, -margin);\r\n\t     wServerSettings.setLayoutData(fdServerSettings);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF SERVER SETTINGS GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n        \r\n\t     // ////////////////////////\r\n\t     // START OF Advanced SETTINGS GROUP///\r\n\t     // /\r\n\t     wAdvancedSettings = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n\t     props.setLook(wAdvancedSettings);\r\n\t     wAdvancedSettings.setText(Messages.getString(\"JobFTPPUT.AdvancedSettings.Group.Label\"));\r\n\t     FormLayout AdvancedSettingsgroupLayout = new FormLayout();\r\n\t     AdvancedSettingsgroupLayout.marginWidth = 10;\r\n\t     AdvancedSettingsgroupLayout.marginHeight = 10;\r\n\t     wAdvancedSettings.setLayout(AdvancedSettingsgroupLayout);\r\n\t     \r\n\t     // Binary mode selection...\r\n        wlBinaryMode = new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlBinaryMode.setText(Messages.getString(\"JobFTPPUT.BinaryMode.Label\"));\r\n        props.setLook(wlBinaryMode);\r\n        fdlBinaryMode = new FormData();\r\n        fdlBinaryMode.left = new FormAttachment(0, 0);\r\n        fdlBinaryMode.top = new FormAttachment(wServerSettings, margin);\r\n        fdlBinaryMode.right = new FormAttachment(middle, 0);\r\n        wlBinaryMode.setLayoutData(fdlBinaryMode);\r\n        wBinaryMode = new Button(wAdvancedSettings, SWT.CHECK);\r\n        props.setLook(wBinaryMode);\r\n        wBinaryMode.setToolTipText(Messages.getString(\"JobFTPPUT.BinaryMode.Tooltip\"));\r\n        fdBinaryMode = new FormData();\r\n        fdBinaryMode.left = new FormAttachment(middle, 0);\r\n        fdBinaryMode.top = new FormAttachment(wServerSettings, margin);\r\n        fdBinaryMode.right = new FormAttachment(100, 0);\r\n        wBinaryMode.setLayoutData(fdBinaryMode);\r\n        \r\n\t     // TimeOut...\r\n        wlTimeout = new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlTimeout.setText(Messages.getString(\"JobFTPPUT.Timeout.Label\"));\r\n        props.setLook(wlTimeout);\r\n        fdlTimeout = new FormData();\r\n        fdlTimeout.left = new FormAttachment(0, 0);\r\n        fdlTimeout.top = new FormAttachment(wBinaryMode, margin);\r\n        fdlTimeout.right = new FormAttachment(middle, 0);\r\n        wlTimeout.setLayoutData(fdlTimeout);\r\n        wTimeout = new TextVar(jobMeta, wAdvancedSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n                .getString(\"JobFTPPUT.Timeout.Tooltip\"));\r\n        props.setLook(wTimeout);\r\n        wTimeout.setToolTipText(Messages.getString(\"JobFTPPUT.Timeout.Tooltip\"));\r\n        fdTimeout = new FormData();\r\n        fdTimeout.left = new FormAttachment(middle, 0);\r\n        fdTimeout.top = new FormAttachment(wBinaryMode, margin);\r\n        fdTimeout.right = new FormAttachment(100, 0);\r\n        wTimeout.setLayoutData(fdTimeout);\r\n        \r\n        // active connection?\r\n        wlActive = new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlActive.setText(Messages.getString(\"JobFTPPUT.ActiveConns.Label\"));\r\n        props.setLook(wlActive);\r\n        fdlActive = new FormData();\r\n        fdlActive.left = new FormAttachment(0, 0);\r\n        fdlActive.top = new FormAttachment(wTimeout, margin);\r\n        fdlActive.right = new FormAttachment(middle, 0);\r\n        wlActive.setLayoutData(fdlActive);\r\n        wActive = new Button(wAdvancedSettings, SWT.CHECK);\r\n        wActive.setToolTipText(Messages.getString(\"JobFTPPUT.ActiveConns.Tooltip\"));\r\n        props.setLook(wActive);\r\n        fdActive = new FormData();\r\n        fdActive.left = new FormAttachment(middle, 0);\r\n        fdActive.top = new FormAttachment(wTimeout, margin);\r\n        fdActive.right = new FormAttachment(100, 0);\r\n        wActive.setLayoutData(fdActive);\r\n        \r\n        // Control encoding line\r\n        //\r\n        // The drop down is editable as it may happen an encoding may not be present\r\n        // on one machine, but you may want to use it on your execution server\r\n        //\r\n        wlControlEncoding=new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlControlEncoding.setText(Messages.getString(\"JobFTPPUT.ControlEncoding.Label\"));\r\n        props.setLook(wlControlEncoding);\r\n        fdlControlEncoding=new FormData();\r\n        fdlControlEncoding.left  = new FormAttachment(0, 0);\r\n        fdlControlEncoding.top   = new FormAttachment(wActive, margin);\r\n        fdlControlEncoding.right = new FormAttachment(middle, 0);\r\n        wlControlEncoding.setLayoutData(fdlControlEncoding);\r\n        wControlEncoding=new Combo(wAdvancedSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n        wControlEncoding.setToolTipText(Messages.getString(\"JobFTPPUT.ControlEncoding.Tooltip\"));\r\n        wControlEncoding.setItems(encodings);\r\n        props.setLook(wControlEncoding);\r\n        fdControlEncoding=new FormData();\r\n        fdControlEncoding.left = new FormAttachment(middle, 0);\r\n        fdControlEncoding.top  = new FormAttachment(wActive, margin);\r\n        fdControlEncoding.right= new FormAttachment(100, 0);        \r\n        wControlEncoding.setLayoutData(fdControlEncoding); \r\n        \r\n\t     fdAdvancedSettings = new FormData();\r\n\t     fdAdvancedSettings.left = new FormAttachment(0, margin);\r\n\t     fdAdvancedSettings.top = new FormAttachment(wServerSettings, margin);\r\n\t     fdAdvancedSettings.right = new FormAttachment(100, -margin);\r\n\t     wAdvancedSettings.setLayoutData(fdAdvancedSettings);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF Advanced SETTINGS GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t\r\n\t\tfdGeneralComp=new FormData();\r\n\t\tfdGeneralComp.left  = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.top   = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.right = new FormAttachment(100, 0);\r\n\t\tfdGeneralComp.bottom= new FormAttachment(100, 0);\r\n\t\twGeneralComp.setLayoutData(fdGeneralComp);\r\n\t\t\r\n\t\twGeneralComp.layout();\r\n\t\twGeneralTab.setControl(wGeneralComp);\r\n\t\tprops.setLook(wGeneralComp);\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF GENERAL TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t//////////////////////////\r\n\t\t// START OF Files TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n\t\twFilesTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twFilesTab.setText(Messages.getString(\"JobFTPPUT.Tab.Files.Label\"));\r\n\t\t\r\n\t\twFilesComp = new Composite(wTabFolder, SWT.NONE);\r\n\t\tprops.setLook(wFilesComp);\r\n\t\r\n\t\tFormLayout FilesLayout = new FormLayout();\r\n\t\tFilesLayout.marginWidth  = 3;\r\n\t\tFilesLayout.marginHeight = 3;\r\n\t\twFilesComp.setLayout(FilesLayout);\r\n\t\t\t\r\n\t\t // ////////////////////////\r\n\t     // START OF Source SETTINGS GROUP///\r\n\t     // /\r\n\t    wSourceSettings = new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wSourceSettings);\r\n\t    wSourceSettings.setText(Messages.getString(\"JobFTPPUT.SourceSettings.Group.Label\"));\r\n\t    FormLayout SourceSettinsgroupLayout = new FormLayout();\r\n\t    SourceSettinsgroupLayout.marginWidth = 10;\r\n\t    SourceSettinsgroupLayout.marginHeight = 10;\r\n\t    wSourceSettings.setLayout(SourceSettinsgroupLayout);\r\n\t     \n\n        // Local (source) directory line\n        wlLocalDirectory = new Label(wSourceSettings, SWT.RIGHT);\n        wlLocalDirectory.setText(Messages.getString(\"JobFTPPUT.LocalDir.Label\"));\n        props.setLook(wlLocalDirectory);\n        fdlLocalDirectory = new FormData();\n        fdlLocalDirectory.left = new FormAttachment(0, 0);\n        fdlLocalDirectory.top = new FormAttachment(0, margin);\n        fdlLocalDirectory.right = new FormAttachment(middle, -margin);\n        wlLocalDirectory.setLayoutData(fdlLocalDirectory);\n        \n        // Browse folders button ...\n\t\twbLocalDirectory=new Button(wSourceSettings, SWT.PUSH| SWT.CENTER);\n\t\tprops.setLook(wbLocalDirectory);\n\t\twbLocalDirectory.setText(Messages.getString(\"JobFTPPUT.BrowseFolders.Label\"));\n\t\tfdbLocalDirectory=new FormData();\n\t\tfdbLocalDirectory.right= new FormAttachment(100, 0);\n\t\tfdbLocalDirectory.top  = new FormAttachment(0, margin);\n\t\twbLocalDirectory.setLayoutData(fdbLocalDirectory);\n        \n        wLocalDirectory = new TextVar(jobMeta, wSourceSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\n            .getString(\"JobFTPPUT.LocalDir.Tooltip\"));\n        props.setLook(wLocalDirectory);\n        wLocalDirectory.addModifyListener(lsMod);\n        fdLocalDirectory = new FormData();\n        fdLocalDirectory.left = new FormAttachment(middle, 0);\n        fdLocalDirectory.top = new FormAttachment(0, margin);\n        fdLocalDirectory.right = new FormAttachment(wbLocalDirectory, -margin);\n        wLocalDirectory.setLayoutData(fdLocalDirectory);\r\n        \r\n        // Wildcard line\r\n        wlWildcard = new Label(wSourceSettings, SWT.RIGHT);\r\n        wlWildcard.setText(Messages.getString(\"JobFTPPUT.Wildcard.Label\"));\r\n        props.setLook(wlWildcard);\r\n        fdlWildcard = new FormData();\r\n        fdlWildcard.left = new FormAttachment(0, 0);\r\n        fdlWildcard.top = new FormAttachment(wLocalDirectory, margin);\r\n        fdlWildcard.right = new FormAttachment(middle, -margin);\r\n        wlWildcard.setLayoutData(fdlWildcard);\r\n        wWildcard = new TextVar(jobMeta, wSourceSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages.getString(\"JobFTPPUT.Wildcard.Tooltip\"));\r\n        props.setLook(wWildcard);\r\n        wWildcard.addModifyListener(lsMod);\r\n        fdWildcard = new FormData();\r\n        fdWildcard.left = new FormAttachment(middle, 0);\r\n        fdWildcard.top = new FormAttachment(wLocalDirectory, margin);\r\n        fdWildcard.right = new FormAttachment(100, 0);\r\n        wWildcard.setLayoutData(fdWildcard);\r\n        \r\n        // Remove files after retrieval...\r\n        wlRemove = new Label(wSourceSettings, SWT.RIGHT);\r\n        wlRemove.setText(Messages.getString(\"JobFTPPUT.RemoveFiles.Label\"));\r\n        props.setLook(wlRemove);\r\n        fdlRemove = new FormData();\r\n        fdlRemove.left = new FormAttachment(0, 0);\r\n        fdlRemove.top = new FormAttachment(wWildcard, 2*margin);\r\n        fdlRemove.right = new FormAttachment(middle, -margin);\r\n        wlRemove.setLayoutData(fdlRemove);\r\n        wRemove = new Button(wSourceSettings, SWT.CHECK);\r\n        props.setLook(wRemove);\r\n        wRemove.setToolTipText(Messages.getString(\"JobFTPPUT.RemoveFiles.Tooltip\"));\r\n        fdRemove = new FormData();\r\n        fdRemove.left = new FormAttachment(middle, 0);\r\n        fdRemove.top = new FormAttachment(wWildcard, 2*margin);\r\n        fdRemove.right = new FormAttachment(100, 0);\r\n        wRemove.setLayoutData(fdRemove);\r\n        \r\n        // OnlyNew files after retrieval...\r\n        wlOnlyNew = new Label(wSourceSettings, SWT.RIGHT);\r\n        wlOnlyNew.setText(Messages.getString(\"JobFTPPUT.DontOverwrite.Label\"));\r\n        props.setLook(wlOnlyNew);\r\n        fdlOnlyNew = new FormData();\r\n        fdlOnlyNew.left = new FormAttachment(0, 0);\r\n        fdlOnlyNew.top = new FormAttachment(wRemove, margin);\r\n        fdlOnlyNew.right = new FormAttachment(middle, 0);\r\n        wlOnlyNew.setLayoutData(fdlOnlyNew);\r\n        wOnlyNew = new Button(wSourceSettings, SWT.CHECK);\r\n        wOnlyNew.setToolTipText(Messages.getString(\"JobFTPPUT.DontOverwrite.Tooltip\"));\r\n        props.setLook(wOnlyNew);\r\n        fdOnlyNew = new FormData();\r\n        fdOnlyNew.left = new FormAttachment(middle, 0);\r\n        fdOnlyNew.top = new FormAttachment(wRemove, margin);\r\n        fdOnlyNew.right = new FormAttachment(100, 0);\r\n        wOnlyNew.setLayoutData(fdOnlyNew);\r\n        \r\n        fdSourceSettings = new FormData();\r\n        fdSourceSettings.left = new FormAttachment(0, margin);\r\n        fdSourceSettings.top = new FormAttachment(0, 2*margin);\r\n        fdSourceSettings.right = new FormAttachment(100, -margin);\r\n        wSourceSettings.setLayoutData(fdSourceSettings);\r\n       // ///////////////////////////////////////////////////////////\r\n       // / END OF Source SETTINGSGROUP\r\n       // ///////////////////////////////////////////////////////////\r\n\t\t\r\n        \r\n\t\t // ////////////////////////\r\n\t     // START OF Target SETTINGS GROUP///\r\n\t     // /\r\n\t    wTargetSettings = new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wTargetSettings);\r\n\t    wTargetSettings.setText(Messages.getString(\"JobFTPPUT.TargetSettings.Group.Label\"));\r\n\t    FormLayout TargetSettinsgroupLayout = new FormLayout();\r\n\t    TargetSettinsgroupLayout.marginWidth = 10;\r\n\t    TargetSettinsgroupLayout.marginHeight = 10;\r\n\t    wTargetSettings.setLayout(TargetSettinsgroupLayout);\n\n        // Remote Directory line\n        wlRemoteDirectory = new Label(wTargetSettings, SWT.RIGHT);\n        wlRemoteDirectory.setText(Messages.getString(\"JobFTPPUT.RemoteDir.Label\"));\n        props.setLook(wlRemoteDirectory);\n        fdlRemoteDirectory = new FormData();\n        fdlRemoteDirectory.left = new FormAttachment(0, 0);\n        fdlRemoteDirectory.top = new FormAttachment(wSourceSettings, margin);\n        fdlRemoteDirectory.right = new FormAttachment(middle, -margin);\n        wlRemoteDirectory.setLayoutData(fdlRemoteDirectory);\n       \r\n\t    // Test remote folder  button ...\r\n\t\twbTestRemoteDirectoryExists=new Button(wTargetSettings, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTestRemoteDirectoryExists);\r\n\t\twbTestRemoteDirectoryExists.setText(Messages.getString(\"JobFTPPUT.TestFolderExists.Label\"));\r\n\t\tfdbTestRemoteDirectoryExists=new FormData();\r\n\t\tfdbTestRemoteDirectoryExists.right= new FormAttachment(100, 0);\r\n\t\tfdbTestRemoteDirectoryExists.top  = new FormAttachment(wSourceSettings, margin);\r\n\t\twbTestRemoteDirectoryExists.setLayoutData(fdbTestRemoteDirectoryExists);\r\n        \r\n        wRemoteDirectory = new TextVar(jobMeta, wTargetSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\n            .getString(\"JobFTPPUT.RemoteDir.Tooltip\"));\n        props.setLook(wRemoteDirectory);\n        wRemoteDirectory.addModifyListener(lsMod);\n        fdRemoteDirectory = new FormData();\n        fdRemoteDirectory.left = new FormAttachment(middle, 0);\n        fdRemoteDirectory.top = new FormAttachment(wSourceSettings, margin);\n        fdRemoteDirectory.right = new FormAttachment(wbTestRemoteDirectoryExists, -margin);\n        wRemoteDirectory.setLayoutData(fdRemoteDirectory);\n        \r\n        fdTargetSettings = new FormData();\r\n        fdTargetSettings.left = new FormAttachment(0, margin);\r\n        fdTargetSettings.top = new FormAttachment(wSourceSettings, margin);\r\n        fdTargetSettings.right = new FormAttachment(100, -margin);\r\n        wTargetSettings.setLayoutData(fdTargetSettings);\r\n       // ///////////////////////////////////////////////////////////\r\n       // / END OF Target SETTINGSGROUP\r\n       // ///////////////////////////////////////////////////////////\n       \n\n\t\tfdFilesComp=new FormData();\r\n\t\tfdFilesComp.left  = new FormAttachment(0, 0);\r\n\t\tfdFilesComp.top   = new FormAttachment(0, 0);\r\n\t\tfdFilesComp.right = new FormAttachment(100, 0);\r\n\t\tfdFilesComp.bottom= new FormAttachment(100, 0);\r\n\t\twFilesComp.setLayoutData(fdFilesComp);\r\n\t\t\r\n\t\twFilesComp.layout();\r\n\t\twFilesTab.setControl(wFilesComp);\r\n \t\tprops.setLook(wFilesComp);\r\n \t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF Files TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n\t\tfdTabFolder = new FormData();\r\n\t\tfdTabFolder.left  = new FormAttachment(0, 0);\r\n\t\tfdTabFolder.top   = new FormAttachment(wName, margin);\r\n\t\tfdTabFolder.right = new FormAttachment(100, 0);\r\n\t\tfdTabFolder.bottom= new FormAttachment(100, -50);\r\n\t\twTabFolder.setLayoutData(fdTabFolder);\n\n     \n\n        wOK = new Button(shell, SWT.PUSH);\n        wOK.setText(Messages.getString(\"System.Button.OK\"));\n        wCancel = new Button(shell, SWT.PUSH);\n        wCancel.setText(Messages.getString(\"System.Button.Cancel\"));\n\n        BaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, wTabFolder);\n\n        // Add listeners\n        lsCancel = new Listener()\n        {\n            public void handleEvent(Event e)\n            {\n                cancel();\n            }\n        };\n        lsOK = new Listener()\n        {\n            public void handleEvent(Event e)\n            {\n                ok();\n            }\n        };\n        lsTest     = new Listener() { public void handleEvent(Event e) { test(); } };\r\n        lsCheckRemoteFolder     = new Listener() { public void handleEvent(Event e) { checkRemoteFolder(jobMeta.environmentSubstitute(wRemoteDirectory.getText())); } };\r\n        \n        wbLocalDirectory.addSelectionListener\n\t\t(\n\t\t\tnew SelectionAdapter()\n\t\t\t{\n\t\t\t\tpublic void widgetSelected(SelectionEvent e)\n\t\t\t\t{\n\t\t\t\t\tDirectoryDialog ddialog = new DirectoryDialog(shell, SWT.OPEN);\n\t\t\t\t\tif (wLocalDirectory.getText()!=null)\n\t\t\t\t\t{\n\t\t\t\t\t\tddialog.setFilterPath(jobMeta.environmentSubstitute(wLocalDirectory.getText()) );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t // Calling open() will open and run the dialog.\n\t\t\t        // It will return the selected directory, or\n\t\t\t        // null if user cancels\n\t\t\t        String dir = ddialog.open();\n\t\t\t        if (dir != null) {\n\t\t\t          // Set the text box to the new selection\n\t\t\t        \twLocalDirectory.setText(dir);\n\t\t\t        }\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t\n\n        wCancel.addListener(SWT.Selection, lsCancel);\n        wOK.addListener(SWT.Selection, lsOK);\n        wbTestRemoteDirectoryExists.addListener(SWT.Selection, lsCheckRemoteFolder    );\r\n  \r\n        wTest.addListener    (SWT.Selection, lsTest    );\r\n        \n        lsDef = new SelectionAdapter()\n        {\n            public void widgetDefaultSelected(SelectionEvent e)\n            {\n                ok();\n            }\n        };\n\n        wName.addSelectionListener(lsDef);\n        wServerName.addSelectionListener(lsDef);\n        wUserName.addSelectionListener(lsDef);\n        wPassword.addSelectionListener(lsDef);\n        wRemoteDirectory.addSelectionListener(lsDef);\n        wLocalDirectory.addSelectionListener(lsDef);\n        wWildcard.addSelectionListener(lsDef);\n\n        // Detect X or ALT-F4 or something that kills this window...\n        shell.addShellListener(new ShellAdapter()\n        {\n            public void shellClosed(ShellEvent e)\n            {\n                cancel();\n            }\n        });\n\n        getData();\n        wTabFolder.setSelection(0);\n        BaseStepDialog.setSize(shell);\n        shell.open();\n        props.setDialogSize(shell, \"JobSFTPDialogSize\");\n        while (!shell.isDisposed())\n        {\n            if (!display.readAndDispatch())\n                display.sleep();\n        }\n        return jobEntry;\n    }","commit_id":"d9c5b35958554ae92e3ecec4f4ca43fc2bf6a45a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public Result execute(Result previousResult, int nr, Repository rep, Job parentJob)\r\n\t{\r\n\t\tLogWriter log = LogWriter.getInstance();\r\n\t\tlog4j.info(Messages.getString(\"JobEntryFTP.Started\", serverName)); //$NON-NLS-1$\r\n\t\t\r\n\t\tResult result = previousResult;\r\n\t\tresult.setNrErrors(1);\r\n\t\tresult.setResult( false );\r\n\t\tNrErrors = 0;\r\n\t\tNrfilesRetrieved=0;\r\n\t\tsuccessConditionBroken=false;\r\n\t\tlimitFiles=Const.toInt(environmentSubstitute(getLimit()),10);\r\n\r\n\t\t\r\n\t\t// Here let's put some controls before stating the job\r\n\t\tif(movefiles)\r\n\t\t{\r\n\t\t\tif(Const.isEmpty(movetodirectory))\r\n\t\t\t{\r\n\t\t\t\tlog.logError(toString(), Messages.getString(\"JobEntryFTP.MoveToFolderEmpty\"));\r\n\t\t\t\tresult.setNrErrors(1);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.Start\")); //$NON-NLS-1$\r\n\r\n        FTPClient ftpclient=null;\r\n        String realMoveToFolder=null;\r\n        \r\n\t\ttry\r\n\t\t{\r\n\t\t\t// Create ftp client to host:port ...\r\n\t\t\tftpclient = new FTPClient();\r\n            String realServername = environmentSubstitute(serverName);\r\n            String realServerPort = environmentSubstitute(port);\r\n            ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n            if(Const.isEmpty(realServerPort))\r\n            {\r\n            \t ftpclient.setRemotePort(Const.toInt(realServerPort, 21));\r\n            }\r\n            if (!Const.isEmpty(proxyHost)) \r\n            {\r\n          \t  String realProxy_host = environmentSubstitute(proxyHost);\r\n          \t  ftpclient.setRemoteAddr(InetAddress.getByName(realProxy_host));\r\n          \t  if ( log.isDetailed() )\r\n          \t      log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.OpenedProxyConnectionOn\",realProxy_host));\r\n\r\n          \t  // FIXME: Proper default port for proxy    \t  \r\n          \t  int port = Const.toInt(environmentSubstitute(proxyPort), 21);\r\n          \t  if (port != 0) \r\n          \t  {\r\n          \t     ftpclient.setRemotePort(port);\r\n          \t  }\r\n            } \r\n            else \r\n            {\r\n                ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n                \r\n                if ( log.isDetailed() )\r\n          \t      log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.OpenedConnectionTo\",realServername));                \r\n            }\r\n            \r\n            \r\n\t\t\t// set activeConnection connectmode ...\r\n            if (activeConnection)\r\n            {\r\n                ftpclient.setConnectMode(FTPConnectMode.ACTIVE);\r\n                if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetActive\")); //$NON-NLS-1$\r\n            }\r\n            else\r\n            {\r\n                ftpclient.setConnectMode(FTPConnectMode.PASV);\r\n                if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetPassive\")); //$NON-NLS-1$\r\n            }\r\n\t\t\t\r\n\t\t\t// Set the timeout\r\n\t\t\tftpclient.setTimeout(timeout);\r\n\t\t      if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetTimeout\", String.valueOf(timeout))); //$NON-NLS-1$\r\n\t\t\t\r\n\t\t\tftpclient.setControlEncoding(controlEncoding);\r\n\t\t      if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetEncoding\", controlEncoding)); //$NON-NLS-1$\r\n\r\n\t\t\t// login to ftp host ...\r\n            ftpclient.connect();\r\n\t\t\t\r\n            String realUsername = environmentSubstitute(userName) +\r\n            (!Const.isEmpty(proxyHost) ? \"@\" + realServername : \"\") + \r\n            (!Const.isEmpty(proxyUsername) ? \" \" + environmentSubstitute(proxyUsername) \r\n        \t\t                           : \"\"); \r\n\t            \r\n            String realPassword = environmentSubstitute(password) + \r\n            (!Const.isEmpty(proxyPassword) ? \" \" + environmentSubstitute(proxyPassword) : \"\" );\r\n            \r\n            \r\n            ftpclient.login(realUsername, realPassword);\r\n\t\t\t//  Remove password from logging, you don't know where it ends up.\r\n\t\t\tif(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.LoggedIn\", realUsername)); //$NON-NLS-1$\r\n\r\n\t\t\t// move to spool dir ...\r\n\t\t\tif (!Const.isEmpty(ftpDirectory))\r\n\t\t\t{\r\n                String realFtpDirectory = environmentSubstitute(ftpDirectory);\r\n                ftpclient.chdir(realFtpDirectory);\r\n                if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.ChangedDir\", realFtpDirectory)); //$NON-NLS-1$\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//Create move to folder if necessary\r\n\t\t\tif(movefiles && !Const.isEmpty(movetodirectory))\r\n\t\t\t{\r\n\t\t\t\trealMoveToFolder=environmentSubstitute(movetodirectory);\r\n\t\t\t\tif(!ftpclient.exists(realMoveToFolder))\r\n\t\t\t\t{\r\n\t\t\t\t\tif(createmovefolder)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tftpclient.mkdir(realMoveToFolder);\r\n\t\t\t\t\t\tif(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.MoveToFolderCreated\",realMoveToFolder));\r\n\t\t\t\t\t}else\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlog.logError(toString(),Messages.getString(\"JobEntryFTP.MoveToFolderNotExist\"));\r\n\t\t\t\t\t\tresult.setNrErrors(1);\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Get all the files in the current directory...\r\n\t\t\tString[] filelist = ftpclient.dir();\r\n\t\t    if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.FoundNFiles\", String.valueOf(filelist.length))); //$NON-NLS-1$\r\n\t\t    \r\n\t\t\t// set transfertype ...\r\n\t\t\tif (binaryMode) \r\n\t\t\t{\r\n\t\t\t\tftpclient.setType(FTPTransferType.BINARY);\r\n\t\t        if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetBinary\")); //$NON-NLS-1$\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tftpclient.setType(FTPTransferType.ASCII);\r\n\t\t        if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetAscii\")); //$NON-NLS-1$\r\n\t\t\t}\r\n\r\n\t\t\t// Some FTP servers return a message saying no files found as a string in the filenlist\r\n\t\t\t// e.g. Solaris 8\r\n\t\t\t// CHECK THIS !!!\r\n\t\t\t\r\n\t\t\tif (filelist.length == 1)\r\n\t\t\t{\r\n\t\t\t\tString translatedWildcard = environmentSubstitute(wildcard);\r\n\t\t\t\tif(!Const.isEmpty(translatedWildcard)){\r\n\t\t\t\t  if (filelist[0].startsWith(translatedWildcard))\r\n\t\t\t\t  {\r\n\t\t\t\t    throw new FTPException(filelist[0]);\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tPattern pattern = null;\r\n\t\t\tif (!Const.isEmpty(wildcard)) \r\n\t\t\t{\r\n                String realWildcard = environmentSubstitute(wildcard);\r\n                pattern = Pattern.compile(realWildcard);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(!getSuccessCondition().equals(SUCCESS_IF_NO_ERRORS))\r\n\t\t\t\tlimitFiles=Const.toInt(environmentSubstitute(getLimit()),10);\r\n\t\t\t\r\n\t\t\t// Get the files in the list...\r\n\t\t\tfor (int i=0;i<filelist.length && !parentJob.isStopped();i++)\r\n\t\t\t{\r\n\t\t\t\tif(successConditionBroken)\r\n\t\t\t\t{\r\n\t\t\t\t\tlog.logError(toString(), Messages.getString(\"JobEntryFTP.Error.SuccessConditionbroken\",\"\"+NrErrors));\r\n\t\t\t\t\tthrow new Exception(Messages.getString(\"JobEntryFTP.SuccesConditionBroken\",\"\"+NrErrors));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\r\n\t\t\t\tboolean getIt = true;\r\n\t\t\t\t\r\n\t\t\t\tif(log.isDebug()) log.logDebug(toString(), Messages.getString(\"JobEntryFTP.AnalysingFile\",filelist[i]));\r\n\t\t\t\t\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\t\r\n\t\t\t\t\t// First see if the file matches the regular expression!\r\n\t\t\t\t\tif (pattern!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tMatcher matcher = pattern.matcher(filelist[i]);\r\n\t\t\t\t\t\tgetIt = matcher.matches();\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (getIt)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttargetFilename = getTargetFilename(filelist[i]);\r\n\r\n\t                    if ((!onlyGettingNewFiles) ||\r\n\t                    \t(onlyGettingNewFiles && needsDownload(targetFilename)))\r\n\t                    {\r\n\t                    \t\r\n\t                    \tif(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.GettingFile\", filelist[i], environmentSubstitute(targetDirectory)));  //$NON-NLS-1$\r\n\t    \t\t\t\t\tftpclient.get(targetFilename, filelist[i]);\r\n\t\t\t\t\t\t\t\t\t\r\n\t    \t\t\t\t\t // Update retrieved files\r\n\t    \t\t\t\t\tupdateRetrievedFiles();\r\n    \t\t\t            if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.GotFile\", filelist[i])); //$NON-NLS-1$\r\n\t    \t\t\t\t\t\r\n\t    \t\t\t\t\tif(isaddresult)\r\n\t    \t\t\t\t\t{\r\n\t    \t\t\t\t\t\tFileObject targetFile = null;\r\n\t    \t\t\t\t\t\ttry\r\n\t    \t\t\t\t\t\t{\r\n\t    \t\t\t\t\t\t\ttargetFile = KettleVFS.getFileObject(targetFilename);\r\n\t    \t\t\t\t\t\t\t\r\n\t\t    \t\t\t\t\t\t// Add to the result files...\r\n\t\t    \t\t\t\t\t\tResultFile resultFile = new ResultFile(ResultFile.FILE_TYPE_GENERAL, targetFile, parentJob.getJobname(), toString());\r\n\t\t    \t\t\t            resultFile.setComment(Messages.getString(\"JobEntryFTP.Downloaded\", serverName)); //$NON-NLS-1$\r\n\t\t    \t\t\t\t\t\tresult.getResultFiles().put(resultFile.getFile().toString(), resultFile);\r\n\t\t    \t\t\t\t\t\t\r\n\t\t    \t\t\t            if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.FileAddedToResult\", filelist[i])); //$NON-NLS-1$\r\n\t    \t\t\t\t\t\t}\r\n\t    \t\t\t\t\t\tfinally\r\n\t    \t\t\t\t\t\t{\r\n\t    \t\t\t\t\t\t\ttry{\r\n\t    \t\t\t\t\t\t\t\ttargetFile.close();\r\n\t    \t\t\t\t\t\t\t\ttargetFile=null;\r\n\t    \t\t\t\t\t\t\t}catch(Exception e){}\r\n\t    \t\t\t\t\t\t}\r\n\t    \t\t\t\t\t}\r\n\t    \t\t\t\t\t\r\n\t                    }\r\n\t\r\n\t\r\n\t                    \r\n\t\t\t\t\t\t// Delete the file if this is needed!\r\n\t\t\t\t\t\tif (remove) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tftpclient.delete(filelist[i]);\r\n\t\t\t\t\t\t\tif(log.isDetailed()) \r\n\t\t\t\t\t            if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.DeletedFile\", filelist[i])); //$NON-NLS-1$\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t}else\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(movefiles)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t// Try to move file to destination folder ...\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tftpclient.rename(filelist[i], realMoveToFolder+'/'+filelist[i]);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif(log.isDetailed()) \r\n\t\t\t\t\t\t\t\t\tlog.logDetailed(toString(), Messages.getString(\"JobEntryFTP.MovedFile\",filelist[i],realMoveToFolder));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}catch (Exception e)\r\n\t\t\t\t{\r\n\t\t\t\t\t// Update errors number\r\n\t\t\t\t\tupdateErrors();\r\n\t\t\t\t\tlog.logError(toString(),Messages.getString(\"JobFTP.UnexpectedError\",e.getMessage()));\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(successConditionBroken) \r\n\t\t\t\t\t\tthrow new Exception(Messages.getString(\"JobEntryFTP.SuccesConditionBroken\"));\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t} // end for\r\n\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tupdateErrors();\r\n\t\t\tlog.logError(toString(), Messages.getString(\"JobEntryFTP.ErrorGetting\", e.getMessage())); //$NON-NLS-1$\r\n            log.logError(toString(), Const.getStackTracker(e));\r\n\t\t}\r\n        finally\r\n        {\r\n            if (ftpclient!=null && ftpclient.connected())\r\n            {\r\n                try\r\n                {\r\n\r\n                    ftpclient.quit();\r\n                }\r\n                catch(Exception e)\r\n                {\r\n                \tlog.logError(toString(), Messages.getString(\"JobEntryFTP.ErrorQuitting\", e.getMessage())); //$NON-NLS-1$\r\n                }\r\n            }\r\n        }\r\n\t\t\r\n\t\t\r\n\t\tresult.setNrErrors(NrErrors);\r\n\t\tresult.setNrFilesRetrieved(NrfilesRetrieved);\r\n\t\tif(getSuccessStatus())\tresult.setResult(true);\r\n\t\t\r\n\t\treturn result;\r\n\t}","id":63945,"modified_method":"public Result execute(Result previousResult, int nr, Repository rep, Job parentJob)\r\n\t{\r\n\t\tLogWriter log = LogWriter.getInstance();\r\n\t\tlog4j.info(Messages.getString(\"JobEntryFTP.Started\", serverName)); //$NON-NLS-1$\r\n\t\t\r\n\t\tResult result = previousResult;\r\n\t\tresult.setNrErrors(1);\r\n\t\tresult.setResult( false );\r\n\t\tNrErrors = 0;\r\n\t\tNrfilesRetrieved=0;\r\n\t\tsuccessConditionBroken=false;\r\n\t\tlimitFiles=Const.toInt(environmentSubstitute(getLimit()),10);\r\n\r\n\t\t\r\n\t\t// Here let's put some controls before stating the job\r\n\t\tif(movefiles)\r\n\t\t{\r\n\t\t\tif(Const.isEmpty(movetodirectory))\r\n\t\t\t{\r\n\t\t\t\tlog.logError(toString(), Messages.getString(\"JobEntryFTP.MoveToFolderEmpty\"));\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.Start\")); //$NON-NLS-1$\r\n\r\n        FTPClient ftpclient=null;\r\n        String realMoveToFolder=null;\r\n        \r\n\t\ttry\r\n\t\t{\r\n\t\t\t// Create ftp client to host:port ...\r\n\t\t\tftpclient = new FTPClient();\r\n            String realServername = environmentSubstitute(serverName);\r\n            String realServerPort = environmentSubstitute(port);\r\n            ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n            if(Const.isEmpty(realServerPort))\r\n            {\r\n            \t ftpclient.setRemotePort(Const.toInt(realServerPort, 21));\r\n            }\r\n            if (!Const.isEmpty(proxyHost)) \r\n            {\r\n          \t  String realProxy_host = environmentSubstitute(proxyHost);\r\n          \t  ftpclient.setRemoteAddr(InetAddress.getByName(realProxy_host));\r\n          \t  if ( log.isDetailed() )\r\n          \t      log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.OpenedProxyConnectionOn\",realProxy_host));\r\n\r\n          \t  // FIXME: Proper default port for proxy    \t  \r\n          \t  int port = Const.toInt(environmentSubstitute(proxyPort), 21);\r\n          \t  if (port != 0) \r\n          \t  {\r\n          \t     ftpclient.setRemotePort(port);\r\n          \t  }\r\n            } \r\n            else \r\n            {\r\n                ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n                \r\n                if ( log.isDetailed() )\r\n          \t      log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.OpenedConnectionTo\",realServername));                \r\n            }\r\n            \r\n            \r\n\t\t\t// set activeConnection connectmode ...\r\n            if (activeConnection)\r\n            {\r\n                ftpclient.setConnectMode(FTPConnectMode.ACTIVE);\r\n                if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetActive\")); //$NON-NLS-1$\r\n            }\r\n            else\r\n            {\r\n                ftpclient.setConnectMode(FTPConnectMode.PASV);\r\n                if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetPassive\")); //$NON-NLS-1$\r\n            }\r\n\t\t\t\r\n\t\t\t// Set the timeout\r\n\t\t\tftpclient.setTimeout(timeout);\r\n\t\t      if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetTimeout\", String.valueOf(timeout))); //$NON-NLS-1$\r\n\t\t\t\r\n\t\t\tftpclient.setControlEncoding(controlEncoding);\r\n\t\t      if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetEncoding\", controlEncoding)); //$NON-NLS-1$\r\n\r\n\t\t\t// login to ftp host ...\r\n            ftpclient.connect();\r\n\t\t\t\r\n            String realUsername = environmentSubstitute(userName) +\r\n            (!Const.isEmpty(proxyHost) ? \"@\" + realServername : \"\") + \r\n            (!Const.isEmpty(proxyUsername) ? \" \" + environmentSubstitute(proxyUsername) \r\n        \t\t                           : \"\"); \r\n\t            \r\n            String realPassword = environmentSubstitute(password) + \r\n            (!Const.isEmpty(proxyPassword) ? \" \" + environmentSubstitute(proxyPassword) : \"\" );\r\n            \r\n            \r\n            ftpclient.login(realUsername, realPassword);\r\n\t\t\t//  Remove password from logging, you don't know where it ends up.\r\n\t\t\tif(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.LoggedIn\", realUsername)); //$NON-NLS-1$\r\n\r\n\t\t\t// move to spool dir ...\r\n\t\t\tif (!Const.isEmpty(ftpDirectory))\r\n\t\t\t{\r\n                String realFtpDirectory = environmentSubstitute(ftpDirectory);\r\n                ftpclient.chdir(realFtpDirectory);\r\n                if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.ChangedDir\", realFtpDirectory)); //$NON-NLS-1$\r\n\t\t\t}\t\r\n\r\n\t\t\t//Create move to folder if necessary\r\n\t\t\tif(movefiles && !Const.isEmpty(movetodirectory)){\r\n\t\t\t\trealMoveToFolder=environmentSubstitute(movetodirectory);\r\n\t\t\t\t// Folder exists?\r\n\t\t\t\tboolean folderExist=true;\r\n\t\t\t\ttry{\r\n\t\t\t\t\tfolderExist=ftpclient.exists(realMoveToFolder);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (Exception e){\r\n\t\t\t\t\t// Assume file does not exist !!\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(!folderExist){\r\n\t\t\t\t\tif(createmovefolder){\r\n\t\t\t\t\t\tftpclient.mkdir(realMoveToFolder);\r\n\t\t\t\t\t\tif(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.MoveToFolderCreated\",realMoveToFolder));\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlog.logError(toString(),Messages.getString(\"JobEntryFTP.MoveToFolderNotExist\"));\r\n\t\t\t\t\t\tresult.setNrErrors(1);\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Get all the files in the current directory...\r\n\t\t\tString[] filelist = ftpclient.dir();\r\n\t\t    if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.FoundNFiles\", String.valueOf(filelist.length))); //$NON-NLS-1$\r\n\t\t    \r\n\t\t\t// set transfertype ...\r\n\t\t\tif (binaryMode) \r\n\t\t\t{\r\n\t\t\t\tftpclient.setType(FTPTransferType.BINARY);\r\n\t\t        if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetBinary\")); //$NON-NLS-1$\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tftpclient.setType(FTPTransferType.ASCII);\r\n\t\t        if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetAscii\")); //$NON-NLS-1$\r\n\t\t\t}\r\n\r\n\t\t\t// Some FTP servers return a message saying no files found as a string in the filenlist\r\n\t\t\t// e.g. Solaris 8\r\n\t\t\t// CHECK THIS !!!\r\n\t\t\t\r\n\t\t\tif (filelist.length == 1)\r\n\t\t\t{\r\n\t\t\t\tString translatedWildcard = environmentSubstitute(wildcard);\r\n\t\t\t\tif(!Const.isEmpty(translatedWildcard)){\r\n\t\t\t\t  if (filelist[0].startsWith(translatedWildcard))\r\n\t\t\t\t  {\r\n\t\t\t\t    throw new FTPException(filelist[0]);\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t\tPattern pattern = null;\r\n\t\t\tif (!Const.isEmpty(wildcard)) \r\n\t\t\t{\r\n                String realWildcard = environmentSubstitute(wildcard);\r\n                pattern = Pattern.compile(realWildcard);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(!getSuccessCondition().equals(SUCCESS_IF_NO_ERRORS))\r\n\t\t\t\tlimitFiles=Const.toInt(environmentSubstitute(getLimit()),10);\r\n\t\t\t\r\n\t\t\t// Get the files in the list...\r\n\t\t\tfor (int i=0;i<filelist.length && !parentJob.isStopped();i++)\r\n\t\t\t{\r\n\t\t\t\tif(successConditionBroken){\r\n\t\t\t\t\tlog.logError(toString(), Messages.getString(\"JobEntryFTP.Error.SuccessConditionbroken\",\"\"+NrErrors));\r\n\t\t\t\t\tdisplayResults(log);\r\n\t\t\t\t\tthrow new Exception(Messages.getString(\"JobEntryFTP.SuccesConditionBroken\",\"\"+NrErrors));\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\tboolean getIt = true;\r\n\t\t\t\t\r\n\t\t\t\tif(log.isDebug()) log.logDebug(toString(), Messages.getString(\"JobEntryFTP.AnalysingFile\",filelist[i]));\r\n\t\t\t\t\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\t// First see if the file matches the regular expression!\r\n\t\t\t\t\tif (pattern!=null){\r\n\t\t\t\t\t\tMatcher matcher = pattern.matcher(filelist[i]);\r\n\t\t\t\t\t\tgetIt = matcher.matches();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//The idea here is to take only files (exclude folders)\r\n\t\t\t\t\t// also exclude fetching sub folders !\r\n\t\t\t\t\t// Please do not use fileDetails(\r\n\t\t\t\t\t// because this method use command called MLST. \r\n\t\t\t\t\t// which is a recent feature not supported by all FTP servers\r\n\t\t\t\t\tFTPFile[] finfo = ftpclient.dirDetails(filelist[i]); \r\n\t\t\t\t\tif(finfo[0].isDir() || !filelist[i].equals(finfo[0].getName())) getIt=false;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (getIt)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttargetFilename = getTargetFilename(filelist[i]);\r\n\r\n\t                    if ((!onlyGettingNewFiles) ||\r\n\t                    \t(onlyGettingNewFiles && needsDownload(targetFilename)))\r\n\t                    {\r\n\t                    \tif(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.GettingFile\", filelist[i], environmentSubstitute(targetDirectory)));  //$NON-NLS-1$\r\n\t    \t\t\t\t\tftpclient.get(targetFilename, filelist[i]);\r\n\t\t\t\t\t\t\t\t\t\r\n\t    \t\t\t\t\t // Update retrieved files\r\n\t    \t\t\t\t\tupdateRetrievedFiles();\r\n    \t\t\t            if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.GotFile\", filelist[i])); //$NON-NLS-1$\r\n\t    \t\t\t\t\t\r\n    \t\t\t            // Add filename to result filenames\r\n    \t\t\t            addFilenameToResultFilenames(log, result, parentJob, targetFilename);\r\n\r\n\t\t\t\t\t\t\t// Delete the file if this is needed!\r\n\t\t\t\t\t\t\tif (remove) {\r\n\t\t\t\t\t\t\t\tftpclient.delete(filelist[i]);\r\n\t\t\t\t\t\t\t\tif(log.isDetailed()) \r\n\t\t\t\t\t\t            if(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.DeletedFile\", filelist[i])); //$NON-NLS-1$\r\n\t\t\t\t\t\t\t}else\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif(movefiles){\r\n\t\t\t\t\t\t\t\t\t// Try to move file to destination folder ...\r\n\t\t\t\t\t\t\t\t\tftpclient.rename(filelist[i], realMoveToFolder+'/'+filelist[i]);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif(log.isDetailed()) \r\n\t\t\t\t\t\t\t\t\t\tlog.logDetailed(toString(), Messages.getString(\"JobEntryFTP.MovedFile\",filelist[i],realMoveToFolder));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t                    }\r\n\t\t\t\t\t}\r\n\t\t\t\t}catch (Exception e){\r\n\t\t\t\t\t// Update errors number\r\n\t\t\t\t\tupdateErrors();\r\n\t\t\t\t\tlog.logError(toString(),Messages.getString(\"JobFTP.UnexpectedError\",e.getMessage()));\r\n\t\t\t\t}\r\n\t\t\t} // end for\r\n\t\t}\r\n\t\tcatch(Exception e){\r\n\t\t\tupdateErrors();\r\n\t\t\tlog.logError(toString(), Messages.getString(\"JobEntryFTP.ErrorGetting\", e.getMessage())); //$NON-NLS-1$\r\n            log.logError(toString(), Const.getStackTracker(e));\r\n\t\t}\r\n        finally{\r\n            if (ftpclient!=null && ftpclient.connected()) {\r\n                try {\r\n                    ftpclient.quit();\r\n                }\r\n                catch(Exception e) {\r\n                \tlog.logError(toString(), Messages.getString(\"JobEntryFTP.ErrorQuitting\", e.getMessage())); //$NON-NLS-1$\r\n                }\r\n            }\r\n        }\r\n\t\t\r\n\t\t\r\n\t\tresult.setNrErrors(NrErrors);\r\n\t\tresult.setNrFilesRetrieved(NrfilesRetrieved);\r\n\t\tif(getSuccessStatus())\tresult.setResult(true);\r\n\t\tdisplayResults(log);\r\n\t\treturn result;\r\n\t}","commit_id":"e3ab8d03ba341d783a7f6c4bc614f8643e3d8c67","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void checkRemoteFolder(String remoteFoldername)\r\n    {\r\n    \tif(!Const.isEmpty(remoteFoldername))\r\n    \t{\r\n\t    \tif(connectToFTP(true,remoteFoldername))\r\n\t    \t{\r\n\t\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_INFORMATION );\r\n\t\t\t\tmb.setMessage(Messages.getString(\"JobFTP.FolderExists.OK\",wMoveToDirectory.getText()) +Const.CR);\r\n\t\t\t\tmb.setText(Messages.getString(\"JobFTP.FolderExists.Title.Ok\"));\r\n\t\t\t\tmb.open();\r\n\t\t\t}else\r\n\t\t\t{\r\n\t\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\t\tmb.setMessage(Messages.getString(\"JobFTP.FolderExists.NOK\",wMoveToDirectory.getText()) +Const.CR);\r\n\t\t\t\tmb.setText(Messages.getString(\"JobFTP.FolderExists.Title.Bad\"));\r\n\t\t\t\tmb.open(); \r\n\t\t    }\r\n    \t}\r\n    }","id":63946,"modified_method":"private void checkRemoteFolder(boolean FTPFolfer,boolean checkMoveFolder,String foldername)\r\n    {\r\n    \tif(!Const.isEmpty(foldername))\r\n    \t{\r\n\t    \tif(connectToFTP(FTPFolfer,checkMoveFolder))\r\n\t    \t{\r\n\t\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_INFORMATION );\r\n\t\t\t\tmb.setMessage(Messages.getString(\"JobFTP.FolderExists.OK\",foldername) +Const.CR);\r\n\t\t\t\tmb.setText(Messages.getString(\"JobFTP.FolderExists.Title.Ok\"));\r\n\t\t\t\tmb.open();\r\n\t\t\t}else\r\n\t\t\t{\r\n\t\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\t\tmb.setMessage(Messages.getString(\"JobFTP.FolderExists.NOK\",foldername) +Const.CR);\r\n\t\t\t\tmb.setText(Messages.getString(\"JobFTP.FolderExists.Title.Bad\"));\r\n\t\t\t\tmb.open(); \r\n\t\t    }\r\n    \t}\r\n    }","commit_id":"e3ab8d03ba341d783a7f6c4bc614f8643e3d8c67","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean connectToFTP(boolean checkfolder,String remoteFoldername)\r\n    {\r\n    \tboolean retval=false;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif(ftpclient==null || !ftpclient.connected())\r\n\t\t\t{\r\n\t\t    \t // Create ftp client to host:port ...\r\n\t\t        ftpclient = new FTPClient();\r\n\t\t        String realServername = jobMeta.environmentSubstitute(wServerName.getText());\r\n\t\t        ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n\t\t        \r\n\t\t        if (!Const.isEmpty(wProxyHost.getText())) \r\n\t\t        {\r\n\t\t      \t  String realProxy_host = jobMeta.environmentSubstitute(wProxyHost.getText());\r\n\t\t      \t  ftpclient.setRemoteAddr(InetAddress.getByName(realProxy_host));\r\n\t\t\r\n\t\t      \t  // FIXME: Proper default port for proxy    \t  \r\n\t\t      \t  int port = Const.toInt(jobMeta.environmentSubstitute(wProxyHost.getText()), 21);\r\n\t\t      \t  if (port != 0) \r\n\t\t      \t  {\r\n\t\t      \t     ftpclient.setRemotePort(port);\r\n\t\t      \t  }\r\n\t\t        } \r\n\t\t        else \r\n\t\t        {\r\n\t\t            ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n\t\t                           \r\n\t\t        }\r\n\t\r\n\t\t        // login to ftp host ...\r\n\t\t        ftpclient.connect();     \r\n\t\t        String realUsername = jobMeta.environmentSubstitute(wUserName.getText()) +\r\n\t\t                              (!Const.isEmpty(wProxyHost.getText()) ? \"@\" + realServername : \"\") + \r\n\t\t                              (!Const.isEmpty(wProxyUsername.getText()) ? \" \" + jobMeta.environmentSubstitute(wProxyUsername.getText()) \r\n\t\t                          \t\t                           : \"\"); \r\n\t\t           \t\t            \r\n\t\t        String realPassword = jobMeta.environmentSubstitute(wPassword.getText()) + \r\n\t\t                              (!Const.isEmpty(wProxyPassword.getText()) ? \" \" + jobMeta.environmentSubstitute(wProxyPassword.getText()) : \"\" );\r\n\t\t        // login now ...\r\n\t\t        ftpclient.login(realUsername, realPassword);\r\n\t\t\t}  \r\n\t        if(checkfolder)\r\n\t        {\r\n\t        \t// move to spool dir ...\r\n\t\t\t\tif (!Const.isEmpty(remoteFoldername))\r\n\t\t\t\t{\r\n\t                String realFtpDirectory = jobMeta.environmentSubstitute(remoteFoldername);\r\n\t\t\t\t\tftpclient.chdir(realFtpDirectory);\r\n\t\t\t\t}\r\n\t        \tretval=true;\r\n\t        \t\r\n\t        }\r\n\t        \t\r\n\t        \t\r\n\t        retval=true;\r\n\t\t}\r\n\t     catch (Exception e)\r\n\t    {\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTP.ErrorConnect.NOK\",e.getMessage()) +Const.CR);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTP.ErrorConnect.Title.Bad\"));\r\n\t\t\tmb.open(); \r\n\t    } \r\n\t    return retval;\r\n    }","id":63947,"modified_method":"private boolean connectToFTP(boolean checkfolder,boolean checkmoveToFolder)\r\n    {\r\n    \tboolean retval=false;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif(ftpclient==null || !ftpclient.connected())\r\n\t\t\t{\r\n\t\t    \t // Create ftp client to host:port ...\r\n\t\t        ftpclient = new FTPClient();\r\n\t\t        String realServername = jobMeta.environmentSubstitute(wServerName.getText());\r\n\t\t        ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n\t\t        \r\n\t\t        if (!Const.isEmpty(wProxyHost.getText())) \r\n\t\t        {\r\n\t\t      \t  String realProxy_host = jobMeta.environmentSubstitute(wProxyHost.getText());\r\n\t\t      \t  ftpclient.setRemoteAddr(InetAddress.getByName(realProxy_host));\r\n\t\t\r\n\t\t      \t  // FIXME: Proper default port for proxy    \t  \r\n\t\t      \t  int port = Const.toInt(jobMeta.environmentSubstitute(wProxyHost.getText()), 21);\r\n\t\t      \t  if (port != 0) \r\n\t\t      \t  {\r\n\t\t      \t     ftpclient.setRemotePort(port);\r\n\t\t      \t  }\r\n\t\t        } \r\n\t\t        else \r\n\t\t        {\r\n\t\t            ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\r\n\t\t                           \r\n\t\t        }\r\n\t\r\n\t\t        // login to ftp host ...\r\n\t\t        ftpclient.connect();     \r\n\t\t        String realUsername = jobMeta.environmentSubstitute(wUserName.getText()) +\r\n\t\t                              (!Const.isEmpty(wProxyHost.getText()) ? \"@\" + realServername : \"\") + \r\n\t\t                              (!Const.isEmpty(wProxyUsername.getText()) ? \" \" + jobMeta.environmentSubstitute(wProxyUsername.getText()) \r\n\t\t                          \t\t                           : \"\"); \r\n\t\t           \t\t            \r\n\t\t        String realPassword = jobMeta.environmentSubstitute(wPassword.getText()) + \r\n\t\t                              (!Const.isEmpty(wProxyPassword.getText()) ? \" \" + jobMeta.environmentSubstitute(wProxyPassword.getText()) : \"\" );\r\n\t\t        // login now ...\r\n\t\t        ftpclient.login(realUsername, realPassword);\r\n\t\t\t}  \r\n\t\t\t\r\n\t\t\t\r\n\t\t\tString realFtpDirectory =\"\";\r\n\t\t\tif (!Const.isEmpty(wFtpDirectory.getText()))\r\n\t\t\t\trealFtpDirectory = jobMeta.environmentSubstitute(wFtpDirectory.getText());\r\n\t\t\t\r\n\t        if(checkfolder)\r\n\t        {\r\n\t        \tftpclient.chdir(\"/\");\r\n\t        \t// move to spool dir ...\r\n\t\t\t\tif (!Const.isEmpty(realFtpDirectory))\r\n\t\t\t\t\tftpclient.chdir(realFtpDirectory);\r\n\t        }\r\n\t        if(checkmoveToFolder)\r\n\t        {\t   \r\n\t        \tftpclient.chdir(\"/\");\r\n\t        \t// move to folder ...\r\n\t\t\t\tif (!Const.isEmpty(wMoveToDirectory.getText()))\r\n\t\t\t\t{\r\n\t                String realMoveDirectory = jobMeta.environmentSubstitute(wMoveToDirectory.getText());\r\n\t                if(!Const.isEmpty(realFtpDirectory))\r\n\t                {\r\n\t                \trealMoveDirectory=realFtpDirectory+\"/\"+realMoveDirectory;\r\n\t                \tftpclient.chdir(realMoveDirectory);\r\n\t                }\r\n\t\t\t\t}\t\r\n\t        }\r\n\r\n\t        retval=true;\r\n\t\t}\r\n\t     catch (Exception e)\r\n\t    {\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTP.ErrorConnect.NOK\",e.getMessage()) +Const.CR);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTP.ErrorConnect.Title.Bad\"));\r\n\t\t\tmb.open(); \r\n\t    } \r\n\t    return retval;\r\n    }","commit_id":"e3ab8d03ba341d783a7f6c4bc614f8643e3d8c67","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void test()\r\n    {\r\n\t\t\r\n    \tif(connectToFTP(false,null))\r\n    \t{\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_INFORMATION );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTP.Connected.OK\",wServerName.getText()) +Const.CR);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTP.Connected.Title.Ok\"));\r\n\t\t\tmb.open();\r\n\t\t}else\r\n\t\t{\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTP.Connected.NOK.ConnectionBad\",wServerName.getText()) +Const.CR);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTP.Connected.Title.Bad\"));\r\n\t\t\tmb.open(); \r\n\t    }\r\n\t   \r\n    }","id":63948,"modified_method":"private void test()\r\n    {\r\n\t\t\r\n    \tif(connectToFTP(false,false))\r\n    \t{\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_INFORMATION );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTP.Connected.OK\",wServerName.getText()) +Const.CR);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTP.Connected.Title.Ok\"));\r\n\t\t\tmb.open();\r\n\t\t}else\r\n\t\t{\r\n\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\r\n\t\t\tmb.setMessage(Messages.getString(\"JobFTP.Connected.NOK.ConnectionBad\",wServerName.getText()) +Const.CR);\r\n\t\t\tmb.setText(Messages.getString(\"JobFTP.Connected.Title.Bad\"));\r\n\t\t\tmb.open(); \r\n\t    }\r\n\t   \r\n    }","commit_id":"e3ab8d03ba341d783a7f6c4bc614f8643e3d8c67","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public JobEntryInterface open()\r\n    {\r\n        Shell parent = getParent();\r\n        Display display = parent.getDisplay();\r\n\r\n        shell = new Shell(parent, props.getJobsDialogStyle());\r\n        props.setLook(shell);\r\n        JobDialog.setShellImage(shell, jobEntry);\r\n\r\n        ModifyListener lsMod = new ModifyListener()\r\n        {\r\n            public void modifyText(ModifyEvent e)\r\n            {\r\n            \tftpclient=null;\r\n                jobEntry.setChanged();\r\n            }\r\n        };\r\n        changed = jobEntry.hasChanged();\r\n\r\n        FormLayout formLayout = new FormLayout();\r\n        formLayout.marginWidth = Const.FORM_MARGIN;\r\n        formLayout.marginHeight = Const.FORM_MARGIN;\r\n\r\n        shell.setLayout(formLayout);\r\n        shell.setText(Messages.getString(\"JobFTP.Title\"));\r\n\r\n        int middle = props.getMiddlePct();\r\n        int margin = Const.MARGIN;\r\n\r\n        // Job entry name line\r\n        wName = new LabelText(shell, Messages.getString(\"JobFTP.Name.Label\"), Messages\r\n            .getString(\"JobFTP.Name.Tooltip\"));\r\n        wName.addModifyListener(lsMod);\r\n        fdName = new FormData();\r\n        fdName.top = new FormAttachment(0, 0);\r\n        fdName.left = new FormAttachment(0, 0);\r\n        fdName.right = new FormAttachment(100, 0);\r\n        wName.setLayoutData(fdName);\r\n        \r\n        \r\n        wTabFolder = new CTabFolder(shell, SWT.BORDER);\r\n \t\tprops.setLook(wTabFolder, Props.WIDGET_STYLE_TAB);\r\n \t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF GENERAL TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\twGeneralTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twGeneralTab.setText(Messages.getString(\"JobFTP.Tab.General.Label\"));\r\n\t\t\r\n\t\twGeneralComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wGeneralComp);\r\n\r\n\t\tFormLayout generalLayout = new FormLayout();\r\n\t\tgeneralLayout.marginWidth  = 3;\r\n\t\tgeneralLayout.marginHeight = 3;\r\n\t\twGeneralComp.setLayout(generalLayout);\r\n        \r\n\t     // ////////////////////////\r\n\t     // START OF SERVER SETTINGS GROUP///\r\n\t     // /\r\n\t    wServerSettings = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wServerSettings);\r\n\t    wServerSettings.setText(Messages.getString(\"JobFTP.ServerSettings.Group.Label\"));\r\n\r\n\t    FormLayout ServerSettingsgroupLayout = new FormLayout();\r\n\t    ServerSettingsgroupLayout.marginWidth = 10;\r\n\t    ServerSettingsgroupLayout.marginHeight = 10;\r\n\r\n\t    wServerSettings.setLayout(ServerSettingsgroupLayout);\r\n\r\n        // ServerName line\r\n        wServerName = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.Server.Label\"), Messages\r\n            .getString(\"JobFTP.Server.Tooltip\"));\r\n        props.setLook(wServerName);\r\n        wServerName.addModifyListener(lsMod);\r\n        fdServerName = new FormData();\r\n        fdServerName.left = new FormAttachment(0, 0);\r\n        fdServerName.top = new FormAttachment(wName, margin);\r\n        fdServerName.right = new FormAttachment(100, 0);\r\n        wServerName.setLayoutData(fdServerName);\r\n        \r\n        // Server port line\r\n        wPort = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.Port.Label\"), Messages.getString(\"JobFTP.Port.Tooltip\"));\r\n        props.setLook(wPort);\r\n        wPort.addModifyListener(lsMod);\r\n        fdPort = new FormData();\r\n        fdPort.left \t= new FormAttachment(0, 0);\r\n        fdPort.top  \t= new FormAttachment(wServerName, margin);\r\n        fdPort.right\t= new FormAttachment(100, 0);\r\n        wPort.setLayoutData(fdPort);\r\n\r\n        // UserName line\r\n        wUserName = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.User.Label\"), Messages\r\n            .getString(\"JobFTP.User.Tooltip\"));\r\n        props.setLook(wUserName);\r\n        wUserName.addModifyListener(lsMod);\r\n        fdUserName = new FormData();\r\n        fdUserName.left = new FormAttachment(0, 0);\r\n        fdUserName.top = new FormAttachment(wPort, margin);\r\n        fdUserName.right = new FormAttachment(100, 0);\r\n        wUserName.setLayoutData(fdUserName);\r\n\r\n        // Password line\r\n        wPassword = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.Password.Label\"), Messages\r\n            .getString(\"JobFTP.Password.Tooltip\"));\r\n        props.setLook(wPassword);\r\n        wPassword.setEchoChar('*');\r\n        wPassword.addModifyListener(lsMod);\r\n        fdPassword = new FormData();\r\n        fdPassword.left = new FormAttachment(0, 0);\r\n        fdPassword.top = new FormAttachment(wUserName, margin);\r\n        fdPassword.right = new FormAttachment(100, 0);\r\n        wPassword.setLayoutData(fdPassword);\r\n\r\n        // OK, if the password contains a variable, we don't want to have the password hidden...\r\n        wPassword.getTextWidget().addModifyListener(new ModifyListener()\r\n        {\r\n            public void modifyText(ModifyEvent e)\r\n            {\r\n                checkPasswordVisible();\r\n            }\r\n        });\r\n\r\n        \r\n        // Proxy host line\r\n        wProxyHost = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.ProxyHost.Label\"), Messages.getString(\"JobFTP.ProxyHost.Tooltip\"));\r\n        props.setLook(wProxyHost);\r\n        wProxyHost.addModifyListener(lsMod);\r\n        fdProxyHost = new FormData();\r\n        fdProxyHost.left \t= new FormAttachment(0, 0);\r\n        fdProxyHost.top\t\t= new FormAttachment(wPassword, 2*margin);\r\n        fdProxyHost.right\t= new FormAttachment(100, 0);\r\n        wProxyHost.setLayoutData(fdProxyHost);\r\n\r\n        // Proxy port line\r\n        wProxyPort = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.ProxyPort.Label\"), Messages.getString(\"JobFTP.ProxyPort.Tooltip\"));\r\n        props.setLook(wProxyPort);\r\n        wProxyPort.addModifyListener(lsMod);\r\n        fdProxyPort = new FormData();\r\n        fdProxyPort.left \t= new FormAttachment(0, 0);\r\n        fdProxyPort.top  \t= new FormAttachment(wProxyHost, margin);\r\n        fdProxyPort.right\t= new FormAttachment(100, 0);\r\n        wProxyPort.setLayoutData(fdProxyPort);\r\n\r\n        // Proxy username line\r\n        wProxyUsername = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.ProxyUsername.Label\"), Messages.getString(\"JobFTP.ProxyUsername.Tooltip\"));\r\n        props.setLook(wProxyUsername);\r\n        wProxyUsername.addModifyListener(lsMod);\r\n        fdProxyUsername = new FormData();\r\n        fdProxyUsername.left = new FormAttachment(0, 0);\r\n        fdProxyUsername.top  = new FormAttachment(wProxyPort, margin);\r\n        fdProxyUsername.right= new FormAttachment(100, 0);\r\n        wProxyUsername.setLayoutData(fdProxyUsername);\r\n        \r\n        // Proxy password line\r\n        wProxyPassword = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.ProxyPassword.Label\"), Messages.getString(\"JobFTP.ProxyPassword.Tooltip\"));\r\n        props.setLook(wProxyPassword);\r\n        wProxyPassword.addModifyListener(lsMod);\r\n        fdProxyPasswd=new FormData();\r\n        fdProxyPasswd.left = new FormAttachment(0, 0);\r\n        fdProxyPasswd.top  = new FormAttachment(wProxyUsername, margin);\r\n        fdProxyPasswd.right= new FormAttachment(100, 0);\r\n        wProxyPassword.setLayoutData(fdProxyPasswd);\r\n        \r\n\t\t// Test connection button\r\n\t\twTest=new Button(wServerSettings,SWT.PUSH);\r\n\t\twTest.setText(Messages.getString(\"JobFTP.TestConnection.Label\"));\r\n \t\tprops.setLook(wTest);\r\n\t\tfdTest=new FormData();\r\n\t\twTest.setToolTipText(Messages.getString(\"JobFTP.TestConnection.Tooltip\"));\r\n\t\t//fdTest.left = new FormAttachment(middle, 0);\r\n\t\tfdTest.top  = new FormAttachment(wProxyPassword, margin);\r\n\t\tfdTest.right= new FormAttachment(100, 0);\r\n\t\twTest.setLayoutData(fdTest);\r\n        \r\n        \r\n\t     fdServerSettings = new FormData();\r\n\t     fdServerSettings.left = new FormAttachment(0, margin);\r\n\t     fdServerSettings.top = new FormAttachment(wName, margin);\r\n\t     fdServerSettings.right = new FormAttachment(100, -margin);\r\n\t     wServerSettings.setLayoutData(fdServerSettings);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF SERVER SETTINGS GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n        \r\n\r\n\t     // ////////////////////////\r\n\t     // START OF Advanced SETTINGS GROUP///\r\n\t     // /\r\n\t     wAdvancedSettings = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n\t     props.setLook(wAdvancedSettings);\r\n\t     wAdvancedSettings.setText(Messages.getString(\"JobFTP.AdvancedSettings.Group.Label\"));\r\n\t     FormLayout AdvancedSettingsgroupLayout = new FormLayout();\r\n\t     AdvancedSettingsgroupLayout.marginWidth = 10;\r\n\t     AdvancedSettingsgroupLayout.marginHeight = 10;\r\n\t     wAdvancedSettings.setLayout(AdvancedSettingsgroupLayout);\r\n\r\n\t    \r\n\t     // Binary mode selection...\r\n        wlBinaryMode = new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlBinaryMode.setText(Messages.getString(\"JobFTP.BinaryMode.Label\"));\r\n        props.setLook(wlBinaryMode);\r\n        fdlBinaryMode = new FormData();\r\n        fdlBinaryMode.left = new FormAttachment(0, 0);\r\n        fdlBinaryMode.top = new FormAttachment(wServerSettings, margin);\r\n        fdlBinaryMode.right = new FormAttachment(middle, 0);\r\n        wlBinaryMode.setLayoutData(fdlBinaryMode);\r\n        wBinaryMode = new Button(wAdvancedSettings, SWT.CHECK);\r\n        props.setLook(wBinaryMode);\r\n        wBinaryMode.setToolTipText(Messages.getString(\"JobFTP.BinaryMode.Tooltip\"));\r\n        fdBinaryMode = new FormData();\r\n        fdBinaryMode.left = new FormAttachment(middle, margin);\r\n        fdBinaryMode.top = new FormAttachment(wServerSettings, margin);\r\n        fdBinaryMode.right = new FormAttachment(100, 0);\r\n        wBinaryMode.setLayoutData(fdBinaryMode);\r\n\r\n        // Timeout line\r\n        wTimeout = new LabelTextVar(jobMeta,wAdvancedSettings, Messages.getString(\"JobFTP.Timeout.Label\"), Messages\r\n            .getString(\"JobFTP.Timeout.Tooltip\"));\r\n        props.setLook(wTimeout);\r\n        wTimeout.addModifyListener(lsMod);\r\n        fdTimeout = new FormData();\r\n        fdTimeout.left = new FormAttachment(0, 0);\r\n        fdTimeout.top = new FormAttachment(wlBinaryMode, margin);\r\n        fdTimeout.right = new FormAttachment(100, 0);\r\n        wTimeout.setLayoutData(fdTimeout);\r\n\r\n\r\n        // active connection?\r\n        wlActive = new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlActive.setText(Messages.getString(\"JobFTP.ActiveConns.Label\"));\r\n        props.setLook(wlActive);\r\n        fdlActive = new FormData();\r\n        fdlActive.left = new FormAttachment(0, 0);\r\n        fdlActive.top = new FormAttachment(wTimeout, margin);\r\n        fdlActive.right = new FormAttachment(middle, 0);\r\n        wlActive.setLayoutData(fdlActive);\r\n        wActive = new Button(wAdvancedSettings, SWT.CHECK);\r\n        wActive.setToolTipText(Messages.getString(\"JobFTP.ActiveConns.Tooltip\"));\r\n        props.setLook(wActive);\r\n        fdActive = new FormData();\r\n        fdActive.left = new FormAttachment(middle, margin);\r\n        fdActive.top = new FormAttachment(wTimeout, margin);\r\n        fdActive.right = new FormAttachment(100, 0);\r\n        wActive.setLayoutData(fdActive);\r\n        \r\n        // Control encoding line\r\n        //\r\n        // The drop down is editable as it may happen an encoding may not be present\r\n        // on one machine, but you may want to use it on your execution server\r\n        //\r\n        wlControlEncoding=new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlControlEncoding.setText(Messages.getString(\"JobFTP.ControlEncoding.Label\"));\r\n        props.setLook(wlControlEncoding);\r\n        fdlControlEncoding=new FormData();\r\n        fdlControlEncoding.left  = new FormAttachment(0, 0);\r\n        fdlControlEncoding.top   = new FormAttachment(wActive, margin);\r\n        fdlControlEncoding.right = new FormAttachment(middle, 0);\r\n        wlControlEncoding.setLayoutData(fdlControlEncoding);\r\n        wControlEncoding=new Combo(wAdvancedSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n        wControlEncoding.setToolTipText(Messages.getString(\"JobFTP.ControlEncoding.Tooltip\"));\r\n        wControlEncoding.setItems(encodings);\r\n        props.setLook(wControlEncoding);\r\n        fdControlEncoding=new FormData();\r\n        fdControlEncoding.left = new FormAttachment(middle, margin);\r\n        fdControlEncoding.top  = new FormAttachment(wActive, margin);\r\n        fdControlEncoding.right= new FormAttachment(100, 0);        \r\n        wControlEncoding.setLayoutData(fdControlEncoding);\r\n    \r\n\t    \r\n\t     fdAdvancedSettings = new FormData();\r\n\t     fdAdvancedSettings.left = new FormAttachment(0, margin);\r\n\t     fdAdvancedSettings.top = new FormAttachment(wServerSettings, margin);\r\n\t     fdAdvancedSettings.right = new FormAttachment(100, -margin);\r\n\t     wAdvancedSettings.setLayoutData(fdAdvancedSettings);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF Advanced SETTINGS GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n\r\n\t\tfdGeneralComp=new FormData();\r\n\t\tfdGeneralComp.left  = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.top   = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.right = new FormAttachment(100, 0);\r\n\t\tfdGeneralComp.bottom= new FormAttachment(100, 0);\r\n\t\twGeneralComp.setLayoutData(fdGeneralComp);\r\n\t\t\r\n\t\twGeneralComp.layout();\r\n\t\twGeneralTab.setControl(wGeneralComp);\r\n \t\tprops.setLook(wGeneralComp);\r\n \t\t\r\n \t\t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF GENERAL TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF Files TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n \t\twFilesTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twFilesTab.setText(Messages.getString(\"JobFTP.Tab.Files.Label\"));\r\n\t\t\r\n\t\twFilesComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wFilesComp);\r\n\r\n\t\tFormLayout FilesLayout = new FormLayout();\r\n\t\tFilesLayout.marginWidth  = 3;\r\n\t\tFilesLayout.marginHeight = 3;\r\n\t\twFilesComp.setLayout(FilesLayout);\r\n \t\t\r\n\t\t // ////////////////////////\r\n\t     // START OF Remote SETTINGS GROUP///\r\n\t     // /\r\n\t    wRemoteSettings = new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wRemoteSettings);\r\n\t    wRemoteSettings.setText(Messages.getString(\"JobFTP.RemoteSettings.Group.Label\"));\r\n\r\n\t    FormLayout RemoteSettinsgroupLayout = new FormLayout();\r\n\t    RemoteSettinsgroupLayout.marginWidth = 10;\r\n\t    RemoteSettinsgroupLayout.marginHeight = 10;\r\n\r\n\t    wRemoteSettings.setLayout(RemoteSettinsgroupLayout);\r\n\t    \r\n\t    \r\n        // Move to directory\r\n        wlFtpDirectory = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlFtpDirectory.setText(Messages.getString(\"JobFTP.RemoteDir.Label\"));\r\n        props.setLook(wlFtpDirectory);\r\n        fdlFtpDirectory= new FormData();\r\n        fdlFtpDirectory.left = new FormAttachment(0, 0);\r\n        fdlFtpDirectory.top = new FormAttachment(0, margin);\r\n        fdlFtpDirectory.right = new FormAttachment(middle, 0);\r\n        wlFtpDirectory.setLayoutData(fdlFtpDirectory);\r\n\t    \r\n\t    // Test remote folder  button ...\r\n\t\twbTestChangeFolderExists=new Button(wRemoteSettings, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTestChangeFolderExists);\r\n\t\twbTestChangeFolderExists.setText(Messages.getString(\"JobFTP.TestFolderExists.Label\"));\r\n\t\tfdbTestChangeFolderExists=new FormData();\r\n\t\tfdbTestChangeFolderExists.right= new FormAttachment(100, 0);\r\n\t\tfdbTestChangeFolderExists.top  = new FormAttachment(0, margin);\r\n\t\twbTestChangeFolderExists.setLayoutData(fdbTestChangeFolderExists);\r\n\r\n        wFtpDirectory = new TextVar(jobMeta,wRemoteSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n           .getString(\"JobFTP.RemoteDir.Tooltip\"));\r\n       props.setLook(wFtpDirectory);\r\n       wFtpDirectory.addModifyListener(lsMod);\r\n       fdFtpDirectory = new FormData();\r\n       fdFtpDirectory.left = new FormAttachment(middle, margin);\r\n       fdFtpDirectory.top = new FormAttachment(0, margin);\r\n       fdFtpDirectory.right = new FormAttachment(wbTestChangeFolderExists, -margin);\r\n       wFtpDirectory.setLayoutData(fdFtpDirectory);\r\n       \r\n        \r\n        // Wildcard line\r\n        wWildcard = new LabelTextVar(jobMeta,wRemoteSettings, Messages.getString(\"JobFTP.Wildcard.Label\"), Messages\r\n            .getString(\"JobFTP.Wildcard.Tooltip\"));\r\n        props.setLook(wWildcard);\r\n        wWildcard.addModifyListener(lsMod);\r\n        fdWildcard = new FormData();\r\n        fdWildcard.left = new FormAttachment(0, 0);\r\n        fdWildcard.top = new FormAttachment(wFtpDirectory, margin);\r\n        fdWildcard.right = new FormAttachment(100, 0);\r\n        wWildcard.setLayoutData(fdWildcard);\r\n        \r\n        // Remove files after retrieval...\r\n        wlRemove = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlRemove.setText(Messages.getString(\"JobFTP.RemoveFiles.Label\"));\r\n        props.setLook(wlRemove);\r\n        fdlRemove = new FormData();\r\n        fdlRemove.left = new FormAttachment(0, 0);\r\n        fdlRemove.top = new FormAttachment(wWildcard, margin);\r\n        fdlRemove.right = new FormAttachment(middle, 0);\r\n        wlRemove.setLayoutData(fdlRemove);\r\n        wRemove = new Button(wRemoteSettings, SWT.CHECK);\r\n        wRemove.setToolTipText(Messages.getString(\"JobFTP.RemoveFiles.Tooltip\"));\r\n        props.setLook(wRemove);\r\n        fdRemove = new FormData();\r\n        fdRemove.left = new FormAttachment(middle, margin);\r\n        fdRemove.top = new FormAttachment(wWildcard, margin);\r\n        fdRemove.right = new FormAttachment(100, 0);\r\n        wRemove.setLayoutData(fdRemove);\r\n        \r\n        wRemove.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tif(wRemove.getSelection())\r\n\t\t\t\t{\r\n\t\t\t\t\twMove.setSelection(false);\r\n\t\t\t\t\tactivateMoveTo();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n        \r\n        // Move files after the transfert?...\r\n        wlMove = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlMove.setText(Messages.getString(\"JobFTP.MoveFiles.Label\"));\r\n        props.setLook(wlMove);\r\n        fdlMove = new FormData();\r\n        fdlMove.left = new FormAttachment(0, 0);\r\n        fdlMove.top = new FormAttachment(wRemove, margin);\r\n        fdlMove.right = new FormAttachment(middle, -margin);\r\n        wlMove.setLayoutData(fdlMove);\r\n        wMove = new Button(wRemoteSettings, SWT.CHECK);\r\n        props.setLook(wMove);\r\n        wMove.setToolTipText(Messages.getString(\"JobFTP.MoveFiles.Tooltip\"));\r\n        fdMove = new FormData();\r\n        fdMove.left = new FormAttachment(middle, margin);\r\n        fdMove.top = new FormAttachment(wRemove, margin);\r\n        fdMove.right = new FormAttachment(100, 0);\r\n        wMove.setLayoutData(fdMove);\r\n        wMove.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tactivateMoveTo();\r\n\t\t\t\tif(wMove.getSelection())\r\n\t\t\t\t{\r\n\t\t\t\t\twRemove.setSelection(false);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n        \r\n        // Move to directory\r\n        wlMoveToDirectory = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlMoveToDirectory.setText(Messages.getString(\"JobFTP.CreateMoveFolder.Label\"));\r\n        props.setLook(wlMoveToDirectory);\r\n        fdlMoveToDirectory= new FormData();\r\n        fdlMoveToDirectory.left = new FormAttachment(0, 0);\r\n        fdlMoveToDirectory.top = new FormAttachment(wMove, margin);\r\n        fdlMoveToDirectory.right = new FormAttachment(middle, 0);\r\n        wlMoveToDirectory.setLayoutData(fdlMoveToDirectory);\r\n        \r\n\t    // Test remote folder  button ...\r\n\t\twbTestFolderExists=new Button(wRemoteSettings, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTestFolderExists);\r\n\t\twbTestFolderExists.setText(Messages.getString(\"JobFTP.TestFolderExists.Label\"));\r\n\t\tfdbTestFolderExists=new FormData();\r\n\t\tfdbTestFolderExists.right= new FormAttachment(100, 0);\r\n\t\tfdbTestFolderExists.top  = new FormAttachment(wMove, margin);\r\n\t\twbTestFolderExists.setLayoutData(fdbTestFolderExists);\r\n        \r\n        wMoveToDirectory = new TextVar(jobMeta,wRemoteSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n            .getString(\"JobFTP.MoveToDirectory.Tooltip\"));\r\n        props.setLook(wMoveToDirectory);\r\n        wMoveToDirectory.addModifyListener(lsMod);\r\n        fdMoveToDirectory = new FormData();\r\n        fdMoveToDirectory.left = new FormAttachment(middle, margin);\r\n        fdMoveToDirectory.top = new FormAttachment(wMove, margin);\r\n        fdMoveToDirectory.right = new FormAttachment(wbTestFolderExists, -margin);\r\n        wMoveToDirectory.setLayoutData(fdMoveToDirectory);\r\n        \r\n        \r\n        // create destination folder?...\r\n        wlCreateMoveFolder = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlCreateMoveFolder.setText(Messages.getString(\"JobFTP.CreateMoveFolder.Label\"));\r\n        props.setLook(wlCreateMoveFolder);\r\n        fdlCreateMoveFolder = new FormData();\r\n        fdlCreateMoveFolder.left = new FormAttachment(0, 0);\r\n        fdlCreateMoveFolder.top = new FormAttachment(wMoveToDirectory, margin);\r\n        fdlCreateMoveFolder.right = new FormAttachment(middle, 0);\r\n        wlCreateMoveFolder.setLayoutData(fdlCreateMoveFolder);\r\n        wCreateMoveFolder = new Button(wRemoteSettings, SWT.CHECK);\r\n        wCreateMoveFolder.setToolTipText(Messages.getString(\"JobFTP.CreateMoveFolder.Tooltip\"));\r\n        props.setLook(wCreateMoveFolder);\r\n        fdCreateMoveFolder = new FormData();\r\n        fdCreateMoveFolder.left = new FormAttachment(middle, margin);\r\n        fdCreateMoveFolder.top = new FormAttachment(wMoveToDirectory, margin);\r\n        fdCreateMoveFolder.right = new FormAttachment(100, 0);\r\n        wCreateMoveFolder.setLayoutData(fdCreateMoveFolder);\r\n      \r\n        fdRemoteSettings = new FormData();\r\n        fdRemoteSettings.left = new FormAttachment(0, margin);\r\n        fdRemoteSettings.top = new FormAttachment(0, 2*margin);\r\n        fdRemoteSettings.right = new FormAttachment(100, -margin);\r\n        wRemoteSettings.setLayoutData(fdRemoteSettings);\r\n       // ///////////////////////////////////////////////////////////\r\n       // / END OF Remote SETTINGSGROUP\r\n       // ///////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t // ////////////////////////\r\n\t     // START OF LOCAL SETTINGS GROUP///\r\n\t     // /\r\n\t    wLocalSettings = new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wLocalSettings);\r\n\t    wLocalSettings.setText(Messages.getString(\"JobFTP.LocalSettings.Group.Label\"));\r\n\r\n\t    FormLayout LocalSettinsgroupLayout = new FormLayout();\r\n\t    LocalSettinsgroupLayout.marginWidth = 10;\r\n\t    LocalSettinsgroupLayout.marginHeight = 10;\r\n\r\n\t    wLocalSettings.setLayout(LocalSettinsgroupLayout);\r\n\t      \r\n\t     \r\n\t     \r\n\t    // TargetDirectory\r\n\t\twlTargetDirectory = new Label(wLocalSettings, SWT.RIGHT);\r\n\t\twlTargetDirectory.setText(Messages.getString(\"JobFTP.TargetDir.Label\"));\r\n\t\tprops.setLook(wlTargetDirectory);\r\n\t\tfdlTargetDirectory = new FormData();\r\n\t\tfdlTargetDirectory.left = new FormAttachment(0, 0);\r\n\t\tfdlTargetDirectory.top = new FormAttachment(wRemoteSettings, margin);\r\n\t\tfdlTargetDirectory.right = new FormAttachment(middle, -margin);\r\n\t\twlTargetDirectory.setLayoutData(fdlTargetDirectory);\r\n\t\t\r\n\t    // Browse folders button ...\r\n\t\twbTargetDirectory=new Button(wLocalSettings, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTargetDirectory);\r\n\t\twbTargetDirectory.setText(Messages.getString(\"JobFTP.BrowseFolders.Label\"));\r\n\t\tfdbTargetDirectory=new FormData();\r\n\t\tfdbTargetDirectory.right= new FormAttachment(100, 0);\r\n\t\tfdbTargetDirectory.top  = new FormAttachment(wRemoteSettings, margin);\r\n\t\twbTargetDirectory.setLayoutData(fdbTargetDirectory);\r\n\t\twbTargetDirectory.addSelectionListener\r\n\t\t\t(\r\n\t\t\t\tnew SelectionAdapter()\r\n\t\t\t\t{\r\n\t\t\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tDirectoryDialog ddialog = new DirectoryDialog(shell, SWT.OPEN);\r\n\t\t\t\t\t\tif (wTargetDirectory.getText()!=null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tddialog.setFilterPath(jobMeta.environmentSubstitute(wTargetDirectory.getText()) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t // Calling open() will open and run the dialog.\r\n\t\t\t\t        // It will return the selected directory, or\r\n\t\t\t\t        // null if user cancels\r\n\t\t\t\t        String dir = ddialog.open();\r\n\t\t\t\t        if (dir != null) {\r\n\t\t\t\t          // Set the text box to the new selection\r\n\t\t\t\t        \twTargetDirectory.setText(dir);\r\n\t\t\t\t        }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\r\n\t\twTargetDirectory = new TextVar(jobMeta,wLocalSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n\t\t\t.getString(\"JobFTP.TargetDir.Tooltip\"));\r\n\t\tprops.setLook(wTargetDirectory);\r\n\t\twTargetDirectory.addModifyListener(lsMod);\r\n\t\tfdTargetDirectory = new FormData();\r\n\t\tfdTargetDirectory.left = new FormAttachment(middle, margin);\r\n\t\tfdTargetDirectory.top = new FormAttachment(wRemoteSettings, margin);\r\n\t\tfdTargetDirectory.right = new FormAttachment(wbTargetDirectory, -margin);\r\n\t\twTargetDirectory.setLayoutData(fdTargetDirectory);\r\n\t\t\r\n\r\n       \r\n       \r\n\t   \t// Create multi-part file?\r\n\t   \twlAddDate=new Label(wLocalSettings, SWT.RIGHT);\r\n\t   \twlAddDate.setText(Messages.getString(\"JobFTP.AddDate.Label\"));\r\n\t   \t\tprops.setLook(wlAddDate);\r\n\t   \tfdlAddDate=new FormData();\r\n\t   \tfdlAddDate.left = new FormAttachment(0, 0);\r\n\t   \tfdlAddDate.top  = new FormAttachment(wTargetDirectory, margin);\r\n\t   \tfdlAddDate.right= new FormAttachment(middle, -margin);\r\n\t   \twlAddDate.setLayoutData(fdlAddDate);\r\n\t   \twAddDate=new Button(wLocalSettings, SWT.CHECK);\r\n   \t\tprops.setLook(wAddDate);\r\n   \t\twAddDate.setToolTipText(Messages.getString(\"JobFTP.AddDate.Tooltip\"));\r\n\t   \tfdAddDate=new FormData();\r\n\t   \tfdAddDate.left = new FormAttachment(middle, margin);\r\n\t   \tfdAddDate.top  = new FormAttachment(wTargetDirectory, margin);\r\n\t   \tfdAddDate.right= new FormAttachment(100, 0);\r\n\t   \twAddDate.setLayoutData(fdAddDate);\r\n\t   \twAddDate.addSelectionListener(new SelectionAdapter() \r\n\t   \t\t{\r\n\t   \t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t   \t\t\t{\r\n\t   \t\t\t\tjobEntry.setChanged();\r\n\t   \t\t\t}\r\n\t   \t\t}\r\n\t   \t);\r\n\t   \t// Create multi-part file?\r\n\t   \twlAddTime=new Label(wLocalSettings, SWT.RIGHT);\r\n\t   \twlAddTime.setText(Messages.getString(\"JobFTP.AddTime.Label\"));\r\n   \t\tprops.setLook(wlAddTime);\r\n\t   \tfdlAddTime=new FormData();\r\n\t   \tfdlAddTime.left = new FormAttachment(0, 0);\r\n\t   \tfdlAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t   \tfdlAddTime.right= new FormAttachment(middle, -margin);\r\n\t   \twlAddTime.setLayoutData(fdlAddTime);\r\n\t   \twAddTime=new Button(wLocalSettings, SWT.CHECK);\r\n   \t\tprops.setLook(wAddTime);\r\n   \t\twAddTime.setToolTipText(Messages.getString(\"JobFTP.AddTime.Tooltip\"));\r\n\t   \tfdAddTime=new FormData();\r\n\t   \tfdAddTime.left = new FormAttachment(middle, margin);\r\n\t   \tfdAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t   \tfdAddTime.right= new FormAttachment(100, 0);\r\n\t   \twAddTime.setLayoutData(fdAddTime);\r\n\t   \twAddTime.addSelectionListener(new SelectionAdapter() \r\n\t   \t\t{\r\n\t   \t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t   \t\t\t{\r\n\t   \t\t\t\tjobEntry.setChanged();\r\n\t   \t\t\t}\r\n\t   \t\t}\r\n\t   \t);\r\n\t   \t\r\n\t   \t// Specify date time format?\r\n\t   \twlSpecifyFormat=new Label(wLocalSettings, SWT.RIGHT);\r\n\t   \twlSpecifyFormat.setText(Messages.getString(\"JobFTP.SpecifyFormat.Label\"));\r\n\t   \tprops.setLook(wlSpecifyFormat);\r\n\t   \tfdlSpecifyFormat=new FormData();\r\n\t   \tfdlSpecifyFormat.left = new FormAttachment(0, 0);\r\n\t   \tfdlSpecifyFormat.top  = new FormAttachment(wAddTime, margin);\r\n\t   \tfdlSpecifyFormat.right= new FormAttachment(middle, -margin);\r\n\t   \twlSpecifyFormat.setLayoutData(fdlSpecifyFormat);\r\n\t   \twSpecifyFormat=new Button(wLocalSettings, SWT.CHECK);\r\n\t   \tprops.setLook(wSpecifyFormat);\r\n\t   \twSpecifyFormat.setToolTipText(Messages.getString(\"JobFTP.SpecifyFormat.Tooltip\"));\r\n       fdSpecifyFormat=new FormData();\r\n\t   \tfdSpecifyFormat.left = new FormAttachment(middle, margin);\r\n\t   \tfdSpecifyFormat.top  = new FormAttachment(wAddTime, margin);\r\n\t   \tfdSpecifyFormat.right= new FormAttachment(100, 0);\r\n\t   \twSpecifyFormat.setLayoutData(fdSpecifyFormat);\r\n\t   \twSpecifyFormat.addSelectionListener(new SelectionAdapter() \r\n\t   \t\t{\r\n\t   \t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t   \t\t\t{\r\n\t   \t\t\t\tjobEntry.setChanged();\r\n\t   \t\t\t\tsetDateTimeFormat();\r\n\t   \t\t\t\tsetAddDateBeforeExtension();\r\n\t   \t\t\t}\r\n\t   \t\t}\r\n\t   \t);\r\n\r\n   \t\r\n\t   \t//\tPrepare a list of possible DateTimeFormats...\r\n\t   \tString dats[] = Const.getDateFormats();\r\n   \t\r\n   \t\t// DateTimeFormat\r\n\t   \twlDateTimeFormat=new Label(wLocalSettings, SWT.RIGHT);\r\n       wlDateTimeFormat.setText(Messages.getString(\"JobFTP.DateTimeFormat.Label\"));\r\n       props.setLook(wlDateTimeFormat);\r\n       fdlDateTimeFormat=new FormData();\r\n       fdlDateTimeFormat.left = new FormAttachment(0, 0);\r\n       fdlDateTimeFormat.top  = new FormAttachment(wSpecifyFormat, margin);\r\n       fdlDateTimeFormat.right= new FormAttachment(middle, -margin);\r\n       wlDateTimeFormat.setLayoutData(fdlDateTimeFormat);\r\n       wDateTimeFormat=new CCombo(wLocalSettings, SWT.BORDER | SWT.READ_ONLY);\r\n       wDateTimeFormat.setEditable(true);\r\n       props.setLook(wDateTimeFormat);\r\n       wDateTimeFormat.addModifyListener(lsMod);\r\n       fdDateTimeFormat=new FormData();\r\n       fdDateTimeFormat.left = new FormAttachment(middle, margin);\r\n       fdDateTimeFormat.top  = new FormAttachment(wSpecifyFormat, margin);\r\n       fdDateTimeFormat.right= new FormAttachment(100, 0);\r\n       wDateTimeFormat.setLayoutData(fdDateTimeFormat);\r\n       for (int x=0;x<dats.length;x++) wDateTimeFormat.add(dats[x]);\r\n       \r\n       // Add Date before extension?\r\n       wlAddDateBeforeExtension = new Label(wLocalSettings, SWT.RIGHT);\r\n       wlAddDateBeforeExtension.setText(Messages.getString(\"JobFTP.AddDateBeforeExtension.Label\"));\r\n       props.setLook(wlAddDateBeforeExtension);\r\n       fdlAddDateBeforeExtension = new FormData();\r\n       fdlAddDateBeforeExtension.left = new FormAttachment(0, 0);\r\n       fdlAddDateBeforeExtension.top = new FormAttachment(wDateTimeFormat, margin);\r\n       fdlAddDateBeforeExtension.right = new FormAttachment(middle, -margin);\r\n       wlAddDateBeforeExtension.setLayoutData(fdlAddDateBeforeExtension);\r\n       wAddDateBeforeExtension = new Button(wLocalSettings, SWT.CHECK);\r\n       props.setLook(wAddDateBeforeExtension);\r\n       wAddDateBeforeExtension.setToolTipText(Messages.getString(\"JobFTP.AddDateBeforeExtension.Tooltip\"));\r\n       fdAddDateBeforeExtension = new FormData();\r\n       fdAddDateBeforeExtension.left = new FormAttachment(middle, margin);\r\n       fdAddDateBeforeExtension.top = new FormAttachment(wDateTimeFormat, margin);\r\n       fdAddDateBeforeExtension.right = new FormAttachment(100, 0);\r\n       wAddDateBeforeExtension.setLayoutData(fdAddDateBeforeExtension);\r\n       wAddDateBeforeExtension.addSelectionListener(new SelectionAdapter()\r\n       {\r\n           public void widgetSelected(SelectionEvent e)\r\n           {\r\n               jobEntry.setChanged();\r\n           }\r\n       });\r\n\r\n       \r\n       // OnlyNew files after retrieval...\r\n       wlOnlyNew = new Label(wLocalSettings, SWT.RIGHT);\r\n       wlOnlyNew.setText(Messages.getString(\"JobFTP.DontOverwrite.Label\"));\r\n       props.setLook(wlOnlyNew);\r\n       fdlOnlyNew = new FormData();\r\n       fdlOnlyNew.left = new FormAttachment(0, 0);\r\n       fdlOnlyNew.top = new FormAttachment(wAddDateBeforeExtension, margin);\r\n       fdlOnlyNew.right = new FormAttachment(middle, 0);\r\n       wlOnlyNew.setLayoutData(fdlOnlyNew);\r\n       wOnlyNew = new Button(wLocalSettings, SWT.CHECK);\r\n       wOnlyNew.setToolTipText(Messages.getString(\"JobFTP.DontOverwrite.Tooltip\"));\r\n       props.setLook(wOnlyNew);\r\n       fdOnlyNew = new FormData();\r\n       fdOnlyNew.left = new FormAttachment(middle, margin);\r\n       fdOnlyNew.top = new FormAttachment(wAddDateBeforeExtension, margin);\r\n       fdOnlyNew.right = new FormAttachment(100, 0);\r\n       wOnlyNew.setLayoutData(fdOnlyNew);\r\n       wOnlyNew.addSelectionListener(new SelectionAdapter()\r\n       {\r\n           public void widgetSelected(SelectionEvent e)\r\n           {\r\n        \t   activeIfExists();\r\n               jobEntry.setChanged();\r\n           }\r\n       });\r\n       \r\n       // Add filenames to result filenames...\r\n       wlAddFilenameToResult = new Label(wLocalSettings, SWT.RIGHT);\r\n       wlAddFilenameToResult.setText(Messages.getString(\"JobFTP.AddFilenameToResult.Label\"));\r\n       props.setLook(wlAddFilenameToResult);\r\n       fdlAddFilenameToResult = new FormData();\r\n       fdlAddFilenameToResult.left = new FormAttachment(0, 0);\r\n       fdlAddFilenameToResult.top = new FormAttachment(wAddDateBeforeExtension, margin);\r\n       fdlAddFilenameToResult.right = new FormAttachment(middle, 0);\r\n       wlAddFilenameToResult.setLayoutData(fdlAddFilenameToResult);\r\n       wAddFilenameToResult = new Button(wLocalSettings, SWT.CHECK);\r\n       wAddFilenameToResult.setToolTipText(Messages.getString(\"JobFTP.AddFilenameToResult.Tooltip\"));\r\n       props.setLook(wAddFilenameToResult);\r\n       fdAddFilenameToResult = new FormData();\r\n       fdAddFilenameToResult.left = new FormAttachment(middle, margin);\r\n       fdAddFilenameToResult.top = new FormAttachment(wAddDateBeforeExtension, margin);\r\n       fdAddFilenameToResult.right = new FormAttachment(100, 0);\r\n       wAddFilenameToResult.setLayoutData(fdAddFilenameToResult);\r\n       \r\n       // If File Exists\r\n\t\twlIfFileExists = new Label(wLocalSettings, SWT.RIGHT);\r\n\t\twlIfFileExists.setText(Messages.getString(\"JobFTP.IfFileExists.Label\"));\r\n\t\tprops.setLook(wlIfFileExists);\r\n\t\tfdlIfFileExists = new FormData();\r\n\t\tfdlIfFileExists.left = new FormAttachment(0, 0);\r\n\t\tfdlIfFileExists.right = new FormAttachment(middle, 0);\r\n\t\tfdlIfFileExists.top = new FormAttachment(wOnlyNew, margin);\r\n\t\twlIfFileExists.setLayoutData(fdlIfFileExists);\r\n\t\twIfFileExists = new CCombo(wLocalSettings, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n\t\twIfFileExists.add(Messages.getString(\"JobFTP.Skip.Label\"));\r\n\t\twIfFileExists.add(Messages.getString(\"JobFTP.Give_Unique_Name.Label\"));\r\n\t\twIfFileExists.add(Messages.getString(\"JobFTP.Fail.Label\"));\r\n\t\twIfFileExists.select(0); // +1: starts at -1\r\n\r\n\t\tprops.setLook(wIfFileExists);\r\n\t\tfdIfFileExists= new FormData();\r\n\t\tfdIfFileExists.left = new FormAttachment(middle, 0);\r\n\t\tfdIfFileExists.top = new FormAttachment(wOnlyNew, margin);\r\n\t\tfdIfFileExists.right = new FormAttachment(100, 0);\r\n\t\twIfFileExists.setLayoutData(fdIfFileExists);\r\n\r\n\t\tfdIfFileExists = new FormData();\r\n\t\tfdIfFileExists.left = new FormAttachment(middle, margin);\r\n\t\tfdIfFileExists.top = new FormAttachment(wOnlyNew, margin);\r\n\t\tfdIfFileExists.right = new FormAttachment(100, 0);\r\n\t\twIfFileExists.setLayoutData(fdIfFileExists);\r\n\t\t\r\n\t\twIfFileExists.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n       // Add filenames to result filenames...\r\n       wlAddFilenameToResult = new Label(wLocalSettings, SWT.RIGHT);\r\n       wlAddFilenameToResult.setText(Messages.getString(\"JobFTP.AddFilenameToResult.Label\"));\r\n       props.setLook(wlAddFilenameToResult);\r\n       fdlAddFilenameToResult = new FormData();\r\n       fdlAddFilenameToResult.left = new FormAttachment(0, 0);\r\n       fdlAddFilenameToResult.top = new FormAttachment(wIfFileExists, 2*margin);\r\n       fdlAddFilenameToResult.right = new FormAttachment(middle, 0);\r\n       wlAddFilenameToResult.setLayoutData(fdlAddFilenameToResult);\r\n       wAddFilenameToResult = new Button(wLocalSettings, SWT.CHECK);\r\n       wAddFilenameToResult.setToolTipText(Messages.getString(\"JobFTP.AddFilenameToResult.Tooltip\"));\r\n       props.setLook(wAddFilenameToResult);\r\n       fdAddFilenameToResult = new FormData();\r\n       fdAddFilenameToResult.left = new FormAttachment(middle, margin);\r\n       fdAddFilenameToResult.top = new FormAttachment(wIfFileExists, 2*margin);\r\n       fdAddFilenameToResult.right = new FormAttachment(100, 0);\r\n       wAddFilenameToResult.setLayoutData(fdAddFilenameToResult);\r\n       \r\n       \r\n      fdLocalSettings = new FormData();\r\n      fdLocalSettings.left = new FormAttachment(0, margin);\r\n      fdLocalSettings.top = new FormAttachment(wRemoteSettings, margin);\r\n      fdLocalSettings.right = new FormAttachment(100, -margin);\r\n      wLocalSettings.setLayoutData(fdLocalSettings);\r\n      // ///////////////////////////////////////////////////////////\r\n      // / END OF LOCAL SETTINGSGROUP\r\n      // ///////////////////////////////////////////////////////////\r\n\t\t\r\n\t\tfdFilesComp=new FormData();\r\n\t\tfdFilesComp.left  = new FormAttachment(0, 0);\r\n\t\tfdFilesComp.top   = new FormAttachment(0, 0);\r\n\t\tfdFilesComp.right = new FormAttachment(100, 0);\r\n\t\tfdFilesComp.bottom= new FormAttachment(100, 0);\r\n\t\twFilesComp.setLayoutData(fdFilesComp);\r\n\t\t\r\n\t\twFilesComp.layout();\r\n\t\twFilesTab.setControl(wFilesComp);\r\n \t\tprops.setLook(wFilesComp);\r\n \t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF Files TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF Advanced TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n\r\n\t\twAdvancedTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twAdvancedTab.setText(Messages.getString(\"JobFTP.Tab.Advanced.Label\"));\r\n\t\t\r\n\t\twAdvancedComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wAdvancedComp);\r\n\r\n\t\tFormLayout AdvancedLayout = new FormLayout();\r\n\t\tAdvancedLayout.marginWidth  = 3;\r\n\t\tAdvancedLayout.marginHeight = 3;\r\n\t\twAdvancedComp.setLayout(AdvancedLayout);\r\n\t\t\r\n\t\t // SuccessOngrouping?\r\n\t     // ////////////////////////\r\n\t     // START OF SUCCESS ON GROUP///\r\n\t     // /\r\n\t    wSuccessOn= new Group(wAdvancedComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wSuccessOn);\r\n\t    wSuccessOn.setText(Messages.getString(\"JobFTP.SuccessOn.Group.Label\"));\r\n\r\n\t    FormLayout successongroupLayout = new FormLayout();\r\n\t    successongroupLayout.marginWidth = 10;\r\n\t    successongroupLayout.marginHeight = 10;\r\n\r\n\t    wSuccessOn.setLayout(successongroupLayout);\r\n\t    \r\n\r\n\t    //Success Condition\r\n\t  \twlSuccessCondition = new Label(wSuccessOn, SWT.RIGHT);\r\n\t  \twlSuccessCondition.setText(Messages.getString(\"JobFTP.SuccessCondition.Label\") + \" \");\r\n\t  \tprops.setLook(wlSuccessCondition);\r\n\t  \tfdlSuccessCondition = new FormData();\r\n\t  \tfdlSuccessCondition.left = new FormAttachment(0, 0);\r\n\t  \tfdlSuccessCondition.right = new FormAttachment(middle, 0);\r\n\t  \tfdlSuccessCondition.top = new FormAttachment(0, margin);\r\n\t  \twlSuccessCondition.setLayoutData(fdlSuccessCondition);\r\n\t  \twSuccessCondition = new CCombo(wSuccessOn, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTP.SuccessWhenAllWorksFine.Label\"));\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTP.SuccessWhenAtLeat.Label\"));\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTP.SuccessWhenNrErrorsLessThan.Label\"));\r\n\t  \twSuccessCondition.select(0); // +1: starts at -1\r\n\t  \t\r\n\t\tprops.setLook(wSuccessCondition);\r\n\t\tfdSuccessCondition= new FormData();\r\n\t\tfdSuccessCondition.left = new FormAttachment(middle, 0);\r\n\t\tfdSuccessCondition.top = new FormAttachment(0, margin);\r\n\t\tfdSuccessCondition.right = new FormAttachment(100, 0);\r\n\t\twSuccessCondition.setLayoutData(fdSuccessCondition);\r\n\t\twSuccessCondition.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tactiveSuccessCondition();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Success when number of errors less than\r\n\t\twlNrErrorsLessThan= new Label(wSuccessOn, SWT.RIGHT);\r\n\t\twlNrErrorsLessThan.setText(Messages.getString(\"JobFTP.NrBadFormedLessThan.Label\") + \" \");\r\n\t\tprops.setLook(wlNrErrorsLessThan);\r\n\t\tfdlNrErrorsLessThan= new FormData();\r\n\t\tfdlNrErrorsLessThan.left = new FormAttachment(0, 0);\r\n\t\tfdlNrErrorsLessThan.top = new FormAttachment(wSuccessCondition, margin);\r\n\t\tfdlNrErrorsLessThan.right = new FormAttachment(middle, -margin);\r\n\t\twlNrErrorsLessThan.setLayoutData(fdlNrErrorsLessThan);\r\n\t\t\r\n\t\t\r\n\t\twNrErrorsLessThan= new TextVar(jobMeta,wSuccessOn, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n\t\t\t.getString(\"JobFTP.NrBadFormedLessThan.Tooltip\"));\r\n\t\tprops.setLook(wNrErrorsLessThan);\r\n\t\twNrErrorsLessThan.addModifyListener(lsMod);\r\n\t\tfdNrErrorsLessThan= new FormData();\r\n\t\tfdNrErrorsLessThan.left = new FormAttachment(middle, 0);\r\n\t\tfdNrErrorsLessThan.top = new FormAttachment(wSuccessCondition, margin);\r\n\t\tfdNrErrorsLessThan.right = new FormAttachment(100, -margin);\r\n\t\twNrErrorsLessThan.setLayoutData(fdNrErrorsLessThan);\r\n\t\t\r\n\t\r\n\t    fdSuccessOn= new FormData();\r\n\t    fdSuccessOn.left = new FormAttachment(0, margin);\r\n\t    fdSuccessOn.top = new FormAttachment(0, margin);\r\n\t    fdSuccessOn.right = new FormAttachment(100, -margin);\r\n\t    wSuccessOn.setLayoutData(fdSuccessOn);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF Success ON GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tfdAdvancedComp=new FormData();\r\n\t\tfdAdvancedComp.left  = new FormAttachment(0, 0);\r\n\t\tfdAdvancedComp.top   = new FormAttachment(0, 0);\r\n\t\tfdAdvancedComp.right = new FormAttachment(100, 0);\r\n\t\tfdAdvancedComp.bottom= new FormAttachment(100, 0);\r\n\t\twAdvancedComp.setLayoutData(fdAdvancedComp);\r\n\t\t\r\n\t\twAdvancedComp.layout();\r\n\t\twAdvancedTab.setControl(wAdvancedComp);\r\n \t\tprops.setLook(wAdvancedComp);\r\n \t\t\r\n \t\t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF Advanced TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t\r\n\t\tfdTabFolder = new FormData();\r\n\t\tfdTabFolder.left  = new FormAttachment(0, 0);\r\n\t\tfdTabFolder.top   = new FormAttachment(wName, margin);\r\n\t\tfdTabFolder.right = new FormAttachment(100, 0);\r\n\t\tfdTabFolder.bottom= new FormAttachment(100, -50);\r\n\t\twTabFolder.setLayoutData(fdTabFolder);\r\n\t\t\r\n\t\t\r\n\r\n        wOK = new Button(shell, SWT.PUSH);\r\n        wOK.setText(Messages.getString(\"System.Button.OK\"));\r\n        wCancel = new Button(shell, SWT.PUSH);\r\n        wCancel.setText(Messages.getString(\"System.Button.Cancel\"));\r\n\r\n        BaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, wTabFolder);\r\n\r\n        // Add listeners\r\n        lsCancel = new Listener()\r\n        {\r\n            public void handleEvent(Event e)\r\n            {\r\n                cancel();\r\n            }\r\n        };\r\n        lsOK = new Listener()\r\n        {\r\n            public void handleEvent(Event e)\r\n            {\r\n                ok();\r\n            }\r\n        };\r\n        lsTest     = new Listener() { public void handleEvent(Event e) { test(); } };\r\n        lsCheckFolder     = new Listener() { public void handleEvent(Event e) { checkRemoteFolder(wMoveToDirectory.getText()); } };\r\n        lsCheckChangeFolder     = new Listener() { public void handleEvent(Event e) { checkRemoteFolder(wFtpDirectory.getText()); } };\r\n        \r\n        wCancel.addListener(SWT.Selection, lsCancel);\r\n        wOK.addListener(SWT.Selection, lsOK);\r\n        wTest.addListener    (SWT.Selection, lsTest    );\r\n        wbTestFolderExists.addListener    (SWT.Selection, lsCheckFolder    );\r\n        wbTestChangeFolderExists.addListener    (SWT.Selection, lsCheckChangeFolder    );\r\n        \r\n        lsDef = new SelectionAdapter()\r\n        {\r\n            public void widgetDefaultSelected(SelectionEvent e)\r\n            {\r\n                ok();\r\n            }\r\n        };\r\n\r\n        wName.addSelectionListener(lsDef);\r\n        wServerName.addSelectionListener(lsDef);\r\n        wUserName.addSelectionListener(lsDef);\r\n        wPassword.addSelectionListener(lsDef);\r\n        wFtpDirectory.addSelectionListener(lsDef);\r\n        wTargetDirectory.addSelectionListener(lsDef);\r\n        wFtpDirectory.addSelectionListener(lsDef);\r\n        wWildcard.addSelectionListener(lsDef);\r\n        wTimeout.addSelectionListener(lsDef);\r\n\r\n        // Detect X or ALT-F4 or something that kills this window...\r\n        shell.addShellListener(new ShellAdapter()\r\n        {\r\n            public void shellClosed(ShellEvent e)\r\n            {\r\n                cancel();\r\n            }\r\n        });\r\n\r\n        getData();\r\n        activateMoveTo();\r\n        setDateTimeFormat();\r\n        setAddDateBeforeExtension();\r\n        activeSuccessCondition();\r\n        activeIfExists();\r\n        \r\n        wTabFolder.setSelection(0);\r\n        BaseStepDialog.setSize(shell);\r\n\r\n        shell.open();\r\n        props.setDialogSize(shell, \"JobFTPDialogSize\");\r\n        while (!shell.isDisposed())\r\n        {\r\n            if (!display.readAndDispatch())\r\n                display.sleep();\r\n        }\r\n        return jobEntry;\r\n    }","id":63949,"modified_method":"public JobEntryInterface open()\r\n    {\r\n        Shell parent = getParent();\r\n        Display display = parent.getDisplay();\r\n\r\n        shell = new Shell(parent, props.getJobsDialogStyle());\r\n        props.setLook(shell);\r\n        JobDialog.setShellImage(shell, jobEntry);\r\n\r\n        ModifyListener lsMod = new ModifyListener()\r\n        {\r\n            public void modifyText(ModifyEvent e)\r\n            {\r\n            \tftpclient=null;\r\n                jobEntry.setChanged();\r\n            }\r\n        };\r\n        changed = jobEntry.hasChanged();\r\n\r\n        FormLayout formLayout = new FormLayout();\r\n        formLayout.marginWidth = Const.FORM_MARGIN;\r\n        formLayout.marginHeight = Const.FORM_MARGIN;\r\n\r\n        shell.setLayout(formLayout);\r\n        shell.setText(Messages.getString(\"JobFTP.Title\"));\r\n\r\n        int middle = props.getMiddlePct();\r\n        int margin = Const.MARGIN;\r\n\r\n        // Job entry name line\r\n        wName = new LabelText(shell, Messages.getString(\"JobFTP.Name.Label\"), Messages\r\n            .getString(\"JobFTP.Name.Tooltip\"));\r\n        wName.addModifyListener(lsMod);\r\n        fdName = new FormData();\r\n        fdName.top = new FormAttachment(0, 0);\r\n        fdName.left = new FormAttachment(0, 0);\r\n        fdName.right = new FormAttachment(100, 0);\r\n        wName.setLayoutData(fdName);\r\n        \r\n        \r\n        wTabFolder = new CTabFolder(shell, SWT.BORDER);\r\n \t\tprops.setLook(wTabFolder, Props.WIDGET_STYLE_TAB);\r\n \t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF GENERAL TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\twGeneralTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twGeneralTab.setText(Messages.getString(\"JobFTP.Tab.General.Label\"));\r\n\t\t\r\n\t\twGeneralComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wGeneralComp);\r\n\r\n\t\tFormLayout generalLayout = new FormLayout();\r\n\t\tgeneralLayout.marginWidth  = 3;\r\n\t\tgeneralLayout.marginHeight = 3;\r\n\t\twGeneralComp.setLayout(generalLayout);\r\n        \r\n\t     // ////////////////////////\r\n\t     // START OF SERVER SETTINGS GROUP///\r\n\t     // /\r\n\t    wServerSettings = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wServerSettings);\r\n\t    wServerSettings.setText(Messages.getString(\"JobFTP.ServerSettings.Group.Label\"));\r\n\r\n\t    FormLayout ServerSettingsgroupLayout = new FormLayout();\r\n\t    ServerSettingsgroupLayout.marginWidth = 10;\r\n\t    ServerSettingsgroupLayout.marginHeight = 10;\r\n\r\n\t    wServerSettings.setLayout(ServerSettingsgroupLayout);\r\n\r\n        // ServerName line\r\n        wServerName = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.Server.Label\"), Messages\r\n            .getString(\"JobFTP.Server.Tooltip\"));\r\n        props.setLook(wServerName);\r\n        wServerName.addModifyListener(lsMod);\r\n        fdServerName = new FormData();\r\n        fdServerName.left = new FormAttachment(0, 0);\r\n        fdServerName.top = new FormAttachment(wName, margin);\r\n        fdServerName.right = new FormAttachment(100, 0);\r\n        wServerName.setLayoutData(fdServerName);\r\n        \r\n        // Server port line\r\n        wPort = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.Port.Label\"), Messages.getString(\"JobFTP.Port.Tooltip\"));\r\n        props.setLook(wPort);\r\n        wPort.addModifyListener(lsMod);\r\n        fdPort = new FormData();\r\n        fdPort.left \t= new FormAttachment(0, 0);\r\n        fdPort.top  \t= new FormAttachment(wServerName, margin);\r\n        fdPort.right\t= new FormAttachment(100, 0);\r\n        wPort.setLayoutData(fdPort);\r\n\r\n        // UserName line\r\n        wUserName = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.User.Label\"), Messages\r\n            .getString(\"JobFTP.User.Tooltip\"));\r\n        props.setLook(wUserName);\r\n        wUserName.addModifyListener(lsMod);\r\n        fdUserName = new FormData();\r\n        fdUserName.left = new FormAttachment(0, 0);\r\n        fdUserName.top = new FormAttachment(wPort, margin);\r\n        fdUserName.right = new FormAttachment(100, 0);\r\n        wUserName.setLayoutData(fdUserName);\r\n\r\n        // Password line\r\n        wPassword = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.Password.Label\"), Messages\r\n            .getString(\"JobFTP.Password.Tooltip\"));\r\n        props.setLook(wPassword);\r\n        wPassword.setEchoChar('*');\r\n        wPassword.addModifyListener(lsMod);\r\n        fdPassword = new FormData();\r\n        fdPassword.left = new FormAttachment(0, 0);\r\n        fdPassword.top = new FormAttachment(wUserName, margin);\r\n        fdPassword.right = new FormAttachment(100, 0);\r\n        wPassword.setLayoutData(fdPassword);\r\n\r\n        // OK, if the password contains a variable, we don't want to have the password hidden...\r\n        wPassword.getTextWidget().addModifyListener(new ModifyListener()\r\n        {\r\n            public void modifyText(ModifyEvent e)\r\n            {\r\n                checkPasswordVisible();\r\n            }\r\n        });\r\n\r\n        \r\n        // Proxy host line\r\n        wProxyHost = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.ProxyHost.Label\"), Messages.getString(\"JobFTP.ProxyHost.Tooltip\"));\r\n        props.setLook(wProxyHost);\r\n        wProxyHost.addModifyListener(lsMod);\r\n        fdProxyHost = new FormData();\r\n        fdProxyHost.left \t= new FormAttachment(0, 0);\r\n        fdProxyHost.top\t\t= new FormAttachment(wPassword, 2*margin);\r\n        fdProxyHost.right\t= new FormAttachment(100, 0);\r\n        wProxyHost.setLayoutData(fdProxyHost);\r\n\r\n        // Proxy port line\r\n        wProxyPort = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.ProxyPort.Label\"), Messages.getString(\"JobFTP.ProxyPort.Tooltip\"));\r\n        props.setLook(wProxyPort);\r\n        wProxyPort.addModifyListener(lsMod);\r\n        fdProxyPort = new FormData();\r\n        fdProxyPort.left \t= new FormAttachment(0, 0);\r\n        fdProxyPort.top  \t= new FormAttachment(wProxyHost, margin);\r\n        fdProxyPort.right\t= new FormAttachment(100, 0);\r\n        wProxyPort.setLayoutData(fdProxyPort);\r\n\r\n        // Proxy username line\r\n        wProxyUsername = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.ProxyUsername.Label\"), Messages.getString(\"JobFTP.ProxyUsername.Tooltip\"));\r\n        props.setLook(wProxyUsername);\r\n        wProxyUsername.addModifyListener(lsMod);\r\n        fdProxyUsername = new FormData();\r\n        fdProxyUsername.left = new FormAttachment(0, 0);\r\n        fdProxyUsername.top  = new FormAttachment(wProxyPort, margin);\r\n        fdProxyUsername.right= new FormAttachment(100, 0);\r\n        wProxyUsername.setLayoutData(fdProxyUsername);\r\n        \r\n        // Proxy password line\r\n        wProxyPassword = new LabelTextVar(jobMeta,wServerSettings, Messages.getString(\"JobFTP.ProxyPassword.Label\"), Messages.getString(\"JobFTP.ProxyPassword.Tooltip\"));\r\n        props.setLook(wProxyPassword);\r\n        wProxyPassword.addModifyListener(lsMod);\r\n        fdProxyPasswd=new FormData();\r\n        fdProxyPasswd.left = new FormAttachment(0, 0);\r\n        fdProxyPasswd.top  = new FormAttachment(wProxyUsername, margin);\r\n        fdProxyPasswd.right= new FormAttachment(100, 0);\r\n        wProxyPassword.setLayoutData(fdProxyPasswd);\r\n        \r\n\t\t// Test connection button\r\n\t\twTest=new Button(wServerSettings,SWT.PUSH);\r\n\t\twTest.setText(Messages.getString(\"JobFTP.TestConnection.Label\"));\r\n \t\tprops.setLook(wTest);\r\n\t\tfdTest=new FormData();\r\n\t\twTest.setToolTipText(Messages.getString(\"JobFTP.TestConnection.Tooltip\"));\r\n\t\t//fdTest.left = new FormAttachment(middle, 0);\r\n\t\tfdTest.top  = new FormAttachment(wProxyPassword, margin);\r\n\t\tfdTest.right= new FormAttachment(100, 0);\r\n\t\twTest.setLayoutData(fdTest);\r\n        \r\n        \r\n\t     fdServerSettings = new FormData();\r\n\t     fdServerSettings.left = new FormAttachment(0, margin);\r\n\t     fdServerSettings.top = new FormAttachment(wName, margin);\r\n\t     fdServerSettings.right = new FormAttachment(100, -margin);\r\n\t     wServerSettings.setLayoutData(fdServerSettings);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF SERVER SETTINGS GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n        \r\n\r\n\t     // ////////////////////////\r\n\t     // START OF Advanced SETTINGS GROUP///\r\n\t     // /\r\n\t     wAdvancedSettings = new Group(wGeneralComp, SWT.SHADOW_NONE);\r\n\t     props.setLook(wAdvancedSettings);\r\n\t     wAdvancedSettings.setText(Messages.getString(\"JobFTP.AdvancedSettings.Group.Label\"));\r\n\t     FormLayout AdvancedSettingsgroupLayout = new FormLayout();\r\n\t     AdvancedSettingsgroupLayout.marginWidth = 10;\r\n\t     AdvancedSettingsgroupLayout.marginHeight = 10;\r\n\t     wAdvancedSettings.setLayout(AdvancedSettingsgroupLayout);\r\n\r\n\t    \r\n\t     // Binary mode selection...\r\n        wlBinaryMode = new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlBinaryMode.setText(Messages.getString(\"JobFTP.BinaryMode.Label\"));\r\n        props.setLook(wlBinaryMode);\r\n        fdlBinaryMode = new FormData();\r\n        fdlBinaryMode.left = new FormAttachment(0, 0);\r\n        fdlBinaryMode.top = new FormAttachment(wServerSettings, margin);\r\n        fdlBinaryMode.right = new FormAttachment(middle, 0);\r\n        wlBinaryMode.setLayoutData(fdlBinaryMode);\r\n        wBinaryMode = new Button(wAdvancedSettings, SWT.CHECK);\r\n        props.setLook(wBinaryMode);\r\n        wBinaryMode.setToolTipText(Messages.getString(\"JobFTP.BinaryMode.Tooltip\"));\r\n        fdBinaryMode = new FormData();\r\n        fdBinaryMode.left = new FormAttachment(middle, margin);\r\n        fdBinaryMode.top = new FormAttachment(wServerSettings, margin);\r\n        fdBinaryMode.right = new FormAttachment(100, 0);\r\n        wBinaryMode.setLayoutData(fdBinaryMode);\r\n\r\n        // Timeout line\r\n        wTimeout = new LabelTextVar(jobMeta,wAdvancedSettings, Messages.getString(\"JobFTP.Timeout.Label\"), Messages\r\n            .getString(\"JobFTP.Timeout.Tooltip\"));\r\n        props.setLook(wTimeout);\r\n        wTimeout.addModifyListener(lsMod);\r\n        fdTimeout = new FormData();\r\n        fdTimeout.left = new FormAttachment(0, 0);\r\n        fdTimeout.top = new FormAttachment(wlBinaryMode, margin);\r\n        fdTimeout.right = new FormAttachment(100, 0);\r\n        wTimeout.setLayoutData(fdTimeout);\r\n\r\n\r\n        // active connection?\r\n        wlActive = new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlActive.setText(Messages.getString(\"JobFTP.ActiveConns.Label\"));\r\n        props.setLook(wlActive);\r\n        fdlActive = new FormData();\r\n        fdlActive.left = new FormAttachment(0, 0);\r\n        fdlActive.top = new FormAttachment(wTimeout, margin);\r\n        fdlActive.right = new FormAttachment(middle, 0);\r\n        wlActive.setLayoutData(fdlActive);\r\n        wActive = new Button(wAdvancedSettings, SWT.CHECK);\r\n        wActive.setToolTipText(Messages.getString(\"JobFTP.ActiveConns.Tooltip\"));\r\n        props.setLook(wActive);\r\n        fdActive = new FormData();\r\n        fdActive.left = new FormAttachment(middle, margin);\r\n        fdActive.top = new FormAttachment(wTimeout, margin);\r\n        fdActive.right = new FormAttachment(100, 0);\r\n        wActive.setLayoutData(fdActive);\r\n        \r\n        // Control encoding line\r\n        //\r\n        // The drop down is editable as it may happen an encoding may not be present\r\n        // on one machine, but you may want to use it on your execution server\r\n        //\r\n        wlControlEncoding=new Label(wAdvancedSettings, SWT.RIGHT);\r\n        wlControlEncoding.setText(Messages.getString(\"JobFTP.ControlEncoding.Label\"));\r\n        props.setLook(wlControlEncoding);\r\n        fdlControlEncoding=new FormData();\r\n        fdlControlEncoding.left  = new FormAttachment(0, 0);\r\n        fdlControlEncoding.top   = new FormAttachment(wActive, margin);\r\n        fdlControlEncoding.right = new FormAttachment(middle, 0);\r\n        wlControlEncoding.setLayoutData(fdlControlEncoding);\r\n        wControlEncoding=new Combo(wAdvancedSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n        wControlEncoding.setToolTipText(Messages.getString(\"JobFTP.ControlEncoding.Tooltip\"));\r\n        wControlEncoding.setItems(encodings);\r\n        props.setLook(wControlEncoding);\r\n        fdControlEncoding=new FormData();\r\n        fdControlEncoding.left = new FormAttachment(middle, margin);\r\n        fdControlEncoding.top  = new FormAttachment(wActive, margin);\r\n        fdControlEncoding.right= new FormAttachment(100, 0);        \r\n        wControlEncoding.setLayoutData(fdControlEncoding);\r\n    \r\n\t    \r\n\t     fdAdvancedSettings = new FormData();\r\n\t     fdAdvancedSettings.left = new FormAttachment(0, margin);\r\n\t     fdAdvancedSettings.top = new FormAttachment(wServerSettings, margin);\r\n\t     fdAdvancedSettings.right = new FormAttachment(100, -margin);\r\n\t     wAdvancedSettings.setLayoutData(fdAdvancedSettings);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF Advanced SETTINGS GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n\r\n\t\tfdGeneralComp=new FormData();\r\n\t\tfdGeneralComp.left  = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.top   = new FormAttachment(0, 0);\r\n\t\tfdGeneralComp.right = new FormAttachment(100, 0);\r\n\t\tfdGeneralComp.bottom= new FormAttachment(100, 0);\r\n\t\twGeneralComp.setLayoutData(fdGeneralComp);\r\n\t\t\r\n\t\twGeneralComp.layout();\r\n\t\twGeneralTab.setControl(wGeneralComp);\r\n \t\tprops.setLook(wGeneralComp);\r\n \t\t\r\n \t\t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF GENERAL TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF Files TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n \t\twFilesTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twFilesTab.setText(Messages.getString(\"JobFTP.Tab.Files.Label\"));\r\n\t\t\r\n\t\twFilesComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wFilesComp);\r\n\r\n\t\tFormLayout FilesLayout = new FormLayout();\r\n\t\tFilesLayout.marginWidth  = 3;\r\n\t\tFilesLayout.marginHeight = 3;\r\n\t\twFilesComp.setLayout(FilesLayout);\r\n \t\t\r\n\t\t // ////////////////////////\r\n\t     // START OF Remote SETTINGS GROUP///\r\n\t     // /\r\n\t    wRemoteSettings = new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wRemoteSettings);\r\n\t    wRemoteSettings.setText(Messages.getString(\"JobFTP.RemoteSettings.Group.Label\"));\r\n\r\n\t    FormLayout RemoteSettinsgroupLayout = new FormLayout();\r\n\t    RemoteSettinsgroupLayout.marginWidth = 10;\r\n\t    RemoteSettinsgroupLayout.marginHeight = 10;\r\n\r\n\t    wRemoteSettings.setLayout(RemoteSettinsgroupLayout);\r\n\t    \r\n\t    \r\n        // Move to directory\r\n        wlFtpDirectory = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlFtpDirectory.setText(Messages.getString(\"JobFTP.RemoteDir.Label\"));\r\n        props.setLook(wlFtpDirectory);\r\n        fdlFtpDirectory= new FormData();\r\n        fdlFtpDirectory.left = new FormAttachment(0, 0);\r\n        fdlFtpDirectory.top = new FormAttachment(0, margin);\r\n        fdlFtpDirectory.right = new FormAttachment(middle, 0);\r\n        wlFtpDirectory.setLayoutData(fdlFtpDirectory);\r\n\t    \r\n\t    // Test remote folder  button ...\r\n\t\twbTestChangeFolderExists=new Button(wRemoteSettings, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTestChangeFolderExists);\r\n\t\twbTestChangeFolderExists.setText(Messages.getString(\"JobFTP.TestFolderExists.Label\"));\r\n\t\tfdbTestChangeFolderExists=new FormData();\r\n\t\tfdbTestChangeFolderExists.right= new FormAttachment(100, 0);\r\n\t\tfdbTestChangeFolderExists.top  = new FormAttachment(0, margin);\r\n\t\twbTestChangeFolderExists.setLayoutData(fdbTestChangeFolderExists);\r\n\r\n        wFtpDirectory = new TextVar(jobMeta,wRemoteSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n           .getString(\"JobFTP.RemoteDir.Tooltip\"));\r\n       props.setLook(wFtpDirectory);\r\n       wFtpDirectory.addModifyListener(lsMod);\r\n       fdFtpDirectory = new FormData();\r\n       fdFtpDirectory.left = new FormAttachment(middle, margin);\r\n       fdFtpDirectory.top = new FormAttachment(0, margin);\r\n       fdFtpDirectory.right = new FormAttachment(wbTestChangeFolderExists, -margin);\r\n       wFtpDirectory.setLayoutData(fdFtpDirectory);\r\n       \r\n        \r\n        // Wildcard line\r\n        wWildcard = new LabelTextVar(jobMeta,wRemoteSettings, Messages.getString(\"JobFTP.Wildcard.Label\"), Messages\r\n            .getString(\"JobFTP.Wildcard.Tooltip\"));\r\n        props.setLook(wWildcard);\r\n        wWildcard.addModifyListener(lsMod);\r\n        fdWildcard = new FormData();\r\n        fdWildcard.left = new FormAttachment(0, 0);\r\n        fdWildcard.top = new FormAttachment(wFtpDirectory, margin);\r\n        fdWildcard.right = new FormAttachment(100, 0);\r\n        wWildcard.setLayoutData(fdWildcard);\r\n        \r\n        // Remove files after retrieval...\r\n        wlRemove = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlRemove.setText(Messages.getString(\"JobFTP.RemoveFiles.Label\"));\r\n        props.setLook(wlRemove);\r\n        fdlRemove = new FormData();\r\n        fdlRemove.left = new FormAttachment(0, 0);\r\n        fdlRemove.top = new FormAttachment(wWildcard, margin);\r\n        fdlRemove.right = new FormAttachment(middle, 0);\r\n        wlRemove.setLayoutData(fdlRemove);\r\n        wRemove = new Button(wRemoteSettings, SWT.CHECK);\r\n        wRemove.setToolTipText(Messages.getString(\"JobFTP.RemoveFiles.Tooltip\"));\r\n        props.setLook(wRemove);\r\n        fdRemove = new FormData();\r\n        fdRemove.left = new FormAttachment(middle, margin);\r\n        fdRemove.top = new FormAttachment(wWildcard, margin);\r\n        fdRemove.right = new FormAttachment(100, 0);\r\n        wRemove.setLayoutData(fdRemove);\r\n        \r\n        wRemove.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tif(wRemove.getSelection())\r\n\t\t\t\t{\r\n\t\t\t\t\twMove.setSelection(false);\r\n\t\t\t\t\tactivateMoveTo();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n        \r\n        // Move files after the transfert?...\r\n        wlMove = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlMove.setText(Messages.getString(\"JobFTP.MoveFiles.Label\"));\r\n        props.setLook(wlMove);\r\n        fdlMove = new FormData();\r\n        fdlMove.left = new FormAttachment(0, 0);\r\n        fdlMove.top = new FormAttachment(wRemove, margin);\r\n        fdlMove.right = new FormAttachment(middle, -margin);\r\n        wlMove.setLayoutData(fdlMove);\r\n        wMove = new Button(wRemoteSettings, SWT.CHECK);\r\n        props.setLook(wMove);\r\n        wMove.setToolTipText(Messages.getString(\"JobFTP.MoveFiles.Tooltip\"));\r\n        fdMove = new FormData();\r\n        fdMove.left = new FormAttachment(middle, margin);\r\n        fdMove.top = new FormAttachment(wRemove, margin);\r\n        fdMove.right = new FormAttachment(100, 0);\r\n        wMove.setLayoutData(fdMove);\r\n        wMove.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tactivateMoveTo();\r\n\t\t\t\tif(wMove.getSelection())\r\n\t\t\t\t{\r\n\t\t\t\t\twRemove.setSelection(false);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n        \r\n        // Move to directory\r\n        wlMoveToDirectory = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlMoveToDirectory.setText(Messages.getString(\"JobFTP.MoveFolder.Label\"));\r\n        props.setLook(wlMoveToDirectory);\r\n        fdlMoveToDirectory= new FormData();\r\n        fdlMoveToDirectory.left = new FormAttachment(0, 0);\r\n        fdlMoveToDirectory.top = new FormAttachment(wMove, margin);\r\n        fdlMoveToDirectory.right = new FormAttachment(middle, 0);\r\n        wlMoveToDirectory.setLayoutData(fdlMoveToDirectory);\r\n        \r\n\t    // Test remote folder  button ...\r\n\t\twbTestFolderExists=new Button(wRemoteSettings, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTestFolderExists);\r\n\t\twbTestFolderExists.setText(Messages.getString(\"JobFTP.TestFolderExists.Label\"));\r\n\t\tfdbTestFolderExists=new FormData();\r\n\t\tfdbTestFolderExists.right= new FormAttachment(100, 0);\r\n\t\tfdbTestFolderExists.top  = new FormAttachment(wMove, margin);\r\n\t\twbTestFolderExists.setLayoutData(fdbTestFolderExists);\r\n        \r\n        wMoveToDirectory = new TextVar(jobMeta,wRemoteSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n            .getString(\"JobFTP.MoveToDirectory.Tooltip\"));\r\n        wMoveToDirectory.setToolTipText(Messages.getString(\"JobFTP.MoveFolder.Tooltip\"));\r\n        props.setLook(wMoveToDirectory);\r\n        wMoveToDirectory.addModifyListener(lsMod);\r\n        fdMoveToDirectory = new FormData();\r\n        fdMoveToDirectory.left = new FormAttachment(middle, margin);\r\n        fdMoveToDirectory.top = new FormAttachment(wMove, margin);\r\n        fdMoveToDirectory.right = new FormAttachment(wbTestFolderExists, -margin);\r\n        wMoveToDirectory.setLayoutData(fdMoveToDirectory);\r\n        \r\n        \r\n        // create destination folder?...\r\n        wlCreateMoveFolder = new Label(wRemoteSettings, SWT.RIGHT);\r\n        wlCreateMoveFolder.setText(Messages.getString(\"JobFTP.CreateMoveFolder.Label\"));\r\n        props.setLook(wlCreateMoveFolder);\r\n        fdlCreateMoveFolder = new FormData();\r\n        fdlCreateMoveFolder.left = new FormAttachment(0, 0);\r\n        fdlCreateMoveFolder.top = new FormAttachment(wMoveToDirectory, margin);\r\n        fdlCreateMoveFolder.right = new FormAttachment(middle, 0);\r\n        wlCreateMoveFolder.setLayoutData(fdlCreateMoveFolder);\r\n        wCreateMoveFolder = new Button(wRemoteSettings, SWT.CHECK);\r\n        wCreateMoveFolder.setToolTipText(Messages.getString(\"JobFTP.CreateMoveFolder.Tooltip\"));\r\n        props.setLook(wCreateMoveFolder);\r\n        fdCreateMoveFolder = new FormData();\r\n        fdCreateMoveFolder.left = new FormAttachment(middle, margin);\r\n        fdCreateMoveFolder.top = new FormAttachment(wMoveToDirectory, margin);\r\n        fdCreateMoveFolder.right = new FormAttachment(100, 0);\r\n        wCreateMoveFolder.setLayoutData(fdCreateMoveFolder);\r\n      \r\n        fdRemoteSettings = new FormData();\r\n        fdRemoteSettings.left = new FormAttachment(0, margin);\r\n        fdRemoteSettings.top = new FormAttachment(0, 2*margin);\r\n        fdRemoteSettings.right = new FormAttachment(100, -margin);\r\n        wRemoteSettings.setLayoutData(fdRemoteSettings);\r\n       // ///////////////////////////////////////////////////////////\r\n       // / END OF Remote SETTINGSGROUP\r\n       // ///////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t // ////////////////////////\r\n\t     // START OF LOCAL SETTINGS GROUP///\r\n\t     // /\r\n\t    wLocalSettings = new Group(wFilesComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wLocalSettings);\r\n\t    wLocalSettings.setText(Messages.getString(\"JobFTP.LocalSettings.Group.Label\"));\r\n\r\n\t    FormLayout LocalSettinsgroupLayout = new FormLayout();\r\n\t    LocalSettinsgroupLayout.marginWidth = 10;\r\n\t    LocalSettinsgroupLayout.marginHeight = 10;\r\n\r\n\t    wLocalSettings.setLayout(LocalSettinsgroupLayout);\r\n\t      \r\n\t     \r\n\t     \r\n\t    // TargetDirectory\r\n\t\twlTargetDirectory = new Label(wLocalSettings, SWT.RIGHT);\r\n\t\twlTargetDirectory.setText(Messages.getString(\"JobFTP.TargetDir.Label\"));\r\n\t\tprops.setLook(wlTargetDirectory);\r\n\t\tfdlTargetDirectory = new FormData();\r\n\t\tfdlTargetDirectory.left = new FormAttachment(0, 0);\r\n\t\tfdlTargetDirectory.top = new FormAttachment(wRemoteSettings, margin);\r\n\t\tfdlTargetDirectory.right = new FormAttachment(middle, -margin);\r\n\t\twlTargetDirectory.setLayoutData(fdlTargetDirectory);\r\n\t\t\r\n\t    // Browse folders button ...\r\n\t\twbTargetDirectory=new Button(wLocalSettings, SWT.PUSH| SWT.CENTER);\r\n\t\tprops.setLook(wbTargetDirectory);\r\n\t\twbTargetDirectory.setText(Messages.getString(\"JobFTP.BrowseFolders.Label\"));\r\n\t\tfdbTargetDirectory=new FormData();\r\n\t\tfdbTargetDirectory.right= new FormAttachment(100, 0);\r\n\t\tfdbTargetDirectory.top  = new FormAttachment(wRemoteSettings, margin);\r\n\t\twbTargetDirectory.setLayoutData(fdbTargetDirectory);\r\n\t\twbTargetDirectory.addSelectionListener\r\n\t\t\t(\r\n\t\t\t\tnew SelectionAdapter()\r\n\t\t\t\t{\r\n\t\t\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tDirectoryDialog ddialog = new DirectoryDialog(shell, SWT.OPEN);\r\n\t\t\t\t\t\tif (wTargetDirectory.getText()!=null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tddialog.setFilterPath(jobMeta.environmentSubstitute(wTargetDirectory.getText()) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t // Calling open() will open and run the dialog.\r\n\t\t\t\t        // It will return the selected directory, or\r\n\t\t\t\t        // null if user cancels\r\n\t\t\t\t        String dir = ddialog.open();\r\n\t\t\t\t        if (dir != null) {\r\n\t\t\t\t          // Set the text box to the new selection\r\n\t\t\t\t        \twTargetDirectory.setText(dir);\r\n\t\t\t\t        }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\r\n\t\twTargetDirectory = new TextVar(jobMeta,wLocalSettings, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n\t\t\t.getString(\"JobFTP.TargetDir.Tooltip\"));\r\n\t\tprops.setLook(wTargetDirectory);\r\n\t\twTargetDirectory.addModifyListener(lsMod);\r\n\t\tfdTargetDirectory = new FormData();\r\n\t\tfdTargetDirectory.left = new FormAttachment(middle, margin);\r\n\t\tfdTargetDirectory.top = new FormAttachment(wRemoteSettings, margin);\r\n\t\tfdTargetDirectory.right = new FormAttachment(wbTargetDirectory, -margin);\r\n\t\twTargetDirectory.setLayoutData(fdTargetDirectory);\r\n\t\t\r\n\r\n       \r\n       \r\n\t   \t// Create multi-part file?\r\n\t   \twlAddDate=new Label(wLocalSettings, SWT.RIGHT);\r\n\t   \twlAddDate.setText(Messages.getString(\"JobFTP.AddDate.Label\"));\r\n\t   \t\tprops.setLook(wlAddDate);\r\n\t   \tfdlAddDate=new FormData();\r\n\t   \tfdlAddDate.left = new FormAttachment(0, 0);\r\n\t   \tfdlAddDate.top  = new FormAttachment(wTargetDirectory, margin);\r\n\t   \tfdlAddDate.right= new FormAttachment(middle, -margin);\r\n\t   \twlAddDate.setLayoutData(fdlAddDate);\r\n\t   \twAddDate=new Button(wLocalSettings, SWT.CHECK);\r\n   \t\tprops.setLook(wAddDate);\r\n   \t\twAddDate.setToolTipText(Messages.getString(\"JobFTP.AddDate.Tooltip\"));\r\n\t   \tfdAddDate=new FormData();\r\n\t   \tfdAddDate.left = new FormAttachment(middle, margin);\r\n\t   \tfdAddDate.top  = new FormAttachment(wTargetDirectory, margin);\r\n\t   \tfdAddDate.right= new FormAttachment(100, 0);\r\n\t   \twAddDate.setLayoutData(fdAddDate);\r\n\t   \twAddDate.addSelectionListener(new SelectionAdapter() \r\n\t   \t\t{\r\n\t   \t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t   \t\t\t{\r\n\t   \t\t\t\tjobEntry.setChanged();\r\n\t   \t\t\t}\r\n\t   \t\t}\r\n\t   \t);\r\n\t   \t// Create multi-part file?\r\n\t   \twlAddTime=new Label(wLocalSettings, SWT.RIGHT);\r\n\t   \twlAddTime.setText(Messages.getString(\"JobFTP.AddTime.Label\"));\r\n   \t\tprops.setLook(wlAddTime);\r\n\t   \tfdlAddTime=new FormData();\r\n\t   \tfdlAddTime.left = new FormAttachment(0, 0);\r\n\t   \tfdlAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t   \tfdlAddTime.right= new FormAttachment(middle, -margin);\r\n\t   \twlAddTime.setLayoutData(fdlAddTime);\r\n\t   \twAddTime=new Button(wLocalSettings, SWT.CHECK);\r\n   \t\tprops.setLook(wAddTime);\r\n   \t\twAddTime.setToolTipText(Messages.getString(\"JobFTP.AddTime.Tooltip\"));\r\n\t   \tfdAddTime=new FormData();\r\n\t   \tfdAddTime.left = new FormAttachment(middle, margin);\r\n\t   \tfdAddTime.top  = new FormAttachment(wAddDate, margin);\r\n\t   \tfdAddTime.right= new FormAttachment(100, 0);\r\n\t   \twAddTime.setLayoutData(fdAddTime);\r\n\t   \twAddTime.addSelectionListener(new SelectionAdapter() \r\n\t   \t\t{\r\n\t   \t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t   \t\t\t{\r\n\t   \t\t\t\tjobEntry.setChanged();\r\n\t   \t\t\t}\r\n\t   \t\t}\r\n\t   \t);\r\n\t   \t\r\n\t   \t// Specify date time format?\r\n\t   \twlSpecifyFormat=new Label(wLocalSettings, SWT.RIGHT);\r\n\t   \twlSpecifyFormat.setText(Messages.getString(\"JobFTP.SpecifyFormat.Label\"));\r\n\t   \tprops.setLook(wlSpecifyFormat);\r\n\t   \tfdlSpecifyFormat=new FormData();\r\n\t   \tfdlSpecifyFormat.left = new FormAttachment(0, 0);\r\n\t   \tfdlSpecifyFormat.top  = new FormAttachment(wAddTime, margin);\r\n\t   \tfdlSpecifyFormat.right= new FormAttachment(middle, -margin);\r\n\t   \twlSpecifyFormat.setLayoutData(fdlSpecifyFormat);\r\n\t   \twSpecifyFormat=new Button(wLocalSettings, SWT.CHECK);\r\n\t   \tprops.setLook(wSpecifyFormat);\r\n\t   \twSpecifyFormat.setToolTipText(Messages.getString(\"JobFTP.SpecifyFormat.Tooltip\"));\r\n       fdSpecifyFormat=new FormData();\r\n\t   \tfdSpecifyFormat.left = new FormAttachment(middle, margin);\r\n\t   \tfdSpecifyFormat.top  = new FormAttachment(wAddTime, margin);\r\n\t   \tfdSpecifyFormat.right= new FormAttachment(100, 0);\r\n\t   \twSpecifyFormat.setLayoutData(fdSpecifyFormat);\r\n\t   \twSpecifyFormat.addSelectionListener(new SelectionAdapter() \r\n\t   \t\t{\r\n\t   \t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t   \t\t\t{\r\n\t   \t\t\t\tjobEntry.setChanged();\r\n\t   \t\t\t\tsetDateTimeFormat();\r\n\t   \t\t\t\tsetAddDateBeforeExtension();\r\n\t   \t\t\t}\r\n\t   \t\t}\r\n\t   \t);\r\n\r\n   \t\r\n\t   \t//\tPrepare a list of possible DateTimeFormats...\r\n\t   \tString dats[] = Const.getDateFormats();\r\n   \t\r\n   \t\t// DateTimeFormat\r\n\t   \twlDateTimeFormat=new Label(wLocalSettings, SWT.RIGHT);\r\n       wlDateTimeFormat.setText(Messages.getString(\"JobFTP.DateTimeFormat.Label\"));\r\n       props.setLook(wlDateTimeFormat);\r\n       fdlDateTimeFormat=new FormData();\r\n       fdlDateTimeFormat.left = new FormAttachment(0, 0);\r\n       fdlDateTimeFormat.top  = new FormAttachment(wSpecifyFormat, margin);\r\n       fdlDateTimeFormat.right= new FormAttachment(middle, -margin);\r\n       wlDateTimeFormat.setLayoutData(fdlDateTimeFormat);\r\n       wDateTimeFormat=new CCombo(wLocalSettings, SWT.BORDER | SWT.READ_ONLY);\r\n       wDateTimeFormat.setEditable(true);\r\n       props.setLook(wDateTimeFormat);\r\n       wDateTimeFormat.addModifyListener(lsMod);\r\n       fdDateTimeFormat=new FormData();\r\n       fdDateTimeFormat.left = new FormAttachment(middle, margin);\r\n       fdDateTimeFormat.top  = new FormAttachment(wSpecifyFormat, margin);\r\n       fdDateTimeFormat.right= new FormAttachment(100, 0);\r\n       wDateTimeFormat.setLayoutData(fdDateTimeFormat);\r\n       for (int x=0;x<dats.length;x++) wDateTimeFormat.add(dats[x]);\r\n       \r\n       // Add Date before extension?\r\n       wlAddDateBeforeExtension = new Label(wLocalSettings, SWT.RIGHT);\r\n       wlAddDateBeforeExtension.setText(Messages.getString(\"JobFTP.AddDateBeforeExtension.Label\"));\r\n       props.setLook(wlAddDateBeforeExtension);\r\n       fdlAddDateBeforeExtension = new FormData();\r\n       fdlAddDateBeforeExtension.left = new FormAttachment(0, 0);\r\n       fdlAddDateBeforeExtension.top = new FormAttachment(wDateTimeFormat, margin);\r\n       fdlAddDateBeforeExtension.right = new FormAttachment(middle, -margin);\r\n       wlAddDateBeforeExtension.setLayoutData(fdlAddDateBeforeExtension);\r\n       wAddDateBeforeExtension = new Button(wLocalSettings, SWT.CHECK);\r\n       props.setLook(wAddDateBeforeExtension);\r\n       wAddDateBeforeExtension.setToolTipText(Messages.getString(\"JobFTP.AddDateBeforeExtension.Tooltip\"));\r\n       fdAddDateBeforeExtension = new FormData();\r\n       fdAddDateBeforeExtension.left = new FormAttachment(middle, margin);\r\n       fdAddDateBeforeExtension.top = new FormAttachment(wDateTimeFormat, margin);\r\n       fdAddDateBeforeExtension.right = new FormAttachment(100, 0);\r\n       wAddDateBeforeExtension.setLayoutData(fdAddDateBeforeExtension);\r\n       wAddDateBeforeExtension.addSelectionListener(new SelectionAdapter()\r\n       {\r\n           public void widgetSelected(SelectionEvent e)\r\n           {\r\n               jobEntry.setChanged();\r\n           }\r\n       });\r\n\r\n       \r\n       // OnlyNew files after retrieval...\r\n       wlOnlyNew = new Label(wLocalSettings, SWT.RIGHT);\r\n       wlOnlyNew.setText(Messages.getString(\"JobFTP.DontOverwrite.Label\"));\r\n       props.setLook(wlOnlyNew);\r\n       fdlOnlyNew = new FormData();\r\n       fdlOnlyNew.left = new FormAttachment(0, 0);\r\n       fdlOnlyNew.top = new FormAttachment(wAddDateBeforeExtension, margin);\r\n       fdlOnlyNew.right = new FormAttachment(middle, 0);\r\n       wlOnlyNew.setLayoutData(fdlOnlyNew);\r\n       wOnlyNew = new Button(wLocalSettings, SWT.CHECK);\r\n       wOnlyNew.setToolTipText(Messages.getString(\"JobFTP.DontOverwrite.Tooltip\"));\r\n       props.setLook(wOnlyNew);\r\n       fdOnlyNew = new FormData();\r\n       fdOnlyNew.left = new FormAttachment(middle, margin);\r\n       fdOnlyNew.top = new FormAttachment(wAddDateBeforeExtension, margin);\r\n       fdOnlyNew.right = new FormAttachment(100, 0);\r\n       wOnlyNew.setLayoutData(fdOnlyNew);\r\n       wOnlyNew.addSelectionListener(new SelectionAdapter()\r\n       {\r\n           public void widgetSelected(SelectionEvent e)\r\n           {\r\n        \t   activeIfExists();\r\n               jobEntry.setChanged();\r\n           }\r\n       });\r\n       \r\n       // Add filenames to result filenames...\r\n       wlAddFilenameToResult = new Label(wLocalSettings, SWT.RIGHT);\r\n       wlAddFilenameToResult.setText(Messages.getString(\"JobFTP.AddFilenameToResult.Label\"));\r\n       props.setLook(wlAddFilenameToResult);\r\n       fdlAddFilenameToResult = new FormData();\r\n       fdlAddFilenameToResult.left = new FormAttachment(0, 0);\r\n       fdlAddFilenameToResult.top = new FormAttachment(wAddDateBeforeExtension, margin);\r\n       fdlAddFilenameToResult.right = new FormAttachment(middle, 0);\r\n       wlAddFilenameToResult.setLayoutData(fdlAddFilenameToResult);\r\n       wAddFilenameToResult = new Button(wLocalSettings, SWT.CHECK);\r\n       wAddFilenameToResult.setToolTipText(Messages.getString(\"JobFTP.AddFilenameToResult.Tooltip\"));\r\n       props.setLook(wAddFilenameToResult);\r\n       fdAddFilenameToResult = new FormData();\r\n       fdAddFilenameToResult.left = new FormAttachment(middle, margin);\r\n       fdAddFilenameToResult.top = new FormAttachment(wAddDateBeforeExtension, margin);\r\n       fdAddFilenameToResult.right = new FormAttachment(100, 0);\r\n       wAddFilenameToResult.setLayoutData(fdAddFilenameToResult);\r\n       \r\n       // If File Exists\r\n\t\twlIfFileExists = new Label(wLocalSettings, SWT.RIGHT);\r\n\t\twlIfFileExists.setText(Messages.getString(\"JobFTP.IfFileExists.Label\"));\r\n\t\tprops.setLook(wlIfFileExists);\r\n\t\tfdlIfFileExists = new FormData();\r\n\t\tfdlIfFileExists.left = new FormAttachment(0, 0);\r\n\t\tfdlIfFileExists.right = new FormAttachment(middle, 0);\r\n\t\tfdlIfFileExists.top = new FormAttachment(wOnlyNew, margin);\r\n\t\twlIfFileExists.setLayoutData(fdlIfFileExists);\r\n\t\twIfFileExists = new CCombo(wLocalSettings, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n\t\twIfFileExists.add(Messages.getString(\"JobFTP.Skip.Label\"));\r\n\t\twIfFileExists.add(Messages.getString(\"JobFTP.Give_Unique_Name.Label\"));\r\n\t\twIfFileExists.add(Messages.getString(\"JobFTP.Fail.Label\"));\r\n\t\twIfFileExists.select(0); // +1: starts at -1\r\n\r\n\t\tprops.setLook(wIfFileExists);\r\n\t\tfdIfFileExists= new FormData();\r\n\t\tfdIfFileExists.left = new FormAttachment(middle, 0);\r\n\t\tfdIfFileExists.top = new FormAttachment(wOnlyNew, margin);\r\n\t\tfdIfFileExists.right = new FormAttachment(100, 0);\r\n\t\twIfFileExists.setLayoutData(fdIfFileExists);\r\n\r\n\t\tfdIfFileExists = new FormData();\r\n\t\tfdIfFileExists.left = new FormAttachment(middle, margin);\r\n\t\tfdIfFileExists.top = new FormAttachment(wOnlyNew, margin);\r\n\t\tfdIfFileExists.right = new FormAttachment(100, 0);\r\n\t\twIfFileExists.setLayoutData(fdIfFileExists);\r\n\t\t\r\n\t\twIfFileExists.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n       // Add filenames to result filenames...\r\n       wlAddFilenameToResult = new Label(wLocalSettings, SWT.RIGHT);\r\n       wlAddFilenameToResult.setText(Messages.getString(\"JobFTP.AddFilenameToResult.Label\"));\r\n       props.setLook(wlAddFilenameToResult);\r\n       fdlAddFilenameToResult = new FormData();\r\n       fdlAddFilenameToResult.left = new FormAttachment(0, 0);\r\n       fdlAddFilenameToResult.top = new FormAttachment(wIfFileExists, 2*margin);\r\n       fdlAddFilenameToResult.right = new FormAttachment(middle, 0);\r\n       wlAddFilenameToResult.setLayoutData(fdlAddFilenameToResult);\r\n       wAddFilenameToResult = new Button(wLocalSettings, SWT.CHECK);\r\n       wAddFilenameToResult.setToolTipText(Messages.getString(\"JobFTP.AddFilenameToResult.Tooltip\"));\r\n       props.setLook(wAddFilenameToResult);\r\n       fdAddFilenameToResult = new FormData();\r\n       fdAddFilenameToResult.left = new FormAttachment(middle, margin);\r\n       fdAddFilenameToResult.top = new FormAttachment(wIfFileExists, 2*margin);\r\n       fdAddFilenameToResult.right = new FormAttachment(100, 0);\r\n       wAddFilenameToResult.setLayoutData(fdAddFilenameToResult);\r\n       \r\n       \r\n      fdLocalSettings = new FormData();\r\n      fdLocalSettings.left = new FormAttachment(0, margin);\r\n      fdLocalSettings.top = new FormAttachment(wRemoteSettings, margin);\r\n      fdLocalSettings.right = new FormAttachment(100, -margin);\r\n      wLocalSettings.setLayoutData(fdLocalSettings);\r\n      // ///////////////////////////////////////////////////////////\r\n      // / END OF LOCAL SETTINGSGROUP\r\n      // ///////////////////////////////////////////////////////////\r\n\t\t\r\n\t\tfdFilesComp=new FormData();\r\n\t\tfdFilesComp.left  = new FormAttachment(0, 0);\r\n\t\tfdFilesComp.top   = new FormAttachment(0, 0);\r\n\t\tfdFilesComp.right = new FormAttachment(100, 0);\r\n\t\tfdFilesComp.bottom= new FormAttachment(100, 0);\r\n\t\twFilesComp.setLayoutData(fdFilesComp);\r\n\t\t\r\n\t\twFilesComp.layout();\r\n\t\twFilesTab.setControl(wFilesComp);\r\n \t\tprops.setLook(wFilesComp);\r\n \t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF Files TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n \t\t//////////////////////////\r\n\t\t// START OF Advanced TAB   ///\r\n\t\t//////////////////////////\r\n\t\t\r\n\r\n\t\twAdvancedTab=new CTabItem(wTabFolder, SWT.NONE);\r\n\t\twAdvancedTab.setText(Messages.getString(\"JobFTP.Tab.Advanced.Label\"));\r\n\t\t\r\n\t\twAdvancedComp = new Composite(wTabFolder, SWT.NONE);\r\n \t\tprops.setLook(wAdvancedComp);\r\n\r\n\t\tFormLayout AdvancedLayout = new FormLayout();\r\n\t\tAdvancedLayout.marginWidth  = 3;\r\n\t\tAdvancedLayout.marginHeight = 3;\r\n\t\twAdvancedComp.setLayout(AdvancedLayout);\r\n\t\t\r\n\t\t // SuccessOngrouping?\r\n\t     // ////////////////////////\r\n\t     // START OF SUCCESS ON GROUP///\r\n\t     // /\r\n\t    wSuccessOn= new Group(wAdvancedComp, SWT.SHADOW_NONE);\r\n\t    props.setLook(wSuccessOn);\r\n\t    wSuccessOn.setText(Messages.getString(\"JobFTP.SuccessOn.Group.Label\"));\r\n\r\n\t    FormLayout successongroupLayout = new FormLayout();\r\n\t    successongroupLayout.marginWidth = 10;\r\n\t    successongroupLayout.marginHeight = 10;\r\n\r\n\t    wSuccessOn.setLayout(successongroupLayout);\r\n\t    \r\n\r\n\t    //Success Condition\r\n\t  \twlSuccessCondition = new Label(wSuccessOn, SWT.RIGHT);\r\n\t  \twlSuccessCondition.setText(Messages.getString(\"JobFTP.SuccessCondition.Label\") + \" \");\r\n\t  \tprops.setLook(wlSuccessCondition);\r\n\t  \tfdlSuccessCondition = new FormData();\r\n\t  \tfdlSuccessCondition.left = new FormAttachment(0, 0);\r\n\t  \tfdlSuccessCondition.right = new FormAttachment(middle, 0);\r\n\t  \tfdlSuccessCondition.top = new FormAttachment(0, margin);\r\n\t  \twlSuccessCondition.setLayoutData(fdlSuccessCondition);\r\n\t  \twSuccessCondition = new CCombo(wSuccessOn, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTP.SuccessWhenAllWorksFine.Label\"));\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTP.SuccessWhenAtLeat.Label\"));\r\n\t  \twSuccessCondition.add(Messages.getString(\"JobFTP.SuccessWhenNrErrorsLessThan.Label\"));\r\n\t  \twSuccessCondition.select(0); // +1: starts at -1\r\n\t  \t\r\n\t\tprops.setLook(wSuccessCondition);\r\n\t\tfdSuccessCondition= new FormData();\r\n\t\tfdSuccessCondition.left = new FormAttachment(middle, 0);\r\n\t\tfdSuccessCondition.top = new FormAttachment(0, margin);\r\n\t\tfdSuccessCondition.right = new FormAttachment(100, 0);\r\n\t\twSuccessCondition.setLayoutData(fdSuccessCondition);\r\n\t\twSuccessCondition.addSelectionListener(new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e)\r\n\t\t\t{\r\n\t\t\t\tactiveSuccessCondition();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Success when number of errors less than\r\n\t\twlNrErrorsLessThan= new Label(wSuccessOn, SWT.RIGHT);\r\n\t\twlNrErrorsLessThan.setText(Messages.getString(\"JobFTP.NrBadFormedLessThan.Label\") + \" \");\r\n\t\tprops.setLook(wlNrErrorsLessThan);\r\n\t\tfdlNrErrorsLessThan= new FormData();\r\n\t\tfdlNrErrorsLessThan.left = new FormAttachment(0, 0);\r\n\t\tfdlNrErrorsLessThan.top = new FormAttachment(wSuccessCondition, margin);\r\n\t\tfdlNrErrorsLessThan.right = new FormAttachment(middle, -margin);\r\n\t\twlNrErrorsLessThan.setLayoutData(fdlNrErrorsLessThan);\r\n\t\t\r\n\t\t\r\n\t\twNrErrorsLessThan= new TextVar(jobMeta,wSuccessOn, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\r\n\t\t\t.getString(\"JobFTP.NrBadFormedLessThan.Tooltip\"));\r\n\t\tprops.setLook(wNrErrorsLessThan);\r\n\t\twNrErrorsLessThan.addModifyListener(lsMod);\r\n\t\tfdNrErrorsLessThan= new FormData();\r\n\t\tfdNrErrorsLessThan.left = new FormAttachment(middle, 0);\r\n\t\tfdNrErrorsLessThan.top = new FormAttachment(wSuccessCondition, margin);\r\n\t\tfdNrErrorsLessThan.right = new FormAttachment(100, -margin);\r\n\t\twNrErrorsLessThan.setLayoutData(fdNrErrorsLessThan);\r\n\t\t\r\n\t\r\n\t    fdSuccessOn= new FormData();\r\n\t    fdSuccessOn.left = new FormAttachment(0, margin);\r\n\t    fdSuccessOn.top = new FormAttachment(0, margin);\r\n\t    fdSuccessOn.right = new FormAttachment(100, -margin);\r\n\t    wSuccessOn.setLayoutData(fdSuccessOn);\r\n\t     // ///////////////////////////////////////////////////////////\r\n\t     // / END OF Success ON GROUP\r\n\t     // ///////////////////////////////////////////////////////////\r\n\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tfdAdvancedComp=new FormData();\r\n\t\tfdAdvancedComp.left  = new FormAttachment(0, 0);\r\n\t\tfdAdvancedComp.top   = new FormAttachment(0, 0);\r\n\t\tfdAdvancedComp.right = new FormAttachment(100, 0);\r\n\t\tfdAdvancedComp.bottom= new FormAttachment(100, 0);\r\n\t\twAdvancedComp.setLayoutData(fdAdvancedComp);\r\n\t\t\r\n\t\twAdvancedComp.layout();\r\n\t\twAdvancedTab.setControl(wAdvancedComp);\r\n \t\tprops.setLook(wAdvancedComp);\r\n \t\t\r\n \t\t\r\n \t\t\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t/// END OF Advanced TAB\r\n\t\t/////////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t\r\n\t\tfdTabFolder = new FormData();\r\n\t\tfdTabFolder.left  = new FormAttachment(0, 0);\r\n\t\tfdTabFolder.top   = new FormAttachment(wName, margin);\r\n\t\tfdTabFolder.right = new FormAttachment(100, 0);\r\n\t\tfdTabFolder.bottom= new FormAttachment(100, -50);\r\n\t\twTabFolder.setLayoutData(fdTabFolder);\r\n\t\t\r\n\t\t\r\n\r\n        wOK = new Button(shell, SWT.PUSH);\r\n        wOK.setText(Messages.getString(\"System.Button.OK\"));\r\n        wCancel = new Button(shell, SWT.PUSH);\r\n        wCancel.setText(Messages.getString(\"System.Button.Cancel\"));\r\n\r\n        BaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, wTabFolder);\r\n\r\n        // Add listeners\r\n        lsCancel = new Listener()\r\n        {\r\n            public void handleEvent(Event e)\r\n            {\r\n                cancel();\r\n            }\r\n        };\r\n        lsOK = new Listener()\r\n        {\r\n            public void handleEvent(Event e)\r\n            {\r\n                ok();\r\n            }\r\n        };\r\n        lsTest     = new Listener() { public void handleEvent(Event e) { test(); } };\r\n        lsCheckFolder     = new Listener() { public void handleEvent(Event e) { checkRemoteFolder(false,true,wMoveToDirectory.getText()); } };\r\n        lsCheckChangeFolder     = new Listener() { public void handleEvent(Event e) { checkRemoteFolder(true,false,wFtpDirectory.getText()); } };\r\n        \r\n        wCancel.addListener(SWT.Selection, lsCancel);\r\n        wOK.addListener(SWT.Selection, lsOK);\r\n        wTest.addListener    (SWT.Selection, lsTest    );\r\n        wbTestFolderExists.addListener    (SWT.Selection, lsCheckFolder    );\r\n        wbTestChangeFolderExists.addListener    (SWT.Selection, lsCheckChangeFolder    );\r\n        \r\n        lsDef = new SelectionAdapter()\r\n        {\r\n            public void widgetDefaultSelected(SelectionEvent e)\r\n            {\r\n                ok();\r\n            }\r\n        };\r\n\r\n        wName.addSelectionListener(lsDef);\r\n        wServerName.addSelectionListener(lsDef);\r\n        wUserName.addSelectionListener(lsDef);\r\n        wPassword.addSelectionListener(lsDef);\r\n        wFtpDirectory.addSelectionListener(lsDef);\r\n        wTargetDirectory.addSelectionListener(lsDef);\r\n        wFtpDirectory.addSelectionListener(lsDef);\r\n        wWildcard.addSelectionListener(lsDef);\r\n        wTimeout.addSelectionListener(lsDef);\r\n\r\n        // Detect X or ALT-F4 or something that kills this window...\r\n        shell.addShellListener(new ShellAdapter()\r\n        {\r\n            public void shellClosed(ShellEvent e)\r\n            {\r\n                cancel();\r\n            }\r\n        });\r\n\r\n        getData();\r\n        activateMoveTo();\r\n        setDateTimeFormat();\r\n        setAddDateBeforeExtension();\r\n        activeSuccessCondition();\r\n        activeIfExists();\r\n        \r\n        wTabFolder.setSelection(0);\r\n        BaseStepDialog.setSize(shell);\r\n\r\n        shell.open();\r\n        props.setDialogSize(shell, \"JobFTPDialogSize\");\r\n        while (!shell.isDisposed())\r\n        {\r\n            if (!display.readAndDispatch())\r\n                display.sleep();\r\n        }\r\n        return jobEntry;\r\n    }","commit_id":"e3ab8d03ba341d783a7f6c4bc614f8643e3d8c67","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private Object[] getVariantsImpl(ResolverProcessor processor) {\n    GrExpression qualifier = getQualifierExpression();\n    if (qualifier == null) {\n      ResolveUtil.treeWalkUp(this, processor);\n      qualifier = getRuntimeQualifier(this);\n      if (qualifier != null) getVariantsFromQualifier(processor, qualifier);\n    } else {\n      getVariantsFromQualifier(processor, qualifier);\n    }\n\n    GroovyResolveResult[] candidates = processor.getCandidates();\n    if (candidates.length == 0) return PsiNamedElement.EMPTY_ARRAY;\n    return ResolveUtil.mapToElements(candidates);\n  }","id":63950,"modified_method":"private Object[] getVariantsImpl(ResolverProcessor processor) {\n    GrExpression qualifier = getQualifierExpression();\n    if (qualifier == null) {\n      ResolveUtil.treeWalkUp(this, processor);\n      qualifier = getRuntimeQualifier(this);\n      if (qualifier != null) getVariantsFromQualifier(processor, qualifier);\n    } else {\n      getVariantsFromQualifier(processor, qualifier);\n    }\n\n    GroovyResolveResult[] candidates = processor.getCandidates();\n    if (candidates.length == 0) return PsiNamedElement.EMPTY_ARRAY;\n    PsiElement[] elements = ResolveUtil.mapToElements(candidates);\n    String[] properties = addPretendedProperties(elements);\n    return ArrayUtil.mergeArrays(elements, properties, Object.class);\n  }","commit_id":"6f92fb18729603cd1f693d162470dd5aa4742e7b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public GroovyResolveResult[] resolve(GrReferenceExpressionImpl refExpr, boolean incompleteCode) {\n      GrExpression qualifier = refExpr.getQualifierExpression();\n      String name = refExpr.getReferenceName();\n      if (name == null) return null;\n      ResolverProcessor processor = getMethodOrPropertyResolveProcessor(refExpr, name, false);\n\n      resolveImpl(refExpr, processor);\n\n      GroovyResolveResult[] propertyCandidates = processor.getCandidates();\n      if (propertyCandidates.length > 0) return propertyCandidates;\n      if (refExpr.getKind() == Kind.TYPE_OR_PROPERTY) {\n        ResolverProcessor classProcessor = new ResolverProcessor(refExpr.getReferenceName(), EnumSet.of(ResolveKind.CLASS_OR_PACKAGE), refExpr, false);\n        resolveImpl(refExpr, classProcessor);\n        return classProcessor.getCandidates();\n      }\n\n      return GroovyResolveResult.EMPTY_ARRAY;\n    }","id":63951,"modified_method":"public GroovyResolveResult[] resolve(GrReferenceExpressionImpl refExpr, boolean incompleteCode) {\n      String name = refExpr.getReferenceName();\n      if (name == null) return null;\n      ResolverProcessor processor = getMethodOrPropertyResolveProcessor(refExpr, name, false);\n\n      resolveImpl(refExpr, processor);\n\n      GroovyResolveResult[] propertyCandidates = processor.getCandidates();\n      if (propertyCandidates.length > 0) return propertyCandidates;\n      if (refExpr.getKind() == Kind.TYPE_OR_PROPERTY) {\n        ResolverProcessor classProcessor = new ResolverProcessor(refExpr.getReferenceName(), EnumSet.of(ResolveKind.CLASS_OR_PACKAGE), refExpr, false);\n        resolveImpl(refExpr, classProcessor);\n        return classProcessor.getCandidates();\n      }\n\n      return GroovyResolveResult.EMPTY_ARRAY;\n    }","commit_id":"6f92fb18729603cd1f693d162470dd5aa4742e7b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static Object[] mapToElements(GroovyResolveResult[] candidates) {\n    PsiElement[] elements = new PsiElement[candidates.length];\n    for (int i = 0; i < elements.length; i++) {\n      elements[i] = candidates[i].getElement();\n    }\n\n    return elements;\n  }","id":63952,"modified_method":"public static PsiElement[] mapToElements(GroovyResolveResult[] candidates) {\n    PsiElement[] elements = new PsiElement[candidates.length];\n    for (int i = 0; i < elements.length; i++) {\n      elements[i] = candidates[i].getElement();\n    }\n\n    return elements;\n  }","commit_id":"6f92fb18729603cd1f693d162470dd5aa4742e7b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void processClass(PsiClass aClass, Map<String, PsiField> allFields, Map<String, List<PsiMethod>> allMethods, Set<PsiClass> visitedClasses) {\n    if (visitedClasses.contains(aClass)) return;\n    visitedClasses.add(aClass);\n\n    for (PsiField field : aClass.getFields()) {\n      String name = field.getName();\n      if (!allFields.containsKey(name)) {\n        allFields.put(name, field);\n      }\n    }\n\n    for (PsiMethod method : aClass.getMethods()) {\n      String name = method.getName();\n      List<PsiMethod> methods = allMethods.get(name);\n      if (methods == null) {\n        methods = new ArrayList<PsiMethod>();\n        allMethods.put(name, methods);\n        methods.add(method);\n      } else if (!ResolveUtil.isSuperMethodDominated(method, methods)) methods.add(method);\n    }\n\n    for (PsiClassType superType : aClass.getSuperTypes()) {\n      PsiClass superClass = superType.resolve();\n      if (superClass != null) {\n        processClass(superClass, allFields, allMethods, visitedClasses);\n      }\n    }\n  }","id":63953,"modified_method":"private static void processClass(PsiClass aClass, Map<String, PsiField> allFields, Map<String, List<PsiMethod>> allMethods, Set<PsiClass> visitedClasses) {\n    if (visitedClasses.contains(aClass)) return;\n    visitedClasses.add(aClass);\n\n    for (PsiField field : aClass.getFields()) {\n      String name = field.getName();\n      if (!allFields.containsKey(name)) {\n        allFields.put(name, field);\n      }\n    }\n\n    for (PsiMethod method : aClass.getMethods()) {\n      addMethod(allMethods, method);\n    }\n\n    String qName = aClass.getQualifiedName();\n    if (qName != null) {\n      List<PsiMethod> defaultMethods = GroovyPsiManager.getInstance(aClass.getProject()).getDefaultMethods(qName);\n      for (PsiMethod defaultMethod : defaultMethods) {\n        addMethod(allMethods, defaultMethod);\n      }\n    }\n\n    for (PsiClassType superType : aClass.getSuperTypes()) {\n      PsiClass superClass = superType.resolve();\n      if (superClass != null) {\n        processClass(superClass, allFields, allMethods, visitedClasses);\n      }\n    }\n  }","commit_id":"81de7ca6ec75d1c33877b1f61ab12b88fa568cee","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Object[] getVariantsImpl(ResolverProcessor processor) {\n    GrExpression qualifierExpression = getQualifierExpression();\n    if (qualifierExpression == null) {\n      ResolveUtil.treeWalkUp(this, processor);\n    } else {\n      PsiType qualifierType = qualifierExpression.getType();\n      if (qualifierType instanceof PsiClassType) {\n        PsiClass qualifierClass = ((PsiClassType) qualifierType).resolve();\n        if (qualifierClass != null) {\n          qualifierClass.processDeclarations(processor, PsiSubstitutor.EMPTY, null, this);\n        }\n      }\n    }\n\n    GroovyResolveResult[] candidates = processor.getCandidates();\n    if (candidates.length == 0) return PsiNamedElement.EMPTY_ARRAY;\n    return ResolveUtil.mapToElements(candidates);\n  }","id":63954,"modified_method":"private Object[] getVariantsImpl(ResolverProcessor processor) {\n    GrExpression qualifierExpression = getQualifierExpression();\n    PsiClass qualifierClass = null;\n    if (qualifierExpression == null) {\n      ResolveUtil.treeWalkUp(this, processor);\n    } else {\n      PsiType qualifierType = qualifierExpression.getType();\n      if (qualifierType instanceof PsiClassType) {\n        qualifierClass = ((PsiClassType) qualifierType).resolve();\n        if (qualifierClass != null) {\n          qualifierClass.processDeclarations(processor, PsiSubstitutor.EMPTY, null, this);\n        }\n      }\n    }\n\n    GroovyResolveResult[] candidates = processor.getCandidates();\n    if (candidates.length == 0) return PsiNamedElement.EMPTY_ARRAY;\n    Object[] elements = ResolveUtil.mapToElements(candidates);\n    if (qualifierClass != null && !(qualifierClass instanceof GrTypeDefinition)) {\n      List<PsiMethod> groovyDefaults = new ArrayList<PsiMethod>();\n      addDefaultMethods(qualifierClass, groovyDefaults, new HashSet<PsiClass>());\n\n      if (groovyDefaults.size() > 0) {\n        PsiMethod[] defaultMethods = groovyDefaults.toArray(new PsiMethod[groovyDefaults.size()]);\n        return ArrayUtil.mergeArrays(elements, defaultMethods, Object.class);\n      }\n    }\n    return elements;\n  }","commit_id":"81de7ca6ec75d1c33877b1f61ab12b88fa568cee","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Object[] getVariantsImpl(ResolverProcessor processor) {\n    GrExpression qualifierExpression = getQualifierExpression();\n    PsiClass qualifierClass = null;\n    if (qualifierExpression == null) {\n      ResolveUtil.treeWalkUp(this, processor);\n    } else {\n      PsiType qualifierType = qualifierExpression.getType();\n      if (qualifierType instanceof PsiClassType) {\n        qualifierClass = ((PsiClassType) qualifierType).resolve();\n        if (qualifierClass != null) {\n          qualifierClass.processDeclarations(processor, PsiSubstitutor.EMPTY, null, this);\n        }\n      }\n    }\n\n    GroovyResolveResult[] candidates = processor.getCandidates();\n    if (candidates.length == 0) return PsiNamedElement.EMPTY_ARRAY;\n    Object[] elements = ResolveUtil.mapToElements(candidates);\n    if (qualifierClass != null && !(qualifierClass instanceof GrTypeDefinition)) {\n      List<PsiMethod> groovyDefaults = new ArrayList<PsiMethod>();\n      addDefaultMethods(qualifierClass, groovyDefaults, new HashSet<PsiClass>());\n\n      if (groovyDefaults.size() > 0) {\n        PsiMethod[] defaultMethods = groovyDefaults.toArray(new PsiMethod[groovyDefaults.size()]);\n        return ArrayUtil.mergeArrays(elements, defaultMethods, Object.class);\n      }\n    }\n    return elements;\n  }","id":63955,"modified_method":"private Object[] getVariantsImpl(ResolverProcessor processor) {\n    GrExpression qualifierExpression = getQualifierExpression();\n    if (qualifierExpression == null) {\n      ResolveUtil.treeWalkUp(this, processor);\n    } else {\n      PsiType qualifierType = qualifierExpression.getType();\n      if (qualifierType instanceof PsiClassType) {\n        PsiClass qualifierClass = ((PsiClassType) qualifierType).resolve();\n        if (qualifierClass != null) {\n          qualifierClass.processDeclarations(processor, PsiSubstitutor.EMPTY, null, this);\n          if (!(qualifierClass instanceof GrTypeDefinition)) {\n            addDefaultMethods(qualifierClass, processor, new HashSet<PsiClass>());\n          }\n        }\n      }\n    }\n\n    GroovyResolveResult[] candidates = processor.getCandidates();\n    if (candidates.length == 0) return PsiNamedElement.EMPTY_ARRAY;\n    return ResolveUtil.mapToElements(candidates);\n  }","commit_id":"cd8ed289875a6369387c3f4319177643663f9202","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void resolveImpl(GrReferenceExpressionImpl refExpr, GrExpression qualifier, ResolverProcessor processor) {\n      if (qualifier == null) {\n        ResolveUtil.treeWalkUp(refExpr, processor);\n      } else {\n        PsiType qualifierType = qualifier.getType();\n        if (qualifierType instanceof PsiClassType) {\n          PsiClass qualifierClass = ((PsiClassType) qualifierType).resolve();\n          if (qualifierClass != null) {\n            qualifierClass.processDeclarations(processor, PsiSubstitutor.EMPTY, null, refExpr);\n          }\n        }\n      }\n    }","id":63956,"modified_method":"private void resolveImpl(GrReferenceExpressionImpl refExpr, GrExpression qualifier, ResolverProcessor processor) {\n      if (qualifier == null) {\n        ResolveUtil.treeWalkUp(refExpr, processor);\n      } else {\n        PsiType qualifierType = qualifier.getType();\n        if (qualifierType instanceof PsiClassType) {\n          PsiClass qualifierClass = ((PsiClassType) qualifierType).resolve();\n          if (qualifierClass != null) {\n            qualifierClass.processDeclarations(processor, PsiSubstitutor.EMPTY, null, refExpr);\n            if (!(qualifierClass instanceof GrTypeDefinition)) {\n              addDefaultMethods(qualifierClass, processor, new HashSet<PsiClass>());\n            }\n          }\n        }\n      }\n    }","commit_id":"cd8ed289875a6369387c3f4319177643663f9202","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void addDefaultMethods(PsiClass clazz, List<PsiMethod> groovyDefaults, Set<PsiClass> visited) {\n    if (visited.contains(clazz)) return;\n    visited.add(clazz);\n\n    String qName = clazz.getQualifiedName();\n    if (qName != null) {\n      groovyDefaults.addAll(GroovyPsiManager.getInstance(clazz.getProject()).getDefaultMethods(qName));\n      for (PsiClass aSuper : clazz.getSupers()) {\n        addDefaultMethods(aSuper, groovyDefaults, new HashSet<PsiClass>());\n      }\n    }\n  }","id":63957,"modified_method":"private static void addDefaultMethods(PsiClass clazz, ResolverProcessor processor, Set<PsiClass> visited) {\n    if (visited.contains(clazz)) return;\n    visited.add(clazz);\n\n    String qName = clazz.getQualifiedName();\n    if (qName != null) {\n      List<PsiMethod> defaultMethods = GroovyPsiManager.getInstance(clazz.getProject()).getDefaultMethods(qName);\n      for (PsiMethod defaultMethod : defaultMethods) {\n        if (!ResolveUtil.processElement(processor, defaultMethod)) return;\n      }\n      for (PsiClass aSuper : clazz.getSupers()) {\n        addDefaultMethods(aSuper, processor, new HashSet<PsiClass>());\n      }\n    }\n  }","commit_id":"cd8ed289875a6369387c3f4319177643663f9202","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private PsiMethod convertToNonStatic(PsiMethod method, PsiElementFactory elementFactory) {\n    try {\n      PsiMethod copy = elementFactory.createMethod(method.getName(), method.getReturnType());\n      copy.getModifierList().setModifierProperty(PsiModifier.PUBLIC, true);\n      copy.getModifierList().setModifierProperty(PsiModifier.STATIC, false);\n      PsiParameter[] originalParameters = method.getParameterList().getParameters();\n      PsiParameterList newParamList = copy.getParameterList();\n      for (int i = 1; i < originalParameters.length; i++) {\n        PsiParameter originalParameter = originalParameters[i];\n        PsiParameter parameter = elementFactory.createParameter(\"p\" + i, originalParameter.getType());\n        newParamList.add(parameter);\n      }\n      copy.getThrowsList().replace(method.getThrowsList());\n      return copy;\n    } catch (IncorrectOperationException e) {\n      LOG.error(e);\n      return null;\n    }\n  }","id":63958,"modified_method":"private PsiMethod convertToNonStatic(PsiMethod method) {\n    return new DefaultGroovyMethod(method, null);\n  }","commit_id":"cd8ed289875a6369387c3f4319177643663f9202","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void fillDefaultGroovyMethods() {\n    myDefaultMethods = new HashMap<String, List<PsiMethod>>();\n\n    PsiClass defaultMethodsClass = PsiManager.getInstance(myProject).findClass(DEFAULT_METHODS_QNAME, GlobalSearchScope.allScope(myProject));\n    if (defaultMethodsClass != null) {\n      for (PsiMethod method : defaultMethodsClass.getMethods()) {\n        if (method.isConstructor()) continue;\n        PsiParameter[] parameters = method.getParameterList().getParameters();\n        LOG.assertTrue(parameters.length > 0);\n        PsiType thisType = parameters[0].getType();\n        if (!(thisType instanceof PsiClassType)) continue;\n        PsiClass resolved = ((PsiClassType) thisType).resolve();\n        if (resolved == null) continue;\n        String thisQName = resolved.getQualifiedName();\n        LOG.assertTrue(thisQName != null);\n        List<PsiMethod> hisMethods = myDefaultMethods.get(thisQName);\n        if (hisMethods== null) {\n          hisMethods = new ArrayList<PsiMethod>();\n          myDefaultMethods.put(thisQName, hisMethods);\n        }\n        hisMethods.add(convertToNonStatic(method, method.getManager().getElementFactory()));\n      }\n    }\n  }","id":63959,"modified_method":"private void fillDefaultGroovyMethods() {\n    myDefaultMethods = new HashMap<String, List<PsiMethod>>();\n\n    PsiClass defaultMethodsClass = PsiManager.getInstance(myProject).findClass(DEFAULT_METHODS_QNAME, GlobalSearchScope.allScope(myProject));\n    if (defaultMethodsClass != null) {\n      for (PsiMethod method : defaultMethodsClass.getMethods()) {\n        if (method.isConstructor()) continue;\n        PsiParameter[] parameters = method.getParameterList().getParameters();\n        LOG.assertTrue(parameters.length > 0);\n        PsiType thisType = parameters[0].getType();\n        if (!(thisType instanceof PsiClassType)) continue;\n        PsiClass resolved = ((PsiClassType) thisType).resolve();\n        if (resolved == null) continue;\n        String thisQName = resolved.getQualifiedName();\n        LOG.assertTrue(thisQName != null);\n        List<PsiMethod> hisMethods = myDefaultMethods.get(thisQName);\n        if (hisMethods== null) {\n          hisMethods = new ArrayList<PsiMethod>();\n          myDefaultMethods.put(thisQName, hisMethods);\n        }\n        hisMethods.add(convertToNonStatic(method));\n      }\n    }\n  }","commit_id":"cd8ed289875a6369387c3f4319177643663f9202","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean processElement(PsiScopeProcessor processor, GrNamedElement namedElement) {\n    NameHint nameHint = processor.getHint(NameHint.class);\n    String name = nameHint == null ? null : nameHint.getName();\n    if (name == null || name.equals(namedElement.getName())) {\n      return processor.execute(namedElement, PsiSubstitutor.EMPTY);\n    }\n\n    return true;\n  }","id":63960,"modified_method":"public static boolean processElement(PsiScopeProcessor processor, PsiNamedElement namedElement) {\n    NameHint nameHint = processor.getHint(NameHint.class);\n    String name = nameHint == null ? null : nameHint.getName();\n    if (name == null || name.equals(namedElement.getName())) {\n      return processor.execute(namedElement, PsiSubstitutor.EMPTY);\n    }\n\n    return true;\n  }","commit_id":"cd8ed289875a6369387c3f4319177643663f9202","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"void nullAddresses(Message msg, IpAddress dest, IpAddress src) {\n        msg.setDest(null);\n        if(!dest.isMulticastAddress()) { // unicast\n            if(src != null) {\n                msg.setSrc(new IpAddress(src.getPort(), false)); // null the host part, leave the port\n                if(src.getAdditionalData() != null)\n                    ((IpAddress)msg.getSrc()).setAdditionalData(src.getAdditionalData());\n            }\n            else {\n                msg.setSrc(null);\n            }\n        }\n        else {  // multicast\n            if(src != null) {\n                msg.setSrc(new IpAddress(src.getPort(), false));\n                if(src.getAdditionalData() != null)\n                    ((IpAddress)msg.getSrc()).setAdditionalData(src.getAdditionalData());\n            }\n        }\n    }","id":63961,"modified_method":"void nullAddresses(Message msg, IpAddress dest, IpAddress src) {\n        msg.setDest(null);\n        if(!dest.isMulticastAddress()) { // unicast\n            if(src != null) {\n                if(null_src_addresses)\n                    msg.setSrc(new IpAddress(src.getPort(), false)); // null the host part, leave the port\n                if(src.getAdditionalData() != null)\n                    ((IpAddress)msg.getSrc()).setAdditionalData(src.getAdditionalData());\n            }\n            else {\n                msg.setSrc(null);\n            }\n        }\n        else {  // multicast\n            if(src != null) {\n                if(null_src_addresses)\n                    msg.setSrc(new IpAddress(src.getPort(), false));  // null the host part, leave the port\n                if(src.getAdditionalData() != null)\n                    ((IpAddress)msg.getSrc()).setAdditionalData(src.getAdditionalData());\n            }\n        }\n    }","commit_id":"95b6d5bd97aaacf48c431f03622728285ecb3f68","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Setup the Protocol instance acording to the configuration string\n     * The following properties are being read by the UDP protocol\n     * param mcast_addr - the multicast address to use default is 228.8.8.8\n     * param mcast_port - (int) the port that the multicast is sent on default is 7600\n     * param ip_mcast - (boolean) flag whether to use IP multicast - default is true\n     * param ip_ttl - Set the default time-to-live for multicast packets sent out on this socket. default is 32\n     * @return true if no other properties are left.\n     *         false if the properties still have data in them, ie ,\n     *         properties are left over and not handled by the protocol stack\n     *\n     */\n    public boolean setProperties(Properties props) {\n        String str;\n        String tmp = null;\n\n        super.setProperties(props);\n        \n        // PropertyPermission not granted if running in an untrusted environment with JNLP.\n        try {\n            tmp=System.getProperty(\"bind.address\");\n            if(Boolean.getBoolean(IGNORE_BIND_ADDRESS_PROPERTY)) {\n                tmp=null;\n            }\n        }\n        catch (SecurityException ex){\n        }\n        \n        if(tmp != null)\n            str=tmp;\n        else\n            str=props.getProperty(\"bind_addr\");\n        if(str != null) {\n            try {\n                bind_addr=InetAddress.getByName(str);\n            }\n            catch(UnknownHostException unknown) {\n                if(log.isFatalEnabled()) log.fatal(\"(bind_addr): host \" + str + \" not known\");\n                return false;\n            }\n            props.remove(\"bind_addr\");\n        }\n\n        str=props.getProperty(\"bind_to_all_interfaces\");\n        if(str != null) {\n            bind_to_all_interfaces=new Boolean(str).booleanValue();\n            props.remove(\"bind_to_all_interfaces\");\n        }\n\n        str=props.getProperty(\"bind_port\");\n        if(str != null) {\n            bind_port=Integer.parseInt(str);\n            props.remove(\"bind_port\");\n        }\n\n        str=props.getProperty(\"num_last_ports\");\n        if(str != null) {\n            num_last_ports=Integer.parseInt(str);\n            props.remove(\"num_last_ports\");\n        }\n\n\t\tstr=props.getProperty(\"start_port\");\n        if(str != null) {\n            bind_port=Integer.parseInt(str);\n            props.remove(\"start_port\");\n        }\n\n\t\tstr=props.getProperty(\"port_range\");\n        if(str != null) {\n            port_range=Integer.parseInt(str);\n            props.remove(\"port_range\");\n        }\n\n        str=props.getProperty(\"mcast_addr\");\n        if(str != null) {\n            mcast_addr_name=str;\n            props.remove(\"mcast_addr\");\n        }\n\n        str=props.getProperty(\"mcast_port\");\n        if(str != null) {\n            mcast_port=Integer.parseInt(str);\n            props.remove(\"mcast_port\");\n        }\n\n        str=props.getProperty(\"ip_mcast\");\n        if(str != null) {\n            ip_mcast=Boolean.valueOf(str).booleanValue();\n            props.remove(\"ip_mcast\");\n        }\n\n        str=props.getProperty(\"ip_ttl\");\n        if(str != null) {\n            ip_ttl=Integer.parseInt(str);\n            props.remove(\"ip_ttl\");\n        }\n\n        str=props.getProperty(\"mcast_send_buf_size\");\n        if(str != null) {\n            mcast_send_buf_size=Integer.parseInt(str);\n            props.remove(\"mcast_send_buf_size\");\n        }\n\n        str=props.getProperty(\"mcast_recv_buf_size\");\n        if(str != null) {\n            mcast_recv_buf_size=Integer.parseInt(str);\n            props.remove(\"mcast_recv_buf_size\");\n        }\n\n        str=props.getProperty(\"ucast_send_buf_size\");\n        if(str != null) {\n            ucast_send_buf_size=Integer.parseInt(str);\n            props.remove(\"ucast_send_buf_size\");\n        }\n\n        str=props.getProperty(\"ucast_recv_buf_size\");\n        if(str != null) {\n            ucast_recv_buf_size=Integer.parseInt(str);\n            props.remove(\"ucast_recv_buf_size\");\n        }\n\n        str=props.getProperty(\"loopback\");\n        if(str != null) {\n            loopback=Boolean.valueOf(str).booleanValue();\n            props.remove(\"loopback\");\n        }\n\n        str=props.getProperty(\"discard_incompatibe_packets\");\n        if(str != null) {\n            discard_incompatible_packets=Boolean.valueOf(str).booleanValue();\n            props.remove(\"discard_incompatibe_packets\");\n        }\n\n        // this is deprecated, just left for compatibility (use use_incoming_packet_handler)\n        str=props.getProperty(\"use_packet_handler\");\n        if(str != null) {\n            use_incoming_packet_handler=Boolean.valueOf(str).booleanValue();\n            props.remove(\"use_packet_handler\");\n            if(log.isWarnEnabled()) log.warn(\"'use_packet_handler' is deprecated; use 'use_incoming_packet_handler' instead\");\n        }\n\n        str=props.getProperty(\"use_incoming_packet_handler\");\n        if(str != null) {\n            use_incoming_packet_handler=Boolean.valueOf(str).booleanValue();\n            props.remove(\"use_incoming_packet_handler\");\n        }\n\n        str=props.getProperty(\"use_outgoing_packet_handler\");\n        if(str != null) {\n            use_outgoing_packet_handler=Boolean.valueOf(str).booleanValue();\n            props.remove(\"use_outgoing_packet_handler\");\n        }\n\n        str=props.getProperty(\"max_bundle_size\");\n        if(str != null) {\n            int bundle_size=Integer.parseInt(str);\n            if(bundle_size > max_bundle_size) {\n                if(log.isErrorEnabled()) log.error(\"max_bundle_size (\" + bundle_size +\n                        \") is greater than largest UDP fragmentation size (\" + max_bundle_size + ')');\n                return false;\n            }\n            if(bundle_size <= 0) {\n                if(log.isErrorEnabled()) log.error(\"max_bundle_size (\" + bundle_size + \") is <= 0\");\n                return false;\n            }\n            max_bundle_size=bundle_size;\n            props.remove(\"max_bundle_size\");\n        }\n\n        str=props.getProperty(\"max_bundle_timeout\");\n        if(str != null) {\n            max_bundle_timeout=Long.parseLong(str);\n            if(max_bundle_timeout <= 0) {\n                if(log.isErrorEnabled()) log.error(\"max_bundle_timeout of \" + max_bundle_timeout + \" is invalid\");\n                return false;\n            }\n            props.remove(\"max_bundle_timeout\");\n        }\n\n        str=props.getProperty(\"enable_bundling\");\n        if(str != null) {\n            enable_bundling=Boolean.valueOf(str).booleanValue();\n            props.remove(\"enable_bundling\");\n        }\n\n        str=props.getProperty(\"use_addr_translation\");\n        if(str != null) {\n            use_addr_translation=Boolean.valueOf(str).booleanValue();\n            props.remove(\"use_addr_translation\");\n        }\n\n        if(props.size() > 0) {\n            System.err.println(\"UDP.setProperties(): the following properties are not recognized:\");\n            props.list(System.out);\n            return false;\n        }\n\n        if(enable_bundling) {\n            if(use_outgoing_packet_handler == false)\n                if(log.isWarnEnabled()) log.warn(\"enable_bundling is true; setting use_outgoing_packet_handler=true\");\n            use_outgoing_packet_handler=true;\n        }\n\n        return true;\n    }","id":63962,"modified_method":"/**\n     * Setup the Protocol instance acording to the configuration string\n     * The following properties are being read by the UDP protocol\n     * param mcast_addr - the multicast address to use default is 228.8.8.8\n     * param mcast_port - (int) the port that the multicast is sent on default is 7600\n     * param ip_mcast - (boolean) flag whether to use IP multicast - default is true\n     * param ip_ttl - Set the default time-to-live for multicast packets sent out on this socket. default is 32\n     * @return true if no other properties are left.\n     *         false if the properties still have data in them, ie ,\n     *         properties are left over and not handled by the protocol stack\n     *\n     */\n    public boolean setProperties(Properties props) {\n        String str;\n        String tmp = null;\n\n        super.setProperties(props);\n        \n        // PropertyPermission not granted if running in an untrusted environment with JNLP.\n        try {\n            tmp=System.getProperty(\"bind.address\");\n            if(Boolean.getBoolean(IGNORE_BIND_ADDRESS_PROPERTY)) {\n                tmp=null;\n            }\n        }\n        catch (SecurityException ex){\n        }\n        \n        if(tmp != null)\n            str=tmp;\n        else\n            str=props.getProperty(\"bind_addr\");\n        if(str != null) {\n            try {\n                bind_addr=InetAddress.getByName(str);\n            }\n            catch(UnknownHostException unknown) {\n                if(log.isFatalEnabled()) log.fatal(\"(bind_addr): host \" + str + \" not known\");\n                return false;\n            }\n            props.remove(\"bind_addr\");\n        }\n\n        str=props.getProperty(\"bind_to_all_interfaces\");\n        if(str != null) {\n            bind_to_all_interfaces=new Boolean(str).booleanValue();\n            props.remove(\"bind_to_all_interfaces\");\n        }\n\n        str=props.getProperty(\"bind_port\");\n        if(str != null) {\n            bind_port=Integer.parseInt(str);\n            props.remove(\"bind_port\");\n        }\n\n        str=props.getProperty(\"num_last_ports\");\n        if(str != null) {\n            num_last_ports=Integer.parseInt(str);\n            props.remove(\"num_last_ports\");\n        }\n\n\t\tstr=props.getProperty(\"start_port\");\n        if(str != null) {\n            bind_port=Integer.parseInt(str);\n            props.remove(\"start_port\");\n        }\n\n\t\tstr=props.getProperty(\"port_range\");\n        if(str != null) {\n            port_range=Integer.parseInt(str);\n            props.remove(\"port_range\");\n        }\n\n        str=props.getProperty(\"mcast_addr\");\n        if(str != null) {\n            mcast_addr_name=str;\n            props.remove(\"mcast_addr\");\n        }\n\n        str=props.getProperty(\"mcast_port\");\n        if(str != null) {\n            mcast_port=Integer.parseInt(str);\n            props.remove(\"mcast_port\");\n        }\n\n        str=props.getProperty(\"ip_mcast\");\n        if(str != null) {\n            ip_mcast=Boolean.valueOf(str).booleanValue();\n            props.remove(\"ip_mcast\");\n        }\n\n        str=props.getProperty(\"ip_ttl\");\n        if(str != null) {\n            ip_ttl=Integer.parseInt(str);\n            props.remove(\"ip_ttl\");\n        }\n\n        str=props.getProperty(\"mcast_send_buf_size\");\n        if(str != null) {\n            mcast_send_buf_size=Integer.parseInt(str);\n            props.remove(\"mcast_send_buf_size\");\n        }\n\n        str=props.getProperty(\"mcast_recv_buf_size\");\n        if(str != null) {\n            mcast_recv_buf_size=Integer.parseInt(str);\n            props.remove(\"mcast_recv_buf_size\");\n        }\n\n        str=props.getProperty(\"ucast_send_buf_size\");\n        if(str != null) {\n            ucast_send_buf_size=Integer.parseInt(str);\n            props.remove(\"ucast_send_buf_size\");\n        }\n\n        str=props.getProperty(\"ucast_recv_buf_size\");\n        if(str != null) {\n            ucast_recv_buf_size=Integer.parseInt(str);\n            props.remove(\"ucast_recv_buf_size\");\n        }\n\n        str=props.getProperty(\"loopback\");\n        if(str != null) {\n            loopback=Boolean.valueOf(str).booleanValue();\n            props.remove(\"loopback\");\n        }\n\n        str=props.getProperty(\"discard_incompatibe_packets\");\n        if(str != null) {\n            discard_incompatible_packets=Boolean.valueOf(str).booleanValue();\n            props.remove(\"discard_incompatibe_packets\");\n        }\n\n        // this is deprecated, just left for compatibility (use use_incoming_packet_handler)\n        str=props.getProperty(\"use_packet_handler\");\n        if(str != null) {\n            use_incoming_packet_handler=Boolean.valueOf(str).booleanValue();\n            props.remove(\"use_packet_handler\");\n            if(log.isWarnEnabled()) log.warn(\"'use_packet_handler' is deprecated; use 'use_incoming_packet_handler' instead\");\n        }\n\n        str=props.getProperty(\"use_incoming_packet_handler\");\n        if(str != null) {\n            use_incoming_packet_handler=Boolean.valueOf(str).booleanValue();\n            props.remove(\"use_incoming_packet_handler\");\n        }\n\n        str=props.getProperty(\"use_outgoing_packet_handler\");\n        if(str != null) {\n            use_outgoing_packet_handler=Boolean.valueOf(str).booleanValue();\n            props.remove(\"use_outgoing_packet_handler\");\n        }\n\n        str=props.getProperty(\"max_bundle_size\");\n        if(str != null) {\n            int bundle_size=Integer.parseInt(str);\n            if(bundle_size > max_bundle_size) {\n                if(log.isErrorEnabled()) log.error(\"max_bundle_size (\" + bundle_size +\n                        \") is greater than largest UDP fragmentation size (\" + max_bundle_size + ')');\n                return false;\n            }\n            if(bundle_size <= 0) {\n                if(log.isErrorEnabled()) log.error(\"max_bundle_size (\" + bundle_size + \") is <= 0\");\n                return false;\n            }\n            max_bundle_size=bundle_size;\n            props.remove(\"max_bundle_size\");\n        }\n\n        str=props.getProperty(\"max_bundle_timeout\");\n        if(str != null) {\n            max_bundle_timeout=Long.parseLong(str);\n            if(max_bundle_timeout <= 0) {\n                if(log.isErrorEnabled()) log.error(\"max_bundle_timeout of \" + max_bundle_timeout + \" is invalid\");\n                return false;\n            }\n            props.remove(\"max_bundle_timeout\");\n        }\n\n        str=props.getProperty(\"enable_bundling\");\n        if(str != null) {\n            enable_bundling=Boolean.valueOf(str).booleanValue();\n            props.remove(\"enable_bundling\");\n        }\n\n        str=props.getProperty(\"use_addr_translation\");\n        if(str != null) {\n            use_addr_translation=Boolean.valueOf(str).booleanValue();\n            props.remove(\"use_addr_translation\");\n        }\n\n        str=props.getProperty(\"null_src_addresses\");\n        if(str != null) {\n            null_src_addresses=Boolean.valueOf(str).booleanValue();\n            props.remove(\"null_src_addresses\");\n        }\n\n        if(props.size() > 0) {\n            System.err.println(\"UDP.setProperties(): the following properties are not recognized:\");\n            props.list(System.out);\n            return false;\n        }\n\n        if(enable_bundling) {\n            if(use_outgoing_packet_handler == false)\n                if(log.isWarnEnabled()) log.warn(\"enable_bundling is true; setting use_outgoing_packet_handler=true\");\n            use_outgoing_packet_handler=true;\n        }\n\n        return true;\n    }","commit_id":"95b6d5bd97aaacf48c431f03622728285ecb3f68","url":"https://github.com/belaban/JGroups"},{"original_method":"void nullAddresses(Message msg, IpAddress dest, IpAddress src) {\n        msg.setDest(null);\n        if(!dest.isMulticastAddress()) { // unicast\n            if(src != null) {\n                msg.setSrc(new IpAddress(src.getPort(), false)); // null the host part, leave the port\n                if(src.getAdditionalData() != null)\n                    ((IpAddress)msg.getSrc()).setAdditionalData(src.getAdditionalData());\n            }\n            else {\n                msg.setSrc(null);\n            }\n        }\n        else {  // multicast\n            if(src != null) {\n                msg.setSrc(new IpAddress(src.getPort(), false));\n                if(src.getAdditionalData() != null)\n                    ((IpAddress)msg.getSrc()).setAdditionalData(src.getAdditionalData());\n            }\n        }\n    }","id":63963,"modified_method":"void nullAddresses(Message msg, IpAddress dest, IpAddress src) {\n        msg.setDest(null);\n        if(!dest.isMulticastAddress()) { // unicast\n            if(src != null) {\n                if(null_src_addresses)\n                    msg.setSrc(new IpAddress(src.getPort(), false)); // null the host part, leave the port\n                if(src.getAdditionalData() != null)\n                    ((IpAddress)msg.getSrc()).setAdditionalData(src.getAdditionalData());\n            }\n            else {\n                msg.setSrc(null);\n            }\n        }\n        else {  // multicast\n            if(src != null) {\n                if(null_src_addresses)\n                    msg.setSrc(new IpAddress(src.getPort(), false));  // null the host part, leave the port\n                if(src.getAdditionalData() != null)\n                    ((IpAddress)msg.getSrc()).setAdditionalData(src.getAdditionalData());\n            }\n        }\n    }","commit_id":"aca1f8598a09e1ef241e0e698d09c4c1ba7ae146","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Setup the Protocol instance acording to the configuration string\n     * The following properties are being read by the UDP protocol\n     * param mcast_addr - the multicast address to use default is 228.8.8.8\n     * param mcast_port - (int) the port that the multicast is sent on default is 7600\n     * param ip_mcast - (boolean) flag whether to use IP multicast - default is true\n     * param ip_ttl - Set the default time-to-live for multicast packets sent out on this socket. default is 32\n     * @return true if no other properties are left.\n     *         false if the properties still have data in them, ie ,\n     *         properties are left over and not handled by the protocol stack\n     *\n     */\n    public boolean setProperties(Properties props) {\n        String str;\n        String tmp = null;\n\n        super.setProperties(props);\n        \n        // PropertyPermission not granted if running in an untrusted environment with JNLP.\n        try {\n            tmp=System.getProperty(\"bind.address\");\n            if(Boolean.getBoolean(IGNORE_BIND_ADDRESS_PROPERTY)) {\n                tmp=null;\n            }\n        }\n        catch (SecurityException ex){\n        }\n        \n        if(tmp != null)\n            str=tmp;\n        else\n            str=props.getProperty(\"bind_addr\");\n        if(str != null) {\n            try {\n                bind_addr=InetAddress.getByName(str);\n            }\n            catch(UnknownHostException unknown) {\n                if(log.isFatalEnabled()) log.fatal(\"(bind_addr): host \" + str + \" not known\");\n                return false;\n            }\n            props.remove(\"bind_addr\");\n        }\n\n        str=props.getProperty(\"bind_to_all_interfaces\");\n        if(str != null) {\n            bind_to_all_interfaces=new Boolean(str).booleanValue();\n            props.remove(\"bind_to_all_interfaces\");\n        }\n\n        str=props.getProperty(\"bind_port\");\n        if(str != null) {\n            bind_port=Integer.parseInt(str);\n            props.remove(\"bind_port\");\n        }\n\n        str=props.getProperty(\"num_last_ports\");\n        if(str != null) {\n            num_last_ports=Integer.parseInt(str);\n            props.remove(\"num_last_ports\");\n        }\n\n\t\tstr=props.getProperty(\"start_port\");\n        if(str != null) {\n            bind_port=Integer.parseInt(str);\n            props.remove(\"start_port\");\n        }\n\n\t\tstr=props.getProperty(\"port_range\");\n        if(str != null) {\n            port_range=Integer.parseInt(str);\n            props.remove(\"port_range\");\n        }\n\n        str=props.getProperty(\"mcast_addr\");\n        if(str != null) {\n            mcast_addr_name=str;\n            props.remove(\"mcast_addr\");\n        }\n\n        str=props.getProperty(\"mcast_port\");\n        if(str != null) {\n            mcast_port=Integer.parseInt(str);\n            props.remove(\"mcast_port\");\n        }\n\n        str=props.getProperty(\"ip_mcast\");\n        if(str != null) {\n            ip_mcast=Boolean.valueOf(str).booleanValue();\n            props.remove(\"ip_mcast\");\n        }\n\n        str=props.getProperty(\"ip_ttl\");\n        if(str != null) {\n            ip_ttl=Integer.parseInt(str);\n            props.remove(\"ip_ttl\");\n        }\n\n        str=props.getProperty(\"mcast_send_buf_size\");\n        if(str != null) {\n            mcast_send_buf_size=Integer.parseInt(str);\n            props.remove(\"mcast_send_buf_size\");\n        }\n\n        str=props.getProperty(\"mcast_recv_buf_size\");\n        if(str != null) {\n            mcast_recv_buf_size=Integer.parseInt(str);\n            props.remove(\"mcast_recv_buf_size\");\n        }\n\n        str=props.getProperty(\"ucast_send_buf_size\");\n        if(str != null) {\n            ucast_send_buf_size=Integer.parseInt(str);\n            props.remove(\"ucast_send_buf_size\");\n        }\n\n        str=props.getProperty(\"ucast_recv_buf_size\");\n        if(str != null) {\n            ucast_recv_buf_size=Integer.parseInt(str);\n            props.remove(\"ucast_recv_buf_size\");\n        }\n\n        str=props.getProperty(\"loopback\");\n        if(str != null) {\n            loopback=Boolean.valueOf(str).booleanValue();\n            props.remove(\"loopback\");\n        }\n\n        str=props.getProperty(\"discard_incompatibe_packets\");\n        if(str != null) {\n            discard_incompatible_packets=Boolean.valueOf(str).booleanValue();\n            props.remove(\"discard_incompatibe_packets\");\n        }\n\n        // this is deprecated, just left for compatibility (use use_incoming_packet_handler)\n        str=props.getProperty(\"use_packet_handler\");\n        if(str != null) {\n            use_incoming_packet_handler=Boolean.valueOf(str).booleanValue();\n            props.remove(\"use_packet_handler\");\n            if(log.isWarnEnabled()) log.warn(\"'use_packet_handler' is deprecated; use 'use_incoming_packet_handler' instead\");\n        }\n\n        str=props.getProperty(\"use_incoming_packet_handler\");\n        if(str != null) {\n            use_incoming_packet_handler=Boolean.valueOf(str).booleanValue();\n            props.remove(\"use_incoming_packet_handler\");\n        }\n\n        str=props.getProperty(\"use_outgoing_packet_handler\");\n        if(str != null) {\n            use_outgoing_packet_handler=Boolean.valueOf(str).booleanValue();\n            props.remove(\"use_outgoing_packet_handler\");\n        }\n\n        str=props.getProperty(\"max_bundle_size\");\n        if(str != null) {\n            int bundle_size=Integer.parseInt(str);\n            if(bundle_size > max_bundle_size) {\n                if(log.isErrorEnabled()) log.error(\"max_bundle_size (\" + bundle_size +\n                        \") is greater than largest UDP fragmentation size (\" + max_bundle_size + ')');\n                return false;\n            }\n            if(bundle_size <= 0) {\n                if(log.isErrorEnabled()) log.error(\"max_bundle_size (\" + bundle_size + \") is <= 0\");\n                return false;\n            }\n            max_bundle_size=bundle_size;\n            props.remove(\"max_bundle_size\");\n        }\n\n        str=props.getProperty(\"max_bundle_timeout\");\n        if(str != null) {\n            max_bundle_timeout=Long.parseLong(str);\n            if(max_bundle_timeout <= 0) {\n                if(log.isErrorEnabled()) log.error(\"max_bundle_timeout of \" + max_bundle_timeout + \" is invalid\");\n                return false;\n            }\n            props.remove(\"max_bundle_timeout\");\n        }\n\n        str=props.getProperty(\"enable_bundling\");\n        if(str != null) {\n            enable_bundling=Boolean.valueOf(str).booleanValue();\n            props.remove(\"enable_bundling\");\n        }\n\n        str=props.getProperty(\"use_addr_translation\");\n        if(str != null) {\n            use_addr_translation=Boolean.valueOf(str).booleanValue();\n            props.remove(\"use_addr_translation\");\n        }\n\n        if(props.size() > 0) {\n            System.err.println(\"UDP.setProperties(): the following properties are not recognized:\");\n            props.list(System.out);\n            return false;\n        }\n\n        if(enable_bundling) {\n            if(use_outgoing_packet_handler == false)\n                if(log.isWarnEnabled()) log.warn(\"enable_bundling is true; setting use_outgoing_packet_handler=true\");\n            use_outgoing_packet_handler=true;\n        }\n\n        return true;\n    }","id":63964,"modified_method":"/**\n     * Setup the Protocol instance acording to the configuration string\n     * The following properties are being read by the UDP protocol\n     * param mcast_addr - the multicast address to use default is 228.8.8.8\n     * param mcast_port - (int) the port that the multicast is sent on default is 7600\n     * param ip_mcast - (boolean) flag whether to use IP multicast - default is true\n     * param ip_ttl - Set the default time-to-live for multicast packets sent out on this socket. default is 32\n     * @return true if no other properties are left.\n     *         false if the properties still have data in them, ie ,\n     *         properties are left over and not handled by the protocol stack\n     *\n     */\n    public boolean setProperties(Properties props) {\n        String str;\n        String tmp = null;\n\n        super.setProperties(props);\n        \n        // PropertyPermission not granted if running in an untrusted environment with JNLP.\n        try {\n            tmp=System.getProperty(\"bind.address\");\n            if(Boolean.getBoolean(IGNORE_BIND_ADDRESS_PROPERTY)) {\n                tmp=null;\n            }\n        }\n        catch (SecurityException ex){\n        }\n        \n        if(tmp != null)\n            str=tmp;\n        else\n            str=props.getProperty(\"bind_addr\");\n        if(str != null) {\n            try {\n                bind_addr=InetAddress.getByName(str);\n            }\n            catch(UnknownHostException unknown) {\n                if(log.isFatalEnabled()) log.fatal(\"(bind_addr): host \" + str + \" not known\");\n                return false;\n            }\n            props.remove(\"bind_addr\");\n        }\n\n        str=props.getProperty(\"bind_to_all_interfaces\");\n        if(str != null) {\n            bind_to_all_interfaces=new Boolean(str).booleanValue();\n            props.remove(\"bind_to_all_interfaces\");\n        }\n\n        str=props.getProperty(\"bind_port\");\n        if(str != null) {\n            bind_port=Integer.parseInt(str);\n            props.remove(\"bind_port\");\n        }\n\n        str=props.getProperty(\"num_last_ports\");\n        if(str != null) {\n            num_last_ports=Integer.parseInt(str);\n            props.remove(\"num_last_ports\");\n        }\n\n\t\tstr=props.getProperty(\"start_port\");\n        if(str != null) {\n            bind_port=Integer.parseInt(str);\n            props.remove(\"start_port\");\n        }\n\n\t\tstr=props.getProperty(\"port_range\");\n        if(str != null) {\n            port_range=Integer.parseInt(str);\n            props.remove(\"port_range\");\n        }\n\n        str=props.getProperty(\"mcast_addr\");\n        if(str != null) {\n            mcast_addr_name=str;\n            props.remove(\"mcast_addr\");\n        }\n\n        str=props.getProperty(\"mcast_port\");\n        if(str != null) {\n            mcast_port=Integer.parseInt(str);\n            props.remove(\"mcast_port\");\n        }\n\n        str=props.getProperty(\"ip_mcast\");\n        if(str != null) {\n            ip_mcast=Boolean.valueOf(str).booleanValue();\n            props.remove(\"ip_mcast\");\n        }\n\n        str=props.getProperty(\"ip_ttl\");\n        if(str != null) {\n            ip_ttl=Integer.parseInt(str);\n            props.remove(\"ip_ttl\");\n        }\n\n        str=props.getProperty(\"mcast_send_buf_size\");\n        if(str != null) {\n            mcast_send_buf_size=Integer.parseInt(str);\n            props.remove(\"mcast_send_buf_size\");\n        }\n\n        str=props.getProperty(\"mcast_recv_buf_size\");\n        if(str != null) {\n            mcast_recv_buf_size=Integer.parseInt(str);\n            props.remove(\"mcast_recv_buf_size\");\n        }\n\n        str=props.getProperty(\"ucast_send_buf_size\");\n        if(str != null) {\n            ucast_send_buf_size=Integer.parseInt(str);\n            props.remove(\"ucast_send_buf_size\");\n        }\n\n        str=props.getProperty(\"ucast_recv_buf_size\");\n        if(str != null) {\n            ucast_recv_buf_size=Integer.parseInt(str);\n            props.remove(\"ucast_recv_buf_size\");\n        }\n\n        str=props.getProperty(\"loopback\");\n        if(str != null) {\n            loopback=Boolean.valueOf(str).booleanValue();\n            props.remove(\"loopback\");\n        }\n\n        str=props.getProperty(\"discard_incompatibe_packets\");\n        if(str != null) {\n            discard_incompatible_packets=Boolean.valueOf(str).booleanValue();\n            props.remove(\"discard_incompatibe_packets\");\n        }\n\n        // this is deprecated, just left for compatibility (use use_incoming_packet_handler)\n        str=props.getProperty(\"use_packet_handler\");\n        if(str != null) {\n            use_incoming_packet_handler=Boolean.valueOf(str).booleanValue();\n            props.remove(\"use_packet_handler\");\n            if(log.isWarnEnabled()) log.warn(\"'use_packet_handler' is deprecated; use 'use_incoming_packet_handler' instead\");\n        }\n\n        str=props.getProperty(\"use_incoming_packet_handler\");\n        if(str != null) {\n            use_incoming_packet_handler=Boolean.valueOf(str).booleanValue();\n            props.remove(\"use_incoming_packet_handler\");\n        }\n\n        str=props.getProperty(\"use_outgoing_packet_handler\");\n        if(str != null) {\n            use_outgoing_packet_handler=Boolean.valueOf(str).booleanValue();\n            props.remove(\"use_outgoing_packet_handler\");\n        }\n\n        str=props.getProperty(\"max_bundle_size\");\n        if(str != null) {\n            int bundle_size=Integer.parseInt(str);\n            if(bundle_size > max_bundle_size) {\n                if(log.isErrorEnabled()) log.error(\"max_bundle_size (\" + bundle_size +\n                        \") is greater than largest UDP fragmentation size (\" + max_bundle_size + ')');\n                return false;\n            }\n            if(bundle_size <= 0) {\n                if(log.isErrorEnabled()) log.error(\"max_bundle_size (\" + bundle_size + \") is <= 0\");\n                return false;\n            }\n            max_bundle_size=bundle_size;\n            props.remove(\"max_bundle_size\");\n        }\n\n        str=props.getProperty(\"max_bundle_timeout\");\n        if(str != null) {\n            max_bundle_timeout=Long.parseLong(str);\n            if(max_bundle_timeout <= 0) {\n                if(log.isErrorEnabled()) log.error(\"max_bundle_timeout of \" + max_bundle_timeout + \" is invalid\");\n                return false;\n            }\n            props.remove(\"max_bundle_timeout\");\n        }\n\n        str=props.getProperty(\"enable_bundling\");\n        if(str != null) {\n            enable_bundling=Boolean.valueOf(str).booleanValue();\n            props.remove(\"enable_bundling\");\n        }\n\n        str=props.getProperty(\"use_addr_translation\");\n        if(str != null) {\n            use_addr_translation=Boolean.valueOf(str).booleanValue();\n            props.remove(\"use_addr_translation\");\n        }\n\n        str=props.getProperty(\"null_src_addresses\");\n        if(str != null) {\n            null_src_addresses=Boolean.valueOf(str).booleanValue();\n            props.remove(\"null_src_addresses\");\n        }\n\n        if(props.size() > 0) {\n            System.err.println(\"UDP.setProperties(): the following properties are not recognized:\");\n            props.list(System.out);\n            return false;\n        }\n\n        if(enable_bundling) {\n            if(use_outgoing_packet_handler == false)\n                if(log.isWarnEnabled()) log.warn(\"enable_bundling is true; setting use_outgoing_packet_handler=true\");\n            use_outgoing_packet_handler=true;\n        }\n\n        return true;\n    }","commit_id":"aca1f8598a09e1ef241e0e698d09c4c1ba7ae146","url":"https://github.com/belaban/JGroups"},{"original_method":"private CommitChangeListDialog(final Project project,\n                                 final List<Change> changes,\n                                 final LocalChangeList initialSelection,\n                                 final List<CommitExecutor> executors,\n                                 final boolean showVcsCommit, final LocalChangeList defaultChangeList,\n                                 final List<LocalChangeList> changeLists, @Nullable final AbstractVcs singleVcs, final boolean isAlien,\n                                 final String comment, @Nullable CommitResultHandler customResultHandler) {\n    super(project, true);\n    myCommitContext = new CommitContext();\n    myProject = project;\n    myExecutors = executors;\n    myShowVcsCommit = showVcsCommit;\n    myVcs = singleVcs;\n    myResultHandler = customResultHandler;\n    myListComments = new HashMap<String, String>();\n    myAdditionalData = new PseudoMap<Object, Object>();\n    myDiffDetails = new MyChangeProcessor(myProject);\n\n    if (!myShowVcsCommit && ((myExecutors == null) || myExecutors.size() == 0)) {\n      throw new IllegalArgumentException(\"nothing found to execute commit with\");\n    }\n\n    myAllOfDefaultChangeListChangesIncluded = new HashSet<Change>(changes).containsAll(new HashSet<Change>(defaultChangeList.getChanges()));\n\n    myIsAlien = isAlien;\n    if (isAlien) {\n      AlienChangeListBrowser browser = new AlienChangeListBrowser(project, changeLists, changes, initialSelection, true, true, singleVcs);\n      myBrowser = browser;\n      myBrowserExtender = browser;\n    } else {\n      MultipleChangeListBrowser browser = new MultipleChangeListBrowser(project, changeLists, changes, getDisposable(), initialSelection, true, true,\n                                                                        new Runnable() {\n                                                                          @Override\n                                                                          public void run() {\n                                                                            updateWarning();\n                                                                          }\n                                                                        },\n                                                                        new Runnable() {\n                                                                          @Override\n                                                                          public void run() {\n                                                                            for (CheckinHandler handler : myHandlers) {\n                                                                              handler.includedChangesChanged();\n                                                                            }\n                                                                          }\n                                                                        }) {\n        @Override\n        protected void afterDiffRefresh() {\n          myBrowser.rebuildList();\n          myBrowser.setDataIsDirty(false);\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            @Override\n            public void run() {\n              IdeFocusManager.findInstance().requestFocus(myBrowser.getViewer().getPreferredFocusedComponent(), true);\n            }\n          });\n        }\n      };\n      myBrowser = browser;\n      myBrowser.setAlwayExpandList(false);\n      myBrowserExtender = browser.getExtender();\n    }\n    myBrowser.getViewer().addSelectionListener(new Runnable() {\n      @Override\n      public void run() {\n        SwingUtilities.invokeLater(new Runnable() {\n          @Override\n          public void run() {\n            changeDetails();\n          }\n        });\n      }\n    });\n\n    myBrowserExtender.addToolbarActions(this);\n\n    myBrowserExtender.addSelectedListChangeListener(new SelectedListChangeListener() {\n      @Override\n      public void selectedListChanged() {\n        updateOnListSelection();\n      }\n    });\n\n    myCommitMessageArea = new CommitMessage(project);\n\n    if (!VcsConfiguration.getInstance(project).CLEAR_INITIAL_COMMIT_MESSAGE) {\n      setComment(project, initialSelection, comment);\n    }\n\n    myBrowser.setDiffBottomComponent(new DiffCommitMessageEditor(this));\n\n    myActionName = VcsBundle.message(\"commit.dialog.title\");\n\n    myAdditionalOptionsPanel = new JPanel();\n\n    myAdditionalOptionsPanel.setLayout(new BorderLayout());\n    Box optionsBox = Box.createVerticalBox();\n\n    boolean hasVcsOptions = false;\n    Box vcsCommitOptions = Box.createVerticalBox();\n    final List<AbstractVcs> vcses = new ArrayList<AbstractVcs>(getAffectedVcses());\n    Collections.sort(vcses, new Comparator<AbstractVcs>() {\n      @Override\n      public int compare(AbstractVcs o1, AbstractVcs o2) {\n        return o1.getKeyInstanceMethod().getName().compareToIgnoreCase(o2.getKeyInstanceMethod().getName());\n      }\n    });\n    myCheckinChangeListSpecificComponents = new HashMap<String, CheckinChangeListSpecificComponent>();\n    for (AbstractVcs vcs : vcses) {\n      final CheckinEnvironment checkinEnvironment = vcs.getCheckinEnvironment();\n      if (checkinEnvironment != null) {\n        final RefreshableOnComponent options = checkinEnvironment.createAdditionalOptionsPanel(this, myAdditionalData);\n        if (options != null) {\n          JPanel vcsOptions = new JPanel(new BorderLayout());\n          vcsOptions.add(options.getComponent(), BorderLayout.CENTER);\n          vcsOptions.setBorder(IdeBorderFactory.createTitledBorder(vcs.getDisplayName(), true));\n          vcsCommitOptions.add(vcsOptions);\n          myPerVcsOptionsPanels.put(vcs, vcsOptions);\n          myAdditionalComponents.add(options);\n          if (options instanceof CheckinChangeListSpecificComponent) {\n            myCheckinChangeListSpecificComponents.put(vcs.getName(), (CheckinChangeListSpecificComponent) options);\n          }\n          hasVcsOptions = true;\n        }\n      }\n    }\n\n    if (hasVcsOptions) {\n      vcsCommitOptions.add(Box.createVerticalGlue());\n      optionsBox.add(vcsCommitOptions);\n    }\n\n    boolean beforeVisible = false;\n    boolean afterVisible = false;\n    Box beforeBox = Box.createVerticalBox();\n    Box afterBox = Box.createVerticalBox();\n    for (BaseCheckinHandlerFactory factory : getCheckInFactories(project)) {\n      final CheckinHandler handler = factory.createHandler(this, myCommitContext);\n      if (CheckinHandler.DUMMY.equals(handler)) continue;\n\n      myHandlers.add(handler);\n      final RefreshableOnComponent beforePanel = handler.getBeforeCheckinConfigurationPanel();\n      if (beforePanel != null) {\n        beforeBox.add(beforePanel.getComponent());\n        beforeVisible = true;\n        myAdditionalComponents.add(beforePanel);\n      }\n\n      final RefreshableOnComponent afterPanel = handler.getAfterCheckinConfigurationPanel(getDisposable());\n      if (afterPanel != null) {\n        afterBox.add(afterPanel.getComponent());\n        afterVisible = true;\n        myAdditionalComponents.add(afterPanel);\n      }\n    }\n\n    final String actionName = getCommitActionName();\n    final String borderTitleName = actionName.replace(\"_\", \"\").replace(\"&\", \"\");\n    if (beforeVisible) {\n      beforeBox.add(Box.createVerticalGlue());\n      JPanel beforePanel = new JPanel(new BorderLayout());\n      beforePanel.add(beforeBox);\n      beforePanel.setBorder(IdeBorderFactory.createTitledBorder(\n        VcsBundle.message(\"border.standard.checkin.options.group\", borderTitleName), true));\n      optionsBox.add(beforePanel);\n    }\n\n    if (afterVisible) {\n      afterBox.add(Box.createVerticalGlue());\n      JPanel afterPanel = new JPanel(new BorderLayout());\n      afterPanel.add(afterBox);\n      afterPanel.setBorder(IdeBorderFactory.createTitledBorder(\n        VcsBundle.message(\"border.standard.after.checkin.options.group\", borderTitleName), true));\n      optionsBox.add(afterPanel);\n    }\n\n    if (hasVcsOptions || beforeVisible || afterVisible) {\n      optionsBox.add(Box.createVerticalGlue());\n      myAdditionalOptionsPanel.add(optionsBox, BorderLayout.NORTH);\n    }\n\n    myOkActionText = actionName;\n\n    if (myShowVcsCommit) {\n      setTitle(myActionName);\n    }\n    else {\n      setTitle(trimEllipsis(myExecutors.get(0).getActionText()));\n    }\n\n    restoreState();\n\n    if (myExecutors != null) {\n      myExecutorActions = new CommitExecutorAction[myExecutors.size()];\n\n      for (int i = 0; i < myExecutors.size(); i++) {\n        final CommitExecutor commitExecutor = myExecutors.get(i);\n        myExecutorActions[i] = new CommitExecutorAction(commitExecutor, i == 0 && !myShowVcsCommit);\n      }\n    } else {\n      myExecutorActions = null;\n    }\n\n    myWarningLabel = new JLabel();\n    myWarningLabel.setUI(new MultiLineLabelUI());\n    myWarningLabel.setForeground(Color.red);\n\n    updateWarning();\n\n    init();\n    updateButtons();\n    updateVcsOptionsVisibility();\n\n    updateOnListSelection();\n    myCommitMessageArea.requestFocusInMessage();\n\n    for (EditChangelistSupport support : Extensions.getExtensions(EditChangelistSupport.EP_NAME, project)) {\n      support.installSearch(myCommitMessageArea.getEditorField(), myCommitMessageArea.getEditorField());\n    }\n\n    showDetailsIfSaved();\n  }","id":63965,"modified_method":"private CommitChangeListDialog(final Project project,\n                                 final List<Change> changes,\n                                 final LocalChangeList initialSelection,\n                                 final List<CommitExecutor> executors,\n                                 final boolean showVcsCommit, final LocalChangeList defaultChangeList,\n                                 final List<LocalChangeList> changeLists, @Nullable final AbstractVcs singleVcs, final boolean isAlien,\n                                 final String comment, @Nullable CommitResultHandler customResultHandler) {\n    super(project, true);\n    myCommitContext = new CommitContext();\n    myProject = project;\n    myExecutors = executors;\n    myShowVcsCommit = showVcsCommit;\n    myVcs = singleVcs;\n    myResultHandler = customResultHandler;\n    myListComments = new HashMap<String, String>();\n    myAdditionalData = new PseudoMap<Object, Object>();\n    myDiffDetails = new MyChangeProcessor(myProject);\n\n    if (!myShowVcsCommit && ((myExecutors == null) || myExecutors.size() == 0)) {\n      throw new IllegalArgumentException(\"nothing found to execute commit with\");\n    }\n\n    myAllOfDefaultChangeListChangesIncluded = new HashSet<Change>(changes).containsAll(new HashSet<Change>(defaultChangeList.getChanges()));\n\n    myIsAlien = isAlien;\n    if (isAlien) {\n      AlienChangeListBrowser browser = new AlienChangeListBrowser(project, changeLists, changes, initialSelection, true, true, singleVcs);\n      myBrowser = browser;\n      myBrowserExtender = browser;\n    } else {\n      MultipleChangeListBrowser browser = new MultipleChangeListBrowser(project, changeLists, changes, getDisposable(), initialSelection, true, true,\n                                                                        new Runnable() {\n                                                                          @Override\n                                                                          public void run() {\n                                                                            updateWarning();\n                                                                          }\n                                                                        },\n                                                                        new Runnable() {\n                                                                          @Override\n                                                                          public void run() {\n                                                                            for (CheckinHandler handler : myHandlers) {\n                                                                              handler.includedChangesChanged();\n                                                                            }\n                                                                          }\n                                                                        }) {\n        @Override\n        protected void afterDiffRefresh() {\n          myBrowser.rebuildList();\n          myBrowser.setDataIsDirty(false);\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            @Override\n            public void run() {\n              IdeFocusManager.findInstance().requestFocus(myBrowser.getViewer().getPreferredFocusedComponent(), true);\n            }\n          });\n        }\n      };\n      myBrowser = browser;\n      myBrowser.setAlwayExpandList(false);\n      myBrowserExtender = browser.getExtender();\n    }\n    myBrowser.getViewer().addSelectionListener(new Runnable() {\n      @Override\n      public void run() {\n        SwingUtilities.invokeLater(new Runnable() {\n          @Override\n          public void run() {\n            changeDetails();\n          }\n        });\n      }\n    });\n\n    myBrowserExtender.addToolbarActions(this);\n\n    myBrowserExtender.addSelectedListChangeListener(new SelectedListChangeListener() {\n      @Override\n      public void selectedListChanged() {\n        updateOnListSelection();\n      }\n    });\n\n    myCommitMessageArea = new CommitMessage(project);\n\n    if (!VcsConfiguration.getInstance(project).CLEAR_INITIAL_COMMIT_MESSAGE) {\n      setComment(project, initialSelection, comment);\n    }\n\n    myBrowser.setDiffBottomComponent(new DiffCommitMessageEditor(this));\n\n    myActionName = VcsBundle.message(\"commit.dialog.title\");\n\n    Box optionsBox = Box.createVerticalBox();\n\n    boolean hasVcsOptions = false;\n    Box vcsCommitOptions = Box.createVerticalBox();\n    final List<AbstractVcs> vcses = new ArrayList<AbstractVcs>(getAffectedVcses());\n    Collections.sort(vcses, new Comparator<AbstractVcs>() {\n      @Override\n      public int compare(AbstractVcs o1, AbstractVcs o2) {\n        return o1.getKeyInstanceMethod().getName().compareToIgnoreCase(o2.getKeyInstanceMethod().getName());\n      }\n    });\n    myCheckinChangeListSpecificComponents = new HashMap<String, CheckinChangeListSpecificComponent>();\n    for (AbstractVcs vcs : vcses) {\n      final CheckinEnvironment checkinEnvironment = vcs.getCheckinEnvironment();\n      if (checkinEnvironment != null) {\n        final RefreshableOnComponent options = checkinEnvironment.createAdditionalOptionsPanel(this, myAdditionalData);\n        if (options != null) {\n          JPanel vcsOptions = new JPanel(new BorderLayout());\n          vcsOptions.add(options.getComponent(), BorderLayout.CENTER);\n          vcsOptions.setBorder(IdeBorderFactory.createTitledBorder(vcs.getDisplayName(), true));\n          vcsCommitOptions.add(vcsOptions);\n          myPerVcsOptionsPanels.put(vcs, vcsOptions);\n          myAdditionalComponents.add(options);\n          if (options instanceof CheckinChangeListSpecificComponent) {\n            myCheckinChangeListSpecificComponents.put(vcs.getName(), (CheckinChangeListSpecificComponent) options);\n          }\n          hasVcsOptions = true;\n        }\n      }\n    }\n\n    if (hasVcsOptions) {\n      vcsCommitOptions.add(Box.createVerticalGlue());\n      optionsBox.add(vcsCommitOptions);\n    }\n\n    boolean beforeVisible = false;\n    boolean afterVisible = false;\n    Box beforeBox = Box.createVerticalBox();\n    Box afterBox = Box.createVerticalBox();\n    for (BaseCheckinHandlerFactory factory : getCheckInFactories(project)) {\n      final CheckinHandler handler = factory.createHandler(this, myCommitContext);\n      if (CheckinHandler.DUMMY.equals(handler)) continue;\n\n      myHandlers.add(handler);\n      final RefreshableOnComponent beforePanel = handler.getBeforeCheckinConfigurationPanel();\n      if (beforePanel != null) {\n        beforeBox.add(beforePanel.getComponent());\n        beforeVisible = true;\n        myAdditionalComponents.add(beforePanel);\n      }\n\n      final RefreshableOnComponent afterPanel = handler.getAfterCheckinConfigurationPanel(getDisposable());\n      if (afterPanel != null) {\n        afterBox.add(afterPanel.getComponent());\n        afterVisible = true;\n        myAdditionalComponents.add(afterPanel);\n      }\n    }\n\n    final String actionName = getCommitActionName();\n    final String borderTitleName = actionName.replace(\"_\", \"\").replace(\"&\", \"\");\n    if (beforeVisible) {\n      beforeBox.add(Box.createVerticalGlue());\n      JPanel beforePanel = new JPanel(new BorderLayout());\n      beforePanel.add(beforeBox);\n      beforePanel.setBorder(IdeBorderFactory.createTitledBorder(\n        VcsBundle.message(\"border.standard.checkin.options.group\", borderTitleName), true));\n      optionsBox.add(beforePanel);\n    }\n\n    if (afterVisible) {\n      afterBox.add(Box.createVerticalGlue());\n      JPanel afterPanel = new JPanel(new BorderLayout());\n      afterPanel.add(afterBox);\n      afterPanel.setBorder(IdeBorderFactory.createTitledBorder(\n        VcsBundle.message(\"border.standard.after.checkin.options.group\", borderTitleName), true));\n      optionsBox.add(afterPanel);\n    }\n\n    if (hasVcsOptions || beforeVisible || afterVisible) {\n      optionsBox.add(Box.createVerticalGlue());\n      myAdditionalOptionsPanel = new JPanel(new BorderLayout());\n      myAdditionalOptionsPanel.add(optionsBox, BorderLayout.NORTH);\n    }\n    else {\n      myAdditionalOptionsPanel = null;\n    }\n\n    myOkActionText = actionName;\n\n    if (myShowVcsCommit) {\n      setTitle(myActionName);\n    }\n    else {\n      setTitle(trimEllipsis(myExecutors.get(0).getActionText()));\n    }\n\n    restoreState();\n\n    if (myExecutors != null) {\n      myExecutorActions = new CommitExecutorAction[myExecutors.size()];\n\n      for (int i = 0; i < myExecutors.size(); i++) {\n        final CommitExecutor commitExecutor = myExecutors.get(i);\n        myExecutorActions[i] = new CommitExecutorAction(commitExecutor, i == 0 && !myShowVcsCommit);\n      }\n    } else {\n      myExecutorActions = null;\n    }\n\n    myWarningLabel = new JLabel();\n    myWarningLabel.setUI(new MultiLineLabelUI());\n    myWarningLabel.setForeground(Color.red);\n\n    updateWarning();\n\n    init();\n    updateButtons();\n    updateVcsOptionsVisibility();\n\n    updateOnListSelection();\n    myCommitMessageArea.requestFocusInMessage();\n\n    for (EditChangelistSupport support : Extensions.getExtensions(EditChangelistSupport.EP_NAME, project)) {\n      support.installSearch(myCommitMessageArea.getEditorField(), myCommitMessageArea.getEditorField());\n    }\n\n    showDetailsIfSaved();\n  }","commit_id":"4f909cee769f624fdbf1855f9cc13160ebb2553a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  @Nullable\n  protected JComponent createCenterPanel() {\n    JPanel rootPane = new JPanel(new BorderLayout());\n\n    mySplitter = new Splitter(true);\n    mySplitter.setHonorComponentsMinimumSize(true);\n    mySplitter.setFirstComponent(myBrowser);\n    mySplitter.setSecondComponent(myCommitMessageArea);\n    initMainSplitter();\n\n    rootPane.add(mySplitter, BorderLayout.CENTER);\n\n    myChangesInfoCalculator = new ChangeInfoCalculator();\n    myLegend = new CommitLegendPanel(myChangesInfoCalculator);\n    JPanel legendPanel = new JPanel(new BorderLayout());\n    legendPanel.add(myLegend.getComponent(), BorderLayout.EAST);\n    myBrowser.getBottomPanel().add(legendPanel, BorderLayout.SOUTH);\n\n    JPanel infoPanel = new JPanel(new BorderLayout());\n    JScrollPane optionsPane = ScrollPaneFactory.createScrollPane(myAdditionalOptionsPanel, true);\n    optionsPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);\n    optionsPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);\n    optionsPane.getVerticalScrollBar().setUI(ButtonlessScrollBarUI.createTransparent());\n    infoPanel.add(optionsPane, BorderLayout.CENTER);\n    rootPane.add(infoPanel, BorderLayout.EAST);\n    infoPanel.setBorder(IdeBorderFactory.createEmptyBorder(0, 10, 0, 0));\n\n    final JPanel wrapper = new JPanel(new GridBagLayout());\n    final GridBagConstraints gb = new GridBagConstraints(0, 0, 1, 1, 0, 0, GridBagConstraints.NORTHWEST, GridBagConstraints.NONE,\n                                                         new Insets(0, 0, 0, 0), 0, 0);\n    final JPanel panel = new JPanel(new BorderLayout());\n    panel.add(wrapper, BorderLayout.WEST);\n    rootPane.add(panel, BorderLayout.SOUTH);\n\n    myWarningLabel.setBorder(BorderFactory.createEmptyBorder(5,5,0,5));\n    wrapper.add(myWarningLabel, gb);\n\n    // TODO: there are no reason to use such heavy interface for a simple task.\n    myDetailsSplitter = new SplitterWithSecondHideable(true, \"Details\", rootPane,\n                                                       new OnOffListener<Integer>() {\n                                                         @Override\n                                                         public void on(Integer integer) {\n                                                           if (integer == 0) return;\n                                                           myDiffDetails.refresh();\n                                                           mySplitter.skipNextLayouting();\n                                                           myDetailsSplitter.getComponent().skipNextLayouting();\n                                                           final Dimension dialogSize = getSize();\n                                                           setSize(dialogSize.width, dialogSize.height + integer);\n                                                           repaint();\n                                                         }\n\n                                                         @Override\n                                                         public void off(Integer integer) {\n                                                           if (integer == 0) return;\n                                                           myDiffDetails.clear(); // TODO: we may want to keep it in memory\n                                                           mySplitter.skipNextLayouting();\n                                                           myDetailsSplitter.getComponent().skipNextLayouting();\n                                                           final Dimension dialogSize = getSize();\n                                                           setSize(dialogSize.width, dialogSize.height - integer);\n                                                           repaint();\n                                                         }\n                                                       }) {\n      @Override\n      protected RefreshablePanel createDetails() {\n        final JPanel panel = JBUI.Panels.simplePanel(myDiffDetails.getComponent());\n        return new RefreshablePanel() {\n          @Override\n          public boolean refreshDataSynch() {\n            return false;\n          }\n\n          @Override\n          public void dataChanged() {\n          }\n\n          @Override\n          public void refresh() {\n          }\n\n          @Override\n          public JPanel getPanel() {\n            return panel;\n          }\n\n          @Override\n          public void away() {\n          }\n\n          @Override\n          public boolean isStillValid(Object o) {\n            return false;\n          }\n\n          @Override\n          public void dispose() {\n          }\n        };\n      }\n\n      @Override\n      protected float getSplitterInitialProportion() {\n        float value = PropertiesComponent.getInstance().getFloat(DETAILS_SPLITTER_PROPORTION_OPTION, DETAILS_SPLITTER_PROPORTION_OPTION_DEFAULT);\n        if (value <= 0.05 || value >= 0.95) {\n          return DETAILS_SPLITTER_PROPORTION_OPTION_DEFAULT;\n        }\n        return value;\n      }\n    };\n\n    return myDetailsSplitter.getComponent();\n  }","id":63966,"modified_method":"@Override\n  @Nullable\n  protected JComponent createCenterPanel() {\n    mySplitter = new Splitter(true);\n    mySplitter.setHonorComponentsMinimumSize(true);\n    mySplitter.setFirstComponent(myBrowser);\n    mySplitter.setSecondComponent(myCommitMessageArea);\n    initMainSplitter();\n\n    myChangesInfoCalculator = new ChangeInfoCalculator();\n    myLegend = new CommitLegendPanel(myChangesInfoCalculator);\n    myBrowser.getBottomPanel().add(JBUI.Panels.simplePanel().addToRight(myLegend.getComponent()), BorderLayout.SOUTH);\n\n    JPanel mainPanel;\n    if (myAdditionalOptionsPanel != null) {\n      JScrollPane optionsPane = ScrollPaneFactory.createScrollPane(myAdditionalOptionsPanel, true);\n      optionsPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);\n      optionsPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);\n      optionsPane.getVerticalScrollBar().setUI(ButtonlessScrollBarUI.createTransparent());\n      JPanel infoPanel = JBUI.Panels.simplePanel(optionsPane).withBorder(JBUI.Borders.emptyLeft(10));\n\n      mainPanel = new JPanel(new MyOptionsLayout(mySplitter, infoPanel, 150));\n      mainPanel.add(mySplitter);\n      mainPanel.add(infoPanel);\n    } else {\n      mainPanel = mySplitter;\n    }\n\n    myWarningLabel.setBorder(BorderFactory.createEmptyBorder(5, 5, 0, 5));\n    final JPanel panel = new JPanel(new GridBagLayout());\n    panel.add(myWarningLabel, new GridBag().anchor(GridBagConstraints.NORTHWEST).weightx(1));\n\n    JPanel rootPane = JBUI.Panels.simplePanel(mainPanel).addToBottom(panel);\n\n    // TODO: there are no reason to use such heavy interface for a simple task.\n    myDetailsSplitter = new SplitterWithSecondHideable(true, \"Details\", rootPane,\n                                                       new OnOffListener<Integer>() {\n                                                         @Override\n                                                         public void on(Integer integer) {\n                                                           if (integer == 0) return;\n                                                           myDiffDetails.refresh();\n                                                           mySplitter.skipNextLayouting();\n                                                           myDetailsSplitter.getComponent().skipNextLayouting();\n                                                           final Dimension dialogSize = getSize();\n                                                           setSize(dialogSize.width, dialogSize.height + integer);\n                                                           repaint();\n                                                         }\n\n                                                         @Override\n                                                         public void off(Integer integer) {\n                                                           if (integer == 0) return;\n                                                           myDiffDetails.clear(); // TODO: we may want to keep it in memory\n                                                           mySplitter.skipNextLayouting();\n                                                           myDetailsSplitter.getComponent().skipNextLayouting();\n                                                           final Dimension dialogSize = getSize();\n                                                           setSize(dialogSize.width, dialogSize.height - integer);\n                                                           repaint();\n                                                         }\n                                                       }) {\n      @Override\n      protected RefreshablePanel createDetails() {\n        final JPanel panel = JBUI.Panels.simplePanel(myDiffDetails.getComponent());\n        return new RefreshablePanel() {\n          @Override\n          public boolean refreshDataSynch() {\n            return false;\n          }\n\n          @Override\n          public void dataChanged() {\n          }\n\n          @Override\n          public void refresh() {\n          }\n\n          @Override\n          public JPanel getPanel() {\n            return panel;\n          }\n\n          @Override\n          public void away() {\n          }\n\n          @Override\n          public boolean isStillValid(Object o) {\n            return false;\n          }\n\n          @Override\n          public void dispose() {\n          }\n        };\n      }\n\n      @Override\n      protected float getSplitterInitialProportion() {\n        float value = PropertiesComponent.getInstance().getFloat(DETAILS_SPLITTER_PROPORTION_OPTION, DETAILS_SPLITTER_PROPORTION_OPTION_DEFAULT);\n        if (value <= 0.05 || value >= 0.95) {\n          return DETAILS_SPLITTER_PROPORTION_OPTION_DEFAULT;\n        }\n        return value;\n      }\n    };\n\n    return myDetailsSplitter.getComponent();\n  }","commit_id":"4f909cee769f624fdbf1855f9cc13160ebb2553a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void getAdvertisedContributions(ProgressMonitor pm) {\n  \n    final ContributionListFetcher llf = new ContributionListFetcher();\n    llf.setProgressMonitor(pm);\n    new Thread(llf).start();\n  }","id":63967,"modified_method":"/**\n   * Starts a new thread to download the advertised list of contributions. Only\n   * one instance will run at a time.\n   */\n  public Thread getAdvertisedContributions(ProgressMonitor pm) {\n    \n    final ProgressMonitor progressMonitor = (pm != null) ? pm : new NullProgressMonitor();\n    \n    Thread downloadThread = new Thread(new Runnable() {\n      \n      public void run() {\n        downloadingListingLock.lock();\n        \n        try {\n          File tmpFolder = Base.createTempFolder(\"libarylist\", \"download\");\n    \n          File dest = new File(tmpFolder, \"contributions.xml\");\n          dest.setWritable(true);\n    \n          URL url = new URL(\"http://dl.dropbox.com/u/700641/generated/contributions.xml\");\n    \n          try {\n            if (FileDownloader.downloadFile(url, dest, progressMonitor)) {\n              hasDownloadedLatestList = true;\n              setAdvertisedList(dest);\n            }\n          } catch (IOException ioe) {\n          }\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n        \n        downloadingListingLock.unlock();\n      }\n    });\n    \n    downloadThread.start();\n    return downloadThread;\n  }","commit_id":"08ff321c15896eda457bc163f4241c766db0616b","url":"https://github.com/processing/processing"},{"original_method":"public ContributionListing() {\n    listeners = new ArrayList<ContributionChangeListener>();\n    advertisedContributions = new ArrayList<AdvertisedContribution>();\n    librariesByCategory = new HashMap<String, List<Contribution>>();\n    allContributions = new ArrayList<Contribution>();\n    hasDownloadedLatestList = false;\n  }","id":63968,"modified_method":"public ContributionListing() {\n    listeners = new ArrayList<ContributionChangeListener>();\n    advertisedContributions = new ArrayList<AdvertisedContribution>();\n    librariesByCategory = new HashMap<String, List<Contribution>>();\n    allContributions = new ArrayList<Contribution>();\n    downloadingListingLock = new ReentrantLock();\n  }","commit_id":"08ff321c15896eda457bc163f4241c766db0616b","url":"https://github.com/processing/processing"},{"original_method":"/** Creates and arranges the Swing components in the dialog. */\n  private void createComponents() {\n    dialog.setResizable(true);\n    \n    Container pane = dialog.getContentPane();\n    pane.setLayout(new GridBagLayout());\n    \n    { // The filter text area\n      GridBagConstraints c = new GridBagConstraints();\n      c.gridx = 0;\n      c.gridy = 0;\n      c.gridwidth = 2;\n      c.weightx = 1;\n      c.fill = GridBagConstraints.HORIZONTAL;\n      filterField = new FilterField();\n\n      pane.add(filterField, c);\n    }\n    \n    { // The scroll area containing the contribution listing.\n      GridBagConstraints c = new GridBagConstraints();\n      c.fill = GridBagConstraints.BOTH;\n      c.gridx = 0;\n      c.gridy = 1;\n      c.gridwidth = 2;\n      c.weighty = 1;\n      c.weightx = 1;\n      \n      JScrollPane scrollPane = new JScrollPane();\n      scrollPane.setPreferredSize(new Dimension(300, 300));\n      scrollPane.setViewportView(contributionListPanel);\n      scrollPane.getViewport().setOpaque(true);\n\n      scrollPane.getViewport().setBackground(contributionListPanel\n                                                 .getBackground());\n\n      scrollPane\n          .setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);\n      pane.add(scrollPane, c);\n      // pane.add(scrollPane, c);\n      scrollPane\n          .setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);\n    }\n    \n    { // Shows \"Category:\"\n      GridBagConstraints c = new GridBagConstraints();\n      c.gridx = 0;\n      c.gridy = 2;\n      pane.add(new Label(\"Category:\"), c);\n    }\n    \n    { // Combo box for selecting a category\n      GridBagConstraints c = new GridBagConstraints();\n      c.fill = GridBagConstraints.HORIZONTAL;\n      c.gridx = 1;\n      c.gridy = 2;\n\n      categoryChooser = new JComboBox();\n      updateCategoryChooser();\n      pane.add(categoryChooser, c);\n      categoryChooser.addItemListener(new ItemListener() {\n\n        public void itemStateChanged(ItemEvent e) {\n          category = (String) categoryChooser.getSelectedItem();\n          if (ContributionManager.ANY_CATEGORY.equals(category)) {\n            category = null;\n          }\n\n          filterLibraries(category, filterField.filters);\n        }\n      });\n    }\n    \n    // {\n    // GridBagConstraints c = new GridBagConstraints();\n    // c.fill = GridBagConstraints.HORIZONTAL;\n    // c.gridx = 0;\n    // c.gridy = 3;\n    // c.gridwidth = 2;\n    // JLabel statusLabel = new JLabel(\"Hello there. This is some text.\");\n    // statusLabel.setOpaque(true);\n    // statusLabel.setBackground(Color.black);\n    // pane.add(statusLabel, c);\n    // }\n    \n    dialog.setMinimumSize(new Dimension(550, 400));\n  }","id":63969,"modified_method":"/** Creates and arranges the Swing components in the dialog. */\n  private void createComponents() {\n    dialog.setResizable(true);\n    \n    Container pane = dialog.getContentPane();\n    pane.setLayout(new GridBagLayout());\n    \n    { // The filter text area\n      GridBagConstraints c = new GridBagConstraints();\n      c.gridx = 0;\n      c.gridy = 0;\n      c.gridwidth = 2;\n      c.weightx = 1;\n      c.fill = GridBagConstraints.HORIZONTAL;\n      filterField = new FilterField();\n\n      pane.add(filterField, c);\n    }\n    \n    { // The scroll area containing the contribution listing and the status bar.\n      GridBagConstraints c = new GridBagConstraints();\n      c.fill = GridBagConstraints.BOTH;\n      c.gridx = 0;\n      c.gridy = 1;\n      c.gridwidth = 2;\n      c.weighty = 1;\n      c.weightx = 1;\n      \n      final JScrollPane scrollPane = new JScrollPane();\n      scrollPane.setPreferredSize(new Dimension(300, 300));\n      scrollPane.setViewportView(contributionListPanel);\n      scrollPane.getViewport().setOpaque(true);\n      scrollPane.getViewport().setBackground(contributionListPanel.getBackground());\n      scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);\n      scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);\n      \n      statusBar = new StatusPanel();\n      statusBar.setBorder(BorderFactory.createEtchedBorder());\n      \n      final JLayeredPane layeredPane = new JLayeredPane();\n      layeredPane.add(scrollPane, JLayeredPane.DEFAULT_LAYER);\n      layeredPane.add(statusBar, JLayeredPane.PALETTE_LAYER);\n      \n      layeredPane.addComponentListener(new ComponentAdapter() {\n        \n        void resizeLayers() {\n          scrollPane.setSize(layeredPane.getSize());\n          scrollPane.updateUI();\n        }\n        \n        public void componentShown(ComponentEvent e) {\n          resizeLayers();\n        }\n        \n        public void componentResized(ComponentEvent arg0) {\n          resizeLayers();\n        }\n      });\n      \n      final JViewport viewport = scrollPane.getViewport();\n      viewport.addComponentListener(new ComponentAdapter() {\n        void resizeLayers() {\n          statusBar.setLocation(0, viewport.getHeight() - 18);\n          \n          Dimension d = viewport.getSize();\n          d.height = 20;\n          d.width += 3;\n          statusBar.setSize(d);\n        }\n        public void componentShown(ComponentEvent e) {\n          resizeLayers();\n        }\n        public void componentResized(ComponentEvent e) {\n          resizeLayers();\n        }\n      });\n      \n      pane.add(layeredPane, c);\n    }\n    \n    { // Shows \"Category:\"\n      GridBagConstraints c = new GridBagConstraints();\n      c.gridx = 0;\n      c.gridy = 2;\n      pane.add(new Label(\"Category:\"), c);\n    }\n    \n    { // Combo box for selecting a category\n      GridBagConstraints c = new GridBagConstraints();\n      c.fill = GridBagConstraints.HORIZONTAL;\n      c.gridx = 1;\n      c.gridy = 2;\n\n      categoryChooser = new JComboBox();\n      updateCategoryChooser();\n      pane.add(categoryChooser, c);\n      categoryChooser.addItemListener(new ItemListener() {\n\n        public void itemStateChanged(ItemEvent e) {\n          category = (String) categoryChooser.getSelectedItem();\n          if (ContributionManager.ANY_CATEGORY.equals(category)) {\n            category = null;\n          }\n\n          filterLibraries(category, filterField.filters);\n        }\n      });\n    }\n    \n    dialog.setMinimumSize(new Dimension(550, 400));\n  }","commit_id":"08ff321c15896eda457bc163f4241c766db0616b","url":"https://github.com/processing/processing"},{"original_method":"/**\n   * Non-blocking call to download and install a contribution in a new thread.\n   * \n   * @param url\n   *          Direct link to the contribution.\n   * @param toBeReplaced\n   *          The Contribution that will be replaced by this library being\n   *          installed (e.g. an advertised version of a contribution, or the\n   *          old version of a contribution that is being updated). Must not be\n   *          null.\n   */\n  public void downloadAndInstall(final URL url,\n                                 final Contribution toBeReplaced,\n                                 final JProgressMonitor downloadProgressMonitor,\n                                 final JProgressMonitor installProgressMonitor) {\n\n    final File libDest = getTemporaryFile(url);\n\n    new Thread(new Runnable() {\n\n      public void run() {\n        \n        try {\n          if (FileDownloader.downloadFile(url, libDest, downloadProgressMonitor)) {\n\n            installProgressMonitor.startTask(\"Installing\", ProgressMonitor.UNKNOWN);\n\n            InstalledContribution contribution = null;\n            switch (toBeReplaced.getType()) {\n            case LIBRARY:\n              contribution = installLibrary(libDest, false);\n              break;\n            case LIBRARY_COMPILATION:\n              contribution = installLibraryCompilation(libDest);\n              break;\n            case TOOL:\n              contribution = installTool(libDest);\n              break;\n            }\n            \n            if (contribution != null) {\n              // XXX contributionListing.getInformationFromAdvertised(contribution); get the category at least\n              contribListing.replaceContribution(toBeReplaced, contribution);\n              refreshInstalled();\n            }\n          }\n        } catch (IOException e) {\n          System.err.println(\"An error occured when downloading the contribution.\");\n        }\n\n        dialog.pack();\n        installProgressMonitor.finished();\n      }\n    }).start();\n    \n  }","id":63970,"modified_method":"/**\n   * Non-blocking call to download and install a contribution in a new thread.\n   * \n   * @param url\n   *          Direct link to the contribution.\n   * @param toBeReplaced\n   *          The Contribution that will be replaced by this library being\n   *          installed (e.g. an advertised version of a contribution, or the\n   *          old version of a contribution that is being updated). Must not be\n   *          null.\n   */\n  public void downloadAndInstall(final URL url,\n                                 final Contribution toBeReplaced,\n                                 final JProgressMonitor downloadProgressMonitor,\n                                 final JProgressMonitor installProgressMonitor) {\n\n    final File libDest = getTemporaryFile(url);\n\n    new Thread(new Runnable() {\n\n      public void run() {\n        \n        try {\n          if (FileDownloader.downloadFile(url, libDest, downloadProgressMonitor)) {\n\n            installProgressMonitor.startTask(\"Installing\", ProgressMonitor.UNKNOWN);\n\n            InstalledContribution contribution = null;\n            switch (toBeReplaced.getType()) {\n            case LIBRARY:\n              contribution = installLibrary(libDest, false);\n              break;\n            case LIBRARY_COMPILATION:\n              contribution = installLibraryCompilation(libDest);\n              break;\n            case TOOL:\n              contribution = installTool(libDest);\n              break;\n            }\n            \n            if (contribution != null) {\n              // XXX contributionListing.getInformationFromAdvertised(contribution); get the category at least\n              contribListing.replaceContribution(toBeReplaced, contribution);\n              refreshInstalled();\n            }\n          }\n        } catch (IOException e) {\n          statusBar.setErrorMessage(\"An error occured when \"\n              + \"downloading the contribution.\");\n        }\n\n        dialog.pack();\n        installProgressMonitor.finished();\n      }\n    }).start();\n    \n  }","commit_id":"08ff321c15896eda457bc163f4241c766db0616b","url":"https://github.com/processing/processing"},{"original_method":"protected void showFrame(Editor editor) {\n    this.editor = editor;\n    \n    if (!contribListing.hasDownloadedLatestList()) {\n      contribListing.getAdvertisedContributions(new AbstractProgressMonitor() {\n        public void startTask(String name, int maxValue) {\n        }\n        \n        public void finished() {\n          super.finished();\n          updateContributionListing();\n          updateCategoryChooser();\n        }\n      });\n    }\n    \n    updateContributionListing();\n    \n    if (dialog == null) {\n      dialog = new JFrame(\"Contribution Manager\");\n  \n      Base.setIcon(dialog);\n      \n      createComponents();\n  \n      registerDisposeListeners();\n  \n      dialog.pack();\n      Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();\n      dialog.setLocation((screen.width - dialog.getWidth()) / 2,\n                         (screen.height - dialog.getHeight()) / 2);\n  \n      contributionListPanel.grabFocus();\n    }\n    \n    dialog.setVisible(true);\n    \n    if (contributionIcons == null) {\n      try {\n        Image allButtons = ImageIO.read(Base.getLibStream(\"contributions.gif\"));\n        int count = allButtons.getHeight(dialog) / ContributionManager.ICON_HEIGHT;\n        contributionIcons = new Image[count];\n        contributionIcons[0]  = allButtons;\n        contributionIcons[1]  = allButtons;\n        contributionIcons[2]  = allButtons;\n        contributionIcons[3]  = allButtons;\n        \n        for (int i = 0; i < count; i++) {\n          Image image = dialog.createImage(\n                            new FilteredImageSource(allButtons.getSource(),\n                            new CropImageFilter(0, i * ContributionManager.ICON_HEIGHT,\n                                                ContributionManager.ICON_WIDTH,\n                                                ContributionManager.ICON_HEIGHT)));\n          contributionIcons[i] = image;\n        }\n        \n        contributionListPanel.updateColors();\n      } catch (IOException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n      }\n    }\n  }","id":63971,"modified_method":"protected void showFrame(Editor editor) {\n    this.editor = editor;\n    \n    if (dialog == null) {\n      dialog = new JFrame(\"Contribution Manager\");\n  \n      Base.setIcon(dialog);\n      \n      createComponents();\n  \n      registerDisposeListeners();\n  \n      dialog.pack();\n      Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();\n      dialog.setLocation((screen.width - dialog.getWidth()) / 2,\n                         (screen.height - dialog.getHeight()) / 2);\n  \n      contributionListPanel.grabFocus();\n    }\n    \n    dialog.setVisible(true);\n    \n    if (!contribListing.hasDownloadedLatestList()) {\n      new Thread(new Runnable() {\n        \n        public void run() {\n          final Thread t = contribListing.getAdvertisedContributions(new AbstractProgressMonitor() {\n            public void startTask(String name, int maxValue) {\n            }\n            \n            public void finished() {\n              super.finished();\n              updateContributionListing();\n              updateCategoryChooser();\n            }\n          });\n          \n          synchronized (t) {\n            try {\n              t.join();\n            } catch (InterruptedException e) {\n            }\n          }\n          \n          if (!contribListing.hasDownloadedLatestList()) {\n            statusBar.setErrorMessage(\"An error occured when downloading the list of available contributions.\");\n          }\n        }\n      }).start();\n    }\n    \n    updateContributionListing();\n    \n    if (contributionIcons == null) {\n      try {\n        Image allButtons = ImageIO.read(Base.getLibStream(\"contributions.gif\"));\n        int count = allButtons.getHeight(dialog) / ContributionManager.ICON_HEIGHT;\n        contributionIcons = new Image[count];\n        contributionIcons[0]  = allButtons;\n        contributionIcons[1]  = allButtons;\n        contributionIcons[2]  = allButtons;\n        contributionIcons[3]  = allButtons;\n        \n        for (int i = 0; i < count; i++) {\n          Image image = dialog.createImage(\n                            new FilteredImageSource(allButtons.getSource(),\n                            new CropImageFilter(0, i * ContributionManager.ICON_HEIGHT,\n                                                ContributionManager.ICON_WIDTH,\n                                                ContributionManager.ICON_HEIGHT)));\n          contributionIcons[i] = image;\n        }\n        \n        contributionListPanel.updateColors();\n      } catch (IOException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n      }\n    }\n  }","commit_id":"08ff321c15896eda457bc163f4241c766db0616b","url":"https://github.com/processing/processing"},{"original_method":"/**\n   * Blocks until the file is downloaded or an error occurs. Returns true if the\n   * file was successfully downloaded, false otherwise\n   * \n   * @param source\n   *          the URL of the file to donwload\n   * @param dest\n   *          the file on the local system where the file will be written. This\n   *          must be a file (not a directory), and must already exist.\n   * @param progressMonitor\n   * @throws FileNotFoundException\n   *           if an error occured downloading the file\n   * @return false if the ProgressMonitor requested a cancellation, false\n   *         otherwise\n   */\n  static public boolean downloadFile(URL source, File dest,\n                                     ProgressMonitor progressMonitor)\n                                                            throws IOException {\n\n    URLConnection urlConn = source.openConnection();\n    urlConn.setConnectTimeout(1000);\n    urlConn.setReadTimeout(5000);\n\n    // String expectedType1 = \"application/x-zip-compressed\";\n    // String expectedType2 = \"application/zip\";\n    // String type = urlConn.getContentType();\n    // if (expectedType1.equals(type) || expectedType2.equals(type)) {\n    // }\n\n    int fileSize = urlConn.getContentLength();\n    progressMonitor.startTask(\"Downloading\", fileSize);\n\n    InputStream in = urlConn.getInputStream();\n    FileOutputStream out = new FileOutputStream(dest);\n\n    byte[] b = new byte[256];\n    int bytesDownloaded = 0, len;\n    while (!progressMonitor.isCanceled() && (len = in.read(b)) != -1) {\n      out.write(b, 0, len);\n      bytesDownloaded += len;\n\n      progressMonitor.setProgress(bytesDownloaded);\n    }\n    out.close();\n\n    if (!progressMonitor.isCanceled()) {\n      return true;\n    }\n    progressMonitor.finished();\n\n    return false;\n  }","id":63972,"modified_method":"/**\n   * Blocks until the file is downloaded or an error occurs. Returns true if the\n   * file was successfully downloaded, false otherwise\n   * \n   * @param source\n   *          the URL of the file to donwload\n   * @param dest\n   *          the file on the local system where the file will be written. This\n   *          must be a file (not a directory), and must already exist.\n   * @param progressMonitor\n   * @throws FileNotFoundException\n   *           if an error occurred downloading the file\n   * @return false if the ProgressMonitor requested a cancellation, false\n   *         otherwise\n   */\n  static public boolean downloadFile(URL source, File dest,\n                                     ProgressMonitor progressMonitor)\n                                                            throws IOException {\n\n    URLConnection urlConn = source.openConnection();\n    urlConn.setConnectTimeout(1000);\n    urlConn.setReadTimeout(5000);\n\n    // String expectedType1 = \"application/x-zip-compressed\";\n    // String expectedType2 = \"application/zip\";\n    // String type = urlConn.getContentType();\n    // if (expectedType1.equals(type) || expectedType2.equals(type)) {\n    // }\n\n    int fileSize = urlConn.getContentLength();\n    progressMonitor.startTask(\"Downloading\", fileSize);\n\n    InputStream in = urlConn.getInputStream();\n    FileOutputStream out = new FileOutputStream(dest);\n\n    byte[] b = new byte[256];\n    int bytesDownloaded = 0, len;\n    while (!progressMonitor.isCanceled() && (len = in.read(b)) != -1) {\n      out.write(b, 0, len);\n      bytesDownloaded += len;\n\n      progressMonitor.setProgress(bytesDownloaded);\n    }\n    out.close();\n\n    if (progressMonitor.isCanceled()) {\n      return false;\n    }\n\n    progressMonitor.finished();\n    return true;\n  }","commit_id":"08ff321c15896eda457bc163f4241c766db0616b","url":"https://github.com/processing/processing"},{"original_method":"public void fillComponents(UIContainer tofill, ViewParameters arg1,\n\t\t\tComponentChecker arg2) {\n\t\t\n\t\tString[] parms = new String[] {userBean.getEmail()};\n\t\tUIMessage.make(tofill,\"message\",\"confirm\",parms);\n\t}","id":63973,"modified_method":"public void fillComponents(UIContainer tofill, ViewParameters arg1,\n\t\t\tComponentChecker arg2) {\n\t\t\n\t\tString[] parms = new String[] {userBean.getEmail()};\n\t\tUIMessage.make(tofill,\"message\",\"confirm\",parms);\n\t\tif (serverConfigurationService.getString(\"support.email\", null) != null) {\n\t\t\tUIMessage.make(tofill, \"supportMessage\", \"supportMessage\");\n\t\t\tUILink.make(tofill, \"supportEmail\",serverConfigurationService.getString(\"support.email\", \"\"));\n\t\t}\n\t}","commit_id":"9f6911c9f6a31f20c202fbda2b3504d662970a6a","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void fillComponents(UIContainer tofill, ViewParameters viewParms,\n\t\t\tComponentChecker comp) {\n\t\t// TODO Auto-generated method stub\n\n\t\t\n\t\tif (tml!=null) {\n\t\t\tif (tml.size() > 0) {\n\n\t\t    \tfor (int i = 0; i < tml.size(); i ++ ) {\n\t\t    \t\tUIBranchContainer errorRow = UIBranchContainer.make(tofill,\"error-row:\");\n\t\t    \t\tif (tml.messageAt(i).args != null ) {\t    \t\t\n\t\t    \t\t\tUIMessage.make(errorRow, \"error\", tml.messageAt(i).acquireMessageCode(), (String[])tml.messageAt(i).args[0]);\n\t\t    \t\t} else {\n\t\t    \t\t\tUIMessage.make(errorRow, \"error\", tml.messageAt(i).acquireMessageCode());\n\t\t    \t\t}\n\t\t    \t\t\n\t\t    \t}\n\t\t    }\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tString[] args = new String[1];\n\t\targs[0]=serverConfigurationService.getString(\"ui.service\", \"Sakai Bassed Service\");\n\t\tUIMessage.make(tofill,\"main\",\"mainText\", args);\n\t\tUIForm form = UIForm.make(tofill,\"form\");\n\t\tUIInput.make(form,\"input\",\"#{userBean.email}\");\n\t\tUICommand.make(form,\"submit\",UIMessage.make(\"postForm\"),\"#{formHandler.processAction}\");\n\t}","id":63974,"modified_method":"public void fillComponents(UIContainer tofill, ViewParameters viewParms,\n\t\t\tComponentChecker comp) {\n\t\t// TODO Auto-generated method stub\n\n\t\t\n\t\tif (tml!=null) {\n\t\t\tif (tml.size() > 0) {\n\n\t\t    \tfor (int i = 0; i < tml.size(); i ++ ) {\n\t\t    \t\tUIBranchContainer errorRow = UIBranchContainer.make(tofill,\"error-row:\");\n\t\t    \t\tif (tml.messageAt(i).args != null ) {\t    \t\t\n\t\t    \t\t\tUIVerbatim.make(errorRow, \"error\", messageLocator.getMessage(tml.messageAt(i).acquireMessageCode(), (String[])tml.messageAt(i).args[0]));\n\t\t    \t\t} else {\n\t\t    \t\t\tUIVerbatim.make(errorRow, \"error\", tml.messageAt(i).acquireMessageCode());\n\t\t    \t\t}\n\t\t    \t\t\n\t\t    \t}\n\t\t    }\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tString[] args = new String[1];\n\t\targs[0]=serverConfigurationService.getString(\"ui.service\", \"Sakai Bassed Service\");\n\t\tUIVerbatim.make(tofill,\"main\",messageLocator.getMessage(\"mainText\", args));\n\t\tUIForm form = UIForm.make(tofill,\"form\");\n\t\tUIInput.make(form,\"input\",\"#{userBean.email}\");\n\t\tUICommand.make(form,\"submit\",UIMessage.make(\"postForm\"),\"#{formHandler.processAction}\");\n\t}","commit_id":"9f6911c9f6a31f20c202fbda2b3504d662970a6a","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void fillComponents(UIContainer tofill, ViewParameters viewParms,\n\t\t\tComponentChecker comp) {\n\t\t// TODO Auto-generated method stub\n\n\t\t\n\t\tif (tml!=null) {\n\t\t\tif (tml.size() > 0) {\n\n\t\t    \tfor (int i = 0; i < tml.size(); i ++ ) {\n\t\t    \t\tUIBranchContainer errorRow = UIBranchContainer.make(tofill,\"error-row:\");\n\t\t    \t\tif (tml.messageAt(i).args != null ) {\t    \t\t\n\t\t    \t\t\tUIVerbatim.make(errorRow, \"error\", messageLocator.getMessage(tml.messageAt(i).acquireMessageCode(), (String[])tml.messageAt(i).args[0]));\n\t\t    \t\t} else {\n\t\t    \t\t\tUIVerbatim.make(errorRow, \"error\", tml.messageAt(i).acquireMessageCode());\n\t\t    \t\t}\n\t\t    \t\t\n\t\t    \t}\n\t\t    }\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tString[] args = new String[1];\n\t\targs[0]=serverConfigurationService.getString(\"ui.service\", \"Sakai Bassed Service\");\n\t\tUIVerbatim.make(tofill,\"main\",messageLocator.getMessage(\"mainText\", args));\n\t\tUIForm form = UIForm.make(tofill,\"form\");\n\t\tUIInput.make(form,\"input\",\"#{userBean.email}\");\n\t\tUICommand.make(form,\"submit\",UIMessage.make(\"postForm\"),\"#{formHandler.processAction}\");\n\t}","id":63975,"modified_method":"public void fillComponents(UIContainer tofill, ViewParameters viewParms,\n\t\t\tComponentChecker comp) {\n\t\t// TODO Auto-generated method stub\n\n\t\t\n\t\tif (tml!=null) {\n\t\t\tif (tml.size() > 0) {\n\n\t\t    \tfor (int i = 0; i < tml.size(); i ++ ) {\n\t\t    \t\tUIBranchContainer errorRow = UIBranchContainer.make(tofill,\"error-row:\");\n\t\t    \t\tif (tml.messageAt(i).args != null ) {\t    \t\t\n\t\t    \t\t\tUIVerbatim.make(errorRow, \"error\", messageLocator.getMessage(tml.messageAt(i).acquireMessageCode(), (String[])tml.messageAt(i).args[0]));\n\t\t    \t\t} else {\n\t\t    \t\t\tUIVerbatim.make(errorRow, \"error\", messageLocator.getMessage(tml.messageAt(i).acquireMessageCode()));\n\t\t    \t\t}\n\t\t    \t\t\n\t\t    \t}\n\t\t    }\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tString[] args = new String[1];\n\t\targs[0]=serverConfigurationService.getString(\"ui.service\", \"Sakai Bassed Service\");\n\t\tUIVerbatim.make(tofill,\"main\",messageLocator.getMessage(\"mainText\", args));\n\t\tUIForm form = UIForm.make(tofill,\"form\");\n\t\tUIInput.make(form,\"input\",\"#{userBean.email}\");\n\t\tUICommand.make(form,\"submit\",UIMessage.make(\"postForm\"),\"#{formHandler.processAction}\");\n\t}","commit_id":"e07ef2f80ff80e4b08b73648666fe87e1388a478","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void fillComponents(UIContainer arg0, ViewParameters arg1, ComponentChecker arg2) {\n    \t\n    \tString state=\"\";\n    \t\n    \t// id for group\n    \tString groupId = null;\n    \t// title for group\n    \tString groupTitle = null;\n    \t// description for group\n    \tString groupDescription = null;\n    \t// member list for group\n    \tCollection<Member> groupMembers = new Vector<Member>();\n    \t\n    \tUIForm groupForm = UIForm.make(arg0, \"groups-form\");\n\n    \t String id = ((GroupEditViewParameters) arg1).id;\n    \t if (id != null)\n    \t {\n    \t\t try\n    \t\t {\n    \t\t\t Group g = siteService.findGroup(id);\n    \t\t\t groupId = g.getId();\n    \t\t\t groupTitle = g.getTitle();\n    \t\t\t groupDescription = g.getDescription();\n    \t\t\t groupMembers = g.getMembers();\n    \t\t }\n    \t\t catch (Exception e)\n    \t\t {\n    \t\t\t M_log.debug(this + \"fillComponents: cannot get group id=\" + id);\n    \t\t }\n    \t }\n    \t else\n    \t {\n    \t\t handler.resetParams();\n    \t }\n    \t \n\n         UIOutput.make(groupForm, \"prompt\", messageLocator.getMessage(\"group.autocreate.newgroups\"));\n         UIOutput.make(groupForm, \"instructions_roster\", messageLocator.getMessage(\"group.autocreate.instruction_roster\"));\n         UIOutput.make(groupForm, \"instructions_role\", messageLocator.getMessage(\"group.autocreate.instruction_role\"));\n         \n         UIOutput.make(groupForm, \"group_label\", messageLocator.getMessage(\"group.title\"));\n         UIInput titleTextIn = UIInput.make(groupForm, \"group_title\", \"#{SiteManageGroupSectionRoleHandler.title}\",groupTitle);\n\t\t \n\t\t // for the site rosters list\n\t\t List<String> siteRosters= handler.getSiteRosters(null);\n\t\t if (siteRosters != null && siteRosters.size() > 0)\n\t\t {\n\t\t\t UIBranchContainer rosterOptions = UIBranchContainer.make(groupForm, \"roster_options:\");\n\t\t\t UIMessage.make(arg0, \"roster-select-header\", \"table.roster_select\");\n\t\t\t UIMessage.make(arg0, \"roster-title-header\", \"table.roster_title\");\n\t\t\t UIMessage.make(arg0, \"instruction-roster\", \"instruction.roster\");\n\t\t\t for (String roster: siteRosters) {\n\t\t\t\t UIBranchContainer tablerow = UIBranchContainer.make(rosterOptions, \"roster-row:\");\n\t\t\t\t UIBoundBoolean checkbox = UIBoundBoolean.make(tablerow, \"roster-checkbox\", \"#{SiteManageGroupSectionRoleHandler.selectedRosters.\" + roster + \"}\");\n\t\t\t\t UILabelTargetDecorator.targetLabel(UIOutput.make(tablerow, \"roster-title\", roster), checkbox);\n\t\t\t\t \n\t\t\t\t // check whether there is already a group with this roster\n\t\t\t\t if (handler.existRosterGroup(roster))\n\t\t\t\t {\n\t\t\t\t\t UIMessage.make(tablerow, \"exist-group-roster\", \"exist.group.roster\");\n\t\t\t\t }\n\t\t\t }\n\t\t }\n\t\t \n\t\t // for the site roles list\n\t\t List<Role> siteRoles= handler.getSiteRoles(null);\n\t\t if (siteRoles != null && siteRoles.size() > 0)\n\t\t {\n\t\t\t UIBranchContainer roleOptions = UIBranchContainer.make(groupForm, \"role_options:\");\n\t\t\t UIMessage.make(arg0, \"role-select-header\", \"table.role_select\");\n\t\t\t UIMessage.make(arg0, \"role-title-header\", \"table.role_title\");\n\t\t\t UIMessage.make(arg0, \"instruction-role\", \"instruction.role\");\n\t\t\t for (Role role: siteRoles) {\n\t\t\t\t UIBranchContainer tablerow = UIBranchContainer.make(roleOptions, \"role-row:\");\n\t\t\t\t UIBoundBoolean checkbox = UIBoundBoolean.make(tablerow, \"role-checkbox\", \"#{SiteManageGroupSectionRoleHandler.selectedRoles.\" + role.getId() + \"}\");\n\t\t\t\t UILabelTargetDecorator.targetLabel(UIOutput.make(tablerow, \"role-title\", role.getId()), checkbox);\n\t\t\t\t// check whether there is already a group with this role\n\t\t\t\t if (handler.existRoleGroup(role.getId()))\n\t\t\t\t {\n\t\t\t\t\t UIMessage.make(tablerow, \"exist-group-role\", \"exist.group.role\");\n\t\t\t\t }\n\t\t\t }\n\t\t \n\t\t\t //random or by roles options:\n\t\t\t \n\t\t\t//Radio Buttons for assigning options\n\t         String [] optionValues = new String[] {\n\t                 Integer.toString(1), Integer.toString(2)\n\t         };\n\t         String [] optionLabels = new String[] {\n\t        \t\t messageLocator.getMessage(\"roleOptionLabel\"),\n\t        \t\t messageLocator.getMessage(\"randomOptionLabel\")\n\t         };\n\t         UISelect option_select = UISelect.make(groupForm, \"option-radios\", \n\t        \t\t optionValues, optionLabels, \"SiteManageGroupSectionRoleHandler.optionAssign\");\n\t         option_select.optionnames = UIOutputMany.make(optionLabels);\n\t         String option_select_id = option_select.getFullID();\n\t         \n\t         UISelectLabel lb = UISelectLabel.make(arg0, \"roleOptionLabel\", option_select_id, 0);\n\t         UISelectChoice choice =UISelectChoice.make(arg0, \"roleOption\", option_select_id, 0);\n\t         UILabelTargetDecorator.targetLabel(lb, choice);\n\t         \n\t         UISelectLabel lb2 = UISelectLabel.make(arg0, \"randomOptionLabel\", option_select_id, 1);\n\t         UISelectChoice choice2 =UISelectChoice.make(arg0, \"randomOption\", option_select_id, 1);\n\t         UILabelTargetDecorator.targetLabel(lb2, choice2);\n\t\t\t \n\t\t\t UIMessage.make(arg0, \"randomGroupsLegend\", \"randomGroupsLegend\");\n\t\t\t \n\t\t\t // group inputs\n\t\t\t UILabelTargetDecorator.targetLabel(UIMessage.make(groupForm, \"group-title-group\", \"group.title\"), UIInput.make(groupForm, \"groupTitle-group\", \"SiteManageGroupSectionRoleHandler.groupTitleGroup\"));\n\t\t\t UILabelTargetDecorator.targetLabel(UIMessage.make(groupForm, \"group-unit\", \"group.unit\"), UIInput.make(groupForm, \"numToSplit-group\", \"SiteManageGroupSectionRoleHandler.numToSplitGroup\"));\n\t\t\t UILabelTargetDecorator.targetLabel(UIMessage.make(groupForm, \"group-title-user\", \"group.title\"), UIInput.make(groupForm, \"groupTitle-user\", \"SiteManageGroupSectionRoleHandler.groupTitleUser\"));\n\t\t\t UILabelTargetDecorator.targetLabel(UIMessage.make(groupForm, \"user-unit\", \"user.unit\"), UIInput.make(groupForm, \"numToSplit-user\", \"SiteManageGroupSectionRoleHandler.numToSplitUser\"));\n\t\t \n\t\t\t //Radio Buttons\n\t         String [] grading_values = new String[] {\n\t                 Boolean.TRUE.toString(), Boolean.FALSE.toString()\n\t         };\n\t         String [] grading_labels = new String[] {\n\t        \t\t messageLocator.getMessage(\"splitByGroupsLabel\"),\n\t        \t\t messageLocator.getMessage(\"splitByUsersLabel\")\t        \t\t \n\t         };\n\t         UISelect grading_select = UISelect.make(groupForm, \"graded-radios\", \n\t                 grading_values, grading_labels, \"SiteManageGroupSectionRoleHandler.groupSplit\");\n\t         String grading_select_id = grading_select.getFullID();\n\t         \n\t         UISelectLabel split_lb = UISelectLabel.make(arg0, \"splitByGroupsLabel\", grading_select_id, 0);\n\t         UISelectChoice split_choice =UISelectChoice.make(arg0, \"groupSplit\", grading_select_id, 0);\n\t         UILabelTargetDecorator.targetLabel(split_lb, split_choice);\n\t         \n\t         UISelectLabel split_lb2 = UISelectLabel.make(arg0, \"splitByUsersLabel\", grading_select_id, 1);\n\t         UISelectChoice split_choice2 =UISelectChoice.make(arg0, \"userSplit\", grading_select_id, 1);\n\t         UILabelTargetDecorator.targetLabel(split_lb2, split_choice2);\n\t\t \n\t\t }\n\t\t \n    \t UICommand.make(groupForm, \"save\", messageLocator.getMessage(\"update\"), \"#{SiteManageGroupSectionRoleHandler.processAutoCreateGroup}\");\n\n         UICommand.make(groupForm, \"cancel\", messageLocator.getMessage(\"cancel\"), \"#{SiteManageGroupSectionRoleHandler.processBack}\");\n         \n         int i = 0;\n         //process any messages\n         tml = handler.messages;\n         if (tml.size() > 0) {\n \t\t\tfor (i = 0; i < tml.size(); i ++ ) {\n \t\t\t\tUIBranchContainer errorRow = UIBranchContainer.make(arg0,\"error-row:\", Integer.valueOf(i).toString());\n \t\t\t\tif (tml.messageAt(i).args != null ) {\t    \t\t\n \t\t\t\t\tUIMessage.make(errorRow,\"error\",tml.messageAt(i).acquireMessageCode(),(String[])tml.messageAt(i).args[0]);\n \t\t\t\t} else {\n \t\t    \t\t\tUIMessage.make(errorRow,\"error\",tml.messageAt(i).acquireMessageCode());\n \t\t\t\t}\n \t\t    \t\t\n \t\t\t}\n         }\n         \n         //frameAdjustingProducer.fillComponents(arg0, \"resize\", \"resetFrame\");\n         UIVerbatim.make(arg0, \"resize\", \"\\n<!-- \\n\\tfunction \" + \"resetFrame\" + \"()\"\n        \t        + \" {\\n\\t\\tsetMainFrameHeight('\"\n        \t        + deriveFrameTitle(ToolManager.getCurrentPlacement().getId())\n        \t        + \"');\\n\\t\\t}\\n//-->\\n\");\n    }","id":63976,"modified_method":"public void fillComponents(UIContainer arg0, ViewParameters arg1, ComponentChecker arg2) {\n    \t\n    \tString state=\"\";\n    \t\n    \t// id for group\n    \tString groupId = null;\n    \t// title for group\n    \tString groupTitle = null;\n    \t// description for group\n    \tString groupDescription = null;\n    \t// member list for group\n    \tCollection<Member> groupMembers = new Vector<Member>();\n    \t\n    \tUIForm groupForm = UIForm.make(arg0, \"groups-form\");\n\n    \t String id = ((GroupEditViewParameters) arg1).id;\n    \t if (id != null)\n    \t {\n    \t\t try\n    \t\t {\n    \t\t\t Group g = siteService.findGroup(id);\n    \t\t\t groupId = g.getId();\n    \t\t\t groupTitle = g.getTitle();\n    \t\t\t groupDescription = g.getDescription();\n    \t\t\t groupMembers = g.getMembers();\n    \t\t }\n    \t\t catch (Exception e)\n    \t\t {\n    \t\t\t M_log.debug(this + \"fillComponents: cannot get group id=\" + id);\n    \t\t }\n    \t }\n    \t else\n    \t {\n    \t\t handler.resetParams();\n    \t }\n    \t \n\n         UIOutput.make(groupForm, \"prompt\", messageLocator.getMessage(\"group.autocreate.newgroups\"));\n         UIOutput.make(groupForm, \"instructions_roster\", messageLocator.getMessage(\"group.autocreate.instruction_roster\"));\n         UIOutput.make(groupForm, \"instructions_role\", messageLocator.getMessage(\"group.autocreate.instruction_role\"));\n         \n         UIOutput.make(groupForm, \"group_label\", messageLocator.getMessage(\"group.title\"));\n         UIInput titleTextIn = UIInput.make(groupForm, \"group_title\", \"#{SiteManageGroupSectionRoleHandler.title}\",groupTitle);\n\t\t \n\t\t // for the site rosters list\n\t\t List<String> siteRosters= handler.getSiteRosters(null);\n\t\t if (siteRosters != null && siteRosters.size() > 0)\n\t\t {\n\t\t\t UIBranchContainer rosterOptions = UIBranchContainer.make(groupForm, \"roster_options:\");\n\t\t\t UIMessage.make(arg0, \"roster-select-header\", \"table.roster_select\");\n\t\t\t UIMessage.make(arg0, \"roster-title-header\", \"table.roster_title\");\n\t\t\t UIMessage.make(arg0, \"instruction-roster\", \"instruction.roster\");\n\t\t\t for (String roster: siteRosters) {\n\t\t\t\t UIBranchContainer tablerow = UIBranchContainer.make(rosterOptions, \"roster-row:\");\n\t\t\t\t UIBoundBoolean checkbox = UIBoundBoolean.make(tablerow, \"roster-checkbox\", \"#{SiteManageGroupSectionRoleHandler.selectedRosters.\" + roster + \"}\");\n\t\t\t\t UILabelTargetDecorator.targetLabel(UIOutput.make(tablerow, \"roster-title\", roster), checkbox);\n\t\t\t\t \n\t\t\t\t // check whether there is already a group with this roster\n\t\t\t\t if (handler.existRosterGroup(roster))\n\t\t\t\t {\n\t\t\t\t\t UIMessage.make(tablerow, \"exist-group-roster\", \"exist.group.roster\");\n\t\t\t\t }\n\t\t\t }\n\t\t }\n\t\t \n\t\t // for the site roles list\n\t\t List<Role> siteRoles= handler.getSiteRoles(null);\n\t\t if (siteRoles != null && siteRoles.size() > 0)\n\t\t {\n\t\t\t UIBranchContainer roleOptions = UIBranchContainer.make(groupForm, \"role_options:\");\n\t\t\t UIMessage.make(arg0, \"role-select-header\", \"table.role_select\");\n\t\t\t UIMessage.make(arg0, \"role-title-header\", \"table.role_title\");\n\t\t\t UIMessage.make(arg0, \"instruction-role\", \"instruction.role\");\n\t\t\t for (Role role: siteRoles) {\n\t\t\t\t UIBranchContainer tablerow = UIBranchContainer.make(roleOptions, \"role-row:\");\n\t\t\t\t UIBoundBoolean checkbox = UIBoundBoolean.make(tablerow, \"role-checkbox\", \"#{SiteManageGroupSectionRoleHandler.selectedRoles.\" + role.getId() + \"}\");\n\t\t\t\t UILabelTargetDecorator.targetLabel(UIOutput.make(tablerow, \"role-title\", role.getId()), checkbox);\n\t\t\t\t// check whether there is already a group with this role\n\t\t\t\t if (handler.existRoleGroup(role.getId()))\n\t\t\t\t {\n\t\t\t\t\t UIMessage.make(tablerow, \"exist-group-role\", \"exist.group.role\");\n\t\t\t\t }\n\t\t\t }\n\t\t \n\t\t\t //random or by roles options:\n\t\t\t \n\t\t\t//Radio Buttons for assigning options\n\t         String [] optionValues = new String[] {\n\t                 Integer.toString(1), Integer.toString(2)\n\t         };\n\t         String [] optionLabels = new String[] {\n\t        \t\t messageLocator.getMessage(\"roleOptionLabel\"),\n\t        \t\t messageLocator.getMessage(\"randomOptionLabel\")\n\t         };\n\t         UISelect option_select = UISelect.make(groupForm, \"option-radios\", \n\t        \t\t optionValues, optionLabels, \"SiteManageGroupSectionRoleHandler.optionAssign\");\n\t         option_select.optionnames = UIOutputMany.make(optionLabels);\n\t         String option_select_id = option_select.getFullID();\n\t         \n\t         UISelectLabel lb = UISelectLabel.make(arg0, \"roleOptionLabel\", option_select_id, 0);\n\t         UISelectChoice choice =UISelectChoice.make(arg0, \"roleOption\", option_select_id, 0);\n\t         UILabelTargetDecorator.targetLabel(lb, choice);\n\t         \n\t         UISelectLabel lb2 = UISelectLabel.make(arg0, \"randomOptionLabel\", option_select_id, 1);\n\t         UISelectChoice choice2 =UISelectChoice.make(arg0, \"randomOption\", option_select_id, 1);\n\t         UILabelTargetDecorator.targetLabel(lb2, choice2);\n\t\t\t \n\t\t\t UIMessage.make(arg0, \"randomGroupsLegend\", \"randomGroupsLegend\");\n\t\t\t \n\t\t\t // group inputs\n\t\t\t UILabelTargetDecorator.targetLabel(UIMessage.make(groupForm, \"group-title-group\", \"group.title\"), UIInput.make(groupForm, \"groupTitle-group\", \"SiteManageGroupSectionRoleHandler.groupTitleGroup\"));\n\t\t\t UILabelTargetDecorator.targetLabel(UIMessage.make(groupForm, \"group-unit\", \"group.unit\"), UIInput.make(groupForm, \"numToSplit-group\", \"SiteManageGroupSectionRoleHandler.numToSplitGroup\"));\n\t\t\t UILabelTargetDecorator.targetLabel(UIMessage.make(groupForm, \"group-title-user\", \"group.title\"), UIInput.make(groupForm, \"groupTitle-user\", \"SiteManageGroupSectionRoleHandler.groupTitleUser\"));\n\t\t\t UILabelTargetDecorator.targetLabel(UIMessage.make(groupForm, \"user-unit\", \"user.unit\"), UIInput.make(groupForm, \"numToSplit-user\", \"SiteManageGroupSectionRoleHandler.numToSplitUser\"));\n\t\t \n\t\t\t //Radio Buttons\n\t         String [] grading_values = new String[] {\n\t                 Boolean.TRUE.toString(), Boolean.FALSE.toString()\n\t         };\n\t         String [] grading_labels = new String[] {\n\t        \t\t messageLocator.getMessage(\"splitByGroupsLabel\"),\n\t        \t\t messageLocator.getMessage(\"splitByUsersLabel\")\t        \t\t \n\t         };\n\t         UISelect grading_select = UISelect.make(groupForm, \"graded-radios\", \n\t                 grading_values, grading_labels, \"SiteManageGroupSectionRoleHandler.groupSplit\");\n\t         String grading_select_id = grading_select.getFullID();\n\t         \n\t         UISelectLabel split_lb = UISelectLabel.make(arg0, \"splitByGroupsLabel\", grading_select_id, 0);\n\t         UISelectChoice split_choice =UISelectChoice.make(arg0, \"groupSplit\", grading_select_id, 0);\n\t         UILabelTargetDecorator.targetLabel(split_lb, split_choice);\n\t         \n\t         UISelectLabel split_lb2 = UISelectLabel.make(arg0, \"splitByUsersLabel\", grading_select_id, 1);\n\t         UISelectChoice split_choice2 =UISelectChoice.make(arg0, \"userSplit\", grading_select_id, 1);\n\t         UILabelTargetDecorator.targetLabel(split_lb2, split_choice2);\n\t\t \n\t\t }\n\t\t \n    \t UICommand.make(groupForm, \"save\", messageLocator.getMessage(\"update\"), \"#{SiteManageGroupSectionRoleHandler.processAutoCreateGroup}\");\n\n         UICommand.make(groupForm, \"cancel\", messageLocator.getMessage(\"cancel\"), \"#{SiteManageGroupSectionRoleHandler.processBack}\");\n         \n         int i = 0;\n         //process any messages\n         tml = handler.messages;\n         if (tml.size() > 0) {\n \t\t\tfor (i = 0; i < tml.size(); i ++ ) {\n \t\t\t\tUIBranchContainer errorRow = UIBranchContainer.make(arg0,\"error-row:\", Integer.valueOf(i).toString());\n \t\t\t\tString outString = \"\";\n \t\t\t\tif (tml.messageAt(i).args != null ) {\n \t\t\t\t\toutString = messageLocator.getMessage(tml.messageAt(i).acquireMessageCode(),tml.messageAt(i).args[0]);\n \t\t\t\t} else {\n \t\t\t\t\toutString = messageLocator.getMessage(tml.messageAt(i).acquireMessageCode());\n \t\t\t\t}\n \t\t\t\tUIMessage.make(errorRow,\"error\",outString);\n \t\t    \t\t\n \t\t\t}\n         }\n         \n         //frameAdjustingProducer.fillComponents(arg0, \"resize\", \"resetFrame\");\n         UIVerbatim.make(arg0, \"resize\", \"\\n<!-- \\n\\tfunction \" + \"resetFrame\" + \"()\"\n        \t        + \" {\\n\\t\\tsetMainFrameHeight('\"\n        \t        + deriveFrameTitle(ToolManager.getCurrentPlacement().getId())\n        \t        + \"');\\n\\t\\t}\\n//-->\\n\");\n    }","commit_id":"412d3981bd3aeed9fe74d7537b22db8944a5cff4","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void fillComponents(UIContainer tofill, ViewParameters viewparams,\n            ComponentChecker checker) {\n    \t\n    \tUIBranchContainer actions = UIBranchContainer.make(tofill,\"actions:\",Integer.toString(0));\n    \tUIInternalLink.make(actions,\"add\",UIMessage.make(\"group.newgroup\"), new GroupEditViewParameters(GroupEditProducer.VIEW_ID, null));\n    \tUIInternalLink.make(actions,\"auto_add\",UIMessage.make(\"group.auto.newgroup\"), new GroupAutoCreateViewParameters(GroupAutoCreateProducer.VIEW_ID, null));\n    \t\n\t\tUIOutput.make(tofill, \"group-list-title\", messageLocator.getMessage(\"group.list\"));\n\t\t\n\t\tUIForm deleteForm = UIForm.make(tofill, \"delete-group-form\");\n\t\t\n\t\tList<Group> groups = null;\n\t\tgroups = handler.getGroups();\n      \n\t\tif (groups != null && groups.size() > 0)\n        {\n\t\t\tStringList deletable = new StringList();\n\t\t\tM_log.debug(this + \"fillComponents: got a list of \" + groups.size() + \" groups\");\n\t\t\t\n\t\t\t// Create a multiple selection control for the tasks to be deleted.\n\t\t\t// We will fill in the options at the loop end once we have collected them.\n\t\t\tUISelect deleteselect = UISelect.makeMultiple(deleteForm, \"delete-group\",\n\t\t\t\t\tnull, \"#{SiteManageGroupSectionRoleHandler.deleteGroupIds}\", new String[] {});\n\n\t\t\t//get the headers for the table\n\t\t\tUIMessage.make(deleteForm, \"group-title-title\",\"group.title\");\n\t\t\tUIMessage.make(deleteForm, \"group-size-title\", \"group.number\");\n\t\t\tUIMessage.make(deleteForm, \"group-remove-title\", \"editgroup.remove\");\n\t\t\t  \n\t\t\tfor (Iterator<Group> it=groups.iterator(); it.hasNext(); ) {\n            \tGroup group = it.next();\n            \tString groupId = group.getId();\n                UIBranchContainer grouprow = UIBranchContainer.make(deleteForm, \"group-row:\", group.getId());\n                \n                UIOutput.make(grouprow, \"group-title-label\", group.getTitle());\n                UIInput name = \n                    UIInput.make(grouprow, \"group-name-input\", \"#{SitegroupEditHandler.nil}\", group.getTitle());\n                UIOutput nameLabel = \n                    UIOutput.make(grouprow, \"group-name-label\", messageLocator.getMessage(\"group.title\"));\n                \n                nameLabel.decorate(new UILabelTargetDecorator(name));\n    \t\t\tUIOutput.make(grouprow,\"group-title\",group.getTitle());\n    \t\t\tint size = 0;\n    \t\t\ttry\n    \t\t\t{\n    \t\t\t\tAuthzGroup g = authzGroupService.getAuthzGroup(group.getReference()); \n    \t\t\t\tCollection<Member> gMembers = g != null ? g.getMembers():new Vector<Member>();\n    \t\t\t\tsize = gMembers.size();\n    \t\t\t\tif (size > 0)\n    \t\t\t\t{\n\t    \t\t\t\tfor (Iterator<Member> gItr=gMembers.iterator(); gItr.hasNext();){\n\t    \t\t        \tMember p = (Member) gItr.next();\n\t    \t\t        \t\n\t    \t\t        \t// exclude those user with provided roles and rosters\n\t    \t\t        \tString userId = p.getUserId();\n\t\t    \t\t\t\ttry\n\t\t    \t\t\t\t{\n\t\t    \t\t\t\t\tUser u = userDirectoryService.getUser(userId);\n\t\t    \t\t\t\t}\n\t\t    \t        \tcatch (Exception e)\n\t\t    \t        \t{\n\t\t    \t        \t\tM_log.warn(this + \"fillInComponent: cannot find user with id \" + userId);\n\t\t    \t        \t\t// need to remove the group member\n\t\t    \t        \t\tsize--;\n\t\t    \t        \t}\n\t    \t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tcatch (GroupNotDefinedException e)\n    \t\t\t{\n    \t\t\t\tM_log.debug(this + \"fillComponent: cannot find group \" + group.getReference());\n    \t\t\t}\n    \t\t\tUIOutput.make(grouprow,\"group-size\",String.valueOf(size));\n\n    \t\t\tUIInternalLink editLink = UIInternalLink.make(grouprow,\"group-revise\",messageLocator.getMessage(\"editgroup.revise\"),  \n    \t\t\t\t\t\tnew GroupEditViewParameters(GroupEditProducer.VIEW_ID, groupId));\n    \t\t\teditLink.decorators = new DecoratorList(new UITooltipDecorator(messageLocator.getMessage(\"editgroup.revise\")+ \":\" + group.getTitle()));\n    \t\t\tdeletable.add(group.getId());\n\t\t\t\tUISelectChoice delete =  UISelectChoice.make(grouprow, \"group-select\", deleteselect.getFullID(), (deletable.size()-1));\n\t\t\t\tdelete.decorators = new DecoratorList(new UITooltipDecorator(UIMessage.make(\"delete_group_tooltip\", new String[] {group.getTitle()})));\n\t\t\t\tUIMessage message = UIMessage.make(grouprow,\"delete-label\",\"delete_group_tooltip\", new String[] {group.getTitle()});\n\t\t\t\tUILabelTargetDecorator.targetLabel(message,delete);\n            }\n\t\t\t\n\t\t\tdeleteselect.optionlist.setValue(deletable.toStringArray());\n\t\t\tUICommand.make(deleteForm, \"delete-groups\",  UIMessage.make(\"editgroup.removechecked\"), \"#{SiteManageGroupSectionRoleHandler.processConfirmGroupDelete}\");\n\t\t\tUICommand.make(deleteForm, \"cancel\", UIMessage.make(\"editgroup.cancel\"), \"#{SiteManageGroupSectionRoleHandler.processCancel}\");\n\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tUIMessage.make(deleteForm, \"no-group\",\"group.nogroup\");\n\t\t\tUICommand.make(deleteForm, \"cancel\", UIMessage.make(\"editgroup.cancel\"), \"#{SiteManageGroupSectionRoleHandler.processCancel}\");\n\t\t}\n\n\t\t\n\t\t//process any messages\n\t\ttml = handler.messages;\n        if (tml.size() > 0) {\n\t\t\tfor (int i = 0; i < tml.size(); i ++ ) {\n\t\t\t\tUIBranchContainer errorRow = UIBranchContainer.make(tofill,\"error-row:\", Integer.valueOf(i).toString());\n\t\t\t\t/*if (tml.messageAt(i).args != null ) {\t    \t\t\n\t\t\t\t\tUIMessage.make(errorRow,\"error\",tml.messageAt(i).acquireMessageCode(),(String[])tml.messageAt(i).args[0]);\n\t\t\t\t} else {\n\t\t    \t\t*/\tUIMessage.make(errorRow,\"error\",tml.messageAt(i).acquireMessageCode());\n\t\t\t\t//}\n\t\t    \t\t\n\t\t\t}\n        }\n    }","id":63977,"modified_method":"public void fillComponents(UIContainer tofill, ViewParameters viewparams,\n            ComponentChecker checker) {\n    \t\n    \tUIBranchContainer actions = UIBranchContainer.make(tofill,\"actions:\",Integer.toString(0));\n    \tUIInternalLink.make(actions,\"add\",UIMessage.make(\"group.newgroup\"), new GroupEditViewParameters(GroupEditProducer.VIEW_ID, null));\n    \tUIInternalLink.make(actions,\"auto_add\",UIMessage.make(\"group.auto.newgroup\"), new GroupAutoCreateViewParameters(GroupAutoCreateProducer.VIEW_ID, null));\n    \t\n\t\tUIOutput.make(tofill, \"group-list-title\", messageLocator.getMessage(\"group.list\"));\n\t\t\n\t\tUIForm deleteForm = UIForm.make(tofill, \"delete-group-form\");\n\t\t\n\t\tList<Group> groups = null;\n\t\tgroups = handler.getGroups();\n      \n\t\tif (groups != null && groups.size() > 0)\n        {\n\t\t\tStringList deletable = new StringList();\n\t\t\tM_log.debug(this + \"fillComponents: got a list of \" + groups.size() + \" groups\");\n\t\t\t\n\t\t\t// Create a multiple selection control for the tasks to be deleted.\n\t\t\t// We will fill in the options at the loop end once we have collected them.\n\t\t\tUISelect deleteselect = UISelect.makeMultiple(deleteForm, \"delete-group\",\n\t\t\t\t\tnull, \"#{SiteManageGroupSectionRoleHandler.deleteGroupIds}\", new String[] {});\n\n\t\t\t//get the headers for the table\n\t\t\tUIMessage.make(deleteForm, \"group-title-title\",\"group.title\");\n\t\t\tUIMessage.make(deleteForm, \"group-size-title\", \"group.number\");\n\t\t\tUIMessage.make(deleteForm, \"group-remove-title\", \"editgroup.remove\");\n\t\t\t  \n\t\t\tfor (Iterator<Group> it=groups.iterator(); it.hasNext(); ) {\n            \tGroup group = it.next();\n            \tString groupId = group.getId();\n                UIBranchContainer grouprow = UIBranchContainer.make(deleteForm, \"group-row:\", group.getId());\n                \n                UIOutput.make(grouprow, \"group-title-label\", group.getTitle());\n                UIInput name = \n                    UIInput.make(grouprow, \"group-name-input\", \"#{SitegroupEditHandler.nil}\", group.getTitle());\n                UIOutput nameLabel = \n                    UIOutput.make(grouprow, \"group-name-label\", messageLocator.getMessage(\"group.title\"));\n                \n                nameLabel.decorate(new UILabelTargetDecorator(name));\n    \t\t\tUIOutput.make(grouprow,\"group-title\",group.getTitle());\n    \t\t\tint size = 0;\n    \t\t\ttry\n    \t\t\t{\n    \t\t\t\tAuthzGroup g = authzGroupService.getAuthzGroup(group.getReference()); \n    \t\t\t\tCollection<Member> gMembers = g != null ? g.getMembers():new Vector<Member>();\n    \t\t\t\tsize = gMembers.size();\n    \t\t\t\tif (size > 0)\n    \t\t\t\t{\n\t    \t\t\t\tfor (Iterator<Member> gItr=gMembers.iterator(); gItr.hasNext();){\n\t    \t\t        \tMember p = (Member) gItr.next();\n\t    \t\t        \t\n\t    \t\t        \t// exclude those user with provided roles and rosters\n\t    \t\t        \tString userId = p.getUserId();\n\t\t    \t\t\t\ttry\n\t\t    \t\t\t\t{\n\t\t    \t\t\t\t\tUser u = userDirectoryService.getUser(userId);\n\t\t    \t\t\t\t}\n\t\t    \t        \tcatch (Exception e)\n\t\t    \t        \t{\n\t\t    \t        \t\tM_log.warn(this + \"fillInComponent: cannot find user with id \" + userId);\n\t\t    \t        \t\t// need to remove the group member\n\t\t    \t        \t\tsize--;\n\t\t    \t        \t}\n\t    \t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tcatch (GroupNotDefinedException e)\n    \t\t\t{\n    \t\t\t\tM_log.debug(this + \"fillComponent: cannot find group \" + group.getReference());\n    \t\t\t}\n    \t\t\tUIOutput.make(grouprow,\"group-size\",String.valueOf(size));\n\n    \t\t\tUIInternalLink editLink = UIInternalLink.make(grouprow,\"group-revise\",messageLocator.getMessage(\"editgroup.revise\"),  \n    \t\t\t\t\t\tnew GroupEditViewParameters(GroupEditProducer.VIEW_ID, groupId));\n    \t\t\teditLink.decorators = new DecoratorList(new UITooltipDecorator(messageLocator.getMessage(\"editgroup.revise\")+ \":\" + group.getTitle()));\n    \t\t\tdeletable.add(group.getId());\n\t\t\t\tUISelectChoice delete =  UISelectChoice.make(grouprow, \"group-select\", deleteselect.getFullID(), (deletable.size()-1));\n\t\t\t\tdelete.decorators = new DecoratorList(new UITooltipDecorator(UIMessage.make(\"delete_group_tooltip\", new String[] {group.getTitle()})));\n\t\t\t\tUIMessage message = UIMessage.make(grouprow,\"delete-label\",\"delete_group_tooltip\", new String[] {group.getTitle()});\n\t\t\t\tUILabelTargetDecorator.targetLabel(message,delete);\n            }\n\t\t\t\n\t\t\tdeleteselect.optionlist.setValue(deletable.toStringArray());\n\t\t\tUICommand.make(deleteForm, \"delete-groups\",  UIMessage.make(\"editgroup.removechecked\"), \"#{SiteManageGroupSectionRoleHandler.processConfirmGroupDelete}\");\n\t\t\tUICommand.make(deleteForm, \"cancel\", UIMessage.make(\"editgroup.cancel\"), \"#{SiteManageGroupSectionRoleHandler.processCancel}\");\n\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tUIMessage.make(deleteForm, \"no-group\",\"group.nogroup\");\n\t\t\tUICommand.make(deleteForm, \"cancel\", UIMessage.make(\"editgroup.cancel\"), \"#{SiteManageGroupSectionRoleHandler.processCancel}\");\n\t\t}\n\n\t\t\n\t\t//process any messages\n\t\ttml = handler.messages;\n        if (tml.size() > 0) {\n\t\t\tfor (int i = 0; i < tml.size(); i ++ ) {\n\t\t\t\tUIBranchContainer errorRow = UIBranchContainer.make(tofill,\"error-row:\", Integer.valueOf(i).toString());\n\t\t\t\tString outString = \"\";\n \t\t\t\tif (tml.messageAt(i).args != null ) {\n \t\t\t\t\toutString = messageLocator.getMessage(tml.messageAt(i).acquireMessageCode(),tml.messageAt(i).args[0]);\n \t\t\t\t} else {\n \t\t\t\t\toutString = messageLocator.getMessage(tml.messageAt(i).acquireMessageCode());\n \t\t\t\t}\n \t\t\t\tUIMessage.make(errorRow,\"error\",outString);\n\t\t\t}\n        }\n    }","commit_id":"412d3981bd3aeed9fe74d7537b22db8944a5cff4","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void fillComponents(UIContainer tofill, ViewParameters viewparams,\n            ComponentChecker checker) {\n    \t\n    \tUIBranchContainer actions = UIBranchContainer.make(tofill,\"actions:\",Integer.toString(0));\n    \tUIInternalLink.make(actions,\"add\",UIMessage.make(\"group.newgroup\"), new GroupEditViewParameters(GroupEditProducer.VIEW_ID, null));\n\n\t\tUIOutput.make(tofill, \"group-list-title\", messageLocator.getMessage(\"group.list\"));\n\t\t\n\t\tUIForm deleteForm = UIForm.make(tofill, \"delete-group-form\");\n\t\t\n\t\tList<Group> groups = null;\n\t\tgroups = handler.getGroups();\n      \n\t\tif (groups != null && groups.size() > 0)\n        {\n\t\t\tStringList deletable = new StringList();\n\t\t\tM_log.debug(this + \"fillComponents: got a list of \" + groups.size() + \" groups\");\n\t\t\t\n\t\t\t// Create a multiple selection control for the tasks to be deleted.\n\t\t\t// We will fill in the options at the loop end once we have collected them.\n\t\t\tUISelect deleteselect = UISelect.makeMultiple(deleteForm, \"delete-group\",\n\t\t\t\t\tnull, \"#{SiteManageGroupHandler.deleteGroupIds}\", new String[] {});\n\n\t\t\t//get the headers for the table\n\t\t\tUIMessage.make(deleteForm, \"group-title-title\",\"group.title\");\n\t\t\tUIMessage.make(deleteForm, \"group-size-title\", \"group.number\");\n\t\t\tUIMessage.make(deleteForm, \"group-remove-title\", \"editgroup.remove\");\n\t\t\t  \n\t\t\tfor (Iterator<Group> it=groups.iterator(); it.hasNext(); ) {\n            \tGroup group = it.next();\n            \tString groupId = group.getId();\n                UIBranchContainer grouprow = UIBranchContainer.make(deleteForm, \"group-row:\", group.getId());\n                \n\t\t\t\tString groupTitle = Validator.escapeHtml(group.getTitle());\n\t\t\t\t\n                UIOutput.make(grouprow, \"group-title-label\", groupTitle);\n                UIInput name = \n                    UIInput.make(grouprow, \"group-name-input\", \"#{SitegroupEditHandler.nil}\", groupTitle);\n                UIOutput nameLabel = \n                    UIOutput.make(grouprow, \"group-name-label\", messageLocator.getMessage(\"group.title\"));\n                \n                nameLabel.decorate(new UILabelTargetDecorator(name));\n    \t\t\tUIOutput.make(grouprow,\"group-title\", groupTitle);\n    \t\t\tint size = 0;\n    \t\t\ttry\n    \t\t\t{\n    \t\t\t\tAuthzGroup g = authzGroupService.getAuthzGroup(group.getReference()); \n    \t\t\t\tCollection<Member> gMembers = g != null ? g.getMembers():new Vector<Member>();\n    \t\t\t\tsize = gMembers.size();\n    \t\t\t\tif (size > 0)\n    \t\t\t\t{\n\t    \t\t\t\tfor (Iterator<Member> gItr=gMembers.iterator(); gItr.hasNext();){\n\t    \t\t        \tMember p = (Member) gItr.next();\n\t    \t\t        \t\n\t    \t\t        \t// exclude those user with provided roles and rosters\n\t    \t\t        \tString userId = p.getUserId();\n\t\t    \t\t\t\ttry\n\t\t    \t\t\t\t{\n\t\t    \t\t\t\t\tUser u = userDirectoryService.getUser(userId);\n\t\t    \t\t\t\t}\n\t\t    \t        \tcatch (Exception e)\n\t\t    \t        \t{\n\t\t    \t        \t\tM_log.warn(this + \"fillInComponent: cannot find user with id \" + userId);\n\t\t    \t        \t\t// need to remove the group member\n\t\t    \t        \t\tsize--;\n\t\t    \t        \t}\n\t    \t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tcatch (GroupNotDefinedException e)\n    \t\t\t{\n    \t\t\t\tM_log.debug(this + \"fillComponent: cannot find group \" + group.getReference());\n    \t\t\t}\n\t\t\t\tUIOutput.make(grouprow,\"group-size\",String.valueOf(size));\n\n    \t\t\tUIInternalLink editLink = UIInternalLink.make(grouprow,\"group-revise\",messageLocator.getMessage(\"editgroup.revise\"),  \n    \t\t\t\t\t\tnew GroupEditViewParameters(GroupEditProducer.VIEW_ID, groupId));\n    \t\t\teditLink.decorators = new DecoratorList(new UITooltipDecorator(messageLocator.getMessage(\"group.sorttitleasc\")+ \":\" + groupTitle));\n    \t\t\tdeletable.add(group.getId());\n\t\t\t\tUISelectChoice delete =  UISelectChoice.make(grouprow, \"group-select\", deleteselect.getFullID(), (deletable.size()-1));\n\t\t\t\tdelete.decorators = new DecoratorList(new UITooltipDecorator(UIMessage.make(\"delete_group_tooltip\", new String[] {groupTitle})));\n\t\t\t\tUIMessage message = UIMessage.make(grouprow,\"delete-label\",\"delete_group_tooltip\", new String[] {groupTitle});\n\t\t\t\tUILabelTargetDecorator.targetLabel(message,delete);\n            }\n\t\t\t\n\t\t\tdeleteselect.optionlist.setValue(deletable.toStringArray());\n\t\t\tUICommand.make(deleteForm, \"delete-groups\",  UIMessage.make(\"editgroup.removechecked\"), \"#{SiteManageGroupHandler.processConfirmGroupDelete}\");\n\t\t\tUICommand.make(deleteForm, \"cancel\", UIMessage.make(\"editgroup.cancel\"), \"#{SiteManageGroupHandler.processCancel}\");\n\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tUIMessage.make(deleteForm, \"no-group\",\"group.nogroup\");\n\t\t\tUICommand.make(deleteForm, \"cancel\", UIMessage.make(\"editgroup.cancel\"), \"#{SiteManageGroupHandler.processCancel}\");\n\t\t}\n\n\t\t\n\t\t//process any messages\n\t\ttml = handler.messages;\n        if (tml.size() > 0) {\n\t\t\tfor (int i = 0; i < tml.size(); i ++ ) {\n\t\t\t\tUIBranchContainer errorRow = UIBranchContainer.make(tofill,\"error-row:\", Integer.valueOf(i).toString());\n\t\t\t\t/*if (tml.messageAt(i).args != null ) {\t    \t\t\n\t\t\t\t\tUIMessage.make(errorRow,\"error\",tml.messageAt(i).acquireMessageCode(),(String[])tml.messageAt(i).args[0]);\n\t\t\t\t} else {\n\t\t    \t\t*/\tUIMessage.make(errorRow,\"error\",tml.messageAt(i).acquireMessageCode());\n\t\t\t\t//}\n\t\t    \t\t\n\t\t\t}\n        }\n    }","id":63978,"modified_method":"public void fillComponents(UIContainer tofill, ViewParameters viewparams,\n            ComponentChecker checker) {\n    \t\n    \tUIBranchContainer actions = UIBranchContainer.make(tofill,\"actions:\",Integer.toString(0));\n    \tUIInternalLink.make(actions,\"add\",UIMessage.make(\"group.newgroup\"), new GroupEditViewParameters(GroupEditProducer.VIEW_ID, null));\n\n\t\tUIOutput.make(tofill, \"group-list-title\", messageLocator.getMessage(\"group.list\"));\n\t\t\n\t\tUIForm deleteForm = UIForm.make(tofill, \"delete-group-form\");\n\t\t\n\t\tList<Group> groups = null;\n\t\tgroups = handler.getGroups();\n      \n\t\tif (groups != null && groups.size() > 0)\n        {\n\t\t\tStringList deletable = new StringList();\n\t\t\tM_log.debug(this + \"fillComponents: got a list of \" + groups.size() + \" groups\");\n\t\t\t\n\t\t\t// Create a multiple selection control for the tasks to be deleted.\n\t\t\t// We will fill in the options at the loop end once we have collected them.\n\t\t\tUISelect deleteselect = UISelect.makeMultiple(deleteForm, \"delete-group\",\n\t\t\t\t\tnull, \"#{SiteManageGroupHandler.deleteGroupIds}\", new String[] {});\n\n\t\t\t//get the headers for the table\n\t\t\tUIMessage.make(deleteForm, \"group-title-title\",\"group.title\");\n\t\t\tUIMessage.make(deleteForm, \"group-size-title\", \"group.number\");\n\t\t\tUIMessage.make(deleteForm, \"group-remove-title\", \"editgroup.remove\");\n\t\t\t  \n\t\t\tfor (Iterator<Group> it=groups.iterator(); it.hasNext(); ) {\n            \tGroup group = it.next();\n            \tString groupId = group.getId();\n                UIBranchContainer grouprow = UIBranchContainer.make(deleteForm, \"group-row:\", group.getId());\n                \n\t\t\t\tString groupTitle = Validator.escapeHtml(group.getTitle());\n\t\t\t\t\n                UIOutput.make(grouprow, \"group-title-label\", groupTitle);\n                UIInput name = \n                    UIInput.make(grouprow, \"group-name-input\", \"#{SitegroupEditHandler.nil}\", groupTitle);\n                UIOutput nameLabel = \n                    UIOutput.make(grouprow, \"group-name-label\", messageLocator.getMessage(\"group.title\"));\n                \n                nameLabel.decorate(new UILabelTargetDecorator(name));\n    \t\t\tUIOutput.make(grouprow,\"group-title\", groupTitle);\n    \t\t\tint size = 0;\n    \t\t\ttry\n    \t\t\t{\n    \t\t\t\tAuthzGroup g = authzGroupService.getAuthzGroup(group.getReference()); \n    \t\t\t\tCollection<Member> gMembers = g != null ? g.getMembers():new Vector<Member>();\n    \t\t\t\tsize = gMembers.size();\n    \t\t\t\tif (size > 0)\n    \t\t\t\t{\n\t    \t\t\t\tfor (Iterator<Member> gItr=gMembers.iterator(); gItr.hasNext();){\n\t    \t\t        \tMember p = (Member) gItr.next();\n\t    \t\t        \t\n\t    \t\t        \t// exclude those user with provided roles and rosters\n\t    \t\t        \tString userId = p.getUserId();\n\t\t    \t\t\t\ttry\n\t\t    \t\t\t\t{\n\t\t    \t\t\t\t\tUser u = userDirectoryService.getUser(userId);\n\t\t    \t\t\t\t}\n\t\t    \t        \tcatch (Exception e)\n\t\t    \t        \t{\n\t\t    \t        \t\tM_log.warn(this + \"fillInComponent: cannot find user with id \" + userId);\n\t\t    \t        \t\t// need to remove the group member\n\t\t    \t        \t\tsize--;\n\t\t    \t        \t}\n\t    \t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tcatch (GroupNotDefinedException e)\n    \t\t\t{\n    \t\t\t\tM_log.debug(this + \"fillComponent: cannot find group \" + group.getReference());\n    \t\t\t}\n\t\t\t\tUIOutput.make(grouprow,\"group-size\",String.valueOf(size));\n\n    \t\t\tUIInternalLink editLink = UIInternalLink.make(grouprow,\"group-revise\",messageLocator.getMessage(\"editgroup.revise\"),  \n    \t\t\t\t\t\tnew GroupEditViewParameters(GroupEditProducer.VIEW_ID, groupId));\n    \t\t\teditLink.decorators = new DecoratorList(new UITooltipDecorator(messageLocator.getMessage(\"group.sorttitleasc\")+ \":\" + groupTitle));\n    \t\t\tdeletable.add(group.getId());\n\t\t\t\tUISelectChoice delete =  UISelectChoice.make(grouprow, \"group-select\", deleteselect.getFullID(), (deletable.size()-1));\n\t\t\t\tdelete.decorators = new DecoratorList(new UITooltipDecorator(UIMessage.make(\"delete_group_tooltip\", new String[] {groupTitle})));\n\t\t\t\tUIMessage message = UIMessage.make(grouprow,\"delete-label\",\"delete_group_tooltip\", new String[] {groupTitle});\n\t\t\t\tUILabelTargetDecorator.targetLabel(message,delete);\n            }\n\t\t\t\n\t\t\tdeleteselect.optionlist.setValue(deletable.toStringArray());\n\t\t\tUICommand.make(deleteForm, \"delete-groups\",  UIMessage.make(\"editgroup.removechecked\"), \"#{SiteManageGroupHandler.processConfirmGroupDelete}\");\n\t\t\tUICommand.make(deleteForm, \"cancel\", UIMessage.make(\"editgroup.cancel\"), \"#{SiteManageGroupHandler.processCancel}\");\n\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tUIMessage.make(deleteForm, \"no-group\",\"group.nogroup\");\n\t\t\tUICommand.make(deleteForm, \"cancel\", UIMessage.make(\"editgroup.cancel\"), \"#{SiteManageGroupHandler.processCancel}\");\n\t\t}\n\n\t\t\n\t\t//process any messages\n\t\ttml = handler.messages;\n        if (tml.size() > 0) {\n\t\t\tfor (int i = 0; i < tml.size(); i ++ ) {\n\t\t\t\tUIBranchContainer errorRow = UIBranchContainer.make(tofill,\"error-row:\", Integer.valueOf(i).toString());\n\t\t\t\tString outString = \"\";\n \t\t\t\tif (tml.messageAt(i).args != null ) {\n \t\t\t\t\toutString = messageLocator.getMessage(tml.messageAt(i).acquireMessageCode(),tml.messageAt(i).args[0]);\n \t\t\t\t} else {\n \t\t\t\t\toutString = messageLocator.getMessage(tml.messageAt(i).acquireMessageCode());\n \t\t\t\t}\n \t\t\t\tUIMessage.make(errorRow,\"error\",outString);\n\t\t\t}\n        }\n    }","commit_id":"412d3981bd3aeed9fe74d7537b22db8944a5cff4","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void processUserPreferencesParameters (HttpServletRequest req) {\n    // layout root setting\n    String root;\n    if ((root = req.getParameter(\"uP_root\")) != null) {\n      complete_up.getStructureStylesheetUserPreferences().putParameterValue(\"userLayoutRoot\", root);\n    }\n    // other params\n    String[] sparams = req.getParameterValues(\"uP_sparam\");\n    if (sparams != null) {\n      for (int i = 0; i < sparams.length; i++) {\n        String pValue = req.getParameter(sparams[i]);\n        complete_up.getStructureStylesheetUserPreferences().putParameterValue(sparams[i], pValue);\n        Logger.log(Logger.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting sparam \\\"\" + sparams[i]\n            + \"\\\"=\\\"\" + pValue + \"\\\".\");\n      }\n    }\n    String[] tparams = req.getParameterValues(\"uP_tparam\");\n    if (tparams != null) {\n      for (int i = 0; i < tparams.length; i++) {\n        String pValue = req.getParameter(tparams[i]);\n        complete_up.getThemeStylesheetUserPreferences().putParameterValue(tparams[i], pValue);\n        Logger.log(Logger.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting tparam \\\"\" + tparams[i]\n            + \"\\\"=\\\"\" + pValue + \"\\\".\");\n      }\n    }\n    // attribute processing\n    // structure transformation\n    String[] sfattrs = req.getParameterValues(\"uP_sfattr\");\n    if (sfattrs != null) {\n      for (int i = 0; i < sfattrs.length; i++) {\n        String aName = sfattrs[i];\n        String[] aNode = req.getParameterValues(aName + \"_folderId\");\n        if (aNode != null && aNode.length > 0) {\n          for (int j = 0; j < aNode.length; j++) {\n            String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n            complete_up.getStructureStylesheetUserPreferences().setFolderAttributeValue(aNode[j], aName, aValue);\n            Logger.log(Logger.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting sfattr \\\"\" + aName\n                + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n          }\n        }\n      }\n    }\n    String[] scattrs = req.getParameterValues(\"uP_scattr\");\n    if (scattrs != null) {\n      for (int i = 0; i < scattrs.length; i++) {\n        String aName = scattrs[i];\n        String[] aNode = req.getParameterValues(aName + \"_channelId\");\n        if (aNode != null && aNode.length > 0) {\n          for (int j = 0; j < aNode.length; j++) {\n            String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n            complete_up.getStructureStylesheetUserPreferences().setChannelAttributeValue(aNode[j], aName, aValue);\n            Logger.log(Logger.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting scattr \\\"\" + aName\n                + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n          }\n        }\n      }\n    }\n    // theme stylesheet attributes\n    String[] tcattrs = req.getParameterValues(\"uP_tcattr\");\n    if (tcattrs != null) {\n      for (int i = 0; i < tcattrs.length; i++) {\n        String aName = tcattrs[i];\n        String[] aNode = req.getParameterValues(aName + \"_channelId\");\n        if (aNode != null && aNode.length > 0) {\n          for (int j = 0; j < aNode.length; j++) {\n            String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n            complete_up.getThemeStylesheetUserPreferences().setChannelAttributeValue(aNode[j], aName, aValue);\n            Logger.log(Logger.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting tcattr \\\"\" + aName\n                + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n          }\n        }\n      }\n    }\n  }","id":63979,"modified_method":"public void processUserPreferencesParameters (HttpServletRequest req) {\n    // layout root setting\n    String root;\n    if ((root = req.getParameter(\"uP_root\")) != null) {\n      // If a channel specifies \"me\" as its root, set the root\n      // to the channel's instance ID\n      if (root.equals(\"me\")) {\n        String chanInstanceId = null;\n        String servletPath = req.getServletPath();\n        String searchFor = \"/channel/\";\n        int chanIdBegIndex = servletPath.indexOf(searchFor) + searchFor.length();\n        if (chanIdBegIndex != -1) {\n          int chanIdEndIndex = servletPath.indexOf(\"/\", chanIdBegIndex);\n          root = servletPath.substring(chanIdBegIndex, chanIdEndIndex);\n        }\n      }\n      complete_up.getStructureStylesheetUserPreferences().putParameterValue(\"userLayoutRoot\", root);\n    }\n    // other params\n    String[] sparams = req.getParameterValues(\"uP_sparam\");\n    if (sparams != null) {\n      for (int i = 0; i < sparams.length; i++) {\n        String pValue = req.getParameter(sparams[i]);\n        complete_up.getStructureStylesheetUserPreferences().putParameterValue(sparams[i], pValue);\n        Logger.log(Logger.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting sparam \\\"\" + sparams[i]\n            + \"\\\"=\\\"\" + pValue + \"\\\".\");\n      }\n    }\n    String[] tparams = req.getParameterValues(\"uP_tparam\");\n    if (tparams != null) {\n      for (int i = 0; i < tparams.length; i++) {\n        String pValue = req.getParameter(tparams[i]);\n        complete_up.getThemeStylesheetUserPreferences().putParameterValue(tparams[i], pValue);\n        Logger.log(Logger.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting tparam \\\"\" + tparams[i]\n            + \"\\\"=\\\"\" + pValue + \"\\\".\");\n      }\n    }\n    // attribute processing\n    // structure transformation\n    String[] sfattrs = req.getParameterValues(\"uP_sfattr\");\n    if (sfattrs != null) {\n      for (int i = 0; i < sfattrs.length; i++) {\n        String aName = sfattrs[i];\n        String[] aNode = req.getParameterValues(aName + \"_folderId\");\n        if (aNode != null && aNode.length > 0) {\n          for (int j = 0; j < aNode.length; j++) {\n            String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n            complete_up.getStructureStylesheetUserPreferences().setFolderAttributeValue(aNode[j], aName, aValue);\n            Logger.log(Logger.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting sfattr \\\"\" + aName\n                + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n          }\n        }\n      }\n    }\n    String[] scattrs = req.getParameterValues(\"uP_scattr\");\n    if (scattrs != null) {\n      for (int i = 0; i < scattrs.length; i++) {\n        String aName = scattrs[i];\n        String[] aNode = req.getParameterValues(aName + \"_channelId\");\n        if (aNode != null && aNode.length > 0) {\n          for (int j = 0; j < aNode.length; j++) {\n            String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n            complete_up.getStructureStylesheetUserPreferences().setChannelAttributeValue(aNode[j], aName, aValue);\n            Logger.log(Logger.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting scattr \\\"\" + aName\n                + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n          }\n        }\n      }\n    }\n    // theme stylesheet attributes\n    String[] tcattrs = req.getParameterValues(\"uP_tcattr\");\n    if (tcattrs != null) {\n      for (int i = 0; i < tcattrs.length; i++) {\n        String aName = tcattrs[i];\n        String[] aNode = req.getParameterValues(aName + \"_channelId\");\n        if (aNode != null && aNode.length > 0) {\n          for (int j = 0; j < aNode.length; j++) {\n            String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n            complete_up.getThemeStylesheetUserPreferences().setChannelAttributeValue(aNode[j], aName, aValue);\n            Logger.log(Logger.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting tcattr \\\"\" + aName\n                + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n          }\n        }\n      }\n    }\n  }","commit_id":"9dbdead4f1cb57a88d4c23e0364f4f0d08af9c89","url":"https://github.com/Jasig/uPortal"},{"original_method":"public void processUserPreferencesParameters (HttpServletRequest req) {\n        MState state=(MState)stateTable.get(req.getSession(false).getId());\n        if(state==null) {\n            LogService.instance().log(LogService.ERROR,\"GuestUserLayoutManager::processUserPreferencesParameters() : trying to envoke a method on a non-registered sessionId=\\\"\"+req.getSession(false).getId()+\"\\\".\");\n            return;\n        }\n        // layout root setting\n        String root;\n        if ((root = req.getParameter(\"uP_root\")) != null) {\n            // If a channel specifies \"me\" as its root, set the root\n            // to the channel's instance Id\n            if (root.equals(\"me\")) {\n                String chanInstanceId = null;\n                String servletPath = req.getServletPath();\n                String searchFor = \"/channel/\";\n                int chanIdBegIndex = servletPath.indexOf(searchFor) + searchFor.length();\n                if (chanIdBegIndex != -1) {\n                    int chanIdEndIndex = servletPath.indexOf(\"/\", chanIdBegIndex);\n                    root = servletPath.substring(chanIdBegIndex, chanIdEndIndex);\n                }\n            }\n            state.complete_up.getStructureStylesheetUserPreferences().putParameterValue(\"userLayoutRoot\", root);\n        }\n        // other params\n        String[] sparams = req.getParameterValues(\"uP_sparam\");\n        if (sparams != null) {\n            for (int i = 0; i < sparams.length; i++) {\n                String pValue = req.getParameter(sparams[i]);\n                state.complete_up.getStructureStylesheetUserPreferences().putParameterValue(sparams[i], pValue);\n                LogService.instance().log(LogService.DEBUG, \"GuestUserLayoutManager::processUserPreferencesParameters() : setting sparam \\\"\" + sparams[i]\n                           + \"\\\"=\\\"\" + pValue + \"\\\".\");\n            }\n        }\n        String[] tparams = req.getParameterValues(\"uP_tparam\");\n        if (tparams != null) {\n            for (int i = 0; i < tparams.length; i++) {\n                String pValue = req.getParameter(tparams[i]);\n                state.complete_up.getThemeStylesheetUserPreferences().putParameterValue(tparams[i], pValue);\n                LogService.instance().log(LogService.DEBUG, \"GuestUserLayoutManager::processUserPreferencesParameters() : setting tparam \\\"\" + tparams[i]\n                           + \"\\\"=\\\"\" + pValue + \"\\\".\");\n            }\n        }\n        // attribute processing\n        // structure transformation\n        String[] sfattrs = req.getParameterValues(\"uP_sfattr\");\n        if (sfattrs != null) {\n            for (int i = 0; i < sfattrs.length; i++) {\n                String aName = sfattrs[i];\n                String[] aNode = req.getParameterValues(aName + \"_folderId\");\n                if (aNode != null && aNode.length > 0) {\n                    for (int j = 0; j < aNode.length; j++) {\n                        String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n                        state.complete_up.getStructureStylesheetUserPreferences().setFolderAttributeValue(aNode[j], aName, aValue);\n                        LogService.instance().log(LogService.DEBUG, \"GuestUserLayoutManager::processUserPreferencesParameters() : setting sfattr \\\"\" + aName\n                                   + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n                    }\n                }\n            }\n        }\n        String[] scattrs = req.getParameterValues(\"uP_scattr\");\n        if (scattrs != null) {\n            for (int i = 0; i < scattrs.length; i++) {\n                String aName = scattrs[i];\n                String[] aNode = req.getParameterValues(aName + \"_channelId\");\n                if (aNode != null && aNode.length > 0) {\n                    for (int j = 0; j < aNode.length; j++) {\n                        String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n                        state.complete_up.getStructureStylesheetUserPreferences().setChannelAttributeValue(aNode[j], aName, aValue);\n                        LogService.instance().log(LogService.DEBUG, \"GuestUserLayoutManager::processUserPreferencesParameters() : setting scattr \\\"\" + aName\n                                   + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n                    }\n                }\n            }\n        }\n        // theme stylesheet attributes\n        String[] tcattrs = req.getParameterValues(\"uP_tcattr\");\n        if (tcattrs != null) {\n            for (int i = 0; i < tcattrs.length; i++) {\n                String aName = tcattrs[i];\n                String[] aNode = req.getParameterValues(aName + \"_channelId\");\n                if (aNode != null && aNode.length > 0) {\n                    for (int j = 0; j < aNode.length; j++) {\n                        String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n                        state.complete_up.getThemeStylesheetUserPreferences().setChannelAttributeValue(aNode[j], aName, aValue);\n                        LogService.instance().log(LogService.DEBUG, \"GuestUserLayoutManager::processUserPreferencesParameters() : setting tcattr \\\"\" + aName\n                                   + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n                    }\n                }\n            }\n        }\n    }","id":63980,"modified_method":"public void processUserPreferencesParameters (HttpServletRequest req) {\n        MState state=(MState)stateTable.get(req.getSession(false).getId());\n        if(state==null) {\n            LogService.instance().log(LogService.ERROR,\"GuestUserLayoutManager::processUserPreferencesParameters() : trying to envoke a method on a non-registered sessionId=\\\"\"+req.getSession(false).getId()+\"\\\".\");\n            return;\n        }\n        // layout root setting\n        String root;\n        if ((root = req.getParameter(\"uP_root\")) != null) {\n            // If a channel specifies \"me\" as its root, set the root\n            // to the channel's instance Id\n            if (root.equals(\"me\")) {\n                // get uPFile spec and search for \"channel\" clause\n                root=null;\n                String servletPath = req.getServletPath();\n                String uPFile = servletPath.substring(servletPath.lastIndexOf('/')+1, servletPath.length());\n                StringTokenizer uPTokenizer=new StringTokenizer(uPFile,PortalSessionManager.PORTAL_URL_SEPARATOR);\n                while(uPTokenizer.hasMoreTokens()) {\n                    String nextToken=uPTokenizer.nextToken();\n                    if(nextToken.equals(PortalSessionManager.CHANNEL_URL_ELEMENT)) {\n                        if(uPTokenizer.hasMoreTokens()) {\n                            root=uPTokenizer.nextToken();\n                        } else {\n                            // abrupt end after channel element\n                            LogService.instance().log(LogService.ERROR, \"GuestUserLayoutManager::processUserPreferencesParameters() : unable to extract channel ID. uPFile=\\\"\"+uPFile+\"\\\".\");\n                        }\n                    }\n                }\n            }\n            if(root!=null) {\n                state.complete_up.getStructureStylesheetUserPreferences().putParameterValue(\"userLayoutRoot\", root);\n            } else {\n                LogService.instance().log(LogService.ERROR, \"GuestUserLayoutManager::processUserPreferencesParameters() : unable to extract channel ID. servletPath=\\\"\"+req.getServletPath()+\"\\\".\");\n            }\n        }\n        // other params\n        String[] sparams = req.getParameterValues(\"uP_sparam\");\n        if (sparams != null) {\n            for (int i = 0; i < sparams.length; i++) {\n                String pValue = req.getParameter(sparams[i]);\n                state.complete_up.getStructureStylesheetUserPreferences().putParameterValue(sparams[i], pValue);\n                LogService.instance().log(LogService.DEBUG, \"GuestUserLayoutManager::processUserPreferencesParameters() : setting sparam \\\"\" + sparams[i]\n                           + \"\\\"=\\\"\" + pValue + \"\\\".\");\n            }\n        }\n        String[] tparams = req.getParameterValues(\"uP_tparam\");\n        if (tparams != null) {\n            for (int i = 0; i < tparams.length; i++) {\n                String pValue = req.getParameter(tparams[i]);\n                state.complete_up.getThemeStylesheetUserPreferences().putParameterValue(tparams[i], pValue);\n                LogService.instance().log(LogService.DEBUG, \"GuestUserLayoutManager::processUserPreferencesParameters() : setting tparam \\\"\" + tparams[i]\n                           + \"\\\"=\\\"\" + pValue + \"\\\".\");\n            }\n        }\n        // attribute processing\n        // structure transformation\n        String[] sfattrs = req.getParameterValues(\"uP_sfattr\");\n        if (sfattrs != null) {\n            for (int i = 0; i < sfattrs.length; i++) {\n                String aName = sfattrs[i];\n                String[] aNode = req.getParameterValues(aName + \"_folderId\");\n                if (aNode != null && aNode.length > 0) {\n                    for (int j = 0; j < aNode.length; j++) {\n                        String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n                        state.complete_up.getStructureStylesheetUserPreferences().setFolderAttributeValue(aNode[j], aName, aValue);\n                        LogService.instance().log(LogService.DEBUG, \"GuestUserLayoutManager::processUserPreferencesParameters() : setting sfattr \\\"\" + aName\n                                   + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n                    }\n                }\n            }\n        }\n        String[] scattrs = req.getParameterValues(\"uP_scattr\");\n        if (scattrs != null) {\n            for (int i = 0; i < scattrs.length; i++) {\n                String aName = scattrs[i];\n                String[] aNode = req.getParameterValues(aName + \"_channelId\");\n                if (aNode != null && aNode.length > 0) {\n                    for (int j = 0; j < aNode.length; j++) {\n                        String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n                        state.complete_up.getStructureStylesheetUserPreferences().setChannelAttributeValue(aNode[j], aName, aValue);\n                        LogService.instance().log(LogService.DEBUG, \"GuestUserLayoutManager::processUserPreferencesParameters() : setting scattr \\\"\" + aName\n                                   + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n                    }\n                }\n            }\n        }\n        // theme stylesheet attributes\n        String[] tcattrs = req.getParameterValues(\"uP_tcattr\");\n        if (tcattrs != null) {\n            for (int i = 0; i < tcattrs.length; i++) {\n                String aName = tcattrs[i];\n                String[] aNode = req.getParameterValues(aName + \"_channelId\");\n                if (aNode != null && aNode.length > 0) {\n                    for (int j = 0; j < aNode.length; j++) {\n                        String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n                        state.complete_up.getThemeStylesheetUserPreferences().setChannelAttributeValue(aNode[j], aName, aValue);\n                        LogService.instance().log(LogService.DEBUG, \"GuestUserLayoutManager::processUserPreferencesParameters() : setting tcattr \\\"\" + aName\n                                   + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n                    }\n                }\n            }\n        }\n    }","commit_id":"408a5785e12e2630ed44ed1e54a15cd8a0967d16","url":"https://github.com/Jasig/uPortal"},{"original_method":"public void processUserPreferencesParameters (HttpServletRequest req) {\n        // layout root setting\n        String root;\n        if ((root = req.getParameter(\"uP_root\")) != null) {\n            // If a channel specifies \"me\" as its root, set the root\n            // to the channel's instance Id\n            if (root.equals(\"me\")) {\n                String chanInstanceId = null;\n                String servletPath = req.getServletPath();\n                String searchFor = \"/channel/\";\n                int chanIdBegIndex = servletPath.indexOf(searchFor) + searchFor.length();\n                if (chanIdBegIndex != -1) {\n                    int chanIdEndIndex = servletPath.indexOf(\"/\", chanIdBegIndex);\n                    root = servletPath.substring(chanIdBegIndex, chanIdEndIndex);\n                }\n            }\n            complete_up.getStructureStylesheetUserPreferences().putParameterValue(\"userLayoutRoot\", root);\n        }\n        // other params\n        String[] sparams = req.getParameterValues(\"uP_sparam\");\n        if (sparams != null) {\n            for (int i = 0; i < sparams.length; i++) {\n                String pValue = req.getParameter(sparams[i]);\n                complete_up.getStructureStylesheetUserPreferences().putParameterValue(sparams[i], pValue);\n                LogService.instance().log(LogService.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting sparam \\\"\" + sparams[i]\n                           + \"\\\"=\\\"\" + pValue + \"\\\".\");\n            }\n        }\n        String[] tparams = req.getParameterValues(\"uP_tparam\");\n        if (tparams != null) {\n            for (int i = 0; i < tparams.length; i++) {\n                String pValue = req.getParameter(tparams[i]);\n                complete_up.getThemeStylesheetUserPreferences().putParameterValue(tparams[i], pValue);\n                LogService.instance().log(LogService.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting tparam \\\"\" + tparams[i]\n                           + \"\\\"=\\\"\" + pValue + \"\\\".\");\n            }\n        }\n        // attribute processing\n        // structure transformation\n        String[] sfattrs = req.getParameterValues(\"uP_sfattr\");\n        if (sfattrs != null) {\n            for (int i = 0; i < sfattrs.length; i++) {\n                String aName = sfattrs[i];\n                String[] aNode = req.getParameterValues(aName + \"_folderId\");\n                if (aNode != null && aNode.length > 0) {\n                    for (int j = 0; j < aNode.length; j++) {\n                        String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n                        complete_up.getStructureStylesheetUserPreferences().setFolderAttributeValue(aNode[j], aName, aValue);\n                        LogService.instance().log(LogService.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting sfattr \\\"\" + aName\n                                   + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n                    }\n                }\n            }\n        }\n        String[] scattrs = req.getParameterValues(\"uP_scattr\");\n        if (scattrs != null) {\n            for (int i = 0; i < scattrs.length; i++) {\n                String aName = scattrs[i];\n                String[] aNode = req.getParameterValues(aName + \"_channelId\");\n                if (aNode != null && aNode.length > 0) {\n                    for (int j = 0; j < aNode.length; j++) {\n                        String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n                        complete_up.getStructureStylesheetUserPreferences().setChannelAttributeValue(aNode[j], aName, aValue);\n                        LogService.instance().log(LogService.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting scattr \\\"\" + aName\n                                   + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n                    }\n                }\n            }\n        }\n        // theme stylesheet attributes\n        String[] tcattrs = req.getParameterValues(\"uP_tcattr\");\n        if (tcattrs != null) {\n            for (int i = 0; i < tcattrs.length; i++) {\n                String aName = tcattrs[i];\n                String[] aNode = req.getParameterValues(aName + \"_channelId\");\n                if (aNode != null && aNode.length > 0) {\n                    for (int j = 0; j < aNode.length; j++) {\n                        String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n                        complete_up.getThemeStylesheetUserPreferences().setChannelAttributeValue(aNode[j], aName, aValue);\n                        LogService.instance().log(LogService.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting tcattr \\\"\" + aName\n                                   + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n                    }\n                }\n            }\n        }\n    }","id":63981,"modified_method":"public void processUserPreferencesParameters (HttpServletRequest req) {\n        // layout root setting\n        String root;\n        if ((root = req.getParameter(\"uP_root\")) != null) {\n            // If a channel specifies \"me\" as its root, set the root\n            // to the channel's instance Id\n            if (root.equals(\"me\")) {\n                // get uPFile spec and search for \"channel\" clause\n                root=null;\n                String servletPath = req.getServletPath();\n                String uPFile = servletPath.substring(servletPath.lastIndexOf('/')+1, servletPath.length());\n                StringTokenizer uPTokenizer=new StringTokenizer(uPFile,PortalSessionManager.PORTAL_URL_SEPARATOR);\n                while(uPTokenizer.hasMoreTokens()) {\n                    String nextToken=uPTokenizer.nextToken();\n                    if(nextToken.equals(PortalSessionManager.CHANNEL_URL_ELEMENT)) {\n                        if(uPTokenizer.hasMoreTokens()) {\n                            root=uPTokenizer.nextToken();\n                        } else {\n                            // abrupt end after channel element\n                            LogService.instance().log(LogService.ERROR, \"UserLayoutManager::processUserPreferencesParameters() : unable to extract channel ID. uPFile=\\\"\"+uPFile+\"\\\".\");\n                        }\n                    }\n                }\n            }\n            if(root!=null) {\n                complete_up.getStructureStylesheetUserPreferences().putParameterValue(\"userLayoutRoot\", root);\n            } else {\n                LogService.instance().log(LogService.ERROR, \"UserLayoutManager::processUserPreferencesParameters() : unable to extract channel ID. servletPath=\\\"\"+req.getServletPath()+\"\\\".\");\n            }\n        }\n        // other params\n        String[] sparams = req.getParameterValues(\"uP_sparam\");\n        if (sparams != null) {\n            for (int i = 0; i < sparams.length; i++) {\n                String pValue = req.getParameter(sparams[i]);\n                complete_up.getStructureStylesheetUserPreferences().putParameterValue(sparams[i], pValue);\n                LogService.instance().log(LogService.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting sparam \\\"\" + sparams[i]\n                           + \"\\\"=\\\"\" + pValue + \"\\\".\");\n            }\n        }\n        String[] tparams = req.getParameterValues(\"uP_tparam\");\n        if (tparams != null) {\n            for (int i = 0; i < tparams.length; i++) {\n                String pValue = req.getParameter(tparams[i]);\n                complete_up.getThemeStylesheetUserPreferences().putParameterValue(tparams[i], pValue);\n                LogService.instance().log(LogService.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting tparam \\\"\" + tparams[i]\n                           + \"\\\"=\\\"\" + pValue + \"\\\".\");\n            }\n        }\n        // attribute processing\n        // structure transformation\n        String[] sfattrs = req.getParameterValues(\"uP_sfattr\");\n        if (sfattrs != null) {\n            for (int i = 0; i < sfattrs.length; i++) {\n                String aName = sfattrs[i];\n                String[] aNode = req.getParameterValues(aName + \"_folderId\");\n                if (aNode != null && aNode.length > 0) {\n                    for (int j = 0; j < aNode.length; j++) {\n                        String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n                        complete_up.getStructureStylesheetUserPreferences().setFolderAttributeValue(aNode[j], aName, aValue);\n                        LogService.instance().log(LogService.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting sfattr \\\"\" + aName\n                                   + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n                    }\n                }\n            }\n        }\n        String[] scattrs = req.getParameterValues(\"uP_scattr\");\n        if (scattrs != null) {\n            for (int i = 0; i < scattrs.length; i++) {\n                String aName = scattrs[i];\n                String[] aNode = req.getParameterValues(aName + \"_channelId\");\n                if (aNode != null && aNode.length > 0) {\n                    for (int j = 0; j < aNode.length; j++) {\n                        String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n                        complete_up.getStructureStylesheetUserPreferences().setChannelAttributeValue(aNode[j], aName, aValue);\n                        LogService.instance().log(LogService.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting scattr \\\"\" + aName\n                                   + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n                    }\n                }\n            }\n        }\n        // theme stylesheet attributes\n        String[] tcattrs = req.getParameterValues(\"uP_tcattr\");\n        if (tcattrs != null) {\n            for (int i = 0; i < tcattrs.length; i++) {\n                String aName = tcattrs[i];\n                String[] aNode = req.getParameterValues(aName + \"_channelId\");\n                if (aNode != null && aNode.length > 0) {\n                    for (int j = 0; j < aNode.length; j++) {\n                        String aValue = req.getParameter(aName + \"_\" + aNode[j] + \"_value\");\n                        complete_up.getThemeStylesheetUserPreferences().setChannelAttributeValue(aNode[j], aName, aValue);\n                        LogService.instance().log(LogService.DEBUG, \"UserLayoutManager::processUserPreferencesParameters() : setting tcattr \\\"\" + aName\n                                   + \"\\\" of \\\"\" + aNode[j] + \"\\\" to \\\"\" + aValue + \"\\\".\");\n                    }\n                }\n            }\n        }\n    }","commit_id":"408a5785e12e2630ed44ed1e54a15cd8a0967d16","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n\t * Build a log message for the given exception, occurred during processing the given request.\n\t * @param ex the exception that got thrown during handler execution\n\t * @param request current HTTP request (useful for obtaining metadata)\n\t * @return the log message to use\n\t */\n\tprotected String buildLogMessage(Exception ex, HttpServletRequest request) {\n\t\treturn \"Handler execution resulted in exception: \" + ex;\n\t}","id":63982,"modified_method":"/**\n\t * Build a log message for the given exception, occurred during processing the given request.\n\t * @param ex the exception that got thrown during handler execution\n\t * @param request current HTTP request (useful for obtaining metadata)\n\t * @return the log message to use\n\t */\n\tprotected String buildLogMessage(Exception ex, HttpServletRequest request) {\n\t\treturn \"Resolved exception caused by Handler execution: \" + ex;\n\t}","commit_id":"0345d734e63e33096ec91b8ef62b6868b0e5fc36","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Check whether this resolver is supposed to apply (i.e. if the supplied handler\n\t * matches any of the configured {@linkplain #setMappedHandlers handlers} or\n\t * {@linkplain #setMappedHandlerClasses handler classes}), and then delegate\n\t * to the {@link #doResolveException} template method.\n\t */\n\t@Override\n\tpublic ModelAndView resolveException(HttpServletRequest request, HttpServletResponse response,\n\t\t\tObject handler, Exception ex) {\n\n\t\tif (shouldApplyTo(request, handler)) {\n\t\t\t// Log exception, both at debug log level and at warn level, if desired.\n\t\t\tif (this.logger.isDebugEnabled()) {\n\t\t\t\tthis.logger.debug(\"Resolving exception from handler [\" + handler + \"]: \" + ex);\n\t\t\t}\n\t\t\tlogException(ex, request);\n\t\t\tprepareResponse(ex, response);\n\t\t\treturn doResolveException(request, response, handler, ex);\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","id":63983,"modified_method":"/**\n\t * Check whether this resolver is supposed to apply (i.e. if the supplied handler\n\t * matches any of the configured {@linkplain #setMappedHandlers handlers} or\n\t * {@linkplain #setMappedHandlerClasses handler classes}), and then delegate\n\t * to the {@link #doResolveException} template method.\n\t */\n\t@Override\n\tpublic ModelAndView resolveException(HttpServletRequest request, HttpServletResponse response,\n\t\t\tObject handler, Exception ex) {\n\n\t\tif (shouldApplyTo(request, handler)) {\n\t\t\tif (this.logger.isDebugEnabled()) {\n\t\t\t\tthis.logger.debug(\"Resolving exception from handler [\" + handler + \"]: \" + ex);\n\t\t\t}\n\t\t\tprepareResponse(ex, response);\n\t\t\tModelAndView result = doResolveException(request, response, handler, ex);\n\t\t\tif (result != null) {\n\t\t\t\tlogException(ex, request);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"0345d734e63e33096ec91b8ef62b6868b0e5fc36","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Before\n\tpublic void setUp() {\n\t\texceptionResolver = new DefaultHandlerExceptionResolver();\n\t\trequest = new MockHttpServletRequest();\n\t\tresponse = new MockHttpServletResponse();\n\t\trequest.setMethod(\"GET\");\n\t}","id":63984,"modified_method":"@Before\n\tpublic void setUp() {\n\t\texceptionResolver = new DefaultHandlerExceptionResolver();\n\t\texceptionResolver.setWarnLogCategory(exceptionResolver.getClass().getName());\n\t\trequest = new MockHttpServletRequest();\n\t\tresponse = new MockHttpServletResponse();\n\t\trequest.setMethod(\"GET\");\n\t}","commit_id":"0345d734e63e33096ec91b8ef62b6868b0e5fc36","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Before\n\tpublic void setup() throws Exception {\n\t\tthis.resolver = new ExceptionHandlerExceptionResolver();\n\t\tthis.request = new MockHttpServletRequest(\"GET\", \"/\");\n\t\tthis.response = new MockHttpServletResponse();\n\t}","id":63985,"modified_method":"@Before\n\tpublic void setup() throws Exception {\n\t\tthis.resolver = new ExceptionHandlerExceptionResolver();\n\t\tthis.resolver.setWarnLogCategory(this.resolver.getClass().getName());\n\t\tthis.request = new MockHttpServletRequest(\"GET\", \"/\");\n\t\tthis.response = new MockHttpServletResponse();\n\t}","commit_id":"0345d734e63e33096ec91b8ef62b6868b0e5fc36","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Build a log message for the given exception, occurred during processing the given request.\n\t * @param ex the exception that got thrown during handler execution\n\t * @param request current HTTP request (useful for obtaining metadata)\n\t * @return the log message to use\n\t */\n\tprotected String buildLogMessage(Exception ex, HttpServletRequest request) {\n\t\treturn \"Handler execution resulted in exception\";\n\t}","id":63986,"modified_method":"/**\n\t * Build a log message for the given exception, occurred during processing the given request.\n\t * @param ex the exception that got thrown during handler execution\n\t * @param request current HTTP request (useful for obtaining metadata)\n\t * @return the log message to use\n\t */\n\tprotected String buildLogMessage(Exception ex, HttpServletRequest request) {\n\t\tString message = (ex != null ? ex.getMessage() : \"null\");\n\t\treturn \"Handler execution resulted in exception: \" + (message != null ? message : \"null\");\n\t}","commit_id":"a08c9f3137d114bbdd0cdb2800024d45a6a21e3a","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Set the log category for warn logging. The name will be passed to the underlying logger\n\t * implementation through Commons Logging, getting interpreted as log category according\n\t * to the logger's configuration.\n\t * <p>Default is no warn logging. Specify this setting to activate warn logging into a specific\n\t * category. Alternatively, override the {@link #logException} method for custom logging.\n\t * @see org.apache.commons.logging.LogFactory#getLog(String)\n\t * @see org.apache.log4j.Logger#getLogger(String)\n\t * @see java.util.logging.Logger#getLogger(String)\n\t */\n\tpublic void setWarnLogCategory(String loggerName) {\n\t\tthis.warnLogger = LogFactory.getLog(loggerName);\n\t}","id":63987,"modified_method":"/**\n\t * Set the log category for warn logging. The name will be passed to the underlying logger\n\t * implementation through Commons Logging, getting interpreted as log category according\n\t * to the logger's configuration.\n\t * <p>Default is warn logging using the {@link AbstractHandlerExceptionResolver} class name derived logger.\n\t * Set to {@code null} to disable warn logging.\n\t * Override the {@link #logException} method for custom logging.\n\t * @see org.apache.commons.logging.LogFactory#getLog(String)\n\t * @see org.apache.log4j.Logger#getLogger(String)\n\t * @see java.util.logging.Logger#getLogger(String)\n\t */\n\tpublic void setWarnLogCategory(String loggerName) {\n\t\tthis.warnLogger = (loggerName != null ? LogFactory.getLog(loggerName) : null);\n\t}","commit_id":"a08c9f3137d114bbdd0cdb2800024d45a6a21e3a","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Checks whether this resolver is supposed to apply (i.e. the handler matches\n\t * in case of \"mappedHandlers\" having been specified), then delegates to the\n\t * {@link #doResolveException} template method.\n\t */\n\t@Override\n\tpublic ModelAndView resolveException(HttpServletRequest request, HttpServletResponse response,\n\t\t\tObject handler, Exception ex) {\n\n\t\tif (shouldApplyTo(request, handler)) {\n\t\t\t// Log exception, both at debug log level and at warn level, if desired.\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.debug(\"Resolving exception from handler [\" + handler + \"]: \" + ex);\n\t\t\t}\n\t\t\tlogException(ex, request);\n\t\t\tprepareResponse(ex, response);\n\t\t\treturn doResolveException(request, response, handler, ex);\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","id":63988,"modified_method":"/**\n\t * Checks whether this resolver is supposed to apply (i.e. the handler matches\n\t * in case of \"mappedHandlers\" having been specified), then delegates to the\n\t * {@link #doResolveException} template method.\n\t */\n\t@Override\n\tpublic ModelAndView resolveException(HttpServletRequest request, HttpServletResponse response,\n\t\t\tObject handler, Exception ex) {\n\n\t\tif (shouldApplyTo(request, handler)) {\n\t\t\t// Log exception at debug log level\n\t\t\tif (this.logger.isDebugEnabled()) {\n\t\t\t\tthis.logger.debug(\"Resolving exception from handler [\" + handler + \"]: \" + ex);\n\t\t\t}\n\t\t\tprepareResponse(ex, response);\n\t\t\tModelAndView mav = doResolveException(request, response, handler, ex);\n\t\t\tif (mav != null) {\n\t\t\t\t// Log exception message at warn log level\n\t\t\t\tlogException(ex, request);\n\t\t\t}\n\t\t\treturn mav;\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"a08c9f3137d114bbdd0cdb2800024d45a6a21e3a","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Log the given exception at warn level, provided that warn logging has been\n\t * activated through the {@link #setWarnLogCategory \"warnLogCategory\"} property.\n\t * <p>Calls {@link #buildLogMessage} in order to determine the concrete message to log.\n\t * Always passes the full exception to the logger.\n\t * @param ex the exception that got thrown during handler execution\n\t * @param request current HTTP request (useful for obtaining metadata)\n\t * @see #setWarnLogCategory\n\t * @see #buildLogMessage\n\t * @see org.apache.commons.logging.Log#warn(Object, Throwable)\n\t */\n\tprotected void logException(Exception ex, HttpServletRequest request) {\n\t\tif (this.warnLogger != null && this.warnLogger.isWarnEnabled()) {\n\t\t\tthis.warnLogger.warn(buildLogMessage(ex, request), ex);\n\t\t}\n\t}","id":63989,"modified_method":"/**\n\t * Log the given exception message at warn level.\n\t * <p>Calls {@link #buildLogMessage} in order to determine the concrete message to log.\n\t * @param ex the exception that got thrown during handler execution\n\t * @param request current HTTP request (useful for obtaining metadata)\n\t * @see #setWarnLogCategory\n\t * @see #buildLogMessage\n\t * @see org.apache.commons.logging.Log#warn(Object, Throwable)\n\t */\n\tprotected void logException(Exception ex, HttpServletRequest request) {\n\t\tif (this.warnLogger != null && this.warnLogger.isWarnEnabled()) {\n\t\t\tthis.warnLogger.warn(buildLogMessage(ex, request));\n\t\t}\n\t}","commit_id":"a08c9f3137d114bbdd0cdb2800024d45a6a21e3a","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void methodArgumentNotValid() {\n\t\tException ex = new MethodArgumentNotValidException(null, null);\n\t\ttestException(ex);\n\t}","id":63990,"modified_method":"@Test\n\tpublic void methodArgumentNotValid() {\n\t\tException ex = Mockito.mock(MethodArgumentNotValidException.class);\n\t\ttestException(ex);\n\t}","commit_id":"a08c9f3137d114bbdd0cdb2800024d45a6a21e3a","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Check whether this resolver is supposed to apply (i.e. if the supplied handler\n\t * matches any of the configured {@linkplain #setMappedHandlers handlers} or\n\t * {@linkplain #setMappedHandlerClasses handler classes}), and then delegate\n\t * to the {@link #doResolveException} template method.\n\t */\n\t@Override\n\tpublic ModelAndView resolveException(HttpServletRequest request, HttpServletResponse response,\n\t\t\tObject handler, Exception ex) {\n\n\t\tif (shouldApplyTo(request, handler)) {\n\t\t\t// Log exception at debug log level\n\t\t\tif (this.logger.isDebugEnabled()) {\n\t\t\t\tthis.logger.debug(\"Resolving exception from handler [\" + handler + \"]: \" + ex);\n\t\t\t}\n\t\t\tprepareResponse(ex, response);\n\t\t\tModelAndView mav = doResolveException(request, response, handler, ex);\n\t\t\tif (mav != null) {\n\t\t\t\t// Log exception message at warn log level\n\t\t\t\tlogException(ex, request);\n\t\t\t}\n\t\t\treturn mav;\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","id":63991,"modified_method":"/**\n\t * Check whether this resolver is supposed to apply (i.e. if the supplied handler\n\t * matches any of the configured {@linkplain #setMappedHandlers handlers} or\n\t * {@linkplain #setMappedHandlerClasses handler classes}), and then delegate\n\t * to the {@link #doResolveException} template method.\n\t */\n\t@Override\n\tpublic ModelAndView resolveException(HttpServletRequest request, HttpServletResponse response,\n\t\t\tObject handler, Exception ex) {\n\n\t\tif (shouldApplyTo(request, handler)) {\n\t\t\t// Log exception, both at debug log level and at warn level, if desired.\n\t\t\tif (this.logger.isDebugEnabled()) {\n\t\t\t\tthis.logger.debug(\"Resolving exception from handler [\" + handler + \"]: \" + ex);\n\t\t\t}\n\t\t\tlogException(ex, request);\n\t\t\tprepareResponse(ex, response);\n\t\t\treturn doResolveException(request, response, handler, ex);\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"76d7f4527acaaeb784938cada6b57c73eb4abdb7","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Set the log category for warn logging. The name will be passed to the underlying logger\n\t * implementation through Commons Logging, getting interpreted as a log category according\n\t * to the logger's configuration.\n\t * <p>Default is warn logging using the {@link AbstractHandlerExceptionResolver} class name derived logger.\n\t * <p>Set to {@code null} to disable warn logging.\n\t * <p>Override the {@link #logException} method for custom logging.\n\t * @see org.apache.commons.logging.LogFactory#getLog(String)\n\t * @see org.apache.log4j.Logger#getLogger(String)\n\t * @see java.util.logging.Logger#getLogger(String)\n\t */\n\tpublic void setWarnLogCategory(String loggerName) {\n\t\tthis.warnLogger = (loggerName != null ? LogFactory.getLog(loggerName) : null);\n\t}","id":63992,"modified_method":"/**\n\t * Set the log category for warn logging. The name will be passed to the underlying logger\n\t * implementation through Commons Logging, getting interpreted as a log category according\n\t * to the logger's configuration.\n\t * <p>Default is no warn logging. Specify this setting to activate warn logging into a specific\n\t * category. Alternatively, override the {@link #logException} method for custom logging.\n\t * @see org.apache.commons.logging.LogFactory#getLog(String)\n\t * @see org.apache.log4j.Logger#getLogger(String)\n\t * @see java.util.logging.Logger#getLogger(String)\n\t */\n\tpublic void setWarnLogCategory(String loggerName) {\n\t\tthis.warnLogger = LogFactory.getLog(loggerName);\n\t}","commit_id":"76d7f4527acaaeb784938cada6b57c73eb4abdb7","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Build a log message for the given exception, occurred during processing the given request.\n\t * @param ex the exception that got thrown during handler execution\n\t * @param request current HTTP request (useful for obtaining metadata)\n\t * @return the log message to use\n\t */\n\tprotected String buildLogMessage(Exception ex, HttpServletRequest request) {\n\t\tString message = (ex != null ? ex.getMessage() : \"null\");\n\t\treturn \"Handler execution resulted in exception: \" + (message != null ? message : \"null\");\n\t}","id":63993,"modified_method":"/**\n\t * Build a log message for the given exception, occurred during processing the given request.\n\t * @param ex the exception that got thrown during handler execution\n\t * @param request current HTTP request (useful for obtaining metadata)\n\t * @return the log message to use\n\t */\n\tprotected String buildLogMessage(Exception ex, HttpServletRequest request) {\n\t\treturn \"Handler execution resulted in exception: \" + ex;\n\t}","commit_id":"76d7f4527acaaeb784938cada6b57c73eb4abdb7","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Log the given exception message at warn level.\n\t * <p>Calls {@link #buildLogMessage} in order to determine the concrete message to log.\n\t * @param ex the exception that got thrown during handler execution\n\t * @param request current HTTP request (useful for obtaining metadata)\n\t * @see #setWarnLogCategory\n\t * @see #buildLogMessage\n\t * @see org.apache.commons.logging.Log#warn(Object, Throwable)\n\t */\n\tprotected void logException(Exception ex, HttpServletRequest request) {\n\t\tif (this.warnLogger != null && this.warnLogger.isWarnEnabled()) {\n\t\t\tthis.warnLogger.warn(buildLogMessage(ex, request));\n\t\t}\n\t}","id":63994,"modified_method":"/**\n\t * Log the given exception at warn level, provided that warn logging has been\n\t * activated through the {@link #setWarnLogCategory \"warnLogCategory\"} property.\n\t * <p>Calls {@link #buildLogMessage} in order to determine the concrete message to log.\n\t * @param ex the exception that got thrown during handler execution\n\t * @param request current HTTP request (useful for obtaining metadata)\n\t * @see #setWarnLogCategory\n\t * @see #buildLogMessage\n\t * @see org.apache.commons.logging.Log#warn(Object, Throwable)\n\t */\n\tprotected void logException(Exception ex, HttpServletRequest request) {\n\t\tif (this.warnLogger != null && this.warnLogger.isWarnEnabled()) {\n\t\t\tthis.warnLogger.warn(buildLogMessage(ex, request));\n\t\t}\n\t}","commit_id":"76d7f4527acaaeb784938cada6b57c73eb4abdb7","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"private Pair<String,String> buildRegexp(String pattern) {\n    String pref;\n    {\n      final int len = pattern.length ();\n      int i = 0;\n      while (i != len && (Character.isLetterOrDigit(pattern.charAt(i)) && (i == 0 || !Character.isUpperCase(pattern.charAt(i))))) {\n        ++i;\n      }\n      pref = pattern.substring(0,i);\n    }\n\n\n    {\n      final int eol = pattern.indexOf ('\\n');\n      if (eol != -1) {\n        pattern = pattern.substring(0, eol);\n      }\n    }\n    if (pattern.length() >= 80) {\n      pattern = pattern.substring(0, 80);\n    }\n\n    final StringBuffer buffer = new StringBuffer();\n    boolean lastIsUppercase = false;\n    final boolean endsWithSpace = StringUtil.endsWithChar(pattern, ' ');\n    final boolean uppercaseOnly = containsOnlyUppercaseLetters(pattern);\n    pattern = pattern.trim();\n    myExactPrefixLen = Math.min(myExactPrefixLen, pattern.length());\n    for (int i = 0; i != myExactPrefixLen; ++i) {\n      final char c = pattern.charAt(i);\n      if (Character.isLetterOrDigit(c)) {\n        buffer.append(c);\n      }\n      else {\n        buffer.append(\"\\\\u\");\n        buffer.append(Integer.toHexString(c + 0x20000).substring(1));\n      }\n    }\n    for (int i = myExactPrefixLen; i < pattern.length(); i++) {\n      final char c = pattern.charAt(i);\n      lastIsUppercase = false;\n      if (Character.isLetterOrDigit(c)) {\n        // This logic allows to use uppercase letters only to catch the name like PDM for PsiDocumentManager\n        if (Character.isUpperCase(c)) {\n          if (!uppercaseOnly) {\n            buffer.append('(');\n          }\n          if (i > 0) buffer.append(\"[a-z0-9]*\");\n          buffer.append(c);\n          if (!uppercaseOnly) {\n            buffer.append('|');\n            buffer.append(Character.toLowerCase(c));\n            buffer.append(')');\n          }\n          lastIsUppercase = true;\n        }\n        else if (Character.isLowerCase(c)) {\n          buffer.append('[');\n          buffer.append(c);\n          buffer.append('|');\n          buffer.append(Character.toUpperCase(c));\n          buffer.append(']');\n        }\n        else {\n          buffer.append(c);\n        }\n      }\n      else if (c == '*') {\n        buffer.append(\".*\");\n      }\n      else {\n        buffer.append(\"\\\\u\");\n        buffer.append(Integer.toHexString(c + 0x20000).substring(1));\n      }\n    }\n\n    if (!endsWithSpace) {\n      buffer.append(\".*\");\n    }\n    else if (lastIsUppercase) {\n      buffer.append(\"[a-z0-9]*\");\n    }\n    final String regex = buffer.toString();\n    return Pair.create(pref, regex);\n  }","id":63995,"modified_method":"private Pair<String,String> buildRegexp(String pattern) {\n    String pref;\n    {\n      final int len = pattern.length ();\n      int i = 0;\n      while (i != len && (Character.isLetterOrDigit(pattern.charAt(i)) && (i == 0 || !Character.isUpperCase(pattern.charAt(i))))) {\n        ++i;\n      }\n      pref = pattern.substring(0,i);\n    }\n\n\n    {\n      final int eol = pattern.indexOf ('\\n');\n      if (eol != -1) {\n        pattern = pattern.substring(0, eol);\n      }\n    }\n    if (pattern.length() >= 80) {\n      pattern = pattern.substring(0, 80);\n    }\n\n    final StringBuffer buffer = new StringBuffer();\n    boolean lastIsUppercase = false;\n    final boolean endsWithSpace = StringUtil.endsWithChar(pattern, ' ');\n    final boolean uppercaseOnly = containsOnlyUppercaseLetters(pattern);\n    pattern = pattern.trim();\n    myExactPrefixLen = Math.min(myExactPrefixLen, pattern.length());\n    for (int i = 0; i != myExactPrefixLen; ++i) {\n      final char c = pattern.charAt(i);\n      if (Character.isLetterOrDigit(c)) {\n        buffer.append(c);\n      }\n      else {\n        buffer.append(\"\\\\u\");\n        buffer.append(Integer.toHexString(c + 0x20000).substring(1));\n      }\n    }\n    for (int i = myExactPrefixLen; i < pattern.length(); i++) {\n      final char c = pattern.charAt(i);\n      lastIsUppercase = false;\n      if (Character.isLetterOrDigit(c)) {\n        // This logic allows to use uppercase letters only to catch the name like PDM for PsiDocumentManager\n        if (Character.isUpperCase(c) || Character.isDigit(c)) {\n          if (!uppercaseOnly) {\n            buffer.append('(');\n          }\n          if (i > 0) buffer.append(\"[a-z0-9]*\");\n          buffer.append(c);\n          if (!uppercaseOnly) {\n            buffer.append('|');\n            buffer.append(Character.toLowerCase(c));\n            buffer.append(')');\n          }\n          lastIsUppercase = true;\n        }\n        else if (Character.isLowerCase(c)) {\n          buffer.append('[');\n          buffer.append(c);\n          buffer.append('|');\n          buffer.append(Character.toUpperCase(c));\n          buffer.append(']');\n        }\n        else {\n          buffer.append(c);\n        }\n      }\n      else if (c == '*') {\n        buffer.append(\".*\");\n      }\n      else {\n        buffer.append(\"\\\\u\");\n        buffer.append(Integer.toHexString(c + 0x20000).substring(1));\n      }\n    }\n\n    if (!endsWithSpace) {\n      buffer.append(\".*\");\n    }\n    else if (lastIsUppercase) {\n      buffer.append(\"[a-z0-9]*\");\n    }\n    final String regex = buffer.toString();\n    return Pair.create(pref, regex);\n  }","commit_id":"6376238f37e53e56c67ce6900f9bfdfde40ef1d5","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected String fixJavaTermsDividers(\n\t\tString fileName, String content, Set<JavaTerm> javaTerms) {\n\n\t\tJavaTerm previousJavaTerm = null;\n\n\t\tIterator<JavaTerm> itr = javaTerms.iterator();\n\n\t\twhile (itr.hasNext()) {\n\t\t\tJavaTerm javaTerm = itr.next();\n\n\t\t\tif (previousJavaTerm == null) {\n\t\t\t\tpreviousJavaTerm = javaTerm;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString javaTermContent = javaTerm.getContent();\n\n\t\t\tif (javaTermContent.startsWith(StringPool.TAB + \"//\") ||\n\t\t\t\tjavaTermContent.contains(StringPool.TAB + \"static {\")) {\n\n\t\t\t\tpreviousJavaTerm = javaTerm;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString previousJavaTermContent = previousJavaTerm.getContent();\n\n\t\t\tif (previousJavaTermContent.startsWith(StringPool.TAB + \"//\") ||\n\t\t\t\tpreviousJavaTermContent.contains(StringPool.TAB + \"static {\")) {\n\n\t\t\t\tpreviousJavaTerm = javaTerm;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString javaTermName = javaTerm.getName();\n\n\t\t\tString excluded = null;\n\n\t\t\tif (_javaTermSortExclusions != null) {\n\t\t\t\texcluded = _javaTermSortExclusions.getProperty(\n\t\t\t\t\tfileName + StringPool.AT + javaTerm.getLineCount());\n\n\t\t\t\tif (excluded == null) {\n\t\t\t\t\texcluded = _javaTermSortExclusions.getProperty(\n\t\t\t\t\t\tfileName + StringPool.AT + javaTermName);\n\t\t\t\t}\n\n\t\t\t\tif (excluded == null) {\n\t\t\t\t\texcluded = _javaTermSortExclusions.getProperty(fileName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (excluded != null) {\n\t\t\t\tpreviousJavaTerm = javaTerm;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString previousJavaTermName = previousJavaTerm.getName();\n\n\t\t\tboolean requiresEmptyLine = false;\n\n\t\t\tif (previousJavaTerm.getType() != javaTerm.getType()) {\n\t\t\t\trequiresEmptyLine = true;\n\t\t\t}\n\t\t\telse if (!isInJavaTermTypeGroup(\n\t\t\t\t\t\tjavaTerm.getType(), TYPE_VARIABLE)) {\n\n\t\t\t\trequiresEmptyLine = true;\n\t\t\t}\n\t\t\telse if (StringUtil.isUpperCase(javaTermName) ||\n\t\t\t\t\t StringUtil.isUpperCase(previousJavaTermName)) {\n\n\t\t\t\trequiresEmptyLine = true;\n\t\t\t}\n\t\t\telse if (hasAnnotationCommentOrJavadoc(javaTermContent) ||\n\t\t\t\t\t hasAnnotationCommentOrJavadoc(previousJavaTermContent)) {\n\n\t\t\t\trequiresEmptyLine = true;\n\t\t\t}\n\t\t\telse if ((previousJavaTerm.getType() ==\n\t\t\t\t\t\tTYPE_VARIABLE_PRIVATE_STATIC) &&\n\t\t\t\t\t (previousJavaTermName.equals(\"_log\") ||\n\t\t\t\t\t  previousJavaTermName.equals(\"_instance\"))) {\n\n\t\t\t\trequiresEmptyLine = true;\n\t\t\t}\n\t\t\telse if (previousJavaTermContent.contains(\"\\n\\n\\t\") ||\n\t\t\t\t\t javaTermContent.contains(\"\\n\\n\\t\")) {\n\n\t\t\t\trequiresEmptyLine = true;\n\t\t\t}\n\n\t\t\tif (requiresEmptyLine) {\n\t\t\t\tif (!content.contains(\"\\n\\n\" + javaTermContent)) {\n\t\t\t\t\treturn StringUtil.replace(\n\t\t\t\t\t\tcontent, \"\\n\" + javaTermContent,\n\t\t\t\t\t\t\"\\n\\n\" + javaTermContent);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (content.contains(\"\\n\\n\" + javaTermContent)) {\n\t\t\t\treturn StringUtil.replace(\n\t\t\t\t\tcontent, \"\\n\\n\" + javaTermContent, \"\\n\" + javaTermContent);\n\t\t\t}\n\n\t\t\tpreviousJavaTerm = javaTerm;\n\t\t}\n\n\t\treturn content;\n\t}","id":63996,"modified_method":"protected String fixJavaTermsDividers(\n\t\tString fileName, String content, Set<JavaTerm> javaTerms) {\n\n\t\tJavaTerm previousJavaTerm = null;\n\n\t\tIterator<JavaTerm> itr = javaTerms.iterator();\n\n\t\twhile (itr.hasNext()) {\n\t\t\tJavaTerm javaTerm = itr.next();\n\n\t\t\tif (previousJavaTerm == null) {\n\t\t\t\tpreviousJavaTerm = javaTerm;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString javaTermContent = javaTerm.getContent();\n\n\t\t\tif (javaTermContent.startsWith(StringPool.TAB + \"//\") ||\n\t\t\t\tjavaTermContent.contains(StringPool.TAB + \"static {\")) {\n\n\t\t\t\tpreviousJavaTerm = javaTerm;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString previousJavaTermContent = previousJavaTerm.getContent();\n\n\t\t\tif (previousJavaTermContent.startsWith(StringPool.TAB + \"//\") ||\n\t\t\t\tpreviousJavaTermContent.contains(StringPool.TAB + \"static {\")) {\n\n\t\t\t\tpreviousJavaTerm = javaTerm;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString javaTermName = javaTerm.getName();\n\n\t\t\tString excluded = null;\n\n\t\t\tif (_javaTermSortExclusions != null) {\n\t\t\t\texcluded = _javaTermSortExclusions.getProperty(\n\t\t\t\t\tfileName + StringPool.AT + javaTerm.getLineCount());\n\n\t\t\t\tif (excluded == null) {\n\t\t\t\t\texcluded = _javaTermSortExclusions.getProperty(\n\t\t\t\t\t\tfileName + StringPool.AT + javaTermName);\n\t\t\t\t}\n\n\t\t\t\tif (excluded == null) {\n\t\t\t\t\texcluded = _javaTermSortExclusions.getProperty(fileName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (excluded != null) {\n\t\t\t\tpreviousJavaTerm = javaTerm;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString previousJavaTermName = previousJavaTerm.getName();\n\n\t\t\tboolean requiresEmptyLine = false;\n\n\t\t\tif (previousJavaTerm.getType() != javaTerm.getType()) {\n\t\t\t\trequiresEmptyLine = true;\n\t\t\t}\n\t\t\telse if (!isInJavaTermTypeGroup(\n\t\t\t\t\t\tjavaTerm.getType(), TYPE_VARIABLE)) {\n\n\t\t\t\trequiresEmptyLine = true;\n\t\t\t}\n\t\t\telse if ((StringUtil.isUpperCase(javaTermName) &&\n\t\t\t\t\t  !StringUtil.isLowerCase(javaTermName)) ||\n\t\t\t\t\t (StringUtil.isUpperCase(previousJavaTermName) &&\n\t\t\t\t\t  !StringUtil.isLowerCase(previousJavaTermName))) {\n\n\t\t\t\trequiresEmptyLine = true;\n\t\t\t}\n\t\t\telse if (hasAnnotationCommentOrJavadoc(javaTermContent) ||\n\t\t\t\t\t hasAnnotationCommentOrJavadoc(previousJavaTermContent)) {\n\n\t\t\t\trequiresEmptyLine = true;\n\t\t\t}\n\t\t\telse if ((previousJavaTerm.getType() ==\n\t\t\t\t\t\tTYPE_VARIABLE_PRIVATE_STATIC) &&\n\t\t\t\t\t (previousJavaTermName.equals(\"_log\") ||\n\t\t\t\t\t  previousJavaTermName.equals(\"_instance\"))) {\n\n\t\t\t\trequiresEmptyLine = true;\n\t\t\t}\n\t\t\telse if (previousJavaTermContent.contains(\"\\n\\n\\t\") ||\n\t\t\t\t\t javaTermContent.contains(\"\\n\\n\\t\")) {\n\n\t\t\t\trequiresEmptyLine = true;\n\t\t\t}\n\n\t\t\tif (requiresEmptyLine) {\n\t\t\t\tif (!content.contains(\"\\n\\n\" + javaTermContent)) {\n\t\t\t\t\treturn StringUtil.replace(\n\t\t\t\t\t\tcontent, \"\\n\" + javaTermContent,\n\t\t\t\t\t\t\"\\n\\n\" + javaTermContent);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (content.contains(\"\\n\\n\" + javaTermContent)) {\n\t\t\t\treturn StringUtil.replace(\n\t\t\t\t\tcontent, \"\\n\\n\" + javaTermContent, \"\\n\" + javaTermContent);\n\t\t\t}\n\n\t\t\tpreviousJavaTerm = javaTerm;\n\t\t}\n\n\t\treturn content;\n\t}","commit_id":"59ab1d5fe2f9d4348f51fd0babcbfcdd34b86ec9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String[] getLanguageKeys(Matcher matcher) {\n\t\tint groupCount = matcher.groupCount();\n\n\t\tif (groupCount == 1) {\n\t\t\tString languageKey = matcher.group(1);\n\n\t\t\tif (Validator.isNotNull(languageKey)) {\n\t\t\t\treturn new String[] {languageKey};\n\t\t\t}\n\t\t}\n\t\telse if (groupCount == 2) {\n\t\t\tString languageKey = matcher.group(2);\n\n\t\t\tlanguageKey = TextFormatter.format(languageKey, TextFormatter.K);\n\n\t\t\treturn new String[] {languageKey};\n\t\t}\n\n\t\tStringBundler sb = new StringBundler();\n\n\t\tString match = matcher.group();\n\n\t\tint count = 0;\n\n\t\tfor (int i = 0; i < match.length(); i++) {\n\t\t\tchar c = match.charAt(i);\n\n\t\t\tswitch (c) {\n\t\t\t\tcase CharPool.CLOSE_PARENTHESIS:\n\t\t\t\t\tif (count <= 1) {\n\t\t\t\t\t\treturn new String[0];\n\t\t\t\t\t}\n\n\t\t\t\t\tcount--;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CharPool.OPEN_PARENTHESIS:\n\t\t\t\t\tcount++;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CharPool.QUOTE:\n\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (i < match.length()) {\n\t\t\t\t\t\ti++;\n\n\t\t\t\t\t\tif (match.charAt(i) == CharPool.QUOTE) {\n\t\t\t\t\t\t\tString languageKey = sb.toString();\n\n\t\t\t\t\t\t\tif (match.startsWith(\"names\")) {\n\t\t\t\t\t\t\t\treturn StringUtil.split(languageKey);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\treturn new String[] {languageKey};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsb.append(match.charAt(i));\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new String[0];\n\t}","id":63997,"modified_method":"protected String[] getLanguageKeys(Matcher matcher) {\n\t\tint groupCount = matcher.groupCount();\n\n\t\tif (groupCount == 1) {\n\t\t\tString languageKey = matcher.group(1);\n\n\t\t\tif (Validator.isNotNull(languageKey)) {\n\t\t\t\treturn new String[] {languageKey};\n\t\t\t}\n\t\t}\n\t\telse if (groupCount == 2) {\n\t\t\tString languageKey = matcher.group(2);\n\n\t\t\tlanguageKey = TextFormatter.format(languageKey, TextFormatter.P);\n\n\t\t\treturn new String[] {languageKey};\n\t\t}\n\n\t\tStringBundler sb = new StringBundler();\n\n\t\tString match = matcher.group();\n\n\t\tint count = 0;\n\n\t\tfor (int i = 0; i < match.length(); i++) {\n\t\t\tchar c = match.charAt(i);\n\n\t\t\tswitch (c) {\n\t\t\t\tcase CharPool.CLOSE_PARENTHESIS:\n\t\t\t\t\tif (count <= 1) {\n\t\t\t\t\t\treturn new String[0];\n\t\t\t\t\t}\n\n\t\t\t\t\tcount--;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CharPool.OPEN_PARENTHESIS:\n\t\t\t\t\tcount++;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CharPool.QUOTE:\n\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (i < match.length()) {\n\t\t\t\t\t\ti++;\n\n\t\t\t\t\t\tif (match.charAt(i) == CharPool.QUOTE) {\n\t\t\t\t\t\t\tString languageKey = sb.toString();\n\n\t\t\t\t\t\t\tif (match.startsWith(\"names\")) {\n\t\t\t\t\t\t\t\treturn StringUtil.split(languageKey);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\treturn new String[] {languageKey};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsb.append(match.charAt(i));\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new String[0];\n\t}","commit_id":"e6fa8fb69da1f78143c15986eda927888f6cd227","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void setAttributes(HttpServletRequest request) {\n\t\tsuper.setAttributes(request);\n\n\t\tString label = getLabel();\n\n\t\tif (label == null) {\n\t\t\tlabel = TextFormatter.format(getName(), TextFormatter.K);\n\t\t}\n\n\t\tsetNamespacedAttribute(request, \"label\", label);\n\t}","id":63998,"modified_method":"@Override\n\tprotected void setAttributes(HttpServletRequest request) {\n\t\tsuper.setAttributes(request);\n\n\t\tString label = getLabel();\n\n\t\tif (label == null) {\n\t\t\tlabel = TextFormatter.format(getName(), TextFormatter.P);\n\t\t}\n\n\t\tsetNamespacedAttribute(request, \"label\", label);\n\t}","commit_id":"e6fa8fb69da1f78143c15986eda927888f6cd227","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void setAttributes(HttpServletRequest request) {\n\t\tsuper.setAttributes(request);\n\n\t\tObject bean = getBean();\n\n\t\tif (bean == null) {\n\t\t\tbean = pageContext.getAttribute(\"aui:model-context:bean\");\n\t\t}\n\n\t\tClass<?> model = getModel();\n\n\t\tif (model == null) {\n\t\t\tmodel = (Class<?>)pageContext.getAttribute(\n\t\t\t\t\"aui:model-context:model\");\n\t\t}\n\n\t\tString defaultLanguageId = getDefaultLanguageId();\n\n\t\tif (Validator.isNull(defaultLanguageId)) {\n\t\t\tdefaultLanguageId = (String)pageContext.getAttribute(\n\t\t\t\t\"aui:model-context:defaultLanguageId\");\n\t\t}\n\n\t\tif (Validator.isNull(defaultLanguageId)) {\n\t\t\tif ((model != null) &&\n\t\t\t\tModelHintsUtil.hasField(model.getName(), \"groupId\")) {\n\n\t\t\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t\t\tdefaultLanguageId = LocaleUtil.toLanguageId(\n\t\t\t\t\tthemeDisplay.getSiteDefaultLocale());\n\t\t\t}\n\t\t}\n\n\t\tif (Validator.isNull(defaultLanguageId)) {\n\t\t\tLocale defaultLocale = LocaleUtil.getDefault();\n\n\t\t\tdefaultLanguageId = LocaleUtil.toLanguageId(defaultLocale);\n\t\t}\n\n\t\tString name = getName();\n\n\t\tint pos = name.indexOf(StringPool.DOUBLE_DASH);\n\n\t\tif (pos != -1) {\n\t\t\tname = name.substring(pos + 2, name.length() - 2);\n\t\t}\n\n\t\tString field = getField();\n\n\t\tif (Validator.isNull(field)) {\n\t\t\tfield = getName();\n\t\t}\n\n\t\tString formName = getFormName();\n\n\t\tif (formName == null) {\n\t\t\tFormTag formTag = (FormTag)findAncestorWithClass(\n\t\t\t\tthis, FormTag.class);\n\n\t\t\tif (formTag != null) {\n\t\t\t\tformName = formTag.getName();\n\t\t\t}\n\t\t}\n\n\t\tString id = getId();\n\t\tString type = getType();\n\n\t\tif (Validator.isNull(id)) {\n\t\t\tString fieldParam = getFieldParam();\n\n\t\t\tif ((model != null) && Validator.isNull(type) &&\n\t\t\t\tValidator.isNotNull(fieldParam)) {\n\n\t\t\t\tid = fieldParam;\n\t\t\t}\n\t\t\telse if (!Validator.equals(type, \"assetTags\") &&\n\t\t\t\t\t !Validator.equals(type, \"radio\")) {\n\n\t\t\t\tid = name;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tid = StringUtil.randomId();\n\t\t\t}\n\t\t}\n\n\t\tString forLabel = id;\n\n\t\tif (Validator.equals(type,\"assetTags\")) {\n\t\t\tforLabel = forLabel.concat(\"assetTagNames\");\n\t\t}\n\t\telse if (Validator.equals(type, \"checkbox\")) {\n\t\t\tforLabel = forLabel.concat(\"Checkbox\");\n\t\t}\n\n\t\tString languageId = getLanguageId();\n\n\t\tif (Validator.isNotNull(languageId)) {\n\t\t\tforLabel = LocalizationUtil.getLocalizedName(forLabel, languageId);\n\t\t}\n\n\t\tString label = getLabel();\n\n\t\tif (label == null) {\n\t\t\tlabel = TextFormatter.format(name, TextFormatter.K);\n\t\t}\n\n\t\tString title = getTitle();\n\n\t\tif ((title == null) && (Validator.isNull(label) ||\n\t\t\t Validator.equals(type, \"image\"))) {\n\n\t\t\ttitle = TextFormatter.format(name, TextFormatter.K);\n\t\t}\n\n\t\t_inputName = getName();\n\n\t\tString baseType = null;\n\n\t\tif ((model != null) && Validator.isNull(type)) {\n\t\t\tbaseType = ModelHintsUtil.getType(model.getName(), field);\n\n\t\t\tString fieldParam = getFieldParam();\n\n\t\t\tif (Validator.isNotNull(fieldParam)) {\n\t\t\t\t_inputName = fieldParam;\n\t\t\t}\n\t\t}\n\t\telse if (Validator.isNotNull(type)) {\n\t\t\tif (Validator.equals(type, \"checkbox\") ||\n\t\t\t\tValidator.equals(type, \"radio\") ||\n\t\t\t\tValidator.equals(type, \"resource\")) {\n\n\t\t\t\tbaseType = type;\n\t\t\t}\n\t\t}\n\n\t\tif (Validator.isNull(baseType)) {\n\t\t\tbaseType = \"text\";\n\t\t}\n\n\t\tboolean wrappedField = false;\n\n\t\tFieldWrapperTag fieldWrapper = (FieldWrapperTag)findAncestorWithClass(\n\t\t\tthis, FieldWrapperTag.class);\n\n\t\tif (fieldWrapper != null) {\n\t\t\twrappedField = true;\n\t\t}\n\n\t\tsetNamespacedAttribute(request, \"baseType\", baseType);\n\t\tsetNamespacedAttribute(request, \"bean\", bean);\n\t\tsetNamespacedAttribute(request, \"defaultLanguageId\", defaultLanguageId);\n\t\tsetNamespacedAttribute(request, \"field\", field);\n\t\tsetNamespacedAttribute(request, \"forLabel\", forLabel);\n\t\tsetNamespacedAttribute(request, \"formName\", formName);\n\t\tsetNamespacedAttribute(request, \"id\", id);\n\t\tsetNamespacedAttribute(request, \"label\", label);\n\t\tsetNamespacedAttribute(request, \"model\", model);\n\t\tsetNamespacedAttribute(request, \"title\", String.valueOf(title));\n\t\tsetNamespacedAttribute(request, \"wrappedField\", wrappedField);\n\n\t\trequest.setAttribute(getAttributeNamespace() + \"value\", getValue());\n\n\t\tif ((_validators != null) && (_validators.get(\"required\") != null)) {\n\t\t\tsetNamespacedAttribute(\n\t\t\t\trequest, \"required\", Boolean.TRUE.toString());\n\t\t}\n\t}","id":63999,"modified_method":"@Override\n\tprotected void setAttributes(HttpServletRequest request) {\n\t\tsuper.setAttributes(request);\n\n\t\tObject bean = getBean();\n\n\t\tif (bean == null) {\n\t\t\tbean = pageContext.getAttribute(\"aui:model-context:bean\");\n\t\t}\n\n\t\tClass<?> model = getModel();\n\n\t\tif (model == null) {\n\t\t\tmodel = (Class<?>)pageContext.getAttribute(\n\t\t\t\t\"aui:model-context:model\");\n\t\t}\n\n\t\tString defaultLanguageId = getDefaultLanguageId();\n\n\t\tif (Validator.isNull(defaultLanguageId)) {\n\t\t\tdefaultLanguageId = (String)pageContext.getAttribute(\n\t\t\t\t\"aui:model-context:defaultLanguageId\");\n\t\t}\n\n\t\tif (Validator.isNull(defaultLanguageId)) {\n\t\t\tif ((model != null) &&\n\t\t\t\tModelHintsUtil.hasField(model.getName(), \"groupId\")) {\n\n\t\t\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t\t\tdefaultLanguageId = LocaleUtil.toLanguageId(\n\t\t\t\t\tthemeDisplay.getSiteDefaultLocale());\n\t\t\t}\n\t\t}\n\n\t\tif (Validator.isNull(defaultLanguageId)) {\n\t\t\tLocale defaultLocale = LocaleUtil.getDefault();\n\n\t\t\tdefaultLanguageId = LocaleUtil.toLanguageId(defaultLocale);\n\t\t}\n\n\t\tString name = getName();\n\n\t\tint pos = name.indexOf(StringPool.DOUBLE_DASH);\n\n\t\tif (pos != -1) {\n\t\t\tname = name.substring(pos + 2, name.length() - 2);\n\t\t}\n\n\t\tString field = getField();\n\n\t\tif (Validator.isNull(field)) {\n\t\t\tfield = getName();\n\t\t}\n\n\t\tString formName = getFormName();\n\n\t\tif (formName == null) {\n\t\t\tFormTag formTag = (FormTag)findAncestorWithClass(\n\t\t\t\tthis, FormTag.class);\n\n\t\t\tif (formTag != null) {\n\t\t\t\tformName = formTag.getName();\n\t\t\t}\n\t\t}\n\n\t\tString id = getId();\n\t\tString type = getType();\n\n\t\tif (Validator.isNull(id)) {\n\t\t\tString fieldParam = getFieldParam();\n\n\t\t\tif ((model != null) && Validator.isNull(type) &&\n\t\t\t\tValidator.isNotNull(fieldParam)) {\n\n\t\t\t\tid = fieldParam;\n\t\t\t}\n\t\t\telse if (!Validator.equals(type, \"assetTags\") &&\n\t\t\t\t\t !Validator.equals(type, \"radio\")) {\n\n\t\t\t\tid = name;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tid = StringUtil.randomId();\n\t\t\t}\n\t\t}\n\n\t\tString forLabel = id;\n\n\t\tif (Validator.equals(type,\"assetTags\")) {\n\t\t\tforLabel = forLabel.concat(\"assetTagNames\");\n\t\t}\n\t\telse if (Validator.equals(type, \"checkbox\")) {\n\t\t\tforLabel = forLabel.concat(\"Checkbox\");\n\t\t}\n\n\t\tString languageId = getLanguageId();\n\n\t\tif (Validator.isNotNull(languageId)) {\n\t\t\tforLabel = LocalizationUtil.getLocalizedName(forLabel, languageId);\n\t\t}\n\n\t\tString label = getLabel();\n\n\t\tif (label == null) {\n\t\t\tlabel = TextFormatter.format(name, TextFormatter.P);\n\t\t}\n\n\t\tString title = getTitle();\n\n\t\tif ((title == null) && (Validator.isNull(label) ||\n\t\t\t Validator.equals(type, \"image\"))) {\n\n\t\t\ttitle = TextFormatter.format(name, TextFormatter.P);\n\t\t}\n\n\t\t_inputName = getName();\n\n\t\tString baseType = null;\n\n\t\tif ((model != null) && Validator.isNull(type)) {\n\t\t\tbaseType = ModelHintsUtil.getType(model.getName(), field);\n\n\t\t\tString fieldParam = getFieldParam();\n\n\t\t\tif (Validator.isNotNull(fieldParam)) {\n\t\t\t\t_inputName = fieldParam;\n\t\t\t}\n\t\t}\n\t\telse if (Validator.isNotNull(type)) {\n\t\t\tif (Validator.equals(type, \"checkbox\") ||\n\t\t\t\tValidator.equals(type, \"radio\") ||\n\t\t\t\tValidator.equals(type, \"resource\")) {\n\n\t\t\t\tbaseType = type;\n\t\t\t}\n\t\t}\n\n\t\tif (Validator.isNull(baseType)) {\n\t\t\tbaseType = \"text\";\n\t\t}\n\n\t\tboolean wrappedField = false;\n\n\t\tFieldWrapperTag fieldWrapper = (FieldWrapperTag)findAncestorWithClass(\n\t\t\tthis, FieldWrapperTag.class);\n\n\t\tif (fieldWrapper != null) {\n\t\t\twrappedField = true;\n\t\t}\n\n\t\tsetNamespacedAttribute(request, \"baseType\", baseType);\n\t\tsetNamespacedAttribute(request, \"bean\", bean);\n\t\tsetNamespacedAttribute(request, \"defaultLanguageId\", defaultLanguageId);\n\t\tsetNamespacedAttribute(request, \"field\", field);\n\t\tsetNamespacedAttribute(request, \"forLabel\", forLabel);\n\t\tsetNamespacedAttribute(request, \"formName\", formName);\n\t\tsetNamespacedAttribute(request, \"id\", id);\n\t\tsetNamespacedAttribute(request, \"label\", label);\n\t\tsetNamespacedAttribute(request, \"model\", model);\n\t\tsetNamespacedAttribute(request, \"title\", String.valueOf(title));\n\t\tsetNamespacedAttribute(request, \"wrappedField\", wrappedField);\n\n\t\trequest.setAttribute(getAttributeNamespace() + \"value\", getValue());\n\n\t\tif ((_validators != null) && (_validators.get(\"required\") != null)) {\n\t\t\tsetNamespacedAttribute(\n\t\t\t\trequest, \"required\", Boolean.TRUE.toString());\n\t\t}\n\t}","commit_id":"e6fa8fb69da1f78143c15986eda927888f6cd227","url":"https://github.com/liferay/liferay-portal"}]